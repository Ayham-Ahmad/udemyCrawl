{
  "courses": [
    {
      "title": "Amazon Alexa Development: From Beginner to Intermediate",
      "url": "https://www.udemy.com/course/amazon-alexa-development-from-beginner-to-intermediate/",
      "bio": "Learn how to create and publish Alexa Skills, understand voice UI, and be comfortable with AWS and Alexa Skills Kit",
      "objectives": [
        "Ability to create multiple Alexa Skills related to Twitter, Wikipedia, Fitness Routines, Calculator, Sending Texts",
        "Understand the basics of VUI design - Creating this skill will help you understand the basics of creating a working Voice User Interface (VUI)",
        "You will learn by doing, and end up with a published Alexa skill",
        "You will understand how to use AWS Lambda and Alexa Skills Kit"
      ],
      "course_content": {
        "Starting up with Alexa": [
          "Welcome to Alexa Skill Building",
          "Alexa Demos",
          "Learning about Alexa Concepts",
          "Practice Questions: Command Statements",
          "This course does not cover Node.js"
        ],
        "Getting your Developer Environment Ready": [
          "Setting up your AWS account",
          "Setting up your Amazon Developer Account",
          "Integrating AWS Lambda with Developer Services"
        ],
        "First Alexa Skill - Hello World": [
          "Hello World Introduction + Sample Files",
          "Setting up your Amazon Web Services and Developer Accounts",
          "Importing the \"Hello World\" Lambda Function",
          "Explaining the \"Hello World\" Lambda Function",
          "Creating the Intent Schema and Utterances",
          "Testing \"Hello World\"",
          "Configure Your Physical Alexa Device with your Developer Account",
          "Test Skill on Amazon Echo Dot",
          "Challenge 1: \"Welcome to Jurassic Park\"",
          "Challenge 1: Answer"
        ],
        "Second Alexa Skill - Creating a Silicon Valley Fact Skill": [
          "Intro to Silicon Valley Facts",
          "Designing Skills with a Purpose",
          "Designing Skills with a Script",
          "Create a Flow",
          "Design Skill Checklist",
          "Setup our Second Chatbot in Lambda and Amazon Developer Services",
          "Creating our Lambda Function Part 1",
          "Creating our Lambda Function Part 2",
          "Creating our interaction model, configuring our skill, and testing our function",
          "Extra Tutorial: How to Add Slots",
          "Tutorial: How to make a web call",
          "Tutorial: How to make a web call Part 2"
        ],
        "Third Skill - Create a simple arthimetic calculator": [
          "Introduction to Calculator Skill",
          "Initial Setup with Calculator",
          "Third Chatbot - Creating our Lambda Function Part 2",
          "Third Chatbot - Creating our intent schema and utterances",
          "Third Chatbot - Testing our Skill",
          "Third Chatbot - Testing our Skill part 2"
        ],
        "Third Alexa Skill - Sending Text Messages with Twilio and Alexa": [
          "Introduction + Sample Files",
          "Setting Up your Twilio Account",
          "Setting up the \"Text Message\" Lambda Function",
          "Explaining the \"Text Message\" Lambda Function",
          "Setting up the Amazon Developer Skill",
          "Creating the Intent Schema, Slots, and Utterances",
          "Testing Text Messaging with Twilio",
          "Text Message Challenge",
          "Text Message Challenge Answer"
        ],
        "Fourth Alexa Skill - Wiki Buff": [
          "Introducing Wiki Buff + Sample File",
          "Setting up the Lambda Function",
          "Setting up the Amazon Developer Skill",
          "Creating Intent Schema and Utterances",
          "Testing Wiki Buff"
        ],
        "Fifth Alexa Skill - Twitter Trends": [
          "Introduction to Twitter Trends + Sample File",
          "Setting up the \"Twitter Trends\" Lambda Function",
          "Setting up the Twitter Credentials",
          "Setting up the Amazon Developer Skill",
          "Creating the Intent Schema and Utterances",
          "Testing Twitter Trends"
        ],
        "Seventh Alexa Skill - Workout": [
          "Introduction to Fitness Ten + Sample File",
          "Setting up the \"Fitness Ten\" Lambda Function",
          "Setting up the Amazon Developer Skill",
          "Creating Intents, Slots, Utterances",
          "Testing \"Fitness Ten\"",
          "Publishing the \"Fitness Ten\" Skill",
          "Fitness 10 Challenge",
          "Final Project for the Course",
          "Thank-you!"
        ]
      },
      "requirements": [
        "Preliminary or zero understanding of java-script.",
        "You will need either a Mac or PC.",
        "You will need an Amazon Echo or use the site Echosim.io for Alexa Testing"
      ],
      "description": "Update: Join over 8,200 students in the Techustler Course Series. You don’t want to miss this learning opportunity.\nHave you ever wondered how Alexa Apps are made?\nWhy is Amazon and Google investing in voice technology?\nA better question is why haven't you built an Alexa App yet.\nIf you ever wanted to understand the space of Voice Apps or build them yourself, then take my course \"Amazon Alexa Development: From Beginner to Intermediate\". I designed it in a practical way so that when you finish the content you can immediately put it into use with your Amazon Echo or online counterpart.\nNow, why should you build Alexa Skills?\nThe biggest industries in technology are surrounded by AI, Bots, and Voice technology. Voice technology I believe will be the new 21st user interface that will not only understand basic commands, but will be so smart to understand anything you tell it. This is why Amazon is making a big bet with Alexa which it plans to generate close to $11 billion dollars by 2020. They know something about Amazon Echo which is why now is the best time to learn these skills before the mainstream starts developing applications. We all know the story about apps for the smartphones, this is the same thing.\nThis course contains over 50 lectures and 1.5 hrs of content. It's designed for beginners to play with new platforms in the voice space. You’ll learn the tools needed to build the Alexa Skills, how Alexa Skills work, and publish a skill to Amazon's Alexa store.\nCourse Structure\nThe course follows a familiar structure where in each video I will teach the concepts followed by a challenge or practice question. If your goal is to become a better developer, you should understand node.js, server side development and how to access certain APIs to build better Alexa Skills. The course does not go deep into understanding Node.js but you will understand the architecture and ability to publish apps for Alexa.\nEnvironment Setup\nThis course aims to simulate a live in-person course as much as possible. After you finish each lecture, you should practice and try the solution on your own. You learn the best by practicing and doing.\nProjects\nAt the end of each section, you will be asked to complete the Alexa skill which you can then share with your network or on the Udemy network.\nTestimonials from other Techustler Courses and the Instructor\n“Great set of videos Nick! I really liked the format of the videos with you in the corner of the screen showing us how to use the website. Cool songs you use at the beginning of each video. It really gives off the vibe that your course is hip and up-to-date with modern times. You do a great job of keeping of with the times. Stay modern, but classy at the same time Nick!” - Penelope\n“Nicholas, very good course on bots! I especially enjoyed that you provided us the opportunity to build bots in a hands-on fashion. Your course sections are very organized and I didn't have to guess to know what I was getting myself into. It is clear you are very knowledgeable as an instructor and have a real connection to your course material. I look forward to taking another course with you!” - Rahul\n\"I love the natural progression in this course. You start with the basics and end with building a Facebook Chat Bot. Awesome! Thanks Nick!\" - Doug\n\"Thank you so much Nicholas! The bot course was very informative and helpful for my learning. Keep up the good work!\" - Christine\n\"It was a highly positive experience working alongside Nick at DigaBlue and with the work ethic he has, I am certain that he will produce great results in his future endeavors.\" - Saif\n\"Nick is an aspiring tech entrepreneur with what I would consider a strong passion and desire to learn more and excel in the evolving digital age. He is an experienced programmer with a track record of creating both his own website and various mechanical devices.\" - Elliot\n\"This is a really good intro course to building simple but useful bots. Nick breaks each lesson up thoughtfully and into parts that are easy to follow and implement straight away. With modern api's to make bots from simple to highly sophisticated, this course it great for learning all the moving parts. I feel more confident in designing, building and marketing a bot myself now!\" - Jason\nWhat is the target audience?\nThis course is designed for people with little or no experience in javascript which is needed to make Alexa skills. By the end of the course, you’ll have valuable skills that will help you be creative and resourceful in your pursuit of building products (hopefully in the voice space :)\nNext Steps\nNow it's time to become a Techustler and join me in registering for the course. I can’t wait to have you on board!",
      "target_audience": [
        "First-time Alexa skills developers wanting to learn required steps involved in creating an Alexa skill"
      ]
    },
    {
      "title": "Learn Flask, A web Development Framework of Python",
      "url": "https://www.udemy.com/course/learn-flask-a-web-development-framework-of-python/",
      "bio": "Advanced Website Development using Flask",
      "objectives": [
        "Students will learn to build websites in the python framework, Flask."
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction to the Course"
        ],
        "Introduction to Flask": [
          "Forewords about Flask",
          "Introduction to Flask"
        ],
        "Some Important Information": [
          "Web Development Frameworks in Python",
          "Genie vs Flask",
          "Flask Dependencies",
          "Optional Dependencies"
        ],
        "Our First Flask Application": [
          "Creating Project and its Environment",
          "Hello World Application"
        ],
        "Starting with Flask": [
          "Debug Mode",
          "Routing",
          "Variable Rules",
          "URL Bindings",
          "HTTP Methods",
          "Render Templates",
          "Static Files",
          "Accessing Request Data",
          "The Request Object",
          "Sending Form Data to Template"
        ],
        "Cookies and Sessions": [
          "Cookies",
          "Sessions",
          "Redirects and Errors",
          "Message Flashing in Flask",
          "Upload Files"
        ],
        "Flask Extensions": [
          "Introduction",
          "Flask Mail",
          "WTForms - I",
          "WTForms - II",
          "Connecting SQlite",
          "Introduction to SqlAlchemy",
          "Connecting SqlAlchemy",
          "Web App using SqlAlchemy - I",
          "Web App using SqlAlchemy - II"
        ],
        "Python Crash Course": [
          "Python Crash Course (Part - 1)",
          "Python Crash Course (Part - 2)"
        ]
      },
      "requirements": [
        "Basics of Python"
      ],
      "description": "In this course you will be able to learn about a very important website development framework of python that is Flask. Flask is a website development framework that is in very much fashion these days. In this course you will be able to learn all about website development using Flask. It covers all the levels of flask website development. If you are a beginner you can enroll in this course as this course starts on with the very basic concepts of Flask website development and slowly move towards the very advanced topics of flask website development. A crash course has also been uploaded at the end of this course so that those students who have no knowledge of python which is a pre requisite to this course can go and learn the basics of python from that crash course. So everything is right here in this course. You do not have to go any where. I hope you will enjoy this course and learn a lot from it and I assure you that at the end of this course you will be on your way to create websites using flask. If you have any queries during the course you are more than welcome to ask and I will be more than happy to answer your questions.",
      "target_audience": [
        "Anyone who wishes to learn Flask and start on with web development using python"
      ]
    },
    {
      "title": "Projects in HTML5",
      "url": "https://www.udemy.com/course/projects-in-html5/",
      "bio": "Learn HTML5 and JavaScript by Building 10 Projects",
      "objectives": [
        "Learn HTML5 and Javascript building projects",
        "Develop over 10 applications",
        "Master different APIs introduced in HTML5",
        "Be a web front end expert"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Course Introduction"
        ],
        "Getting Started with HTML5": [
          "HTML5 Feature Overview",
          "HTML5 Boiler Plate",
          "CSS Styling Part - A",
          "CSS Styling Part - B",
          "JavaScript Basics Part - A",
          "JavaScript Basics Part - B"
        ],
        "Blog Frontend": [
          "HTML5 Page Structure Part - A",
          "HTML5 Page Structure Part - B",
          "Styling with CSS3 Part - A",
          "Styling with CSS3 Part - B",
          "Add Pages and Forms Part - A",
          "Add Pages and Forms Part - B",
          "Responsive Layout"
        ],
        "Animated Image Gallery": [
          "Gallery HTML",
          "Gallery CSS",
          "Quicksand Animation Part - A",
          "Quicksand Animation Part - B",
          "Fancybox Lightbox"
        ],
        "Snake Game": [
          "HTML5 Canvas Part - A",
          "HTML5 Canvas Part - B",
          "Animation and Circles",
          "Snake Game UI - HTML",
          "Snake Game UI - CSS",
          "Snake Game Scripting - Part A",
          "Snake Game Scripting - Part B",
          "Snake Game Scripting - Part C",
          "Snake Game Scripting - Part D"
        ],
        "Stickys": [
          "Stickys UI Part - A",
          "Stickys UI Part - B",
          "Create Note Object Part - A",
          "Create Note Object Part - B",
          "Drag and Drop Functions Part - A",
          "Drag and Drop Functions Part - B",
          "Saving Notes and Debugging Part - A",
          "Saving Notes and Debugging Part - B"
        ],
        "D&D Image Uploader": [
          "Image Uploader UI - HTML",
          "Image Uploader UI - CSS",
          "JQuery File Drop Part - A",
          "JQuery File Drop Part - B",
          "PHP upload file Part - A",
          "PHP upload file Part - B"
        ],
        "Quiz Application": [
          "Quiz UI - HTML Part - A",
          "Quiz UI - HTML Part - B",
          "Quiz UI - CSS",
          "DOM Manipulation",
          "Process Questions",
          "Optimizing our Code Part - A",
          "Optimizing our Code Part - B"
        ],
        "HTML5 Audio Player": [
          "Audio player UI - HTML Part - A",
          "Audio player UI - HTML Part - B",
          "Audio player UI - CSS Part - A",
          "Audio player UI - CSS Part - B",
          "Play Pause and Stop",
          "Volume and Duration",
          "Playlist Functionality Part - A",
          "Playlist Functionality Part - B"
        ],
        "Mobile To Do App": [
          "JQuery Mobile - Part A",
          "JQuery Mobile - Part B",
          "JQuery Mobile - Part C",
          "Adding ToDos",
          "Displaying ToDos",
          "Creating and Deleting ToDos Part - A",
          "Creating and Deleting ToDos Part - B",
          "Updating ToDos"
        ]
      },
      "requirements": [
        "Student must have knowledge of HTML and JavaScript"
      ],
      "description": "In order to master a technique in web development or any artistic field, the best approach is one that's hands-on. This allows you to not only learn concepts, but also apply them right away to build your own projects from scratch. That's why this course guides you through the process of actually creating a variety of games, apps, and sites using HTML5 and JavaScript.\nMaster HTML5 and JavaScript, starting with the creation of 10 apps and games.\nHTML5 and JavaScript, Including Semantic Markup and Boilerplate Framework\nCSS3 Media Queries and Responsive Design\nJQuery, Fancybox, APIs, and More\n10 Hands-On Projects, Including Games and Apps\nUse HTML5 and JavaScript to Create a Variety of Projects\nNot all sites and apps use HTML5 yet, but the ones that do are advanced and cutting edge, and this is the way of the future in web design and app development. Using HTML5, CSS3, JavaScript, and other tools, you can become a more effective web developer and front-end expert, developing unique apps and games, as well as responsive websites. With the right skills in place, you'll be able to expand your portfolio and your client base.\nContents and Overview\nThis course contains over 75 lectures and 15.5 hours of content during which you'll develop 10 projects using HTML5, JavaScript, and other tools. You should already have knowledge of JavaScript and HTML before taking this course.\nYou'll build a basic HTML5 site before developing the front-end for a blog using tags and forms, CSS3, and responsive design. You'll also create an animated image gallery, a sticky note app, and a snake game. You'll master the Drag and Drop Image Uploader, and also create an HTML5 quiz app, audio player, mobile to-do list, customer manager app, and location app.\nBy the end of this course, you'll have completed 10 creative and exciting projects that have tested your skills and given you the confidence to become a front-end expert and programmer. This will allow you to potentially expand your client base and update your resume to advance your career in the field of web development.\nLifetime access to the lectures means you'll be able to return to the information whenever necessary to refresh your memory and tackle future projects.",
      "target_audience": [
        "Web developers with basic knowledge of HTML5",
        "Programmers who want to build front end projects"
      ]
    },
    {
      "title": "Modern JavaScript The Complete Course - Build +15 Projects",
      "url": "https://www.udemy.com/course/modern-javascript-the-complete-course-build-10-projects/",
      "bio": "Learn JavaScript the most popular language for Web Development - Includes ES6, React & NodeJS & +15 Complete Projects!",
      "objectives": [
        "Learn the latest JavaScript features such as Async JS, Fetch API, Async Await & more",
        "You're going to learn how to consume REST API's with JavaScript",
        "How to create JavaScript classes and OOP",
        "You're going to learn more advanced topics such as Generators, Iterators, Maps, Sets, Promises & more",
        "OOP JavaScript with Object Constructors, Classes & Prototypes",
        "Asynchronous JavaScript with Callbacks, Promises & Async Await",
        "Add Interaction to your websites"
      ],
      "course_content": {
        "Introduction": [
          "Overview of the Projects",
          "Course Structure",
          "JavaScript Ecosystem",
          "The Development Environment & Tools needed to complete this course",
          "Your first JavaScript program",
          "The Code Snippets in This Course"
        ],
        "The Google Chrome Console": [
          "Google Chrome Console"
        ],
        "JavaScript Fundamentals": [
          "Variables with var",
          "Variables with let",
          "Variables with const",
          "Data Types in JavaScript",
          "Strings in JavaScript",
          "String Methods Part 1",
          "String Methods Part 2",
          "Numbers and the Methods available for Number part 1",
          "Numbers and the Methods available for Number part 2",
          "Comparison Operators",
          "Converting Strings into Numbers Part 1",
          "Converting Strings into Numbers Part 2",
          "Converting Numbers into Strings",
          "Template Strings in JavaScript",
          "Arrays and How to create Arrays in JavaScript",
          "Useful Methods when working with Arrays",
          "Remove Elements from an Array",
          "Sorting Arrays and Other Methods",
          "JavaScript Objects",
          "Const Variables with Arrays & Objects",
          "JavaScript Functions - Function Declaration",
          "JavaScript Functions - Function Expression Part 1",
          "JavaScript Functions - Function Expression with Property methods",
          "Dates in JavaScript",
          "Comparison - If, else if & else part 1",
          "Comparison - If, else if & else part 2",
          "Comparison - If, else if & else part 3",
          "One last example with the if operator",
          "The Switch Statement",
          "For Loops in JavaScript",
          "For Loops in JavaScript: Looping an Array",
          "While & Do While Loops",
          "for, forEach & Maps",
          "Looping Objects in JavaScript",
          "Try - Catch - Finally in JavaScript",
          "The WIndow Object - Part 1",
          "The WIndow Object - Part 2",
          "Variable Scope"
        ],
        "DOM Scripting": [
          "What's the DOM?",
          "The document keyword - Part 1",
          "The document keyword - Part 2",
          "JavaScript functions to select one element - Part 1",
          "JavaScript functions to select one element - Part 2",
          "JavaScript functions to Select Multiple Elements - Part 1",
          "JavaScript functions to Select Multiple Elements - Part 2",
          "Traversing the DOM - From Parent to Children - Part 1",
          "Traversing the DOM - From Parent to Children - Part 2",
          "Traversing the DOM - From Children to Parent & Siblings- Part 1",
          "Traversing the DOM - From Children to Parent & Siblings - Part 2",
          "Creating HTML Elements with JavaScript",
          "Replace Elements with JavaScript",
          "Remove Elements with JavaScript",
          "Classes, Id's and other attributes - Part 1",
          "Classes, Id's and other attributes - Part 2"
        ],
        "Event Listeners in JavaScript": [
          "Introduction to Event Listeners",
          "Passing Event as parameter and the target",
          "Mouse Events - Part 1",
          "Mouse Events - Part 2",
          "Input & Form Events - Part 1",
          "Input & Form Events - Part 2",
          "What's the Event Bubbling",
          "Delegation"
        ],
        "LocalStorage": [
          "Add items into local storage",
          "Add Multiple Items into local storage"
        ],
        "PROJECT: Save into local storage from HTML Form": [
          "Preview of the final project",
          "First Steps with the Project",
          "Adding new elements into the DOM",
          "Removing elements from the DOM",
          "Adding Elements into Local Storage",
          "Printing Elements from Storage on Load",
          "Removing Elements from the Storage - Part 1",
          "Removing Elements from the Storage - Part 2"
        ],
        "PROJECT: Adding Courses into the Shopping Cart": [
          "Preview of the final project",
          "First Steps with the Project",
          "Adding Courses into the Shopping Cart - Part 1",
          "Adding Courses into the Shopping Cart - Part 2",
          "Removing Courses from the cart and clear the cart",
          "Saving Courses Into Storage",
          "Print from Storage on Load",
          "Clearing from Storage",
          "Remove from Storage"
        ],
        "PROJECT: Simulate Email Sending with Form": [
          "Preview of the final project",
          "Kicking off the Project",
          "Validating Fields - Part 1",
          "Validating Fields - Part 2",
          "Allowing the user to send the email if all the fields are filled",
          "Displaying a Gif when email is sent",
          "Displaying a Second Gif when Email is sent and restart form"
        ],
        "More About Objects with JavaScript": [
          "Object Literals",
          "Object Constructor",
          "Constructors for Data Types - Part 1",
          "Constructors for Data Types - Part 2",
          "Prototypes - Part 1",
          "Prototypes - Part 2",
          "Inheriting Constructors & Prototypes",
          "The Object Create Method",
          "Creating a Class",
          "Inheriting a Class and it's methods"
        ]
      },
      "requirements": [
        "A Text Editor, i'm using Visual Studio Code",
        "A Browser, i recommend Google Chrome",
        "Internet, videos can be watched only with internet or via Udemy App",
        "If you know HTML, CSS and you want to start creating Interactive Website, JavaScript is the way to go, and you're in the right course"
      ],
      "description": "Learn Modern JavaScript & ECMAScript with this Course!\nJavaScript Versions included in this Course: ES6, ES7, ES8 === 'Modern JavaScript';\nJust Added a ReactJS Introduction By Building a Project and a NodeJS Introduction with Pug, Sequelize, Express & Bootstrap\nThe most complete JavaScript course on Udemy, learn by building Projects!\nIn this course you're going to learn JavaScript, from the fundamentals to Intermediate and Advanced Topics such as Prototypes, Delegation, Classes, Ajax, Promises, Generators, OOP, Fetch API, Async Await, Async JS, Objects, how to consume REST API's and more!\nBefore we Jump into the projects, i'm going to explain the Fundamentals of JavaScript, so if you don't have any previous experience, you're in the right course!\nif you are unfamiliar with this topics, you're in the right course because you're going to learn all of this and BUILD AMAZING PROJECTS\nThe best way to learn something new in programming is by building projects, in this course we're going to build several projects from  beginner to advanced level.\n\nIncluded projects in this course:\nSave from Form into Local Storage\nSimulate Email Sending App\nGenerate Names from a REST API\nCryptocurrencies rate from a REST API (more than 100 cryptocurrencies included)\nEvents in your city with EventBrite and REST API\nShopping Cart with Local Storage\nCar Insurance Live Quotation\nMy Weekly Budget APP\nPet Appointment Manager with IndexedDB\nSearch Lyrics Online\nPerfectCocktail - A Drink Recipes APP\nMore Projects are added every month, have an idea? send me a message!\nHERE'S A LIST AND DESCRIPTION OF THE PROJECTS!\nPROJECT: Save into local storage from HTML Form\nIn this project you will learn how to read the values from a HTML Form  and Inputs, then the data is going to be saved into LocalStorage so even if you close the tab or reload the window the info is going to be there thanks to this amazing JavaScript feature.\nPROJECT: Adding Courses into the Shopping Cart\nThis project will help you a lot to understand DOM Scripting and how to traverse in all the HTML of your website.\nDOM Scripting is one of the most important topics when learning JavaScript, this project will help you a lot!\nPROJECT: Simulate Email Sending with Form\nAnother really nice project, in this one i'm gonna show you how to validate a form, so every value should be filled before we simulate the sending of an email\nAlso we will show some nice graphics when the email is sent, this project is very similar to a project that any company will ask you to develop when you try to get a JavaScript job!\nPROJECT: Car Insurance Quotation from a FORM\nIn this project you will learn how to do some math operations in JavaScript with a real world project!\nAlso, you will learn how to read different values from a Form, validate the form, do some operations and finally print the results\nAnother really nice project to continue learning JavaScript!\nPROJECT: Weekly Budget APP\nThis is one of my favorite projects, you will enter a Budget for the week, and then you start adding expenses, once you pass 50% of the budget, the remaining budget will change the color to yellow, and once you reach the final 25% of the budget the content will change to Red.\nPROJECT: Name Generator with AJAX & Rest API (Fetch API Included)\nAJAX is a legacy technology, but as a JavaScript developer is something that you should learn\nAnd learning what's and how to use a REST API is also another really important topic, REST API is how you get data from other servers or websites, something that any JavaScript developer must know\nAs i said before, Ajax is a legacy technology, the new one is Fetch, so i'm gonna show you how switch from AJAX to Fetch API in the upcoming chapters.\nPROJECT: Cryptocurrencies Rates\nThis is also one of my favorite projects\nWe will use a REST API that displays more than 100 different Cryptocurrencies and we will display the latest rate\nThis is going to be another project that you can add into your JavaScript portfolio!\nPROJECT: Display Events with the EventBrite API\nFor this chapter we will use the EventBrite API to display and fetch events in our website\nInstead of adding the events manually to your site, you can consume this EventBrite API to display events in your site using JavaScript\nPROJECT: PerfectCocktail - A Drinks Recipes APP\nThis is the most complete project in the course, we will consume a REST API with several different Endpoints\nAlso we will save the favorite recipes into Local Storage, one of the most advanced projects in the whole JavaScript Code\nPROJECT: Lyrics Search Engine with Modules\nIn this project we will use the new JavaScript Modules that was added in the latest versions, also we will query a REST API!\nIndexedDB - Building a Complete Project (Appointment Management)\nIn JavaScript you can also create a  database, in this project im gonna show you how to create, read, save the records in the IndexedDB database !\n\n\nBONUS!\nWhat's webpack and how to create a webpack project  - 25 videos about webpack just added into the course, you will learn what's a bundle, how to install dependencies, integrate webpack with other tools such as NPM or Babel\n\n\n\n\nAll this projects are developed using different techniques: classes, prototypes, fetch api, ajax, async await, arrow functions, promises & more!\nTHE VIDEOS WITH THE MAIN PROJECTS ARE ENABLED TO WATCH FOR FREE!",
      "target_audience": [
        "If you want to Learn JavaScript without Frameworks",
        "If you want to learn the latest ES6, ES7 & ES8 features this is the course for you",
        "If you're the kind of person who learn best by building projects this course is for you",
        "If you're new to programming there's a whole FUNDAMENTALS Chapter, also if you're new to JavaScript"
      ]
    },
    {
      "title": "XML and XSD: a complete W3C-content based course (+10 hours)",
      "url": "https://www.udemy.com/course/xml-and-xsd-a-complete-w3c-content-based-course/",
      "bio": "The complete XML/XSD content from W3Schools, with much better explanations and practical examples with Eclipse IDE",
      "objectives": [
        "You will learn all the theory about how to use XML language correctly, as well as all about its general and specific syntaxes, according to the World Wide Web Consortium (W3C) official recommendations.",
        "You will learn all the practice about how to code your XML files, using the elements, attributes and types - default and custom ones - from the referred XSD schemas, as well as how to test the correctness and validation of your XML instances against their referred XSD docs using Eclipse IDE automation.",
        "You will adventure into the complete theory background about how to create your own XSD schema documents and master the details about XSD general and specific syntaxes, according to W3C official specifications.",
        "You will practice, through tens of examples, how to code your own XSD files, using the 3 design methods suggested by W3C, as well as how to take advantage of all main base elements, attributes and types (default W3C library/namespace) to create your own personalized XML/XSD components.",
        "You will have pretty clear what default and custom namespaces are, as well as prefixes, both at the XML instances as at the XSD documents. You'll learn how to import and include multiple XSD documents into one same XSD and also how to refer to multiple XSD documents from one same XML instance, nice and easy... even using your own personal brand as the prefix for customizing your code (in my case: danielpm1982).",
        "All this course's theory, as well as the good practices and techniques used, are based on the World Wide Web Consortium (W3C) and W3Schools contents, here with much better and complete explanations and practical examples.",
        "After doing this course, you'll understand much easier all the document types used at Web Services development, or any other application that uses XML and XSD (or WSDL).",
        "All source codes are available at my GitHub, as well as attached to each practice lecture, as a zip file. You can easily download, study, reuse and test them yourself, for learning purposes, and even create much better examples. This is how you learn: starting from the basics and evolving, through practicing, until proficiency. All at your own pace and time and re-watching any lecture as many times as you want.",
        "Additional content, as WSDL and JSON theory and practical lectures, as well as lectures with sample Web Services projects, demonstrating the real world applicability of XML, XSD, WSDL and JSON, will be added incrementally within the next months, at this same course. But you can finish this course with the current content, as it is, and receive your Udemy Certification on that… and if you want, you may return later, watch the future extra content lectures (WSDL and JSON) and, at the end, receive another Udemy Certification with the updated content and course name. All students will be notified when any future content is added.",
        "This course is already composed of more than 10 hours, a workload greater than almost all other same-topic courses at Udemy."
      ],
      "course_content": {
        "Introduction": [
          "WELCOME ALL !!!"
        ],
        "XML": [
          "XML Theory",
          "XML Practice I",
          "XML Practice II"
        ],
        "XSD": [
          "XSD Theory I",
          "XSD Theory II",
          "XSD Theory III",
          "XSD Practice I",
          "XSD Practice II",
          "XSD Practice III"
        ],
        "Goodbyes ... but not for long ...": [
          "CONGRATULATIONS !!!",
          "Now what ?"
        ]
      },
      "requirements": [
        "If you wanna practice, you should have Eclipse IDE installed on your PC or notebook. But you can just watch the theory and practical lectures, at any device with internet access, in case you have no computer available at that moment.",
        "No programming languages or frameworks are required for this course.",
        "No silly or useless tests will be imposed onto you. You will know you got the content right when you implement your own code and test it successfully, as done at our practical lectures. Simple as that and with no pressure!"
      ],
      "description": "XML and XSD: a complete W3C-content based course (+10 hours)\nThe complete XML/XSD content from W3Schools, with much better explanations and practical examples w/ Eclipse IDE - 2019\n\n\"XML (Extensible Markup Language) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. The World Wide Web Consortium's XML 1.0 Specification of 1998 and several other related specifications - all of them free open standards - define XML. The design goals of XML emphasize simplicity, generality, and usability across the Internet. It is a textual data format with strong support via Unicode for different human languages. Although the design of XML focuses on documents, the language is widely used for the representation of arbitrary data structures such as those used in web services. Several schema systems exist to aid in the definition of XML-based languages, while programmers have developed many application programming interfaces (APIs) to aid the processing of XML data.\"\n\n\"XSD (XML Schema Definition), a recommendation of the World Wide Web Consortium (W3C), specifies how to formally describe the elements in an Extensible Markup Language (XML) document. It can be used by programmers to verify each piece of item content in a document. They can check if it adheres to the description of the element it is placed in. Like all XML schema languages, XSD can be used to express a set of rules to which an XML document must conform in order to be considered \"valid\" according to that schema. However, unlike most other schema languages, XSD was also designed with the intent that determination of a document's validity would produce a collection of information adhering to specific data types. Such a post-validation infoset can be useful in the development of XML document processing software.\"\n\nWhat you'll learn from this course:\n\n- You will learn all the theory about how to use XML language correctly, as well as all about its general and specific syntaxes, according to the World Wide Web Consortium (W3C) official recommendations.\n- You will learn all the practice about how to code your XML files, using the elements, attributes and types - default and custom ones - from the referred XSD schemas, as well as how to test the correctness and validation of your XML instances against their referred XSD docs using Eclipse IDE automation.\n- You will adventure into the complete theory background about how to create your own XSD schema documents and master the details about XSD general and specific syntaxes, according to W3C official specifications.\n- You will practice, through tens of examples, how to code your own XSD files, using the 3 design methods suggested by W3C, as well as how to take advantage of all main base elements, attributes and types (default W3C library/namespace) to create your own personalized XML/XSD components.\n- You will have pretty clear what default and custom namespaces are, as well as prefixes, both at the XML instances as at the XSD documents. You'll learn how to import and include multiple XSD documents into one same XSD and also how to refer to multiple XSD documents from one same XML instance, nice and easy... even using your own personal brand as the prefix for customizing your code (in my case: danielpm1982).\n- All this course's theory, as well as the good practices and techniques used, are based on the World Wide Web Consortium (W3C) and W3Schools contents, here with much better and complete explanations and practical examples.\n- After doing this course, you'll understand much easier all the document types used at Web Services development, or any other application that uses XML and XSD (or WSDL).\n- All source codes are available at my GitHub, as well as attached to each practice lecture, as a zip file. You can easily download, study, reuse and test them yourself, for learning purposes, and even create much better examples. This is how you learn: starting from the basics and evolving, through practicing, until proficiency. All at your own pace and time and re-watching any lecture as many times as you want.\n- Additional content, as WSDL and JSON theory and practical lectures, as well as lectures with sample Web Services projects, demonstrating the real world applicability of XML, XSD, WSDL and JSON, will be added incrementally within the next months, at this same course. But you can finish this course with the current content, as it is, and receive your Udemy Certification on that… and if you want, you may return later, watch the future extra content lectures (WSDL and JSON) and, at the end, receive another Udemy Certification with the updated content and course name. All students will be notified when any future content is added.\n- This course is already composed of more than 10 hours, a workload greater than almost all other same-topic courses at Udemy.\n\nPrerequisites:\n\n- If you wanna practice, you should have Eclipse IDE installed on your PC or notebook. But you can just watch the theory and practical lectures, at any device with internet access, in case you have no computer available at that moment.\n- No programming languages or frameworks are required for this course.\n- No silly or useless tests will be imposed onto you. You will know you got the content right when you implement your own code and test it successfully, as done at our practical lectures. Simple as that and with no pressure!\n\nWhom this course is for ?\n\n- Any human being who wishes to learn XML and XSD for future use in any of their many market applications, specially at, but not limited to, Web Services development.\n\nWhat are the references of this course ?\n\n- The main reference source is the World Wide Web Consortium (W3C), which is the creator and worldwide maintainer of the specifications (REC) of XML language and related technologies (XSD, WSDL, etc). All related links, with W3C content, are attached to each theory lecture description.\n\nWhat's the difference between taking this course and simply viewing W3Schools material at their own site ?\n\nAlthough the content is almost entirely referenced on W3C publications, this course offers much better, organized and understandable explanations about the content, and also a much greater set of examples, using Eclipse IDE, from the easiest to the most complex ones. At W3Schools site, for instance, you only find very simple snippets of code.\n\nWhat's the difference between taking this course and the other XML/XSD courses at Udemy ?\n\n- No objection at all to those who may take more than one course. But this one has an innovative methodology, is more organized and complete (over 10 hours of theory and practices already), as well as it has much better examples, explained step by step, without any hurried 2-3 min lectures. It covers IN FULL everything that W3C suggests about XML and XSD.\n- This course is organized similar to university or college lectures, with an average of 1h per lecture. The organization is oriented towards the content itself and not short time limited lectures. I think prioritizing the content on the curriculum organization contributes way better to cohesiveness as well as to the organization and consolidation of the content in anyone's brain. 2-3 min classes end up being a big confusion resulted from a too high fragmentation level of the content. Students always criticize on other courses that everything's too hastily delivered, as if the students already knew the subjects. Here, and differently from that, you'll see it's all nicely and easily delivered, and you won't get lost on the content, even if you never heard about XML or any structural or programming language before. You're free, though, to plan your own individual learning schedule. Just take note of the subject you last saw, and then continue from there when you want.\n- Finally, this course is divided into Theory and Practice lectures. You'll, thus, have multiple chances, from multiple explanation perspectives, to learn or complement the acknowledging of each topic, subtopics, practices, and so on. And, of course, at your own time, pace and individual needs. The access to this course will be forever yours (it doesn't expire) and you'll be able to review any lecture as much as you want. A big advantage of e-learning recorded lectures compared to live face-to-face attendance lectures.\n\n\nWelcome to the course !! I hope you have a great learning experience !!\n\n\nPlease, don't forget to give me some good reviews (stars) at Udemy - if you agree, of course - so that I can be motivated to create many other programming courses, and turn them into best sellers. Thanks in advance ! :D\nAlso, be my guest to suggest anything about this course through the platform or by email.\n\n* please set the displaying resolution of the lecture videos to 1080p (instead of AUTO). Udemy generally sets a lower resolution. Although all videos have been rendered and uploaded in 4k, the max resolution at Udemy is 1k (or lower, if you do not set it manually).\n\n\n\nBest Regards,\n\n\nDaniel Pinheiro Maia, BSc.\nOracle Certified Java Programmer\nBachelor in Computing\nBrazil\n\n\n.",
      "target_audience": [
        "Any human being who wishes to learn XML and XSD for future use in any of their many market applications, specially at, but not limited to, Web Services development."
      ]
    },
    {
      "title": "Mastering Wordpress: Wordpress Development and Monetization",
      "url": "https://www.udemy.com/course/master-wordpress-website-development-and-monetization/",
      "bio": "Discover the complete step-by-step guide to building a stunning WordPress website as a beginner. Monetize your skills",
      "objectives": [
        "How to build a WordPress website from scratch ?",
        "Creating engaging and user-friendly website designs",
        "Customizing themes and plugins to fit your website's unique needs",
        "How to increase website traffic ?",
        "Writing high-quality content that resonates with your audience",
        "Monetizing your website through various revenue streams",
        "Integrating Chat-GPT to generate high-quality content",
        "Wordpress website security"
      ],
      "course_content": {
        "Introduction to Wordpress": [
          "Introduction of wordpress"
        ],
        "Wordpress installation on local computer": [
          "Xampp server installation",
          "Wordpress installation on local computer"
        ],
        "Theme installation": [
          "Theme installation on wordpress"
        ],
        "Plugin installation and settings": [
          "Plugins installation",
          "Important plugin settings"
        ],
        "Making you comfortable with wordpress": [
          "Making you comfortable with wordpress"
        ],
        "Wordpress basic configurations": [
          "Wordpress basic configurations"
        ],
        "Creating pages": [
          "Creating important pages"
        ],
        "Menu in wordpress": [
          "Menu in wordpress"
        ],
        "How to choose colors for your website ?": [
          "How to choose colors for your website ?"
        ],
        "Header and footer design": [
          "Header design",
          "Footer design"
        ]
      },
      "requirements": [
        "No programming experienced is required. You will learn everthing here.",
        "You only need a laptop or PC before starting."
      ],
      "description": "In this comprehensive course, you'll learn how to build a stunning WordPress website from scratch, create engaging articles to attract traffic, and monetize your site using google adsense. Our expert instructors will guide you through the entire process, from setting up your website to using powerful plugins and tools to optimize your content for search engines.\n\n\nTake your WordPress website development skills to the next level with our comprehensive course.\nLearn everything you need to know about building a successful website, creating engaging articles, and monetizing your content.\nDiscover advanced earning methods revealed in the course to maximize your profits.\nMaster the art of creating high-quality articles with Chat-GPT, a powerful language model.\nWhether you're a beginner or an experienced content creator, this course will provide you with the tools and strategies you need to succeed in today's competitive online landscape.\nEnroll in this course now.\nTopics discussed in this course :-\n\n\nIntroduction to wordpress and answer for your questions ?\nHow to buy domain and hosting ?\nWordpress installation on local computer\nTheme installation on wordpress\nPlugin installation and important settings\nMaking you comfortable with wordpress\nWordpress basic configurations\nCreating important pages\nHow to create menu in wordpress ?\nHow to choose colors for your website ?\nHow to design header and footer in wordpress ?\nHow to design pages ?\nConfiguring Global settings\nHow to create articals with Chat-GPT ?\nConfiguring mobile responsive menu\nCreating backup of your website on a daily basis automatically\nGoogle Site Kit Installation\nWordpress security Configurations\nEarning Methods reveled\nAll about Google Adsense\nHow to drive traffic to your website ?\nHow to check and increase website loading speed ?\nHow to migrate our website to the server ?\nSMTP configurations\nBonus lecture\nHappy learning :)",
      "target_audience": [
        "loggers, entrepreneurs, marketers, and content creators who want to learn how to build and monetize a successful WordPress website.",
        "Beginners who have no prior experience with website development"
      ]
    },
    {
      "title": "Complete Oracle JET Course for Beginners (Step-by-Step)",
      "url": "https://www.udemy.com/course/complete-oracle-jet-course-for-beginners-step-by-step/",
      "bio": "Build end-to-end web application using Oracle JET",
      "objectives": [
        "By end of this course you will be able to develop a complete web application using Oracle JET by yourself",
        "Use Oracle JET Components",
        "Working in javascript and html pages",
        "Add security to Oracle JET Application",
        "Use Gitlab as a version control for Oracle JET",
        "Develop end-to-end JET application including database and webservices",
        "Create REST services in Java for Oracle JET",
        "Deploy Oracle JET in Application Server like Glassfish and Weblogic",
        "Debug Oracle JET Application",
        "Visual Studio Code for developing JET application",
        "Oracle JET Cookbook",
        "Localization in Oracle JET"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Oracle JET Course",
          "What is Oracle JET",
          "Why Oracle JET",
          "Oracle ADF vs Oracle JET",
          "Oracle JET Components",
          "Oracle JET Architecture",
          "Oracle JET Success Stories",
          "Oracle JET Cookbook"
        ],
        "Start Oracle JET Development": [
          "Course Resources",
          "Download and Install Visual Studio Code",
          "Download and Install Node JS and Oracle JET CLI",
          "Create First Oracle JET Application",
          "Oracle JET Application File Structure",
          "Do changes in Oracle JET Application",
          "Add more Icons in your JET Application",
          "Add UI Components to JET Screen Part 1",
          "Add UI Components to JET Screen Part 2",
          "Oracle JET Flex Layout",
          "Implement Flex Layout in Oracle JET Application",
          "Oracle JET Panel"
        ],
        "Create A Complete Oracle JET Application (Database & Web Services)": [
          "Overview about The JET Application",
          "Install MySQL Database",
          "Create JET Application Database Tables",
          "Download JDeveloper",
          "Install JDeveloper for Creating the Web Services",
          "Open Web Services Application",
          "Create the Application Web Services Part 1",
          "Create the Application Web Services Part 2",
          "Create the Application Web Services Part 3",
          "Create the Application Web Services Part 4"
        ],
        "Create Complete Oracle JET Application": [
          "Create Scheduler Services Jet Application",
          "Jet Application Template",
          "Oracle JET Application Menu",
          "Implement Services Screen Part 1",
          "Implement Services Screen Part 2",
          "Implement Services Screen Part 3",
          "Implement Services Screen Part 4",
          "Implement Services Screen Part 5",
          "Implement Services Screen Part 6",
          "Services Screen CSS Style and Icons",
          "Implement Users Screen Part 1",
          "Implement Users Screen Part 2",
          "Implement Users Screen Part 3",
          "Implement Users Screen Part 4",
          "Implement Users Screen Part 5",
          "Implement Users Screen Part 6",
          "Implement Customers Screen Part 1",
          "Implement Customers Screen Part 2",
          "Implement Customers Screen Part 3",
          "Implement Scheduler Screen Part 1",
          "Implement Scheduler Screen Part 2",
          "Implement Scheduler Screen Part 3",
          "Implement Scheduler Screen Part 4",
          "Implement Scheduler Screen Part 5",
          "Implement Scheduler Screen Part 6",
          "Implement Scheduler Screen Part 7",
          "Implement Scheduler Screen Part 8",
          "Implement Scheduler Screen Part 9",
          "Implement Scheduler Screen Part 10",
          "Implement Scheduler Screen Part 11",
          "Implement Scheduler Screen Part 12",
          "Implement Scheduler Screen Part 13",
          "Implement Scheduler Screen Part 14",
          "Implement Scheduler Screen Part 15",
          "Implement Scheduler Screen Part 16",
          "Implement Scheduler Screen Part 17",
          "Implement Dashboard Screen Part 1",
          "Implement Dashboard Screen Part 2",
          "Implement Dashboard Screen Part 3",
          "Implement Dashboard Screen Part 4",
          "Oracle JET Security (Create Login Screen) Part 1",
          "Oracle JET Security (Create Login Screen) Part 2",
          "Oracle JET Security (Create Login Screen) Part 3",
          "Oracle JET Security (Create Login Screen) Part 4",
          "Oracle JET Security (Create Login Screen) Part 5",
          "Implement Sign Out Functionality Part 1",
          "Implement Sign Out Functionality Part 2",
          "Screen Privilege per User Type",
          "Finalize the Security in the Application",
          "Localization in the Oracle JET Application Part 1",
          "Localization in the Oracle JET Application Part 2",
          "Localization in the Oracle JET Application Part 3",
          "Login Screen Design",
          "Deploy JET Application in Weblogic",
          "Debugging in Oracle JET",
          "Push and Clone JET Application into Gitlab"
        ],
        "Bonus & Course End": [
          "Upload Files Functionality in JET",
          "Course End"
        ]
      },
      "requirements": [
        "You should have a basic knowledge of java and JavaScript"
      ],
      "description": "This course will target a beginner developer who likes to learn Oracle JET to build a complete web application. This course will cover creating an end to end Oracle JET application including database, java web services and Oracle JET screens. In this course, we will develop a complete Oracle JET application together (step by step) and during this course, I will show you how you can secure your JET Application and I will give you an idea about data visualization (Graphs) and I will show you how you can deploy Oracle JET application. I will explain how you can use Gitlab as a version control for storing your JET application. In this course, we will use MySQL database so I will show you how to install MySQL database and start creating JET application with MySQL database. We will use JDeveloper to develop Java Web Services which should be called from Oracle JET Application to communicate with the database. In this course, you will be able to add security to the Oracle JET application by creating Login Screen and displaying some screens depending on user type. In the course, I will show you how you can implement Localization into the JET application and add multiple languages in the JET Application. By the end of this course, you should be able to develop a complete Oracle JET application by yourself.",
      "target_audience": [
        "Anyone would like to be a developer and looking for a tool to develop web applications"
      ]
    },
    {
      "title": "Angular Interview Masterclass: Top 100 Questions (PDF)(2025)",
      "url": "https://www.udemy.com/course/angular-interview-masterclass-top-100-questions-with-pdf/",
      "bio": "Goal - Learn Angular to Crack Interview",
      "objectives": [
        "Angular Interview Preparation",
        "Masterclass Top 100 Angular Interview Questions and Answers (Lectures and PDF Book)",
        "Beginner Level-1 Questions on Topics - Data Binding, Directives, Decorators, Pipes, Services, Dependency Injection, Lifecycle-Hooks, Routing, Typescript",
        "Advanced Level-2 Questions on Topics - Observable, HttpClient, RxJS, Angular Forms, Authentication, JWT, Auth Gurad, HTTP Interceptor, Components Communication"
      ],
      "course_content": {
        "Introduction": [
          "Introduction (PDF book attached in resources)"
        ],
        "Angular Framework": [
          "Angular Framework - Introduction",
          "Q1. What is Angular?",
          "Q2. What are Angular advantages?",
          "Q3. What is the difference between AngularJS and Angular?",
          "Q4. What is NPM ?",
          "Q5. What is CLI tool ?",
          "Q6. What is Typescript? What are the advantages of Typescript over JavaScript ?",
          "Q7. Where to store static files in Angular project ?",
          "Q8. What is the role of Angular.json file in Angular?",
          "Q9. What is the difference between JIT and AOT in Angular ?"
        ],
        "Components & Modules": [
          "Section 2 - Introduction",
          "Q10. What are Components in Angular?",
          "Q11. What is a Selector and Template?",
          "Q12. What is Module in Angular? What is app.module.ts file?",
          "Q13.Angular App gets Loaded&Started?Define index.html,app-root,selector&main.ts?",
          "Q14. What is a Bootstrapped Module & Bootstrapped Component?"
        ],
        "Data Binding": [
          "Section 3 - Introduction",
          "Q15. What is Data Binding in Angular?",
          "Q16. What is String Interpolation in Angular?",
          "Q17. What is Property Binding in Angular?",
          "Q18. What is Event Binding in Angular?",
          "Q19. What is Two way Binding in Angular?"
        ],
        "Directives": [
          "Section - Introduction",
          "Q20. What are Directives? What are the type of directives?",
          "Q21. What is *ngIf Structural directive?",
          "Q22. What is *ngFor Structural directive?",
          "Q23. What is *ngSwitch Structural directive?",
          "Q24. What is [ngStyle] Attribute directive?",
          "Q25. What is [ngClass] Attribute directive?",
          "Q26. Difference between Component, Attribute and Structural Directives?"
        ],
        "Decorator & Pipes": [
          "Section - Introduction",
          "Q27. What is Decorator?",
          "Q28. What are the types of Decorator?",
          "Q29. What are Pipes? What are the types of Pipes & Parameterized Pipes?",
          "Q30. What is Chaining Pipes?"
        ],
        "Services & Dependency Injection": [
          "Section - Introduction",
          "Q31. Explain Services with Example?",
          "Q32. How to create Servicein Angular?",
          "Q33. How to use Dependency Injector with Services in Angular?",
          "Q34. What is Hierarchical Dependency Injection?",
          "Q35. What is Provider in Angular?",
          "Q36. What is the role of @Injectable Decorator in a Service?"
        ],
        "Decorators & Lifecycle - Hooks": [
          "Section - Introduction",
          "Q37. What are Parent-Child Components?",
          "Q38.Define@Input Decorator ?How to transfer data from Parent to Child component?",
          "Q39. What is @Output Decorator and Event Emitter?",
          "Q40. What are Lifecycle Hooks in Angular?",
          "Q41. What is a Constructor in Angular?",
          "Q42. What is ngOnChanges life cycle hook in Angular?",
          "Q43. What is ngOnInit life cycle hook in Angular?",
          "Q44. What is the difference between constructor and ngOnInit ?"
        ],
        "Routing": [
          "Section - Introduction",
          "Q45. What is Routing? How to setup Routing?",
          "Q46. What is router outlet?",
          "Q47. What are router links ?"
        ],
        "Observable \\ HttpClient \\ RxJS": [
          "Section - Introduction",
          "Q48. What are Asynchronous operations?",
          "Q49. What is the difference between Promise and Observable?",
          "Q50. What is RxJS?",
          "Q51. What is Observable? How to implement Observable ?",
          "Q52. What is the role of HttpClient in Angular?",
          "Q53. What are the steps for fetching the data with HttpClient & Observable ?",
          "Q54. How to do HTTP Error Handling in Angular ?"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML and CSS"
      ],
      "description": "This course is a one stop destination for all Angular interview questions and answers.\n\n\nThis course contains Top 100 most important Angular questions asked in the interviews.\n\n\nHere are the topics from which questions are covered in this course:\n\n\nTop 100 Angular Interview Questions\n(Topics from which  questions are covered)\nAngular Framework\nComponents & Modules\nData Binding\nDirectives\nDecorator & Pipes\nServices & Dependency Injection\nComponent Lifecycle-Hooks\nRouting\nObservable\\ HttpClient\\ RxJS\nTypescript-Basics\nTypescript - OOPS\nAngular Forms\nAuthentication/ JWT/ Auth Gurad/ HTTP Interceptor\nParent Child Components Communication\n\n\nAlso, this course has a pdf and powerpoint presentation of the top 100 interview questions, which is very critical for revision.\n\n\nAbout Instructor: The instructor has more than 15 years of experience in full-stack development and has given and taken more than 100 interviews in his career.\n\n\nThis course comes with a 30-day money-back guarantee.\nIf you are not satisfied, you can return it and get all your money back, no questions asked.\nYou have nothing to lose by purchasing this course, and the knowledge you will gain can crack interviews.\n\n\nIf you are giving interviews or want to prepare for the interviews.\nAll the best for your interviews.\nMy advice, give as many interviews as possible and never ever give up.",
      "target_audience": [
        "Candidate looking for Angular Jobs and preparing for interviews"
      ]
    },
    {
      "title": "Web Forms - Build & Master HTML Web forms In 2025",
      "url": "https://www.udemy.com/course/master-web-forms/",
      "bio": "An advanced Web Forms course for everyone! Master URL encoding, form elements, GET vs POST, form validation and more",
      "objectives": [
        "Why web forms are the MONEY PAGES of websites",
        "Build web forms from scratch with pure native HTML, CSS and JavaScript",
        "Learn how to use AJAX to submit form data to a server",
        "Learn about HTTP and how it relates to HTML",
        "Tons of practical examples and fun challenges to make learning easy",
        "Learn how to send form data to a web server",
        "Master client-side validation by using both HTML and JavaScript",
        "Understand how to create custom error messages with the ConstraintValidation",
        "Practical examples - build many dynamic front-end forms with me",
        "I am here to support you and bring you to the next level, step-by-step",
        "Learn how to extract form key:value pairs using the URLSearchParams() API",
        "Have fun mastering advanced front-end website development",
        "Design and create forms to get the response you desire, be successful",
        "Understand the CSS Box Model, the CSS Grid and pseudo classes and pseudo elements",
        "Learn about the different form controls available",
        "Master the <input> types like text, password, email, tel, color, date, number and more!",
        "Master non <input> form controls like textarea, output, progress & meter bars, and more!",
        "Learn why the browser implement URL Encoding when a user submits a form",
        "Understand URL encoding",
        "Understand how a server receives data from a form",
        "Learn how to start a PHP server and receive form data (real example)",
        "Learn how to start a Node server and receive form data (real example)",
        "Understand why a user can type international characters into your form even though URL encoding specifies it has to be ASCII characters",
        "Learn how to build envied forms with elements like <datalist> and <select>",
        "Learn how to view HTTP request header and body information",
        "Learn about the <form> attributes (such as action, method, autocomplete, novalidate, enctype, REL, and more)",
        "Understand why a GET request appends the form data to the URL",
        "Learn why the browser appends the form data to the body of the HTTP request on a POST request",
        "Doing help learning and we work through lots of examples together",
        "Understand multipart/form-data and why do you need it when uploading files",
        "Understand the difference between radio buttons and checkboxes",
        "Understand how to listen for events on form controls (such as the input or change event)",
        "Build dropdown controls, progress bars, meter bars, and a whole bunch more",
        "Learn how to listen for different types of events, such as submit, input, change, etc.",
        "Understand the ACTION and METHOD attributes",
        "Understand the accept-charset (ISO vs ASCII) attribute",
        "Learn about Numerical Character References",
        "Easily master the original <input> types (such as password, text, hidden and more)",
        "Learn how to build functional forms using <fieldset>, <legend> and <inputs>",
        "Learn the 2 ways to create submit buttons on forms",
        "Be an expert on the newer <input> types like email, search, tel, number, date and more!",
        "FUN CHALLENGES throughout the course (where we build custom toggles, checkboxes, color pickers and more)",
        "From beginner to expert (advanced +)",
        "Gain the knowledge to achieve and lead",
        "Gives you depth of knowledge to boost your ability and confidence"
      ],
      "course_content": {
        "Web Forms - Introduction": [
          "Web Forms - Section Introduction",
          "How are web forms created?",
          "Why do we need to wrap our web form in a <form> element",
          "Web Forms - facts",
          "Quick recap on web forms",
          "Project intro - let's build a web form",
          "Where can you write code?",
          "Profile header - setting it up",
          "Profile header - finishing it off",
          "Creating our first web form widget <input>",
          "A little more info about the <input> element",
          "The <input> element is powerful",
          "Styling our <input> widget",
          "Creating an email widget",
          "Intro to radio buttons",
          "Radio buttons",
          "Building our radio button",
          "Take a step back: radio buttons",
          "Styling our radio button",
          "Summary on radio buttons",
          "Adding a dropdown menu to our web form",
          "Adding a textarea widget to our web form",
          "What is the <textarea> element?",
          "Adding a checkbox to our web form",
          "Adding a submit button to our web form",
          "What happens when you submit a form?",
          "A quick word on the ACTION and METHOD attributes",
          "Recap of entire section",
          "Fundamentals of web form design",
          "Outro",
          "Quiz: Web Form Fundamentals"
        ],
        "The <form> element": [
          "Introduction",
          "Table vs Web Form",
          "The <form> element",
          "Attributes on the <form>",
          "Why is knowing about the <form> attributes important?",
          "Attribute: accept-charset (ISO and ASCII)",
          "Attribute: accept-charset (UTF)",
          "Summary of the accept-charset attribute",
          "Take a step back: accept-charset",
          "What happens if you use a character outside of the specified encoding type?",
          "Theta Example - URL Encoding (Part 1 of 3)",
          "Theta Example - Numerical Character References (Part 2 of 3)",
          "Theta Example - Servers Understand Hex (Part 3 of 3)",
          "Name attribute",
          "Accept attribute",
          "Action attribute",
          "Action attribute example - front end example",
          "Action attribute example - intro to URLSearchParams()",
          "Action attribute example - making our form dynamic",
          "Method attribute - GET",
          "Method attribute - POST",
          "GET vs POST",
          "HTTP vs HTML when it comes to METHOD types",
          "Recap: why does an HTML form only allow GET and POST",
          "GET method",
          "POST method",
          "Viewing HTTP request header and body information",
          "How are images sent over the internet?",
          "Enctype attribute - introduction",
          "Enctype attribute - GET example",
          "Enctype attribute - POST",
          "Quick recap",
          "Enctype attribute - what is boundary?",
          "Quick word on GET, POST, Enctype and Forms",
          "More on the Boundary (advanced)",
          "Enctype example - setting up HTML",
          "Enctype example - setting up a Node.js server",
          "Enctype example - analysis of multipart vs application/x-www-form-urlencoded",
          "Enctype - take a step back",
          "Submitting files in a web form",
          "REL attribute",
          "A little more on rel=\"noopener\"",
          "Autocomplete attribute",
          "Autocomplete - example",
          "Autocomplete - summary",
          "novalidate - attribute introduction",
          "novalidate - example",
          "Target attribute introduction",
          "Target - example",
          "Summary of the <form> wrapper",
          "Outro",
          "Quiz: <form>"
        ],
        "URL Encoding": [
          "URL Encoding - Introduction",
          "Definition of URL encoding",
          "Why do we see international characters?",
          "A little about URLs",
          "What is a URL",
          "Understanding hex",
          "A little more about why we use hex",
          "How does URL encoding work?",
          "URL encoding - high level summary",
          "International characters",
          "International characters (RFC 3986 vs RFC 3987)",
          "How does your browser URL encode spaces?",
          "Custom encoding with JavaScript - example",
          "encodeURIComponent() - last words",
          "Quiz: URL Encoding"
        ],
        "The 3 most important web form elements: fieldset, text inputs and labels": [
          "The structure of a web form",
          "<fieldset> - introduction",
          "<fieldset> - examples",
          "<fieldset> - attributes",
          "<fieldset> - using the form attribute",
          "Using the form attribute for styling purposes using HTMLFormElement.elements",
          "Well done",
          "The <input> element is like a lime",
          "Limes and <inputs>",
          "Where does the <input> element come from?",
          "<input type=\"text\"> - common attributes and introduction",
          "Quick word on <input>",
          "<input type=\"text\"> - spellcheck attribute and value property",
          "Assignment - web form introduction",
          "Assignment - solution (without CSS)",
          "Assignment - solution (with CSS)",
          "Label attribute",
          "The most important <input> element",
          "Adding some heading and styling",
          "The 3 most common widgets you'll see"
        ],
        "Original <input> types": [
          "What are the original <input> types",
          "Keep going! Web Forms are Awesome!",
          "Input type=password",
          "Using the pattern, title and required attribute with the password type",
          "Password does not help us with security",
          "Quick word about the pattern attribute",
          "Regular Expressions - introduction",
          "Input type=hidden",
          "URLSearchParams() - introduction",
          "Hidden input type and databases",
          "Summary of hidden input fields",
          "Submitting a timestamp with <input type=\"hidden\">",
          "Example of why a hidden input may not be safe",
          "Buttons - two ways to create buttons",
          "Using new attributes on buttons, and the difference between <button> and <input>",
          "Different button types - fun example",
          "Checkable items",
          "Checkbox",
          "Radio buttons",
          "The radio button list is pre-defined",
          ":checked pseudo class",
          "Checkbox Challenge - intro",
          "Checkbox Challenge - solution",
          "Checkbox Challenge - solution with check mark",
          "Image type",
          "Image type - heatmap example",
          "File type",
          "File type - how to style it",
          "File type - using JavaScript to improve UI",
          "Outro",
          "Original Input Types"
        ],
        "Newer <input> types": [
          "Newer input types - high level",
          "Email type - introduction",
          "Email type - validation and benefits",
          "Search type - intro",
          "Search type - styling with CSS",
          "Search type - pseudo classes and pseudo elements",
          "Tel type",
          "Url type",
          "2 most common events that are fired",
          "Number type",
          "Step back",
          "Range type",
          "Using JavaScript to display dynamic range values",
          "Date and time pickers",
          "Date type - example",
          "Quick word on datetime-local",
          "Color type",
          "Common attributes you'll find on form widgets",
          "Form Fundamentals",
          "Newer input types"
        ],
        "Fun Challenges": [
          "#1 web form email challenge - intro",
          "#1 web form email challenge - solution",
          "#2 custom toggle - intro",
          "#2 custom toggle - building HTML",
          "#2 custom toggle - finishing off the toggle",
          "#3 color picker challenge - intro",
          "#3 color picker challenge - building the HTML",
          "#3 color picker challenge - adding JavaScript",
          "#4 custom range picker challenge - intro",
          "#4 custom range picker challenge - building the HTML",
          "#4 custom range picker challenge - adding JavaScript",
          "#5 simple web form challenge - intro",
          "#5 simple web form challenge - solution"
        ],
        "Moving away from the <input> element": [
          "Introduction",
          "What this section is all about",
          "Non <input> elements",
          "<textarea> - what is it",
          "<textarea> vs <input type=\"text\">",
          "Why are we spending so much time on <textarea>?",
          "<textarea> - common attributes",
          "<textarea> - resize property and summary",
          "<textarea> Challenge #1 - :valid, :invalid, not and :placeholder-shown",
          "<textarea> Challenge #1 - Solution",
          "<textarea> Challenge #2 - focus and blur events",
          "<textarea> Challenge #2 - Solution",
          "Dropdown controls and the Select Box",
          "Autocomplete box - <datalist>",
          "Can you hide the value attribute from the <datalist> element dropdown",
          "Autocomplete - attribute",
          "More about the autocomplete attribute",
          "2 important questions about <datalist>",
          "Creating a dynamic <datalist> dropdown",
          "<datalist> vs <select> - summary",
          "Dropdown menus - summary",
          "Output element - intro",
          "Output element - the oninput event",
          "Output element challenge 1 - multiplication",
          "Output element challenge 1 solution - multiplication",
          "Output element challenge 2 - display slider value",
          "Output element challenge 2 solution - display slider value",
          "Progress bar - intro",
          "Progress bar - detail",
          "Meter bar - intro",
          "Meter bar - detail",
          "Meter and progress bar - summary",
          "Progress bar challenge #1 - intro (video progress)",
          "Progress bar challenge #1 - solution (video progress)",
          "Progress bar challenge #2 - intro (form progress)",
          "Progress bar challenge #2 - solution (form progress) - HTML + CSS",
          "Progress bar challenge #2 - solution (form progress) - JavaScript",
          "Outro",
          "Web Form Controls"
        ],
        "Styling web forms (including pseudo elements and pseudo classes)": [
          "Section intro",
          "Styling forms with CSS, pseudo classes and pseudo elements - intro",
          "Where can you find all pseudo classes?",
          "Styling web forms",
          "CSS box model",
          "Pseudo classes - intro",
          "Pseudo classes - for forms",
          ":required",
          "Building our base web form (also used in future lectures)",
          "Generated content",
          "Adding generated content to our form (by using ::after)",
          ":valid & :invalid",
          "Adding :valid and :invalid styling to our form (by using ::before)",
          ":in-range & :out-of-range",
          ":enabled & :disabled",
          "Web form example - rundown of the HTML",
          "Web form example - building our JavaScript",
          "Radio boxes & checkboxes - :checked state",
          "Radio boxes & checkboxes - :default state",
          "Radio boxes & checkboxes - :indeterminate state",
          "What about the <select> element?",
          "Pseudo classes - summary",
          "Styling Web Forms"
        ],
        "Web Form Validation": [
          "Section intro",
          "2 types of client side validation on web forms",
          "Why you need server side validation?",
          "Built-in validation - overview",
          "Quick example - :valid :invalid and required",
          "Built-in validation - pattern attribute",
          "JavaScript validation - intro",
          "JavaScript validation - the Constraint Validation API",
          "setCustomValidity() method - 2 easy examples",
          "CHALLENGE INTRO - setCustomValidity() method",
          "CHALLENGE SOLUTION - setCustomValidity() method",
          "Security is important (SSL & CSRF attacks)",
          "Web Form Validation"
        ]
      },
      "requirements": [
        "A desire to become an informed full stack web developer",
        "Basic HTML, CSS and JavaScript will be helpful, but not absolutely necessary",
        "A Mac or PC is required as you need to code alongside me to learn effectively"
      ],
      "description": "*** THE ULTIMATE COURSE ON WEB FORMS AND HTML FORM ELEMENTS ***\nHTML Forms: Master the HTML <form> element and attributes to create user-friendly interfaces.\nAdvanced Concepts: Understand URL encoding, date formatting, and the intricacies of the infamous input element.\nMaster Client-Side Validation: Understand progress bars, toggles, checkboxes, ranges, and tons more.\nHandle Data Like a Pro: Learn how to grab and process form data on the server side using Node.js and PHP.\nStrap in my dear student, it's going to be a fun ride.\nLet Me Share My Form-Building Expertise with You!\nUnderstanding how forms work is essential for becoming a skilled front-end developer. This course will empower you to implement your creative, dynamic ideas into your web projects. Mastering forms is a critical step toward full-stack development, giving you the control and knowledge to create effective user interactions. In this course, we’ll take a deep dive into web forms and their functionalities. Here are some key questions we’ll explore:\nWhy do we need to wrap our form elements within form tags?\nHow can you include a progress bar in your forms?\nWhat are the best practices for customizing toggles and checkboxes?\nWhere does the data go once a user clicks the submit button?\nHow can you perform validation on your forms, both natively and using JavaScript?\nHow can users upload files through your forms?\nWhat happens to the data once it arrives at the server?\nBy addressing these questions and more, you'll gain the skills needed to build advanced forms that enhance user engagement and experience. You'll also understand the full-stack process involved in handling form data effectively.\nWhat You Will Learn\nThe fundamentals of HTML forms and their importance in web development.\nYou will understand at an advanced level how to create forms natively, and how powerful they can be in increasing conversions.\nTechniques for creating dynamic forms that enhance interactivity.\nStrategies for validating user input on both client and server sides.\nBest practices for customizing form elements to fit your design needs.\nFrom understanding the structure of forms to implementing validation techniques, you’ll gain the skills necessary to create dynamic and user-friendly web applications.\nTHE NITTY GRITTY OF WEB FORMS?\nA web form is also known as an HTML form.\nIt’s a place where users can enter data that’s then sent to a server for processing. Web forms allow users to place orders on your site, to provide their name and email address to sign up for a newsletter, or to sign up as a member to your site and so forth.\nWhat’s really great about web forms is that there is no “one size fits all”. You can use your artistic flare, and personal business acumen to create web forms with a particular length, format, content type and appearance.\nBy doing this course, you’ll be able to improve your web form usability, which will ultimately enhance user experience and get website visitors excited about completing your form and converting.\nWhy is this course so important?\nForms which are on point present an opportunity for a company to grow and capture loyalty.\nA form can often be both a marketing tool and a necessity. A form that puts the user at ease, that evokes feelings of trust, will get filled out far more often than a form which looks (or is) complicated and confusing.\nAfter completing my “Advanced Forms” course, you will be knowledgeable, confident and the “go-to” person for forms.\nLet me share my form building skills with you\nUnderstanding how forms work will equip you to become an awesome front-end programmer. Learn how to implement your creative, different and dynamic ideas into your website. Master forms and you’re half way to becoming a full stack web developer. Take control through understanding. Delivering a perfect, interactive and functional form is challenging.\nIn this course, I take a deep-dive into explaining web forms and how they work. Why do we need to wrap our form within <form> tags? How can you include a progress bar in a form? How can you customize a toggle or checkbox? Where does the data go once a user clicks on the submit button? How can you perform validation on your form? How can a user upload a file? What happens once the data arrives at the server? What are the different types of events we can listen to on forms? By understanding these questions, and many more in the course, you will be able to build advanced forms and better yet, understand the full stack process! In other words, you will be able to create dynamic forms that improve user engagement and experience.\n\n\nWHAT THIS COURSE COVERS\nThis course is huge and comprehensive, from basics to advanced\nThis course will give you solid fundamentals and practicals regarding forms. It can be taken alone (you don’t need to do any other course) to achieve your goals. You will emerge from this course with an advanced understanding and practical experience with building forms. It will take you to the point where you will understand what method (GET or POST) to use when sending form data, how to define where the data goes, how to perform advanced client-side validation (checking errors on the form before it is sent to the server), how to write custom pattern validation rules (using regular expressions), how to run servers and how to view all HTTP request information. This is awesome knowledge. This course will captivate you and catapult you to the next level and set you well on your way to becoming a true Grandmaster in front-end form web development.\nBy the end of this course, you'll be able to “speak” and “walk” FORMS by gaining an understanding of how you can build it, manipulate it and style it in meaningful and practical ways. We dig deeper in every lecture, and this course has many bonus lectures which extend your knowledge base and test your skills.\nWhy should you learn so much about forms?\nA web form is one of the best ways to get input from prospective clients and indirectly establish a relationship with them. The time you spend in bringing the user to your website should be matched with the time spent in perfecting the user experience with your web forms. It is surprising to see so many sites these days contain complex and frustrating web forms that cause a negative experience.\nUltimately, a web form allows your visitors to get in contact with you and to send information, such as an order, a catalogue request, or even a query, which is passed on to your database.\nCan you begin to see how important forms are and how their use can be escalated?\n\n\n*** THE MOST comprehensive FORMS course on Udemy ***\nSuccessful programmers know more than rote learning a few lines of code.\nThey also know the fundamentals of how HTML code works behind the scenes.\nThis is particularly true when it comes to building forms.\nIf you’re wanting to become a full stack developer, you need to know, really know, how forms work. You need to understand how the browser URL encodes form data, how the browser sends data to a URL that you specify, and how to perform validation to ensure the user does not submit invalid data.\n\n\nA unique approach\nYou will learn \"why\" things work and not just \"how\". Understanding advanced topics about forms (lURL encoding, accept-charset, multipart/form-data, regex, etc) is important as it will give you infinite possibilities and upskill you. Armed with this knowledge, you’ll be able to create forms that are tailored to your needs, and allow the form data to get submitted to a server via AJAX. You will be able to create forms that are customizable by the user (for example, if the user wants to change the color of the form theme). You can create a control on a form that displays the progress completion of the form and displays messages to the user along the way.\nCan you begin to see how pivotal forms are and how important having knowledge about forms is?\nHow is this course different?\nThere are lots of courses that focus on web development. Many never get into the detail about how the HTML FORM element works behind the scenes – a skill that every full-stack developer needs to master in order to utilize potential.\nIn this course, I focus on the more advanced topics of true web development when it comes to forms. This includes understanding what all of the attributes on the <form> element mean, understanding the different <input> types in detail, what URL encoding is, and how data is sent over the wire to a server.\nPractice makes perfect\nTheory is theory … but there’s nothing like getting behind your computer and typing in code. That’s why we will be coding, laughing and pulling out our hair together as we code real life websites and exercises during this course.\nI love practical examples, which is why we build multiple forms in this course, starting in section 1.\nIs this course for you?\nThis course is designed for anyone eager to enhance their web development skills, regardless of your current level.\nIf you find yourself in any of the following categories, this course is perfect for you:\nAspiring Developers: You want to explore the world of programming and learn how to create dynamic and interactive web forms.\nFront-End Enthusiasts: You’re looking to gain a deeper understanding of HTML forms and how they can improve user engagement.\nFuture Full-Stack Developers: You wish to understand how front-end JavaScript interacts with back-end technologies like Node.js and PHP.\nCurious Learners: You have a basic grasp of web forms but want to dive deeper into advanced concepts like validation, URL encoding, and data handling.\nDevelopers Seeking Mastery: You’ve taken other courses but feel you haven't fully grasped the intricacies of form elements and client-server interactions.\nWHY START NOW?\nRight this second, your competitors are learning how to become better web developers.\nWeb development is a blazing hot topic at the moment, and in the foreseeable future. But you have a distinct advantage. This course offers memorable learning topics, actionable tactics and real-world examples.\nLets get started!\nWhat do you get?\nLifetime access to all tutorial videos. No fees or monthly subscriptions.\nQ&A support.\nQuizzes, coding challenges, a test and assignments to help you learn.\nI’ve allowed you to download all of my lectures for offline viewing.\nLet's get excited about becoming a professional web developer, and to be able to confidently apply it to your own websites.\nLet's get crackin'",
      "target_audience": [
        "Anyone looking to enhance their coding skills",
        "Everybody who wants to master HTML web forms",
        "Everybody who knows about web forms but wishes they knew more",
        "YES: This course is for beginners too. Aimed at people new to the world of web development. No previous JavaScript experience is necessary",
        "NO: This course is NOT only for beginners. It is a complete beginner to advanced master course that is suitable for intermediates who know the basics and have an idea about how to build forms, but want to dig deeper to know its inner workings. Knowledge is power, as they say. Experienced students sometimes prefer to skip a section that they are very familiar with",
        "YES: This course is for someone wanting to be an informed professional, to be expert and confident in the entire front-end development process when it comes to building forms",
        "Those who want to learn modern coding without third party libraries and frameworks",
        "Those interested in building their own frameworks, or being better able to learn from the source code of other well-known frameworks and libraries",
        "Those wanting to start using frameworks (like Angular or Node) that are heavily reliant on JavaScript and knowing the process flow of front-end web development",
        "Those who have some knowledge of forms, but little in-depth know-how about how it all works behind the scenes, and how to practically implement best practices in their websites to stay in front"
      ]
    },
    {
      "title": "Learn Full-Stack Vue, .NET Core, PostgreSQL Web Development",
      "url": "https://www.udemy.com/course/learn-full-stack-vue-net-core-postgres/",
      "bio": "Code-along to build a full-featured management dashboard from scratch",
      "objectives": [
        "Full-stack web application development skills",
        ".NET Core 3.0",
        "Vue JS",
        "PostgreSQL",
        "CSS (SCSS) + HTML",
        "Cypress Automated Testing",
        "Unit Testing Vue with Jest",
        "Unit Testing C# with xUnit",
        "Refactoring"
      ],
      "course_content": {
        "Introduction": [
          "Course Summary and Introduction",
          "Solar Coffee Demo and Development Environment Setup",
          "Using the Vue CLI to Generate the Vue Project",
          "Setting up the .NET Core Web API Project"
        ],
        "Back End: .NET Core Web API + PostgreSQL": [
          "Building the Data Layer",
          "Connecting to PostgreSQL",
          "Setting up Makefile and Adding Data Models",
          "Starting Controllers and Services",
          "Continuing API Development and Basic SQL",
          "View Models and Service Development",
          "Continuing Service Layer Development",
          "Expanding Serialization and Controllers",
          "Making Test Requests with Postman and Bug Fixes",
          "Completing our API"
        ],
        "Front End: Vue.js SPA Web Client": [
          "Starting Front End Development with Vue.js",
          "Creating the App Layout",
          "Creating the Inventory Dashboard",
          "Creating Modals: Receiving Inventory",
          "Creating Modals: New Product Modal",
          "Starting the Front End Service Layer"
        ],
        "Full Stack Integration - Back and Front End": [
          "Bug Fix: CORS and Sending Inventory Data",
          "Implementing Typescript Types, Newtonsoft Json.NET Library",
          "Upgrading Styles, Saving New Products",
          "Adding new API Endpoints",
          "New Feature: Manage Customers Screen",
          "New Feature: Manage Customers and Invoice Generator",
          "Invoice Wizard Feature Development",
          "New Feature: PDF Export",
          "New Feature: Tracking Sales Orders",
          "New Feature: Charting and Vuex Pathify",
          "Bugfix: Updating Chart Without Refreshing"
        ],
        "Unit Testing and Automation Testing": [
          "Bugfix: Snapshots, Back-End Unit Testing",
          "Testing Vue Components with Jest",
          "Automation Testing with Cypress"
        ]
      },
      "requirements": [
        "Beginner to intermediate familiarity with web development",
        "An interest in hands-on learning by building software"
      ],
      "description": "In this course, we'll build a feature-complete web application for a coffee roaster called Solar Coffee. We'll build a management dashboard consisting of a PDF invoice generator, dynamic graphs, and an order fulfillment feature.\nAs part of this course, you'll learn fundamental full-stack development skills, including:\n\n\nREST API development with .NET Core\nFront-End development with Vue.js with TypeScript\nUsing SQL with a PostgreSQL database\nTesting API endpoints with Postman\nUnit testing with Jest, xUnit\nEnd-to-end testing with Cypress\nFinding and fixing bugs\nWeb application architecture",
      "target_audience": [
        "Beginner to intermediate level web developers curious about improving full-stack skills",
        "Hands-on learners who enjoy learning by building applications"
      ]
    },
    {
      "title": "Beginners Introduction to Web Development",
      "url": "https://www.udemy.com/course/explore-web-development/",
      "bio": "Overview about creating content online, how websites work and top resources to use to create web content",
      "objectives": [
        "connection different technologies together",
        "have a solid foundation for developing new skills",
        "know how to navigate and work more efficiently",
        "understand how to develop content online"
      ],
      "course_content": {
        "Everything you want to know about web development": [
          "Introduction to creating web content",
          "Introduction to Web development",
          "What is code and how does it work",
          "Files used by servers to display code",
          "Using Editors to help write code",
          "Online Editor playgrounds for coding",
          "How to use Atom web editor",
          "Brackets web editor",
          "Advanced webdev options mysql database and php code",
          "Get online web hosting FTP",
          "setting up a domain name",
          "Resources for Web developers",
          "Basics of HTML CSS JavaScript",
          "No coding required Websites",
          "Where to now grow your skills",
          "Better Web Design Grow your portfolio",
          "Course Conclusion",
          "Course Resources"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Additional Course Resources: Access to Downloads, Applied Examples"
        ]
      },
      "requirements": [
        "everything is included",
        "basic terminology",
        "computer access"
      ],
      "description": "I've complied common questions that I get often about web development.   Perfect course for learning about web development or as a refresher course for anyone how create web content.\nThis course is not designed to teach you coding but to give you a better overall understanding about how field of web development works.  This is a beginners course that overviews how things work and explores top resources.\nWith so many resources, terms technologies options to create online content this course is designed to tie it all together.   Learn how to get started with web development, explorer top resources and find out more about how you can effectively create website and web content.\nLearn how to setup Atomio on your computer to create web code.  Learn about domains, browsers, source code, ip addresses, hosting, Wordpress, Content systems, FTP, HTML, CSS, JavaScript, online playgrounds and more.\nDo you have questions about getting started with web development, how things work or just want to learn more about what is involved with creating content online.  Are you curious how it all works together?\nThis course answers your questions and gives you a starting point for creating content online.  Fast paced course provides an overview and a sneak peak into what web development is all about.\nTaught by an instructor with over 18 years of web development experience, this course is designed to provide answers and have it all in one place.\nI'm here to help and ready to answer any questions you may have.",
      "target_audience": [
        "anyone creating web content",
        "web developers who are starting out",
        "new web designers",
        "anyone who wants to launch a website"
      ]
    },
    {
      "title": "TypeScript for Beginners: Mastering TypeScript Fundamentals",
      "url": "https://www.udemy.com/course/typescript-for-beginners-mastering-typescript-fundamentals/",
      "bio": "Unlock the Power of TypeScript for Modern Web Development",
      "objectives": [
        "Gain a solid understanding of TypeScript, its origins, and its industry relevance.",
        "Set up a development environment with Visual Studio Code and TypeScript for efficient coding.",
        "Master TypeScript syntax, covering variables, data types, and type annotations.",
        "Develop proficiency in working with functions, interfaces, and classes.",
        "Explore arrays and their methods, including map, filter, reduce, and more.",
        "Dive into advanced TypeScript concepts such as inheritance, modules, and type annotations.",
        "Configure TypeScript to tailor your development environment with tsconfig.",
        "Learn asynchronous programming using Promises and async/await.",
        "Apply your skills by building a practical To-do App.",
        "Discover TypeScript's integration with popular frameworks like React."
      ],
      "course_content": {
        "Introduction to Typescript": [
          "Introduction",
          "Introduction to typescript",
          "Frameworks that use typescript",
          "TypeScript's Popularity Surge",
          "JavaScript vs Typescript",
          "Course Materials"
        ],
        "Setup and Environment": [
          "Code Editors",
          "Installation of VS code",
          "Typescript Installation"
        ],
        "TypeScript Basics": [
          "Typescript Syntax",
          "How to use a console?",
          "Typescript Compiler",
          "Variables",
          "Datatypes",
          "Functions with annotations",
          "Interfaces",
          "Classes"
        ],
        "Arrays Methods": [
          "What is an Array and its methods?",
          "Concat, Shift, Unshift and slice",
          "Reduce",
          "Foreach and findindex"
        ],
        "Advanced Topics": [
          "Inheritance",
          "Modules",
          "Explicit vs Annotation",
          "Void",
          "Unknown Type"
        ],
        "TypeScript Config.": [
          "Files compiling with TS config",
          "TS config target",
          "Outdir"
        ],
        "Promises": [
          "Access Modifiers",
          "Constructors",
          "Promises",
          "Promises with Async"
        ],
        "Project": [
          "To-do-App UI",
          "To-do App Part 1",
          "To-do App Part 2"
        ],
        "Future of TypeScript": [
          "Using Typescript with React",
          "Community and Resources"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic familiarity with JavaScript (recommended, not mandatory).",
        "A code editor like Visual Studio Code (VS Code) installed on your computer.",
        "Access to a computer with an internet connection for course materials and exercises.",
        "Motivation and curiosity to learn TypeScript.",
        "A passion for coding and problem-solving.",
        "No previous TypeScript experience required; the course covers fundamentals.",
        "An open-minded approach to learning new concepts and techniques in TypeScript."
      ],
      "description": "Are you ready to embark on a journey into the world of TypeScript? Welcome to our comprehensive course designed to equip you with the knowledge and skills needed to become a proficient TypeScript developer.\nTypeScript has gained immense popularity in recent years for good reason. It brings strong typing and enhanced tooling to JavaScript, making it easier to write robust, maintainable code for both small projects and large-scale applications. In this course, you'll delve into TypeScript from the ground up, starting with the basics and progressing to advanced topics and real-world application development.\nThe course begins with a solid foundation, introducing you to TypeScript's syntax, setup, and essential concepts. You'll explore the differences between JavaScript and TypeScript, gain insights into popular frameworks that leverage TypeScript's capabilities, and discover why it has become an industry standard.\nYou'll learn how to set up your development environment with Visual Studio Code and TypeScript, enabling a seamless coding experience. As you dive deeper into the language, you'll grasp key concepts like variables, data types, functions, interfaces, and classes.\nArray methods and advanced topics such as inheritance, modules, and access modifiers will be covered in detail, providing you with a comprehensive understanding of TypeScript's capabilities. You'll explore TypeScript configurations to tailor your development environment to your needs, making it easier to manage large projects efficiently.\nPromises and asynchronous programming will be demystified, allowing you to write asynchronous code confidently. You'll also get hands-on experience by building a practical project – a To-do App – that reinforces your skills and demonstrates how TypeScript can be used in real-world scenarios.\nTowards the end of the course, you'll peer into the future of TypeScript, discovering how it integrates seamlessly with popular frameworks like React. You'll also gain insights into the vibrant TypeScript community and the wealth of resources available to support your ongoing learning journey.\nWhether you're a beginner looking to grasp the fundamentals or an experienced developer aiming to harness TypeScript's full potential, this course will empower you to write cleaner, safer, and more maintainable code. Join us and become a TypeScript master, ready to tackle the challenges of modern web development with confidence.",
      "target_audience": [
        "JavaScript developers looking to transition to TypeScript",
        "Web developers and programmers seeking to enhance their skill set",
        "Frontend developers aiming to work with modern frameworks like React, Angular, or Vue JS",
        "Backend developers interested in building robust APIs or exploring Node JS with TypeScript",
        "Students studying computer science and coding enthusiasts eager to learn",
        "Tech professionals considering a career switch to web development",
        "Individuals from non-technical backgrounds intrigued by web development",
        "Curious learners interested in exploring TypeScript's capabilities",
        "Those pursuing modern web development skills to stay competitive in the industry"
      ]
    },
    {
      "title": "MS SQL with C#",
      "url": "https://www.udemy.com/course/ms-sql-with-c/",
      "bio": "Learn C#, MS SQL Server, Ms SQL Backup &; Recovery, how to connect C# to SQL and more with this comprehensive SQL course",
      "objectives": [
        "If you’re a fan of database learning and keen to work as a database administrator, analyst, or data scientist, starting with a solid foundational SQL course",
        "If you really want to develop real-world applications with C #, you need to support it with a database.",
        "You can connect your C# application to data in a SQL Server database using the .NET Framework Data Provider for SQL Server.",
        "The labs/assignments were designed perfectly to test all the knowledge which is gained in the lectures.",
        "C# and other .Net languages can work together with most databases but most commonly pair with MS SQL",
        "Learn how to connect C# to SQL",
        "There are SO MANY types of database jobs you can do with SQL alone, and another programming language only adds more strings to your bow.",
        "There are plenty of instances in which you might want to use SQL with C#, making the pairing a strong choice for students of SQL!",
        "Beautiful coding techniques",
        "Fundamentals of C#",
        "Conditional statements",
        "Create and usage of Arrays",
        "Create and usage of Methods",
        "Debug C# applications",
        "Apply OOP Concepts using C#",
        "How to use Visual Studio efficiently",
        "What objects, classes, fields, properties, methods and constructors are in detail",
        "How to use static, partial and nested classes",
        "How you can utilize abstract, sealed, virtual and overridden classes and members to build robust applications",
        "How to develop Console and Windows Forms Applications",
        "Start learning from scratch and learn about every MS SQL Server topic with examples",
        "Learn SQL basics with SSMS (SQL Server Management Studio)",
        "U se SQL commands to filter, sort and manipulate strings, dates numerical data from different sources",
        "Retrieving data from database with different scenarios",
        "You will also learn SQL transactions and transaction commands",
        "How to make very simply a BACKUP and a RESTORE",
        "Discuss the BACKUP LOGS and DIFFERENTIAL BACKUP, and implement them in your BACKUP strategy.",
        "How is the backup strategy determined? What should be considered?",
        "What is the recovery model? What are the differences between Full, Bulked Logged and Simple recover model?",
        "What is a full backup? Why does every backup have to start with a full backup?",
        "SQL Server is a relational database management system or RDBMS created and developed by Microsoft.",
        "SQL Server Management Studio is desktop software designed to connect to Microsoft relational database management systems, including Microsoft SQL Server",
        "The lectures were short so you do not lose focus and get bored and were easy to understand.",
        "When I started this course I had no knowledge of SQL, but now I can claim I have all the basics to further succeed.",
        "Learn to ms sql mssql c# c# sql sql ms sql server ms sql with c# sql c# sql server c# and sql oak academy c# sql server",
        "Start learning mssql server sql with c# ms-sql-with-c c# mssql ms sql with c c# ms sql sql and c# sql with c# ms sql c# ms sql with c c# ms sql sql and c#",
        "Learn to c# with sql ms sql c# sql server c# database design sql server with c# c sharp c# and sql server c# and ms sql mssql c# c# with mssql",
        "Start Learning n tier architecture csharp microsoft sql server c# oop with oak"
      ],
      "course_content": {
        "What You Will Learn in C# For Complete Beginners Section": [
          "Here is the C# Course Program",
          "No experience on C#? Don`t Worry!",
          "C# .NET Framework",
          "C# Project Files and Course Documents",
          "FAQ regarding C#"
        ],
        "Set Up Visual Studio": [
          "Development Environments",
          "How To Install Visual Studio 2019 On Windows?",
          "How To Install Visual Studion On Mac?",
          "How To Install Visual Studio 2022 On Windows?",
          "Here is The Source Codes For All The Projects",
          "FAQ about sql and c#"
        ],
        "Console Environment": [
          "What is console App?",
          "Functions Used in Console Environment to Write and Read",
          "Read&Radline"
        ],
        "Variables": [
          "What Is Variables?",
          "Type Conversions in Variables"
        ],
        "Windows Form": [
          "Introduction to Windows Form",
          "Review Necessary Windows",
          "Review Form Properties"
        ],
        "Review Objects in Toolbox": [
          "Using MessageBox",
          "Button",
          "Label",
          "Textbox",
          "Groupbox",
          "Radiobutton",
          "Checbox in c sharp",
          "Combobox in c sharp programming",
          "Datetimepicker in c sharp for beginners",
          "Switch and Data Transfer Between Forms"
        ],
        "Operators in c# from scratch": [
          "Using Operators"
        ],
        "Before Starting Know-How": [
          "Using Comment Line",
          "Using Region",
          "Naming Conventions",
          "Using Breakpoint",
          "Keyboard Shortcuts in Visual Studio"
        ],
        "Condition Controls": [
          "If -Else Statement",
          "Switch Case Statement"
        ],
        "Loops": [
          "While DoWhile",
          "For Loop",
          "Jump Statements",
          "c# coding Quiz"
        ]
      },
      "requirements": [
        "No Pre-Requisites - I will explain everything about microsoft sql server with c#",
        "Basic computer knowledge",
        "Computer with access to the internet",
        "C# Visual Studio - You can use any version of Visual Studio",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device.",
        "No prior knowledge of ms sql ( mssql ) is required",
        "Desire to learn C # in Oak Academy",
        "No c# sql programming coding knowledge required!",
        "Determination to learn and patience for complete c#",
        "Desire to learn sql in ms sql mssql c# c# sql sql ms sql server ms sql with c# sql c# sql server c# and sql oak academy c# sql server mssql server sql with c# ms-sql-with-c c# mssql ms sql with c c# ms sql sql and c# sql with c# ms sql c# ms sql with c c# ms sql sql and c# c# with sql ms sql c# sql server c# database design sql server with c# c sharp c# and sql server c# and ms sql mssql c# c# with mssql n tier architecture oak csharp microsoft sql server c# oop"
      ],
      "description": "Hello there,\nWelcome to the Complete \"MS SQL with C#\" course\nLearn C#, MS SQL Server, Ms SQL Backup & Recovery, how to connect C# to SQL, and more with this comprehensive SQL course\nAre you looking for the right language to complete SQL depending on your interests, work demands, or career aspirations?\nIf you really want to develop real-world applications with C #, you need to support it with a database C# and other Net languages can work together with most databases but most commonly pair MS SQL\n\nIn this course, you will learn the programming language and database The most important reason why we want to prepare this course is that other courses only cover half of the event You can connect your C# application to data in a SQL Server database using the NET Framework Data Provider for SQL Server The first step in a C# application is to create an instance of the Server object and to establish its connection to an instance of Microsoft SQL Server\nWhen I started this course I had no knowledge of SQL, but now I can claim I have all the basics to further succeed The lectures were short so you do not lose focus and get bored and were easy to understand The labs/assignments were designed perfectly to test all the knowledge which is gained in the lectures\nNot only will you learn MS SQL, but you will also go beyond and master Backup and Recovery Thanks to this course, you will be one step ahead in your professional life\nOne of the topics we will see in our course OOP, Object-oriented programming, is the foundation of many current application developments approaches Interfaces and principles of object-oriented programming are crucial It does not important whether you want to use C# to build web apps, mobile apps, games, or understanding C# classes if you want to succeed with clean coding, agile, and design patterns, you have to master OOP\nMicrosoft SQL Server is a relational database management system developed by Microsoft which is the database we will be learning during the course As a database server, it is a software product with the primary function of storing and retrieving data as requested by other software applications SQL is the standard language for Relation Database Systems All relational database management systems like SQL Server, MySQL, MS Access, Oracle, Sybase, and others use SQL as the standard database language SQL is used to communicate with a database\nBackup and Recovery are very important for those who want to progress in the database Because one of the most important roles of a database administrator is to constantly protect the integrity of the databases and maintain the ability to recover quickly in case of a failure In light of this, it’s critically important to have a backup-and-recovery strategy in place in order to be ready for an emergency\nIn this course, you will make an excellent introduction to learning C# and SQL with MS Management Studio which allows to manage database and retrieve data from the database with a graphical interface\nWe are going to start to learn from the basics and step by step we will be building our knowledge\nIn this course, we use interactive programming techniques; which means we will be building applications together and furthermore there will have lots of home-works to be done, of course, followed by answers There will be lots of tips and tricks regarding beautiful and efficient coding techniques\nAll my students will have a chance to learn not only the whats but also learn the whys and hows\nWhat you will learn?\nC# Programming and Features of C#\nVisual Studio IDE\nConsole Application\nVariables\nPrimitive Types and Non-Primitive Types\nFlow Control Expressions\nArrays and Lists\nError Handling and Debugging\nFunctions\nReading File\nWriting to File\nDateTime\nIntroduction to Object-Oriented Programming\nClass Structure in Detail\nWindows Forms Applications\nSystem Input Output\nClass Hierarchies\nEvent-Driven Programming\nException Handling\nms sql\nmssql\nc#\nc# sql\nsql\nms sql server\nms sql server\nc# and sql\noak academy\nsql with c#\nc# sql server\nmicrosoft sql\nssrs\nMicrosoft sql server\nTips and Tricks\nHow to install and setup these requirements\nYou will learn the basics of SQL such as data, database, DBMS or SSMS, SQL, tables, and so on\nDatabase normalization,\nManipulating data,\nRetrieving data from the database with different scenarios,\nYou will also learn SQL transactions and transaction commands,\nSchema and schema objects and\nUser privileges, permission commands, and roles\nWhat is the recovery model? What are the differences between the Full, Bulked Logged, and Simple recover model?\nWhat is a full backup? Why does every backup have to start with a full backup?\nWhat is a differential backup? what is it used for?\nWhat is a transaction log backup? what does it do\nHow do we reinstall if the database is completely deleted?\nHow do we return the database to a specific time?\nms sql mssql c# c# sql sql ms sql server ms sql with c# sql c# sql server c# and sql oak academy c# sql server mssql server sql with c# ms-sql-with-c c# mssql ms sql with c c# ms sql sql and c# sql with c# ms sql c# ms sql with c c# ms sql sql and c# c# with sql ms sql c# sql server c# database design sql server with c# c sharp c# and sql server c# and ms sql mssql c# c# with mssql n tier architecture oak csharp microsoft sql server c# oop\nIf you’re doing well with your SQL learning or simply want to kill two birds with one stone, picking up another programming language is a great idea A complementary skill will only increase your programming and database abilities and your employability in the future\nDo not forget!\nThere are SO MANY types of database jobs you can do with SQL and C#alone, and another programming language only adds more strings to your bow\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nWhen you enroll, you will feel our seasoned developers' expertise\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and it is easy to understand for beginners\nThis course starts with the very basics First, you will learn how to install the tools, some terminology Then the show will start and you will learn everything with hands-on practice I'll also teach you the best practices and shortcuts\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the C# and SQL You will have valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more The good news is since the Free and popular tools are used you don’t need to buy any tool or application\n\nWhat is C# ?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its NET initiative The NET framework and NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL C# is open-source and was designed to be simple yet modern, flexible yet powerful, and versatile yet easy to learn and program with Many programming languages in the past were designed for specific purposes C# was developed with business and enterprise needs in mind By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages That includes generics, var types\nWhat is SQL Server?\nSQL Server is a relational database management system or RDBMS created and developed by Microsoft Designed to store and retrieve data for other software applications using the client-server model-- these applications connect to SQL Server through a network or the Internet with multiple applications using the same data One SQL Server instance can also manage one or more relational databases Relational databases store data in tables that can relate to each other For example, data for business customers get stored in one table relating to another table that stores orders Applications that connect to Microsoft SQL Server retrieve, store, and delete data using Structured Query Language (SQL) SQL Server is available for Windows and Linux\nWhat is SQL Server Management Studio?\nSQL Server Management Studio is desktop software designed to connect to Microsoft relational database management systems, including Microsoft SQL Server, Azure SQL Database, and Azure Synapse Analytics SQL Server Management Studio is an integrated database development tool that database architects, database developers, and software engineers can use to access, configure, manage, administer, and develop databases on any one of these database systems It simplifies database management by providing graphical design tools and rich script editors that allow database developers to visualize an entire database or multiple databases from a single application SQL Server Management Studio only runs on the Microsoft Windows operating system but can connect to database instances running on either Windows or Linux\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now\nWe offer full support, answering any questions\nSee you in the MS SQL with C# course!",
      "target_audience": [
        "Anyone who wants to learn how to code with C# programming language, regardless of their current level",
        "Anyone who wants to build object oriented and / or windows forms applications",
        "People who wants to read and write C# code",
        "Anyone who wants to start learning SQL Server Basics",
        "Anyone who wants to better understand how databases work",
        "Anyone who plans a career in Microsoft SQL Server database",
        "BI consultants working on technologies other than SQL Server (Oracle etc ...)",
        "People who are willing to make a career in the corperate world",
        "Anyone who wants to start learning SQL Server Basics (ms sql mssql c# c# sql sql ms sql server ms sql with c# sql c# sql server c# and sql oak academy c# sql server mssql server sql with c# ms-sql-with-c c# mssql ms sql with c c# ms sql sql and c# sql with c# ms sql c# ms sql with c c# ms sql sql and c# c# with sql ms sql c# sql server c# database design sql server with c# c sharp c# and sql server c# and ms sql mssql c# c# with mssql n tier architecture oak csharp microsoft sql server c# oop )"
      ]
    },
    {
      "title": "Angular Front End Development Beginner to Master 2025",
      "url": "https://www.udemy.com/course/angular-front-end-beginner-to-master/",
      "bio": "Learn Front End Web Development with Angular from Mac, Linux or Windows!",
      "objectives": [
        "Understand core concepts of software development in JavaScript that extend beyond any one language and help you",
        "Understand how to read and write code that runs powerful software tools and Single Page Web applications with JavaScript, TypeScript and Angular",
        "Understand Components and how Single Page Applications work, and how to build a Single Page Application in Angular",
        "Deploy Front End Web applications using Firebase",
        "Understand how to use HTML and CSS to design the look and feel of a Web Application",
        "Understand how to make HTTP requests and communicate between components using Angular",
        "Understand Standalone components and Template Control Flow in Angular 17+"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Install List",
          "Hotkeys & Macros",
          "Install - Linux",
          "Install - Windows",
          "Install - MacOS",
          "MacOS: \"Command not found: brew\"",
          "How To Learn More Easily"
        ],
        "HTML Basic": [
          "Theory",
          "Terminal Navigation & Setup",
          "DOCTYPE",
          "Basic HTML Tags Pt1",
          "Basic HTML Tags Pt2",
          "Organizational Tags",
          "Comments",
          "CoursePic.jpg",
          "Images",
          "Anchor (Link)",
          "HTML Basics"
        ],
        "HTML Intermediate": [
          "Theory",
          "Unordered List",
          "Ordered List",
          "Table",
          "Button",
          "Input",
          "Text Area",
          "Title",
          "HTML"
        ],
        "CSS Basic": [
          "Theory",
          "Background Color",
          "Style Sheets",
          "Margins and Padding",
          "Height and Width",
          "Classes",
          "Font Size & Color",
          "Align & Decorate"
        ],
        "CSS Intermediate": [
          "Theory",
          "Display & Position",
          "Flex",
          "Grid",
          "Borders",
          "Shadows",
          "Gradients",
          "Opacity",
          "ImageSize",
          "CursorHover",
          "Media",
          "CSS"
        ],
        "JavaScript Variables": [
          "Theory",
          "Browser Console",
          "Node",
          "Variable Declaration",
          "Variable Declaration - Numeric",
          "Variable Declaration - Non-Numeric Pt1",
          "Variable Declaration - Non-Numeric Pt2",
          "Variable Declaration"
        ],
        "JavaScript - Operators & Conditionals": [
          "Theory",
          "Mathematical Operators",
          "Mathematical Operators",
          "Conditional Operators",
          "Conditional Operators",
          "If Else",
          "Ternary",
          "Switch Case",
          "Conditional Statements",
          "Try Catch"
        ],
        "JavaScript - Data Structure": [
          "Theory",
          "Arrays",
          "Array Edit",
          "Slice & Copy",
          "Split & Join",
          "Arrays",
          "Objects",
          "Object Edit",
          "Object Copy",
          "Stringify & Parse",
          "Objects"
        ],
        "JavaScript - Loops": [
          "Theory",
          "For",
          "For",
          "For Each",
          "For Each",
          "While",
          "While",
          "Do While",
          "Do While",
          "Break",
          "Continue"
        ],
        "JavaScript - Functions": [
          "Theory",
          "Functions",
          "Arrow Functions",
          "IFFE - Self Calling Functions",
          "Arguments",
          "Argument Defaults",
          "Return",
          "Dynamic Arguments",
          "Dynamic Return",
          "Promise",
          "Queues & Stacks",
          "Recursive Functions"
        ]
      },
      "requirements": [
        "Must have basic computer skills, and a desire to become a great developer",
        "Must have a computer to follow the course on",
        "May be easier with some Powershell or Bash shell experience, but we will cover the necessities"
      ],
      "description": "This course is up to date with the latest version of Angular, and has examples of how to handle older version of Angular (2+) in case you wind up working with projects built on older versions.\nAll resources are available to all operating systems - follow along from Windows, Linux or MacOS\n\n\n\"The excitement he shows while teaching is really outstanding and make even complex classes not to be boring. Also, the way he handles examples makes it easy to understand.\"  - Pedro\n\"Clear and concise. I really like how time is taken to explain things in detail. Also how code editor functionality is explained along the way. So far, easily the best tutor, in my opinion.\" - John\n\"The course is very well organized and presented. Dominic Tripodi has an amazingly clear and concise way of presenting the material. It's very easy to follow along. I understand every word!\" - Tom\n\n\nCovering everything from the basic building blocks for absolute beginners, up to building powerful web applications capable of managing user login, permissions and API interactions\n\n\n\n\nLearning Paths:\n\nThe course is split into Modular pieces that can be mixed and matched to fit your learning needs, depending on what you already know and what you want to learn.\nHTML and CSS\nJavaScript and TypeScript\nFront End development with Angular\nBasic API development with Node.js and Express\n\n\n\n\nIf you are new to Front End Development, we will cover the basics or templating and styling with HTML and CSS.\n\n\nIf you are new to programming, or just new to JavaScript, you can get an in depth understanding of basic programming concepts like variable types, data structures, classes and methods.\n\n\nIf you already know JavaScript that's great, you can skip over those basics sections and start learning how to build powerful Single Page Applications with Angular.\n\n\nIf you already build Single Page Applications with Angular and just want to write cleaner code, learn how to decouple logic, or have a deeper understand of Angular or more predictable communication between components and/or more reusable components with more dynamic logic - I highly recommend at least skimming the advanced JavaScript section and then checking out the Angular sections.\n\n\n(If that sounds complicated and confusing, it won't at all by the time you are done with the course)\nIf you are new to software development, congratulations on starting your journey to become a developer! I look forward to seeing you inside!\n\n\n\"The best udemy course I have purchased. The course starts with introductory sections about: HTML, CSS and JavaScript (TypeScript). Then it follows with the Angular sections and few sections about node.js. The instructor is very well spoken and his videos build up on the previous ones, so the student can incrementally understand advanced topics. I enjoyed the 1st lesson in each section where he describes the theory of this specific section. Moreover, when he finishes a lesson, he states what he will teach in the next lesson and how it is connected to the current one.\" - George\n\"As someone new to Angular, I found this course incredibly helpful. The instructor's teaching style is engaging and easy to follow, and the course materials are comprehensive. The real-world examples and exercises gave me the confidence to start building Angular applications on my own. Worth every penny!\" - Amelia\n\"Wow! It is just so fun to listen to the instructor. He makes it fun, interesting, and inspiring. For sure, this is my favorite course in Udemy so far\" - תום\n\"Explained clearly and enthusiastically. Very nice to follow and complete the course.\" (Translated from Dutch) Original - \"Duidelijk en enthousiast toegelicht. Heel fijn om de cursus te volgen en af te maken.\" - Ann\n\"One of the best courses I have ever taken.\" - Amir\n\"For exact understanding for any beginners to have basic knowledge to dive into Angular\" - Khushbu",
      "target_audience": [
        "People who want to start learning how to program",
        "New Programmers who want to learn about Front End Development",
        "Backend API and/or Databases developers looking to learn more about Front End Development",
        "Front End or Full Stack developers who want to learn about Angular"
      ]
    },
    {
      "title": "Full Stack Web Development with Mern Full Stack Project",
      "url": "https://www.udemy.com/course/full-stack-web-development-with-mern-full-stack-project/",
      "bio": "Full Stack Web Development with MERN Stack - ReactJS, React Router, Angular, Nodejs, Express, Mongodb with React Project",
      "objectives": [
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap and React Js with redux, hooks and context for Full Stack Web Development",
        "This course is the best way to learn React JS, NodeJs and Mongo DB",
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "Create a beautiful, responsive landing page for any one with Mern stack (react js, nodejs, express js, mongodb)",
        "You will learn to use basic tags which are used commonly",
        "You will be able to create commonly used user login and registration pages by learning the form structure.",
        "Learn components, props, states and component life cycle methods in React JS",
        "Learn to connect to an external API for building real world mern stack project, react projects, web application",
        "Learn Bootstrap 4 and UIs from scratch with web application, react projects, mern stack projects",
        "Learn how to build single page applications with Mern stack and React JS",
        "Learn to compile Sass in the easiest way possible using a GUI (for web development with react js, redux, express js, mongodb)",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "You will be able to prepare lists in different formats",
        "In the developing world, we will talk about all the details about web design compatible with different screens.",
        "Create reusable React Components",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "How to write Functions, what are the differences between Function Declaration and Function Expression",
        "What is DOM, how to manipulate DOM",
        "How to create objects, how to update them, object methods",
        "CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field.",
        "Some web developers will obtain a degree or certification in the field.",
        "Each aspect of creating websites and applications entails a unique set of skills.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting making it very important language for web developer",
        "JavaScript is a text-based programming language used for client- and server-side development.",
        "Choosing the best JavaScript framework for your web project depends on what you are looking for.",
        "HTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "HTML is not considered a programming language but rather a markup or formatting language.",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "React is a front-end library in Javascript that was developed by Facebook.",
        "React, or React JS, is a front-end Javascript library for building UI components for the web.",
        "There are many reasons why React is popular. One reason is that Facebook developed it."
      ],
      "course_content": {
        "Intro to Full Stack Web Development": [
          "Built a Real-World Website with HTML and CSS",
          "Mern Stack Project Files",
          "General Terms",
          "FAQ about Full stack Web development, Mern Stack, Mern Full Stack Projects",
          "How the Website Works?",
          "What Is IDE?",
          "First Webpage"
        ],
        "HTML Fundamentals": [
          "About the Section",
          "What is HTML?",
          "HTML Document Structure",
          "Text Element",
          "Lists",
          "Images",
          "Hyperlinks",
          "Container Elements",
          "What is Semantic HTML?",
          "Creating Tables with HTML",
          "Colspan & Rowspan",
          "Working With Form Elements",
          "Checkbox",
          "Input type; Radio & File",
          "Select & Option",
          "New Visual Studio Code Extensions",
          "Challenge",
          "Let’s Make the Challenges",
          "Challenge Solutions Continue",
          "Quiz"
        ],
        "CSS Fundamentals": [
          "About the Section",
          "What is CSS",
          "Styling Methods-Inline, Internal and External",
          "Let’s Do Some Styling",
          "Combining Selectors",
          "Style Operation With Class and Id Assignment",
          "Order of Priority in CSS",
          "Working with Colors",
          "Working with Colors on Code",
          "Using Border in CSS",
          "Pseudo-Class in CSS",
          "Styling Hyperlinks With Pseudo-Class",
          "Crome DevTools",
          "Important Advices for CSS",
          "Challenge 1",
          "Box Model",
          "Margin & Padding",
          "Let’s Start Using Margin & Padding",
          "Dimensioning with CSS",
          "Let’s Centre Our Page",
          "Challenge 2",
          "Types of Boxes",
          "Element Positioning with CSS",
          "Use of Fixed and Sticky",
          "Creating Shadow in CSS",
          "Challenge 3",
          "Quiz"
        ],
        "Layout on Webpage": [
          "About the Section",
          "3 Ways to Create Layout on Web Pages",
          "Float",
          "Flexbox",
          "Flexbox Overview",
          "Let’s Keep Using Flexbox",
          "Flex-Wrap",
          "Adding Flexbox to Our Project",
          "Adding Flexbox to Our Project 2",
          "Let’s Change the Page Layout with Flexbox",
          "Introduction to CSS Grid",
          "What Is CSS Grid?",
          "Let’s Continue Examining CSS Grid Features",
          "Other Grid Features",
          "Quiz"
        ],
        "Media Query and CSS Animations": [
          "Section Overview",
          "Media Query and CSS Animations Code Samples",
          "Responsive Menu Making With Media Query",
          "CSS Animations",
          "Making a Slider Menu With Transform",
          "Keyframes",
          "Animation Examples With Keyframes",
          "Quiz"
        ],
        "Portfolio Website": [
          "Portfolio Website",
          "Let’s Start Creating the Sections",
          "Let’s Start With Header Creation",
          "Home Section",
          "About Section",
          "Services Section",
          "Portfolio Section",
          "Contact Section & Footer",
          "Responsive Page Design"
        ],
        "Bootstrap 5 Fundamentals": [
          "Bootstrap 5",
          "How to Integrate Bootstrap Into Applications",
          "Container and Container Fluid",
          "Bootstrap 5 Typography Review",
          "Text Features",
          "Use of Colors",
          "Spacing",
          "Border",
          "Display",
          "Position Relative & Absolute",
          "Position Fixed & Sticky",
          "Sizing",
          "Buttons",
          "Using Images Classes",
          "Other Bootstrap 5 Features",
          "Quiz"
        ],
        "Bootstrap 5 Advanced": [
          "Grid",
          "Using Bootstrap Grid Structure on Different Screen Size",
          "Aligning Columns and Gutters",
          "Let's Start Using Flex with Bootstrap 5",
          "Vertical and Horizontal Alignment in Flex Structure",
          "Other Flexbox Features",
          "List Group",
          "Form Classes",
          "Let's Continue Working with Form Elements",
          "Other Input Features",
          "Creating Tables With Bootstrap 5",
          "Quiz"
        ],
        "Bootstrap Features Working With JavaScript": [
          "Bootstrap Features Working With Javascript",
          "Dropdown",
          "Modal",
          "Carousel",
          "Collapse & Accordion",
          "Quiz"
        ],
        "Bootstrap 5 Project": [
          "Project Presentation",
          "Navbar",
          "Let’s Start Creating Carousel",
          "Let’s Start Creating the Main Section",
          "Creation of Students and Questions Sections",
          "Creation of Contact and Footer Section"
        ]
      },
      "requirements": [
        "No prior knowledge needed for HTML, CSS, Javascript, React, Redux, Hooks, Context, NodeJs, Express, Mongodb",
        "You will be learning Full Stack web development from scratch to master degree",
        "This course will take you from scratch to the advanced level",
        "Computer with access to the internet",
        "Desire to learn javascript",
        "Desire to learn HTML & CSS",
        "Desire to learn React Js",
        "Desire to learn react or react js with redux, hooks and context",
        "Desire to build react applications, mern stack project, web applications from zero to hero",
        "Desire to learn react native, react js with redux, hooks and context",
        "Desire to learn full stack web development with react, react native, html, css, bootstrap",
        "Desire to learn bootstrap for web design, website development",
        "Desire to learn grid css",
        "Desire to learn html, css, bootstrap",
        "Desire to learn mern stack and mern stack project",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Full stack web development, mern stack, mern full stack, mern stack project, react, angular, Nodejs, MongoDB, Express js, full stack project\nHello there,\nWelcome to Full Stack Web Development with Mern Full Stack Project course.\nFull Stack Web Development with MERN - React, Redux, Hooks, Context, Nodejs, Express, MongoDB with React Project\nJavaScript is the number one programming language for internet applications. During our course, you will be informed about the basics of JavaScript in detail and how to solve problems. Here's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code. Full stack web development, mern stack, mern full stack, mern, web development, web application, react, web application development, full stack, mern stack project, web development project, full stack development\nWhether you’re interested in mastering responsive web design, creating WordPress templates using Bootstrap, or integrating Bootstrap with HTML5, and CSS3, Udemy has a top-rated course to help you achieve your goals.\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML.\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work, and is rightfully considered a cornerstone of internet technology.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills.\nThis course will be your gateway to learn web development from scratch.\nThis course will take you from a complete beginner to a master in hours! By the way, you do not need to know anything about this course.\nWe'll be moving rapidly to give you the quickest, yet most thorough website building experience.\nIn this course, we have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an HTML page associated with it and has a start state.\nWith this course, you will improve your Bootstrap experience with HTML5 and CSS3 codes\nThis course will take you from a beginner to a more experienced level. You will learn HTML5, CSS3, Bootstrap 4, Javascript, React JS, Angular, NodeJS,  and Mongo DB step by step with hands-on examples. And then you will be confident in using React JS, and if you ever get stuck, we will be there to help.\nAngular is one of the most popular frameworks for building client apps with HTML, CSS. If you want to establish yourself as a front-end or a full-stack developer, you need to learn Angular.\nNodejs is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser. By learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nFrom Setup to Deploy, this course covers it all! You'll learn all about Components, Directives, Services, Forms, Http Access, Authentication, Optimizing an Angular App with Modules and Offline Compilation and much more - and in the end: You'll learn how to deploy an application!\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS. In this course, we will be teaching React by creating various projects.\nIn this course you will learn;\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nWe will start with local installation and react basics. After that, we will create 5 projects.\nProject 1 – Learn, create react app and JSX with ‘first-app’\nProject 2 – Learn to React props system with ‘blog-posts’ app\nProject 3 – Learn to react components, state, lifecycle methods, async operations, and much more... with the ‘hemisphere’ app\nProject 4 – Handling event handlers, fetching data from an outside API, and showing list of records with ‘image-list’ app\nProject 5 - Routing with React Router and using React Portals to render children outside the DOM hierarchy with the ‘react-router’ app\nBecome fluent in Angular terminologies, such as dependency injection, services, directives, transclusion, and more.\nDesign custom directives and save time and energy with easily reusable components.\nWrite quicker, better Angular code by discovering how AngularJS itself is built.\nRealize the power of dependency injection, and how Angular accomplishes it.\nFully understand the architecture behind an Angular application and how to use it\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nThe best testing framework for NodeJS, Mocha\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS4\nBuilding an extensive backend API with Node.js & Express\nBuilding our frontend to work with the API\nIntegrating React with our backend and creating a great workflow\nGet, Post, Patch and Delete Request using MongoDB\nState management with Redux\nReact Hooks, Async/Await & modern practices\nCreate a CRUD Application with MERN Stack\nHandling Forms\nJWT Authentication\nCreating a build script, securing our keys, and deploy to Heroku using Git\nFull stack web development\nWeb development\nFront end web development\nFull stack web development\nFull stack developer\nfull web development\nHtml css javascript\nWeb developer\nFull stack\nFull stack web development\nWeb development\nFront end web development\nFull stack web development\nFull stack developer\nPhp, Fullstack Web development\nHtml css javascript\nWeb developer\nFull stack\nmern stack\nmern stack project\nHtml CSS bootstrap\nBootstrap WordPress\nBootstrap studio\nmern stack web development\njs react\nreact next js\nreact bootstrap\nreact full stack\nreact\nbootstrap\nreact js\nreact projects\nreact css\nmern stack project\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\n\nNo prior knowledge is needed!\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel our seasoned instructors' expertise.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now\nFull Stack Web Development with Mern Full Stack Project\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5, CSS 3, Bootstrap 4, React JS, Angular, NodeJS and Mongo DB the first step in web development, completely and easily, you are at the right place.",
        "People who are willing to make a career in the Web Development",
        "If you want to building your own website, you should enroll",
        "Anyone who wants to become an React Developer",
        "Students who want to learn how to build fast single page web apps",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone who wants to learn MongoDB",
        "Developers new to backend-side",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "People who want to become web development with html, css, javascript, react, react native",
        "People who want to learn front end web development",
        "People who want to learn backend web development",
        "People who want to learn full stack web development",
        "People who want to learn website development",
        "People who want to become mern stack developer and create real work react projects, mern stack projects, web application"
      ]
    },
    {
      "title": "Beginner's Guide to Elm Programming. Build Web Apps!",
      "url": "https://www.udemy.com/course/beginners-guide-to-elm-programming-build-web-apps/",
      "bio": "A Beginner's Guide to Elm Programming for Aspiring Web App Developers & Entrepreneurs. Build Web Apps from Scratch.",
      "objectives": [
        "Understand the basics of the Elm language",
        "Grasp some key concepts of functional programming",
        "Use Elm's build tools to debug and compile Elm code",
        "Build simple websites and apps using the Elm language"
      ],
      "course_content": {
        "Chapter 1: Introduction and Installation": [
          "Preface",
          "Installing Elm",
          "Need Help Installing?",
          "Elm format in PATH"
        ],
        "Chapter 2: Functions": [
          "Intro to Reply and Type",
          "Boolean Lists Functions",
          "Writing Functions in Elm",
          "Partially Applying Functions",
          "Invoking a Function within Another",
          "Pipe Operator",
          "If Expressions",
          "Tuples",
          "Records",
          "Types of Records",
          "Pattern Matching"
        ],
        "Chapter 3: Attributes": [
          "Writing and Compiling Elm Files",
          "Elm File Example (Intermediate)",
          "Adding Class Attributes",
          "Reactor Intro",
          "Adding Complexity to the Example"
        ],
        "Chapter 4: Architecture": [
          "Introduction to Elm Architecture",
          "Increasing and Decreasing Size",
          "Removing EXCL Marks"
        ],
        "Chapter 5: User Inputs": [
          "User Inputs Example",
          "Rendering Input Styles",
          "Optimizing Project Code"
        ],
        "Chapter 6: Guessing Games": [
          "Creating a Word Guessing Game",
          "Creating Hint Button",
          "Improving Functionality",
          "Changing States",
          "Improving Appearance",
          "Refactoring Code",
          "Creating a Word List",
          "Checking Multiple Words"
        ],
        "Chapter 7: Subscriptions": [
          "Example of the HTML Program Feature in Elm",
          "Keyboard Events"
        ],
        "Chapter 8: Commands": [
          "Building a Coin Flip Web App",
          "Improving App Appearance"
        ],
        "Chapter 9: Web Sockets": [
          "Building a Chat App",
          "Sending Input Text to Multiple Web Tabs",
          "Ideas for App Expansion"
        ],
        "Chapter 10: Conclusion": [
          "Final Thoughts"
        ]
      },
      "requirements": [
        "Basic understanding of HTML, CSS, and JavaScript",
        "Basic command line knowledge to make use of Elm's command line tools",
        "Modern web browser",
        "Text editor (e.g. Sublime Text, Atom, Brackets, VSCode)"
      ],
      "description": "\"This is a great course if you start with ELM. Good tips, about setting up environment. Very simple explanation of a problems you can come across in ELM. I love examples, not just one application but multiple use cases, also thanks for now showing us to do list or counter (because in real life that is what we build ;) all day long).\" - Maciej P.\n\"It's a really great progression through concepts. It feels like you're working through the required thought processes to build up functionality from scratch. I have no doubt that I can follow the same reasoning for new projects and have little trouble making everything work. Also does a great job of showing off the most powerful and useful features of Elm early on, to encourage progression.\" ⭐ ⭐ ⭐ ⭐ ⭐\n-------------------------------------------------------------------------------------------------------------------------------\nDo you want to learn to make web apps? Enroll in Mammoth Interactive's Beginner's Guide to Elm Programming. Build Web Apps!\n\nIn this course, web developer Chris Veillette will teach you how to code in the Elm language to build real websites and apps.\nWhat is Elm?\nElm is a programming language that you can use to build web apps. Elm is user-friendly, which makes it a great place to learn to build web apps.\nElm is a functional language that compiles to JavaScript. It is a separate language from JavaScript, which means you must learn the syntax and language rules of Elm.\nWhat are the advantages of Elm?\nElm allows you to write well-architectured code that is easy to read.\nElm makes front-end development simpler.\nElm provides light operations, which means it involves less fatigue than JavaScript. With JavaScript-heavy apps, a lot of tooling and frameworks can be required to make a simple app. Elm provides a lighter operation by being self-contained.\nElm comes with creative built-in tools, meaning you don't have to download other packages\nElm is easy to understand and use once you learn the language\nThere is a supportive community with an active creator (Evan Czaplicki)\nElm has no runtime exceptions, which can occur in JavaScript. Instead Elm gives you warning messages.\nElm's warning messages are in a readable language\nElm's built-in package manager protects code from minor errors\nAnd more!\nYou can learn to build websites and apps in Elm. Get started with this up-and-coming programming language.\nThe course can be summed up as lots of walkthroughs.\nThis course is full of practical examples. We teach you theory while also building real projects that you can put in your web development portfolio.\n\"Very good introductory course on Elm-lang and functional programming.\"\n\"This course does a great job of presenting the material in small easy to process chunks and the author does a great job explaining everything in a easy to understand way.\"\n\n\nEnroll today to join the Mammoth community",
      "target_audience": [
        "Developers who want to learn about functional programming and Elm"
      ]
    },
    {
      "title": "AWS, JavaScript, React | Deploy Web Apps on the Cloud",
      "url": "https://www.udemy.com/course/aws-javascript-react-deploy-web-apps-on-the-cloud/",
      "bio": "Cloud Computing | Linux Foundations | LAMP Stack | DBMS | Apache | NGINX | AWS IAM | Amazon EC2 | JavaScript | React",
      "objectives": [
        "Foundations of Cloud Computing on AWS and Linode",
        "Cloud Computing Service Models (IaaS, PaaS, SaaS)",
        "Deploying and Configuring a Virtual Instance on Linode and AWS",
        "Secure Remote Administration for Virtual Instances using SSH",
        "Working with SSH Key Pair Authentication",
        "The Foundations of Linux (Maintenance, Directory Commands, User Accounts, Filesystem)",
        "The Foundations of Web Servers (NGINX vs Apache)",
        "Foundations of Databases (SQL vs NoSQL), Database Transaction Standards (ACID vs CAP)",
        "Key Terminology for Full Stack Development and Cloud Administration",
        "Installing and Configuring LAMP Stack on Ubuntu (Linux, Apache, MariaDB, PHP)",
        "Server Security Foundations (Network vs Hosted Firewalls).",
        "Horizontal and Vertical Scaling of a virtual instance on Linode using NodeBalancers",
        "Creating Manual and Automated Server Images and Backups on Linode",
        "Understanding the Cloud Computing Phenomenon as Applicable to AWS",
        "The Characteristics of Cloud Computing as Applicable to AWS",
        "Cloud Deployment Models (Private, Community, Hybrid, VPC)",
        "Foundations of AWS (Registration, Global vs Regional Services, Billing Alerts, MFA)",
        "AWS Identity and Access Management (Mechanics, Users, Groups, Policies, Roles)",
        "Amazon Elastic Compute Cloud (EC2) - (AMIs, EC2 Users, Deployment, Elastic IP, Security Groups, Remote Admin)",
        "Foundations of the Document Object Model (DOM)",
        "Manipulating the DOM",
        "Foundations of JavaScript Coding (Variables, Objects, Functions, Loops, Arrays, Events)",
        "Foundations of ReactJS (Code Pen, JSX, Components, Props, Events, State Hook, Debugging)",
        "Intermediate React (Passing Props, Destrcuting, Styling, Key Property, AI, Conditional Rendering, Deployment)",
        "Building a Fully Customized E-Commerce Site in React",
        "Intermediate React Concepts (JSON Server, Fetch API, React Router, Styled Components, Refactoring, UseContext Hook, UseReducer, Form Validation)"
      ],
      "course_content": {},
      "requirements": [
        "Basic computer skills.",
        "Basic knowledge of markup languages (HTML and CSS).",
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "Welcome to our latest course. Here, you will learn how to deploy fully scalable React web apps on some of the most powerful cloud computing platforms available, including AWS and Linode. The course starts with exploring the foundations of cloud computing where we dive into a comprehensive overview of the three main cloud service models. This includes: Infrastructure as a Service, Platform as a Service, and Software as a Service. From there we offer an in-depth guide to deploying and configuring virtual instances and the foundations of remote server administration and server security using SSH. Students are then introduced to Linux, where we explore various Linux distributions, the Linux filesystem, and essential Linux maintenance and directory commands.\n\nOnce students have a handle on working with Linux, we’ll dive into the foundations of Web Servers. Here, we’ll explore two industry leaders in the server software space including Apache and NGINX. Students will learn the benefits and use cases of each server technology, combined with an in-depth technical analysis of their performance in production environments. From there we’ll explore database management systems, including both SQL and NoSQL databases, coupled with database transaction standards. In this section students gain valuable insights into a variety of different database options available, and the best use case for each depending on the project type and complexity.\n\nWith a firm handle on the theoretical aspects of web servers and DBMSes, we jump into a practical guide to setting up LAMP stack on Ubuntu through terminal for MacOS and PuTTY for Windows. Here we configure Linux with Apache, MariaDB, and PHP. Students will also learn how to upload data to a MariaDB database, and fetch records from within PHP scripts. The course then takes a theoretical and practical deep dive into server security. Here, we explore both network and hosted firewalls. We emphasize the pitfalls of lax server configurations, and provide a step-by-step guide to enabling and setting up UFW for Ubuntu. Students will also learn how to configure custom ports for SSH tunneling as an added layer of security.\n\nThe second half of the course provides a comprehensive guide to Amazon Web Services. We start with demonstrating how to setup, secure, and navigate an AWS account. This includes setting up billing alerts and multi-factor authentication. From there, we take a deep dive into AWS Identity and Access management for enhanced account security, and the management of user accounts for various AWS services. Here we explore IAM User management and permissions, IAM Groups, IAM Policies, and access key rotation. Following the IAM section, we’ll jump into the Amazon Elastic Compute Cloud (EC2) service. In this module students lean to deploy virtual instances on AWS using Amazon Machine Images, Elastic IPs, and Launch Templates. We will also explore IAM roles for EC2, EC2 Security Groups, SSH key pair authentication, and remote administration using both terminal and EC2 Instance connect.\n\nAfter students have a mastery of cloud computing, the next segment explores the development and deployment of interactive web apps using both JavaScript and React. Here we start with JavaScript foundations including the document object model, and DOM manipulation. From there, we hop into JavaScript variables, arithmetic operations, data types, objects, arrays, loops, functions, and events. The JavaScript section concludes with two hands-on projects where students build a background color changer, and photo gallery. After completion of the JavaScript section, students will use their new found skills to build out dynamic front-end UI components using the React JS library. Through a series of hands-on projects, students will build a calculator, Connect-4 Game clone, and a fully customizable e-commerce site. The react modules start from the basics and work up to several intermediate level concepts. This includes: working with code pen, JSX, Functional components, Props, Callbacks, Events, the React State hook, conditional rendering, Fetch API, Refactoring, and much more.\n\nAs you can see this course covers a tremendous bit of ground. Best of all it’s co-authored by Tim Maclachlan - a renowned senior full-stack developer with over 20 years of commercial development experience. As a multi-faceted developer, Tim specializes in algorithmic, analytical and mobile development. To date, he’s written hundreds of applications and worked in a number of industries from commercial aviation and military, to banking and finance. Tim has a genuine passion for teaching others how to become better coders and looks forward to interacting with his students.\n\nWith that said, we hope you’re just as excited about this course as we are, if so - hit that enroll button and let’s get started.",
      "target_audience": [
        "Students interested in the Foundations of Cloud Computing including Cloud Service and Deployment Models",
        "Students interested in working with Powerful Cloud Computing Platforms including AWS and Linode",
        "Students interested in learning the Foundations of Linux and the Ubuntu Linux Distribution",
        "Students interested in installing and configuring LAMP Stack on a remote Virtual Instance",
        "Students interested in the Foundations of Web Server technology including Apache and NGINX",
        "Students interested in the Foundations of Database Management Systems (DBMS), including SQL and NoSQL databases.",
        "Students interested in administering cloud servers using AWS",
        "Students interested in learning about AWS Identity and Access Management (IAM)",
        "Students interested in deploying and configuring Amazon EC2 Instances",
        "Students interested in learning the Foundations of JavaScript Coding & DOM manipulation",
        "Students interested in building interactive front-end UI's using React JS"
      ]
    },
    {
      "title": "Learn React JS and Web API by creating a Full Stack Web App",
      "url": "https://www.udemy.com/course/react-js-and-web-api/",
      "bio": "Practical based approach to learn to build a fullstack app using React JS as frontend and Web API for backend",
      "objectives": [
        "Learn to build a Full Stack Web App using React JS and Web API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Web API": [
          "Install SQL Server and SSMS",
          "Install Visual Studio 2019",
          "Create Database in MS SQL Server",
          "Create Department Table in MS SQL",
          "Create Employee Table in MS SQL",
          "Create Web API project in Visual Studio",
          "Force Web API to output JSON response only",
          "Install Postman client",
          "Create Model Class for our Application",
          "Create Web API Controllers",
          "Implement GET method in Web API",
          "Implement POST method in Web API",
          "Implement PUT method in Web API",
          "Implement DELETE method in Web API",
          "Web API Project Github link"
        ],
        "React JS": [
          "Install Node JS",
          "Install Visual Studio Code",
          "Create React JS Project",
          "Install react-bootstrap",
          "Create React Components",
          "Implement Routing for our React Application",
          "Add Navigation menu",
          "React bootstrap Table",
          "Consume GET method and display Department details",
          "The CORS problem",
          "Modal Pop up using react bootstrap",
          "Add Form Fields",
          "Consume POST method in react js for Departments Table",
          "Refresh react bootstrap table on insertion",
          "Use Snackbar from Material UI for our React JS App",
          "Edit Modal and PUT method for Department",
          "Delete method for Department",
          "GET and DELETE Methods for Employee",
          "Modal and POST for Employee",
          "Dropdown and Datepicker in Form",
          "Modal and PUT method for Employee",
          "React JS project Github link"
        ]
      },
      "requirements": [
        "Basic HTML, CSS and Javascript"
      ],
      "description": "In this course we will learn how to build a Web application from scratch. We will use React JS for front end, Microsoft SQL server for data base and ASP.NET Web API for creating APIs. This is not a complete theoretical guide on React JS but a practical based approach where we will learn to build a Web App using React JS by using some of the most commonly used controls. This course will be regularly updated. Make sure to check out the additional resources section of this course for theoretical/advanced concepts.",
      "target_audience": [
        "Web developers, C# developers, .NET Developers, UI Developers"
      ]
    },
    {
      "title": "11 JavaScript Features Critical to Understand",
      "url": "https://www.udemy.com/course/11-javascript-features-critical-to-understand/",
      "bio": "Important JavaScript Concept and Features Every Developer Should Know",
      "objectives": [
        "Scope",
        "Hoisting",
        "Prototypal Inheritance",
        "Higher Order Functions",
        "Callbacks",
        "Immediately Invoked Function Expressions",
        "Closure",
        "The Module Pattern",
        "An Understanding of the keyword this",
        "Promises"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting the Most Out of this Course"
        ],
        "11 Concepts and Features": [
          "Understanding Scope",
          "The Difference Between var and let",
          "Understanding Hoisting",
          "Objects are Everywhere",
          "Quiz 1",
          "Prototypal Inheritance",
          "Setting the Prototype of an Object",
          "Higher Order Functions",
          "The Essential Callback",
          "Quiz 2",
          "Immediately Invoked Function Expressions (IIFEs)",
          "Understanding Closure",
          "The Module Pattern",
          "Quiz 3",
          "Understanding this",
          "Understanding and Using Promises",
          "Quiz 4"
        ],
        "Conclusion": [
          "Summary",
          "BONUS Lecture!"
        ]
      },
      "requirements": [
        "Basic experience with JavaScript."
      ],
      "description": "If you work with JavaScript at all, you need to understand and be able to work with its most critical features.\nIn this course we focus on 11 of those critical features. Each feature is addressed on its own, but the course is also structured to build on the previously taught features and concepts. We start with some of the most basic features like scope and hoisting, but eventually tackle more complex features like closure and immediately invoked function expressions.\nHere is a list of the features covered in this course:\nUnderstanding scope\nThe difference between var and let\nUnderstanding hoisting\nThe nature of objects in JavaScript\nHigher order function in JavaScript\nCallbacks\nImmediately invoked function expressions (IIFEs)\nUnderstanding closure\nThe module pattern\nUnderstanding this\nUnderstanding and using promises\nThese topics are critical to JavaScript. If you don't completely understand any of these topics or need to brush up on a few of them, this course if for you.\nThis course will also provide you with the code files used in the lectures so you can work with that code on your own. A total of 4 quiz are also included to help you review the concepts taught.\nJump right in and increase your JavaScript knowledge.",
      "target_audience": [
        "Any developer that uses JavaScript."
      ]
    },
    {
      "title": "The Complete SQL For Absolute Beginners Course",
      "url": "https://www.udemy.com/course/sql-for-absolute-beginners/",
      "bio": "Become a master in SQL by learning how to work with databases and building your own queries from scratch, using MYSQL!",
      "objectives": [
        "Manipulate Data using SQL",
        "How to Create Tables",
        "How to Insert Data into Tables",
        "How to Combine Different Tables",
        "How to Build Tables using a practical Case Study"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Materials"
        ],
        "Installing MySQL and Loading the Sakila DataBase": [
          "Installing MySQL Server and Workbench",
          "Installing MySQL On Mac",
          "[Windows] - Starting MYSQL Server from Scratch",
          "Setting up the Sakila Database"
        ],
        "Basic Querying": [
          "Basic Select Statements",
          "Column and Table Aliases",
          "Table Filtering - Simple Filters",
          "Table Filtering - Multiple Filters, AND and OR",
          "Table Filtering - Other Concepts",
          "Creating New Columns - Same Value for all Rows",
          "Creating New Columns - Using Functions and Existing Columns",
          "Creating New Columns - Mathematical Expressions",
          "Query Clauses - Group By",
          "Query Clauses - Having",
          "Query Clauses - Order By",
          "Quiz - Basic Querying",
          "[Case Study] - Basic Querying",
          "[Case Study] - Code Along Solutions",
          "Tutorial on [Coding Exercises]",
          "[Coding Exercise 1] - Basic Querying",
          "[Coding Exercise 2] - Basic Querying",
          "[Coding Exercise 3] - Basic Querying",
          "[Coding Exercise 4] - Basic Querying",
          "[Coding Exercise 5] - Basic Querying"
        ],
        "Data Types": [
          "Data Types - Integers",
          "Data Types - Decimals/Floats",
          "Data Types - Text and Characters",
          "Data Types - Dates",
          "Data Types - Implicit Conversions",
          "Data Types - Explicit Conversions",
          "Quiz - Data Types",
          "[Case Study] - Data Types",
          "[Case Study] - Code Along Solutions",
          "[Coding Exercise 1] - Data Types",
          "[Coding Exercise 2] - Data Types",
          "[Coding Exercise 3] - Data Types"
        ],
        "Creating and Modifying Tables": [
          "Create Database Command",
          "Creating Tables",
          "Inserting Data into a Table",
          "Inserting Multiple Rows and Inserting Into Specific Columns",
          "Common Pitfalls when Inserting Data",
          "Deleting Data and Tables",
          "Alter Table - Changing and Modifying Tables",
          "Quiz - Creating and Modifying Tables",
          "[Case Study] - Creating and Modifying Tables",
          "[Case Study] - Code Along Solutions",
          "Detail on the Udemy Platform Coding Exercises",
          "[Coding Exercise 1] - Creating and Modifying Tables",
          "[Coding Exercise 2] - Creating and Modifying Tables",
          "[Coding Exercise 3] - Creating and Modifying Tables",
          "[Coding Exercise 4] - Creating and Modifying Tables",
          "[Coding Exercise 5] - Creating and Modifying Tables"
        ],
        "Combining Tables": [
          "Table Join Example",
          "Inner Join Explanation",
          "Left and Right Join Explanation",
          "Multiple Key Joins - Composite Key Definition",
          "Multiple Key Joins - Explanation and Syntax",
          "Union and Union All",
          "Quiz - Combining Tables",
          "[Case Study] - Combining Tables",
          "[Case Study] - Code Along Solutions",
          "[Coding Exercise 1] - Combining Tables",
          "[Coding Exercise 2] - Combining Tables",
          "[Coding Exercise 3] - Combining Tables",
          "[Coding Exercise 4] - Combining Tables",
          "[Coding Exercise 5] - Combining Tables"
        ],
        "More on Select Statements": [
          "SubQueries Introduction",
          "More on SubQueries",
          "Combining Insert Into and Select Statements",
          "Insert Into and Select with Multiple Columns",
          "Quiz - More on Select Statements",
          "[Case Study] - More on Select Statements",
          "[Case Study] - Code Along Solutions",
          "[Coding Exercise 1] - More on Select Statements",
          "[Coding Exercise 2] - More on Select Statements",
          "[Coding Exercise 3] - More on Select Statements",
          "[Coding Exercise 4] - More on Select Statements"
        ],
        "Updating Information on Tables": [
          "Update -> Set -> Where Sequence",
          "Updating Tables with Multiple Conditions",
          "Updating Multiple Columns and Where Clause Warning",
          "Quiz - Updating Information on Tables",
          "[Case Study] - Updating Information on Tables",
          "[Case Study] - Code Along Solutions",
          "[Coding Exercise 1] - Updating Information on Tables",
          "[Coding Exercise 2] - Updating Information on Tables",
          "[Coding Exercise 3] - Updating Information on Tables",
          "[Coding Exercise 4] - Updating Information on Tables"
        ],
        "Advanced Filtering": [
          "The NOT Clause",
          "Filtering - Order of Operations",
          "Wildcards",
          "Quiz - Advanced Filtering",
          "[Coding Exercise 1] - Advanced Filtering",
          "[Coding Exercise 2] - Advanced Filtering",
          "[Coding Exercise 3] - Advanced Filtering",
          "[Coding Exercise 4] - Advanced Filtering",
          "[Coding Exercise 5] - Advanced Filtering"
        ],
        "SQL Transactions, Variables and Procedures": [
          "Section Introduction",
          "AutoCommit and Commit",
          "SQL Variables",
          "SQL Transactions and Rollback",
          "SQL Procedures - Part 1 and Select Into Variables",
          "SQL Procedures - Part 2 and Control Flow",
          "SQL Procedures - Part 3 and Arguments",
          "SQL Transactions, Variables and Procedures"
        ]
      },
      "requirements": [
        "Computer with at least 4 GB of RAM",
        "Access to the Internet"
      ],
      "description": "So, you've decided that you want to learn SQL or you want to get familiar with it, but don't know where to start? Or are you a data/business analyst or data scientist that wants to power up your data skills by performing queries with Structured Query Language?\n\n\nThen, this course was designed just for you!\n\n\nThis course was designed to be your first step into the SQL programming world! We will delve deeper into the concepts of SQL queries, understand the MySQL user interface and play around with several datasets. This course contains lectures around the following groups:\nCode along lectures where we will go step-by-step in each instruction, compounding our SQL knowledge.\nTest your knowledge with questions and practical exercises with different levels of difficulty!\nAnalyze real datasets and understand the thought process from question to SQL code solution!\nThis course was designed to be focused on the practical side of coding in SQL - instead of teaching you every possible function out there, we'll learn all the fundamentals slowly and build our knowledge from scratch. We'll use a case study to cement every concept we will learn, so that you can have a hands-on learning process, making it easier to apply the concepts in your projects.\nAt the end of the course you should be able to use SQL to build and manipulate tables. Along the way we will also learn the most important SQL statements such as GROUP BY, INSERT INTO or CREATE TABLE.\n\n\nHere are some examples of things you will be able to do after finishing the course:\nJoin different tables using SQL;\nCreate your own tables with the appropriate structure.\nUse different data types according to their characteristics.\nCreate columns using data available from your existing tables.\nUse subqueries, building complex instructions.\n\n\nJoin thousands of professionals and students in this SQL journey and discover the amazing power of this querying language.\nThis course will be constantly updated based on students feedback.",
      "target_audience": [
        "Data Analysts",
        "Data Scientists",
        "Data Engineers",
        "Full Beginners that want to learn how to work with SQL",
        "Marketing, Finance and Supply Chain Professionals",
        "IT Professionals"
      ]
    },
    {
      "title": "Professional CSS Flexbox",
      "url": "https://www.udemy.com/course/css-flexbox/",
      "bio": "Learn how to build Web and Mobile Application Interfaces for the modern world!",
      "objectives": [
        "Gain a complete professional understanding of Flexbox",
        "Utilize flexbox to solve common layout problems easily.",
        "Create professional user interfaces for web and mobile applications with ease."
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic understanding of HTML and CSS."
      ],
      "description": "Flexbox Is the way to layout websites and web applications in the modern world.\nIn this class you will learn about all the features and properties of Flexbox and how to use them! We will take a hands on approach to discovering all the awesome ways to use Flexbox and by the end of the course you will have a professional understanding of Flexbox and how to use it to layout Websites and Web Applications like a modern CSS guru!\nEach video includes a link to the lesson's code so you can easily follow and code along without needing anything but a web browser.\nTo be successful in this class all you need is a basic understanding of CSS and HTML!\nThe old way of laying out content on the web is on it's last days. Learn how to utilize Flexbox to streamline, simplify, and future-proof your Websites and Mobile Applications!",
      "target_audience": [
        "This course is perfect for anyone that wants to learn how to layout web and mobile applications for the modern world."
      ]
    },
    {
      "title": "Create web app with Angular 12, .NET Core Web API & Mongo DB",
      "url": "https://www.udemy.com/course/create-web-app-with-angular-12-net-core-web-api-mongo-db/",
      "bio": "learn to create a full stack web application from scratch using Mongo DB, .NET Core Web API and Angular 12",
      "objectives": [
        "learn to create a full stack web application from scratch using Mongo DB for the database, .NET Core Web API for the backend, and Angular 12 for the front end."
      ],
      "course_content": {
        "Introduction & Environment Set Up": [
          "Introduction",
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install Mongo DB Compass",
          "Install Node JS"
        ],
        "Backend : .NET Core Web API and Mongo DB": [
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Create Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API"
        ],
        "Frontend : Angular 12": [
          "Create Angular Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Sorting and Filtering",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "basic html, css, javascript and c#"
      ],
      "description": "Hello Everyone, and welcome to this course on Angular 12, .NET Core Web API, Mongo DB  full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n* Mongo DB for the database.\n* .NET Core Web API for the back end web development.\n* And the latest Angular 12 for the front end web development.\n\n\n-We will first start with installing and setting up the environment needed for our database, back end project and front end project.\n-Then we will develop REST API end points using .NET Core Web API.\n-Finally we will be using Angular 12 to design the front end part of our App.\n* You will learn how to create the navigation menu and tables using bootstrap, add routing and navigation to our Angular App, add modal pop up window with drop downs and date pickers, and also add upload profile picture functionality and store it in the backend server. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        ".net, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "Learning ASP.NET Core 2.0 MVC - Beginner to Developer",
      "url": "https://www.udemy.com/course/learning-aspnet-core-mvc-beginner-to-developer/",
      "bio": "Learn ASP.NET Core 2.0 MVC 6 from the ground up, develop custom applications and use Entity Framework Core with LocalDB",
      "objectives": [
        "Learn ASP NET Core MVC from the ground up",
        "Develop your own ASP NET Core MVC applications",
        "Use Entity Framework Core and LocalDB"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "MVC and .NET Core MVC overview": [
          "New solution and mvc overview",
          "Asp Core MVC Overview"
        ],
        "Controllers": [
          "Controllers - New Project and Run Project",
          "How controllers work",
          "How controllers work 2",
          "Passing data to views",
          "Getting Query Strings",
          "Redirecting"
        ],
        "Razor": [
          "Razor - Creating the project and the model",
          "How Razor works",
          "Using conditionals",
          "Collections in Razor"
        ],
        "Routing": [
          "Routing - New Project",
          "Routing basics",
          "Alternative syntax",
          "Static URL segments and route precedence",
          "Getting the third segment",
          "Getting any number of segments",
          "Constraining routes",
          "Attribute routing",
          "Linking to actions",
          "Linking to actions 2",
          "Customizing routes"
        ],
        "Areas": [
          "Areas - New project and Area",
          "How Areas work"
        ],
        "Views": [
          "Views - New project",
          "Strongly typed views",
          "Important view files and folders",
          "Sections",
          "Partial Views"
        ],
        "Form Tag Helpers": [
          "Form Tag Helpers - New project and model",
          "Creating the repository and dependency injection",
          "Index and create views",
          "Form using tag helpers and model binding",
          "Formatting model properties"
        ],
        "Other Tag Helpers": [
          "Other Tag Helpers - New project",
          "Environments",
          "Script tag helpers",
          "CSS files tag helpers"
        ],
        "CRUD Project using Entity Framework Core": [
          "CRUD - New project",
          "Creating the model and the database",
          "Controller and Index view",
          "Details view",
          "Edit view",
          "Edit post",
          "Create",
          "Delete",
          "Adding model validation"
        ]
      },
      "requirements": [
        "You must have Visual Studio 2017 installed on your machine",
        "You should have some C# experience"
      ],
      "description": "The newest and best ASP.NET MVC version is here, and it is Core 2.0.\nLearn it in 3.5 hours!\nThe newest Core version has many changes compared to MVC 5, so take this no-nonsense and to the point course to learn everything you need to know in the shortest amount of time possible.\nThis course teaches you the newest and greatest ASP.NET MVC (Core) from a complete beginner to developer level and how to use Entity Framework Core for database integration as well.\nAll you need is some C# knowledge and Visual Studio 2017 (community edition, it is free).\nLearn everything you need to know in order to develop your own custom ASP.NET Core MVC applications.\nWhat this course covers (among other things):\nControllers\nRazor\nRouting\nAreas\nViews\nTag helpers\nUsing Entity Framework Core\nDatabase integration (LocalDB)\nBower\nBundling & Minifying\nNOTE: If the current asking price is too much for you feel free to message me for a discount!",
      "target_audience": [
        "Anyone who wants to learn ASP .NET Core MVC"
      ]
    },
    {
      "title": "JavaScript 2017: Become Top Rated Web Developer",
      "url": "https://www.udemy.com/course/become-professional-javascript-developer/",
      "bio": "Start learning JavaScript today to build websites in professional way!",
      "objectives": [
        "How to build dynamic websites and web applications using JavaScript",
        "Write clean, modular and robust JavaScript code",
        "Quickly understand and fix issues in existing JavaScript applications",
        "Add interactivity to existing websites and web applications"
      ],
      "course_content": {
        "Introduction to JavaScript": [
          "Introduction",
          "Using your browser to write JavaScript code",
          "Adding JavaScript to website"
        ],
        "Let's Start Coding": [
          "Alerts and prompts in JavaScript",
          "JavaScript Variables",
          "Arrays in JavaScript- part 1",
          "Arrays in JavaScript- part 2",
          "JavaScript Array functions",
          "Objects",
          "JavaScript Functions"
        ],
        "Document Object Model": [
          "Document Object Model (DOM)",
          "How to access the DOM info",
          "Update element styling",
          "DOM event listeners",
          "Element selection plus",
          "New elements creation with JavaScript",
          "JavaScript element children"
        ],
        "Operators, Statements and Loops and Methods": [
          "Dynamic updates",
          "Ternary and logical Operators",
          "Else if Statements",
          "Looping",
          "JavaScript parseInt"
        ],
        "Introduction to JSON and AJAX": [
          "JSON object Aray multiple items",
          "27- Create JSON",
          "AJAX calls",
          "AJAX parse as JavaScript Objects",
          "For in Loop",
          "AJAX - POST to Server",
          "Math Methods",
          "Date and Time in JavaScript",
          "JavaScript Objects",
          "How to send data to server via AJAX"
        ]
      },
      "requirements": [
        "Have any text editor (we will ll use sublime text editor in this course)",
        "Basic CSS and HTML skills will help"
      ],
      "description": "JavaScript is the most popular and also one of the easiest languages to start learning programming.\n\nIt allows you to create dynamic web applications by selecting and handling a different elements on the page. There are a number of programming languages which depend on JavaScript to deliver content to the user.\nThis is an easy-to-use programming language that can be embedded into your web pages. This will enhance the dynamics and interactive features of your web pages by allowing you to perform calculations, check forms, write interactive games, add special effects, customize graphics selections, create security passwords and much more!\n\nThis tutorial will take you step by step through the fundamentals of Javascript:\n\nJavaScript Syntax (Statements, Functions, Operators, Loops, etc)\nJavaScript Objects\nDOM\nHow to create JSON\nAJAX calls\nand much more!\nYou will learn how to write functions, use data from text boxes, create IF-THEN conditionals, program loops, and generally make your web page \"smarter.\"\nUpon completion of this course you'll be able to add a number of cool features to existing web pages to make them dynamic and also create your own JavaScript applications.\nIn this tutorial we'll learn JavaScript from from scratch together and will implement and explain a number of real-life code examples which you'll be able to re-use in your own JavaScript projects.",
      "target_audience": [
        "Students who are interested in building dynamic websites"
      ]
    },
    {
      "title": "Learn to use JSON",
      "url": "https://www.udemy.com/course/learn-to-use-json/",
      "bio": "Use JSON to exchange data between server end code and front end code using AJAX create dynamic JSON file with PHP",
      "objectives": [
        "Use AJAX to request JSON data",
        "format JSON files",
        "access JSON data to use in JavaScript",
        "JavaScript Objects content",
        "create applications using JSON",
        "Create AJAX requests to external files and return data"
      ],
      "course_content": {
        "Introduction to JSON": [
          "JSON Basics course introduction",
          "JSON basics course setup and resources",
          "JSON Basics JSON Schema structure",
          "JSON Basics Object Data",
          "JSON Basics Get JSON data to HTML page",
          "JSON Basics JSON data Array value access",
          "JSON Basics output objects update JSON objects",
          "Source Code and Resoruces",
          "JSON Basics nesting objects in JavaScript"
        ],
        "Using External JSON files via AJAX": [
          "JSON Basics create .json file with data",
          "Example for AJAX to JSON",
          "JSON Basics AJAX call to JSON file to return data as object",
          "JSON Basics output AJAX returned data in JavaScript",
          "JSON Basics AJAX to cross domain JSON files",
          "JSON Basics Cross Domain AJAX JSON requests",
          "Resource to practice AJAX and JSON online",
          "JSON Basics JSON multiple objects within JSON files",
          "JSON Basics looping multiple object items to return on HTML"
        ],
        "Server Side JSON content to AJAX frontend code": [
          "JSON Basics PHP JSON data",
          "JSON Basics PHP arrays encode as JSON data",
          "JSON Basics Dynamic Content from PHP",
          "Source Code PHP JSON examples"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic JavaScript",
        "computer access"
      ],
      "description": "Welcome to our introductory course to using JSON JavaScript object notation\nLearn to use AJAX to connect and bring JSON data into your JavaScript!\nit's a lightweight data interchange format that is quickly becoming the default format for data exchange on internet today!\nJSON is extremely popular in web applications because it's lightweight, designed to be language of independent and easy to read and write transfer data easily between server and client.\nJSON is lightweight, language independent and easy to read and write\nJSON is better than XML and more popular!\nThis course covers creating and using JSON\nthe course of instructor has over 15 years of web development experience and will show you how to use JSON. Experienced using JSON within many applications its a preferred way to exchange data between applications. You'll see why Jason is so popular.\nWhen you start using JSON you are never going to look back.\nEasily exchange data between client and server applications.\nJSON Course covers everything from start to finish to get you using JSON quickly!\nLearn the basics of JSON\nJSON structure data of delivery\nbasics of JavaScript object data\nusing Json data in your HTML pages\nobject data from JSON\nLearn how to access external files\noutput object data and return data\nAccess return data\nthe of looping return data\ncreating Dynamic PHP JSON\ncontact access to PHP Json files\nand a whole lot more\nJSON is a easy to use and built for storing and exchanging data.\nEverything you need to get started using JSON is included but then this course.\nResources, source files and top links are also included.\nLet's get ready to learn JSON and AJAX",
      "target_audience": [
        "application developers",
        "web developers"
      ]
    },
    {
      "title": "Spring Boot 3 Thymeleaf REAL-TIME Web Application - Blog App",
      "url": "https://www.udemy.com/course/spring-boot-thymeleaf-course/",
      "bio": "Learn to Build REAL-TIME Web App using Spring Boot 3, Spring MVC, Thymeleaf, Spring Security 6, Spring Data JPA & MySQL",
      "objectives": [
        "Learn to Build a Web Application Using a Real-Time Industry Standard Approach Using Spring Boot 3 and Thymeleaf.",
        "Learn to Build a Complete Blog Full-Stack Web Application - Spring Boot MVC as Backend and Thymeleaf as Frontend",
        "Learn How Spring Mvc Works and How to Use Spring Mvc to Build a Web Application",
        "Learn How to Use Thymeleaf Attributes, Layouts, Form Handling, Standard Expressions, Etc",
        "Learn Form and Bean Validations Using Hibernate Validator",
        "Learn How to Use Bootstrap CSS 5 Framework for Styling Web Pages.",
        "Learn JPA One to Many and Many to One Mappings",
        "Learn How to Connect Spring Boot Application With MySQL Database",
        "Learn How to Use Three-Layer Architecture - Controller, Service, and Repository/Dao Layers.",
        "Learn How to Create JPA Entities for a Blog Application",
        "Learn How to Create Spring Data JPA Repositories for JPA Entities",
        "Learn How to Secure Web Applications Using Spring Security",
        "Learn How to Use Spring Security’s Authentication and Authorization",
        "Learn How to Implement Registration, Login and Logout Features",
        "Learn to implement Filter/Search Feature",
        "Learn to Create a Custom Mapper to Convert Entity to DTO and Vice Versa",
        "Learn How to Deploy Spring Boot MVC Web Application to AWS Cloud"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction - What We'll Build In This Course",
          "Understanding Project High Level Requirements",
          "Download Source Code",
          "Download Class Notes in PDF"
        ],
        "Spring MVC Introduction": [
          "What is Spring MVC?",
          "What is DispatcherServlet?",
          "Spring MVC Components",
          "How Spring MVC Works Internally",
          "Spring Boot Web MVC Architecture (Three - Layer Architecture)"
        ],
        "Learn Thymeleaf Fundamentals": [
          "What is Thymeleaf?",
          "How Thymeleaf Engine Work?",
          "Create Spring Boot Project and Integrate Thymeleaf",
          "Spring Boot Auto Configuration for Thymeleaf",
          "Thymeleaf Spring Boot Hello World Example",
          "Thymeleaf Variable Expressions",
          "Thymeleaf Selection Expressions",
          "Thymeleaf Message Expressions",
          "Thymeleaf Link (URL) Expressions",
          "Thymeleaf Fragment Expressions",
          "Thymeleaf Attribute - th:text",
          "Thymeleaf Looping or Iteration - th:each Attribute",
          "Thymeleaf Looping or Iteration - th:each Attribute Status Variable",
          "Thymeleaf Attribute - th:if and th:unless",
          "Thymeleaf Attribute - th:switch and th:case",
          "Form Handling in Thymeleaf - Overview",
          "Form Handling in Thymeleaf - Create Handler Method to Return Register Page",
          "Form Handling in Thymeleaf - Design User Registration Form",
          "Form Handling in Thymeleaf - Display User Registration Form Data"
        ],
        "Create and Setup Spring Boot Blog Project": [
          "Create and Setup Spring Boot Project in IntelliJ",
          "Using Lombok in IntelliJ IDEA (Resolved Lombok Related Issues in IntelliJ IDEA)",
          "Understanding spring-boot-starter-thymeleaf Dependency",
          "Configure MySQL Database in Spring Boot App",
          "Create Standard Packaging Structure",
          "Create Post JPA Entity",
          "Create PostRepository Interface",
          "Create PostDto",
          "Create PostMapper",
          "Download Source Code of this Section"
        ],
        "Implement List Posts Feature [ADMIN]": [
          "Implement List Posts Feature - Overview",
          "Create Service Layer for List Posts Feature",
          "Create Controller Layer for List Posts Feature",
          "Create Thymeleaf Template to Display List of Posts",
          "Add Header and Footer to Thymeleaf Template HTML Page",
          "Include Header, Navbar, and Footer as Fragments",
          "Download Source Code of this Section"
        ],
        "Implement Create Post Feature [ADMIN]": [
          "Implement Create Post Feature - Overview",
          "Create Handler Method to Handle Create Post Request",
          "Create Post Form Handling",
          "Create Handler Method to Save Post",
          "Adding Validation to Create Post Form",
          "Adding jQuery CKEditor to Crete Post Form",
          "Download Source Code of this Section"
        ],
        "Implement Update Post Feature [ADMIN]": [
          "Implement Update Post Feature -Overview",
          "Create Handler Method for Edit Post Request",
          "Create Thymeleaf Template for Edit Post",
          "Create Handler Method to Update Edited Post Data",
          "Download Source Code of this Section"
        ],
        "Implement Delete Post Feature [ADMIN]": [
          "Implement Delete Post Feature Step by Step",
          "Download Source Code of this Section"
        ],
        "Implement View Post Feature [ADMIN]": [
          "Implement View Post Feature - Overview",
          "Create Handler Method to Handle View Post Request",
          "Create Thymeleaf Template for View Post",
          "Download Source Code of this Section"
        ],
        "Implement Blog Search Posts Feature [ADMIN]": [
          "Search Blog Posts Feature Overview",
          "Implement Backend for Search Blog Posts Feature",
          "Implement Frontend for Search Blog Post Feature",
          "Quickly Refactor UI Code",
          "Download Source Code of this Section"
        ]
      },
      "requirements": [
        "Java experience needed",
        "No Thymeleaf experience needed. I will teach everything you need to know about Thymeleaf to build Web Apps",
        "Have a basic understanding of Spring Boot"
      ],
      "description": "In this course, you will learn how to build a real-time complete blog application step by step using Spring Boot 3, Spring MVC, Thymeleaf, Spring Security 6, Spring Data JPA, and MySQL database.\n\n\nIn this course, we will be using Spring Boot 3, Spring Framework 6, Spring Security 6 (no deprecated APIs/classes), and Thymeleaf 3 - The latest versions as of now.\n\n\nI have added a Thymeleaf crash course with 20+ lectures so if you are new to Thymeleaf then first watch the Thymeleaf crash course and then build a Blog application.\n\n\nNote: This is the project development course so you need to have a basic understanding of Spring Boot, Spring Security, Spring Data JPA, and MySQL database\n\n\nWhat you will learn?\n- Learn to build a web application using a real-time industry standard approach using Spring boot 3 and Thymeleaf.\n- Learn to build a complete blog full-stack web application - Spring Boot MVC for backend and Thymeleaf for Frontend.\n- Learn how to use Spring MVC to build a web application\n- Learn how to use Thymeleaf attributes, layouts, form handling, standard expressions, etc\n- Learn Form and Bean Validations using Hibernate Validator\n- Learn how to use Bootstrap CSS 5 Framework for styling web pages.\n- Learn how to connect Spring boot application with MySQL database\n- Learn how to use three-layer architecture - controller, service, and repository/DAO layers.\n- Learn how to create JPA entities for a Blog application\n- Learn how to create Spring Data JPA repositories for JPA Entities\n- Learn how to secure Web applications using Spring Security\n- Learn how to use Spring Security's Authentication and Authorization\n- Learn how to implement Registration, Login, and Logout features\n- Learn to implement Filter/Search Feature\n- Learn to create a custom Mapper to convert Entity to DTO and vice versa\n\n\nWhat is Spring Boot?\nSpring Boot is basically an extension of the Spring framework which eliminated the boilerplate configurations required for setting up a Spring application.\nSpring Boot is an opinionated framework that helps developers build Spring-based applications quickly and easily. The main goal of Spring Boot is to quickly create Spring-based applications without requiring developers to write the same boilerplate configuration again and again.\n\n\nWhat is Thymeleaf?\nThymeleaf is a modern server-side Java template engine for both web and standalone environments, capable of processing HTML, XML, JavaScript, CSS, and even plain text.\nThe main goal of Thymeleaf is to provide an elegant and highly-maintainable way of creating templates.\nIt's commonly used to generate HTML views for web applications.\nThymeleaf is a very popular choice for building UI so we will be using Thymeleaf to build the view layer in the Spring MVC web application (Blog App).\n\n\nTechnologies and Tools Used:\n- Java 17\n- Spring Boot 3\n- Spring Framework 6\n- Spring MVC 6\n- Thymeleaf\n- Bootstrap CSS 5 Framework\n- Spring Security 6\n- Spring Data JPA\n- Hibernate Framework 6\n- MySQL Database\n- Maven\n- IntelliJ IDEA\n- AWS\n\n\nSample amazing feedback from students on this course:\nDhirendra Singh:\n\"Ramesh is always a NICE teacher........\"\n\n\nStefan Petkov:\n\"Very well structured course. Understandable and well explained the basic concepts in Spring Framework and Thymeleaf. Good job Ramesh!\"\n\n\nTuan Anh Do:\n\"Great course, the instructor is also enthusiastic to answer, some practical problems have been solved in the lesson\"\n\n\nAdnan Alasow:\n\"The instructor effectively communicates in a clear and simplified manner that enables a beginner such as myself to comprehend the material.\"\n\n\nDevin Berkani:\n\"Ramesh is simply the best instructor around when it comes to all things Java and Spring. The course was structured in such a way that I was able to complete a full-fledged CRUD application by the end of it and actually understand WHY it works as opposed to just mindlessly typing code alongside someone in a video (which was unfortunately my experience with many other Udemy courses before I found Ramesh). I feel more confident and comfortable with Spring Boot than I ever thought I could after such a short amount of time. One of the things that impressed me the most was how quick Ramesh was with his responses. Whenever I had a question, he was there to answer it in a timely manner. I felt like I was his only student, even though there were probably hundreds of others in the class. I am so grateful for Ramesh's expertise and can't wait to start his REST API course next! This course deserves more than a 5-star rating, but that's all I can give, so that's what it gets.\"\n\n\nFRANCISCO ERICK CARMONA GARCIA:\n\"This course teaches you all related to Thymelead plus Spring boot security, how to create project well structured, practical CSS Bootstrap, Relational Database, JPA. Explanation is clear from the instructor.\"\n\n\nCheck out all the reviews/ratings for this course in the Reviews section of this course.",
      "target_audience": [
        "This course is for someone who want to learn how to develop a real-time web application using Spring boot and Thymeleaf",
        "If you have requirement to develop a Spring MVC web application in your company/organization then you can take this course for your reference."
      ]
    },
    {
      "title": "Learn MeteorJS By Building 10 Real World Projects",
      "url": "https://www.udemy.com/course/learn-meteorjs-by-building-10-real-world-projects/",
      "bio": "Its a Complete Course to Learn MeteorJS Step by Step Through The Complete Process of Building 10 Real World Projects.",
      "objectives": [
        "Use Meteor Framework to Build Web Solutions",
        "Build apps which work on both mobile and web using single code base",
        "Understand the MEAN stack technologies",
        "Learn core concepts of JavaScript based framework"
      ],
      "course_content": {
        "Course Intro": [
          "Course Intro"
        ],
        "myTodos App": [
          "Project Intro",
          "Get Started With Meteor",
          "Displaying Todos",
          "Adding, Updating & Deleteing Todos",
          "User Accounts & Methods",
          "Subscribe & Publish",
          "Deploying an App",
          "Chapter 1 Quiz"
        ],
        "Microposts": [
          "Project Intro",
          "App Setup & Routing",
          "Building the UI",
          "User Accounts Creation",
          "User Accounts Implementation",
          "Display Posts",
          "Creating Posts",
          "Securing Our App",
          "Chapter 2 Quiz"
        ],
        "FAQ Component": [
          "Project Intro",
          "Packages & Router",
          "Accordion UI",
          "Display FAQ in Accordion",
          "Houston Admin Panel",
          "Chapter 3 Quiz"
        ],
        "SpatIt Product Reviews": [
          "Project Intro",
          "Files & Base Layout Creation",
          "Files & Base Layout Implementation",
          "Reading Products & Categories",
          "Add Products - Basics",
          "Add Products - Implementation",
          "Product Display",
          "Product Reviews - Basics",
          "Product Reviews - Implementation",
          "Accounts & Security",
          "Chapter 4 Quiz"
        ],
        "Custom Login System": [
          "Project Intro",
          "Login & Register UI Basics",
          "Login & Register UI Implementation",
          "User Registration & Validation",
          "User Login",
          "Dashboard & Access Control",
          "Chapter 5 Quiz"
        ],
        "Helptickets": [
          "Project Intro",
          "Files & Layout",
          "Custom Login System - Design",
          "Custom Login System - Implementation",
          "Adding & Listing Tickets",
          "Ticket Page & Reply",
          "Staff & Departments - Design",
          "Staff & Departments - Implementation",
          "Chapter 6 Quiz"
        ],
        "WebPlans": [
          "Project Intro",
          "Meteor Skeleton Setup",
          "Meteor Skeleton Setup - Final steps",
          "Default Admin User",
          "Plans CRUD",
          "Plans CRUD - Implementation",
          "Subscriber Functions",
          "Subscriber Functions - Implementation",
          "Chapter 7 Quiz"
        ],
        "Codefolio": [
          "Project Intro",
          "Integrating the Template",
          "Integrating the Template - Implementation",
          "Inner & Admin Page Markup",
          "Admin Login Functions",
          "Admin Login Functions - Final Implementation",
          "Blog Post CRUD",
          "Blog Post CRUD - Implementation",
          "Projects CRUD - Design",
          "Projects CRUD - Implementation",
          "Frontend Blog Posts",
          "Frontend Project Pages",
          "Chapter 8 Quiz"
        ],
        "PhotoStory": [
          "Project Intro",
          "Getting Started",
          "Accounts & Dropzone Upload",
          "Image Feed Display",
          "Adding Image Info",
          "Adding Image Info - Final Steps",
          "Methods and Publication",
          "Methods and Publication - Final Steps",
          "Chapter 9 Quiz"
        ]
      },
      "requirements": [
        "You must know JavaScript along with basic HTML and CSS"
      ],
      "description": "Applications have significantly changed the way we function, allowing us to simplify even the toughest things in life. So, to simplify the process of building apps, Meteor JS was introduced.\nWhat is Meteor JS?\nMeteor JS is an open-source full stack JavaScript app development tool that allows developers to quickly create complex web and mobile apps. The framework, itself has been designed with simplicity and efficiency in mind, making it easy enough for a newbie to learn but powerful enough for even the most experienced developers.\nMeteor JS is based on Node JS and is also capable of producing cross-platform (web, Android, iOS) coding. As framework easily pairs up with MongoDB for back-end performance, as it is built on the MEAN stack. It uses Distributed Data Protocol and publish–subscribe pattern to automatically transmit data changes to the clients, without needing the developer to write any synchronization coding.\nMeteor JS is simple and easy to understand, and all you need to get started with this amazing framework is an understanding of JavaScript, HTML and CSS.\nMeteor JS includes components such as Command Line Tool, Server, Communication Layer, Browser and Cordova.\nThere are a few great reasons for using Meteor JS such as:\nAll apps are built in real-time by default.\nYou only need to know how to write in JavaScript, so you don’t have to learn any additional languages\nGreat for rapid application development\nSingle codebase can be used to develop web as well as mobile apps\nLightweight libraries that can easily handle HTTP, client interactions and databases.\nYou can learn this and so much more in our Meteor JS tutorial course. However, don’t resort to textbook theory or lengthy boring lectures to learn how Meteor can change your development life.\nThis course will teach you the theory behind and tech and also how to practically use this framework in this project based course. You will learn how to build 10 amazing projects from scratch using Meteor JS and related technologies.\nProject 1 – My ToDo App – Create a functional To Do app that will teach you how to build the UI and also create and display posts.\nProject 2 – Microposts – Create small mini posts and learn how to create and display these posts\nProject 3 – FAQ Component – Create a FAQ and also how to use the Accordion UI and the Houston Admin Panel\nProject 4 – SpatIt Product Reviews – Create an app where users can log in, pick a category, add a product and allow other users to add reviews and comments.\nProject 5 – Custom Login System – Create a login system from scratch including designing the UI and a Dashboard and control panel.\nProject 6 – Helptickets – Create a support ticket system, where customers can log in and create tickets while staff can reply to the tickets.\nProject 7 – WebPlans – Learn how to build a simple subscription login website, where we can add plans and users can then subscribe to those plans.\nProject 8 – Codefolio – Create a project showcase operation for a designer or photographer. A user will be allowed to log in upload the projects, which will then be displayed in the frontend.\nProject 9 – PhotoStory – Learn a drag and drop application for adding photos for upload. Users will also be allowed to add a title and a short story with the image.\nProject 10 – TechMeetups App – An application where users can search and post tech meetups.\nWith so much packed in this vast framework, it is no wonder a lot of developers are turning to this technology for all their app development needs. What’s stopping you from integrating this amazing technology in your life?",
      "target_audience": [
        "Students who want to develop cross platform apps using meteor"
      ]
    },
    {
      "title": "Express.js Node.js & MongoDB",
      "url": "https://www.udemy.com/course/expressjs-node-mongodb/",
      "bio": "Fast development never been easy",
      "objectives": [
        "Connect to MongoDB",
        "HTTP verbs",
        "Serve static content from server",
        "Build API for clients",
        "Build applications with Express",
        "Use Template engines",
        "Express Middleware",
        "Spin up databases running on the cloud"
      ],
      "course_content": {
        "Introduction": [
          "What is Node and Express",
          "Environment Setup (Install Node.js)",
          "Running your first Node.js script",
          "Bootstrap project",
          "Node.js & ES6",
          "Nodemon"
        ],
        "Getting started with Express": [
          "Setting up Express",
          "Create your first Express Route",
          "Serving JSON to Client",
          "Handling POST, PUT, DELETE requests",
          "Postman",
          "Understanding HTTP Verbs/Methods"
        ],
        "Routing and Express": [
          "Path parameters",
          "Route handlers",
          "Express router",
          "Router param"
        ],
        "Middlewares": [
          "What is a middleware ?",
          "Logger middleware",
          "More Middlewares"
        ],
        "Advanced Topics": [
          "Body parser",
          "Request Body",
          "Serving static content",
          "Template Engines",
          "TLS, SSL & HTTPS"
        ],
        "MongoDB": [
          "Mongo DB as a Service with MLab",
          "Creating database on the cloud (AWS)",
          "Connecting to MongoDB from Express with Mongoose",
          "Schema and Models",
          "Saving documents",
          "Fetching documents",
          "Fetching documents by ID",
          "Updating documents in MongoDB",
          "Deleting documents",
          "Mongoose API"
        ],
        "Next steps": [
          "Next steps"
        ]
      },
      "requirements": [
        "Know the basics of Javascript",
        "Be able to use an IDE such as Atom, Sublime, Brackets, VSCode..."
      ],
      "description": "Express is the most popular framework for Node.js. It allows you to spin up a web server in just about 3 lines of code. Express framework makes it easy to building web applications and api's for clients very fast. Even better when you can combine an entire application front to backend just using one single programming language 'Javascript'.\nCompanies such as Uber, Accenture, IBM and so on, use express to drive their business through technology.\nThis course will teach you the core concepts you need start building web applications and backend services.\nYou will learn how to:\nCreate API'S\nUnderstand core concepts about Express\nMiddlewares\nServe static content\nHTTP Verbs\nTemplate Engines\nMongoDB running on the cloud (AWS) through MLAB\nSee you shortly",
      "target_audience": [
        "Someone who want to learn MongoDB",
        "Someone who want to build API's for clients",
        "Someone who wants to learn the process of backend applications"
      ]
    },
    {
      "title": "Introduction to Domain Names & Web Hosting(Free Domain Name)",
      "url": "https://www.udemy.com/course/free-3-domain-names/",
      "bio": "Learn how Domain Names Work and Types of Web Hosting for any Web Development Project (Free three Domain names)",
      "objectives": [
        "How Domain Names Work",
        "The Role of Domain Registrars",
        "How to Register a Domain Name",
        "Types of Domains (TLD, CCTLD)",
        "How to conduct a WHOIS Search",
        "The Role of ICANN",
        "How to Register a domain using GoDaddy",
        "Domain Name Server Administration",
        "How to Administer a domain name using Godaddy/Namecheap",
        "Setting up Domain Name Privacy, Auto-Renewal, Domain Forwarding",
        "Types of Web Hosting",
        "Case Analysis - Shared, Virtual Private, Dedicated, Cloud Hosting",
        "Assessing Scalability and Resource Requirements"
      ],
      "course_content": {
        "Domain Names": [
          "Preview",
          "Introduction to Domain Names",
          "Domain Name Registrars",
          "Domain Registration",
          "Registration & Privacy Protection"
        ],
        "Free Domain Registration": [
          "Lecture 1",
          "Lecture 2",
          "Lecture 3"
        ],
        "Types of Web Hosting": [
          "Web Hosting Packages Overview",
          "Shared Hosting",
          "Dedicated Hosting",
          "VPS Hosting",
          "Cloud Hosting & Case Study"
        ]
      },
      "requirements": [
        "Basic Computer Skills",
        "Free time"
      ],
      "description": "Domain Names Section:\nWe provide an overview of the domain name registration process. This includes the role of registrars and TLD (Top Level Domain) administration by ICANN. ccTLD's (Country Code Top Level Domains) are also explored.\nStudents will gain hands-on experience with the registration process using popular domain registrars such as GoDaddy/Namecheap. We will provide a comparison of different registrars and register a sample domain name using GoDaddy/Namecheap. Other topics of discussion will include: domain name privacy and administration, auto-renewal, domain forwarding, and name server assignment.\n\nWeb Hosting Section:\n\nWe conduct an in-depth case analysis of web hosting solutions including: Shared, Virtual Private, Dedicated and Cloud Hosting.\nWe provide an overview of various packages offered by different web hosting companies and weigh the pros and cons of each one.\nStudents are also introduced to the importance of web server scalability and the advantages of cloud hosting over traditional hosting services. We also examine the infrastructure requirements of popular, resource intensive applications such as Netflix and Facebook to emphasize the importance of avoiding costly mistakes in the initial stages of development.\n*Free Domain name Registration\nIf you are a student and have a valid Student ID, then I will show you how you can get access to 3 Domain names for free plus 50+ Developer tools worth upto $1000  and in this course we will show you how to register for the same.",
      "target_audience": [
        "Students interested in starting a Website",
        "Students interested in hosting a Web Application using different Hosting Packages",
        "Students interested in registering a Domain name",
        "Students interested in gaining knowledge about web development",
        "Developer Tools",
        "Web Hosting"
      ]
    },
    {
      "title": "So you think you know JavaScript?",
      "url": "https://www.udemy.com/course/so-you-think-you-know-javascript-1/",
      "bio": "What every intermediate and advanced developer needs to know!",
      "objectives": [
        "Use closures and callbacks effectively",
        "Understand how JavaScript variable scoping works",
        "Be able top create prototype inheritance chains",
        "No longer struggle with the meaning of the \"this\" keyword"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing live-server",
          "Building Our Workspace"
        ],
        "Scopes, Callbacks and Closures": [
          "Introduction",
          "The Global Scope",
          "Creating Scopes",
          "Immediately-Invoked Function Expression (IIFE)",
          "Hoisting",
          "Static/Lexical vs Dynamic Scope",
          "Closures - Part 1",
          "Closures - Part 2",
          "ES2015 Block Scoping"
        ],
        "What is “this”?": [
          "Introduction to This - Part 1",
          "Introduction to This - Part 2",
          "Changing This - bind/call/apply",
          "Bind - Final Words",
          "ES2015 Arrow Functions",
          "Conclusion"
        ],
        "Prototypes": [
          "Object Prototypes - Part 1",
          "Object Prototypes - Part 2",
          "Function Prototypes",
          "Object.create",
          "Prototypal Inheritance",
          "ES2015 Classes"
        ],
        "The End": [
          "Conclusion"
        ]
      },
      "requirements": [
        "You must have a basic understanding of your Operating System's command line",
        "You must have a beginner to intermediate understanding of the JavaScript language"
      ],
      "description": "Do you want to dive into three of the trickiest aspects of the JavaScript language? From beginner to intermediate - this course will bring you up to speed on some of the must have knowledge of being able to write in it effectively, while demystifying some its most often-misunderstood constructs!\nIn this course, you will learn all about scopes, “this”, and prototypes! Training content often doesn’t dive into the specifics of the nature of these “advanced” features. However, it is my belief that this is necessary knowledge to be an effective JavaScript programmer!\n\nMy goal at the end of this course is that variable scoping, the usage of the “this” keyword, and the creation and use of prototypes is well understood from a ground up perspective without compromise. Simply by having a firm grasp on these aspects of the language, many issues that even years-long JavaScript developers face can be resolved easily!\nWe will discuss, in depth:\nScopes and Closures\nImmediately-Invoked Function Expressions (IIFEs)\nHoisting\nThe “this” keyword\nThe call/apply/bind functions\nThe nature of the magical “new” keyword\nObject and function prototypes\nAnd more!",
      "target_audience": [
        "This course is for beginner to intermediate JavaScript developers who want to get a better handle on scopes, closures, prototypes and the \"this\" keyword",
        "This is NOT an introduction to JavaScript"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/jquery-ajax-course/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "The Complete Salesforce Administrator with Real time Project",
      "url": "https://www.udemy.com/course/the-complete-salesforce-administrator-with-project/",
      "bio": "Salesforce Admin for beginner to advance level",
      "objectives": [
        "Understand all of the core concepts of Salesforce Administrator",
        "Administer Salesforce Like a Pro",
        "Use Salesforce Lightning and Classic"
      ],
      "course_content": {},
      "requirements": [
        "This course is designed for beginners to advance level.",
        "We will start from signing of salesforce account to advance concept of salesforce administrator.",
        "You only need your eagerness to learn and add feather to your career for next role."
      ],
      "description": "This is a Project Based Training Where we will map all project requirement with salessforce concept and how to implement in system.\nYou will become a expert  Salesforce Admin capable of handling a Salesforce org independently!!\nlive implementation of all concept and thereby you will have lot of hands on to practice\nThis tutorial implemented with both classic and lightning UI.\nCourse is completely designed for beginner level to advance level\nYou can start your salesforce career or can be expert in few hours of real time salesforce Admin learning\nWe have covered Salesforce Account creation and how to know more about setup page.\ncreating of different application in salesforce platform\nObject and database understanding\nAssociation of  objects using relationships\nValidating user inputs\nAutomating business process using various tools like workflow approval process\nConfiguring page layout and record types\ndeep understanding of security and sharing mechanism in salesforce\nsalesforce org, user setup. groups , queue and many more admin handy stuffs covered in details\nGain an in-depth understanding of the these knowledge areas of the Administrator\nLearn how to administer the Salesforce Platform in the new user interface - Lightning Experience\nFamiliar with all of salesforce existing tools and build your own applications in Salesforce\nhave knowledge of lightning and classic\n\n\nWHAT DO OTHER STUDENTS SAY?\nGood content with clear explanation. Recommend for beginners. : Sandeep Mishra\nIt was well drafted and explained. Thank you. Keep doing the good work : Pratibha Sharma\nAll Session well expounded and follow through patterns to deliver the project. : TY Gideon\nExcellent Course to learn hands on with the real time project . The instructor is a real deal expert in this field! Many different topics explained in details step by step with lots of time spend in sub-section of the course which really helps the newbies to learn and master the LWC development. Love this Course! : Jay Kumar\nIt was an excellent learning session with good illustrations. The subject matter was covered in good length and well communicated! : Raj Gupta",
      "target_audience": [
        "Beginner to advance level of salesforce admin curious about salesforce learning"
      ]
    },
    {
      "title": "The complete guide to building a full-stack app with Next.js",
      "url": "https://www.udemy.com/course/the-complete-guide-to-building-a-full-stack-app-with-nextjs/",
      "bio": "How to build a complete full-stack real-world app using NextJS, Prisma ORM, TailwindCSS, NextUI and NextAuth",
      "objectives": [
        "Set up and configure authentication in a NextJS app using NextAuth v5",
        "Use Prisma ORM in a NextJS app to query and update a database",
        "Use NextUI components to build a good looking User Interface",
        "Use TailwindCSS to style elements in a NextJS application",
        "Fetching data with NextJS server actions and the app router",
        "Learn to build a real-world complete full-stack application using NextJS!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Setting up the developer environment",
          "Course assets and source code",
          "Getting help",
          "Where to start - 2 Options"
        ],
        "NextJS Introduction and basics": [
          "Introduction to Section 2",
          "Creating the NextJS project",
          "What is in the project",
          "Installing HeroUI (formally NextUI) and React icons",
          "Routing in NextJS",
          "Adding a Nav bar to the app",
          "Creating additional routes",
          "Making the links active",
          "Saving our code into source control",
          "Summary of Section 2"
        ],
        "Authentication Part One": [
          "Introduction to Section 3",
          "Creating a login form",
          "React hook form introduction",
          "Validation with Zod",
          "Creating the register form",
          "What is NextAuth?",
          "What is Prisma?",
          "Setting up NextAuth and Prisma ORM",
          "Creating the Database",
          "Configuring Prisma in our app",
          "Registering a new user",
          "Handling errors in the form",
          "Handling errors in the form Part 2",
          "Signing in users",
          "Signing in users Part 2",
          "Adding notification toasts to the app",
          "Getting the session data",
          "Using NextAuth callbacks",
          "Adding a dropdown menu to the Nav bar",
          "Adding a dropdown menu to the Nav bar Part 2",
          "Protecting routes using Middleware",
          "Optional: Using Docker for Postgres",
          "Summary of Section 3"
        ],
        "Building the UI": [
          "Introduction to Section 4",
          "Updating the Prisma schema",
          "Seeding data into the Database",
          "Fetching data from the Database using server actions",
          "Creating cards for the members",
          "Styling the member cards",
          "Using dynamic routes in NextJS",
          "Adding a Sidebar for the Member detailed page",
          "Using NextJS Layout pages",
          "Creating the Member detailed content",
          "Adding loading indicators",
          "Adding a custom error page",
          "Summary of Section 4"
        ],
        "Adding a new feature - likes": [
          "Introduction to Section 5",
          "Updating the Primsa schema for a many to many relationship",
          "Adding the like toggle function",
          "Creating a like button",
          "Fetching the likes",
          "Addling the list actions",
          "Adding the list tabs",
          "Using the useTransition hook for subtle loading",
          "Summary of Section 5"
        ],
        "Updating resources and image upload": [
          "Introduction to Section 6",
          "Adding the edit member route",
          "Adding the edit member form",
          "Adding the edit member form Part 2",
          "Adding the server action to update the member",
          "Displaying the images in the member edit component",
          "Adding the buttons for the image actions",
          "Where to store the images?",
          "Setting up Cloudinary",
          "Adding an image upload button",
          "Adding the image upload server actions",
          "Using the Cloudinary image component",
          "Setting the main image",
          "Challenge - setting the main image",
          "Challenge solution",
          "Deleting an image",
          "Tidying up the images",
          "Summary of Section 6"
        ],
        "Adding the Messages feature": [
          "Introduction to Section 7",
          "Setting up Prisma for messages",
          "Creating a chat form",
          "Creating the send message action",
          "Getting the message thread",
          "Creating a message DTO",
          "Displaying the messages",
          "Displaying the messages Part 2",
          "Improving the message box",
          "Adding the message sidebar",
          "Creating the fetch messages action",
          "Creating the message table",
          "Adding the message read functionality",
          "Using custom cells in the NextUI table",
          "Adding the delete message action",
          "Finishing up the message table",
          "Summary of Section 7"
        ],
        "Realtime communications": [
          "Introduction to Section 8",
          "Setting up Pusher",
          "Adding the live chat functionality",
          "Receiving the live messages",
          "Next.js Caching",
          "Adding the read message feature",
          "Setting up presence",
          "Adding a presence store",
          "Creating a presence channel hook",
          "Using the presence channel hook",
          "Creating a presence indicator",
          "Displaying presence in other components",
          "Setting up a private channel",
          "Creating a message store",
          "Refactoring the message table",
          "Adding the realtime functionality to the message table",
          "Making a custom toast for notifications",
          "Getting the unread message count",
          "Updating the count based on the event",
          "Challenge - notifying users of likes",
          "Challenge solution",
          "Summary of section 8"
        ],
        "Paging, sorting and filtering": [
          "Introduction to Section 9",
          "Adding the filters component",
          "Adding the UI for pagination",
          "Adding the age slider functionality",
          "Adding the sorting functionality",
          "Updating the last active property",
          "Adding the gender filter",
          "Adding a filter store",
          "Adding a filter hook",
          "Adding empty state",
          "Adding loading indicators for the filters",
          "Adding a pagination store",
          "Adding the pagination functionality",
          "Adding the pagination functionality Part 2",
          "Cursor based pagination",
          "Cursor based pagination part 2",
          "Cursor based pagination part 3",
          "Challenge - filtering out users without photos",
          "Challenge solution",
          "Summary of Section 9"
        ],
        "Authentication Part Two": [
          "Introduction to Section 10",
          "Adding a Register wizard part 1",
          "Adding a Register wizard part 2",
          "Adding a Register wizard part 3",
          "Submitting the form",
          "Setting up tokens and resetting the Database",
          "Creating the token functions",
          "Adding an email provider",
          "Adding the verify email function",
          "Adding the forgot password functionality part 1",
          "Adding the forgot password functionality part 2",
          "Adding the forgot password functionality part 3",
          "OAuth 2.0 flow",
          "Social Login part 1",
          "Social Login part 2",
          "Social Login part 3",
          "Adding a complete profile form for social login",
          "Adding the Google provider",
          "Summary of Section 10"
        ]
      },
      "requirements": [
        "Some familiarity with HTML, CSS and JavaScript is required"
      ],
      "description": "*** Now updated to use NextJS 15***\n\n\nDive into the world of full-stack development with this comprehensive course designed with beginners in mind.   This course covers everything from the fundamentals of Next.js to deploying a full-scale application.  Whether you are new to programming or looking to expand your existing skills, this course will guide you through every step of building a robust, database driven application.\nHere are some of the things that are covered in this course\nCreating a Next.js app\nQuerying a database using Prisma ORM\nSecurely authenticating users using NextAuth (v5)\nCreating a Messaging/Chat feature\nRealtime communication using Pusher.\nEmail verification / Forgot password functionality\nDesigning the User interface using NextUI\nStyling components with TailwindCSS\nUtilising server actions to fetch and update the data in Next.js\nImage uploading\nPublishing the app to the internet with Vercel\nKey features of this course\nComprehensive curriculum:  27 hours of high quality video tutorials, challenges and practical content.\nProject based learning:  Build a major project to showcase your new skills\nPre-Requisites\nBasic knowledge of JavaScript, HTML and CSS is recommended.\nTools you need for this course\nIn this course all the lessons are demonstrated using Visual Studio Code, a free (and fantastic) cross platform code editor.   You can of course use any code editor you like and any Operating system you like... as long as it's Windows, Linux or Mac.\nIs this course for you?\nThis course is very practical, about 90%+ of the lessons will involve you coding along with me on this project.  If you are the type of person who gets the most out of learning by doing, then this course is definitely for you.\nOn this course we will build an example Dating Application.  All you will need to get started is a computer with your favourite operating system, and a passion for learning how to build a full featured full-stack app based on Next.js.",
      "target_audience": [
        "Beginner developers who wish to learn how to buld an app using NextJS"
      ]
    },
    {
      "title": "RxJS 101",
      "url": "https://www.udemy.com/course/rxjs-101-course/",
      "bio": "Learn the basics of RxJS, and get up and running quickly",
      "objectives": [
        "RxJS core concepts",
        "Asynchronous Programming",
        "Reactive Programming",
        "Observables Streams",
        "Push Vs Pull Architecture",
        "We cover a large set of the most popular RxJS Operators",
        "We explore RxJS by coding examples",
        "Subjects and services"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Course Introduction",
          "Reactive Programming",
          "Setting up Example Files",
          "Project structure"
        ],
        "Observables": [
          "Introduction",
          "Asynchronous Code",
          "Overview of Observables",
          "Building the Observable Class.....sort of",
          "Architecture: Push vs Pull",
          "Pipe, and the basic Operators"
        ],
        "Creators": [
          "Introduction",
          "from(), of()",
          "interval()",
          "range()",
          "Building the Clock"
        ],
        "Operators": [
          "Introduction",
          "map() & filter() **",
          "pluck() **",
          "tap() **",
          "first(), last(), startWith()",
          "skip()",
          "take() **",
          "throttle()",
          "debounce() & debounceTime() **",
          "scan() **",
          "reduce()",
          "merge() **",
          "concat() **",
          "combineLatest() **",
          "concatAll **",
          "mergeAll()"
        ],
        "The Maps": [
          "switchMap **",
          "exhaustMap",
          "mergeMap",
          "concatMap **"
        ],
        "Http": [
          "fromFetch() **",
          "Custom Operators",
          "ajax()",
          "Error Handling"
        ],
        "Subjects": [
          "Hot vs Cold",
          "subject **",
          "behavior subject **",
          "replaySubject **"
        ],
        "Weather Project": [
          "Project Overview",
          "Setting up the server",
          "Setting up our accounts",
          "Setting up our imports and handlers",
          "Creating a plan",
          "Get Place Results",
          "Get Place Data",
          "Get Weather Data",
          "Render the Results part 1",
          "Render the Results part 2"
        ],
        "Conclusion": [
          "Conclusion and Next Steps"
        ]
      },
      "requirements": [
        "No knowledge of RxJS or Observables is needed. We will start at the beginning",
        "You will need a basic knowledge of Javascript",
        "No knowledge of Typescript, Angular, React, or Vue is needed"
      ],
      "description": "RxJS is known to have an incredibly steep learning curve. This course is designed to help Javascript programmers of any experience  level learn all the basics you needed to be effective with the RxJS library. This course is also framework agnostic, so you don't have to know React, Vue, or Angular to follow along. I've intentionally created the course in vanilla Javascript as well, so you won't need to know Typescript either.",
      "target_audience": [
        "Beginners with some JS knowledge",
        "Developers that want to learn about Observables and Reactive Programming"
      ]
    },
    {
      "title": "How To Create A Wikipedia Page For Your Business or Client",
      "url": "https://www.udemy.com/course/how-to-create-a-wikipedia-page-for-your-business-or-client/",
      "bio": "Learn How To Create Your First Wikipedia Page In Easy Steps",
      "objectives": [
        "Creating Wikipedia Pages For Business",
        "Creating Backlinks from Wikipedia",
        "Creating Wikipedia Pages For Individuals"
      ],
      "course_content": {
        "Introduction": [
          "Introduction To Wikipedia",
          "Benefits Of A Wikipedia Page",
          "Why You Should Take This Course Before Attempting To Create a Wikipedia Page"
        ],
        "Wikipedia Page Creation Basics": [
          "What Are References Or Citations on Wikipedia",
          "References Do's and Dont's",
          "How To Verify If Your Business or Client is Eligible for a Wikipedia Page",
          "Wikipedia Neutral Point Of View(WP:NPOV)"
        ],
        "How To Create A Wikipedia Page": [
          "Creating Wikipedia Account And Using Sandbox",
          "Setting Up User page and Talk Page",
          "Adding Headings To Your Wikipedia Pages",
          "Adding Links To Other Wikipedia Pages",
          "Adding Adding External Links",
          "Adding References - I",
          "Adding References - II",
          "How To Reuse References",
          "How To Add An Infobox",
          "Submitting The Your Page For Approval"
        ]
      },
      "requirements": [
        "You need to have a PC or Laptop or Mobile to take this course."
      ],
      "description": "Having a Wikipedia page is extremely beneficial for business. A presence on a third-party website enhances the reputation and credibility of a person or company. Also, as Wikipedia usually pops up with one of the top five spots on any search engine, it can significantly improve visibility.\nHowever, Wikipedia has specific criteria for what can be included. Any posts that do not meet these run the risk of being deleted.\n\n\nIn this course, we will teach you how to create a professional Wikipedia page that follows all their guidelines. Included with this is information on improving notability, tips for dealing with rejections from Wikipedia, and advice for getting backlinks to your page.\nThis is an essential course for individuals looking to create Wikipedia pages for themselves or their company, as well as Digital Marketing Agencies interested in offering Wikipedia pages as an add on for their clients.",
      "target_audience": [
        "Companies Looking to Create a Wikipedia Page For Them",
        "Individuals Looking To Create A Wikipedia Page For Themselves",
        "Digital Marketing Agencies Interested in Offering Wikipedia Pages as an add on for their clients."
      ]
    },
    {
      "title": "HTML, CSS, JavaScript, ReactJS, NodeJS from Zero to Expert",
      "url": "https://www.udemy.com/course/html-css-javascript-reactjs-nodejs-from-zero-to-expert/",
      "bio": "A-Z all in one fullstack web development course, HTML, CSS, JavaScript, Node.js, React.js and a big production grade app",
      "objectives": [
        "HyperText Markup Language.",
        "Cascading style sheets.",
        "JavaScript",
        "Reactjs",
        "Nodejs.",
        "MongoDB",
        "Object Oriented Programming.",
        "A production grade application you can use as your portfolio project from scratch.",
        "Master backend development with Node.",
        "Work as a freelance web developer.",
        "Master frontend development with React.",
        "How to create clean an reusable code and code refactoring."
      ],
      "course_content": {
        "HTML Fundamentals": [
          "What is HTML",
          "What is an HTML element?",
          "How To Create HTML Files and install VS Code (MAKE SURE TO WATCH THIS VIDEO)",
          "VS Code save",
          "How to add comments"
        ],
        "HTML elements and their attributes": [
          "body",
          "head",
          "div",
          "HTML attributes",
          "anchor",
          "paragraph and what are block level elements?",
          "image",
          "unordered list",
          "headings",
          "Semantic markup"
        ],
        "HTML forms": [
          "form",
          "types of form elements",
          "placeholder"
        ],
        "CSS Basics": [
          "CSS introduction",
          "A quick note when defining CSS properties",
          "comments",
          "class VS id selector",
          "id selector",
          "class selector",
          "class selector for specific element",
          "class selector multiple styles",
          "priority of order in CSS declarations",
          "combinator selectors",
          "descendant selector",
          "child selector",
          "adjacent sibling selector",
          "general sibling selector",
          "pseudo class selector (hover,active,focus,visited ....)",
          "pseudo elements selector",
          "attribute selectors",
          "borders"
        ],
        "CSS Spacing": [
          "margin",
          "padding",
          "Box Model"
        ],
        "CSS Units": [
          "Types of units",
          "pixel",
          "percent",
          "em unit",
          "rem unit",
          "vw and vh",
          "vmin and vmax"
        ],
        "CSS display property and its values: block, inline, inline-block, none and flex": [
          "display property",
          "flexbox",
          "flexbox flex-direction property",
          "flexbox justify-content property",
          "flexbox flex-wrap property",
          "flexbox align-items property",
          "flexbox align-content property",
          "how to add space in between flexbox elements using gap",
          "flexbox properties for child elements",
          "flexbox child element property flex-basis",
          "flexbox child element property flex-grow",
          "flexbox child element property flex-shrink",
          "flexbox child element property align-self",
          "flexbox child element property order"
        ],
        "CSS grid layout": [
          "grid layout",
          "grid columns",
          "grid rows",
          "grid-column and grid-row",
          "nesting grid layouts",
          "grid-template-areas",
          "grid-auto-columns and grid-auto-rows",
          "align-items and justify-items",
          "making grid layout responsive for different screen sizes",
          "12 column grid system"
        ],
        "CSS intermediate": [
          "Width and Height properties",
          "position property",
          "z-index",
          "media queries",
          "transition property",
          "translate property",
          "transform property",
          "center image and block level elements horizontally",
          "center image horizontally and vertically using position property and translate",
          "line-height propery",
          "vertical-align property",
          "opacity property",
          "colors",
          "CSS Project"
        ],
        "JavaScript for Beginners": [
          "What is JavaScript",
          "where to add JavaScript code in HTML?",
          "console.log()",
          "how to add comments in JavaScript",
          "variables",
          "data types",
          "conditional statements",
          "Arithmetic Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Logical Operators",
          "Ternary Operator",
          "Unary Operators",
          "Operator Precedence",
          "Strings and Template Literals"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know.",
        "A computer with access to the internet.",
        "No paid software required.",
        "I'll also walk you through, step-by-step how to get all the software installed and set up."
      ],
      "description": "Whether you're a beginner or an experienced developer looking to expand your skillset, this course provides a solid foundation and hands-on experience in building modern web applications. Note that the production grade application we will create in this course is unlike anything you have ever seen. After learning how to create an application like this, you will be ready to understand and implement top applications used worldwide.\n\n\nCourse Overview:\n\n\nHTML:\n· Learn Hypertext Markup Language (HTML) for structuring web pages.\n· Dive into semantic HTML to create well-organized and accessible web content.\n· Master HTML5 features for multimedia, forms, and semantic elements and many more.\n\n\nCSS Styling and Layout:\n· Explore Cascading Style Sheets (CSS) for styling and layout design.\n· Understand CSS selectors, properties, and units for precise control over styling.\n· Dive into responsive design principles and techniques for creating adaptable layouts across devices.\n\n\nJavaScript\n· Learn Modern JavaScript Features.\n· Explore functions, scope, and closures for writing modular and reusable code.\n· Understand asynchronous programming and the event loop in JavaScript.\n· Explore techniques for fetching data from APIs, handling errors, and managing a database code effectively.\n· Learn arrow functions, template literals, destructuring, spread/rest operators, and other ES6 features and many more.\n· Learn DOM manipulation.\n\n\nReact.js:\n· Get introduced to React.js, a powerful JavaScript library for building user interfaces.\n· Learn about components, state, redux, and props to create reusable and interactive UI elements.\n· Explore React Router for client-side routing and managing navigation in single-page applications.\n\n\nNode.js Backend Development:\n· Learn server-side development with Node.js, a runtime environment for executing JavaScript code.\n· Learn about Express.js, a minimalist web framework for Node.js, for building robust and scalable server applications.\n· Understand RESTful API design principles and implement CRUD operations for interacting with data.\n\n\nDatabase:\n· Learn how to create and Interact with databases using MongoDB NoSQL/SQL database.\n\n\nSecurity:\n· Learn about middleware, authentication,JWT, and security best practices for Node.js applications.\n\n\nHands-On Project: Apply your knowledge through a huge production grade project that covers all the tools you need for your portfolio website, instead of creating many useless projects, I will show you how top companies create their applications.\n\n\nReal-World Examples: Explore real-world examples and case studies to understand how these technologies are used in industry-standard applications.\n\n\nExpert Guidance: Benefit from guidance and support from a world class experienced instructor who is passionate about web development and committed to your success.",
      "target_audience": [
        "If you want to start your own startup by building your own websites and web apps.",
        "If you want to take ONE COURSE and learn everything you need to know about web development, take this course.",
        "To get a job as a backend developer.",
        "To get a job as a frontend developer."
      ]
    },
    {
      "title": "Hands-on Three.js 3D Web Visualisations",
      "url": "https://www.udemy.com/course/hands-on-threejs-3d-web-visualisations/",
      "bio": "Create stunning visualizations and 3D scenes using the Three.js library",
      "objectives": [
        "Learn the basics of 3D applications: vertices, faces, meshes, cameras, and renderers",
        "Learn how to set up a Three .js web app: the scene, camera, and renderer",
        "Master the scene hierarchy and child-parent relationships, and how they affect the final location and orientation of objects",
        "Explore simple mesh shapes (such as boxes, spheres, cylinders, planes, and cones) using the Three .js library",
        "Learn how to source, create, and load complex assets, including textures",
        "Discover how to use the brilliant animation system that is part of the THREE .js library",
        "Add a post-processor to a rendered image, to make it look like an old film or a dot screenprint"
      ],
      "course_content": {
        "Build Your First 3D Web Page with THREE.js": [
          "The Course Overview",
          "Introducing the THREE.js website",
          "3D Basics",
          "Your first THREE.js web page`",
          "The THREE.js Editor",
          "Debugging Your Pages",
          "Test Your Knowledge"
        ],
        "Geometry and Materials": [
          "Let’s Keep It Simple: Starting with a Box",
          "Materials One – Basic and Wireframe",
          "Spheres and Cylinders",
          "Materials Two – Lambert and Phong",
          "Cones and Tori",
          "Test Your Knowledge"
        ],
        "Scene Hierarchy and Cameras": [
          "Scene Hierarchy",
          "Perspective Camera",
          "Orthographic Camera",
          "Dummy Cameras and Lerping",
          "Complex Camera Paths",
          "Test Your Knowledge"
        ],
        "Lights and Shadows": [
          "Ambient and Hemisphere Lighting",
          "Directional and Point Lighting",
          "Spot and RectArea Lighting",
          "Adding Shadows to Your Scenes",
          "Physically Correct Lighting",
          "Test Your Knowledge"
        ],
        "Sourcing, Creating, and Loading Assets": [
          "Online Sources of 3D Assets",
          "Using Blender with THREE.js",
          "The GLTFLoader Class",
          "The FBXLoader Class",
          "LatheGeometry and ExtrudeGeometry",
          "Test Your Knowledge"
        ],
        "The THREE.js Animation System": [
          "The Basics of the Animation System",
          "Skinned Meshes",
          "Switching and Blending Animations",
          "Splitting an Animation Clip",
          "A WASD Control System for a Player Character",
          "Test Your Knowledge"
        ],
        "Post Processing and GLSL": [
          "THREE.js Post Processing",
          "Introducing GLSL – ShaderMaterial",
          "Introducing GLSL – Vertex Shaders",
          "Introducing GLSL – Importance of Noise Function",
          "Introducing GLSL – Textures",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Minimum Hardware Requirements:",
        "For successful completion of this course, students will require a desktop or laptop with at least the following: OS: Windows, MacOS or Linux Processor: Dual Core processor Memory: 4 GB Storage: 1 GB GPU: WebGL compatible graphics card",
        "Recommended Hardware Requirements:",
        "For an optimal experience with hands-on labs and other practical activities, we recommend the following configuration: OS: Windows, MacOS or Linux Processor: Dual Core processor Memory: 8 GB Storage: 1 GB GPU: WebGL compatible graphics card",
        "Software Requirements:",
        "Operating system: Windows, MacOS, Linux Browser: Chrome"
      ],
      "description": "Three.js is the most popular JavaScript library for displaying 3D content on the web, giving you the power to display incredible models, games, music videos, and scientific/data visualizations in your browser and even on your smartphone!\nThis course begins with a 3D beginner-level primer to 3D concepts and some basic examples to get you started with the most important features that Three.js has to offer. You'll learn how to quickly create a scene, camera, and renderer and how to add meshes using the Geometry primitives included with the library. You'll explore troubleshooting steps that will focus on some of the common pitfalls developers face. You'll learn the very sophisticated animation system included with the library. The course concludes by introducing post-processing, essentially adding filters to your rendered scene, and GLSL, the shading language that is used by all materials included with the library. You'll see how creating your materials is easier than you'd imagine using GLSL.\nBy the end of this course, you'll be able to quickly add advanced features to your 3D scenes, improve the way users interact with them, and make them look stunning.\nAbout the Author\nNik Lever started work in 1980 as a cartoon animator. Buying a Sinclair ZX81 in 1982 was the start of a migration to a role as a full-time programmer. The ZX81 was quickly swapped for the Sinclair Spectrum; a Z80 processor and a massive 48K of RAM made this a much better computer on which to develop games and he developed games using Sinclair Basic and then Z80 Assembler. The Spectrum was swapped for a Commodore Amiga and Nik developed more games in the shareware market, moving on to use C. At this stage, programming was essentially a hobby. Paid work was still animated TV commercials.\nNik finally bought a PC in the early nineties, created a sprite library ActiveX control, and authored his first book, aimed at getting designers into programming. In the mid-nineties along came Flash and the company he was now running, Catalyst Pictures, became known for creating games.\nSince then, the majority of his working life has been devoted to creating games, first in Flash and then Director, as Director published the first widely available 3D library that would run in a browser using a plugin.\nIn recent years, his game development has involved using HTML5 and Canvas to create 2D and 3D games using both custom code and various libraries. His preference is to use the latest version of Adobe Flash, now called Animate, which exports to JavaScript via the Createjs library and uses the THREE.js WebGL library.\nNik has developed online content for the BBC, Johnson and Johnson, Deloitte, Mars Corporation, and many other blue-chip clients. The company he's run for over 30 years has won several awards and has been nominated for a BAFTA twice, the UK equivalent to the Oscar.\nOver the last 20 years, he has been struck by just how difficult it has been to get good developers and has decided to do something about this rather than just complain. He runs a CodeClub for 9-13-year-old kids and has developed several courses for Udemy in the hope of inspiring and educating new developers.",
      "target_audience": [
        "If you are a JavaScript developer and want to learn how to use the Three .js library to create 3D graphics in your browser, then this course is for you!"
      ]
    },
    {
      "title": "Leaflet for Beginners",
      "url": "https://www.udemy.com/course/leaflet-for-beginners/",
      "bio": "Complete guide for building map rich applications using Leaflet",
      "objectives": [
        "Learn to build map based applications using LeafletJS",
        "Learn core concepts of LeafletJS",
        "Work on real world app along with the instructor",
        "Master advance topics such as Heat maps, Clustering, Animation and Drawing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Introduction",
          "Mapping Online",
          "LeafletJS",
          "Data"
        ],
        "Leaflet JS Basics": [
          "Shapes and Basics",
          "Popups and Icons - Part 1",
          "Popups and Icons - Part 2",
          "GeoJsons",
          "Bounds",
          "Events Part 1",
          "Events Part 2",
          "Events Part 3",
          "Design"
        ],
        "Overlays and Interactivity": [
          "Overlay Design",
          "Overlay Design - Part 2",
          "Map Data - Part 1",
          "Map Data - Part 2",
          "Integration - Part 1",
          "Integration - Part 2",
          "Advance Integration - Part 1",
          "Advance Integration - Part 2",
          "Advance Integration - Part 3",
          "Advance Integration - Part 4",
          "Advance Integration - Part 5"
        ],
        "Advanced Topics": [
          "Heatmaps - Part 1",
          "Heatmaps - Part 2",
          "Clustering",
          "Clustering Part 2",
          "Geolocation",
          "Routing and Directions",
          "Drawing",
          "Animation",
          "Big Data",
          "Images on the Map",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript is required to complete the course"
      ],
      "description": "Get your hands on one of the fastest and easiest to learn interactive maps on the web. Building maps has never been this easy with Leaflet.\nSo, what exactly is Leaflet? Leaflet is a lightweight JavaScript library that is used to build mobile-friendly interactive maps offering a number of easy to use features to help build maps that can be integrated with any app. It simplifies the process of building maps from scratch, making it easier to modify maps and integrate it with different apps.\nWe’ve designed a course to make learning Leaflet and building your own maps even easier!\nWe’ve created this course for the newbies and intermediate developers who want to learn exactly how to build your own maps and integrate them with your apps. This course has break down Leaflet into smaller and easier to understand segments that not only will go behind the theory of using Leaflet but also show you exactly how you can build your very own maps. It will also go over how to add different features such as filters, heat maps, polygons, markers and so much more.\nThe course starts from the beginning focusing on the core concepts before moving on to the different types of maps that you can build, the different features that you can add to your map and even how to integrate it with your app.\nThe course will take you step-by-step through the different types of maps such as heatmaps, geo location, tyepheads, as well as the different features that you can add to a map (popups, polygons, markers, etc.) You will also learn how to show routes on your maps, animate different aspects, add zoom effects, and even how to read Leaflet JS course if you come across it.\nAt the end of this course, you will not only know how to use Leaflet JS, recognize the Leaflet course, but also how to build maps from scratch, add features, add animations, show routes, and so much more!\nEnroll now and let’s get started on becoming a professional mapper!",
      "target_audience": [
        "Anyone who wants to build Map based applications will find this course very useful"
      ]
    },
    {
      "title": "Build modern responsive websites with HTML5 and CSS3",
      "url": "https://www.udemy.com/course/create-modern-websites/",
      "bio": "Create a responsive website as quickly as possible with the latest technologies. Enroll with this course now.",
      "objectives": [
        "Create a modern responsive website",
        "Host the website in a real server in the WWW",
        "Learn the basic and intermediate web design skills",
        "Learn latest CSS, HTML, Javascript, JQuery, Bootstrap and PHP",
        "Identify differences between old bootstrap and new bootstrap web design"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Introduction to internet",
          "Introduction to web design",
          "Introduction to the languages and technologies",
          "Downloading an editor"
        ],
        "Creating the modern website": [
          "Setting the workspace",
          "Creating the first page",
          "Setting up the Header",
          "Creating Slideshow .- P1",
          "Creating Slideshow - P2",
          "Creating Slideshow - P3",
          "Creating Banner - P1",
          "Creating Banner Responsive - P2",
          "Creating Welcome Screen - P1",
          "Creating Welcome Screen - P2",
          "Adding a background image",
          "Bootstrap Grid System - P1",
          "Bootstrap Grid System - P2",
          "Welcome Screen Responsive Design",
          "Smooth Scroll Effect - Part 1",
          "Smooth Scroll Effect - Part 2",
          "Smooth Scroll Effect - Part 3",
          "Smooth Scroll Effect - Part 4",
          "Smooth Scroll Effect - Part 5",
          "Creating Portfolio - Part 1",
          "Creating Portfolio - Part 2",
          "Adding Testimonials",
          "Responsive Testimonials Design",
          "Creating Foooter",
          "Creating Footer - Part 2"
        ],
        "Creating About Us Page": [
          "Creating the About Us Page",
          "Adding Breadcrumb",
          "Adding Jumbotron",
          "Creating about us design",
          "Ordered List Elements",
          "Responsive About Us Design",
          "Responsive Background Image"
        ],
        "Services Page": [
          "Creating Services Page",
          "Adding Web Development Section",
          "Adding Software Development Section",
          "Adding Digital Marketing Section",
          "Finalizing the design of the services page"
        ],
        "Intermediate Web Design Techniques": [
          "Creating Portfolio Page",
          "Creating Portfolio Page - Part 2",
          "Responsive Portfolio Design",
          "CSS Border Property",
          "Javascript Page Navigation",
          "Creating Contact Us",
          "Understanding HTML Forms",
          "Creating Contact Us Form"
        ],
        "Little Things That Matter": [
          "Adding a Favicon"
        ],
        "High End API Intergration": [
          "Embed Google Maps API",
          "Responsive Google Maps",
          "Embed Facebook API",
          "Embed Twitter API"
        ],
        "The Final Project": [
          "The Final Completed Project"
        ]
      },
      "requirements": [
        "Be able to Practise the lessons and try on your own the techniques of web design",
        "Be able to work with basic computer functionalities"
      ],
      "description": "This course will enable you to make a responsive website completely.\nThroughout this course you will learn about,\nHTML 5\nCSS 3\nBootstrap 4\njQuery\njava script\nAND 8+ HOURS OF CONTENT\nLearning these language will help you to achieve a higher milestone in life, and I will make you able to create any website.\nWeb designing is not rocket science.. Therefore you will fall in love with the subject very soon.\nLet's get started learning now !",
      "target_audience": [
        "Beginner Web design and development students who wants to create a modern responsive website.",
        "Anyone who wants to create a modern responsive website as quickly as possible.",
        "Web designers who wants to refresh their knowledge on beginner and intermediate skills of web design."
      ]
    },
    {
      "title": "How to Build Chatbots: From Beginner to Intermediate",
      "url": "https://www.udemy.com/course/how-to-build-chats-bots-from-beginner-to-expert/",
      "bio": "Learn how to build bots on DialogFlow, Slack, Facebook Messenger, Twilio, and more",
      "objectives": [
        "Understand the Architecture of a Chat Bot",
        "Be able to Build a Resume Chat Bot through Twilio",
        "Be able to Build a Workout Bot with Facebook Messenger",
        "Be able to Market your Bot to a bigger audience"
      ],
      "course_content": {
        "Bot Introduction": [
          "Welcome",
          "What are Bots",
          "Examples of Bots"
        ],
        "Setup your Developer Environment for Chatbots": [
          "Signup for the following services: DialogFlow, Twilio, Facebook, Heroku",
          "Understanding DialogFlow",
          "Understanding Twilio",
          "Understanding Facebook",
          "Understanding Heroku",
          "Understanding Git",
          "Developing in Sublime Text or Notepad++"
        ],
        "First Chatbot with DialogFlow": [
          "Introduction to Hotel Booking",
          "What are Intents and Entities?",
          "Create Entities for the Hotel Bot",
          "Explain the Welcome Intent",
          "Creating the Order Intent",
          "Creating a Follow up Intent",
          "One Last Intent",
          "Testing our Chatbot",
          "Chatbot Challenge #1",
          "Chatbot Challenge #1 Solution"
        ],
        "How to Design Chatbots": [
          "Designing Chatbots Introduction",
          "Whats the purpose of the Chatbot",
          "Writing Scripts",
          "Create the Flow",
          "Chatbot Design Checklist",
          "Secondary Material"
        ],
        "Second Chatbot: Building your Resume Bot": [
          "Designing Intents and Entities",
          "Creating Entities",
          "Creating Intents",
          "Creating More Intents",
          "Testing within Dialogflow",
          "Twilio Sync up",
          "Testing the chatbot on our phone",
          "Challenge#2"
        ],
        "Third Chatbot: Building a Programmable Bot on Slack": [
          "Intermediate - Slack Bot Intro",
          "Intermediate Slack Bot - Setting up our files",
          "Intermediate Slack Bot - Setting up our files Part 2",
          "Intermediate Slack Bot - Server Integration",
          "Intermediate Slack Bot - Slack Adjustments",
          "Intermediate Slack Bot - Challenge Question"
        ],
        "Fourth Chatbot: Building your own Fitness Bot on Facebook Messenger": [
          "Introduction to Fitness Bot with Heroku and Nodejs",
          "Installing Node Modules and Sublime Text",
          "Fitness Bot Development - Initialize our index.js",
          "Git Initializations",
          "Push our Code to Heroku",
          "Setting up the Fitness Bot on Facebook Platform",
          "Creating a Facebook Page + Facebook Permissions",
          "Fitness Bot Development - New code to send bot a message",
          "Push Latest code to Heroku",
          "Testing our latest code within our Facebook Group",
          "Fitness Bot Development - Exercise Chat code",
          "Final Testing of our Fitness Bot"
        ]
      },
      "requirements": [
        "We recommend you use MacBook when building Bots",
        "For all projects on the web, please use Chrome or Safari",
        "Main Tools for the Course: DialogFlow, Facebook Messenger, Twilio API"
      ],
      "description": "Update: Join over 10,600 students in the Techustler Course Series. Recently, this course has been updated as of 1/2018 with new content including how to design chatbots.\nHave you ever wondered how chat bots are made?\nWhy are chat bots the next big trend?\nHow can I build chat bots that are cool?\nIf you ever wanted to understand the space of Bots or build them yourself, then take my course \"How to Build Chat Bots: From Beginner to Intermediate\". I designed it in a practical way so that when you finish the content you can immediately put it into use.\nNow, why should you build bots?\n\nBots are the next big trend according to media journals, silicon valley companies, and web developers. The barrier of entry to build a bot is low enough, but the amount of traction you can get is enormous. This is why startups like Slack have built a billion dollar business around it. Now, we are in the early stages of this trend and in order to stay ahead you must learn a thing or two about bots. More importantly, how to build bots which I teach in this course.\nThis course contains over 20 lectures and 1.5 hrs of content. It's designed for beginners to play with new platforms in the bot space. You’ll learn the tools needed to build the bots, how the inner workings of bots, how to map a user conversation, and market your bot to your friends.\nCourse Structure\nThe course follows a familiar structure where in each video I will teach the concepts followed by the student applying the concepts practically. If your goal is to become a better developer, you should understand node.js, server side development and how to access certain APIs to build better bots. The course does not go deep into API integration of bot responses. This means we won't be building complex models, AI driven bots, or multiple API driven bots. That would be for an expert course.\nEnvironment Setup\nThis course aims to simulate a live in-person course as much as possible. After you finish each lecture, you should practice and try the solution on your own. You learn the best by practicing and doing.\nProjects\nAt the end of each section, you will be asked to complete a bot which you can then share with your network or on the Udemy network.\nTestimonials from other Techustler Courses and the Instructor\n“Great set of videos Nick! I really liked the format of the videos with you in the corner of the screen showing us how to use the website. Cool songs you use at the beginning of each video. It really gives off the vibe that your course is hip and up-to-date with modern times. You do a great job of keeping of with the times. Stay modern, but classy at the same time Nick!” - Penelope\n“The course is amazing so far. I didn't know you could do so much with Slack. I can't wait to build the on-boarding site and start bringing users into my community. I highly recommend this course.” - John\n\"He is a crafty problem solver, coming up with clever solutions to solve problems on schedule. When we worked together on a project, he quickly came up with and implemented UI solutions for the app to finish on time.\" - Doug\n\"Nick is highly focused and is the type of person who puts in the time and effort to solve a problem while not sacrificing quality. His attention to detail led to his design of a creative and great looking app.\" - Christine\n\"Nick's great at guerrilla customer development, he knows how to analyze data and make strong connections to the market. He understands the user flow when solving their problems.\" - Taso\n\"It was a highly positive experience working alongside Nick at DigaBlue and with the work ethic he has, I am certain that he will produce great results in his future endeavors.\" - Saif\n\"Nick is an aspiring tech entrepreneur with what I would consider a strong passion and desire to learn more and excel in the evolving digital age. He is an experienced programmer with a track record of creating both his own website and various mechanical devices.\" - Elliot\n\"Nick taught me so much, and invested a good amount of time being my mentor--teaching me to become a better non-technical leader.\" - Rohan\nWhat is the target audience?\nThis course is designed for people with little or no experience with chat bot making and who want to build the next cool product. By the end of the course, you’ll have valuable skills that will help you be creative and resourceful in your pursuit of building products (hopefully in the bot space :)\nNext Steps\nNow it's time to become a Techustler and join me in registering for the course. I can’t wait to have you on board!",
      "target_audience": [
        "You do not need to be in development to take this course, if you are in development it's a bonus",
        "Be confident in trying something new, bots are not hard. It just takes some practice",
        "Understanding how to use Node.js"
      ]
    },
    {
      "title": "Full Stack Web Development Bootcamp with MERN Stack Projects",
      "url": "https://www.udemy.com/course/full-stack-web-development-bootcamp-with-mern-stack-projects/",
      "bio": "Full Stack Web Development with MERN. React, React Project, GraphQL, Angular, Nodejs, Express, MongoDB with Mern Project",
      "objectives": [
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap and React Js with redux, hooks and context",
        "This course is the best way to learn React JS, Angular, Graphql, NodeJs and Mongo DB",
        "Learn and create amazing high quality Bootstrap themes and UIs from scratch",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "Create a beautiful, responsive landing page for any one with Mern stack (react js, nodejs, express js, mongodb)",
        "You will learn to use basic tags which are used commonly for Mern Stack projects",
        "You will be able to create commonly used user login and registration pages by learning the form structure.",
        "Learn components, props, states and component life cycle methods in React JS",
        "Learn to connect to an external API for building real world mern stack project, react projects, web application",
        "Learn Bootstrap 4 and UIs from scratch with web application, react projects, mern stack projects",
        "Learn how to build single page applications with Mern stack and React JS",
        "Learn to compile Sass in the easiest way possible using a GUI (for web development with react js, redux, express js, mongodb)",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "You will be able to prepare lists in different formats",
        "In the developing world, we will talk about all the details about web design compatible with different screens.",
        "Create reusable React Components",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "How to write Functions, what are the differences between Function Declaration and Function Expression",
        "What is DOM, how to manipulate DOM",
        "How to create objects, how to update them, object methods",
        "CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field.",
        "Each aspect of creating websites and applications entails a unique set of skills.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting making it very important language for web developer",
        "JavaScript is a text-based programming language used for client- and server-side development.",
        "Choosing the best JavaScript framework for your web project depends on what you are looking for.",
        "HTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML",
        "Full stack web development with html css javascript, bootstrap, react js, angular, nodejs, mongodb",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "React is a front-end library in Javascript that was developed by Facebook.",
        "React, or React JS, is a front-end Javascript library for building UI components for the web.",
        "There are many reasons why React is popular. One reason is that Facebook developed it.",
        "Full stack web development",
        "Mern stack projects",
        "Mern stack with react js, angular js, nodejs, mongodb",
        "HTML CSS Javascript",
        "Mern Stack and React projects",
        "Full Stack web Development with React js, Graphql, Nodejs, Mongodb"
      ],
      "course_content": {
        "Welcome Course:": [
          "Built a Real-World Website with HTML and CSS",
          "Project Files Full Stack Web Development, Mern Stack Projects",
          "HTML Projects File",
          "General Terms",
          "How the Website Works?",
          "What Is IDE?",
          "FAQ about Full stack web development with javascript, react redux, hooks context",
          "First Webpage"
        ],
        "HTML Fundamentals": [
          "About the Section",
          "What is HTML?",
          "HTML Document Structure",
          "Text Element",
          "Lists",
          "Images",
          "Hyperlinks",
          "Container Elements",
          "What is Semantic HTML?",
          "Creating Tables with HTML",
          "Colspan & Rowspan",
          "Working With Form Elements",
          "Checkbox",
          "Input type; Radio & File",
          "Select & Option",
          "New Visual Studio Code Extensions",
          "Challenge",
          "Let’s Make the Challenges",
          "Challenge Solutions Continue",
          "Quiz"
        ],
        "CSS Fundamentals": [
          "About the Section",
          "What is CSS",
          "Styling Methods-Inline, Internal and External",
          "Let’s Do Some Styling",
          "Combining Selectors",
          "Style Operation With Class and Id Assignment",
          "Order of Priority in CSS",
          "Working with Colors",
          "Working with Colors on Code",
          "Using Border in CSS",
          "Pseudo-Class in CSS",
          "Styling Hyperlinks With Pseudo-Class",
          "Crome DevTools",
          "Important Advices for CSS",
          "Challenge 1",
          "Box Model",
          "Margin & Padding",
          "Let’s Start Using Margin & Padding",
          "Dimensioning with CSS",
          "Let’s Centre Our Page",
          "Challenge 2",
          "Types of Boxes",
          "Element Positioning with CSS",
          "Use of Fixed and Sticky",
          "Creating Shadow in CSS",
          "Challenge 3",
          "Quiz"
        ],
        "Layout on Webpage": [
          "About the Section",
          "3 Ways to Create Layout on Web Pages",
          "Float",
          "Flexbox",
          "Flexbox Overview",
          "Let’s Keep Using Flexbox",
          "Flex-Wrap",
          "Adding Flexbox to Our Project",
          "Adding Flexbox to Our Project 2",
          "Let’s Change the Page Layout with Flexbox",
          "Introduction to CSS Grid",
          "What Is CSS Grid?",
          "Let’s Continue Examining CSS Grid Features",
          "Other Grid Features",
          "Quiz"
        ],
        "Media Query and CSS Animations": [
          "Section Overview",
          "Media Query and CSS Animations Code Samples",
          "Responsive Menu Making With Media Query",
          "CSS Animations",
          "Making a Slider Menu With Transform",
          "Keyframes",
          "Animation Examples With Keyframes",
          "Quiz"
        ],
        "Portfolio Website": [
          "Portfolio Website",
          "Let’s Start Creating the Sections",
          "Let’s Start With Header Creation",
          "Home Section",
          "About Section",
          "Services Section",
          "Portfolio Section",
          "Contact Section & Footer",
          "Responsive Page Design"
        ],
        "Bootstrap 5 Fundamentals": [
          "Bootstrap 5",
          "How to Integrate Bootstrap Into Applications",
          "Container and Container Fluid",
          "Bootstrap 5 Typography Review",
          "Text Features",
          "Use of Colors",
          "Spacing",
          "Border",
          "Display",
          "Position Relative & Absolute",
          "Position Fixed & Sticky",
          "Sizing",
          "Buttons",
          "Using Images Classes",
          "Other Bootstrap 5 Features",
          "Quiz"
        ],
        "Bootstrap 5 Advanced": [
          "Grid",
          "Using Bootstrap Grid Structure on Different Screen Size",
          "Aligning Columns and Gutters",
          "Let's Start Using Flex with Bootstrap 5",
          "Vertical and Horizontal Alignment in Flex Structure",
          "Other Flexbox Features",
          "List Group",
          "Form Classes",
          "Let's Continue Working with Form Elements",
          "Other Input Features",
          "Creating Tables With Bootstrap 5",
          "Quiz"
        ],
        "Bootstrap Features Working With JavaScript": [
          "Bootstrap Features Working With Javascript",
          "Dropdown",
          "Modal",
          "Carousel",
          "Collapse & Accordion"
        ],
        "Bootstrap 5 Project": [
          "Project Presentation",
          "Navbar",
          "Let’s Start Creating Carousel",
          "Let’s Start Creating the Main Section",
          "Creation of Students and Questions Sections",
          "Creation of Contact and Footer Section"
        ]
      },
      "requirements": [
        "No prior knowledge needed for HTML, CSS, Javascript, React, Redux, Hooks, Context, NodeJs, Express, Mongodb",
        "You will be learning Full Stack web development from scratch to master degree",
        "This course will take you from scratch to the advanced level",
        "Computer with access to the internet",
        "Desire to learn javascript, html css javascript",
        "Desire to learn HTML & CSS",
        "Desire to learn React Js, React projects",
        "Desire to learn react or react js with redux, hooks and context",
        "Desire to build react applications, mern stack project, web applications from zero to hero",
        "Desire to learn react native, react js with redux, hooks and context",
        "Desire to learn web development with react, react native, html, css, bootstrap",
        "Desire to learn bootstrap for web design, website development",
        "Desire to learn grid css",
        "Desire to learn html, css, bootstrap",
        "Desire to learn mern stack and mern stack project",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Full stack web development, mern, mern stack, mern full stack, mern stack project, react, mern project, full stack, graphql, full stack Project, full stack web development project\nHello there,\nWelcome to Full Stack Web Development Bootcamp with MERN Stack Projects\nFull Stack Web Development with MERN: React, React Project, GraphQL, Angular, Nodejs, Express, MongoDB with Mern Projects\nJavaScript is the number one programming language for internet applications. During our course, you will be informed about the basics of JavaScript in detail and how to solve problems. Here's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code. Full stack web development, mern stack, mern full stack, mern, web development, web application, react, web application development, full stack, mern stack project, web development project\nWhether you’re interested in mastering responsive web design, creating WordPress templates using Bootstrap, or integrating Bootstrap with HTML5, and CSS3, Udemy has a top-rated course to help you achieve your goals.\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML.\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work and is rightfully considered a cornerstone of internet technology.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and full-stack web development practices and skills.\nThis course will be your gateway to learning web development from scratch.\nThis course will take you from a complete beginner to a master in hours! By the way, you do not need to know anything about this course.\nWe'll be moving rapidly to give you the quickest, yet most thorough website building experience.\nIn this course, we have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an HTML page associated with it and has a start state.\nWith this course, you will improve your Bootstrap experience with HTML5 and CSS3 codes\nThis course will take you from a beginner to a more experienced level. You will learn HTML5, CSS3, Bootstrap 4, Javascript, React JS, Angular, NodeJS,  and Mongo DB step by step with hands-on examples. And then you will be confident in using React JS, and if you ever get stuck, we will be there to help.\nAngular is one of the most popular frameworks for building client apps with HTML, CSS. If you want to establish yourself as a front-end or a full-stack developer, you need to learn Angular.\nNodejs is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser. By learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nFrom Setup to Deploy, this course covers it all! You'll learn all about Components, Directives, Services, Forms, Http Access, Authentication, Optimizing an Angular App with Modules and Offline Compilation, and much more - and in the end: You'll learn how to deploy an application!\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS. In this course, we will be teaching React by creating various projects.\nIn this course you will learn;\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nWe will start with local installation and react basics. After that, we will create 5 projects.\nProject 1 – Learn, create react app and JSX with ‘first-app’\nProject 2 – Learn to React props system with ‘blog-posts’ app\nProject 3 – Learn to react components, state, lifecycle methods, async operations, and much more... with the ‘hemisphere’ app\nProject 4 – Handling event handlers, fetching data from an outside API, and showing the list of records with ‘image-list’ app\nProject 5 - Routing with React Router and using React Portals to render children outside the DOM hierarchy with the ‘react-router’ app\nBecome fluent in Angular terminologies, such as dependency injection, services, directives, transclusion, and more.\nDesign custom directives and save time and energy with easily reusable components.\nWrite quicker, better Angular code by discovering how AngularJS itself is built.\nRealize the power of dependency injection, and how Angular accomplishes it.\nFully understand the architecture behind an Angular application and how to use it\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nThe best testing framework for NodeJS, Mocha\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS4\nBuilding an extensive backend API with Node.js & Express\nBuilding our frontend to work with the API\nIntegrating React with our backend and creating a great workflow\nGet, Post, Patch and Delete Request using MongoDB\nState management with Redux\nReact Hooks, Async/Await & modern practices\nCreate a CRUD Application with MERN Stack\nHandling Forms\nJWT Authentication\nCreating a build script, securing our keys, and deploying to Heroku using Git\nFull-stack web development\nMern\nMern stack\nMern stack projects\nMern Full Stack\nWeb development\nFront end web development\nFull stack developer\nfull web development\nHtml css javascript\nWeb developer\nFull stack\nPhp, Fullstack Web development\nHtml CSS javascript\nWeb developer\nFull-stack\nBootstrap\nHtml CSS bootstrap\n\n\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\n\nNo prior knowledge is needed!\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel our seasoned instructors' expertise.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now\nFull Stack Web Development Bootcamp with MERN Stack Projects\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5, CSS 3, Bootstrap 4, React JS, Angular, NodeJS and Mongo DB the first step in web development, completely and easily, you are at the right place.",
        "People who are willing to make a career in the Full Stack Web Development with react js, nodejs, angular, mongodb",
        "If you want to building your own website, you should enroll",
        "Anyone who wants to become an React Developer",
        "Students who want to learn how to build fast single page web apps",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone who wants to learn MongoDB",
        "Developers new to backend-side",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "People who want to become web development with html, css, javascript, react, react native",
        "People who want to learn full stack web development",
        "People who want to learn frontend and backend web development",
        "People who want to learn full stack web development, mern stack",
        "People who want to learn website development",
        "People who want to become mern stack developer and create real work react projects, mern stack projects, web application"
      ]
    },
    {
      "title": "Node.js Certification Training",
      "url": "https://www.udemy.com/course/nodejs-certification-training/",
      "bio": "Master Node.js from scratch and become a Full Stack Web Developer (MERN and MEAN stacks). Integrate Node.js with MongoDB",
      "objectives": [
        "Complete knowledge of NodeJS technology",
        "Become Full Stack Web Developers - MEAN and MERN stacks",
        "Introduction to Node JS and Installing Node JS",
        "Var Hoisting and Functional Scope",
        "let and const, let vs const",
        "Function Expressions and Arrow Functions",
        "Default Parameters, Rest Operator and Spread Operator",
        "String Templates",
        "JavaScript Modules Export and Import",
        "for... of loop",
        "Objects and Object Literals",
        "Destructuring Arrays and Objects",
        "Global Objects, Exporting Classes and Functions, Promises",
        "NodeJS Modules, Module Patterns, Shared Memory Modules",
        "Node Package Manager (npm), Installing and uninstalling modules",
        "How to generate package json using npm",
        "NodeJS Events, File System, Inspector, URL Module",
        "Installing Nodemon, Client and Server, Create a Server",
        "Streams and Buffers, Pipes",
        "Serving HTML Pages, Serving JSON Data, Routing in Node JS",
        "Node Js Uploading Files",
        "Sending Emails in Node JS",
        "Node JS With MongoDB Database and MongoDB Cloud",
        "NodeJS with MySQL"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Node.js course by Uplatz.\n\n\nNode.js is a JavaScript environment that allows you to perform a multitude of tasks and build all sorts of exciting applications.\nNode.js can be defined as a dynamic, cross-platform and open-source JavaScript framework or runtime environment that is built on the Google Chrome JavaScript V8 engine. Developed by Ryan Dahl in 2009, Node.js was initially implemented as a client-side scripting language. Nowadays, it is used to execute JavaScript code and scripts that run server-side to create dynamic web pages.\nNode.js is an open source server environment and essentially allows you to run JavaScript on the server. In summary, Node.js is an open-source, cross-platform, JavaScript runtime environment that provides way to run JavaScript code outside of a web browser. Node.js helps us to use JavaScript for server-side scripting—running scripts server-side to produce dynamic web page content before the page is sent to the user’s web browser.\n\n\nNode.js Features and Benefits\nMost web developers implement Node.js due to its amazing and powerful features. Key features of Node.js include:\nFaster code execution\nHighly scalable\nNon-blocking APIs\nNo buffering\n\n\nWith such wonderful features, Node.js is widely used for creating server-side and networking applications. The following are the key areas where Node.js is widely used:\nI/O-bound applications\nData streaming applications\nData-intensive real-time applications (DIRT)\nJSON API-based applications\nSingle-page applications\nMost of the top organizations use Node.js for e.g. IBM, Apple, AT&T, and the like.\n\n\nUplatz provides this comprehensive training on Node.js. This Node.js course provides an introduction to web application development by way of JavaScript and the node.js environment. The delegates will learn the basics of server-side web development using the MEAN stack (MongoDB, Express.js, Angular/Angular 2, node.js). The Node.js course introduces students to models of software development that can apply to any web development environment, including the application server (node.js), Model View Controller (MVC) frameworks using Express.js, front-end frameworks (Angular), and databases (MongoDB). The course includes setting up a node.js environment, building web APIs and full-stack JavaScript applications, and following good application development practices.\nThis Node.js training also teaches you to build a production-ready Node.js JSON API. The course uses MongoDB for the database to help you gain hands-on experience in developing the backend in Node.js.\n\n\nCourse Objectives\nBuild, test and deploy Node applications with confidence\nUse cutting-edge ES8 JavaScript\nStore complex data in MongoDB\nLearn all about Node module system\nUse existing Node packages or publish your own\nWrite asynchronous JavaScript code (promises and async/await)\nImplement CRUD operations\nStore complex, relational data in MongoDB using Mongoose\nImplement data validation\nImplement authentication and authorization\nHandle and log errors effectively\nSet up configuration for various environments (dev, test, prod)\nWrite unit and integration tests\nBuild features using test-driven development\n\n\nNode.js - Course Syllabus\n\n\nIntroduction to Node.js\nInstalling Node JS\nVar Hoisting and Functional Scope\nlet and const, let vs const\nFunction Expressions and Arrow Functions\nDefault Parameters, Rest Operator and Spread Operator\nString Templates\nJava Script Modules Export and Import\nfor... of loop\nObjects and Object Literals\nDestructuring Arrays and Objects\nGlobal Objects\nExporting Classes and Functions\nPromises\nNode.js Modules, Module Patterns, Shared Memory Modules\nNode Package Manager (npm)\nInstalling and uninstalling modules\nHow to generate package.json using npm\nNode.js Events\nNode.js File System\nNode Inspector\nNode.js URL Module\nInstalling Nodemon\nClient and Server\nCreating a Server\nStreams and Buffers\nPipes\nServing HTML Pages\nServing JSON Data\nRouting in Node.js\nNode.Js Uploading Files\nSending Emails in Node.js\nNode.js With MongoDB Database\nConnecting to MongoDB\nCreating Database\nCreating Collections and Dropping Collections\nSaving Data\nSelecting Data\nDeleting Data\nUpdating Data\nQuerying Data\nSorting Data\nLimit\n34. Node.js with Mongo DB Cloud\n35. Node.js with MySQL\n\n\nApplications of Node.js\nReal-time web applications\nStreaming applications\nMessaging apps\nChat programs\nSocial media apps\nVirtual emulators\nMultiplayer games\nCollaboration tools\nAPI\n\n\nAdvantages of Node.js\nNode.js offers an easy scalability\nEasy to learn\nNode.js is a single programming language\nThe benefit of FullStack JS\nKnown for offering high performance\nThe support of large and active community\nAdvantage of caching\nOffers the freedom to develop Apps\nGetting support for commonly used tools\nHandles the Requests simultaneously\nNode.js is highly extensible",
      "target_audience": [
        "Full Stack Developers",
        "NodeJS Developers",
        "Senior Developers - React, Node",
        "Beginners and newbies aspiring for a career in Web Development",
        "Node/JavaScript Developers",
        "Application Developers",
        "Software Engineers & Programmers",
        "Anyone wishing to learn Node JS and Express JS",
        "Frontend Developers - JavaScript, ReactJS, NodeJS",
        "Solution Architects & Technical Architects",
        "Engineering Managers",
        "IT Developers & App Programmers"
      ]
    },
    {
      "title": "RESTful Web API - The Complete Guide (.NET7 API) Part 2",
      "url": "https://www.udemy.com/course/restful-web-api-the-complete-guide-net7-api-part-2/",
      "bio": "Learn advance concepts in RESTful web API (C#) with Authentication (.NET 7 API) and explore how to consume them.",
      "objectives": [
        "Add V2(version) of API",
        "Handle file/image uploads in API and Web Project",
        "Refresh token fundamentals",
        "Consuming refresh token endpoint in web application",
        "Clean Coding",
        "Dynamic Base Service",
        "Exception Handling via Filters and Middleware",
        "Azure Deployment"
      ],
      "course_content": {},
      "requirements": [
        "RESTful Web API - The Complete Guide (.NET7 API) Part 1 Course on Udemy"
      ],
      "description": "This is an Intermediate to Advance level course on ASP.NET Core Web API that will take you from an existing .NET API application that we build in Part 1 of the course and add more features in v2 of the API, along with enhancing security by using refresh token.\n\n\nBy the end of this course, you will be able to have a good foundation about advance concepts with .NET API.\n\n\nTopics Covered Include\nAdd V2(version) of API\nHandle file/image uploads in API and Web Project\nRefresh token fundamentals\nConsuming refresh token endpoint in web application\nClean Coding\nDynamic Base Service\nDeploying API and Web App to Azure\nException Handling via Filters and Middleware\nATTENTION: You must take Part 1 of this course before you proceed on taking Part 2. Once you complete Part 1, we will use the same project and build on to that project in this course when we explore the advance concepts.\n\n\nThe course is up to date with .NET 7, once .NET 8 is released if there are breaking changes, I will update the course. That way you can always be assured that the content would be up to date!\n\n\nGood luck and I hope to see you guys in the course!",
      "target_audience": [
        "Anyone looking to explore how to work with files in .NET API",
        "Anyone looking to learn refresh tokens from ground zero",
        "Anyone looking to explore intermediate/advance concepts in .NET API"
      ]
    },
    {
      "title": "Drupal 8 & 9 module development: start with custom entities",
      "url": "https://www.udemy.com/course/drupal-9-module-development-introduction-to-custom-entities/",
      "bio": "High quality course offering an introduction to custom entities, entity forms and object oriented Drupal. Code included!",
      "objectives": [
        "Set up a custom content entity",
        "Add fields to a custom entity",
        "Build a multi-step entity form and submit data to the database",
        "Create a listing of the custom entities with views",
        "Secure access with permissions",
        "Use theming hooks and twig files to custom-tailor displaying"
      ],
      "course_content": {},
      "requirements": [
        "Being able to install a Drupal 8,9 or 10 installation on a server or locally",
        "Preferably at least 2 years of experience in PHP or another coding language"
      ],
      "description": "[Please read the table of contents first! Also the prerequisites are important]\nThis is 2h 30min video course is chapter 3 of the \"Learning Drupal 9 as a framework\", the best-selling Drupal book on Leanpub.\nJoin me in an interesting journey of learning the Object-oriented architecture behind entities in Drupal.  In this hands-on course, a part of an offer software where users are able to create offers will be created.\nPDF with text and code available per chapter. Please read the table of contents carefully to know what to expect!\nThis is the ideal introduction for custom module development with Drupal.\nWe'll start by creating a custom entity from scratch. Custom-tailored access handling is one of the a-ha moments you will have in this course. Remember the difficulties with separating access between node types, right?\nWe'll make the entity fieldable, and add a media library where users can upload images.\nNext, we'll head on towards creating a multi-step entity form. So much more user-friendly than the one-page node creation form you know. I promise you will uninstall the node module on some drupal websites sooner or later after taking this course.\nImpress your coworkers with Drupal skills that are rather new but extremely powerful.\nStef Van Looveren has more than 10 years of expertise with Drupal. His message is: \"It struck me that there are so few good learning paths for drupal. With this course, I try to fill the gap. I gave it my best and I hope you will enjoy it!\"",
      "target_audience": [
        "Drupal developers that want to learn more about custom entities",
        "Experienced site builders who want to custom code",
        "An introduction to module development"
      ]
    },
    {
      "title": "Make an Amazon Affiliate Marketing Website - Step by Step",
      "url": "https://www.udemy.com/course/amazon-affiliate-website/",
      "bio": "Create an Affiliate website without Coding Skills, Best for BEGINNERS. Amazon Affiliate Marketing - home-based Business",
      "objectives": [
        "By the end of this Course, you will be able to create Your Own Amazon Affiliate Niche Website.",
        "Choosing a particular niche for your Amazon Affiliate Website.",
        "How to select a Domain Name and buy Domain and Web Hosting altogether.",
        "How to install WordPress with 1-Click installation process.",
        "How to create an auto-rotating banner slider.",
        "How to make an Amazon Affiliate eCommerce website step by step.",
        "How to install a perfect theme in your affiliate website.",
        "How to use WooCommerce shortcodes to display products."
      ],
      "course_content": {},
      "requirements": [
        "You need a domain name (website name)",
        "You need web hosting (web space for your website to run on the internet)",
        "Interest in earning with Amazon Affiliate Program",
        "A Laptop/Desktop with good internet connection."
      ],
      "description": "Building an Amazon Affiliate Website is a highly profitable business nowadays.\nIn this step-by-step Amazon Affiliate Website Development Course, you will learn how to build a profitable Amazon Affiliate store that you can setup within 1 hour!\nCreating an affiliate website is easy to set up with WordPress and WooCommerce and it helps you to monetize your website with Amazon products.\nThe best part of making Amazon Affiliate website is that you don't need to maintain your own product inventory, you don't need to invest in buying the products. Amazon takes care of all the products, their delivery, refunds management, and payments.\nYou just need to focus on promoting their products on your Amazon Affiliate website and that's it.\nOnce you refer a product from your website, Amazon pays you some percentage of that sale amount direct to your Amazon Associate dashboard from where you can withdraw the payment directly to your bank account.\nIt hardly takes 30 minutes to build a profitable niche Amazon Affiliate Website with WordPress in 2019.\nThis entire course is 100% Beginner-friendly. Hence, if you are the one who knows nothing about Affiliate Marketing or who doesn't know how to make an affiliate website then this course is for you.\n\n\nWho this course is for:\nHousewives, Students, who wish to earn part-time, without any technical knowledge.\neCommerce business owners who want to expand their businesses with amazon affiliate networks.\nProfessionals who wish to use amazon affiliates network to open opportunities via monthly passive income.\nFreelancers who wish to earn secondary income as I do.\nFor everyone who has immediate plans to start their full time or part-time business explore income opportunities.",
      "target_audience": [
        "People who don't know anything about how to make a profitable niche Amazon Affiliate Website.",
        "Students who wants to earn a passive income for their hostel parties expenses, online shopping, etc.",
        "Housewives who are bounded to their homes but are eager to earn money by working 1-2 hours daily from home."
      ]
    },
    {
      "title": "Shopify App Development - Vanilla PHP, GraphQL, & REST API",
      "url": "https://www.udemy.com/course/shopify-app-development-in-php/",
      "bio": "Learn Shopify app development & create Shopify apps using Vanilla PHP, GraphQL, REST API, and more!",
      "objectives": [
        "You will learn how to create amazing Shopify apps",
        "You will learn how to use Shopify REST API",
        "You will learn how to use GraphQL API in vanilla PHP",
        "You will learn how to design a Shopify app without Polaris",
        "You will learn about Webhooks and how to works",
        "You will learn about ScriptTags, App Bridge, etc.",
        "You will learn about JWT / Session Tokens in Shopify"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Installing Development Tools",
          "Creating The Shopify App & Generating API keys",
          "Understanding API & Secret Keys",
          "Tunneling Local Server with Ngrok",
          "Creating the OAuth / App Installer",
          "Getting Access Tokens"
        ],
        "MySQL Database": [
          "Setting up MySQL Database",
          "Saving Stores Data in the Database",
          "Getting Access Tokens from the Database"
        ],
        "Creating The App & REST API": [
          "Creating The REST API Function",
          "Fixing Invalid API or Access Token (Unrecognized password)",
          "Understanding Our Code & Learning How To Use It Effectively",
          "Creating App Navigational Menus",
          "Creating Multi-Paged Shopify App",
          "Installing CSS Framework",
          "Creating Product Table & Learning How To Filter An API Request",
          "Deleting Products",
          "Updating Products",
          "Creating Products"
        ],
        "Script Tags": [
          "Creating Script Tags",
          "Deleting Script Tags"
        ],
        "GraphQL": [
          "What is GraphQL?",
          "Creating The GraphQL API Function",
          "Fetching Data with Queries",
          "Making Data with Mutations",
          "Issues you will encounter if you use GraphQL with REST"
        ],
        "App Bridge": [
          "Installing App Bridge",
          "Creating Actions in Embedded Apps"
        ],
        "JSON Web Tokens (Session Tokens)": [
          "Getting Session Tokens",
          "Verifying Signature",
          "Saving Session Tokens To A Database?",
          "About Session Tokens & Verifying Session Timestamps",
          "Cleaning Up The Verify Session Code",
          "Making API Calls in Frontend"
        ],
        "Fixing An Error With Shopify Class": [
          "Fix For The \"PUT\" Method REST API Call"
        ],
        "Billing API": [
          "What is Billing API & How it works?",
          "One-Time Application Charge",
          "Preventing Your Apps From Charging Merchants More Than Once",
          "Recurring Application Charge",
          "Fixing Our Code To Avoid NULL Errors",
          "Application Credits"
        ]
      },
      "requirements": [
        "Basic understanding of vanilla PHP",
        "Must know even just a bit of HTML, CSS, and JavaScript.",
        "Basic understanding of Shopify and its store features"
      ],
      "description": "When you wish to learn to program, the first thing most coders think of is to learn Python, C++, WordPress, or WooCommerce. But all of these languages and platforms are already saturated. That's why if you learn them, you'll most likely end up not getting a profit.\n\n\nSo, instead of making WordPress or other stuff, why not start making Shopify apps? Like what Shopify said, \"There's never been a better time to build a Shopify app because there are more than 1.8 million merchants across the globe that build, scale, and manage their businesses on Shopify\".\n\n\nIf you don't know, Shopify apps play an important role in every Shopify store's success. In fact, it is SO important that every Shopify store uses an average of SIX Shopify apps.\n\n\nSo why not start making Shopify apps?\n\n\nIf you don't know, you can make thousands of dollars with Shopify apps MONTHLY! You heard me right, MONTHLY! and you know what's more amazing? Shopify is no longer getting any shares from your app revenues! What that means is your profit is all yours!\n\n\nSo, are you interested?\n\n\nIn this course, I will be teaching you how to create a Shopify app from scratch using vanilla PHP. That means we are NOT going to rely on libraries or repositories created by other programmers. We ARE going to create everything from scratch.\n\n\nIf you want to learn more about me, I have been developing Shopify apps since 2018 and so all of the things I know, I will be sharing with you so YOU can start your new career and make a profit out of your Shopify apps.\n\n\nHere is what you are going to learn in this course:\nCreating API credentials\nUnderstanding API and secret keys\nCreating a local server and tunneling\nConnecting your Shopify app to the database\nCreating Shopify OAuth\nGenerating access tokens\nCreating REST API & GraphQL functions\nFixing basic errors\nCreating and adding ScriptTags\nShopify App Bridge\nJWT / Session Tokens\nWebhooks\nand much more!\n\n\nIf you think you're ready to start a new career then join us and let's begin creating YOUR very first Shopify app!",
      "target_audience": [
        "Beginners/Intermediate programmers who wants to learn Shopify app development",
        "PHP developers",
        "Shopify store owners who wants to create their own apps"
      ]
    },
    {
      "title": "JavaScript for Beginners Welcome to learning JavaScript",
      "url": "https://www.udemy.com/course/javascript-for-beginners-course/",
      "bio": "Learn JavaScript here Simple to follow step by step guide building JavaScript code from scratch beginner course",
      "objectives": [
        "write JavaScript code",
        "add JavaScript to web projects",
        "create interactive content",
        "add dynamic content",
        "event triggers",
        "work with the DOM"
      ],
      "course_content": {
        "Introduction to using JavaScript": [
          "JavaScript for beginners introduction to course",
          "Course Resources JavaScript",
          "What is JavaScript JavaScript for beginners",
          "JavaScript for beginners create javascript",
          "Output Content JavaScript for beginners",
          "JavaScript Coding Source Code 1",
          "DOM document Object Model JavaScript for beginners",
          "JavaScript Coding Source Code 2",
          "Functions JavaScript for beginners",
          "Add buttons JavaScript for beginners",
          "Event Listener JavaScript for beginners",
          "Variables JavaScript for beginners",
          "user Interaction JavaScript for beginners",
          "Events explained JavaScript for beginners",
          "Return Functions JavaScript for beginners",
          "JavaScript Coding Source Code 3",
          "JavaScript for beginners math operators",
          "Conditions JavaScript for beginners",
          "JavaScript for beginners logical operators",
          "JavaScript Coding Source Code 4",
          "Ternary Operator JavaScript for beginners",
          "Loops in JavaScript - JavaScript for beginners",
          "JavaScript for beginners events",
          "JavaScript for beginners events by class",
          "JavaScript for beginners set attributes",
          "JavaScript Coding Source Code 5"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Learn more with PDF guides and Resources for additional learning"
        ]
      },
      "requirements": [
        "Basic HTML",
        "Desire to Learn",
        "Computer"
      ],
      "description": "Experience JavaScript this course is designed to introduce you to JavaScript.\nStep by Step quick and easy to learn, get coding JavaScript NOW.\nWith over 14 years experience in web development, I share my knowledge with you. Course resources and links to get started are provided within this course. Learn how to add JavaScript to your website. How to use JavaScript to output content and make you web pages interactive.\nLearn about the DOM (document object model) and the power the is available at your fingertips. Learn about Functions and how to use them for quicker and easier code development. Create interactive buttons for web users. Source code is included step by step guide for beginners or anyone who wants to learn more about JavaScript.\nLearn about Event listeners and how important they are to connecting with users of your web content. Using variables effectively to hold value and simplify the code.\nBring your JavaScript to the next level by using events and trigger to execute functions and make calculations.\n\nPerfect for beginners to get introduced to JavaScript coding.\nMake you pages interactive and your content dynamic. User expect more from websites, they expect interactivity and JavaScript delivers.",
      "target_audience": [
        "learn about JavaScript",
        "beginners who want to know more",
        "HTML and CSS web developers who want to add JavaScript",
        "web developers",
        "web page creators",
        "anyone who wants to start using JavaScript"
      ]
    },
    {
      "title": "Python Django 4 Masterclass | Build a Real World Project",
      "url": "https://www.udemy.com/course/python-django-masterclass/",
      "bio": "Become an Expert Django Web Developer and Dramatically Increase Your Career Potential",
      "objectives": [
        "Learn to develop production-grade web applications using the Python Django Framework",
        "Create dynamic templates via the Django Template Language",
        "Use Forms and ModelForms to accept information from users on your website",
        "Master working with databases to build web applications that store data persistently",
        "Learn how to create your own URLs and views to serve user requests from the browser",
        "Work with and manage sessions in Django",
        "Understand how to use QuerySets to fetch data",
        "Work with the Django Admin Panel to manage and customise your website",
        "Implement Authentication in Django"
      ],
      "course_content": {
        "Introduction and setup": [
          "Course Introduction",
          "Getting the best out of this course",
          "Understanding the required tools",
          "Installing Python on Windows",
          "Installing Python on Mac",
          "Pycharm and Django",
          "Installing VS Code on Mac, Windows, Linux",
          "Introduction to the command-line terminal and its importance with Django"
        ],
        "Basics of Django and its working": [
          "Section Overview",
          "What is a Web Framework? Introduction to Django",
          "Understanding and setting up a Virtual Environment",
          "Creating and Setting up Django Project",
          "Understanding Django Project and its structure",
          "Running your Django application",
          "Terminals in Visual Studio Code",
          "Apps in Django and creating your first app",
          "How does Django work?",
          "Section Summary"
        ],
        "Working with URLs and Views": [
          "Section overview",
          "URL’s and getting our first URL running",
          "Understanding URLs and views in Django",
          "Views and app specific URL's",
          "Challenge: Create our second URL and view",
          "Dynamic URL’s",
          "Returning HTML as response",
          "Updating views to return multiple jobs",
          "Path converters",
          "What is a Request? Types of request: GET vs POST",
          "Redirects",
          "Challenge: Displaying all jobs on home page",
          "Reverse resolution of URLs and URL names",
          "Handling not found",
          "Section Summary"
        ],
        "Django Template Language": [
          "Section overview",
          "Django Template Language: The Need",
          "Creating your first dynamic template",
          "Behind the scenes and best practices",
          "Working with variables to render dynamic information",
          "render() function",
          "Challenge: One more variable",
          "What are tags?",
          "If…else statements",
          "For loops",
          "Django Template Language and Visual Studio",
          "Working with filters",
          "Writing comments in templates",
          "Challenge: Migrating job detail page to template",
          "Challenge: Migrating jobs list page to template",
          "URL tag in Django",
          "Section Summary"
        ],
        "Django models/working with the database": [
          "Section overview",
          "Basics: What is a database and why do we need it?",
          "Django and Databases",
          "What is ORM?",
          "Django Models, Field, Field types, Field options",
          "Creating our first Model and doing migrations",
          "Viewing tables created",
          "Adding more fields to our models",
          "Remigration",
          "Behind the scenes of Django Migrations",
          "Inserting data into the database",
          "Getting all data from the table",
          "__str__ in models",
          "Query Filters",
          "Getting single record from the table",
          "exclude()",
          "Limiting QuerySets",
          "Sorted results",
          "Field Lookups",
          "Updating the existing data",
          "Chaining QuerySets",
          "Job list page: Getting data from the database in-app",
          "Job detail page: Getting data from the database in-app",
          "Working with Slugs, why slugs",
          "Best practices and preventing updates of Slugs",
          "Defining limit and Using Slugs as index",
          "Aggregation",
          "Deleting data from the database",
          "Section Summary"
        ],
        "Django Admin Panel": [
          "Section overview",
          "Django Admin panel",
          "Exploring admin panel and activating models in admin",
          "Managing data with admin panel",
          "Behind the scenes of Django Admin panel",
          "Customizing admin panel",
          "Customizing model fields in list view",
          "Filters",
          "Allowing users to search",
          "Managing fields in detail view",
          "Working with Fieldsets",
          "Using inbuilt CSS classes",
          "Section Summary"
        ],
        "Working with multiple Models and Relationships": [
          "Section overview",
          "Working with multiple models / Relationships",
          "One to One relationship",
          "Managing data with One to One Relationships",
          "Many to One relationship",
          "Managing data with Many to One relationship",
          "Many to Many relationship",
          "Managing data in Many to Many relationship",
          "New models on Admin panel: Location Model",
          "New models on Admin panel: Author Model",
          "New models on Admin panel: Skills Model",
          "Section Summary"
        ],
        "Forms and ModelForms": [
          "Section overview",
          "Bringing forms to the front end: Forms and ModelForms",
          "Forms the traditional way",
          "Evaluating our form",
          "POST requests and CSRF tokens",
          "Adding serverside validations",
          "Saving data to database",
          "Evaluating our approach so far",
          "The Form class",
          "Our first Django Form",
          "Building our view with Form",
          "Analyzing our form",
          "Saving form data",
          "Different ways of rendering form",
          "Form options",
          "Validating fields",
          "Rendering form manually",
          "Rendering fields with for loop",
          "What are ModelForms?",
          "Configuring views to work with ModelForms",
          "Customizing defaults with ModelForms",
          "Validations in Model",
          "Working with choices",
          "blank vs required vs null",
          "Section Summary"
        ],
        "Working with Static Files and File uploads": [
          "Section overview",
          "What are static files?",
          "CSS and JS within HTML file",
          "A separate CSS file",
          "Behind the scenes of static files",
          "A separate JS file",
          "Best practices with static files",
          "Rendering images in your projects",
          "Image Uploads: Setting up a new app",
          "Saving and uploading images",
          "Rendering images on frontend",
          "Uploading files other than images",
          "Section Summary"
        ],
        "Finishing our job application": [
          "Section overview",
          "Way forward: What are we going to build?",
          "Updating Job detail Page",
          "Challenge: Updating Job List Page",
          "Adding missing models",
          "Updating Subscribe Page",
          "Inheritance with Templates and its need",
          "Using inheritance to organize templates",
          "Challenge: Updating Job detail Page",
          "Challenge: Updating Subscribe Page",
          "Submitting data from subscribe form",
          "Section Summary"
        ]
      },
      "requirements": [
        "Knowledge of Python",
        "Basic understanding of HTML and CSS",
        "A computer with an internet connection to install free development tools"
      ],
      "description": "Welcome to the Python Django 4 Masterclass, where you will learn Django and create a real-world project.\n\nPython is one of, if not the most popular programming languages in the world. As such, there is a huge demand for Python programmers. Django is the web development environment of choice for many, perhaps most Python developers.\n\nTo maximize your career opportunities, you must be proficient in coding for the web, and this course is designed to teach you just that.\n\nYour instructor in this course is Faisal Memon, who has over 12 years of experience building global products being used by millions of users across the globe and who was also part of the Google Launchpad Accelerator.\n\nIn this course, Faisal will teach you how to develop production-grade web applications using the Python Django Framework. You'll understand what a web framework is and why you should use one, and why the Django framework, specifically, is the perfect web framework to learn.\nThis course is already massive at nearly 20 hours and is constantly updated and revised.\nJust some of the things you will learn in this course include: -\n\n\nCreating your own URLs and views to serve user requests from the browser\nThe Django Template Language and how can you create dynamic templates with Django\nLearn filters in the Django template language\nDatabase migrations and multiple models\nWriting queries to fetch data using Querysets\nWork with the Django Admin Panel to manage/customize your website\nForms and ModelForms to accept information from users on your website\nManaging static files like HTML, CSS, and JS on the server\nImplementing Authentication in Django\nWorking with and managing sessions in Django\nDeploy apps on a real production server and see it live over the internet\nLearn to make APIs using the Django Rest Framework\nThis is a very comprehensive course designed to get you up to speed fast with the Django framework. To get the most out of it, you should have a working, basic knowledge of Python 3.\n\nBy the end of this course, you will have obtained sufficient knowledge and confidence with Django to be in a position to start applying for jobs as a Django Web application Developer.\nAre you ready to start the Python Django 4 Masterclass? Click the enrol button to make a start!\n\nFeel free to look at the free video previews of various lectures on this page. We look forward to seeing you on the inside.",
      "target_audience": [
        "Students with a basic knowledge of Python seeking to learn about web development using Django"
      ]
    },
    {
      "title": "Sending email with PHP: from Basic to Advanced",
      "url": "https://www.udemy.com/course/php-email/",
      "bio": "Learn how to send emails from your PHP website, including best practices.",
      "objectives": [
        "Choose the right tool for sending email with PHP",
        "Send emails from PHP to multiple recipients",
        "Send emails from PHP containing non-English characters",
        "Send emails from PHP containing images and with file attachments",
        "Use HTML and CSS in your PHP emails to add formatting and layout",
        "Use Composer to manage third-party code packages",
        "Create an asynchronous queue from scratch to improve browser response time when sending emails",
        "Use the RabbitMQ messaging server to build an asynchronous email solution",
        "Use Mailgun to send, track and receive emails"
      ],
      "course_content": {
        "Introduction and Project Setup": [
          "Introduction",
          "Install a Web Server on Your Computer",
          "Change the Root Directory of the Web Server",
          "Get Access to an SMTP Mail Server"
        ],
        "Using PHPMailer to Send email from PHP": [
          "How NOT to Send Email in PHP",
          "Install PHP Code Libraries Automatically with Composer",
          "Install the PHPMailer Library with Composer",
          "Configure PHPMailer with Your SMTP Server",
          "Put Configuration Settings in a Separate File",
          "Using PHPMailer to Send email from PHP"
        ],
        "How to use PHPMailer to send emails": [
          "Send an email to one recipient",
          "Add a Name to an email Address",
          "Sending emails to Multiple Recipients: the Difference Between To, Cc",
          "Send an email to Multiple Recipients using To, Cc and Bcc",
          "Sending an email from One Address but Getting Replies to Another",
          "Send an email with a Different Address for Replies",
          "Send email Containing Non-English Characters",
          "Send an email with a File Attachment",
          "Send an email with a File Attachment and Change the Filename",
          "How to use PHPMailer to send emails"
        ],
        "Using HTML and CSS to add formatting to your emails": [
          "Format the Body of an email using HTML",
          "Insert an Image into the Body of an email",
          "Add Styles to the HTML in an email using CSS",
          "Using HTML and CSS in emails: Online Resources that Make it Easier",
          "Sending HTML email: Why it's Important to Send a Plain-text Version t",
          "Add a Plain-text Version of an HTML email",
          "Using HTML and CSS to add formatting to your emails"
        ],
        "Sending emails asynchronously: build a basic asynchronous queue from scratch": [
          "Why it Takes a Long Time to Send an email using SMTP",
          "Send email Quickly from a Web Page",
          "Queue emails to be Sent Later: Save emails in Text Files",
          "Load all Classes using Composer’s Autoloader",
          "Send the Queued emails",
          "Run a PHP Script Automatically at a Specified Time",
          "Run the Queue Processing Script using cron",
          "Sending emails asynchronously"
        ],
        "Sending emails asynchronously using the RabbitMQ Messaging Server": [
          "Build a More Scalable Queue: Use Third-party Queue Software",
          "Install the RabbitMQ Messaging Server",
          "Build a More Flexible Queue: Use a Language-neutral Message Format",
          "Install PHP Libraries for RabbitMQ and Message Pack with Composer",
          "Create a Queue and Publish a Message to it",
          "View the Messages on the Queue",
          "Put the Queue Code in a Separate Class",
          "Process the Messages on the Queue",
          "Sending email asynchronously with RabbitMQ"
        ],
        "Third-party email services: Using Mailgun": [
          "Sending email without SMTP: Using Mailgun",
          "Send an email Using the Mailgun HTTP API",
          "Track What Happens to emails Once Sent",
          "Receive email with Mailgun",
          "Using Mailgun"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "You should already be familiar with PHP and HTML.",
        "You should be comfortable installing software on your computer - in the first section we'll be installing a web server.",
        "You should know the basics of using CSS to add styles to HTML. This course does NOT teach how to use HTML and CSS."
      ],
      "description": "Learn the basic concepts, tools and functions that you will need to send emails from your website or web application in PHP.\nLearn to Send emails using PHP in this Comprehensive Course.\n\nLearn basic email concepts\nDiscover the best tools and methodologies for sending emails using PHP\nLearn best practices to make sure your emails arrive as intended\nImprove response time in the browser by sending emails asynchronously\nUse third-party email providers to track what happens to emails once sent\nAdd Sending emails to Your PHP Toolkit\n\nIf you’re creating a website or web application in PHP, sooner or later you’ll want it to send emails to your users, for example:\na contact page\nan account activation email\na monthly report\nan invoice\na password reset email\na newsletter\nemail marketing\nand so on.\n\nSending email from PHP can be a tricky thing to get right. From making sure that your email is readable in as many different email clients as possible, to sending the email asynchronously so that your website responds as quickly as possible.\nThis course will teach you the basics through to the advanced techniques and tools used by professional PHP programmers.\nContent and Overview\n\nI designed this course to be easily understood by programmers who know PHP, HTML and CSS but don't have much experience sending emails from PHP.\nStarting with the basic concepts of how emails work, such as senders, recipients, file attachments, using HTML and CSS and so on, this course will take you through all the steps needed to have your PHP website sending emails to its users.\nOnce we've covered the basics, we'll move on to advanced techniques like sending emails asynchronously and tracking emails using third-party email services.\nNew concepts are explained in detail as and when they're introduced, with full explanations of all the code used with detailed examples.\nAt the end of the course, you will be able to swiftly and reliably send professional-looking emails using PHP.\nComplete with working source code at every stage, you'll be able to work alongside the instructor and will receive a verifiable certificate of completion upon finishing the course.",
      "target_audience": [
        "This PHP email course is for those who already know PHP and who want to learn how to send email from their PHP scripts.",
        "This course is NOT for you if you don't already have some basic PHP and HTML knowledge."
      ]
    },
    {
      "title": "HTML and CSS: Introduction to Frontend Web Development",
      "url": "https://www.udemy.com/course/html-and-css-introduction-to-web-development/",
      "bio": "Let's Build and Host a Modern Restaurant Landing Page. Covers CSS Grids, Media Queries, Responsive Design, and more!",
      "objectives": [
        "Learn about HTML elements",
        "Learn about HTML attributes",
        "Learn about HTML divs",
        "Learn about HTML hyperlinks",
        "Learn about HTML text",
        "Learn about HTML emojis",
        "Learn about HTML images",
        "Learn about HTML icons",
        "Learn about HTML favicon",
        "Learn about HTML input",
        "Learn about HTML iframe",
        "Learn about HTML file path",
        "Learn about CSS class",
        "Learn about CSS id",
        "Learn about CSS color",
        "Learn about CSS fonts",
        "Learn about CSS variables",
        "Learn about CSS width",
        "Learn about CSS height",
        "Learn about CSS padding",
        "Learn about CSS margin",
        "Learn about CSS selector",
        "Learn about CSS specificity",
        "Learn about CSS units",
        "Learn about CSS background",
        "Learn about CSS border",
        "Learn about CSS shadow",
        "Learn about CSS position",
        "Learn about CSS grid",
        "Learn about CSS media query"
      ],
      "course_content": {},
      "requirements": [
        "No experience required"
      ],
      "description": "HTML and CSS are the building blocks of any website. This is a comprehensive course designed to introduce you to the fundamentals of web development. Whether you're a complete beginner or looking to solidify your understanding of HTML and CSS, this course is a great starting point.\nThrough a series of practical exercises and real-world examples, you'll dive into HTML tags and elements, discovering how to structure content, create headings, paragraphs, lists, and images. Mastering CSS, you'll explore styling techniques, apply custom fonts, colors, and backgrounds, and develop responsive designs that adapt to different screen sizes.\nBut this course goes beyond just the basics. You'll also learn best practices for organizing your code, optimizing website performance, and ensuring accessibility for all users. Plus, we'll cover essential techniques for troubleshooting and debugging, equipping you with the skills to overcome common coding challenges.\nBy the end of this course, you'll have the knowledge and confidence to build your own professional-looking websites from scratch.\n\n\nPrerequisites\nNone\n\n\n\n\nAbout this Course\nYou'll learn how to create beautifully structured web pages, style them with customized layouts and colors, and bring them to life with engaging visuals.\n\n\nFAQ\n\n\nAre there quiz multiple choice questions?\n\n\nThere are 40 Questions (20 HTML and 20 CSS) that rigorously test your understanding.\n\n\n__________________________________________________________________________________________________________________\n\n\nAre there practice problems?\n\n\nTowards the end of the course, we will recreate a couple of dribble shots (images provided) to apply what you've learned.\n\n\n__________________________________________________________________________________________________________________\n\n\nWhere can I ask you questions?\n\n\nYou can leave a comment under the \"Q and A\" tab in the lecture related to your question.\n\n\n__________________________________________________________________________________________________________________\n\n\nWhat is the best way to learn from this course?\n\n\nYou can adjust the video playback speed according to your preference. I would advise you to keep it x1.5 in case I talk too slow. Also, try to challenge yourself by attempting to recreate the dribble shots at the end of the course on your own, then compare your code with the solution.\n\n\n__________________________________________________________________________________________________________________\n\n\nWhat's next?\nI'm thinking of making a course on JavaScript to complete the three main front end technologies, then move on to Wordpress. After that, I may offer a course on SQL, a programming language designed for querying (accessing, modifying or extracting) information from a database.  Then, a backend server side programming language course on PHP, which allows you to dynamically place content in your html based on your SQL queries.",
      "target_audience": [
        "Beginners who want to learn how to build and design websites"
      ]
    },
    {
      "title": "The Complete HTML5 & CSS3 Course Build Professional Websites",
      "url": "https://www.udemy.com/course/html5css3/",
      "bio": "In This Complete Course Students Will Learn How to Use HTML5 & CSS3 to Build their own Beautiful Professional Websites",
      "objectives": [
        "Build A Website Using HTML5 and CSS3",
        "Learn And Understand HTML5 and CSS3",
        "Apply HTML5 And CSS3 Coding",
        "Learning Coding",
        "Work As A Web Developer Full Time",
        "Build Multiple Websites"
      ],
      "course_content": {
        "Welcome! Learn How This Course Will Help You Build A Website With HTML5 & CSS3": [
          "Course Introduction & Course Benefits - How We Will Help You Build A Website",
          "How To Use This Course To Gain The Maximum Form Our Teachings",
          "Course Essentials - Before Moving Any Further Please Read and Use This Document"
        ],
        "Introductions and Basics of HTML5": [
          "Introduction",
          "Html5 DTD",
          "WBR tag"
        ],
        "New Updates about Multimedia": [
          "Audio Tag",
          "Audio Tag Attribute",
          "Video Tag",
          "Video tag attribute"
        ],
        "HTML5 New Forms Elements": [
          "Html forms",
          "Adding CSS to Form",
          "Validating Email address",
          "Validating Numbers",
          "Date input and its attributes",
          "Date with week and month",
          "Time Input and Date Time Local Input",
          "URL and search field",
          "The required attribute and form validation",
          "Range Input",
          "Color input",
          "Input List and Datalist Tag",
          "Multiple File Uploader",
          "Adding Placeholder",
          "Autofocus and No Validate"
        ],
        "The Canvas Tag": [
          "Intro to Canvas",
          "Creating a simple Canvas And Rectangle",
          "Creating a Line",
          "Creating a Circle"
        ],
        "The Power of CSS3": [
          "Intro to CSS3",
          "BorderRadius Property",
          "Box Shadow",
          "Linear Gradient",
          "Linear Gradient more",
          "Radial Gradient",
          "Text Shadow",
          "White Space, Overflow and Text Over Flow",
          "Word Wrap and Word Break",
          "Font Face",
          "Transform, translate",
          "Transform Rotate, Skew and Scale"
        ],
        "Transition & Animation Effects on CSS3": [
          "Transition Effects",
          "Animation Effects"
        ],
        "The Complete and Professional Webpage Using HTML5 & CSS3 Techniques": [
          "Creating the complete webpage layout",
          "Creating the CSS Layout",
          "Completing the Basic Layout",
          "Creating header and Navigation",
          "Creating the Article area",
          "Creating Aside Area",
          "Completing the Project with Simple CSS",
          "Adding Border Radius Property",
          "Adding Font Face to the Project",
          "Adding Transition Property",
          "Adding Animation to the Project",
          "Adding some more Animation"
        ],
        "Course Conclusion and Final Exam": [
          "Course Conclusion and Final Exam",
          "Course Conclusion and Special Bonus and Offer Exclusive To My Udemy Students"
        ]
      },
      "requirements": [
        "A browser, We'll use chrome throughout in this course",
        "Any computer such as Mac, Windows, OSX or Linx",
        "An Open Mind To Learning New Things",
        "A notepad, We'll use notepad++ and I'll teach you to download and install notepad++ as well",
        "Desire to learn something new and interesting."
      ],
      "description": "⇉ Watch the promo video to see How You Can Start Becoming A Professional Web Developer Today!\n\n\n\n⇉ Join Over 950,000+ Students Who Have Enrolled In My Udemy Courses This Year!\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nThen this course is for you! Click \"Take This Course Now\" For Instant Life-Time Access!\nIn this course you will learn fist hand by building your very own website! We take a step by step approach to ensure each student receives a valuable learning experience.\nIn this course you will learn how to use HTML5 and CSS3 to create responsive websites your clients will love. Our course teaches you how to code showing you multiple examples that you can easily create afterwords on your own. This course will teach you everything you will need to know about HTML5 and CSS3 and what it will take to start your own website development and responsive design.\n__________________________________________________________________________\nHere is What You Will Learn Throughout Our Entire Course:\nIntroductions and Basics of HTML5\nNew Updates about Multimedia\nHTML5 New Forms Elements\nThe Canvas Tag\nThe Power of CSS3\nThe Complete and Professional Webpage Using HTML5 & CSS3 Techniques\nSo Much More!!\nThis course is designed for everyone and anyone, especially aspiring web designers, bloggers, programmers to business owners can benefit from learning some HTML5 and CSS3. This course is also for anyone who plans on becoming a web programmer or a web designer themselves. HTML5 and CSS3 are the essential languages you must master, especially in todays day of coding.\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin to move towards becoming a professional web designer and developer.\nWhen I learn something new about HTML5 and CSS3, I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But You Can Do It!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button at the top right now!\n...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys and Shahzaib Kamal",
      "target_audience": [
        "This Course is Designed For Web Developers Who Have Some Experience With HTML and CSS and Some of the Basics of Coding",
        "This course if for students who want to learn web design from start to finish!",
        "This course is for anyone looking to learn the basics of web design and beyond",
        "This course is for anyone looking to improve their web development skills",
        "This course is for anyone looking to add onto their existing web development skills",
        "This Course is Not For Those Looking For Anything Else But HTML5 and CSS3 Web Design"
      ]
    },
    {
      "title": "Beautiful React Three.js Fiber Configurator - Design & Code",
      "url": "https://www.udemy.com/course/react-three-fiber-configurator/",
      "bio": "Learn to create a 3D configurator using Three.js, React Three Fiber, Valtio and Framer Motion.",
      "objectives": [
        "How to create a design concept for a configurator",
        "Optimize the model in Blender to use in the experiment",
        "Implement the configurator using React, React Three Fiber and Valtio",
        "Create super easy UI animations with Framer Motion"
      ],
      "course_content": {
        "Introduction": [
          "What we will be creating?",
          "How does this course works?",
          "[ IMPORTANT ] Recent Updates to Environment Component"
        ],
        "Design": [
          "How to plan your designs for three.js / R3F experiences"
        ],
        "3D Optimization": [
          "Optimizing the model",
          "Baking the lightmaps on Blender",
          "Exporting the model to use in React Three Fiber Configurator"
        ],
        "React Three Fiber Development": [
          "Environment setup using CodeSandBox",
          "Creating the basic React Three Fiber Scene",
          "Load the blender Model",
          "Make the model follows the mouse position",
          "Create the Intro overlay",
          "Create the Customizer overlay",
          "Implementing Valtio for state management",
          "Implementing the colors configurator",
          "Implementing the decals selector",
          "Download button and Mobile adjustments",
          "Animate the interface with framer motion",
          "Conclusion"
        ]
      },
      "requirements": [
        "Prior knowledge of React is required and also in using online code tools like Code Sandbox. This is not a basic React Three Fiber course, so it is important that you are already familiar with the library before enrolling. Knowledge of building tools is also recommended."
      ],
      "description": "This course will explore creating a beautiful configurator using Three.js and React Three Fiber. We will see how I make my designs for applications, I will understand how to optimize the model in Blender and export it to use in the experiment. Next, let's dive into react three fiber and implement the entire project, from a simple scene to load the model, creating the color variations, covering state management concepts, and using Framer Motion to animate the interface.\nThis is a dynamic course and very focused on the final product. You can find the link to the final project in the introductory class or on my Twitter profile.\nEach class has a link to resources that contain the source code for the specific lesson. That way, you can use the video as a guide through each lesson and see the codes provided to build your project. Or you can follow the instructions in the video and code along with me as you go. You choose the best way and format that you like to learn the most.\nThis course is suitable for people familiar with the React Environment, who already know a bit about React Three Fiber, and who have prior knowledge of using online code tools like CodeSandBox.",
      "target_audience": [
        "For those who already know Threejs or React Three Fiber and want to learn how to create and manipulate the interface of their applications using React Three Fiber together with Valtio and Framer Motion"
      ]
    },
    {
      "title": "Learn HTML 5 in 1 hour",
      "url": "https://www.udemy.com/course/learn-html-5-in-1-hour/",
      "bio": "Learn how to code in HTML 5 in 1 hour. This class is set up for complete beginners!",
      "objectives": [
        "To learn the basics of HTML 5",
        "To learn about web development",
        "Get you started with HTML 5"
      ],
      "course_content": {},
      "requirements": [
        "An internet connection",
        "Google Chrome (Free Web Browser)"
      ],
      "description": "Have you ever wanted to learn to code but don't know where to start? Learning how to code can get you a better job and lead to a better future. This course starts you off with the basic coding language of HTML 5. This is a very condensed 1 hour tutorial that will show you how to code in HTML 5. Enroll to begin your journey to be a web development master.",
      "target_audience": [
        "Complete beginners"
      ]
    },
    {
      "title": "Angular 2 Master Class with Alejandro Rangel",
      "url": "https://www.udemy.com/course/angular-2-master-class-with-alejandro-rangel/",
      "bio": "Get all the knowledge required and become an Angular 2 ninja. Build many applications following the live Master Class",
      "objectives": [
        "Full understanding of Angular 2",
        "Master Angular Components, Directives, Pipes, Services, Routing, Http, Bootstrapping and many more details",
        "Good techniques for coding with Angular 2",
        "Code with examples",
        "You will learn everything you need to work with Angular 2. I can guarantee that this Master Class will give you all the knowledge you need",
        "Master TypeScript and ES6"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with Html, CSS and Javascript in order to be able to follow this master class",
        "You should download any of the following IDE: Visual Code Studio, Sublime Text or WebStorm. I will make examples with all of them, so, you can be familiar and choose the most suitable for you",
        "It is a plus if you know Angular 1. I will be comparing both frameworks many times"
      ],
      "description": "Learn everything you need to become an Angular 2 expert!\nIn this Master Class you will learn all aspects of Angular 2 including ES6 and TypeScript. You will get three packages in one course!\nYou just need to know pure Javascript, CSS and HTML, I will teach you the rest needed for becoming a master in Angular 2. Additionally, You will be using several IDEs, so, at the end of the class you can decide which is the most suitable for you, specifically we will take a look on WebStorm, Visual Code Studio, Sublime Text and Plunkr.\nThis Master Class is a live session of more than 9.5 hours will lots of examples, exercises and professional tips that you won't get in any other documentation available today.\nEvery section is divided in a Theory lesson and a Practical Exercise. This will help you to understand complex topics like Dependency Injection, RxJS, Routing and at the same time code with me and get the most of every part of Angular 2.\nWhy is this Master Class so valuable?\n9.5+ hours of unique content. This is 15+ GB of videos\nIt resumes lots of materials and conferences available in Internet related to Angular 2. This will save you hundred of hours watching different sources\nProfessional tips from practical examples learnt from real experience\nIt offers Angular 2, TypeScript and ES6 in one full package!\nThis master class goes beyond the basics, you will build full applications that mix all concepts you need for programming real applications\nOffers comparison between Angular 1 and 2 in the critical sections. This will help you for upgrading versions\nEvery section has a PDF, PPT and the source code. You can use this resources for practising after watching the course\nI offer personal assistance at any time you need to solve an exercise. Lets Skype!\nWhy do I recorded this Master Class?\nAs a professional Frontend architect, I started working with Angular 2 since alpha version. I study all parts of the framework while Angular team has been releasing new versions. I decided to switch a full Angular 1/Ionic product to Angular 2 and since them my team has been working intensively with Components, Directives, Routing, Http, Services, Styling and more.\nThis Master Class is my resume of all possible resources that I have found and used with my team and I consider that this is the most valuable material that I can offer in Internet.\nContinuous Updates of this course:\nThis Master Class will have updates every time that Angular 2 release new features\nI will upload all live conferences I do related to Angular 2. This is a big plus, you will learn from the audience questions too\nWhy Angular 2?\nOne of the most popular open source JavaScript frameworks in the world of web application development is AngularJS. Since its release, it has received an exponential growth of adoption and support.\nAnnounced at the ng-conference in October 2014, Angular 2.0 is the new version of Angular.\nFor those who thought that it will be just an update… sorry, it is not! Angular 2 is an entire new framework with breaking changes.\nFaster than Angular 1, Angular 2 uses natural, easy-to-write syntax. It gives you the tools you need to build apps for desktop, mobile web, Android, and iOS.\nWhat are you waiting for? Register now and enjoy the course!",
      "target_audience": [
        "Angular 2 is for frontend developers that want to learn about the next version of Angular",
        "This Master class is recorded in live, so, you should code with me, follow the examples, make mistakes and debug the code. This is the best way to learn new frameworks",
        "You should take this Master Class if you really want to understand all areas of Angular 2. There is a dedicated section for every part of the framework"
      ]
    },
    {
      "title": "Blazor WebAssembly - Full Stack Web Development",
      "url": "https://www.udemy.com/course/modern-web-development-with-blazor-and-net-core-5/",
      "bio": "Learn to build a Blazor WebAssembly application using enterprise level concepts, design patterns, and features.",
      "objectives": [
        "Build a Modern Web Application using Blazor WebAssembly",
        "Code First and Entity Framework",
        "Enterprise Level Architecture and Patterns",
        "Dependency Injection",
        "Use NuGet Package Manager",
        "Manage and Track Changes using GitHub",
        "Asynchronous Programming in .NET Core",
        "Deploy Blazor Application to Microsoft Azure",
        "Progressive Web Application",
        "Blazor Components",
        "Blazor WebAssembly and .NET Core RESTful API",
        "Identity Core and Identity Server (Upgrade to Duende Identity Server)",
        "REST API Development",
        "Custom CSS and JavaScript in Blazor",
        "Single Page Application"
      ],
      "course_content": {},
      "requirements": [
        "A computer",
        "A basic understanding HTML and CSS",
        "The Internet",
        "A Willingness to Learn"
      ],
      "description": "Overview\nWriting modern web applications with a rich UI can be tedious. Blazor gives us .NET developers a chance to leverage our C# skills and build interactive web UIs. In this course, Modern Web Development with Blazor and .NET 5, you will gain the ability to build web applications using Blazor. We will explore: setting up your first Blazor application, how to work with an API and how data binding works, how to create and integrate JavaScript components.\nWhen you have finished this course, you will have the skills and knowledge to build a web application using Blazor.\n**UPDATE**\n.NET 6 is now available and is shipped with Visual Studio 2022. This course has been updated to show how to create the project using Visual Studio 2022 and .NET 6.\nEverything in this course is .NET 6 / .NET 7 compatible.\nOtherwise, everything in the project will work just the same if you are not inclined to upgrade, even if you do.\n\n\nWhy Develop With Blazor?\nThe most popular JavaScript client-side web frameworks have been Angular, React, Vue and others. In this course, we keep it .NET by using Blazor, which is Microsoft's response to that monopoly.\nBlazor allows you to create a Single Page Application on top of .NET Core and continue coding in C# (without needing to flip between C# and JavaScript too much). Blazor apps boast reusable web UI components implemented using C#, HTML, and CSS. Both client and server code are written in C#, allowing you to share code and libraries.\n\n\nBlazor WebAssembly\nBlazor can run your client-side C# code directly in the browser, using WebAssembly (WASM for short). Because it's real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.\nWe will explore many intricacies of the Blazor life-cycle, data flow, JavaScript Interoperability, and general development activities and nuances.\nDeploy To Microsoft Azure Cloud\nAzure Web App Service is key to deploying the API and Blazor Server Applications. We will also enlist Azure SQL for the Database to support our API.\nBuild A Strong Foundation in .NET 5 Programming With Blazor:\nBuild a Single Page Application client-side UI using Blazor and .NET 5 (or .NET 6)\nDesign a Database Using Entity Framework Core\nRepository Pattern and Dependency Injection\nProgressive Web Application (PWA) with Blazor\nUnderstand the REST API and Client UI design principles\nGlobal Error Handling with HTTP Interceptor\nUnderstand C# and .NET Core Web Syntax\nUnderstand how to customize Blazor app layouts\nUnderstand User Authentication and Authorization in Blazor\nUnderstand Identity Core and Identity Server\nHandle Blazor Application User Authentication State\nConsume REST Web API in Blazor Application\nManage Packages with NuGet Manager\nSetup GitHub for Source Control\nDeploy Applications and Database to Microsoft Azure\nPREREQUISITES\nTo take this course, you should have at least 3 months of experience programming in C#. If you need to strengthen your C# fundamentals, you can take my C# beginner course C# Console and Windows Forms Development with LINQ & ADO .NET. If you need to brush up on your web development skills, you may also review Introduction To Website Development Technologies to learn the fundamentals of HTML, CSS, and JavaScript.\nContent and Overview\nTo take this course, you must have some knowledge of Object Oriented Programming, if not C#. Even if you have little exposure to the .NET development stack, this course is beginner-friendly and full of development tips.\nThis is a huge course. Over 10 hours of premium content, but smartly broken up to highlight related activities based on each module in the application being built. We will also look at troubleshooting and debugging errors as we go along, implementing best practices, writing efficient logic, and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course, and you will be challenged to be the best you can be.\nWe don't do things the perfect way the first time; that is different from the reality of writing code. We make mistakes and point them out and fix them around them. By doing this, we develop proficiency in using debugging tools and techniques. By the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, including some files to make it easier for you to replicate the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nClicking the Take This Course button could be the best step you could take towards quickly increasing your income and marketability! Also, remember that if you don't think the course is worth what you spent, you have a full 30 days to get a no questions asked refund!\n\n\nIt's time to take action!\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to learn Blazor WebAssembly",
        "Anyone who wants to learn .NET 5 (or .NET 6 / 7) Web Development and Programming",
        "Anyone who wants to learn Entity Framework",
        "Anyone who wants to learn to consume an API in Blazor"
      ]
    },
    {
      "title": "Gulp 4: Automate your development workflow",
      "url": "https://www.udemy.com/course/gulp-4-automate-your-development-workflow/",
      "bio": "Automate your development processes with Gulp 4 toolkit",
      "objectives": [
        "Set up Gulp 4 toolkit and automate the development workflow with Gulp (sass and less styles preprocessing, html/css/javascript minification, javascript files concatenation, images optimization and caching, source maps, Babel javascript transpiling, html kit templating language)"
      ],
      "course_content": {
        "Introduction": [
          "Course introduction",
          "Course structure",
          "Tools",
          "Exercise files"
        ],
        "Gulp: basics": [
          "Module introduction",
          "What is Gulp and why to use it?",
          "Gulp dependencies",
          "Gulp installation",
          "Gulpfile.js and our first task",
          "Gulp signal task completion",
          "Create project structure",
          "Sass task",
          "Update Sass task",
          "Sass source maps",
          "Gulp watch task",
          "Gulp Browser Sync task",
          "Add html watch task",
          "Assignment 1",
          "Module summary"
        ],
        "Gulp: Optimize CSS, JS and images": [
          "Module introduction",
          "CSS minify task",
          "JS watch and minify task",
          "Rename minified files",
          "JS concatenation task",
          "Imagemin error and solution",
          "Image optimization task",
          "Fix gulp-imagemin error",
          "Image cache task",
          "Default Gulp command",
          "Assignment 2",
          "Module summary"
        ],
        "Gulp: further improvements": [
          "Module introduction",
          "HTML .kit partials task",
          "Make .kit files look like HTML (syntax highlighting)",
          "HTML minify",
          "CSS autoprefixer task",
          "JS babel task",
          "Optimize our gulpfile.js structure",
          "Gulp Zip",
          "Gulp clean dist",
          "Handle notifications",
          "Gulp: Convert file to modern style",
          "Gulp execute tasks separately",
          "Summary"
        ],
        "Conclusion": [
          "Fully featured Gulp configuration file",
          "Course wrap up"
        ]
      },
      "requirements": [
        "HTML Basics, CSS Basics, Javascript Basics"
      ],
      "description": "What's this course about?\nIn this course you will learn how to automate routine and tedious tasks with Gulp 4. The code editor for the course is Visual Studio Code (although you can use any code editor). The course is aimed at the beginners or people new to Gulp and will teach you how to set up a good configuration file for the frontend development.\n\n\nMore details please!\nIf you have never heard of Gulp before, it is a special toolkit that allows you to automate routine tasks in web development. In this course I will show you how to set up Gulp 4, use different Gulp plugins, write tasks and track the file changes. At the end of the course you will have a fully functional gulp configuration file, which can be used in your own projects.\nWe will start from the very basics. I will show you how to install all the needed dependencies and the Gulp itself. Then we will explore how to write tasks and watch for file changes. Almost every lesson we will improve our gulp configuration file and add a new feature to it. I will also provide to you the complete gulp configuration file with additional comments describing most used Gulp APIs, glob patterns and a guide on setting up a task, so that you would have a good hint while creating your own tasks with Gulp.\nIf you still do routine tasks by yourself, Gulp will probably change it. Let’s get started!\n\n\nWhat should you know to take the course?\nJavascript basics, HTML basics, CSS basics\n\n\nWhat's inside?\nInstallation of Gulp dependencies\nInstallation of Gulp\nBasic Gulp tasks\nProject structure\nSASS preprocessing\nLESS preprocessing\nWatch for file changes\nStyles source maps (SASS/LESS)\nCSS minification\nJavascript minification\nHTML minification\njavascript concatenation\nFile renaming\nImages optimizations\nImages caching\nHTML templating language (Kit)\nCSS Autoprefixer\nJavascript Babel transpiling\nProject archiving\nComplete Gulp configuration file with comments that you can use in your own projects\n\n\nWho is teaching you?\nMy name is Sergey Shtyrlov. I'm a frontend developer. I've been working in this sphere for almost 7 years and continue doing it today. Gulp is essential for web development and you will sure benefit from it!",
      "target_audience": [
        "You want to automate some of your development processes",
        "You want to learn how to use Gulp"
      ]
    },
    {
      "title": "Learn Angular From Scratch - Complete Guide Design to Deploy",
      "url": "https://www.udemy.com/course/angular-app-from-scratch-complete-guide-design-to-deploy/",
      "bio": "Master Angular Frontend Framework and Learn to build a Complete Modern World App From Scratch using Bootstrap, Firestore",
      "objectives": [
        "Establish yourself as a skilled professional developer",
        "Benefits of Design & Prototyping, and you will learn how to design a complete web app using Figma Design Tool",
        "Develop modern world web applications with Angular Frontend framework",
        "Master fundamental concepts behind structuring Angular applications",
        "Integrate Bootstrap CSS Framework",
        "Troubleshoot common Angular errors",
        "Write clean and elegant code like a professional developer",
        "Master the best practices"
      ],
      "course_content": {},
      "requirements": [
        "Basic level knowledge of HTML, CSS, JavaScript is needed.",
        "You don't need familiarity with TypeScript or any previous versions of Angular. You're going to learn both TypeScript and Angular from scratch in this course."
      ],
      "description": "Angular App From Scratch - Complete Guide Design to Deploy\nA few years back I'm also a student or learner like you finding the best resources to master Angular, I struggled a lot to find a tutorial that cover design to deploy all in one, and I know you also struggling with the same problem, so I decided to come up with a brand new course that covers All the Essentials part that you want to build a full modern Angular App from Design to Deploy.\n\n\nso in this course will build a complete Angular Blog Application, using Angular framework, Firestore database, and Bootstrap CSS Framework, this blog apps comes with two main parts the front end view and the backend dashboard,\nso we will develop this Full Fledge Real-world Modern Lookin Angular web app with 3 major steps,\n\n\nDesign  Develop and Deploy\n\n\nDesign section,\nIn this section we will learn how to design a Website idea, into a graphical design using a design tool called Figma, using this tool we will design all the sections and pages of our angular blog site, once it done we will learn to make these graphical designs into a web prototype so then we can get the overall idea off what we are building.\n\n\nDevelopment stage,\nIn this Section will learn a to z all the core concepts, features technologies used in Angular from basic to advance, with this will learn,\nComponents, services, directives, pipes, Angular Forms, routers, Authentication, and so on,\nOnce we learned all the fundamentals of Angular, will start to build our Final Blog App from scratch, for this will take the advantage of bootstrap CSS framework, so will learn all the fundamentals of Bootstrap as well,\n\n\nAs a backend solution for our Angular app will use Google's Firebase, as  the database will use the Cloud Firestore, as the Cloud Storage will use the Firebase Storage, For Authentications system Will Use the Firebase Authentication, and for the Last Deployment, will use the Firebase Host as our Hosting Space, will learn all about these firebase features from scratch one by one,\n\n\nActually, in this course, you will not only learn about Angular, but you will also get an overall idea of how to build a real-world modern App From scratch.\n\n\nThis course is well organized from Basic to advanced topics so anyone can follow up on this course even if you are Beginner.\n\n\nby the end of this course, if you followed my instructions exactly, you will gain the knowledge and Confidence to build any kind of real-world app on your own from scratch.\n\n\nand finally, if your get stuck with anything, or if you have any questions, I will be always there for you :)\n\n\nPay once, benefit a lifetime!\nDon’t lose any time, gain an edge and start developing now!",
      "target_audience": [
        "Developers who want to upgrade their skills and get better job opportunities",
        "Front-end developers who want to stay up-to-date with the latest technology",
        "Back-end developers who want to learn front-end development and become full-stack developers",
        "Hobbyist developers who are passionate about working with new frameworks"
      ]
    },
    {
      "title": "MERN Stack Web Development with Ultimate Authentication",
      "url": "https://www.udemy.com/course/mern-stack/",
      "bio": "Build Ultimate Authentication Boilerplate Project with MERN Stack from Scratch to Digital Ocean Cloud Servers",
      "objectives": [
        "Building Ultimate MERN (Mongo Express React Node) Stack Boilerplate Project",
        "Building Production Ready Authentication System",
        "Building Login Register System using Email Password",
        "Implementing Social Login System with Google and Facebook",
        "ACL - Access Control",
        "MERN Stack Web Development",
        "API Development with Node Js",
        "Frontend Web Development with React",
        "Create your own base project for all your future React Node FullStack Projects",
        "Learn FullStack Deployment to Digital Ocean Cloud Servers including MongoDB Setup",
        "Account Activation before saving user to database",
        "Login with Google",
        "Login with Facebook",
        "Private Routing",
        "Admin Routing",
        "Page Layout with React",
        "Working with LocalStorage",
        "Working with Cookies",
        "Working with JWT (json web token)",
        "Role based redirects",
        "Profile Update",
        "Auth Middleware",
        "Admin Middlewares",
        "Protecting Routes",
        "Handling JWT expiry",
        "Error handling",
        "Toast Notifications",
        "Forgot Password",
        "Reset Password",
        "Pushing projects to Github",
        "Pulling projects from Github to Digital Ocean",
        "Digital Ocean Server Configuration",
        "Deploying both backend/frontend to single Digital Ocean Droplet",
        "Committing changes after pushing project to live servers",
        "Adding a domain name",
        "Cloudflare CDN and Free SSL",
        "Force HTTP to HTTPS",
        "Redirect all www to non-www",
        "Updating Google and Facebook login redirect to production domain",
        "Redirect Digital Ocean IP to actual domain name",
        "Static Site / SEO"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Requirements",
          "Are you new to JavaScript React and NodeJs?",
          "Source Code"
        ],
        "Getting Started": [
          "Setup client",
          "List of NPM packages to install",
          "Setup server",
          "Installing NPM packages",
          "Source code"
        ],
        "Node Js API": [
          "Moving routes",
          "Moving to controllers",
          "Code for User model",
          "User model",
          "Applying middlewares",
          "OPTIONAL - Using Monto Atlas for MongoDB as a service in the cloud",
          "Mongoose version",
          "MongoDB Atlas Robo3T and Postman",
          "Connect to mongodb",
          "Source code"
        ],
        "Node Js Signin / Signup / Email Confirmation": [
          "Express validator",
          "Signup user",
          "Email confirmation workflow",
          "How to switch from Sendgrid to Nodemailer and Gmail to send Emails (OPTIONAL)",
          "Signup with sendgrid",
          "SENDGRID FORBIDDEN ERROR",
          "Send email on signup",
          "Account activation",
          "Signin user",
          "Source code"
        ],
        "React": [
          "Starting with react",
          "Create layout",
          "React router version",
          "Using react router dom",
          "Source code"
        ],
        "React Signup / Signin / Activation": [
          "Signup page setup",
          "Signup form",
          "Finishing signup",
          "Simple rules of useEffect",
          "User signin",
          "Activate account",
          "Active nav link",
          "Auth helpers",
          "Authenticate and signout",
          "Source code"
        ],
        "Private / Admin Routing": [
          "Private route",
          "Admin route",
          "Redirect based on role",
          "Source code"
        ],
        "User Profile": [
          "Read user profile",
          "Protect API endpoint",
          "Update user profile",
          "Admin middleware",
          "Profile update page setup",
          "Errors cleanup",
          "Pre populate profile update and handle JWT expiry",
          "Profile update with toast message",
          "Admin profile update",
          "Source code"
        ],
        "Forgot / Reset Password": [
          "Forgot password server",
          "Reset password server",
          "Forgot password client",
          "Reset password client",
          "Source code"
        ],
        "Login with Google": [
          "Login with google client",
          "Resources - Login with google (optional)",
          "Login with google - server",
          "Source code"
        ]
      },
      "requirements": [
        "Basic understanding of React",
        "Basic Understanding of Node Js",
        "Basic Understanding of JavaScript",
        "Ability to connect Node JS App to MongoDB (either using local mongodb install or mongo atlas)",
        "Interested in FullStack React Node MongoDB Web Development"
      ],
      "description": "MERN Stack (MongoDB Express React Node) FullStack Project from Scratch to Live Server with production ready Authentication\nMERN STACK\nLearn MERN stack web development by building production ready login register system with account activation, forgot password, reset password, login with facebook, login with google as well as ACL by implementing private and protected routes for authenticated user and users with the role of admin.\nAs a bonus, I have also included profile update and deployment to digital ocean cloud servers.\nIf you are looking to go FullStack with React Node Express and MongoDB or better known as MERN Stack then this should be your first go to  course. Because here you will learn to build an Ultimate boilerplate project which can also be used for any future MERN Stack projects you will build for yourself, for your clients or at your job.\nNew Lectures Added\nAdding a domain name\nCloudflare CDN and Free SSL\nForce HTTP to HTTPS\nRedirect all www to non-www\nUpdating Google and Facebook login redirect to production domain\nRedirect Digital Ocean IP to actual domain name\nThe key concepts covered in this course\nBuilding Ultimate MERN (Mongo Express React Node) Stack Project\nBuilding Production Ready Authentication System\nBuilding Login Register System using Email Password\nImplementing Social Login System with Google and Facebook\nACL - Access Control\nMERN Stack Web Development\nAPI Development with Node Js\nFrontend Web Development with React\nCreate your own base project for all your future React Node FullStack Projects\nLearn FullStack Deployment to Digital Ocean Cloud Servers including MongoDB Setup\nAccount Activation before saving user to database\nLogin with Google\nLogin with Facebook\nPrivate Routing\nAdmin Routing\nPage Layout with React\nWorking with LocalStorage\nWorking with Cookies\nWorking with JWT (JSON web token)\nRole based redirects\nProfile Update\nAuth Middleware\nAdmin Middleware\nProtecting Routes\nHandling JWT expiry\nError handling\nToast Notifications\nForgot Password\nReset Password\nPushing projects to Github\nPulling projects from Github to Digital Ocean\nDigital Ocean Server Configuration\nDeploying both backend/frontend to single Digital Ocean Droplet\nCommitting changes after pushing project to live servers\nBy the end of this course, you will have your own Production Ready MERN Stack Project running live in Digital Ocean Cloud Servers.\nHave a look at the promo video to get a better understanding of what this course is all about and how it can change your life for good :)\nWeb Development is not only about coding, It's also about deploying, dealing with domains, hosting, CDN, www/non-www, http/https, redirects, SEO, pushing new features and more. Get all that knowledge plus the production ready Authentication system, admin routes, page layouts with solid project architecture. This course's project is the beginning of something big :)\nLet's go Full Stack. Let's go MERN Stack.\n<code continue />",
      "target_audience": [
        "JavaScript enthusiast looking to go FullStack with React Node and MongoDB",
        "Web Developer who wants to build his own MERN Boilerplate project",
        "Web Developer who wants to build or add production ready Authentication system to his projects",
        "Web Developer who is curious how to setup FullStack project with React and Node",
        "Web Developer who wants to learn how to implement Layout and Routing system",
        "Web Developer who wants to learn to implement ACL (access control) for Admin and Subscribers (regular user)",
        "Web Developer who has build great projects but unable to go live because of not having production ready Authentication System",
        "All JavaScript React Node Js Developers who wants to start building production ready FullStack MERN Stack Apps",
        "Web Developer who is interested in learning how to deploy production ready apps to Digital Ocean Cloud Servers"
      ]
    },
    {
      "title": "Java Tutorial for Complete Beginners.",
      "url": "https://www.udemy.com/course/java-masterclass-zero-to-hero/",
      "bio": "Master and Learn Java Programming language for Beginners",
      "objectives": [
        "Gain a comprehensive understanding of Java programming fundamentals, including variables, data types, operators, and control structures.",
        "Master loops, functions, OOP principles, and delve into advanced array and string manipulation techniques for comprehensive Java proficiency.",
        "Solidify understanding of Java's core concepts, honing problem-solving abilities crucial for real-world application development.",
        "Establish a robust foundation encompassing fundamentals, arrays, strings, and OOP, vital for building complex applications.",
        "Learn Object Oriented Programming with Java"
      ],
      "course_content": {
        "Introduction": [
          "How to Install Java on Windows",
          "Variables",
          "Constructors",
          "This Keyword",
          "Arithmetic operators",
          "Quiz-1"
        ],
        "Class,Object,Method Intro": [
          "JAVA Methods Intro",
          "Static & Non Static Methods",
          "Quiz -2"
        ],
        "Functions": [
          "Normal Functions",
          "Function With Parameters",
          "Functions With Return Types",
          "Quiz-3"
        ],
        "Loops": [
          "For Loop",
          "While loop",
          "dowhile loop",
          "Quiz-4"
        ],
        "Arrays": [
          "Arrays-1",
          "Arrays-2",
          "Quiz-5"
        ],
        "Strings": [
          "Strings",
          "Quiz-6"
        ],
        "OOPS": [
          "Single-level inheritance",
          "Multilevel inheritance",
          "Interface",
          "Abstraction",
          "Polymorphism",
          "Quiz-7"
        ]
      },
      "requirements": [
        "No prior experience needed! This course is beginner-friendly. All you need is a computer and eagerness to learn. Let's dive in!",
        "You have ZERO programming experience and want to learn Java Programming"
      ],
      "description": "Unlock the power of Java programming with our comprehensive \"Java Masterclass: The Complete Guide\" course. Designed for aspiring programmers, this course is your gateway to mastering Java from the ground up. Starting with the basics, you'll learn how to create projects, run programs, utilize comments effectively, and grasp essential concepts such as variables, data types, and identifiers. Dive into the world of operators, including arithmetic, assignment and logical operators, along with conditional statements like if-else and switch statements.\n#1 Trending course\n\n\n# Around 8000 Students Enrolled  and   given  good ratings\nDelve deeper into Java's functionality with loops, functions, arrays, and strings. Learn how to work with arrays, manipulate strings, and utilize object-oriented programming (OOP) principles to create classes, understand inheritance, and implement interfaces. Throughout the course, you'll benefit from practical examples, hands-on exercises, and clear explanations to reinforce your understanding.\nBy the end of this course, you'll have a solid foundation in Java programming, enabling you to build your own Java applications with confidence. Whether you're looking to kickstart your programming career or expand your skill set, this Java Masterclass is your comprehensive guide to mastering one of the most widely used programming languages in the world. Start your journey to Java mastery today and unlock endless possibilities in software development and beyond.\nBy completing this masterclass, you'll be equipped with the knowledge and skills to:\nDevelop robust Java applications from scratch.\nUnderstand the fundamental concepts of programming and how they apply to Java.\nEffectively utilize Java's syntax, including variables, data types, and operators.\nNavigate control flow using conditional statements and loops.\nImplement functions to modularize your code and enhance reusability.\nWork with arrays and strings to manipulate data efficiently.\nGrasp object-oriented programming principles such as inheritance and interfaces.\nCreate and manage classes to organize and structure your code effectively.\nWhether you aspire to pursue a career in software development, enhance your programming skills, or simply gain a deeper understanding of Java, this masterclass provides the perfect foundation. Join us on this transformative journey and unlock your potential as a Java programmer today!",
      "target_audience": [
        "Individuals with little to no programming experience eager to learn Java from scratch.",
        "Programmers from other languages looking to expand their skillset with Java proficiency.",
        "Enthusiasts interested in coding, looking to explore Java programming and develop practical skills.",
        "You are a Beginner at Java Programming and want to Learn to write Great Java Programs",
        "You want to learn the Basics of Object Oriented Programming with Java"
      ]
    },
    {
      "title": "JavaServer Faces (JSF) Practical Guide",
      "url": "https://www.udemy.com/course/jsf-guide/",
      "bio": "Learn JSF from basics to database connectivity quickly. It's a fast paced course for efficient learning.",
      "objectives": [
        "Create JSF web application with database connectivity",
        "Build web forms with different form elements using JSF tags",
        "Add validations on form data easily",
        "Apply responsive templates into JSF project",
        "Perform CRUD operation on database using JSF"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of Java programming is recommended",
        "A computer",
        "JDK (Java development kit)",
        "Webserver (Tomcat)",
        "IDE (Eclipse)"
      ],
      "description": "Course Description:\n\nIf you want to create a quick and efficient web application, then this course is for you. \"JavaServer Faces (JSF) Compact Guide\"  introduces you to JavaServer Faces. In this course, you’ll start from basics to all the way to database connectivity, and you’ll learn how to do it in a way that’s both informative and engaging.\nIn this course, you will:\nGet a FREE 6-month subscription for IntelliJ IDEA Ultimate or another\nLearn the background working of the framework\nUnderstand building web forms with JSF tags\nApply validations on the forms\nUse web template to make the web application amazing\nConnect with the database and perform CRUD operation\nThis course is also chock full of activities that allow you to practice what you’re learning. Work with me over 8 exercises to become a web application developer.\n\n\nWhy Learn JavaServer Faces (JSF)\nLearning JavaServer Faces can benefit you professionally as you gain a popular skill and brings to in a better position to build web application quickly. It is an excellent skill for components development to enhance web applications and boost our career prospects as an IT professional.\nWhy Learn From Me\nLearning JavaServer Faces (JSF) can be challenging and complex. To navigate this maze, you need an easy and straight-to-the-point approach.\nThis course brings my teaching experience and industry know-how to you. I’ve taught IT for over eight years to 1,42,000+ students, and I’m also a web application developer. My teaching style is unique and easy to understand, with plenty of opportunities to practice: I take up simple examples and follow a step-by-step approach. Helping you master these subjects is my highest priority.\n\n\nNo question asked - Money Back Guarantee!\nThere is no risk, this course comes with a 30-day money-back guarantee. Once you purchase the course, if for any reason you are not satisfied with the course, please let us know, we will refund 100%, no questions asked. So you have nothing to lose, sign up for this course, and learn “JavaServer Faces (JSF) Practical Guide”!\n\n\nBy the end of the course, you will confidently build web applications using JSF\nJoin me on this adventure today! I’ll see you inside the course.",
      "target_audience": [
        "Java programmers who what's to create web applications",
        "Professionals willing to develop Java a skill",
        "Future Web application developers",
        "People willing to create quick web application using Java"
      ]
    },
    {
      "title": "JavaScript Step by Step how to apply it to your web pages",
      "url": "https://www.udemy.com/course/javascript-fundamentals-bootcamp-learn-how-to-use-javascript/",
      "bio": "Learn the concepts of the JavaScript programming language. Learn foundations for JavaScript programming web developer",
      "objectives": [
        "Understand basics of Programming",
        "Learn basic JavaScript",
        "Learn how to make interactive html web pages"
      ],
      "course_content": {
        "Course Introduction": [
          "JavaScript Fundamentals Course Introduction",
          "Course Tips",
          "Resources for Web Development",
          "Course introduction Help Tips",
          "How to use this course",
          "Course SOURCE FILES DOWNLOAD"
        ],
        "Basics of Javascript": [
          "Where do you place JavaScript Code",
          "Comments",
          "Console log JavaScript Communications",
          "JavaScript Writing Variables Camel Case",
          "JavaScript Strings Numbers Variables Writing JavaScript",
          "JavaScript Data Types JavaScript Objects Arrays Strings Numbers",
          "String Methods",
          "Number Methods",
          "Working with Numbers",
          "Writing Dates in JavaScript",
          "Challenge 1",
          "JavaScript Challenge 1 Lesson 1"
        ],
        "Get Coding JavaScript": [
          "Change HTML Attributes",
          "Change Image Source on Click",
          "Change CSS styling",
          "Use variable text to change innerHTML",
          "Challenge 2-5",
          "JavaScript Challenge Lesson 2",
          "JavaScript Challenge Lesson 3",
          "JavaScript Challenge Lesson 4",
          "JavaScript Challenge Lesson 5"
        ],
        "Dynamic Code JavaScript": [
          "Regular Expression",
          "Functions",
          "JavaScript Scope",
          "Working with Arrays",
          "Objects",
          "Object Methods",
          "Element Events",
          "Conditional Statements",
          "JavaScript Switch Statement",
          "For While do Loops in JavaScript",
          "Working with Loops",
          "Challenge 6-10",
          "JavaScript Challenge Lesson 6",
          "JavaScript Challenge Lesson 9",
          "JavaScript Challenge Lesson 10"
        ],
        "Final Notes": [
          "Try Catch Throws and Debugging"
        ],
        "Course Bonus Resources and Extra Lectures": [
          "How to create Page Elements DOM",
          "JavaScript Resources",
          "Download PDF JavaScript Coding Guide",
          "Learning Resource Collection"
        ]
      },
      "requirements": [
        "Web editor",
        "Understand Basic HTML",
        "Basic CSS"
      ],
      "description": "Learn web development with JavaScript. JavaScript is an essential part of creating websites learn the building blocks of web development with JavaScript programming.\n\nThis course is designed to get you the knowledge you need to succeed. We provide over 34 source files, challenges to get you coding and a unique approach to encourage you to code.\nGet ALL THE CONTENT you NEED in one place. Our unique European approach to teaching is designed to help you LEARN better. Its encouraged that you code, along with the course instruction. We show you how. You will find that this course is the fastest way for you to get a fundamental understanding of JavaScript programming.\nWe PROVIDE\nOVER 35 Lessons\nOver 8 Challenges\nOver 34 Source Files\nRegular updates to the course\nResource links to text editors and so much more\nwe don't waste time typing in the videos\nwe get right to the point\nwell covered code functions to get you started\nWith programming you need to understand the fundamentals in order to build on them.\n\nJavaScript is used everywhere. Its fast, easy to implement and can add a whole new layer to the user experience. Making web pages respond to the user, allows us to create a more dynamic experience for them. This is JavaScript!!\nNot having to contact the server when code functions can be run immediately makes JavaScript a SUPER FAST.\nSpeed. Being client-side, JavaScript is fast\nSimplicity. JavaScript is relatively simple to learn and implement.\nVersatility it has what you need to get the job done.\nDownload the source files, follow along as our instructor explains what each code function does. With real examples that work.\nJavaScript for beginners to JavaScript advanced users, this course also includes lots of coding examples. This course will show you how to Master JavaScript, learning dynamic web design using JavaScript. JavaScript is a crucial part to become a Complete Web Developer. Learn and master JavaScript from Scratch. Check out our other JavaScript courses to learn even more advanced JavaScript included with our of web developer courses. Comprehensive JavaScript Programming, learn by making and working with examples. Build dynamic websites with JavaScript.\njavascript web\njavascript design\njavascript complete\njavascript for programmers\njavascript tutorial\njavascript basics\nThis course is perfect whether you are an Absolute Beginner, who wants to learn about JavaScript Programming or whether you are a web developer who wants to learn more about JavaScript.",
      "target_audience": [
        "Learn the foundations of programming Javascript",
        "Anyone who wants to learn how to program in Javascript",
        "Anyone who wants to get a better understanding of Javascript"
      ]
    },
    {
      "title": "ASP.NET Core Web Application Using Razor Pages",
      "url": "https://www.udemy.com/course/aspnet-core-web-application-using-razor-pages/",
      "bio": "Build Complete Web Application using ASP.NET Core, Razor Pages, SQL Server Database, Session Data and Cookies",
      "objectives": [
        "Create a full ASP .NET Core Web Application using Razor Pages",
        "Create SQL Server databases and tables using Visual Studio 2022",
        "Perform CRUD Operations on SQL Server Databases",
        "Use Pagination to Split the Content over Multiple Pages",
        "Implement the Search Functionality to Find Data in the Database",
        "Upload Images to the Server",
        "Implement Authentication and Role based Authorization using Session Data",
        "Send Confirmation Emails",
        "Using Cookies to Add/Subtract/Delete Items from the Shopping Cart",
        "Form Validation using Attributes and Model Binding"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Source Code"
        ],
        "Manage the Contact Form": [
          "Introduction",
          "Create New Project",
          "Connect to SQL Server Database and Create a Table",
          "Install SqlClient Package",
          "Contact Form - Create the Form",
          "Contact Form - Traditional validation",
          "Contact Form - Validation using Attributes and Model Binding",
          "Contact Form - Add Messages to Database",
          "Send Emails",
          "Contact Form - Send Confirmation Emails",
          "Update EmailSender",
          "Messages - List received messages",
          "Messages - Add Table Pagination",
          "Message Details",
          "Delete Messages",
          "Source Code"
        ],
        "CRUD Operations on Books": [
          "Introduction",
          "Create books table and add images",
          "Books - List the books",
          "Books - Add search functionality",
          "Books - Add pagination",
          "Books - Add sort functionality",
          "Create Books - Build the Form",
          "Create Books - Upload images",
          "Create Books - Insert Books in Database",
          "Edit Books - Create the Form",
          "Edit Books - Update image",
          "Edit Books - Update Database",
          "Delete books",
          "Fix empty images error",
          "Source Code"
        ],
        "Authentication and Authorization": [
          "Introduction",
          "Add tables to database",
          "About Sessions",
          "Enable Session Middleware",
          "Register - Update Navbar",
          "Register - Create the Form",
          "Register - Create new Account",
          "Register - Send Confirmation Email",
          "Register - Create Authenticated Session",
          "Register - Access Control",
          "Login - Create the Form",
          "Login - Create Authenticated Session",
          "Logout",
          "Authorization - Create Attributes",
          "Authorization - Use Attributes",
          "ForgotPassword - Create the Form",
          "ForgotPassword - Send Reset Token",
          "ForgotPassword - Save Reset Token",
          "ResetPassword - Create the Form",
          "ResetPassword - Update the Password",
          "Profile - Show Profile",
          "Profile - Create Update Form",
          "Profile - Update Profile",
          "Users - Read Users from Database",
          "Users - Display Users",
          "Users - Add Pagination",
          "Source Code"
        ],
        "Create Orders": [
          "Introduction",
          "Create Order Tables",
          "Home page - Create Sections",
          "Home page - Create Book Items",
          "Home page - Read Book Items from Database",
          "Shopping Cart - Introduction",
          "Shopping Cart - Add Icon",
          "Shopping Cart - Update cookie using Javascript",
          "Shopping Cart - Read cookie on the server",
          "Book Details - Read book details from database",
          "Book Details - Display book details in razor page",
          "Book Search - Create the Search Form",
          "Book Search - List Book Items",
          "Book Search - Add Search Functionality",
          "Book Search - Implement Pagination",
          "Cart Details - Create Page Template",
          "Cart Details - Create OrderItem Class",
          "Cart Details - Convert Cookie to Dictionary",
          "Cart Details - List Cart Items",
          "Cart Details - Add Subtract Delete Items",
          "Cart Details - Order Summary",
          "Cart Details - Create Orders",
          "Admin Orders - OrderItemInfo and OrderInfo",
          "Admin Orders - Read Orders from Database",
          "Admin Orders - List Orders",
          "Admin Orders - Add Pagination",
          "Admin Order Details - Read Order Details from Database",
          "Admin Order Details - Show Order Details in the Page",
          "Admin Order Details - Update Payment Status and Order Status",
          "Client Orders",
          "Client Order Details",
          "Update Layout File",
          "Source Code"
        ],
        "PayPal Integration": [
          "Create paypal application",
          "Checkout - Display Order Summary",
          "Checkout - Add PayPal Buttons",
          "Checkout - Add Handler Methods",
          "Checkout - Get Paypal Access Token",
          "Checkout - Implement OnPostCreateOrder",
          "Checkout - Implement OnPostCompleteOrder",
          "Source Code"
        ],
        "Bonus": [
          "Use Rich Text Editor",
          "Multilingual Support and Localisation",
          "Drop-down Lists / Select Elements",
          "Store and Read the connection string from appsettings.json",
          "Publish ASP.NET Core Web Application to IIS Server"
        ],
        "[ NEW ] CRUD Operations Using Entity Framework": [
          "Introduction",
          "Create Project and Database",
          "Install Entity Framework Packages",
          "Create ApplicationDbContext",
          "Create Product Model and Products Table",
          "Add Products to Database",
          "Read Products",
          "Add Dropdown Item to Navbar",
          "Create ProductDto Model",
          "Create Product - Create the Form",
          "Create Product - Form Validation",
          "Create Product - Save Products",
          "Update Product - Show Product Details",
          "Update Product - Update Details",
          "Delete Product",
          "Read Products - Pagination",
          "Read Products - Search",
          "Read Products - Sort",
          "Source Code"
        ],
        "[ NEW ] Contact Form Using Entity Framework": [
          "Introduction",
          "Required Domain Models",
          "Create Contact & Attachment models and database tables",
          "ContactDto Model",
          "Contact Form - Create the contact form",
          "Contact Form - Save the contact",
          "Contact List - Show the contact list",
          "Contact List - Pagination",
          "Contact Details - Read the details from the database",
          "Contact Details - Display the details",
          "Contact Details - Download attachments",
          "Delete Contacts",
          "Send Emails using Brevo / SendinBlue",
          "Source Code"
        ],
        "[ NEW ] Create the Store Using Entity Framework": [
          "Introduction",
          "Edit Application Layout",
          "Home Page - Create Hero Section",
          "Home Page - Display Newest Products",
          "Products Page - Display All The Products",
          "Products Page - Add Pagination Buttons",
          "Products Page - Add Search Form",
          "Products Page - Filter Products",
          "Products Page - Sort Products",
          "Display Product Details"
        ]
      },
      "requirements": [
        "Beginner knowledge of C#, SQL, HTML and Visual Studio 2022"
      ],
      "description": "This course is for Beginners to ASP.NET having some knowledge of C# or similar programming languages.\nIn this course, I will show you how to use SqlClient to connect to the database and to execute SQL queries. In addition, I will show you how to implement the traditional authentication using Sessions.\nWe will use Visual Studio 2022 to connect to the SQL Server and to create the database/tables. So we don’t need to install SSMS (SQL Server Management Studio).\nIn this course, you will learn:\n- How to create an ASP.NET Core Web Application with Razor Pages\n- How to create databases and tables using SQL Server and Visual Studio 2022\n- How to update the layout of the application\n- How to use Session data\n- How to use Cookies\n- How to validate forms using attributes and model binding\n- How to send emails using ASP.NET Core and SendGrid\n- How to Implement Authentication and Role based Authorization\n- How to reset user password\n- How to perform CRUD operations (Create, Read, Update and Delete) on the database using ASP.NET and ADO (no Entity Framework)\n- How to perform CRUD operations using Entity Framework\n- How to use pagination (Split data on multiple pages)\n- How to add advanced search functionalities\n- How to upload images to the server\nTo follow this course, you need to install the following tools\n- Visual Studio 2022\n- Microsoft SQL Server\nAlso it is necessary to install two components into Visual Studio: “ASP.NET and web Development” and “.NET Desktop development”",
      "target_audience": [
        "Beginner developers who want to make a complete web application using ASP .NET Core and Razor Pages"
      ]
    },
    {
      "title": "Odoo 13 Technical Training",
      "url": "https://www.udemy.com/course/odoo-13-technical-training/",
      "bio": "Learn Odoo Technical Training From Scratch.All What you need to get started developing Odoo application",
      "objectives": [
        "Understand Odoo Framework",
        "Create Your First Module Odoo 13",
        "General Knowledges Odoo",
        "Installation Odoo 13",
        "Understand Odoo Debug Mode",
        "Create Form / Tree View",
        "Related Fields",
        "Fields Function",
        "Inheritance",
        "Sequences",
        "Attrs Fields",
        "Create Form Buttons",
        "Override Functions Models ( Create , Delete , Update )",
        "Wizard",
        "Security",
        "Create Email Template",
        "Create Filters And Groups",
        "Smart Button"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation Odoo 13 And Prepare environment of Development": [
          "Installation on Ubuntu 18.04",
          "Installation on Windows",
          "Install Python 3.7 on Windows",
          "Install Pycharm IDE on Windows",
          "Configuration Odoo With Pycharm",
          "Install Odoo Debug Extension Chrome"
        ],
        "What's New on Odoo 13": [
          "Odoo 13 News",
          "Add Widget Ribbon To Form View"
        ],
        "First Step on Odoo": [
          "Create Database",
          "General Overview",
          "Set Up Your Company Informations",
          "Understand Odoo Debug Mode And Update Views",
          "Let Your Odoo Look Like Entreprise Theme"
        ],
        "General Knowledges Odoo": [
          "Backup Restore Database",
          "Import Export Data",
          "Add New Language Translation",
          "Configure Outgoing Mail Servers",
          "Using Odoo Runbot Online For Tests"
        ],
        "Create First Module Odoo And Explore Standard Modules": [
          "Create First Module",
          "Understand Code and Structure of Module",
          "Install And Explore Some Modules Odoo",
          "Smart Method To make Development Easy"
        ],
        "Create Model and Add Form | Tree View": [
          "Create First Model",
          "Create Form & Tree View"
        ],
        "Related Fields": [
          "Field Many2one",
          "Field One2many",
          "Field Many2many"
        ],
        "Functional fields And Create Form Buttons": [
          "Fields Function",
          "Create Form Buttons"
        ],
        "Attrs Fields And Sequences": [
          "Adding Attrs For Fields",
          "Sequences"
        ]
      },
      "requirements": [
        "Basic knowledge of the Python programming language is advised",
        "Knowledge of the basics of programming"
      ],
      "description": "Odoo 13 Technical Training is dedicated to IT professionals, developers and integrators who want to starting  development  in Odoo and providing their personal solution of ERP.\ncustomize the standard odoo.\nThe Course contains video series and all code developed during training will be provided.\nThis training is starting from setting up development environment of odoo to expert level customization .We assure that developers with basic Python knowledge can take this course and build their career in Odoo development.\nIn the end of this course you will be able to easily do all these points :\nInstallation Odoo Linux / Windows\nUnderstand Odoo Framework\nUnderstand Odoo debug Mode\nCreate First Module Odoo\nCreate Form / Tree View\nCreate Related Fields\nCreate Fields Function\nCreate Form Buttons\nUnderstand Attrs Fields\nSequences\nInheritence\nAttrs Fields\nOverride Functions Models ( Create , Delete , Update )\nWizard\nCreate Email Template\nCreate Filters And Groups\nSmart Button\nSecurity\nRecord Rules",
      "target_audience": [
        "Developers",
        "Students",
        "Odoo Beginner",
        "ERP expert",
        "Anyone want to customize Odoo",
        "Anyone want to start with Odoo"
      ]
    },
    {
      "title": "WordPress Gutenberg Block Development with React JS and PHP",
      "url": "https://www.udemy.com/course/wordpress-gutenberg-block-development/",
      "bio": "Use ReactJS and PHP to build a custom WordPress Gutenberg block library - with React.js & WordPress Gutenberg (WP 6+)",
      "objectives": [
        "Build a complete custom WordPress block library",
        "Learn the difference between static and dynamic WordPress blocks",
        "Create endless WordPress block customizations and features with React",
        "Learn block variations and transform WordPress blocks into other blocks",
        "Load WordPress data within blocks",
        "Learn different styling techniques for WordPress blocks",
        "Build a dynamic block front-end with PHP and JavaScript"
      ],
      "course_content": {
        "Introduction and project setup": [
          "Important! Read this before you start the course! (Github repo etc)",
          "Introduction",
          "Udemy ratings and reviews",
          "Environment and project setup",
          "IMPORTANT! BREAKING CHANGE!",
          "Codebase overview",
          "Update the plugin structure and metadata"
        ],
        "Create the Curvy block": [
          "Start implementing the side panel",
          "Build out the side panel",
          "Introduction to block attributes",
          "Implement the top svg curve",
          "Enable built-in attributes using \"supports\"",
          "Different ways to add default styles",
          "Fix the curvy block styles",
          "Implementing the height and width controls",
          "Use the height and width attributes to manipulate the curve shape",
          "Implement the flip vertical and horizontal controls",
          "Use the flip vertical and horizontal attributes to manipulate the curve shape",
          "Use the ColorPicker to set a color for the svg curve",
          "Implement the bottom curve settings",
          "Hook up the bottom curve svg",
          "Introduction to inner blocks",
          "Create dynamic front end view for curvy block",
          "Add extra styles and inner blocks to front end",
          "Add top curve to curvy block front end",
          "Finish top curve front end view and add bottom curve"
        ],
        "Extra customizations for the curvy block": [
          "Create a custom WordPress block category",
          "Add custom svg icon for the curvy block",
          "Transform paragraph and heading blocks into a curvy block",
          "Create block variations for the curvy block",
          "Create block preview for the curvy block"
        ],
        "Create the Clicky blocks": [
          "Clicky blocks demo",
          "Create the clicky group block",
          "Create the clicky button block and restrict block types",
          "Save clicky group inner blocks",
          "Add styling and attributes to the clicky button block",
          "Add button label via RichText to the clicky button",
          "Implement block gap for clicky group",
          "Implement justify content for clicky group",
          "Add custom icons for clicky group and clicky button",
          "Load post type data",
          "Render post type dropdown in sidebar",
          "Load and render posts data in sidebar",
          "Render dynamic view for clicky group",
          "Render dynamic view for clicky button",
          "Refactor blockylicious.php"
        ],
        "Create the Piccy blocks": [
          "Create and register the new piccy gallery block",
          "Implement edit & preview mode toolbar button",
          "Add styles to edit mode and inner blocks",
          "Add piccy image block",
          "Implement piccy image media upload & select",
          "Saving an image as part of the piccy image",
          "Finish piccy image edit mode styles",
          "Implement the piccy gallery preview mode",
          "Add the thumbnail styles and full preview image",
          "Finish the piccy gallery preview mode styles",
          "Add the piccy gallery client facing front end",
          "Add the piccy gallery full image preview in the front end",
          "Cater for no image being set for the piccy image block"
        ],
        "Block patterns and default block styles": [
          "Custom block patterns",
          "Default block styles via theme.json"
        ],
        "Low-highlight text effect for rich text": [
          "Set up the codebase to register new text format",
          "Register and apply the new text format",
          "Adding and loading css for the text effect",
          "Add the color picker",
          "Save the css styles and attributes for the text effect",
          "Add the appropriate icons for the low highlight effect"
        ],
        "Extra": [
          "Create a zip file to install on other WordPress sites",
          "BONUS!"
        ]
      },
      "requirements": [
        "Some familiarity with the WordPress block editor and React JS would be beneficial. Everything else is covered in the course!"
      ],
      "description": "Master WordPress Gutenberg Block Development with React & PHP by building a completely custom WordPress block library.\nIn this course we'll be building \"Blockylicious\" - a completely custom WordPress block library built using React and PHP. We'll be building 5 different custom WordPress blocks in this course:\nIntroducing the Ultimate Gutenberg Block Library!\nCurvy: Break the mold with aesthetically pleasing curvy shape dividers. Elevate your content separation in style.\nPiccy Gallery & Piccy Image: Craft interactive image galleries that engage and enthrall your site visitors.\nClicky Group & Clicky Button: Elevate your call-to-action game with dynamic button groups that link directly to specific pages, not just URLs.\nWhat You'll Learn:\nReact within WordPress: Understand the fusion of React's component-based architecture within the Gutenberg editor for seamless block creation.\nStatic vs. Dynamic Blocks: Delve deep into the nuances and understand why dynamic blocks often win.\nCustom Block Essentials: Explore custom block data, side panels, post data retrieval, custom toolbars, and leveraging innate WordPress toolbars and features.\nBlock Variations: Craft varied designs like Curvy, Curvy top, and Curvy bottom.\nBlock Transforms: Master the art of transforming regular text paragraphs into feature-rich Curvy blocks using React components.\nCustom Block Metadata: Personalize your blocks with custom icons, categories, and more.\nInner Block Rendering: Dive into the mechanics of rendering inner blocks efficiently with React.\nBlock Restriction: Learn the art of defining which blocks fit where, such as ensuring Clicky Button blocks exclusively serve as children to Clicky Group blocks.\nInteractive Blocks: Harness the power of JavaScript and React to create dynamic blocks that interact and respond.\nBlock Previews: Get hands-on with block previews by utilizing \"example\" in block.json.\nStyling Techniques: Dive into different strategies for block styling from stylesheets, block.json attributes, to theme.json elements.\nTransform your WordPress designs and functionalities using custom built Gutenberg blocks enhanced by React and PHP. Enroll today and shape the future of your websites!",
      "target_audience": [
        "Web developers who want to learn how to create fully custom blocks for WordPress using the new WordPress Gutenberg block editor"
      ]
    },
    {
      "title": "Angular for Modern Web Development: A Complete Guide",
      "url": "https://www.udemy.com/course/angular-8-certification-training/",
      "bio": "Become a Front End / Full Stack Web Developer with complete command over Angular 8. Code, build, deploy an Angular 8 app",
      "objectives": [
        "Gain end-to-end knowledge of Angular 8 technology & framework",
        "Acquire skills for Full Stack Web Developer",
        "Prepare for Angular 8 Certification",
        "Create Angular apps that are device agnostic",
        "Learn Angular CLI Installation and different Angular 8 Components",
        "Understand TypeScript, Templates, and Decorators that are used to create components",
        "Understand Angular Component creation",
        "Learn how to customize Angular Components, Interpolation, Property Binding",
        "Learn Class Binding, Style Binding, Event Binding",
        "Explain what are Angular 8 Pipes and how they can be used",
        "Learn how to integrate Angular 8 with Bootstrap",
        "Understand Angular 8 Directives, Routing, Services",
        "Create Angular 8 Template Driven Forms and Reactive Forms",
        "Learn Angular 8 REST API and how Observables are used to consume REST services",
        "Explain Angular CLI and Angular 8 Life Cycle Hooks",
        "Learn to capture and validate data with template-driven forms",
        "Learn to modularize your apps with the Component Router",
        "Compiling Angular Application",
        "Explain Angular 8 Dev Build vs. Prod Build",
        "Deploy Angular 8 Application in Tomcat Server",
        "Perform & execute Unit Testing in Angular 8",
        "Learn tying data and events together",
        "Learn to build Angular directives"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Angular for Modern Web Development: A Complete Guide course by Uplatz.\n\n\nWhat is Angular?\nAngular is a popular open-source web application framework maintained by Google and a community of developers. It is used for building dynamic, single-page applications (SPAs) and progressive web apps (PWAs). Angular is a complete rewrite of AngularJS (its predecessor) and is based on TypeScript, a superset of JavaScript.\nAngular is a powerful framework for building modern web applications. Its component-based architecture, TypeScript support, and robust tooling make it a great choice for developers looking to build scalable, maintainable, and high-performance applications. Whether you're building a small project or a large enterprise application, Angular provides the tools and features needed to succeed.\n\n\nHow Angular Works\nAngular follows a component-based architecture, where the application is built as a tree of components. Here's a high-level overview of how it works:\nComponents:\nAngular applications are built using components, which are the building blocks of the UI.\nEach component consists of:\nA template (HTML) for rendering the view.\nA class (TypeScript) to handle logic and data.\nMetadata (decorators like @Component) to define the component's behavior.\nModules:\nAngular apps are modular and organized into NgModules.\nThe root module (AppModule) bootstraps the application.\nModules help organize the application into cohesive blocks of functionality.\nData Binding:\nAngular uses two-way data binding to synchronize the data between the model (component class) and the view (template).\nChanges in the UI are reflected in the model, and vice versa.\nDependency Injection (DI):\nAngular has a built-in DI system that provides dependencies (like services) to components.\nThis promotes modularity and testability.\nDirectives:\nDirectives are used to manipulate the DOM and extend HTML.\nExamples include structural directives (*ngIf, *ngFor) and attribute directives (ngClass, ngStyle).\nServices:\nServices are reusable pieces of code that handle business logic, data fetching, and other tasks.\nThey are injected into components using DI.\nRouting:\nAngular's router enables navigation between views based on the URL.\nIt supports lazy loading, route guards, and nested routes.\nChange Detection:\nAngular uses a change detection mechanism to update the DOM when the underlying data changes.\nIt ensures the UI stays in sync with the application state.\n\n\nCore Features of Angular\n\n\nTypeScript Support:\nAngular is built with TypeScript, which provides static typing, better tooling, and improved code quality.\nComponent-Based Architecture:\nEncourages reusability and modularity by breaking the UI into components.\nTwo-Way Data Binding:\nSimplifies synchronization between the model and the view.\nDependency Injection:\nMakes the application more modular and easier to test.\nRxJS Integration:\nAngular leverages RxJS for reactive programming, making it easier to handle asynchronous operations.\nCLI (Command Line Interface):\nAngular CLI simplifies tasks like creating projects, generating components, and building the app.\nCross-Platform Development:\nAngular can be used to build web, mobile (with Ionic), and desktop (with Electron) applications.\nPowerful Tooling:\nAngular provides tools like Angular DevTools for debugging and performance optimization.\nBenefits of Angular\nProductivity:\nAngular's CLI and component-based architecture speed up development.\nMaintainability:\nThe modular structure and TypeScript support make the codebase easier to maintain.\nPerformance:\nAngular's ahead-of-time (AOT) compilation and tree-shaking optimize performance.\nScalability:\nAngular is well-suited for large-scale applications due to its modular design and robust architecture.\nCommunity and Ecosystem:\nAngular has a large community, extensive documentation, and a rich ecosystem of libraries and tools.\nCross-Platform:\nAngular allows developers to build applications for multiple platforms using a single codebase.\nEnterprise-Ready:\nAngular's structure and features make it a popular choice for enterprise-level applications.\n\n\nAngular for Modern Web Development: A Complete Guide - Course Curriculum\n\n\n1. Introduction to Angular\nOverview of Angular\nHistory and versions of Angular\nArchitecture of Angular\nInstalling and setting up Angular\nCreating the first Angular application\nUnderstanding Angular app loading process\n2. Angular vs React\nComparison of Angular and React\n3. Advantages and Disadvantages of Angular\nKey benefits of using Angular\nLimitations and challenges of Angular\n4. Angular File Structure\nUnderstanding Angular project structure\n5. Angular Components\nIntroduction to Angular components\nCreating and managing components\n6. Angular CLI Commands\nEssential CLI commands for Angular development\n7. Angular with Bootstrap\nInstalling and integrating Bootstrap with Angular\nOverview of useful Angular libraries\n8. Angular Routing\nSetting up and implementing routing in Angular\n9. Angular Directives\nUnderstanding Angular directives\nUsing ngIf directive\nImplementing ngFor directive\nWorking with ngSwitch directive\nStyling with ngClass directive\nApplying styles with ngStyle directive\n10. Angular Pipes\nUnderstanding and using Angular pipes\n11. Angular Data Binding\nOverview of data binding in Angular\nEvent binding techniques\nProperty binding implementation\nTwo-way data binding in Angular\n12. String Interpolation in Angular\nUsing string interpolation for dynamic content\n13. Angular Forms\nIntroduction to Angular forms\nUnderstanding form data flow\nCreating and managing forms\nForm validation and testing\n14. Error Handling in Angular\nIdentifying and fixing common errors in Angular\n15. Dependency Injection and Services\nUnderstanding dependency injection in Angular\nCreating and using Angular services\n16. Angular Animations\nImplementing animations in Angular applications\n17. Dynamic Components in Angular\nUnderstanding and creating dynamic components\n18. Angular Modules and Deployment\nOverview of Angular modules\nDeploying an Angular application\n19. Introduction to Unit Testing in Angular\nBasics of unit testing in Angular applications\n20. Observables in Angular\nUnderstanding and using Observables in Angular\n21. Angular Universal\nIntroduction to Angular Universal for server-side rendering\n22. Latest Features and Updates in Angular\nNew features and changes in the latest Angular release",
      "target_audience": [
        "Aspiring web developers starting their career in web development.",
        "Front-end developers familiar with HTML, CSS, and JavaScript.",
        "AngularJS developers migrating to Angular (2+).",
        "Full-stack developers specializing in Angular for front-end development.",
        "UI/UX designers implementing designs using Angular.",
        "Students in computer science or IT fields looking to enhance their skills.",
        "Hobbyists interested in building personal projects with Angular.",
        "Career switchers transitioning from non-technical fields to web development.",
        "Experienced Angular developers deepening their knowledge.",
        "Tech leads and architects designing large-scale Angular applications.",
        "Enterprise developers working on complex, scalable applications.",
        "Freelancers and consultants offering Angular development services.",
        "Web application developers building SPAs or PWAs.",
        "Mobile app developers using frameworks like Ionic with Angular.",
        "Software engineers adding Angular to their skill set.",
        "QA engineers and testers automating tests for Angular applications.",
        "Product managers communicating effectively with development teams.",
        "IT and software development companies.",
        "E-commerce businesses creating dynamic online stores.",
        "Finance and banking organizations building secure web applications.",
        "Healthcare companies developing patient portals and telemedicine platforms.",
        "Educational institutions creating e-learning platforms."
      ]
    },
    {
      "title": "ReactJS and Flux: Learn By Building 10 Projects",
      "url": "https://www.udemy.com/course/reactjs-and-flux-learn-by-building-10-projects/",
      "bio": "Get the real world experience by building professional projects in React and Flux",
      "objectives": [
        "Get Conceptual understanding of ReactJS and Flux",
        "Learn practical application of ReactJS",
        "Learn professional tricks for smart web development",
        "Master the latest technologies building real world projects"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Bootstrap React Components": [
          "Section Intro",
          "Setup React & Bootstrap",
          "Creating React Components",
          "Component Props",
          "Working With State",
          "Bootstrap React Components Quiz"
        ],
        "Github Profile Viewer": [
          "Section Intro",
          "Files & Webpack Setup",
          "Main App Component",
          "Profile Component",
          "RepoList & Repo Components",
          "Search Component",
          "Github Profile Viewer Quiz"
        ],
        "Quick Quiz Application": [
          "Section Intro",
          "App Component Setup",
          "QuestionList & Question Component",
          "Quiz Logic",
          "Quick Quiz Application Quiz"
        ],
        "MovieFind": [
          "Section Intro",
          "Flux Structure & Gulp Part A",
          "Flux Structure & Gulp Part B",
          "Flux Setup & Preperation Part A",
          "Flux Setup & Preperation Part B",
          "SearchForm Component",
          "Working With The API",
          "Displaying Results",
          "Quiz"
        ],
        "Firebase ContactList": [
          "Section Intro",
          "Flux Boilerplate Setup",
          "Adding Contacts To Store",
          "Persisting Data To Firebase",
          "Listing & Deleting Contacts",
          "Edit & Update Contacts Part A",
          "Edit & Update Contacts Part B",
          "Quiz"
        ],
        "Stickypad Notes": [
          "Section Intro",
          "Stickypad Boilerplate Setup",
          "AddNoteForm Component",
          "Add & Fetch Notes From MongoLab",
          "Display Sticky Notes",
          "Delete Sticky Notes",
          "Stickypad Notes Quiz"
        ],
        "InfoFinder Search Engine": [
          "Section Intro",
          "InfoFinder Fluxboiler Setup",
          "Search Form",
          "Fetch Data From DuckDuckGo API",
          "Display Results",
          "InfoFinder Search Engine Quiz"
        ],
        "Youtube Gallery": [
          "Section Intro",
          "Boiler & Add Video Form",
          "Persist Data To Firebase",
          "Displaying Videos",
          "Deleting Videos",
          "Youtube Gallery Quiz"
        ],
        "Socket.io Chat App": [
          "Section Intro",
          "Webpack & React Setup",
          "Server Connection Setup",
          "Adding Messages",
          "Display Messages",
          "Username Functionality",
          "Socket.io Chat App Quiz"
        ]
      },
      "requirements": [
        "Basic web development knowledge of HTML, CSS and JS",
        "Basic Knowledge of React"
      ],
      "description": "The problem of scale and complexity creates new challenges for system designers and force us all to fundamentally innovate processes and paradigms for software creation. React and Flux are Facebook's response to their scaling problems and these technologies have opened up new avenues for all web programmers worldwide. React has become the buzzword as it provides a cool new framework to solve real world problems and if you are a web developer you must learn this amazing new technology.\n\nThis is where our Projects Using React JS and Flux course comes in. The course has been meticulously designed in a manner to help you understand the technology as well as have a little fun with them. Using 10 different projects, we will get you on board on how to use ReactJS and Flux to make your application unique, just like you!\nWhat are ReactJS and Flux?\nCreated by Facebook, both technologies were designed to simplify the process of coding and making applications. ReactJS is a powerful JavaScript library that uses an XML-like syntax called JSX to describe component's DOM representations. It allows you to not only easily create interactive User Interface (UI) components, but also reuse them when needed in other projects.\nOn the other hand, Flux is an application architecture that is used for creating dynamic client-side JavaScript web applications and works alongside ReactJS. Flux is used to maintain a unidirectional data flow, in order to deal with scalability issues that can arise in the MVC and simplify the data flow.\nThe Projects Using React.JS and Flux tutorial is the perfect way to not only learn these technologies, but also understand how they can be practically applied to create applications. It will also give you a working idea of other technologies that can be used in tandem with these technologies.\nIn this course, you will build the following 10 projects:\nProject 1 – Bootstrap React Components – This is a starter project to help you understand how to use Bootstrap to create basic React components.\nProject 2 – Github Profile Viewer – Learn how to use ReactJS to create a UI and fetch data from the Github API.\nProject 3 – Quick Quiz – Design a simple React quiz application\nProject 4 – Movie Find – Learn how to create a movie find database that uses the OMDB API to fetch movies from the database.\nProject 5 – Contact List – Create a contact list and learn how to use the Firebase database technology\nProject 6 – Stickypad Notes - Create a fancy ToDo List that uses a Stickypad image for its background\nProject 7 – InfoFinder Search Engine – Learn how to use the DuckDuckGo API to design a fully-functional search engine.\nProject 8 – Youtube Gallery – Create a complex video gallery that allows you to add YouTube videos using just the ID of the video.\nProject 9 – Socket . io Chat – Learn how to create a functional chat application that allows you to create a username and send messages back and forth over web sockets.\nProject 10 – Workout Logger – Finally one of the most interesting and the most complex application in the list, this Workout Logger will have a mobile friendly interface and will also teach you how to create a local storage.\nAt the end of this course, not only will you have 10 functional applications ready for use, but you will also learn how to use React.JS and Flux to create interesting web and mobile applications. Enroll now and become a React and Flux wiz.",
      "target_audience": [
        "Students who have basic understanding of React and Flux and want to learn practical development using these technologies"
      ]
    },
    {
      "title": "HTML and CSS for Web Designers: From Basics to Beautiful",
      "url": "https://www.udemy.com/course/html-and-css-for-web-designers-from-basics-to-beautiful/",
      "bio": "Responsive Web Design: Mastering HTML and CSS",
      "objectives": [
        "Understand the fundamentals of HTML, including its purpose, the structure of HTML tags, and the history of HTML and HTML5.",
        "Explore the essential HTML formatting elements, such as headings, paragraphs, and various formatting tags, to create well-structured web content.",
        "Learn how to use quotation-related HTML tags, including blockquotes, short quotations, and other semantic elements for content citation and abbreviation.",
        "Master the art of creating hyperlinks in HTML, including internal and external links, email links, and page jump links, while understanding link attributes etc",
        "Gain proficiency in incorporating images into web pages using HTML, optimizing images for web display, and ensuring proper accessibility.",
        "Distinguish between block-level and inline-level HTML elements and understand their roles in web page layout and content structure.",
        "Learn how to create tables in HTML5, including the use of table elements, attributes, and proper structuring of tabular data.",
        "Explore HTML5 media elements, including video and audio tags, and discover how to embed multimedia content, including YouTube videos, into web pages.",
        "Develop proficiency in creating HTML forms, understanding form attributes, and working with various input types to collect user data.",
        "Embrace the use of semantic HTML elements to enhance the accessibility and meaning of web content, both in theory and practice.",
        "Introduce the fundamentals of CSS, including its role in web design, different types of CSS, and CSS selectors for styling HTML elements.",
        "Explore CSS fundamentals, including the box model, box shadow, border radius, CSS grid, and flexbox for practical web page styling.",
        "Delve into typography in web design by working with Google Fonts, custom fonts, and CSS typography properties to enhance text presentation.",
        "Master the art of using background images and gradients in CSS to create visually appealing and customizable web backgrounds.",
        "Apply the skills learned in previous sections to create a complete single-page website, including navigation, hero sections, and content sections.",
        "Learn the principles of responsive web design using media queries and create a responsive menu for your web project.",
        "Explore CSS3 transformations and animations to add interactivity and visual appeal to web elements.",
        "Discover advanced web design techniques, including implementing a slider and a gallery lightbox using JavaScript libraries.",
        "Learn how to test and debug web pages using browser developer tools and feature detection methods, ensuring cross-browser compatibility.",
        "Apply the knowledge gained throughout the course to create another single-page website project, demonstrating proficiency in web design and development."
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "Are you eager to embark on a creative journey into the world of web design? Look no further! Our \"HTML and CSS for Web Designers: From Basics to Beautiful\" course is designed to equip you with the essential skills and knowledge needed to create stunning, user-friendly web pages.\nIn this comprehensive course, you will start from the ground up, learning the core principles of HTML (Hypertext Markup Language) and CSS (Cascading Style Sheets). Whether you're a complete beginner or have some prior experience, we'll guide you through every step of the web design process, from crafting clean and structured HTML code to applying beautiful CSS styles.\n\n\nCourse Highlights:\nHTML Mastery: Gain a solid understanding of HTML, including its history, tags, attributes, and the art of formatting web content.\nCSS Styling: Explore the world of CSS, mastering fundamental concepts like the box model, typography, background customization, and responsive design techniques.\nProject-Based Learning: Apply your newfound knowledge by creating real-world projects, including a single-page website, to showcase your skills.\nInteractive Elements: Learn how to make your web pages come to life with CSS3 transformations, animations, and the use of JavaScript libraries.\nAccessibility and Semantics: Discover the importance of semantic HTML and web accessibility to create inclusive and user-friendly websites.\nTesting and Debugging: Acquire essential skills in testing, debugging, and ensuring cross-browser compatibility for a seamless web experience.",
      "target_audience": [
        "Web Developers looking to solidify their HTML and CSS skills.",
        "Beginners are eager to dive into web design and development.",
        "UX/UI Designers seeking a better understanding of HTML and CSS for their projects.",
        "Anyone interested in creating visually appealing and responsive websites",
        "Beginner Frontend Developer who want to pursue their career in Frontend Web Development"
      ]
    },
    {
      "title": "Professional Web Scraping with Java",
      "url": "https://www.udemy.com/course/learn-web-scraping-with-java-in-just-1-hour/",
      "bio": "Learn how to scrape data from any static or dynamic / AJAX web page using Java in a short and concise way.",
      "objectives": [
        "Have a solid understanding of web scraping with Java",
        "Beeing able to scrape practically any web page (static AND dynamic / AJAX) though you learn the concepts behind web scraping",
        "Download, parse and extract data from websites with Jsoup",
        "Call web APIs in Java with Unirest",
        "Export your data as CSV or JSON",
        "Build web scrapers that stay undetected and do not get blocked or banned"
      ],
      "course_content": {},
      "requirements": [
        "You should already be familiar with Java and Maven at a basic to medium level (the course will not show you how to setup Java, Maven or an IDE)",
        "You should be familiar with HTML/CSS and know how to use your browser's developer tools",
        "You should know about CSS selectors, though we use them for scraping static web pages",
        "Prior knowledge of jQuery helps you getting started faster with Jsoup, though this is not required",
        "You should know what a web API and AJAX is (basic level is enough)"
      ],
      "description": "In this short and concise course you will learn everything to get started with web scraping using Java.\nYou will learn the concepts behind web scraping that you can apply to practically any web page (static AND dynamic / AJAX).\n\n\nCourse structure\nWe start with an overview of what web scraping is and what you can do with it.\nThen we explain the difference in scraping static pages vs dynamic / AJAX pages. You learn how to classify a website in one of the two categories and then apply the right concept in order to scrape the data you want.\nNow you will learn how to export the scraped data either as CSV or JSON. These are some popular formats that can be used for further processing.\nUnfortunately many websites try to block scrapers or sometimes you just do not want to be detected. In the section going undercover you will learn how to stay undetected and avoid getting blocked.\nAt the end of the course you can download the full source code of all the lectures and we discuss an outlook to some advanced topics (private proxies, cloud deployment, multi threading ...). Those advanced topics are covered in a follow up course I am going to teach.\n\n\nWhy you should take this course\n\nStop imagining you can scrape data from websites and use the skills for your next web project, you can do it now.\n\nStay ahead of your competition\nBe more efficient and automate tedious, manual tasks\nIncrease your value by adding web scraping to your skill set\n\n\nEnroll now!",
      "target_audience": [
        "Anyone with an interest in learning web scraping and understanding the concepts",
        "Anyone who likes a short and concise course",
        "This course is NOT an introduction to Java",
        "This course will NOT show you how to setup your development environment",
        "This course is intended to get you started with web scraping. Very advanced topics (e.g. private proxies, cloud deployment, multi threading) are discussed but not implemented in this course. I will do an an advanced / enterprise level course on this separately...",
        "Windows, Mac, or Linux PC"
      ]
    },
    {
      "title": "Create E-shop with .Net Core MVC (step by step project)",
      "url": "https://www.udemy.com/course/asp-net-core-3/",
      "bio": "Creating ASP .Net Core 3.0 Database Driven Web E-commerce shop using Entity Framework Core",
      "objectives": [
        "Build .Net Core 3.0 app start to finish",
        "Create functional Shopping Cart",
        "Implement Identity and LogIn functionality",
        "Implement Authentication and Authorization",
        "Using Sessions",
        "Work with ViewCompoenents",
        "Work with TagHelpers",
        "Create Custom Tag Helpers",
        "Configure .Net Core 3.0 services",
        "Use of C# Interfaces and Repository Pattern",
        "Use Dependency Injection",
        "Apply MVC pattern",
        "Working with Server-side input validation",
        "Work with Entity Framework Core",
        "Implement Relationships betweet classes and tables",
        "Create and Seed Database using Code First approach"
      ],
      "course_content": {
        "Introduction": [
          "What Will You Learn and What Do You Need To Know",
          "What Will You Create (App Demo)"
        ],
        "Setting Up The App": [
          "Download Source Files",
          "Creating The Project",
          "Configuration and Routing"
        ],
        "Creating App Structure": [
          "Adding Models",
          "Adding Interfaces",
          "Adding Category Repository",
          "Adding Candy Repository",
          "Adding Repositories To Services",
          "Adding Controllers and Injecting Services",
          "Adding Action Methods",
          "Adding View",
          "Adding ViewModel",
          "Partial Views Overview",
          "Adding Partial Layout",
          "Adding ViewImports",
          "Adding Bootstrap and JQuery",
          "Styling Main Layout",
          "Styling List View"
        ],
        "Adding Entity Framework Core": [
          "What is Entity Framework and What It Does",
          "Adding Entity Framework and DbContext",
          "Adding Connection String",
          "Modifying Candy Repository for Entity Framework",
          "Modifying Category Repository for Entity Framework",
          "Creating Database Using Code First Migration",
          "Seeding The Database",
          "Seeding The Database - Fixing Issues"
        ],
        "Adding Navigation": [
          "Routing Overview",
          "Tag Helpers Overview",
          "Adding Details Action",
          "Adding Details View",
          "Adding Tag Helpers",
          "Adding Navigation Bar",
          "Working With Partial Views Overview",
          "Creating Partial View for Candy List",
          "Creating Home Controller",
          "Creating Home View"
        ],
        "Adding Sessions and Shopping Cart": [
          "Sessions and Shopping Cart Overview",
          "Adding Shopping Cart Item",
          "Adding Shopping Cart",
          "Adding Item To The Cart",
          "Removing Item From The Cart",
          "Getting All Items From The Cart",
          "Clear All Items From The Cart",
          "Calculating Total Order and Configuring Sessions",
          "Creating Shopping Cart Controller",
          "Adding Candy To The Cart Action",
          "Removing Candy From Cart Action",
          "Shopping Cart View",
          "Add To Cart Button"
        ],
        "View Components": [
          "View Components Overview",
          "Shopping Cart View Component",
          "Creating View For ShoppingCartViewComponent",
          "Category Menu View Component",
          "Displaying Candy For Selected Category"
        ],
        "Custom Tag Helpers": [
          "Creating Custom Email Tag Helper"
        ],
        "Adding Order Form": [
          "Creating Order and Order Detail Models",
          "Implementing Order Repository",
          "Adding Checkout Form and View",
          "Adding Checkout Action",
          "Adding ThankYou Action",
          "Adding Input Validation",
          "Adding Input Validation To Views"
        ],
        "Authentication and Authorization": [
          "Using Identity Overview",
          "Adding Identity To Project",
          "Adding Authentication to Project Overview",
          "Implementing Login Page",
          "Adding Authorization"
        ]
      },
      "requirements": [
        "4-6 months of programming in C# is recommended",
        "Basics of C# OOP programming, understanding Collections and Interfaces",
        "Visual Studio 2019 (previous versions of Visual Studio won't work)"
      ],
      "description": "Welcome to Creating ASP .Net Core 3.0 MVC Database Driven Web Applications\nAs the title of the course suggests, we will be creating a web driven application using ASP .Net Core 3.0 with the help of .Net Core and Entity Framework.\nStep by step, we will set up a small e-store with a back end database. For the next several hours, we will dedicate our time to interfaces, dependency injection, table relationships, .Net Core Services, Repository Pattern, MVC, ViewComponents, TagHelpers, Sessions, Authentication and Authorization, Entity Framework Core, and of course, C# language. But don't let any of that scare you. Quite the opposite.\nGet excited to learn a lot of new material and dive into the new world of .Net Core 3.0. The course makes the learning easy with the mix of introduction of new material, and practical coding! Every step is explained every time.\nRemember, this is a course, and a practical tutorial. There are lot of courses that will show you the way into one topic and then quickly move on to another topic. This is not one of those courses! My goal is to lead you step by step, all the way, through the new territory inside .Net Core 3.0 and introduce you to new concepts and topics and help you learn them. And equally important is to then help you understand and retain what you learned. If you learn best by combining explanation and coding along then this course is definitely for you!\nSo is this course for you? What skills should you have before taking it? If you are a programmer with decent understanding of OOP principles and C#, than you have the all the skills needed to benefit from this course. There are no prerequisites for .net core, or entity framework or how to create and MVC app. Since you are interested in this course, I assume you heard of these things and perhaps played around a little too. That's all that is needed to take this course.\nWell, let's code!",
      "target_audience": [
        "Students who want to develop .Net Core 3.0 web applications",
        "Students new to .Net Core 3.0",
        "Students who want to transition from previous versions of .Net Core",
        "Students who learn best by hands-on programming",
        "Students who prefer Step-By-Step instructions"
      ]
    },
    {
      "title": "JavaScript 2018: Modern Approach",
      "url": "https://www.udemy.com/course/modern-javascript-from-beginner-to-professional/",
      "bio": "Let Get Rid Of Boring Things And Learn JavaScript Quickly.",
      "objectives": [
        "Understand the JavaScript fundamentals",
        "Build dynamic websites and add interactivity to existing websites",
        "Create web applications with JavaScript",
        "Quickly learn and understand JavaScript based frameworks like React or Angular"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Basics Of JavaScript Programming": [
          "The JavaScript Basics",
          "JavaScript Console",
          "JavaScript Variables",
          "JavaScript Arrays",
          "JSON Objects In JavaScript",
          "JavaScript Statements",
          "JavaScript Operators",
          "Conditional Statements In JavaScript"
        ],
        "JavaScript Fundamentals": [
          "JavaScript Coding Fundamentals",
          "Displaying Results",
          "JavaScript Functions",
          "Comments",
          "Strict Mode",
          "Where To Place JavaScript Code"
        ],
        "Adding Interactivity To A Websites": [
          "Interactive Programming",
          "Making Changes In Web Page Elements",
          "JavaScript Dialogs (Alert, Prompt, Confirm)",
          "Buttons and OnClick Events",
          "Running JavaScript Code on Startup"
        ]
      },
      "requirements": [
        "Students should know basic HTML programming"
      ],
      "description": "As you know JavaScript is the most popular programming language in the world and there are a number of reasons you need to know this language if you're going to become a really professional and highly paid web developer.\nLearning JavaScript will allow you to become a full stack web developer and you'll be able to quickly understand and use front end frameworks like React, Angular, NodeJS and many other JavaScript based frameworks.\nWith JavaScript you'll be able to add features and interactivity to your websites, build large scale full stack applications and add extra functionality to your existing projects.\nIn this tutorial we'll start learning JavaScript from the very beginning and we will start from some of the basic building blocks of JavaScript.\nWe'll learn and understand variables, numbers, strings, arrays, statements and more.\nAfter that we'll move onto JavaScript objects - learning how to create, access and modify them.\nWe'll then move onto JavaScript Operators and JavaScript Functions and will understand in the details how they work and where we'll use them.\nThen we will work with Document Object Model which is more advanced JavaScript area\nWe'll understand how to create an element, Insert elements and manipulating the elements and also will cover JavaScript events.\nEssentially this tutorial will take you step by step through all the JavaScript fundamentals and I'll explain in details all the code we'll write and launch together in our browsers to see JavaScript in action.\n\n\nAll you need for this course is any browser and any text editor or IDE installed on your computer.\nI will use Sublime Text so I do recommend to install it for this course.\nLet's do our first steps in JavaScript today!",
      "target_audience": [
        "Anyone who wants to learn JavaScript programming",
        "Students who want to improve their JavaScript skills",
        "Students who tried to learn JavaScript before but left confused"
      ]
    },
    {
      "title": "Learn Professional Web Development Skills From Scratch",
      "url": "https://www.udemy.com/course/learn-professional-web-development-skills-from-scratch/",
      "bio": "Gain Practical skills to become a web developer",
      "objectives": [
        "Create Real web Applications",
        "Create application and website structure using HTML",
        "Apply styling to web application using CSS",
        "Create applications that runs inside a web browser",
        "Create interaction for web application using Javascript",
        "Gain frontend web development skills",
        "Gain backend web development skills",
        "Create and interact with databases using MongoDB",
        "Understand how to use chrome developer tools",
        "Create buttons and Image Carousel with Bootstrap",
        "Create a Real Time Chat App with Nodejs Expressjs MongoDB and Socketio",
        "Create a blog application using Ruby on Rails",
        "Initialize a git repository",
        "Deploy applications online using Heroku",
        "Understand web communication using HTTP"
      ],
      "course_content": {
        "How the Web Works ?": [
          "Introduction",
          "The web and Internet",
          "Communication with HTTP",
          "What is an API ?",
          "Frontend Web Development",
          "Backend Web Development",
          "Core web development languages"
        ],
        "Free Online Web Development Environments": [
          "Codepen",
          "JSBIN",
          "JSFiddle",
          "Plunker",
          "Dabblet",
          "Liveweave"
        ],
        "Tools the professionals use": [
          "Computer",
          "Text editor",
          "Atom text editor",
          "Brackets text editor",
          "SublimeText editor",
          "Visual studio code editor",
          "Web browsers",
          "Version control system"
        ],
        "Planning a web project": [
          "Planning",
          "Designing your project",
          "Choosing your assets",
          "Creating project directory and files"
        ],
        "Introduction to HTML": [
          "What is HTML",
          "Anatomy of an HTML Element",
          "HTML Element Hierarchy",
          "Nesting Elements",
          "Empty elements",
          "Basic anatomy of an HTML Document",
          "Basic structure of an HTML document",
          "Create HTML document structure - part 1",
          "Create HTML document structure - part 2",
          "Create HTML document structure - part 3",
          "Introduction to HTML Attributes",
          "Using HTML Attributes",
          "Marking UP Text",
          "Creating Links",
          "Adding comments to your code",
          "What is a source code",
          "HTML Images",
          "Editing yout HTML Document",
          "Indenting your code",
          "Viewing source code",
          "Inspecting Elements",
          "Headings",
          "Paragraphs",
          "Creating Lists",
          "Creating LInks",
          "Formatting Text",
          "Adding an Iframe",
          "Creating divs",
          "Code comments",
          "Using id attribute",
          "Using class attribute",
          "The SPAN element",
          "Block level elements",
          "Inline elements",
          "HTML Forms - part 1",
          "HTML Forms - part 2",
          "HTML Tables",
          "HTML entities"
        ],
        "Project: Create a basic website": [
          "What we will create",
          "Planning and design",
          "Creating project directory",
          "Creating HTML document",
          "Adding content - part 1",
          "Adding content - part 2",
          "Adding content - part 3",
          "Adding a table",
          "Adding a form - part 1",
          "Adding a form - part 2"
        ],
        "Introduction to CSS": [
          "What is CSS",
          "Ways to apply CSS",
          "Styling multiple properties",
          "Styling multiple elements",
          "Modifying CSS",
          "Basic CSS Selectors",
          "Adding css comments",
          "The CSS Box Model",
          "CSS Margin and Padding properties",
          "Changing background color",
          "CSS Display Property",
          "Positioning and styling page title",
          "CSS Font Property",
          "Google fonts"
        ],
        "Introduction to Bootstrap": [
          "What is Bootstrap",
          "Adding bootstrap",
          "Overview",
          "Creating a basic website in minutes",
          "Creating buttons",
          "Creating progress bar",
          "Creating a carousel image"
        ],
        "Introduction to JavaScript": [
          "What is JavaScript",
          "Developer console",
          "Where to place JavaScript",
          "Variables",
          "Variable naming convention",
          "Arrays",
          "Data Types",
          "Mixing Data Types",
          "What are operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Operator Precedence",
          "String Operators",
          "Comparison Operators",
          "Logical Operators",
          "Conditional statements",
          "Functions",
          "Adding comments to your code",
          "Linting Tools",
          "Events",
          "Switching images with JavaScript",
          "Fixing JSLINT error - Part 1",
          "Fixing JSLINT error - Part 2",
          "Adding welcome message to webpage"
        ],
        "Project: Build a web calculator": [
          "What we will create",
          "Designand sketch",
          "Creating project directory and files",
          "Creating the structure with HTML - Part 1",
          "Creating the structure with HTML - Part 2",
          "Adding functionality with javascript"
        ]
      },
      "requirements": [
        "You will need a computer with internet connection"
      ],
      "description": "An app or a web service can have two broad parts: the frontend and the backend. The roles of these parts can be guessed from their names. The frontend is the part that you can “see”. It is the part that lets you interact with the app or service. The colours, animations, layout, and all the other cool stuff that adds to your experience of using the app or website is the frontend. The frontend is generally called the User Interface (UI).  Example include HTML , CSS and JavaScript.\nThe backend is the part that you can’t “see”. It is the internal working of the application or website. This includes stuff like the server, the database, etc. Exaples include Ruby on Rails, Nodejs ,Python ,MongoDB, MySQL etc.\n\n\nIf you are a complete beginner, web development can be challenging —this course  will guide you and provide enough detail for  you to feel comfortable and learn the topics properly.  You should feel at home whether you are a student learning web development (on your own or as part of a class), a teacher looking for class materials, a hobbyist, or someone who just wants to understand more about  how web technologies work.\n\n\n\n\nTopics include:\nHTML\nCSS\nBootsrap\nJavaScript\nNodejs\nExpressjs\nMongoDB\nCreate database\nInteracting with database\nRuby\nRuby on Rails\nCreating a basic website\nCreate  apps that runs in web browser\nCreate a real-time chat application with Nodejs | Expressjs |MongoDB | Socketio\nCreate a blog application using Ruby on Rails\nDeploying application on internet\nBasic introduction to Git and Github\nChrome development tools",
      "target_audience": [
        "Beginners to web development"
      ]
    },
    {
      "title": "Learn Knockout JS Framework from GroundUp",
      "url": "https://www.udemy.com/course/learn-knockout-js-framework-from-groundup/",
      "bio": "A Complete Tutorial for Developing Web Applications using KnockoutJS",
      "objectives": [
        "Use Knockout to build web apps",
        "Learn to use view models in knockout",
        "Learn data binding with knockout",
        "Learn template binding with knockout",
        "Build a professional project in knockout"
      ],
      "course_content": {
        "Getting Started With Knockout": [
          "Course Intro",
          "What is Knockout",
          "JavaScript Refresher"
        ],
        "View Models & Observables": [
          "Chapter Intro",
          "Creating View Models & Observables",
          "Observable Arrays",
          "Interacting with Observable Arrays",
          "Computed Observables"
        ],
        "Data Binding": [
          "Chapter Intro",
          "Data-Bind Syntax",
          "Text & Appearance Bindings - Basics",
          "Text & Appearance Bindings - Advance",
          "Control Flow Bindings",
          "Form & Input Bindings - Basic Steps",
          "Form & Input Bindings Wrap up",
          "Custom Bindings"
        ],
        "Templating": [
          "Chapter Intro",
          "Template Binding",
          "Native Templating",
          "Underscore Template Engine"
        ],
        "Components": [
          "Chapter Intro",
          "What Are Components",
          "Custom Elements",
          "Component Binding"
        ],
        "GoalTracker Project": [
          "Project Intro",
          "Backend Data API - Introduction",
          "Backend Data API - Detail",
          "Frontend View & Layout",
          "Reading & Adding Data",
          "Deleting Data",
          "Updating Data",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript is required to complete the course"
      ],
      "description": "The ultimate Knockout JS framework tutorial is here. The course is aimed to get you started on this powerful MVVM JavaScript framework. Knockout has gained popularity in recent years and is widely used in Industry for creating web applications and custom bindings. Knockout comes with many advantages such as\nPure JavaScript Implementation\nOpen Source MIT License\nLightweight Framework\nExtensive browser support\nNo Dependencies\nOur course has been designed with simplicity and practicality as its prime focus making the technology accessible even to beginners. You will start with basic knockout introduction before getting started on important concepts such as View Models, Observables ,Data binding and Templating. The following are the main concpets covered in the course\nWhy Use Knockout ?\nKnockout framework attributes\nViews and Observables and their role in Web Apps\nData binding concepts\nUnderstand the appearance handling\nTemplating\nUsing Underscorejs\nComponents\nBuilding a complete project in Knockout\nLearn all this and much more and unleash the power of knockout for your projects.",
      "target_audience": [
        "Students who want to learn about knockout and use it in their apps"
      ]
    },
    {
      "title": "Fundamental Course in Web Frameworks",
      "url": "https://www.udemy.com/course/web-frameworks/",
      "bio": "Python Web Frameworks, HTML and Java Script Frameworks, Full Stake Web applications and Web Architecture",
      "objectives": [
        "Understanding the web frameworks and types of frameworks",
        "How Python Web framework is working with different applications",
        "Analyzing the HTML and Java Script Web frameworks and Application Identifications",
        "Understanding the Web development frameworks for web applications",
        "Learning about the future web frameworks and how to create my own web frameworks"
      ],
      "course_content": {
        "Fundamental Course in Web Frameworks - Video Lectures": [
          "Introduction of web frameworks and types",
          "Web framework in python",
          "Web framework in HTML and Java Script",
          "Web development frameworks for web applications",
          "Future web frameworks and create my own web frameworks"
        ]
      },
      "requirements": [
        "Basic Web Application Knowledge HTML, CSS and Web Architecture Knowledge needed for the course"
      ],
      "description": "Fundamental Course in Web Frameworks\nThe Fundamental Course in Web Frameworks is a comprehensive program designed for individuals looking to build a solid foundation in web development through the understanding and application of various web frameworks. Participants will explore the diverse landscape of web frameworks, with a focus on Python, HTML, and JavaScript. The course covers the essentials of web development frameworks for building dynamic and responsive web applications, and concludes with an exploration of emerging trends and the possibility of creating custom web frameworks.\n\n\nIntroduction of Web Frameworks and Types\nDefining web frameworks and their role in web development\nOverview of different types of web frameworks (e.g., front-end, back-end, full-stack)\nUnderstanding the significance of web frameworks in streamlining development processes\nWeb Framework in Python\nIntroduction to Python web frameworks (e.g., Django, Flask)\nExploring the MVC (Model-View-Controller) architecture\nHands-on experience with building web applications using Python frameworks\nWeb Framework in HTML and JavaScript\nOverview of front-end web frameworks (e.g., React, Angular, Vue)\nUnderstanding the role of HTML and JavaScript in web development\nIntegration of front-end frameworks for enhanced user interfaces\nWeb Development Frameworks for Web Applications\nExploring full-stack web development frameworks\nBackend frameworks and server-side scripting languages\nHands-on exercises to create a dynamic and responsive web application\nFuture Web Frameworks and Create My Own Web Frameworks\nEmerging trends in web development frameworks\nExploring the potential of custom web frameworks\nBasic principles and steps to create a simple web framework\nThroughout the course, participants will engage in practical coding exercises, projects, and real-world examples to reinforce their learning. The Fundamental Course in Web Frameworks aims to provide participants with a strong foundation in web development, empowering them to leverage popular frameworks and stay abreast of evolving technologies in the dynamic field of web development. Upon completion, participants will be equipped with the knowledge and skills needed to pursue further specialization in web frameworks or embark on their own web development projects !\nIn this Fundamental course you will learn the 5 Major topics,\n1. Introduction of web frameworks and types\n2. web framework in python\n3. Web framework in HTML and Java Script\n4.  Web development frameworks for web applications\n5. Future web frameworks and create my own web frameworks",
      "target_audience": [
        "Computer Science, IT and Systems Students, Web developers, Web Designers, Software Programmers and Web Analysts"
      ]
    },
    {
      "title": ".NET 8 Backend Bootcamp: Modulith, VSA, DDD, CQRS and Outbox",
      "url": "https://www.udemy.com/course/net-backend-bootcamp-modulith-vsa-ddd-cqrs-and-outbox/",
      "bio": "Develop EShop Modulith on .NET used Asp.Net Web API, PostgreSQL, Redis, RabbitMQ, Keycloak, Seq, Docker, MassTransit",
      "objectives": [
        "Modular Monoliths (Modulith) Architecture",
        "Vertical Slice Architecture (VSA)",
        "Domain-Driven Design (DDD)",
        "Command Query Responsibility Segregation (CQRS)",
        "Outbox Pattern for Reliable Messaging",
        "CQRS (Command Query Responsibility Segregation) and Vertical Slice architectures for module development",
        "Communicate over In-process method calls-public APIs and use RabbitMQ for event-driven communication",
        "Secure APIs with Keycloak, using OpenID Connect and Bearer Tokens",
        "ASPNET Core Minimal APIs and latest features of .Net8 and C# 12",
        "Vertical Slice Architecture implementation with Feature folders",
        "DDD, CQRS Patterns using MediatR library w/ following Best Practices",
        "Use Domain Events & Integration Events when UpdatePriceChanged event",
        "Use Entity Framework Core Code-First Approach and Migrations on PostgreSQL Database",
        "Cross-cutting Concerns including Logging with Serilog, Validation with MediatR Pipeline Behaviors, Exceptions, Pagination",
        "Using Redis as a Distributed Cache over PostgreSQL database",
        "Develop Proxy, Decorator and Cache-aside patterns",
        "Sync Communications between Catalog and Basket Modules w/ In-process Method Calls (Public APIs)",
        "Async Communications between Modules w/ RabbitMQ & MassTransit",
        "Develop User Identity Module with Keycloak Authentication",
        "OAuth2 + OpenID Connect Flows with Keycloak",
        "Outbox Pattern For Reliable Messaging w/ BasketCheckout Use Case",
        "Publish BasketCheckoutEvent to RabbitMQ via MassTransit library, Consume from Ordering Module",
        "Migrating to Microservices: EShop Modules to Microservices w/ Stranger Fig Pattern"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites, Source Code and Course Slides",
          "See Final Application (need identity configurations - its only showcase)",
          "Project Code Structure",
          "Modular Monoliths Architectures, Patterns, Libraries and Best Practices",
          "How to Follow the Course (The Course Flow and Way of Learning)"
        ],
        "Monolithic Architecture - What's wrong with Traditional Monoliths ?": [
          "What is Traditional Monoliths (Monolithic Architecture) ?",
          "What's wrong with Traditional Monolithic Architecture ?",
          "Technology Lock-In and Fear Cycle in Traditional Monolithic Architecture",
          "Big Ball of Mud",
          "Monolithic Quiz"
        ],
        "Microservices Architectures - Why it is not fit projects ?": [
          "What are Microservices and Microservices Architecture ?",
          "What's wrong with Microservices Architecture ?",
          "Microservices Antipattern: The Distributed Monolith",
          "Amazon Case: Rearchitecting from a Distributed Microservices to a Monolith",
          "Microservices Quiz"
        ],
        "The Bridge: Modular Monolith Architectures - Gateway between Monolithic and MS": [
          "What is Modular Monolithic (Modulith) Architecture ?",
          "Why Modular Monoliths ? Advantages over Microservices ?",
          "Monolith First Approaches from Martin Fowler and Sam Newman",
          "Starting Point for Microservices: Gradually Transition with Incremental Refactor",
          "Shopify Modular Monolithic Architecture",
          "Decomposition of EShop Modules: Catalog, Basket, Identity and Ordering Modules",
          "Modular Monolith Quiz"
        ],
        "Create EShop Modular Monolith Project Solution Structure": [
          "Introduction - Create EShop Modular Monolith Project Solution Structure",
          "Create GitHub Repository for EShop Modular Monolithic Architecture",
          "Create New Blank Solution: eshop-modular-monoliths",
          "Modular Monolith Folder Structure: Bootstrapper, Modules, Shared",
          "Create Bootstrapper Api Project",
          "Configure Empty Web Project to Bootstrapper Api of Modular Monolith",
          "Create Modules Folders according to DDD Bounded Context Analysis",
          "External vs Internal Architecture of Modular Monoliths Architecture",
          "Vertical Slice Architecture",
          "Clean Architecture",
          "Vertical Slice versus Clean Architecture",
          "Create Module Projects as a Class Library",
          "Shared Kernel Pattern in DDD",
          "Created Shared Kernel Class Library Project for All Modules",
          "Shared Project Dependencies to Modules Projects",
          "Module Dependencies to Bootstrapper Asp.Net Api Project"
        ],
        "Wire-up Dependencies Between Modules (DI Management of Modules)": [
          "Introduction - Wire-up Dependencies Between Modules (DI Management of Modules)",
          "Asp.net Dependency Injection Management and Program.cs",
          "Wiring up dependencies between modules",
          "Develop AddCatalogModule extention method in CatalogModule.cs",
          "Registering Catalog Dependencies into Program.cs",
          "Develop AddBasketModule, AddOrderingModule extention methods",
          "Registering Basket and Ordering Dependencies into Program.cs",
          "Asp.net Middlewares and Http Request Pipeline",
          "Configure Http Request Pipelines for Modules in Program.cs",
          "Examine WebApplication Class Use Abstractions and Install Required Packages",
          "Develop UseCatalogModule extention method for Module Configure the HTTP request",
          "Integrating UseCatalogModule in Program.cs",
          "Develop UseBasketModule and UseOrderingModule extention method for Module Config",
          "Integrating UseBasketModule and UseOrderingModule extention method in Program.cs",
          "Add GlobalUsings.cs for Each Project to Avoid Redundant Using Statements"
        ],
        "First Module: Catalog Module with Vertical Slice Architecture and CQRS": [
          "Introduction - First Module: Catalog Module with Vertical Slice Architecture",
          "Domain Analysis of Catalog Module: Models, UCs, Rest Apis, Databases",
          "Technical Analysis of Catalog Module: Architectures, Patterns, Libraries, Folder",
          "Way of Development: Shared -> Modules -> API"
        ],
        "Develop Shared Domain for Tactical DDD Abstraction (Entity, Aggreagate, Events)": [
          "Introduction - Develop Shared Domain for Tactical DDD Abstraction",
          "Domain Driven Design - DDD",
          "Tactical Domain-Driven Design: Entities, Value Objects, Aggregates, A. Rooots",
          "Develop DDD Abstractions (Entity, Aggregate, DomainEvent) in Shared Library",
          "Develop IDomainEvent interface in Tactical DDD Abstraction using MediatR",
          "Develop Aggregate classes in Tactical DDD Abstraction"
        ],
        "Develop Catalog Domain with Product Domain Entity Models": [
          "Introduction - Develop Catalog Domain with Product Domain Entity Models",
          "Develop Product Domain Entity Models in Catalog Module Domain Models",
          "Anemic-domain vs Rich-domain Model Entities Entities in DDD",
          "Develop DDD Rich-domain model Entity for Product Entity",
          "Domain Events in DDD and Domain vs Integration Events",
          "Develop Product Created and Updated Domain Event in Catalog Module",
          "Raise ProductCreated and ProductPriceChanged Domain Event in Catalog Module"
        ],
        "Data Management of Modular Monolith: Setup Postgres as a Main Database": [
          "Introduction - Data Management of Modular Monolith: Setup Postgres DB",
          "Data Management of Modular Monoliths: 4 Data Isolation Strategies",
          "Best Practice: DB Schema separation of Modules in Modular Monoliths apps",
          "Multi-context EF DB Context object for DB Separate Schema for Data Isolation",
          "Backing Services for Cloud-Native Architectures",
          "EShop Modular Monolith Deployment Strategy",
          "Setup PostgreSQL DB using Docker-compose file for Multi-container Docker env",
          "Add PostgreSQL DB image into Docker-compose file for Multi-container Docker env",
          "Run Docker-Compose on Visual Studio to setup PostgreSQL DB on Docker",
          "Connect and Browse PostgreSQL DB using pgAdmin"
        ]
      },
      "requirements": [
        "Basics of C# and programming"
      ],
      "description": "In this bootcamp, you'll learn how to build robust, scalable, and maintainable applications using cutting-edge technologies and architectural patterns.\nWe will develop;\nModular Monoliths (Modulith) Architecture\nVertical Slice Architecture (VSA)\nDomain-Driven Design (DDD)\nCommand Query Responsibility Segregation (CQRS)\nOutbox Pattern for Reliable Messaging\nWe start with the basics and progressively dive deeper into each topic. You'll get hands-on experience building a complete EShop Modular Monolith application, implementing features like CQRS and the Outbox pattern.\nWe'll follow CQRS (Command Query Responsibility Segregation) and Vertical Slice architectures for module development.\nModules will communicate over In-process method calls-public APIs and use RabbitMQ for event-driven communication.\nWe'll secure our APIs with Keycloak, using OpenID Connect and Bearer Tokens.\nWe'll implement the Outbox Pattern for reliable messaging between modules.\nAlong with this you’ll develop following modules and items:\nCatalog module which;\nUsing Asp.Net Core Minimal APIs and latest features of .Net8 and C# 12\nDevelop Vertical Slice Architecture implementation with Feature folders\nDevelop DDD, CQRS Patterns using MediatR library w/ following Best Practices\nUse Domain Events & Integration Events when UpdatePriceChanged event\nUse Entity Framework Core Code-First Approach and Migrations on PostgreSQL Database\nUse Carter for expose Minimal Api endpoints\nCross-cutting Concerns including Logging with Serilog, Validation with MediatR Pipeline Behaviors, Exceptions, Pagination\nBasket module which includes;\nSimilar to Catalog Module; Develop DDD, CQRS, Vertical Slice Architecture implementation\nAdditionally;\nUsing Redis as a Distributed Cache over PostgreSQL database\nDevelop and Implements Proxy, Decorator and Cache-aside patterns\nPublish BasketCheckoutEvent to RabbitMQ via MassTransit library\nImplement Outbox Pattern For Reliable Messaging w/ BasketCheckout Use Case\nModule Communications;\nSync Communications between Catalog and Basket Modules with In-process Method Calls (Public APIs)\nAsync Communications between Modules w/ RabbitMQ & MassTransit for UpdatePrice Between Catalog-Basket Modules\nIdentity Module which includes;\nDevelop User Identity Module with Keycloak Authentication\nOAuth2 + OpenID Connect Flows with Keycloak\nSetup Keycloak into Docker-compose file for Identity Provider as a Backing Service\nSecure EShop Modules with Keycloak OpenId Connect in AspNet\nJwtBearer token for OpenID Connect with Keycloak Identity\nOrdering Module which includes;\nSimilar to the Catalog and Basket Module; Develop DDD, CQRS, Vertical Slice Architecture implementation\nImplement Outbox Pattern For Reliable Messaging w/ BasketCheckout Use Case\nLastly, we will discuss\nMigrating to Microservices: EShop Modules to Microservices w/ Stranger Fig Pattern\nThis course is more than just learning .NET, it's a deep dive into the world of Modular Monoliths with Vertical-Slice Architecture, Domain-Driven Design (DDD), CQRS, and advanced architectural patterns for Backend Development.",
      "target_audience": [
        "Beginner to Senior .NET Developers who is curious about .NET Backend technologies with Modular Monolith Architectures"
      ]
    },
    {
      "title": "Complete MERN Stack Bootcamp - MongoDB Express React & Node",
      "url": "https://www.udemy.com/course/mern-stack-course-mongodb-express-react-nodejs/",
      "bio": "Build Full Stack React Application from Scratch with MongoDB, Express, React and NodeJS in this project based course.",
      "objectives": [
        "Learn how to build Fullstack apps from scratch",
        "Learn how to implement JWT authentication - User Registration, Login, Password Reset",
        "Learn how to store data in MongoDB",
        "Learn how to send automated email",
        "Learn how to upload images in MERN stack and save to cloudinary",
        "State management with Redux Toolkit",
        "Deploy app to both Heroku and Render"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Course Requirement",
          "Environment Setup",
          "What is MERN Stack"
        ],
        "Some NodeJS Basics": [
          "Node Basics",
          "Modules",
          "Core Modules",
          "Create a NodeJS Server",
          "Create Routes in NodeJS",
          "Create an Express Server and Route",
          "Continously monitor server with Nodemon",
          "HTTP Request Methods and Status Codes"
        ],
        "Express Basics - Task Manager App": [
          "Task Manager - Demo",
          "Project Setup",
          "Create Express Server",
          "Create start script with nodemon",
          "Setup Postman and Insomia for API testing",
          "Setup MongoDB",
          "Connect To MongoDB - Method 1",
          "Refactor the connection sequence",
          "Connect To MongoDB - Method 2",
          "Create Task Model and Schema",
          "Create a Task Route",
          "Middleware",
          "Save Task to database",
          "Get All Tasks",
          "Create Task Route",
          "Create Task Controller",
          "Get a Single Task",
          "Delete a Task",
          "Update a Task - PUT",
          "Update a Task - PATCH",
          "Refactor out Routes"
        ],
        "React Frontend - Task Manager App": [
          "React App Setup",
          "Create Script to run backend and frontend",
          "Create all Components",
          "Task Manager JSX",
          "Add Task to DB",
          "Set Proxy URL",
          "Get Tasks from DB",
          "Display tasks on the page",
          "Delete a Task",
          "Update Task Part 1",
          "Update Task Part 2",
          "Set task to completed",
          "Get task count"
        ],
        "Deployment - Render and Heroku": [
          "Deploy - Push app to GitHub",
          "Deploy Frontend To Render",
          "Deploy Backend To Render",
          "Before you deploy to Heroku",
          "Preparing our App for deployment",
          "Deploying our app to Heroku"
        ],
        "Inventory Management App - Demo and Setup": [
          "Pinvent App - Demo",
          "Planning the Project",
          "Project Setup"
        ],
        "Inventory Management App - Backend": [
          "Create Server and Connect MongoDB",
          "Create Folders and Home Route",
          "Create User Model",
          "Create User Route",
          "Create User Controller",
          "Create Custom Error Handler",
          "Register New User",
          "Encrypt Password - Method 1",
          "Encrypt Password - Method 2",
          "Generate JSON Web Token",
          "Send Token With HTTP-Only cookie",
          "Create Login Route",
          "Create Login Controller Function",
          "Login Controller Bug Fix",
          "Logout User",
          "Create User Profile Route",
          "Create Protect MiddleWare and UserProfile Controller",
          "Create Route to Get Login Status",
          "Create Login Status Controller Function",
          "Create Route to Update User",
          "Create Update User Controller Function",
          "Create Route to Change Password",
          "Create Controller Function to Change Password",
          "Reset Password Process",
          "Create Forgot Password Route",
          "Create Token Model",
          "Create send Email Function",
          "Forgot Password Controller Function - Part 1",
          "Forgot Password Controller Function - Part 2",
          "Forgot Password Controller Function - Part 3",
          "Email not delivered",
          "Create Reset Password Route",
          "Create Reset Password Controller",
          "Create Product Model",
          "Create Product Route",
          "Create Product Controller",
          "Set up Multer file upload",
          "Upload Image With Multer",
          "Save product to cloudinary",
          "Get all Products - Route and Controller",
          "Get single Product - Route and Controller",
          "Delete a Product - Route and Controller",
          "Update Product - Route and Controller",
          "Update Product - Bug Fix",
          "Contact Us Route",
          "Contact Us Controller"
        ],
        "Inventory Management App - Frontend": [
          "Create React App",
          "Set up Redux",
          "Set up Routing",
          "Home Page",
          "Create Auth Pages and Routes",
          "Create Card Component",
          "Login Page JSX",
          "Register Page JSX",
          "Forgot Passord Page JSX",
          "Reset Passord Page JSX",
          "Header, Footer and Layout Component JSX",
          "Dashboard Initial Setup",
          "Get The Sidebar Code",
          "Sidebar Component - Part 1",
          "Sidebar Component - Part 2",
          "Navigate to Home Page from Dashboard",
          "Set up auth slice",
          "Set up auth service and Register User function",
          "Register User - Part 1",
          "Register User - Part 2",
          "Register User - Part 3",
          "Create Loader Component",
          "Create Login User function",
          "Login User",
          "Logout User",
          "Display name of user",
          "Forgot Password",
          "Create Reset Password function",
          "Reset Password",
          "Hide or Show Nav Menu",
          "Get Login Status",
          "Redirect Logged out users",
          "Create productSlice",
          "Create Product Function Redux",
          "Create Add Product Component",
          "Create Add Product Route",
          "Create Product Form and Test",
          "Create Get all Products Function Redux",
          "Get All Products",
          "Display Products on dashboard",
          "Search Component JSX",
          "Search Function in Redux",
          "Product List Pagination",
          "Product Summary JSX",
          "Calculate Total Store Value",
          "Calculate Out Of Stock Products",
          "Calculate all Categories",
          "Create Delete Function Redux",
          "Delete Product",
          "Create Product Detail Route",
          "Create Update Product Function Redux",
          "Create Edit Product Route",
          "Create Edit Product Component",
          "Create Get Single Product Function Redux",
          "Create Product Details Component",
          "Create Get User Profile Function",
          "Create Profile Component and Route",
          "Profile Component Logic",
          "Profile Component Logic JSX",
          "Edit Profile - Part 1",
          "Edit Profile - Part 2",
          "Edit Profile Component",
          "Change Password Component",
          "Testing Our App",
          "Deploy To GitHub",
          "Deploy Frontend To Vercel",
          "Deploy Backend To Render"
        ]
      },
      "requirements": [
        "Students should know HTML, CSS & JavaScript before taking this course",
        "Students should know ReactJS before taking this course"
      ],
      "description": "Welcome To The MERN Stack Course\n\nMERN stands for MongoDB, Express.js, React.js and Node.js - and combined, these four technologies allow you to build amazing web applications.\n\n\nDuring this course we will:\nLearn some NodeJS basics\nBuild API endpoints with Express\nBuild authentication with JSON Web  Token including User Registration, Login and Password Reset\nUpload image with multer and save to Cloudinary\nProtect routes to only be accessed by logged-in users\nBuild Frontend pages with React and SCSS\nSetup Routing with React Router V6\nSetup MongoDB\nComplete CRUD functionality\nImplement pagination on the front-end\nConnect frontend to backend using Axios\nManage state with Redux Toolkit\nBuild a dashboard for product management\nUtilize \"express-async-handler\" package\nSetup error handling in Express\nHash passwords\nBuild a user profile page\nBuild a contact us page\nEdit user profile from the frontend\nDeploy the app to Heroku and Render\n\n\nWhat are the requirements for taking this course?\nKnowledge of HTML, CSS and JavaScript\nKnowledge of React\nNO Prior Knowledge of NodeJS and Express is required.\n\n\n\n\nWho this course is for?\nDevelopers who got basic React knowledge and want to build a full stack app with the MERN stack from scratch.\nNOTE:\nThis is not an introduction to React course, you are expected to know React before taking this course. However, I try to explain the ReactJS concepts used in every section.",
      "target_audience": [
        "Students who know ReactJS and want to learn Fullstack development using the MERN stack."
      ]
    },
    {
      "title": "Introduction to Java Programming for Online Learners",
      "url": "https://www.udemy.com/course/learning-to-program-in-java-a-supplement-for-online-academic-learners/",
      "bio": "Supplemental instruction on java concepts found in online programming courses, designed to help students truly learn.",
      "objectives": [
        "Introduce the student to Java",
        "Build solid Java programming skills for anyone wanting to learn the language",
        "Aid online students taking self-directed courses, or courses with minimal instructor interaction",
        "Challenge the student to work with the code and engage in the material"
      ],
      "course_content": {
        "Introduction to Programming": [
          "Course Overview - Welcome",
          "Welcome to computer programming!",
          "Install Visual Studio Code [optional]",
          "Install Java 15.0.2 on Windows",
          "Configuring Windows for manual java programming",
          "Program 1: Writing our first program -- Hello World",
          "Simple Debugging, Fixing a Program, and dealing with problems while programming",
          "Install an IDE - Eclipse Oxygen [June 2017 release] on Windows",
          "Installing an IDE - Netbeans [skip if using Eclipse]",
          "Creating Projects [Both Eclipse and NetBeans",
          "Programming Syntax Basics",
          "PIAT [Putting it all together]: Simple Output",
          "Sudoku 1: Printing a Sudoku Grid",
          "Sample Code for Section 1",
          "Section 1 Quiz",
          "SectionOneResources"
        ],
        "Programming With Variables": [
          "Introduction to Types - Part 1: Number Types",
          "Storing Types in Variables - Part 1: Number Types",
          "Introduction To Types - Part 2: Non-Number Types",
          "Storing Types as Variables - Part 2: Non-number Types",
          "Simple Input using the Scanner",
          "Simple Input using the Buffered Reader",
          "Working With Variables and Math!",
          "PIAT: Simple Physics Calculators",
          "Sudoku 2: Gathering game conditions and input from the user",
          "Sample Code for Section 2",
          "Section 2 Quiz",
          "Section Two Resources"
        ],
        "Control Statements and Methods": [
          "Boolean Logic (true/false)",
          "Control statement: if ... else",
          "Nested if...else control statements, AND and OR operations",
          "ADVANCED: switch and ternary operators",
          "Introduction to Methods",
          "Coding With Methods",
          "PIAT: Simple Physics Calculator with a Menu",
          "Sudoku 3: Checking input",
          "Sample Code for Section 3",
          "Section 3 Quiz",
          "Section Three Resources"
        ],
        "Loops - Repetitive User Input": [
          "Looping - overview and syntax structure",
          "While loops",
          "Do...While Loops",
          "For loops",
          "Review and Practical Example: Preventing Bad User Input with Loops",
          "Advanced Topic: Recursion and The Fibonacci Sequence",
          "PIAT: Simple Physics Cacluator with Menus and Repetitive User Input",
          "Sudoku 4: Validated input, Repetitive input, Solve entire Grid.",
          "Software Engineering Time out: Plan before you Program!",
          "PIAT Advanced: Scorekeeper for 500 [a card game]",
          "Sample Code for Section 4",
          "Section 4 Quiz"
        ],
        "Basic data structures (Arrays)": [
          "Introduction to Arrays",
          "Coding With Arrays",
          "Passing variables to methods in Java",
          "Enhanced For Loop",
          "Making Copies of Arrays",
          "Sorting Arrays",
          "PIAT: Star Trek Spaceships",
          "Sudoku 5: Using arrays in the Sudoku Program for Grid Values and Solution Values",
          "Sample Code for Section 5",
          "Section 5 Quiz"
        ],
        "Object Classes and Basic Inheritance": [
          "Getting a new project setup to begin our study of classes",
          "Creating custom classes and working with constructors - Default Constructor",
          "Working with properties in our custom classes - part 1",
          "Working with properties in our custom classes - part 2",
          "Creating custom classes and working with constructors - Explicit Constructor",
          "Working with other methods in our custom classes",
          "Introduction to inheritance - part 1",
          "Introduction to inheritance - part 2",
          "Adding the car and truck classes",
          "The system without any inheritance",
          "Creating Subclasses using the extends keyword [part 1]",
          "Creating Subclasses using the extends keyword [part 2]",
          "Overriding Base class methods",
          "Testing the toString() methods",
          "Overloading methods to create options",
          "PIAT: Star Trek Ships By Class",
          "Sudoku 6: Solver class",
          "Sample Code for Section 6",
          "Section 6 Quiz"
        ],
        "Abstract Classes and Interfaces": [
          "Introduction to Interfaces",
          "Introduction to Abstract Classes",
          "PIAT: Part 1: Autolot - Polymorphism and Writing code to the interface.",
          "PIAT: Part 2: Autolot - Polymorphism and writing code to the interface.",
          "Further Study: Implementing the Comparable interface and Overriding Equals",
          "Programming with the Strategy Pattern: Creating classes to represent behavior.",
          "Sudoku 7: Abstracting Player And Game Behaviors",
          "Sample Code for Section 7"
        ],
        "Testing with JUnit": [
          "Introduction to Unit Testing - Part 1",
          "Introduction to Unit Testing - Part 2",
          "Creating the Tests and Writing Tests for the Constructors",
          "Testing Mutators and Accessors; finish Constructor Testing",
          "Testing the Person toString() method",
          "Planning testing for implementation of the Comparable interface",
          "Testing the comparable interface",
          "Planning Testing for overriding equals()",
          "Testing the equals() methods",
          "Abstract Testing",
          "PIAT: Autolot Testing",
          "Sudoku 8: Adding Unit tests to our Sudoku Code",
          "Sample Code for Section 8",
          "EXTRA: J-Unit 3 syntax vs J-Unit 4 syntax"
        ],
        "Exception Handling": [
          "Introduction to exceptions and basic error handling",
          "Unchecked Exceptions",
          "Checked Exceptions",
          "Writing Custom Exceptions and Testing Exceptions",
          "UPDATE: Testing Exceptions in J-Unit 4",
          "PIAT: Autolot with Exception Handling",
          "Sudoku 9: Adding Exceptions to prevent errors from breaking the program.",
          "Sample Code for Section 9"
        ],
        "Files, Serialization, and Streams": [
          "Opening and Reading Files",
          "Writing to files",
          "Basic Secret Agent Encryptor and Decryptor (using File IO and basic Encryption)",
          "Serialization of Objects to Binary, and Saving the serialized object to a file",
          "Improved Secret Agent Encryptor And Decryptor Program",
          "Working with Random Access files",
          "String parsing using Split and String Tokenizer",
          "PIAT: Autolot with Files and Serialization",
          "Sudoku Part 10: Save and restore a game in progress",
          "Sample Code for Section 10"
        ]
      },
      "requirements": [
        "Willingness to learn",
        "A few hours a week to review videos and a few more hours to work with the code individually.",
        "The course is oriented towards those using Windows, however any computer that runs java can be used."
      ],
      "description": "This course provides instruction through video lectures and materials which will teach (you) the student how to program in Java from the very basic level to an intermediate level of programming. The intent is to aid anyone who is struggling in learning how to program and would like to see practical examples and demonstrations. This course is not affiliated with any university and will not provide answers to any homework assignments for any reason. Topics covered will include but not be limited to:\nSyntax and commands\nCreating variables\nCreating methods\nWorking with files\nException handling\nCreating Classes\nObject-Oriented programming basics\nBasic Unit Testing\nGraphics and GUI programming\nIn the end, this course is a stand-alone course, however it would be a huge aid to the online student who is taking a self-directed course, an individual who is trying to learn how to program, or even a high school student looking to get a head start on computer science material they might encounter in college. The material is organized in a start-to-finish fashion, building on knowledge with each section, so it is best to proceed through each section in order. Each section should amount to about a week worth of learning, lining up with most popular online course formats. Additionally, the course works hard to build practical knowledge that will help a student excel in their coursework, and also builds a strong foundation for a start to a career in programming for anyone looking to learn!\nAs an added bonus, several useful programs are built throughout this course, and the end result of the course includes full source code for a working Sudoku game, amongst other programs, such as card game score calculators and basics physics formula calculation programs.",
      "target_audience": [
        "Beginning programmers",
        "Programmers making a switch to Java from another language",
        "Online Programming students in Java courses",
        "Advanced High School Students who want to get a jump on university level programming courses in computer science/management information systems."
      ]
    },
    {
      "title": "ASP.NET Core MVC - Up and Running Part 2 (.NET 5)",
      "url": "https://www.udemy.com/course/aspnet-core-mvc-up-and-running-part-2-net-5/",
      "bio": "Learn to architect ASP.NET Core MVC Application (.NET 5) with Entity Framework Core as we scale existing project in MVC",
      "objectives": [
        "Enhance an existing .NET Core 5 application",
        "Modify existing Architecture of Application",
        "Learn how to separate out Data Layer in another project",
        "Bootstrap 5",
        "Repository Pattern",
        "N-Tier Architecture",
        "Datatables in .NET Core",
        "Toastr Notifications and TempData",
        "Complex Objects in Sessions in .NET Core",
        "Order Management architecture",
        "Facebook Single Sign On",
        "Integrate Braintree payment with refunds",
        "Syncfusion integration with .NET Core MVC.",
        "Data Seeding and Azure Deployments with .NET Core"
      ],
      "course_content": {},
      "requirements": [
        "3-6 months familiarity with C# and SQL",
        "Visual Studio 2019",
        ".NET Core MVC - Up and Running Part 1 Course ( Highly recommended but not required)",
        ".NET 5",
        "SQL Server 2012+"
      ],
      "description": "ASP.NET Core(.NET 5) has advanced drastically, but with that comes many challenges for a developer.\nHow do you scale an existing application? How do you architect a mid-large scale project? How to correctly process payments?\nThis course is part 2 to the Part 1 of Up and Running ASP.NET Core MVC. In Part 1 we built our application with sending inquiry about products that are being sold.\nAs business requirements change, in this course we will have to add many more features to the project. But with that you need to be sure about architecture to make sure it is scalable! So there will be many changes in existing application, which is a typical real world scenario.\nThis course will provide you a complete real world scenario which will make you face many challenges and solve those issues as we proceed with the course.\nSo join me in this exciting course of exploring what real world challenges are and what issues you encounter when business changes their requirements.\nWe will be using the latest .NET 5 for this course along with Entity Framework Core and Braintree for payment processing.",
      "target_audience": [
        "Anyone who wants to learn how to Architect .NET Core application",
        "Anyone who wants to learn .NET 5 and advance concepts",
        "Anyone who wants to learn how to integrate Braintree payment gateway"
      ]
    },
    {
      "title": "Node with React: Build & Deploy a Fullstack Web Application",
      "url": "https://www.udemy.com/course/node-with-react-build-deploy-a-fullstack-web-application/",
      "bio": "Build & deploy a social network app using React, Typescript, MongoDB, Redis, Queues, AWS, Terraform, CircleCI & more.",
      "objectives": [
        "Build a MERN (MongoDb, Express, React, Node) fullstack app",
        "Build an amazing social network application",
        "Define Infrastructure as Code using Terraform to easily create and destroy environment",
        "Setup Continuous Integration/Delivery Pipeline",
        "Integrate Terraform into CI/CD Pipeline",
        "Deploy full-scale application to AWS",
        "Use Redis for caching",
        "Setup Redis message queues and workers",
        "Learn to write unit tests for Frontend and Backend apps",
        "User AWS services like VPC, subnets, internet gateways, EC2, route53, elasticache, S3, cloudfront, load balancer, autoscaling group and much more.",
        "Setup Online Dev, Staging and Production Environments",
        "Integrate Slack in the CI/CD Pipeline",
        "Build custom react hooks",
        "Setup redux-toolkit"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App demo",
          "Video upload demo",
          "App sections",
          "Github repos",
          "Github project links"
        ],
        "Backend Introduction": [
          "Tools description",
          "App features",
          "Install tools",
          "VSCode Extensions"
        ],
        "Backend: Project Setup": [
          "Section introduction",
          "Create backend project",
          "TSConfig",
          "Folder structure setup",
          "Setup server class",
          "Standard middleware",
          "Setup http server - Part 1",
          "Setup http server - Part 2",
          "Mongoose connection",
          "Database connection setup",
          "Environment config class - Part 1",
          "Environment config class - Part 2",
          "SocketIO setup",
          "Routes function",
          "Global error handler",
          "Logger setup",
          "ESLint setup",
          "Create github repo",
          "Change absolute imports",
          "Build script",
          "About updating dependencies",
          "Update dependencies",
          "Update build script"
        ],
        "Backend: Authentication Feature": [
          "Section introduction",
          "App dataflow",
          "Redis commands",
          "Cloudinary upload function",
          "Auth validation schemes",
          "Joi validator decorator",
          "Auth interface and model schema",
          "Signup user method - Part 1",
          "Signup user method - Part 2",
          "Auth routes",
          "User interface and model schema",
          "Redis base class",
          "Issue with redis HSET",
          "Save user to redis cache - Part 1",
          "Save user to redis cache - Part 2",
          "Install redis commander",
          "Base message queue",
          "Base queue add job method",
          "Auth queue and worker",
          "Add JWT to session",
          "View mongodb data with compass",
          "User login controller",
          "Login bug",
          "Fix login bug",
          "Signup auth bug fix",
          "Update login controller",
          "User logout controller",
          "Get user data from redis cache",
          "Get user by id from mongodb - Part 1",
          "Get user by id from mongodb - Part 2",
          "Current user controller",
          "Authentication middleware",
          "Merge feature branch to develop"
        ],
        "Backend: Auth Password Reset": [
          "Section introduction",
          "Mail transport class",
          "Test dev email sender",
          "Email queue and worker",
          "Password reset templates",
          "Test email with password reset templates",
          "Forgot password controller method",
          "Reset password controller method",
          "Jest config",
          "Unit test script command",
          "Auth unit test mock",
          "Signup unit test - Part 1",
          "Signup unit test - Part 2",
          "Clear mocks",
          "Login unit test",
          "Password reset and logout unit tests",
          "Current user unit test",
          "Push code to github"
        ],
        "Backend: Post Feature": [
          "Section introduction",
          "Post interface and model schema",
          "Post joi validation scheme",
          "SocketIO post handler",
          "Create post controller method",
          "Save post to redis cache",
          "Use save post to redis cache method",
          "Add post socketIO event",
          "Post queue and worker",
          "Post with image controller method",
          "Create post unit test",
          "Get posts from redis cache",
          "Get total post count from cache",
          "Get posts from mongodb",
          "Get posts controller",
          "Get post routes",
          "Get post controller unit test",
          "Delete post controller",
          "Delete post controller unit test",
          "Update post in redis cache",
          "Update redis HSET method in post cache",
          "Update post controller",
          "Update post with image controller",
          "Update post controller unit test",
          "Push code to github",
          "Fix tsconfig issue"
        ],
        "Backend: Post Reactions Feature": [
          "Section introduction",
          "Reactions description",
          "Reactions interface, modal schema and joi schemes",
          "Add post reaction to redis cache",
          "Remove post reaction from redis cache",
          "Add reaction controller",
          "Fix add reaction issue",
          "Add post reaction to mongodb",
          "Post reactions queue and worker",
          "Fix add reaction to mongodb issue",
          "Remove reaction controller",
          "Add and remove reaction controllers unit test",
          "Get post reactions from redis cache",
          "Update redis HSET method in reactions cache",
          "Get post reactions from mongodb",
          "Get reactions controller",
          "Get reactions routes",
          "Get reactions controller unit test",
          "Push code to github"
        ],
        "Backend: Comments Feature": [
          "Section introduction",
          "Comment interface, model schema and joi schemes",
          "Comment redis cache methods - Part 1",
          "Comment redis cache methods - Part 2",
          "Update redis HSET method in comment cache",
          "Comment socketIO event",
          "Comments service - Part 1",
          "Comments service - Part 2",
          "Comments queue and worker",
          "Add comment controller",
          "Get comment controller",
          "Test comment feature",
          "Comments controller unit test"
        ],
        "Backend: Followers, Following, Block and Unblock Features": [
          "Section introduction",
          "Followers interface and model schema",
          "Follower data structure",
          "Save follower/following to redis cache",
          "Add follower controller - Part 1",
          "Add follower controller - Part 2",
          "Follower service - Part 1",
          "Follower service - Part 2",
          "Unfollow user controller",
          "Follow and unfollow user controller unit tests",
          "Get followers from redis cache",
          "Fix auth bug",
          "Get followers from mongodb",
          "Get followers controller",
          "Block user redis cache method",
          "Update redis HSET method in follower cache",
          "Block user mongodb method",
          "Block and unblock user controller methods",
          "User socketIO handler",
          "Push code to github"
        ],
        "Backend: Notification Feature": [
          "Section introduction",
          "Notification interface",
          "Insert notification method",
          "Add comment notification",
          "Notification socketIO handler",
          "Test comment notification",
          "Add followers notification",
          "Add reactions notification",
          "Delete and update notification service",
          "Update and delete controller",
          "Get notifications controller",
          "Notification controller unit tests"
        ]
      },
      "requirements": [
        "Just basic JavaScript knowledge",
        "No prior React knowledge is required",
        "No prior Backend Development knowledge required",
        "No prior DevOps knowledge required"
      ],
      "description": "React is one of the most popular library's for building client apps with HTML, CSS and JavaScript. If you want to establish yourself as a front-end or full-stack developer, you need to learn React.\nThis course follows a hands-on approach or 'learn-by-doing, which means the whole course is structured around building a fullstack web application and the different concepts will be explained detailedly as they are introduced.\nWhat's this course about?\nThis course is about building a complete fullstack web application from scratch using popular development tools. The curriculum for this course is going to be very hands on as we walk from start to finish building and deploying the application to production. The course is structured into 2 main parts:\nDevelopment (Backend and Frontend)\nDeployment (Infrastructure setup on AWS and CI/CD)\nEach structure is broken down into its sections.\nBackend development\nBackend deployment\nFrontend development\nFrontend deployment\nStudents can go through all the sections or just the sections they are most interested in.\nWhat Technology You'll Use\nWe are building a real-time fullstack application with Continuous integration/delivery and automatic deployment, we'll use a variety of technologies.\nDevelopment\nReact\nRedux-toolkit\nNodeJS\nTypescript and Javascript\nRedis\nMongoDB and Mongoose\nMessage queues\nSocketIO\nJest for unit test\nCloudinary for image and video upload\nNodemailer and Sendgrid mail\nand much more...\nInfrastructure Setup and Deployment\nTerraform\nAWS\nCircleCI\nNumerous AWS resources will be used. Some of those resources are:\n- VPC and subnets\n- Internet gateways\n- Route tables\n- NAT gateways and elastic ips\n- Security groups\n- Load balancers\n- Autoscaling groups\n- EC2 instances\n- Route53\n- S3\n- Code deploy\n- Elasticache for redis clusters\n- and much more\nNot familiar with some of these? No problem! This course will guide you on how to setup and use these technologies in your apps.\nWhat You'll Be Able to Do\nBy the time you complete this course or one of the sections you are interested in, you'll be able\nBuild a real-time fullstack application\nSetup unit tests in both your React application and NodeJS backend application\nSetup CI/CD Pipeline\nSetup Automatic Deployment\nCreate AWS Resources using Terraform\nIntegrate Terraform into CircleCI Pipeline\nSetup Multiple Online Environments (Dev, Staging and Production)\nUse GitHub w/ CircleCI\nUse Feature Branches on GitHub\nWrite unit tests\nCreate Custom React Components\nSetup Redux-toolkit\nUpload images and videos\nAnd More...",
      "target_audience": [
        "Suitable for both beginners and intermediate React developers",
        "Junior developers looking to enhance their skills",
        "Web developers and Front End Developers who want to get into the backend development world or become Fullstack Developers",
        "Frontend or Backend developers who wants to get into the world of cloud infrastucture with AWS"
      ]
    },
    {
      "title": "javascript Complete Real time - Essential Course 2022",
      "url": "https://www.udemy.com/course/javascript-complete-real-time-production-usage-2019/",
      "bio": "Take a deep dive into JavaScript, a Must-Know Language in Web Development, with a Hands-on.",
      "objectives": [
        "Each lesson builds on the knowledge you learned from previous lessons. We don’t skip steps.",
        "Learn to apply JavaScript concepts as you build real-world components.",
        "Working with Event Handlers & Validations with Conditions.",
        "Regular expressions, error handling, localStorage & more",
        "Go from a total beginner to an advanced JavaScript developer",
        "Downloadable lectures, code and design assets for all projects",
        "Drastically improve your ability to debug problems in Javascript.",
        "Avoid common pitfalls and mistakes other Javascript coders make",
        "Get more done by learning how to debug and fix your code when things go wrong"
      ],
      "course_content": {
        "Introduction": [
          "About Me",
          "Welcome to Course",
          "Download Resources File"
        ],
        "Adding JavaScript on HTML Pages": [
          "JavaScript Placement on HTML Page",
          "Printing Methods ( Must Watch - Important )",
          "Comments in JavaScript"
        ],
        "Variables in JavaScript": [
          "Variables in JavaScript",
          "Bug Fix Error For Variables",
          "Concat in JavaScript"
        ],
        "DataTypes in JavaScript": [
          "DataTypes in JavaScript"
        ],
        "Operators in JavaScript": [
          "Assignment Operators in JavaScript",
          "Comparison Operators in JavaScript",
          "Arithmetic Operators in JavaScript",
          "POST / PRE [ inc/dec ] Operators in JavaScript",
          "Ternary Operators in JavaScript",
          "Relational Operators in JavaScript",
          "Logical Operators in JavaScript"
        ],
        "Conditional Operators in JavaScript": [
          "IF Condition in JavaScript",
          "IF & ELSE Condition in JavaScript",
          "IF ELSE IF & ELSE ( Ladder ) Condition in JavaScript",
          "SWITCH Condition in JavaScript"
        ],
        "Looping Methods in JavaScript": [
          "While Loop Method in JavaScript",
          "do-While Loop Method in JavaScript",
          "For Loop Method in JavaScriipt"
        ],
        "Arrays in JavaScript": [
          "Creating your First Arrays in JavaScript",
          "Assign Own Index for Arrays in JavaScript",
          "Associative Arrays in JavaScript",
          "FOR IN Method For Printing String Arrays",
          "Different Ways of Creating Arrays in JavaScript"
        ],
        "Multi Dimensional Arrays in JavaScript": [
          "Multi Dimensional Array Part 01",
          "Multi-Dimensional Array Part 02",
          "Student Mark Sheet Using LOOPING Method"
        ],
        "Functions in JavaScript": [
          "Understanding the Function in Javascript",
          "Function Without Parameter & Without Retrn",
          "Function With Parameter & Without Return",
          "Function Without Parameter & With Return Values",
          "Function With Parameter & With Return"
        ]
      },
      "requirements": [
        "You should have some familiarity with HTML and CSS.",
        "All you need is a computer (Windows, macOS, or Linux) with an internet connection (Windows, macOS, or Linux)"
      ],
      "description": "Why Should you learn JavaScript ?\nJavaScript has become an essential web technology along with HTML and CSS, as most browsers implement JavaScript. Furthermore, JavaScript usage has now extended to mobile app development, desktop app development, and game development. All in all, it has exploded in popularity and is now a very useful skill to learn.\nThe merits of using JavaScript are :\nLess server interaction : You can validate user input before sending the page off to the server. This saves server traffic, which means less load on your server.\nClient-side validation\nDynamic drop-down menus\nDisplaying date and time\nDisplaying pop-up windows and dialog boxes\nDisplaying clocks etc\nHandling DOM & BOM.\n\n\nImmediate feedback to the visitors : They don't have to wait for a page reload to see if they have forgotten to enter something..\nIncreased interactivity : You can create interfaces that react when the user hovers over them with a mouse or activates them via the keyboard..\nRicher interfaces : You can use JavaScript to include such items as drag-and-drop components and sliders to give a Rich Interface to your site visitors.\nJavaScript is not a programming language in strict sense. Instead, it is a scripting language because it uses the browser to do the dirty work. If you command an image to be replaced by another one, JavaScript tells the browser to go do it. Because the browser actually does the work, you only need to pull some strings by writing some relatively easy lines of code. That’s what makes JavaScript an easy language to start with.\nSecondly, and more importantly, there are the browser differences. Though modern web browsers all support JavaScript, there is no sacred law that says they should support exactly the same JavaScript. A large part of this site is devoted to exploring and explaining these browser differences and finding ways to cope with them.\nThere’s no better time to learn JavaScript : You’ve made a smart choice, because JavaScript is the most popular programming language out there. This is no exaggeration. This popularity and growth means more jobs and opportunities than ever before.\nGet access to fast support if you get stuck : There’s nothing worse than getting stuck ten hours into a course and not getting the help you need to continue. Getting stuck is part of the learning process. That’s why I’m here to answer every single question that comes my way.\nWho this course is for:\nResponsive Web Design\nCreate Responsive Website Using HTML5 CSS3\nfrontend developers\nwebsite designer\nHtml Developers\nLearn Web Development Courses and Tutorials\nhow to make responsive website using Html css Javascript\nBuild a real world responsive website\njavascript front end tutorial\nfront end developer course\nfront end development tutorials\nLearn Web Development Courses and Tutorials\nresponsive website design from scratch 2020\nDesign A Complete Responsive Business Website From Scratch\nhtml5 + css3 responsive web design\nLearn Modern Responsive Web Design With Example Step by Step\nResponsive Html5 CSS3 Website\nWeb Design For Beginners\nBuild A Modern Looking Responsive Websites\nLearn Responsive Web Design From Scratch\nReal World Coding in HTML & CSS\nHtml5 CSS3 and Javascript : A Guide To Web Design From SCratch\nWeb Design HTML CSS Create Single Page Website from Scratch\nFront End Web Development\nI guarantee that this is the most up-to-date and engaging JavaScript course available, and it comes with a Udemy 30-day money-back guarantee.\nI can’t wait to see you on the inside !\n- B. Praveen Kumar ( PHP Developer & Web Designer - FULL Stack Developer ).\nWho this course is for :\nLearning JavaScript for the first time? Already using JavaScript and want to master the language? This course is for you!\nThis course if for anyone who wants to use JavaScript to launch an application, switch careers, or freelance as a JavaScript developer.",
      "target_audience": [
        "All Levels From beginner to Advance"
      ]
    },
    {
      "title": "SharePoint 2019 Administration Training From Zero to Hero",
      "url": "https://www.udemy.com/course/sharepoint-2019-administration/",
      "bio": "Complete SharePoint Admin Training",
      "objectives": [
        "SharePoint Fundamentals",
        "Installation and Configuration",
        "Design logical and physical architectures",
        "Install and configure SharePoint Server 2019",
        "Configure Service applications",
        "Create Web applications and site collections, sub sites",
        "Manage Users and permission Levels",
        "Create List, Library, Tasks"
      ],
      "course_content": {
        "SharePoint 2019 Introduction": [
          "SharePoint 2019 Course Overview",
          "What's Microsoft SharePoint ?!",
          "Differences in Hybrid Capabilities SharePoint 2016 SharePoint 2019"
        ],
        "SharePoint Terms": [
          "Course Pre-Assessment Test",
          "SharePoint Terms",
          "SharePoint Min-Server Role",
          "SharePoint Topologies"
        ],
        "Step-by-Step Guide to Installing SharePoint 2019": [
          "Guide to Installing SharePoint 2019",
          "Prepare the Environment",
          "Install SharePoint Pre-Requisites, Features, SQL, etc."
        ],
        "Installing SharePoint 2019 another Way using script": [
          "SharePoint Prerequisites",
          "Hardware and Software Requirements",
          "Hyper-V Manager",
          "Install Windows Server 2019 R2 in virtual machine",
          "Setting up Active Directory, IIS Web Server",
          "Install .NET Framework 3.5",
          "Install SQL SERVER 2017",
          "Install SQL SERVER Management Studio",
          "Installing, Configuring SharePoint 2019",
          "Script file"
        ],
        "SharePoint Logical Architecture": [
          "SharePoint Logical Architecture",
          "Site Collection",
          "Navigating and Creating Site Collections",
          "Web Application",
          "Navigating and Creating Web Application",
          "Configuring Web Application",
          "Service Application",
          "Navigating to Services Applications",
          "SharePoint Content Database",
          "Navigating to Content Database"
        ],
        "SharePoint Farm Configuration": [
          "What's SharePoint Farm",
          "SharePoint Central Administration",
          "SharePoint Configure Email and SMS"
        ],
        "SharePoint Service Application Configuration": [
          "What's Services Application?",
          "Configure User Profile",
          "Create User Profile Service Application",
          "Mange User Profile Service Application",
          "Setup My Site",
          "What's Managed Metadata?",
          "Create Managed Meta Data Service Application",
          "(Solve Common Issue) Managed Metadata_",
          "Create Term-set Managed Metadata",
          "Implementing Managed Metadata",
          "Search Service Application",
          "Configure Search Service Application"
        ],
        "SharePoint Sites, Lists & Libraries": [
          "Plan Site Collection",
          "What's SharePoint Site Collection",
          "SharePoint Site Collection",
          "Create Publishing Site Collection",
          "Adding Another Language (French)",
          "Create French Site Collection",
          "SharePoint Custom List",
          "SharePoint List View 01",
          "SharePoint List View 02",
          "SharePoint Branding 01",
          "SharePoint Branding 02",
          "Create SharePoint Sub-Site"
        ],
        "SharePoint Backup & Restore": [
          "Backup Site Collection",
          "Restore Site Collection"
        ],
        "SharePoint Out of the box": [
          "OOTB Overview",
          "SP Discussion Board",
          "SP Issue Tracker",
          "SP Library",
          "SP Picture Libraries",
          "SP Survey",
          "SP Task List"
        ]
      },
      "requirements": [
        "Participants should have a basic understanding of Windows Server, networking, and general IT concepts."
      ],
      "description": "A SharePoint 2019 Administration course typically covers a wide range of topics related to the planning, deployment, configuration, management, and maintenance of SharePoint environments.  These courses are designed to equip IT professionals, administrators, and SharePoint enthusiasts with the knowledge and skills necessary to effectively manage SharePoint sites and services :\n\n\nCourse Overview: This comprehensive SharePoint 2019 Administration course is designed to equip IT professionals with the knowledge and skills needed to successfully plan, deploy, configure, and manage SharePoint Server 2019 environments. Participants will gain hands-on experience in administering SharePoint 2019, ensuring it meets their organization's collaboration and content management needs.\n\n\nKey Topics Covered:\nIntroduction to SharePoint 2019:\nOverview of SharePoint Server 2019 features and capabilities.\nComparison with previous SharePoint versions.\nArchitecture and Deployment:\nUnderstanding SharePoint 2019 architecture.\nPlanning and deploying SharePoint 2019 farms.\nTopology and server roles.\nInstallation and Configuration:\nStep-by-step installation of SharePoint Server 2019.\nConfiguration of service applications and web applications.\nInitial farm configuration.\nSite Collection Management:\nCreating and managing site collections, sites, and subsites.\nSite templates and customization options.\nPermissions and security settings.\nSecurity and Compliance:\nImplementing security best practices.\nPermissions management and user authentication.\nCompliance features and data loss prevention.\nContent Management:\nDocument libraries, lists, and content types.\nMetadata management and content organization.\nVersioning and content approval.\nSearch and Content Discovery:\nConfiguring and optimizing search functionality.\nCustomizing search results.\nContent indexing and crawling.\nWorkflow Automation:\nCreating and managing workflows using SharePoint Designer.\nIntroduction to Microsoft Flow integration.\nBackup and Disaster Recovery:\nStrategies for data backup and recovery.\nHigh availability and disaster recovery planning.\nPerformance Optimization:\nMonitoring and tuning SharePoint performance.\nResource allocation and optimization.\n\n\nEnroll Today: Enhance your SharePoint administration skills and become proficient in managing SharePoint Server 2019 environments. Enroll in our SharePoint 2019 Administration",
      "target_audience": [
        "IT Administrators and Managers",
        "SharePoint Administrators",
        "System Engineers",
        "SharePoint Site Owners",
        "Business Analysts"
      ]
    },
    {
      "title": "JavaScript Master Course From Beginner to Expert Developer",
      "url": "https://www.udemy.com/course/javascript-master-course-from-beginner-to-expert-developer/",
      "bio": "The Complete JavaScript and Web Development Course: From Fundamentals to Advanced Techniques and Real-World Projects",
      "objectives": [
        "JavaScript Fundamentals: Master the core concepts of variables, data types, operators, control flow, and functions.",
        "Modern JavaScript (ES6+): Learn the latest syntax, features, and best practices for writing clean and efficient code.",
        "DOM Manipulation: Learn to interact with web pages and create dynamic user interfaces.",
        "Asynchronous Programming: Master asynchronous operations, promises, and async/await for handling complex tasks.",
        "Working with APIs: Learn to fetch data from external sources and integrate them into your web applications."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction & Getting started with Javascript",
          "Mathematical Functions",
          "String Command in JavaScript",
          "Boolean & If statement in JavaScript",
          "Functions in JavaScript",
          "Objects in JavaScript",
          "Document Object Model in JavaScript",
          "Array & Loops",
          "Advance Functions in JavaScript",
          "Modules",
          "External Libraries",
          "Inheritance in JavaScript",
          "Class Project-1",
          "Class Project-2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Embark on a transformative journey from JavaScript novice to seasoned professional with this comprehensive, project-based course. \"JavaScript Master: From Beginner to Professional Developer\" is designed to equip you with the skills and knowledge necessary to build modern, dynamic web applications. Whether you're starting from scratch or looking to enhance your existing JavaScript abilities, this course will guide you through the fundamentals, advanced concepts, and practical application of JavaScript in real-world scenarios.\nWhat you'll learn:\nThis course takes a hands-on approach, emphasizing practical application and project-based learning. You'll master:\nJavaScript Fundamentals: Grasp the core building blocks of JavaScript, including variables, data types, operators, control flow, functions, objects, and prototypes. We'll cover everything from the ground up, ensuring a solid foundation.\nDOM Manipulation: Learn to interact with and manipulate the Document Object Model (DOM) to create dynamic and interactive web pages. You'll be able to change content, styles, and structure on the fly.\nAsynchronous JavaScript: Understand and implement asynchronous programming techniques using callbacks, promises, and async/await. This is crucial for handling network requests, animations, and other time-dependent operations.\nModern JavaScript (ES6+): Explore the latest features and syntax of modern JavaScript, including arrow functions, classes, modules, destructuring, and more. Write cleaner, more efficient, and maintainable code.\nFront-End Web Development: Build engaging and user-friendly web interfaces using JavaScript in conjunction with HTML and CSS. Learn best practices for structuring your code and creating responsive designs.\nBack-End Web Development with Node.js and Express: Dive into server-side JavaScript development using Node.js and the Express framework. Create REST APIs, handle requests, and build scalable web applications.\nWorking with Libraries and Frameworks: Gain experience with popular JavaScript libraries and frameworks (mention specific ones if covered, e.g., React, Angular, Vue.js, if applicable). Learn how to integrate them into your projects and leverage their power.\nTesting and Debugging: Learn how to write unit tests and use debugging tools to ensure the quality and reliability of your code.\nVersion Control with Git: Master Git for version control, a crucial skill for collaborating on projects and managing your codebase effectively.\nWho this course is for:\nAnyone who wants to build dynamic and interactive web applications.\nWhy take this course?\nComprehensive Curriculum: Covers everything from the fundamentals to advanced concepts.\nHands-on Projects: Learn by doing and build a portfolio of real-world applications.\nPractical Skills: Gain in-demand skills that are highly valued by employers.\nEnroll now and start your journey to becoming a JavaScript Master!",
      "target_audience": [
        "Anyone who wants to build dynamic and interactive web applications."
      ]
    },
    {
      "title": "Ruby on Rails: Training and Skills to Build Web Applications",
      "url": "https://www.udemy.com/course/the-startups-guide-to-web-development-with-ruby-on-rails/",
      "bio": "Designed for entrepreneurs who want to learn to code their own ideas. No prior experience needed.",
      "objectives": [
        "By the end of this course, you will be able to build a complete web app with the skills to apply your learnings to any idea.",
        "You will learn how to use Ruby 2 and Rails 4 to rapidly prototype your ideas.",
        "You will learn the basics of front-end web design with Bootstrap 3.",
        "You will learn how to work with APIs by using the Stripe API to implement payments.",
        "You will learn how to implement features such as user login, data validations, image uploads, order forms, seller dashboards, and purchase histories.",
        "You will learn how to navigate GitHub and Heroku.",
        "You will learn how to read documentation to install and setup open-source code."
      ],
      "course_content": {
        "Get Up and Running": [
          "Course Introduction",
          "Installation for Mac Users",
          "Installation for Non-Mac Users"
        ],
        "Create Our Website": [
          "Create a New App",
          "Add Our First Pages",
          "Add Links",
          "Add Listings"
        ],
        "Add Front-end Design": [
          "Install Bootstrap",
          "Add a Navigation Bar",
          "Simplify Our Code",
          "Build Beautiful Forms"
        ],
        "Update Listings With Images": [
          "Install Paperclip and ImageMagick",
          "Set Up Paperclip",
          "Design Page Layouts",
          "Add Custom CSS"
        ],
        "Save and Deploy": [
          "Set up GitHub",
          "Commit Our Code to GitHub",
          "Deploy on Heroku"
        ],
        "Host Images Online": [
          "Set Up Dropbox",
          "Protect Our Account Data",
          "Configure Dropbox Settings"
        ],
        "Add Users": [
          "Install Devise",
          "Insert Conditional Links",
          "Customize Devise Forms and Alerts",
          "Add Names to Users",
          "Validate User and Listing Data"
        ],
        "Connect Users to Listings": [
          "Associate Listings With Users",
          "Set User Permissions",
          "Create a Seller Page",
          "Redesign the Seller Page",
          "Create a Homepage Banner"
        ],
        "Place Orders": [
          "Link Orders, Listings, Users - Part 1",
          "Link Orders, Listings, Users - Part 2",
          "Create Order History Pages",
          "Reorganize Order Links and URLs"
        ],
        "Accept Payments": [
          "Set Up Stripe",
          "Add Credit Card Fields",
          "Verify Credit Card Data",
          "Charge Credit Cards"
        ]
      },
      "requirements": [
        "All software will be free to download and will be covered in the course"
      ],
      "description": "Why Take this Class?\nThis course is the one I wish I had when I first taught myself to code.\nI spent a year wading through coding exercises, programming books, and online tutorials. Similar to traditional education, I thought I had to learn everything from the ground up—first master the basics of HTML, then pick a programming language, then learn to build simple functionalities, then develop more advanced features.\nBut really, I just wanted to know how to build a website that does “___________” (fill in the blank with your own million dollar idea). When I finally finished building my first website, I realized I had been learning it all wrong for my purpose.\nSo if your goal is to master a programming language and become the ultimate software engineer, this may not be the course for you.\nIf, however, you’re looking for an effective way to rapidly implement your ideas on the web, you’re in the right place. Read on.\n\nWhat You’ll be Learning\nThis course will take you through building an online marketplace similar to Etsy. You will learn to develop functionalities common to many websites including:\nUpload product listings complete with prices, descriptions, and images\nCreate user accounts and login to see personalized dashboards\nImplement powerful design features with CSS\nAccept credit card payments and initiate transfers to third-party bank accounts\nSecure your sensitive account data\nDeploy your website live\nAlong the way, we'll learn to use the latest versions of popular technologies. We’ll be working with Ruby on Rails, as well as front-end tools like Twitter Bootstrap and CSS. We’ll touch upon databases with SQLite; APIs with Stripe; and even hosting platforms such as GitHub, Heroku, and Dropbox. The skills you’ll have learned will be valuable for building any idea.\n\n\n\nAbout BaseRails\nBaseRails is a video learning platform that teaches Ruby on Rails and other technologies through building real world projects. Our collection of project-based courses walk you through coding robust applications like Etsy and Yelp while covering the most relevant programming topics, APIs, and tools used by developers.\nWhether you're learning to code to become a web developer, or just looking to prototype your MVP, we believe working on projects is the most effective way to learn. Instead of being taught theory, you’ll learn by building working applications. You understand the big picture concepts before filling in the details. You learn to build apps the way developers do — one feature at a time.\n\nMost people feel demotivated when they take traditional programming classes, but with BaseRails, you’ll make rapid progress on your projects so you always stay engaged. Along the way, you learn in-demand tech skills through practice and solving problems with available resources, not through brute memorization.\n\nWith a growing community of students who love our practical approach, we aim to become the leader of online, project-based learning for every subject.\nEnroll on baserails.com for a free account.",
      "target_audience": [
        "Anyone who is interested in learning to build websites."
      ]
    },
    {
      "title": "Build a Movie Review App Node & React - MERN Stack 2023",
      "url": "https://www.udemy.com/course/mern-stack-bootcamp-build-a-complete-movie-review-app/",
      "bio": "Practice your MERN Skills By Building Real World Projects - MongoDB, Express, React, Node, Cloudinary, Tailwind etc.",
      "objectives": [
        "Actual hand on hand practice of React, Node JS, Express, Cloudinary and MongoDB",
        "Create a beautiful web UI using Hot indemand tech React & Tailwind CSS",
        "To put all the pieces together you have learned so far",
        "To create a project which will make your portfolio stronger than ever.",
        "New tips and tricks on the MongoDB, React, Node JS and the Cloud"
      ],
      "course_content": {
        "Before we begin": [
          "Important Note - Before You Purchase",
          "The Project Itself",
          "How to Get Most?",
          "Where is The Source Code",
          "Show Me Final App"
        ],
        "Basic Node Express & Project Initialization": [
          "Misconceptions in node js",
          "Backend API",
          "API Routes & Controllers",
          "Installing Node JS",
          "Setting up VS Code",
          "Project Initialization",
          "First Node JS Code",
          "Our First Express Server",
          "Refactoring with MVC Pattern",
          "Think from the front end perspective"
        ],
        "Creating New User (Sign up)": [
          "Installing Postman",
          "API Prefix and The Nodemon",
          "Post and Receving JSON",
          "Installing MongoDB Locally",
          "Connecting to Local MongoDB",
          "What is NPM",
          "Mongoose Models",
          "Creating New User",
          "Hashing Password",
          "Preventing Duplicate User",
          "Middlewares inside Express",
          "Express Validator"
        ],
        "Email Verification": [
          "Email Verification Why and How",
          "Setting up mailtrap",
          "Email Verification Token Schema",
          "Sending Verification Email",
          "Verifying Email Verification Token (OTP)",
          "Comparing Hashed OTP to Verify Email Verification Token",
          "Resend Email Verification Token (OTP)",
          "Refactor"
        ],
        "Reset Password": [
          "Model For Password Reset Token",
          "Password Reset Controller",
          "Sending Password Reset Link",
          "Middleware to Check Reset Pass Token",
          "Changing The User Password"
        ],
        "User Sign In - Environment Variables & Error Handling": [
          "User Sign-in",
          "Environment Variables",
          "Async Await Error Handling"
        ],
        "Creating Authentication UI": [
          "Design Something First",
          "Important! New Update From React 18",
          "Initializing Project With React and Tailwind CSS",
          "Creating User Navbar",
          "Using react-icons",
          "Sign in Form",
          "Refactoring Signin Form",
          "Finalizing Signin Form",
          "Signup Form",
          "Setting up React Router DOM",
          "Forget Password Form",
          "Email Verification OTP Form UI",
          "For Firefox Support",
          "Moving to Next OTP Field",
          "Updating OTP State",
          "Moving to Previous OTP Field",
          "Update for React 18 - Breaking Changes For OTP Field",
          "Moving to Previous From Empty OTP Field",
          "Confirm Password Form",
          "Fixing Navigation Login and Home Route",
          "Understanding Context API",
          "Enabling Dark Mode",
          "Adding Dark Theme Class",
          "Toggling Theme",
          "Refactoring Theme Code",
          "Different Color for Light & Dark Mode",
          "Finalizing Theme",
          "Signup State (userInfo)",
          "Validating Signup Form",
          "Fixing Create User Respnse and Setting up Axios",
          "Sending User Info to Backend for Signup",
          "Fixing CORS Error",
          "Fixing 404 Not Found",
          "Rendering Verification Page For Only Valid User",
          "Handle Submit For OTP Form",
          "OTP Validation",
          "Verifing User Email With OTP",
          "Notification Context & The Component",
          "Updating Notification",
          "Signing Token on Email Verification",
          "Setting up Auth Context",
          "Signin with Email and Password",
          "Rendering Busy Indicator on Sign-in",
          "Creating The isAuth Middleware",
          "Making Request to is-auth",
          "Redirect User to Home If Already Logged in",
          "Handling Logout",
          "Auto Sign in After Email Verification",
          "Understanding Reset Password",
          "Method for Forget Password & Handling Form State",
          "Reading Query Params",
          "Rendering Reset Password isVerifying Indicator",
          "Handling Invalid and Valid Token",
          "Fixing Small Bug",
          "Validating New Password",
          "Resetting New Password",
          "Component to Resend Email Verification",
          "Conditionally Rendering Resend Email Verification",
          "Navigating to Resend Email Verification Component",
          "Link to Reapply Email Verification OTP",
          "Resending Email Verification Token",
          "Refactoring Resend Email Verification Component"
        ],
        "Uploading Actor": [
          "Actor Schema",
          "Setting up Router For Actor",
          "Multer Configuration",
          "Middleware to Validate Actor",
          "Configuring Cloudinary (A Cloud Storage)",
          "Uploading Image To Cloudinary",
          "Optionally Uploading Image",
          "Updating Actor",
          "Image Optimization",
          "Deleting an Actor",
          "Search Actor",
          "Fetching Latest Actors (Records)",
          "Fetching Single Actor (Record)",
          "Refactoring Actor Controller"
        ],
        "Role Based Authentication": [
          "Different Role For Different User",
          "isAdmin Middleware",
          "Routes Only For Admin"
        ],
        "Movie Upload API": [
          "Creating Schema",
          "How We Will Upload",
          "Trailer Upload Route",
          "Uploading Trailer Video to The Cloud",
          "The First Step Towards Uploading a Movie",
          "Data Structure of The Movie",
          "The Complex Validation Logics",
          "Fixing a Bug",
          "Sending and Receiving Array and Objects",
          "Parse Data",
          "Creating a New Movie",
          "Uploading Poster With Multiple Sizes",
          "Storing Multiple Thumbnails"
        ]
      },
      "requirements": [
        "Basic knowledge about HTML and CSS",
        "Some programming knowledge with JavaScript",
        "Who are really ready to face the challenge"
      ],
      "description": "Welcome to this real world practical guide where we are going to practice our MERN or Full Stack Skills by building a Movie Review App like imdb. Where we will have our own API, admin panel to upload movies and the app for normal users. This course is for those who really want to learn the core concepts without using any libraries. We will use Node.js, Express, React (functional components), MongoDB, Tailwind, Mailtrap, Cloudinary, Sendinblue etc. We will build the entire frontend with React Functional components and Context API.\n\n\nInside this course we will build an advance movie review app like IMDB where you will have your own admin pannel to upload movies and users can rate the movie from 1 to 10. As admin you can see the progress, add, update or delete the movies.\n\n\nAlso you can create new actors whom you can then add inside movies as they are the actors of that particular movie. At the frontend we are going to create an advance UI like slider, live search, rating models, multiple forms, and many more using React JS and Tailwind CSS.\n\n\nBuilding complete backend API with Node.js, Express, MongoDB, Cloudinary.\nRole Based Authentication (Admin & Normal User).\nUser Authentication With Email Verification.\nProtected Routes According to Role.\nPassword Reset Route.\nCloud Storage for Images and Videos\nAdvanced MongoDB Aggregation Concepts.\nBuilding our Admin Panel With React & Tailwind.\nAdvance Form with complex validation and live search fields.\nCustom auto scroll slider to display featured movies.\nBuilding Complex UI with just React & Context API.\nHandling Complex Form Without any library.\nTo Build this project we are going to Windows System.\n\n\nWho is this course for.\nThis course is NOT for those who don't know anything about React and Node JS. This course is mainly for those people who want to practice their Full Stack Skills. If you already know a little bit of React and how to install node js inside your computer you can easily enroll into this course and rest you can leave it to me.\n\n\nIMPORTANT:\nAll of this course is recorded on windows machine so take this course only if you can install Node, MongoDB and Github on Mac or Linux.",
      "target_audience": [
        "Who wants to practice MERN skills",
        "Who want to became a Full Stack developer"
      ]
    },
    {
      "title": "Build Complete CMS Blog in PHP MySQL Bootstrap & PDO",
      "url": "https://www.udemy.com/course/build-complete-2022-cms-blog-in-php-mysql-bootstrap-pdo/",
      "bio": "Build Amazing Content Management System(CMS) with Full Admin Panel in PHP MySQL Bootstrap and PDO",
      "objectives": [
        "Build a Fully Customizable Login and Registration System",
        "Learn How to Create, Update, Delete and Show Posts",
        "Explore the Infinite Possibilities with PHP Sessions Inside the Blog",
        "Build a Category System",
        "Build a Profile System",
        "Get Introduced to the Most Main Concepts in Web Development",
        "Learn How to Hash and De-hash Passwords like a Pro",
        "Apply Validations and Roles with PHP Sessions",
        "Build a Fully Functional Admin Panel",
        "Learn How to Upload and Update and Delete Images",
        "Take Ownership and Get Confidant Building your Next Web Development Project",
        "Control the User Ability and Limit him from Doing Harmful Acts to your Website",
        "Master the Art of Debugging in a Way that's both Practical and Fun",
        "Create a fully-functional Comment System",
        "Learn some Cool Tips and Tricks about Programming in General",
        "Master the Concept of SQL Joins in a Practical Way",
        "Build a Complete Search Box from Start to Finish"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing Visual Studio Code"
        ],
        "Getting Started and Creating the Authentication System": [
          "The Design of Clean Blog",
          "Setting up the Config File",
          "The Register Page pt.1",
          "The Register Page pt.2",
          "The Login Page",
          "Logging in and Starting the Session",
          "Logging out and Destroying the Session pt.1",
          "Logging out and Destroying the Session pt.2"
        ],
        "Creating our Full Posts System": [
          "Creating Posts",
          "Showing the Posts in the Index Page",
          "Showing a Single Post",
          "Deleting Posts",
          "Updating Posts",
          "Finshing up Updating and Deleting Posts(with Images)",
          "Validation and Finishing Posts Up"
        ],
        "Building the Category System (Users Side)": [
          "Showing Categories",
          "Creating Posts with Categories",
          "Showing Posts Based on Categories"
        ],
        "Creating the Profile Page": [
          "Profile Page"
        ],
        "Refining and Finishing up the Users Side": [
          "Refining and Finshing up the Users Side pt.1",
          "Refining and Finishing up the Users Side pt.2"
        ],
        "Getting Started with the Admin Panel": [
          "The Design of Admin Panel",
          "Logging the Admins in pt.1",
          "Logging the Admins in (with Sessions) pt.2"
        ],
        "Starting with Admins": [
          "Displaying Data in the Dashboard",
          "Showing the Admins Data",
          "Creating New Admins"
        ],
        "Perfecting the Categories (Admin Side)": [
          "Showing Categories",
          "Creating Categories",
          "Deleting Categories",
          "Updating Categories"
        ]
      },
      "requirements": [
        "You should have knowledge of PHP and PDO and MySQL",
        "You should have a basic understanding of Bootstrap"
      ],
      "description": "Do you want to build an Amazing cool project? Do you want to build up your CV? Did you learn a bunch of tools like (PHP, MySQL, and Bootstrap) and you want to train your skills?? This course should be perfect for you. In this course, you are going to apply what you have learned all at once. We are going to go through the most common concepts of web development practices and parts. we are going to look at things like the log-in and registration system, the posts crud and category system, how to process images, how to upload and update them, and all that cool stuff and that's for the user-end.\n\n\nFor the admin-end, we are going to log in the admins and create them. how to create and perfect the whole category system, and how to take control of the posting process inside the blog. And you are going to be introduced to some other concepts and ideas like password hashing, validation, complex queries like (joins) and sessions, and whole a lot more. So if you don't want to miss out on this opportunity and if you want to get ahead with your career as developer, go now and get the course. See you inside",
      "target_audience": [
        "Anybody who learned PHP and MySQL and want to apply what they learned",
        "Anybody who learned Bootstrap and PDO and want to train and test their abilities",
        "Anybody who wants to build up their CV with a big project to get a job"
      ]
    },
    {
      "title": "Node.Js: Building REST APIs with Sails.js(v1.0)",
      "url": "https://www.udemy.com/course/building-rest-apis-with-sailsjs/",
      "bio": "The complete guide to build Resful APIS with Sails.js(v1.0), Mysql, and MongoDB",
      "objectives": [
        "Build Complete Rest Apis In SailsJs",
        "Learn Authentication In SailsJs",
        "Learn how to use multiple Datastores in SailsJs",
        "Learn and Understand SailsJs in Depth"
      ],
      "course_content": {
        "Getting Setup": [
          "Installing Nodejs",
          "Source Code",
          "Introduction to Sails.js",
          "Creating Sails Project",
          "Understanding Sails Directory Structure",
          "Blueprints Restful Routes in Sailsjs",
          "Shortcut Routes in Sails.js"
        ],
        "Debugging Sailsjs Application": [
          "Debugging In Webstorm",
          "Debugging In VS Code",
          "Debugging In Chrome"
        ],
        "Datastores in Sails.js": [
          "Installing Mysql",
          "Connecting Sails.js App to Mysql",
          "Installing MongoDB",
          "Connecting Sails.js App to MongoDB",
          "Understanding Automigrate in Sails.js"
        ],
        "CRUD(Create, Read, Update, Delete) Companies": [
          "Module Introduction",
          "Creating model in SailsJs",
          "Challenge: Create new Company",
          "Solution: Create new Company",
          "Async/Await with Models",
          "Find All Companies",
          "FindOne Company",
          "Update Company By Id",
          "Delete Company By Id"
        ],
        "Adding Relationship between Models": [
          "Challenge: One way Association",
          "Solution: One way Association",
          "Creating Jobs",
          "Find All Jobs",
          "Adding One to Many Relationship",
          "Adding Relation with Job and Company",
          "Populating Jobs with Companies",
          "Adding Many to Many Relationship",
          "Create and Find All Applications"
        ],
        "Authentication in Sails.js": [
          "JWT Authentication Workflow",
          "Creating User Model",
          "Adding Validations",
          "Saving User to DB",
          "Encrypt the User Password",
          "Implementing Login",
          "Creating JSON Web Token",
          "Creating IsLoggedIn Policy",
          "Applying Policy to All Endpoints in Sails",
          "Understanding Policies in Sailsjs",
          "Adding Relation with Company and User"
        ],
        "Learning Path to Become a FullStack Developer": [
          "Learning Path to Become a FullStack Developer"
        ],
        "Bonus": [
          "Bonus Lecture",
          "What is Next.js",
          "Setting up NestJs Application",
          "Routing in NextJs",
          "Using Shared Components"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript is Important",
        "Basic knowledge of NodeJs is Important"
      ],
      "description": "Sails.js is a JavaScript back-end framework that makes it easy to build custom, enterprise-grade Node.js apps. It is designed to emulate the familiar MVC pattern of frameworks like Ruby on Rails, but with support for the requirements of modern apps: data-driven APIs with a scalable, service-oriented architecture. It's especially good for building chat, real-time dashboards, or multiplayer games; but you can use it for any web application project - top to bottom.\nWhether you’re a front-end developer seeking to expand your back-end knowledge, or a server-side developer unfamiliar with using Node and JavaScript on the back-end, the common denominator we all share is a desire to create web applications. Sails is designed to be compatible with whatever strategy you have for building your front-end, whether it be  Angular, Backbone, iOS/ObjC, Android/Java, or even a “headless” app that just offers up a raw API to be used by another web service or your developer community. Sails is great for building everyday back-end apps that handle HTTP requests and WebSockets.\nWhat can you build with Sails.js?\nHybrid Web Applications - applications that combine a JSON API with server-rendered views, that is, in addition to an API, this type of application can serve dynamic (i.e. personalized) HTML pages, making it suitable for use cases which demand SEO (search engine optimization). These applications often use a client-side JavaScript framework (e.g. Angular, Ember, React, etc.), but they don’t necessarily have to. Examples of hybrid web applications you might be familiar with are Twitter, GitHub, and Basecamp.\nPure APIs – applications that fulfill requests from one or more independent front-end user interfaces. We say independent” because the front-end doesn’t have to be delivered by the same server that is providing the JSON API, or even by a server at all. This umbrella category includes SPAs (single-page apps), native mobile applications (e.g. iOS and Android), native desktop applications (e.g. OSX, Windows, Linux), and the venerated IoT (Internet of Things). Many mobile-first products (think Uber, Instagram, Snapchat) start off as pure APIs.\nSo why Sails.js?\n100% JavaScript\nRock solid foundation\nFront-end Agnostic\nAuto generated REST APIs\nUse any popular database\nPowerful associations\nStandardization\nRealtime with WebSockets\nSails generators\nReusable security Policies\nWhat you will learn in this course?\nWhat is Sails.js and Why you should use Sails.js\nSetting up Sails.js project from scratch\nDebugging Sails.js project in Webstorm\nDebugging Sails.js project in VS Code\nDebugging Sails.js project in Chrome\nUnderstanding Sails.js in Depth\nDatastores in Sails.js\nHow to perform CRUD operation in Sails.js\nHow to add relationship between models\nBuilding APIS from scratch\nAuthentication in Sails.js",
      "target_audience": [
        "Programmers looking to learn SailsJs",
        "Developers who wants to learn REST API Development in NodeJs",
        "Developers who have researched SailsJs but have had trouble understanding some concepts"
      ]
    },
    {
      "title": "JavaFX tutorial: Learn JavaFX with Examples",
      "url": "https://www.udemy.com/course/javafx-tutorial-beginners/",
      "bio": "Create amazing Java GUI applications with this hands-on JavaFX course.Become a pro in JavaFX by leveraging JavaFX API",
      "objectives": [
        "You will learn JavaFX in simple and easy steps starting from basic to advanced concepts with real-time examples",
        "You will learn to build real-time application using javaFX. We will be building a Calculator App using JavaFX in this course.",
        "Learn JavaFX you need for professional desktop and mobile application development",
        "This course will take you from complete beginner in JavaFx to advanced developer."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Java is required",
        "Internet connection is needed"
      ],
      "description": "Focus on what actually matters: This is not a course where you will learn bunch of things in a very shallow way. You are going to get really damn good at JavaFX. Like a real programmer, you won't worry about the buzzword of the day because you will have fundamental skills to pick up things on your own. You will be working on real-time project. We will start with small projects like creating a Login page, Registration page and then will design some advanced applications like building a  calculator.\nThis course teaches you how to start developing rich-client desktop applications using your Java skills and provides comprehensive coverage of JavaFX 8's features.\nLearn the JavaFX you need for professional development:  Most courses focus on the syntax and features in JavaFX. They will talk to about controls,shapes at a very shallow level but  in this course you will learn how to use them in building a software.\nDesigned to take you from total beginner to advanced:   If you have tried learning JavaFX before, you have likely found that beginner courses are way too easy, advanced courses are way too hard, and there is hardly anything in the middle. This JavaFX course is designed to take you from zero knowledge all the way to the advanced level, so that you can get it all done with one comprehensive course.\nWhat will you learn in this course?\nJavaFX layout panes : Border Pane, Grid Layout, HBox,VBox,Grid, Group etc\nJavaFX Controls: Label, Button,MenuButton,RadioButton,CheckBox,ChoiceBox,ListView,DatePicker,TextArea\nJavaFX Charts: PieChart,BarChart,Scatter Chart, LineChart,AreaChart\nJavaFX Shapes: Rectangle, Circle,Ellipse, Arcs\nJavaFX Event Handling: Mouse Events, Key Events\nNote: We will not just cover them in theory in this course but we will actually design each of them.\nWhat real time-projects will be building in the course?\nUsing controls we will be building a simple Login page.\nUsing controls like choicebox, radiobutton, DatePicker,checkboxes, ListView we will create a Registration form.\nUsing controls and Event handling in JavaFX we will also create a calculator App at the end of the course.\n\n\nENROLL In the COURSE",
      "target_audience": [
        "Any developer wanting to develop a user-interface in Java",
        "If you want to build a GUI desktop/mobile application in Java",
        "If you want to learn Java's next-generation graphical user interface toolkit, then you must take this course.",
        "If you want to learn about layouts,controls, style sheets , event handling and lot more."
      ]
    },
    {
      "title": "Full Stack Development with Java, MS SQL, Spring, Hibernate",
      "url": "https://www.udemy.com/course/full-stack-development-with-java-ms-sql-spring-hibernate/",
      "bio": "All aspects of Web Development with Java, MS SQL, Spring and Spring Hibernate for anyone who wants to start from scratch",
      "objectives": [
        "Proficiency in Java 11, Full stack Java Development with Java, Mss ql, Spring, Hibernate",
        "Proficiency in Eclipse",
        "Obtain Core Java skills",
        "Essential Java basics",
        "All concepts of Object-Oriented Programming",
        "How to use ‘static’ keyword and ‘nested and inner’ classes",
        "Layouts and Grid Layout",
        "Learn SQL basics with SSMS (SQL Server Management Studio)",
        "U se SQL commands to filter, sort and manipulate strings, dates numerical data from different sources",
        "Retrieving data from database with different scenarios",
        "User privileges, permission commands and roles",
        "Build awesome Web Applications using Spring Boot",
        "Learn every fundamental details of Spring Boot Framework",
        "Learn Environment Setups",
        "Spring Boots Development Tools",
        "Create a datasource in Spring Boot",
        "Learn Using JDBC with Spring Boot",
        "Maven Build and Dependency Management",
        "Hands-on Spring Hibernate Projects",
        "Learn Spring Hibernate with Eclipse based integrated Development Environment which is Spring Source Tool Suite",
        "Learn how to design and develop restful web services with Spring Boot Hibernate",
        "Activate Hibernate",
        "Send e-mail within Spring Boot",
        "Take a top-rated Java course on Udemy to gain in-demand skills. Learn how to build with Java using the latest and greatest tools and techniques.",
        "Java is one of the most in-demand computer programming languages. It’s used in web applications from e-commerce websites to Android apps.",
        "Java is a programming language and platform initially developed by Sun Microsystems and now owned by Oracle.",
        "Java is an object-oriented programming (OOP) language, which means concepts or things are represented as “objects” that have data fields and methods.",
        "Java is a very versatile language. Several fields use Java, including Android app development, desktop applications that work on many operating systems",
        "Oracle, the owner of the Java programming language, has the Oracle Certified Developer: Java SE 11 Developer program, which is easily the best certification"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Knowledge",
        "No prior Java, Ms sql, Spring Hibernate knowledge is required!",
        "We prefered Windows OS but this is not mandatory. You can prefer to use other Operating Systems. We also provided specific videos on installations for each platform",
        "We prefered Eclipse which is a powerful and advanced text editor with a lot of plug-ins and tools",
        "Desire to learn Java, Ms sql, Spring Hiberbate",
        "Desire to learn java full stack with mssql, spring hibernate",
        "Desire to become full stack java developer",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to the Full Stack Development with Java, MS SQL, Spring, Hibernate course online.\nFull stack Web Development with Java, MS SQL, Spring, and Spring Hibernate for anyone who wants to start from scratch\nIn this course, you will be able to learn the Java and MS SQL topics you need to know to learn together with Spring and Spring Hibernate. Full stack java developer, java full stack, java web development, full stack java, full stack java web development, java full stack development, java fullstack, full stack java development, java sql, full stack web development java, full stack web development, hibernate\nTake a top-rated Java course on Udemy to gain in-demand skills. Learn how to build with Java using the latest and greatest tools and techniques. Real-world experts give you training, resources, and coding exercises to help you grow your knowledge.\nThis online course is one of the most awesome Udemy courses which will help you to learn the development step by step.\nJava is one of the most in-demand computer programming languages. It’s used in web applications from e-commerce websites to Android apps. If you want to be a programmer or work with programmers, taking a Java course will help you skill up for the job. Explore our wide range of up-to-date, top-rated Java courses. From primers to certification courses, we’ve got you covered.\nSpring Framework is an industry-standard backend framework for enterprise Java. Its huge suite of components and functionalities has garnered the framework a big following, particularly with developers who already know Java.\nNo Previous Knowledge is needed!\nThis course is for anyone. If you are a beginner, this course will take you from scratch to an advanced level. If you are someone from the field and you just need a refresher, you are also in the right place.\nAt the end of this course, you will be able to create a restful web service in Maven using Spring and Hibernate Frameworks.\nEvery section in the course is loaded with real-world examples. You will also work on assignments at the end of each section.\nIn this course you will learn;\nWhat Java is and how it works,\nProgramming Fundamentals with Java,\nEclipse\nJava Development Kit - JDK,\nJava Runtime Environment – JRE,\nJava Virtual Machine - JVM\nAll Concepts of Object-Oriented Programming\nHow To Use ‘Static’ Keyword and ‘Nested and Inner’ Classes\nSuper Classes and Sub Classes\nStrings,\nWrapper Classes,\nThrow and Throws\nExceptions,\nSwing\nLayouts and Grid Layout\nHow to install and setup these requirements.\nYou will learn the basics of SQL such as data, database, DBMS or SSMS, SQL, tables, and so on.\nDatabase normalization,\nManipulating data,\nRetrieving data from the database with different scenarios,\nYou will also learn SQL transactions and transaction commands,\nSchema and schema objects and\nUser privileges, permission commands, and roles.\ncreating and consuming REST services.\nMajor Spring Framework Capabilities like profiling, working with different environment annotations, and more\nCreating Demo Web Application and implementing the domain step by step\nHow to create executable Jar Files on Project\nHow to code test classes using Spring Boot Testing Capability -Rest Services\nHow to connect a database using JDBC\nMajor Annotations\nYou will learn details of the Spring Boot Framework\nYou will gain an intermediate level of expertise in Spring Boot\nYou will learn theoretical details of the Framework\nYou can create an enterprise web application with Hibernate\nWhat is Java?\nJava is a programming language and platform initially developed by Sun Microsystems and now owned by Oracle. Java is inspired by C and C++ and uses an object-oriented programming model, which means that concepts or things are represented as “objects” that have data fields and methods. One of the biggest advantages of Java is that it runs on a Java Virtual Machine (JVM), meaning that you can execute Java code on any platform that has a JVM, without re-compilation. This is different from C and C++, which require re-compilation for every hardware platform you execute the code on. Java has many other advantages, including automatic memory management. This eliminates hard-to-understand pointers used in languages like C, which can help Java developers write better code in a shorter period of time.\nWhat does it mean that Java is an object-oriented programming language?\nJava is an object-oriented programming (OOP) language, which means concepts or things are represented as “objects” that have data fields and methods. In object-oriented programming, models called “objects” represent either a programming entity or an abstract concept. These objects are created and assembled independently of one another but can work with each other in logical ways. Objects are manifestations of classes and can inherit code allowing for code re-use, which can drastically reduce code duplication if used correctly. Additionally, encapsulation, another core OOP concept, allows you to create code with the implementation hidden. Although, in many cases, writing OOP code in Java (and other OOP languages) can take longer than using a procedural language, the benefits obtained with OOP, namely code reusability, encapsulation of data, and readability of code, often result in code that is easier to maintain in the long run.\nWhat is Java used for?\nJava is a very versatile language. Several fields use Java, including Android app development, desktop applications that work on many operating systems, server-side applications, and more. The virtual machine required to run Java programs has been ported to numerous operating systems allowing Java to run on virtually all hardware. According to the TIOBE index, Java has consistently been in the top 3 most-used and popular languages since its initial release in the 1990s. Many developers still consider Java the language of choice in areas such as enterprise and application servers, and even in embedded systems development. Many Fortune 500 companies rely on Java to run their core systems and employers often view Java experience on a résumé as favorable due to its popularity.\nWhat certification is best for Java?\nOracle, the owner of the Java programming language, has the Oracle Certified Developer: Java SE 11 Developer program, which is easily the best certification to obtain for Java developers. The main reason why it’s the best certification, is, unlike most other certifications for Java, the Oracle certification is both well known and universally accepted by employers all over the world. The exam is challenging. You also must bring an ID with you to the exam, so you cannot get anyone to take it for you. Certification is really valuable for both the certification holder and for future employers. There are few, if any, other certification programs so universally accepted as Oracle’s Java certification. Thus, getting Java certification is one of the surest ways to give yourself an advantage over other job seekers in the marketplace.\nWhat are the pros and cons of Java?\nJava is a very popular language and has been for over 20 years. Because of its popularity, it’s built up a huge range of frameworks, toolkits, tutorials, and support. Not to mention, Java developers have a huge number of career opportunities. Another pro of Java is platform independence. A wide variety of computer hardware and operating systems can use Java. Java is also relatively easy to learn and relatively secure. Java runs on its own virtual machine, via byte-code. When compared to traditional languages like C++ that compile to native machine code, Java’s performance can be slower for applications that are time-critical. Java code is verbose and requires much more code to achieve the same functionality compared to languages such as Python. Overall, developers will likely continue to use Java for many years to come because of its popularity and huge adoption.\nWhat is Spring Framework?\nSpring Framework is a backend framework for enterprise application development written in Java. Because Java is platform-independent, applications written in Spring Framework can be deployed to any platform. This also makes it possible for developers to focus on creating application logic while Spring Framework handles all the interaction with the operating system. Core parts of Spring Framework include the IoC container, which handles the configuration of application objects; the Data access framework, which allows developers to write simple code to store and retrieve data that is stored in databases; and Spring MVC framework, which gives developers tools to structure applications according to the Model-View-Controller pattern. These and other parts of Spring work together and make building applications for enterprise quicker, easier, and more trouble-free.\nWhat careers use Spring Framework?\nThere are many careers available in enterprise development for programmers that know Spring Framework. In fact, a large majority of Java development jobs require knowledge of Spring. The type of work you do with Spring Framework can vary since it is so flexible. A Spring Java developer designs and builds large-scale applications for enterprises that have high availability and performance. A Spring application developer specializes in creating client applications that run on workstations and laptops. A Java Springboot developer develops web applications and microservices with Spring Framework. A Java backend developer uses Spring Framework to create the server-side code of web applications. A Java e-commerce developer uses Spring Framework for handling customer orders and processing payments.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll Java Programming online course, you will feel the OAK Academy`s seasoned developers' expertise.\nThis course will take you from a beginner to a more experienced level.\nThis course takes you from absolute beginner core concepts, like showing you the free tools you need to download and install, to writing your very first program. You will learn step by step with hands-on examples. If you are from the field and need a refresher this course will be a guide for you, too. Every time you come back to this course you will learn something new or improve yourself.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better specialist. You will always have up-to-date content to this course at no extra charge.\nVideo and Audio Production Quality\nAll our contents are created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Beginners with no previous coding experience",
        "Programmers who are looking to sharpen their skills to the expert level",
        "Anyone who wants to create desktop applications, web applications, enterprise applications, mobile applications, computer games with Java",
        "Anyone who are beginner but wants to become expert",
        "Anyone who wants to become a computer programmer",
        "People who want to learn full stack java",
        "People who want to learn full stack development",
        "People who want to learn java spring hibernate"
      ]
    },
    {
      "title": "Using Modern JavaScript Today",
      "url": "https://www.udemy.com/course/using-modern-javascript/",
      "bio": "what every web developer needs to know",
      "objectives": [
        "Use Modern JavaScript tools and language features on all web platforms",
        "Organize their JavaScript, images and stylesheets into modules with a clear dependency hierarchy",
        "Quickly iterate on code in development, using file watchers that re-compile code on any change",
        "Easily deploy production-ready asset bundles",
        "Use a build step in order to allow code transformations so that other languages (such as Less, Sass, CoffeeScript, and TypeScript) can be used in the browser",
        "Automate common tasks during development and deployment using Node libraries and Gulp"
      ],
      "course_content": {
        "Fundamentals: How To Node": [
          "Introduction",
          "Overview",
          "Installing Node",
          "Running JavaScript in Node",
          "Node Modules (CommonJS)",
          "Node Example 1",
          "Node Example 2 - Part 1",
          "Node Example 2 - Part 2"
        ],
        "NPM: Never manually download a library again": [
          "The Basics",
          "Local Modules",
          "(ES2015) Arrow Functions",
          "(Library) Lodash",
          "Packages",
          "Versioning",
          "Scripts"
        ],
        "Bower and Less: How to make CSS bearable": [
          "Bower",
          "Less - Part 1",
          "Less - Part 2",
          "Less - Part 3",
          "Less - Part 4"
        ],
        "ES2015: How to make JavaScript bearable": [
          "Introduction",
          "Babel",
          "VS Code",
          "Variables",
          "Deconstruction",
          "Object Literals",
          "Classes",
          "Symbols",
          "Iterables - Part 1 - Generators",
          "Iterables - Part 2 - Advanced",
          "Promises",
          "Conclusion"
        ],
        "Gulp: How to automate your life": [
          "Introduction",
          "Gulp + Babel: Our First Task",
          "Task Dependencies",
          "Streams",
          "Object Streams",
          "Vinyl FS",
          "Common Plugins",
          "Production",
          "Watching",
          "Organization",
          "Gulp 3",
          "Conclusion"
        ],
        "Modules: How to organize your assets": [
          "Introduction",
          "ES2015 Syntax",
          "Formats",
          "Example App - Part 1",
          "Example App - Part 2"
        ],
        "Modules: RequireJS": [
          "Introduction",
          "Shims",
          "Optimization",
          "Code Splitting"
        ],
        "Modules: Browserify": [
          "Introduction",
          "Gulp",
          "CSS",
          "Watching",
          "Conclusion"
        ],
        "Modules: Webpack": [
          "Introduction",
          "Loaders",
          "Example App",
          "Gulp",
          "Development Server",
          "Common Plugins",
          "Conclusion"
        ],
        "Modules: JSPM": [
          "SystemJS",
          "JSPM In our Example App"
        ]
      },
      "requirements": [
        "Experience building web applications or sites, using JavaScript and common libraries such as jQuery, is required",
        "Have a basic understanding of how to navigate your platform's terminal or command line"
      ],
      "description": "This course’s purpose is to introduce any JavaScript developer on any platform to the powerful world of Node.js, task automation, package management and module loading. Basically: Modern JavaScript.\nThis is course that I wish I had before years of trial and error, source-code spelunking and documentation reading; so with it I hope to save you guys all the trouble and get going writing modern, maintainable, and organized JavaScript today!\nNode.js? I thought you said ANY platform!\nWhile this course is a great introduction to writing server-side applications in node (certainly not wasted time, even if you don’t intend to use a node server), we spend most of our time using node as a development tool.\n\nIf you’re writing an application in PHP, ASP. NET, or anything else, no problem! Node won’t need to be installed on the production server for it to do it’s thing. We simply use it to process our assets; there’s no need for it to be deployed into production unless your backend server also uses node.\nEspecially if you’re an ASP. NET developer, Microsoft is incorporating these tools right into Visual Studio and ASP. NET 5! Node.js isn’t just for Linux and servers anymore! But on the other hand, that means you have to have a good grasp on these tools to stay ahead in the world of ASP. NET - and that’s why I’m here!\nModern JavaScript\nTo write modern JavaScript, we need three things: a JavaScript transpiler, a module loader, and a module bundler.\nA transpiler is what takes modern JavaScript and turns it into legacy JavaScript that will run in any browser! Using a transpiler these days is practically the norm. There is no reason why we should be stuck writing 5 year old JavaScript because some of your customers are stuck with ancient browsers. We will be using Babel extensively for this purpose.\nIn addition to the new features of JavaScript, modules are one of the most important aspects to writing highly maintainable, modular (see what I did there?) code for applications from the small to the enterprise. I’m going to show you guys some tools that makes writing properly organized modular code in JavaScript so simple that there’s no reason not to use them, even for small projects!\nWhat else will be covered?\nSince a lot of these tasks are going to require a bit of automation, we’re going to be introducing you to Gulp (version 4). Gulp is an awesome task runner that allows us to write code that can perform automated tasks, such as transpiling or bundling our JavaScript. Note: Gulp is supported as a first class citizen in Visual Studio 2015! It’s even used in the project templates for ASP. NET 5!\nWe’re also going to take a look at Bower. Bower is a client-side package manager that makes it easy for us to install third party dependencies.\nFinally, we’ll also take a look at LESS - the CSS preprocessor. I know that’s not much to do with JavaScript, but it will give us a reason to look into automating the building and bundling process of our styles. Besides, once you use LESS, you’ll never want to use vanilla CSS again!",
      "target_audience": [
        "This course is NOT an introduction to JavaScript",
        "This course IS for JavaScript developers who want to develop using leading edge technology and techniques",
        "This course is ESPECIALLY for ASP.NET developers who wish to learn more about Gulp, Bower and Node for use in ASP.NET 5"
      ]
    },
    {
      "title": "JavaScript 10 Projects in 10 Days Course for Beginners",
      "url": "https://www.udemy.com/course/javascript-10-projects-in-10-days-course-for-beginners/",
      "bio": "Embark on a 10-day learning journey through 10 practical examples using JavaScript, CSS, and HTML. Elevate your skills",
      "objectives": [
        "Day 1: Love Calculator",
        "Day 2: BMI Calculator",
        "Day 3: Loan Calculator",
        "Day 4: Counter Application",
        "Day 5: Palindrome Checker Application",
        "Day 6: RGB Color Generator",
        "Day 7: Tip Calculator",
        "Day 8: Time and Date Widget",
        "Day 9: Get Unicode Character Value",
        "Day 10: Age Calculator Application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Day 1: Love Calculator": [
          "Love-Calculator-Preview",
          "Love-Calculator-HTML",
          "Love-Calculator-CSS",
          "Love-Calculator-JS"
        ],
        "Day 2: BMI Calculator": [
          "BMI-Calculator-Preview",
          "BMI-Calculator-HTML",
          "BMI-Calculator-CSS",
          "BMI-Calculator-JS"
        ],
        "Day 3: Loan Calculator": [
          "Loan-Calculator-Preview",
          "Loan-Calculator-HTML",
          "Loan-Calculator-CSS",
          "Loan-Calculator-JS"
        ],
        "Day 4: Counter Application": [
          "Counter-Application-Preview",
          "Counter-Application-HTML",
          "Counter-Application-CSS",
          "Counter-Application-JS"
        ],
        "Day 5: Palindrome Checker Application": [
          "Palindrome-Checker-Application-Preview",
          "Palindrome-Checker-Application-HTML",
          "Palindrome-Checker-Application-CSS",
          "Palindrome-Checker-Application-JS"
        ],
        "Day 6: RGB Color Generator": [
          "RGB-Color-Generator-Application-Preview",
          "RGB-Color-Generator-Application-HTML",
          "RGB-Color-Generator-Application-CSS",
          "RGB-Color-Generator-Application-JS"
        ],
        "Day 7: Tip Calculator": [
          "Tip-Calculator-Preview",
          "Tip-Calculator-HTML",
          "Tip-Calculator-CSS",
          "Tip-Calculator-JS"
        ],
        "Day 8: Time and Date Widget": [
          "Time-and-Date-Widget-Preview",
          "Time-and-Date-Widget-HTML",
          "Time-and-Date-Widget-CSS",
          "Time-and-Date-Widget-JS"
        ],
        "Day 9: Get Unicode Character Value": [
          "Get-Unicode-Character-Value-Preview",
          "Get-Unicode-Character-Value-HTML",
          "Get-Unicode-Character-Value-CSS",
          "Get-Unicode-Character-Value-JS"
        ]
      },
      "requirements": [
        "Basic Computer Skills: Participants should have a fundamental understanding of using computers, navigating the internet, and working with web browsers.",
        "Familiarity with HTML, CSS, and JavaScript (Optional): While this course is designed for beginners, having a basic familiarity with HTML, CSS, and JavaScript will be beneficial. If you are new to these technologies, don't worry! The course will provide a comprehensive introduction to these languages.",
        "Code Editor: Participants will need access to a code editor to write and modify HTML, CSS, and JavaScript code. Popular code editors include Visual Studio Code, Sublime Text, or Atom.",
        "Internet Connection: Since this is an online course, a stable internet connection is necessary to access the course content and interact with the instructor.",
        "Motivation and Enthusiasm: A passion for web development and a willingness to learn and explore new concepts will greatly enhance the learning experience. Be prepared to dive into exciting projects and expand your skills!"
      ],
      "description": "Are you eager to embark on a journey to master the fundamentals of web development, encompassing HTML, CSS, and JavaScript? Look no further than our comprehensive course, \"10 Projects In 10 Days - HTML, CSS & JavaScript,\" thoughtfully crafted to provide you with hands-on experience and practical skills in building captivating and interactive web projects.\nOver the course of 10 days, you'll be taken on an immersive and intensive learning experience, guided through the creation of 10 unique projects, each honing specific aspects of web development. From the outset, you'll dive into intriguing challenges, gaining proficiency in HTML, CSS, and JavaScript along the way. As a result, you'll amass a robust skill set and an impressive portfolio of projects that will undoubtedly catch the attention of potential employers and clients alike.\nThroughout the journey, you'll be introduced to captivating projects, each tackling a real-world scenario, allowing you to apply your newfound knowledge in a practical manner. Here's an overview of the projects covered:\nDay 1: Love Calculator\nAre you ready to explore the realm of love and curiosity? On the first day, you'll build a fascinating Love Calculator, allowing users to input their names and receive a love percentage, a fun and exciting project to kickstart your journey.\nDay 2: BMI Calculator\nNext up is the BMI Calculator, a vital tool in health and wellness applications. You'll create a calculator that calculates Body Mass Index based on user inputs, empowering users to monitor their health effortlessly.\nDay 3: Loan Calculator\nDelve into the realm of finance and economics as you craft a Loan Calculator. This practical project will enable users to calculate loan payments and interest rates, an essential tool for financial planning.\nDay 4: Counter Application\nIn this project, you'll develop a dynamic Counter Application, providing users with a user-friendly interface to increment or decrement numbers, an excellent exercise to strengthen your JavaScript skills.\nDay 5: Palindrome Checker Application\nChallenge your logical thinking with the Palindrome Checker Application. Users will be able to determine whether a given word or phrase is a palindrome, adding a touch of intrigue to your web development expertise.\nDay 6: RGB Color Generator\nLet your creativity shine with the RGB Color Generator. You'll build an application that generates random RGB color codes, a delightful addition to your repertoire of interactive web projects.\nDay 7: Tip Calculator\nAs your skills progress, you'll craft a Tip Calculator, a useful tool for calculating tips and gratuities. Users will appreciate the ease of this application in their day-to-day activities.\nDay 8: Time and Date Widget\nGet ready to create a Time and Date Widget that displays the current date and time. This informative widget will add both functionality and elegance to web pages.\nDay 9: Get Unicode Character Value\nExpand your knowledge of character encoding with the Get Unicode Character Value project. Users will be able to obtain the Unicode value of a character they input, showcasing your expertise in handling character data.\nDay 10: Age Calculator Application\nConclude the course by building an Age Calculator Application, allowing users to determine their age based on their birthdate. This practical and user-friendly application will be a fantastic addition to your portfolio.\n\n\nNOTE: You Should Already install the VS Code Software and Chrome Browser in order to work with the Applications.\n\n\nBy the end of \"10 Projects In 10 Days - HTML, CSS & JavaScript,\" you'll have honed your skills in web development, gained confidence in HTML, CSS, and JavaScript, and acquired a remarkable portfolio of interactive web projects. Whether you're a beginner or looking to enhance your web development capabilities, this course is your gateway to an exciting and rewarding journey in the world of web development.\nEnroll now and unlock your full potential in creating captivating web applications!",
      "target_audience": [
        "Beginners in Web Development: If you are new to web development and want to start from scratch, this course is perfect for you. The projects are structured in a way that gradually introduces key concepts, making it easy for beginners to follow along.",
        "Aspiring Front-end Developers: If you aspire to become a front-end web developer and want to enhance your skills in HTML, CSS, and JavaScript, this course will provide you with practical hands-on experience in building interactive web projects.",
        "Self-Learners: If you enjoy self-paced learning and prefer to explore web development through practical projects, this course will offer you the opportunity to learn by doing. Each project is designed to reinforce essential concepts and techniques.",
        "Students and Professionals: Whether you are a student looking to complement your studies or a professional seeking to add web development to your skillset, this course will equip you with practical knowledge that you can apply to real-world projects.",
        "Anyone Interested in Building Web Projects: If you have a keen interest in web development and want to build engaging and interactive web projects, this course will guide you through 10 exciting projects, enabling you to create impressive web applications."
      ]
    },
    {
      "title": "The Complete CSS Flexbox Guide With a Complete Project 2025",
      "url": "https://www.udemy.com/course/the-complete-css-flexbox-guide-with-a-complete-project/",
      "bio": "understand the concept behind css flexbox and create a real world project with complex responsive layouts using flexbox",
      "objectives": [
        "understand everything about flexbox and how it actually works",
        "build advanced responsive layouts fast and easily with minimal code using flexbox",
        "build menus using flexbox",
        "build a complete website with advanced responsive layouts like ( the holy grail layout - the equal columns layout - the horizontal masonry layout ) and so more!",
        "enhance your productivity and save more time as a web developer",
        "build photo galleries using flexbox"
      ],
      "course_content": {},
      "requirements": [
        "An Internet Connection",
        "Basic Understanding Of HTML & CSS",
        "Any Code Editor Of Your Choice"
      ],
      "description": "Are you tired of using floats then clearing these floats ?\nAre you tired of using positioning to achieve the layout you want and then finding out that the everything collapses when you view it on different screen sizes ?\n\ndo you want an efficient way to create complex layouts easily and quickly ?\ndo you want to create advanced responsive layouts using css only with just simple lines of code ?\nif so then this course is for you !\n\n\nIn this course you will learn everything you need to know to get started using flexbox in your future projects\nWe will start by learning and understanding how flexbox works, because I think if you used flexbox before you might be overwhelmed by the number of new properties, we have about 11 or 12 new properties with an average of 4 potential values so it can be a little bit overwhelming to jump right in with everything,\nbut in this course you will clearly understand how every property works and how a specific property can be used to control the layout in different ways\nI believe in learning by doing so after understanding and learning all the properties of flexbox we will get our hands dirty and we will start by building two menus, a simple single level menu and  an advanced one and in this section of the course you will see every thing you learned in action step by step\nOne thing I put in my mind when I was building this course is that I wanted this course to stand out from other courses so I noticed that in all other flexbox courses you will just see some boxes on the screen all the time and the instructor is just moving them around using flexbox and at the end, the course will be finished and you become like \"ok that was good i learned the basics of flexbox but now what? How can I use this knowledge in real world examples\"\nbecause after all the web pages are not some boxes moving around, right ? and that is exactly why I created the last section of the course.\nSo in this last section we will build a complete project from scratch that I built for you , and my main focus while I was building this project is how to implement every property we will learn about flexbox in this project so you get a solid understanding of what we can do using these properties in real life!\nSo in this project you will learn how to create many advanced different layouts like\n1 - the holygrail layout\n2 - you will learn how to center elements vertically easily\n3 - how to build posts articles with equal heights easily using flexbox\n4 - very advanced cards layouts that is almost impossible to attain without flexbox\n5 - the horizontal masonry layout which is very interesting",
      "target_audience": [
        "web designers and developers who want to improve their skills",
        "front end web developers who wants to be able to build advanced layouts easily and faster",
        "web developers who want to build responsive layouts without having to use frameworks like bootstrap",
        "experienced web developers who want to create websites layouts in a much more easy way",
        "any web developer who wants to improve his productivity and save time"
      ]
    },
    {
      "title": "PHP with MySQL: Build 8 PHP and MySQL Projects",
      "url": "https://www.udemy.com/course/php-with-mysql-2022-build-php-and-mysql-projects/",
      "bio": "Build Projects with PHP MySQL Bootstrap and PDO",
      "objectives": [
        "Learn to Work with APIs",
        "Learn to deal with PHP and MySQL in a professional way",
        "Learn to combine Ajax-Jquery with PHP",
        "Create a full like and dislike system",
        "Train your prior knowledge with PHP and MySQL",
        "Learn to deal with files and install a library for it",
        "Build a simple CV creator",
        "Build an auth system",
        "Build a rating system",
        "Learn Debugging in PHP and MySQL along the way with Ajax JQuery"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Before you Start the Project",
          "Installing Xampp",
          "Installing VS Code"
        ],
        "First Project: Building an Authentication System": [
          "Intro to the Project",
          "Code for the Design of the Project",
          "Config File",
          "Register Page",
          "Logging Users in",
          "Logging in and Checking for Sessions"
        ],
        "Second Project: Building a Comments System": [
          "Intro and Preparing",
          "Creating Posts",
          "Showing Posts in Index",
          "Showing a Single Post",
          "Inserting Comments",
          "Showing Comments",
          "Deleting Comments",
          "Fixing Bugs pt.1",
          "Fixing Bugs pt.2"
        ],
        "Third Project: Creating a Rating System": [
          "Getting Started and Setting up the Plugin",
          "Creating the Ratings for every Post",
          "Showing the Rating for every Post",
          "Fixing Bugs pt.1",
          "Fixing Bugs pt.2"
        ],
        "Fourth Project: Creating a Weather App": [
          "What is an API??",
          "Implementing the Weather App",
          "Code for the Final Version of the Project"
        ],
        "Fifth Project: Build a Cool Like and Dislike System": [
          "Getting Started and Code for the Project",
          "Liking and Disliking pt.1",
          "Liking and Disliking pt.2"
        ],
        "Sixth Project: Building a Simple CV Builder": [
          "Setting up the Project and Installing",
          "Building the CV Builder"
        ],
        "Seventh Project: QR Codes Generator": [
          "Setting up the Package",
          "Generating QR Codes Dynamically"
        ],
        "Eighth Project: Build a Full Live Search System": [
          "Searching through Data pt.1.",
          "Searching through Data pt.2"
        ]
      },
      "requirements": [
        "Basic PHP, MySQL and PDO knowledge",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Are you ready to skill up in programming? Do you have knowledge of PHP and MySQL and do not know what to do with them? Do you guidance on your way to building projects? If so, then this is the right place for you!! In this course, you will learn how to get out of the tutorial hell and how to approach real-world projects and get unstuck on your way to becoming a developer. After this course, you will simply be able to think like a programmer, and solving programming tasks will be no challenge for you.\n\n\nFirst of all, We will begin by building the most common feature of every website and which is the authentication system, which will allow you to learn about various things like password hashing and unhashing, validations, and sessions. For the second project, we are getting deep and we are building a posting system with comments with a focus on the comments and we are doing the whole thing using Ajax JQuery. And the third project is also about a rating system inside the blog itself and we are going to install a plugin along the way to do the design for us and we are going to do the backend from scratch. The next Project it's about a weather app and we are going to use an API for it, so that should be really cool. Another interesting project is also the CV creator that we are using a library for and that will allow us to deal with files within PHP",
      "target_audience": [
        "Every PHP and MySQL developer who want to advance their skills",
        "Developers who want to explore web development further",
        "Developers who want to build cool projects and to build up their CVs"
      ]
    },
    {
      "title": "Build A Dental Website With Python and Django",
      "url": "https://www.udemy.com/course/build-a-dental-website-with-python-and-django/",
      "bio": "Learn Template Driven Web Development With Django and Python!",
      "objectives": [
        "Introductory Django",
        "How to Build Template Driven Websites With Django",
        "Download and Install Python",
        "Install Django",
        "How To Manage URL's",
        "How to Create Views/Pages",
        "How to Use Templates",
        "How To Build Any Basic Business Website"
      ],
      "course_content": {
        "Install All The Web Development Tools": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Install Python",
          "Install The Sublime Text Editor and Git Bash Terminal",
          "Set Up A Virtual Environment",
          "Install Django and Start Our Project",
          "Run the Django Server",
          "Start a New Django App",
          "Urls.py Files"
        ],
        "Build Our Dental Website": [
          "Build our First Webpage",
          "Download the Dental Template",
          "Create The Static Directory",
          "Install the Dental Template",
          "Add Static Tags to The Template",
          "Tweak Our Static Tags (part 2)",
          "Tweak Our Static Tags (part 3)",
          "Building Django Links",
          "Tweak The HTML Template",
          "Add Custom Images",
          "Add A Video",
          "Contact Page",
          "Change The Contact Page Map",
          "Build The Contact Form",
          "Build The Contact Form (part 2)",
          "Send Email With Django",
          "Send Email With Django (part 2)",
          "Send Email With The Development Sendmail Server",
          "Create an Email Response Page"
        ],
        "Version Control And Web Hosting": [
          "Version Control With Git",
          "Github.com",
          "Intro To Heroku For Webhosting",
          "Install The Heroku Toolbelt",
          "Install Modules For Heroku",
          "Settings.py Heroku Changes",
          "Push Our Code To Heroku",
          "Add A Domain Name"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "In this course you'll learn to build websites with Python and Django by building out a cool and professional Dentist website! Why a Dental website?  Many coders want to become freelance web developers, and what better way to get gigs than by building websites for all the Dentists in your area!\n\n\nIn this course you'll learn to build websites fast using free HTML templates.  We'll download a dental template for free and then customize it to suit our needs.\nYou'll learn to...\nInstall Python\nInstall The Sublime Text Editor and Git Bash Terminal\nSet Up A Virtual Environment\nInstall Django and Start Our Project\nRun the Django Server\nStart a New Django App\nUrls .py\nBuild our First Webpage\nDownload the Dental Template\nCreate Static DIRS\nInstall the Dental Template\nAdd Static Tags to The Template\nTweak Our Static Tags (part 1)\nTweak Our Static Tags (part 2)\nTweak Our Static Tags (part 3)\nBuilding Django Links\nTweak The HTML Template\nAdd Custom Images\nAdd A Video\nContact Page\nChange The Contact Page Map\nBuild The Contact Form\nBuild The Contact Form (part 2)\nSend Email With Django\nSend Email With Django (part 2)\nSend Email With The Development Sendmail Server\nCreate an Email Response Page\nVersion Control With Git\nGithub . com\nIntro To Heroku For Webhosting\nInstall The Heroku Toolbelt\nInstall Modules For Heroku\nSettings .py Heroku Changes\nPush Our Code To Heroku\nAdd A Domain Name\nThis is a really fun course with a cool project! When we're finished you'll have a nice website to add to your portfolio!\n\nSee you inside!\n\n-John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the to build Websites with Django and Python",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "Track Any HTML5 Content with Custom SCORM",
      "url": "https://www.udemy.com/course/track-any-html5-content-with-custom-scorm/",
      "bio": "Create and track any HTML5 content using the Rustici SCORM Driver",
      "objectives": [
        "Overview of SCORM",
        "How to track SCORM completion in an LMS",
        "How to track score in any LMS",
        "How to track specific quiz questions in any LMS"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is a Learning Management System (LMS)?",
          "How SCORM Works",
          "Exploring the SCORM Structure",
          "Exploring What SCORM Tracks"
        ],
        "Setting Up Your Custom SCORM and Tracking Completion": [
          "Downloading the SCORM Driver",
          "Exploring the SCORM Driver Files",
          "Updating SCORM Data Files",
          "Packaging and Uploading Custom SCORM Content",
          "Triggering Course Completion"
        ],
        "Tracking Passed, Failed, Data Chunks and Time": [
          "Download Project Files",
          "Controlling When Completion Happens",
          "Getting the Status of the Course",
          "Decoding the Course Status",
          "Adjusting the Course Success to Passed",
          "Adjusting the Course Success to Failed",
          "Resetting the Course Status",
          "Working with Stored Data",
          "Getting Time Spent in Course"
        ],
        "Setting the Course Score": [
          "Download Project Files",
          "Setting Up the Function",
          "Converting a String to a Number",
          "Setting the Score",
          "Passing or Failing Course Based on Score"
        ],
        "Tracking Quiz Questions": [
          "Download Project Files",
          "Fill in the Blank",
          "True or False",
          "Multiple Choice"
        ],
        "Conclusion": [
          "Download All Finished Projects",
          "Good-bye"
        ]
      },
      "requirements": [
        "Basic JavaScript",
        "Familiar with Learning Management Systems (LMS)"
      ],
      "description": "SCORM is how an eLearning course reports over to a Learning Management System (LMS). If you use a standard eLearning tool like Articulate Storyline or Adobe Captivate, most of the SCORM is already done for you. That works for a lot of situations, but there may be times you ant to track content that does not get tracked by default within an authoring tool. Or you may have HTML5 content that was created outside of the authoring tool that you would like tracked.\nIn this course, Jeff will walk you through how to track any HTML5 content and have it report completion, passed or failed, score, and specific quiz questions to the LMS. Using the Rustici SCORM Driver, you can quickly SCORM wrap your HTML content, trigger completions, and set passed/failed and track score and quiz questions.\nAfter learning how you can create custom SCORM content, you can even go back to Articulate Storyline and Adobe Captivate and trigger custom SCORM within their authoring environment.",
      "target_audience": [
        "Instructional Designers",
        "eLearning Developers"
      ]
    },
    {
      "title": "Advanced NodeJS: Level up your NodeJS skill In 2025",
      "url": "https://www.udemy.com/course/leveling-up-your-skill-as-a-nodejs-developer/",
      "bio": "NodeJS best practices, code architecture, performance, security, Node JS CLI tool, behind the scenes and more.",
      "objectives": [
        "Understand how to optimize CPU-intensive and I/O-bound tasks to improve overall application performance.",
        "Learn best practices for designing, implementing, and managing worker threads.",
        "Write clean, modular, and maintainable code that adheres to architectural guidelines and standards.",
        "Implement essential software engineering concepts such as error handling, data logging, configuration and code refactoring techniques and tools.",
        "Apply security mechanisms to protect against vulnerabilities such as Brute Force Attack, Clickjacking, Mime Sniffing, XSS, and Regex Denial of Service.",
        "Configure and use security middleware and libraries, such as helmet, to enhance the security of Nodejs applications.",
        "Write background tasks with bullmq to drastically improve the performance of your NodeJS application.",
        "Get a comprehensive understanding of developing caching system, structuring and invalidating caches and cooperating background tasks for a better performance.",
        "Understand the importance of data compression in improving the performance and speed of data transmission.",
        "Learn effective file handling and using streams to optimize the performance of file uploads.",
        "Implement and configure Passport JS to integrate authentication functionality into NodeJS applications.",
        "Set up and configure automated code checking tools and pipelines to maintain code quality and consistency.",
        "Build an email service to understand the principles of event-driven architecture in NodeJS applications.",
        "Design, develop, and implement reusable components, separation of concern and loaders to enhance code maintainability and productivity.",
        "Learn how to create, publish, and manage npm packages and enhance code reusability.",
        "Implement effective data modeling strategies to write fast database queries.",
        "Optimize query performance by indexing and using lean."
      ],
      "course_content": {
        "Introduction": [
          "How to make the most out of the course?",
          "Course outline",
          "Why this course?",
          "Link to the exercise files",
          "Join the community"
        ],
        "Mastering the basics - setting the right mindset": [
          "Introduction",
          "What really is node.js?",
          "What really is node.js (article version)",
          "Global variables",
          "Global variables(article version)",
          "Require in depth",
          "Require in depth (article version)",
          "Quiz1",
          "Node.js core modules",
          "Node.js core modules (article version)",
          "HTTP, URL and QueryString",
          "HTTP, URL and Query String (article version)",
          "Quiz2",
          "Express and mongoose",
          "Express and mongoose(article version)",
          "Quiz3"
        ],
        "Making the most out of nodejs": [
          "Introduction",
          "Understanding Asynchronous Programming in Node.js",
          "The back bone of node.js",
          "The backbone of node.js (article version)",
          "How does node.js work behind the scene?",
          "Understanding the Node.js Architecture",
          "System kernel, thread pool, event loop (article version)",
          "Improving thread pool performance",
          "Improving thread pool performance (article version)",
          "Quiz1",
          "Libuv in depth",
          "What is libuv (article version)",
          "Quiz 2",
          "Writing a high performing code",
          "Writing a high performing code (article version)",
          "Non blocking code with set immediate",
          "Non-blocking code with setImmediate (article version)",
          "Worker threads best practice",
          "Worker threads (article version)",
          "Parsing JSON best practice",
          "Parsing JSON best practice (article version)"
        ],
        "Structuring and architecting your code": [
          "Introduction",
          "Software architecture history and benefits",
          "Software architecture history and benefits (article version)",
          "MVC architecture",
          "MVC architecture (article version)",
          "Developing an a MVC boilerplate",
          "Developing an a MVC boilerplate (article version)",
          "Quiz1",
          "Configuration and validation",
          "Configuration and validation (article version)",
          "Validation",
          "Validation (article version)",
          "Middleware",
          "Middleware(article version)",
          "Error handling",
          "Error handling (article version)",
          "Improving try-catch with catchAsync",
          "Improving try-catch with catchAsync (article version)",
          "Quiz2",
          "Error converter middleware",
          "Error Converter Middleware (article)",
          "404, unhandled exceptions and promise rejections",
          "404, unhandled exceptions and promise rejections (article version)",
          "Nodemon, server clean-up",
          "Nodemon, server clean-up (article version)",
          "Logging with winston",
          "Logging with winston (article version)",
          "Adding configuration to the logger",
          "Logging request information using morgan",
          "Separating successful and error responses log",
          "Logging request informations using morgan (article version)",
          "Services and improving exporting modules",
          "Quiz3"
        ],
        "Building a rapid code generator/assistance CLI tool": [
          "What features does it have?",
          "Commander and inquirer",
          "Generating a boilerplate code with a single command",
          "Setting up environment and installing dependencies",
          "Creating a reusable components and command runner",
          "Generating repetitive schematics",
          "Generating service and route",
          "Creating module"
        ],
        "Authentication best practices": [
          "Introduction",
          "Registering a user",
          "Registering a user (article)",
          "Validating a user",
          "Validating a user (article)",
          "Adding access token",
          "Adding access token (article)",
          "Hashing the password and login service",
          "Hashing the password and login service (article)",
          "Login controller and route",
          "Login controller and route (article)",
          "Model plugin and refresh token",
          "Model plugin and refresh token (article)",
          "Saving and verifying a token",
          "Saving and verifying a token (article)",
          "Refresh token service, controller and route",
          "Refresh token service, controller and route (article)",
          "Passport and passport-jwt",
          "Passport and passport-jwt (article)",
          "Authentication middleware",
          "Authentication middleware (article)"
        ],
        "Securing your nodejs application": [
          "Introduction",
          "Brute force attack",
          "Brute force attack (article)",
          "Rate limiter middleware",
          "Rate limiter middleware (article)",
          "Adding the rate limiter to the login route",
          "Adding the rate limiter to the login route (article)",
          "Summarizing and refactoring the rate limiter",
          "Summarizing and refactoring the rate limiter (article)",
          "Protecting against XSS",
          "Protecting against XSS (article)",
          "Content security policy and helmet",
          "Content security policy and helmet (article)",
          "Clickjacking and Mime Sniffing",
          "Clickjacking and Mime Sniffing (article)",
          "NoSQL Injection",
          "NoSQL Injection (article)",
          "SQL Injection",
          "SQL Injection (article)",
          "Cross origin resource sharing",
          "Cross origin resource sharing (article)",
          "DOS and DDOS attacks",
          "DOS and DDOS attacks (article)",
          "Regular expression denial of service",
          "Regular expression denial of service (article)"
        ],
        "Clean coding and advanced architectural principles": [
          "Clean code and consistency",
          "Formatting and security",
          "Automating code checks",
          "Loaders and separation of concern",
          "Loaders and separation of concern (article)",
          "Creating testable index",
          "Creating testable index (article)",
          "Event driven architecture (part1)",
          "Event driven architecture (part1) - article",
          "Event driven architecture (part2)",
          "Event driven architecture (part2) - article",
          "Reusability",
          "Reusability (article)",
          "Publishing an npm package",
          "Publishing an npm package (article)"
        ],
        "Improving the performance of your nodejs app": [
          "Efficient file upload",
          "Adding multer",
          "Using stream to send files",
          "Stream part two",
          "Compression",
          "Background tasks (Bull MQ and Redis)",
          "Using queue and workers to process image in the background.",
          "Fixing the event not being logged",
          "Refactoring the code",
          "Caching",
          "Adding the cache to the background tasks",
          "Using factory method to create workers",
          "Invalidating a cache"
        ],
        "Database query optimization": [
          "Data modeling",
          "Improving query performance with lean",
          "Indexing"
        ]
      },
      "requirements": [
        "Knowledge of javascript and asynchronous programming.",
        "NodeJS setup and familarity with it.",
        "Your favorite code editor preferably visual studio code.",
        "Understanding of developing Rest API’s in nodejs."
      ],
      "description": "The course contains nine well-curated sections to give you the most valuable skills to stand out in the job market and build confidence. The course will give you a 100% new perspective on Node.JS, a collection of tips and hacks to build the cleanest, structured, robust, secure, high-performing, and optimized application. This is the right course for you, only if you are familiar with node.js and developing APIs and are looking for resources to sharpen your skills.\nCourse outline:-\n1. Mastering the basics — setting the right mindset\nWe start the course by covering some of the fundamentals that play a crucial role in shaping how you should view node.js and some must-know basic concepts that you should know before moving to the next sections.\n2. Making the most out of node.js\nThis is one is the most interesting sections which deeply dives into what is behind the cool node.js we have been using and covers concepts and tools that move node.js to go beyond its capacity. It also gives a practical overview of what node.js is good and bad at and what we should do in scenarios where node.js doesn’t do quite well.\n3. Structuring and architecting your code\nI remember when I first got into node.js I didn’t know how to organize my code and was looking for resources that could teach me how to do so. I couldn’t find one at the time and I just went with what I had so I had to learn through time and experience and of course with the help of other senior developers. It has been 7 years now and I still can’t find a course specifically made for structuring your code in node.js so I used the chance to create this section containing 16 videos dedicated to creating a boilerplate code that you can refer to any time you start a project.\n4. Authentication best practices\nIn this section, I covered important topics that you need to know to integrate a successful authentication system. This section is not only about authentication but also explains how your authentication system can fit into the architecture you created.\n5. Securing your node.js application\nSecurity is the most dismissed aspect of software development by a lot of developers. I understand the urge to just jump into building the next cool project but with great power comes great responsibility and it is one of those things that can elevate your confidence in whatever system you launch. So in this section, I covered the most common and also the least known vulnerabilities and how you can protect your node.js code against them. Again everything that comes after the section “structuring and architecting your code” considers how it can fit within the boilerplate code structure.\n6. Clean coding and advanced architectural principles\nThis section is a bit different from the above section “Structuring and architecting your code” as it covers clean coding tools, consistency, formatting, and different architectural principles that you can pull out and use in different scenarios.\n7. Improving the performance of your node.js application\nI think the title explains itself. But this is one of my favorite sections with 13+ videos navigating through tools and techniques that are useful to make your application faster so that your beloved users enjoy the experience of high throughput.\n8. Database query optimization\nThis one is the shortest section but is as important as the other sections. It covers ways to optimize and speed up your MongoDB query.",
      "target_audience": [
        "This is the right course for you if you know the basics of javascript, nodejs, and Rest API’s and you are looking for a material to improve your skill, have a full image on different aspect of software development and confidently appear in interviews. Three of the sections can be viewed for free so you can watch them and see if the course material aligns with your interest."
      ]
    },
    {
      "title": "Fullstack Project With Spring Boot Java And React Hooks- TDD",
      "url": "https://www.udemy.com/course/full-stack-project-using-spring-boot-and-react-with-tdd/",
      "bio": "Build Your First Java Full Stack Application with React & Spring Boot. Learn how to do TDD with Spring boot and React",
      "objectives": [
        "Master everything required to build an end to end Enterprise Java Application with react",
        "How to write unit testcases for Java and React",
        "Integration testing with Java spring boot - With H2 InMemory database",
        "How to write unit testcases for data access layer with H2",
        "How to deploy Java and react application on heroku",
        "Continuous integration and continuous deployment",
        "Fully Automate development process with Travis CI",
        "Setup of Redux and testing",
        "How to Setup Swagger for documentation",
        "How to maintain data migration script with flyway",
        "How to setup JWT with spring boot",
        "How to maintain JWT in react"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of Spring Framework and Spring Boot - beginner level",
        "Knowledge of React - beginner level"
      ],
      "description": "If you know the basics of java and the spring framework and React, the next thing to do is learn how to setup enterprise level application and how to do test driven development and how to write clean code and What is the ideal workflow for developing full stack application.\n\n\nWhy am I focusing on Test driven development ?\nBecause TDD is a way to develop highly usable software. Following the TDD process, a developer must focus on the test cases before actually coding anything. ... As a result, the developer is more interested in the interface than in the implementation—and that leads to more usable software\n\n\nIn this course we will learn various things as mentioned below:\nHow to setup actual enterprise level workflow with CI/CD using Travis CI and deploy both application to Heroku and locally we will connect spring boot application with H2 database and on prod we will connect with Postrgresql.\nHow to deploy both frontend and backend on server.\nHow to maintain different environment like DEV,PROD.\nHow to maintain database migration script with flyway\nHow to document rest api with swagger.\nHow to write Unit and Integration testcases for spring boot application.\nHow to write Unit testcases for Redux side.\nHow to write Unite testcases for React.\nHow to secure application with JWT\nLearn How to setup Jwt based authentication with spring boot and react\n\n\nThe most important thing that we will learn during this course would be test driven development with Spring boot and React & redux and while developing application we will learn best practice for react side and backend side.\nLast and not least we will write production level code not less than that.",
      "target_audience": [
        "Beginner Java and react developer"
      ]
    },
    {
      "title": "Learn Game Development with JavaScript",
      "url": "https://www.udemy.com/course/learn-game-development-with-javascript/",
      "bio": "Make your own animated 2D games",
      "objectives": [
        "Build 2d games with HTML, CSS & JavaScript, no frameworks and no libraries",
        "Explore web animation techniques with HTML canvas element",
        "Practice Object Oriented Programming",
        "Discover and learn 5 fundamental techniques of 2D game development and use them in a real project"
      ],
      "course_content": {
        "Main Project": [
          "HTML & CSS setup",
          "Basic JavaScript setup",
          "Object Oriented Programming with JavaScript",
          "Creating Player & Game objects",
          "Animation loop",
          "Keyboard inputs",
          "Creating projectiles",
          "Periodic events",
          "Draw game UI",
          "Base enemy class",
          "Collision detection between rectangles",
          "Drawing game score",
          "Win and lose condition",
          "Counting game time",
          "Animated parallax backgrounds",
          "Sprite animation with JavaScript",
          "Creating a debug mode",
          "Animating enemy sprite sheets",
          "Night Angler enemy class",
          "Lucky Fish enemy class",
          "Collecting power ups",
          "Drawing projectiles as images",
          "Custom fonts and game text",
          "Cleaning up",
          "Particle effects and physics",
          "Particle rotation",
          "Tweaks and fixes",
          "Hive Whale enemy class",
          "Drone enemy class",
          "Dust effect animation",
          "Fire effect animation",
          "Tuning game difficulty",
          "Bulb Whale enemy class",
          "Moon Fish enemy type",
          "Sounds",
          "Animated shield",
          "Animated projectiles",
          "What's next?"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS & JavaScript is needed to follow this course",
        "Access to code editor and internet browser"
      ],
      "description": "Games should be exciting, full of secrets and special features! Let me take you step by step though my creative process and show you how I build unique game worlds for players to have adventures in. I will explain every line of code as we write it. Let's practise object oriented programming and use HTML, CSS and plain vanilla JavaScript to build a game. There will be no frameworks and no libraries, because we want deep understanding of how things work under the hood.\n\n\nLet's explore an alien planet and it's mechanical life forms in a steampunk themed 2D side scroller. We will learn how to implement:\nSprite animation\nParallax backgrounds\nCollision detection\nPower ups\nDifferent enemy types that alter the gameplay\nand many other features of 2D game development\nIf you are a beginner front end web developer curious about game development, creative coding & web animation, come join me and learn how to create beautiful visuals for your games, and how to implement unique game features that will make your project stand out. Have fun!\n\n\n(In this class I am giving away a lot of free game art assets for characters, environments and props. These were created by me or artists I hired, there is no copyright. Feel free to use them for any of your personal projects if you want. )",
      "target_audience": [
        "Beginner front end web developers curious about animation and 2D games",
        "Coding students"
      ]
    },
    {
      "title": "Mastering HTML5 Programming - The Easier Way",
      "url": "https://www.udemy.com/course/html5-programming-tutorials/",
      "bio": "Learn HTML5 using easy to follow and quick way with CSS3, Graphics, Multimedia, Websockets and HTML5 Touch Events.",
      "objectives": [
        "By the end of the course you will be able to understand the core concepts of HTML5 and CCS3",
        "You will be able to create HTML5 APP and Front end for your websites and web products",
        "You will learn about interesting features like Drop and Drag , Multimedia, Web sockets and Web messaging"
      ],
      "course_content": {
        "Introduction to HTML5": [
          "Starting HTML5",
          "Introduction to CSS",
          "Building the first application",
          "HTML5 Syntax",
          "Resources Week 1"
        ],
        "HTML5- Syntax": [
          "HTML5 Tags",
          "HTML5 - Continued",
          "HTML5 Elements",
          "Webforms",
          "Resources Week 2"
        ],
        "Introduction to CSS3": [
          "CSS Basics",
          "CSS -Continued",
          "Fonts in CSS3",
          "Making a simple App",
          "Week 3 - Resources"
        ],
        "HTML5 - Canvas and Drawing": [
          "HTML5 Canvas",
          "HTML5 Graphics",
          "HTML5 Graphics Part 2",
          "Resources-Week 4"
        ],
        "HTML5 - Multimedia": [
          "HTML5 - Audio",
          "HTML5 - Video",
          "HTML5 - Video Part 2",
          "Resources Week 5"
        ],
        "HTML5-Persistence": [
          "HTML5-Local Storage",
          "HTTP Caching",
          "Week 6 Resources"
        ],
        "HTML5 Features": [
          "Drag and Drop",
          "HTML5 Geolocation",
          "HTML5 Touch Events",
          "Week 7 Resources"
        ],
        "Advance HTML5": [
          "Websockets",
          "Webworkers",
          "Web messaging",
          "Course Summary",
          "Week 8 Resources"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML"
      ],
      "description": "The course provides a comprehensive coverage of HTML5 technology. It has been created by industry professionals already working on web development. The course is divided in 8 sections and each section should take a maximum of one week to cover it. After completion of this course you will be able to create great HTML5 apps.",
      "target_audience": [
        "Anybody who wants to be a web developer"
      ]
    },
    {
      "title": "Build 3 Location Based Vue JS Web Apps Using Google Maps API",
      "url": "https://www.udemy.com/course/vuejs-google-maps-api-for-beginners/",
      "bio": "Location Detector App. Nearby Locations App. Distance Calculator App | Places API, Directions API, Distance API And More",
      "objectives": [
        "Be able to build ANY location-based type Vue JS app you want.",
        "Build a Location-Detector App using HTML5 Geolocation API & Google Maps Geocoding API.",
        "Understand the basics of Vue JS - Components, Routes, Events, Data Binding, Nested Components, $EventBus.",
        "Able to design professional UI Quickly using Semantic UI CSS Framework.",
        "Build a CloseBuy App using Google Maps Places API - Nearby Search, Place Details, Autocomplete API.",
        "Master Google Maps Distance Matrix API & Directions API by building a Distance Calculator App.",
        "Google Maps Map Object, Markers, InfoWindows, Polylines, Common Server Errors."
      ],
      "course_content": {},
      "requirements": [
        "This course is designed to be well suited for beginners who know a little bit of HTML, CSS, and JavaScript.",
        "It’s also suitable for Developers who already know the basics of Vue JS or similar frameworks but want to explore the Google Maps API ecosystem.",
        "Finally, we have also made this course approachable for programmers who already know some basics of Google Maps API and want to upgrade their skills.",
        "If you want to take ONE COURSE and learn everything you need to know about Google Maps API ecosystem along with Vue JS, take this course!"
      ],
      "description": "Welcome to the Vue JS (Options API) and Google Maps API course, the only course you need to learn and code to build location-based web applications.\n\n\nWith over 30K+ students with an average rating of 4.6, my Vue JS, and Google Maps API course is one of the Highest-rated Rated Courses on Udemy!\n\nIn this course, you're going to be building 3 real-world location-based apps, start to finish from scratch, that will teach you pretty much all aspects of Google Maps API.\n\nI'll take you step-by-step through engaging and fun video tutorials that are rich in content!\n\nThroughout this fully practical course, we cover a massive amount of tools and technologies, including:\n\nVue JS\nVue CLI\nOptions API (which works either Vue JS 2 or Vue JS 3 Project, no problem )\nComponents\nRoutes\nEvents\nData Binding\nNested Components\nAxios HTTP Client\nFirebase\nSemantic UI CSS Framework\nHTML5 Geolocation API\nCORS\nHoisting\nError Handling, and more\nGoogle Maps API\n\nObtain API Key\nGeocoding API\nPlaces Autocomplete API\nPlaces API - Nearby Search Request\nPlaces API - Place Details Request\nMap Object\nMarker Object\nInfoWindow Object\nDistance Matrix API\nDirections API - Directions Service JS Library\nDirections Renderer\nPolyline Object\nCommon Google Maps Server Errors, and more\nBy the end of this course, you will be fluently coding in Vue JS and utilizing the Google Maps Platform to make your own location-based apps like a pro!\nDon't just take my word for it, see what some of my students had to say about this course:\n\"Thank you so much for your Vue.js + Google Maps API course! I also appreciate how quick your course was, as I have trouble paying attention to longer courses. I am also a huge fan of Vue (I've tried learning React and Angular in the past, but quickly grew bored of them - Vue is so much more intuitive to me). I hope to see more courses from you in the future!!\"  - Tram Le\n\"A very clear and concise course that provides you with enough information on Google Maps API being used with Vue to get you up and running. I highly recommend this course. I'd like to see maybe a section on how to populate the map with addresses stored in a database Thank you\" - Brandon Oakley\n\"This course is very helpful to me. Thanks and I hope you will make many sources helpful like this.\" - Long Lee\nAlthough the course is short, it is very rich in content. The teacher definitely made a point shot. I finished the course without getting bored and learned useful information. Thank you to the teacher. - Erdem Nayir\n\"This course guides me in an easy manner and each section has very clear instructions. I would strongly recommend taking this Vue js course if you wish to learn quickly building location-based apps with Google Maps API\" - Vikneswaran Thangarasu\n\"This course was very easy to follow. The instructor spoke clearly and at a good pace. This course has everything you need to get started with Google Maps API and Vue.js!\" - Jennifer Inwood\n\"I am happy to learn this concept and I understand how to use Google Map API in vue.js These videos are very easy to recognize. I want more videos to learn about vue.js. However, I learned Google Maps for API concepts very easily. Thank you\" - Viijayaraghavan\n\n\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\n\n\nI will be here to support you throughout this journey, so if you ever have any questions, suggestions, or feedback, please do not hesitate to contact me!\n\n\nSo what are you waiting for? Click the buy now button and join now!",
      "target_audience": [
        "Beginner Vue JS Developers curious about Google Maps API.",
        "Beginner JavaScript Developers who want to learn about Google Maps API ecosystem.",
        "Beginner Web Developers who are looking to build location-based apps using Google Maps API."
      ]
    },
    {
      "title": "Build Apps with ReactJS: The Complete Course",
      "url": "https://www.udemy.com/course/build-apps-with-reactjs-the-complete-course/",
      "bio": "Learn to create web applications using ReactJS and understand the underlying concepts and frameworks.",
      "objectives": [
        "Build UI Components Using ReactJS",
        "Learn to use backend technologies like Node and Express with React",
        "Master JavaScript concepts underlying React",
        "Learn professional web development with ReactJS"
      ],
      "course_content": {
        "Getting Started With ReactJS": [
          "Course Intro",
          "What is React",
          "Environment Setup",
          "Simple Server Setup",
          "quiz"
        ],
        "React & JSX": [
          "Chapter Intro",
          "Intro to JSX",
          "Your First Component",
          "Working With Forms & Events - Basics",
          "Working With Forms & Events - Implementation",
          "Chapter 2 Quiz Questions"
        ],
        "States, Properties & Methods": [
          "Chapter Intro",
          "Lifecycle Methods & Specs",
          "Properties & Validation",
          "Working With States",
          "Chapter 3 Quiz Questions"
        ],
        "Working With Data": [
          "Chapter Intro",
          "Server API Setup",
          "Fetching Data via AJAX",
          "Fetching Data via AJAX - Implementation",
          "Posting Data via AJAX - Basics",
          "Posting Data via AJAX - Implementation",
          "Chapter 4 Quiz Questions"
        ],
        "React Addons": [
          "Chapter Intro",
          "What Are Addons",
          "React and Animation - Concepts",
          "React and Animation - Implementation",
          "Two Way Data Binding",
          "Chapter 5 Quiz Questions"
        ],
        "Server & Workflow": [
          "Chapter Intro",
          "React on The Server",
          "Gulp and Browserify Workflow - Concepts",
          "Gulp and Browserify Workflow - Implementation",
          "Brief Intro to Flux",
          "Chapter 6 Quiz Questions"
        ],
        "Github Profile Project": [
          "Project Intro",
          "Github User Data Request",
          "Displaying the User Data",
          "Fetching & Displaying Repos",
          "Search Functionality",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "HTML is essential but knowledge of JavaScript will be a plus for this course"
      ],
      "description": "ReactJS is the powerful JavaScript library created by Facebook to handle user interfaces for web applications. It allows developers to handle the major challenges faced while building user interface for dynamic web applications. It is one of the hottest technology on the block and is essential for any web developer. The react handles only the view of the MVC pattern and can be used together with other back end frameworks such as Angular and Node. You can also use React addons to build non UI parts in react. This technology has been widely used across industry and sites like AirBnB, Imgur and Feedly are actively using it.\nYou will learn the following along with course:\nConcepts of front end UI development with ReactJS\nView rendering process and application techniques\nJSX syntax\nJavaScript Concepts\nVirtual DOM\nApplication component reusability\nUI Design Concepts\nUse React with backend technologies like NodeJS and ExpressJS\nThe course is our attempt to bring together a complete , professional and practical course for any developer who wants to build web apps using ReactJS. Get started and be the ReactJS guru.",
      "target_audience": [
        "Web Developers who want to learn ReactJS from scratch"
      ]
    },
    {
      "title": "Microsoft Azure AZ-900 Certification",
      "url": "https://www.udemy.com/course/microsoft-azure-az-900-certification/",
      "bio": "Microsoft Azure AZ-900 Certification",
      "objectives": [
        "Fundamentals of Azure , Syllabus of AZ 900 certification and intentions of exam and Marks allocation for every topic as per Microsoft curriculum",
        "Why Azure , IAAS , PAAS , SAAS , Capex , Opex , Pay as you go and rental model vs full buy.",
        "Questions around Disaster recovery , High availability , Fault tolerance , Agility, Latency and Scalability.",
        "Questions around Geo,Region,Zones,Availability Sets ,Zones,Public cloud , Private cloud and Hybrid cloud.",
        "Questions around Scale sets,ARM templates , Resource groups , Burst VMs and Storages."
      ],
      "course_content": {
        "Lesson 1 :- Introduction,IAAS,PAAS,SAAS,Capex & Opex.": [
          "Lesson 1 :- Introduction,IAAS,PAAS,SAAS,Capex & Opex."
        ],
        "Lesson 2 :- Disaster recovery , High Availability & Fault tolerance.": [
          "Lesson 2 :- Disaster recovery , High Availability & Fault tolerance."
        ],
        "Lesson 3 :- Regions,Zones and Sets": [
          "Lesson 3 :- Regions,Zones and Sets"
        ],
        "Lesson 4 :- Public cloud , Private cloud and Hybrid": [
          "Lesson 4 :- Public cloud , Private cloud and Hybrid"
        ],
        "Lesson 5 :- Resource group, Data center failures and Delegate permissions.": [
          "Lesson 5 :- Resource group, Data center failures and Delegate permissions."
        ]
      },
      "requirements": [
        "Should have Azure subscription."
      ],
      "description": "This course will help you with understand Azure Fundamentals using the AZ-900 guidelines. The course follows Q , C and A format of learning.\nQ ( Question) :- Take up an AZ -900 Azure Question. Try to understand what it means.\nC ( Concept) :- For that Question what ever concept is needed talk about it and understand the same.\nA (Answer) :- Then try to get the right answer and also explanation of why other answers are wrong.\nWith this you will learn faster , quicker and to the point. Happy learning , below is the syllabus.\n\n\nSyllabus covered in the azure az-900 fundamentals video :-\nLesson 1 :- Introduction,IAAS,PAAS,SAAS,Capex & Opex.\nChapter 1 :- What is AZ 900 Certification ?\nChapter 2 :- Syllabus and Intention of the Exam.\nChapter 3 :- How is the course is structured ?\nQuestion 1:- Why Data centre is Capex and Azure VMs Opex ?\nQuestion 2:- B2S Burst VMs cost & VM Storage cost.\nQuestion 3:- Is VM IAAS , PAAS or SAAS ?\nQuestion 4:- Why SQL Server installed in VM not PAAS ?\nQuestion 5:- How Administrative effort is reduced with PAAS?\nQuestion 6:- Does PAAS control on operating system?\nQuestion 7:- Do we need to configure high availability in SAAS mode ?\n\n\nLesson 2 :- Disaster recovery , High Availability & Fault tolerance.\nTheory :- DR,HA and FT Theory :- Agility,Scalability and Flexibility\nQuestion 8:- Fault tolerance questions.\nQuestion 9:- How is high availability different from load balancing ?\nQuestion 10:- In what scenarios we should use DR,FT,latency and Scalability?\nQuestion 11 :- Data center and Availability Zones.\n\n\nLesson 3 :- Regions,Zones and Sets\nTheory :- Geo,Region,Zones,Availability Sets & Zones.\nQuestion 12 :- Data center and Availability Zones( Twisted)\nQuestion 13 :- Do all regions support zones ?.\nQuestion 14 :- Can scale sets help when data center fails ?\nQuestion 15 :- Characteristics of public cloud.\n\n\nLesson 4 :- Public cloud , Private cloud and Hybrid\nTheory :- Understanding public,private and hybrid.\nQuestion 16 :- Adding extra resources recommend solution.\nQuestion 17 :- Identifying the benefit of public cloud service.\nQuestion 18 :- Extending capacity by using public cloud.\nQuestion 19 :- Can private cloud run with out data center ?\n\n\nLesson 5 :- Resource group , ARM templates and permissions\nQuestion 20 :- Resource group questions.\nQuestion 21 :- Can AZ protect Data centre failures?\nQuestion 22 :- Does Azure policies do deployment ?.\nQuestion 23 :- How can we automate creation of Azure resources?\nQuestion 24 :- Delegate permissions to Azure resources.",
      "target_audience": [
        "Students who want to get in to Azure Cloud.",
        "Students looking forward to attempt AZ-900 certification."
      ]
    },
    {
      "title": "Projects in MongoDB - Learn MongoDB Building Projects",
      "url": "https://www.udemy.com/course/projects-in-mongodb/",
      "bio": "A Comprehensive Course to Learn MongoDB By Developing 12 Professional Projects",
      "objectives": [
        "Build Web Solutions using MongoDB",
        "Learn to harness full power of document oriented schema",
        "Use server side javascript with mongoDB",
        "Learn best practices for NoSQL development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Customer Database Intro Project": [
          "Project Intro",
          "What Is NoSQL",
          "MongoDB Overview",
          "Installing MongoDB In Linux",
          "Installing MongoDB in Mac OSX",
          "Installing MongoDB In Windows",
          "Inserting & Finding Customers",
          "Updating & Removing Customers",
          "Arrays & Embedded Objects",
          "Section 2 Quiz"
        ],
        "Produst Catalog REST API": [
          "Project Intro",
          "What Is Node.js & Express",
          "What Is a REST API",
          "Node.js & App Setup",
          "Creating The Routes",
          "Fetching Data From The API",
          "Post, Put & Delete Requests",
          "Section 3 Quiz"
        ],
        "jQuery Task Manager": [
          "Project Intro",
          "mLab Setup & Pages",
          "UI & Fetch Tasks",
          "Create Add Task Form",
          "Add Task & Edit Link",
          "Edit Tasks",
          "Delete Tasks",
          "Fetch & Add Categories",
          "Edit & Delete Categories",
          "Section 4 Quiz"
        ],
        "MeteorJS Photo Gallery": [
          "Project Intro",
          "Overview Of Meteor.js",
          "GridFS & Mongofiles Utility",
          "Meteor Setup & Add Packages",
          "Photos Route & Template",
          "Uploading Photos",
          "Fetch & Display Photos",
          "Photo Detals Page",
          "Section 5 Quiz"
        ],
        "Invoicer MEAN App": [
          "Project Intro",
          "Angular 2 & The MEAN Stack",
          "Backend App Setup",
          "Creating The Models",
          "Routes and Testing",
          "Angular 2 Setup With Angular-CLI",
          "Router and Bootstrap",
          "Fetch & Add Customers",
          "Customer Details Page",
          "Edit & Delete Customers",
          "Display, Mark & Delete Invoices",
          "Add Invoice",
          "Section 6 Quiz"
        ],
        "CDN FInder with Mean.js": [
          "Project Intro",
          "AngularJS & Mean.js Overview",
          "Mean.js Install & Setup",
          "Generating & Libraries Module",
          "Library Model & Form View",
          "Libraries List View",
          "Library Details View",
          "Library Search Filter",
          "Section 7 Quiz"
        ],
        "Microposts Rails 5 App": [
          "Project Intro",
          "Intro To Ruby On Rails",
          "Install Rails - Linux",
          "Install Rails - Windows",
          "Mongoid Setup",
          "Post CRUD Functionality",
          "Microposts UI",
          "Section 8 Quiz"
        ],
        "AirFind Airport Finder": [
          "Project Intro",
          "GeoJSON & Database Imports",
          "App & Routes Setup",
          "Airports & State Models",
          "Angular-CLI & Navbar",
          "Airports Component & Service",
          "Search Airports By State",
          "Section 9 Quiz"
        ],
        "MongoChat With Socket.io": [
          "Project Intro",
          "Socket.io Overview",
          "Socket.io Server Setup",
          "Fetching Chats From Database",
          "Chat Client UI",
          "Client Side Chat",
          "Section 10 Quiz"
        ]
      },
      "requirements": [
        "Student should have a basic understanding of JavaScript and NoSQL schema"
      ],
      "description": "The hottest hands-on course for MongoDB is finally here! No more boring traditional textbook theories, instead learn by actually doing in this fun and functional project tutorial!\nMongoDB is a powerful and popular database software that works on the backend of your application to save your data. It is an open-source management system that works with almost any web programming platform.\nMongoDB offers multiple benefits for developers such as being extremely flexible, scalable, faster, and it can run on a small RAM, which means you don’t need to buy high-end server technology for using MongoDB.\nBecause of its amazing features, it has become a popular and loved backend database system for a lot of companies including Foursquare, MTV, and even Craiglist. Now, you can master this amazing database technology too!\nIn our comprehensive course, you will be able to learn the ins and outs of MongoDB, including some amazing related technologies. You will learn how to get started with MongoDB, the benefits of using MongoDB, situations where MongoDB shines, and so much more.\nBut that’s not all. Since, this is a project-based course, it means that you will be able to learn everything above by actually doing it. You will build 12 different projects with MongoDB, using over 10 different technologies.\nYou will learn some amazing technologies and languages including JSON/BSON, Meteor, JavaScript, jQuery, MEAN Stack, Node.JS, HTML/CSS, Express, Angular, Ruby on Rails, Socket.io, Keystone JS, and even REST/HTTP.\nAll of this is packed quaintly in this massive course! Enroll now, and become a MongoDB master!",
      "target_audience": [
        "Student who want to get in depth and real world expertise in MongoDB will find the course extremely useful"
      ]
    },
    {
      "title": "MERN stack projects Based Course Completely Redone",
      "url": "https://www.udemy.com/course/mern-stack-complete-blog-application-from-scratch-2021/",
      "bio": "Build MERN stack projects using, OpenAI/chatGPT, Privy, React Query, Redux Toolkit, Stripe, Nodemailer",
      "objectives": [
        "Build Redis and MERN for Caching",
        "Build MERN Currency Converter",
        "Build Complex MERN Blog project",
        "Authentication and Authorization",
        "Google OAuth (Login with Google)",
        "One time subscription - Payment Integration",
        "User Follow and Unfollow",
        "Posts liking and disliking",
        "Password reset",
        "File upload",
        "Creators ranking (Leaderboard)",
        "Integrating React Query and Redux Toolkit",
        "Post Views Count",
        "Comment system"
      ],
      "course_content": {
        "AI Writing Assistant Using OpenAI": [
          "Project Demo",
          "NodeJS Server setup",
          "Integrating OpenAI",
          "Setting up frontend",
          "Integrating Privy for Authentication",
          "Login-Logout Logis Implementation",
          "Grammar and Spell Check Functions",
          "Rephrasing and selection of sentences Logics",
          "Protecting Route"
        ],
        "PROJECT 1: MERN CURRENCY CONVERTER": [
          "MERN CURRENCY CONVERTER"
        ],
        "PROJECT 2: CACHING USING REDIS WITH MERN": [
          "Live Demo & Caching Explained",
          "Creating and Fetching Documents",
          "How to connect Redis to NodeJS",
          "Implementing Caching",
          "Connecting Frontend"
        ],
        "PROJECT: MERN EXPENSES TRACKER": [
          "Final Source Code",
          "Folder Structure and Data Modelling",
          "User Registration",
          "Login Controller",
          "Error Handling",
          "User Profile Controller and isAuthenticated Middleware",
          "Change Password, Update Profile Controllers and Error StatusCode",
          "Create and List Categories",
          "Add and Lists Transaction Controller",
          "Transactions Filtering",
          "Update and delete transaction",
          "Delete and Update Category",
          "Create React App and Install All Packages",
          "Rendering Templates",
          "Configuring Redux",
          "Configuring React Query",
          "Login using React Query mutation",
          "Persisting Login user using Redux",
          "Private Navbar and Logout Action",
          "Updating Navbar when user login-logout",
          "User Registration",
          "Add Category",
          "Displaying Categories",
          "Delete and Update category",
          "Adding Transaction",
          "Displaying Transactions",
          "Transaction Filtering",
          "Calculating total Income and Expense plus Chart Installation",
          "Chart Data",
          "Change Password",
          "Logout user after password update and update profile",
          "Protecting Component"
        ],
        "PROJECT 3 : BLOG DEMO & DOWNLOADING RESOURCES": [
          "MERN Blog Project Features",
          "MERN BLOG Project Live Demo",
          "Download Final Code and Starter Frontend Templates",
          "Resources and Packages used"
        ],
        "PROJECT 3: BLOG PROJECT-V1 || CRUD OPERATIONS ONLY": [
          "Ways of developing MERN Project",
          "Project Development roadmap",
          "Tools for the project",
          "The Folder Structure",
          "Creating Express Server",
          "Project Data Modelling",
          "Models and Schema Explained",
          "Modelling Data",
          "Create Post Route-Backend",
          "Connect to MongoDB Backend",
          "Frontend Project Stacks",
          "React Query Overview",
          "React Query vs Redux",
          "Create React App using Vite",
          "Handling Form using Formik and Yup",
          "Installing and Configuring React Query",
          "Making create post Request",
          "Fixed Cors Error",
          "Loading, Success and Error State",
          "Fetching All Posts",
          "Upate and Fetch single Post API",
          "React Router dom for navigation",
          "Fetch Post Details",
          "Updating of a post",
          "Delete Post"
        ],
        "PROJECT 3: BLOG PROJECT-V1 || ERROR HANDLING": [
          "Analysing for potentials Errors",
          "Error Handling Middleware",
          "Catching and Throwing Errors",
          "Using Express Async Handler",
          "Not Found Handler"
        ],
        "PROJECT 3: BLOG PROJECT-V1 || MVC + WYSIWYG": [
          "MVC Design pattern overview",
          "Using Express Router",
          "Integrating Controllers",
          "Integrating WYSIWYG",
          "Installing TailwindCSS and React icons",
          "Using Post List and Create Post Templates",
          "Display Navbar and Homepage and applied css",
          "Post Details-Frontend"
        ],
        "PROJECT 3: BLOG PROJECT-V2 || FILE UPLOAD": [
          "Configuring multer for file upload-Backend",
          "Displaying images on the frontend",
          "Handle file change and Preview",
          "Frontend File upload",
          "Showing Alert Messages"
        ],
        "PROJECT 3: BLOG PROJECT-V3 || PASSPORT AUTHENTICATION": [
          "Authentication using Passport",
          "JWT and Passport local overview",
          "User Registration Controller",
          "Configuring Passport Local",
          "Login using passport Local",
          "Client Side Registration-Passport Local",
          "Client Side Login-Passport-Local"
        ]
      },
      "requirements": [
        "Basic understanding of javascript",
        "Basic understanding of react js",
        "You must have some experience in node js",
        "At least you have created a simple API using node and mogodb"
      ],
      "description": "This course offers an in-depth exploration of building a MERN stack projects including AI writing Assistants, Advanced blog project,  REDIS Project, MERN Expenses Tracker application. The blog project has the the following  key features that modern web applications require. You'll learn the intricacies of authentication and authorization, delve into user engagement mechanics, and manage content effectively. By the end of this course, you'll have a thorough understanding of how to implement these functionalities within your MERN stack projects.\nCore Features Explained:\nAuthentication & Authorization: Establish secure login mechanisms and manage user permissions effectively.\nGoogle Login: Integrate Google's OAuth for a streamlined authentication process.\nSubscription Models: Learn how to implement subscription features for premium content access.\nEngagement Features: Engage your audience with likes, dislikes, follow/unfollow functionality, and a dynamic comment system.\nContent Management: Handle post views, categorize content, and implement pagination and filtering to organize posts efficiently.\nCommunity Building: Utilize creator rankings to foster a competitive environment and user dashboards for personalized experiences.\nUser Interaction: Keep users informed with a comprehensive notification system.\nMonetization Strategies: Explore revenue generation through posts and understand the fundamentals of implementing a robust financial model for your platform.\nSecurity Features: Implement forgot password functionality and account verification to enhance user trust and security.\nUser Profile Management: Enable users to upload profile photos, adding a personal touch to user accounts.\nWho This Course Is For:\nAspiring MERN Stack Developers: Ideal for those looking to master the MERN stack through the development of a comprehensive blog project.\nWeb Developers: Suitable for web developers interested in enhancing their skill set with advanced features and functionalities within the MERN ecosystem.\nTech Enthusiasts: Perfect for technology enthusiasts eager to dive into the development of modern web applications that include social features, content management, and monetization strategies.\nThis course is meticulously designed to guide you through the creation of a feature-rich blog application, ensuring you gain practical experience with essential web development practices and technologies.",
      "target_audience": [
        "Any developer who wants to master how to create MERN Stack projects",
        "Any aspiring developer who wants to be a MERN Stack developer",
        "Any developer who wants to develop real world application"
      ]
    },
    {
      "title": ".NET Aspire and GenAI Develop Distributed Architectures 2025",
      "url": "https://www.udemy.com/course/net-aspire-and-genai-develop-distributed-architectures/",
      "bio": "Develop AI-Powered Distributed Architecture w/ PostgreSQL, Redis, RabbitMQ, Keycloak, Ollama, VectorDB using .NET Aspire",
      "objectives": [
        "Develop AI-Powered Distributed Architectures using .NET Aspire and GenAI",
        "Cloud-Native Distributed Architectures",
        ".NET Aspire Framework for Cloud-Native Distributed App Development",
        "Building EShop Distributed Microservices Architecture with .NET Aspire",
        "Messaging and Event-Driven Patterns with RabbitMQ",
        "Develop Catalog Microservice with PostgreSQL orchestrate in .NET Aspire",
        "Develop Basket Microservice with Redis orchestrate in .NET Aspire",
        "Sync Communications between Catalog-Basket w/ .NET Aspire Service Discovery",
        "Async Communications w/ RabbitMQ & MassTransit orchestrate .NET Aspire",
        "Secure Basket with Keycloak Authentication orchestrate .NET Aspire",
        "Develop Client Blazor Web Application",
        "Azure Container Apps",
        "Deploy EShop Aspire project to Azure Container Apps",
        ".NET GenAI with Microsoft Extensions AI and Semantic Kernel"
      ],
      "course_content": {},
      "requirements": [
        "Basics of C# and Programming"
      ],
      "description": "In this course, we are designing and implementing cloud-native distributed architectures using the .NET Aspire framework, while integrating Generative AI capabilities (GenAI) through Microsoft-Extensions-AI and Semantic Kernel.\nFrom microservices fundamentals to Advanced AI-driven features, you’ll gain hands-on experience architecting an E-Shop system where Catalog and Basket microservices work in tandem using PostgreSQL, Redis and RabbitMQ for messaging.\nYou’ll also discover how to incorporate intelligent features such as Q&A chatbots and semantic product search, powered by Ollama’s Llama/Phi models and RAG (Retrieval-Augmented Generation) flows.\nThroughout the course, you’ll learn:\nCloud-Native Distributed Architecture Essentials\nDive into microservices architecture, containerization, and the Twelve-Factor App methodology.\nLearn best practices for resiliency, scalability, and DevOps workflows.\n.NET Aspire Framework for Cloud-Native Development\nUnderstand how .NET Aspire simplifies building distributed services.\nSet up new projects, manage configurations, and apply cross-cutting concerns like logging and observability.\nCatalog Microservice with PostgreSQL and RabbitMQ:\nStore and manage product data in PostgreSQL.\nPublish integration events (e.g., ProductPriceChanged) to RabbitMQ.\nBasket Microservice with Redis:\nMaintain fast, session-based data using Redis.\nSyncs with the Catalog service when adding items to the basket.\nConsume integration events from RabbitMQ to keep basket prices in sync.\nSecure basket endpoints with Keycloak using JWT Bearer token.\nMessaging and Event-Driven Patterns with RabbitMQ\nExplore publish/subscribe patterns, exchanges, routing keys, and best practices for handling retries.\nImplement robust error handling and ensure reliable event-driven communication across microservices.\nDeployment, Security, and Observability\nContainerize microservices and deploy them to Azure Container Apps using the azd up and azd down commands.\nFollow .NET Aspire’s project structure for streamlined CI/CD workflows.\nIntroduction to .NET GenAI with Semantic Kernel\nDiscover the foundations of Generative AI and large language models (LLMs).\nIntegrate Microsoft-Extensions-AI and Semantic Kernel to power advanced AI functionalities.\nOllama, Llama, and Phi Models Setup\nInstall and configure Ollama locally or via containers.\nRun Llama or Phi models for inference directly within your .NET microservices.\nGenAI Use Cases in E-Shop\nCustomer Support Q&A Chatbot:\nLeverage semantic kernel and prompt engineering for context-aware Q&A.\nIntegrate Ollama to deliver real-time responses to users’ questions.\nProduct Semantic Search with Vector Store (RAG Flow):\nGenerate embeddings for product data using Ollama’s All-MiniLM model.\nUse a vector database to retrieve, rank, and deliver personalized product recommendations.\nBy the end of this course, you’ll have built a fully functional, AI-powered E-Shop platform that demonstrates the power of event-driven microservices coupled with .NET Aspire and GenAI",
      "target_audience": [
        "All Levels of .NET Developers who is curious about .NET Aspire and GenAI"
      ]
    },
    {
      "title": "Next.js Web Dev: Master this Powerful React Framework",
      "url": "https://www.udemy.com/course/nextjs-web-dev-master-this-powerful-react-framework/",
      "bio": "Next.js Mastery: Harnessing React, Advanced Routing, Seamless API Integration, and Web Optimization Strategies",
      "objectives": [
        "Understand Next JS fundamentals, including its core features and advantages.",
        "Successfully set up and install Next JS for web development projects.",
        "Create dynamic and interactive web applications using advanced routing techniques.",
        "Implement various routing strategies, including nested routing, for user-friendly navigation.",
        "Proficiently integrate APIs on both the client and server sides.",
        "Fetch and display data from external sources seamlessly.",
        "Differentiate between client and server components for effective data handling.",
        "Optimize web applications for improved performance."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Next.js",
          "What You Will Learn in This Course?",
          "Key Features",
          "Downsides of React.js",
          "Course Materials"
        ],
        "Setup and Installation": [
          "VS Code Installation",
          "Node.js and Npm Installation",
          "Installation of Next.js",
          "Folder Structure"
        ],
        "Next.js Basics": [
          "Types of Exports",
          "Components",
          "Client Components",
          "Rendering"
        ],
        "React Hooks": [
          "useState",
          "useEffect",
          "useMemo"
        ],
        "Routing in Next.js": [
          "Routing",
          "Exercise",
          "Link Routing",
          "Nested Routing"
        ],
        "Layout.js": [
          "Common Layouts vs Conditional Layouts",
          "Basic Layout",
          "Conditional Layout",
          "Middleware"
        ],
        "API Integration": [
          "Client-Side APIs",
          "Server-Side APIs",
          "Client Components vs Server Components"
        ],
        "Optimization and Styling in Next.js": [
          "Image Optimization",
          "SEO",
          "Basic Styling"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "BONUS Section - Don't Miss Out": [
          "BONUS Section - Don't Miss Out"
        ]
      },
      "requirements": [
        "HTML and CSS Basics: Understanding the basics of HTML and CSS can be helpful for structuring web content and applying basic styling.",
        "Basic Knowledge of JavaScript: Familiarity with JavaScript fundamentals will be beneficial, as Next JS is built on top of React, which relies on JavaScript.",
        "Experience with React (Optional): While not mandatory, having some prior experience with React can expedite your understanding of Next JS concepts, as Next JS is a React framework.",
        "Text Editor or Integrated Development Environment (IDE): Having a code editor like Visual Studio Code (VS Code) or a similar IDE will be essential for writing and running code throughout the course.",
        "A Desire to Learn: Enthusiasm for web development and a willingness to explore new concepts are the most important prerequisites. The course is structured to accommodate learners of various skill levels, including beginners."
      ],
      "description": "Welcome to our \"Next.js Mastery\" course where you'll journey into the world of Next.js and React to become a proficient developer. In this comprehensive course, we'll cover a range of essential topics to equip you with the skills and knowledge needed to create top-tier web applications.\nOur journey begins with an introduction to Next.js, highlighting its key features and advantages. We'll set clear expectations for what you'll learn in the course and prepare you for the hands-on experience ahead. Dive into practical aspects, including setup and installation, Next.js basics, and mastering React Hooks like useState, useEffect, and useMemo.\nRouting in Next.js is a vital skill, and we'll cover it extensively. Explore creating dynamic and user-friendly navigation systems, from basic routing to nested routing. Additionally, we'll understand layout design, the differences between common and conditional layouts, and how to effectively implement middleware.\nOur course places a strong emphasis on API integration, encompassing both client-side and server-side APIs. Gain hands-on experience working with data from external sources and grasp the nuances of client and server components. We'll also delve into optimization, covering image optimization, SEO best practices, and fundamental styling techniques to enhance user experiences.\nBy the course's end, you'll emerge as a Next.js expert, capable of building efficient, optimized, and feature-rich web applications. Whether you're a beginner or an experienced developer, our \"Next.js Mastery\" course will empower you to create web applications that excel in the digital landscape.\nJoin us on this exciting journey and unlock the full potential of Next.js and React! Enroll today to elevate your web development skills to new heights.",
      "target_audience": [
        "Web Developers and Programmers: Experienced web developers looking to expand their skill set and adopt Next JS for building modern web applications will find this course instrumental in mastering Next JS and integrating it with their existing knowledge.",
        "React Developers: If you're already familiar with React and want to explore Next JS to enhance your web development capabilities, this course is ideal for you. It will guide you in leveraging Next JS effectively within your React projects.",
        "Front-End Developers: Front-end developers seeking to gain expertise in modern web development practices, including advanced routing, API integration, and optimization, will benefit significantly from this course.",
        "Aspiring Full-Stack Developers: If you aspire to become a full-stack developer, this course will provide you with essential skills for server-side rendering, API integration, and building complete web applications.",
        "Students and Beginners: This course is beginner-friendly and serves as an excellent starting point for those who are new to web development. We provide clear explanations and step-by-step guidance to ensure learners with limited experience can follow along and succeed.",
        "Tech Enthusiasts: If you have a passion for technology and a desire to explore the world of web development, this course is open to anyone with an eagerness to learn. It's an opportunity to embark on a fulfilling journey into web application development.",
        "Career Changers: Individuals looking to transition into a web development career will find this course a valuable starting point. It equips you with skills sought after in the industry."
      ]
    },
    {
      "title": "Docker for absolute beginners: Learn Docker from scratch",
      "url": "https://www.udemy.com/course/docker-for-absolute-beginners-learn-docker-from-scratch/",
      "bio": "Docker Practical hand on course for beginners with examples",
      "objectives": [
        "Install Docker",
        "Create Containers",
        "Create images",
        "Link containers",
        "Start and stop containers",
        "Delete containers",
        "Delete local images",
        "Check container processes",
        "Create image with dockerfile"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use a PC",
        "You should be able to use the internet"
      ],
      "description": "Docker is the next step beyond virtualization. A Docker image contains everything it needs to run, independent of the Linux server on which it lives: a copy of the operating system, a database, code, configuration files, dependencies, and so on. Images can also be packaged and shared with other Docker admins. A lot of companies large and small are using Docker to run complex systems with millions of users and hundreds of containers.This course is an absolute beginners introduction to Docker. You will the versy basics of Docker and some of it's concepts. You will learn the basics of Docker, including its containers, Dockerfiles (or base images), and capabilities for networking,  how to build your own containers and images and also how to push your images onto Docker Hub remote repository and learn how to create and link containers so they can share data between them.\nTopics include:\nInstalling Oracle Virtualbox\nInstalling Docker on Ubuntu\nCreating containers\nCreating images\nDeleting containers\nDeleting images\nStarting and stopping containers\nLinking containers\nUnderstanding the Docker flow\nCreating  a Repository on Docker Hub\nRunning processes in containers\nManaging, networking, and linking containers\nIntroduction to Docker Hub\nPushing images to Docker Hub\nWorking with Docker images and registries\nBuilding Dockerfiles",
      "target_audience": [
        "Absolute beginners to Docker",
        "Beginner programmers"
      ]
    },
    {
      "title": "Filament Admin Panel Course for Laravel (Updated for V3)",
      "url": "https://www.udemy.com/course/laravel-filament-admin-panel-course/",
      "bio": "Learn to build Admin Panels using FilamentPHP practically by building two projects along the way.",
      "objectives": [
        "Build powerful, fast, user-friendly Admin Panels using FilamentPHP",
        "Define Custom Bulk Actions in Filament DataTables",
        "Apply Custom Filters To Filament Table",
        "Work on Dashboard Customization",
        "Work with Roles and Permissions (Without using any external package)",
        "Build a Support Ticket System with proper Roles/Permissions/Authorization Implementation",
        "Build dependent dropdowns in FilamentPHP",
        "Work with BelongToMany Relationships using RelationManagers and Customize them accordingly",
        "And many more..."
      ],
      "course_content": {},
      "requirements": [
        "Beginner Level knowledge of PHP/Laravel is required"
      ],
      "description": "In this course, we will practically learn FilamentPHP (an amazing Admin Panel Builder) by building two projects along the way.\n\n\nIn the first project, we will be building a Simple student management System where we will be building three resources, Classes, Sections, and Student management.\nAlong the way, we will be learning the following topics:\n\n\nDefine Custom Bulk Action to Export Students Data.\nApplying Custom Filters To Filter Students Data.\nDisplay Total Data Count/Relationship Data.\nHow to Show Badge, Change Icons, Group Navigation Items.\nWork on Dashboard Customization.\nWork on Validations.\nLearn how to automatically generate a slug by hooking into the updated lifecycle hook of Livewire.\nLearn how to Implement dependent drop-downs (to display section data depending on the Class selected)\nDefine custom action to Import Student data from an Excel File using Laravel Excel.\nWe'll also look at implementing custom guards in Laravel, and define a separate panel for the Student Dashboard\nLearn how to Change the default Login Behaviour in Filament\nWe'll also look at handling PDF generation and QR Code Generation in FilamentPHP-based Admin Panels\n\n\n\n\nAs a Second Project, we will be building a Support Ticket System, and along the way, we will be learning the following topics:\n\n\nWorking with BelongToMany Relationships using RelationManagers.\nHow to Customize RelationManagers as per our needs and add/remove Actions.\nWorking with Badges and customizing their Colour based on a condition.\nHow to filter data (using Scopes and Query Builder) before it gets displayed in the Filament form.\nLearn how to Customize the data before saving it to the Database.\n\n\nIn the third Section, we will work with Authorizations and implement Roles and Permissions without any external packages. We will be learning the following:\n\n\nImplement Custom Roles and Permissions functionality.\nImplement Authorization/Policies throughout the project based on the existing Roles/Permissions.\n\n\nIn the fourth section, we will be fixing some miscellaneous issues and adding a few features to the Support Ticket System:\n\n\nChanging filament's default notification title\nChanging simple resource CRUDs to Modal Resources.\nMaking the Sidebar collapsible and changing the default width\nDisplaying different badge colors based on certain conditions.\nWork on widgets, like header widgets\nWork with charts and we'll also look at implementing the filter functionality\nImplement SMS sending flow (we won't send the actual SMS, but we'll mock the flow)\nLearn how to implement Database Notifications in FilamentPHP.\nLearn how to handle media in FilamentPHP-based Admin Panels\nLearn how to Implement Custom Action to update User's Password.\nHow to hide form fields on certain pages.\n\n\nIn the Fifth Section, we'll add some more features to the Students Management System:\n\n\nLearn how to Implement the Students Import feature using Custom Actions and Laravel Excel Package.\nLearn how to define Custom Guards and implement a separate panel/dashboard for the Students.\n\n\nIn the Sixth Section, we'll be Building a Custom Filament Widget from Scratch, and we will be learning the following topics:\n\n\nIn this section, we'll build a metric widget (similar to Laravel Nova) and MetricsOverviewWidget (wrapper for metric widgets, just like StatsOverviewWidget)\nAfter building the widgets, we'll look at their use cases with proper examples and Implementations.\nWe'll also learn how to define artisan commands to automate the creation of these custom widgets.\n\n\nIn the Seventh Section of this Course, we'll look at how to use Filament Packages and Features outside of the Admin Panel, with the following topics covered:\nLearn how to display data using Filament Tables outside of the Filament Admin Panel.\nLearn how to use Filament Forms along with other form-related features on the front end.\nLearn about Full-Page Components in Livewire.\nLearn how to define a Custom Login Functionality Using the FIlament Forms package, we'll also make use of the existing Login Class that comes with Filament.\n\n\nIn the eighth section, we'll look at how to Implement Auth-related features like User Registration, Email Verification, Profile Section, and Password Resets\n\n\nIn the Ninth Section, we'll be Implementing Real-time Database Notifications in FilamentPHP using Laravel Reverb.\n\n\nFinally, we'll deploy the project to Production and make the necessary changes.",
      "target_audience": [
        "Students who want to Build powerful, fast, user-friendly Admin Panels using FilamentPHP",
        "Laravel Learners interested in Learning FilamentPHP"
      ]
    },
    {
      "title": "Complete guide to building a GraphQL API",
      "url": "https://www.udemy.com/course/complete-guide-to-building-a-graphql-api/",
      "bio": "Everything you need to know to build your own GraphQL API",
      "objectives": [
        "Understand how GraphQL works",
        "Build your own GraphQL API with JavaScript",
        "Learn how to install and use Graphiql"
      ],
      "course_content": {
        "Introduction": [
          "Course overview",
          "What is GraphQL?",
          "GraphQL vs REST API's"
        ],
        "Core concepts": [
          "Introduction",
          "Fields & Arguments",
          "Aliases & Fragments",
          "Variables",
          "Queries & Mutations"
        ],
        "Preparations before building an API": [
          "Introduction",
          "Creating the project structure",
          "Installing dependencies",
          "Configuring Babel",
          "Dummy database"
        ],
        "Building the API": [
          "Introduction",
          "Implementing \"Object types\"",
          "Implementing \"Queries\"",
          "Implementing the \"Input Object Types\"",
          "Implementing \"Mutations\"",
          "Combining everything into a Schema",
          "Testing our API"
        ],
        "GraphiQL": [
          "What is GraphiQL?",
          "Installing & configuring GraphiQL",
          "Using GraphiQL"
        ],
        "Conclusion, wrap-up & downloads": [
          "Conclusion & next steps",
          "Source code & useful resources"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript and Nodejs"
      ],
      "description": "GraphQL is a query language developed by Facebook to power their mobile applications. It's a replacement for traditional REST API's and is far more flexible and faster. With GraphQL you can query multiple resources with a single request to the server. Making it ideal for web applications and mobile apps.\nIt's very easy to write your own GraphQL API. It's compatible with any database and can even work across different database engines if required. Start now and have your GraphQL API running in no time!",
      "target_audience": [
        "Anyone who wants to learn how to build a GraphQL API",
        "Anyone who is tired of inflexible, inefficient REST API's"
      ]
    },
    {
      "title": "Practical Transformation Using XSLT and XPath (5-hour free preview; 24 hours total)",
      "url": "https://www.udemy.com/course/practical-transformation-using-xslt-and-xpath/",
      "bio": "5-day class for transforming XML covers every element, every attribute and every function of W3C XSLT/XPath 1.0 and 2.0.",
      "objectives": [
        "XSLT",
        "XPath",
        "XML"
      ],
      "course_content": {
        "Introduction/Overview of the entire class": [
          "Introduction/Overview of the entire class",
          "(A4 page size) PDF Handouts",
          "(US letter page size) PDF Handouts"
        ],
        "Module 1 - The context of XSL Transformations and the XML Path Language (3 free lectures)": [
          "Module 1 - Introduction - The context of XSL Transformations and the XML Path Language",
          "Module 1 - Lesson 1 - The XML family of Recommendations",
          "Module 1 - Lesson 2 - Transformation data flows"
        ],
        "Module 2 - Getting started with XSLT and XPath (4 free lectures)": [
          "Module 2 - Introduction - Getting started with XSLT and XPath",
          "Module 2 - Lesson 1 - Stylesheet examples",
          "Module 2 - Lesson 2 - Syntax basics - stylesheets, templates, instructions",
          "Exercise ZIP packages (please note all downloadable resources for this lecture)",
          "Module 2 - Lesson 3 - Exercise Setup",
          "Module 2 - Lesson 4 - More stylesheet examples",
          "Module 2 - Lesson 5 - Stylesheet processing exercise"
        ],
        "Module 3 - XPath data model (1 free lecture)": [
          "Module 3 - Introduction - XPath data model",
          "Module 3 - Lesson 1 - XPath data model components",
          "Module 3 - Lesson 2 - Exercise - XPath data model",
          "Module 3 - Lesson 3 - XPath expressions and patterns",
          "Module 3 - Lesson 4 - Exercise - XPath location expressions"
        ],
        "Module 4 - XSLT processing model (1 free lecture)": [
          "Module 4 - Introduction - XSLT processing model",
          "Module 4 - Lesson 1 - XSLT processing model",
          "Module 4 - Lesson 2 - Sample XSLT stylesheets",
          "Module 4 - Lesson 3 - Exercise - Source tree traversal"
        ],
        "Module 5 - The XSLT transformation environment (1 free lecture)": [
          "Lesson 5 - Introduction - The XSLT transformation environment",
          "Module 5 - Lesson 1 - Stylesheet basics",
          "Module 5 - Lesson 2 - Input, output and environment",
          "Module 5 - Lesson 3 - Exercise - HTML"
        ],
        "Module 6 - XSLT stylesheet management (1 free lecture)": [
          "Module 6 - Introduction - XSLT stylesheet management",
          "Module 6 - Lesson 1 - Modularizing the logical structure of stylesheets",
          "Module 6 - Lesson 2 - Exercise - Using called templates and user-defined functions",
          "Module 6 - Lesson 3 - Modularizing the physical structure of stylesheets",
          "Module 6 - Lesson 4 - Exercise - Stylesheet management"
        ],
        "Module 7 - XSLT process control and result tree instructions (2 free lectures)": [
          "Module 7 - Introduction - XSLT process control and result tree instructions",
          "Module 7 - Lesson 1 - Conditional control instructions",
          "Module 7 - Lesson 2 - Numbering instructions",
          "Module 7 - Lesson 3 - Result tree node instantiation",
          "Module 7 - Lesson 4 - Exercise - Number representation"
        ],
        "Module 8 - XPath and XSLT expressions and advanced techniques (1 free lecture)": [
          "Module 8 - Introduction - XPath and XSLT expressions and advanced techniques",
          "Module 8 - Lesson 1 - Expression function usage",
          "Module 8 - Lesson 2 - Number expressions",
          "Module 8 - Lesson 3 - Exercise - Using number functions",
          "Module 8 - Lesson 4 - String expressions",
          "Module 8 - Lesson 5 - Exercise - Using string functions",
          "Module 8 - Lesson 6 - Boolean expressions",
          "Module 8 - Lesson 7 - Node-set expressions",
          "Module 8 - Lesson 8 - Exercise - Building a table of contents",
          "Module 8 - Lesson 9 - Sequence expressions",
          "Module 8 - Lesson 10 - Date and time expressions",
          "Module 8 - Lesson 11 - Exercise - Using date functions",
          "Module 8 - Lesson 12 - Miscellaneous expressions",
          "Module 8 - Lesson 13 - Content and document referencing techniques",
          "Module 8 - Lesson 14 - Exercise - Advanced XSLT features"
        ],
        "Module 9 - Sorting and grouping (1 free lecture)": [
          "Module 9 - Introduction - Sorting and grouping",
          "Module 9 - Lesson 1 - Sorting source nodes to make result nodes",
          "Module 9 - Lesson 2 - Grouping constructs found in information",
          "Module 9 - Lesson 3 - Exercise - Sorting"
        ]
      },
      "requirements": [
        "Understand basic XML"
      ],
      "description": "\"Practical Transformation Using XSLT and XPath\" is over 24 hours of instructor lecture, with hands-on exercises and solutions, of an intensive five-day training class.  The introduction/overview is free, the first two modules are free, the introduction of every other module is free, one additional lecture is free and the annexes are free: a total of 311 minutes of free preview content!\nThis class overviews the entire scope of the Extensible Stylesheet Language Transformations (XSLT) 1.0 , XSLT 2.0 , the XML Path Language (XPath) 1.0  and XPath 2.0  W3C Recommendations, used for transforming structured information (e.g. XML to XML, XML to HTML, XML to XSL-FO, XML to text, etc.). The objectives of the course are to understand the role and utility of the Recommendations, to overview all the constructs of the Recommendations (this five-day delivery covers every element, every attribute, and every function), to design and develop XSLT scripts, and to efficiently navigate the available documentation and resources. The relationship of XSLT to XSL is explained, though details of XSL Formatting Object semantics are not included.",
      "target_audience": [
        "Beginner XML user",
        "Intermediate XML user",
        "Advanced XML user"
      ]
    },
    {
      "title": "HTML5 and CSS3 - Essential Training",
      "url": "https://www.udemy.com/course/html5-and-css3-essential-training/",
      "bio": "Learn HTML5 / CSS3 and how to incorporate markup to build standards-compliant and forward-thinking responsive web sites.",
      "objectives": [
        "Know what powers the Web including HTML, CSS, and JavaScript.",
        "Use free web development tools like Aptana Studio, Atom, Brackets, and more.",
        "Understand every HTML5 tag and their associated attributes.",
        "Work with tables, images, links, and lists.",
        "Work with advanced structuring techniques using HTML5 and CSS3.",
        "Use grid layouts like 960.gs to aide in designing a site.",
        "Work with HTML5 section elements and CSS3 to structure a web site.",
        "Format web pages using CSS3.",
        "Create responsive layouts using CSS3 Media Queries.",
        "Use responsive frameworks like Skeleton to enhance workflow.",
        "Make a navigation menu responsive.",
        "Build HTML5 forms and use native validation to handle data input.",
        "Incorporate video and audio using HTML5 tags.",
        "Work with Geolocation, Drag and Drop, Web Storage, and more.",
        "Incorporate Web Fonts and work with the Canvas drawing API."
      ],
      "course_content": {
        "Introduction to Web Development and Associated Technologies": [
          "Introduction",
          "Web Architecture",
          "The Core 3: HTML",
          "The Core 3: CSS",
          "The Core 3: JavaScript",
          "The World Wide Web Consortium (W3C)",
          "Semantic HTML5",
          "Basic Structure of a Web Page",
          "HTML Syntax",
          "Browsers to Download",
          "Creating a Project, File Naming, and Folder Structuring",
          "Using Brackets to Author Web Pages",
          "Creating your First Web Page",
          "Validating your First Web Page"
        ],
        "Semantic Structure and Inline Tags": [
          "Introduction",
          "The Structure of a Tag",
          "Global Attributes",
          "Section Elements",
          "Section Tags",
          "Heading Tags",
          "Grouping Tags",
          "Inline Tags (Part 1)",
          "Inline Tags (Part 2)",
          "Inline Tags (Part 3)",
          "Lab 1",
          "Quiz 1"
        ],
        "Tables, Lists, and Images": [
          "Introduction",
          "Working with Tables (Part 1)",
          "Working with Tables (Part 2)",
          "Lab 2",
          "Working with Lists",
          "Lab 3",
          "Working with Images",
          "Lab 4",
          "Quiz 2"
        ],
        "Working with Links": [
          "Introduction",
          "Working with Links",
          "Attributes for Links",
          "Creating a Link for an Image / Text",
          "Creating a Link to an Email Address or Phone Number",
          "Creating a Link to a Placeholder",
          "Working with Image Maps",
          "Quiz 3"
        ],
        "Cascading Style Sheets Part 1 - Introduction": [
          "Introduction",
          "What is CSS?",
          "Why Should I Use CSS?",
          "How CSS Works",
          "Defining Styles",
          "Selector Types (CSS Level 1)",
          "Selector Types (CSS Level 2)",
          "Lab 5: CSS Level 1 Selectors",
          "Lab 6: CSS Level 2 Selectors",
          "Selector Types (CSS Level 3)",
          "Lab 7: CSS Level 3 Selectors",
          "Common Font Properties",
          "Common Background Properties",
          "Common Block Properties",
          "Common Box Properties",
          "Common Border Properties",
          "Common List Properties",
          "Common Positioning Properties",
          "Lab 8: Formatting the Vecta Corp. Site"
        ],
        "Cascading Style Sheets Part 2 - Grid Systems, Layout, and Positioning": [
          "Introduction",
          "Grid Systems: What is a Grid?",
          "Grid Systems: History of Grids in Design",
          "Grid Systems: Why Should I Use Grids?",
          "Grid Systems: How Grid Systems Work in Web Design",
          "Lab 9: The 960 Grid System",
          "How to Float and Clear Elements",
          "How to Use CSS3 to Create Text Columns",
          "How to Position Elements Using Positioning Properties",
          "Lab 10: Structuring the Vecta Corp. Site using a Traditional Approach",
          "Quiz 4"
        ],
        "Cascading Style Sheets Part 3 - Advanced CSS Concepts": [
          "Introduction",
          "Valuable Third-Party Tools",
          "Working with Web Fonts: The @font-face selector",
          "Working with Web Fonts: Google Web Fonts",
          "Sprites",
          "Navigation Menus",
          "Accordions",
          "Transitions",
          "Transforms",
          "Animations",
          "Filters",
          "Lab 11: An Advanced Web Page Layout",
          "Lab 12: Making the Web Page Backward Compatible",
          "Lab 13: Designing a Style Sheet for Printers",
          "Quiz 5"
        ],
        "Cascading Style Sheets Part 4 - Flex Box Layout": [
          "Introduction",
          "What is the Flex Box layout?",
          "Layout Terminology",
          "Layout Properties",
          "Your First Flex Box Layout",
          "Setting Flex Item Dimensions",
          "Aligning Flex Items Horizontally",
          "Aligning Flex Items Vertically",
          "Wrapping and Aligning Wrapped Items",
          "Changing the Order of Flex Items",
          "Lab 14: Creating a Web Page Using Flex Box Layout"
        ],
        "Cascading Style Sheets Part 5 - Grid Layout": [
          "Introduction",
          "Grid Terminology",
          "Grid Container and Grid Items",
          "Your First Grid Layout: Using Template Areas",
          "How to Align Grid Items and Grid Tracks",
          "Grid Layouts Using Numbered Lines",
          "Grid Layouts Using Named Lines",
          "Grid Layouts Using the 12 Column Grid Concept",
          "Lab 15: Creating a Web Page with Grid Layout",
          "Lab 16: Creating an Advanced Grid Layout",
          "Lab 17: Creating a Grid Layout with a Call To Action",
          "Lab 18: Creating a Grid Layout with a Fixed Sidebar",
          "Lab 19: Creating a Grid Layout with a Headline and Gallery",
          "Lab 20: Creating a Grid Layout with Featured Products"
        ],
        "Responsive Web Design": [
          "Introduction",
          "Responsive Web Design",
          "UX of the Modern Web",
          "Layouts",
          "Type",
          "Images",
          "Tables",
          "Flat Design",
          "Media Queries",
          "Testing",
          "Resources",
          "Lab 21: A Responsive Website Design (Part 1)",
          "Lab 22: A Responsive Website Design (Part 2)"
        ]
      },
      "requirements": [
        "Download a HTML5/CSS3 editor such as Aptana Studio, Atom, Brackets, Notepad++, Sublime Text, etc.",
        "Exercise files and support PowerPoint presentations are provided as additional resources at the beginning of each lecture."
      ],
      "description": "In HTML5 and CSS3 - Essential Training, professor, author, trainer, and web developer Zak Ruvalcaba delves into HTML5 and demonstrates how to incorporate the language’s markup to build standards-compliant and forward-thinking responsive web pages and applications. You learn the basics as well as advanced topics in HTML5 and CSS3 such as the reason for semantic markup, how to build traditional page layouts using DIV tags and CSS, how to build forward-thinking semantic layouts using HTML5 section elements and CSS3, how to make a page responsive and backward compatible, and how to work with HTML5 forms, offline support, geolocation, audio and video, graphics with JavaScript and canvas, communication APIs, web storage, and more.",
      "target_audience": [
        "This course is meant for beginning to intermediate web developers looking to expand their existing HTML/CSS skills to HTML5 and CSS3."
      ]
    },
    {
      "title": "Full introduction to Views in Drupal 8",
      "url": "https://www.udemy.com/course/full-introduction-to-views-in-drupal-8/",
      "bio": "unleash the full power of Views in Drupal 8",
      "objectives": [
        "understand waht the Views module does",
        "be able to create lists of any content that you have in your Drupal 8 system",
        "be able to change any of the admin content pages - by adding filters, fields sorts etc.",
        "be comfortable with the Views user interface",
        "create new pages with content",
        "create blocks with content"
      ],
      "course_content": {
        "Welcome": [
          "A bit about me and the course"
        ],
        "Preparing our working environment": [
          "Installing Acquia dev desktop",
          "Installing Drupal"
        ],
        "Basic Views": [
          "What is views ?",
          "Default views, lets check some existing Views",
          "A word about Drupal entities",
          "Quick overView interface tour",
          "Types of views (quick now, detailed later)",
          "Formats",
          "Views format Table with fields",
          "Views format HTML list with fields",
          "Views format Content / Display Modes",
          "Views format Grid with fields/content",
          "Views format Unformatted with fields/content",
          "Filters",
          "Filters exposed",
          "Filters AND and OR",
          "Sorting",
          "Header and Footer elements",
          "Pagers"
        ],
        "Advanced Views": [
          "Access",
          "Contextual Filters",
          "Relationships",
          "Exposed form improve",
          "Ajax",
          "Caching",
          "Some tips for Drupal Views housekeeping"
        ],
        "Examples with the main View types": [
          "Page view",
          "Block view - creating and placing on the page",
          "Attachment view",
          "Entity Reference - show just some nodes as reference"
        ],
        "Great Custom Modules": [
          "Infinite scroll",
          "Better exposed filters",
          "Slider"
        ],
        "Example project: A front page with contents": [
          "Preparing our project",
          "Project slider",
          "Bottom articles",
          "Archive page"
        ],
        "Final section": [
          "How you may continue to improve"
        ]
      },
      "requirements": [
        "You should be able to use a computer at a basic level."
      ],
      "description": "With Views are built all the lists of content in the default Drupal 8 installation. The front page list, the admin content overview page, all the taxonomy term, user lists etc.\nKnowing how to use Views means not only that you can add bells and whistles to those pages, to make them look as you wish but also that you can create complete new pages, blocks with content, featured articles lists and much more.\nIn Drupal 8 the Views module is already in core. That means that it is no longer just the coolest contributed Drupal module, but is part of the whole must-know-how of Drupal.\nIn this course you will learn how to use the Views in order to edit the existing lists inside of a Drupal web site and also how to present new lists with your content.\nWe will go thought all the main tools and settings of the Views interface and I will show you as much examples as possible right away.",
      "target_audience": [
        "newbies to Drupal 8 that want to learn Views",
        "Drupal 7 users that want to catch up with the Views module in Drupal 8",
        "people that have a Drupal 8 website and want to be able to change all the lists on their page",
        "owners of Drupal 8 website that want to create new lists of content",
        "new people to Drupal 8 that want to learn how to modify the lists of content on their websites"
      ]
    },
    {
      "title": "Professional Blog+CMS Development With Laravel 5",
      "url": "https://www.udemy.com/course/build-blog-cms-with-laravel-5/",
      "bio": "Build Professional Blog+CMS with Laravel 5.x and take your Laravel skills to the next level",
      "objectives": [
        "Develop your creative and technical skills to build modern, scalable, secure and feature-rich website , start your own business, or launch a new career",
        "Develop web project more effective and efficient",
        "Able to transorm any templates on the internet to dynamic website using Laravel for your business"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Which laravel version we'll be used?",
          "Install local development environment",
          "Install Composer and Laravel Installer"
        ],
        "Frontend Blog": [
          "Install New Laravel Project",
          "Setup Application Layout",
          "Create Posts table using Database Migration",
          "Insert Posts table with dummy data using Database Seed & Faker",
          "Display all posts - Part 1",
          "Display all posts - Part 2",
          "Display all posts - Part 3",
          "Display all posts - Part 4",
          "Show the Blog Post/Post Detail",
          "Make the Blog Post SEO Friendly",
          "Enable Markdown Support",
          "Create Post Categories",
          "Filter the posts by category - Part 1",
          "Filter the posts by category - Part 2",
          "Filter the posts by author - Part 1",
          "Filter the posts by author - Part 2",
          "Display popular posts - Part 1",
          "Display popular posts - Part 2",
          "Display popular posts - Part 3",
          "Custom 404 Error Page"
        ],
        "Backend Blog": [
          "Setup Backend Layout - Part 1 (Login Form)",
          "Setup Backend Layout - Part 2 (Dashboard)",
          "Setup Backend Layout - Part 3 (Misc)",
          "Backend Blog Index - Part 1",
          "Backend Blog Index - Part 2",
          "Backend Blog Index - Part 3",
          "Add New Post - Part 1",
          "Add New Post - Part 2",
          "Upload Post Image",
          "Create Post Image Thumbnail",
          "Form enhancement - Part 1",
          "Form enhancement - Part 2",
          "Form enhancement - Part 3",
          "Edit Existing Post",
          "Delete Existing Post - Part 1",
          "Delete Existing Post - Part 2",
          "Delete Existing Post - Part 3",
          "Manage Post Categories - Part 1",
          "Manage Post Categories - Part 2",
          "Custom Forbidden Response Exception (If you're using Laravel 5.4)",
          "Manage Users - Part 1",
          "Manage Users - Part 2",
          "Failed login with newly created user issue"
        ],
        "Access Control List (ACL)": [
          "ACL Introduction",
          "Install & configure the ACL package",
          "Attach the roles to users",
          "Attach the permissions to roles",
          "Securing the backend with ACL - Part 1 (Protect using middleware)",
          "Securing the backend with ACL - Part 2 (Protect in the client side/presentation)",
          "Add additional link to show only the current user's posts",
          "Add Role Selection in the manage users form",
          "Add Slug and Bio Column in the manage users form",
          "Show Edit Profile Form"
        ],
        "Frontend Blog - Part 2": [
          "Search Form - Part 1",
          "Search Form - Part 2",
          "Post Tags - Part 1",
          "Post Tags - Part 2",
          "Post Archives - Part 1",
          "Post Archives - Part 2",
          "Post Comments - Part 1 (Generate new table and Model)",
          "Post Comments - Part 2 (Fill the table with fake comments)",
          "Post Comments - Part 3 (Display the comments in the blog post)",
          "Post Comments - Part 4 (Paginate the comments)",
          "Post Comments - Part 5 (Comment Form)",
          "Post Comments - Part 6 (Validate new comment)"
        ],
        "Backend Blog - Part 2": [
          "Adding Tags Widget - Part 1",
          "Adding Tags Widget - Part 2",
          "Adding Tags Management Module"
        ],
        "Upgrade The Application to Laravel 5.6": [
          "Introduction",
          "Upgrade to Laravel 5.6 - Part 1 of 3",
          "Upgrade to Laravel 5.6 - Part 2 of 3",
          "Upgrade to Laravel 5.6 - Part 3 of 3"
        ],
        "Deployment": [
          "Preparation",
          "Migrate to Postgres database",
          "Initialize Data on Production",
          "Deploy Laravel Application to Heroku - Part 1 of 3",
          "Deploy Laravel Application to Heroku - Part 2 of 3",
          "Deploy Laravel Application to Heroku - Part 3 of 3"
        ],
        "Deploy Laravel App in DigitalOcean Virtual Private Server": [
          "Introduction",
          "Setting up Server",
          "Installing Nginx, MySql & PHP",
          "Setting up Firewall",
          "Create a new special user for our deployment",
          "Setting up Nginx",
          "Setting up MySQL",
          "Setting up SSH Keys",
          "Deploying Laravel App in our Server",
          "Deploying new changes",
          "Add domain to our server",
          "Setting up SSL on our server"
        ]
      },
      "requirements": [
        "You should be familiar with the basics of HTML, PHP as well as JavaScript",
        "You should have basic understanding of Laravel"
      ],
      "description": "If you are ready to take your web development skills to the next level, then you have come to the right place!\nThis course using a project driven approach to learn Laravel. In this course we'll learn Laravel PHP Framework from Scratch by building Real World application - Wordpress CMS clone Application.\nThis course contains practical and valuable information that you can use to build any Web applications.\nBy the end of this course you will be able to build Production Laravel Project from scratch and will make you confidence to build complex web application.\nTo give you a better sense of what you'll learn if you stick with me through this course, here's the rough breakdown.\nIn the firs lesson You'll learn:\n\nHow to setup local development environtment\nHow to install composer and laravel installer.\nIn the second lesson you'll learn:\n\nHow to setup frontend layout\nDisplay all published posts with pagination\nShow the blog post with SEO friendly url and show the author's bio and author's posts as well.\nDisplay posts based on selected author\nDisplay the categories with the number of posts in every category\nFilter the posts based on the selected category\nFilter the posts based on the selected author\nHow to display popular posts\nHow to custom 404 error page.\nIn third lesson, you'll learn:\n\nHow to setup AdminLTE as backend layout,\nHow to manage the post such as add a new post, upload and resize the post image, update the existing post, move the post to the trash, restore the post from the trash or delete the post permanently, filtering the post such as display current user's posts, display entire posts, display the posts on the trash, display the draft post, published post and schedule posts.\nHow to manage categories - create the category, validate category, update the category and delete the category.\nHow to Manage users to make application multi user support\nIn the fourth lesson you'll learn about Access Control List or ACL to restrict the authenticated users to perform various actions based on the roles or permissions they have. This will make our application more secure and prevent particular pages from being access by unauthorized users.\nIn the fifth lesson you'll learn:\nHow to add search form feature\nHow to add post tags feature\nHow to add post archives\nHow to handle comments to particular post\nIn the sixth lesson You'll learn how to create beautiful tags widget\nIn the seventh lesson You'll learn how to upgrade Your Laravel application to Laravel version 5.6.\nIn the eighth lesson You'll learn how to deploy Your Laravel application so that it can be accessible in the Internet.\nIn this course you'll also learn how to utilize Laravel artisan generator, you'll learn about database migration, database seeder, eloquent relationship, route model binding and much more.\n\n\nUpdate Histories:\nNovember 2019 - Added new lesson about Tags Management Module\nJuly 2019 - Added new section about how to upgrade Laravel Application to Digital Ocean Virtual Private Server\nApril 2018 - Added new section about how to upgrade Application to Laravel 5.6\nMarch 2018 - Added new section about deploy Laravel application to Heroku",
      "target_audience": [
        "This course is meant for students already familiar with the basics of HTML, PHP especially Laravel and want to level up their development skills by building real life project",
        "This course is suits for you when you've already taken one of the many basic Laravel courses here on Udemy"
      ]
    },
    {
      "title": "The complete Angular Course , Typescript included.",
      "url": "https://www.udemy.com/course/the-complete-angular-course-typescript-included/",
      "bio": "Take you App to the next level using Angular and Typescript.",
      "objectives": [
        "How to create we application using Angular",
        "Understand and use Typescript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "IDE",
          "Installing Node js",
          "IMPORTANT UPDATE !!"
        ],
        "Introduction to angular": [
          "What is Angular ?",
          "Creating a project",
          "What is Typescript ?",
          "Understanding the file structure",
          "Creating an App.Module",
          "Creating an App.Component",
          "Css and Test files",
          "Creating components with the CLI",
          "Using Components",
          "Using Components...continued",
          "More on CSS"
        ],
        "Communicating": [
          "Introduction",
          "Interpolation",
          "Property binding",
          "Catching events",
          "Form events",
          "Easy form events ( NGMODEL )",
          "Input, from parent to child",
          "Emmiting, child to parent",
          "Passing data on init",
          "Local reference",
          "Viewchild",
          "NgContent and ContentChild"
        ],
        "Lifecycle Hoks": [
          "Introduction",
          "OnInit and Onchanges",
          "DoCheck, ACI, ACC",
          "AVI, AVC . and Destroy"
        ],
        "Directives": [
          "Introduction",
          "NgIf and Hidden",
          "NgStyle",
          "NgClass",
          "NgFor",
          "NgSwitch",
          "Creating a custom attr directive",
          "Th renderer",
          "Hostlistener",
          "Hostbinding",
          "Passing arguments",
          "Custom structural directives",
          "A carousel directive [ optional ]",
          "Finishing the directive [ optional ]",
          "Debugging with Augury"
        ],
        "Practice project - DecideApp": [
          "Installation",
          "Sharing values",
          "One - Getting the question",
          "One - Handle errors",
          "Two component",
          "Doing the three component",
          "Adding custom answers",
          "Finishing the custom",
          "Deploying"
        ],
        "Services": [
          "Introduction",
          "Creating the template",
          "Finishing the template",
          "Creating a service",
          "Multiple components",
          "Redoing the app with a service",
          "Injecting and root"
        ],
        "Observables": [
          "Introduction",
          "Using an observables",
          "Using an observables 2",
          "Unsubscribing",
          "An angular example",
          "Other RxJS features"
        ],
        "Routes": [
          "Introduccion",
          "Installing routes",
          "Navigating routes",
          "Using params",
          "Querystrings",
          "Switching nav classes",
          "Nested routes and wildcards",
          "Passing data to routes",
          "Protecting routes with Can Activate",
          "Can activate child",
          "Can deactivate",
          "CLI routes generate"
        ],
        "Working with forms": [
          "Introduction",
          "TD-Connecting form",
          "TD-Validation",
          "TD-Binding",
          "TD-Creating groups",
          "TD-Setting and patching",
          "TD-Reset forms",
          "R-Making it reactive",
          "R-Validation",
          "R-Displaying errors",
          "R-Grouping",
          "R-Radios and form arrays",
          "R-Form observables",
          "R-The form builder"
        ]
      },
      "requirements": [
        "A bit of Javascript , CSS and HTML"
      ],
      "description": "Do you want to take your application to the next level with Angular ?. This is the course for you.\nWe will start from the very beginning, from \"I don't even know how to install it….and why should I?“ to actually understand how Angular works and make a real application.\n\nYou will learn all the logic and practice behind Angular in different modules and as we advance through the course we will be increasing the difficulty.\n\nAngular was built on top of Typescript.\nDon’t know how to use Typescript ?\nDon’t worry, there is an optional full Typescript course at the end where you will learn all the basics of Typescript so you don't miss out on anything.\n\n\nTo sum everything up, you will learn in this course:\nWe will learn how to install Angular app.\nUnderstand how use the most basic tools to create a simple App.\nHandle mor complex code with services and directives.\nApply authentication and route preventing.\nHow to use typescript with or without Angular.\nUse external libraries like RXJS, Angular Material and NGX Bootstrap.\nCreate two practice projects and also an authentication template..\n\n\nWhat about the instructor experience ?\nWell I've been around for 10 years now, built lots of applications for small projects and big companies like Citi, Fox, Disney and a lot more.\nToday I work as a developer for a major company developing applications in React or Angular mostly, but I like to teach in my spare time.\nHow about the target audience?\nThis course is for almost everyone, a little bit of Javascript is required.We will use ES6 but you can learn as we go.\nIf you want to take your coding to the next level, this is the course for you.",
      "target_audience": [
        "Anyone who wants to learn. Beginner to advanced"
      ]
    },
    {
      "title": "Fundamentals of Web Components",
      "url": "https://www.udemy.com/course/fundamentals-of-web-components/",
      "bio": "Learn web components api of custom elements, shadow dom and templates",
      "objectives": [
        "Web Components API",
        "Create your own custom elements, use them in html like the built in elements",
        "Use templates to create the structure of your elements",
        "Use shadow dom to encapsulate your element",
        "Use slot for composing your custom elements with different elements",
        "Create custom events"
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with basic dom manipulation with javascript"
      ],
      "description": "Web applications are evolving and frameworks like react, vue, angular, svelte and others, are bringing functionalities like reusable components to make it easier to create huge applications. With web components we can create our custom html elements, just like we do in the other popular web frameworks. But the difference is, web components api is web standard, which means it's coming with the modern browsers. So without requiring additional build process or any other tooling, we can run our code as it is in the browser. All we need is just vanilla javascript knowledge.\nWeb components has three main APIs. Custom Elements, Shadow DOM and HTML Templates. And in this course we will learn and practice all.\nWe will learn how we can built custom elements, how we can extend built-in elements. Also we will practice the \"template\" to make the rendering of our custom element more efficiently.\nWe are going to practice the Shadow Dom to see it's role in web components. We will see how we can compose our custom element with the markup provided externally. And also we will see our styling options of our elements.\nAnd finally, we will practice, how the events are changed in shadow dom. We will see the issues and we will introduce our solutions.\nIf you want to build re usable web components without relying onto a third party library, if you want to build applications based on the web standards, then web components is the answer.",
      "target_audience": [
        "Developers who wants to build web clients with web standards.",
        "Developers who wants to build applications without needing 3rd party library and framework."
      ]
    },
    {
      "title": "PHP with MySQL: Build Hotel Booking Management System",
      "url": "https://www.udemy.com/course/php-with-mysql-2023-build-hotel-booking-management-system/",
      "bio": "Learn to Build Amazing Hotel Booking Management System with Admin Panel in PHP MySQL Bootstrap PayPal and PDO",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Build a full authentication system",
        "Learn to hash and dehash passwords with PHP",
        "Learn to use advanced PDO queries",
        "Learn to implement Paypal Payment professionally in you web app",
        "Handle validation like a pro and prevent user to sensitive date",
        "Learn to fix bugs along the way of developing this web app",
        "Create an amazing admin panel",
        "Learn file uploading and how to fully update and delete it",
        "Work with some SQL complex queries",
        "Write professional maintainable code",
        "Learn how the business logic of a booking system works under the hood"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Getting Started with the Project": [
          "Design and Code for the Project",
          "Creating Config File",
          "Preparing Project Structure"
        ],
        "Creating Authentication system": [
          "Creating Register Page",
          "Logging Users in",
          "Sessions and Validating"
        ],
        "Diving Deeper and Getting Main Features Done": [
          "Working with Hotels",
          "Working with Rooms pt.1",
          "Adding Utilities for Every Room"
        ],
        "Doing Bookings, Paying with PayPal and More": [
          "Performing Bookings",
          "Paying with Paypal pt.1",
          "Paying with Paypal pt.2",
          "Finishing Payment",
          "Creating 404 Page and Validating",
          "Working with Rooms pt.2",
          "Showing Bookings for every User",
          "Fixing and Cleaning up"
        ],
        "Getting Started with Admin Panel": [
          "Design and Code for Admin Panel",
          "Logging Admins in",
          "Starting Sessions and Validating"
        ],
        "Working with Admins": [
          "Showing Admins",
          "Creating Admins",
          "Working with Index Page"
        ],
        "Working with Hotels": [
          "Showing Hotels",
          "Creating Hotels",
          "Updating Hotels Status",
          "Updating Hotels",
          "Deleting Hotels with Images"
        ],
        "Working with Rooms": [
          "Showing Rooms",
          "Creating Rooms",
          "Updating Rooms Status",
          "Deleting Rooms with Images"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and PDO",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Are you as fired up as I am? Do you want to build something awesome? Something amazing? Are you a web developer who wants a cool job? If so, then this course is for you. In this course, you will learn how to build a complete hotel booking system from the ground up in a few hours. I already made sure that every part of this course is concise, elegant, and informative, so don't miss out on this cool opportunity. I also included the files needed in different parts of the course for you to follow along with me step by step.\n\n\nHere is what you are going to learn, first of all, I am going to introduce you to the tools that we are going to be using in this course. And then we are going to build a full authentication system from scratch. While building this system I am going to introduce you to hashing and dehashing passwords. And then, we are going to build general and cool features inside our own app. It's going to be mainly on selecting and placing data. After this part, we are going to move to the next crucial part of our app and that's the booking part which is going to be challenging but I am going to guide you through it. it's mainly validations and inserting data. and then we are going to move to pay with PayPal which is also kind of problematic but I am going to help you. The next move is taking care of general things about our website like fixing bugs, grabbing bookings for every user, adding a 404 page, validating, and so on. We are going to move on to the second part of our app and which is the admin panel. And it's going to be huge. We will take care of a lot of things. We will manage bookings, admins, hotels, rooms and so much more. Of course, this is not all. There is a lot to talk about but this is just a simple description of our system. So if you like this, Get the course now. I will see you inside",
      "target_audience": [
        "People who learned PHP and MySQL and want to build a full project",
        "Developers who want to build their CVs",
        "Aspiring programmers who want to level up their development skills with new techniques"
      ]
    },
    {
      "title": "Laravel Payment and Subscription Processing: PayPal & Stripe",
      "url": "https://www.udemy.com/course/laravel-payment-processing-integrating-the-best-gateways-paypal-stripe/",
      "bio": "Use API calls to integrate PayPal and Stripe in Laravel. Start receiving online payments from a Laravel project.",
      "objectives": [
        "Integrate the best payment platforms in your projects",
        "Start receiving payments, integrating the platforms you need",
        "Integrate PayPal into your projects, to receive payments online",
        "Adapt your projects to use different payment platforms",
        "Integrate Stripe to receive payments in your projects",
        "Provide multiple payment alternatives to your users (platforms and currencies)",
        "Handle payments in different currencies across multiple payment platforms"
      ],
      "course_content": {},
      "requirements": [
        "Have PHP installed and functional in your system (at least PHP 7.3 is recommended)",
        "Have composer installed and functional in your development environment",
        "Recommended, PHP basic skills",
        "Everything else I will teach you how to implement it"
      ],
      "description": "Learn to integrate multiple payment platforms at once in the same Laravel project, using as an example the most popular payment gateways (PayPal and Stripe).\nDo you want to start receiving payments and subscriptions on your existing projects?\nMe too. And in this course, I teach you how to achieve it without getting crazy in the process, using Laravel.\n\n\nProcess payments with Laravel and the best payment platforms.\nLet's be honest; we currently don't have time to go line by line reading and understanding the documentation to test and fail with each platform. For that reason, I guide you along with the direct pat in this course to integrate the current times'  best online payment and e-commerce platforms. EVERYTHING in the same Laravel project.\nReceive recurring payments (subscriptions)\nDon't stop there. You will also learn how to process subscriptions for your users and receive recurring payments on any of your Laravel projects.\n\n\nBillions of dollars have been raised online only in recent months. With this course, you can open up to your customers and users and start receiving online payments using the best PHP framework, Laravel, along with the best online payment gateways. As a use-case, integrate PayPal and Stripe (considering SCA) in Laravel (and more coming).\n\n\nWhy choose me?\nBecause I'm always there to enhance your learning :)\nMore than 18,000 students appreciate the effectiveness of my answers to all their questions and the more than 4,000 positive ratings prove it.\nBecause I not only teach you Laravel but how to solve real-world problems with Laravel.\n\n\nWhat's good about Laravel?\nLaravel is the most popular framework for PHP. With Laravel, you can develop high complexity PHP applications quickly, which includes payment processing using the most popular payment gateways. During the course, you will see the enormous facilities that Laravel offers when implementing complex tasks. Of course, we are using the latest version of Laravel.\n\n\nWhy PayPal and Stripe?\nIt's not just about PayPal and Stripe. In the course, everything will be perfectly adaptable to any additional platform that is added in the future or those you need to use.\nInitially, PayPal and Stripe are used with Laravel because both, PayPal and Stripe, are the most popular online payment gateways globally and meet a huge portion of online businesses' needs.\n\n\nWhat about SCA?\nDo not worry! I cover you on this too. SCA (Strong Customer Authentication) is a very important security requirement for some regions and it is a good idea to take that into consideration for your projects. In this course, I show you the details about SCA, Stripe, and Laravel. That way, your Laravel project will accomplish the SCA directives while using Stripe.\n\n\nSo join now to integrate the best payment platforms with Laravel and you will get this:\n\nIntegrate and receive payments with PayPal, directly using the PayPal API in Laravel\nIntegrate and process payments with Stripe, directly using the Stripe API from Laravel\nIntegrate Stripe in Laravel, considering SCA\nAccomplish SCA (Strong Customer Authentication) when using Stripe in your Laravel project\nBuild a payment platform that integrates MULTIPLE payment gateways at once in a single Laravel project.\nIt includes the essential steps to process payments from Laravel, not only with PayPal and Stripe but with any other platform.\n\n\nWhy take this course?\nI prepared this course to explore the essentials when processing payments with Laravel, using the most important payment platforms.\nThe goal?\nSimplify the process to integrate multiple platforms with essential steps. So, regardless of the platforms to use, the process would be quite similar and simple to carry out.\nExploring the different parts where developers \"suffer\" most by integrating payment platforms into any project. Especially when several are required at once.\nYou will want to complete this course since the first class.\n\n\nIs this course for you?\nThis course is probably for anyone (expert or not). This course is for you if you meet any of these conditions:\nYou are a beginner or want to start using payment gateways to process payments on your online projects.\nYou are a Laravel or PHP developer and you want to integrate the best payment platforms in your projects.\nYou are an entrepreneur, and you want to start creating your online services and receive money with them.\nYou are an expert in web development and you need to integrate multiple payment platforms in the same project, without spending time understanding official articles and documents.\n\n\nThe benefits you will get\nThe freedom to implement solutions once and let your products and services sell online without having to be there every time.\nThe feeling of professional growth and building real and incredible projects.\nBuild any Laravel project that can collect payments online automatically, using the most important payment platforms.\n\n\nSo that said all this...\nDo not wait for more. The world moves quickly, and billions of dollars are raised completely online.\nOffering multiple payment options online will help your users and simplify their lives.\nPress the button and enroll today.\nJoin me throughout this process to integrate the best payment platforms available.",
      "target_audience": [
        "Developers with websites that need to integrate different payment platforms",
        "Those who need to use the best online payment platforms",
        "Those who need to integrate PayPal as a payment platform in their projects",
        "Those looking to integrate Stripe as a payment platform",
        "Those who want to use Laravel to process payments",
        "Curious web developers regarding the usage of multiple payment platforms with Laravel"
      ]
    },
    {
      "title": "jQuery UI in Action: Build 13 jQuery UI Projects",
      "url": "https://www.udemy.com/course/jquery-ui-practical-build-jquery-ui-projects/",
      "bio": "jQuery UI (User Interface) Hands-On Course!! jQuery UI Examples, Quizzes & jQuery UI Projects. jQuery UI from Scratch",
      "objectives": [
        "Learn jQuery UI from scratch",
        "Understand jQuery UI interactions and widgets in detail",
        "Enhance jQuery and jQuery UI knowledge",
        "Develop 13 real-world jQuery UI projects from scratch",
        "Become a jQuery UI expert"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML, CSS, JavaScript and jQuery would be helpful"
      ],
      "description": "*** 23.5 hours of content***\n***Quizzes, Exercises, Hands-On Practices and 13 Unique Projects are Included***\n\n---------------------------------------------------------------------------------------------------------------------------\nDo you want to develop highly interactive and rich applications easily? jQuery UI is a collection of widgets, interactions, effects and themes built on the top of jQuery library.\n\"jQuery UI in Action: Build 13 jQuery UI Projects\" is a 100% hands-on jQuery UI course with lots of code activities, quizzes, exercises and projects. By completing this course, you will be confident enough to develop jQuery UI projects on your own from scratch.\nIn this course, you learn what jQuery UI is, how to setup the jQuery UI development environment and how to use different interactions, widgets and effects. Different interactions discussed in this course are draggable, droppable, resizable, selectable and sortable. You will also understand different widgets such as accordion, tabs, autocomplete, dialog, datepicker, progressbar, slider, menu, tooltip, spinner, button, checkboxradio, select menu and control group in detail.\nThe last section is the Let's Develop section where you will develop 13 jQuery UI projects from scratch. This will help you really boost your confidence in applying your jQuery UI knowledge to develop real-world jQuery UI projects. The projects developed as part of this course are:\nFruits Matching Game\nPassword Strength Meter\nVideo Speed Controller\nTo Do List Application\nTrain Enquiry System\nOnline Sticky Notes\nWord Hunt\nColor Picker\nPrice Range Filter\nImage Magnifier\nJigsaw Puzzle\nWeek Picker\nPeriodic Table Arranging\nSo join this wonderful jQuery UI course and have a great time learning jQuery UI.",
      "target_audience": [
        "People who want to learn jQuery UI from scratch",
        "People who want to enhance their jQuery and jQuery UI knowledge",
        "Developers who want to develop highly interactive applications easily"
      ]
    },
    {
      "title": "Django 3 - Python Backend Web Development For Beginner",
      "url": "https://www.udemy.com/course/django-python-web-development-for-beginner/",
      "bio": "In This Course You Will Learn Django From Beginning To End By Create 3 Different Most Interactive Projects.",
      "objectives": [
        "Setup and Installation Python",
        "Setup and Installation Django",
        "Create Dynamic Website",
        "Learn Django Views, URLs, Templates",
        "Create Project and Applications",
        "Django Models",
        "Django Forms",
        "Template Filter and Inheritance",
        "CRUD using MySql",
        "User Authentication",
        "Class Based View",
        "Develop A Blog Project with Django",
        "Develop A Social Media Project with Django",
        "Develop A Ecommerce Project with Django"
      ],
      "course_content": {},
      "requirements": [
        "A computer with an internet connection and download privileges",
        "No previous programming experience necessary",
        "Access to a personal computer or equivalent system",
        "Internet access to download the necessary software"
      ],
      "description": "Welcome to the Python and Django Backend Development for Beginner Course! In this course, we cover everything you need to know to build a website using Python, Django, and many more web technologies!\nWhether you want to change career paths, expand your current skill set, start your own entrepreneurial business, become a consultant, or just want to learn, this is the course for you!\nWe will teach you the latest technologies for building great web applications with Python 3.8.3 and Django 3! But we don't just teach that, we also teach How you can create three different Django Project from Scratch. This course can be your one-stop-shop for everything you need! It will serve as a useful reference for many of your questions as you begin your journey in becoming a web developer!\n\n\nWhat is the Best Part of this Course?\nYou will learn Django Basic Fundamentals\nCreate a Dynamic Website with HTML Template\nCreate CRUD Using MySql\nLearn Django User Authentication\nDevelop A Blog Project with Django\nDevelop A Social Media Project with Django\nDevelop A Ecommerce Project with Django\n\n\nThis course you will not just learn you actually doing it. Learn and apply this on live project with me.\nSound Great right?\n---------------------------------------------------------------------------------------------------------------------\nClick the \"Enroll Now\" button at the top right now!\n\nI am excited to see you on the course!\nSincerely,\nKazi Ariyan",
      "target_audience": [
        "Complete Beginners",
        "Professionals looking to bridge gaps in their knowledge",
        "Python Developers looking to get into Web Development",
        "Beginner Python developers that want to build a practical, real world project using the Django framework"
      ]
    },
    {
      "title": "Build a Real Time web app in node.js , Angular.js, mongoDB",
      "url": "https://www.udemy.com/course/realtime-meanstack/",
      "bio": "Learn how to build a Real-Time web application with only Javascript!",
      "objectives": [
        "Creating their own real-time web application",
        "Will be able to pursue their dream on building something",
        "Bootstrap their idea and turn it into a reality"
      ],
      "course_content": {
        "Welcome": [
          "Why take this course?",
          "What is Mean Stack?",
          "What tools do yo need"
        ],
        "Project: Creating a UserStory app (server side part)": [
          "Start your first project",
          "Setting up",
          "Your first Hello World",
          "Create a database",
          "Your first Schema: Creating User Schema",
          "Password hashing",
          "Create a custom method",
          "Your first API: Signup API",
          "Get all users API",
          "Login API",
          "Create a custom middleware",
          "Test the middleware",
          "Your second Schema: Creating Story Schema",
          "Post method in Home API",
          "Decoded user's information"
        ],
        "Project: Creating a UserStory app (frontend part)": [
          "Setup the front-end files",
          "First Angular Service (part 1): Creating Auth Factory",
          "First Angular Service (part 2): Creating AuthToken Factory",
          "First Angular Service (part 3): Creating AuthInterceptor Factory",
          "First Angular Controller: Creating Main Controller for Login and Logout",
          "Routing System",
          "Login Html",
          "Signup Frontend",
          "Testing Login and Logout",
          "Fix sIgnup bugs",
          "Creating Story service and controller (part 1)",
          "Creating Story service and controller (part 2)",
          "Adding real-time capability",
          "Getting All Stories",
          "Creating a new directive: reverse.js",
          "Deploy our app to heroku"
        ]
      },
      "requirements": [
        "HTML/CSS",
        "Some Javascript knowledge is useful"
      ],
      "description": null,
      "target_audience": [
        "Passionate newbie (Never written a single line of code but passionate)",
        "Aspiring developer",
        "Developer who wants to learn a new skill",
        "Student",
        "Entrepreneur"
      ]
    },
    {
      "title": "Build a React & Redux App w/ CircleCI CI/CD, AWS & Terraform",
      "url": "https://www.udemy.com/course/build-a-modern-react-and-redux-app-with-circleci-cicd-aws/",
      "bio": "Build & deploy a React app using Redux, Github, CircleCI, S3, Cloudfront, Terraform, Heroku, Slack, Docker & Sentry.",
      "objectives": [
        "Build an amazing React app",
        "Setup Continuous Integration/Delivery Pipeline",
        "Naviagate AWS Management Console",
        "Create AWS Services using Terraform",
        "Integrate Terraform into CircleCI Pipeline",
        "Use AWS S3 and CloudFront for Storing and Distributing React Apps",
        "Create Docker Images for Your React app",
        "Integrate Slack in the CI/CD Pipeline",
        "Setup Online Dev, Staging and Production Environments",
        "Setup Sentry for Monitoring",
        "Create Custom React Components",
        "Use CSS Grid",
        "Setup Automatic Deployment",
        "Integrate GitHub with CircleCI",
        "Create, Use and Merge Feature Branches"
      ],
      "course_content": {},
      "requirements": [
        "HTML + CSS + Javascript is required (at least the fundamentals)",
        "No prior React knowledge is required"
      ],
      "description": "React is one of the most popular library's for building client apps with HTML, CSS and JavaScript. If you want to establish yourself as a front-end or full-stack developer, you need to learn React.\nThis course follows a hands-on approach, which means the whole course is structured around building a web application and the different concepts will be explained detailedly as they are introduced.\nWhat's this course about?\nThis course is about React, Redux, Hooks, Continous Intergration/Delivery, AWS S3, CloudFront, Slack, GitHub, Docker, Heroku. Dive deep into these topics by building a real application and have your React app live on the web.\nYou will learn how to create AWS resources from the management console and also how to create those same resources using terraform.\nWhat Technology You'll Use\nBecause we are building a React app with Continuous integration/delivery and automatic deployment, we'll use a variety of technologies.\nReact\nRedux\nAWS S3 and CloudFront\nTerraform\nSlack\nDocker\nGithub\nSentry for Monitoring\nCircleCI for CI/CD\nHeroku\nNot familiar with some of these? No problem! This course will guide you on how to setup and use these technologies in your apps.\nWhat You'll Be Able to Do\nBy the time you complete this course, you'll be able\nBuild a complete React App\nSetup CI/CD Pipeline\nSetup Automatic Deployment\nCreate AWS Resources using Terraform\nIntegrate Terraform into CircleCI Pipeline\nIntegrate Technologies like Slack, Sentry and Docker\nSetup Multiple Online Environments (Dev, Staging and Production)\nUse GitHub w/ CircleCI\nUse Feature Branches on GitHub\nUse CSS Grid\nCreate Custom React Components\nSetup Redux\nWrite CI/CD Configurations\nSetup CI/CD Deployment to Heroku\nAnd More...",
      "target_audience": [
        "Suitable for both beginners and intermediate React developers",
        "Anyone who wants to learn React by building a real world application",
        "Anyone who wants to learn how to setup a continuous integration/delivery pipeline",
        "Developers that wants to learn how to use AWS S3 and CloudFront services",
        "Aspiring DevOps",
        "Anyone who is interested in getting an understanding of how CI/CD works"
      ]
    },
    {
      "title": "MERN Stack: All You Need to Know with Practical Project",
      "url": "https://www.udemy.com/course/all-you-need-to-know-mern-stack-with-practical-project/",
      "bio": "Learn MERN stack by building real-world applications with Node, Express, MongoDB, React and integrating RESTful APIs",
      "objectives": [
        "Master the entire modern full-stack: Node, Express, React, MongoDB and Mongoose",
        "Learn about the Nodejs built-in core library",
        "Becoming proficient in Expressjs, one of the most widely used web frameworks for Nodejs",
        "Create Express web servers and APIs",
        "Becoming proficient in developing RESTful APIs with Nodejs",
        "Store data with Mongoose and MongoDB",
        "Build a full-stack application using Nodejs and EJS template engine",
        "Becoming proficient in integrating RESTful APIs with React",
        "Master the entire modern frontend stack: React, APIs integration, React hooks",
        "Learn to React beautiful mechanisms such as Context API, Props drilling, Render props",
        "Authentication, Authorization including password reset",
        "Avoid useless coding - Learn what's important"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "What is Nodejs",
          "How Nodejs Work",
          "Install Nodejs on Windows OS",
          "Install Nodejs on Mac OS",
          "Install Nodejs on Linux OS"
        ],
        "Module and Global Object": [
          "How to Run Nodejs Code",
          "Global Object",
          "What is Module",
          "How to Do Export and Import in Nodejs",
          "What is Module Wrapper Function"
        ],
        "Core Module in Nodejs": [
          "Core Module Introduction",
          "Path Module",
          "OS Module",
          "FS Module Part 1",
          "FS Module Part 2",
          "Event Module Part 1",
          "Event Module Part 2",
          "HTTP Module"
        ],
        "Steam and Buffer Introduction": [
          "Steam and Buffer Introduction",
          "Read Stream",
          "Write Stream",
          "Stream with Pipe"
        ],
        "Express Framework": [
          "Express Framework Introduction",
          "Basic Project Setup",
          "First Express Server",
          "Nodemon Module",
          "Request Method",
          "Take a Look About Postman",
          "Parse Incoming Request Body",
          "Params Object",
          "Query String",
          "Sub Route",
          "Cookies",
          "Request Object Introduction",
          "Request Object Part 2",
          "Response Object Introduction",
          "Response Method",
          "View Engine and Html Response",
          "Response Format",
          "Http Response Status Code",
          "What is Middleware",
          "How to Use Middleware",
          "Error Handling Middleware",
          "Error Handling"
        ],
        "MongoDb and Mongoose": [
          "Database Introduction",
          "MongoDB Install on Windows OS",
          "MongoDB Install on Mac OS",
          "MongoDB Install on Linux OS",
          "Establish Database Connection",
          "Add Single Document to Database",
          "Add Multiple Document to Database",
          "Find Single Document from Database",
          "Find Multiple Document from Database",
          "Update Single Document",
          "Update Multiple Document",
          "Delete Single Document",
          "Delete Multiple Document",
          "What is ODM",
          "Database Connection Using Mongoose",
          "Schema Define",
          "Add Single Document Using Mongoose",
          "Add Multiple Document Using Mongoose",
          "Update Single Document Using Mongoose",
          "Update Multiple Document Using Mongoose",
          "Find Single Document Using Mongoose",
          "Find Multiple Document Using Mongoose",
          "Delete Single Document Using Mongoose",
          "Delete Multiple Document Using Mongoose",
          "Take a Look MongoDB Compass GUI Tool"
        ],
        "Project Todo": [
          "Project Overview",
          "Initialize Project",
          "Add Project to GitHub",
          "Connect with Database",
          "List Todo Page",
          "Add Todo Page",
          "Update Todo Page",
          "Delete Todo Page",
          "Adding External CSS File",
          "All Link Clickable",
          "EJS Partials Concept",
          "Page Dynamic Title",
          "Todo Model Schema",
          "Add Todo",
          "List Todo",
          "Date Format",
          "Code Refactoring Part 1",
          "Code Refactoring Part 2",
          "Code Refactoring Part 3",
          "Code Refactoring Part 4",
          "Code Refactoring Part 5",
          "Environment Variable",
          "Test After Refactor",
          "Update Todo",
          "Delete Todo",
          "Test App",
          "Clone This Repository"
        ],
        "Project Blog RESTful APIs": [
          "Project Requirement Analysis",
          "What is RESTful API",
          "Initial Project Setup",
          "Connect Database",
          "Cloud Database",
          "User Model",
          "Signup Route",
          "Test Signup Route",
          "Test Database in the Browser",
          "Morgan Module",
          "Response Format",
          "Error Handling Middleware",
          "Test Error Handle Middleware",
          "Not Found Route",
          "Signup Validation Part 1",
          "Signup Validation Part 2",
          "Signup Validation Part 3",
          "Hashed Password",
          "Sign In Route",
          "Generate Token",
          "Email Verification Code",
          "Send Verification Email",
          "Add Environment Variable",
          "User Verification",
          "Send Forgot Password Code",
          "Recover Password",
          "Authenticate Middleware",
          "Change Password",
          "Update Profile",
          "Category Model",
          "Add Category",
          "Is Admin Middleware",
          "Update Category",
          "Delete Category",
          "Search Categories",
          "Categories Pagination",
          "Detail Category",
          "File Module Introduction",
          "Upload File",
          "Change Filename",
          "File Filter",
          "Upload Multiple File",
          "AWS S3 Bucket Setup",
          "File Model",
          "Multer Memory Storage",
          "Upload File to S3",
          "Add File to Database",
          "Signed URL",
          "Delete File",
          "Update Profile Picture",
          "Current User",
          "Post Model",
          "Add Post",
          "Update Post",
          "Delete Post",
          "Post List",
          "Detail Post",
          "Filter Post by Category"
        ],
        "React Introduction": [
          "What is React",
          "What is Virtual DOM",
          "Setup a React Project"
        ],
        "JSX Element and Rendering JSX Element": [
          "What is JSX Element",
          "JSX More Detail",
          "Rendering JSX Element"
        ]
      },
      "requirements": [
        "Basic of JavaScript",
        "General knowledge of how the web works is recommended but not a must-have",
        "Absolutely no understanding of MERN stack or full-stack development is required, I take you from beginner to intermediate developer"
      ],
      "description": "Do you want to build fast and powerful full-stack applications with JavaScript? Would you like to become a more complete and in-demand developer?\nThen MENR stack is the hottest technology for you to learn right now, and you came to the right place to do it!\nThis is a project based course where we build an extensive, in-depth full-stack application. We will start from scratch and end up with a professional project. We will dive deep into Node, Express, MongoDB, Mongoose, React, React hooks, integrating RESTful APIs . Here is some of what you will learn in this course and project:\n\n\nHow Nodejs work\nNodejs built-in core library\nStream and Buffer\nExpress Framework\nRouting & Controller\nExpress middleware\nCustom Error Handling\nEJS template engine\nUpload file to S3 bucket\nSending Email\nAuthentication With JWT\nPassword hashing\nMongoDB database\nMongoDB Atlas & Compass\nMongoose ODM\nModels & Relationships\nMulti user role\nAuthentication and Authorization\nAdvanced Query (pagination, filter, searching etc)\nReact core functionality\nHow React works\nVirtual DOM\nRendering JSX element\nComponent, State & Props\nReact Form\nControlled form vs Uncontrolled form\nRendering list & key\nProps drilling\nContext API\nRender Props\nReact hooks\nCustom hooks\nHandling CSS with React\nReact routing\nAuthentication and Protected route\nRecover password by email\nVerify user email\nIntegrating RESTful APIs\nHTTP Essentials\nPostman Client\nWeb development is evolving, in the past, server-side rendering handled all views and templates, but with the emergence of frontend frameworks like React, Angular, and Vue, projects are now divided into backend and frontend components. The backend manages database interactions and serves JSON, while the frontend fetches data and creates the user interface. This course focuses on the entire full-stack aspect, enabling you to construct robust APIs and integrating RESTful APIs with React project.\nOur curriculum goes beyond typical Nodejs, Express and React tutorials, as we cover advanced topics like authentication, multi-user roles, permissions, password reset mechanisms, sending email integration, integrating RESTful APIs with React and many more. By the end of this course, you'll have a deep understanding of what it takes to be a proficient full-stack engineer.",
      "target_audience": [
        "Everyone who's interested in building modern, scalable and high-performing web applications",
        "Programmers who want to learn the most in demand skills of a full-stack developer",
        "Any full-stack developer who wants to learn MERN stack"
      ]
    },
    {
      "title": "SharePoint 2013 Administration",
      "url": "https://www.udemy.com/course/sharepoint-2013-administration/",
      "bio": "SharePoint 2013 Administration - Complete Bundle for Beginners and Experts",
      "objectives": [
        "Understand IIS Web Server and hosting websites in IIS.",
        "Understand the role of SharePoint in developing Corporate Portal.",
        "Creating Sites and Subsites.",
        "Installing and configuring all the required software’s products to work with Microsoft SharePoint 2013.",
        "Creation of SharePoint Web Applications, Site Collections, Sites and Sub sites.",
        "Managing permissions for Active directory users in database based on Claims authentication.",
        "Provisioning Service Applications and binding with Web Applications.",
        "Managing large amount of data and documents using Content management features like document sets, document IDs and content organizer.",
        "Configuring and manage user profile service and activate various socializing features of SharePoint 2013.",
        "Implementing Search Features in the site.",
        "Learning PowerShell and writing scripts to performing important admin related operations.",
        "Plan and execute Backup and Restore."
      ],
      "course_content": {},
      "requirements": [
        "Though we cover from ground up, basic knowledge of networking will be added advantage."
      ],
      "description": "Gone are those days when we used to manage all information in a corporate manually. For every type of requirement, we have different solutions but integrating them is a big nuisance. SharePoint integrated intranet, document management, content management is an excellent way to find secure place to store, organize, share, and access information from almost any device. To get started using the extraordinary features of SharePoint all an associate in the organization need is just a browser like IE or Firefox or Chrome. SharePoint is a pre-developed ASP.NET application by Microsoft for managing day to day activities of a corporate portal.\nIn each of the online SharePoint 2013 Admin training modules our trainer Mr. Sandeep Soni has showcased minute details of each and every feature. For every topic, demonstrations are included explaining all the steps to achieve the required output. The course material bundled with the training program can be of excellent use to the users as a quick refresher of the topics before attending the interviews.",
      "target_audience": [
        "Beginners, system administrators and who looks to step their career in Microsoft SharePoint Administration."
      ]
    },
    {
      "title": "AWS and Linode: The Ultimate Guide to Cloud Computing [IaaS]",
      "url": "https://www.udemy.com/course/aws-and-linode-the-ultimate-guide-to-cloud-computing-iaas/",
      "bio": "Cloud Computing | Linux Foundations | Apache | NGINX | DBMS | Firewalls | Load Balancers | AWS IAM | Amazon EC2",
      "objectives": [
        "Cloud Computing Fundamentals",
        "Cloud Computing Service Models (IaaS, PaaS, SaaS)",
        "Cloud Server Deployment and Configuration on Linode",
        "Foundations of Linux",
        "LAMP Stack Installation and Configuration",
        "Foundations of Server Security (Network & Hosted Firewalls, UFW)",
        "Scaling Instances Vertically and Horizontally",
        "Cloud Deployment Models (Private, Public, Community)",
        "AWS Foundations (Account Registration and Basic Security)",
        "AWS IAM Foundations (Users, Groups, Policies, Roles, Access Keys)",
        "Amazon Elastic Compute Cloud (EC2) Foundations",
        "IAM Roles for EC2",
        "Secure Socket Shell (SSH) for Instance Administration"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills",
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "This course offers a comprehensive guide for aspiring cloud practitioners interested in learning the complete lifecycle of virtual instance deployment and configuration on popular cloud platforms like AWS and Linode. The course starts right from the basics, where we explore various cloud computing service models. This includes infrastructure as a service, platform as a service, and software as a service. From there students gain hands-on experience with creating and administering remote virtual instances, complete with Ubuntu, Apache, MariaDB, and PHP. Students will learn the difference between popular web servers like Apache and NGINX, along with a detailed overview of various database management systems. This includes both SQL and NoSQL databases, in addition to database transaction standards such as ACID and CAP Theorem. In addition to a theoretical deep dive, the course demonstrates how to install, configure, and secure LAMP stack on Ubuntu for hosting dynamic, database driven web apps. We offer a detailed segment on server security, where students will configure both software and network firewalls for their instance using strict firewall policies, UFW and custom SSH ports. At this stage students will also learn to scale their servers both vertically and horizontally using application load balancers.\n\nThe second half of the course provides a comprehensive guide to Amazon Web Services. We start with demonstrating how to setup, secure, and navigate an AWS account. This includes setting up billing alerts and multi-factor authentication. From there, we take a deep dive into AWS Identity and Access management for enhanced account security, and the management of user accounts for various AWS services. Here we explore IAM User management and permissions, IAM Groups, IAM Policies, and access key rotation. Following the IAM section, we’ll jump into the Amazon Elastic Compute Cloud (EC2) service. In this module students lean to deploy virtual instances on AWS using Amazon Machine Images, Elastic IPs, and Launch Templates. We will also explore IAM roles for EC2, EC2 Security Groups, SSH key pair authentication, and remote administration using both terminal and EC2 Instance connect.\n\nAs you can see this course covers a tremendous bit of ground and we hope you’re just as excited about this course as we are, if so - hit that enroll button and let’s get started.",
      "target_audience": [
        "Students interested in Cloud Computing",
        "Students interested in Deploying and Configuring Remote Instances",
        "Students interested in the Foundations of Linux",
        "Students interested in the Foundations of Web Server Software (Apache & NGINX)",
        "Students interested in Server Security (Network & Hosted Firewalls, UFW)",
        "Students interested in learning the Foundations of AWS (IAM, EC2)"
      ]
    },
    {
      "title": "Building Web APIs with gRPC - The Complete Guide",
      "url": "https://www.udemy.com/course/building-web-apis-with-grpc-the-complete-guide/",
      "bio": "Become an expert in the most exciting web API framework with this practical, hands-on course",
      "objectives": [
        "Basics of gRPC",
        "How gRPC stacks against REST API",
        "Using Protobuf to send messages between systems",
        "The 4 communication types of gRPC",
        "Error handling in gRPC",
        "Implementing deadlines in gRPC",
        "Implementing authorization and security in gRPC",
        "Using gRPC in the browser"
      ],
      "course_content": {
        "Welcome": [
          "Course Introduction",
          "Join the Software Architects Community",
          "Get the course slides",
          "Who Is This Course For?",
          "Agenda"
        ],
        "API Basics": [
          "Read this before going through this section",
          "What is an API?",
          "API Types",
          "Importance of API",
          "Why Do You Need a Well Designed API?"
        ],
        "Web APIs": [
          "Web APIs",
          "SOAP",
          "REST",
          "GraphQL",
          "gRPC"
        ],
        "gRPC Basics": [
          "Problems with REST API",
          "History of gRPC",
          "gRPC Basics",
          "RPC",
          "Communication Styles",
          "ProtoBuf",
          "Advanced Topics"
        ],
        "Preparing the Environment": [
          "Introduction",
          "Installing .NET SDK",
          "Installing nodeJS",
          "Installing VS Code and Extensions"
        ],
        "Introducing Our App": [
          "Introduction",
          "The gRoom App"
        ],
        "Protobuf": [
          "Introduction",
          "Protobuf Usage Flow",
          "Messages Basic Syntax",
          "Configuring Protobuf in .NET",
          "Developing with Protobuf",
          "Default Values",
          "Working With Composite Types",
          "Updating a Message Type",
          "Oneof",
          "Maps",
          "Defining Services"
        ],
        "Building the gRoom Server": [
          "Introduction",
          "Creating and Configuring the Project",
          "Building the gRoom Service",
          "Testing the Service with BloomRPC"
        ],
        "Unary RPC": [
          "Introduction",
          "Implementing the Client"
        ],
        "Client-side Streaming": [
          "Introduction",
          "Implementing Client-side Streaming in the Server",
          "Implementing the Client"
        ]
      },
      "requirements": [
        "Understand the basic concepts of APIs",
        "Understand the basic concepts of HTTP",
        "Basic development background"
      ],
      "description": "Web API is usually the most important part in a web app.\nThis is how you expose your web app to the world, and to other users, and it must be fast, easy to use, and up-to-date.\ngRPC is one of the most advanced and exciting web APIs in the industry today, and it adds a lot of value to any web app. Capabilities such as server and client streaming, strongly-typed messages, blazing-fast performance and more make it an important asset in every developer and architect toolbox.\nAnd this practical, hands-on course will make you an expert in gRPC.\nWe are going to cover all aspects of gRPC, from the very basics to the most advanced topics.\nHere are some of the topics we're going to discuss:\n- How gRPC stacks against REST API\n- Basic concepts of gRPC\n- The 4 communication types of gRPC:\n- Unary RPC\n- Client-side streaming\n- Server-side streaming\n- Bi-directional streaming\n- Best practices of designing gRPC API\n- Using Protobuf, the message serialization format used by gRPC\n- Error handling in gRPC\n- Authorization and Security\nAnd lots more.\n\n\nNow, in order to make this course as valuable as possible, I made it extremely practical and hands-on.\nWe're going to build, together, a fully-functional, full-blown gRPC-based chat app, utilizing all the concepts we'll learn in the course, and we're going to use multiple platforms for that - nodeJS and .NET.\nNote: You don't have to be a .NET or nodeJS developer to take this course. I'm going to guide you through all the steps in the development process, and make sure everything will work as expected.\nBy the end of this course, you'll be an expert in gRPC, not just in theory, but in practicality.\n\n\nThere is no other course like this! This is the only course that will take you all the way to  be an expert in gRPC, from the very beginning to topics known to few, and will do that in an extremely practical and hands-on fashion.\n\n\n----------------------------------------------------------\nWhat do my students have to say about my courses?\n------------------------------------------------------------\n\"well done - The course was very practical\" - Sam\n\"Good explanation on the topics covered, \"Soft Skills\" section is a great addition of topics\" - Sergio\n\"[The course] given me the confidence to go out to the market and advertise myself as such [an Architect]\" - Mathew\n\"Life Changing\" - Arivazhagan\nAnd lots more...\n\n\n------------------------------------------------------------\nWho is this course for?\n------------------------------------------------------------\nAny person who is involved in web development, even system analyst, can profit from this course.\nThat includes:\n- Junior developers\n- Senior developers\n- Architects\n- Anyone else involved in web development\nIf you're not sure if this course is for you - drop me a note!\n\n\n------------------------------------------------------------\nWhat are the prerequisites for this course?\n------------------------------------------------------------\nStudents are expected to be able to understand code , and to know how the internet is working (HTTP protocol, Request / Response model, and so on).\n------------------------------------------------------------\nAbout Me\n------------------------------------------------------------\nI've been in the software industry for more than 25 years, and a Software Architect for more than 20 years, working with a variety of clients - Fortune 100 enterprises, start-ups, govt. entities, defense, telco, banking, and lots more.\nI'm an avid speaker and trainer, having trained thousands of students in various courses.\nI love what I do, and my greatest passion (well, besides my family...) is designing modern, practical, and reliable systems for my clients, using the best possible API.",
      "target_audience": [
        "Developers who would like to learn about gRPC",
        "Software Architects designing web APIs",
        "Anyone involved in web development"
      ]
    },
    {
      "title": "Laravel 9 - News Portal Website for Beginner to Advanced",
      "url": "https://www.udemy.com/course/laravel-news-portal-website-for-beginner-to-advanced/",
      "bio": "Learning Laravel fundamentals (A to Z) and developing a complete news portal website with Laravel 9",
      "objectives": [
        "Laravel 8 or Laravel 9 from scratch",
        "Laravel Fundamentals (A to Z)",
        "Laravel Single and Multi Auth (with Guard) System",
        "Visual Studio Code Editor and Important Plugins",
        "Laravel CRUD option",
        "Complete Multi Language System in Laravel",
        "Laravel Login System",
        "Forget Password and Reset Password Sytem",
        "Email Verification System Logic and Implementation",
        "Contact form email sending using Ajax",
        "Newsletter email sending using Ajax and email verification",
        "Website Color Settings Option",
        "Website logo, favicon and other items setup",
        "Admin and author profile managements",
        "Security for post section in author section",
        "Photo uploading system",
        "Toastr message notification system",
        "Home page search option using chained select with jquery",
        "Uploading project in web server",
        "Email sending in web server"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Local Server Setup (Windows OS)": [
          "Installing XAMPP",
          "Shift between php versions in XAMPP",
          "Installing Laragon",
          "Shift between php versions in Laragon"
        ],
        "Local Server Setup (Mac OS)": [
          "Installing XAMPP",
          "Installing MAMP",
          "Shift between php versions in MAMP"
        ],
        "Code Editors": [
          "Code Editors"
        ],
        "Visual Studio Code Editor": [
          "VS Code Installation",
          "Opening Folders (Single and Multiple)",
          "Autosave",
          "Installing Extensions",
          "Export Settings",
          "Reset VS Code",
          "Creating and Working with Snippets",
          "Extension - Bootstrap 5 Quick Snippets",
          "Extension - Auto Rename Tag",
          "Extension - Bracket Pair Colorizer 2 - Old",
          "Extension - Bracket Pair Colorizer 2 - New",
          "Extension - Material Icon Theme",
          "Extension - Vscode Great Icons",
          "Extension - Live Server",
          "Extension - Live Server Preview",
          "Extension - HTML CSS Support",
          "Extension - Laravel Blade Snippets",
          "Extension - Laravel Snippets",
          "Extension - Laravel Blade Spacer",
          "Extension - Laravel Artisan",
          "Extension - Laravel-goto-controller",
          "Color Scheme",
          "Working with Terminal",
          "Settings Sync"
        ],
        "Laravel Fundamentals (A to Z) - Laravel 8 & Laravel 9": [
          "Important Notes about Laravel 8 and Laravel 9 - How to install",
          "What is MVC",
          "What is Laravel",
          "What is Composer; Download and Install Composer (Windows OS)",
          "Install Composer in Mac OS",
          "Install Laravel",
          "Laravel Folder and File Structure",
          "Routes - Basic, Routes with parameter - Part 1",
          "Routes - Names route, URL, URL to Route - Part 2",
          "Controller",
          "Blade - Part 1",
          "Blade - Part 2",
          "Middleware - Part 1",
          "Middleware - Part 2",
          "Route Group",
          "Database and Migration",
          "Model",
          "Database - Raw SQL (Insert Data)",
          "Database - Raw SQL (Show Data)",
          "Database - Raw SQL (Update Data)",
          "Database - Raw SQL (Delete Data)",
          "Database - Raw SQL (Join Tables)",
          "Database - Query Builder (Insert Data)",
          "Database - Query Builder (Show Data)",
          "Database - Query Builder (Update Data)",
          "Database - Query Builder (Delete Data)",
          "Database - Query Builder (Join Tables)",
          "Database - Eloquent ORM (Insert Data)",
          "Database - Eloquent ORM (Show Data)",
          "Database - Eloquent ORM (Update Data)",
          "Database - Eloquent ORM (Delete Data)",
          "Database - Eloquent ORM (One to One Relationship)",
          "Database - Eloquent ORM (One to One Reverse Relationship)",
          "Database - Eloquent ORM (One to Many Relationship)",
          "CRUD Implementation (Form Validation, Error Message, Insert Data) - Part 1",
          "CRUD Implementation (Show Data) - Part 2",
          "CRUD Implementation (Update Data) - Part 3",
          "CRUD Implementation (Delete Data) - Part 4",
          "CRUD Implementation (Image Upload, Validation, Insert Photo) - Part 5",
          "CRUD Implementation (Image Upload, Validation, Update Photo) - Part 6",
          "CRUD Implementation (Image Upload, Validation, Delete Photo) - Part 7",
          "Soft Delete and Data Restore",
          "Force Delete",
          "Helper Functions",
          "Sending Email",
          "Seeder and Faker - Part 1",
          "Seeder and Faker - Part 2",
          "Edit .env file contents using user interface (Laravel 8 Only)"
        ],
        "Laravel Authentication - Single User and Multi User": [
          "Authentication (Single User) - Part 1",
          "Authentication (Single User) - Part 2",
          "Authentication (Single User) - Part 3",
          "Authentication (Single User) - Part 4",
          "Authentication (Single User) - Part 5",
          "Authentication (Single User) - Part 6",
          "Authentication (Multi Auth using Single Table) - Part 7",
          "Authentication (Multi Auth using Single Table) - Part 8",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 9",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 10",
          "Authentication (Multi Auth using Different Guards and Tables) - Part 11"
        ],
        "Admin Panel - Template Mastering": [
          "Admin Panel HTML template (Bootstrap 5)",
          "Installing Laravel 9 and Creating Database",
          "Layouts Creation and Home Page",
          "Login and Forget Password Page",
          "Create migration and models for admins table",
          "Admin middleware",
          "Creating demo admin user in phpmyadmin",
          "Setup email and add mailtrap account",
          "Login, logout, error message and admin guard setup",
          "Forget password, sending email with reset link",
          "Reset password complete",
          "Admin profile information and photo update"
        ],
        "Front End Template": [
          "About HTML Template (Bootstrap 5)"
        ],
        "Front End Template Mastering": [
          "Rename the admin panel project to convert it to the main project",
          "Mastering the template and working with home and about page"
        ]
      },
      "requirements": [
        "Basic Knowledge in PHP Language",
        "Basic Knowledge in OOP Concept",
        "Knowledge about using local server. Ex: xampp",
        "Basic knowledge about HTML, CSS and Bootstrap",
        "Basic knowledge about using code editor like Notepad++, Sublime Text or any"
      ],
      "description": "In this course, I have taught the students the Laravel framework from scratch. After showing all the basics of Laravel, authentication system, template mastering etc., I have developed a complete News Portal System with the latest version of Laravel, Laravel 9.\n\nThe persons who are very beginner in Laravel and only have few php and oop idea, they will be benefitted the most from this course. But the advanced persons will also get help from this course, because I have coded following the standard and showed some advanced features.\nAdmin Panel Features:\nAdmin can create, edit and delete Authors.\nAdmin can change the website color\nAdmin can change logo, favicon etc.\nAdmin can change top bar information.\nAdmin can control the home page information.\nAdmin can create, edit and delete languages.\nAdmin can create, edit and delete news categories and subcategories.\nAdmin can create, edit and delete news posts.\nAdmin can create, edit and delete FAQs.\nAdmin can create, edit and delete Online Polls.\nAdmin can create, edit and delete Live Channel items.\nAdmin can create, edit and delete photos for the photo gallery.\nAdmin can create, edit and delete photos for the video gallery.\nAdmin can create, edit and delete the social items.\nAdmin can create, edit and delete advertisements.\nAdmin can send email to subscribers.\nAdmin can control the share and comment section during post.\nAdmin can change his own photo, information and password.\nAuthor Features\n1. Author can change his own photo, information and password.\n2. Author can create, edit and delete news posts.",
      "target_audience": [
        "Persons who want to learn a php framework from scratch",
        "Persons who want to learn making a complete web application from beginning",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to learn laravel very well to be able to make awesome products to sell from their websites"
      ]
    },
    {
      "title": "HTML Web Development Crash Course",
      "url": "https://www.udemy.com/course/html-tutorials/",
      "bio": "Learn how to create websites and web applications for the internet.",
      "objectives": [
        "Create websites",
        "Use web features",
        "Over 15 lectures",
        "Use the console to debug their website",
        "Create cross platform websites"
      ],
      "course_content": {
        "HTML Web Programming": [
          "Setup and Overview",
          "Basic Tags",
          "Headings",
          "Lists",
          "Links",
          "Images",
          "Tables",
          "Advanced Tables",
          "Meta Tags",
          "Description Lists",
          "Presentation",
          "iframe",
          "Video",
          "Audio",
          "Forms",
          "CSS",
          "JavaScript"
        ],
        "Bonus Lecture: Discounted Courses": [
          "Bonus Lecture: Discounted Courses"
        ]
      },
      "requirements": [
        "Basic computer skills"
      ],
      "description": "Learn how to create websites. A step by step process is used to show everything from setting up to essential HTML features.\nGain a good understanding of the following concepts:\nHTML programming\nWeb programming\nBasic/essential HTML tags\nWebsite basics\nIntegrating media into a website\nBasic CSS and JavaScript\nHTML is one of the core universal programming languages of the web that is essential for any web development journey. The web is growing on a daily basis and knowing HTML is more crucial than ever.\nYou will be provided with the full source code to aid in development during and after this course. The source code is free to use in as many projects as you wish.\n\n\nOver 205,000 students have enrolled on my courses and all of them are extremely satisfied. You will also be satisfied with this course. If you do not like the course, remember that within 30 days you can request a full refund. I guarantee you satisfaction.\nIf you have any questions regarding the topics covered in this course, please feel free to ask. I'm always happy to help those who want to learn.\n\n\nTo summarise this is what you get:\n• Lifetime access to HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• All videos are downloadable. Learn wherever you want, even without an internet connection!\n• Downloadable starter code and final code for each section.\n• Free helpful support in the course Q&A when you have questions or get stuck.\n• Multiple coding challenges to practice your new skills (solutions included).\nSounds great? Then start this adventure today by clicking the “Take this course\" button, and join me in the only course that you will need!",
      "target_audience": [
        "This HTML course is meant for individuals looking to start their web development career",
        "The only skill required is knowing how to turn on a computer",
        "A basic understanding of websites is helpful but not essential"
      ]
    },
    {
      "title": "Build a Social Network in 20 Days from Scratch:PHP+MYSQL, Js",
      "url": "https://www.udemy.com/course/build-social-network-in-20-days/",
      "bio": "Create a premium class social network website like Facebook from scratch using php mysql & javascript.",
      "objectives": [
        "How to create a social network engine.",
        "Learn next level of full stack web development.",
        "State of art technique to create complex system like react and reply.",
        "Advance javascript library JQUERY",
        "Learn good quality of object oriented programming (OOP)",
        "Advance dom traversing."
      ],
      "course_content": {
        "Day 1: Course Intro: Info & Setup": [
          "Welcome to the course (Same as intro)",
          "How to complete the course",
          "Download and install XAMPP",
          "Download,install and config code editor",
          "Create necessary folder"
        ],
        "Day 2: Create Sign Up with mobile or email and necessary file system": [
          "Complete Project Source code & Resource File",
          "Section resources",
          "All about the Section",
          "Create Sign up html structure",
          "Design Sign up page",
          "Create birthday date using javascript",
          "Understanding form submission process",
          "Connecting site with MYSQL database",
          "Create user database table",
          "Storing and validating input field data",
          "Create User and Post class",
          "Create object in load file",
          "Create check input method",
          "Regular expression to validate email id",
          "Understanding and constructing 'Create' method",
          "Inserting data and testing system",
          "Create token system",
          "Completion of sign up system"
        ],
        "Day 3: Log in system with email or mobile": [
          "Section resource",
          "Log in html structure",
          "Design Log in code",
          "Log in backend development"
        ],
        "Day 4: Profile page": [
          "Section resource",
          "Create profile page html structure",
          "Design profile topbar left side",
          "Design profile topbar right side",
          "Topbar icon edit",
          "Create system to stay logged in",
          "Get userid by name",
          "Create profile table",
          "Create profile data storing method"
        ],
        "Day 5: Cover photo and profile photo system": [
          "Section resource",
          "Cover photo design",
          "Cover photo button js",
          "Photo data sent to database",
          "Cover photo completed",
          "Designing profile photo",
          "Profile picture dialogue box",
          "Complete profile photo upload system",
          "Cover bottom part",
          "UserLInk rectification"
        ],
        "Day 6: Text and Photo Posting System with emoji": [
          "Section resource",
          "Design user intro",
          "Design post box 1",
          "Design post box 2",
          "Design post action area",
          "Set emoji",
          "Use javascript on post button",
          "Post image preview",
          "Create post system 1",
          "Create posting system 2",
          "Create post database",
          "Store post to database",
          "Display post 1",
          "Display post 2",
          "Display post complete",
          "Post image show",
          "Post image show 2",
          "Image post show complete",
          "Write javascript for post edit",
          "Create post edit option",
          "Post edit php",
          "Delete post from timeline"
        ],
        "Day 7: React System": [
          "Section resource",
          "Create react table",
          "React main html 1",
          "Create Main react count method",
          "Write Javascript for main react",
          "Main react submit",
          "Main react complete",
          "Create system for other react type",
          "Complete other react type system"
        ],
        "Day 8: Comment System": [
          "Section resource",
          "Create comments table",
          "Create comment method",
          "Write code for comment show part 1",
          "Write code for comment show part 2",
          "Create comment count method",
          "Comment submission process",
          "Fetching last comment and showing react icon",
          "Create functionality to react on comment",
          "Show comment react js php",
          "Comment react completion",
          "Create functionality to edit comment",
          "Create comment update and delete method"
        ],
        "Day 9: Reply system": [
          "Section resource",
          "Create reply fetch method",
          "Create reply react count and max show method",
          "Create react check method and handling error",
          "Write js and get reply input",
          "Complete reply commenting",
          "Create functionality to submit reply other react type",
          "Write reply react submit process",
          "Error handling and create reply delete system",
          "Completion of reply reacting",
          "Create reply edit option",
          "Create reply edit save and delete option",
          "Reply completion",
          "Reply bug fix"
        ],
        "Day 10: Share system": [
          "Section resource",
          "Create share option",
          "Create functionality to store and show shared post",
          "Create shared post edit option",
          "Complete share show",
          "Create shared post edit option"
        ]
      },
      "requirements": [
        "Need to have a basic knowledge on HTML, CSS, PHP and JAVASCRIPT"
      ],
      "description": "Do you want to be pro web developer or want to create social network engine?\nDo you want level up your coding skill in php, mysql and javascript?\nIf so, you are in right place. $1000+ valued course will provide you almost all necessary web coding technology top of php, mysql and javascript that will make you a pro full stack web developer and in step by step guide this course will introduce you to the almost all important feature of a social networking website engine like facebook.\nThis course pack with more than 38+ hours of content with source code. Where you will get project full source code. In details writing with explanation from scratch creating such website will give you a class of confident that will make you able to create almost all types of website.\nA premium class course that absolute worth  of more than then its price tag that nothing to compare with the course content in whole internet.\nSome of the feature like advance react system, reply system is so much distinctly unique that is hard to find in any course in the world.\nSo why are you waiting for. Enroll and lets move in our first day class.",
      "target_audience": [
        "Beginner or Intermediate level Web developer who wants to level up his skill on full stack web development and the enthusiastic who wants to create a social site engine. ."
      ]
    },
    {
      "title": "PHP with MySQL: Build Real Estate Management System",
      "url": "https://www.udemy.com/course/php-with-mysql-2023-build-real-estate-management-system/",
      "bio": "Build Complete Real Estate Management System with Admin Panel in PHP MySQL Bootstrap and PDO",
      "objectives": [
        "Learn to set up the right environment when getting started with coding",
        "Build a complete authentication system",
        "Learn to do advanced coding with hashing and un-hashing passwords",
        "Create an amazing admin panel",
        "Learn file uploading and how to fully update and delete it",
        "Learn to fix bugs along the way of developing this web app",
        "Build a multi input based search form",
        "Learn to work with Database complicated queries like (Joins and Wild Cards)",
        "Create a category system",
        "Limit the user ability to access sensitive data by protecting it",
        "Warp your head around cool programming concepts like validations",
        "Learn to upload multiple images",
        "Learn web development tips and tricks along the way"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Getting Started with the Project": [
          "Template for this Project",
          "Creating Config File",
          "Preparing our Folder Structure"
        ],
        "Authentication System": [
          "Creating Register Page",
          "Logging Users in",
          "Creating Sessions and Validating"
        ],
        "Diving into the Project and Creating Main Features": [
          "Displaying Properties in Home Page",
          "Creating Search Form",
          "Displaying More Properties in Home Page",
          "Displaying Rent and Sale Properties",
          "Grapping Properties Based on Price",
          "Validating and Enhancing",
          "Showing Categories",
          "Showing Properties for every Category",
          "Creating Property Details Page",
          "Displaying Gallery for every Property",
          "Displaying Related Properties",
          "Adding Properties to Favorites",
          "Deleting from Favorites",
          "Sending Requests to Properties",
          "Checking for Property Requests"
        ],
        "Users' Pages": [
          "Showing Favorites Properties for every User",
          "Showing Requests for every User",
          "Finishing User Side and Validating pt.1",
          "Finishing User Side and Validating pt.2"
        ],
        "Getting Started with Admin Panel": [
          "Design and Code for Admin Panel",
          "Logging Admins in",
          "Starting Sessions",
          "Validating and Finishing Login Page",
          "Creating Admins",
          "Showing Admins"
        ],
        "Finishing up Categories": [
          "Showing Categories",
          "Creating Categories",
          "Updating Categories",
          "Deleting Categories",
          "Validating and Creating Index Page"
        ],
        "Finishing up Properties": [
          "Showing Properties",
          "Inserting Properties pt.1",
          "Inserting Properties pt.2",
          "Deleting Properties with Related Images"
        ],
        "Finishing up Requests": [
          "Showing Requests"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and PDO",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Do you want to build something great? Something that's relevant and creative? Are you a beginner in web development and want to start creating a big and amazing project? If yes, then, this course is definitely for you. In this course, I made sure that you will get the best experience building this project. I put too much effort into building and enhancing it.\n\n\nWe will start naturally by creating the config file and preparing our folder structure and then building the whole back-end code from start to finish. We are going to also create an authentication system which is a crucial part in building any modern web app nowadays. After this, we are going to dive deeper into the project by building the inside pages. So, we will display the Properties in various forms and ways based on price and type, and so on. And then we will move on to a different part and which is building the details page for every property and this will contain a lot of functionality. On this page, we are going to allow the user to add properties to favorites and send a request to the agent to meet up and talk about the property, these two features especially require great validation that we are going to implement. Something else that we are going to build is an admin panel and in it, we will handle a couple of things like creating admins and processing properties creating them and deleting them and we will show requests for every agent and so on. And that's not all. There are a lot of details to talk about in this project. So if you like this and if it seems like something you are interested in, go ahead and get the course now.",
      "target_audience": [
        "People who learned PHP and MySQL and want to build a full project",
        "Developers who want to build their CVs",
        "Aspiring programmers who want to level up their development skills with new techniques"
      ]
    },
    {
      "title": "React Firebase & TanStack: Build Dynamic Web Apps 2025",
      "url": "https://www.udemy.com/course/react-firebase-tanstack-build-dynamic-web-apps-2025/",
      "bio": "Master React.js, Firebase, TanStack, and Vite to Build Dynamic Web Apps – A Complete Guide to Modern Web Development",
      "objectives": [
        "Master React.js Fundamentals: Learn React.js core concepts like components, JSX, Virtual DOM, and create scalable single-page applications efficiently.",
        "Integrate Firebase Authentication, Firestore, and Storage into React apps, enabling real-time data syncing and secure user authentication for dynamic web apps.",
        "Leverage TanStack React Query to efficiently manage data fetching, caching, and synchronization, enhancing app performance and handling complex data needs.",
        "Build and deploy full-stack web applications using React, Firebase, and React Query, and host them on Firebase for scalable, production-ready apps."
      ],
      "course_content": {},
      "requirements": [
        "No prior coding expeBasic Knowledge of JavaScript: Familiarity with JavaScript fundamentals such as variables, functions, and control structures is helpful, but not mandatory.rience is required – this course is beginner-friendly!",
        "Familiarity with HTML/CSS: Basic understanding of HTML and CSS is recommended for building web pages and styling your React components.",
        "Willingness to Learn: This course is beginner-friendly, and no prior experience with React or Firebase is required. A curious mind and eagerness to learn are all you need!"
      ],
      "description": "Learn to build dynamic, production-ready web applications using React.js, Firebase, and TanStack React Query in this comprehensive 2025 guide. This course is designed for developers who want to master modern web development practices and create real-time applications with a robust backend and seamless user experience.\nYou’ll begin with an introduction to React.js, covering fundamental concepts like components, JSX, and the Virtual DOM. Then, dive into Firebase, exploring services such as Authentication, Firestore, Storage, and Hosting to build powerful, scalable apps. Learn how to integrate Firebase with React for features like user authentication, data storage, file uploads, and more.\nIn addition to Firebase, we’ll introduce TanStack React Query, a powerful library for handling data fetching, caching, and synchronization in your app. You’ll learn how to efficiently manage data with React Query, perform advanced Firestore queries, and implement pagination for large datasets.\nThe course also covers essential topics like Firebase Cloud Functions for server-side logic, Firebase Security Rules for protecting your data, and role-based access control for managing user permissions.\nBy the end of the course, you’ll be able to build fully functional web apps with features such as user authentication, real-time data updates, file uploads, and more. With hands-on exercises and a final project, you'll gain the skills necessary to deploy and maintain your apps on Firebase Hosting. Start mastering modern web development today!",
      "target_audience": [
        "Aspiring Web Developers: If you're looking to start your web development journey, this course will give you a solid foundation in React.js, Firebase, and modern web technologies.",
        "Frontend Developers: If you already know HTML, CSS, and JavaScript and want to level up your skills by learning how to build dynamic, real-time applications with React and Firebase, this course is for you.",
        "Full-Stack Development Enthusiasts: If you're interested in building both the frontend and backend of web applications, you’ll learn how to integrate Firebase for powerful backend functionality and real-time data handling.",
        "Developers Wanting to Learn React and Firebase: Whether you're a beginner or have some experience with JavaScript, if you're eager to master React, Firebase, and data management with React Query, this course will help you gain hands-on expertise.",
        "Entrepreneurs and Product Builders: If you're looking to build your own web applications, whether for a startup or personal projects, this course will teach you how to create a full-stack app and deploy it using Firebase Hosting."
      ]
    },
    {
      "title": "Tailwind CSS (+ React) - The beginner guide",
      "url": "https://www.udemy.com/course/tailwind-css-the-beginner-guide/",
      "bio": "Build modern and responsive websites Tailwind, combined with React. Incl : Animations, Dark mode, Responsive, Theme...",
      "objectives": [
        "Proficient in Building Responsive UIs",
        "Mastering Utility-First CSS",
        "Real-World Project Experience",
        "Learn Tailwind animations",
        "Learn how to setup a theme and using the tailwind config"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Our project",
          "Tailwind ?"
        ],
        "Tailwind basics": [
          "Tailwind utilities",
          "The display property",
          "Flex and grids",
          "Responsive",
          "States",
          "Groups and peer",
          "Theme customization",
          "Directives",
          "Dark mode"
        ],
        "Setup": [
          "Github",
          "Setup React and Tailwind",
          "Setup prettier and svg"
        ],
        "Let's practice Tailwind": [
          "Header",
          "Mobile nav",
          "Responsive mobile menu",
          "Shoe detail layout",
          "Gradient and fonts",
          "Making the gradient responsive",
          "Select",
          "Animations",
          "Card",
          "Little gotcha : Contruct Tailwind classes dynamically",
          "Card grid",
          "Animated sidebar",
          "Cart item",
          "Cart item inputs",
          "Tailwind merge (tw-merge)",
          "Cart list",
          "Dark mode setup",
          "Dark mode styling"
        ],
        "Making the cart dynamic with React": [
          "Selecting a shoe",
          "Add to cart",
          "Remove from cart"
        ],
        "Deploy on the World Wide Web !": [
          "Deploying with Vercel",
          "Congratulations !"
        ]
      },
      "requirements": [
        "Basic HTML and CSS Knowledge",
        "An experience with React is highly recommended"
      ],
      "description": "Welcome to the \"Tailwind CSS - The Beginner Guide\" the course is designed to make you a confident and self-reliant Tailwind CSS developer in no time!\n\nI believe in delivering results without wasting your time.\n\nAre you ready to unlock the world of modern web design?\n\nWith our course, you won't have to commit hours on end.\n\nI'll get straight to the point, teaching you the essentials efficiently.\n\nWhat You'll Achieve:\n\nTailwind CSS Proficiency: Discover how to use Tailwind CSS effectively, without drowning in extensive lectures or tedious exercises. We'll get you up to speed quickly.\nReact Integration Made Easy: Seamlessly integrate Tailwind CSS with React, empowering you to create dynamic, responsive web applications without the unnecessary fluff.\nResponsive Magic: Learn to make your websites look exceptional on all devices through streamlined lessons on responsive design principles.\nEngaging Animations: Elevate your web design game with captivating animations that are easy to implement, adding that extra \"wow\" factor to your projects.\nSwift Deployment: I'll guide you through deploying your website with no fuss, ensuring you can showcase your creations to the world efficiently.\n\n\nHands-On Project: Crafting a Super Nike Website:\nOur focus is on results, not duration.\n\nBuild a Super Nike-inspired website from the ground up. Create a visually stunning, fully responsive site with captivating animations, all while gaining hands-on experience and confidence.\n\nEach video is associated to a code branch to make it easier for you to follow along.\nFinally, as alway, I'll show you what I know in a casual way and I will always answer to your questions !",
      "target_audience": [
        "Any developper that want to learn how to get better at CSS and learn modern web development techniques with a famous css framework."
      ]
    },
    {
      "title": "The FastAPI SuperGuide: Create 3 Real-World FastAPI Apps",
      "url": "https://www.udemy.com/course/create-apps-with-fastapi/",
      "bio": "Learn FastAPI, Python, REST APIs, Bootstrap, SQLite, Jinja, and web security; all while creating 3 full-stack web apps!",
      "objectives": [
        "Create 3 full-stack applications using FastAPI in Python and industry-standard practices",
        "Use Jinja2, Bootstrap, HTML, and CSS to create front-end templates with control flow (conditionals, loops, etc.)",
        "Fundamentally understand REST API architecture and how to implement REST APIs in FastAPI",
        "Use database browsers and SQLAlchemy to create, manage, update, and parse SQLite databases",
        "Create user authentication and registration logic with error handling",
        "Understand HTTP, how it works, and how to make requests, including methods, headers, bodies, and status codes",
        "Format programmatic data to include in front-end pages",
        "Parse HTTP requests in python and extract relevant data, including parameters, form data, and request bodies",
        "Validate HTTP routes and implement error handling in REST APIs and full-stack applications",
        "Understand JSON and how to both parse and return it using Python",
        "Use Pydantic and type hints to create data models and schemas in Python",
        "Hash and verify passwords in Python",
        "Create OAuth2 flows and use them to authenticate users",
        "Create, manage, and update JSON Web Tokens",
        "Create database models in Python",
        "Use Alembic to migrate and update databases",
        "Use SQLAlchemy to write functionality to interact with databases in Python",
        "Learn best web development practices and conventions"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Python",
        "Familiarity with HTML and CSS encouraged, but not required"
      ],
      "description": "There is a lot that goes into full stack web development.\nWith databases, REST architecture, HTTP requests, OAuth2, and all the other protocols that go alongside full stack web development, it can be hard to learn, especially when coupled with a complicated framework like FastAPI and the nuanced parts of Python.\nThis course aims to eliminate that confusion by teaching FastAPI from the very basics to the advanced level. It combines theory and practical use to give you everything you need to learn FastAPI, all while allowing you to build 3 full-stack web applications written primarily in Python along the way.\nThroughout the course, you will:\nCreate 3 full-stack applications using FastAPI in Python and industry-standard practices\nUse Jinja2, Bootstrap, HTML, and CSS to create front-end templates with control flow (conditionals, loops, etc.)\nFundamentally understand REST API architecture and how to implement REST APIs in FastAPI\nUse database browsers and SQLAlchemy to create, manage, update, and parse SQLite databases\nCreate user authentication and registration logic with error handling\nUnderstand HTTP, how it works, and how to make requests, including methods, headers, bodies, and status codes\nFormat programmatic data to include in front-end pages\nParse HTTP requests in python and extract relevant data, including parameters, form data, and request bodies\nValidate HTTP routes and implement error handling in REST APIs and full-stack applications\nUnderstand JSON and how to both parse and return it using Python\nUse Pydantic and type hints to create data models and schemas in Python\nHash and verify passwords in Python\nCreate OAuth2 flows and use them to authenticate users using FastAPI logic\nCreate, manage, and update JSON Web Tokens\nCreate database models in Python and use them with FastAPI routes\nUse Alembic to migrate and update databases\nUse SQLAlchemy to write functionality to interact with databases in Python\nLearn best web development practices and conventions\nAnd much more!\nAnd the best part is; you don't have to know anything about FastAPI, web routing, security, or any of the above. All you need is a basic understanding of Python and some familiarity with HTML and CSS, and you will be on your way to becoming a master of full stack web development in Python and FastAPI!\n\n\nThe curriculum takes a comprehensive look at both FastAPI and the technologies needed to build it. Before we start building any apps, we take a look at the basics of Python, including:\nType hints\nPydantic models\nNuanced Python features that make development much easier, such as virtual environments.\nAt the end of section, there is a coding exercise and quiz that incorporate all content covered to ensure understanding.\n\n\nOnce the basics are covered, we start by building the first of three full stack web applications. In the first app, we focus on the basics of FastAPI by teaching:\nREST API architecture\nJinja2\nBootstrap\nHTML templating\nThe foundational FastAPI skills needed to get a basic application up and running.\nAlong the way, we will be building a car information viewer that lets you view, search, create, edit, and delete information about cars, all delivered in a clean and readable codebase using Python and FastAPI.\nThe home page contains a list of all the cars in our database, which is neatly formatted and displayed to the user in a gridlike manner.\nThe navbar contains working links to the home page, a form to create a car (more on that later!), and an embedded search bar which, when used, takes you to a search page.\nThe search form uses IDs to search the database for cars, and displays them to the user. It also contains error handling in case an invalid ID is passed to the user.\nEach car on the page has edit and delete buttons, with the edit button taking you to an auto-filled form on a separate page to edit the data, and the delete button passing a request to a hidden route that removes it from the database.\nThe create form is identical to the edit form, except it has no auto-filled data. When completed, it will redirect to the home page, where the newly created car will be available to view.\n\n\nThe second app focuses on web security, incorporating:\nOAuth2 flows and schemes\nPassword hashing\nJSON web tokens\nFastAPI-specific authentication systems\nAnd industry-standard practices into a main FastAPI application written in Python.\nThis will be built around a social media feed that uses login and registration functionality to display user information under a protected page.\nThe home page is available to everyone, and contains some basic text prompting the user to login. The navbar contains links to a login, registration, and logout page, all with custom error messaging to ensure new users are unique and attempted logins are properly authenticated.\nThe protected page contains data about the user which is displayed in a responsive grid to the user. This displays user information, friends, and notifications.\nThe logout feature removes any of the authentication applied to the web session and redirects to the homepage.\n\n\nThe third app focuses on databases, using SQLite and SQLAlchemy to build and model databases in Python and FastAPI. You will also learn to use Alembic in combination with SQLAlchemy to perform database migrations and updates.\nThese topics will be built around a todo list that combines user login with SQLite databases to create a full stack web application, incorporating all the elements of FastAPI, Python, OAuth2, and all the other practices learned up to that point.\nSimilar to the second app, the homepage is available to everyone and prompts the user to log in.\nThe login, registration, and logout features use the same FastAPI logic to handle authentication as the previous app, except this time, data is being pulled from a real SQLite database. This is combined with past knowledge to create authentication that works with FastAPI.\nThe todo page contains a list of all the tasks that pertain to the user. At the bottom of the list is a form that lets you add a new task, which sends a request to a route that handles parsing and adding the task to the user's list of tasks through advanced, FastAPI-specific Python logic.\n\n\nSo, are you ready to start crushing web development and building full stack web applications in FastAPI and Python? Enroll and start your FastAPI journey today!",
      "target_audience": [
        "Anyone looking to build full-stack applications and REST APIs with Python and Python frameworks"
      ]
    },
    {
      "title": "Full WordPress Website For Beginners: Learn WordPress A-Z",
      "url": "https://www.udemy.com/course/wordpress-website-beginners-tutorial-course-best-elementor-learn/",
      "bio": "Learn how to create a complete website with WordPress (no coding) - Elementor, WooCommerce, Membership, Email forms &...",
      "objectives": [
        "Creating advanced website with no coding knowledge",
        "WordPress with details and tricks",
        "Elementor page builder - Easy way to create advanced web pages",
        "WooCommerce - online shopping",
        "Improving website for SEO",
        "Effective factors for blogging",
        "Member system to accept users on website",
        "Forms to capture email leads for email marketing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Website documents",
          "5 tips to get the most out of the course",
          "The general plan"
        ],
        "Host & domain": [
          "Domain",
          "Host",
          "Free host & domain",
          "Important Issues"
        ],
        "WordPress": [
          "WordPress environment",
          "WordPress theme",
          "Theme analyzation",
          "Importing demos",
          "Neve options issue",
          "Important notes"
        ],
        "Neve theme": [
          "Logo",
          "Font",
          "html",
          "style",
          "Header",
          "Footer",
          "Colors",
          "Layouts",
          "Customize"
        ],
        "Elementor - Page editor": [
          "Classic page",
          "Elementor",
          "Elementor environment",
          "Container",
          "Editor tabs",
          "Headline & text",
          "Image and video",
          "Buttons",
          "Divider & spacer",
          "Google map & icon",
          "Image & icon box",
          "Gallery",
          "Counter & progress",
          "Tabs",
          "Accordion & toggle",
          "Alert, sidebar & more",
          "Shape divider",
          "Responsive"
        ],
        "Important web development skills": [
          "Inspect element",
          "Reading inspect element",
          "Inspect element style",
          "Search mindset"
        ],
        "Web design": [
          "Design inspiration",
          "Design resources",
          "Introduction to Canva",
          "Canva editor",
          "Canva practice"
        ],
        "Practice assignment - Clickfunnels": [
          "Assignment - Clickfunnels (1)",
          "Assignment - Clickfunnels (2)",
          "Assignment - Clickfunnels (3)"
        ],
        "WordPress tools": [
          "Override",
          "Posts",
          "Menus",
          "Widgets",
          "Clean dashboard"
        ],
        "Practice assignement - Shopify": [
          "Assignment - Shopify (1)",
          "Assignment - Shopify (2)"
        ]
      },
      "requirements": [
        "There are no requirements, just join with an open mind and ready to practice."
      ],
      "description": "The course is a complete package of website development with WordPress for beginners. We start from the basics of creating a website and learn every important skill you need to create a professional website.\nThe course includes examples of everything we learn along the course with the written documents available.\nInside the course we will learn:\nWordPress fundamentals\nElementor page builder\nCreating an online shop\nBlogging\nImproving website in SEO\nCreating a membership system\nForms and email marketing\nand much more\nThe course includes a complete written document page that is available online all the time with links to all the tools and required address for the course.\n\n\nThe course is designed for beginners who want to start their own website but don't know how to write codes. This course is the only course you need to learn everything in an easy way.\n\n\nAlong the course, we have many practices and assignments which help you to have a better understanding of what we learn inside the program. Together we learn each topic and then we have real-life exercises to improve the learning experience.\n\n\nIf you are ready to start building your own website to grow your business and having an online shop, then I will see you inside the course and ready to start.\nThe full WordPress website for beginners",
      "target_audience": [
        "People who want to create a website without any coding",
        "People who want to create a website to sell products online",
        "People who want to make money by creating website for other companies"
      ]
    },
    {
      "title": "Building WordPress Themes: The Step-by-Step Guide",
      "url": "https://www.udemy.com/course/how-to-build-wordpress-themes/",
      "bio": "Convert HTML into WordPress themes and plugins using PHP with this step-by-step guide",
      "objectives": [
        "Convert static HTML pages to a fully functional WordPress Theme",
        "Develop a simple plugin for adding new content types to WordPress",
        "Use Underscores as a starting point for WordPress Theming"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML & CSS. If you know that HTML provides the structure and CSS is for adding design, you are ready to learn WordPress Theming.",
        "Some fundamental PHP: variables, data types, functions and scope. Bonus if you know about classes and objects.",
        "How to use WordPress. Perhaps you've never created your own theme or plugin, but you definitely know your way around the admin. You know how to add content and widgets, install themes and plugins, and modify menus."
      ],
      "description": "In Building WordPress Themes: The Step-by-Step Guide you will learn how to take a static HTML site and convert it into a fully functional WordPress theme and plugin. We'll start with a primer for PHP to understand the underlying language WordPress is written in, as well as explore some tools to help you work. Then, we'll take a look at our static site and convert it!\nBy the end of the course you will:\nBecome familiar with Underscores, a popular WordPress Starter Theme\nKnow how to create and customize blog posts, pages, and header and footer areas\nCreate menus and widget areas\nBuild a plugin to help us extend WordPress\nUnderstand CMB2, a popular WordPress tool for adding custom information to our WordPress site\nLearn best practices for creating WordPress Themes and Plugins\nWhat are we building?\nSince it's something we all know and love, we'll create a restaurant website! We'll build basic pages like about and contact, add a blog, and create a nice, interactive menu that's easy to update!",
      "target_audience": [
        "This course is ideal for web designers who want to make WordPress Themes.",
        "If you are a WordPress Site Builder, you will appreciate learning how to modify themes yourself and not rely on a 3rd party plugin. You'll also be able to tweak ready-made themes to your liking.",
        "You know how to make static sites and you're ready to do the custom work that's needed to be a full WordPress service shop"
      ]
    },
    {
      "title": "Ultimate PHP, Laravel, CSS & Sass! Learn PHP, Laravel & Sass",
      "url": "https://www.udemy.com/course/ultimate-php-css-and-sass-enhance-your-javascript-skills/",
      "bio": "Learn PHP,Laravel,PDO,Security and create layouts using CSS GRID, Bootstrap, Flexbox,topped up with JavaScript and Ajax",
      "objectives": [
        "Ultimate PHP, Laravel, CSS & Sass! Learn PHP, Laravel & Sass and JavaScript",
        "You will learn how to create fast and modern layouts using Flexbox",
        "You will have 3 crash courses for PHP, CSS-GRID and Flexbox",
        "New modern 2019/2020 css techniques for building stunning websites",
        "Cutting edge responsive design using media queries manager, mobile-first vs desktop-first",
        "Difference between em vs rem units",
        "SVG Images, Clip path, Font-awesome icons",
        "Learn How to use Sass in real-world projects",
        "BEM Methodology",
        "7-1 Architecture",
        "You will Learn about CSS-GRID and how to create complex layouts fast",
        "Advanced CSS animations using @keyframes, animatiosn and transitions",
        "Use NPM to set up a development process to compile Sass fast and without page refresh",
        "You will learn how to write reusable and maintainable that can be easily scale",
        "Create Complete (CMS) Content Management System similar like Wordpress",
        "You will master PHP PDO",
        "You will Use OOP to create classes",
        "Create Clean URL by removing .php extension at the end of the files",
        "Learn how to refractor and clean your code",
        "Learn about PHP security with PDO",
        "Create From Filters and Pagination",
        "Use Bootstrap to create your Admin site",
        "You will learn how to use composer (PHP package manager)",
        "Send emails using PHPMailer",
        "Create complete CRUD (create, read, update and delete) application",
        "Making different forms and loading based on condition",
        "You will learn how to create new Databases, create tables inside and use them",
        "Forgot Password functionality with password hashing and tokens",
        "You will use Google Maps JavaScript API",
        "Create Markers and use Geocoding",
        "Show 4 different types of post based on condition",
        "Use Payment methods : PHP Stripe API, and PHP SDK for PayPal RESTful APIs.",
        "Variables, Constants & Super Globals",
        "Use Prepared statements that will prevent SQL attack",
        "Use JavaScript and JQuery.",
        "Learn about regular expression and how to validate login input and register users",
        "Geo-coding will be used to convert the address that is in our DB",
        "Create Tree like Commenting system, with Ajax",
        "Save and Load data without page refresh using Ajax",
        "Last seen and Time ago function same as in FB messenger or Viber or WhatsApp"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML, CSS and PHP skills are desirable, but anyone basically can follow me on this course. No need for buying any software, your computer and text editor for writing the code will be sufficient."
      ],
      "description": "This course now is updated with Laravel!\nWelcome To Ultimate PHP, CSS, and SASS: Enhance Your JavaScript Skills! - Old Title\nNow Ultimate PHP, Laravel, CSS & Sass! Learn PHP, Laravel & Sass\nThis course will offer you more than 380 lectures recorded in HD quality, and more than 82 watch time hours.\nRequirements:\nBasic HTML, CSS, and PHP skills are desirable, but anyone basically can follow me on this course. No need for buying any extra software, your computer and text editor for writing the code will be sufficient.\nDescription\nHave you have been taking courses that are not up to date or courses that after finishing them you will immediately know that is not what they promised to be in the promo video? Have you joined multiple courses for basically learning the same thing over and over again? Have you been thinking why there is no complete course out there where you can learn how to become master of front and back end development with the latest, greatest, and the most modern programming/designing techniques?\nGreat news: Then This Is The Right Course For You!\nWelcome to \"Ultimate PHP, CSS, and Sass: Enhance Your JavaScript Skills, best course ever\". This is the most advanced, the most modern, and the most up to date course ever on this platform. It's everything you need to become master and advance your career as a graduate student, junior developer, or programmer. Look at the end of why I create this course to be for everyone.\nThere are multiple parts to this course. The first part is the designing process where you will learn how to use HTML, CSS, and Sass. You will be able to design and create modern layouts on your own after finishing this part. You will learn the most complex and advanced responsive design techniques, CSS GRID and Flexbox layouts and yes you will get familiar with Bootstrap as well. You will become a master of Sass, and CSS architecture also you will be able to design 3 very many different landing pages for these projects so you can get experience and practice what we have learned and put that in practice. You will have 2 complete guides for CSS GIRD and Flexbox in this section in order to make your life easy. This course is all about design, and you will be the architect of 3 different and beautifully designed and crafted projects.\n\n\nFIRST PART OF THE COURSE CSS AND SASS, FLEXBOX, CSS-GRID AND BOOTSTRAP INTRO:\n1) Create layouts of every kind with the latest cutting-edge layout technologies.\n2) You master Flexbox and CSS Grid and Bootstrap;\n3) Design carefully for all kind of devices with media queries;\n4) Understand the concepts of CSS and how you can make reusable code that is easily maintainable with Sass.\n\n\nIn this course, you will get familiar with background-clip, transform, and perspectives when we are making rotating/flipping cards. You will use clip-path to shape the footer and header. Also, you will be able to create animations using @keyframes, transitions, and animation.\nWorking on these projects you will be able to use CSS selectors and pseudo-classes, elements that are the foundation of the modern CSS. Dealing with complex scenarios you will learn parent, child inheritance, box types, and positioning elements using abstract and relative positioning. This course will be based on 7-1 rule and we will stick with the BEM methodology so you can create massive code components that will be very easy for maintenance and at the same time expandable and scalable. With Sass, we will use variables where we declare their values and after that, we will use them in our project whenever we need them. You will learn how to use media queries and create ones where our design breaks, meaning that you can adjust your design to fit all kinds of screen sizes by simple and advanced calculation.\nFlexbox and CSS grid will give us the opportunity to learn the process of organizing our website into a layout that easily fits different screen widths. I have two crash courses and examples for these two particular layouts. Additionally, we will use font awesome icons but we also will learn how to use the modern SVG icons in our projects so we can understand the difference between them. You will know how to change SVG color and generate SVG sprites with a breeze. On top of this, we will use the NPM so we can compile Sass and every code changes will automatically be reloaded on the browser. You will get familiar with the processes how to concatenate, prefix and compress and compile CSS file;\nSECOND PART OF THE COURSE PHP, PDO, MYSQL, SECURITY AND OOP INTRO:\nThe second part of this course is PDO PHP and OOP using Classes, methods and etc. We will not use the entire MVC framework but we will get familiar with how to use M from that framework which stands for MODELS. Inside this model folder, we will create our core functions that will interact with the database in a secure manner. Security is the number one feature of PDO so that is why we are going to do our projects with PDO. I have created a crash course on how to use Classes and PDO just for this project so if you are a person with limited PHP understanding you will not have a problem after the crash course to follow this part.\nWhat you will learn in this part:\nYou will learn that PDO represents PHP data objects and a lean and consistent way to connect to a Database. Also, PDO can work with multiple different databases like MySQL, Firebird, Oracle, PostgreSQL, and lots more. PDO provides secure data access layer no matter what type of system you are using, you can still use the same functions to access this data. You need to use a PHP 5.4 or later version in order to work because PDO will need OOP features. The biggest advantage for which I choose to use PDO is that we can write prepared statements that will prevent SQL attacks and injections that can destroy what we have stored in the database. PDO is very usable and reusable, usable because it has lots of functions out there that we can use like fetch and error handling, and reusable means that it can access multiple databases because of its unified API. We will write so many create, read, update, delete queries that by the end of this course you will become the master of PHP. You will become a master of PHP PDO and get to know the three main Classes like PDO, PDOStatment, and PDOexception. For these reasons, I have also included lectures about OOP (Object Oriented Programming) Classes where I discuss what is Class and how to use them in our project. You will learn how to instantiate objects of that class and how these objects can interact and use the methods/functions of a parent class. In addition, we will discuss Abstract and Extend Classes. In addition, you will learn how to take payments using PHP Stripe API, and PHP SDK for PayPal RESTful APIs.\nAfter that, we can send emails to our users/customers using PHPMailer and we can install it via Composer. In short, you will learn how to use a composer or dependency management tool for managing dependencies of PHP software and required libraries.\n\n\nOther smaller things worth mentioning:\n\n\n1)Password Hashing & Security in PHP\n2)Variables, Constants & Super Global\n3) Arrays in PHP\n4)Loops like While, foreach, for and etc\n5)Control Structures\n6)Methods or Functions\n7)Sessions\n8)Store and move FILES\n9)Authentication\n10)PHPMailer to send emails and files\n11) Take Payments With Stripe and Paypal\n\n\nTHIRD PART OF THE COURSE JAVASCRIPT, AJAX and JQUERY INTRO:\nAlthough there will be no separate third part it will be included with the PHP part because we need to do a lot of the things on the website using JavaScript and JQuery. So in this last part, I want to discuss why we are going to use JavaScript and Ajax to finish our project. Although this course is not about learning JavaScript and Ajax you will still learn a lot during this course. So what is AJAX?\nAJAX is an acronym that stands for Asynchronous JavaScript and XML, and it describes a set of development techniques used for building websites and web applications. Ajax's core function is to update web content asynchronously (the \"A\" of AJAX), meaning you will not need to reload an entire web page when only a small portion of the content on that page is updated. \"J\" stands for JavaScript and JavaScript will be used to hide and show notification or messages when we are deleting and saving data. Also, we will display alert messages with the help of JavaScript. Login and registration will be done using JavaScript regular expressions so we can validate input form data before storing it in our database. With the help of Ajax, we will create Ajax dependent dropdown select. Because this is a real project that requires a lot of things to be done, we need to use Ajax and JavaScript in order to keep our design feels and look very modern.\nFinally, we will use Google Maps JavaScript API and Geocoding to display LAT and LNG, search for live places or particular addresses and finally store them into the database. Geo-coding will be used to convert the address that is in our DB into lat and long to display into the map on other pages. Additionally, we will learn how to place a marker, how to make custom icons for marker such as beach flag because I think that adding google maps into any website will make the website look more professional and clean.\n\n\nWhy should you take this course?\nBefore buying any course my recommendation is to look into the specification and curriculum of that course and also look at the project tour or how the application will look like. After reading and watching what has been created by the instructor/instructors then join that course.\n\n\nMy promise to you?\nI will always try to make you happy during the entire course, maybe sometimes over boring but that's me. I know that life is hard on its own and everyone has it's own problems so sharing info about my day and wishing you to be strong and positive is something that I will do in the lectures. It's never about how much money I will make from this course, it's what you will get out of this course. So promise that I will update the course constantly and listen to your requests and desires.\nInfo that you need to know: In some lectures, the cursor pointer of my mouse is not visible but that should not stop you from taking this course, because this is a web development course where you can see me coding and my mouse is not going to be the problem. This is my mistake and is only there in the first part of this journey. My honesty is number one and I want you to know before joining the course. Also, I'm here for you in the Q&A section, we will do everything together and I hope you will enjoy it.\nMy Style\nI like to create things and achieve things that most people think that it's not possible or I'm not able to do this by myself. So don't be the person that will listen to others and never take the step forward. What I suggest is to listen to what your heart & guts tells you and follow them.\nMy Goal\nMy goal is to make you a better programmer/designer and developer so you can get your dream job, get more money, or even start your eCommerce or any other business with my help.\nSo, should you take this course?\nThe answer is a big YES YES YES!\nThe reason is that I packed so much great content into one course and I can easily split this one into 3 smaller courses so I can get more students and money. But that is not the case I want to create one that will stand out.\nCan I make money with PHP and CSS, AJAX, and JavaScript?\nThe answer is yes, the senior PHP developer in Australia can take from 80 to 130 thousand per year.\nPDO PHP is a must programming language for anyone that deals with web development.\nCSS is underestimated and is a true must because as you will see in this course it can be very powerful.\nThe reason why I put this complete course in one is that I know that the entry job is very hard, and they are thousands and thousands like this on job advertisement companies. So look bellow what they require and also what you will learn.\n\n\nSome of the PHP Junior/Graduate or entry Level Web Developer graduate will earn from 50K-70K for the first years:\n\n\nOutline of what they request and want from job applicant: This is a short summary of the skills they want today in 2019/2020.\nFollow Best Practices – Apply the best practices of web design and development using HTML, CSS, JavaScript, etc.\nHave a passion for clean code – Take pride in creating reusable, easy to read, scalable code.\nHave an eye for detail and design\nCSS Preprocessors – Sass, Less or similar\nGood verbal and written communication skills\nCan work independently and problem solve difficult issues on the fly\nExperience with command line\nHighly regarded but not necessary:\nDevelopment experience with other eCommerce platforms\nObject-Oriented Programming – A clear understanding of OOP or experience in any kind of backend development.\nSQL experience – A good understanding of or experience with SQL databases\nExperience with build tools – Gulp, Grunt or similar\nHave a good understanding of Web Accessibility and SEO\n\n\n\n\nAfter all, being said, I hope to welcome you as a new student in my course. I'm sure you're gonna love and enjoy the content because there is so much you can learn from. You will start with zero and end up being a hero!\n\n\nThanks,\nRick",
      "target_audience": [
        "This course has been created to assist students, IT graduates, IT developers at varying levels of expertise that want to upskill in both Advanced CSS and Advanced PHP PDO"
      ]
    },
    {
      "title": "Build Your Own WebServer For Multiple Websites On The Cloud",
      "url": "https://www.udemy.com/course/build-your-webserver-on-the-cloud/",
      "bio": "Learn how to create our own webserver and host multiple websites on the cloud!",
      "objectives": [
        "You will learn everything about Cloud Computing and Virtual Machines",
        "You will learn how to create an Apache Web Server",
        "You will learn how to configure the Web Server to host numerous websites",
        "You will learn how to manage DNS through Route 53 and from the Domain Website",
        "You will learn working of DNS and DNS records and their configuration"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Cloud, AWS and Web Server": [
          "Cloud Introduction",
          "AWS Signup",
          "What are Web Servers?",
          "Web Server Basics"
        ],
        "Launching Instance and Connecting to it": [
          "EC2 Walkthrough",
          "Launch your first EC2 instance",
          "Putty Introduction",
          "Windows - Connect to your instance using Putty",
          "Linux - Connect to your instance using Putty",
          "EC2 and Putty Quiz"
        ],
        "Apache WebServer - Installation and Configuration": [
          "Yum Package Manager",
          "Configure your webserver",
          "Configuration file"
        ],
        "Using our webserver and checking its workings": [
          "Launching Windows Server (client)",
          "Checking WebServer from the client",
          "Configuring Multiple Websites on the webserver",
          "Configuring Virtual Hosts on the Web Server",
          "Uploading your Resume on the Cloud"
        ],
        "Route 53 with EC2": [
          "Domain Mapping in Route 53",
          "Mapping Route 53 to EC2"
        ],
        "Connecting Route 53 with EC2": [
          "Introduction to DNS and Domain Name",
          "Copying files from your PC to the webserver",
          "Configuring Two Websites with Real Domain",
          "Final Testing",
          "Some more information on DNS records"
        ]
      },
      "requirements": [
        "Anyone with a good internet connection",
        "Anyone who wants to learn about webservers or web development"
      ],
      "description": "Being able to build a website is great, but you know what’s better ?\nBeing able to build a website is so common nowadays, if you don't expand your skill set, you're falling behind the pack.\n\nBuilding and operating your own WEB SERVER on the CLOUD and then put MULTIPLE websites on YOUR OWN WEBSERVER ! This single skill can help you distinguish yourself to potential high level, multinational employers and trophy clients. Learning to work on a local webserver is standard at the best IT Jobs, and is going to be expected of by the biggest agency/freelance clients.\n\nManage projects and work within a team in a convenient fashion, and bring your skillet up to the speed Multinational Corporations expect of their developers.\n\nIf you learn this you will NEVER be out of a job.\n\nThe bottom line is this: If you want to make money with development: You NEED to know how to work on, operate, and build a local Webserver.\n\nYou might be thinking,\n\"I don’t know anything about\"\nWebsites\nWeb Servers\nLinux\nCloud Computing\nAWS\nTechnology\nDomains\nBla bla bla\n\n\nStop making excuses.\nNo matter what experience level you are at, this course is going to walk you through all the basics of Cloud Computing, Linux, Amazon AWS and it's services like, EC2, Route 53, Domain Management, DNS and Elastic IP.\n\n\nIT DOES NOT MATTER.\n\n\nIf you're new to technology or just a beginner who just started learning about Linux or Cloud, it doesn't matter.\n\n\nI have made this course SPECIALLY for Beginners and people who want to step in the technology field.\n\n\nNot only is this course cheap (FREE), it will also help you grasp the very basics of Cloud and Linux. By the end of this course you'll have a REAL-LIFE PROJECT to showcase your knowledge... AND you'll be ready to build a Web Server and work on the Cloud!\nThere's no risk to taking this course!\nThis WON'T just be another bunch of words on your resume, you will be able to SHOW the recruiter that not only have your learnt this stuff BUT you also have build something FROM THE SCRATCH and have it on the Internet for everyone to see.\n\nYou will be able to link all your work to clients and or employers!\n\n\nSo what does the course entail?\n\n\nIn this course you're going to learn:\n1. What is a Web Server\n2. How to build and configure your own Apache Web Server\n3. Host one or multiple websites on the Server\n4. Amazon EC2 instances and how to use them\n5. Domain Names and how to manage domains\n6. How to map your own Domain to Route 53 and configure it to your EC2 Instance\n7. How to host numerous website on your OWN Web Server\n8. How to manage DNS settings of your Domain Name\n9. Basics of Linux and Cloud Computing\n10. How to troubleshoot issues with Web Servers\nand much more.\n\n\nBy the end of the course, you will have:\nYour Own Website, Using your Own Domain, On YOUR custom Web Server that you built and configured on the Cloud.\n\n\nStop Making Excuses and Start Taking Actions\n\n\n#Kaizen\n\n\n#SavageCamp",
      "target_audience": [
        "Beginner Linux Enthusiasts",
        "Beginner Cloud Enthusiasts",
        "Anyone who wants to learn about technology"
      ]
    },
    {
      "title": "Object Oriented Programming using C++ from Basic to Advanced",
      "url": "https://www.udemy.com/course/oops-and-c-from-basic-to-advanced/",
      "bio": "Learn OOPS and C++ - Every module feature demonstrated with real-time examples",
      "objectives": [
        "Master principles of Object Oriented Programming",
        "You will be able to comprehend and read C++ source code effortlessly",
        "You will be proficient with the concepts of C++",
        "Practically apply concepts of Object Orientation using C++ language"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and First CPP Program"
        ],
        "Language Features": [
          "Function Overloading and Optional Parameters",
          "Reference Variables",
          "Operator Overloading",
          "Console Input and Output."
        ],
        "OOPS": [
          "Writing Class and Creating Objects",
          "Creating and Destroying Objects",
          "Member Functions and this Pointer",
          "Static Data Members",
          "Static Member Functions",
          "Writing a Singleton Class",
          "Friend Function and Class.",
          "Inline Functions"
        ],
        "Inheritance": [
          "Introduction and Access Specifiers",
          "Constructors in Base and Derived class",
          "Types of Inheritance",
          "Up Casting and Down Casting",
          "Overriding and Virtual Methods"
        ],
        "Polymorphism": [
          "Pure Virtual Function",
          "Virtual Base Class"
        ],
        "IO Streams": [
          "Introduction to Streams",
          "IO Stream Hierarchy in CPP",
          "Introduction to File Handling",
          "FileHandling Text Input Output Operations",
          "File Handling Binary Input Output Operations",
          "Saving Objects in Binary File.",
          "File Handling Errors"
        ],
        "Exception Handling": [
          "Exception Handling",
          "Syntax for try catch and throw",
          "More about try catch and throw statements",
          "Writing and Throwing Custom Exception Class Object.",
          "Stack Unwinding of exceptions"
        ],
        "Templates": [
          "Templates Introduction",
          "Function Templates",
          "Class Templates"
        ],
        "BONUS LECTURE: What Next?": [
          "BONUS LECTURE: What Next?"
        ]
      },
      "requirements": [
        "Student should have knowledge of the C language"
      ],
      "description": "C++ language is a superset of the ‘C’ language and was initially known as “C with Classes”. In \"C\" operator ++ is used to increment the value by 1. That means to the language ‘C’, developers have added some extra features and hence named as C++. C++ is a general purpose programming language and supports object oriented programming features.\nIt is general purpose because it can used to create general systems software, server software, application software, embedded software and also used in creating video games. It is more efficient and fast. It can function both as a high level language and as a middle level language because it supports C & OOPs. It provides many built in features like classes and objects, encapsulation, inheritance, and polymorphism.\nThis Course is compiled by Mr. Sandeep Soni, Microsoft Certified Trainer with experience over 21 years.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nHe is always accessible to all his students anytime for any kind of question they may have. you can send him an email your queries at sandeepsoni@deccansoft.com.\nBy the end of this course you should able to\nUnderstanding about object oriented programming.\nGain knowledge about the capability to store information together in an object.\nUnderstand the capability of a class to rely upon another class.\nLearn how to store one object inside another object\nLearn use of one method can be used in variety of different ways\nUnderstanding the process of exposing the essential data to the outside of the world and hiding the low level data\nCreate and process data in files using file I/O functions\nUndertsand about constructors which are special type of functions\nLearn how to write code in a way that it is independent of any particular type",
      "target_audience": [
        "For those who want to know how to understand OOP methodology with real world examples",
        "Those who want to know why to use OOP in C++",
        "Absolutely essential for engineering and polytechnic students",
        "For those who are comfortable with C and want to learn how to code with OOP and C++",
        "Suitable for those who want to make career in Software Engineering"
      ]
    },
    {
      "title": "Angular 16 & RxJS: Build Modern Single Page Applications",
      "url": "https://www.udemy.com/course/angular-16-rxjs-build-modern-single-page-applications/",
      "bio": "Unlocking Modern Web Development: Mastering Angular 16, RxJS, Responsive Design, and Real-World Projects",
      "objectives": [
        "Master SPAs with Angular 16: Understand and build efficient Single Page Applications using Angular 16.",
        "Apply RxJS in Angular: Learn Reactive Programming with RxJS to manage data flow and state.",
        "Proficient in JavaScript and TypeScript: Enhance JS skills, learn ES6 features, and understand TypeScript.",
        "Effective Development Workflows: Set up a productive dev environment and adopt Angular best practices.",
        "Real-World Projects with Bootstrap: Apply knowledge to projects, integrating Bootstrap for UI/UX enhancements.",
        "Advanced RxJS Techniques: Dive deep into RxJS, mastering advanced concepts and optimization techniques.",
        "Cross-Platform Responsive Design: Ensure applications are responsive and provide a seamless user experience.",
        "Prepared for Real-World Development: Be ready to confidently build, test, and deploy robust Angular applications."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Single Page Application?",
          "Angular vs Other Frameworks",
          "What is RxJS?",
          "What Will You Learn?",
          "Course Materials"
        ],
        "Setup and installation": [
          "VS Code Installation",
          "Settings and Extensions",
          "Node.js and NPM",
          "First Angular App",
          "Folder Structure"
        ],
        "JavaScript, ES6, and Typescript Basics": [
          "Exploring TypeScript: Its Uniqueness vs JavaScript",
          "Variables",
          "Data Types",
          "Functions",
          "Events",
          "This Keyword"
        ],
        "Angular 16": [
          "Create new components",
          "Interpolation",
          "Events",
          "Modules"
        ],
        "Directives": [
          "ngFor",
          "ngIF else",
          "ng switch"
        ],
        "Routing": [
          "Basic Routing in angular",
          "Dynamic Routing",
          "Component interaction"
        ],
        "Project": [
          "Project Part-1",
          "Project Part-2"
        ],
        "Third-Party Library": [
          "Using Bootstrap in Angular",
          "Navbar using Bootstrap",
          "ng Bootstrap"
        ],
        "Diving into RxJS": [
          "What is RxJS and Key Points",
          "Why use RxJS in Angular?",
          "RxJS Setting",
          "Promise",
          "Observables",
          "Operators",
          "Observable Childs",
          "Interval Subscription",
          "OF Operator"
        ],
        "RxJS Subjects": [
          "Subject",
          "Subject Behavious",
          "Subject Behavious Exercise",
          "ReplySubject"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge: Learners should have a fundamental understanding of programming concepts and syntax.",
        "Understanding of HTML, CSS, and JavaScript: Since Angular is a web development framework, a basic grasp of HTML, CSS, and JavaScript is essential.",
        "Familiarity with Node JS and npm: Node JS and npm (Node Package Manager) are used for Angular development. Basic knowledge of installing packages and running commands is required.",
        "Visual Studio Code Installed: The course uses Visual Studio Code as the primary code editor. Learners should have it installed on their computers.",
        "Stable Internet Connection: A reliable internet connection is needed to install packages, access documentation, and follow along with the video lessons.",
        "Willingness to Learn: Angular and RxJS have a steep learning curve, so a commitment to learning and practicing is crucial.",
        "Problem-Solving Skills: Basic problem-solving skills will help learners effectively understand and implement the course content."
      ],
      "description": "Embark on a comprehensive journey through the realms of modern web development with our intensive course! Tailored for developers and IT professionals, this course demystifies the complexities of developing Single Page Applications (SPAs) using Angular 16, one of the most popular and powerful web development frameworks today.\nDive deep into the core principles of SPAs and understand why Angular stands out from other frameworks, gaining insights that will help you make informed decisions in your projects. We cover everything from setting up your development environment in Visual Studio Code, to the intricacies of TypeScript, ensuring that you have a solid foundation to build upon.\nOur hands-on approach means you’ll be writing code from day one. Explore JavaScript, ES6, and TypeScript basics, learning how these technologies come together to create robust web applications. You'll grasp essential programming concepts, understand data types, functions, events, and master the use of the \"this\" keyword.\nAngular 16 brings a plethora of features and improvements, and you’ll learn how to leverage them to create highly interactive and responsive web applications. From creating components to understanding directives, routing, and component interaction, you’ll acquire the skills to handle complex development challenges.\nRxJS and reactive programming are at the heart of Angular. This course offers an in-depth exploration of RxJS, teaching you how to manage asynchronous operations and data flow like a pro. You’ll work with Observables, Operators, and Subjects, unlocking patterns and techniques that are key to building high-performance applications.\nWe’ll integrate third-party libraries like Bootstrap, enhancing the visual appeal and responsiveness of your applications. Through real-world projects, you’ll apply your learning, reinforcing concepts, and building confidence in your abilities.\nBy the end of this course, you’ll have a comprehensive understanding of Angular 16, RxJS, and the best practices in modern web development, poised to tackle complex projects and create seamless, efficient web applications. Join us and transform your development skills to meet the demands of today’s web development landscape.",
      "target_audience": [
        "Front-End Developers: Individuals with a background in front-end development who are looking to specialize in Angular 16 and want to leverage RxJS for reactive programming will find this course invaluable.",
        "Full-Stack Developers: Developers who work on both the front-end and back-end and are looking to streamline their workflow with Angular’s comprehensive framework.",
        "Software Engineers: Professionals seeking to broaden their expertise in modern web development frameworks and reactive programming concepts.",
        "DevOps Engineers and SREs: Individuals in these roles who want to understand how to build and maintain scalable and efficient Angular applications.",
        "Aspiring Developers: Beginners and students who have a basic understanding of programming, HTML, CSS, and JavaScript, and are looking to advance their skills in a sought-after technology stack.",
        "UI/UX Designers with a Coding Background: Designers who wish to translate their design skills into interactive and dynamic web applications.",
        "Technical Leads and Managers: Decision-makers who wish to stay updated with current technologies to make informed choices about the tools and frameworks used in their teams.",
        "Freelancers and Independent Contractors: Professionals looking to expand their service offerings and compete in a market that demands proficiency in modern web frameworks."
      ]
    },
    {
      "title": "Wordpress Plugin Development with React.js (2021)",
      "url": "https://www.udemy.com/course/wordpress-plugin-development-react/",
      "bio": "How to code a plugin for Wordpress with React.js",
      "objectives": [
        "Wordpress plugin development with React",
        "Develop a Wordpress Plugin",
        "Add React to Wordpress",
        "Create a React component",
        "Create functions inside a React component",
        "Link a template to a React component",
        "Add javascript libraries to a React component"
      ],
      "course_content": {
        "Introduction": [
          "Introduction with Wordpress",
          "Create our first plugin",
          "Display our plugin with shortcode",
          "Import React to Wordpress",
          "Create our template",
          "Create our first React Component",
          "How to design our plugin: Bootstrap, Tailwindcss & Material design",
          "Final component logic & design with React",
          "Thank you very much !"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Wordpress Plugin Development with React\nThis course aims you to teach you how to code your own plugin on a Wordpress website. We are going to learn together how to start, how to activate our plugin and how to change our content dynamically.\nAt the end of this course, i'll provide you the entire plugin as files to use.\nWhat is React?\nReact is an open-source JavaScript library that is used for building user interfaces specifically for single-page applications. It's used for handling the view layer for web and mobile apps. React also allows us to create reusable UI components.\nWhy React?\nReact allows developers to create large web applications that can change data, without reloading the page. The main purpose of React is to be fast, scalable, and simple. It works only on user interfaces in the application.\nFirst JavaScript framework on market right now,\nEasy to learn,\nImportant amount of packages to use,\nBiggest community of JS frameworks,\nVarious documentation and help to find,\nMost chosen library/framework in JavaScript,\nThe use of reusable, composable, and stateful components,\nThe nature of reactive updates...\nYou understand now why React can be a powerful ally. There are many other reasons to use it but the main one: it's the most common framework asked on job market.\n\"When React was first introduced, it fundamentally changed how JavaScript frameworks worked.\" Eric Elliott\nSo if you are looking for an efficient course to learn how to code your Wordpress plugin with React, you are at the right place.",
      "target_audience": [
        "beginners"
      ]
    },
    {
      "title": "Next.js 15 & Firebase",
      "url": "https://www.udemy.com/course/nextjs-firebase/",
      "bio": "Build a Real Estate App with Next.js 15 + Firebase (with Firestore, Auth, Storage, User Roles, TypeScript, Zod + more!)",
      "objectives": [
        "Increase your value and improve your knowledge as a web developer",
        "Implement Secure Authentication with Firebase Auth",
        "Build and Manage Databases with Firebase Firestore",
        "Store and Manage files with Firebase Cloud Storage",
        "Master the integration of TypeScript, shadcn/ui, Tailwind CSS, Zod, and React Hook Form to build robust, type-safe, and user-friendly applications",
        "Protect specific routes to ensure that only authenticated users have access to certain parts of their application"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Introduction",
          "Important! Please read this before you start the course! (GitHub repo etc)",
          "Udemy ratings and reviews",
          "How this setup differs from traditional React + Firebase apps",
          "Overview of stack + helpful tools for this course",
          "Set up Next JS project",
          "Set up Firebase project",
          "Connect Next JS to Firebase"
        ],
        "Build the Login with Google functionality": [
          "Add the navbar with auth links",
          "Install shadcn ui and add login with Google",
          "Create auth context and display logged in user",
          "Add logout functionality",
          "Improve navbar styling",
          "Improve login page styling",
          "Add the current user dropdown to the navbar"
        ],
        "Build the admin functionality and dashboard": [
          "Add the admin role to a user and save auth tokens in cookies",
          "Conditionally render user profile menu items",
          "Add the admin dashboard page + route protection with Next JS middleware",
          "Build the admin dashboard main page",
          "Create the New Property page",
          "Create the new property form schema",
          "Create PropertyForm component and start building form UI",
          "Finish rendering the PropertyForm fields",
          "Create the saveNewProperty server action and save data to firestore",
          "Improve the UI when submitting the new property form",
          "Query for properties data",
          "Render the properties list in a table",
          "Calculate the total pages for a firestore query",
          "Render the pagination buttons under the properties table",
          "Create the edit property page",
          "Create the edit property form",
          "Create the updateProperty server action",
          "Add route protection for all admin-dashboard routes and auth pages",
          "Improve the styling of the properties table"
        ],
        "Build the image uploads functionality": [
          "Create the image uploader component",
          "Store selected images in the form state",
          "Render the images list",
          "Implement reorder and delete images",
          "Implement upload images to firebase storage for new properties",
          "Load existing uploaded images into the edit property form",
          "Implement upload + delete images when updating a property"
        ],
        "Build the property preview pages": [
          "Create the property page and render the description as markdown",
          "Render the property details",
          "Render the property images carousel and back button"
        ],
        "Build the property search page and functionality": [
          "Create the property search page and search filters",
          "Hook up the search filters to the URL and create firestore indexes",
          "Render the filtered property list",
          "Add the pagination buttons for property search"
        ],
        "Build the login and register with email + password functionality": [
          "Create the register form schema",
          "Render the register form UI",
          "Create the register user server action",
          "Build the login with email and password form",
          "Improve validation and errors for login and register",
          "Update the middleware to cater for expiring auth tokens"
        ],
        "Build the favourites functionality": [
          "Add the my-favourites page and toggle favourite button",
          "Implement the add to favourites functionality",
          "Implement the remove from favourites functionality",
          "Implement parallel and intercepting routes for login modal",
          "Render the login form in the login modal",
          "Query for the list of favourites",
          "Render the list of favourites in the my-favourites page",
          "Implement the favourites table pagination and remove favourite"
        ],
        "Build the my account section": [
          "Add the account page and render user details",
          "Implement change password form",
          "Implement delete account functionality",
          "Delete user favourites on account deletion",
          "Implement forgot password functionality"
        ],
        "Extras": [
          "Enable caching for property pages",
          "Add loading states to app",
          "Build the landing page (optional)",
          "Implement delete property functionality",
          "Deploy to vercel",
          "BONUS!"
        ]
      },
      "requirements": [
        "Willingness to Learn and Experiment: A proactive attitude and eagerness to explore new technologies, such as Firebase, TypeScript, and database management, will help students get the most out of the course",
        "A basic understanding of React is required, as the course builds upon React concepts and integrates them with Next JS",
        "Familiarity with Node and NPM is recommended for managing dependencies and running development environments"
      ],
      "description": "Take your web development skills to the next level! In this course we’ll build Fire Homes, a fully functional real estate application for a fictional real estate agency. By combining the power of Next.js 15 and Firebase, you’ll gain real-world experience building modern, scalable applications with cutting-edge tools.\nThis course covers everything you need to know to build a professional grade app, including authentication, cloud storage, and a Firestore powered database.\nWhat You’ll Build:\nA complete real estate app packed with the following features:\nUser Roles: Support for admin and non-admin users, with role-specific functionality.\nAuthentication: Log in or register using email/password or Google authentication.\nAdmin Dashboard: Manage property listings (add, delete, and update) through an intuitive interface.\nCloud Storage: Upload and manage property images with Firebase Cloud Storage.\nFirestore Database: Store and retrieve property data.\nProperty Search: Help users find their perfect home with search functionality.\nFavorites: Allow non-admin users to save and manage their favorite properties.\nWhat You’ll Learn:\nNext.js 15: Build modern web applications with the latest App Router.\nTypeScript: Write clean, maintainable, and error-resistant code.\nZod for Validation: Ensure data integrity with powerful validation tools.\nNext.js Server Actions: Simplify server-side functionality with cutting-edge features.\nFirebase Integration:\nFirestore: Use Firestore to store and retrieve data.\nAuthentication: Securely log in users using Firebase Auth.\nCloud Storage: Handle image uploads and organization seamlessly.\nRole-Based Access Control: Implement robust user management with tailored functionality for admins and regular users.\nCRUD Operations: Create, read, update, and delete property listings in Firestore.\nUser-Focused Features: Add search and favorites for an engaging user experience.\nWho Is This Course For?\nAspiring Developers: Learn to build your first full-stack app with Next.js and Firebase.\nIntermediate Web Developers: Gain deeper knowledge of scalable app development.\nCareer Switchers: Build a portfolio project that demonstrates modern web development skills.\nWhy Enroll in This Course?\nThis course isn’t just about coding - it’s about understanding the thought process behind building scalable, efficient apps. By the end of the course, you’ll have a production-ready app and the confidence to tackle your own projects.\nTools You’ll Use:\nNext.js 15 (App Router)\nTypeScript\nZod\nFirestore Database\nFirebase Authentication & Cloud Storage",
      "target_audience": [
        "This course is ideal for web developers who want to increase their value as a web developer and enhance their skills in building websites and apps using modern tools and technologies like Next JS 15 and Firebase"
      ]
    },
    {
      "title": "Hands-On React Bootcamp: Build 30 Real World Projects",
      "url": "https://www.udemy.com/course/hands-on-react-build-real-world-react-projects/",
      "bio": "Learn React Programming: Develop Web Applications Using Socket, REST APIs, Firebase, React Hooks, Bootstrap, React.js",
      "objectives": [
        "Learn To Create Real World React Projects",
        "Learn how to create React Components, React Forms",
        "Learn and understand what is React and how it works",
        "See the step-by-step process of designing and assembling an advanced project",
        "Manage a projects using a package-based architecture",
        "Create portfolio of real- world projects on one of the most in-demand web development technologies"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of React"
      ],
      "description": "React uses declarative instead of imperative syntax. It’s a simpler way of developing apps, and you can learn why here.\nBasically, React is faster to develop with because you don’t need to tell the app how to represent the state — you just need to say what you’d like to happen. It’s quick, it’s easy, and there’s less room for human error.\nYou may have heard of the phrase “Write once, run anywhere” before. React Native brings that kind of philosophy to React with “Learn once, write anywhere”.\nOnce you understand the basic architecture and thinking behind React, you’ll be able to develop fully functioning apps for both Android and iOS. You won’t have to learn two different ways to represent your app. So after you learn React, you can bring your new product to users not just as quickly as possible, but as widely as possible.\nReact has a massive community of dedicated developers. The community helps to maintain and grow the open-source library, with everyone able to contribute their own components to the library.\nThe community is also so strong because of the great tools you can work with in React, including React Profiler and React devtools.\nReact saves you time and money on development because it’s component-based. You can break down an interface into reusable components that allow you to build dynamic user interfaces.\nThis taps into the current thinking behind ‘Design Systems’. These enable developers to provide a single source of truth for designers, ensuring consistency for large companies working across multiple tech platforms.",
      "target_audience": [
        "Beginners in React"
      ]
    },
    {
      "title": "Learning Bootstrap 3 - Tutorial From Infinite Skills",
      "url": "https://www.udemy.com/course/bootstrap-3/",
      "bio": "A Beginners Course",
      "objectives": [
        "Learn How To Use Bootstrap From An Expert"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 Introduction To Bootstrap",
          "0102 What To Expect",
          "0103 The Site Build Plan",
          "0104 How To Access Your Working Files"
        ],
        "Setting Up Bootstrap": [
          "0201 Examining The Framework Files",
          "0202 Documentation Overview"
        ],
        "The Grid System": [
          "0301 Using Containers",
          "0302 Coding Rows And Columns In HTML",
          "0303 The Grid",
          "0304 Controlling The Grid Across Devices",
          "0305 Column Offsets",
          "0306 Using Nested Columns",
          "0307 Column Ordering"
        ],
        "Responsive Helpers": [
          "0401 Responsive Images",
          "0402 Responsive Utility Classes",
          "0403 Media Queries and Breakpoints"
        ],
        "Site Structure": [
          "0501 Building A NavBar",
          "0502 Fixing The NavBar To The Top Of The Browser",
          "0503 NavBar Dropdowns",
          "0504 Building the Intro Section",
          "0505 Building The Marketing Panel",
          "0506 Button Options",
          "0507 Building The Info Panel",
          "0508 Block Quote",
          "0509 Togglable Tabs",
          "0510 Glyphicons",
          "0511 Building The Footer",
          "0512 Using Custom Typography"
        ],
        "The Home Page": [
          "0601 Image Carousel",
          "0602 Carousel Navigation",
          "0603 Four Column Grid"
        ],
        "The Blog Page": [
          "0701 Setting up the grid structure",
          "0702 Adding the blog entries",
          "0703 Pagination Component",
          "0704 Search Box Inline Form",
          "0705 Using List Groups",
          "0706 Media Component"
        ],
        "The Clients Page": [
          "0801 Setting The Grid",
          "0802 Thumbnails",
          "0803 Tooltips",
          "0804 Collapse Panels"
        ],
        "The Contact Page": [
          "0901 Setting The Grid",
          "0902 Adding a Google Map",
          "0903 Horizontal Forms",
          "0904 Modals",
          "0905 Building The Sidebar"
        ],
        "Customizing Bootstrap": [
          "1001 Customizing The Download",
          "1002 Customizing Colours",
          "1003 Starter Templates"
        ]
      },
      "requirements": [
        "Mac or PC"
      ],
      "description": "This Bootstrap 3 training course from Infinite Skills shows you how to use this front end framework to design a website. Bootstrap is easy to use and allows a designer to specify exactly how the site will look and behave on a number of different displays, including mobile, desktop, and tablet. To get the most out of this tutorial you should already have a fundamental understanding of HTML, CSS, and JavaScript.\n\nYou will start the course by learning about the grid system, including how to use containers, nested columns, and column offsets. You will move into learning about the site structure, following along with the course as it teaches you how to build a NavBar, build the intro section, info panel, and more. This video tutorial will also teach you how to set up the home page, blog page, client page, and contact page. Finally, the course will show you how to customize the Bootstrap download and customize colours.\n\nOnce you have completed this computer based training course, you will have a solid understanding of how to design a website with Bootstrap 3, and be able to apply this knowledge to your own web development projects. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Web Designers and Developers"
      ]
    },
    {
      "title": "PHP Essentials: Deep dive into the Principles of PHP",
      "url": "https://www.udemy.com/course/php-essentials-deep-dive-into-the-principles-of-php/",
      "bio": "Learn PHP Syntax, MySQL, Array Handling, and Form Processing",
      "objectives": [
        "Master PHP syntax, control structures, and scripting",
        "Learn advanced array and string operations in PHP.",
        "Acquire skills in web form handling and data validation.",
        "Gain expertise in MySQL database integration and management."
      ],
      "course_content": {
        "Introduction": [
          "Introduction of PHP",
          "Installation of XAMPP SERVER",
          "PHP Syntax",
          "Source Codes"
        ],
        "Data Types, Variables, and Operators": [
          "Data Types",
          "Constant variables",
          "Arithmetic Operator",
          "Assignment Operator",
          "Logical Operators"
        ],
        "Basics Of PHP": [
          "If statement",
          "If else if statement",
          "While Loop",
          "Do while Loop",
          "For Loop",
          "Functions",
          "Types of Strings"
        ],
        "Arrays methods": [
          "Arrays method",
          "Count and sizeoff array",
          "If else with arrays",
          "Search array (",
          "Slice and splice",
          "Reduce",
          "Array fill and array fill key",
          "Printing Methods"
        ],
        "POST and GET": [
          "Form Validation with GET method",
          "POST method",
          "Input Radios"
        ],
        "MySQL": [
          "MySQL",
          "MySQL table structure database",
          "Config. File"
        ],
        "Queries and Project": [
          "Update and Delete Query",
          "Form UI",
          "Establish form connection with DB",
          "Submitting Form in DB",
          "Users Data",
          "Updating users"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "BONUS Section - Don't Miss Out": [
          "BONUS Section - Don't Miss Out"
        ]
      },
      "requirements": [
        "Basic computer skills, internet access, eagerness to learn web development. No prior programming experience required."
      ],
      "description": "Dive into the dynamic world of web development with our comprehensive course, 'PHP Essentials: Web Development & MySQL Mastery'. This meticulously designed program caters to both beginners and intermediate learners, offering a deep dive into the fundamental principles of PHP, one of the most popular server-side scripting languages.\nThe journey begins with an introduction to PHP, paving the way for essential tools such as the installation of XAMPP SERVER and an exploration of PHP syntax. Our step-by-step approach ensures a solid foundation, paving the way for more advanced concepts.\nDive into the heart of PHP by tackling crucial topics such as data types, variables, and operators. Understand the importance of constant variables, arithmetic, assignment, and logical operators in PHP programming. This section is essential for mastering the syntax and logic of the language.\nThe course then transitions into the 'Basics of PHP', where learners engage with conditional statements (If, Else If), loops (While, Do While, For), and the construction of functions. These elements are vital in building dynamic and responsive web applications. Additionally, the module on 'Types of Strings' offers insights into efficient data handling and manipulation.\nA significant portion of the course is dedicated to 'Array Methods'. Here, you'll learn about array manipulation techniques including count, sizeoff, searching, replacing, slicing, splicing, and more. These skills are indispensable for data management in PHP.\n'POST and GET' methods form the backbone of data submission and retrieval in web forms. Our focused sessions on form validation using GET, POST methods, and handling input types like radio buttons, equip you with the skills to manage user inputs securely and effectively.\nMySQL integration is another cornerstone of this course. You'll gain expertise in MySQL database management, table structure, configuration, and executing basic to advanced database operations.\nThe course culminates in a project-based module, 'Queries and Project', where you'll apply your skills in real-world scenarios. This includes database updates, form UI design, database connections, and user data management.\nConcluding with a review and forward-looking insights, this course empowers you with the knowledge and skills to excel in PHP and MySQL, opening doors to numerous opportunities in web development. Enroll now to start your journey towards becoming a proficient PHP developer with a solid understanding of MySQL database management.",
      "target_audience": [
        "No prior coding experience needed; access to a computer with internet and willingness to learn PHP and MySQL essentials."
      ]
    },
    {
      "title": "Build a Crypto Currency Portfolio App With Ruby on Rails",
      "url": "https://www.udemy.com/course/build-a-crypto-currency-portfolio-app-with-ruby-on-rails/",
      "bio": "How To Use An API To Get Crypto Currency Data With Ruby On Rails",
      "objectives": [
        "Build Web Apps With Ruby On Rails",
        "Build Your Own Crypto Currency Website",
        "Setup and Use A Cloud Environment",
        "Understand Basic Terminal Commands",
        "Push Code To Github",
        "Host Web Apps On Heroku",
        "Understand the Bootstrap CSS Framework",
        "Use Databases with Ruby on Rails",
        "Connect To a 3rd Party API",
        "Understand Basic Ruby Loops"
      ],
      "course_content": {},
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "Ruby on Rails can seem overwhelming at first, but it doesn’t have to be! In this course I’ll walk you through it step by step and you’ll be building your first web app in MINUTES. You’ll be amazed how quick and easy it is to create very professional looking websites, even if you have no programming or web design experience at all.\nWatch over my shoulder as I build a cool Crypto Currency Portfolio app step by step right in front of you. You’ll follow along and build your own copy. By the time we’re finished, you’ll have a solid understanding of Ruby on Rails and how to use it to build awesome web apps.\nThis course is aimed at the absolute beginner, you don't need any coding experience at all!\n\nThe course contains 47 videos – and is just over 3 hours long. Watch the videos at your own pace, and post questions along the way if you get stuck. You don’t need any special knowledge or software to take this course, though any experience with HTML or CSS is a plus. You don’t even need to know the Ruby programming language. I’ll walk you through EVERYTHING.\nRuby on Rails is a great web development tool and learning it has never been this easy.\nWhat We'll Build...\nWe'll build a cool Crypto Currency Portfolio app that let's you look up crypto quotes and price information and save it to a database.\nUsers can create an account and sign up to your website, log in, add crypto currencies and coins, check current prices and all kinds of other cool things.\nWe'll style the website using the popular Bootstrap CSS framework (I'll show you how to use it!)\nIf you're into crypto-currencies like bitcoin, ripple, ethereum, ada, xlm, or any others; this course will be a LOT of fun. But even if you aren't into crypto stuff, this course will still be a lot of fun and you'll learn a lot of core Ruby on Rails things.\nSign up today and I'll see you on the inside!\n-John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn Ruby On Rails for Web Development",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "Microservices with Python : Build scalable Systems",
      "url": "https://www.udemy.com/course/microservices-with-python-build-scalable-systems/",
      "bio": "Learn the art and science of microservices based product development and deployment",
      "objectives": [
        "Learn to build microservices based apps in Python",
        "Master flask framework",
        "Learn to plan your next project in terms of light weight services",
        "Learn deployment of Microservice based application"
      ],
      "course_content": {
        "Introduction to Docker": [
          "Course Introduction",
          "Monolithic Approach and its Problems",
          "Microservices Architecture",
          "Docker Introduction",
          "Docker Image and Container Demo"
        ],
        "The First Microservice": [
          "Introduction - User API",
          "Development Environment",
          "Blueprints",
          "User Model",
          "Flask Login",
          "Getting All Users",
          "Creating Users",
          "Logging In",
          "Logout Verify and Exists"
        ],
        "The Product Microservice": [
          "Introduction - Book API",
          "Development Environment and App",
          "Routes",
          "Create Models",
          "Initializing the database",
          "Creating Book",
          "Retrieving Books"
        ],
        "The Order Microservice": [
          "Introduction - Order API",
          "App.py File",
          "Routes Skeleton",
          "Create Models",
          "Calling User API",
          "Creating Order",
          "Open Order and Checkout",
          "Testing Order service"
        ],
        "The Frontend Microservice": [
          "Frontend - Initial Configuration",
          "User API",
          "Book and Order API",
          "Index Route",
          "Templates",
          "Form Classes",
          "Register",
          "Login Logout",
          "Book Details",
          "Basket Count",
          "Finalizing the App"
        ],
        "Deployment": [
          "Preparing Services",
          "Creating Images",
          "Creating Containers",
          "Deployment using Docker Compose"
        ]
      },
      "requirements": [
        "Basic knowledge of python is sufficient to complete the course"
      ],
      "description": "Upskill with microservices with Python & Docker from scratch by building practical projects!\nMicroservices are important for improving your app’s resilience. With microservices, you can also improve development time, scalability, testing, and continuous delivery. The knowledge of microservices will also make debugging & maintenance simple for your app. And for this, we have brought this online course that will help you in upskilling with microservices with Python & Docker. You will learn how to use Docker for creating a microservice-based application by employing Python & Flask.\nImportance Of Microservices With Python?\nAllows you to break up your apps into smaller parts that communicate with each other.\nIt makes it simple to scale the application.\nMakes it easy to work on just one part of the app at a time.\n\n\nHow This Course Can Help You?\nThis course is suitable for individuals looking to upskill with the concept of microservice with Docker & Python language. It is a beginner-level course, but familiarity with technologies like Focker, Python & Flask is recommended for hassle-free learning. You will learn all the topics revolving around microservices with its practical-oriented approach.\nAs this course will unfold, you will work with several projects that will train you for employing & creating microservices for real-life applications. Initially, you will learn the basics of Docker & microservices, then it will give you insights into Docker images, microservices design & development, ports mapping, and building a microservices-based e-commerce application using Python and Flask. In the end, you will understand how to deploy microservices.\nMajor Topics That You Will Learn\n\n\nMicroservices- benefits, challenges & best practices\nEnvironment & database setup\nCreating applications\nProduct microservice\nOrder microservice\nFrontend microservice\nDeployment\nGet started today to master the concepts of microservices from the ground up!",
      "target_audience": [
        "Anyone who wants to build large scale microservices based application will find this course very useful"
      ]
    },
    {
      "title": "Python Mastery for Beginners",
      "url": "https://www.udemy.com/course/python-mastery-for-beginners/",
      "bio": "Exploring Python: Fundamentals, Data Types, Functional Programming, Projects, Logical Skills, Coding in Python",
      "objectives": [
        "Grasping the core python fundamental concepts needed for industry",
        "Getting ready for upgradation in technology",
        "Presenting answers during interviews",
        "Communicating clearly and briefly during interviews and when explaining about technology"
      ],
      "course_content": {
        "Introduction to course": [
          "Lets Begin !!!!"
        ],
        "Python Simplified: A Beginner's Introduction": [
          "Simplicity of Python: Effortless Programming!",
          "What is Python and Why choose it?"
        ],
        "Setting Up Python: Installation and Code Editor Basics": [
          "Python Installation Guide: Step-by-Step Tutorial"
        ],
        "Diving into Python: Understanding Variables": [
          "Variables In Python"
        ],
        "Unlocking Python's Power: Exploring Built-in Functions": [
          "Id, Type, and Print Function.",
          "input Function",
          "eval function",
          "Print Function"
        ],
        "Python Naming: Exploring Identifiers": [
          "Identifiers Explanation and Rules to Define"
        ],
        "Python Naming: Exploring Keywords": [
          "Keywords in python"
        ],
        "Cracking the Code: Unveiling Python Primitive Data Types": [
          "Data types of Introduction",
          "Integer Data type",
          "Float Data type",
          "Boolean Data type"
        ],
        "String Data Type": [
          "What is String?",
          "Memory Representation in String",
          "Indexing on String",
          "Slicing on String",
          "Positive Step Value",
          "Negative Step Value"
        ],
        "List Data type": [
          "What is List ?"
        ]
      },
      "requirements": [
        "No particular logical skills necessary",
        "No prior programming knowledge necessary",
        "No specific qualifications required",
        "No need for specific logical abilities",
        "No programming background required",
        "No formal qualifications needed"
      ],
      "description": "In this course, we'll take a deep dive into Python, a super cool programming language. Whether you're new to coding or have some experience, this course will guide you through Python's basics with simplicity and clarity.\nWe'll start by getting to know Python and how it works. You'll learn the ABCs of coding, like how to tell Python what to do and when to do it. We'll then move on to explore different types of data—like numbers, words, and lists—and discover how to manipulate them to make our programs do awesome stuff.\nAs we journey further, we'll uncover the magic of functional programming. This fancy term simply means we'll learn how to write code in a neat and organized way, making it easier to understand and modify later on.\nBut wait, there's more! We'll embark on a fun project together, where you'll get to flex your Python muscles and build something cool from scratch. Through hands-on practice and real-world examples, you'll see how Python can bring your ideas to life.\nAnd that's not all! Along the way, we'll sharpen our problem-solving skills. We'll learn how to break big problems into smaller, more manageable pieces, making it easier to solve them one step at a time.\nMoreover, you'll discover the joy of collaboration as we engage in discussions, share tips and tricks, and learn from each other's experiences. The course isn't just about coding—it's about building a supportive community that encourages growth and learning.\nAdditionally, you'll gain valuable insights into the world of computer science and how Python fits into the bigger picture. You'll learn about different career paths in tech and get inspired to explore new opportunities.\nFurthermore, you'll have access to a wealth of resources, including interactive quizzes, and helpful articles, to reinforce your learning and keep you engaged throughout the course.\nBy the end of this journey, you'll feel like a Python pro, ready to tackle more advanced challenges and explore the endless possibilities of coding. So, grab your keyboard, and let's get started on this exciting adventure!",
      "target_audience": [
        "Perfect for beginners and experienced folks",
        "Great for both working and unemployed people",
        "Helps with switching careers or starting a new job",
        "Can boost your earnings by crackng Interviews",
        "Provides a path for personal development"
      ]
    },
    {
      "title": "React 101 - basics complete & latest. Forms, routing, async",
      "url": "https://www.udemy.com/course/gbarkhatov-react-basics-complete-latest/",
      "bio": "Learn React 17 and everything related to it: npm, create-react-app, jsx, props, events, state, styling, git, publishing",
      "objectives": [
        "Build and understand react web apps",
        "Get a react job (freelance, office)",
        "Create a portfolio with 6+1 react apps",
        "Master the react philosophy"
      ],
      "course_content": {},
      "requirements": [
        "A computer (Windows, Linux, macOS) with browser (Chrome, Firefox, Safari, etc.)",
        "Basics of HTML, CSS, JavaScript"
      ],
      "description": "This course is fully updated to React 17!\nReact is the most popular web library for creating user interface. The amount of jobs and projects related to React is enormous. And not for nothing! React is simple enough to learn and does not impose a rigid framework on you. You decide what you want and how you will do it!\nMy name is Govard Barkhatov and I am a react developer with a huge experience (over 5000+ hours). Unlike most Udemy instructors, I work with real-world react projects. I have not only theoretical but also practical knowledge.\n---\nYou will create 6 different applications, including one right in the theoretical chapter (Async & API):\nTic-tac-toe game\nLanding page\nTodo list\nUser management application\nBlog\nRobots telling jokes about Chuck Norris\nPeople in space application\n---\nHere's what you find in this course:\nWork with react with and without JSX\nPass Props and use Events\nUse State and work with Lifecycle methods\nUnderstand most of the styling approaches. Choose between CSS and JS path of doing things\nCreate React components from arrays of data using Lists and Keys\nWork with controlled and uncontrolled forms\nUnderstand how routing works and get the control over browser URL\nCommunicate with the outer world using Async & API\nUse Git to control and publish your application to the web!\n---\nIn this course you will get all you need to understand everything related to react and position yourself as a react developer.",
      "target_audience": [
        "Anyone who wants to build react applications",
        "Web developers with basic or no knowledge of react",
        "Developers that want to get inside the react web apps mindset",
        "Managers to have the knowledge of how react applications are built",
        "Students having issues with web development or react"
      ]
    },
    {
      "title": "Coding for Visual Learners: Learning JavaScript from Scratch",
      "url": "https://www.udemy.com/course/coding-for-visual-learners-learning-javascript-from-scratch/",
      "bio": "Learn to code from scratch in a visual and beginner-friendly manner using the popular programming language JavaScript.",
      "objectives": [
        "Learn how to code using the vastly popular programming language JavaScript.",
        "Learn how to use the programming library p5js.",
        "Understand the fundamentals of programming.",
        "Learn about common programming structures."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Learn JavaScript?",
          "Learning JavaScript With p5.js",
          "Section 1 - Quiz"
        ],
        "Getting Started": [
          "Environment Setup",
          "Getting Started With JavaScript",
          "Variables",
          "Data Types in JavaScript",
          "Getting Started with p5.js",
          "Coordinate System in p5.js",
          "Section 2 - Quiz",
          "Section 2 - Assignment"
        ],
        "Colors": [
          "Color Functions in p5.js",
          "Setting the Color of the Shapes",
          "Section 3 - Quiz",
          "Section 3 - Assignment"
        ],
        "Operators and Variables": [
          "Operator Precedence",
          "Variables Continued",
          "Variable Scope",
          "Predefined Variables in p5.js",
          "Section 4 - Quiz",
          "Section 4 - Assignment"
        ],
        "Conditional Statements and Comparison Operators": [
          "frame, frameRate, frameCount",
          "Conditionals",
          "'else' Block",
          "Section 5 - Quiz",
          "Section 5 - Assignment"
        ],
        "More p5.js Variables": [
          "mouseIsPressed",
          "mouseX & mouseY",
          "Section 6 - Quiz",
          "Section 6 - Assignment"
        ],
        "Loops": [
          "'for' Loop",
          "Nested Loops",
          "random Function",
          "noise Function",
          "Section 7 - Quiz",
          "Section 7 - Assignment"
        ],
        "Functions": [
          "Creating Functions",
          "'return' Keyword",
          "Section 8 - Quiz",
          "Section 8 - Assignment"
        ],
        "Objects": [
          "Introduction to JavaScript Objects",
          "Object Methods & 'this' Keyword",
          "Constructor Functions",
          "Section 9 - Quiz"
        ],
        "Arrays": [
          "Working with Arrays",
          "Array.length Property",
          "Remainder Operator",
          "Section 10 - Quiz",
          "Section 10 - Assignment"
        ]
      },
      "requirements": [
        "No prior coding experience is required! You just need a computer with internet access."
      ],
      "description": "Learning how to code can be challenging. It is hard to find good resources that are relevant, practical and engaging at the same time. This course teaches coding from scratch in a visual and beginner-friendly manner using the vastly popular programming language JavaScript and a programming library called p5.js.\n\nThe emphasis of the course will be primarily on learning programming using JavaScript and p5.js and secondarily in creating visuals. The main focus is to teach you how to program so that you can choose to pursue whatever field that you would like with your newly established skill set. The skills that you will acquire from this course are highly transferrable and could be used whatever you choose to build; whether web or mobile applications, programmable robots or generative art.\n\nThis means that I will provide you with enough context so that you can build a strong foundation for programming. But I also won’t hinder your momentum with irrelevant technical or theoretical points. The aim is to build a strong but a minimum viable knowledge to get you running with coding. This is the course that I wished I had available when I was learning coding myself.\nYou will be building several useful and fun programs that does animation and visualizations and as a final project, you will be building an interactive game that can be deployed online!\nIf you are looking to learn coding in a fun and an engaging manner, then this is the course for you!",
      "target_audience": [
        "Anyone who wants to learn to code. This course is not for experienced programmers.",
        "People who want to learn JavaScript from scratch.",
        "People who prefer fun and engaging examples when learning a new skillset.",
        "Designers, artists and visual learners who want to learn how to code."
      ]
    },
    {
      "title": "Zero to Hero React JS mastery E-degree course",
      "url": "https://www.udemy.com/course/zero-to-hero-react-js-mastery-e-degree-course/",
      "bio": "Become a Pro React JS developer without any prerequisite in a step by step hands-on and project based learning approach",
      "objectives": [
        "You will become a Pro React JS web developer",
        "You will learn everything about CSS3 & Bootstrap 5",
        "You will learn everything about JavaScript & ES6",
        "You will learn everything about HTML5",
        "You will learn various debugging and troubleshooting tools and techniques"
      ],
      "course_content": {
        "Mastering HTML5": [
          "Course Overview",
          "About your Instructor",
          "Introduction to web development",
          "Installation and Setup",
          "html-structure-comments",
          "head-meta-link-script-tags",
          "headings-p-span-div-br-hr-text",
          "anchor-img-tag",
          "Ordered and Unordered list",
          "Table Row Column",
          "Form Input Select Textarea",
          "inline-block-entities-header-footer-section-button-article-audio-video-iframe",
          "Source code for HTML5"
        ],
        "Mastering CSS3": [
          "Introduction to CSS",
          "Different ways of using CSS",
          "Selectors-in-CSS",
          "Debugging-using-developer-tool",
          "Fonts-in-CSS",
          "Colors-in-CSS",
          "Border-Background-Height-Width",
          "BoxModel-Margin-Padding",
          "float-clear",
          "pseudo-selector",
          "css-display-property",
          "css-position-property",
          "css-visibility-z-index",
          "css-flex-box",
          "css-responsive-units-em-rem-vh-vw",
          "media-queries",
          "advance-pseudo-selector",
          "nth-selector",
          "before-after-pseudo-selector",
          "css-box-text-shadow",
          "css-custom-variables",
          "css-animation-keyframes-part-1",
          "css-animation-keyframes-part-2",
          "transition",
          "transform",
          "Source code CSS3"
        ],
        "Mastering JavaScript & ES6": [
          "Introduction to the World of JavaScript",
          "JavaScript Popularity and ECMAScript evolution",
          "Installation and setup",
          "Writing your first javascript",
          "datatype and variables",
          "comments in javascript",
          "operators and operands",
          "string concatenation",
          "string functions",
          "scope in javascript",
          "if else switch case",
          "object in javascript",
          "array in javascript",
          "function in javascript",
          "alert prompt confirm parse in javascript",
          "loops in javascript",
          "spread operator",
          "ternary operator",
          "array filter function",
          "understanding DOM",
          "manipulating DOM with javascript",
          "event and event-listener in javascript",
          "setTimeout and clearTimeout",
          "setInterval and clearInterval",
          "Date and Time Part-1",
          "Date and Time Part-2",
          "JSON object and its manipulation",
          "Arrow function",
          "Window, document, localStorage, sessionStorage",
          "Math object and various functions",
          "Project 1",
          "Project 2",
          "Project 3",
          "Source code for JavaScript & ES6"
        ],
        "Mastering ReactJS & Bootstrap 5": [
          "ReactJS introduction and environment setup",
          "create react app",
          "program flow and project files walkthrough",
          "types of components in react",
          "creating and using 1st functional component",
          "creating 1st stateful class component",
          "ES6 functional component, export and import",
          "comparision between functional and class component",
          "react hooks intro",
          "jsx explained",
          "props in functional and class component",
          "state vs props",
          "deep dive into setState",
          "Handling form in class component part-1",
          "Handling form in class component part-2",
          "componentDidMount lifecycle onload method",
          "create new react app and understand project structure",
          "project cleanup",
          "installing bootstrap and react vscode extention",
          "create home about contact page",
          "creating navbar component",
          "adding react-router-dom and different routes",
          "Link and NavLink to avoid page reload",
          "Designing About and Contact page",
          "Page not found",
          "Bootstrap vs React-Bootstrap",
          "Using custom styling",
          "setting up backend fake api and db",
          "useState useEffect axios api call and React Dev Tools extesion",
          "showing all users on frontend UI",
          "adding action buttons on frontend",
          "add user navigation routing",
          "create Add User form",
          "set state variable data",
          "save new user to DB via post api call",
          "another way to save user data in DB using post api",
          "edit user prepopulate user data",
          "save updated user in DB",
          "delete a user",
          "view user details",
          "view user address and company info",
          "showing loading spinner",
          "Source code"
        ]
      },
      "requirements": [
        "No prerequisites, everything will be taught from scratch in step by step approach"
      ],
      "description": "In this course, you will learn everything that is needed for you to become a Pro React JS developer in a hands-on step by step approach.\nThere is no prerequisite for this course.\nEverything will be taught from scratch with practical examples.\nFollowing are the technologies that will be covered:\nHTML5 concepts\nHTML5 Projects\nCSS3 concepts\nCSS3 Projects\nJavaScript and ES6 concepts\nJavaScript and ES6 projects\nBootstrap 5 concepts\nReactJS (latest version 17) concepts\nReactJS projects\nThe HTML5  topics that will be covered in the course are:\nIntroduction to web development\nClient-server architecture\nThree-tier architecture\nWhat is HTML\nWhat is CSS\nWhat is JavaScript\nLocal development environment setup with industry-standard tools\nPlugins and techniques to speed up development\nDebugging skills\nStructure of HTML page\nHML tag and concept of attributes\nVarious components of HTML document\nMeta tag and its importance\nHead tag\nLink tag\nScript tag\nDisplay tags like h1 until h6\nDisplay tags like paragraph, span, division, label\nInline vs block elements\nHow to use Entities in HTML\nNavigation via an anchor tag\nButton tag\nLoading images on your website\nDifferent utility tags to make text bold, italics emphasize\nListing tags like ul, ol\nLayout tag like table\nHow to create Registration form in HTML\nVarious form tags in HTML like\nform\nDifferent types of input tag\nFile uploading\nCreating dropdown with different options\nWriting address in textarea\nHeader and Footer tag\nSection and Article tag\nVideo and Audio tag\nLoading various websites inside Iframe tag\nMuch more\nYou will get the complete source code so that if you get any doubts anywhere you can just refer the source code.\nThe topics that will be covered for CSS3 are:\nIntroduction to web development\nClient-server architecture\nThree-tier architecture\nWhat is HTML\nWhat is CSS\nWhat is JavaScript\nLocal development environment setup with industry-standard tools\nPlugins and techniques to speed up development\nDebugging skills\nStructure of HTML page\nHML tag and concept of attributes\nVarious components of HTML document\nMeta tag and its importance\nHead tag\nLink tag\nScript tag\nInline, Embedded, External styling\nLinking external stylesheet in your Html\nUsing developer tools and knowing various components of it\nDifferent types of CSS selectors\nHow to use fonts, colors, border, background style\nBox model in CSS\nHow to solve problems due to box model\nMargin and Padding in CSS\nDisplay and Visibility\nDifferent types of positions in CSS\nFloat and Clear\nUsage of z-index property\nCreating layouts using Flexbox\nResponsive web design using media queries\nDifferent types of pseudo-selectors and their usages\nBox shadow and Text shadow\nAnimation and Keyframes\nTransition and its types\nTransformation and its types\nYou will get the complete source code so that if you get any doubts anywhere you can just refer the source code.\nFollowing are the topics that will be covered in Javascript:\nSetup Installation\nJavaScript Introduction\nECMAScript evolution\nDifferent types of Data types in Javascript\nVariables & Constants\nDifferent types of Comments in Javascript\nVarious Operators and their working on Operands\nString and String manipulation\nWhat is Variable Scoping\nControl statement like if, else, switch-case-break\nLoops - for, for of, forEach, while, do-while\nWorking with Arrays\nWorking with Objects\nWhat are Functions and how to create custom functions and call them\nWhat is the use of Prompt\nWhat is the use of Confirm\nWhat is the use of Alert\nWhat is Document Object Model(DOM)\nDOM manipulation using Javascript\nEvent and Event Listener\nSet Timeout and Set Interval\nClear Timeout and Clear Interval\nDate and Time operation and using its various methods\nWorking with Math Object\nWorking with JSON\nWindow and document object\nlocation and history\nlocalStorage and sessionStorage\nCalling API with Fetch\nWhat is the Ternary operator and how to use it.\nWhat is the Array Filter function and how to use it.\nDebugging and Troubleshooting in JavaScript\nTemplate literals (Template strings) in ES6\nObject Destructuring assignment in ES6\nlet and const\nSpread operator\nArrow function expressions\nWe will also do Multiple projects in order to understand different concepts.\nYou will also get the complete source code of the whole course\nFollowing are the topics that will be covered in React JS and Bootstrap:\n1.1-ReactJS introduction and environment setup\n1.2-create react app\n1.3-program flow and project files walkthrough\n1.4-types of components in react\n1.5-creating and using 1st functional component\n1.6-creating 1st stateful class component\n1.7-ES6 functional component, export and import\n1.8-comparision between functional and class component\n1.9-react hooks intro\n1.10-jsx explained\n1.11-props in functional and class component\n1.12-state vs props\n1.13-deep dive into setState\n1.14-Handling form in class component part-1\n1.15-Handling form in class component part-2\n1.16-componentDidMount lifecycle onload method\n2.1-create new react app and understand project structure\n2.2-project cleanup\n2.3-installing bootstrap and react vscode extension\n2.4-create home about contact page\n2.5-creating navbar component\n2.6-adding react-router-dom and different routes\n2.7-Link and NavLink to avoid page reload\n2.8-Designing About and Contact page\n2.9-Page not found\n2.10-Bootstrap vs React-Bootstrap\n2.11-Using custom styling\n3.1-setting up backend fake api and db\n3.2-useState useEffect axios api call and React Dev Tools extension\n3.3-showing all users on frontend UI\n3.4-adding action buttons on frontend\n3.5-add user navigation routing\n3.6-create Add User form\n3.7-set state variable data\n3.8-save new user to DB via post api call\n3.9-another way to save user data in DB using post api\n3.10-edit user prepopulate user data\n3.11-save updated user in DB\n3.12-delete a user\n3.13-view user details\n3.14-view user address and company info\n3.15-showing loading spinner\nThe complete source is also shared.",
      "target_audience": [
        "Anyone with interest to become a pro web developer"
      ]
    },
    {
      "title": "Learning CSS3 - A Comprehensive Tutorial For Web Developers",
      "url": "https://www.udemy.com/course/learning-css3/",
      "bio": "Master CSS3 and learn how to engage your users with fast loading compliant web pages across all browsers.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Working Files - Download These First",
          "Welcome",
          "What CSS Is And How It Works",
          "CSS Rule Structure",
          "How Does CSS Fit Into Web Design",
          "Choosing Your Coding Application",
          "Getting Set Up",
          "Working Between Code And Browsers",
          "HTML Quick Review",
          "Setting The HTML Doctype",
          "Building The Files Structure",
          "HTML And CSS References"
        ],
        "Inline Formatting And Basic Font Formatting": [
          "Introducing Inline Styles",
          "Applying Multiple Properties",
          "Pros And Cons Of Inline Formatting",
          "Applying Inline Styles Using Span",
          "Applying Basic Typefaces",
          "Using Specific Fonts",
          "Setting A Document Wide Font",
          "Controlling Font Sizes",
          "Applying Text Decorations",
          "Applying Color To Text"
        ],
        "Working With Selectors": [
          "Creating A Basic Class Rule",
          "Applying A Class Rule - Part 1",
          "Applying A Class Rule - Part 2",
          "Applying Multiple Class Rules To An Element",
          "Editing And Removing Class Formatting",
          "Converting Inline Formatting To A Class Rule",
          "HTML Selectors - Part 1",
          "HTML Selectors - Part 2",
          "Combining Class And HTML Selectors",
          "Creating And Applying ID Selectors",
          "Working With Group Selectors",
          "Formatting Using Pseudo Elements",
          "Controlling Hyperlinks With Pseudo Classes"
        ],
        "Understanding The CSS Box Model": [
          "Introducing The CSS Box Model",
          "Introducing DIV Elements",
          "Setting Padding",
          "Getting Started With Borders",
          "Setting Borders With Shorthand",
          "Exploring Border Values",
          "Setting Margin",
          "Setting Widths And Heights",
          "Understanding Widths In CSS",
          "Introducing Floating",
          "Formatting Graphics - Part 1",
          "Formatting Graphics - Part 2",
          "Creating A Floating Sidebar - Part 1",
          "Creating A Floating Sidebar - Part 2",
          "Targeting Sidebar Content With Descendant Selectors - Part 1",
          "Targeting Sidebar Content With Descendant Selectors - Part 2",
          "Grouping Descendant Selectors",
          "Applying And Formatting Background Graphics",
          "Setting Backgrounds With Shorthand CSS",
          "Creating An Alert Message"
        ],
        "Controlling Table Formatting": [
          "HTML Table Structure",
          "Techniques For Formatting Table Structure",
          "Formatting Table Contents",
          "Formatting Specific Table Contents",
          "Controlling Table Formatting With CSS - Part 1",
          "Controlling Table Formatting With CSS - Part 2",
          "Controlling Table Formatting With CSS - Part 3",
          "Formatting Table Captions"
        ],
        "Page Layout With Positioning And Layering": [
          "Positioning Basics",
          "Static Positioning",
          "Absolute Positioning",
          "Positioning Nested Elements",
          "Further Positioning Of Nested Elements",
          "Relative Positioning",
          "Using Relative Positioning On Nested Elements",
          "Fixed Positioning",
          "Fixed Positioning Techniques",
          "Stacking Elements With Z-Index",
          "Using Overflow"
        ],
        "Building A Layout With Floats": [
          "Reviewing Floating",
          "Applying Floats To Multiple Objects",
          "Using Clear",
          "Spacing Apart Floating Elements",
          "Creating The Rough Layout Structure",
          "Applying Formatting To The Structure",
          "Finishing Off The Layout"
        ],
        "Formatting Lists And Creating A Navigation Bar": [
          "The Two Common Types Of HTML Lists",
          "Using CSS To Format Lists",
          "Additional CSS Properties For Lists",
          "HTML Structure For Navigation",
          "Converting The List To A Menu With CSS",
          "Creating CSS Rollovers",
          "Additional CSS Button Effects"
        ],
        "Deeper Into Typography": [
          "Specifying A Font Fallback List",
          "Font Sizing",
          "Additional Typography Techniques"
        ],
        "External Style Sheets": [
          "Creating An External Style Sheet",
          "Working With Rules In An External Style Sheet",
          "CSS Commenting",
          "Understanding The Cascading Effect Of CSS - Part 1",
          "Understanding The Cascading Effect Of CSS - Part 2"
        ]
      },
      "requirements": [],
      "description": "A Verifiable Certificate of Completion is presented to all students who undertake this course.\nCSS powers the visual side of the internet, and anyone looking for a real understanding of web design must know what it can do and how it works. This Learning CSS3 Tutorial Course simplifies the  standard of cascading style sheets into its most basic elements, and then gradually advances to help you gain a well-rounded understanding to creating layouts and stylistic elements for the web. This beginner-friend CSS3 training course is led by expert Geoff Blake, who draws from his background as a designer to help you see how various graphical elements and settings can work together to form a complete user experience. Because the training is built around CSS3, you'll also learn features that are specific to the newest standard of the style sheets protocol. Get ready to learn layout, layering, typography and special effects in this unique and engaging 8-hour course.\nWhat You Will Learn\n-How to create complete website layouts using Cascading Style Sheets (CSS) according to best-practice professional standards.\n-How to manipulate and modify onscreen graphical elements within a site, including text, menus, lists, borders, and graphics.\n-How to enhance a website's appearance with subtle special effects such as drop-shadows and transparency.\n-How to use CSS in conjunction with standard HTML to develop and enhance pages and sites.\nWho Should Take This Course\n-Anyone who wants more control over the visual appearance of their current websites or ones they are planning to build. No experience is needed.\n-Anyone who wants to know how HTML and CSS work together on modern pages and sites.\n-Anyone who has tried working with CSS but found it difficult in the past.\nWhat People Are Saying\n\"I knew some basic HTML but my layouts were flat and boring.  Now that I understand layers and CSS it's a whole different ballgame. Thank you Geoff!\"\n-Marty Self\n\"Coming from a graphics background, these videos helped me learn how to create artwork suited for the web...and even better, how to place them on my site for maximum effect.\"\n-Roy Ramirez\n\"Loved the section on special effects and transparency...web design CAN be fun.\"\n-Jennifer Blockman",
      "target_audience": []
    },
    {
      "title": "WordPress Development 2025 : From Beginner to Expert",
      "url": "https://www.udemy.com/course/the-ultimate-wordpress-masterclass/",
      "bio": "A practical guide to integrating WordPress Dashboard into any type of website",
      "objectives": [
        "Master WordPress Development Fundamentals",
        "Integrate WordPress Features in React-Powered Websites using WP Rest API",
        "Build your First Plugin with Custom Hooks",
        "Real-World Projects for Practical Experience",
        "Use Custom Post Types for Enhanced Functionality",
        "Advanced Content Management with WP_Query",
        "Understand Theme Anatomy and Template Hierarchy",
        "Extend Functionality with Child Themes",
        "Create and Customize Your Own WordPress Plugin",
        "Leverage Hooks, Shortcodes, and Widgets Effectively",
        "Implement Security Best Practices in WordPress",
        "Optimize WordPress Performance for Speed",
        "Master ACF and Leverage its Built-in Functionalities",
        "Seamlessly Integrate Contact Form 7 Using Shortcodes",
        "Deploy Headless WordPress Sites on a VPS Practice"
      ],
      "course_content": {
        "Welcome on Board!": [
          "Welcome to the Course !",
          "My First Udemy Course: The Journey, Inspiration, and Vision",
          "Download the Course Syllabus",
          "Maximizing Your Learning Experience",
          "Set Your Own Pace: Why 1.25x Playback Speed is Recommended"
        ],
        "Getting Started with WordPress Development": [
          "Introduction to Headless WordPress",
          "Building WordPress Websites: From Scratch vs. Premade",
          "Your First Installation Adventure on MacOS using MAMP (step 1)",
          "Your First Installation Adventure on MacOS using MAMP (step 2)",
          "Your First Installation Adventure on Windows using WAMP",
          "Your First Installation Adventure using XAMPP",
          "Install your preferred IDE",
          "WordPress dashboard : Quick review (Part 1)",
          "WordPress dashboard : Quick review (Part 2)",
          "Navigating PHP in the World of WordPress (Functions - Part 1)",
          "Navigating PHP in the World of WordPress (Functions - Part 2)",
          "Navigating PHP in the World of WordPress (Objects & Classes)",
          "Navigating PHP in the World of WP (Alternative syntax for Control Structures)",
          "Navigating PHP in the World of Wordpress (Coding Standards)",
          "Debugging in WordPress",
          "Getting Started With WordPress Development",
          "First Impressions",
          "Tip From Raouf: Nothing Easy is Worth Doing"
        ],
        "Theme Anatomy and Template Hierarchy Demystified": [
          "The Bare Minimum: Theme Essentials",
          "Exploring Basic Template Files (Part 1)",
          "Exploring Basic Template Files (Part 2)",
          "Functions File Fundamentals",
          "Actions and Filters",
          "Understanding Template Hierarchy",
          "Post Formats Unveiled",
          "Theme Folder Structure",
          "Loading CSS Styles to any Theme",
          "Loading Javascript Files to any Theme",
          "Theme Anatomy & Template Hierarchy"
        ],
        "Mastering Content Options and the Famous Loop": [
          "Unleashing WP_QUERY",
          "How WordPress Displays the Right Page & Content",
          "Decoding the Loop",
          "Crafting Custom and Dynamic Content with Queries",
          "Advanced Queries",
          "Exploring Properties and Global Variables",
          "WP_Query Class",
          "Tip From Raouf : Recognize WordPress Implementation on Websites"
        ],
        "Project 1 - Convert a Portfolio Website into WordPress": [
          "What Will We Be Building ?",
          "Configuring Essential Theme Files",
          "Setting Up the Header",
          "Integrating a Dynamic Menu",
          "Configuring the Footer",
          "Setting Up the Front-Page",
          "Choosing a Color Scheme for Your E-Portfolio",
          "Creating the Hero Section",
          "Building the Skills Section",
          "Establishing the Internships Section",
          "Crafting the Professional Experience Section",
          "Setting Up the Education Section",
          "Developing the Portfolio Section",
          "Your First Headless WordPress Project"
        ],
        "Using Custom Post Types for Advanced Content Management": [
          "Everything is a Post: The Power of Custom Post Types",
          "Determining When You Need a Custom Post Type",
          "Creating and Displaying Custom Post Types",
          "E-Portfolio Testimonial Section : Using Custom Post Type",
          "E-Portfolio Testimonial Section : Dynamic Data",
          "E-Portfolio Testimonial Section : Finalizing Integration",
          "Custom Post Types"
        ],
        "Customize with Hooks, Shortcodes, and Widgets": [
          "Maximizing Functionality with Hooks",
          "Creating Custom Action and Filter Hooks",
          "Harnessing the Power of Shortcodes",
          "Widgets and Dynamic Sidebars Demystified",
          "Hooks, Shortcodes, and Widgets"
        ],
        "Project 2 - Convert a Dynamic Website into WordPress Using Custom Post Types": [
          "Project Preview",
          "Defining The Hierarchy of Files",
          "Integrating The Header",
          "Integrating The Main Menu",
          "Integrating The Footer",
          "Registering Footer Widgets & Menus",
          "Fixing Footer Styles",
          "Hero Section -Custom Post Type & ACF-",
          "Hero Section -Data Integration-",
          "Help Section -ACF- Part 1",
          "Help Section -ACF- Part 2",
          "Challenge : How It Works Section -ACF-",
          "Challenge : FAQ Section -Custom Post Type-",
          "Post Page -WP Fields-",
          "Post Page -Post Template-",
          "Post Page : Dynamic Latest Posts -Shortcode-",
          "Post Page : Dynamic Breadcrumb -Functions File-",
          "Latest News Home Section -WP Query Class & Shortcode-",
          "News Page -Blog Template-",
          "Other Pages -Page Template-",
          "Contact Page -Integrate The Form-"
        ],
        "Extending Our Theme : Child Themes & Comments": [
          "Extending Our Theme",
          "The Whys and Whens of Child Themes",
          "Traverse : Creating a Child Theme",
          "Must-Use Rules of Child Themes",
          "Mastering Comments in WordPress",
          "Traverse : Add Comments To The Child Theme",
          "Child Themes and Comments"
        ],
        "React Essentials": [
          "Introduction to React",
          "Introduction to CodeSandbox",
          "[Optional] Local Development Setup",
          "JSX, Core Component of React",
          "JSX in More Depth with Expressions",
          "Styling React Elements",
          "React Components",
          "Javascript ES6 - Import, Export and Modules",
          "Unleashing React Props",
          "React Conditioning Rendering",
          "React State Paradigms",
          "Mastering React Hooks : useState",
          "Mastering React Hooks : useEffect",
          "Mapping Data to Components",
          "Javascript ES6 - Arrow Functions and Array Methods",
          "Javascript ES6 - Objects & Array Destructuring"
        ]
      },
      "requirements": [
        "Access to a Computer",
        "Basic understanding of HTML/CSS"
      ],
      "description": "Hello & Welcome to this comprehensive WordPress Masterclass! If you're eager to dive into the world of WordPress development, you’ve come to the right place. This masterclass was inspired by one of the most renowned books in the WordPress community, offering you a deep dive into the essentials and advanced techniques of WordPress mastery. We will guide you from the basics to advanced concepts, empowering you to integrate WordPress dashboard into any type of website.\nI’m Raouf Madani, a software developer based in Canada with over 7 years of experience in WordPress development. Throughout my career, I’ve developed and sold various products to companies across different industries using WordPress. Last year, I had the pleasure of teaching over 100 students online through HiCounselor (California, US), which inspired me to expand my teaching journey here on Udemy.\nHere's the takeout of this masterclass :\nMastering the fundamentals of WordPress, including :\nEnvironment setup.\nDashboard navigation.\nUnderstanding theme anatomy.\nSimplifying complex concepts of WordPress.\nExploring  PHP in the world of WordPress.\nTemplate hierarchy, and custom content creation using WP_Query.\nBuilding advanced features with custom post types, plugins, hooks, shortcodes, taxonomies, and widgets.\nUnderstanding child themes and comments in WordPress.\nCoding your first custom hook.\nIntegrating a modern JavaScript framework React using WP Rest API.\nLearning security tips and optimization ins and outs.\nHosting your WordPress website in a Virtual Private Server.\nFour real-world projects :\nConverting an e-portfolio website to WordPress.\nConverting a Travel Agency website using custom post type.\nIntegrating WordPress dashboard into a React website.\nCreating your first custom plugin.\n\n\nBy the end, you’ll have the confidence to ace a technical interview for a junior WordPress developer role or even start your own WordPress development small-business.",
      "target_audience": [
        "Individuals looking to build a strong foundation in WordPress development and enhance their web development skills.",
        "Students and Recent Graduates: Individuals pursuing careers in web development, or related fields who want to gain practical experience with WordPress.",
        "Freelancers looking to expand their service offerings by learning how to develop, customize, and maintain WordPress websites for clients.",
        "Small business owners seeking to establish an online presence and manage their own websites without relying on external developers.",
        "Content Creators and Bloggers interested in creating and managing their own blogs, enabling them to share their ideas and content with a wider audience.",
        "Anyone Interested in Learning WordPress, whether you’re a beginner or have some experience, this course caters to anyone passionate about mastering WordPress and creating dynamic websites."
      ]
    },
    {
      "title": "ASP.NET CORE and C# REST API With Real World Projects",
      "url": "https://www.udemy.com/course/aspnet-core-and-c-rest-api-with-real-world-projects/",
      "bio": "Learn How To Build Real World, Production Ready REST APIs Using Asp.Net Core and C#",
      "objectives": [
        "How Web APIs work generally",
        "How to implement REST API in AspNet Core",
        "How to implement all functionalities of a complete ecommerce Web API which include: Product catalogue, Shopping Cart, Order and Checkout, Customer Management",
        "Practical application of architectural patterns such as request-response pattern, repository pattern, and dependency inversion",
        "API Security- Authentication and Authorization using JWT",
        "Deployment to Azure - Microsoft's Cloud Platform",
        "How to analyse a customer’s problem and generate the software requirements for the project",
        "How to structure a large-scale project",
        "How to integrate Entity Framework into a DotNet Core project",
        "How to implement filtering and paging functionality",
        "How to effectively make use of Visual Studio IDE",
        "How to Set Up a CI-CD Pipeline On Azure DevOps",
        "How to Set Up Cloud Services on Azure"
      ],
      "course_content": {},
      "requirements": [
        "A computer with internet connection",
        "Visual Studio Development Environment",
        "DotNet Core SDK"
      ],
      "description": "Description\nThis is a no holds barred, action packed course, titled ASP.NET CORE 3.1 and C# REST API with Real World Projects. The course takes you through the complete process of building a production ready REST API using the latest version ASP.NET CORE. To demonstrate My Confidence About This Course, I have created a CV that contains all the Concepts that I covered, and the Projects I have executed in this course. You can Take This Course and Start Looking for Job Immediately using the CV I have prepared.\nYour prospective employer wants you to come onboard and start building applications for them straight away. That is what I did in this course. To provide the knowledge that will allow you go straight into the industry and start working immediately. With over 120 Lectures, I did not leave any stone unturned!!\nBasically, the whole course can be grouped into Two Main Themes:\nIntroduction to Web API\nWhere I introduced how Web APIs work and how Asp.Net Core implements Web APIs\nThe Real World Projects\nWhere I built Two SOLID Real-World REST API Projects. The type of Projects that you will be working on when you get into the industry.",
      "target_audience": [
        "Beginners who do not have a prior experience with programming",
        "Intermediate and Senior developers looking to start working with C#",
        "Developers looking to gain more knowledge within Rest API development"
      ]
    },
    {
      "title": "Node.js Design Patterns",
      "url": "https://www.udemy.com/course/nodejs-design-patterns/",
      "bio": "Write efficient and resilient Node.js applications using industry-standard software design patterns",
      "objectives": [
        "Understand the importance of learning and using industry-standard design patterns when writing Node .js apps",
        "Learn more about core creational design patterns such as Singletons, Factory, and Builder patterns",
        "Efficiently avoid callback hell and implement asynchronous behavior using Promises, Async/Await, and Generators",
        "Develop a deeper understanding of the module system in Node .js and to implement patterns such as dependency injection",
        "Get an insight into structural design patterns such as Proxy, Adapter, Decorator, and others that can help you create systematic, efficient relationships between objects and entities",
        "Reuse well-known techniques to solve common design and coding issues",
        "Understand the behavioral design patterns such as Strategy, Observers, Middleware, and even the Publisher-Subscriber pattern to craft efficient communication patterns between objects, processes, and even applications"
      ],
      "course_content": {
        "Core Design Patterns": [
          "The Course Overview",
          "What Are Design Patterns?",
          "Singletons",
          "Factories – Generic Interface for Creating Objects",
          "Building Object in Steps – Builder Design"
        ],
        "Control Flow Patterns": [
          "Avoiding Callback Hell",
          "Using Promises",
          "Using Async/Await",
          "Generators"
        ],
        "Module Design Patterns": [
          "Revealing Module Pattern",
          "Dependency Injection"
        ],
        "Structural Design Patterns": [
          "Proxy",
          "Adapter Pattern",
          "Decorator",
          "Composite"
        ],
        "Behavioral Design Patterns": [
          "Strategy",
          "Command",
          "Observers",
          "Middleware",
          "Template"
        ],
        "Messaging Patterns": [
          "Request – Reply",
          "Publisher – Subscriber"
        ]
      },
      "requirements": [
        "The intended audience is expected to have basic knowledge of Node .js and the ecosystem, good command over JavaScript, and intermediate working skills on Linux/MacOS."
      ],
      "description": "When writing Node.js applications, it’s absolutely imperative that we employ battle-tested guidelines that can help us write efficient and resilient code. These guidelines are known as design patterns. Design patterns are an important part of software development and are a proven way of solving a given problem.\nIn this course, you’ll take a comprehensive look at industry-standard design patterns, identify challenges that you would commonly encounter while designing and developing software, and implement solutions in Node.js applications. The efficacy of these patterns has been proven over time and a lot of these standard patterns can be implemented when writing JavaScript apps with Node.js.\nBy implementing design patterns, you can write code that is crafted for efficiency and reusability and is resilient against errors and typical pitfalls that result from poorly written code.\nThis course uses Node.js 10.8.0, and JavaScript ES8, while not the latest version available, it provides relevant and informative content for legacy users of Node.js, and JavaScript.\nAbout the Author\nSachin Bhatnagar began dabbling with Computer Programming and graphics at the age of 14 on a Sinclair ZX Spectrum that ran the BASIC programming language.\nDuring the early 2000s, Sachin forayed into Computer Graphics and Visual Effects training and production. From developing world-class curricula to imparting training to over five thousand students in the classroom and over twenty-five thousand online, Sachin has actively contributed to fueling innovation, creating brand identities, and crafting innovative software solutions for corporate companies and individuals alike.\nHe has also worked with one of India’s leading media and entertainment training companies as a vice president. Having said all this, Sachin's first love is coding and he strongly emphasizes its importance to one and all. His passion for education and love for coding has culminated in several courses on technology. His expertise lies in JavaScript, Node.js, Vue.js, Chatbots, and the list keeps growing all the time.",
      "target_audience": [
        "This course is for developers and software architects with a basic working knowledge of JavaScript who are interested in acquiring a deeper understanding of how to design and develop enterprise-level Node .js applications."
      ]
    },
    {
      "title": "Shopping Cart Website from Scratch Ecommerce",
      "url": "https://www.udemy.com/course/shopping-cart/",
      "bio": "How to build a fully functional web storage shopping cart that integrates with Paypal. Step by step instruction webdev",
      "objectives": [
        "Create a custom website with a shopping cart",
        "Create multiple page websites that can store products within a shopping cart"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML and JavaScript",
        "Desire to learn"
      ],
      "description": "This course will introduce HOW YOU can build a custom front-end coded shopping cart from scratch.  Users will be able to add items from multiple pages into a shopping cart. Users will also have a shopping cart that has a checkout button to purchase shopping cart items using Paypal.  You will be amazed at how easy this is to setup and get going on your website.  This is by far one of the most asked for and discussed types of projects that web developers create.  Learn to create a simple eCommerce system using HTML, and jQuery.    Course also covers using Bootstrap to build the website but Bootstrap is not a required part for the functionality of the code.\nHTML - Using HTML for page structure you can setup products on multiple different web pages.  Once you visitors click the button links on the product the item information gets added to a shopping cart.  Checkout anytime or browse more products updating the shopping cart.  This is a simple but useful solution for anyone who wants a simple shopping experience for visitors to HTML web pages.\nCSS - Bootstrap is used within the course to apply styling and structure to the website. Bootstrap is used for rapid web development so we can focus more on the mechanics of the application and how it works.  Some CSS will be covered but in limited capacity within the course.\nJavaScript / jQuery - Some limited JavaScript is used but course content and coding is mainly based around jQuery.   jQuery provides an easy way to add event listeners and work with JSON data.\nPayPal - Purchases from the shopping cart can be made via Paypal.  the course will show you how to JSON format your shopping cart items, and extract out the object information.  This format can be utilized in other for other payment processors as well.  Checkout within the course is formatted with a one click option to pay via Paypal.\nStep by step learning with explanations of code being used to build functionality within the shopping cart.  Some HTML and JavaScript experience is necessary as this is a fast paced course covering specific topics related to the creation of the shopping cart.\nI'm here to help you learn to build projects with HTML and jQuery and ready to answer any questions you may have.   Are you ready to take the first step and start learning how to create your own eCommerce website from scratch?  Join now and see what you can create.",
      "target_audience": [
        "Web developer and web designers",
        "anyone who wants to build a website with a shopping cart",
        "Anyone who wants to learn more about web storage",
        "Anyone who wants to learn and see jQuery in action and what can be done",
        "Create a Paypal checkout within any website",
        "Front end coders who want to create a shopping cart"
      ]
    },
    {
      "title": "Creating Custom Web Maps",
      "url": "https://www.udemy.com/course/creating-custom-web-maps/",
      "bio": "Enhance your Web Application Using Leaflet, Mapbox, or OpenStreetMap",
      "objectives": [
        "Once you have completed this training course, you will have learned how to create your own custom web maps using Leaflet, Mapbox, or OpenStreetMap",
        "Learn how to create your own custom web maps"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Introduction To Web Maps",
          "About The Author",
          "History Of Web Maps",
          "Understanding Raster Vs. Vector Data"
        ],
        "Getting Started": [
          "Introduction To Leaflet",
          "Setting Up Your Project",
          "Setting Up Your First Map - Part 1",
          "Setting Up Your First Map - Part 2"
        ],
        "Features And Events": [
          "Markers - Part 1",
          "Markers - Part 2",
          "Markers - Part 3",
          "Polylines, Polygons, And Circles - Part 1",
          "Polylines, Polygons, And Circles - Part 2",
          "Events - Part 1",
          "Events - Part 2"
        ],
        "Customizing The Base Map": [
          "Overview Of Base Map Tile Services",
          "Creating A Mapbox Account",
          "Custom Base Maps In Mapbox Studio - Part 1",
          "Custom Base Maps In Mapbox Studio - Part 2"
        ],
        "Adding Geospatial Data": [
          "Introduction To OpenStreetMap",
          "Editing OpenStreetMap",
          "Extracting OpenStreetMap Data",
          "Introduction To QGIS",
          "Filtering And Exporting Data In QGIS",
          "Overview Of GeoJSON Format",
          "Importing Data In Leaflet - Part 1",
          "Importing Data In Leaflet - Part 2"
        ],
        "Conclusion": [
          "Wrap Up"
        ]
      },
      "requirements": [
        "PC or MAC",
        "Working files are included, allowing you to follow along with the author throughout the lessons"
      ],
      "description": "In this Creating Custom Web Maps training course, expert author Matt Sidor will teach you how to create custom web maps using Leaflet, Mapbox, or OpenStreetMap. This course is designed for users that already have experience with building web applications.\nYou will start with an introduction to Leaflet and learning how to set up your first map. From there, Matt will teach you about custom basemaps in Mapbox Studio. This video tutorial also covers OpenStreetMap, including how to edit in OpenStreetMap, extract OpenStreetMap data, and filter and export data in QGIS. Finally, you will learn how to import GeoJSON data in Leaflet.\nOnce you have completed this computer based training course, you will have learned how to create your own custom web maps using Leaflet, Mapbox, or OpenStreetMap. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "This course is designed for users that already have experience with building web applications",
        "Web application developers"
      ]
    },
    {
      "title": "Software Architecture & System Design - Practice Tests",
      "url": "https://www.udemy.com/course/software-architecture-system-design-practice-tests/",
      "bio": "Prepare for a System Design Interview. Practice Software Architecture, API Design, Microservices & Big Data Processing",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you preparing for a System Design Interview?\nLooking to practice your knowledge of modern Software Architecture?\nYou came to the right place!\nThis course is the #1 online resource for practicing and improving your knowledge of system design and software architecture.\nAs more companies run large-scale systems to meet global demand, engineers with expert knowledge of Microservice, Big Data, and Event-Driven Architecture are in very high demand.\nHowever, just knowing the theory of Software Architecture doesn't mean you can apply it in the real world or during a challenging System Design interview.\nSystem Design interviews are notoriously hard at the top tech companies, so it's imperative to practice for them ahead of time.\nThat is why I designed this course to help you:\nPractice and revise your Software Architecture knowledge\nApply your skills to System Design skills to real-life interview questions\nGain confidence to tackle hard and realistic design problems on your own\nWhat You Get\nThis self-assessment course includes 100+ multiple-choice questions and is organized into self-contained tests.\nEach test is timed, automatically checked, and scored.\nOnce you complete the test, you will see the correct answer to each question and a helpful explanation that will help you learn.\nThe questions cover many topics, such as:\nFunctional Requirements and Architecture Diagrams\nNon-Function Requirements and Quality Attributes\nSystem Constraints\nAPI Design for modern large-scale systems\nSystem Design principles and building blocks\nDatabase Design, Scalability and Performance\nMicroservices and Event-Driven Architecture\nSoftware Architecture Design Patterns\nBig Data Processing and Architecture\nThis course is for you if:\nYou're preparing for a System Design Job Interview\nYou are a Senior Software Engineer, Software Architect, or Technical and want to practice and improve your Software architecture and System Design skills.\nYou have taken a course on Software Architecture in the past and want to refresh your knowledge.\nSo what are you waiting for?\nLet's start practicing Software Architecture and System Design!",
      "target_audience": [
        "Students Preparing for System Design Interviews",
        "Software Engineers, Technical Leads or Software Architects who want to test and improve their skills"
      ]
    },
    {
      "title": "Wordpress Web Development for Absolute Beginner Zero to Hero",
      "url": "https://www.udemy.com/course/basic-wordpress-web-development-course-for-beginner-zero-to-hero/",
      "bio": "Develop Responsive Website Without Coding Knowledge",
      "objectives": [
        "Purchase of Domain and Hosting",
        "Install Wordpress in Hosting",
        "Wordpress Function Introduction",
        "Post on Wordpress",
        "All Tools of Post",
        "Add Media To Post",
        "Settings on Post",
        "Category",
        "Page",
        "Comment",
        "Widgets",
        "Theme",
        "Plugins",
        "Install Premium Theme"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Wordpress A-Z": [
          "How to become a successful wordpress web developer",
          "Requirements for Wordpress",
          "Need your feedback",
          "Need Help? Have Question During Learning?",
          "03 Wordpress Function Introduction",
          "04 Post on Wordpress",
          "05 Read More",
          "06 Heading",
          "07 All Tools of Post",
          "08 Add Media To Post",
          "09 More Settings on Post",
          "10 Category",
          "11 Page",
          "12 Comment",
          "13 Widgets",
          "14 Theme",
          "15 Plugins",
          "16 Install Premium Theme",
          "Things To Follow For Making A Dynamic Website In Wordpress",
          "Most Popular Theme for Blogging",
          "How to use Wordpress for Web Development more effectively"
        ],
        "Wordpress Installation for Beginners": [
          "01 Domain and Hosting Purchase",
          "02 Installing Wordpress On Hosting"
        ]
      },
      "requirements": [
        "No Experience Needed."
      ],
      "description": "This course will guide you through every single step from installation to finished website. This course is designed for absolute beginner and you can design and develop responsive website using wordpress without any coding knowledge. If you don’t have any previous experience or knowledge on wordpress than you don’t have to worry about, because this course is designed for novice and once you will complete the course you will be an expert. So this is course for basic wordpress to advance.\n\n\nLets take a look what you will learn form this course:\nYou will learn from this course:\n* How to purchase domain and hosting\n* How to install Wordpress in hosting\n* Every Functionality Of Wordpress in Dashboard\n* How to Create Post on website\n* Every Settings of Post\n* Category in Wordpress\n* Page in Wordpress\n* Heading\n* Media on Wordpress\n* Moderation of Comments\n* Widgets\n* Theme Customization\n* Plusins Installation\n* Premium Theme Installation\nand many more. So once you will complete this course you will be able to design a website and you become an expert from novice. During learning if you face any problem than you don’t have to worry, I am always there for you to help you out.\n\n\nSo if you want to design and develop website using wordpress and if you are looking to learn from the scratch and basic wordpress than this course might be suitable for you.",
      "target_audience": [
        "Beginner Wordpress Web Developer"
      ]
    },
    {
      "title": "CSS Flexbox Tutorials Flexible Layout Design CSS3 Flex box",
      "url": "https://www.udemy.com/course/css-flexbox-tutorials/",
      "bio": "CSS Flexbox Tutorials css grid flexbox Flexible Layout CSS Layout Design css website design css grid flexbox html css",
      "objectives": [
        "CSS Flexbox CSS 3 Website Layout Design",
        "Build Website using HTML 5 CSS",
        "CSS Flex box easy to design Web Pages Layouts",
        "CSS Gird to Design website Layout"
      ],
      "course_content": {},
      "requirements": [
        "Basic of Computer Knowledge"
      ],
      "description": "CSS Flexbox and   css grid Tutorials\nCSS Flexbox Tutorials css grid flexbox  CSS Layout Design css website design  css grid CSS Flexbox Tutorials Flexible Layout Design CSS3 Flex box flexbox Flex box is the layout Module make it easier to design flexible responsive layout structure without using css grid or positioning in the css code css grid flexbox it has properly like flex direction flex basic flex wrap  html css etc .\n\n\nIntroduction of CSS Flex and css grid flexbox\nNew module in css grid to easy align the CSS elements in different directions and orders of CSS3 The CSS 3 Website Design Layout Design Flexbox is the Best  CSS Layout Design\nCSS Flexbox Tutorials css grid flexbox  CSS Layout Design css website design css grid flexbox CSS Flexbox is to gives container the ability to expand and shrink elements to best use all the available space the Flexbox CSS 3 help you easy way to design Website layout according to requirements of website and online web pages help us to create website CSS flexbox layout replaces float layout New way to build one-dimensional layouts and css grid flexbox.\n\n\nCSS Flexbox Tutorials  CSS Layout Design\nWhat is CSS Flexbox              How useful Flexbox Direction\nWhat is Flexbox Wrap           What is Flexbox Flex Flow\nWhat is Flexbox Grow           What is Shrink\nWhat is CSS Align self           How useful Flex Order\nWhat is Flexbox grow            What is Flexbox basis\nWhat is Flexbox margin auto\n\n\nFlexbox Align Content\nalign a flex container’s lines within it when there is extra space in the cross-axis, similar to how justify-content aligns individual items within the main-axis. the CSS Flexbox Align Content CSS Flexbox Tutorials css grid flexbox  CSS Layout Design css website design  css grid flexbox and CSS Layout Design\nFlexbox Align Items\nalign-items property is related to CSS layout. It effects how elements are aligned in the Flexbox how use the CSS Flexbox align Items\nCSS Flexbox Direction\nCSS Flexbox Direction CSS Flex box Flex Direction have following values of the direction row Row-reverse Column Colum-reverse how use the CSS Flexbox and how can design layout of website using Flexbox  of direction",
      "target_audience": [
        "Beginner to Advance Level"
      ]
    },
    {
      "title": "Build awesome web apps using Angular",
      "url": "https://www.udemy.com/course/build-awesome-web-apps-using-angular-7/",
      "bio": "Learn Angular from scratch. Your confidence level rises from 0 to 80% just in 5 hours.",
      "objectives": [
        "Create powerful web applications using Angular",
        "Create Angular components, pipes, directives",
        "Understand injectable services",
        "Build and deploy an Angular application on the cloud platform"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to this course",
          "What you are expected to know",
          "Required software setup",
          "How to use the examples?",
          "What is Angular?"
        ],
        "Creating a new Angular app": [
          "Creating our first app using Angular CLI",
          "Creating an Angular app from the scratch"
        ],
        "Introducing Components": [
          "Overview of an Angular Component",
          "Using Angular CLI to generate new component",
          "Demo - Click Counter app",
          "Components"
        ],
        "Angular directives": [
          "Overview",
          "Demo - ngForOf, ngIf, ngStyle and ngClass",
          "Assignment - Change the background color of a block",
          "Demo - ngSwitch",
          "Demo - Custom directive"
        ],
        "Creating the Phonebook App": [
          "Creating the basic structure of our Phonebook App",
          "Creating the ContactDetailsComponent to show a contact information"
        ],
        "Pipes for transforming model data": [
          "Introduction to pipes and creating a custom pipe",
          "Creating a custom pipe to display the age from birth date",
          "Assignment - Create custom pipes for padding a string with some characters"
        ],
        "The service layer in Angular": [
          "Creating the ContactsService injectable class",
          "Setting up the /contacts REST endpoint",
          "Consuming the REST endpoint in our service",
          "Writing CRUD operations in the ContactsService injectable",
          "Displaying the list of all contacts using NgForOf directive"
        ],
        "Routing and SPA (Single Page Applications)": [
          "Route configuration and changing views",
          "Accessing the route parameters in ContactListComponent",
          "Deleting a contact",
          "Angular Routing"
        ],
        "Working with forms in Angular": [
          "Template-driven vs Model-driven (Reactive) forms",
          "Working with a template-driven form for adding new contacts",
          "Validating user inputs in a template-driven form",
          "Editing a contact using reactive form",
          "Validating user inputs in a reactive form"
        ],
        "Miscellaneous": [
          "Integrating jQuery (for pagination on scroll)",
          "Using SweetAlert for beautiful dialog boxes",
          "Building and deploying"
        ]
      },
      "requirements": [
        "Very basic understanding of HTML, JavaScript and CSS",
        "NO prior knowledge of Angular JS 1 or Angular 2/4/5/6 or TypeScript is required"
      ],
      "description": "The Angular framework is used to create scalable, enterprise, and performant client-side web applications. It provides an ecosystem for development of client-side web applications. The ecosystem for development may include external tools or libraries as well. The ecosystem process includes project bootstrapping, development operations/tools, testing, and build support.\n\n\nOne of the best features of Angular framework is that it is quite flexible when it comes to usage of external libraries apart from the scalability it provides. With Angular framework adoption being high, performance management of the application is community driven indirectly driving better job opportunities. The Angular Certification Training aims at covering all these new concepts around Enterprise Application Development.\n\n\nAll the best!",
      "target_audience": [
        "Beginner to intermediate JavaScript and Web developers",
        "Developers migrating from old Angular JS 1.x to all new Angular"
      ]
    },
    {
      "title": "Introductory JavaScript Made Easy Training Tutorial",
      "url": "https://www.udemy.com/course/introductory-javascript-made-easy-training-tutorial-u/",
      "bio": "An easy-to-follow beginner's guide to the JavaScript programming language.",
      "objectives": [
        "Understand the Basic JavaScript Syntax",
        "Incorporate JavaScript Into HTML Pages",
        "Troubleshoot Problems wtih JavaScript Implementation"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Getting Acquainted with JavaScript": [
          "Introduction to JavaScript",
          "JavaScript vs. Java",
          "The <SCRIPT>…</SCRIPT> Tag",
          "External JavaScript",
          "Uses for JavaScript"
        ],
        "The Makeup of JavaScript": [
          "JavaScript Statements",
          "Code and Code Blocks",
          "Whitespace",
          "Case Sensitivity",
          "Breaking Up a Line of Code"
        ],
        "JavaScript Comments": [
          "Single Line Comments",
          "Multi-Line Comments",
          "End of Line Comments",
          "Using Comments to Stop Execution"
        ],
        "JavaScript Variables": [
          "What are JavaScript Variables?",
          "Syntax for Text and Numerical Values",
          "Creating (Declaring) Variables",
          "Re-Declaring Variables",
          "Undefined Value",
          "Using One Statement for Multiple Variables",
          "Local Variables and Global Variables"
        ],
        "Exploring JavaScript Data Types": [
          "Dynamic Data Types in JavaScript",
          "Null",
          "Number",
          "String",
          "Boolean",
          "Array",
          "Object"
        ],
        "JavaScript Objects": [
          "Creating Objects",
          "Accessing Object Properties",
          "Accessing Object Methods"
        ],
        "JavaScript Functions": [
          "JavaScript Function Definition and Syntax",
          "Functions with a Return Value",
          "Calling a Function with Arguments",
          "Assigning Values to Undeclared Variables"
        ],
        "JavaScript Operators": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Adding Strings and Numbers",
          "Comparison Operators",
          "Logical Operators",
          "Conditional Operators"
        ],
        "JavaScript Conditions": [
          "If Statements",
          "The Switch Statement"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML & CSS"
      ],
      "description": "Are you ready to unlock the power of JavaScript and take your web development skills to new heights? Look no further! Welcome to the comprehensive and beginner-friendly \"Introductory JavaScript Made Easy\" course.\nJavaScript is the backbone of modern web development, enabling dynamic and interactive features that breathe life into websites and applications. Whether you're an aspiring web developer, a seasoned programmer exploring a new language, or even a curious individual interested in understanding the magic behind websites, this course is designed to provide you with a solid foundation in JavaScript.\nWith a clear and concise teaching style, our expert instructor will guide you through each concept, ensuring that you grasp the fundamentals before moving on to more advanced topics. No prior coding experience? No problem! We start from scratch, making this course accessible to absolute beginners.\nWhat sets this course apart is its hands-on approach. Each module includes numerous coding exercises and practical examples, allowing you to apply what you've learned immediately. By engaging in real-world scenarios, you'll develop the problem-solving skills needed to overcome challenges faced by JavaScript developers on a daily basis.\nDon't miss this opportunity to embark on a JavaScript journey that will equip you with the skills and confidence to create dynamic, interactive web applications. Enroll in \"Introductory JavaScript Made Easy\" today and take the first step towards becoming a proficient JavaScript developer!",
      "target_audience": [
        "New Web Designers",
        "Those new to HTML & JavaScript"
      ]
    },
    {
      "title": "Serverless Functions with Netlify",
      "url": "https://www.udemy.com/course/serverless-functions-with-netlify/",
      "bio": "Add Cool Features to Your Front-End Apps Without Building a Server",
      "objectives": [
        "serverless functions"
      ],
      "course_content": {
        "Intro": [
          "Introduction",
          "Netlify and Other Services",
          "Front-End",
          "Requirements",
          "Text Editor",
          "Video Blur Fix",
          "Course Review"
        ],
        "Starter Project": [
          "Info",
          "Install",
          "Overview"
        ],
        "Examples": [
          "First Function",
          "Syntax Details",
          "Status Codes",
          "First Example",
          "Redirects and Auto Imports",
          "Basic API Intro",
          "Basic API Function",
          "Basic API Front-End",
          "Deploy Intro",
          "Continuous Deployment",
          "\"CORS\" Error Fix",
          "Free Requests Info",
          "Airtable Info",
          "Airtable Signup",
          "Airtable - Create Products",
          "Airtable - API Docs",
          "Fetch Airtable Data",
          "ENV VARS",
          "Display All Airtable Products",
          "Single Airtable Function",
          "Display Single Product",
          "Combine Both Airtable Functions",
          "Add ENV VARS to Netlify",
          "Survey Intro",
          "Survey Table",
          "Fetch Votes",
          "Display Votes",
          "Modify Votes - Front-End",
          "Http Methods",
          "Survey - Http \"PUT\" Method",
          "Survey - Check HTTP Methods",
          "Survey Complete",
          "Weather App - Intro",
          "Weather App - Font-End",
          "Weather App - Check For Http Methods",
          "Weather App - API Overview",
          "Weather App - Complete",
          "Newsletter - Intro",
          "Newsletter - Setup",
          "Newsletter - Front-End",
          "Newsletter - Buttondown API",
          "Newsletter - Serverless Function",
          "Newsletter - Empty Email Field",
          "Newsletter - Signup",
          "Newsletter - Errors",
          "Email - Intro",
          "Email - Front-End",
          "Email - Serverless Structure",
          "Email - Complete",
          "Stripe - Intro",
          "Stripe - Setup",
          "Stripe - Complete"
        ],
        "Serverless Functions and React": [
          "Intro",
          "Starter Install and Setup",
          "Basic Example",
          "Serverless Function",
          "Airtable Products Example",
          "React Router Setup",
          "Single Product Page",
          "Deploy"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "html",
        "css",
        "javascript",
        "node installed"
      ],
      "description": "Welcome to Serverless Functions Course.\nI guess let’s start by answering the most pressing question first. What is a serverless function and why should we care? So, here is the deal. There are times when our app needs a dynamic feature and even after that 20th google search, we inevitably come to realization that the only way do it, is by building and hosting our own server. A good example would be setting up a stripe payment flow. There is a better solution though.\nServerless Functions.\nOk, but what is a serverless function? Well, despite the name, serverless function actually does not mean that there is no server. What it simply means, is that someone else is responsible for maintaining it . We, as front-end developers only need to setup our desired functionality, and the cloud provider will take care of the rest. What also really cool, we can continue to use our favorite programming language – Javascript. Most cloud providers offer some solution of serverless functions but for this course we will hosting company by the name of Netlify. We will use Netlify because they offer generous free tier and make it very easy,  to get up and running with serverless functions.\nHere are the serverless functions examples/setups were are going to cover during the course.\n- Basic “Hello World”\n- Basic API (with local data)\n- Complex API (with Airtable)\n- Survey\n- Open Weather API\n- Newsletter\n- Send Email / Submit Form\n- Stripe Payment",
      "target_audience": [
        "Devs interested in serverless functions"
      ]
    },
    {
      "title": "ASP.NET Core Identity - User Security Essentials",
      "url": "https://www.udemy.com/course/aspnet-core-identity-authentication-and-authorization/",
      "bio": "We take a deep dive into Identity for ASP.NET Core (.NET 5 and up) and authentication and authorization best practices",
      "objectives": [
        "ASP .NET Core Identity",
        "Implementing Two-Factor Authentication",
        "User, Claims and Role Management and Authorization",
        "Security Policy Creation and Enforcement",
        "Adding Email Confirmation to Account Creation and Access",
        "Identity Scaffolding and Custom Extensions",
        "How To facilitate third-party logins engines (Google, Facebook, etc)",
        "How To Store User Secrets",
        "How to manage user authentication and registration"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Project Setup and Overview": [
          "Setup Classified Advertisement Project",
          "IMPORTANT: ASP.NET 6 Project",
          "IMPORTANT - .NET 8/9 Version",
          "Add Cookie Authentication to Web Project",
          "Add Login and Logout Functionality",
          "Exploring Identity Claims and Principal",
          "Adding Third-Party Authentication - Concepts",
          "Section Review",
          "Section Source Code"
        ],
        "Add Identity To an ASP.NET Core Application": [
          "What Is Identity Core",
          "Add Identity To Existing Project",
          "Implement Secure Registration - Part 1",
          "Implement Secure Registration - Part 2",
          "Implement Email Verification for Registration",
          "Additional Password Security",
          "Section Review",
          "Section Source Code"
        ],
        "Implement Authentication Security with Identity": [
          "Section Overview",
          "Implement Login Functionality",
          "Handle Logout Flow",
          "Implement Password Reset Functionality",
          "Implement Account Locking",
          "Implement Two-Factor Authentication",
          "Section Review",
          "Section Source Code"
        ],
        "Implement Advanced Authorization": [
          "Section Overview - What is Authorization and how does it help?",
          "Implement Basic Authorization",
          "Add Roles To Users",
          "Implement Role Based Authorization",
          "Add Custom Claims to Users",
          "Using Claims to Secure Application Endpoints",
          "Implement Policy Based Authorization",
          "Section Review",
          "Section Source Code"
        ],
        "Working With OpenIdConnect Identity Providers": [
          "Section Overview - What is OpenIdConnect",
          "Sign Up For Google OAuth Credentials",
          "Add Google Auth to App",
          "Test Google Auth Login Flow",
          "Section Review",
          "Section Source Code"
        ],
        "Conclusion": [
          "Conclusion",
          "Final Source Code - .NET 6"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A Working Knowledge of ASP NET Core and SQL Development"
      ],
      "description": "Overview\nIn this course, you will learn the basics of modern authentication using the ASP.NET Core Identity Library and learn to extend the functionality relative to our specific business needs. While perfect security is arguably impossible to achieve, we will explore various techniques that go a long way in ensuring security and relative ease of use simultaneously. We will look at implementing security in a practical ASP.NET Core application and how we can implement role, claim, and custom policy-based authorization.\nWhy ASP.NET Identity Core\nAuthorization, Authentication, and User Management are mainstay features in real-world applications. Identity Core is the flagship library packaged with ASP.NET Core projects to help us get the most security possible. Getting authentication and authorization done right on your website can help keep your users and their data safe from attacks. Added features such as Two and Multi-Factor Authentication are relatively easy to plug in, and this library can easily be extended to implement unique business rules to surround how users are treated.\nEverything in this course is .NET 6 / .NET 7 compatible.\nBuild A Strong Foundation in ASP.NET Core Security:\nLearn how to add Cookie Authentication manually to an ASP.NET Core application\nHow to properly implement User Roles, Claims, and Policies\nLearn how to use, build and manage User Claims\nLearn to implement user authentication and registration processes properly\nLearn password policies and recovery\nLearn to setup Emailing features for secure Account Confirmation, Forgot Password, and other processes\nLearn to add authorization and user restrictions\nLearn to Add Two and Multi-factor Authentication\nLearn Modern Authentication Methods (Social logins, OAuth, etc.)\nEven though the fundamentals of the security principles will be demonstrated with a Razor Pages application, all techniques and considerations can be taken in any ASP.NET Core application type, including MVC and Blazor.\nIt has content for developers at all levels, as there is always time/early to start thinking about the best security practices for your web application.\nContent and Overview\nTo take this course, you must have some knowledge of .NET Core development and C#.\nThis course has just over 5 hours of premium content, smartly broken up to highlight related activities based on each module in the application being built. We will also look at troubleshooting and debugging errors as we go along, implementing best practices, writing efficient logic, and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course, and you will be challenged to be the best you can be.\nWe don't always do things the perfect way the first time; that is not the reality of writing code. We make mistakes and point them out and fix them around them. By doing this, we develop proficiency in using debugging tools and techniques. By the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, including some files to make it easier for you to replicate the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.",
      "target_audience": [
        "Anyone who wants to explore advanced authentication and authorization concepts",
        "Anyone who wants to fully understand how to secure a .NET Core Application"
      ]
    },
    {
      "title": "Learn HTML5 and CSS3 and Build a Professional Website",
      "url": "https://www.udemy.com/course/learn-html5-and-css3-and-build-a-professional-website/",
      "bio": "Begin learning HTML and CSS, the most important skill of programming and build a real world project!",
      "objectives": [
        "Front End Developer Skills to create beautiful and mobile-friendly websites.",
        "A final project in the end to put all your practice into one place.",
        "From designing a basic landing page to styling it to a professional and responsive level.",
        "Downloadable projects to enhance your learning.",
        "Get support in the QnA section",
        "Download Cheat Sheets for HTML5 and CSS3"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing The Code Editor",
          "Creating the First Page",
          "Text in HTML",
          "Lists and Links in HTML",
          "Images in HTML",
          "Block And Inline Elements",
          "Meta Information in HTML"
        ],
        "Forms in HTML": [
          "Forms in HTML (Part 1)",
          "Forms in HTML (Part 2)",
          "Form Validation in HTML"
        ],
        "Learning CSS": [
          "CSS Introduction",
          "CSS Colors",
          "CSS Text",
          "CSS Links",
          "CSS Pseudo Classes",
          "CSS Background"
        ],
        "CSS Positioning System": [
          "CSS Box Model",
          "CSS Positioning"
        ],
        "Final Project (Building an Agency Website)": [
          "CSS Project (Part 1)",
          "CSS Project (Part 2)",
          "CSS Project (Part 3)",
          "CSS Project (Part 4)",
          "Project Resources"
        ],
        "Bonus": [
          "Bonus CheatSheets"
        ]
      },
      "requirements": [
        "No prior coding experience is needed.",
        "No paid tools involved to learn HTML5 and CSS3",
        "Those with a will to learn can take this course anytime."
      ],
      "description": "Are you ready to learn HTML and CSS to build a real world project?\n\n\nIf you have no prior coding experience or if you want to learn a new skill then this course will make you a pro in HTML and CSS in no time.\n\n\nAll age groups are welcomed to take this course as there is no defined age to learn a new skill!\nLet HTML and CSS be among your new trophies of skillset.\n\n\n\n\nFor Kids and Parents:\n2020 is a pandemic year, that means there is plenty of time for both parents and kids to learn coding as a skillset and why not? Programming is the most in demand as people are creating sites like e-commerce, blogs and portals to run their businesses. Now, imagine having the literacy of HTML and CSS (The very building blocks of the web ) in your hands! That’s what this course is all about!\nYou can move onto learning other skills once you are a pro in HTML and CSS.\nComputers are everywhere and they are going to play a major part in transforming our future as basic coding is a must for every child nowadays. Many non-coders have shown great interest in coding because it is the need of the time. A few of these non-coders people have said wonderful things about coding:\n“Learning to code is useful no matter what your career ambitions are.”\n—Arianna Huffington, Founder, The Huffington Post\n\n\n“Computer programming is quickly becoming an essential career skill. Learning to code is a fantastic opportunity equalizer—if you’re good at it, it can help you achieve your dreams.”\n—Cory Booker, U.S. Senator, New Jersey\n\n\n“Whether you want to uncover the secrets of the universe, or you just want to pursue a career in the 21st century, basic computer programming is an essential skill to learn.”\n—Stephen Hawking, Theoretical Physicist, Cosmologist, Author\n\n\nThe Barrier\nWe all have moments where things seem almost impossible to conquer and that’s okay as long as we are willing to pass through that barrier. HTML or CSS might seem new and coding can be a little too overwhelming in the beginning but as you sharpen your saw with time, you will see great results and find yourself quite satisfied and improved than before.\n\n\nThis course covers:\nHTML links that are essential for hyperlinking webpages with each other.\nHTML lists that important to put items in an ordered or unordered format.\nHTML <img> tag that is used to add images to your HTML pages.\nCSS Box Model which is the most critical part of learning about elements.\nCSS Positioning System\nCreating a blueprint of the HTML project\nCoding and Styling the Agency page with HTML and CSS.",
      "target_audience": [
        "Anyone who wants to learn coding: Teachers, Students, Professionals or Kids"
      ]
    },
    {
      "title": "PHP Laravel: Build Hotel Booking Management System",
      "url": "https://www.udemy.com/course/php-laravel-2023-build-hotel-booking-management-system/",
      "bio": "Build Amazing Hotel Booking Management System with PHP Laravel MySQL and Bootstrap and up your Web Development Skills",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Laravel UI package",
        "Learn how the MVC structure works in Laravel",
        "Integrate your own theme easily",
        "Work with Models and Eloquent the professional way",
        "Work with views and Eloquent the professional way",
        "Work with Controllers and Eloquent the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn some advanced routing ways",
        "work with Middlewares and Guards",
        "Learn to validate with Requests",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Integrate PayPal API for payment processing and online ordering",
        "Create a customer booking system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Before you Start with the Course",
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Getting Started and Creating Authentication System": [
          "Design and Code for the Project",
          "Creating New Laravel Project and Running the Server",
          "Creating Authentication System",
          "Integrating our Theme pt.1",
          "Integrating our Theme pt.2"
        ],
        "Getting Main Features Done": [
          "Displaying Hotels",
          "Displaying Rooms in Home Page",
          "Displaying Rooms for every Hotel"
        ],
        "Booking Rooms and Paying with PayPal": [
          "Booking Rooms pt.1",
          "Booking Rooms pt.2",
          "Paying with PayPal pt.1",
          "Paying with PayPal pt.2",
          "Validating Payment"
        ],
        "Users Pages and Finishing Users Side": [
          "Displaying Bookings for every User",
          "Cleaning up and Validating",
          "Finshing Users End"
        ],
        "Getting Started with Admin Panel": [
          "Code and Design for Admin Panel",
          "Creating Authentication System with Laravel pt.1",
          "Creating Authentication System with Laravel pt.2",
          "Validating Authentication System pt.1",
          "Validating Authentication System pt.2"
        ],
        "Working with Admins Section": [
          "Working with Index Page",
          "Displaying New Admins",
          "Creating New Admins"
        ],
        "Working with Hotels Section": [
          "Displaying all Hotels",
          "Creating New Hotels",
          "Updating Hotels",
          "Deleting Hotels with Images"
        ],
        "Working with Rooms Section": [
          "Displaying all Rooms",
          "Creating New Rooms",
          "Deleting Rooms"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of Laravel would help a lot"
      ],
      "description": "The online course titled \"PHP Laravel 2024: Build Hotel Booking Management System\" is designed to teach participants how to develop a fully functional hotel booking management system using the PHP Laravel framework. This course will provide comprehensive instruction and hands-on experience in building a web application for booking hotels and managing travel-related operations.\n\n\nKey features of the course include:\n\n\nFramework: The course focuses on the PHP Laravel framework, which is widely used for web development due to its robust features and ease of use.\nProject-Based Learning: Participants will work on a real-world project throughout the course, building a hotel booking management system from scratch. This hands-on approach allows learners to apply their knowledge and gain practical experience.\nBooking System: The course covers the development of a booking system, enabling users to book hotels and manage their travel arrangements.\nProcessing Payment with PayPal: Participants will also learn how the logic works behind processing payments online. how to set up the sandbox emails, how to work with PayPal Rest API and so much more.\nComprehensive Instruction: The course provides step-by-step guidance, covering all the necessary concepts and techniques required to build a hotel booking management system using Laravel and PHP.\nExperienced Instructor: The course is taught by an experienced web development instructor who specializes in Laravel and has a top-rated track record in teaching web development courses.\n\n\nBy the end of the course, participants will have the skills and knowledge to develop their own hotel booking management system using Laravel and PHP. This course is suitable for individuals with some prior experience in web development and a basic understanding of PHP programming.",
      "target_audience": [
        "People who learned PHP Laravel and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "Building Modern Websites with Drupal 8 and Bootstrap 4",
      "url": "https://www.udemy.com/course/drupal-bootstrap/",
      "bio": "A Complete Guide to Building Drupal 8 Websites with Bootstrap 4!",
      "objectives": [
        "Building Modern Websites with Drupal 8 and Bootstrap 4"
      ],
      "course_content": {
        "Introduction and Getting Started": [
          "An Introduction to the Course",
          "Project Resources",
          "Creating our Development Environment",
          "BONUS: Installing Drupal 8 using SiteGround"
        ],
        "Site Building with Bootstrap 4, Modules, and Content Types": [
          "Installing the Bootstrap 4 and Adminimal Themes",
          "Installing Modules",
          "Building the Content Pages",
          "Creating the Navigation Menu and the Meaning of Blocks"
        ],
        "Theming with Drupal 8, Twig, and Bootstrap 4": [
          "CSS, Logo and Typography",
          "Theming the Page Content Type",
          "Building the Recipes Content Type"
        ],
        "Drupal 8 Views and Building the Homepage": [
          "Utilizing Drupal Views to Create a Recipes List",
          "Making the Recipes Display List",
          "Creating the Homepage"
        ],
        "Closing Thoughts": [
          "THANK YOU!"
        ]
      },
      "requirements": [
        "A computer, internet access, and a web browser such as Google Chrome"
      ],
      "description": "Drupal is the second largest CMS in the world, currently hosting over 500,000 live websites — historically, there have been over 1 million installs of Drupal since its inception. Now is the time to level up your skills — it’s not going away anytime soon!\nWhat to Expect from this Course\nIn this course we will be building a Vegan Coffee Shop website called Elaine's using Drupal 8 and the Bootstrap 4 frontend framework. Along the way we will cover:\nHow to build Content Types in Drupal\nInstalling Modules and Themes for Beginners and Advanced Users\nUsing Drupal Views to create a powerful backend\nHow to use Bootstrap 4 as a theme in Drupal\nThe basics of theming using Twig and CSS\nAt the end of this course, you will have the skills necessary to build modern websites using Drupal 8 AND a ready-to-use template. Thanks so much for learning with me!",
      "target_audience": [
        "Web Designers and Developers of all Skill Levels"
      ]
    },
    {
      "title": "Master React.js with AI: From Basics to Advanced Development",
      "url": "https://www.udemy.com/course/master-reactjs-with-ai-from-basics-to-advanced-development/",
      "bio": "Learn React.js with Generative AI | JavaScript, Hooks, API, and AI-Driven Projects",
      "objectives": [
        "Understand the core concepts and fundamentals of React . js.",
        "Install and configure the development environment for React . js.",
        "Implement state and props in React components.",
        "Leverage Generative AI for code generation and learning.",
        "Build interactive web applications using React. js.",
        "Master advanced React. js concepts like hooks and lifecycle methods.",
        "Integrate AI-driven tools in React development.",
        "Develop and deploy a complete React. js project with AI assistance.",
        "Enhance problem-solving skills with AI-driven programming challenges.",
        "Apply best practices for modern web development using AI and React .js."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Overview of React.js",
          "What is React.js and its importance in web development?",
          "Brief history and evolution of React.js.",
          "Introduction to Generative AI",
          "Understanding of Generative AI.",
          "How Generative AI can aid in learning programming and React.js specifically."
        ],
        "Important Installations Before starting": [
          "Visual Studio code installation",
          "Node Package Manager"
        ],
        "Basics of JavaScript": [
          "what are Variables?",
          "Datatypes",
          "Array Methods & Array of Object",
          "erators flow statements loops and functions using Gemini",
          "DOM Manipulation & Event Handling",
          "Async Programming",
          "Async Programming with practical examples"
        ],
        "Fundamentals of React.js with AI Models": [
          "React Basics",
          "React Installation",
          "Components: Functional vs. Class Components.",
          "State and Props",
          "Class component with ChatGPT",
          "Lifecycle Methods",
          "Introduction to the lifecycle of React components and their usage"
        ],
        "Advanced React.js Concepts": [
          "Hooks",
          "UseEffect, and useContext hooks.",
          "API Calling in React.js",
          "Routing with React Router",
          "Single Page Application (SPA) routing."
        ],
        "Generative AI in Learning React.js": [
          "Personalized Learning Paths",
          "Code Generation and Assistance",
          "Using AI solve programming challenges.",
          "AI-driven explanations of advanced React.js topics."
        ],
        "Mini-Project: To-Do List Application": [
          "Executive Summary",
          "Configuration and Development Environment",
          "AI-Driven Component Architecture",
          "Store App Data in LocalStorage Using API",
          "Deployment of the Application"
        ],
        "Project: Building a React Application with AI Assistance": [
          "Overview and Goals",
          "Planning and Design",
          "Adding New Features in the App",
          "Exercise"
        ],
        "Advanced Tools for React Developers": [
          "Tools and Libraries",
          "Integrating AI into React Projects"
        ],
        "Future perspectives": [
          "Recap of key takeaways.",
          "Future of React.js and Generative AI in Web Development.",
          "Encouragement to continue exploring and experimenting with React.js and AI."
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS.",
        "Familiarity with JavaScript basics.",
        "A computer with internet access.",
        "No prior React. js or AI knowledge required."
      ],
      "description": "Unlock the full potential of React.js with the power of Generative AI in this comprehensive course. Designed for both beginners and intermediate developers, this course takes you on a journey from understanding the basics of JavaScript to mastering advanced concepts in React.js, all while leveraging the capabilities of AI to enhance your learning experience.\nYou'll start with foundational topics such as variables, data types, and async programming, ensuring a solid grasp of JavaScript essentials. Then, delve into the core fundamentals of React.js, exploring components, state management, lifecycle methods, and hooks. This course uniquely integrates AI-driven tools and techniques to assist you in learning, coding, and solving programming challenges, providing personalized learning paths and real-time code generation.\nThe course includes hands-on mini-projects, such as building a To-Do List application, to apply your skills in real-world scenarios. You'll also work on a more complex React application, where you'll design, develop, and deploy with AI assistance, ensuring you're equipped with the skills to tackle real-world projects.\nIn the final sections, you'll explore advanced tools and libraries for React developers and learn how to integrate AI into your projects. Whether you're looking to enhance your web development skills or stay ahead in the ever-evolving tech landscape, this course offers the perfect blend of theory, practical application, and innovative AI-driven learning. Join us and master React.js with AI!",
      "target_audience": [
        "Aspiring Web Developers looking to learn React. js with AI support.",
        "JavaScript Programmers wanting to advance their skills in modern frameworks.",
        "Tech Enthusiasts interested in integrating AI with web development.",
        "Students and Professionals aiming to enhance their knowledge in React .js.",
        "Self-Learners who prefer a structured, AI-driven approach to learning React .js.",
        "Developers seeking to stay updated with the latest trends in AI and web development."
      ]
    },
    {
      "title": "Build an API with Python | Django |PostgreSQL|REST Framework",
      "url": "https://www.udemy.com/course/build-an-api-with-python-django-postgresqlrest-framework/",
      "bio": "Learn how to Build a REST API from scratch",
      "objectives": [
        "How to Create and activate a virtual environment",
        "How to install Django",
        "How to install Django REST Framework",
        "How to Create a new Django Project",
        "How to Create a new Django App",
        "How to register applications with Django",
        "How to setup PostgreSQL Database with Django",
        "How to create and run Migrations",
        "How to Create a Django Model",
        "How to define Data Models and migrate it to PostgreSQL",
        "How to Create a serializer class",
        "How to Create views",
        "How to Map views to URLs",
        "How to Create Model Objects",
        "How to use Django Rest Framework to process HTTP requests",
        "How to create CRUD operations interacting with API using Postman"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Python",
        "Basic knowledge of Django",
        "Basic knowledge of Databases"
      ],
      "description": "API stands for Application Programming Interface.\nAn API is a software intermediary that allows two applications to talk to each other. In other words, an API is the messenger that delivers your request to the provider that you're requesting it from and then delivers the response back to you.\nWhen we are building APIs, we want our models to provide four basic types of functionality. The model must be able to Create, Read, Update,and Delete resources.\n\n\nIn this course, we are going to build an API using the following technology:\nPython\nDjango\nDjango Rest Framework\nPostgreSQL\npsycopg2\ndjango-cors-headers\n\n\nWhat You Will Learn :\nHow to Create and activate a virtual environment\nHow to install Django\nHow to install Django REST Framework\nHow to Create a new Django Project\nHow to Create a new Django App\nHow to register applications with Django\nHow to setup  PostgreSQL Database with Django\nHow to create and run Migrations\nHow to Create a Django Model\nHow to define Data Models and migrate it to PostgreSQL\nHow to Create and apply a new migration\nHow to Create a serializer class\nHow to Create views\nHow to Map views to URLs\nHow to Create Model Objects\nHow to test API with CRUD Operations\nHow to use Django Rest Framework to process HTTP requests\nHow to create CRUD operations interacting with API using Postman",
      "target_audience": [
        "Beginner web developers",
        "Beginner programmers",
        "Beginner API developers"
      ]
    },
    {
      "title": "The Complete Front-End Web Development: Start your journey!",
      "url": "https://www.udemy.com/course/the-complete-front-end-web-development-start-your-journey/",
      "bio": "Become a front-end web developer in 2020! Learn HTML, CSS, JavaScript, jquery, Bootstrap and start your career.",
      "objectives": [
        "Front-End development basics",
        "How to create web pages working with HTML and CSS",
        "Responsive web design with Bootstrap 4",
        "How to code in JavaScript for absolutely beginners",
        "How to give interactive view to the pages with jquery"
      ],
      "course_content": {
        "Getting Started": [
          "Course Introduction",
          "How to set up text editor for starting coding journey"
        ],
        "HTML for beginners": [
          "Html Page structure",
          "Html-Doctype",
          "Block tags",
          "Paragraph elements",
          "Unordered and ordered lists",
          "Header and footer",
          "Section, article and main elements",
          "Text sizes",
          "Creating a table",
          "Project - Simple html project"
        ],
        "Advanced HTML": [
          "Html Images",
          "Html forms",
          "Html Input",
          "Checkbox",
          "Radio button",
          "Select elements",
          "Video and Audio",
          "Meta tags in HTML",
          "Well done!",
          "Keep going on!"
        ],
        "CSS": [
          "Your first CSS",
          "CSS Properties",
          "CSS selectors",
          "Text and font",
          "CSS box model"
        ],
        "Advanced CSS": [
          "Flexbox",
          "CSS 3",
          "Positioning in CSS",
          "Great. It's almost done!"
        ],
        "JavaScript for beginners": [
          "Introduction to JavaScript",
          "Your first JavaScript",
          "Alert and console.log",
          "Integer, string and variables",
          "Increment and decrement",
          "boolean",
          "Comparing values",
          "undefined and null",
          "Article about undefined and null",
          "if else",
          "looping",
          "JavaScript Looping exercises",
          "JavaScript Events",
          "Javascript function"
        ],
        "More JavaScript lectures": [
          "Arrays part-1",
          "Arrays part-2",
          "OOP",
          "Javascript conclusion"
        ],
        "Jquery": [
          "Introduction to jquery",
          "DOM tree",
          "create new element",
          "jquery events",
          "hide and show",
          "fading",
          "sliding",
          "callback"
        ],
        "Bootstrap": [
          "Introduction to bootstrap",
          "Bootstrap grid system",
          "Bootstrap buttons",
          "Progress bar"
        ],
        "Project": [
          "Create skeleton of website",
          "Navbar",
          "fixing bugs",
          "project -3-rd part",
          "Adding icons",
          "Ending part of the project"
        ]
      },
      "requirements": [
        "You don't need any programming background. You will start your coding journey from here.",
        "You need a computer with an internet."
      ],
      "description": "For becoming a front-end web developer you should  start learn web development basics. This course will help you to reach your goals in your career journey. We will end this course with portfolio  Bootstrap project. Also we will cover the technologies below in this course:\nHTML from beginner to advanced\nCSS from beginner to advanced\nJavaScript\njQuery library\nBootstrap",
      "target_audience": [
        "Everyone who wants to learn web development skills and to be a front-end developer."
      ]
    },
    {
      "title": "Full Stack Web Development Masterclass: Bootcamp",
      "url": "https://www.udemy.com/course/python-javascript-and-mysql-for-web-developer-bootcamp/",
      "bio": "Complete Developers course with JavaScript, Python Coding skills and MySQL database: Zero to Hero",
      "objectives": [
        "Learn python coding basics",
        "Advanced OOPs python coding for Data Science projects",
        "Create your application using ChatGPT AI techniques",
        "Writing Python code for Dynamic applications",
        "Master client-end design using JavaScript, back-end development Python coding with MySQL",
        "Apply JavaScript, Python for data science and MySQL database queries on real-world tasks",
        "Create fully function web apps using Python coding, JavaScript for lightweight forms",
        "Coding on Data Science projects and modules like machine learning and artificial intelligence",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to ask a great questions",
          "Installing code editor",
          "What is JavaScript",
          "Hello World Program",
          "Getting Output",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer",
          "What is Source code",
          "ChatGPT AI for Software Developers",
          "Best Practices for Learning Online Course"
        ],
        "JavaScript Basics": [
          "Variables",
          "Data Types",
          "Numbers",
          "Strings",
          "String Formatting",
          "Variables creation exercise"
        ],
        "JavaScript Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators"
        ],
        "javaScript Conditional Statements": [
          "If-else statement",
          "If-else-if statement"
        ],
        "JavaScript Control Flow Statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "JavaScript Functions": [
          "Creating a Function",
          "Function Call()",
          "Function with parameters"
        ],
        "JavaScript Error Handling": [
          "Try-catch",
          "Try-catch-finally"
        ],
        "JavaScript Client-Side Validations": [
          "On Submit Validation",
          "Input Numeric Validation"
        ],
        "Python Introduction": [
          "Introduction to Python",
          "Python vs. Other Languages",
          "Why Its Popular",
          "Command Line Basics",
          "Python Installation (Step By Step)",
          "PyCharm IDE Installation",
          "Getting Start PyCharm IDE",
          "First Python Hello World Program"
        ],
        "Python Basic": [
          "Variables",
          "Data Types",
          "Type Casting",
          "User Inputs",
          "Comments"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Transform yourself into a Full Stack Web Developer with the \"Full Stack Web Development Masterclass: Bootcamp\". This course is designed to teach you how to build dynamic, interactive, and data-driven web applications using JavaScript, Python, and MySQL—the core technologies of modern web development.\n\n\nYou’ll start with JavaScript, the foundational language for front-end development. Learn how to create interactive user interfaces, handle events, and manipulate the DOM to build dynamic web pages. Master essential front-end concepts like routing, state management, and app integration.\n\n\nOn the back end, you’ll explore Python coding to create robust server-side applications. Learn how to write server side coding, handle requests, manage user requests, and process data efficiently. You’ll also discover how to integrate back-end functionality with front-end interfaces for seamless application performance.\n\n\nThe course covers MySQL, teaching you how to design relational databases, perform complex queries, and interact with databases using SQL. You’ll learn how to connect your Python back-end with MySQL to store and retrieve data dynamically, powering your web applications with real-time data access.\n\n\nThroughout the bootcamp, you’ll work on real-world projects like e-commerce platforms, blogs, and social media apps. By the end, you’ll have the skills to develop full-stack web applications from scratch, ready to deploy in the real world.\n\n\nEnroll today and master JavaScript, Python, and MySQL to become a full-stack web development expert!",
      "target_audience": [
        "Beginner Python coding and MySQL developers curious about data science",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build apps using ChatGPT Open AI techniques",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer",
        "Who wants learn Python coding for machine learning and artificial intelligence"
      ]
    },
    {
      "title": "Laravel 9 - Online Hotel Booking Platform (A to Z)",
      "url": "https://www.udemy.com/course/laravel-online-hotel-booking-platform-a-to-z/",
      "bio": "Learning Laravel fundamentals (A to Z) and developing a complete online hotel booking website with Laravel 9",
      "objectives": [
        "Laravel 8 or Laravel 9 from scratch",
        "Laravel Fundamentals (A to Z)",
        "Laravel Single and Multi Auth (with Guard) System",
        "Visual Studio Code Editor and Important Plugins",
        "Laravel CRUD option",
        "Laravel Login System",
        "Forget Password and Reset Password System",
        "Email Verification System Logic and Implementation",
        "Contact form email sending using Ajax",
        "Newsletter email sending using Ajax and email verification",
        "Website logo, favicon and other items setup",
        "Admin and customer profile managements",
        "Security for post section in author section",
        "Photo uploading system",
        "Toastr message notification system",
        "Uploading project in web server",
        "Email sending in web server"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge in PHP Language",
        "Basic Knowledge in OOP Concept",
        "Knowledge about using local server. Ex: xampp",
        "Basic knowledge about HTML, CSS and Bootstrap",
        "Basic knowledge about using code editor like Notepad++, Sublime Text or any"
      ],
      "description": "In this course, I have taught the students the Laravel framework from scratch. After showing all the basics of Laravel, authentication system, template mastering etc., I have developed a complete Online Hotel Booking Application with the latest version of Laravel, Laravel 9.\n\nThe persons who are very beginner in Laravel and only have few php and oop idea, they will be benefitted the most from this course. But the advanced persons will also get help from this course, because I have coded following the standard and showed some advanced features.\nAdmin Panel Features:\nAdmin can create, edit and delete Customers.\nAdmin can change logo\nAdmin can change favicon\nAdmin can change top bar information.\nAdmin can control the home page information.\nAdmin can create, edit and delete hotel rooms.\nAdmin can create, edit and delete FAQs.\nAdmin can create, edit and delete photos for the photo gallery.\nAdmin can create, edit and delete photos for the video gallery.\nAdmin can create, edit and delete the social items.\nAdmin can send email to subscribers.\nAdmin can change his own photo, information and password.\nCustomer Features\n1. Customer can change his own photo, information and password.\n2. Customer can book hotel rooms.\n3. Customer can make payment using PayPal and Stripe.\n4. Customer can make registration in this website for free.\n5. Customer can see orders.\n6. Customer can print the invoice.",
      "target_audience": [
        "Persons who want to learn a php framework from scratch",
        "Persons who want to learn making a complete web application from beginning",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to learn laravel very well to be able to make awesome products to sell from their websites"
      ]
    },
    {
      "title": "Complete Guide to Bootstrap 5 with 6 Real World Projects",
      "url": "https://www.udemy.com/course/complete-guide-to-bootstrap/",
      "bio": "Master the latest version of bootstrap 5 from scratch by coding 5 CSS and 1 SASS real world websites.",
      "objectives": [
        "Utilities, Layout and Components of the latest bootstrap 5 (v5.1.0) from September 2021",
        "How to create real world professional websites with bootstrap 5",
        "You will learn about other cool libraries and plugins like aos animations, tiny slider, smooth-scrollbar, isotope filtering and sorting and more...",
        "How to create a setup with a bundler like parcel and also git and github",
        "You will learn the basics of SASS by practical project",
        "How to customize default bootstrap, create new utilities and more...",
        "Not only bootstrap 5 but also how the real world web development works..."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of HTML & CSS",
        "A code editor and browser",
        "A computer with internet connection"
      ],
      "description": "Hi everyone!\nThis course covers all the different parts of the latest version of the world's most popular front-end framework, Bootstrap 5.1. Bootstrap has been used on millions of websites around the world and has been carefully developed to cover a wide range of typical user interfaces.\nWeb pages built with Bootstrap 5 works across all kinds of devices, browsers, and screen sizes while also taking care of accessibility and a clean and modern design.\nI designed this course for:\nWeb developers who don't know bootstrap\nWeb developers who have used bootstrap 4 now want to upgrade to v5\nKnows the basics of bootstrap 5 but needs to learn practical implementations\nWe are going to learn the basics of bootstrap 5 from scratch - bootstrap utilities, layouts, components. Then we are going to jump into the projects. After creating 5 courses with CSS we are going to see how to set up bootstrap 5 with sass. We will also see how to customize default bootstrap stylings using customization API. After that, we will be creating a website template by using bootstrap 5 and sass. If you don't have any prior knowledge of SASS, then don't worry! I got you covered. I will be explaining the SASS from the very basics.\nFinally, I will walk you through how to create 6 different projects using Bootstrap 5.\nPROJECTS\nLearn to build the following projects using Bootstrap 5:\nProject 1: Beginner Portfolio\nProject 2: One-page Agency Template\nProject 3: Bootstrap 5 Admin Dashboard\nProject 4: Multipage Blog\nProject 5: Professional Portfolio\nProject 6: E-learning SASS template\n\n\nWHY THIS COURSE?\nWhy this course instead of other Bootstrap courses?\nWondering why you should choose this course instead of other Bootstrap courses? This course has the following features that make it stand out among the rest:\nNo unnecessary staffs\nReal-world professional projects\nOther than learning about bootstrap 5, you will also learn how to use these-\nEmmet for faster workflow\nHow to create beautiful animations using the AOS animations library\nHow to create charts and graphs using Chart js\nForm validation methods\nTypewriter effect using javascript\nHow to do filtering and sorting with isotope js\nHow we can create a working HTML form with PHP\nUsing vanilla js sliders like tiny slider\nLET'S GET STARTED!",
      "target_audience": [
        "Anyone who wants to learn bootstrap 5 to step up their game as a web developer.",
        "Who wants to create awesome and professional websites with the latest bootstrap version.",
        "Web developers who wants to fasten their workflow with the help of bootstrap 5."
      ]
    },
    {
      "title": "Build your Personal Portfolio Website",
      "url": "https://www.udemy.com/course/build-your-personal-website-using-chatgpt/",
      "bio": "Create a stunning portfolio website using ChatGPT within just 40 minutes",
      "objectives": [
        "Build a personal portfolio website using HTML, CSS, and JavaScript",
        "Customize the design to match their personal style or brand",
        "Add Profile picture and demo project video in website",
        "Publish website for free using GitHub Pages",
        "Learn the basic of website creation"
      ],
      "course_content": {},
      "requirements": [
        "Basic computer and internet browsing skills",
        "A computer/Laptop with internet access",
        "No prior coding experience required",
        "Also you can do it using mobile"
      ],
      "description": "Are you looking to create a stunning personal portfolio website to showcase your skills, resume, and projects — without needing advanced coding skills?\nThis beginner-friendly course will guide you step-by-step in building a fully responsive, modern portfolio website using HTML, CSS, JavaScript, and ChatGPT.\nIn this course, you will:\nSet up your project using Visual Studio Code\nWrite clean HTML, CSS, and JavaScript for key sections like Home, About, Projects, and Contact\nAdd your profile picture and embed a demo project video into your site\nUse ChatGPT to generate content, fix coding errors, and improve design ideas\nMake your website fully responsive for mobile and tablet devices\nPublish your website online for free using GitHub Pages\nWhether you're a student, freelancer, or job seeker, having a personal portfolio website is essential. By the end of this course, you’ll have a live, professional-looking site that you can confidently share with potential employers, clients, or on social media — without spending any money on hosting or domains.\nNo prior experience? No problem. This course is designed for absolute beginners, with clear explanations and on-screen demonstrations to guide you every step of the way.\nBy the end of the course, you'll have:\nA fully customized, professional portfolio website — published online for free, and ready to represent your unique identity and skills.",
      "target_audience": [
        "Students or freelancers needing a personal website",
        "Anyone looking to showcase their work or skills online",
        "Beginners in web development"
      ]
    },
    {
      "title": "Container on Microsoft AZURE Docker Kubernetes- Azure Devops",
      "url": "https://www.udemy.com/course/container-on-microsoft-azure-docker-kubernetes/",
      "bio": "Learn how to use Docker, Kubernetes, Service Fabric Cluster, AKS, Container Instance and Container Registry in right way",
      "objectives": [
        "In this course we would explore various Container services available on Microsoft Azure cloud.",
        "You would learn Docker, Kubernetes, Service Fabric Cluster",
        "You would learn about Azure Kubernetes Service (AKS)",
        "Container Instances and Container Registry"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of Operating System, Virtualisation or Containerisation concepts would be more than sufficient."
      ],
      "description": "A lot of people working in the Information Technology sector are expected to be familiar with a few technologies that are required in the projects you are supposed to work. No matter whether you have a background in software development, operations or testing, DevOps has changed the way people used to work. With constant disruptions from the Cloud Computing services, organizations are moving all of their projects directly on the cloud. It doesn't matter whether its hosted on the public, private or hybrid cloud infrastructure, you are still expected to work on two key technologies- Containers and Virtual Machines. In this course you will be learning about Container services on Microsoft Azure cloud platform. You will be learning Containers right from the beginning, so don't worry if you are just moving to Containers. Later in this course, you will learn with some hands-on practical examples and demonstrations on some of the container services on Microsoft Azure.\nWhat is Docker?\nIt is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.\nWhat is Kubernetes?\nIt is an open-source container-orchestration system for automating computer application deployment, scaling, and management.\nWhat is Service Fabric Cluster?\nIt is a network-connected set of virtual or physical machines into which your microservices are deployed and managed.\nWhat is AKS (Azure Kubernetes Service)?\nYou can create Serverless Kubernetes, an integrated continuous integration and continuous delivery (CI/CD) experience and enterprise-grade security and governance.\nWhat is Container Instances?\nYou can develop apps fast without managing virtual machines or having to learn new tools—it is just your application, in a container, running in the cloud.\nWhat is Container Registry?\nYou can Build, store, secure, scan, replicate, and manage container images and artifacts with a fully managed, geo-replicated instance of OCI distribution.",
      "target_audience": [
        "Anyone who would be interested to learn Cloud Computing with Microsoft Azure.",
        "Would be interested in learning various Cloud Container services and options available on Microsoft Azure.",
        "Want to make a career in Cloud Computing, Development, Testing, etc"
      ]
    },
    {
      "title": "React JS: Build 6 Real-World React Apps with AI Integration",
      "url": "https://www.udemy.com/course/react-js-build-6-real-world-react-apps-from-scratch/",
      "bio": "React Masterclass. Build 6 Real-World React Projects. Integrate ChatGPT into your App using ChatGPT API.",
      "objectives": [
        "Build six functional, real-world React applications from scratch.",
        "Understand core React concepts, including components, state, and props.",
        "Integrate APIs and handle asynchronous operations in React.",
        "Design responsive UIs that work seamlessly across devices.",
        "Manage application data using local storage for a seamless user experience."
      ],
      "course_content": {},
      "requirements": [
        "Modern Web Browser",
        "Code Editor",
        "Basic understanding of HTML, CSS, and JavaScript",
        "Basic understanding of React will be beneficial but is not mandatory"
      ],
      "description": "Welcome to \"Build 6 Real-World React Applications & Integrate ChatGPT\"! This comprehensive course is designed to take you from a React novice to a confident developer by building practical, real-world projects with a focus on integrating ChatGPT.\nIn this course, you'll start with a crash course on React fundamentals, ensuring you have a solid foundation. We'll cover essential concepts such as components, state, props, and lifecycle methods, preparing you for the hands-on projects ahead.\nOnce you're comfortable with the basics, we'll dive into building six diverse and functional applications:\n**AI Chat Bot**: Learn how to create an interactive chat bot using React and ChatGPT API, simulating human-like conversations with AI.\n**Translator App**: Develop a multi-language translator with dynamic language support using React.\n**Live Weather App**: Build a weather application with React that fetches real-time data from an API and displays it in a user-friendly interface.\n**Quote Generator**: Create a quote generator with React that provides inspirational quotes at the click of a button.\n**Calendar**: Design a functional calendar application with React to manage events and schedules.\n**News App**: Develop a news application with React that retrieves and displays the latest news articles from various sources.\nThroughout the course, you'll gain hands-on experience with:\n- Core React concepts and best practices\n- Integrating and handling APIs with React and ChatGPT\n- Managing state and props effectively in React\n- Designing responsive UIs with React that work seamlessly across devices\n- Utilizing local storage in React for data persistence\nThis course is perfect for aspiring front-end developers, intermediate React developers, web development enthusiasts, students, professionals, and self-taught programmers. Whether you're looking to break into front-end development or enhance your existing skills, this course provides the practical knowledge and experience you need.\nBy the end of this course, you'll have six impressive projects to add to your portfolio and the confidence to tackle more complex React applications. You will also understand how to integrate ChatGPT API into your React applications for intelligent features.\nJoin us on this exciting journey to master React and build functional, responsive applications with the power of ChatGPT. Enroll now and start building your future in web development!",
      "target_audience": [
        "Aspiring Front-End Developers: This course is perfect for those looking to break into front-end development by building practical, real-world applications using React.",
        "Intermediate React Developers: If you have some experience with React and want to enhance your skills by working on diverse projects, this course will be valuable.",
        "Web Development Enthusiasts: Anyone with a passion for web development who wants to learn how to create modern, functional web applications will benefit from this course.",
        "Students and Professionals: Whether you're a student preparing for a career in tech or a professional looking to upskill, this course will provide you with hands-on experience in React.",
        "Self-Taught Programmers: If you've been teaching yourself programming and want structured guidance on building complete React applications, this course is designed for you."
      ]
    },
    {
      "title": "Build Real Estate Management System with PHP & MySQL",
      "url": "https://www.udemy.com/course/real-estate-management-system-with-php-mysql/",
      "bio": "Learning PHP and MySQL (A to Z) and developing a complete dynamic real estate listing website.",
      "objectives": [
        "Learn PHP from scratch",
        "Learn MySQL from scratch",
        "Learn the using of PDO in PHP",
        "Visual Studio Code Editor and plugins in that",
        "Variables, Data types, Strings in php",
        "Operators in php",
        "Array, Multi-dimensional Array and Array functions",
        "Conditions in php (if, elseif, else)",
        "Loops (for, while and dowhile), Nested Loop",
        "Functions in php (built-in and user-defined)",
        "Switch case using in php",
        "$_POST, $_GET, $_REQUEST",
        "Session and Cookies",
        "Using Regular Expression in PHP",
        "File Upload and Validation, File I/O",
        "Database Basic, Query Language",
        "Connecting Database in PHP",
        "Form Validation Technique",
        "Basic CRUD Operation",
        "Login, Registration and Forget Password System",
        "Email verification in registration",
        "Payment Method Integration - PayPal",
        "Payment Method Integration - Stripe",
        "Contact form email sending",
        "Website logo, favicon and other items setup",
        "Admin profile management",
        "Photo uploading system",
        "Toastr message notification system",
        "Customer and Agent Profile Management",
        "Customer and Agent Login and Registration",
        "Pricing Package Management",
        "Advanced Real Estate Searching Option",
        "Uploading Project to Live Server"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in HTML",
        "Basic knowledge in CSS",
        "Basic knowledge in Javascript",
        "Basic knowledge in Bootstrap",
        "Basic knowledge in Code Editor like VS Code or any"
      ],
      "description": "In this course, I have taught the students the most popular programming language PHP and MySQL database from scratch. After showing all the basics of PHP, authentication system, security, template mastering etc., I have developed a complete real estate listing web application with the latest version of PHP and that is PHP 8.2\n\nThe persons who are very beginner in php or have no knowledge at all in PHP, they will be benefitted the most from this course. But the advanced persons will also get help from this course, because I have tried to show all the real life features of a real estate applications with advanced features.\nApplication Features:\nSearch features in the home page\nAdvanced search features in the properties page\nURL rewrite option using a htaccess file. So in the front end, there will be no .php extensions.\nAjax form submission with page refresh.\nOptimized query added in some sections in order to load data faster instead of nested queries.\nUploading task in web server using cpanel was shown in this project.\nAdmin Panel Features:\nAdmin can change logo, favicon etc.\nAdmin can change footer information.\nAdmin can update the home page information.\nAdmin can update the FAQ page information.\nAdmin can control the FAQ Section\nAdmin can update the contact page map.\nAdmin can create, edit and delete blog posts.\nAdmin can create, edit and delete listing types.\nAdmin can create, edit and delete listing locations.\nAdmin can create, edit and delete listing amenities.\nAdmin can create, edit and delete why choose us section\nAdmin can create, edit and delete testimonials.\nAdmin can send email to subscribers\nAdmin can see all the agent profiles and can delete them\nAdmin can make agent active or inactive\nAdmin can see all the properties sections added by agents\nAdmin can see all the orders and delete those\nAdmin can see all the customer profiles and can delete them\nAdmin can make customer active or inactive\nAdmin can change his own photo, information and password\nAdmin can create, edit and delete his own listings\nAdmin can update the privacy policy page information.\nAdmin can update the terms and conditions page information.\nAgent Features:\nAgent can create account for free\nAgent can login and reset his password if necessary\nAgent can change profile information\nAgent can buy package using PayPal and Stripe\nAgent can renew package anytime\nAgent can see order history\nAgent can create, edit and delete properties\nAgent can create and delete photos per properties\nAgent can create and delete videos per properties\nAgent can reply to customer messages\nApplied security so that non-subscribed agents can not add property.\nApplied security so that if order is expired, then agent can not have access to his properties add list until he renew his packages.\nCustomer Features:\nCustomer can create account for free\nCustomer can login and reset his password if necessary\nCustomer can change profile information\nCustomer can add properties in wishlist\nCustomer can create or delete messages\nCustomer can reply to agent messages",
      "target_audience": [
        "Persons who want to learn php 8.2 from scratch",
        "Persons who want to learn mysql from scratch",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to have a remote job in php",
        "Persons who want to start his freelancing career using php",
        "Persons who want to learn making a real estate listing application"
      ]
    },
    {
      "title": "HTML & CSS Flexbox: Create Amazing Responsive Websites",
      "url": "https://www.udemy.com/course/learn-css3-flexbox-build-responsive-websites-in-2018/",
      "bio": "Learn advanced HTML, CSS3 Flexbox, Bootstrap Flex, Media Queries, Jquery and Create Websites with Responsive Design",
      "objectives": [
        "Understand and correctly use the flexbox properties used for flex container and flex items",
        "Know the default behavior of flexbox model",
        "Understand how to position and align flex items in layout",
        "Optimize code with shorthand properties",
        "Create a complete layout",
        "Use nested flex containers",
        "Create, position and align layout content",
        "Use advanced layout techniques with :nth-child selector",
        "Use of media queries and flexbox properties for responsive web design",
        "Create responsive webpages with different kind of contents using flexbox",
        "Use of CSS3 properties to create animation and effects",
        "Create responsive web galleries, forms and image accordion slider",
        "Create interactive pages using Jquery",
        "Use of flexbox model with boostrap framework"
      ],
      "course_content": {
        "Introduction": [
          "Course Structure & Kick off",
          "Introduction",
          "Flexbox Layout Model"
        ],
        "Create Overall Layout With Parent Properties": [
          "Introduction",
          "Display",
          "Flexbox! What is the default behavior?",
          "Define container direction using Flex-direction",
          "Flex- direction values",
          "Wrap items using Flex-wrap",
          "Flex- wrap",
          "Shorthand Flex-flow property",
          "Justify-content aligment property",
          "Justify-content",
          "Align-items",
          "Align-content"
        ],
        "Flex Item Properties to Fine Tune Layout": [
          "Define flex items order with Order property",
          "Order",
          "Flex-grow",
          "Flex-grow calculation",
          "Flex-shrink",
          "Flex-basis",
          "Flex shorthand property",
          "Align-self"
        ],
        "Create your First Layout with Flexbox": [
          "Introduction",
          "Holy Grail layout - Create your first real layout (1st version)",
          "Holy Grail with Nested Flex Containers (2nd version)",
          "Holy Grail Layout - header content",
          "Holy Grail Layout - nav content",
          "Holy Grail Layout - article content",
          "Holy Grail Layout - aside content",
          "Holy Grail Layout - footer content",
          "Advanced Layout Technique - Part 1",
          "Advanced Layout Technique - Part 2 (Holy Grail)"
        ],
        "Responsive Design & Media Queries": [
          "Introduction and importance of Media Queries",
          "Responsive Design without Media Queries (With Flex-Wrap)",
          "Make your Webpage with Responsive Layout (Holy Grail Layout)"
        ],
        "Page content Made With Flexbox for real world": [
          "Introduction",
          "Responsive Web Gallery (Part 1) - Plan and define the main elements",
          "Responsive Web Gallery (Part 2) - Fine-tune your layout",
          "Responsive web gallery using background-color css property",
          "Responsive Form built with Flexbox (Part 1)",
          "Responsive Form built with Flexbox (Part 2) - Change elements order",
          "Dynamic Navigation Menu / Image accordion slider (Part 1) - Layout Creation",
          "Dynamic Navigation Menu / Image accordion slider (Part 2) - Tuning Layout"
        ],
        "Mini Projects With Flexbox & Jquery - Add Interactivity": [
          "Introduction",
          "Create a FAQS Page with Flexbox & Jquery",
          "Create Section Tabs Using Jquery"
        ],
        "Flexbox Model with Bootstrap Framework": [
          "Bootstrap Flex Intro",
          "Bootstrap display utility classes and use of Breakpoints for responsive design",
          "Flex direction",
          "Flex wrap using bootstrap",
          "Justify Content",
          "Align Items",
          "Align Content",
          "Align Self",
          "Order property applied with Bootstrap",
          "Flex Grow/Shrink utility classes"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS, Bootstrap and Jquery",
        "Computer and code editor"
      ],
      "description": "*** Udemy  best seller in Flexbox topic***\n\"Perfect!!! The instructor is an excellent communicator, and explains practical content in a concise manner, in a way that is easily understood. I've been working on building my own web app, and he makes difficult concepts simple.\" - Jordan McEachern\n\n\n***Last Update - July 2019***\n\n\nAre you looking for a course to build a modern website in the easiest and most efficient way?\nIf your answer is  yes, you're in the right place. Here you will learn how to build responsive and modern websites using the flexbox layout model.\nMy name is Luis Carlos, im an enginner & a web developer, and I will be your guide in the next hours for this course. I have several years of experience as a trainer and I will pass on all my knowledge in the area of web development.\n\n\nWhy Flexbox?\n\n\nCSS Flexbox simplifies complexity.\nWith Flexbox you will be able to do more with layouts, and  allow you to reach the complex layout in an easier  and fun way writing less & clean code to create them.\n\n\n\nWhat you will learn and be able to do at the end?\n\nProperties for parents (container) and childrens (flex items)\nAlign and position flex items\nArrange items in different directions and orders\nFill the remaining space and shrink elements to not overflow\nCreate a responsive webpage  with the respective content\nAdvanced layout techniques\nUse of media queries and flexbox properties to create responsible sites\nCreation of a responsive form and web gallery using flexbox\nUse of CSS3 properties to create animations and effects\nCreate interactive pages with Jquery\nFlexbox Model applied with Bootstrap framework\n\n\nHow is the course structured?\nThe course is structured in several sections where the first part (section 2 and 3) is dedicated to the properties used for creating websites using the flexbox model. The section 4 guide to a real webpage, where i create the holy grail layout using 2 methods, one where i use only one dimension layout and later the same layout will be done in two dimensions using nested containers.\n\nWith the main layout finished it will  be added the content in order to understand how the flexbox will position and align all the content of the page.\nAfter create the first real webpage, it's time to learn advanced techniques to create layouts, where you can check the great dynamic and versatility of the flexbox model.\nAt this point you can already create websites to your own projects, and only need to adapt your website to all types of devices, which is why you learn in section 5 to use media queries in site creation.\nSection 6 is dedicated to the creation of pages with different kinds of contents, using always the flexbox model, showing the great capacity that this model has for creating multiple web contents (Responsive web galleries/ Forms / Image accordion slider/interactive pages using Jquery)\nThe course has some documents available that you can follow and can work as your guide, where it is possible to verify the planning and details that I outlined for the creation of the webpage and some details about layouts and some flexbox properties.\nFinally, i have created quizzes in which you can test the knowledge acquired during the course\n\n\n\n\nRecommended speed:\n1 - 1.25x\n\n\n-----What people say about my courses------\nRecent reviews from another courses:\n\"Ideal for students that are starting in this area. The instrutor goes direct to the subject, and make good code exemples. I have truly enjoyed this starting course of html. im waiting for new videos and other courses in this area by this instructor\"\n*AA*\n\n\n\"Good basic stuff fot those who are starting. Exercises made in videos are very well explained in each topic. I feel confident to the next exercises\"\n\n*TK*\n\n\n\"Videos with well defined content. Great step by step overview of each base number with many examples to understand all the conversions. This tutorial is very well prepared, the pace is perfect and the material presented is structured well.\"\n*JW*",
      "target_audience": [
        "People who work or study in the area of web development that want to learn flexbox and the best trending and modern web technologies"
      ]
    },
    {
      "title": "How To Build Instagram Clone Using Ruby on Rails 7",
      "url": "https://www.udemy.com/course/building-instagram-from-scratch-using-ruby-on-rails-7/",
      "bio": "The Practical Guide To Learn How to Implement Instagram application Using Ruby on Rails 7, Bootstrap 5, and Turbo Rails",
      "objectives": [
        "Building a complete Instagram clone using Ruby on Rails 7",
        "Build Follow System of any Social Media Application",
        "Building Real-Time searching functionality",
        "Implementing authentication easily with Devise gem",
        "Solve Devise integration problems with Ruby on Rails 7",
        "Practice working with Bootstrap components and classes",
        "Handling Authorization",
        "Work with font-awesome to add icons",
        "Handle complex database relationships",
        "Build Like Functionality",
        "Build Commenting System",
        "Uploading images with preview and Drag-Drop using FileBond Javascript library",
        "Suggesting users to follow based on specific metrics",
        "Listing posts as feeds list in the home page"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Final Instagram Clone Application Preview",
          "Github Repository"
        ],
        "Project Setup": [
          "Creating our Application and add database configurations",
          "Adding Bootstrap and solving integration problems with Rails 7"
        ],
        "User Accounts & Authentication": [
          "Designing Instagram Login Page",
          "Adding Users and Authentication Using Devise Gem",
          "Adding Devise Login Functionality to our Home Page",
          "Designing The Signup Page"
        ],
        "Instagram Posts": [
          "Posts Overview",
          "Creating Posts Model, View, and Controller using Scaffold",
          "Styling The Post Card"
        ],
        "User's Home Page": [
          "Styling The Navigation Bar",
          "Adding The Stories Partial",
          "Adding The Suggestions Partial",
          "Organizing The Home Page"
        ],
        "Creating New Posts": [
          "Adding New Post Modal",
          "Adding Preview and Drag-Drop Using FilePond Library",
          "Adding Post Validations"
        ],
        "Likes": [
          "Likes Model And Controller Logic",
          "Adding Like Functionality To Posts' Views",
          "Who Liked The Post Modal"
        ],
        "Comments": [
          "Comments Model And Controller Logic",
          "Adding Creating New Comment Functionality To Posts",
          "Listing All The Comments And Deleting Comments"
        ],
        "User Profile Page": [
          "Designing User's Profile Header",
          "Designing User's Profile Post Listing",
          "Designing User's Updating Profile Information Page"
        ],
        "Enhancing The Application": [
          "Enhancing The User Experience",
          "Handling Post Deletion"
        ]
      },
      "requirements": [
        "Basic understanding of the Ruby on Rails framework",
        "Basic knowledge of HTML and CSS"
      ],
      "description": "At first let's speak money...\nRuby on Rails Web Developer average salaries by city as of January 2020 (according to Glassdoor):\nNew York - $95,000/yr, Boston - $97,000/yr, San Francisco - $100,719/yr\nSo, Need more reasons on \"why Ruby on Rails?\"\n\n\nYou'll learn how to build your own Instagram or any social media web application using one of the most powerful and easy frameworks available... Ruby on Rails <3.\nWe will use the following during our journey:\n\nRuby on Rails Framework\nBootstrap Library for Styling\nFontawesome Library for Icons\nFileBond Library for Uploading images\nActive Storage for Image Uploading\nDevise Gem for Authentication\nWhat are the requirements?\nBasic understanding of the Ruby on Rails framework\nBasic knowledge of HTML & CSS\nHave Ruby on Rails Installed on your machine\nWhat am I going to get from this course?\n\nBuilding a complete Instagram clone using Ruby on Rails 7\nPractice working with Bootstrap components and classes\nInstalling Devise\nAdding Users with Devise\nImplementing authentication easily with Devise gem\nSolve Devise integration problems with Ruby on Rails 7\nHandling Authorization\nWork with font-awesome to add icons\nHandle complex database relationships\nBuild Like Functionality\nBuild Commenting System\nBuild Follow System for any Social Media Application\nSuggesting users follow based on specific metrics\nListing posts as feeds list in the home page\nUploading images with preview and Drag-Drop using FileBond Javascript library\nBuilding Real-Time searching functionality\nCreating a User Dashboard\nCreating a Scaffold\nResources in Rails\nForcing People to Log In",
      "target_audience": [
        "Ruby on Rails developers who want to build an Instagram clone with all it's functionalities",
        "Ruby on Rails developers who want to refresh their knowledge by building an entire application",
        "Beginners who needs to know how Ruby on Rails works"
      ]
    },
    {
      "title": "ASP.NET Core – Cloud-Native App Development",
      "url": "https://www.udemy.com/course/aspnet-core-cloud-native-app-development/",
      "bio": ".NET Core | Docker | Kubernetes | NGINX | Containerization | Cloud Native Development | API | SQL | Logging",
      "objectives": [
        "Docker",
        "Kubernetes",
        "Containerization",
        "Building scalable applications",
        "Docker Compose",
        "Cloud-Native Development",
        ".NET API",
        ".NET MVC",
        "Serilog",
        "Seq",
        "Microsoft SQL Server",
        ".NET Aspire"
      ],
      "course_content": {},
      "requirements": [
        ".NET Core knowledge",
        "C# knowledge",
        "Database development knowledge"
      ],
      "description": "Welcome to the comprehensive and hands-on course ASP.NET Core – Cloud-Native App Development. In this course, you will embark on a journey to master the art of building cloud-native applications using ASP.NET Core, Docker, and Kubernetes.\nThis course requires you to download Docker Desktop. If you are a Udemy Business user, please check with your employer before downloading the software.\nWhether you're a beginner looking to dive into modern web development or an experienced developer looking to harness the power of Docker in your ASP.NET Core projects, this course is designed to equip you with the skills and knowledge you need to succeed.\nCourse Highlights:\nIntroduction to ASP.NET Core: Understand the fundamentals of ASP.NET Core, its architecture, and its role in modern web development.\nDocker Fundamentals: Explore the world of containerization with Docker and learn how to create, manage, and optimize containers for your ASP.NET Core applications.\nBuilding ASP.NET Core Applications: Dive into ASP.NET Core application development, covering topics like routing, middleware, controllers, and views.\nCloud-Native Principles: Learn the principles of cloud-native development, including microservices architecture, scalability, and fault tolerance.\nContainerizing ASP.NET Core Apps: Discover how to containerize your ASP.NET Core applications using Docker, making them portable, efficient, and easy to deploy.\nDocker Compose: Master Docker Compose to orchestrate multi-container applications effortlessly and manage dependencies between components.\nMonitoring and Logging: Implement robust monitoring and logging solutions to gain insights into your cloud-native ASP.NET Core applications.\nSecurity Best Practices: Learn best practices for protecting your applications and data using ASP.NET Core and Docker containers.\nScaling and Load Balancing: Understand how to scale your applications horizontally and set up load balancing to handle increased traffic.\nBy the end of this course, you will have the skills and confidence to build, containerize, and deploy cloud-native ASP.NET Core applications with Docker. You'll also be well-equipped to tackle real-world projects and stay on the cutting edge of modern web development practices.\nJoin us on this exciting journey into the ASP.NET Core, Docker, and Kubernetes world, and let's turn you into a cloud-native development expert. Enroll now and start building scalable, portable, and efficient web applications for the cloud!",
      "target_audience": [
        "Beginner to Intermediate .NET Core Developers",
        "Docker beginners",
        "Kubernetes beginners"
      ]
    },
    {
      "title": "Cloud-Powered Web App Development with AWS and PHP",
      "url": "https://www.udemy.com/course/cloud-powered-web-app-development-with-aws-and-php/",
      "bio": "AWS Foundations | IAM | Amazon EC2 | Load Balancing | Auto-Scaling Groups | Route 53 | PHP | MySQL | App Deployment",
      "objectives": [
        "Understanding of cloud computing and Amazon Web Services (AWS)",
        "Proficiency in creating and configuring AWS accounts and environments",
        "Knowledge of AWS pricing and billing models",
        "Mastery of Identity and Access Management (IAM) policies and permissions",
        "Ability to launch and configure Elastic Compute Cloud (EC2) instances",
        "Familiarity with security groups, key pairs, and Elastic IP addresses",
        "Competency in using AWS storage services, such as Elastic Block Store (EBS) and Simple Storage Service (S3)",
        "Expertise in creating and using Elastic Load Balancers (ELB) and Auto Scaling Groups (ASG) for load balancing and scaling web applications",
        "Knowledge of DNS management using Route 53",
        "Proficiency in PHP programming language fundamentals",
        "Ability to interact with databases using PHP and execute SQL queries",
        "Understanding of PHP security best practices, including SQL injection prevention and user authentication",
        "Ability to design and implement a database schema for a web application",
        "Mastery of PHP scripting to interact with a database and implement user authentication using sessions and cookies",
        "Competency in creating a simple blog interface using HTML and CSS and protecting the blog content using PHP authentication.",
        "Students will gain practical experience in creating and deploying a member-only blog with user authentication using PHP and MySQL on AWS."
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course provides a comprehensive introduction to cloud computing using Amazon Web Services (AWS) and web application development using PHP and MySQL. Students will gain an overview of AWS and its core services, including EC2 and storage, before delving into IAM: Identity and Access Management, which enables control of access to AWS resources. Students also learn how to launch EC2 instances, store data in AWS, and use Elastic Load Balancers (ELB), Auto Scaling Groups (ASG), and Route 53 to create a highly available and scalable web application.\n\nThe course begins with an explanation of AWS, its benefits, and services offered, with a focus on creating an AWS account, configuring an AWS environment, and understanding billing and pricing models. Students then learn about IAM policies, permissions, and Multi-Factor Authentication (MFA) to manage users, groups, and roles for AWS resource access control.\n\nThe course proceeds to cover AWS compute service, EC2, which allows virtual servers in the cloud, and provides flexibility and scalability for web applications. The course teaches how to create an EC2 instance, connect to it using SSH, and configure it for web applications, as well as information about security groups, key pairs, and Elastic IP addresses. Additionally, students learn about AWS storage, including Amazon Elastic Block Store (EBS) and Amazon Simple Storage Service (S3), and how to use them to store and manage data.\n\nThe course then covers ELB, ASG, and Route 53, which provide load balancing, automatic scaling, and DNS management, respectively. Students learn how to use ELB to distribute incoming traffic to multiple EC2 instances, ensuring high availability and fault tolerance. They will also learn how to use ASG to add or remove EC2 instances based on demand and use Route 53 to manage DNS records for their web application.\n\nThe next section of the course teaches the fundamentals of PHP and MySQL, including variables, control structures, loops, functions, and how to interact with databases using PHP. Students learn how to create and execute queries, fetch results, and handle errors, as well as PHP security best practices, including SQL injection prevention and user authentication.\n\nFinally, students will apply what they have learned by creating a member-only blog with user authentication using PHP and MySQL. They will learn how to design a database schema, create PHP scripts to interact with the database, and implement user authentication using sessions and cookies. They will also learn how to create a simple blog interface using HTML and CSS and how to protect the blog content using PHP authentication.\n\nIn summary, this course provides students with a solid foundation in AWS, web application development using PHP and MySQL, and the skills necessary to design, develop, and deploy web applications in the cloud using AWS. By the end of the course, students will understand AWS core services, IAM, EC2, storage, and load balancing and be able to use them to create highly available and scalable web applications.",
      "target_audience": [
        "Aspiring web developers looking to learn cloud-based web application development.",
        "Professionals interested in learning cloud computing using AWS for their organization's web applications.",
        "Entrepreneurs looking to build scalable and highly available web applications in the cloud.",
        "IT professionals interested in cloud computing and its core services for infrastructure management and maintenance.",
        "Individuals looking to acquire new skills or enhance their current ones in web application development using PHP and MySQL in the cloud."
      ]
    },
    {
      "title": "Become A Full Stack Web Developer in 14 Days",
      "url": "https://www.udemy.com/course/become-a-full-stack-web-developer-in-14-days/",
      "bio": "Learn all the skills that are needed by companies today, and land your next dream job.",
      "objectives": [
        "Understand industries most popular web technolgies",
        "Create their own Web Apps/Scripting"
      ],
      "course_content": {},
      "requirements": [
        "Some basic knowledge of programming is helpful but not required",
        "You might have to install third part software to practice XAMPP or WAMP etc"
      ],
      "description": "This course covers all leading programming languages, starting with PHP, MySQL, Javascript, jQuery, Ruby on Rails, AngularJS and NodeJS.\nYou are meant to watch 1 hour per day for 14 days. This is a commitment you must set aside before you start this course.\nWe will start with PHP where we will cover basic syntax, variables, loops and decision constructs. Then we will learn object oriented features along with string functions. After this we will move to arrays then after understand how REQUEST, GET, and POST works with server variables. Next will be how to connect to MySQL database.\nNext section will cover MySQL starting with creating database and tables, then we will move to basic commands INSERT and SELECT along with WHERE clause. We will also practice how to sort data. Then understand how JOINs work on multiple tables. After this we will touch the section where see practice data manipulation using basic UPDATE and DELETE commands.\nAfter MySQL we will start with JavaScript, where we will learn how to write JavaScript inside HTML tags. Then we will dive in to basic types with arithmetic examples. We will understand how string and boolean works. We will also understand how complex arrays work in JavaScript along with most useful functions. We will discuss how conditional statements work, then learn loops in JavaScript. Document Object Model will be covered in details along with simple practice exercises.\nThen we will understand jQuery - JavaScript library works with easy to understand demos. This section will cover Selectors, Events, Effects and Animations and many more. We will learn how to change HTML content of a webpage using jQuery. With the discussion and demos we will cover AJAX with how to handle request, response and errors.\nIn Ruby section we will learn how to run Ruby interactively at the command prompt. Then understand variable, constant, variables, methods, classes and control structures. We will also cover attribute specifiers, then learn implementing inheritance and how method access in Ruby works.\nThen we will move on to Rails with Model View Controller design pattern and how it implements it. We will build small hello world app using scaffold in Rails. We will make contact app with simple controller. We will add action to this app such as show, edit and delete.\nIn AngularJS section we will try to understand Expressions, two way data handling along with our first basic app. Then we will dive in to usage of ng-repeat, ng-show, ng-hide & ng-if, after this we will learn how form submission works with validations and how search and case filter works.\nAnd then at last we will learn NodeJS - a powerful JavaScript engine. We will understand basic of working with NodeJS then we will understand how core libraries work along with Node Package Manager. We will learn three ways to write and run simple web server using node.\nI hope you’ll join us for this exciting course.",
      "target_audience": [
        "Beginner who wish to learn all leading web technologies",
        "Expert to brush up their knowledge of web technologies"
      ]
    },
    {
      "title": "A Web Development Crash Course in HTML5 and CSS3",
      "url": "https://www.udemy.com/course/crash-course-html-and-css/",
      "bio": "Learn HTML5 and CSS3 so that you can build your own website! No programming experience required.",
      "objectives": [
        "Program using HTML5 and CSS3",
        "Create your own website"
      ],
      "course_content": {
        "Introduction": [
          "Welcome!",
          "Setting up your Development Environment"
        ],
        "HTML - The Basics": [
          "Introduction to HTML",
          "Programming Practices",
          "Elements",
          "Attributes",
          "Checkpoint Quiz",
          "Headings",
          "Paragraphs",
          "Links and Anchors",
          "Images",
          "Lists",
          "Tables",
          "Quotations and Citations",
          "Computer Code",
          "Formatting",
          "Colors",
          "Inline Styling",
          "Classes and IDs",
          "HTML Basics Quiz"
        ],
        "HTML - Forms": [
          "Forms",
          "Input Types",
          "Other Form Elements",
          "Input Attributes"
        ],
        "CSS": [
          "Introduction to CSS",
          "Syntax",
          "Selectors",
          "Backgrounds",
          "Text",
          "Fonts",
          "Links",
          "Lists",
          "Tables"
        ],
        "The \"Box Model\"": [
          "The Box Model"
        ],
        "CSS - Continued": [
          "Border",
          "Margin and Padding",
          "Dimensions",
          "Display",
          "Position",
          "Float",
          "Alignment",
          "Combinators",
          "Pseudo-Classes",
          "Pseudo-Elements"
        ],
        "HTML - Advanced": [
          "Layout",
          "Iframes"
        ],
        "HTML5": [
          "Geolocation",
          "Drag and Drop",
          "Local Storage",
          "Application Cache"
        ]
      },
      "requirements": [
        "No prior knowledge or experience is necessary!",
        "We will get you set up in early lessons using only free resources."
      ],
      "description": "HTML and CSS may seem intimidating, but there is a method to the madness. This course will show you everything that you need to know in order to make a functional and elegant website that suits your individual needs.\nYou do not need to have any programming experience to take this course. I will show you the basics, demonstrate examples, list common uses, and walk you through the development process step-by-step.\nThis course will cover:\nLaying out your HTML environment\nStyling your website\nHTML tags and elements\nLinking pages together\nImages and media content\nHTML organization with classes and IDs\nThe \"box model\" of block elements\nTables and lists\nCharacter entities and symbols\nPseudo-classes and pseudo-elements\nYou will also learn good web programming practice and debugging skills through practice and observation. This will make your projects easier for another developer to read and easier for you to read if you take a break.\nClick Take This Course and learn how to make a website of your very own!",
      "target_audience": [
        "This course is great for anyone interested in learning HTML5 and CSS from the ground up. The course is designed to teach the fundamentals of web development, but delves into advanced HTML5 and CSS3 techniques by the end of the course."
      ]
    },
    {
      "title": "Web Development: Make A Website That Will Sell For Thousands",
      "url": "https://www.udemy.com/course/web-development-by-doing-html5-css3-complete-from-scratch/",
      "bio": "Watch Over The Shoulder Of A Professional Web Developer, And Learn How To Code A Beautiful, Modern Website From Scratch",
      "objectives": [
        "Make a complete website from scratch",
        "Learn what a website actually is, and what its made of",
        "Learn the basics of HTML / HTML5",
        "Advanced topics on HTML / HTML5",
        "CSS / CSS3 Basics",
        "CSS / CSS3 Advanced topics",
        "Use Dreamweaver CS6"
      ],
      "course_content": {},
      "requirements": [
        "Must actually want to learn this new skill"
      ],
      "description": "If your looking to get a start on learning the, fun, and profitable skill of web development, then this course is for you. Unlike other courses which teach tedious theory ABOUT making a website, you'll learn practical knowledge on HOW to do it. This course takes you step-by-step as we build a complete professional website from scratch. Websites like the one we build in this course can easily sell for $1,000 - $4,000.\nThe course starts out assuming that you know nothing, and shows you where to get the free tools needed to make a website. Then we jump right in and start learning HTML5 and CSS3 the easy way.\nBy the end of the course, you'll be able to make a complete professional website and be able to sell your work for a lot of $. Whether you're looking for a new career, to make a little extra on the side, or you want to be able to make a website for yourself and friends, you've come to the right place.\nYou could be making money RIGHT NOW on the internet instead of wasting your time. Enrolling in this course will give you all the skills you need to do so.\nWe begin by learning HTML which is the structure that makes up every single website. Once the structure of our site is complete we begin styling it using CSS, which is also used on every single website. CSS is used to style everything on a website, including: background colors (or images), font sizes, font colors, as well as the width, height, and position of everything on a webpage.\nWe then cover topics which are critical to modern websites, like responsive design and embedding images and videos. We also go over how you can develop a website locally on your computer, then put the files on a live server for the world to see.\nEnroll now to invest in yourself and to open the doors to this exciting field.",
      "target_audience": [
        "People new to web design",
        "Anyone looking for a huge jump-start in web development",
        "If you&#39;re looking for a better understanding of HTML / CSS",
        "Beginners and Intermediate level students will both have a lot to learn"
      ]
    },
    {
      "title": "Learn by Example : ReactJS",
      "url": "https://www.udemy.com/course/learn-by-example-reactjs/",
      "bio": "A step-by-step guide to component-driven development using React",
      "objectives": [
        "Decompose complex UI into simple and reusable components using React and JSX",
        "Use props and state in the right way with components",
        "Customize components using React lifecycle methods",
        "Use mixins, ES6 classes, the React context and other advanced features",
        "Work with React plugins for animations and routing",
        "Use React in a production environment"
      ],
      "course_content": {
        "You, This Course and Us": [
          "You, This Course and Us"
        ],
        "Introduction": [
          "What Is React?",
          "What Makes React Cool?"
        ],
        "Install and Set up": [
          "Npm And Http Server Install",
          "Running Examples On The Http Server",
          "Accessing ReactJS Files",
          "Using SublimeText For Coding In React"
        ],
        "React Basics": [
          "Example 1: Hello World",
          "The Virtual DOM",
          "Example 2: Nested Elements",
          "Terms In React",
          "Example 3: Factory Functions"
        ],
        "JSX and the Babel Compiler": [
          "What Is JSX?",
          "The Babel REPL Environment",
          "Babel For Development And Production Environments",
          "Example 4: Elements With JSX"
        ],
        "React Components": [
          "Introduction To Components",
          "Example 4: A Stateless React Component",
          "Example 5: The Render Function"
        ],
        "State and Props: Immutable Props": [
          "Introduction To State And Props",
          "Example 7: Props",
          "Example 8: Passing Props To Nested Components",
          "Example 9: Transferring Props To Child Components",
          "Example 10: The Spread Operator",
          "Example 11: Dynamic Types Using Props",
          "Example 12: Validation With Prop Types",
          "Example 13: Accessing A Component's Children Using Props",
          "Example 14: Lambda Expressions As Children",
          "Example 15: Components And Child Expressions"
        ],
        "State and Props: The Component as a State Machine": [
          "Components As State Machines",
          "Example 16: State",
          "Example 17: Update State",
          "Example 18: Accessing Previous State",
          "Properties Of State"
        ],
        "Synthetic Events in React": [
          "Capture And Bubble Phases",
          "Example 19: Events",
          "The Synthetic Event",
          "Example 20: Working With Synthetic Events"
        ],
        "Bringing It All Together in A Single Application": [
          "Example 21: The Comment App Visual Representation",
          "Example 22: The Comment App With Props",
          "Example 23: Adding A New Comment",
          "Example 23: Deleting Comments"
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS",
        "Basic programming in Javascript"
      ],
      "description": "NOTE: This course uses React 15.3.2\nReact JS re-imagines the web user interface by breaking complex UI down into granular, reusable components. Learn ReactJS by example: from basic building blocks to animations and routing using React add-ons\nLet's parse that.\nRe-imagines the web user interface: React is not a framework, it is a library focused on building web UI which is compact, robust, maintainable and reactive to user and server updates.\nBreaking complex UI down into granular, reusable components: Each component in React is self-sufficient and knows how to handle its own state and behavior. Components come together in the form of a tree hierarchy to build complex components with many moving parts\nIn this course, we will learn by example. Each example is self-contained, has its source code attached, and gets across a specific React use-case. Each example is simple by itself, but they come together as building blocks to build complex use cases.\nWhat's included in this course:\nInstalling and setting up a basic development web server with React, JSX for HTML specification and the Babel compiler\nReact basics: React nodes, fragments and components, performance optimizations using the virtual DOM, the Babel compiler for JSX transformation, passing data to components using state and props, the spread operator, synthetic events\nReact in-depth: The React component lifecycle, the component mounting, updating and unmounting phases, mixins, ES6 classes to specify React components, controlled components, forms and validation, accessing native DOM elements, the React context, DOM reconciliation\nReact in production environments:  npm, Webpack, Babel 6 and JSX to build React code in a production environment, animations using transition groups and CSS transition groups, single page applications and routing",
      "target_audience": [
        "Yup! Any web programmer looking to harness the power of component driven development using React",
        "Nope! Students who have never done web development using Javascript before"
      ]
    },
    {
      "title": "AWS lambda for .NET C# developers",
      "url": "https://www.udemy.com/course/lambda-csharp/",
      "bio": "Create AWS lambda function using C# easy",
      "objectives": [
        "Build AWS Lambda in C#",
        "Can create asynchronous and synchronous Lambda Services"
      ],
      "course_content": {
        "Introduction to this course": [
          "Introduction Lecture"
        ],
        "AWS Lambda Projects": [
          "Creating AWS Lambda Project in Visual Studio",
          "Deploying AWS Lambda to the Cloud"
        ],
        "AWS Lambda Function Handler": [
          "AWS Lambda Function Handler",
          "AWS Lambda - Handling POCO Types in C#",
          "AWS Lambda Asynchronous C# Handler"
        ],
        "AWS Lambda Context and Logging": [
          "AWS Lambda Context",
          "AWS Lambda Logging"
        ],
        "Error Handling": [
          "Error Access and Handling"
        ],
        "Connecting to AWS Lambda": [
          "Accessing Lambda Functions"
        ],
        "Working with DynamoDB": [
          "Introduction to DynamoDB",
          "Adding/Updating items in DynamoDB",
          "Retrieving/Deleting items in DynamoDB"
        ],
        "Triggers with Lambda Functions": [
          "Handling DynamoDB Triggers",
          "Handling S3 Event Triggers"
        ],
        "Unit Testing": [
          "Unit Testing for Lambda Function"
        ]
      },
      "requirements": [
        "C# Knowledge",
        "AWS Account"
      ],
      "description": "Hello and welcome to this course. This course is about AWS Lambda function in C#. So now, for sure, you are wondering what Lambda Functions is and how you can use them. Let me please explain.\nAWS (Amazon Web Services) is the leading cloud provider in the world. It offers more services than any other competitors do and many of these services are connected and easy to use. As the rise of the serverless architecture, the Lambda Functions provide a good point to create a service that can be called and run when needed and execute a certain command. Instead of having to allocate servers for a certain events, Lambda can handle multiple request upon a certain limit instead of adding servers to it.\nLambda functions are easy to create via Visual Studio. Moreover, the people in AWS have a good support for it. You will find it easy to create a certain lambda project and uploading it to the cloud. Also, you only pay for what you use not for hosting. So if you use your function for 200 millisecond (That’s right pricing is per millisecond so cheap!) you will only pay for this amount of time no more.\nLambda function can be exposed from inside AWS different services such as S3, DynamoDB. In addition, you can connect to it via any .NET application (Console, ASP.NET, etc.). Integration is easy and you will need only to provide your API keys and set the region. You are all set to go to connect to your function and do whatever operation needed for it.\nUsing C#, you will find it much easier to handle AWS Lambda Functions instead of trying to achieve the same result using other languages. And the NuGet packages for AWS SDK will expose many of the needed functionality for your Lambda Function.\nThis course will cover all the needed steps for you, starting from creating the project until unit testing. We will walk you through the needed steps to make sure that you can create a successful AWS Lambda Function in C#.",
      "target_audience": [
        "Anyone interested in developing AWS Lambda"
      ]
    },
    {
      "title": "Tailwind CSS - Build a Blog App Project Using Tailwind CSS",
      "url": "https://www.udemy.com/course/tailwind-css-build-a-blog-app-project-using-tailwind-css/",
      "bio": "Learn Tailwind CSS, Design a Complete Blog App Project with Tailwind CSS, Responsive Design With Tailwind CSS",
      "objectives": [
        "Tailwind CSS",
        "Build a Complete Project Using Tailwind CSS",
        "Responsive Design Using Tailwind CSS",
        "A Complete Blog App Project With Tailwind CSS"
      ],
      "course_content": {
        "Introduction": [
          "Project Overview"
        ],
        "Create Project and Setup Part-1": [
          "Create Project and Setup Part-1"
        ],
        "Basics of Tailwind CSS Part-2": [
          "Basics of Tailwind CSS Part-2"
        ],
        "Text For-mating Part-3": [
          "Text For-mating Part-3"
        ],
        "Flex Box Part-4": [
          "Flex Box Part-4"
        ],
        "Position Part-5": [
          "Position Part-5"
        ],
        "Responsive Breakpoints Part-6": [
          "Responsive Breakpoints Part-6"
        ],
        "Create Project Part-7": [
          "Create Project Part-7"
        ],
        "Project Card Design Part-8": [
          "Project Card Design Part-8"
        ],
        "Project Footer and Formatting Part-9": [
          "Project Footer and Formatting Part-9"
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS"
      ],
      "description": "Explore the world of Tailwind CSS with this course designed for beginners. You will construct a responsive website from start to master the fundamentals of this potent utility-first CSS framework. With Tailwind CSS, you can construct modern, eye-catching websites regardless of your experience level in web development. This course will teach you the essential skills to get started.\nIn this course, you'll learn :\nLearn how to set up Tailwind in your project and obtain an understanding of the fundamental ideas and principles underlying Tailwind CSS.\nConstruct a responsive layout. Discover how to use Tailwind's integrated responsive design features to create a website layout that easily adjusts to various screen sizes and devices.\nRealizing Tailwind CSS's advantages.\nAdding Tailwind CSS to your project setup.\nMaking a navigation menu that is responsive.\nMaking content grids that are responsive.\nPutting in place a grid structure to show blog entries.\nAdding extra information and navigation links in the footer area.\nCreating a visually appealing footer with social media icons.\n\n\nBy the end of the course, you will have used Tailwind CSS to create a fully responsive website from scratch, and you will be equipped with the knowledge and self-assurance to use what you've learned on your own projects.",
      "target_audience": [
        "Those who want to learn Tailwind CSS from the ground up as beginners",
        "If you want to use Tailwind CSS for your project",
        "If you want to create a complete project using Tailwind CSS"
      ]
    },
    {
      "title": "Web Development HTML CSS & JS a Beginner to Advance guide",
      "url": "https://www.udemy.com/course/web-development-a-practical-html-css-and-js-beginner-course/",
      "bio": "HTML5 CSS3 SASS and JavaScript Modern Responsive websites using CSS Flexbox & CSS Grid, Manipulate the DOM & send JSON",
      "objectives": [
        "HTML5 Boilerplate, Semantic Layout and essential Tags",
        "CSS Fundamentals including FlexBox and CSS Grid",
        "CSS3 Variables, Transitions, Dropdowns, Overlays & More",
        "JavaScript",
        "Create static HTML and CSS Landing pages",
        "SASS with advance CSS technology",
        "Flexbox & CSS Grid Projects",
        "Web Development",
        "Front End Web Development",
        "Create a beautiful, responsive landing page for a startup",
        "Use common JS data structures like Arrays and Objects",
        "Manipulate the DOM with vanilla JS",
        "Write Javascript functions, and understand scope and higher order functions",
        "Create static HTML and CSS portfolio sites and landing pages",
        "Learn to organize your code and become a professional web developer",
        "Learn HTML essentials",
        "Learn CSS essentials",
        "Learn JS essentials"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Beginner-HTML 5": [
          "HTML 5 - Introduction",
          "HTML 5 - Explained",
          "Test Your Mind",
          "HTML 5 - Boilerplate",
          "HTML 5 - Elements",
          "HTML 5 - Headings",
          "Test Your Mind",
          "HTML 5 - Paragraph",
          "Test Your Mind",
          "HTML 5 - Anchor",
          "HTML 5 - Lists"
        ],
        "Test Your Might": [
          "Test Your Might"
        ],
        "Intermediate HTML 5 & Beginner CSS 3": [
          "HTML5-CSS3 - Intro",
          "HTML5-CSS3 - Code Editor",
          "HTML5-CSS3 - Attributes",
          "HTML5-CSS3 - Table",
          "HTML5-CSS3 - Divs and Spans",
          "HTML5-CSS3 - Forms",
          "HTML5-CSS3 - Input",
          "HTML5-CSS3 - Labels",
          "HTML5-CSS3 - Simple Form Validations",
          "HTML5-CSS3 - Dropdown and Radio Buttons",
          "HTML5-CSS3 - Form Example and Recap",
          "Test Your Might - HTML5-CSS3 - Form Exercise",
          "HTML5-CSS3 - Form Solution",
          "Test Your Might - HTML5-CSS3-List And Text Assignment",
          "HTML5-CSS3-List And Text Solution",
          "HTML5-CSS3-List And Text Page Extension",
          "HTML5-CSS3-Linking CSS to HTML",
          "HTML5-CSS3-Selectors",
          "HTML5-CSS3-Text Formatting",
          "HTML5-CSS3-Colors",
          "HTML5 CSS3 Color Gradient",
          "Create a simple webpage using HTML"
        ],
        "Intermediate HTML 5 & Intermediate CSS 3": [
          "HTML5-CSS3-The Box Model",
          "HTML5-CSS3-Box Model-Border Radius",
          "Border Radius Tricks and Tips",
          "HTML5-CSS3-Box Model-Box-Shadow",
          "Box Shadow Tricks and Tips",
          "HTML5 & CSS 3 - Advanced Selectors And !Important",
          "HTML5 & CSS 3 - AS-Pseudo - Classes:Root",
          "HTML5-CSS3-AdcancedSelector-Hover",
          "HTML5-CSS3-AdcancedSelector-Focus",
          "HTML5-CSS3-AdcancedSelector-Enabled-Disabled",
          "HTML5-CSS3-AdcancedSelector-Checked",
          "HTML5-CSS3-AdcancedSelector-Child",
          "HTML5CSS 3-AS-Pseudo-Elements"
        ],
        "Test Your HTML5 Semantic elements Might !": [
          "HTML5 Semantic elements Test Your Might!"
        ],
        "Advance CSS3 - Flex Box": [
          "Advance CSS3-FlexBox-Introduction",
          "Advance CSS3-FlexBox-Displaying Flex & Flex Direction",
          "Advance CSS3-FlexBox-Flex-Wrap",
          "Advance CSS3-FlexBox-Justify-Content",
          "Advance CSS3-FlexBox-Align-Items and Content",
          "Project-FlexBox-Landing Page-Introduction",
          "Project-FlexBox-LP-Laying Plans",
          "Project-FlexBox-LP-Navigation",
          "Project-FlexBox-LP-Header",
          "Project-FlexBox-LP-Portfolio",
          "Project-FlexBox-LP-About",
          "Project-FlexBox-LP-Contact",
          "Project-FlexBox-LP-Footer And Adjustments",
          "Project FlexBox-LP Resources"
        ],
        "Advance CCS3 - Grid Layout": [
          "Introduction to the section",
          "Grid Components",
          "Grid Template Columns and Rows",
          "Grid Template Areas",
          "Grid Template",
          "Grid Gaps",
          "Grid-Justify-Items",
          "Grid-Align-Items",
          "Grid-Justify-Content",
          "Grid-Auto",
          "Grid layout Landing Page-Introduction",
          "Grid-LP-Laying Plans",
          "Grid-LP-Boiler Plate",
          "Grid-LP-Menu",
          "Grid-LP-Header",
          "Grid-LP-Services",
          "Grid-LP-Portfolio",
          "Grid-LP-About",
          "Grid-LP-Contact",
          "Grid-LP-Footer"
        ],
        "CSS3 Queris": [
          "At-Rules: Import, Media, Keyframe"
        ],
        "CSS3 Practice Projects": [
          "CSS Practice Projects -1"
        ]
      },
      "requirements": [
        "Basic PC/Mac Knowledge",
        "Beginner Curiosity"
      ],
      "description": "This is a beginner friendly course. This course will tech you the Foundations of Web Development. This a more practical orientate Course. Aldo we will start up slow with some basic definitions, the main focus here is to have as much as possible hands on experience. Learning by doing is the key word. That means Examples, Assignments and Exercises!\nAt this point I would like to invite you to join me on this journey and enrich yourself with the foundations of web development. In this Course You will learn Modern HTML 5, CSS 3, and JavaScript, and through applying them you will be able to building from Easy to progressively more complex responsive Responsive Web Pages.\nThroughout the course we cover tons of tools and technologies including:\nHTML5\nCSS3\nCSS FelxBox\nCSS Grid Layout\nProjects\nSASS\nJavaScript\nDOM Manipulation\nJSON\nProjects , Projects and more Projects :)\n\n\nTwo Important Notes about this Course:\n1. This is a hands-on Learning by doing Course. This means that we are going to start up Slowly with basic definitions in HTML and CSS and then we will combine them together by building the structure and applying design to our sites. After that we will apply JS in order to make the Site do Thinks.\n\n\n2. Is that I will be constantly Updating the Content with New Documentation, Examples and Exercises in order to bring you as much value as possible. So you can always lean beck on this Course if you want to refresh your memory about something.\n\n\nBonus!\n3. The most important thing the you need to know in life is where to find the information you need!",
      "target_audience": [
        "Beginner Web Developers",
        "Beginner Web Designers",
        "Beginner HTML",
        "Beginner CSS",
        "Beginner SASS / SCSS",
        "Beginner JavaScript"
      ]
    },
    {
      "title": "DRUPAL 10 & 9 TUTORIAL -Drupal Master Class 5 Projects 2024",
      "url": "https://www.udemy.com/course/drupal-9-tutorial-drupal-master-class-build-9-projects/",
      "bio": "Drupal 10 & 9 Hands-on : Clone Google Search , Netflix , Outlook , DISNEY Tips and Tricks - Drupal 10 and Drupal 9",
      "objectives": [
        "Kickstarting your Entrepreneurial goals by building SCALABLE, SECURE web applications at LIGHTNING SPEED with Drupal",
        "Build 9 fully functional DRUPAL PROJECTS from Scratch - from Beginner level to ADVANCED LEVEL",
        "Drupal 10 and Drupal 9 Theming",
        "Build Nine (9!!) fully functional DRUPAL 10 and Drupal 9 PROJECTS from Scratch - from Beginner level to ADVANCED LEVEL",
        "Learn Transferrable Technical Skills - User Management, Content Management, Theming, Taxonomy, Content Types and hundreds of other core concepts",
        "Learn to leverage THOUSANDS of free Drupal Modules (16,000+) are available in the community to help you quickly add specific features to your website.",
        "Build your consulting career with Drupal - the most powerful Open Source CMS in the world",
        "You will learn Rapid Application Development with Drupal - in this course.",
        "Learn to use Drupal INDEPTH like an EXPERT- massively scalable, 100% free, rock solid security, dependability and constant security patches and updates.",
        "Design and build CONTENT MANAGEMENT SYSTEMS using Drupal - while understanding the core principles behind"
      ],
      "course_content": {
        "DRUPAL SETUP AND INSTALLATION WITH - Acquia Dev Desktop - ( DEPRECATED )": [
          "OTHER INTRODUCTIONS",
          "DRUPAL 9 SETUP AND INSTALLATION WITH AQUA DEV DESKTOP CONFIG"
        ],
        "MAC : DRUPAL 10 : HOW TO INSTALL AND SETUP DRUPAL 10 WITH TERMINAL": [
          "Installation of DRUPAL 10 with Terminal",
          "DRUPAL 10 INSTALLATION WITH TERMINAL OPTION 2"
        ],
        "MAC : DRUPAL 10 : SETUP OF DRUPAL FOR MAC USERS WITHOUT TERMINAL": [
          "DRUPAL SETUP WITHOUT TERMINAL - JUST INSTALL AND RUN",
          "Add New Version of PHP Into SERVER and Continue Installation"
        ],
        "WINDOWS : DRUPAL 10 : QUICK SETUP OF DRUPAL 10 FOR WINDOWS": [
          "WINDOWS - DRUPAL 10 : Setup Drupal 10 on Windows Easy Steps"
        ],
        "GOOGLE SEARCH ENGINE WITH DRUPAL DEVELOPMENT": [
          "Google Search Theme Creation with the info.yml File",
          "Google Search Drupal 9 Theme Installation and Activation",
          "Final Development of Google Search Engine",
          "How do you import already existing Drupal applications into Acquia Dev Desktop"
        ],
        "COMPLETE OVERVIEW OF DRUPAL 9 AND MODULES IMPLEMENTATION FOR DRUPAL 9": [
          "17 MODULES REQUIRED FOR DEVELOPMENT - DRUPAL 9",
          "Drupal 9 Modules Installations and Overview",
          "Drupal 9 - Complete Administrator's Run-Through - CONTENT",
          "Content Types Creation and Customization , Blocks and Custom Blocks",
          "Paragraph Types Concatenated with Content Types - Drupal Best Content Layout",
          "Display Mode, Custom Menu , People, Drupal Status Report and ACL",
          "Drupal 9 Views Creation and Customization For Pages and Blocks",
          "What are the functionalities or usage of Paragraph Module and Pathauto Module?"
        ],
        "NETFLIX CLONE DEVELOPMENT IN DRUPAL 9": [
          "Overview and HTML , CSS AND JS Files",
          "Drupal 9 Installation and Module Setup for Netflix",
          "NETFLIX THEME SETUP AND VALIDATION",
          "TEMPLATE AND TWIG FILE STRUCTURE",
          "NETFLIX - DRUPAL 9 SERVICES AND CONFIGURATION",
          "NETFLIX - DRUPAL 9 HOOK ACTIVATION FOR THEMING DRUPAL 9",
          "NETFLIX TEMPLATE STRUCTURE DESIGN FOR DRUPAL 9",
          "CONTENT TYPES CREATION FOR THEME DRUPAL 9",
          "HOMEPAGE AND FAQ CONTENT and PAGE CREATION FOR NETFLIX DRUPAL 9",
          "NETFLIX Frequently Asked Questions on Homepage",
          "VIEWS USING THE DRUPAL KELELOGY-APPROACH FOR DRUPAL 9",
          "NETFLIX DRUPAL 9 BLOCKS AND BLOCK PLACEHOLDERS - HOMEPAGE AND SUB SECTIONS",
          "LOGIN PAGE CUSTOMIZATION TO USE YOUR THEME NETFLIX",
          "FORM POST FROM LOGIN PAGE AS ADMIN AUTHENTICATION",
          "REGISTER PAGE CUSTOMIZATION AND USING DRUSH",
          "SUMMARY OF DRUPAL 9 INTEGRATION WITH NETFLIX APPLICATION",
          "DOWNLOAD THEME SOURCE CODE ZIP"
        ],
        "DISNEY WEBSITE CLONE DEVELOPMENT IN DRUPAL 9": [
          "DISNEY WEBSITE CLONE DEVELOPMENT IN DRUPAL 9 - INTRODUCTION AND OVERVIEW",
          "THEME INSTALLATION AND CUSTOMIZATION",
          "DEBUG MODE AND INSPECTING THE THEME",
          "Header and Footer Creation and Setup for Disney",
          "Disney Website Drupal Menu Development and Integration",
          "THEME STURCTURE AND SETUP - DISNEY CLONE",
          "STRUCTURING THE PARTIALS PAGE - DISNEY CLONE",
          "MENU AND NAVIGATION INTEGRATION IN DRUPAL 9 - DISNEY",
          "MOVIES CONTENT TYPE ANALYSIS, FEATURES AND CREATION",
          "PARAGRAPH MODULE AND HOW TO USE IT WITH MOVIES / CONTENT UPLOADING",
          "INTEGRATING PATHAUTO AND FORM GROUP FOR NEAT FORM DISPLAY - DRUPAL 9",
          "HOMEPAGE , VIEWS HEADER AND FOOTER INTEGRATION WITH OTHER PAGES",
          "Latest From Disney Page and Drupal 9 Theme Debugging",
          "Displaying Movies on the Homepage with Tricks and Tips",
          "Displaying Disney Parks on the Homepage with Tricks and Tips",
          "Creating the All Movies Page with Tricks and Tips",
          "Creating the MOVIE DETAIL PAGE with Tricks and Tips",
          "Render Content Type Field to Pages - Debugging",
          "Paragraph Module Usage - Rendering Fields Tips and Tricks",
          "Adjusting the Menu to render on all pages - Drupal 9 Using Tweak"
        ],
        "AWS SERVER SETUP AND USING AWS CLOUDSHELL FOR DRUPAL 9": [
          "DRUPAL 9 - AWS SERVER SETUP AND USING AWS CLOUDSHELL",
          "CODE BASE",
          "Extra Lecture on Joining the Tech Community"
        ]
      },
      "requirements": [
        "Basic HTML and CSS only",
        "Intermediate level computer proficiency is required - understanding the basics of installing softwares, browsers - and similar tasks"
      ],
      "description": "Become a professional with Drupal even with zero knowledge of Drupal 10 AND 9. 2024\nLearn New things about Drupal and How to be a Guru with Development of Drupal\nDrupal 10 & 9  is out and from now on - every new Drupal website should be using the latest version of this wonderful Content Management Framework.\nThat means that we should learn to change the front-end of our Drupal 10 & 9  system - the way we need it.\nThere are two main things that are changing the game in the Drupal 8 theming\n- Drupal 9 is built on top of the Symfony framework\n- There are lessons learned from Drupal 10 AND 9\nthat means that now the theming of a Drupal website is a bit different - everything is much more structured (almost all the markup is in template files), the templates are using Twig and everywhere one has to deal with code - one finds objects and classes.\nLearning these new unique techniques that I have discovered about Drupal 9, will save you years of try and error. You learn with practical examples and clone of real-life projects  - Drupal 9 Hands-on Tutorial: Clone  Google Search, Netflix, CNN , Outlook, APPLE , DISNEY, TOYOTA , OXFORD, ESPN\nIn the end - it is not as scary as it looks like - simply everything evolved into something much better, much simpler, and elegant, something that is not applicable only in the context of Drupal and that is following general web development best practices.\nIn this course, I tried to explain the general topics in the shortest and the clearest way possible as afterward I tried to illustrate everything with some simple examples. My opinion is that when you see some simple example working and when you try it by yourself - you already have the tools to investigate further and find exactly what you need to be do.\nI've been doing Drupal development and theming for many years now - so I know exactly are the topics that are needed the most - I tried to include all of those and in the end, I wrapped all that was learned in an example website that we will convert together form a static HTML-CSS version into a working Drupal 9 theme.\nLet's conquer together with the Drupal 9 theming layer!\n\n\nDo you want to Master the World's Most Popular Content Management Framework? Learn Drupal 9.x in this Comprehensive Course.\n\nLearning from my YEARS of experience as it has been condensed into this course - Drupal 10 & 9 Master Class - with generous tips, tricks, best practices, pitfalls - in each and every concept lesson.\nLearn the LATEST version - Drupal 10 and 9.x - - and stay miles AHEAD of the curve\nExtra: extra assignments, tips, tricks, and pitfalls in all sections\nStart from the very basics - this course makes no assumptions\nEarn promotions with your new skills - Become indispensable in your institution\nExtra - Project File downloads - PRACTICE EXACTLY what is shown in each and every lecture\nBy the end of the course - you will be able to provide incredible Drupal-based solutions.\n\n\n\n\nA review from a learner in my other course: \"I know the above tag is an oxymoron but then it is. A complete course is detailed to perfection which I did not come across in many courses. Srikanth as a tutor/ trainer is very good. Highly Recommended \" - by Hasib Patel\n\nLearn DRUPAL 9.x to create INCREDIBLY POWERFUL software web solutions.\nLearn to Use every aspect of Drupal - Content Management, User Management, User Experience, Extending Drupal with modules, Configurations, Application Structuring, and admin Reports.\nIdentify REAL LIFE problems and solutions - web application development, rapid prototyping, content management.\nSave Hundreds of hours and thousands of dollars - by using open source resources OPTIMALLY, identifying, preventing and mitigating RISKS\nLearn to Resolve the 1 PROBLEM that Entrepreneurs face by using Drupal - Budgets, Time and Resources De-mystify the 100s of features in Drupal - Content, Structure, Appearance, Extending, Configuration, People, Reports etc.",
      "target_audience": [
        "Everyone",
        "ANYONE who wants to learn DRUPAL 9",
        "ENTREPRENEURS who want to rapidly prototype functional web applications",
        "IT Professionals who want to build a quick and powerful Web Application",
        "MANAGERS who want to customer oriented web application",
        "PROFESSIONALS from all domains who want to learn a powerful Swiss-army web tool",
        "CONTENT MANAGEMENT professionals who want to learn DRUPAL",
        "UI, UX, Graphical professionals who want to understand Drupal Functionality",
        "MEDIA PROFESSIONALS who want to learn Content Management Solutions"
      ]
    },
    {
      "title": "PHP with MySQL: Build 7 PHP and MySQL Projects",
      "url": "https://www.udemy.com/course/php-with-mysql-2023-build-7-php-and-mysql-projects/",
      "bio": "Build 7 Amazing Projects with PHP MySQL Bootstrap PDO and Ajax-JQuery",
      "objectives": [
        "Get to know the main functions and common parts of every website",
        "Learn password hashing and de-hashing",
        "Create a full authentication system",
        "Learn the basics of validation and limit the user ability inside the web app",
        "Learn to create a URL shortening service",
        "Train your knowledge as a PHP developer",
        "Learn to send emails professionally and dynamically",
        "Learn to combine Ajax-Jquery with PHP",
        "Build a rating system",
        "Learn debugging in PHP and MySQL along the way with Ajax JQuery",
        "Build a live search system",
        "Learn how to deal with APIs",
        "Learn to build an Authentication System",
        "Create a dynamic comments system with Ajax JQuery"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Before you Start",
          "Installing Xampp",
          "Installing Visual Studio Code"
        ],
        "First Project: URL Shortening Service": [
          "Config File",
          "Inserting and Showing Links",
          "Shortening urls",
          "Counting Clicks pt.1",
          "Counting Clicks pt.2",
          "Code for the Final Version of the Project"
        ],
        "Second Project: Sending Emails with PHP": [
          "Sending Emails pt.1",
          "Sending Emails pt.2"
        ],
        "Third Project: Building an Authentication System": [
          "Intro to the Project",
          "Code for the Design of the Project",
          "Config File",
          "Register Page",
          "Logging Users in",
          "Logging in and Checking for Sessions"
        ],
        "Fourth Project: Building a Comments System": [
          "Intro and Preparing",
          "Creating Posts",
          "Showing Posts in Index",
          "Showing a Single Post",
          "Inserting Comments",
          "Showing Comments",
          "Deleting Comments",
          "Fixing Bugs pt.1",
          "Fixing Bugs pt.2"
        ],
        "Fifth Project: Creating a Rating System": [
          "Getting Started and Setting up the Plugin",
          "Creating the Ratings for every Post",
          "Showing the Rating for every Post",
          "Fixing Bugs pt.1",
          "Fixing Bugs pt.2"
        ],
        "Sixth Project: Build a Full Live Search System": [
          "Searching through Data pt.1",
          "Searching through Data pt.2"
        ],
        "Seventh Project: Creating a Weather App": [
          "What is an API",
          "Implementing the Weather App"
        ]
      },
      "requirements": [
        "Basic PHP, MySQL and PDO knowledge",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Do you want to develop your skills further as a developer? Did you build a couple of projects with PHP and MySQL, but you still think you are inexperienced and you are missing out on a lot of things when coming to developing bigger projects? If yes, then this course is the right resource for you. This course is very digestible and informative and it was created specifically to enhance your coding skills and knowledge not just in PHP and MySQL, but overall in developing web projects.\n\n\n\n\nHere is what we are going to do in this course. Naturally, we are going to get started by setting up the right tools for our projects. And after that, we are going to build our first simple yet very interesting project and that's a URL shortening service. The second project will be about sending emails in PHP and that's very important because it's a feature that almost every website has. The next project will be the starting of something big because it's an authentication system where I am going to teach you how to develop a login and a register page, how to hash and de-hash passwords, how to do validation and so much more. After this, we are going to build a comments system and this will be the biggest project in this course. We will begin first by doing a post system and then we will grab comments for every post that we have of course we will use Ajax-JQuery for inserting, deleting, and showing comments. after that, we will integrate a rating system into the previous two projects to make a bigger project. So, I will show how to download a JQuery plugin, how to integrate it and how to use it to do the rating system for every post, and so on. And the rating system is going to be implemented of course using Ajax-JQuery. The upcoming project is going to be also created with Ajax and JQuery and that's a live search system and we will combine it with our big project. The last project will be about building a weather app. All we are going to do is set up a form, allow the user to enter a city, and then give him the current degree of this city. So we will use an API to grab the current degree for this city. If that sounds like something that you are interested in, go ahead and get the course now. see you inside!!",
      "target_audience": [
        "Every PHP and MySQL developer who want to advance their skills",
        "Developers who want to explore web development further",
        "Developers who want to build cool projects and to build up their CVs"
      ]
    },
    {
      "title": "Front End Web Development with React JS, Angular, Bootstrap",
      "url": "https://www.udemy.com/course/web-development-with-html-css-bootstrapreact-js-angular/",
      "bio": "Front End Web Development with HTML, CSS, Bootstrap, React JS, Angular. The first step of Full stack Web Development.",
      "objectives": [
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap",
        "Learn HTML, CSS and Bootstrap 4 and UIs from scratch",
        "This course is the best way to learn React JS with redux, hooks and context",
        "Learn how to build single page applications with React JS",
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Learn to compile Sass in the easiest way possible using a GUI",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "You will learn to use basic tags which are used commonly",
        "You will be able to prepare lists in different formats",
        "You will be able to create commonly used user login and registration pages by learning the form structure.",
        "In the developing world, we will talk about all the details about web design compatible with different screens.",
        "Learn components, props, states and component life cycle methods in React JS",
        "Create reusable React Components",
        "Learn to connect to an external API",
        "Each aspect of creating websites and applications entails a unique set of skills.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstra",
        "The answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "React vs. Angular vs. Vue: what is the best JavaScript framework? Choosing the best JavaScript framework for your web project depends on what you're looking for",
        "HTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML.",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.”",
        "HTML is designed on a modular basis, meaning every part of the web page has a specific “place.”",
        "HTML is not considered a programming language but rather a markup or formatting language.",
        "CSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages.",
        "CSS applies to any career that involves web development.",
        "Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites.",
        "Before learning CSS, you should know the basics of using a computer and how to use a text editor because that is where you will be writing CSS.",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "Bootstrap promotes a mobile-first approach to web design, offering a suite of templates and components that automatically render for use on any device.",
        "As Angular grows in popularity, new versions of the front-end framework are constantly being released. That’s why Udemy offers a wide range of courses covering",
        "Angular is an open-source, client-side framework for building single-page websites and desktop and mobile applications.",
        "Angular is a complex application that contains multiple libraries and cross-platform functionalities, so it can take some time to learn its many features.",
        "Developers mainly use Angular to build dynamic single-page applications (SPAs) for web, mobile, and desktop.",
        "Angular and React are both rapid application development (RAD) platforms based on JavaScript.",
        "Angular is a multilayered framework that runs on Typescript and is compatible with many different code editors.",
        "Angular has both free and paid options, but the developer doesn’t provide pricing information about its paid version for enterprises and large organizations",
        "Angular is one of the most popular web development platforms in use today. Skills in using Angular can be helpful for several careers in fields related to web"
      ],
      "course_content": {
        "Intro to Front End Web Development with React JS, Angular, Bootstrap": [
          "Let's See What You Will Learn in HTML Part?",
          "General Terms",
          "Projects Files",
          "How the Website Works?",
          "What Is IDE?",
          "FAQ about Full stack web development with html, css, bootstrap, reactjs, angular",
          "First Webpage"
        ],
        "HTML Fundamentals": [
          "About the Section",
          "What is HTML?",
          "HTML Document Structure",
          "Text Element",
          "Lists",
          "Images",
          "Hyperlinks",
          "Container Elements",
          "What is Semantic HTML?",
          "Creating Tables with HTML",
          "Colspan & Rowspan",
          "Working With Form Elements",
          "Checkbox",
          "Input type; Radio & File",
          "Select & Option",
          "New Visual Studio Code Extensions",
          "Challenge",
          "Let’s Make the Challenges",
          "Challenge Solutions Continue"
        ],
        "CSS Fundamentals": [
          "About the Section",
          "What is CSS",
          "Styling Methods-Inline, Internal and External",
          "Let’s Do Some Styling",
          "Combining Selectors",
          "Style Operation With Class and Id Assignment",
          "Order of Priority in CSS",
          "Working with Colors",
          "Working with Colors on Code",
          "Using Border in CSS",
          "Pseudo-Class in CSS",
          "Styling Hyperlinks With Pseudo-Class",
          "Crome DevTools",
          "Important Advices for CSS",
          "Challenge 1",
          "Box Model",
          "Margin & Padding",
          "Let’s Start Using Margin & Padding",
          "Dimensioning with CSS",
          "Let’s Centre Our Page",
          "Challenge 2",
          "Types of Boxes",
          "Element Positioning with CSS",
          "Use of Fixed and Sticky",
          "Creating Shadow in CSS",
          "Challenge 3"
        ],
        "Layout on Webpage": [
          "About the Section",
          "3 Ways to Create Layout on Web Pages",
          "Float",
          "Flexbox",
          "Flexbox Overview",
          "Let’s Keep Using Flexbox",
          "Flex-Wrap",
          "Adding Flexbox to Our Project",
          "Adding Flexbox to Our Project 2",
          "Let’s Change the Page Layout with Flexbox",
          "Introduction to CSS Grid",
          "What Is CSS Grid?",
          "Let’s Continue Examining CSS Grid Features",
          "Other Grid Features"
        ],
        "Media Query and CSS Animations": [
          "Section Overview",
          "Media Query and CSS Animations Code Samples",
          "Responsive Menu Making With Media Query",
          "CSS Animations",
          "Making a Slider Menu With Transform",
          "Keyframes",
          "Animation Examples With Keyframes"
        ],
        "Portfolio Website": [
          "Portfolio Website",
          "Let’s Start Creating the Sections",
          "Let’s Start With Header Creation",
          "Home Section",
          "About Section",
          "Services Section",
          "Portfolio Section",
          "Contact Section & Footer",
          "Responsive Page Design"
        ],
        "Bootstrap 5 Fundamentals": [
          "Bootstrap 5",
          "How to Integrate Bootstrap Into Applications",
          "Container and Container Fluid",
          "Bootstrap 5 Typography Review",
          "Text Features",
          "Use of Colors",
          "Spacing",
          "Border",
          "Display",
          "Position Relative & Absolute",
          "Position Fixed & Sticky",
          "Sizing",
          "Buttons",
          "Using Images Classes",
          "Other Bootstrap 5 Features",
          "Quiz"
        ],
        "Bootstrap 5 Advanced": [
          "Grid",
          "Using Bootstrap Grid Structure on Different Screen Size",
          "Aligning Columns and Gutters",
          "Let's Start Using Flex with Bootstrap 5",
          "Vertical and Horizontal Alignment in Flex Structure",
          "Other Flexbox Features",
          "List Group",
          "Form Classes",
          "Let's Continue Working with Form Elements",
          "Other Input Features",
          "Creating Tables With Bootstrap 5",
          "Quiz"
        ],
        "Bootstrap Features Working With JavaScript": [
          "Bootstrap Features Working With Javascript",
          "Dropdown",
          "Modal",
          "Carousel",
          "Collapse & Accordion",
          "Quiz"
        ],
        "Bootstrap 5 Project": [
          "Project Presentation",
          "Navbar",
          "Let’s Start Creating Carousel",
          "Let’s Start Creating the Main Section",
          "Creation of Students and Questions Sections",
          "Creation of Contact and Footer Section"
        ]
      },
      "requirements": [
        "No prior knowledge needed",
        "You will be learning from scratch",
        "This course will take you from scratch to the advanced level",
        "Computer with access to the internet",
        "Desire to learn web development with react js, angular js",
        "Desire to learn full stack web development with html css javascript",
        "Desire to learn front end web development",
        "Desire to learn html, css, javascript",
        "Desire to learn HTML",
        "Desire to learn CSS",
        "Desire to learn Angular",
        "Desire to learn web development, full stack web development",
        "Desire to learn html css javascript",
        "Desire to learn web developer",
        "Desire to learn full stack developer",
        "Desire to learn backend web developer with react, angular, typescript, javascript",
        "Desire to learn responsive web design, html, css, angular, mean stack",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to Front End Web Development with React JS, Angular, Bootstrap course.\nFront End Web Development with HTML, CSS, Bootstrap, React JS, Angular. The first step of Full stack Web Development.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills.\nThe world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on.\nThis course will be your gateway to learn web design with a step-by-step approach.  We can assure you that only this course will enough for you to learn web development from scratch to intermediate.\nThis course will take you from a complete beginner to a  master in hours! By the way, you do not need to know any thing for this course.\nWe'll be moving rapidly to give you the quickest, yet most thorough website building experience.\nIn this course, we have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an HTML page associated with it and has a start state.\nWith this course, you will improve your Bootstrap experience with HTML5 and CSS3 codes\nThis course will take you from a beginner to a more experienced level. You will learn HTML5, CSS3, Bootstrap 4, React JS and Angular step by step with hands-on examples. And then you will be confident in using ReactJS, and if you ever get stuck, we will be there to help.\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML.\nJavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications. On top of that, JavaScript is a great language for beginners because it gives them a chance to write code that does something visual, which is exciting and helpful when you're just getting started as a programmer. Dynamic content is the hot topic in web development right now. Dynamic content refers to content that constantly changes and adapts to specific users whenever possible. For example, JavaScript can be used to determine if a website visitor is using a computer or a mobile device before deciding whether or not to render the mobile version of the website. It's these small things behind the scenes that create genuine value in using JavaScript to create dynamic web pages.\nAngular is one of the most popular frameworks for building client apps with HTML, CSS. If you want to establish yourself as a front-end or a full-stack developer, you need to learn Angular.\nFrom Setup to Deploy, this course covers it all! You'll learn all about Components, Directives, Services, Forms, Http Access, Authentication, Optimizing an Angular App with Modules and Offline Compilation and much more - and in the end: You'll learn how to deploy an application!\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS.  In this course, we will be teaching React by creating various projects.\nIn this course you will learn;\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nWe will start with local installation and react basics. After that, we will create 5 projects.\nProject 1 – Learn, create react app and Jsx with ‘first-app’\nProject 2 – Learn React props system with ‘blog-posts’ app\nProject 3 – Learn react components, state, lifecycle methods, async operations, and much more... with the ‘hemisphere’ app\nProject 4 – Handling event handlers, fetching data from an outside API, and showing list of records with ‘image-list’ app\nProject 5 - Routing with React Router and using React Portals to render children outside the DOM hierarchy with the ‘react-router’ app\nBecome fluent in Angular terminology, such as dependency injection, services, directives, transclusion, and more.\nDesign custom directives and save time and energy with easily reusable components.\nWrite quicker, better Angular code by discovering how AngularJS itself is built.\nRealize the power of dependency injection, and how Angular accomplishes it.\nFully understand the architecture behind an Angular application and how to use it.\nFull stack web development with React\nhtml\ncss\nReact native\nReact js\nReactjs\nReact bootstrap\nReactive js\nNode js react\nReact node js\nNext js react\nReact native js\nJs react\nReact next js\nReact bootstrap\nReact native\nReact\nBootstrap\nReact js\nReactnative\nAngular, angular js, angularjs\nReactive native\nBootstrap react\nCss\nReactjs\nReact-bootstrap\nWeb development\nFull stack web development\nhtml css javascript\nreact angular\nangular and react\nweb development with bootstrap, html, css, react, angular, typescript\nweb development\nweb developer\nfull stack developer\nfront end web development\n\n\n\n\nNo prior knowledge is needed!\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React.JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhat is Angular and what are its benefits?\nAngular is an open-source, client-side framework for building single-page websites and desktop and mobile applications. It is a full-featured JavaScript application built on TypeScript, which operates across platforms and keeps code clean and consistent throughout the codebase. Angular is an all-in-one rapid application development platform that allows web pages to render efficiently by minimizing communication with servers. The Angular framework offers end-to-end tooling or routing, state management, and form validation, as well as dependency injection and declarative templates. Angular offers out-of-the-box functionality and easy updating, along with an extensive collection of pre-made components. The TypeScript base includes high-quality code that reduces the burden of debugging and allows multiple developers to collaborate across platforms with minimal disruption and less coding.\nIs learning Angular hard?\nAngular is a complex application that contains multiple libraries and cross-platform functionalities, so it can take some time to learn its many features. Angular’s learning curve depends partly on your previous knowledge of web development and your familiarity with the languages used in the Angular platform. If you’re new to Angular, it’s helpful to have some familiarity with the basics of web design and the essentials of HTML and CSS. It’s also useful to know about the other languages that make up the Angular framework. These include basic HTML and CSS, as well as ECMAScript6, or ES6, a general programming language designed to ensure interoperability of web pages across the Internet. It’s also helpful to understand TypeScript, a superset of JavaScript used to write Angular. Learning Angular is even easier if you’re familiar with JavaScript, which is an implementation of ES6 and Angular’s base language.\nWhat is Angular used for?\nDevelopers mainly use Angular to build dynamic single-page applications (SPAs) for web, mobile, and desktop. SPAs are web pages based on a single HTML file that is completely controlled by JavaScript. When an action such as clicking a button happens on the page, the code renders it on the page instantly without sending a new request to the server. TypeScript and Angular’s other tools, including routing, state management, and ROM validation, make SPA creation easy and fast. Its open-source JavaScript framework allows developers to reuse code across multiple platforms. Angular’s component-based architecture simplifies the development workflow, making it possible to design apps for deployment in a wide range of environments and update them without extensive recoding.\nWhat is the difference between Angular and React?\nAngular and React are both rapid application development (RAD) platforms based on JavaScript. Angular is a multilayered framework that runs on Typescript and is compatible with many different code editors. It is a full-featured web development platform that requires no additional libraries. This means Angular can independently carry out a full range of development functions such as data binding, form validation, and dependency injection. First introduced in 2013, React is a JavaScript library managed by Facebook, and it works for both single- and multi-page web applications. React is a framework for UI development that’s smaller and faster than Angular. However, it requires other libraries or modules to provide the full range of Angular’s functions. React is easy to install and use for anyone who already knows JavaScript, and because it operates with a virtual DOM, the browser load reduces. Angular operates with a real DOM, which leads to longer runtimes and slower performance.\nIs Angular free to use and where can I get it?\nAngular has both free and paid options, but the developer doesn’t provide pricing information about its paid version for enterprises and large organizations; this information is only available with a custom quote. Individual users can also obtain Angular for free from the developer site. This open-source software is available under an MIT license granted by Google, which gives permission to use the Angular application for any purpose without limitation. New users can also download a free trial version of Angular from the developer. This version is a ready-made standalone app that contains most key features of the platform, and you can install it on any computer without taking all the steps to create the full Angular environment. The free Angular app allows users to get started by learning Angular’s key features and creating a basic app of their own.\nWhat careers use Angular?\nAngular is one of the most popular web development platforms in use today. Skills in using Angular can be helpful for several careers in fields related to web design and development. Angular skills are most important for careers in practical web development, including specialties like frontend development, which involves designing client-facing web elements such as visual content, UI and UX development, and general software development. Software engineers and site designers can also benefit from learning Angular. It is a JavaScript application, so it’s also useful for JavaScript developers. It’s also possible to create a career around a specialization in Angular development alone. Angular development specialists can work as consultants or independent contractors with multiple organizations needing web development services.\nWhat IDE is best for Angular?\nAn integrated development environment, or IDE, is a software application that consolidates essential web developer tools in a single graphical interface, which streamlines the development process and promotes consistency across all relevant platforms. Many IDEs now support Angular development projects, and there’s an option for every budget. The best paid IDE for Angular is Angular IDE. It was developed especially for the platform, so it supports all its features. Angular IDE is available as a standalone plugin or with an Eclipse plugin. New users can get a 45-day free trial before purchasing. Visual Studio Code is a general-purpose IDE that supports multiple development platforms, including Angular. This free, open-source IDE from Microsoft includes support for TypeScript code and several downloadable Angular plugins.\n\n\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now Front End Web Development with React JS, Angular, Bootstrap course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5, CSS 3, Bootstrap 4, React JS and Angular the first step in web development, completely and easily, you are at the right place.",
        "People who are willing to make a career in the Web Development",
        "If you want to building your own website, you should enroll",
        "Anyone who wants to become an React Developer",
        "Students who want to learn how to build fast single page web apps",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "Anyone planning a job transformation and wants to become a React developer",
        "People who want to become a web developer",
        "People who want to become a front end web developer",
        "People who want to become a full stack web developer",
        "People who want to become a full stack developer",
        "People who want to learn html css javascript",
        "People who want to learn bootstrap, responsive web design",
        "People who want to learn html css",
        "People who want to learn angular, typescript",
        "People who want to learn react, react js, angular, react bootstrap, html, bootstrap, web development, css, html css angular, react angular",
        "People who want to learn html css react, web development angular",
        "People who want to learn angular and react js, angular html css, web development with angular, full stack web development",
        "People who want to learn reactjs bootstrap, web, webdevelopment, boostrap angular, react js with redux, hooks and context"
      ]
    },
    {
      "title": "NestJs: Modern ways to build APIs with Typescript and NestJs",
      "url": "https://www.udemy.com/course/build-apis-with-nestjs/",
      "bio": "Step by Step guide to build Restful and GraphQL APIs with Node.Js, Nest.Js, MongoDB, Mysql, Postgres, and Typescript etc",
      "objectives": [
        "NestJs Fundamentals",
        "Typescript Decorators, Generics and Classes",
        "Build RESTFUL APIs with NestJs and MongoDB",
        "Build RESTFUL APIs with NestJs and MySQL",
        "Build RestFUL APIs with NestJs and PostgresQL",
        "Deploy RESTFUL APIs",
        "Build GraphQL APIs with NestJs",
        "Add Documentation for your APIS",
        "Authentication and Authorization using PassportJs"
      ],
      "course_content": {
        "Getting started with NestJs": [
          "Introduction to NestJs",
          "Routing in NestJs",
          "Access Express request Object in NestJs",
          "Define Resources",
          "Status Code, Redirection and Route Parameters"
        ],
        "Typescript Foundations for NestJs": [
          "What are Generics",
          "Typescript Setup and Installation",
          "Generic Function",
          "Generic Function T Array Type",
          "Generic Function with Multiple Type Variables",
          "Generic Constraints",
          "Generic Interfaces to describe Object Properties",
          "Create Interface to describe Function Type",
          "Generic Classes and Interfaces",
          "Introduction to Decorators",
          "Arguments in Method Decorator",
          "Configurable Decorator using Decorator Factory.",
          "Property Decorator",
          "Parameter Decorator",
          "Class Decorator"
        ],
        "CRUD With NestJs": [
          "Module Introduction",
          "Create Post Endpoint to Save Record in Array",
          "Request Payload in NestJs",
          "FindAll and Delete Endpoint"
        ],
        "Pipes and Validations": [
          "What are Pipes",
          "Add Validations using ValidationPipe",
          "Understand How ValidationPipe works"
        ],
        "Middlewares and ExceptionFilters": [
          "What are Middlewares",
          "Creating a Custom Logging Middleware",
          "Creating HttpException Filter"
        ],
        "Interceptors": [
          "What are Interceptors",
          "Create Interceptor to Transform the Response"
        ],
        "Connecting NestJs app with TypeORM and Mysql": [
          "Installing Mysql server",
          "Connect NestJs to Mysql using TypeORM",
          "Create an Entity to map a Database Table",
          "Save new record in MySQL Database Table",
          "Get, Update, and Delete Record"
        ],
        "Relations between Entities": [
          "Adding One to One Relation between Entities",
          "CRUD with One to One Relationship",
          "Adding One to Many or Many to Many Relation between Entities",
          "Adding Many to Many Relation between Entities"
        ],
        "Connected NestJs App to MongoDB using Mongoose": [
          "Installing MongoDB",
          "Connecting NestJs App with MongoDB"
        ],
        "Authentication": [
          "Introduction to Authentication",
          "Implement Signup User",
          "Implement Login User",
          "Introduction to PassportJs",
          "Authenticate User using Passport-JWT Strategy"
        ]
      },
      "requirements": [
        "Having a basic understanding of JavaScript and/or NodeJS",
        "Having basic knowledge of TypeScript is recommended, but not required"
      ],
      "description": "Nest.js is a progressive Node.js framework for building efficient, reliable and scalable server-side applications. NestJS is a server-side (backend) application framework beautifully crafted to support developers productivity and make their lives happier. Well, it's not only a framework, it's an enabler of entering the world of advanced engineering concepts such as Domain Driven Design, Event Sourcing, Microservices architecture.\nI spent a good few years in my career developing large scale apps and it didn’t let me down any single time. It’s well written, having quality as an objective, modular web framework with a good documentation, delivering nice developer experience. Exactly the same way I’d describe Nest.\nNestJs is built on the top of Typescript and Express.js. It also combines some elements of Object Oriented Programming and functional programming.\nHere comes NestJS, a framework which is fully written in TypeScript (it supports JS too, but types are good), it’s easily testable and brings in all the necessary stuff you always think about but you don’t know what to choose.\nWhy NestJs?\nNestJS doesn’t try to limit you to a particular way of doing things, it just provides the tooling you need. It doesn’t try to reinvent the wheel, it utilize existing tools you already know. For example, it uses express behind the scenes which makes your app compatible with the majority of express middlewares.\nHere are some good reasons why NestJS shines:\nDependency Injection — NestJS provides DI straight out of the box, increasing efficiency, modularity and testability of applications.\nModularisation — NestJS provides a modular structure for organizing code within the same domain boundary into separate modules.\nFlexibility — NestJS provides structure, which helps large teams build complex applications and yet comes in as lightweight as possible, so how you want to build is your choice.\nFamiliar APIs you already know — NestJS is heavily inspired by Angular, it is also quite similar to much established frameworks like Spring and .NET. This provides a shorter learning curve and lower entry threshold for developers.\nCommunity — NestJS is the fastest rising framework, already with 14K stars surpassing HapiJS. Also, with NestJS leveraging on the Angular way of doing things, things can only get better for the community.\nIn this course, I will teach you the foundations/fundamentals of NestJs. I will teach you how to build RESTFUL APIs step by step. You will also learn how to plan, design and deploy APIs. I have also another separate section of GraphQL.",
      "target_audience": [
        "Intermediate JavaScript developers who want to dive into back-end development",
        "Any developer wants to learn how to build backend server side applications with Typescript",
        "Developers who want to learn how build Restful apis with NestJs, MongoDB and MySQL",
        "Developers who want to learn how to secure your APIs using JWT",
        "Developers who want to learn how to deploy NestJs application",
        "Developers who want to learn how to GraphQL APIs with NestJs"
      ]
    },
    {
      "title": "Learn Ruby on Rails By Building Projects",
      "url": "https://www.udemy.com/course/learn-ruby-on-rails-building-projects/",
      "bio": "Get Your Ruby On Rails Skill a Quantum Jump With Project Based Training",
      "objectives": [
        "Over 31 lectures and 6 hours of content!",
        "Master Project Development in Ruby on Rails",
        "Learn to use ruby code effectively in commercial projects",
        "Learn best software development practices",
        "Learn all important Rails API"
      ],
      "course_content": {
        "Getting Started": [
          "Course Introduction",
          "Intro to Ruby",
          "Intro to Rails",
          "Install Rails in Linux Ubuntu",
          "Install Rails in Windows"
        ],
        "Building A Simple Book Store": [
          "Setting up the Environment",
          "MySQL SetUp",
          "BookStore Controllers & Views",
          "BookStore Application Layout - Part A",
          "BookStore Application Layout - Part B",
          "BookStore Models & Database",
          "Creating Books",
          "Editing & Deleting Books",
          "Editing & Deleting Other Resources"
        ],
        "Building a Blogging System": [
          "Project Intro",
          "Building the rBlog UI Part - A",
          "Building the rBlog UI Part - B",
          "Building the rBlog UI Part - C",
          "Setup Controllers, Models & Routes",
          "Bootstrap Sass Layouts",
          "Implementing the Application UI",
          "Admin CRUD Part - A",
          "Admin Crud Part - B",
          "Search & Pagination",
          "File Upload & Editor Fields",
          "Frontend Posts, Categories & Comments",
          "rBlog Login System"
        ],
        "Building a Image Gallery": [
          "Project Intro",
          "rGallery UI",
          "rGallery UI - Part B",
          "Dependencies & Resources",
          "rGallery Layouts & Views",
          "Carrierwave Image Uploader",
          "Edit & Delete Functions"
        ],
        "RailsCMS": [
          "Project Intro",
          "Application & Database Setup",
          "Active Admin - Part 1",
          "Active Admin - Part 2",
          "Frontend Pages & Menu",
          "Frontend Blocks"
        ],
        "Spree Ecommerce Site": [
          "Project Intro",
          "App & Postgresql Setup",
          "Spree Installation & Setup",
          "Themes & Overriding Assets",
          "Overriding View Content With Deface",
          "Add PayPal Gateway"
        ],
        "Course Summary": [
          "Course Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic Knowledge of Ruby and Rails",
        "Basic knowledge of Linux"
      ],
      "description": "Projects in Ruby On Rails is for developers looking to upgrade their ruby and rails skills. This course is not for beginners and will be more suited to professionals who have already done some Ruby coding. If you are new to Ruby on Rails you can try our introductory course\" Learn Ruby on Rails from Scratch.\nThe course has been taught primarily in Linux. We have included tutorials to help you get started in Windows but we suggest you use some flavour of Linux for this course. You can use virtual OS if required. This course also assumes you know SQL and as we have used it in all the examples. The following projects have been selected and created in the course. It will not only help you understand the core concepts of ROR but will also teach you the best of development practices.\nProject Details\nBook Store - The first project is a simple book stock application. You will learn to install the Rails and MySQL and will build the app step by step adding controllers, views and models. By the end of it you will have pretty good idea to build yourself a similar stock keeping web app in ROR.\nBlogging System - Learn to make a complete blog management system like WordPress in Ruby on Rails. Learn to design your App from ground up using the MVC architecture . You will learn smart ruby coding techniques in this project.\nImage Gallery - Learn to create image gallery with optimal image storage and retrieval mechanism. This simple yet fun project will build further on your knowledge and will teach you professional rail development methodologies.\nShopping Cart - A web development course is incomplete without a shopping cart project. You will learn the basic cart development process and you can extend the code to build your own online stores. We have used the Spree system for this project.\nContent Management System - This is the most complex of the project tackled in the course. This project is a robust content management tool similar to many commercial applications. It will refresh all the techniques and processes learn in this course.\nIf you successfully build and improve on the projects covered in this course you will be able to undertake and complete any project in ROR. So come aboard be be the Rails Ninja..",
      "target_audience": [
        "Ruby Beginners",
        "Web developers who want to develop using ROR"
      ]
    },
    {
      "title": "Build a RESTful API with Node.js, Express and PostgreSQL",
      "url": "https://www.udemy.com/course/build-a-restful-api-with-nodejs-express-and-postgresql/",
      "bio": "Create your own API server running on Node.js and hooked up to an active PostgreSQL database.",
      "objectives": [
        "Installing PostgreSQL, Nodejs and Express",
        "Creating new database user account (role)",
        "Creating database and table",
        "Inserting data into database table",
        "Connecting to database from nodejs application",
        "Create Route Functions",
        "Export functions",
        "Create endpoints for CRUD operation on API",
        "Testing API using Postman as API Client"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is an API",
          "What is Node.js",
          "What is Express",
          "What is PostgreSQL",
          "What is SQL"
        ],
        "Installations": [
          "Installing PostgreSQL",
          "Installing Node.js",
          "Updating NPM",
          "Installing ATom",
          "Installing nodemon",
          "Installing Postman"
        ],
        "Database Setup": [
          "Connecting to database from Psql Shell",
          "Creating a new role ( user account) on PostgresQL",
          "Create a new database",
          "Create a table",
          "Inserting Data into database"
        ],
        "Setting up Express Server": [
          "Creating a package.json file",
          "Installing Express",
          "Installing node-postgres (pg)",
          "Creating application file (index.js)",
          "Starting Express Server",
          "Connecting to database from Node.js"
        ],
        "Creating Route Functions": [
          "Create Route to Get all data from database table",
          "Create Route to Get a single record from database table",
          "Create Route to Add a new record to database table",
          "Create Route to UPDATE a single record from database table",
          "Create Route to DELETE a record from database table",
          "Exporting Route Functions",
          "Creating endponts for Route Functions",
          "Testing API with Postman",
          "Project Code",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript",
        "Basic knowledge of Node",
        "Basic knowledge of Express",
        "Basic knowledge of SQL"
      ],
      "description": "A useful and handy aspect of being a modern web developer is knowing how to work with APIs to facilitate communication between different software systems.\nIn this course, you’ll learn how to create your own RESTful API in a Node.js environment running on an Express server and utilizing a PostgreSQL database. We will use Postman as our API client to interact with the API Server.\nREST stands for Representational State Transfer and defines a set of standards for web services.  It is an architectural style as well as an approach for communications purposes that is often used in various web services development.\nAn API is an interface that different software programs use to communicate with each other.\nRESTful API is an API that conforms to the REST architectural style and constraints. REST systems are stateless, scalable,cacheable, and have a uniform interface.\nRESTful APIs most commonly utilize HTTP requests.Four of the most common HTTP methods are :\nGET, POST, PUT, and DELETE, which are the methods by which a developer can create a CRUD system – create, read, update, delete.  REST   it is an application program interface (API) that makes use of the HTTP requests to GET, PUT, POST and DELETE the data over WWW. (World Wide Web)\nThe main functions used in any REST-based architecture are:\nGET − Provides read-only access to a resource.\nPUT − Creates a new resource.\nDELETE − Removes a resource.\nPOST − Updates an existing resource or creates a new resource.\n\n\nYou learn how to:\nCreate a new database user account\nCreate a database and a table\nInsert data into database\nBuild an express server\nConnect to PostgreSQL Database from Node application\nCreate Route Functions\nExport  route functions into main application file\nCreate endpoints for route functions\nCall the web API with Postman and perform CRUD operations",
      "target_audience": [
        "Beginners to REST ApI"
      ]
    },
    {
      "title": "Django + AngularJS for a Powerful Web Application",
      "url": "https://www.udemy.com/course/django-angularjs/",
      "bio": "Learn how to integrate a Django backend with an AngularJS front-end in this step-by-step series.",
      "objectives": [
        "Integrate Django Applications with AngularJS",
        "Django 1.10",
        "AngularJS 1.5"
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "Walkthrough",
          "Requirements"
        ],
        "Downloads & Setup": [
          "Git & Django Project",
          "Downloading Try AngularJS 1.5"
        ],
        "Django + AngularJS": [
          "Single Page App Template View",
          "Angular Templates in Django Part 1",
          "Static Files in Django & Angular",
          "Angular Templates in Django Part 2",
          "Post Objects API Integration",
          "Backend API Serializer Updates",
          "Login with Angular and Django Rest Framework",
          "ngCookies for JWT Token",
          "Create Comment in Backend with $http",
          "Comment Create API Endpoint & Serializer Context",
          "Comment List API View",
          "Comment ngResource",
          "ngResource Create & Delete",
          "Reply to Comments",
          "Toggle View of Content",
          "Comment Reply Directive Part 1",
          "Comment Reply Directive Part 2",
          "Improve Comment UI",
          "Interceptor for Login Required responseError",
          "Login Required Interceptor Service",
          "Render Server Errors with Comments & Forms",
          "Rendering Login Form Errors & Update Comment Form Errors",
          "ngInclude for Template Error Pages",
          "Improve Blog Usability",
          "Render Markdown in Angular",
          "User Login API Update in Django",
          "User Login API Update in AngularJS",
          "Registration API Update in Django",
          "Register Detail in AngularJS",
          "Comment Delete, User Login Update"
        ],
        "Thank you!": [
          "Thank you & What's Next?"
        ]
      },
      "requirements": [
        "Try Django 1.9 (our course; see Requirements video)",
        "Advancing the Blog (optional; see Requirements video)",
        "Blog API with Django Rest Framework (our course; see Requirements video)",
        "Try AngularJS 1.5 (our course; see Requirements video)"
      ],
      "description": "When it comes to building modern web applications, you need to think about two aspects: the backend and the front end.\n\nDjango is one of the most popular backend frameworks in the world.\nAngularJS is one of the most popular front-end frameworks in the world.\nTogether, they make magic. This series is about integrating that magic to show you what's possible in today's cutting edge technology.\nWe're going to be working with you step-by-step and teaching you everything along the way. By the end, you'll have a powerful Blog web application driven by the beautiful combination of Django and AngularJS.",
      "target_audience": [
        "Meeting the requirements for the course is HIGHly recommended",
        "Django users looking to integrate AngularJS",
        "AngularJS users looking to integrate Django",
        "Intermediate to Advanced Developers"
      ]
    },
    {
      "title": "Modern Responsive Website with CSS3 Flexbox and ES6",
      "url": "https://www.udemy.com/course/modern-responsive-website-with-css3-flexbox-and-es6/",
      "bio": "Learn how to build BEAUTIFUL responsive websites from SCRATCH using HTML5, CSS, CSS3 Flexbox and Javascript (ES6)",
      "objectives": [
        "Be able to create beautiful websites from scratch",
        "Make RESPONSIVE websites that look great on all screen sizes",
        "Improve HTML5, CSS3 and Javascript skills",
        "Make your websites stand out"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "What you need to get started"
        ],
        "Setting up website structure": [
          "Start building our website",
          "Setting up basic website structure",
          "Preparing images for our project",
          "Adding the main banner",
          "Adding logo to the navigation bar",
          "Choosing font for our website",
          "Adding menu to the navigation bar",
          "Learning Flexbox",
          "Using flexbox to format nav layout",
          "Improving main menu",
          "Adding header text",
          "Adding arrow button to header",
          "Creating About us section",
          "Adding icons to About us section",
          "Creating Gallery section",
          "Adding effects to gallery images",
          "Adding Testimonials section",
          "Styling Testimonials section",
          "Adding arrow navigation to Testimonials",
          "Adding Contact section",
          "Styling submit button",
          "Adding Footer",
          "Website current state overview"
        ],
        "Adding interactions to website": [
          "Using Javascript to add interactions to our page",
          "Setting up main JS file",
          "Changing navigation background on scroll",
          "Adding click event to navigation items",
          "Adding scroll to section",
          "Making testimonials changeable",
          "Opening larger image on gallery image click",
          "Styling popup image",
          "Closing popup image"
        ],
        "Making website responsive": [
          "Making our website responsive",
          "Explaining Viewport meta tag",
          "Setting CSS structure for responsive code",
          "Adding first responsive code",
          "Creating mobile navigation",
          "Styling mobile navigation",
          "Adding menu toggle button",
          "Finishing mobile navigation",
          "Styling for smallest screens"
        ],
        "Conclusion": [
          "Preview of finished website",
          "Next steps",
          "Thank you"
        ]
      },
      "requirements": [
        "Very basic HTML and CSS knowledge would be helpful",
        "NO advanced HTML, CSS, or JS knowledge is required",
        "Basic text editor of your choice"
      ],
      "description": "This course is a part of upcoming collection of courses called Become a Guru, which has a goals of turning students into professional developers, no matter how much of previous experience they have.\nIn this course:\n- You will learn how to code websites from scratch\n- You will learn most advanced HTML5, CSS3 and Javascript principles\n- You will learn CSS3 Flexbox\n- We will make our website look amazing by using Javascript for interaction\n- You will learn how to turn your code into Beautiful websites\n- We'll explore free stock image websites\n- We'll be using fonts for our icons in order to make or icons more flexible\n- You will learn how to find modern fonts\nAfter this course you will have all skills you need in order to create modern website.\nIf you are a beginner, this course will turn you into professional.\nAnd if you already have some coding skills, this course will make you even better developer.\nWelcome!",
      "target_audience": [
        "Anyone who wants to learn how to create amazing looking websites",
        "Anyone who wants to improve development skills",
        "Anyone who wants to learn modern CSS3 (Flexbox) and Javascript (ES6)"
      ]
    },
    {
      "title": "Build WhatsApp clone w video calls Mern stack socket io",
      "url": "https://www.udemy.com/course/whatsapp-clone-video-calls-mern-stack-socket-io/",
      "bio": "Build WhatsApp clone w video calls using Reactj js, Node js, Mongodb, Socket io, Webrtc",
      "objectives": [
        "Build a Realtime whatsapp clone messaging app with video calls using the mern stack, socket io, webrtc",
        "Create a full stack web application like a pro",
        "Master React js and all of its secrets and tricks and become comfortable using it for you frontend and backend work",
        "Master full authentication system, learn about access and refresh tokens",
        "User Redux Toolkit with redux persist for a killer combination for managing state",
        "Learn how to work with Mongodb and how to add ,update, remove and query like a pro.",
        "Learn how to use Cloudinary to store your images in a new brilliant way and how to upload, search, filter and open a new perspective on working with Cloudinary.",
        "Strong advanced form validation using React-hook-form and Zod and learn about the best form validation techniques used",
        "Learn how to create protected routes and secure your application and pages.",
        "Learn how to work with useState, useReducer, useEffect, useRef, useCallback, event Listeners"
      ],
      "course_content": {},
      "requirements": [
        "A basic knowledge in working with React js",
        "A reasonable knowledge in web development is always welcomed"
      ],
      "description": "Welcome to the ultimate course on building a full WhatsApp clone web application using the MERN stack, Socket IO, and WebRTC! In this comprehensive and professional course, you will learn how to create a feature-rich messaging platform that rivals the best.\n\n\nAs Real-time messaging is at the heart of any great chat application, and our course will teach you how to implement this essential feature and you will be able to communicate with others users realtime with ease and with so much functionality. You'll also learn how to integrate video calls into your application, allowing users to communicate face-to-face with ease and with all the fancy ringing components and sounds .\n\n\nStay connected with friends and colleagues by displaying their online status , so you will know when someone is actually online or not and you will know realtime, and make your application is even more versatile by enabling users to send files of all types m talking images videos , rar/zip files pdf/doc etc... Our course will guide you through the process of creating group chats, so users can collaborate and share ideas with multiple people at once including some other features groups offer.\n\n\nEnhance user experience by implementing a typing indicator, which allows users to see when someone is typing a message. Add some fun and personality to your app by incorporating a wide range of emojis for users to express themselves.\n\n\nMake it easy for users to find specific messages or contacts with an advanced search functionality. And, of course, no modern web application would be complete without a robust authentication system. Our course covers everything you need to know about creating secure login and registration processes, as well as uploading images to the cloud.\n\n\nBy enrolling in this course, you can be confident that you are learning from the best. We guarantee that this is a highly professional build that will equip you with all the skills needed to create an outstanding WhatsApp clone web application. Don't miss out on this incredible opportunity – sign up today!",
      "target_audience": [
        "react js beginners",
        "Beginner web developer",
        "Junior web developer",
        "React js developer",
        "Node js developer",
        "web developer"
      ]
    },
    {
      "title": "Angular JS Essentials",
      "url": "https://www.udemy.com/course/angular-js-crash-course/",
      "bio": "Learn Angular JS Step by Step",
      "objectives": [
        "Learn fundamental Javascript concepts that power AngularJS.",
        "Write quicker, better AngularJS code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Angular JS Essentials": [
          "Introduction to Angular JS",
          "Downloading and Implementing angularjs",
          "Expressions",
          "Directives",
          "Different Directives",
          "Modulues, and making our own Directive",
          "Controllers",
          "Controller with arrays",
          "Indexing",
          "Filters",
          "Filtering",
          "Services",
          "http",
          "Select Data from DB",
          "Include",
          "Routing",
          "Routing with URLs",
          "Routing and the Controllers",
          "Animation",
          "Post method to send data to php and MySQL"
        ],
        "Project": [
          "todolist project 1",
          "todolist project 2",
          "todolist project 3"
        ]
      },
      "requirements": [
        "Basic HTML and Javascript knowledge",
        "A browser and a text editor"
      ],
      "description": "Join more than 4000 smart students who are on their path to become successful developers and experts in Angular JS, Don't get left behind.  >>> Click “Take This Course\" button to join us today ! <<<\nScript for Angular/JS\nAngular JavaScript, commonly styled as AngularJS, is basically another JavaScript framework like React, Ember, and jQuery (mostly considered as a library). A Google employee, Misko Hevery, created and developed this framework. Compared to other JS frameworks, AngularJS is supported by Google.\nFor the uninitiated, frameworks like Angular add more functionality to JavaScript and HTML. Their primary purpose is to make it easier for people to create scripts and robust web pages. In addition, they reduce the lines of codes you need to write in order to achieve a certain goal.\nTo take advantage of Angular JS, you just need to include it in your page and use its numerous modules, expressions, filters, directives, and controller. To learn how to use them, you must have knowledge of HTML, CSS, and JavaScript.\nWhy Should You Take This Course?\nFirst, if you are taking web development as a career, it is a must that you know two or three JavaScript frameworks. Also, take note that the three most common frameworks required by employer nowadays are jQuery, React, and Angular.\nSecond, Angular is fully backed by Google. You can expect that it will be continually developed and used for a long time. And that guarantees that the demand for people who know Angular will be always be high. Learning it will be a good investment of your time.\nThird, it is also useful in creating apps, Single Page Applications or SPAs to be precise. The Web has become a huge platform for creating and using programs. The Internet is not only used for browsing information anymore, but it has become a place where things, primarily computing, can be done, too.\nFourth, MEAN (MongoDB, Express.js, Angular.js, Node.js) stack is getting too popular. For you to become a very competitive developer, you do not need to get stuck only knowing the common stacks like LAMP and WAMP.\nFifth, it is just too easy to learn as long as you have a decent background in HTML and JavaScript. To be frank, learning Angular is just like learning HTML5. You will be mostly adding new “attributes” in your HTML arsenal — of course, Angular is not limited to that.\nThe Advantages of Angular JS\nAs mentioned, one of the biggest strengths of Angular JS is the creation of Single Page Applications. Frameworks like Angular make it easier and faster to develop an application or scripts. You do not need to start from scratch. All the common functions and modules are already made for you, and all you need to do is integrate it in your code.\nAnother strength of Angular is the ease of modular development. Angular provides a better implementation when it comes to modules. If you have code that you will use over and over again, you can just turn it into a module and just call it whenever you want.\nCode made in Angular JS is more readable, organized, and structured. If you are going to work with a team, those traits will make the work easier for you and your coworkers.",
      "target_audience": [
        "Web developers and designers looking to learn AngularJS"
      ]
    },
    {
      "title": "Django 3: Beginners Guide to Build a betting prototype.",
      "url": "https://www.udemy.com/course/django-3-beginners-guide-to-build-a-betting-prototype/",
      "bio": "Kick-start your Django development by learning to build a betting prototype step-by-step.",
      "objectives": [
        "Introductory django",
        "How to build template driven website in django",
        "How to download and install python",
        "How to manage urls",
        "Working with models",
        "How to create Views/Pages"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Python",
          "Installing Pycharm",
          "Creating our first project in Pycharm"
        ],
        "Getting Started": [
          "Installing Django",
          "Starting a Project and running server"
        ],
        "Diving in to Django": [
          "Starting our First Django App",
          "Views and Urls",
          "Rendering an Html Template",
          "Working with static files",
          "Implementing our HTML Template",
          "Extending base.html",
          "Installing Postgresql,Setting up Database and Running Migrations",
          "Creating a superuser",
          "Working with Models",
          "Making Migrations and customizing admin panel",
          "Dynamically rendering our bets"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "You should be familiar with basic python"
      ],
      "description": "Django is a fantastic web framework built with the Python programming language. With Django you can create websites and web apps very quickly and efficiently.\nDjango was created by very experienced developers who have built into it several tools for rapid web application development.\nDjango is very fast ,secure and scalable making it an attractive framework choice for thousands of developers.\nDjango developers are in hot demand and command attractive wages. Some billion dollar companies like Instagram and Pinterest were created using the Django framework.\nThis is a beginners Django course that will take you from absolute scratch to creating a simple Django web app. The course is\na hands on course and i strongly advise you to follow along with me so you can gain a better understanding of the framework.\nWhat your will learn:\nHow to install python\nHow to install pycharm\nAutomatically activating virtual environment in pycharm\nHow to install Django\nHow to create Django project\nHow to create Django app\nHow to create Django Model\nHow to run Django commands\nHow to use command line interface\nHow to run Migrations\nHow to query Django database\nHow to register Django app\nHow to Administer Django app\nBasic crash course in Python\nDjango is an extremely in-demand skill that pays quite well. Django is used by a lot of startups to build great applications.\nInstagram was once a startup that was built using Django and later sold to facebook for $1 billion ,Yes 1 billion dollars !\njust roughly two years after it was created.\nDjango has a thriving community that you can engage with as you begin your Django journey.\nWelcome to Django for beginners Course. :-)",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the to build Websites with Django and Python",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "Set up a localhost Web Server for Faster Website Development",
      "url": "https://www.udemy.com/course/localhost-web-server/",
      "bio": "Install and configure a web development environment on your computer. Code faster and when offline. Install WordPress.",
      "objectives": [
        "Install and configure a local web server on your computer",
        "Learn why it's faster and easier to develop websites on a local web server",
        "Develop multiple websites in virtual servers instead of in subfolders",
        "Develop websites without an internet connection",
        "Use phpMyAdmin to create a local database and configure access to it",
        "Configure the Apache web server using .htaccess files",
        "Install WordPress"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Develop locally: the advantages of installing a web server on your computer"
        ],
        "Install web server software": [
          "Learn what you need to develop websites locally",
          "Install XAMPP (Windows)",
          "Install XAMPP (OSX)",
          "Install XAMPP (Linux)",
          "Install a code editor"
        ],
        "Develop websites in the web server's root directory": [
          "Find the web server's root directory",
          "Develop one website in the web server root",
          "Develop multiple websites in subfolders"
        ],
        "Web addresses: the Domain Name System and the hosts file": [
          "Use easy-to-remember web addresses: an overview of the Domain Name System",
          "The hosts file: add your own web addresses locally",
          "Web addresses"
        ],
        "Use virtual hosts when developing multiple websites on the same server": [
          "Develop multiple websites in the web root using virtual hosts",
          "Choose a local web address for the virtual host",
          "Add a web address to the hosts file (Windows)",
          "Add a web address to the hosts file (OSX)",
          "Add a web address to the hosts file (Linux)",
          "Add a new virtual host (Windows)",
          "Add a new virtual host (OSX)",
          "Add a new virtual host (Linux)",
          "Use a web address in DNS for the local web server",
          "Add a new virtual host with a DNS web address",
          "Virtual document roots: Get the document root from the web address",
          "Virtual hosts"
        ],
        "Configuring Apache using .htaccess files": [
          "Configure Apache using .htaccess files",
          "Enable .htaccess files in the virtual host configuration",
          "Using .htaccess files: common usage and an example"
        ],
        "Local databases": [
          "Local databases: Access phpMyAdmin and create a new database",
          "Add a new user account and grant access to a database"
        ],
        "Conclusion and examples: install WordPress locally": [
          "Install WordPress locally",
          "Conclusion"
        ]
      },
      "requirements": [
        "You should be comfortable installing software on your computer",
        "Although you don't need to know HTML, you should be familiar with the basic concepts of how websites work",
        "You should be comfortable editing text files"
      ],
      "description": "Install and configure a web server on your computer so you can develop websites faster and more easily.\n\nQuickly set up all the Software you need to Develop Websites Locally in this comprehensive course.\nInstall a web server, PHP, database server and phpMyAdmin\nLearn how web addresses work and how to use them locally\nDevelop multiple websites in the root instead of in subfolders\nLearn how to configure Apache using .htaccess files\nCreate a new local database\nInstall WordPress\nSet up your Computer for Faster and Easier Web Development\n\nDeveloping websites is easier and faster if you do it locally, using a web server installed on your computer. All web developers develop locally first, before copying their work to a live web server.\nBy installing and configuring a local web development environment, you'll be able to create your website more quickly and even work when offline.\nYou'll also learn how to develop multiple websites on the same web server, each in the root instead of creating each one in a subfolder.\nContent and Overview\n\nSuitable for web developers of all levels, this course will take you through all the steps required to install and configure a complete web development environment on your computer.\nThis short course will get you up and running quickly. Starting with the basic concepts, first you'll install the necessary software, then start configuring it for the best results. You'll learn how to configure the web server so that you can develop multiple websites alongside each other, instead of all in one folder.\n\nWhere necessary, different videos for Windows, Mac and Linux are provided so that you can get the most out of the course whatever platform you use.\n\nYou'll learn how to set up a website with a local web address, configure the web server using special files called\n.htaccess\nfiles, create and grant access to a database, and also install WordPress locally if you need it.\nAt the end of this course, you'll have a fully working web development environment on your computer, ready to start creating your own websites.\n\nWhat else will you get?\n\nAll code and resources shown in the videos\nWork alongside the instructor\nA verifiable certificate of completion upon finishing the course\nAccess to the instructor at all times to ask for help with any topic related to the course",
      "target_audience": [
        "Anyone who is developing a website or web application",
        "Anyone who wants to know how to develop websites faster and more easily",
        "Experienced web developers who want to know how to use virtual hosts instead of developing each site in a subfolder"
      ]
    },
    {
      "title": "Full Stack Web Development for Beginners: The Complete 2025",
      "url": "https://www.udemy.com/course/full-stack-web-development-bootcamp-for-beginners-2019/",
      "bio": "Master HTML, CSS, jQuery, PHP & SQL—Everything You Need to Become a Full Stack Web Developer",
      "objectives": [
        "Build websites with HTML & CSS",
        "Build backend servers & APIs with PHP",
        "Work with Relational databases like SQL",
        "Build full-stack web apps with php and javascript frameworks",
        "Build mobile-friendly websites with HTML & CSS & Bootstrap 4",
        "You will be able to make changes to existing community portal by adding, editing and removing pages",
        "You will be introduced with Modern Application Development Approach",
        "Architecture of Web Application",
        "How to Start With a Live Projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Front End part": [
          "HTML",
          "CSS",
          "Javascript",
          "Assignment 1",
          "JQuery",
          "Assignment 2"
        ],
        "BackEnd Part": [
          "Introduction to php and installation",
          "Project Setup & Coding style & operator & constant",
          "Branching and looping && Array and Function",
          "Assignment 3",
          "Object Oriented Programming in php",
          "Assignment 4",
          "Templating in Html && include and required keyword",
          "Assignment 5",
          "Form handling in php",
          "User Login concepts using form",
          "Assignment",
          "Session and cookies"
        ],
        "Databases": [
          "SQL (CRUD operation)",
          "Insert User in table using php form",
          "Select Operation and Login Live validation",
          "Assignment 7"
        ],
        "Advanced Concepts for FUll stack": [
          "Email Handling in php",
          "Forgot Password Concept using email and link part 1",
          "Forgot Password Concept using email and link part 2",
          "File Upload in php",
          "API development",
          "Payment Integration",
          "Assignment 8"
        ]
      },
      "requirements": [
        "You should have an internet connection, be able to save files on local disk, have one of the recent browsers, preferably Google Chrome"
      ],
      "description": "Here's your refined and professional version of the course description—cleaned up for Udemy formatting and SEO optimization, with no emojis, and written in a highly engaging tone:\nFull Stack Web Development Tutorial: Become a Professional Developer with HTML, CSS, JavaScript, PHP, SQL, and More\nWelcome to the Full Stack Web Development Tutorial — the only course you need to become a professional web developer. Whether you're a complete beginner or someone looking to sharpen your skills, this course will guide you through every essential concept and tool needed to build powerful, real-world websites and web applications.\nWhy Choose This Course?\nComprehensive and Beginner-Friendly:\nThis course is designed for all levels. Whether you're starting from scratch or have some programming experience, you'll gain a deep understanding of both front-end and back-end development.\nInstructor with Real-World Experience:\nLearn from an experienced software developer who has worked with leading tech companies and understands what it takes to build production-ready applications.\nAlways Up to Date:\nStay current with modern technologies and trends. The course is regularly updated with new tools, techniques, and projects that reflect industry standards.\nEfficient Learning Path:\nThis short and intensive 2-week program is structured for quick mastery. Complete the course and continue building your skills and portfolio at your own pace.\nLifetime Support and Access:\nEnroll once and get access to all future updates and direct instructor support—forever.\nWhat Will You Learn?\nFront-End Development:\nHTML5: Structure web content with semantic, SEO-friendly tags.\nCSS3: Style websites using modern techniques like Flexbox and Grid.\nJavaScript: Add interactivity and client-side logic.\njQuery: Simplify DOM manipulation and event handling.\nTemplating: Reuse dynamic UI components across your application.\nBack-End Development:\nPHP: Build robust server-side logic and handle dynamic content.\nEmail Handling: Implement email features like contact forms and notifications.\nAPI Development: Create and consume REST APIs for full-stack integration.\nFile Uploading: Add functionality to upload images or documents.\nPayment Integration: Accept payments via gateways like PayPal and Stripe.\nDatabase Management:\nSQL: Query and manage relational databases.\nDatabase Design: Structure data for scalable web applications.\nReal-World Projects You’ll Build:\nPersonal Portfolio Website\nDynamic Blog System\nE-commerce Store with Payment Gateway\nFile Upload and User Dashboard\nContact Form with Email Integration\nWhat Makes This Course Different?\nHands-On Learning:\nBuild real projects as you learn. No boring theory-only lessons—everything is project-driven.\nStart-to-Finish Guidance:\nEvery line of code is explained. You'll not only write code, but understand how it works and where it's used in the real world.\nAdvanced Modules Included:\nLearn beyond the basics—API development, file uploads, security best practices, and more.\nBy the End of This Course, You Will:\nBuild and deploy full-stack web applications from scratch\nCreate user authentication systems and dynamic UIs\nIntegrate real-time features and third-party APIs\nDesign mobile-responsive, SEO-optimized websites\nHave a strong project portfolio to showcase to employers or clients\nWho Should Take This Course?\nBeginners who want to start a career in web development\nIntermediate developers looking to go full-stack\nFreelancers and entrepreneurs building their own web projects\nStudents preparing for internships or entry-level roles\nCourse Modules Overview:\nIntroduction to Full Stack Web Development\nFront-End: HTML5, CSS3, JavaScript, jQuery, Templating\nBack-End: PHP, Email, APIs, File Handling, Payment Integration\nDatabases: SQL & Structured Querying\nAdvanced Topics: Security, Deployment, and Optimization\nProject Work: Portfolio, Blog, E-commerce Platform, and more\nStart Your Journey Today\nThe demand for full-stack developers continues to grow. This course gives you all the tools and knowledge to stand out in today’s job market or confidently launch your own web projects.\nEnroll now and start building professional-grade websites and applications today.",
      "target_audience": [
        "Beginners who want carriers in software development."
      ]
    },
    {
      "title": "PlebDevs Course I: Building a Lightning Wallet Frontend",
      "url": "https://www.udemy.com/course/pleblabaustin/",
      "bio": "Learn Lightning Development in 2022! Build lightning apps, projects using HTML, CSS, Javascript, LNbits, React & more!",
      "objectives": [
        "Basic intro course to developing Lightning Apps",
        "Learning HTML basics an important first step in your web development journey.",
        "Learning the fundamentals of CSS into digestible, easy to understand pieces.",
        "Learn how to use JavaScript — a powerful and flexible programming language for adding website interactivity.",
        "Learn how to use LNbits, a lightning wallet and account system.",
        "Learn how to setup and create your own development environment.",
        "Learn the fundamentals of building a React app.",
        "Learn how to build your own custodial lightning wallet."
      ],
      "course_content": {
        "Bitcoin Lightning Developer - PlebDev Course I": [
          "PlebDev Course: What you will learn.",
          "Learn HTML",
          "Learn CSS",
          "Learn Javascript and Bitcoin",
          "Learn to setup your development environment",
          "Learn React",
          "Pleb Wallet Demo"
        ]
      },
      "requirements": [
        "No pre-knowledge is required - enthusiasm and a love for bitcoin is all you need!",
        "A Linux machine or Mac is required No software is required in advance of the course (all software used in the course is free)"
      ],
      "description": "Welcome to the PlebDevs Course. This is your one-stop shop to learn how to build your first lightning app!\nWe'll take you from an absolute beginner to a capable frontend developer focusing on Bitcoin/lightning projects in under 6 hours.\n\nWHO SHOULD TAKE THIS COURSE?\nAnyone who wants to start learning how to code\nPlebs\nAnyone who has tried to learn to code but found it too hard\nThose looking for a career change\nWeb 2, 3, and 5 tech hobbyists\nStudents & teenagers\nAnyone who wants to learn how to build a simple lightning wallet\n\nWHAT YOU WILL LEARN\nHTML5\nCSS\nJavascript\nDOM Manipulation\nAPI calls\nReact\nLightning wallet basics with LNbits\nGithub / Git fundamentals\nVisual Script Studio\nNPM\nVercel\n\n\nLearning how to code and build apps is a long and difficult journey which is why our instructors, Super Testnet and Austin have put together the first part of the Plebdev Course to condense all of the fundamentals of Frontend development and accelerate your path toward developing apps on your own. We want to encourage more developers to get their start by building on Bitcoin and Lightning and welcome them to the thriving Bitcoin developer ecosystem!\n\nOur instructors have built cutting-edge projects on Bitcoin and Lightning. Both do workshops inside of PlebLab, and both learned how to code from ZERO without prior experience. Using our exciting, hands-on teaching style, you are sure to master the principles AND have fun at the same time!\n- PlebLab",
      "target_audience": [
        "Anyone who wants to learn to build on Bitcoin and Lightning.",
        "Anyone that wants to build a Lightning wallet.",
        "Anyone that wants to become a Bitcoin developer.",
        "Anyone that wants to become a Lightning developer."
      ]
    },
    {
      "title": "Vue 3 and Laravel: Breaking a Monolith to Microservices",
      "url": "https://www.udemy.com/course/vue-laravel-microservices/",
      "bio": "Microservices Architecture, Vue 3, Nuxt.js, Laravel, Docker, RabbitMQ, Event Driven Microservices, Internal APIs, Redis",
      "objectives": [
        "Develop a Monolith then Break it to Microservices",
        "Event Driven Architecture with RabbitMQ",
        "Multiple Database Connections",
        "Upload PHP packages to packagist",
        "Internal API Calls",
        "Use Docker",
        "Vue 3 and Nuxt js with Typescript",
        "Vuex",
        "Pay with stripe Stripe"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel Admin": [
          "Installation",
          "Docker",
          "Routes",
          "Migrations",
          "REST",
          "Custom Requests",
          "Pagination",
          "Laravel Passport",
          "Login",
          "Middlewares",
          "Register",
          "Profile",
          "Roles",
          "Foreign Keys",
          "Api Resources",
          "Products",
          "Product Routes",
          "Images",
          "Image Controller",
          "Orders",
          "Order Routes",
          "Order Total",
          "Exporting CSV",
          "Permissions",
          "Creating Permissions",
          "User Permissions",
          "Permission Controller",
          "Gates",
          "Request Gates",
          "Chart",
          "Login with Cookies"
        ],
        "Vue Admin": [
          "Installation",
          "Template",
          "Router",
          "Form Submit",
          "Register",
          "Login",
          "Child Routes",
          "Logout",
          "Component Props",
          "Users",
          "Router Link Active",
          "Pagination",
          "Deleting Users",
          "Classes and Interfaces",
          "Creating Users",
          "Updating Users",
          "Roles",
          "Creating Roles",
          "Updating Roles",
          "Products",
          "Paginator Component",
          "Creating Products",
          "Uploading images",
          "Image Component",
          "Updating Products",
          "Orders",
          "Order Items",
          "Export CSV files",
          "Chart",
          "Profile",
          "Vuex",
          "Dispatch Events with Vuex",
          "Vuex Modules",
          "Typescript Getters",
          "Permissions",
          "Login with HttpOnly Cookies"
        ],
        "Laravel Influencer": [
          "Changing the database",
          "Route Prefixes",
          "Route Namespaces",
          "Products",
          "Product Search",
          "Common Routes",
          "User Type",
          "Drop Role Id",
          "Scopes",
          "Links",
          "Checkout Links",
          "Creating Orders",
          "Transactions",
          "Stripe",
          "Completing Orders",
          "Sending Emails",
          "Events and Listeners",
          "Revenue",
          "Stats",
          "Rankings",
          "Redis",
          "Caching Products",
          "Invalidating Cache",
          "Filtering Cached Data",
          "Redis Sorted Sets",
          "Nested Routes"
        ],
        "Vue Influencer": [
          "Admin Changes",
          "Installation",
          "Template",
          "Child Components",
          "Register",
          "Login",
          "Logout",
          "Vuex",
          "Products",
          "Rankings",
          "Stats",
          "Searching Products",
          "Selecting Products",
          "Generating Links"
        ],
        "Nuxt Checkout": [
          "Installation",
          "Template",
          "Routing",
          "asyncData",
          "Products",
          "Order Total",
          "Creating Orders",
          "Stripe",
          "Conclusion"
        ],
        "Email Microservice": [
          "Setup",
          "RabbitMQ",
          "Dispatching Jobs",
          "Moving Emails",
          "Docker"
        ],
        "Users Microservice": [
          "Setup",
          "Database",
          "User Model",
          "Moving AuthController",
          "Importing User Data",
          "Internal API Calls",
          "User Service",
          "Scope Middleware",
          "Authorization",
          "Moving Paginated Users",
          "Moving UserController",
          "Removing User Instances",
          "Filtering Users",
          "Refactor User Class"
        ],
        "Checkout Microservice": [
          "Setup",
          "Migrations",
          "Docker",
          "Importing Data",
          "Moving Controllers",
          "Upload PHP Libraries to Packagist",
          "Listening to Events",
          "Queue Listener",
          "Publishing to Different Queues"
        ],
        "Influencer Microservice": [
          "Setup",
          "Migrations",
          "Importing Data",
          "Moving Controllers",
          "Adding Events and Listeners",
          "Redis"
        ]
      },
      "requirements": [
        "Laravel knowledge",
        "Javascript knowledge"
      ],
      "description": "Learn how to create a Monolith using Vue 3 and Laravel then Learn how to move from that app to Microservices.\nIn this tutorial you will learn:\nCreate a SPA with Vue 3, Nuxt.js and Laravel\nAuthenticate using Laravel Passport\nCreate Event-Driven Microservices with RabbitMQ\nUse Docker for each Microservice\nInternal APIs\nUse Redis and Stripe\nUse Vuex\nRestrict routes for unauthorized users\nUpload PHP packages to Packagist\nIf these are what you are looking for then this course is for you.",
      "target_audience": [
        "Beginner Laravel developers curious about Microservices Architecture"
      ]
    },
    {
      "title": "Angular for Beginners: From Basics to Advanced Projects",
      "url": "https://www.udemy.com/course/angular-for-beginners-from-basics-to-advanced-projects/",
      "bio": "Learn Angular Basics, JavaScript Fundamentals, Reactive Forms, and Bootstrap Integration",
      "objectives": [
        "Understand Angular framework basics and its comparison with React js.",
        "Install and configure Angular and Visual Studio Code efficiently.",
        "Master Angular's file and folder structure for project setup.",
        "Utilize interpolation in Angular for dynamic content rendering.",
        "Grasp core JavaScript concepts including variables, data types, and operators.",
        "Develop proficiency in JavaScript arrow functions and control structures.",
        "Create, style, and manage Angular components and modules effectively.",
        "Implement event handling and data binding for interactive web applications.",
        "Navigate Angular routing, dynamic routing, and elements toggling.",
        "Build and validate reactive forms, including data sharing between components."
      ],
      "course_content": {
        "Introduction": [
          "What is Angular ?",
          "Angular vs. React.js",
          "Requirements before starting with Angular"
        ],
        "Installation": [
          "VS Code installation",
          "Angular installation",
          "File and Folder Structure"
        ],
        "Let's Start with Angular": [
          "First Change",
          "Interpolation"
        ],
        "Basics of JavaScript": [
          "What are variables?",
          "Data types",
          "Operators",
          "Arrow functions",
          "if-else-if statements",
          "Switch statement",
          "For loop"
        ],
        "Angular Basics": [
          "How to create components",
          "How to pass components",
          "How to style components",
          "What are modules?",
          "Using a function"
        ],
        "Events and Styling": [
          "Events",
          "Getting value from input",
          "Counter",
          "Styling in Angular",
          "Style binding",
          "Table data"
        ],
        "Routing and Dynamic Routing": [
          "Component routing",
          "Dynamic routing",
          "Header",
          "Elements toggling"
        ],
        "Reactive Form and Passing Data Between Components": [
          "Form",
          "Data from parent to child",
          "Data from child to parent",
          "Two-way binding",
          "Pipes",
          "Reactive form",
          "Form validation",
          "Wildcard"
        ]
      },
      "requirements": [
        "Basic understanding of HTML and CSS.",
        "Fundamental JavaScript knowledge.",
        "Access to a computer with internet.",
        "No prior Angular experience needed.",
        "Eagerness to learn web development."
      ],
      "description": "Unlock the power of Angular and elevate your web development skills with this comprehensive course. Dive into the essentials of Angular, comparing it with React.js to understand its unique advantages. Gain proficiency in setting up your development environment with VS Code and Angular, while mastering file and folder structures for efficient project management.\nDelve into JavaScript fundamentals, covering variables, data types, operators, and control flow structures like if-else and for loops. Explore Angular basics, from component creation to module usage, and understand the importance of functions in Angular development.\nLearn event handling, data binding, and dynamic styling techniques to create engaging user interfaces. Navigate through routing mechanisms, both static and dynamic, to build seamless navigation experiences.\nMaster reactive forms and data communication between components, utilizing two-way binding and pipes for enhanced functionality. Implement Bootstrap seamlessly into your Angular projects, harnessing its powerful features for UI design.\nBy the end of this course, you'll possess the skills to develop dynamic web applications with Angular, proficiently managing data, UI, and navigation. Whether you're a beginner or an experienced developer looking to expand your skill set, this course equips you with the tools needed to excel in Angular development. Let's beging now !",
      "target_audience": [
        "Beginners interested in web development.",
        "Developers transitioning to Angular from other frameworks.",
        "Front-end developers seeking to enhance their skill set.",
        "Students looking for a comprehensive Angular tutorial.",
        "Professionals aiming to understand Angular for work projects.",
        "Hobbyists eager to build dynamic web applications."
      ]
    },
    {
      "title": "Become a Professional JavaScript Programmer",
      "url": "https://www.udemy.com/course/become-a-professional-javascript-programmer/",
      "bio": null,
      "objectives": [
        "Start programming with JavaScript",
        "Create real life projects with JavaScript"
      ],
      "course_content": {
        "Fundamentals of Javascript||Introduction to JavaScript": [
          "Introduction to JavaScript",
          "Script Tags",
          "Boxes",
          "Console",
          "Variables",
          "Undefined, typeof, NaN",
          "Concatination",
          "Comparison Operators",
          "Logical Operators",
          "Mathematical Operators",
          "Commenting"
        ],
        "Fundamentals of Javascript||Intermediate JavaScript": [
          "Arrays",
          "Array Prototype",
          "Looping Over Arrays",
          "Introduction to Objects",
          "Creating an Object",
          "Dates and Times",
          "Intervals",
          "Countdown: Example Application",
          "Callbacks",
          "Callback in Countdown"
        ],
        "Fundamentals of Javascript||Working with JavaScript Elements": [
          "DOM Elements",
          "Query Selector",
          "Event Handlers",
          "Input Fields",
          "Creating Elements",
          "Styling Elements"
        ],
        "Fundamentals of Javascript||Bonus JavaScript Tips": [
          "Linting",
          "Minification"
        ],
        "jQuery for Beginners||Introduction to the Course": [
          "Course Introduction"
        ],
        "jQuery for Beginners||Introduction To jQuery for Beginners": [
          "Section Introduction",
          "jQuery Core Concepts",
          "Getting Started",
          "Adding the jQuery library to your webpage Part 1",
          "Adding the jQuery library to your webpage Part 2",
          "jQuery Syntax Introduction",
          "jQuery Selectors",
          "jQuery Event Methods",
          "Section Conclusion",
          "Student Project 1"
        ],
        "jQuery for Beginners||Introduction To jQuery Functions": [
          "Section Introduction",
          "Creating a jQuery template Part 1",
          "Creating a jQuery template Part 2",
          "Creating a jQuery template Part 3",
          "Get Content and Attributes",
          "jQuery Callback Functions",
          "Section Conclusion",
          "Student project 2"
        ],
        "jQuery for Beginners||USB Debugging Mode & Hardware API'S": [
          "Section Introduction",
          "jQuery Effects Part 1",
          "jQuery Effects Part 2",
          "jQuery Effects Part 3",
          "jQuery Effects Part 4",
          "jQuery CSS Functions Part 1",
          "jQuery CSS Functions Part 2",
          "jQuery AJAX Functions Part 1",
          "jQuery AJAX Functions Part 2",
          "jQuery AJAX Functions Part 3",
          "Section Conclusion",
          "Student Project 3 Part 1",
          "Student Project 3 Part 2",
          "Student Project 3 Part 3"
        ],
        "jQuery for Beginners||Course Conclusion": [
          "Course Conclusion"
        ],
        "Node.js || Introduction to the Course": [
          "Welcome to Node.js_ Simple & Complete!",
          "How this will go",
          "Project introduction",
          "Setup",
          "Summary"
        ]
      },
      "requirements": [
        "A computer"
      ],
      "description": "Become a Professional JavaScript Programmer with Stone River eLearning's online course bundle designed to take you from a Javascript beginner to a pro.\nJavascript has seen an incredible rise in popularity over the last several years thanks to the development of a huge number of libraries that allow you to do almost anything with it.\nIt's never been more important than right now to learn Javascript in depth. It will allow you to get great development jobs or move up in your current job, and Javascript development (especially for web app development) is a key skill for today's tech entrepreneurs.\nThis is a living, breathing course bundle. We will be updating content and adding new content for quite a while to come. Purchase this bundle today and continue to get new cutting edge Javascript content as we roll it out.\n\n\nPhase 1\n\nThis is the core of JS.  These courses should be done in the order shown prior to moving to the next \"phases\".  When completed, the student is ready for \"Databases\" or \"Frameworks\"\nFundamentals of JS\njQuery\nNodeJS\nBackboneJS\nPhase 2\nThis is optional, but imperative for a \"Full Stack\" developer.  Either Mongo or Firebase, or both.  MEAN includes Mongo and also adds a Framework (Angular) and is an assumption of a Full Stack developer.\nMongo\nFirebase\nMEAN\nPhase 3\nWith Phase 1 complete (and, optionally, Phase 2), the student is ready to learn modern JS Frameworks.  Any or all of these are good to go.\nReact\nVue\nEmber\nAngular4\nPhase 4\n\nAfter learning a major JS Framework or two, these supporting libraries/technologies are now in order for the student to complete their JavaScript toolbox.\nJSON\nGit/Github\nREST\nBest Practices\nWebpack\nUnit Testing\nDebugging\nProg. Web Apps",
      "target_audience": [
        "Beginning programmers",
        "Beginning web developers"
      ]
    },
    {
      "title": "Learn Laravel 7 along with REST API & Livewire",
      "url": "https://www.udemy.com/course/learn-laravel-by-building-a-crud-project/",
      "bio": "Build Projects & learn Basic to Advanced Topics with Upgrade Guide to Laravel 8. REST API & TALL Stack using Jestream",
      "objectives": [
        "Learn how to Install Laravel",
        "Learn Basics to Advaced Topics of Laravel",
        "Set up SPA using Vue and Sanctum",
        "Learn Livewire",
        "Learn how to Create REST API using Laravel Sanctum",
        "Learn how to Upgrade Laravel"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laravel Basics": [
          "Installation",
          "Routing",
          "Views",
          "Layouts",
          "Important Article before moving to Controllers",
          "Controllers",
          "Database"
        ],
        "Storify Project": [
          "Project Overview",
          "Authentication",
          "Migrations",
          "Important Article before moving to Eloquent Models",
          "Eloquent Models",
          "Important Article before moving to Listing",
          "Listing",
          "Detail Page",
          "Resource Controller",
          "Creating - Part 1",
          "Creating - Part 2",
          "Update",
          "Common Form",
          "Form Request",
          "Validation Rules & Error Messages",
          "Delete",
          "Gates & Policy",
          "Gates & Policy - 2",
          "Recap"
        ],
        "Taking our CRUD App one Level up": [
          "Factory (Laravel 7 & below)",
          "Factory (Laravel 8 & above)",
          "Building a Frontend",
          "Mutators & Accessors",
          "Sending Email",
          "Events & Subscribers",
          "Soft Delete",
          "Admin Section - Part 1",
          "Admin Section - Part 2",
          "File Upload & Thumbnails",
          "Home Page Design",
          "Apply Tags (Many to Many Relationship)",
          "Update 2 Tables using 1 Form",
          "Bonus Lecture"
        ],
        "Upgrade Guide to Laravel 8": [
          "Update Laravel Framework from 7 to 8",
          "Models Directory",
          "Model Factories"
        ],
        "Exploring More Features of Laravel": [
          "Debugging using Laravel Telescope",
          "Local Scope",
          "Model Events",
          "Artisan Console",
          "Blade Components",
          "Service Container",
          "Facades"
        ],
        "Implementing Rest API - Section 1": [
          "Introduction",
          "Installing New Project",
          "Installing Laravel Sanctum",
          "API Authentication",
          "Project Setup",
          "Resources",
          "Resource Collection",
          "API Operations",
          "Validation",
          "Authorization",
          "Handling Error Responses",
          "Round Up"
        ],
        "Implementing Rest API - Section 2": [
          "Tasks Setup",
          "Tasks Validation",
          "Tasks Authorization",
          "Tasks Resource",
          "Resource Advanced",
          "Accessor in Resource"
        ],
        "Implementing Rest API - Section 3": [
          "File Upload",
          "Rate Limiting"
        ],
        "Set up SPA using Vue 3": [
          "Overview of our SPA Application",
          "Install Vue 3",
          "Install Tailwind CSS",
          "Resources to Learn Tailwind CSS",
          "Install Vue Router",
          "Vue Layout using Tailwind CSS",
          "Header & Footer",
          "Route Links",
          "Design Login Page using Tailwind CSS",
          "Login using Laravel Sanctum - Part 1",
          "Login using Laravel Sanctum - Part 2",
          "Install Vuex",
          "Show / Hide Navigation Links",
          "Navigation Guards",
          "Dashboard Page"
        ]
      },
      "requirements": [
        "Basic PHP Knowledge"
      ],
      "description": "Update: As Laravel 8 was release on Sep 8th 2020, the Course has been updated accordingly to use the Latest Version. The Course also includes the Section as to how to Update from Laravel 7 to Laravel 8 including using Models Directory & Model Factories.\nThis is a comprehensive Course which uses the Latest Version of Laravel and is up to date with the current documentation, so that you are not left behind figuring the correct documentation yourself.\nYou will not only be able to Learn Laravel but the course will also cover how to create REST API using Laravel along with creating a SPA using Vue and Tailwind CSS. We will also learn about Livewire.\nThe Course is currently divided into 10 Sections. In the first section, we will build a CRUD Application which will help you understand the basics of Laravel. If you are new to Laravel and looking to get started on it, then this Section is for you. Some of the topics that we will cover in the initial section include:\nInstallation\nRouting\nViews\nBlade Templates\nLayouts\nControllers\nDatabase\nEloquent Models\nMigration\nMiddleware\nValidation\nForm Requests\nAuthentication\nGates & Policies\nTinker\nArtisan CLI\nIn the 2nd section,  we will enhance our CRUD Application. This Section covers topics which involves topics which are just a bit more advanced than basics, but are useful in any Web Application like Sending Email, Uploading File etc. In doing so we will cover following topics:\nFactories\nSeeders\nCustomizing Route Model Binding\nMutators & Accessors\nEmail\nFile Upload\nEvents & Listeners\nSoft Deletes\nAdmin Namespacing and Routing\nCreating our own Middleware\nEloquent Relationships\nIn Section 3, we see how we can update our Laravel Project to the latest version using composer.json. We update our Project from Version 7 to Version 8 as well as update all the dependencies. We also cover new Features like Model Factories, Model Directories and other changes that we need to be aware of.\nIn Section 4, we look at some of the Features which can be considered advanced and learning them would take your knowledge to the next level. If you are working on an enterprise level Project, you are likely to use these features.\nTelescope\nCarbon Package\nModel Events\nConsole Command\nLocal Scope\nService Container\nFacades\nIn Section 5, 6 & 7 we see how we can implement REST API. Laravel is used exclusively as backend to create REST API. In this Section, we will cover from scratch all the things that you need to implement REST API. Some of the Topics that we will cover are:\nAuthentication using Sanctum API\nCover all Types of HTTP Endpoints\nResource & Resource Collection\nTest Endpoints using Postman\nAdvance Resource Options\nFile Upload using API\nRate Limit\nIn the Section 8, we will see how to setup a Single Page Application (SPA) using Vue 3 and Tailwind CSS. We will be using the same REST API that we created in our previous section. The Section will only cover Authentication using Sanctum.\nIn the Section 9, we will learn about Livewire. Livewire has gained extremely popular recently and it allows you to interaction between the Frontend and Backend without using any JS Code. So in this Section we look at the basics of Livewire. Some of the topics that we will cover are:\nInstalling & Setting Up of Livewire\nLivewire Components\nLivewire Properties\nComputed Properties\nFull Page Component\nEvents\nRedirection & Flash Messages\nIn Section 10, we will build a Project using TALL Stack (Tailwind CSS, Alpine JS, Livewire and Laravel) using Jetstream. We will implement following functionalities:\nAJAX Pagination\nAJAX Filtering\nAJAX Search\nAJAX Sorting\nAJAX Add using Modal\nAJAX Edit using Modal\nAJAX Delete using Confirmation Modal\nAJAX Validation\nReal World Examples are followed while explaining these concepts so that you can easily related to them. LIVE Project is being built so that you can follow the thought process and learn the best practices.",
      "target_audience": [
        "PHP Developer looking to Learn Laravel"
      ]
    },
    {
      "title": "Build MERN E-commerce Backend API : With/Without AI. Part 1",
      "url": "https://www.udemy.com/course/nodejs-ecommerce-api-dev-build-with-mongodb-mongoose/",
      "bio": "Master MERN Stack backend development with MongoDB, Mongoose, APIs, and AI coding using Cursor AI, With/Without Coding",
      "objectives": [
        "Learn How to use AI for Building Complete API",
        "Payment integration using Stripe",
        "API Documentation & Deployment",
        "Payment webHook handling",
        "Pagination and filtering techniques",
        "Order statistics and analysis",
        "Admin process for managing orders",
        "Implementing categories and product management",
        "Order management system",
        "Implementing user authentication and authorization"
      ],
      "course_content": {
        "BUILD WITH AI: DEVELOP E-COMMERCE API USING AI": [
          "Introduction",
          "AI Prompt For Getting Started",
          "Cursor AI Overview And Customization",
          "Using AI to Generate Files And Folders",
          "Implementing Authentication",
          "MongoDB Connection String",
          "Testing Register and login Logic",
          "Implementing User Controllers",
          "Testing of users Controllers Logic",
          "Product Controllers",
          "Products controllers Testing",
          "Brand and Category Controllers",
          "Postman Environments",
          "Testing Brands and Categories Routes",
          "Cart Controller",
          "Testing Cart Management Routes",
          "Shipping methods controllers",
          "Testing Shipping Methods Endpoints",
          "Placing Order-Payment Integration",
          "Payment history Controller",
          "Implementing WishLists Logic",
          "Review Controller"
        ],
        "FINAL PROJECT DEMO": [
          "Customers Functionalities DEMO",
          "Admins Functionalities DEMO",
          "Project Live Preview"
        ],
        "MUST READ - IMPORTANT !!!": [
          "How To Take This Course",
          "Complete Project Source Code"
        ],
        "START HERE": [
          "Project Features",
          "Course Paths",
          "How To Get Help When You Stuck",
          "Am sorry for my voice",
          "Folder Structure",
          "Requirement For This Course",
          "Advanced Server Setup",
          "Project Data Modeling Logic"
        ],
        "USER AUTHENTICATION": [
          "User Data Model",
          "Connect To MongoDB Database",
          "MongoDB Connection String and Environment Variables",
          "MongoDB in VSCODE",
          "User Registration Controller Setup",
          "User Registration Controller",
          "Hash User Password",
          "User Login Controller",
          "Error Handling",
          "Not Found Route Handler",
          "How Authentication Works",
          "Mongoose Warning Fixed"
        ],
        "USER AUTHORISATION & MIDDLEWARES": [
          "Generate Token For Login User",
          "Dummy Profile Controller",
          "Get Token from Header",
          "Verify Generated Token",
          "IsLogin Middleware"
        ],
        "PRODUCTS PAGINATION, FILTERING CONTROLLER": [
          "Product Data Model",
          "Create Product Controller",
          "Fetching All Products",
          "Environments In Postman",
          "Filter Products By Name",
          "Filter Products By Colors , Brands And Sizes",
          "Filter Products By Price Range",
          "Product Pagination",
          "Pagination Results",
          "Fetching Single Product",
          "Update Product",
          "Delete Product"
        ],
        "PRODUCT CATEGORIES CONTROLLER": [
          "Create Categories",
          "Single, Update, Delete Categories Controller",
          "Associate Product To Category",
          "Products Brands CRUD Controller",
          "Associate Products To Brand Category",
          "Products Colors CRUD Categories Controller",
          "Color Model Modified"
        ],
        "PRODUCT REVIEWS CONTROLLER": [
          "Reviews Model",
          "Create Review Controller",
          "Avoid Duplication Of Reviews",
          "Calculate Average Rating"
        ],
        "PRODUCT ORDER PROCESSING": [
          "Order Placement Process",
          "Order Model",
          "Dummy Order Controller",
          "Order Placement Steps",
          "Order Placement Part 1",
          "Order Placement Part 2",
          "Update User Shipping Address"
        ]
      },
      "requirements": [
        "Basics of NodeJS",
        "Basics of Javascript (ES6)"
      ],
      "description": "This course is designed to provide students with a comprehensive understanding of building and deploying full-featured APIs, including leveraging AI tools like Cursor AI. Students will learn how to build APIs using AI-driven approaches while mastering backend development with the MERN stack, MongoDB/Mongoose, and integrating advanced features.\nThroughout the course, students will learn to integrate Stripe for payment processing, implement pagination and filtering techniques, analyze order statistics, manage orders through an admin panel, and handle categories and product management. Additionally, the course will guide students on database design and connection, as well as implementing user authentication and authorization.\nThe course starts with an introduction to Node.js and the fundamentals of API development, including setting up a development environment, creating and testing API endpoints, and connecting to databases. As students progress, they will explore integrating Stripe for payments, handling webhooks, implementing advanced querying techniques, and building robust analytics systems.\nWhat sets this course apart is the integration of AI-powered coding techniques using Cursor AI, enabling students to build efficient, scalable APIs faster. Students will also work on real-world projects to gain hands-on experience with tools and workflows that enhance their productivity and understanding of modern API development.\nTopics include:\nBuilding and testing APIs with AI-driven tools like Cursor AI\nIntegrating Stripe for payment processing and webhooks\nDesigning pagination, filtering, and order analytics\nImplementing admin processes for orders, product management, and categories\nEnsuring API security, performance, and scalability\nBy the end of the course, students will have a strong foundation in API development, the skills to deploy APIs in real-world environments, and practical experience with AI tools that enhance coding efficiency.",
      "target_audience": [
        "Developers who wants to leverage AI Effectively for building projects",
        "Developers who want to learn about building APIs",
        "Students who are new to web development and want to learn about building APIs",
        "Developers who want to learn about integrating Stripe for payment processing",
        "Engineers who are interested in learning about building e-commerce systems",
        "Individuals who want to learn about building and deploying a full-featured API",
        "Anyone who wants to learn more about building and working with APIs."
      ]
    },
    {
      "title": "R Programming - R Programming Language Beginners to Pro",
      "url": "https://www.udemy.com/course/r-programming-r-programming-language-beginners-to-pro/",
      "bio": "R Programming Language Course Suitable For Everyone, Learn R Data Structures, R Graphics, R Statistical Analysis & Mores",
      "objectives": [
        "Understanding R Programming Language",
        "Learn Fundamentals of R Programming",
        "R Data Structures",
        "R Statistical Analysis",
        "Plotting Data Using in R",
        "Develop Your Own Functions",
        "Analyzing Real Datasets",
        "R Graphics"
      ],
      "course_content": {
        "Get Started With R Programming Language": [
          "Syntax",
          "Print Output",
          "Comments",
          "Variables",
          "Multiple Variables",
          "Variable Names",
          "Concatenate Elements",
          "Data Types",
          "Numbers",
          "Math",
          "Strings",
          "Escape Characters",
          "Booleans or Logical Values",
          "Operators",
          "If ... Else",
          "Nested If",
          "AND OR Operators",
          "While Loop",
          "For Loop",
          "Nested Loops",
          "Functions",
          "Nested Functions",
          "Recursion",
          "Global Variables"
        ],
        "R Data Structures": [
          "Vectors",
          "Lists",
          "Matrices",
          "Arrays",
          "Data Frames",
          "Factors"
        ],
        "R Graphics": [
          "Plotting",
          "Line",
          "Scatter Plot",
          "Pie Charts",
          "Bar Charts"
        ],
        "R Statistics": [
          "Introduction of Statistics",
          "Data Set",
          "Max and Min",
          "Mean",
          "Median",
          "Mode",
          "Percentiles"
        ]
      },
      "requirements": [
        "No Prior Knowledge is Required.",
        "Anyone Interested To Become a Data Analyst or Data Scientist."
      ],
      "description": "Welcome to the R Programming - R Programming Language Beginners to Pro course! Whether you're a complete novice or an experienced programmer looking to expand your skills, this comprehensive course is designed to take you from beginner to proficient user in R programming.\n\n\nDive into the fundamental syntax of R programming, including variables, data types (numeric, character, logical), vectors, and basic operations. Learn how to write and execute R code in the RStudio console. Explore R's essential data structures, including vectors, matrices, arrays, lists, and data frames. Understand how to create, manipulate, and access elements in each data structure.\n\n\nR is a powerful and versatile programming language widely used for statistical computing, data analysis, and visualization. In this course, you'll learn everything you need to know to harness the full potential of R, from basic concepts to advanced techniques.\n\n\nHere's an overview of what you can expect to learn:\n\n\nComments\nConcatenate Elements\nData Types\nMath\nStrings\nEscape Characters\nBooleans or Logical Values\nOperators\nNested If\nAND OR Operators\nFor Loop\nNested Loops\nFunctions\nRecursion\nLists\nMatrices\nArrays\nData Frames\nFactors\nLine\nScatter Plot\nBar Charts\nIntroduction of Statistics\nData Set\nMax and Min\nMean\nMedian\nMode\n\n\n\n\nEnd of this course, you'll have the skills and confidence to tackle data analysis, visualization, and statistical modeling tasks using R, positioning yourself as a proficient R programmer. Join us on this exciting journey into the world of R programming, and let's unlock the full potential of data with R together!",
      "target_audience": [
        "Anyone Can Want To Learn R Programming Language",
        "Data Analysts",
        "Data Engineers",
        "Statisticians",
        "Software Engineering"
      ]
    },
    {
      "title": "Build a Social Network using Node.js and MongoDB",
      "url": "https://www.udemy.com/course/build-a-social-network-using-nodejs-and-mongodb/",
      "bio": "Time to Level Up",
      "objectives": [
        "NodeJS concepts",
        "MongoDB",
        "WebSockets",
        "HapiJS"
      ],
      "course_content": {},
      "requirements": [
        "Understand basics of javascript",
        "Be familiar with html",
        "Be a go-getter"
      ],
      "description": "This course will teach you important Node.js fundamentals. Most courses either go over code but not the concepts. Or they go over the concepts but not any code.\nHowever, we will go over both concepts and code. We will build a social network from the ground up. This course will also build your confidence to go out and create your own applications!\nIt's time to level up. Let's start learning!",
      "target_audience": [
        "Interested in learning NodeJS",
        "Want to build their own applications",
        "Driven",
        "Entrepreneurs"
      ]
    },
    {
      "title": "Laravel 8.X & 7.X E-commerce Website From A to Z",
      "url": "https://www.udemy.com/course/laravel-e-commerce-website-from-a-to-z/",
      "bio": "Build An E-commerce Website from beginners to pro By using Stripe Api for payment. Available on laravel 9.",
      "objectives": [
        "How To Install Laravel",
        "How To Create A Complete Project/Website In Laravel",
        "How To Create E-Commerce Website In Laravel",
        "Learn Basic Routing",
        "Learn How To Use PHP Artisan Commands",
        "Learn How To Create Models & Controllers",
        "Learn How To Create Views Using Blade",
        "Connect Website To Database & Create Tables",
        "Get Products From Database & Display Them For Customers",
        "Add Bootstrap To Your Project",
        "Create Cart & Display Prices & Quantities",
        "Redirect Users To Specific Pages",
        "Delete Items From Cart",
        "Create Admin Dashboard To Control All Products",
        "Update Product Fields",
        "Upload & Update Product Image",
        "Create New Products Using Admin Dashboard",
        "Delete Product From Database Using Admin Dashboard",
        "Restrict Access To Admins Only",
        "Add Pagination To Your Website",
        "Increase & decrease number of items in cart",
        "Create a Robust Checkout System",
        "Add Payment Gateway Page",
        "Integrating Stripe with your e-commerce store",
        "Exporting Client Orders To PDF",
        "Creating The Invoice"
      ],
      "course_content": {},
      "requirements": [
        "Intermediate PHP knowledge",
        "Good Object Oriented Programming Skills",
        "Knowledge Of How Frameworks Work",
        "Basic Understanding Of Html & Css",
        "Windows 7/8/8.1/10, Mac OS or Linux",
        "Stable Internet Connection",
        "Knowledge Of Using Command Line/Terminal",
        "Knowledge Of How To Download & Install Programs In Your Operating System",
        "Xampp local server"
      ],
      "description": "In this course, we're gonna learn from scratch and step by step, how to create a complete Laravel E-commerce WebApplication with seven different credit cards for payment: Visacard, MasterCard, AmericanExpress, UnionPay, Diners Club, JCB, and Discover.\nWe're gonna learn :\nHow to create and view products, products categories, sliders;\nHow  to select a product by category;\nHow to add products to cart;\nHow to update products item quantity and how to remove item products;\nHow to customize checkout form for online payment with stripe API;\nHow to save and display Client orders;\nHow to export Client orders from Laravel to PDF.\nIn this course, we will learn from scratch, step by step, the basics of Laravel. We are going to code with Laravel 7.X.\nWe will learn:\nOn setting up a Laravel project. We will see in great detail how to set up a Laravel project;\nThe Model View Controller concept;\nThe Basic Routing;\nWith much more details on the Controllers (extending between models and views);\nHow to use the Blade templating template in a Laravel project. Which has the role of being able to avoid the reuse of similar HTML codes;\nWith much more detail on models and migrations;\nLaravel Collective is a form system clean for Laravel.",
      "target_audience": [
        "Intermediate PHP Developer",
        "Web Developers Who Want to Take Their Skills To A Higher Level",
        "Web/Software Developers Who Want To Learn Laravel",
        "Junior/Senior PHP Developers Who Want Learn Laravel"
      ]
    },
    {
      "title": "Object Oriented Programming in Javascript - Complete Course",
      "url": "https://www.udemy.com/course/object-oriented-programming-javascript-masterclass-oops/",
      "bio": "Learn Object Oriented programming in Javascript (Prototypes, classes, modules) - ton of hands-on examples and exercises",
      "objectives": [
        "By the end of this course, you’ll have a thorough understanding of how Object oriented programming works in Javascript.",
        "Interviewers love interviewees who’ve mastered OOPS and you’ll stand out from the crowd.",
        "You'll learn the ins and outs of one of the major topics that can land you a job or a promotion",
        "You’ll know how to apply those concepts in your projects and create clean code that runs faster than your peers.",
        "You’ll know how to create re-usable components for your projects and take your coding skills to the next level.",
        "You'll learn all about the basic OOPs topics like creating properties, methods, accessing them, deleting them and so on.",
        "You'll learn the importance of constructors and how to use them to create 100s of objects with just a small block of code.",
        "You'll learn all about symbols, the 'this' keyword, looping through objects and a horde of pre-defined global Object methods.",
        "You'll learn all about prototypes, prototype inheritance, protototype chain and using them to create re-usable code structures that save a lot of memory space.",
        "You'll learn about ES6 classes and using them to create 1000s of objects in a fraction of the time it usually takes.",
        "You'll also learn all about class inheritance, polymorphism, private, protected and static classes, class fields and so on.",
        "You'll also learn all about factory functions and mixins.",
        "Finally, you'll learn about creating re-usable real world app components with ES6 modules.",
        "You’ll learn all of these while learning the core concepts of OOPS like encapsulation, inheritance, polymorphism and abstraction"
      ],
      "course_content": {
        "Object Oriented Programming in Javascript basics": [
          "What are objects?",
          "50 pages OOPS JavaScript 2020 Notes Download",
          "How to create objects & their properties in Javascript",
          "Accessing the property values in objects",
          "Adding, updating and deleting object properties",
          "Dynamic access to properties",
          "Multi-word properties - creating and accessing them",
          "Property shorthand",
          "Arrays as objects",
          "Objects and const",
          "Variables as properties - computed properties",
          "Naming properties - do's and don'ts",
          "Object methods - an introduction",
          "Object methods - 'this' keyword",
          "In operator and for...in"
        ],
        "Object Oriented Programming in Javascript - Advanced concepts": [
          "Object referencing",
          "Cloning and merging objects",
          "Constructors - an introduction",
          "Constructors - importance of 'new' and constructor expressions",
          "Private properties with closures",
          "Property flags and descriptors",
          "Getters and setters with constructors",
          "Getters and setters with Object.define()",
          "Symbols - create hidden properties"
        ],
        "Prototype and Prototype Inheritance": [
          "Prototype - An introduction",
          "Prototype - a further look and Proto chain",
          "Prototype inheritance",
          "Proto, apply method and more",
          "Prototype chaining"
        ],
        "Classes and Class Inheritance": [
          "ES6 Classes - An Introduction",
          "Classes are not syntactic sugar - proof",
          "Class expressions",
          "Class fields",
          "Getters and setters in classes",
          "Method chaining",
          "Class inheritance",
          "Overriding properties and methods in class inheritance",
          "Overriding constructors",
          "Static properties and methods",
          "Protected, read only and private (latest update) properties",
          "Class polymorphism",
          "Factory functions"
        ],
        "ES6 Modules": [
          "Creating and using modules in your projects",
          "More on modules and module level scope",
          "Examples of export - functions, strings, arrays & export rules",
          "Exporting and using constructors, objects, prototypes and classes",
          "Various types of imports",
          "Bonus lecture: Continue your journey!!"
        ]
      },
      "requirements": [
        "Basics of Javascript"
      ],
      "description": "Would you like to take your Javascript knowledge to the next level? Did you know that Object Oriented programming is one of the most asked technical interview topics? So, if you want to ace your interviews, you need a thorough understanding of OOPs (Object Oriented Programming).\nJavascript is no stranger to OOPs, and even though it wasn't designed as an OOPs language to start with, with the various advancements in the language, it has adapted quite well to the intricacies of Object oriented design.\nObject oriented programming is one of the most sought-after skills in the programming world, and as a web developer, if you master it, you’ll stand out from the rest.\nSo, if you'd like to delve deep into the exciting world of OOPs, especially with Javascript as your language of choice, this course is perfect for you.\n\n\nWhat will you learn in this course?\n1. By the end of this course, you’ll have a thorough understanding of how Object oriented programming works in Javascript.\n2. Interviewers love interviewees who’ve mastered OOPS and you’ll stand out from the crowd.\n3. You'll learn the ins and outs of one of the major topics that can land you a job or a promotion\n4. You’ll know how to apply those concepts in your projects and create clean code that runs faster than your peers.\n5. You’ll know how to create re-usable components for your projects and take your coding skills to the next level.\n6. You'll learn all about the basic OOPs topics like creating properties, methods, accessing them, deleting them and so on.\n7. You'll learn the importance of constructors and how to use them to create 100s of objects with just a small block of code.\n8. You'll learn all about symbols, the 'this' keyword, looping through objects and a horde of pre-defined global Object methods.\n9. You'll learn all about prototypes, prototype inheritance, protototype chain and using them to create re-usable code structures that save a lot of memory space.\n10. You'll learn about ES6 classes and using them to create 1000s of objects in a fraction of the time it usually takes.\n11. You'll also learn all about class inheritance, polymorphism, private, protected and static classes, class fields and so on.\n12. You'll also learn all about factory functions and mixins.\n13. Finally, you'll learn about creating re-usable real world app components with ES6 modules.\n14. You’ll learn all of these while learning the core concepts of OOPS like encapsulation, inheritance, polymorphism and abstraction.\n\n\nWho is this course for?\n1. Javascript developers who want to take their knowledge to the next level\n2. Programmers who already know OOPs but would like to learn how to implement it in Javascript.\n3. Web developers who'd like to add \"Object oriented programming\" to their resume and stand out in your job interviews.\n4. Developers who'd like to pad their resume and get that promotion they've always wanted.\n5. Developers who want to implement the truly mind-blowing concepts of OOPs in their projects to write faster, cleaner code.\n6. Front end developers who are working with frameworks like Angular, React, Vue or Svelte and would like to apply object oriented programming concepts in their projects.\n\n\nHow is this course designed:\nModule 1 : Object basics - In this module, we'll look at the various basic topics of Objects such as creating objects, properties and methods, accessing, updating and deleting them and looping through objects.\nModule 2 : Object Oriented Programming - advanced - In this module, let's delve deeper into OOPs by looking at the concept of object referencing, using constructors to creating multiple objects with the same lines of code, getters, setters, private properties and symbols.\nModule 3 : Prototypes and prototype inheritance - In this module, we'll look at prototypes, creating re-usable codes with them, prototype inheritance, prototype chaining and so much more.\nModule 4 : Classes and Class inheritance - In this module, we'll look at ES6 classes, using them to create 1000s of objects faster than the other methods available, class inheritance, private and protected class properties, static properties, factory functions, mixins and so much more.\nModule 5 - Modules - In this module, we'll look into how to create modules in your code and create dependencies between different JavaScript files.\n\n\nEach of these modules will create full-fledged lessons that teach a particular OOPs concept in detail with a lot of real-world over-the-shoulder examples, so you'll have a lot of fun while learning!\n\n\nSo, what are you waiting for? Get in and get started on your journey to becoming an OOPS web developer today!",
      "target_audience": [
        "Javascript developers who want to take their knowledge to the next level",
        "Programmers who already know OOPs but would like to learn how to implement it in Javascript.",
        "Web developers who'd like to add \"Object oriented programming\" to their resume and stand out in your job interviews.",
        "Developers who'd like to pad their resume and get that promotion they've always wanted.",
        "Developers who want to implement the truly mind-blowing concepts of OOPs in their projects to write faster, cleaner code.",
        "6. Front end developers who are working with frameworks like Angular, React, Vue or Svelte and would like to apply object oriented programming concepts in their projects."
      ]
    },
    {
      "title": "PHP & JavaScript Basics for WordPress Users",
      "url": "https://www.udemy.com/course/learn-php-basics-for-wordpress/",
      "bio": "Learn the basics of PHP and JavaScript required to become a WordPress Developer",
      "objectives": [
        "The basics of PHP",
        "How PHP is used in WordPress websites",
        "How to write basic WordPress functions",
        "How to work with conditional tags",
        "How to work with variables and arrays"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course"
        ],
        "What is PHP?": [
          "What is PHP?",
          "PHP in WordPress",
          "How to Write PHP Code Properly",
          "Combining PHP & HTML"
        ],
        "Coding in PHP": [
          "Introduction to Conditional Statements",
          "Introduction to WordPress Functions",
          "Introduction to WordPress Actions & Filters",
          "Introduction to Variables & Arrays",
          "The WordPress Loop"
        ],
        "JavaScript for WordPress": [
          "What is JavaScript?",
          "JavaScript Frameworks & Libraries",
          "Difference between JavaScript & PHP",
          "How JavaScript is used in WordPress",
          "JavaScript Sample Code 1",
          "JavaScript Sample Code 2",
          "How JavaScript is added to WordPress",
          "How to Enqueue JavaScript"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "WordPress Knowledge is required"
      ],
      "description": "Welcome to the PHP basics for WordPress course.\nThis is a beginners course designed for WordPress students who would like to become WordPress developers.\nWordPress as a content management system was built with PHP and its most important files as well as those of plugins and themes are coded with the scripting language. As such if you aspire to be a WordPress developer then you must learn the basics of PHP which is exactly what this course provides.\nIn this course you will learn the following\nWhat exactly PHP is\nHow PHP is used in databases\nHow to write PHP code properly\nHow to combine PHP and HTML in the same file\nHow to write basic WordPress functions using PHP\nHow WordPress template tags work\nHow WordPress Actions and Filters work\nHow to work with conditional tags and statements\nHow to work with variables and arrays\nHow the WordPress loop works\nIn addition to the above, you will also learn about some of the most important files used by WordPress themes.\nPlease note that this course is NOT a complete course on PHP but a basic introductory course designed to provide you with just the basic knowledge necessary to start learning about WordPress development.\nBy the end of this course you would have learned the basics of PHP which would help you progress to learning about WordPress development.",
      "target_audience": [
        "Students who want to learn the basics of PHP",
        "Students who want to become WordPress developers"
      ]
    },
    {
      "title": "HTML5, CSS3 And JavaScript Fundamentals 2016",
      "url": "https://www.udemy.com/course/html5-css3-and-javascript-fundamentals-2016/",
      "bio": "Learning HTML5, CSS3 and JavaScript from scratch with professional developer",
      "objectives": [
        "Create modern websites using HTML5, CSS3 and JavaSript",
        "Understand JavaScript code",
        "Add styling to any website using CSS",
        "Write clean, modular and robust code for web applications"
      ],
      "course_content": {
        "Introduction to the course": [
          "What we will learn in this course"
        ],
        "Getting Familiar With HTML5": [
          "Downloading the Software We Will Use",
          "Basic HTML5 Concepts"
        ],
        "Introduction to CSS3": [
          "Setting up our project in Aptana Studio",
          "Basic concepts of CSS rules"
        ],
        "Understanding of JavaScript": [
          "Introduction to JavaScript",
          "Arithmetic Operators in JavaScript"
        ]
      },
      "requirements": [
        "Notepad++ (we'll download it together in the 1st lecture)",
        "Aptana Studio 3 IDE (we'll download and install it together in the lectures)"
      ],
      "description": "In this tutorial we’re going to learn from scratch 3 most popular items in front end web development - HTML5, CSS3 and JavaScript.\nThese three items allow you to break into the industry as a front-end web developer.\nThe very first topic we're going to learn is what is HTML5. The point is after taking this course you from the complete beginner you'll be able to use HTML5 to create a modern websites.\nWe will also cover all the different attributes and elements associated with HTML and in fact many other items related to HTML 5 so that you can advance your skills when you create modern webpages.\nWe will then get down and will explain how to use CSS to style your web pages and create a number graphic and interactive features in your web applications.\nAnd of course we will cover JavaScript so that upon completion of this course you'll be able to use JavaScript to create interactivity and dynamic elements in your web applications.\nUsing JavaScript you'll be able to change things on the page, depending on user activities there. That means that you'll be able to make your websites interactive!\nIn fact we're going to learn from scratch a number of different aspects of HTML5, CSS and JavaScript.\nAgain guys, these three items allow you to break into the industry as front-end web developer.",
      "target_audience": [
        "Anyone who want to learn front end web development",
        "Beginner web developers who wish to increase their skills"
      ]
    },
    {
      "title": "Build a Website from Scratch with Kotlin and Jetpack Compose",
      "url": "https://www.udemy.com/course/build-a-website-from-scratch-with-kotlin-and-jetpack-compose/",
      "bio": "Create and Deploy Responsive Landing Page with Kotlin and Compose HTML framework called Kobweb!",
      "objectives": [
        "Create a Landing Page with Kotlin and Jetpack Compose",
        "Compose for Web framework",
        "Kobweb framework Built on top of Compose for Web",
        "Kotlin/JS",
        "Frontend development with Kotlin",
        "Write Kotlin code and translate to HTML/CSS/JS",
        "Build Fully Responsive Landing Page with Kotlin",
        "Mobile, Tablet, Desktop Screen Size Support",
        "Static Website",
        "Website Deployment",
        "Add Custom Transition Animations"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introducing with Compose for Web",
          "Kobweb VS Compose for Web"
        ],
        "Setup": [
          "Development Environment (Intelij IDEA)",
          "Install the Kobweb Binary",
          "Create the Project",
          "Create an Index Page",
          "Project Source Code"
        ],
        "Main Section": [
          "Add the MainSection Background",
          "Create a Header Component",
          "Style and Hover Animations on a Header component",
          "Make Header Responsive",
          "Create SocialBar Component",
          "Implement Main Content",
          "Animate the Button & Main Image"
        ],
        "About Section": [
          "Create SkillBar component",
          "Create SectionTitle component",
          "Implement About Section content",
          "Observe a Viewport & Animate the SkillBar component"
        ],
        "Service Section": [
          "Create ServiceCard component",
          "Animate ServiceCard component"
        ],
        "Portfolio Section": [
          "Create PortfolioCard component",
          "Add Hover Animations on PortfolioCard",
          "Implement Portfolio Navigation"
        ],
        "Achievements Section": [
          "Create AchievementCard component",
          "Animate Achievement Section"
        ],
        "Testimonial Section": [
          "Create TestimonialCard & RatingBar component",
          "Implement Testimonial Navigation",
          "Fix the RatingBar"
        ],
        "Experience Section": [
          "Create ExperienceCard component",
          "Animate ExperienceCard component"
        ],
        "Contact Section": [
          "Create Contact me Form",
          "Submit an Email"
        ]
      },
      "requirements": [
        "Experience with Kotlin programming language",
        "Experience with Jetpack Compose UI Toolkit"
      ],
      "description": "Build a Fully Responsive Website with Kotlin and Jetpack Compose! Yeah, that's right! That's possible too. And it's almost the same as building an Android Application, but even simpler then that, because we don't have to worry about the lifecycle, like we have to with Android.\n\n\nIn this course I'm going to teach you everything you need so you can get started as quickly as possible, and build your own website. Kotlin is becoming a multi-platform language, which means you don't need to learn some other language in order to develop a website, instead use the same knowledge that you already have with Kotlin!\n\n\nThis opens the door for many programmers out there, who want's to become full stack developers with the knowledge of a single programming language.\n\n\nIn this course, you will learn how to develop one beautiful Landing Page from scratch, with various different animations that will be shown to your visitors when they scroll through your page.\n\n\nI will guide you through the whole process from the beginning. From setting up, creating the project, to coding, exporting the website and deploying it on a server so that everyone can access and view your Landing Page from the web browser.\n\n\nThe framework that we are going to use for creating this website is called Kobweb, which is built on top of the Compose HTML framework. I'm going to give you some more details about those frameworks and their differences at the beginning of this course.\n\n\nNow, waste your time no more. If you're excited as I'm right now, enroll in this course and let's get started!",
      "target_audience": [
        "Anyone who wants to learn how to build Frontend apps with Kotlin and Jetpack Compose",
        "Anyone who wants to reuse their Kotlin programming skills to build a website",
        "Web Developers",
        "Android Developers",
        "Mobile Developers",
        "Multi-platform Developers"
      ]
    },
    {
      "title": "Tailwind CSS – The Practical Bootcamp in 2025",
      "url": "https://www.udemy.com/course/tailwind-css-the-practical-bootcamp/",
      "bio": "Gain Tailwind CSS Essentials Mastery, Tackle Coding Exercises, and Build Real-world Projects that Stand Out!",
      "objectives": [
        "Master the fundamentals of Tailwind CSS and apply utility-first principles to build responsive, modern websites.",
        "Engage in interactive coding exercises after each lesson to reinforce your understanding and gain practical experience.",
        "Explore HTML and CSS fundamentals with dedicated refresher modules that guide you from beginner to advanced concepts.",
        "Understand and implement spacing, sizing, and typography utilities to achieve professional layouts with Tailwind CSS.",
        "Utilize color themes, backgrounds, and borders to create visually appealing designs.",
        "Gain proficiency in using flexbox and grid layout systems to create advanced, flexible page structures.",
        "Create and style complex layouts using grid utilities, mastering implicit and explicit grid systems.",
        "Learn to create stunning dark mode designs that adapt to user preferences.",
        "Apply transitions and animations to add smooth interactivity to web elements.",
        "Leverage filters, effects, and transforms to enhance the visual presentation of your websites.",
        "Learn how to use Tailwind’s states and pseudo-classes for hover, focus, and other user interactions.",
        "Develop deep knowledge of responsive design principles, ensuring your projects look great on all screen sizes.",
        "Confidently apply preflight styles to reset and standardize your CSS for a clean slate.",
        "Understand how to set up and configure Tailwind CSS with various tools like Tailwind CLI for efficient development.",
        "Build a responsive navigation system, including dropdowns and hamburger menus, using Tailwind’s utilities.",
        "Discover best practices for creating and managing utility-first components, optimizing reusability in your projects.",
        "Apply your skills by completing three major projects: a professional portfolio website, a financial services website, and a band portfolio website.",
        "Build a strong foundation in utility-first design, enabling you to approach projects with a streamlined, scalable mindset."
      ],
      "course_content": {
        "Introduction": [
          "Bootcamp Introduction",
          "Who This Bootcamp Is For",
          "How to Get the Best Results from This Bootcamp",
          "What to Expect Upon Completing This Bootcamp",
          "How to Get Help",
          "An Overview of the Bootcamp Documentation",
          "An Overview of Coding Exercises",
          "An Overview of the Bootcamp Projects",
          "How to Access the Bootcamp Resources – Source Code",
          "Your Feedback Helps Me Improve This Bootcamp",
          "Tailwind CSS V4 Update Announcement",
          "Tailwind CSS vs. CSS",
          "HTML Overview – Basic Concepts - OPTIONAL Refresher",
          "HTML Overview – Intermediate Concepts - OPTIONAL Refresher",
          "HTML Overview – Advanced Concepts - OPTIONAL Refresher",
          "CSS Overview – Basic Concepts - OPTIONAL Refresher",
          "CSS Overview – Intermediate Concepts - OPTIONAL Refresher",
          "CSS Overview – Advanced Concepts - OPTIONAL Refresher"
        ],
        "The Essentials Roadmap": [
          "Essentials Roadmap Overview"
        ],
        "Tailwind CSS Essentials": [
          "Section Overview",
          "Tailwind CSS Essentials – Spacing",
          "Spacing Exercise 1: Basic Padding Practice - Apply Uniform Padding",
          "Spacing Exercise 2: Margin Mastery - Creating Evenly Spaced Elements",
          "Spacing Exercise 3: Advanced Spacing - Creating a Content Block with Even Spacing",
          "Tailwind CSS Essentials – Sizing",
          "Sizing Exercise 1: Setting Basic Width and Height for Elements",
          "Sizing Exercise 2: Adjusting Max-Width and Max-Height of Elements",
          "Sizing Exercise 3: Combining Width, Height, and Spacing for Advanced Layouts",
          "Tailwind CSS Essentials – Typography",
          "Typography Exercise 1: Creating a Clean Blog Post Layout",
          "Typography Exercise 2: Designing a Simple Hero Section",
          "Typography Exercise 3: Crafting a Pricing Card",
          "Tailwind CSS Essentials – Borders",
          "Border Exercise 1: Creating a Card with Solid Borders and Padding",
          "Border Exercise 2: Designing a Testimonial Section with Rounded Borders",
          "Border Exercise 3: Creating a Simple Info Box with Dotted Borders",
          "Tailwind CSS Essentials – Background",
          "Background Exercise 1: Building a Gradient Hero Section",
          "Background Exercise 2: Portfolio Section with Multi-Layered Background",
          "Background Exercise 3: Building a Blog Post Card with a Dual-Gradient Background",
          "Tailwind CSS Essentials – States Part 1",
          "Tailwind CSS Essentials – States Part 2",
          "Tailwind CSS Essentials – Filters Part 1",
          "Tailwind CSS Essentials – Filters Part 2",
          "Tailwind CSS Essentials – Effects",
          "Tailwind CSS Essentials – Dark Mode",
          "Dark Mode Exercise 1: Log-In Page",
          "Dark Mode Exercise 2: Sign Up Page",
          "Tailwind CSS Essentials – Transitions",
          "Transitions Exercise 1: Nothing to Display Page",
          "Transitions Exercise 2: Pricing Plans",
          "Tailwind CSS Essentials – Transforms",
          "Transforms Exercise: Email Data Chart",
          "Tailwind CSS Essentials – Animations",
          "Tailwind CSS Essentials – Tables",
          "Tables Exercise 1: Domain Registration Pricing",
          "Tables Exercise 2: Email Table",
          "Tailwind CSS Essentials – Columns",
          "Columns Exercise 1: Multi-Column Article Layout",
          "Columns Exercise 2: Scenery Grid",
          "Tailwind CSS Essentials – Positions",
          "Tailwind CSS Essentials – Display",
          "Positions Exercise 1: Sales Graph Layout",
          "Tailwind CSS Essentials – Responsive Design",
          "Responsive Design Exercise 1: Expanding Hero Title",
          "Responsive Design Exercise 2: Button Bonanza: Shrink, Expand, and Transform",
          "Responsive Design Exercise 3: The Adaptive Box",
          "Tailwind CSS Essentials – Directives",
          "Tailwind CSS Essentials – Functions",
          "Tailwind CSS Essentials – Variables",
          "Tailwind CSS Essentials – Preflight",
          "Setting up Tailwind CSS with Tailwind CLI"
        ],
        "The Components Roadmap": [
          "Components Roadmap Overview"
        ],
        "Penpot – Visualizing the Flexbox Layout": [
          "Section Overview",
          "Getting Started with Penpot",
          "Getting around the UI of Penpot",
          "Penpot Flexbox Layout – Creating a Container",
          "Penpot Flexbox Layout – Adding Items",
          "Penpot Flexbox Layout – Adding a Flex Layout",
          "Penpot Flexbox Layout – Flex Wrap",
          "Penpot Flexbox Layout – Flex Gap",
          "Penpot Flexbox Layout – Single-line Flex Justification",
          "Penpot Flexbox Layout – Single-line Flex Alignment",
          "Penpot Flexbox Layout – Multi-line Flex Alignment & Justification",
          "Flexbox Playground – an Overview",
          "Flexbox Playground – Flex Item Order",
          "Flexbox Playground – Flex Item Grow",
          "Flexbox Playground – Flex Item Shrink",
          "Flexbox Playground – Flex Item Basis",
          "Flexbox Playground – Flex Item Self-alignment"
        ],
        "Tailwind CSS – Coding the Flex Layout": [
          "Section Overview",
          "Tailwind CSS Flexbox – Initiating a Flexible Layout",
          "Tailwind CSS Flexbox – Flexible Single-Line Container",
          "Tailwind CSS Flexbox – Flexible Multi-line Container",
          "Tailwind CSS Flexbox – Flexible Gap",
          "Tailwind CSS Flexbox – Flexible Single-line Container Justification",
          "Tailwind CSS Flexbox – Flexible Single-line Container Alignment",
          "Tailwind CSS Flexbox – Flexible Multi-line Container Alignment",
          "Tailwind CSS Flexbox – Flexible Item Order",
          "Tailwind CSS Flexbox – Flexible Item Dimensions",
          "Tailwind CSS Flexbox – Flexible Grower Item",
          "Tailwind CSS Flexbox – Flexible Shrinker Item",
          "Tailwind CSS Flexbox – Flexible All-in-one Item",
          "Tailwind CSS Flexbox – Flexible Item Alignment"
        ],
        "Penpot – Visualizing the Grid Layout": [
          "Section Overview",
          "Penpot Grid Layout – Creating a Grid Container",
          "Penpot Grid Layout – Creating Grid Columns and Rows",
          "Penpot Grid Layout – Understanding Grid Terminology",
          "Penpot Grid Layout – Explicit Grid vs. Implicit Grid",
          "Penpot Grid Layout – Grid Items Alignment",
          "Penpot Grid Layout – Grid Container Alignment",
          "Penpot Grid Layout – Grid Gap",
          "Penpot Grid Layout – Relocating and Spanning Grid Items",
          "Penpot Grid Layout – Grid Cell Alignment",
          "Penpot Grid Layout – Grid Area",
          "Layout-it Grid Layout – A Great Grid Generator",
          "Layout-it Grid Layout – Explicit Grid",
          "Layout-it Grid Layout – Implicit Grid",
          "Layout-it Grid Layout – Grid Items Alignment",
          "Layout-it Grid Layout – Grid Container Alignment",
          "Layout-it Grid Layout – Relocating and Spanning Grid Items",
          "Layout-it Grid Layout – Grid Cell Alignment"
        ],
        "Tailwind CSS – Coding the Grid Layout": [
          "Section Overview",
          "Tailwind CSS Grid – Initiating a Grid Layout",
          "Tailwind CSS Grid – Explicit Grid Layout Columns",
          "Tailwind CSS Grid – Explicit Grid Layout Rows",
          "Tailwind CSS Grid – Grid Layout Gap",
          "Tailwind CSS Grid – Implicit Grid Layout Columns",
          "Tailwind CSS Grid – Implicit Grid Layout Rows",
          "Tailwind CSS Grid – Understanding Grid Terminology - Optional",
          "Tailwind CSS Grid – Grid Layout Horizontal Cell Position",
          "Tailwind CSS Grid – Grid Layout Vertical Cell Position",
          "Tailwind CSS Grid – Grid Layout Columns & Rows Justification",
          "Tailwind CSS Grid – Grid Layout Columns & Rows Alignment",
          "Tailwind CSS Grid – Grid Layout Columns & Rows Placement",
          "Tailwind CSS Grid – Grid Layout Justification",
          "Tailwind CSS Grid – Grid Layout Alignment",
          "Tailwind CSS Grid – Grid Layout Placement",
          "Tailwind CSS Grid – Grid Layout Cell Justification",
          "Tailwind CSS Grid – Grid Layout Cell Alignment",
          "Tailwind CSS Grid – Grid Layout Cell Placement"
        ],
        "Building Practical Components – HTML DOM Tree": [
          "Section Overview",
          "Tailwind CSS Image Library – HTML DOM Tree",
          "Tailwind CSS Newsletter – HTML DOM Tree",
          "Tailwind CSS Customer Review – HTML DOM Tree",
          "Tailwind CSS Testimonials – HTML DOM Tree",
          "Tailwind CSS Overlapping Grid – HTML DOM Tree"
        ],
        "Building Practical Components – Tailwind CSS Component Architecture": [
          "Section Overview",
          "Tailwind CSS Component Architecture – Image Library",
          "Tailwind CSS Component Architecture – Newsletter",
          "Tailwind CSS Component Architecture – Customer Review",
          "Tailwind CSS Component Architecture – Testimonials",
          "Tailwind CSS Component Architecture – Overlapping Grid"
        ]
      },
      "requirements": [
        "A foundational understanding of HTML and CSS is all you need."
      ],
      "description": "Welcome to Tailwind CSS – The Practical Bootcamp\nYou will master Tailwind CSS from the ground up and transform your web development skills with hands-on coding exercises and real-world projects. Whether you’re just getting started or a seasoned developer looking to add Tailwind to your toolkit, this Bootcamp is designed to help you unlock your full potential and build stunning, responsive websites faster than ever.\nIn this Bootcamp, you’ll start by mastering the essentials of Tailwind CSS. I’ll guide you through the utility-first approach and teach you how to create beautiful designs with minimal custom CSS. You’ll build a deep understanding of core concepts like spacing, typography, and layout, and learn to leverage powerful features like flexbox and grid systems.\nBut this Bootcamp goes beyond the basics. You'll tackle interactive coding challenges that reinforce every lesson, giving you the opportunity to apply what you’ve learned and build real-world skills. You'll work on three major projects, including a professional portfolio website, a financial services website, and a band portfolio website—all designed to help you showcase your expertise and stand out in the job market.\n\n\nKey Highlights of This Bootcamp:\nMaster the utility-first approach of Tailwind CSS for faster, cleaner, and responsive web design.\nEngage in hands-on coding exercises after every lesson to practice and perfect your skills.\nBuild three professional-grade projects: a portfolio website, a financial services website, and a band portfolio website.\nLearn to seamlessly integrate dark mode into your designs for modern, user-friendly interfaces.\nGain proficiency in powerful layout systems like Flexbox and Grid, and create complex yet scalable layouts.\nExplore responsive design principles to ensure your websites look stunning on any device, from mobile to desktop.\nLearn how to streamline your development workflow using Tailwind CSS tools like CLI and Preflight.\n\n\nComprehensive Code Documentation Included:\nWe understand that mastering new skills is not just about writing code—it’s also about being able to refer back to what you’ve learned. That’s why this Bootcamp includes thoroughly documented code for every lesson and project. Each section comes with well-organized, markdown-format documentation, ensuring you can easily review and reference key concepts and techniques.\nWith this detailed documentation, you’ll be able to:\nFollow along effortlessly with each lesson’s code.\nQuickly review essential concepts whenever needed.\nUnderstand the 'why' behind every piece of code, enhancing your overall comprehension.\nKeep these references handy for use in your own projects, long after the Bootcamp is over.\nBy providing clear, structured documentation, we ensure that your learning experience is seamless and that you leave the course with valuable resources to guide you through future projects.\n\n\nInteractive Coding Exercises for Hands-on Learning\nIn this Bootcamp, I believe that the best way to learn is by doing. That's why we've included interactive coding exercises after essential lessons, designed to help you apply what you've learned and solidify your understanding of key concepts.\nThrough these hands-on exercises, you'll:\nPractice immediately after learning: Reinforce your new knowledge by tackling real-world problems as soon as you complete essential lessons.\nBuild coding confidence: The exercises are structured to help you gradually increase your confidence and proficiency with Tailwind CSS.\nExperiment with concepts: Push your creativity by experimenting with different utilities and layouts to fully explore the possibilities of Tailwind CSS.\nPrepare for real-world projects: Each exercise prepares you for the more comprehensive projects you'll be building throughout the Bootcamp.\nThese coding challenges are an essential part of your learning experience, ensuring that you leave this Bootcamp with both the theory and practical experience needed to succeed.\n\n\nVisualize Flexbox and Grid Layouts with Penpot:\nUnderstanding layout systems like Flexbox and Grid is essential for mastering Tailwind CSS. In this Bootcamp, we take it a step further by using Penpot, an open-source design and prototyping tool, to help you visualize and experiment with these layouts before you write any code.\nWith Penpot, you'll:\nSee your layouts come to life: Visualize how Flexbox and Grid properties interact in real-time, helping you better understand how to apply them in Tailwind CSS.\nCollaborate and experiment: Use Penpot’s powerful collaboration features to experiment with different layout structures and refine your designs.\nStreamline your workflow: By planning your layouts visually in Penpot, you can transition seamlessly from design to code, saving time and ensuring precision in your final projects.\nThis added layer of visualization will make it easier to grasp the nuances of Flexbox and Grid, allowing you to confidently build complex, responsive layouts in your Tailwind CSS projects.\n\n\nProjects in This Bootcamp\nProject 1: Professional Portfolio Website\nThis project focuses on building a personal portfolio website to showcase your work as a developer or designer. You’ll learn to create a sleek, professional design that demonstrates your skills and experiences, complete with sections for projects, testimonials, services, and a contact form.\nKey features of this project:\nA fully responsive portfolio layout.\nA hero section with an image and introduction text.\nA projects section with a dynamic grid layout showcasing past work.\nA contact form designed to collect inquiries professionally.\n\n\nProject 2: Financial Services Website (Light & Dark Mode)\nThis project involves building a financial services website, a perfect practice in creating business-centric, professional websites. You’ll focus on creating a responsive website with light and dark modes, providing flexibility for users with different preferences.\nKey features of this project:\nA fully responsive design with two modes: light and dark.\nService sections showcasing various financial products and services.\nA pricing table for customers to choose between different plans.\nA client testimonial section with styled quotes and images.\nA professional footer with contact information and social media links.\n\n\nProject 3: Band Portfolio Website\nIn this project, you'll build a band portfolio website, showcasing an artist’s latest work, upcoming tours, and discography. This project is all about building a creative, visually appealing layout that grabs attention.\nKey features of this project:\nA hero section with the latest album or tour promotions.\nDiscography and gallery sections displaying the band’s albums and media.\nA tour schedule showcasing upcoming events.\nAn interactive contact form for booking and inquiries.\n\n\nWhat you'll master by the end of this Bootcamp:\nTailwind CSS essentials: Learn the utility-first approach and apply it to create beautiful, responsive websites.\nHands-on coding: Engage in interactive coding challenges after every lesson to solidify your understanding.\nResponsive design: Build websites that look stunning on all devices, from mobile phones to desktop screens.\nDark mode mastery: Learn how to seamlessly integrate dark mode into your projects.\nReal-world projects: Build professional-grade websites from scratch, showcasing your skills in a live portfolio.\nEfficient workflow: Learn how to set up and streamline your development process using Tailwind CSS tools like CLI.\nMastering Flexbox & Grid: Use powerful layout systems like Flexbox and Grid to create complex, flexible designs.\n\n\nGet Started Today\nWhether you're starting from scratch or advancing your web development skills, this Bootcamp will provide you with the tools and knowledge you need to succeed. Take the leap and enroll today—your journey to mastering Tailwind CSS and building real-world projects starts here!",
      "target_audience": [
        "Front-end developers eager to improve their styling efficiency and build faster, more maintainable websites using Tailwind CSS.",
        "Aspiring web developers who are looking to start building responsive and modern websites with a utility-first CSS framework.",
        "Experienced developers transitioning from traditional CSS to utility-first frameworks and seeking to enhance their workflow with Tailwind.",
        "Freelancers and entrepreneurs who need to rapidly prototype and deploy websites with optimized, scalable styles.",
        "Designers-turned-developers who want to bring their creative visions to life by mastering the design-to-code workflow with Tailwind CSS."
      ]
    },
    {
      "title": "React & AWS Amplify build a complete serverless app w/ CI/CD",
      "url": "https://www.udemy.com/course/aws-amplify/",
      "bio": "Create full-stack React app fast using CI/CD to deploy running on the cloud with Cognito, AppSync, Graphql, DynamoDB",
      "objectives": [
        "Use and implement all of the major AWS services that are made available with Amplify",
        "How to deploy your app with AWS Amplify using CI/CD",
        "Rapidly build serverless React apps",
        "Develop a production-ready serverless backend API powered by AWS Amplify that scales to MILLIONS of requests",
        "Build realtime applications",
        "Use AWS Cognito",
        "Use AWS AppSync",
        "Use GraphQl",
        "Use DynamoDB",
        "React Hooks and React Custom Hooks"
      ],
      "course_content": {
        "Installing and Configuring Amplify": [
          "Installing the Amplify CLI",
          "Configuring the Amplify CLI"
        ],
        "Creating our React app": [
          "Creating our React app",
          "Initialising AWS Amplify",
          "Deploying our React website using AWS Amplify Console",
          "Creating a CI/CD to our React App using Amplify",
          "Testing our CI/CD pipeline for React"
        ],
        "Creating Authentication on AWS and enforcing it on our React app": [
          "Creating a deploying a Authentication backend in AWS using Coginito",
          "Installing React modules and configuring AWS Amplify in React",
          "Creating the SignUp, SignIn, SignOut and Reset Password pages"
        ],
        "Creating a Graphql API using Amplify": [
          "Creating the Graphql API in the backend using Amplify",
          "Creating our Graphql Model",
          "Creating our first Query and First Mutation",
          "Querying our Graphql in AppSync from our React app"
        ],
        "Making our Amplify App look amazing with Semantic-UI": [
          "Adding Semantic UI React to our project and creating a new Main Header",
          "Create a Lists component to group our lists",
          "Creating Items and Items groups with Semantic-UI React",
          "Adding out page into a Container and adding Image and date to our list"
        ],
        "Creating a floating button like on Material UI": [
          "Creating a floating action button in React"
        ],
        "Creating a Modal using Semantic-UI": [
          "Creating a new modal using Semantic-UI",
          "Adding all the fields on our modal"
        ],
        "Managing the Modal State using React Hooks": [
          "Manage the state using useReducer"
        ],
        "Creating a Graphql Mutations": [
          "Graphql mutation, add a new item to AppSync"
        ],
        "Creating a Grahql Subscription": [
          "Graphql subscription, subscribing to real time updates in graphql"
        ]
      },
      "requirements": [
        "Basic programing knowledge is required",
        "Desire to learn",
        "Any computer will do: Mac, Windows, Linux or even Cloud9"
      ],
      "description": "Do you want to learn the secret of creating amazing performant apps, that scale on-demand, without expend days programing in front of the computer?\nHow long would take you to set up a full authentication system, with signin and signout screens,  and email and/or SMS confirmation, and password reset? Would you guess a few days or hours?\nWith AWS Amplify you can have all that set up and working serverless in less than 10 minutes\nAnd this course is not only the best resource you will find for Amplify but it is also the most up to date.\nWe will not only create a full-stack application working end to end but we will also learn along the way:\nHow to create a CI/CD pipeline to deploy our website on merge.\nHow to create a fully functional GraphQL API using AppSync with CRUD capabilities (Create, Read, Update, Delete)\nHow to create queries, mutations, and subscriptions in GrapQL\nHow to create and use an AWS S3 Bucket to serve and store images\nHow to verify emails and SMSs using Cognito\nHow to work with AWS Console\nHow to use Semantic UI to make a beautiful application\nHow to create and re-use custom hooks in React\nand much, much more\nWant to create breath taken applications amazingly fast, enrol now!",
      "target_audience": [
        "Developers interested in taking their career to the next level",
        "Developers that want to easily take advantage to AWS services",
        "DevOps that want to learn a new and technology",
        "React developers that want take they apps to next level"
      ]
    },
    {
      "title": "Mobile and Web Development with React and React Native",
      "url": "https://www.udemy.com/course/mobile-and-web-development-with-react-and-react-native/",
      "bio": "Learn React with React JS, React Native, Router, Hooks and Context course and dive deeper into React Native",
      "objectives": [
        "Dive in React JS and Native",
        "Learn how to build single page applications with React JS",
        "Learn to connect to an external API",
        "Create reusable React Components",
        "Set up our virtual environment",
        "Install React-Native dependencies for MAC and Windows",
        "Run Android and IOS simulator",
        "JSX syntax and expressions",
        "ES6 syntax",
        "See the content on the simulator",
        "User Inputs, Forms and Events in React",
        "Using React Portals to render Children Outside the DOM Hierarchy",
        "React JS Hooks and Context",
        "React’s modern face is to develop web applications with React Js Hooks and Context",
        "Creating Hooks and Context structures",
        "Routing with React Router",
        "Route Between Different Screens",
        "Data Transfer Between Different Screens with React Navigation",
        "Reducer, action and dispatch concepts and much more",
        "How to use coding techniques to make efficient development with React",
        "Build fast, user-friendly web apps with React",
        "React, also known as React js, saves time and effort for developers since they only need one programming language.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop fullstack web apps by using tools like NodeJS Redux and Mongodb",
        "React, or React JS, is a frontend Javascript library for building UI components for the web."
      ],
      "course_content": {
        "Let`s Start to Learn React JS": [
          "Your First App Overview",
          "Frequently Asked Questions in React Js, React native, Angular",
          "Project Files and Course Documents",
          "Let, Const and Var in 3 minutes",
          "Install Node JS for Full Stack web development",
          "Create Your React App",
          "Why You Will Need To Create a React App?",
          "Start Creating React App to full stack web development",
          "Do You Want to Learn How To Stop React App?",
          "Important Functional Components",
          "FAQ about Full Stack Web Development with React, React native, Angular",
          "quiz"
        ],
        "What is this JSX?": [
          "Converting HTML JSX in React",
          "Inline Styling with JSX in React JS",
          "JavaScript Variable in JSX",
          "quiz"
        ],
        "React with Props": [
          "Three Tenets of Components",
          "Simple App with React",
          "Styling App with Semantic UI",
          "Building Component",
          "Specifying The Image in React JS",
          "Duplicating The Single Component",
          "Component Nesting",
          "Props System",
          "Passing Props to Child",
          "Reusable Component Overview",
          "Props Children",
          "React Quiz"
        ],
        "Class-Based Components": [
          "Class-Based Components and Functional Component",
          "React JS New App Overview",
          "Getting Users Physical Location",
          "Handling Async Operation in React",
          "Transformation Functional Component to Class Based Component",
          "quiz"
        ],
        "State in React": [
          "State Rules",
          "Initializing State In Constructor",
          "Lifecycle Method Overview",
          "Conditional Rendering",
          "quiz"
        ],
        "Lifecycle Methods": [
          "Get to Know Lifecycle Method",
          "Refactoring App with Lifecycle Method",
          "Passing State As Props",
          "Ternary Expressions in JSX",
          "Showing Picture",
          "Styling The App",
          "Free React Developer Tools",
          "React JS General App Review",
          "quiz"
        ],
        "User Inputs, Forms and Events in React JS": [
          "React App Overview",
          "Component Design",
          "Handling Forms",
          "Styling The App",
          "Creating Event Handlers",
          "Controlled vs Uncontrolled Elements",
          "Why Controlled Elements?",
          "Understanding ‘this’ Key Word In JS",
          "Communicating Child to Parent",
          "Invoking Callbacks In Children"
        ],
        "API Request with React": [
          "Fetching Data",
          "Axios vs Fetch",
          "Async Await Function",
          "Setting The State",
          "Rendering A List of Components",
          "Implementing The Key Values In List",
          "What We Have Learned From The App?",
          "quiz"
        ],
        "Navigation with React Router": [
          "Initializing The Project",
          "The React Router",
          "Link and Nav Links",
          "Programmatic Redirects",
          "Route Parameters",
          "React Router Switch Tag",
          "quiz"
        ],
        "React Portals": [
          "How To Create A Modal?",
          "Why React Portals?",
          "Creating a React Portals",
          "quiz"
        ]
      },
      "requirements": [
        "No prior knowledge is required! about react, react native web development or mobile development",
        "A Windows PC, Mac or Linux Computer",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don’t need to be an expert",
        "Desire to learn React",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Desire to learn React or React JS",
        "Desire to learn web development with react, or react js",
        "Desire to learn mobile development with react native, redux, hooks and context",
        "Desire to learn full stack web development with react, react native",
        "Desire to learn React js",
        "Desire to learn React js, typescript",
        "Desire to learn React, React Native"
      ],
      "description": "Hello there,\nWelcome to Mobile and Web Development with React and React Native course.\nLearn React with React JS, React Native, Router, Hooks and Context course and dive deeper into React Native\n\nReact is one of the best choices for building modern web applications. If you are new to React or maybe you've been struggling to learn and truly understand what’s going on then this course is the best way for you to learn React.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills.\nThe world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nDo you want to learn React Js from scratch?\nDo you want to learn React Native from scratch?\nDo you want to learn the latest React features of Hooks and Context system?\nDo you want to create an app with React React Router; in a very detailed way?\nIf your answer is \"Yes\", you are in the right place. This Mobile and Web Development with React and React Native course will be a perfect match.\nReact is one of the best choices for building modern web applications. If you are new to React or maybe you've been struggling to learn and truly understand what’s going on then this course is the best way for you to learn React.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nThis course is for all levels. We will take you from beginner to advance level.  You will learn  React development step-by-step with hands-on demonstrations. To be able to benefit from this course, all you need is a basic understanding of JavaScript.\nIn the course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer. Besides, with the Expo app, you will be able to run your apps on your own mobile device as well.\nLater on the course, we are going to learn basics of React and React Navigation. JSX, 'props system' and 'state system' are going to be crystal clear for you at the end of the course. We are going to create nice looking reusable components. You are going to be able to use these reusable components in your own future projects. You are going to go to different screens from the app with React-navigation.\nFinally you are going to learn the latest React features \"Hooks and Context\" system. We are going to create two nice looking app, teach you \"Hooks and Context\" in a very detailed way. You are going to learn how to use \"state\" in functional components with the \"Hooks\" system and with \"Context API\" you won't need any third-party package to manage the Application state.\nWe tried to tell all complex topics in very detail on the course. We used some diagrams to tell some important topics and created a nice-looking mobile application. We showed two different ways to create a mobile app. We showed both react-native-cli and expo-cli in our course.\nAt the end of the course;\nBasics of React, React-Native, React-Navigation libraries\nHow to send an HTTP request from a mobile application\nHow to use flex-box system\nHow to create reusable components\nTo reach another app on the device from our app\nCreating your own mobile app both with react-native-cli and expo-cli\nCreating Context with Class Based and Functional Components\nHow to Consume Context in Class Based and Functional Components\nHow to Use Multiple Context in one single component\nHooks Functions(useState, useEffect, useReducer, useContext...)\nCreating Reducer and\nUsing Reducer is going to be clear for you.\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and the React is easy to understand for the beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\n\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React.JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our Complete React Native Course with Router, Hooks and Context course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Beginner who wants to be React developer",
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who wants to build amazing React single page web applications",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "People who are planning a career in the application world",
        "Developers who have researched React but have had trouble mastering some concepts",
        "Anyone who want to start from scratch and to move more advanced level",
        "People who to become web developer",
        "People who to become mobile developer",
        "People who to become front end web developer",
        "People who to become backend web developer",
        "People who to become full stack web developer",
        "People who to become web developement with react, react native",
        "People who to learn full stack web development",
        "People who to learn full stack web development or mobile app development"
      ]
    },
    {
      "title": "Getting started with JavaScript",
      "url": "https://www.udemy.com/course/javascript-code/",
      "bio": "Learn JavaScript Variables, Loops, Functions, Conditions, Objects, Arrays and more. Intro course for Beginners",
      "objectives": [
        "write JavaScript",
        "add JavaScript to web content",
        "apply variables, functions, arrays, loops and conditions"
      ],
      "course_content": {
        "Introduction to JavaScript": [
          "Introduction to JavaScript",
          "Course Tools and Resources Overview",
          "Adding JavaScript and writing JavaScript",
          "Data Types JavaScript Primitives",
          "Strings Numbers Booleans",
          "creating variables in JavaScript",
          "JavaScript numeric operators",
          "JavaScript Comparison operators",
          "JavaScript Multiple comparison Operators",
          "JavaScript conditional statements",
          "Source Code",
          "Conditions with JavaScript ternary operator and switch statement",
          "Source Code",
          "Introduction to JavaScript Objects",
          "source code",
          "Intro to JavaScript Arrays",
          "Array Methods JavaScript",
          "Loops in JavaScript",
          "Source Code Loops",
          "JavaScript Functions",
          "Functions Examples",
          "Bringing it all together JavaScript",
          "Source Example"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Additional Course Resources: Access to Downloads, Applied Examples"
        ]
      },
      "requirements": [
        "basic HTML",
        "Desire to learn JavaScript"
      ],
      "description": "JavaScript is used everywhere on the web, its easy to get started with and tools needed to create it are on most computers right now.  Learn the core fundamental concepts of JavaScript.\nThis is the first step in learning how to write JavaScript code.  Within the course you will find the basic foundations of JavaScript explained.  This is a beginners course and does require some basic understanding of HTML and how webpages are created.\nThis Course is designed for Beginners who want to learn about using JavaScript.  Get started with JavaScript in under 1 hour.\n\nLearn about how to add JavaScript to your web pages\nHow to apply JavaScript\nVariables and operators\nFunctions and how to use them\nWorking with arrays and objects\nAdd logic with conditions\nLoop content to save time\nJavaScript is an essential part of any webpage, users expect more from your web content. JavaScript provides the next level of web interaction.  Develop a solid understanding of JavaScript with the core concepts, to better and advance with JavaScript coding.  Learn JavaScript step by step guidance to understanding what and how to use JavaScript.\nCourse is designed to get viewers started with using JavaScript.  JavaScript is one of the basic languages used to create powerful web experiences.  The course will take students from the very basics of JavaScript teaching how to begin to implement script.\nTaught by an instructor with over 18 years of web development experience. I'm here to help you learn about JavaScript and ready to answer any questions you may have.\nYou will be surprised at how easy it can be to code JavaScript!",
      "target_audience": [
        "anyone who wants to learn the basics of JavaScript",
        "anyone looking for a starting point to learn JavaScript"
      ]
    },
    {
      "title": "Angularjs Live Project",
      "url": "https://www.udemy.com/course/angularjs-webapi2-efcodefirst-web-app-on-3-tier-architecture/",
      "bio": "Angularjs full project end to end implementation for Asp.Net (MVC or Web APIs) developers with EF Code First approach",
      "objectives": [
        "understand how to break requirements in to objects",
        "create entities out of objects",
        "implement data access layer using entity framework code first approach with repository pattern",
        "manage data migrations in entity framework",
        "implement business logic layer using c#net",
        "create service layer using ASP.Net web apis",
        "create UI using angularjs, bootstrap and jquery",
        "implement validations both client side and server side",
        "implement authentication and authorization both on client side and sever side"
      ],
      "course_content": {
        "Introduction": [
          "What are we going to implement?",
          "Project Setup And Source Code",
          "Understanding The Project Architecture"
        ],
        "Business Object Layer and Data Access Layer": [
          "Creating BOL",
          "Creating DAL",
          "Testing DAL",
          "Enabling Code-First Migrations"
        ],
        "Creating Business Logic Layer (BLL) and Service Layer": [
          "Creating Business Logic Layer (BLL) And Testing It",
          "Creating Service Layer Using ASP.Net Web API2"
        ],
        "Creating AngularJS User Interface (UI) and Initial Setup": [
          "Creating AngularJS UI Layer",
          "Creating Directory Structure",
          "Creating Side Menu Bar",
          "Creating Routes In AngularJS"
        ],
        "Employee Management Module": [
          "Creating Employee Mgmt Controller",
          "Creating Grid And Implementing Full Text Search",
          "Implementing Sorting And Paging In Grid"
        ],
        "Creating And Deleting Employee Profile": [
          "Create Employee Profile - I",
          "Create Employee Profile - II",
          "Client Side - Form Validation",
          "Server Side - Business Rules Validation",
          "Performing Delete Operation"
        ],
        "Updating Employee Profile": [
          "Employee Profile Update Panel",
          "Employee Profile Fill",
          "Employee Profile Update Operation"
        ],
        "Working With File Upload": [
          "Employee Profile Pic Upload - Server Side",
          "Employee Profile Pic Upload - Client Side",
          "Employee Profile Pic Display"
        ],
        "Authentication - Securing The AngularJS App": [
          "Employee Authentication - Server Side",
          "Employee Authentication - Client Side",
          "Employee Authentication-Securing Routes",
          "Employee Authentication - Profile Details"
        ],
        "Authorization - Securing The AngularJS App": [
          "Employee Authorization - Role Based",
          "Employee Authorization - Securing Routes"
        ]
      },
      "requirements": [
        "MS Sql Server Any version",
        "Entity Framework 6",
        "Asp.Net Web APIs 2",
        "C#.Net",
        "AngularJS",
        "Visual Studio 2015 or above"
      ],
      "description": "Angularjs-WebApi2-EFCodeFirst Web App On 3-Tier Architecture\n\nQ : Are you really excited to learn how to develop an n-Tier arch web application using Angularjs, Asp.Net Web API, jQuery, Bootstrap, C#.Net, Entity Framework Code First and MS SQL Server?\nA: Then you are at right place and you are going to learn it here with me from scratch..\nIn this course we are going to learn how to break requirements into objects and find relation among them. We will then learn coding models out of this objects and relationships. Moving forward we will also see how to design arch. of the project and implement various layers.\nWe are going to learn implementation of business object layer using POCO and data access layer using repository design pattern and Entity Framework Code First. We will use C#.Net to implement our business logic layer and wrap it up with Asp.Net Web API so that it can be consumed by any client. We are also going to secure our web apis.\nFor user interface we will see Angularjs, jQuery and Bootstrap. We will learn how bootstrap makes our application responsive.We will also see how to implement custom sorting and paging. Moving ahead you will learn forms validations and business rules validations as well. We will also learn how to publish it on web.\nThis project is an EIS - Employee Information System\nThis Web-based information system is designed to allow you to view and maintain your employee information throughout the year. You should use this system to maintain your complete information on employee record.\nThis is an n-tier Single Page Application (SPA) built on .Net platform using various technologies for various layers as given below\nUser Interface: AngularJS1 and BootStrap\nService Layer: Asp.Net Web API\nBusiness Logic Layer: C#.Net\nData Access Layer: Entity Framework Code First\nBack End: MS SQL Server 2016\nTools: Visual Studio 2015 and SQL Server Management Studio 2016",
      "target_audience": [
        "This course is for the web developers who want to learn layered architecture in SPA",
        "Who wants to upgrade their profile with another real time SPA"
      ]
    },
    {
      "title": "The Complete Elasticsearch and Kibana Tutorial for beginners",
      "url": "https://www.udemy.com/course/elasticsearch-and-kibana-tutorial-for-beginners/",
      "bio": "Explore concepts like Installing, Communicating, Real-time data analysis and Visualization using ElasticSearch & KIBANA",
      "objectives": [
        "Comfortably work with Elasticsearch and Kibana",
        "Be able to write Elasticsearch queries for searching and sorting",
        "Be proficient with the concepts and terminology of Elasticsearch",
        "Do CRUD (create, read, update and delete) operations on Elasticsearch",
        "Be able to build a powerful search engine with Elasticsearch",
        "Import real data into your index and create a working Elasticsearch",
        "Configuring Kibana",
        "Creating searches and using Discover tab in Kibana",
        "Be able to create various types of Visualizations",
        "Be able to create dashboards"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of JSON (If not, go through the links provided in the preview lectures)",
        "Basic of linux and windows (If not, go through the links provided in the preview lectures)"
      ],
      "description": "While there are many tutorials that will teach you everything about ElasticSearch and Kibana but this course doesn't try to do that. Instead the goal of this course is to get you as a developer or user of ElasticSearch started quickly. This is the reason you may not find much theory. In this tutorial you will find the basics of ES and Kibana.\n\nUpon completing this course, my goal is that you should know:\nHow to install ElasticSearch and how to communicate with it\nHow to index and remove Documets\nHow to do basic operations like CRUD\nComparison between Elasticsearch and other database terminology\nHow to install Kibana and how to communicate with it\nHow to search for documents and aggregate data from them\nHow to import real time data to Kibana\nPlotting various Visualizations and Dashboards.\nAll the material which is used in this course is attached.\nYou can complete this course in 3-5 hours and please don't ignore any Quiz.\nWe made this course such a way that everyone can understand easily, we added the basic concepts in the beginning lectures , then added advanced topics and finally taught how to use the combination of ES and KIBANA.",
      "target_audience": [
        "Elasticsearch & Kibana Beginners. No prior experience necessary",
        "People who have basic knowledge on Elasticsearch/Kibana and would like to expand on their knowledge",
        "People who would like to work with Elasticsearch/Kibana"
      ]
    },
    {
      "title": "JavaScript Dynamic Web Pages AJAX 30 Projects APIs JSON",
      "url": "https://www.udemy.com/course/ajax-json/",
      "bio": "JavaScript projects explore JavaScript to connect to APIs retrieve JSON data with AJAX use it within your web page",
      "objectives": [
        "How to connect to Web APIs make AJAX requests with JavaScript",
        "Applying JavaScript to create Data driven Web Content",
        "Create Interactive Web Content generated from JSON data",
        "JSON data and how to use JSON as JavaScript Objects within Code",
        "Creating Dynamic Data driven Web Applications with JavaScript",
        "Update parts of a web page, without reloading the whole page",
        "Create User-Friendly interactive web applications",
        "Boost the performance of your web pages",
        "How to create Responsive user interfaces",
        "Modern JavaScript Coding to apply and use JSON data within Web Pages"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Coding JavaScript",
        "Use of Web Editor",
        "Prior Coding Experience"
      ],
      "description": "Full Stack JavaScript coding course - build your own Java Script Projects with Vanilla JavaScript and DOM interaction.\nEnroll now to get instant access to:\n23.5+ hours of premium lessons\n129 page downloadable workbook Guide source code, tips, resources and challenges\nPremium instructor support to help you learn\nLifetime access to course updates\nOne of the MOST common questions I get is using AJAX making requests to the server and returning JSON data outputting it to a web Page.  Here it is THE MOST asked for course content with over 30 Projects to build your skills with AJAX and JavaScript DOM manipulation.  This is a unique course loaded with modern JavaScript content - coding examples and challenges in almost every lesson!!!  Also includes a 100+ Page PDF AJAX JavaScript Guide.\nPerfect to do over 30 days or faster.  Fun unique projects that will AMAZE you and help you learn updating skills with AJAX.   Explore how YOU can create Dynamic and Interactive Web content with data loaded from an API.\nPlease note this is a fast paced course with prerequisites - it demonstrates how to use and apply JavaScript to connect with various endpoints, make requests and return JSON formatted data demonstrated in interactive fun projects.  Prior coding experience is required as lessons focus on applying necessary JavaScript functions to create interactions and dynamic content.  There will be a focus on DOM based coding and use of JSON and JavaScript Objects.\nTaught by an instructor with over 20 years of Web Development experience ready to help you learn more about JavaScript.\nCreate a dynamic list JSON LocalStorage List - project #1 Create an interactive List that gets JSON data from a json file and generates a list. Using JavaScript create page elements, add event listeners for user interactive content. Store JSON data as a string to local storage and load JSON list as a JavaScript Object on Page load. Create a dynamic list for users to add and remove list items, check list items off as completed.\nCreate AJAX to Simple JSON file and get JSON with JavaScript - project #2 Practice coding creates AJAX requests to local JSON files - Create a JSON file valid JSON to JavaScript Object. Load local JSON file data and use it with JavaScript to create page content. Add user event listener to trigger AJAX request using JavaScript Fetch method.\nAJAX to get JSON data from Wiki API - project #3 Using JavaScript Connect to an API endpoint get Wiki Data and update JavaScript create and update Page content with JSON data. JSON data from wikipedia API - using modern javascript fetch make a request to the wikipedia endpoint - return response JSON. Custom request parameters from user input field. Generate page content using JavaScript DOM.\nJSON from WikiMap API examples with JavaScript Code - project #4 Explore how to connect to WikiMap API to get JSON data to update and manipulate page contents using JavaScript. Coding example of practice project to learn more and explore more about connecting to APIs and how to use JavaScript Fetch to get JSON data and output to the web pages.\nMultiple Endpoint Loading JSON data Tester - project #5 Explore connecting to various JSON endpoints - test JSON data to Page content with JavaScript. Using interactive JavaScript web pages to select and make AJAX requests to various endpoints and outputting the JSON data as content to web pages.\nGenerate Random User Data Output to Page AJAX and JS Random User API 5 - project #6 Create an interactive Dynamic application that connects to random user API generates pages content depending on user selection. Fully interactive web application using AJAX requests from user page selections - get JSON data and output to yoru web pages with JavaScript Code. Fetch request methods - use of interactive coding to API and customizing the request parameters and request URL from HTML input fields on the webpage.\nWeather Data App with API JSON data - project #7 Connecting to a weather API to output data with user input values. Create custom query requests to get back JSON data to use on your webpage. AJAX to weather endpoint with page element creation using JavaScript.\nJokes API get fun Jokes for Web Page Content - project #8 Connect to the Chuck Norris open Joke API - get Jokes - Get Category list - return joke data from user selected categories and more. User interactive Dynamic content with JavaScript AJAX requests.\nInteractive App with Star Wars Data - project #9 Create a fully interactive web application that dynamically loads Star Wars data from an Open API source. Return JSON data and output the data object with JavaScript to your webpage.\nDynamic Data driven Trivia DataBase Game - project #10 Create a fully functional Trivia game, track game progress, let the user select the number of questions, difficulty and category. Load the data from a JSON endpoint. Output page contents from JSON data. Users can interact and make selections and JavaScript makes the AJAX requests to load requested data for the user. Game functions adding gameplay with scoring and ability to play unlimited rounds of Trivia Questions all dynamically loaded with AJAX.\nStackexchange API tester Request JSON - project #11 Massive API loaded with data and request URL - perfect to practice and get more familiar with complex JSON data - multiple routes for request URLs and loading JSON data to web pages with JavaScript Coding. Explore how you can connect to the Stackexchange API and Request JSON Data to test and build interactive web applications that are data driven and fully dynamic with JavaScript Code. This API has a lot of data and great to familiarize yourself with making AJAX requests with fetch method in JavaScript, Getting JSON data to use within JavaScript Code, Create your own JavaScript code examples of AJAX requests and using JavaSCript to create interactive web page content.\nSelect Country Data from API - project #12 Connect to a countries API that lists over 250 countries with a complex JSON object rich with data including objects and image paths and arrays. Chunk page data into multiple pages allowing the user to select and interact with JSON data content.\nUser Search Country by Name get JSON data - project #13 Dynamic and interactive page content with JavaScript - loading JSON data into JavaScript coding objects and outputting and creating page element content with JavaScript DOM.\nIntroduction to JavaScript Quiz Game Project - project #14 Create a fully interactive quiz game using JavaScript with JSON data from server endpoint. Connect to an API - return back response data to generate the quiz game using the values from the data. Build interactive content track progress randomize question options. Use JavaScript DOM manipulation to select, create and update page elements. Check correct answers, score the player, build the gameplay loading dynamically from the JSON data. Load the content from a Google Sheet - create the full gameplay which can customize the questions and create the JavaScript game progress all using the JSON data. Output the game progress report to the player as a downloadable text file.\nCreating a Joke Generating Web page from JSON data - project #15 Explore how to connect to an api with limited requests per hour. Build the app in less than 10 requests. Get JSON data - output as JavaScript object create page content from data.\nProject multiple endpoints for JSON data user selected content. - project #16 Using an array data of items, connect to different endpoints, allowing the user to select the content they want to load. Dynamically create a user interaction list of urls and allow user to interact and output the selected content.\nProject connecting to the Github API loading JSON data - project #17 Create a dynamic interactive web user interface connecting to Github data and allowing the user to load selected content. Page content is interactive and content is driven from JSON data provided by the GitHub API.\nGenerate interactive Game with Dynamic Wordlist - project #18 Loading game data dynamically from a Google Sheet. How to share Google Sheet data for web applications. Create a word Scramble game from scratch that loads word lists from shared Google Sheet docs. Create a word list - load the sheet data into your JavaScript application to generate Scramble Words Game. Loading game data dynamically from a Google Sheet. How to share Google Sheet data for web applications. Complete review of JavaScript Scramble Game with full dynamic gameplay coming from a dynamically generated wordlist which is requested via AJAX and returned as JSON to the web application.\nQuiz Game with JavaScript and AJAX - project #19 Explore how to set up a quiz game which is flexible and dynamically generated content from JSON data. Connect to an API load JSON data and output with JavaScript to the DOM web page. Creating an interactive web game with dynamically loaded AJAX content. JavaScript Game Project with data driven dynamically from an API endpoint. Using JavaScript creates the web application making it fully dynamic and adjustable with content. Explore how to set up a quiz game which is flexible and dynamically generated content from JSON data. Connect to an API load JSON data and output with JavaScript to the DOM web page. Creating an interactive web game with dynamically loaded AJAX content.\nYouTube Search API with JavaScript Connect to API - project #20 Setup and connect to the YouTube api to search and get YouTube Data into your webpage. Dynamically create your webpage from JSON content coming from the YouTube API. Create interactive clickable content that loads from the user selection data. Use JavaScript to create a fully functional YouTube interactive web application.\nFrontend API Tester connecting to Endpoints - project #21 How to make JavaScript fetch requests and return JSON data from various endpoints. Test and make interactive content that is data driven from JSON data and dynamically generate the page content with JavaScript. DOM page manipulation with JavaScript Coding.\nGet and POST Tester API JSON JavaScript - project #22 Using user input data select content from API. Send data to the server with AJAX using JavaScript fetch both with GET and POST methods. Handle response JSON data from the server endpoint - output and generate response to the user. Get input field and form data to practice sending requests to testing endpoint which can handle both POST and GET methods returning the simulated data as a JSON object.\nForm Submission with JavaScript fetch JSON data - project #23 Create an HTML form - submit the form input contents with AJAX to the server. Using formData create JSON from contents and send to the endpoint. Simulate form submissions with JavaScript and AJAX using GET and POST methods. Provide user detailed response and page content output from submission.\nJSON placeholder tester JSON JavaScript - project #24 JSON placeholder testing sending data to test server and retrieving response object as JSON. Output JSON response to the web page with JavaScript. JavaScript DOM setup and manipulate page elements outputs content dynamically using JavaScript DOM element manipulation. Great mini JavaScript and AJAX coding project to explore JSON and API sending fetch requests to a placeholder testing API.\nDynamic Content interactive CRUD tester Part 1 - project #25 Select JSON data and output to the page. Create user interaction options to create, read, update, and delete (CRUD) server side data within the testing environment. Select item by id value from server return to page. List all available posts from server output to page. Allow users to select items by id and update the content, create JSON objects to send to the server and using PUT method add to server data. Create new items for the database. Delete post item by id with user selection. Update and customize output for user from JSON data. Using JavaScript DOM manipulation update and build dashboard of dynamic content coming from the testing Server data.\nGitHub json database custom JSON endpoint - project #26 Connect to the Massive GitHub API - create user search apply generating customized request URL with JavaScript Code. Use JavaScript to make the AJAX request for JSON data. Output and update page elements with Data from the server. Show and display JSON data values from GitHub API. Explore connecting and testing making requests to eh server output contents to the web pages with JavaScript DOM coding. Web page development and dynamic web page content. Interactive and user selected JavaScript created content driven by JSON data from the API.\nSetup JSON Local Server with Node NPM - project #27 Step by step guide setup your own local testing server. Practice JavaScript AJAX requests to local data. Create your own JSON data -return data locally from json db file. Perfect for testing and exploring making requests to your own customized JSON data endpoint.\nConnect to Local Server Get and Post Requests with Fetch - project #28 Practice connecting to JSON data locally. Setup your own JSON data using JavaScript to connect to the local JSON data and output it to your testing dev app. Javascript local web developer environment setup and practice environment. Get JSON data use JavaScript to update page elements. Practice connecting and making POST and GET requests to local JSON server using a json.db file located locally. Create page elements with JavaScript using Data returned from JSON data object.\nConnect to Local Server Put and Delete Requests with Fetch project #29 Practice connecting and making PUT and DELETE requests to local JSON server using a json.db file located locally. Create page elements with JavaScript using Data returned from JSON data object. Update Manipulate JSON local data simulating Database requests to the backend code.\nJavaScript AJAX web contact form sending Emails with Apps Script project #30 How to send an email from client side code AJAX Contact form submit data to Google Sheet and Send emails from Google Apps Script MailApp Service. Create your own custom fully functional web contact form that sends emails, tracks form content into a spreadsheet. Setup your own endpoint using Google Apps Script and creating a fully functional web app. Send POST request from your web page using AJAX and JavaScript fetch - create JSON structure of web form data from inputs. Get web page form fields, create JSON object.\nAJAX allows you to communicate with the server, exchange data and update the page without having to refresh the page.\nThe two major features of AJAX allow you to do the following:\nMake requests to the server without reloading the page\nReceive and work with data from the server\nCourse is loaded with 30 Projects to help you learn and practice connecting to endpoints, returning JSON data, making fetch requests, using JSON data with JavaScript to create Page content, explore GET POST PUT and DELETE (CRUD create, read, update, and delete are the four basic functions of persistent storage) with JavaScript AJAX\nSelect, create manipulate page elements with Modern JavaScript code - make things happen.  Create Interactive and fully dynamic web applications driven by JSON data.  Get user selections, make the AJAX request from the user select and output to the web page using JavaScript Code.\nExplore how to make fun interactive projects to make AJAX requests coming from page data and output the content to the page.  Dynamic Page elements generated from AJAX requests to endpoints and return JSON data and use it within JavaScript to update and manipulate DOM page elements.  Create Games, Get JSON data and let users explore the data.  Dynamically generate page content with JavaScript.\nConnect to web endpoints - get JSON data and output that content into your web page with JavaScript\nAJAX practice mini projects to help you learn more about JSON data - making fetch requests - debugging and more.\nSource Code is included - mini projects are designed to help practice and learn more about AJAX and how you can use it to create content and update web pages.\nTake your web content to the next level - Bring your WEB Page to LIFE!!!! Allow your users to interact with—the new information via JavaScript seamlessly displaying the updated content.\nMassive JavaScript AJAX Course - with 30 customized learning projects ready to help you learn and expand your portfolio. If you want to create DYNAMIC and INTERACTIVE web pages this is the course for YOU!!!\n\n\nThis course will demonstrate how to incorporate it into your projects - creating games, getting Sheet data, getting server JSON data via an API. Loaded with testing apps to get the most out of AJAX. Taught by an instructor with over 20 years of real world experience ready to help you learn and explore AJAX - This is a unique course with content you will not find anywhere else. Join Today Code Now.\nCreate asynchronous web applications - On the client side retrieves data from the server in the background NO PAGE reloads - just modern interactive web content. Ajax allows web pages and web applications to change the content dynamically without reloading the entire page. Modern JavaScript coding using fetch for GET POST PUT and DELETE methods. Ajax is not a new technology, or a different language, just existing technologies used in new ways. It is a set of web development techniques working together to create a smooth user experience - interacting with server JSON data.",
      "target_audience": [
        "Modern Web Designers and Web Developers",
        "Anyone who wants to learn how to load JSON data and apply the contents to their web pages",
        "Anyone who wants to practice and learn more about making AJAX requests via JavaScript",
        "JavaScript Coders who want to learn more about AJAX",
        "Anyone who wants to learn more about JavaScript fetch and modern request methods"
      ]
    },
    {
      "title": "Building E-Commerce Shopping Cart Website in PHP & MySQL",
      "url": "https://www.udemy.com/course/e-commerce-shopping-cart-website-in-php-mysql/",
      "bio": "Creating E-commerce Shopping Cart Website from scratch in PHP & MySQL",
      "objectives": [
        "You will be able to build web applications in PHP",
        "You will be able to create E-commerce Shopping website"
      ],
      "course_content": {
        "Course Introduction": [
          "Final Output of E-Commerce System"
        ],
        "Setting Up Project": [
          "Setting Up Project Environment",
          "Going Through Project HTML Files",
          "Setting Up HTML files in project & Creating Template Files",
          "Enhancing Template Files",
          "Invitation to the Web Developers Mastermind Group + Extra Resources"
        ],
        "Setting Up Other Project Pages": [
          "Creating Pages in Our Shop",
          "Creating Pages in Our Shop Continued"
        ],
        "Setting Up Admin Pages": [
          "Creating Template Files in Admin & Login Page",
          "Improving Login Page Design",
          "Planning All the Admin Pages",
          "Creating Required Pages in Admin Area"
        ],
        "Creating and planning Database & Tables": [
          "Planning DB Tables",
          "Creating DB Tables",
          "Connecting to DB using PHP"
        ],
        "Admin Login": [
          "Adding Login Functionality",
          "Checking Login Functionality & Displaying Errors",
          "Checking Login on All Admin Pages"
        ],
        "Working on Category CRUD - Backend": [
          "Working on Add Category Page",
          "Displaying Categories in View Category Page",
          "Working on Edit Category",
          "Working on Delete Category",
          "Displaying Messages in Category CRUD Pages"
        ],
        "Working on Products CRUD - Backend": [
          "Creating Add & View Product Pages",
          "Creating a Product",
          "Adding File Upload Functionality to Create Product Page",
          "Fixing File Upload Issue & Uploading First Product with Image",
          "Working on View Products Page",
          "Displaying Product Information in Edit Product Page",
          "Displaying Product Image in Edit Product Page",
          "Updating Product Information using Edit Product Page",
          "Deleting Product Image in Edit Product Page",
          "Deleting Product Image in Edit Product Page Continued",
          "Re-uploading Image on Edit Product Page",
          "Working on Delete Product Page",
          "Adding Dummy Products & Fixing Issues",
          "Adding Dummy Products & Fixing Issues Continued"
        ],
        "Displaying Products - Frontend": [
          "Displaying Products on Index Page",
          "Displaying Category Products on Index Page",
          "Working on Single Product Page",
          "Displaying Related Products in Single Product Page"
        ],
        "Add to Cart Functionality": [
          "Adding Items to Cart from Home Page & Category Page",
          "Adding Item to Cart from Single Product Page",
          "Looping through Session Cart in Cart Page",
          "Displaying Cart Session Items in Cart Page",
          "Cart Page Enhancements",
          "Displaying Cart Items in Menu Dropdown",
          "Deleting Items from Cart Session"
        ]
      },
      "requirements": [
        "Basic Knowledge of PHP"
      ],
      "description": "Here I'm going to build a Shopping Cart with these features\nIn FrontEnd Displaying Products and home page and displaying products with categories. Next adding to products cart from home page category page and adding product to cart in multiple quantity from single product page.\nNext is displaying products added to cart in cart page and also in drop-down menu with checkout link.\nWhile user goes to checkout page after adding products to cart. We will check user logged in or not?\nIf user logged in we will allow him to checkout page or else he will be prompted to login or register.\nIf he is a new user, he should register. If he is not a new user, he can login with his login credentials.\nIn checkout page, if the user already has billing details. It will be displayed or else user will be prompted to enter billing details.\nAfter that user can choose the payment method and accept the terms his order will be placed. For now, I'm using only Cash On Delivery method.\nIf we use payment gateways, user will be redirected to payment gateway. If he pays we will store transaction id and other information from payment gateway provider into our database.\nCustomer can submit reviews to product, customer can submit only one review per product.\nCustomer can cancel his order. Also customer can update his or her address from my account page.\nCustomer can check all the orders from my account page. And also view single orders from single order view page.\nWishlist for customer to add products to wishlist and remove products from wishlist.\nIn Back End Admin Area, Admin User will be able to login and add, edit & delete products. And also admin user can check the orders. Go through the list of customers and go through all the reviews submitted by customers.\nOrder Processing from backend, admin can process the order in 4 different stages one is Order Placed, Order In Progress, Order Dispatched, and Order Delivered.\nA lot more features are included.",
      "target_audience": [
        "Anyone Who wants to learn PHP & MySQL with Handson Project"
      ]
    },
    {
      "title": "Angular 17 for Juniors: Building Real World Application",
      "url": "https://www.udemy.com/course/angular-for-juniors-building-real-world-application/",
      "bio": "Harness the Power of Angular 17 with Real World App and RxJS with TypeScript for Seamless Web Development",
      "objectives": [
        "Fundamentals of Web Development",
        "Introduction to Angular",
        "Building Full Real-World Project for Your Portfolio",
        "Use PrimeNG library",
        "Services and Dependency Injection",
        "Routing and Navigation",
        "HTTP and API Integration",
        "Deployment and Hosting",
        "Best Practices and Industry Standards",
        "TypeScript and Fully Typed Application",
        "Purchase by adults only (+18)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Angular?",
          "Course Requirements",
          "This is Angular: Modules, Components and Services",
          "If You Get stuck and Having Errors"
        ],
        "Environment and Development Tools": [
          "Mac: Installing HomeBrew",
          "Installing NodeJS - NVM",
          "Installing Angular",
          "Creating the Project",
          "The Command for Creating the Angular Application",
          "Running the Application",
          "Installing Code Editor",
          "Project Architecture",
          "Installing Prettier",
          "Installing ESLint",
          "Extensions To Speed Up The Coding Productivity"
        ],
        "Project API": [
          "What is API?",
          "JSON Format",
          "Getting the Movies data - API Registration",
          "Triggering API's Requests via ThunderClient",
          "Different API's Resources"
        ],
        "Application Initialization": [
          "Design Overview and Page Structure",
          "Installing and Configuring Fonts",
          "Styles Initialization - Important",
          "Installing Grid System - PrimeFlex",
          "Application Header Component",
          "Application Logo and Navigation",
          "Application Footer Component - Date Pipe",
          "Section Code"
        ],
        "Application Home Page": [
          "Home Page Component and Routing",
          "Slider Component",
          "Slider Component Layout",
          "Slider Styling",
          "Install Icons Library - Prime Icons",
          "Getting Popular Movies",
          "Show the Data in Frontend",
          "Wrap in a Service",
          "Use Async Pipe",
          "Loop Over Items using ngFor",
          "ngIf for Conditional Rendering",
          "Loop Over the Movies ngFor To Create the Slides",
          "Define Movie Model",
          "Create Slides With Real Data",
          "Getting the Images in Movies API",
          "Change Slide Every 5 Seconds",
          "Slider Animation - Animation Basics",
          "Code Refactoring",
          "Section Code"
        ],
        "Home Page Movies and TV Shows Banners": [
          "Banner Component",
          "Show Item Component",
          "Get The Required Services",
          "Use Inputs for Components",
          "Call the Banners for Different Movies Types",
          "Code Refactoring for Services",
          "Use RxJS Map to Stream Different output",
          "Limit to Specific Amount of Movies",
          "TV Shows Banner",
          "TV Shows Type and Use Same Banner Component",
          "Section Code"
        ],
        "Movie and TV Show Detail Page": [
          "Show Detail Component and Routing",
          "Routing by Movie - TVShow Id",
          "Reading Route Parameter Value",
          "Get Movie By Id",
          "Reuse Slider Component as Header",
          "Disable Slider Switching for Header Use",
          "Install PrimeNG Component library",
          "Resolving Dependency Versions - Update Angular",
          "Continue Library Installation and Use Tab View Component",
          "Styling the Tab View",
          "Overview Tab",
          "Videos Tab - Videos Service",
          "Videos Tab - Video Embed Component",
          "Videos Tab - Bypass URL Security",
          "Photos Tab - Image Preview on Click",
          "Cast - Use Carousel Component to Display Actors",
          "If..else in HTML of Component - Default Actor Image",
          "Exercise - Get Similar Movies",
          "Exercise - TV Shows Detail Page",
          "Section Code"
        ],
        "Movies List Page": [
          "Section Overview",
          "Discover Search Movies/TV Shows API",
          "Create Search Movies Service",
          "Create Shows List Component",
          "Show Search API Results and Use Show Item",
          "Use Search Component",
          "Data Binding - ngModel",
          "Component Events - onChange",
          "Use Search Value in Search Service",
          "Use Popular Movies as Default Search Value",
          "Add Pagination Component",
          "Pass Page Number to API from Paginator",
          "Keep Search Value on Pagination",
          "Get Total Results Value To Paginator",
          "Section Code",
          "Exercise - TV Shows List"
        ],
        "Genres Page": [
          "Genres Page Component",
          "Genres API & Service",
          "Genres Page Layout",
          "Display the Genres from API",
          "Get Movies By Genre API and Service",
          "Display Movies on Clicked Genre",
          "Routing to Specific Genre",
          "Reroute to same component with different Id",
          "Homework",
          "Section Code"
        ],
        "Application Deployment": [
          "Application Build",
          "Deploy to a Standard Host Using FTP",
          "Deploy to Github Pages",
          "Fix Github Pages - Base URL"
        ]
      },
      "requirements": [
        "Basic Computer Skills",
        "Web Fundamentals: A basic understanding of HTML, CSS, and JavaScript is beneficial.",
        "Motivation and Enthusiasm"
      ],
      "description": "Are you ready to embark on an exciting journey into the world of web development? Our \"Introduction to Angular for Juniors\" course is the perfect starting point for young learners interested in building dynamic and interactive web applications. Designed with beginners in mind, this course will equip students with the essential skills to create modern web experiences using Angular, one of the most popular front-end frameworks in the industry.\nThe course is intended for purchase by adults only (+18) due to the possibility of display adult content during project development\n\nCourse Highlights:\nLearn the Basics: We'll begin with a solid foundation in web development, covering HTML, CSS, and JavaScript fundamentals to ensure every student is on the same page.\nMaster Angular Concepts: Dive into Angular's powerful features, including components, templates, data binding, and more, through hands-on exercises and real-world projects.\nBuild Real-World Application: What sets our course apart is the opportunity to work on real-world project. You won't just be learning theory; you'll be building practical, hands-on web applications that can be showcased in your portfolio.\nCollaborative Learning: Engage with your peers, share ideas, and work on group projects to foster teamwork and problem-solving skills.\nInstructor Guidance: Our experienced instructors are dedicated to your success. They'll provide clear explanations, answer questions, and offer valuable insights throughout the course.\nPrepare for the Future: Gain skills that are in high demand in the tech industry, setting a strong foundation for future career opportunities.\n\n\nHere's a breakdown of what they can expect to learn:\n\n\nFundamentals of Web Development:\nUnderstanding the basics of HTML, CSS, and JavaScript.\nSetting up a development environment.\nIntroduction to Angular:\nWhat Angular is and its importance in modern web development.\nThe Angular architecture and key concepts.\nComponents and Templates:\nCreating components and templates to build the user interface of web applications.\nUsing data binding to connect components and templates.\nDirectives and Pipes:\nUnderstanding directives like ngIf and ngFor.\nUsing pipes for data transformation and formatting.\nServices and Dependency Injection:\nCreating and using services to manage data and application logic.\nImplementing dependency injection to make services available to components.\nRouting and Navigation:\nSetting up routing to create multi-page applications.\nImplementing navigation between different views.\nHTTP and API Integration:\nMaking HTTP requests to fetch data from external sources.\nHandling responses and displaying data in the application.\nTesting and Debugging:\nDebugging Angular applications effectively.\nOptimization and Performance:\nStrategies for Optimizing Angular applications for speed and efficiency.\nDeployment and Hosting:\nDeploying Angular apps to web hosting services or platforms like GitHub Pages.\nReal-World Projects:\nApplying learned concepts to build real-world web application.\nEncouraging students to work on projects that interest them.\nBest Practices and Industry Standards:\nTeaching coding best practices and adherence to industry standards in Angular development.\nJoin me on this exciting journey into the world of web development with Angular. Whether you're just starting or looking to expand your skills, this course will empower you to create dynamic and engaging web applications while actively working on real-world projects that demonstrate your proficiency. Enroll now and take your first step towards becoming a web development pro!",
      "target_audience": [
        "High School Students",
        "College Freshmen",
        "Coding Bootcamp Graduates",
        "Junior Web Developers",
        "Self-taught Programmers",
        "Career Changers, People looking to change their career paths and enter the field of web development",
        "Designers with Coding Interest",
        "Tech-Savvy Teachers",
        "Adults Only (+18)"
      ]
    },
    {
      "title": "The Startup Founder's Guide to Bubble Programming",
      "url": "https://www.udemy.com/course/the-startup-founders-guide-to-bubble-programming/",
      "bio": "Learn the core fundamentals of Bubble development with Jonathan Timianko, the founder of PierShare, a top Bubble startup",
      "objectives": [
        "How to best use Bubble to start building your startup idea, with tips and tricks from my experience!",
        "The core fundamentals of Bubble development",
        "Responsive design principles",
        "Designing databases",
        "Building workflows",
        "Conditional programming",
        "Custom states and application interactivity",
        "Creating template pages for marketplaces/social apps",
        "Third party integrations"
      ],
      "course_content": {},
      "requirements": [
        "No Bubble development or prior coding experience is required. All that's needed is your curiosity and willingness to learn the future of programming!"
      ],
      "description": "Welcome to the one and only Bubble course that focuses entirely on teaching you the core fundamentals of Bubble programming, all taught from the vantage point of a successful Bubble startup founder!\n\n\nMy name is Jonathan Timianko and I’m the founder of PierShare, which is a marketplace startup similar to AirBnB but for docks for boats. I’ve spent over 10,000 hours in the Bubble editor building all of the technology for my startup, and I’m an official Bubble coach and bootcamp instructor that has helped thousands of others build and launch their own ideas.\n\n\nOne of the most important things that I have learned throughout my experience using Bubble, is that the best way to learn the platform is by learning its core fundamental features - design (front end), workflows (backend), and data (backend), all within the context of building a substantial feature-set of one particular type of application.\n\n\nBut its not only about becoming proficient at the core features - what separates the good developers from the great bubble developers is learning how to tie together design, workflows, and data, in the unique way that you want, so that you can truly build whatever startup or app idea from scratch!\n\n\nIn this course that includes 13 hours of content broken down into 8 concise sections, I will teach you how to build GrubMore, a food delivery app. GrubMore is a fully interactive, dynamic application that would traditionally take tens of thousands of dollars and hundreds of hours of traditional engineering time to build. But with Bubble, you'll do it 10x as fast and more than 100x cheaper, and learn what is destined to become the future of programming in the process!\n\n\nIn particular you'll learn:\n\n\nHow to design a landing page\nHow to handle user authentication (signing up and logging in)\nHow to build databases efficiently so that we can keep track of restaurants, menu items, and delivery orders\nHow to display data from the database (backend) on the user interface (front end) of our app\nHow to create programmatic workflows so that we can add interactivity and backend operations to our application\nHow to create an interactive shopping cart and food ordering experience, which is the course capstone that ties together all learning of the core features of the Bubble platform together.\n\n\nIncluded with every purchase is the final application template, so that as you're building the app, you can compare your results to those of the completed application.\n\n\nSo what are you waiting for?! Take the leap of faith you've always wanted and join the no code programming movement by beginning your Bubble journey with me today!",
      "target_audience": [
        "Entrepreneurs or startup founders who have a great idea but don't know how to get started building their technology",
        "Individuals who may have prior coding experience but want to learn the Bubble programming language",
        "Beginner users of Bubble who want to take their skills to the next level",
        "Individuals who don't have any prior technical experience but want to start building tech products for an existing company or themselves",
        "Anyone who simply wants to take a leap into the no code world for the first time"
      ]
    },
    {
      "title": "Laravel - Build an Advanced Job Portal Website (2024)",
      "url": "https://www.udemy.com/course/advanced-laravel-job-portal-website/",
      "bio": "Develop a Robust Job Portal Website Using Laravel 10, with Comprehensive Step-by-step Instructions",
      "objectives": [
        "Develop Advanced Job Portal Website From Scratch with Laravel 10",
        "Multi Authentication System (Admin, Company, Candidate)",
        "Handling Separate Dashboards",
        "Dynamic Package/Pricing System",
        "Multiple Payment Gateway (PayPal, Stripe, Razorpay) Implementation",
        "Dynamic Drag and Drop Menu Builder",
        "User Role Management",
        "User Permission Management",
        "Dynamic Job Posting Feature",
        "Dynamic Job Category",
        "Dynamic Job Roles",
        "Dynamic Job Locations",
        "Dynamic Job Industries",
        "Dynamic Job Organization Types",
        "Dynamic Job Skills",
        "Dynamic Job Education",
        "Dynamic Job Salary Types",
        "Dynamic Job Experiences",
        "Custom Page Builder",
        "Newsletter",
        "Order Management Feature",
        "Dynamic Blog System",
        "Page Management Module",
        "Sections Management Module",
        "Dynamic Social Links",
        "Multiple Image Upload System",
        "Dashboard Analytics",
        "Dynamic User Dashboard",
        "Testimonial Module",
        "Admin-User Password Change Option",
        "Dynamic Site Settings Module",
        "Database Clearing Module",
        "Lecture By Lecture Git Source Code"
      ],
      "course_content": {},
      "requirements": [
        "You have to know basic PHP and OOP",
        "Basic HTML, CSS, Bootstrap, jQuery",
        "Local Server : XAMPP/WAMP/MAMP/Laragon",
        "Text Editor/IDE: Notepad++ / Sublime Text / Visual Studio Code / PhpStrom"
      ],
      "description": "Laravel 10 - Build an Advanced Job Portal Website (2024)\nAre you ready to take your Laravel skills to the next level? In this course, you will build a complete Job Portal project from scratch using Laravel 10. This project-based course is designed to help you become a professional Laravel developer and give you a competitive edge in the job market.\nWhy Learn Laravel 10?\nLaravel 10 is the latest version of the popular PHP framework and comes packed with new features and improvements, making it faster and more efficient than ever before. It's easy to learn and has a huge community, making it the perfect choice for building robust and scalable web applications.\nWhat Will You Learn?\nIn this course, you will learn how to build a feature-rich job portal platform with advanced functionalities such as:\nDevelop Advanced Job Portal Website From Scratch with Laravel 10\nMulti Authentication System (Admin, Company, Candidate)\nHandling Separate Dashboards\nDynamic Package/Pricing System\nMultiple Payment Gateway (PayPal, Stripe, Razorpay) Implementation\nDynamic Drag and Drop Menu Builder\nUser Role Management\nUser Permission Management\nDynamic Job Posting Feature\nDynamic Job Category\nDynamic Job Roles\nDynamic Job Locations\nDynamic Job Industry's\nDynamic Job Organization Types\nDynamic Job Skills\nDynamic Job Education\nDynamic Job Salary Types\nDynamic Job Experiences\nCustom Page Builder\nNewsletter\nOrder Management Feature\nDynamic Blog System\nPage Management Module\nSections Management Module\nDynamic Social Links\nMultiple Image Upload System\nDashboard Analytics\nDynamic User Dashboard\nTestimonial Module\nAdmin-User Password Change Option\nDynamic Site Settings Module\nDatabase Clearing Module\nLecture By Lecture Git Source Code\nAnd More\nWhy Choose This Course?\nUnlike other courses that only cover the basics, this course is designed to help you build a complete, real-world project from scratch. You will not only learn how to write code, but also gain valuable insights into project management and best practices. Plus, you will have access to the complete source code of the project and lifetime access to the course materials.\nWhat's more, once you have completed this course, you will have a highly marketable skill set and the potential to earn a high income as a professional Laravel developer.\nEnroll now and take the first step towards building your dream Job Portal platform with Laravel 10!",
      "target_audience": [
        "Aspiring developers who want to become proficient in Laravel",
        "Web developers who want to take their Laravel/PHP skills to the next level",
        "Students who want to gain practical experience in building a Job Portal project with Laravel",
        "University students who need to complete a project assignment using Laravel",
        "Working professionals who want to add Laravel experience to their work portfolio and expand their job opportunities"
      ]
    },
    {
      "title": "Restful API Web Services with PHP and MySQL: Bootcamp",
      "url": "https://www.udemy.com/course/restful-api-web-services-with-php-and-mysql-bootcamp/",
      "bio": "PHP, MySQL, Rest Controller, Exception Handler, Postman, Validation, JWT Token Authentication, GET, POST, PUT, DELETE",
      "objectives": [
        "How to build a RESTful web services (API) with plain PHP (no frameworks required)",
        "Fundamental Principles of RESTful API",
        "How to work with MySQL database with CRUD files using a REST API",
        "What JWT - Token Based Authentication is and why it is better than Basic Authentication",
        "API Testing using Postman App step by step",
        "Applying Restful API HTTP methods GET, POST, PUT and DELETE",
        "You will learn 2 real world projects while learning and writing the Restful API services",
        "Create Restful API Web services for your Mobile apps",
        "learn What is Generative AI for prompt engineering",
        "participate in a Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Getting Started",
          "Course Curriculum",
          "How to Get Pre-Requisites",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Setting up Local Development Environment": [
          "Section Introduction",
          "XAMPP Installation for PHP, MySQL and Apache",
          "Choosing code editor",
          "Installing code editor (Sublime text)",
          "Installing code editor (VS code)",
          "Postman API platform installation",
          "Composer installation",
          "Creating a project on xampp",
          "PHP hello world program",
          "Summary",
          "Welcome program exercise"
        ],
        "Restful API Basic": [
          "Section Introduction",
          "What is PHP",
          "What is Restful API",
          "HTTP request GET, POST, PUT or DELETE",
          "REST API project structure",
          "Summary"
        ],
        "Project1: Restful API Login and Registration": [
          "Section Introduction",
          "Create Database and table",
          "Creating Project forms and folders",
          "Database Connection",
          "JSON Web Token Handler(JWT)",
          "Auth Middleware Token Validation",
          "Register form",
          "Login form",
          "User Token Authorization check form",
          "Summary"
        ],
        "Project2: Restful API – MySQL Database": [
          "Section Introduction",
          "Create Database and table",
          "Adding Data to table - insert query",
          "MySQL Select query",
          "MySQL Update query",
          "MySQL Delete query",
          "Get Project2 Source Code",
          "Create Database Connection",
          "Summary"
        ],
        "Restful API – Web Services": [
          "Section Introduction",
          "Create Items Class PHP File",
          "Create Method form",
          "Creating Record Using Restful API",
          "Reading Method form",
          "Reading Record Using Restful API",
          "Update Method form",
          "Update Record Using Restful API",
          "Delete Method form",
          "Delete Method Using Restful API",
          "Coding Exercise",
          "Solution for Coding Exercise",
          "Summary"
        ],
        "Apache .htaccess file": [
          "SEO friendly Request URLs of REST API"
        ]
      },
      "requirements": [
        "Fundamentals of PHP (including basic Object Oriented Programming concepts)",
        "You will learn everything you need to know Restful API",
        "Fundamentals of MySQL Database (optional)",
        "Fundamentals of Basic SQL Queries (optional)",
        "Fundamentals of JSON (basic structure) optional"
      ],
      "description": "Master the art of building robust web services with \"RESTful API Web Services with PHP and MySQL: Bootcamp.\" This comprehensive course is designed to teach you how to create powerful, scalable, and secure RESTful APIs using PHP and MySQL. Whether you’re a beginner or looking to enhance your API development skills, this bootcamp will provide you with the knowledge and hands-on experience needed to develop APIs that interact seamlessly with databases and serve dynamic data to your web and mobile applications.\n\n\nYou’ll begin by learning the fundamentals of REST architecture and HTTP methods (GET, POST, PUT, DELETE), understanding how to design a RESTful API that is easy to use and follow. From there, you’ll dive into PHP for backend development, exploring how to handle requests, process data, and create responses in JSON format. Additionally, you’ll learn to connect your API with MySQL databases to retrieve, update, and store data.\n\n\nThe course includes practical, real-world projects, such as building a user authentication system, handling CRUD (Create, Read, Update, Delete) operations, and ensuring security with JWT (JSON Web Tokens). By the end of the bootcamp, you'll be able to create fully functional, secure, and efficient RESTful APIs that can power web and mobile applications.\n\n\nWhether you're developing APIs for e-commerce sites, mobile apps, or enterprise-level systems, this course will give you the skills to succeed in API development.\n\n\nEnroll today and start building your RESTful APIs with PHP and MySQL!",
      "target_audience": [
        "Beginner PHP developer like to build curious about Restful API web services",
        "PHP developers who would like to build Web Service APIs using only core PHP (no frameworks)",
        "PHP developers making secure Apps with Token Based Authentication to their APIs",
        "PHP developers interested in how you write CRUD files to work with MySQL Data using APIs",
        "Anyone who wants to become a freelancer on Restful API Web services"
      ]
    },
    {
      "title": "The Frontend Developer Career Blueprint - The shortcuts",
      "url": "https://www.udemy.com/course/the-frontend-developer-career-blueprint-the-shortcuts/",
      "bio": "Learn the whole Frontend Development landscape. Know the tools, skills and key tips to help you start your career now!",
      "objectives": [
        "Learn what the Frontend Development Job is and how that fits in software development",
        "Learn what roles are there in Frontend Development and how you can apply to them",
        "Learn how you can easily start your career as a Frontend Developer - tips from many years experience",
        "Learn about the skills and tools to get you to an Entry Level Frontend Developer",
        "Learn the skills and tools to get you to a Middle Level Frontend Developer",
        "Learn the skills and tools to get you to a Senior Level Frontend Developer",
        "Learn how you can effectively prepare for Frontend Developer interviews",
        "Learn the tips and tools to avoid procastination and help you be a more productive Frontend Developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Know the Frontend Development trade": [
          "The big picture and how Frontend Development plays a part",
          "What roles are there in Frontend Development",
          "How to get started"
        ],
        "Entry level skills and tools": [
          "HTML - what to learn and how",
          "CSS - what to learn and how",
          "CSS Frameworks - what to learn and how",
          "Some valuable website design concepts",
          "Useful tip | you can apply to these roles at this point"
        ],
        "Middle level skills and tools": [
          "Javascript - what to learn and how",
          "Jquery - what to learn and how",
          "CSS preprocessors and extensions - what to learn",
          "Version control - git",
          "Package managers - what to learn",
          "React, Vue, Angular - how to choose, what to learn and how",
          "Useful tip | you can apply to these roles at this point"
        ],
        "Senior level skills and tools": [
          "Testing - what to learn and how",
          "Progressive web apps - what to learn and how",
          "Desktop apps - what to learn and how",
          "Mobile apps - what to learn and how",
          "Useful tip | you can apply to these roles at this point"
        ],
        "BONUS -- Pot of gold": [
          "Accountability",
          "Productivity",
          "Essential soft skills",
          "Interview preps"
        ],
        "Conclusion": [
          "Final thoughts"
        ]
      },
      "requirements": [
        "You should be interested in software, web or frontend development",
        "You should be ready and willing to start a career in Frontend Development",
        "You should have an open mind and be determined to learn new ideas",
        "No prior technical skills required"
      ],
      "description": "***  If you're interested in learning about the Frontend Development career and how you can start, this course is for you!  ***\nThis course presents an extensive guide on the Frontend Development career, and how you can take smart, effective steps to start your own career.\nThis course covers everything you need to know to get started. In this course, you'll learn:\nThe big picture (software development) and how Frontend Development plays a part\nWhat roles are there in Frontend Development and what you need to know to apply\nHow to get started on your Frontend Development career\nEntry level skills and tools - what to learn and how\nMiddle level skills and tools - what to learn and how\nSenior level skills and tools - what to learn and how\nVery important website design concepts - you need to know these!\nHow to avoid procrastination with the help of accountability tools and tips\nHow to stay productive and achieve your milestones using tools and useful tips\nEssential soft skills to make you competitive in today's market\nHow to prepare for  interviews for Frontend Developer roles\nIf you're serious about starting a career in Frontend Development, then this course is definitely for you.",
      "target_audience": [
        "Anyone who wants to start a career in Frontend Development",
        "Anyone who wants to have an extensive information about the Frontend Development practice"
      ]
    },
    {
      "title": "Javascript Debugging Crash Course",
      "url": "https://www.udemy.com/course/javascript-debugging-crash-course/",
      "bio": "Debug JavaScript quickly and effectively!",
      "objectives": [
        "Learn to Debug JavaScript quickly and effectively!",
        "Learn to leverage Chrome's Dev Tools for fast debugging",
        "Understand how to write debug-able code",
        "Use Source Maps to debug pre-processed JavaScript",
        "Learn proper debugging protocols",
        "Understand Breakpoints and all of their different types",
        "Learn to use the Debugger Console to make debugging a breeze!",
        "Discover how performance analysis can eliminate potential bugs",
        "Use Logging as an automated source of Debugging information",
        "Learn how to access application state with the Console",
        "Deliver bug free JavaScript code all day long! ... and much, much more!"
      ],
      "course_content": {
        "Welcome to Starting with JS - Debugging": [
          "Starting with JavaScript - Debugging",
          "What We'll Learn",
          "What is Debugging?",
          "JavaScript Debugging Tools",
          "Chrome Dev Tools",
          "Debug-able Code"
        ],
        "Debugging Concepts": [
          "Debugging Concepts",
          "Breakpoints",
          "Call Stacks & More",
          "Logging",
          "Source Maps",
          "The Console"
        ],
        "Debugging Code": [
          "Debugging Code",
          "The Process",
          "More Breakpoint Types",
          "Working in the Console"
        ],
        "More Chrome Dev Tools": [
          "More Chrome Dev Tools",
          "Performance Tools",
          "Network Tools",
          "Memory Tools",
          "Wrap Up"
        ]
      },
      "requirements": [
        "Before taking this course, a student should ideally (but not absolutely) have:",
        "A at least a modest knowledge of HTML, web server use and configuration, and relevant JavaScript skills. Ideally, the student should be familiar with creating JavaScript web applications with modern frameworks, and libraries. If the student has only some, or even none of these skills, he/she will still benefit from this course greatly, but may need to pause a video in progress to perform some additional background research. This is encouraged, as it'll only make for a better overall experience and net benefit.",
        "NO PRIOR DEBUGGING EXPERIENCE IS REQUIRED!!!"
      ],
      "description": "Any IT professional or casual developer anticipating a solid understanding of how debugging is performed in open-sourced and private JavaScript application development projects needs to go through this course and absorb all of its content. Anyone desiring to learn how debugging is applied in web application projects needs the knowldege, demonstrations, and practice presented in this course.  This not only includes web, mobile, and service application developers, but also architects, UI designers, testers, and administrators. This course provides a solid basic understanding of how to effectively debug standard JavaScript code and teaches the student to work with a leading set of debugging tools and utilities.",
      "target_audience": [
        "This course was built for web developers who need to understand how to use debugging tools and techniques for delivering bug free JavaScript code.",
        "The material in this course is targeted for JavaScript projects based on modern architectures and libraries.",
        "This course is designed for those developers who need to begin learning how to effectively debug JavaScript code so they may effectively participate in projects requiring bug free output.",
        "Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how modern JavaScript web applications are developed in a progressive software development environment."
      ]
    },
    {
      "title": "API Developer (Python/Django Rest/Flask/PostgreSQL/Postman)",
      "url": "https://www.udemy.com/course/api-developer-pythondjango-restflaskpostgresqlpostman/",
      "bio": "Application Programming Interfaces (APIs) Development using : Python, Django, Rest, Flask, PostgreSQL",
      "objectives": [
        "Setup Python Development Environment",
        "Setup Django Development Environment",
        "Setup Flask Development Environment",
        "Setup PostgreSQL Database",
        "Build an API with Python and Flask",
        "Build an API with Python , Django, PostgreSQL",
        "Test API Using Postman"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is an API",
          "What is REST API",
          "What is Python",
          "What is Django",
          "What is Flask",
          "What is PostgreSQL"
        ],
        "PostgreSQL Database Setup": [
          "Installing PostgreSQL on Windows",
          "Installing PostgreSQL on Mac",
          "Installing PostgreSQL on Linux",
          "Installing PgAdmin Tool on MacOS",
          "Installing PgAdmin Tool on Linux",
          "Connecting to PostgreSQL Using PgAdmin Tool"
        ],
        "Python Setup": [
          "Installing Python on Windows",
          "Installing Python on Macs",
          "Installing Python on Linux",
          "What are Text Editors",
          "installing Atom Text Editor",
          "Installing Visual Studio Code",
          "Create virtual environments on Windows",
          "Create virtual environments on Macs",
          "Create virtual environments on Linux",
          "Activate virtual environment on Windows",
          "Activate virtual environment on Macs",
          "Activate virtual environment on Linux"
        ],
        "Django Setup | API Development": [
          "Creating and activating a virtual environment",
          "Installing Django",
          "Installing Django REST framework",
          "Installing Corsheaders",
          "Create a new Django Project",
          "Create a new Django App",
          "Django App vs Django Project",
          "Registering Django App",
          "Django PostgreSQL Database Setup",
          "Executing initial migration",
          "Creating a Django Model",
          "Creating and applying new migrations",
          "Creating a serializer class",
          "Starting and stopping Django Server",
          "Creating a superuser account",
          "Creating views - Part 1",
          "Creating views - Part 2",
          "Mapping views to URLS",
          "Register Model with admin site",
          "Creating Model Objects",
          "Installing Postman",
          "Testing API",
          "Project Code"
        ],
        "Flask Setup | API Development Environment": [
          "Creating and activating a virtual environment",
          "Install Flask",
          "Setup Flask Environment Variables",
          "Install Flask-Restful",
          "Creating and initializing a Python Module",
          "What is a Python Dictionary",
          "Creating a Python directory",
          "Create a class and route",
          "Add post method to class",
          "Test API with GET & POST Methods",
          "Creating a second class with methods",
          "Testing API Using CRUD Operations",
          "What is Http",
          "What are Http Request Methods",
          "What are Http Response Status Codes",
          "API Source Code"
        ]
      },
      "requirements": [
        "Basic Knowledge of Python, Django and Flask is advised",
        "Basic knowledge of relational databases is advised"
      ],
      "description": "An API is a set of definitions and protocols for building and integrating application software. It’s sometimes referred to as a contract between an information provider and an information user—establishing the content required from the consumer (the call) and the content required by the producer (the response). For example, the API design for a weather service could specify that the user supply a zip code and that the producer reply with a 2-part answer, the first being the high temperature, and the second being the low.\nIn other words, if you want to interact with a computer or system to retrieve information or perform a function, an API helps you communicate what you want to that system so it can understand and fulfill the request.\nYou can think of an API as a mediator between the users or clients and the resources or web services they want to get. It’s also a way for an organization to share resources and information while maintaining security, control, and authentication—determining who gets access to what.\nAnother advantage of an API is that you don’t have to know the specifics of caching—how your resource is retrieved or where it comes from.\nA REST API (also known as Restful API) is an application programming interface (API or web API) that conforms to the constraints of REST architectural style and allows for interaction with Restful web services. REST stands for representational state transfer and was created by computer scientist Roy Fielding.\nREST is a set of architectural constraints, not a protocol or a standard. API developers can implement REST in a variety of ways.\nWhen a client request is made via a Restful API, it transfers a representation of the state of the resource to the requester or endpoint. This information, or representation, is delivered in one of several formats via HTTP: JSON (JavaScript Object Notation), HTML, XLT, Python, PHP, or plain text. JSON is the most generally popular file format to use because, despite its name, it’s language-agnostic, as well as readable by both humans and machines.\nPython is a computer programming language often used to build websites and software, automate tasks, and conduct data analysis. Python is a general purpose language, meaning it can be used to create a variety of different programs and isn’t specialized for any specific problems. This versatility, along with its beginner-friendliness, has made it one of the most-used programming languages today.\nPython, one of the most popular programming languages in the world, has created everything from Netflix’s recommendation algorithm to the software that controls self-driving cars. Python is a general-purpose language, which means it’s designed to be used in a range of applications, including data science, software and web development, automation, and generally getting stuff done.\nDjango is a high-level Python web framework that enables rapid development of secure and maintainable websites. Built by experienced developers, Django takes care of much of the hassle of web development, so you can focus on writing your app without needing to reinvent the wheel. It is free and open source, has a thriving and active community, great documentation, and many options for free and paid-for support.\n\n\nFlask is a micro web framework written in Python. It is classified as a micro framework because it does not require particular tools or libraries.\nPostgreSQL is a powerful, open source object-relational database system that uses and extends the SQL language combined with many features .\nPostman is an application used for API testing. It is an HTTP client that tests HTTP requests, utilizing a graphical user interface, through which we obtain different types of responses that need to be subsequently validated.",
      "target_audience": [
        "Beginner Python Developers curious about API",
        "Beginners to API Development"
      ]
    },
    {
      "title": "Full Stack Web Development HTML, CSS, Bootstrap and React JS",
      "url": "https://www.udemy.com/course/full-stack-web-development-html-css-bootstrap-and-react-js/",
      "bio": "Learn Web Development from scratch. HTML, CSS, Bootstrap, React JS and more! All in one in this course",
      "objectives": [
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap",
        "Learn Bootstrap 4 and UIs from scratch",
        "This course is the best way to learn React JS or React",
        "Learn how to build single page applications with React JS",
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Learn to compile Sass in the easiest way possible using a GUI",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "Create a beautiful, responsive landing page for any one with html css javascript, react js and bootstrap",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "You will learn to use basic tags which are used commonly in html css react, react bootstrap",
        "You will be able to prepare lists in different formats in React js, React, bootstrap, html css",
        "You will be able to create commonly used user login and registration pages by learning the form structure.",
        "In the developing world, we will talk about all the details about web design compatible with different screens.",
        "Learn components, props, states and component life cycle methods in React JS",
        "Create reusable React Components",
        "Learn to connect to an external API in React",
        "Using React Portals to render Children Outside the DOM Hierarchy",
        "Each aspect of creating websites and applications entails a unique set of skills.",
        "This course has taught me so much! Before, I hardly even knew how to run an HTML file.",
        "Now, I can create a fully functioning Nodejs server responding to HTTP requests!",
        "The world of web development is as wide as the internet itself.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website.",
        "You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer.",
        "This can include HTML, JavaScript, and CSS.",
        "Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP.",
        "Web development does not necessarily include the design process — it focuses on code.",
        "A web designer builds wireframes to mockup their vision for a website and then shares that with a developer.",
        "The developer is responsible for writing the code that implements the design.",
        "Some web developers will obtain a degree or certification in the field.",
        "HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development.",
        "You need these three essential elements to create a modern website and work as a frontend web developer.",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and Mongo",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "React is a front-end library in Javascript that was developed by Facebook",
        "Learn web development with react js, html css javascript, bootstrap, html, css"
      ],
      "course_content": {
        "Introduction to Full Stack web development with react, bootstrap, html, css": [
          "Let's See What You Will Learn in HTML Part?",
          "Project Files and Course Documents for react, bootstrap, HTML5, CSS3",
          "What is Internet and HTML ?",
          "HTML5 Basic Tags",
          "HTML Images and Attributes",
          "HTML Lists",
          "HTML List Example",
          "Block Level - Inline Elements",
          "Quiz Full Stack Web Development with HTML, CSS, Bootstrap and React JS",
          "FAQ about Full Stack Web Development with HTML, CSS, Bootstrap and React JS"
        ],
        "Let's Learn More Complex Topics in HMTL": [
          "HTML Tables",
          "HTML Table Example",
          "HTML Forms",
          "HTML Forms Example",
          "Quiz Full stack web development, React Js",
          "Quiz - Full stack web development with html css, bootstrap, react js and angular",
          "Quiz - Web Development with React, Boostrap, HTML, CSS"
        ],
        "CSS": [
          "Let's Meet CSS",
          "CSS Basics",
          "CSS Colors",
          "Background and Border in CSS",
          "Selectors in CSS",
          "Quiz - Web Development with React, Boostrap, HTML, CSS",
          "Quiz - Web Development with React, Boostrap, HTML, CSS"
        ],
        "Intermediate CSS": [
          "Text and Fonts in CSS",
          "Debugging in CSS",
          "Box Model in CSS",
          "CSS Position",
          "CSS Float",
          "Display Property in CSS",
          "Box-Model Practice in CSS",
          "Float-Layout Practice",
          "Box-Sizing",
          "Media Queries",
          "Quiz - Web Development with React, Boostrap, HTML, CSS"
        ],
        "Flexbox and Grid for CSS": [
          "Flexbox Introduction",
          "Flexbox Properties 1",
          "Flexbox Properties 2",
          "Flexbox Properties 3",
          "Grid CSS Intro",
          "Grid CSS",
          "Grid CSS - 2",
          "Grid CSS - 3",
          "Grid CSS - 4",
          "Grid CSS - 5",
          "Grid and Flexbox Project",
          "Grid and Flexbox Project - 2",
          "Grid and Flexbox Project - 3",
          "Grid and Flexbox Project - 4",
          "CSS Quiz"
        ],
        "Bootstrap": [
          "What Is Bootstrap?",
          "Including Bootstrap in the Project",
          "Web Design",
          "Bootstrap Quiz"
        ],
        "Introduction to Bootstrap": [
          "Nav Bar",
          "Grid System",
          "Header Section",
          "Our CSS File-1",
          "Our CSS File-2",
          "Font Awesome and Features Section",
          "Font Awesome and Features Section-2",
          "Bootstrap Quiz"
        ],
        "Intermediate Bootstrap": [
          "Bootstrap Modals",
          "Modals-2",
          "Bootstrap Cards",
          "Bootsrap Cards Part 2",
          "Carousel 1",
          "Carousel 2",
          "CSS Z-Index",
          "Z-Index Our Project",
          "Image Gallery",
          "Forms",
          "General Changes",
          "General Changes - Part 2",
          "Bootstrap Quiz"
        ],
        "Let`s Start to Learn React JS": [
          "Your First React App Overview",
          "Frequently Asked Questions",
          "Let, Const and Var in 3 minutes",
          "Install Node JS",
          "Create Your React App",
          "Why You Will Need To Create a React App?",
          "Start Creating React App",
          "Do You Want to Learn How To Stop React App?",
          "Important Functional Components",
          "quiz"
        ],
        "What is this JSX?": [
          "Converting HTML JSX",
          "Inline Styling with JSX in React JS",
          "JavaScript Variable in JSX",
          "quiz"
        ]
      },
      "requirements": [
        "No prior knowledge needed about web development, React, bootstrap, html, css, html css javascript",
        "You will be learning from scratch to all levels as aweb developer, front end web developer",
        "This course will take you from scratch to the advanced level",
        "Computer with access to the internet",
        "Desire to learn web developer, front end web developer, full stack web developer",
        "Desire to learn React Js",
        "Desire to learn React Js with bootstrap, html, css",
        "Desire to learn React Js, react, bootstrap, html, css",
        "Desire to learn full stack web development HTML, CSS, Bootstrap, and React JS",
        "Desire to learn grid css, sass, bootstrap, html, javascript, react html css",
        "Desire to become a web developer with react, or react js",
        "Desire to become front end web developer with html css javascript",
        "Desire to learn react with redux, hooks and context",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to Full Stack Web Development HTML, CSS, Bootstrap and React JS course.\nLearn Web Development from scratch. HTML, CSS, Bootstrap, React JS and more! All in one in this course\nThis course will be your gateway to learn web design with a step-by-step approach.  We can assure you that only this course will enough for you to learn web development from scratch to intermediate.\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills.\nThe world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on.\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from.\nThis course will take you from a complete beginner to a  master in hours! By the way, you do not need to know any thing for this course.\nWe'll be moving rapidly to give you the quickest, yet most thorough website building experience.\nIn this course, we have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an HTML page associated with it and has a start state.\nWith this course, you will improve your Bootstrap experience with HTML5 and CSS3 codes\nThis course will take you from a beginner to a more experienced level. You will learn HTML5, CSS3, Bootstrap 4 and React JS step by step with hands-on examples. And then you will be confident in using ReactJS, and if you ever get stuck, we will be there to help.\nWhether you’re interested in mastering responsive web design, creating WordPress templates using Bootstrap, or integrating Bootstrap with HTML5, and CSS3, Udemy has a top-rated course to help you achieve your goals.\nBootstrap is a free frontend web development framework for creating responsive websites. Bootstrap promotes a mobile-first approach to web design, offering a suite of templates and components that automatically render for use on any device.\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS.  In this course, we will be teaching React by creating various projects.\nIn this course you will learn;\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nfull stack web development, web development, front end web development with react, react js\nBootstrap 4, Bootstrap 5, HTML5, CSS3\nFullstack web development with html, css, javascript, react, react js\nReact Bootstrap, react js, full stack, bootstrap react, fullstack web development, reactjs\nWeb development with react js full course\ncss full course\nreact with bootstrap\nWe will start with local installation and react basics. After that, we will create 5 projects.\nProject 1 – Learn, create react app and Jsx with ‘first-app’\nProject 2 – Learn React props system with ‘blog-posts’ app\nProject 3 – Learn react components, state, lifecycle methods, async operations, and much more... with the ‘hemisphere’ app\nProject 4 – Handling event handlers, fetching data from an outside API, and showing list of records with ‘image-list’ app\nProject 5 - Routing with React Router and using React Portals to render children outside the DOM hierarchy with the ‘react-router’ app\n\nNo prior knowledge is needed!\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a Web Developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React.JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nThe instructor helped me whenever I needed it, and I've learned a lot in very little time. Now I can create simple single-page applications, and I fell in love with CodePen and VS Code!\nA great introduction to Bootstrap. After taking this course I feel I have the knowledge to start working on my own projects and will be able to design my own themes.\nThis course has taught me so much! Before, I hardly even knew how to run an HTML file. Now, I can create a fully functioning Node.js server responding to HTTP requests!\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now\nFull Stack Web Development HTML, CSS, Bootstrap and React JS course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5, CSS 3, Bootstrap 4 and React JS the first step in web development, completely and easily, you are at the right place.",
        "People who are willing to make a career in the Web Development",
        "If you want to building your own website, you should enroll",
        "Anyone who wants to become an React Developer",
        "Students who want to learn how to build fast single page web apps",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who want to learn web development, full stack web development, front end web development",
        "Anyone who want to learn web development, fullstack web development with react, react js, html, css",
        "Anyone who want to learn fullstack web development with html css bootstrap 4, bootstrap 5, hmtl, css",
        "Anyone who want to become website developer, webdesigner, web app developer, frontend webdeveloper"
      ]
    },
    {
      "title": "Learn to make websites with Google's Material Design Lite",
      "url": "https://www.udemy.com/course/learn-googles-material-design-lite/",
      "bio": "A complete guide to Google's Front End Web Framework Material Design Lite.",
      "objectives": [
        "Create a beautiful website using elements from Google's Material Design Lite Framework",
        "Understand how to navigate some of the pitfalls that developers fall into when creating Material Design Websites"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of HTML and CSS",
        "A Text editor"
      ],
      "description": "Google's Material Design philosophy has been making waves in the design world and has now unified all interfaces used by Google. Including all of their websites and the apps they have available within the Android space.\nThe opportunity for developers to incorporate this Material Design philosophy into their own arsenal for front end development is now here. Google'e released the official framework for front end implementation of Material Design called Material Design Lite.\nThis course will take you through all the ins and outs of this framework. Including all Material Elements and Layouts as well as explaining some of the design and semantic coding considerations behind these elements.\nIf you are interested in responsive material layouts for the websites you build, then you should certainly learn the Material Design Lite framework, and what better time to start than right NOW?",
      "target_audience": [
        "This course is intended for people who have a basic knowledge of HTML and CSS and are wanting to expand their abilities. Knowledge of any other HTML and CSS framework such as Bootstrap or Foundation is NOT required. This course is great for those interested in Google's Material Design philosophy or just developers wanting to integrate some material design elements into their workflow. This course will also suit beginners looking to improve their skills.",
        "You should not take this course if you are not interested in developing sites with the Material Design look and feel. The course strictly focused on how to implement this look and feel into your sites using Google's new framework"
      ]
    },
    {
      "title": "Laravel 10 For REST API's",
      "url": "https://www.udemy.com/course/laravel-for-rest-apis/",
      "bio": "A Project-Based Approach to Masting RESTful API's With the PHP MVC Framework Laravel",
      "objectives": [
        "Learn How to Build REST API's Using Laravel",
        "Implement CRUD Functionality for Your API Resources",
        "Authentication Using API Tokens",
        "Sorting, Filtering & Paginating REST Resources"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Project: Basics CRUD Operations": [
          "Install a New Laravel App",
          "Create a First Route",
          "Model Resources",
          "Resource Routes",
          "Creating a Resource",
          "Update a Resource",
          "Delete a Resource"
        ],
        "Project: Pagination, Filtering & Sorting": [
          "Paginating Collections",
          "Filter Resource Collections",
          "Sorting Resource Collections"
        ],
        "Project: Authentication Using Laravel Sanctum": [
          "Tasks That Belong to Users",
          "Logging in With Our User",
          "Protecting Task Routes",
          "Create Tasks For The Logged In User",
          "Register a New User"
        ],
        "Project: Relationships": [
          "Create Projects",
          "Creating and Updating Projects",
          "Setting The Project For a Task",
          "Fetching Tasks For a Project",
          "Fetch the Project List",
          "Deleting Projects",
          "Foreign Key Constraints",
          "Add Project Members",
          "Show the Project Members"
        ],
        "Project: Authorization": [
          "Create a Policy For Projects",
          "Filter List Responses by Membership",
          "Implement Remaining Policy Methods",
          "Adjust the Validation Rules For Tasks",
          "Add a Task Policy"
        ],
        "Project: Nested Resources": [
          "Adding A Nested Resource",
          "Attach Members to a Project",
          "Remove Members to a Project"
        ],
        "Project: Introduction to Testing": [
          "Preparing For Testing",
          "Create a First Controller Test",
          "Testing JSON Structure",
          "Testing Filterable Fields",
          "Testing Sortable Fields",
          "Testing Single Model Resources",
          "Testing Validation Messages",
          "Testing Updating a Model Resource",
          "Test Removing a Model Resource"
        ],
        "Project: Polymorphic Relations": [
          "Add a Comments Model",
          "Storing Comments",
          "Testing Storing Comments",
          "Show Comments for Model Resources"
        ],
        "Project: Filtering With Query Scopes": [
          "Adding Dates to Tasks",
          "Date Range Filters",
          "Filter Due Dates For Today and the Past"
        ]
      },
      "requirements": [
        "Basic Understanding of the PHP Programming Language",
        "Basic Familiarity With Using the Terminal",
        "Having PHP and Composer installed"
      ],
      "description": "In this course you'll learn how to create a REST API using the web framework PHP. If you wish to build an app or single-page application with a backend system, the go to way is building REST API's. Luckily we don't have to reinvent the wheel. Popular web frameworks, like Laravel, allow us to quickly build amazing REST API's.\nDuring this course we take a project-based approach to learning about REST API's using Laravel. We will build an API for a task manager. This will demonstrate the most common problems you'll experience during the development of your own REST API.\nDuring this course you will learn the following:\nImplement CRUD actions for REST Resources in Laravel.\nMake HTTP Requests using Postman.\nUser authentication with Laravel Sanctum using API tokens.\nSorting, Filtering and Pagination of lists of resources using the Laravel Query Builder package.\nAbout Me\nMy name is Koen, it is nice to meet you. Starting out at the age of 15 with iOS development I never lost my interest in Software Development. Currently I mainly keep myself occupied with web development. I am invested in multiple backend technologies and frameworks, such as Ruby on Rails, Django and Laravel. On the frontend side of projects I follow the development of React, Alpine.js and Vue.js closely.",
      "target_audience": [
        "Beginning Web Developers Who Want to Build REST API's For the Web"
      ]
    },
    {
      "title": "Build An eCommerce Site With WooCommerce and WooLentor",
      "url": "https://www.udemy.com/course/how-to-build-an-ecommerce-site-with-wordpress-woocommerce/",
      "bio": "Learn how to build a professional eCommerce store using WordPress WooCommerce & Elementor using all the best free tools",
      "objectives": [
        "How to buy a domain name and hosting and how to install WordPress",
        "How to create a website with WordPress",
        "How to build an eCommerce store with WooCommerce",
        "How to install and configure a WooCommerce compatible theme and use it's demo content",
        "How to install, configure and use special plugins to make your store stand out from the rest",
        "How to use Elementor and WooLentor to create custom templates for WooCommerce pages",
        "How to Hashbar to create next-level notifications for your WooCommerce store"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installing WordPress On A New DOmain": [
          "Select And Purchase A Domain Name, Install WordPress & Login For The First Time",
          "WordPress Demo Content Cleanup And Basic Settings"
        ],
        "Configuring Your WordPress Website & WooCommerce Shop": [
          "How To Install One Of The Best WooCommerce Themes - The 99fy WooCommerce Theme",
          "Installing The Recommended Plugins For The 99fy WooCommerce Theme",
          "Choosing A 99fy Demo Homepage To Import",
          "How To Add An SSL To Your Site To Get HTTPS And The Lock In The URL Address Bar",
          "Walkthrough Of The WooCommerce Setup Wizard",
          "Install The Multi-Currency Plugin"
        ],
        "Creating Your First Products In WooCommerce": [
          "Create A Simple Product with Images, Inventory, Description and Category",
          "Create A Variable Product",
          "Create An External/Affiliate Product",
          "Create A Grouped Product",
          "Create A Downloadable Product",
          "Create A Service Product",
          "Create Cross-Sells"
        ],
        "Website and WooCommerce Customization": [
          "Add Payment Methods To WooCommerce",
          "Customize The Site Header With The WordPress Customizer",
          "Add And Customize The Sidebar",
          "Configure A Multi-Currency Switcher And Add It To The Sidebar",
          "Add The Product Category Widget To The Sidebar",
          "Customize The Homepage With Elementor",
          "Customize The Site Footer",
          "Walkthrough Of The Customizer Options For The WooCommerce store"
        ],
        "Advanced WooCommerce": [
          "Use The Advanced Notification Bar, Hashbar, To Enhance Shopper Engagement",
          "Customize WooCommerce Pages Using Woolentor And Elementor"
        ]
      },
      "requirements": [
        "Understand how to use a computer and the basics of how to use the internet.",
        "No prior knowledge of ecommerce, Wordpress or Woocommerce is necessary.",
        "A willingness to learn."
      ],
      "description": "In this course, we have added videos for some crucial plugins to develop eCommerce websites. After completing this course, anyone can develop an eCommerce website easily without taking any help from others. This course is specially developed for the website owner, freelancers, developer who needs to develop an online store for them or their customers.\nHere, I am introducing a few of the important plugins that we used to create videos for this course.\nWooCommerce is the most used eCommerce platform on the internet today and WordPress is the number one most used website platform on the internet. We're going to combine the power of both of them to create an amazing eCommerce store. If you follow along with this course, you'll be selling your goods online within the next few days!\nElementor is the #1 free WordPress website page builder, over 5 million websites are actively using Elementor. Elementor helps to create or develop website pages easily with drag n drop interface.\nWooLentor is the best WooCommerce Elementor plugins in the WordPress repository is being used by more than 40,000 online stores. This plugin has the option to build custom Shop, Cart, My Account, Checkout pages. Besides these, it has the option to build a custom product grid, layouts and many other necessary features for an online store.",
      "target_audience": [
        "Anyone who wants to sell products online through their own website"
      ]
    },
    {
      "title": "Build a ChatApp with: (Nodejs,Socketio, Expressjs ,MongoDB)",
      "url": "https://www.udemy.com/course/build-a-chatapp-with-nodejssocketio-expressjs-mongodb/",
      "bio": "Create a ChatApp from scratch and communicate with friends and family",
      "objectives": [
        "Setup a nodejs development environment",
        "Setup mongodb environment via mlab",
        "Create packagejson file",
        "Setup socketio",
        "Setup a model for mongodb",
        "Use mongoose to connect to mongodb",
        "Test http get and post request using postman",
        "Create functions",
        "Create callbacks",
        "Create get messages service",
        "Emit messages to clients",
        "Save data to mongodb",
        "Initialise git repository",
        "Create an heroku app",
        "Deploy app to heroku for hosting",
        "Check application logs on heroku"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use a PC at beginner level",
        "Basic HTML knowledge",
        "Basic CSS knowledge",
        "Basic JavaScript knowledge"
      ],
      "description": "Welcome to this course where will be building a real-time chat application that you can use to communicate with your friends and family using node ,express ,socketio and mongodb\nNodes is a platform built on the Chrome JavaScript  run time that can help you build fast, Scalable network applications. Nodes uses an event-driven, non-blocking I/O model that makes it lightweight and efficient—perfect for data-intensive real-time applications that run across distributed devices.\nSocket.IO is a web library that enables real-time bidirectional event-based communication.\nExpress.js is a Node.js framework used in building nodejs applications\nMongoDB—an open-source, document database—makes it easy to bring up an application stack and start coding.\nTopics include:\nInstalling Nodejs\nInstalling Express\nInstalling Mongoose\nInstalling socketio\nSetting up socketio\nServing static content with Express\nAdding bootstrap and jQuery\nCreating a get messages service\nCreating a post services message\nEmitting messages to clients\nSetting up MongoDB using mLab\nConnecting your app to mLab\nSaving data to mongoDB\nInitialising a git repository\nCreating a hosting app on heroku\nTracking your app with git\nCreating a model for mongoDB\nConnecting with mongoose\nDeploying application into Heroku cloud platform\nChecking the logs for your app on Heroku platform",
      "target_audience": [
        "Beginners to Nodejs",
        "Beginners to socketio",
        "Beginners to mongoDB",
        "Anyone who wants to learn how to build a chatapp"
      ]
    },
    {
      "title": "Create a Simple Landing Page with Flutter Web and Firebase",
      "url": "https://www.udemy.com/course/flutter-web-with-firebase-course/",
      "bio": "Learn Flutter Web with Firebase such as Firestore, Firebase Auth, Firebase Hosting",
      "objectives": [
        "Build a Complete, Real World Website with Flutter Web and Firebase",
        "Learn Firebase Services such as Firebase Firestore, Firebase Authentication and Firebase Hosting",
        "Build a Landing Page to show off your other Social Media Links",
        "Become proficient in one of the fastest growing technologies",
        "Build a website without learning HTML, CSS and Javascript",
        "Learn State Management with Providers, Proxy Providers and Stream Providers",
        "Learn Advance State Management with Change Notfier and Change Notifier Proxy Provider",
        "Learn Firebase Emulator Services such as Firestore Emulator"
      ],
      "course_content": {
        "Intro to Flutter Web with Firebase Course": [
          "Download the Course Syllabus",
          "What is Flutter Web?",
          "Why Flutter Web?",
          "How to Fully Make Use of the Course",
          "Join the Learner's Community"
        ],
        "Setup and Installation": [
          "Prerequisites for Flutter Web Development",
          "Overview of the Process",
          "[Windows Setup] Installing Flutter SDK, Visual Studio Code and Chrome",
          "[Mac Setup] Step 1: Install Visual Studio Code",
          "[Mac Setup] Step 2: Install Flutter SDK",
          "[Mac Setup] Step 3: Install Chrome",
          "Setup Web Support for Flutter",
          "Visual Studio Configurations and Extensions",
          "Links to Visual Studio Configurations and Extensions"
        ],
        "1 - Create Links Landing Page with Flutter Web": [
          "Overview of Project",
          "Create circle profile picture",
          "Creating empty spaces",
          "Create social media handle",
          "Creating buttons",
          "How to cater to different sizes",
          "Create more buttons",
          "Create buttons dynamically",
          "Make buttons go to website",
          "Create footer",
          "Refactoring",
          "Source Code - Links Landing Page"
        ],
        "2 - Create Settings Page": [
          "Layout of Setting Page",
          "Routing",
          "Not Found Page",
          "Refactoring",
          "Layout of Preview",
          "Layout Builder",
          "Borders Using Aspect Ratio",
          "Button Settings Section - Text and Button",
          "Reordable List View",
          "Refactor Reorerable List View",
          "Source Code - Settings Page"
        ],
        "3 - Providers with Firebase": [
          "Instructions to download Firebase Command Line Interface (CLI)",
          "Connect to Firebase",
          "Add Firestore Emulator in Project",
          "Use Firestore 7.20.0",
          "Stream Builder to Show Data",
          "Stream Builder Simply Explained",
          "Convert Firestore document to Dart objects",
          "Create no-data-shown UI",
          "Provider Simply Explained",
          "Provider with Stream Builder",
          "Proxy Provider",
          "Stream Provider",
          "Source Code - Providers with Firebase"
        ],
        "4 - Firestore Database": [
          "Refactor Add Button",
          "Show Dialog",
          "Dialog Actions Section",
          "Navigator explained",
          "TextFormField explained",
          "Validation with Global Key and Form State explained",
          "Firestore Add Function",
          "Refactoring",
          "Multi Provider Simply Explained",
          "Create toMap method",
          "Get the id of the document",
          "Challenge: Create Delete Alert dialog",
          "Add Delete Firestore",
          "Create Edit Dialog with Edit Firestore Function",
          "Optimise Firestore updates",
          "Text controller save in context",
          "Source Code - Firestore Database"
        ],
        "5 - Firebase Authentication": [
          "Login UI",
          "Login Validation",
          "Firebase Auth Setup",
          "Asynchronous Concept: Future",
          "Advanced Routing",
          "Firebase Auth Sign Out",
          "Source Code - Firebase Authentication"
        ],
        "6 - Reorderable List View": [
          "Reorderable List View",
          "Change Notifier explained",
          "Change Notifier Proxy Provider explained",
          "Firestore Batch",
          "Reorder function with Firestore",
          "Source Code - Reorderable List View"
        ],
        "7 - Launch Flutter Web Live with Firebase Hosting": [
          "Firebase Hosting",
          "Flutter Web Personalisation",
          "Source Code - Firebase Hosting"
        ],
        "Just the beginning": [
          "Congratulations!",
          "Your Feedback is Important!"
        ]
      },
      "requirements": [
        "A computer",
        "Confident level coding in any programming languages",
        "Have at least 10 GB of free space in your computer",
        "All software or programmes used in this course is free to download and install",
        "Internet, that connects your computer to the world wide web (WWW)"
      ],
      "description": "Have you discovered Flutter and enjoyed the experience creating fast and beautiful apps? However, you want to create a website but do not want to learn another web framework or language? Well, this course is for you, Flutter Web with Firebase.\nFlutter is not only great at creating fast and beautiful apps, it is now venturing into websites and desktops. Therefore, Flutter would be an excellent framework where you code once and build anywhere.\nIn this course, you will learn how to (in no order):\nBuild a website from scratch using Flutter framework\nImplement routing according to users input URLs\nUse Firebase hosting to launch your website live in the internet\nImplement Firebase authentication and enable routings for different users\nUse Firestore in the Flutter Web app to do CRUD (create, read, update and delete) functions\nImplement the provider package to expose data from the Firestore\nUse advanced provider classes such as proxy provider and change notifier proxy provider, to interact with the Firestore\nAt the end of the course, you will have a full understanding of the basics implementation of web development in Flutter Web.\nDon't just take my word for it, see what my past students had to say about my courses:\n\"First of all, hands off to the Instructor for making the course so lively and understandable. As a beginner, I didn't expect to understand the concept so well. Also, the assignments given have helped a lot to self-evaluate myself. Overall...a great experience!\" - Ash\n\"Haris is covering stuff that you won't find in other Flutter courses. He does so in a funny, engaging way. Pretty advanced stuff but easy to understand. Amazing how much he knows about Flutter and how well he delivers it.\" - Willard Jansen\n\"I thought the course was great.\" - JW Truver\n\"Yes, the way you present the class is great. The examples that you use to compare real life situations with programming is the one which I found the most engaging. As a beginner, I was able to understand about programming concepts better than I imagined. Thank you for that!\" - Aiswarya Deepak\n\"He's fast, funny, and straight to the point.\" - Jeffrey Heisler",
      "target_audience": [
        "If you are interested in web development and wanted to try building one without HTML, CSS, or Javascript",
        "If you have mobile development in Flutter and want to expand your skills as a web developer",
        "If you are a traditional web developer, and you want to try creating a website in another way"
      ]
    },
    {
      "title": "BlackBelt PHP and MySQL Skills for Creating Dynamic Websites",
      "url": "https://www.udemy.com/course/essential-php-skills-for-building-dynamic-websites-revoiced/",
      "bio": "Learning how to create programs that are safe and efficient enough to survive in real life from ground zero.",
      "objectives": [
        "Develop confidence in solving problems by yourself",
        "Develop ability and confidence in teaching yourself the latest PHP techniques",
        "Have a solid knowledge foundation in PHP basics",
        "Be able to self-study a new built-in function by reading the PHP manual",
        "Create a membership system that allows user to register and log in",
        "Create a membership system that allows user to upload files",
        "Be able to operate MySQL database",
        "Be able to operate files and directories using PHP",
        "Learn Object-oriented Programming"
      ],
      "course_content": {
        "YellowBelt:": [
          "Introduction",
          "YellowBelt: 1. Ready your tools",
          "YellowBelt: 2. Anatomy of a typical PHP file",
          "YellowBelt: 3. data type and data value",
          "YellowBelt: 4. the basket offered by PHP: VARIABLE",
          "YellowBelt: 5. difference between single and double quotes",
          "YellowBelt: 6. how to empty the basket: assign NULL to a variable",
          "YellowBelt: 7. Value assignment between variables",
          "YellowBelt: 8. the magic &: assignment BY REFERENCE",
          "Yellow: 9. SUMMARY",
          "YellowBelt: 10. REVIEW-1 MV: South China in Mist and Rain",
          "YellowBelt: 11. REVIEW-2 MV: Pipa's Words",
          "ClassResource Yellow-1",
          "ClassResource: Yellow-2",
          "ClassResource: Yellow-3",
          "ClassResource: Yellow-4",
          "ClassResource: Yellow-5",
          "ClassResource: Yellow-6"
        ],
        "Orange Belt": [
          "OrangeBelt: 1. expression and operator",
          "OrangeBelt: 2. practice",
          "OrangeBelt: 3. give your program a steering wheel: IF statement",
          "OrangeBelt: 4. another steering wheel: SWITCH statement",
          "OrangeBelt: 5. something important you should know",
          "OrangeBelt: 6. how to echo 1 million \"Hello, OnlyKiosk\"",
          "OrangeBelt: 7. practice the WHILE statement",
          "OrangeBelt: 8. another WHILE statement: DO WHILE",
          "OrangeBelt: 9. FOR statement",
          "OrangeBelt: 10. Supplement to short-cut",
          "ClassResource: Orange- 1",
          "ClassResource: Orange- 2",
          "ClassResource: Orange-3",
          "ClassResource: Orange- 4"
        ],
        "Green Belt": [
          "GreenBelt: 1. introduction to FUNCTION",
          "GreenBelt: 2. how to create a function and why argument order is vital",
          "GreenBelt: 3. the returned value of a function",
          "GreenBelt: 4. another thing you should know about RETURN",
          "GreenBelt: 5. what kind of difference & can make here?",
          "GreenBelt: 6. use the keyword GLOBAL to break the wall of function",
          "GreenBelt: 7. function arguments with default values",
          "GreenBelt: 8. last supplement and how to create a CONSTANT",
          "GreenBelt: 9. demonstration of creating a CONSTANT",
          "GreenBelt: 10. the aircraft carrier-- ARRAY",
          "GreenBelt: 11. most important tool for dealing with array -- foreach()",
          "GreenBelt: 12. demonstration of foreach()",
          "GreenBelt: 13. a little challenge for you",
          "GreenBelt: 14. a few commonly used functions that can help you deal with array",
          "GreenBelt: 15. OPTIONAL: callback --we drive a robot, and robot drives the car",
          "GreenBelt: 16. OPTIONAL: array_walk()",
          "ClassResource: Green- 1",
          "ClassResource: Green-2",
          "ClassResource: Green-3",
          "ClassResource: Green-4",
          "ClassResource: Green-5",
          "ClassResource: Green-6"
        ],
        "Blue Belt": [
          "BlueBelt: 1. cross-file communicaiton",
          "BlueBelt: 2. relative URL and absolute URL",
          "BlueBelt: 3. conversion between string and array --implode()",
          "BlueBelt: 4. conversion between string and array --explode()",
          "BlueBelt: 5. another way to convert string into array --split()",
          "BlueBelt: 6. a project for you --create a file type detector",
          "BlueBelt: 7. OPTIONAL: get a part of a string --substr()",
          "BlueBelt: 8. OPTIONAL: switch part of a string --str_replace()",
          "BlueBelt: 9. regular expression Part 1",
          "BlueBelt: 10. regular expression Part 2",
          "BlueBelt: 11. operating files --all the basics you need to know",
          "BlueBelt: 12. open a file and close a file -- fopen() and fclose()",
          "BlueBelt: 13. read contents from a file --fread()",
          "BlueBelt: 14. put contents into a file --fwrite()",
          "BlueBelt: 15. 4 functions you are recommended to learn by yourself",
          "BlueBelt: 16. the four functions",
          "BlueBelt: 17. demonstration of using the four functions",
          "BlueBelt: 18. a function called feof()",
          "BlueBelt: 19. how to read large files",
          "BlueBelt: 20. do CTRL + C/ X/ V using copy() and rename()",
          "BlueBelt: 21. a challenge for you",
          "BlueBelt: 22. answer to the challenge",
          "BlueBelt: 23. check if a directory exists or not",
          "BlueBelt: 24. create new directories",
          "BlueBelt: 25. delete a directory",
          "BlueBelt: 26. open, scan and close a directory",
          "BlueBelt: 27. another challenge for you: delete directories and files together",
          "BlueBelt: 28. answer: how to delete directories and files together",
          "ClassResource: Blue-1",
          "ClassResource: Blue-2",
          "ClassResource: Blue-3",
          "ClassResource: Blue-4",
          "ClassResource: Blue-5",
          "ClassResource: Blue-6",
          "ClassResource: Blue-7"
        ],
        "Purple Belt": [
          "Purple: 1. Preface",
          "Purple: 2. HTML Introduction",
          "Purple:3. Display an image and make a hyperlink",
          "PurpleBelt: 4. sending and receiving data using HTML techniques",
          "PurpleBelt: 5. demonstration of sending and receiving data using HTML",
          "PurpleBelt: 6. try the GET method",
          "PurpleBelt: 7. sending data using a hyperlink",
          "PurpleBelt: 8. how to upload",
          "PurpleBelt: 9. demonstration of uploading files",
          "PurpleBelt: 10. security issues you must deal with",
          "PurpleBelt: 11. control the size of the uploaded file",
          "PurpleBelt: 12. control the type of the uploaded file",
          "PurpleBelt: 13. rename the uploaded file",
          "PurpleBelt: 14. create a new home for uploaded files",
          "PurpleBelt: 15. final adjustments to the upload program",
          "PurpleBelt: 16. how to download",
          "PurpleBelt: 17. demonstration of downloading files",
          "PurpleBelt: 18. download security",
          "PurpleBelt: 19. why we need to learn OOP before MySQL",
          "PurpleBelt: 20. why OOP is the future",
          "PurpleBelt: 21. Introduction of Object-oriented Programming",
          "PurpleBelt: 22. How to create a CLASS",
          "PurpleBelt: 23. how to use or INSTANTIATE a new class",
          "PurpleBelt: 24. Demonstration of creating and instantiating a class",
          "PurpleBelt: 25. Super assign",
          "PurpleBelt: 26. the __construct() method",
          "PurpleBelt: 27. MySQL database introduction",
          "PurpleBelt: 28. PHPMyAdmin",
          "PurpleBelt: 29. Data type",
          "PurpleBelt: 30 Data types used by MySQL database",
          "PurpleBelt: 31. dmonstration of creating a database",
          "PurpleBelt: 32. Introduction of MySQLi and getting connected to MySQL",
          "PurpleBelt: 33. Demonstration of connecting to MySQL database",
          "PurpleBelt: 34. SQL: SELECT",
          "PurpleBelt: 35. Demonstration of retrieving data using SELECT",
          "PurpleBelt: 36. Better organization of retrieved data- Part 1",
          "PurpleBelt: 37. better organization of the retrieved data Part2",
          "PurpleBelt: 38. Summary of SELECT",
          "PurpleBelt: 39. UPDATE and DELETE data from database",
          "ClassResource: Purple- 1",
          "ClassResource: Purple-2",
          "ClassResource: Purple-3",
          "ClassResource: Purple-4",
          "ClassResource: Purple-5",
          "ClassResource: Purple-6",
          "ClassResource: Purple-7"
        ],
        "Brown Belt": [
          "BrownBelt: 1. put new data into the database --INSERT",
          "BrownBelt: 2. problems caused by special characters and how to solve it",
          "BrownBelt: 3. database operation review",
          "BrownBelt: 4. how to encrypt information and analysis of regsitration system",
          "BrownBelt: 5. demonstration of creating the registration system",
          "BrownBelt: 6. how to create the log in part",
          "BrownBelt: 7. demonstration of creating the log in part",
          "BrownBelt: 8. a problem occured",
          "BrownBelt: 9. how does an university manage its students",
          "BrownBelt: 10. the ID card and fingerprint scanner -- COOKIE and SESSION",
          "BrownBelt: 11. how to create COOKIE --setcookie()",
          "BrownBelt: 12. OPTIONAL: supplement to COOKIE",
          "BrownBelt: 13. make the ID card and card scanner",
          "BrownBelt: 14. scan the ID card",
          "BrownBelt: 15. revoke the ID card --how to log out",
          "BrownBelt: 16. change of plans",
          "BrownBelt: 17. how to deal with more than one table?",
          "BrownBelt: 18. how to keep record of the uploaded files",
          "BrownBelt: 19. a security problem and how to solve it",
          "BrownBelt: 20. block repetitive uploading by refreshing page",
          "ClassResource: Brown-1",
          "ClassResource: Brown-2",
          "ClassResource: Brown-4",
          "ClassResource: Brown-5",
          "ClassResource: Brown-6",
          "ClassResource: Brown-7",
          "ClassResource: Brown-9"
        ],
        "Black Belt": [
          "ClassResource: Brown-8",
          "BLACKBELT: 1. SESSION basics",
          "BLACKBELT: 2. store value to SSESSION",
          "BLACKBELT: 3. delete SESSION",
          "BLACKBELT: 4. set an expiry date to SESSION",
          "BLACKBELT: 5. make the fingerprint scanner",
          "BLACKBELT: 6. demonstration of making the fingerprint scanner",
          "BLACKBELT: 7. Graphic techniques",
          "BLACKBELT: 8. how to create a blank canvas",
          "BLACKBELT: 9. how to create ink",
          "BLACKBELT: 10. how to create a paint brush",
          "BLACKBELT: 11. output the image",
          "BLACKBELT: 12. draw a dot, line and rectangle",
          "BLACKBELT: 13. write on the canvas",
          "BLACKBELT: 14. how to create a verification code",
          "BLACKBELT: 15. demonstration of making the verification code",
          "BLACKBELT: 16. how to install and use the verification code",
          "BLACKBELT: 17. how to convert a picture into a canvas",
          "BLACKBELT: 18. how to watermark a picture with strings",
          "BALCKBELT: 19. how to watermark a picture with another picture",
          "BLACKBELT: 20. how to crop a picture",
          "BLACKBELT: 21. how to scale down a picture to make a thumbnail",
          "BLACKBELT: 22. why 4 zeros?",
          "ClassResource: Black-1",
          "ClassResource: Black-2"
        ]
      },
      "requirements": [
        "You only need a computer with internet access",
        "All software needed in the class is free of charge and easy to install and run",
        "No previous coding experience needed"
      ],
      "description": "The aim of this course is to help you master web development in the most efficient way.\nThe content design of this course is inspired by the Jiu Jitsu ranking system.\nThe whole course includes seven levels: yellow, orange, green, blue, purple, brown and black.\nIn yellow, orange and green course, considering you just started your PHP study, the learning curve is kept at a rather smooth level.\nYou will learn the most fundamental coding concepts and simple operations.\nIn blue belt, things start to change. The learning curve starts to get steep and you will need to combine skills learnt at different times together.\nAfter purple belt, you will start to build programs that can be used in real-life situation. This means you will need to take into consideration safety and efficiency.\nWe know that everybody forgets. We also know that you have other things going on with your life and your study will be constantly interrupted. Therefore, every time previous knowledge is needed, we will give you a timely review. We believe this can make your study easier and more efficient.\nStarting from purple belt, you will learn how to build program that can survive in real life. This means you need to learn more than just coding skills. You will learn program design and safety and efficiency knowledge.",
      "target_audience": [
        "This course is for anyone who wants to build a dynamic website using PHP and MySQL",
        "This course is for anyone who wants to improve their PHP skills",
        "This course is for anyone who wants to learn more PHP techniques"
      ]
    },
    {
      "title": "Flask for beginners: Create Real World Interactive Apps",
      "url": "https://www.udemy.com/course/flask-for-beginners-create-real-world-interactive-apps/",
      "bio": "Learn Flask from scratch step by step",
      "objectives": [
        "Creating and running a simple Flask app",
        "Creating Interactive Flask Apps",
        "Working with templates",
        "Setting up and connecting to a database",
        "Using GET and POST requests in FlaskData flow in Flask",
        "Setting up an API in Flask",
        "Templating flask apps with Bootstrap",
        "Message Flashing",
        "Creating routes for our applications",
        "Passing data through forms to flask app",
        "Implementing sessions and cookies",
        "Using conditionals and loops in flask app",
        "Saving app data to PostgreSQL Database Server",
        "Setup your project with version control",
        "Create remote repository on Github",
        "Deploying your project to the cloud on heroku"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML | CSS | JAVASCRIPT",
        "Basic knowledge of Python",
        "Basic knowledge of Bootstrap",
        "Basic knowledge of using command line interface"
      ],
      "description": "Flask is a Python framework for building lightweight and dynamic web applications. It helps speed up tedious behind-the-scenes development work, such as URL mapping, and offers more control to the developer to build applications . This course provides the training and hands-on examples you need to get started quickly.  We will create two complete interactive web applications and also deploy them to the cloud so others can interact with them. You will  learn skills that professional web developers use.\n\n\nLearning objectives\nCreating and running a simple Flask app\nCreating a Flask project\nWorking with templates\nSetting up and connecting to a database\nWorking with Flask-Security\nDeploying your project to Heroku\nCreate remote repository on GitHub\nSetup your project with version control\nUsing GET and POST requests in Flask Data flow in Flask\nSetting up an API in Flask\nTemplating  flask with Bootstrap\nCreate a JSON  API\nMessage Flashing\nCreating routes for our applications\nPassing data through forms to flask app\nUsing redirect and url_functions\nImplementing sessions and cookies\nUsing conditionals and loops in flask app\nSaving app  data to PostgreSQL Database Server",
      "target_audience": [
        "Beginners to Flask",
        "Beginners to web development",
        "Beginners to programming"
      ]
    },
    {
      "title": "Basic HTML CSS and Web Design",
      "url": "https://www.udemy.com/course/basic-html-css-web-design/",
      "bio": "Learn how to Create a Static Single-column Website using HTML and CSS in One Practical Project",
      "objectives": [
        "Create a Static Single Column Website from Scratch Using HTML and CSS",
        "Apply all the Important and Underlying Concepts of Web Design Throughout the Process",
        "Build a Strong Foundation of HTML, CSS and Web Design Upon which You Can Build the Rest of Your Web Development Career"
      ],
      "course_content": {
        "Preparing Your Tools": [
          "How to Get the Most Out of this Course",
          "Install Mozilla Firefox",
          "Install Notepad++ Text Editor"
        ],
        "Creating the HTML Pages": [
          "The Basic Structure of an HTML Document Part 1",
          "The Basic Structure of an HTML Document Part 2",
          "<ul>, <strong>, <a>",
          "<title>, <meta name=\"description\"...>, <nav>",
          "W3C Markup Validation Service"
        ],
        "General CSS Part 1": [
          "CSS Style Block and External Style Sheets",
          "HTML \"link\" Element and \"div#wrapper\"",
          "CSS \"background-color\" and \"color\" Properties",
          "CSS \"font-size\" and \"font-family\" Properties",
          "CSS \"font-size\" Property and Google Fonts",
          "CSS Box Model and Firebug",
          "Fixing Distances and Gaps Around Elements",
          "CSS \"font-size\", \"font-family\" and \"border\" Properties",
          "Color Design, \":link\", \":visited\", \":hover\", \":focus\", \":active\"",
          "CSS Reset, Restoring Distances, CSS Unit \"em\"",
          "Centering Block Level Elements",
          "CSS Box Model, \"padding\"",
          "\"background\", \"background-image\", \"background-color\"",
          "Tidying Up the Style Sheet",
          "External Central Style Sheet",
          "CSS Shorthand Writing, CSS Reset Restoring, References",
          "CSS Reset, W3C CSS Validation Service"
        ],
        "Structuring Content in an HTML Page": [
          "Creating a Content Page Part 1",
          "Creating a Content Page Part 2"
        ],
        "General CSS Part 2": [
          "\"font-family\", \"font-size\" , \"line-height\", Block and Inline CSS",
          "CSS Classes"
        ],
        "CSS For the Navigation Menu": [
          "\"display: inline;\", CSS Specificity Concept",
          "CSS Specificity, \"text-decoration: none;\", \"border-radius\"",
          "CSS Pseudo Classes for the Navigation"
        ],
        "Contact Form": [
          "Creating an HTML Form Part 1",
          "Creating an HTML Form Part 2",
          "Creating an HTML Form Part 3",
          "CSS Styles for the HTML Form Part 1",
          "CSS Styles for the HTML From Part 2"
        ],
        "HTML Tables": [
          "Creating an HTML Table Part 1",
          "Creating an HTML Table Part 2 and CSS For the Table",
          "CSS for the HTML Table"
        ],
        "Print Version": [
          "Creating an External Style Sheet for the Print Version",
          "CSS Rules for the Print Version Part 1",
          "CSS Rules for the Print Version Part 2",
          "CSS Rules for the Print Version Part 3"
        ],
        "Miscellaneous": [
          "Favicon",
          "Wrapping Up"
        ]
      },
      "requirements": [
        "Any Computer with and an Internet Connection with Mac OS, Windows or Linux"
      ],
      "description": "Learn how to develop modern websites using HTML and CSS in one single project from scratch in 8 hours in video format.\nYou'll be taken from an absolute novice to being able to design and implement a functional, modern, static, front end, essentially a typical website, for any web application using HTML and CSS.\nEvery step of the way is fully explained and the source code is provided broken down for each video, section or for the whole course. This way you can jump in at any point in the project, download the source code and files and work through the project.\nThe course has been designed in such a way that you'll learn all the theory required while doing the project. Therefore it's very important that you do the project yourself while you're watching the videos.",
      "target_audience": [
        "Start a Web Development Career",
        "Create a Personal Website for Yourself From Scratch using HTML and CSS",
        "Become a Web Designer",
        "Understand How Your Content Management System Like WordPress Works",
        "Learn HTML and CSS for any other Reason"
      ]
    },
    {
      "title": "HTML5: HTML Authoring Certification Course",
      "url": "https://www.udemy.com/course/html5-authoring-certification/",
      "bio": "Learn HTML Authoring and Earn the HTML5 Specialist Certification",
      "objectives": [
        "Web Page Development with HTML5",
        "Fundamentals of CSS3",
        "Application of all Major HTML5 Tags",
        "Page Layout with HTML5 and CSS3"
      ],
      "course_content": {
        "Writing Your First Lines of Code": [
          "Basic Document Structure"
        ],
        "Heading Tags": [
          "Heading Tags"
        ],
        "Paragraph Tags": [
          "Paragraph Tags",
          "More HTML5 Tags"
        ],
        "CSS Text": [
          "CSS Text"
        ],
        "Div and Span": [
          "Div and Span"
        ],
        "Google Fonts": [
          "Google Fonts"
        ],
        "CSS Libraries": [
          "CSS Libraries"
        ],
        "Lists": [
          "Lists"
        ],
        "Links": [
          "Links"
        ],
        "Tables": [
          "Tables"
        ]
      },
      "requirements": [
        "Windows, Mac or Linux Computer with Web Browser",
        "The Desire to Learn the Language that Runs the Web"
      ],
      "description": "My Guarantee:  If this is not the best course you've taken on Udemy, please take advantage of Udemy's refund policy and get your money back!\nYes, I am THAT confident that you will be beyond satisfied with this HTML5 Course and Certification program.\nMy name is Mark Lassoff, and I am the author and instructor for this course.  If you've heard my name before it's because 1.5 million people have learned to code from me online on Udemy and other venues.  That's a lot of folks!\nDon't be fooled by those 20+ hour courses that also claim to teach HTML.  This course and certification program will teach you everything you need to know, and won't waste your time with superfluous information designed to make the course seem more valuable.   HTML5:  HTML Authoring Certification Course is for folks who don't have time to waste and want the recognition that being a certified professional carries.\nHere's what four people who completed the program and earned their certification think:\n\n\nThe Reviews Are In!\n\"This is a great course. It is very easy to follow and gives lots practice/hands on work and projects so you can really get a feel for what you are doing and cement your knowledge and skills. It starts with the very basics to give you a great foundation and moves up from there. Plus you get a real-life certification that you can use anywhere, even place the bade of your LinkedIn profile to highlight that you have been trained and certified in HTML5.\" -Stacie M.\n\"This is a great course and Mark is an excellent teacher. I really like that this course is just a little over 4 hours and doesn't take a long time to get through. I like that there are high quality videos, articles and labs. Plenty of labs for practice. Mark is very clear and this was the first course that explained it in a way I can understand. If you want to learn html5 and css I would recommend this course. Plus you get a certification when finished.\" --Michael K.\n\"I want to thank you for your excellent teaching style. I just completed my first course, HTML5 Authoring, and am very happy to have completed it and received my certification.  I am glad I can keep up and retain the immense amount of information you share with us...\"   - Gina S.\n\"Mark, I can't believe I did it!  I have never done anything technical in my life, and while it wasn't easy, I was able to follow all your lessons and succeed in the lab exercises.  Thank you so much.  I am so excited to be certified...\"  - Bryan P.\nIf you're looking for something that is beyond just a course, that sets you up for success and guarantees your learning you should read on.\nCertification:  The Recognition You Deserve\nEnrolling in this course will make you a candidate for the Framework HTML5 Specialist Certification.  This Certification is earned by completing all the lessons in the course and turning in each lab exercise and final project as directed the course content.  There is NO exam required to earn your certification.   (We think the actual code you write is a much better indicator of your knowledge than artificial exam!)\nAs an HTML5 Specialist, you are uniquely qualified to help companies, brands and development firms to create high-quality HTML5 code. Your knowledge will be critical to teams that develop apps with HTML5 as you help them create high quality, highly maintainable code.\nThis certification is not just a piece of paper to hang on your wall. The HTML5 Specialist Designation is validated by Credential (dot net). That means your certification will appear on an independent Credential page accessible by private URL. You'll also be able to list the certification on your LinkedIn account so everyone can see your accomplishment. (Employers have been known to scan for certified individuals on LinkedIn.)\n\n\nHelp When You Need It\nYou're not trying to complete your certification alone. We have an active, helpful community of members and expert instructors standing by to help you and answer questions. The community is also where you'll get to know the other members, share experiences and your success as you complete certification.\n\n\nThe Framework Success System\nYour success is our success.\nThat's why we've invested heavily in the Framework Success System. We're not just making shows about tech-- but we're helping you learn valuable skills that will start your career in digital technology.\n\n\nHere's what you need to know about our system:\nI. You'll Learn More Quickly From Our Videos with the Framework Video Countdown\nEach new video we produce will display the subjects covered in the video along the right-hand side of the screen. This will help you navigate through the video and rapidly find any portions of the video you need to rewatch for reference or review.\n\n\nII. You'll get a second exposure to all the information presented in a video from the Framework Course Guide\nEveryone learns a little differently. Years of academic research has told us that.\nOur unique course guides review all of the critical points made in the video lectures, giving you a second exposure to the information. This second exposure will help you retain the material and be able to apply it to your own digital development work.\nThe Framework Course Guide is like getting a free HTML5 book with your course.\n\n\nIII. You Gain Experience with Confidence-Building Activities\nWith every video, Framework Television includes a series of activities that will help you retain the information in the video and the course guide. Digital development is a learn-by-doing activity and the more you practice, the more successful you'll be.\nWe want to help you achieve your goals, and the Framework Success System supports your success.\n\n\nTo Sum It Up\nWith our \"best course you've taken\" guarantee, online help community, no-exam-required certification, and proven success system, enrolling in this program is a no-brainer.  Click the enroll button and get on the road to success with HTML5!",
      "target_audience": [
        "Anyone who wants to learn web development",
        "Those interested in starting a career in coding",
        "People who want to create web sites professionally or just for fun!"
      ]
    },
    {
      "title": "ASP.NET MVC 5 Project - Facebook Clone",
      "url": "https://www.udemy.com/course/aspnet-mvc-5-project-facebook-clone/",
      "bio": "Learn how to use SignalR with asp.net mvc while creating an awesome app",
      "objectives": [
        "Learn SignalR",
        "Use ASP.NET MVC with SignalR to create custom applications."
      ],
      "course_content": {
        "Intro and project overview": [
          "intro",
          "final project overview"
        ],
        "The Project": [
          "new project",
          "project setup",
          "Account Controller",
          "register view",
          "register 1",
          "register 2",
          "login 1",
          "login 2",
          "user dashboard 1",
          "live search 1",
          "live search 2",
          "live search 3",
          "user dashboard 2",
          "signalr",
          "add friend 1",
          "add friend 2",
          "add friend 3",
          "display friend requests 1",
          "display friend requests 2",
          "display friend requests 3",
          "accept friend 1",
          "accept friend 2",
          "display friend count",
          "decline friend request",
          "messages 1",
          "messages 2",
          "messages 3",
          "messages 4",
          "messages 5",
          "wall 1",
          "wall 2",
          "chat 1",
          "chat 2",
          "chat 3",
          "chat 4",
          "chat 5",
          "chat 6",
          "chat 7",
          "final touches"
        ],
        "Bonus Material": [
          "Bonus Material"
        ]
      },
      "requirements": [
        "Have some ASP.NET MVC experience",
        "Have Visual Studio 2015 installed (it is free)"
      ],
      "description": "This course is a practical course for learning signalr with asp.net mvc 5 and entity framework and bootstrap that will make you able to create your own custom websites with asp.net mvc and signalr.\nThis course is not intended for complete asp.net mvc beginners, so while you can follow even you are new to asp.net mvc since everything is done on video, I do not explain  parts of the application that have nothing to do with signalr, so if you are new I recommend to first do my other course asp.net mvc 5 project - cms and shopping cart with paypal.\nNOTE: If the current asking price is too much for you feel free to message me for a discount!",
      "target_audience": [
        "Whoever knows some ASP.NET MVC and wishes to learn SignalR while creating an awesome app."
      ]
    },
    {
      "title": "Angular with Test Driven Development",
      "url": "https://www.udemy.com/course/angular-with-test-driven-development/",
      "bio": "Learn Angular by applying test driven development (incl. routing, forms, karma, jasmine, jest, testing-library)",
      "objectives": [
        "Build an application with Angular",
        "Practice Test Driven Development in a complete project from beginning to the end",
        "How to mock external dependencies in testing",
        "Feel how the test driven development is giving confidence when refactoring your application",
        "Not only learn karma & jasmine but also learn jest and testing-library"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Methodology",
          "Create Project",
          "Test Setup",
          "Jest Setup for Angular 15 and later versions",
          "Course Project",
          "Backend Project"
        ],
        "Sign Up": [
          "First Component",
          "Layout",
          "Layout - Jest Tests",
          "Interactions",
          "Interactions - Jest Tests",
          "Submitting Request",
          "Mocking - Jasmine",
          "Mocking - Jest",
          "HttpClient",
          "HttpClient - Jest Tests",
          "Mock Service Worker Update",
          "Mocking API in Tests",
          "Proxy",
          "Styling",
          "Progress Indicator",
          "Progress Indicator - Jest Tests",
          "Sign Up Success",
          "Sign Up Success - Jest Tests",
          "Components - Alert & Button"
        ],
        "Refactoring": [
          "Service",
          "Module",
          "Template Driven Form",
          "Reactive Form"
        ],
        "Validation": [
          "Client-side Validation",
          "Client-side Validation - Jest Tests",
          "Simplifying Template",
          "Styling",
          "Dynamic Tests",
          "Task: Required Validation for E-mail & Password",
          "Required Validation for E-mail & Password",
          "Pattern Validation",
          "Cross-field Validation",
          "Cross-field Validation - Jest Tests",
          "Async Validation",
          "Async Validation - Jest Tests",
          "Backend Validation",
          "Backend Validation & Mock Service Worker",
          "Modify Button Enable Logic",
          "Button State",
          "Button State - Jest Tests"
        ],
        "Routing": [
          "Routing",
          "Client-side Routing",
          "Client-side Routing - Jest Tests",
          "Task: New Pages",
          "New Pages",
          "NavBar",
          "NavBar - Jest Tests",
          "NavBar Style",
          "Account Activation",
          "Activated Route",
          "Observable",
          "Activation API Call",
          "Activation API Call - Jest Tests",
          "Progress Indicator",
          "Progress Indicator - Jest Tests"
        ],
        "User List & User Page": [
          "User List",
          "User List - Jest Tests",
          "Fixing Page in Tests",
          "Fixing Page in Tests - Jest Tests",
          "Next & Previous Page",
          "Next & Previous Page - Jest Tests",
          "Style & Progress Indictor",
          "Style & Progress Indictor - Jest Tests",
          "Link to User Page",
          "Link to User Page - Jest Tests",
          "User List Item",
          "Task: User Page",
          "User Page",
          "User Page - Jest Tests"
        ],
        "Authentication": [
          "Task: Login Page",
          "Login Page",
          "Login Page - Jest Tests",
          "Validation",
          "Validation - Jest Tests",
          "Error",
          "Error - Jest Tests",
          "Success Route",
          "Success Route - Jest Tests",
          "Logged in Layout",
          "Logged in Layout - Jest Tests",
          "Local Storage",
          "Local Storage - Jest Tests",
          "Logout",
          "Logout - Jest Tests",
          "Refactor"
        ]
      },
      "requirements": [
        "Experience with javascript and typescript is required"
      ],
      "description": "Angular is one of the most popular library for the client application development.\nIn this course we will be learning angular by creating a web application with it. Also we will apply test driven development (TDD) methodology from beginning to the end.\nWe will have two separate test setups. One of them is coming with the default angular project. Testing with karma and jasmine. And the other one is, we will create custom setup with the most popular test libraries of javascript. jest and testing-library\nwhile building this application, we will learn main building blocks of angular. We will practice\nhow client-side routing is working\nhow to use template driven and reactive form\nhow to use validations and how to create our own synchronous and asynchronous validators\nhow observable is working\nand we will see\nhow test driven development works.\nhow it's affecting our code quality, reusability\nhow it's giving us the confidence about refactoring our implementation\nhow to avoid implementation details while creating tests\nThis course is purely built on practice. Each code piece we write, will be for our actual application implementation.\nIn each section we will gradually build our application. We will not jump ahead and add functionality not needed for that moment. We will implement one requirement at a time. Each implementation will bring the next requirement to us.\nAnd following this practice, will help you to get a solid foundation about overall web application requirements and how to implement one of them with angular by following test driven development methodology.\nAfter completing the course, you will be able to use Angular in your next project and you will experience the benefits of test driven development.",
      "target_audience": [
        "Developers who want to learn Angular",
        "Developers who want to see Test Driven Development in action"
      ]
    },
    {
      "title": "RabbitMQ Python",
      "url": "https://www.udemy.com/course/rabbitmq-ss/",
      "bio": "Learn How to use RabbitMQ for establishing your messaging framework",
      "objectives": [
        "RabbitMQ Implementation using Python",
        "Distributed Programming",
        "Microservices",
        "Asynchronous messaging"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "RabbitMQ Setup",
          "RabbitMQ Basics"
        ],
        "Basic Communication - Default Exchange": [
          "Basic Communication - Default Exchange",
          "Basic Communication - Lab",
          "Basic Communication",
          "Assignment: Centralized Alert System"
        ],
        "Broadcasting - Fanout Exchange": [
          "Broadcasting - Fanout Exchange",
          "Temporary Queues and Exclusivity",
          "Broadcasting - Lab",
          "Broadcasting",
          "Assignment: Centralized Alert System"
        ],
        "Selective Routing - Direct Exchange": [
          "Selective Routing - Direct Exchange",
          "Selective Routing - Lab",
          "Selective Routing",
          "Assignment: Centralized Alert System"
        ],
        "Topic Exchange - Pattern Based Routing": [
          "Topic Exchange",
          "Binding Loss",
          "Topic Exchange - Lab",
          "Topic Exchange",
          "Assignment: Centralized Alert System"
        ],
        "Reliable communication": [
          "Reliable communication",
          "reliable Communication - Lab",
          "Reliable communication"
        ],
        "RPC - Remote Procedure Call": [
          "Remote Procedure Call",
          "RPC Lab",
          "RPC"
        ]
      },
      "requirements": [
        "Basic Knowledge of Python Programming Language",
        "Basic Knowledge of Message communication"
      ],
      "description": "Are you looking to learn how to use messaging framework ? RabbitMQ is there\nTo make your microservices communicate with each other\nTo deploy your application components on different machines and let them talk using messages\nTo deploy the application components over the cloud\nDividing your monolith into microservices\nRabbitMQ serves the purpose. Its understanding makes it easier to develop distributed applications that are robust and the overall application does not become heavy.\nThis course attempts to teach you RabbitMQ as a developer. It tells what features are there in RabbitMQ, different type of communication mechanisms that are available and their drawbacks as well, so that you can make an informed decision. You should be able to use the right feature of RabbitMQ for a given situation after going through this course.\nThe language used here is Python, but more important is to understand the concept. If you learn it fully, you should be able to use it in any other supported language e.g. Java, Ruby etc.\nEvery chapter of this course starts with the explanation of a concept and then goes through a detailed lab. Following the lab and examples, you become confident to use the concept correctly.\nLet's start learning this beautiful messaging framework! Welcome to RabbitMQ.",
      "target_audience": [
        "Software Developers",
        "Python Developers",
        "Microservices communication framework developers",
        "Backend Developers"
      ]
    },
    {
      "title": "The essential guide to GraphQL + React",
      "url": "https://www.udemy.com/course/the-essential-guide-to-graphql-react/",
      "bio": "So you want to finally learn GraphQL and use it with your React apps ?. This is it.",
      "objectives": [
        "GraphQL + React. But mainly GraphQL"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing NODE",
          "IDE",
          "GITHUB CODE"
        ],
        "The basics": [
          "How we will learn GraphQL",
          "The idea behind it",
          "Starting with GraphQL + Yoga",
          "Scalar types",
          "Other types",
          "Using json server",
          "Arguments and arrays part one",
          "Arguments and arrays part two",
          "Relationships part one",
          "Relationships part two",
          "Relationships part three",
          "A bit of structure",
          "Mutations",
          "Mutations - removing posts",
          "Mutations - removing users",
          "Mutations - Updating",
          "Input types",
          "Enum types",
          "Union types",
          "Interfaces",
          "Many and alias",
          "Fragments",
          "Operation name and variables",
          "Directives",
          "Playground features"
        ],
        "MONGO + Express + Apollo + React": [
          "Creating server and client",
          "GraphQL and express",
          "MongoDB",
          "Making GraphQL work with Mongo",
          "Queries from React",
          "Apollo server and Apollo server Express"
        ],
        "Taking the logic to practice": [
          "INTRO and installing",
          "SERVER: Mongo",
          "SERVER: Sign in / Up mutations",
          "SERVER: Sign up users part one",
          "SERVER: Sign up users part two",
          "SERVER: Sign in user",
          "SERVER: User by ID and Middleware",
          "SERVER: User by ID and Middleware part two",
          "SERVER: Auth user and middleware update",
          "SERVER: Update name and lastname",
          "SERVER: Update email and password",
          "SERVER: Create post model and mutation",
          "SERVER: Category model and mutation",
          "SERVER: Relationships part one",
          "SERVER: Relationships part two",
          "SERVER: Getting posts",
          "SERVER: Reusing the SORT input",
          "SERVER: Update post and delete post",
          "SERVER: Updating and deleting categories",
          "CLIENT: Setup",
          "CLIENT: Header and sign in routes",
          "CLIENT: Sign in / register form",
          "CLIENT: Register users",
          "CLIENT: Register users 2",
          "CLIENT: Sign in user",
          "CLIENT: Auto sign in",
          "CLIENT: Logout user",
          "CLIENT: Creating the user area",
          "CLIENT: Guarding routes",
          "CLIENT: Updating email and pass",
          "CLIENT: Getting user stats",
          "CLIENT: User stats layout",
          "CLIENT: Adding post",
          "CLIENT: Adding post 2",
          "CLIENT: User articles",
          "CLIENT: User articles 2",
          "CLIENT: Updating post status",
          "CLIENT: Remove post",
          "CLIENT: Fetching home posts",
          "CLIENT: Home layout",
          "CLIENT: Creating the article view",
          "CLIENT: Finishing the article view"
        ],
        "Apollo client [OPTIONAL]": [
          "The template",
          "Starting with Apollo client",
          "Getting data",
          "Getting data on demand",
          "Polling and refetching",
          "Network changes",
          "Mutations 1",
          "Mutations 2",
          "More to come."
        ],
        "REACT MINI [ OPTIONAL ]": [
          "Installing node and using a CLI",
          "The bundle",
          "Starting with the code",
          "JSX Behind the scenes",
          "Importing components",
          "Types of components",
          "Adding styles",
          "Events",
          "The STATE",
          "Using props",
          "Using props 2",
          "Props to class",
          "Childrens",
          "More with styles",
          "Styles plugins",
          "Filter the news",
          "ROUTES: installing",
          "ROUTES: how they work",
          "ROUTES:Using them",
          "ROUTES: Linking",
          "ROUTES: Working with params",
          "ROUTES:Other features",
          "ROUTES:Switch",
          "ROUTES:Redirections",
          "ROUTES:404 and WITHROUTER",
          "PRACTICE 1: Install",
          "PRACTICE 1: Adding a header",
          "PRACTICE 1: Home list",
          "PRACTICE 1: Artists view",
          "Component lifecycle",
          "Component lifecycle 2",
          "Conditional rendering",
          "Pure components",
          "Adjacent elements",
          "HOC's",
          "HOC's continued",
          "Transitions",
          "Transitions continued",
          "CSS Transitions",
          "Transitions group",
          "Proptypes",
          "Proptypes 2",
          "Controlles component",
          "PRACTICE.PROJ1: Installation",
          "PRACTICE.PROJ1: Routes,Footer and header",
          "PRACTICE.PROJ1: Adding a slider",
          "PRACTICE.PROJ1:Adding subs",
          "PRACTICE.PROJ1: Adding subs ...continued",
          "PRACTICE.PROJ1: Home blocks",
          "PRACTICE.PROJ1: Adding a poll",
          "PRACTICE.PROJ1: Finishing a poll",
          "PRACTICE.PROJ1: Adding the teams section",
          "PRACTICE.PROJ1: Finishing the teams section",
          "PRACTICE.PROJ1: Creating the team view",
          "REDUX: intro",
          "REDUX: Creating a store",
          "REDUX: The redux flow",
          "REDUX: Combining reducers",
          "REDUX: Creating a valid reducer",
          "REDUX: Creating an action",
          "REDUX: Mapstate to props and connect",
          "REDUX: Dispatch",
          "REDUX: Types",
          "REDUX: Using middleware",
          "PRACTICE.PROJ2: Installations",
          "PRACTICE.PROJ2: Adding redux",
          "PRACTICE.PROJ2: Home data",
          "PRACTICE.PROJ2: Latest news",
          "PRACTICE.PROJ2: Other news",
          "PRACTICE.PROJ2: Article page",
          "PRACTICE.PROJ2: Adding likes",
          "PRACTICE.PROJ2: Finishing likes",
          "PRACTICE.PROJ2: Clearing data",
          "HOOKS: introduction",
          "HOOKS: UseState",
          "HOOKS: UseState 2",
          "HOOKS: UseEffect",
          "HOOKS: UseReducer",
          "HOOKS: The context API",
          "HOOKS: Context and useContext"
        ]
      },
      "requirements": [
        "Just HTML and CSS"
      ],
      "description": "So you want to finally learn GraphQL and use it with your React apps ?. This is the course for you.\nWe will start from the very beginning, from \"I don't even know what GraphQL is ….and why should use it ?“ to actually understand how GraphQL works and make it work with your server and client.\nYou will learn all the logic and you will practice GraphQL in different modules.\n\n\nTo sum everything up, you will learn in this course:\nWhat is GraphQL and why use it\nUnderstand the tools to make queries and mutations\nMake it work on a server with Express or Apollo server\nLink your GraphQL server to a real DB like MONGO.\nMake it communicate with a client like REACT\nPut you new knowledge to the test by creating an app.\n\n\nDon’t know how to use React.? Don’t panic, at the end of the course you get a full React mini course, so you get two courses for the price of one.\nWhat about the instructor experience ?\nWell I've been around for 13 years now, built lots of applications for small projects and big companies like Citi, Fox, Disney and a lot more.\nToday I work as a developer for a major company developing applications on React , Angular and Vue, but I like to teach in my spare time.\nHow about the target audience?\nThis course is for almost everyone, a little bit of HTML, CSS.\nIf you want to take your coding to the next level, this is the course for you.",
      "target_audience": [
        "Everyone can do course"
      ]
    },
    {
      "title": "FullStack Web Development with ReactJS, ReactNative, Angular",
      "url": "https://www.udemy.com/course/mobile-and-web-development-with-react-js-native-angular/",
      "bio": "Full Stack Web Development with React JS, React Native, Angular, NodeJS, MongoDB and Learn Mobile App Development",
      "objectives": [
        "Learn how to build single page applications with React JS",
        "Learn components, props, states and component life cycle methods in React JS",
        "Create reusable React Components",
        "Learn modern JavaScript, ES6",
        "Learn to connect to an external API in react native",
        "React and React native Set up our virtual environment",
        "Install React Native dependencies for MAC and Windows",
        "Run Android and IOS simulator",
        "Run Android and IOS simulator on computer",
        "JSX syntax and expressions",
        "See the content on the simulator",
        "Styling with React-Native and flex-box rules",
        "Send an HTTP request to a remote API",
        "React Native Expo installation",
        "Run Expo App on Mobile Device",
        "See the content on the simulator",
        "Styling with React-Native and flex-box rules",
        "Reach another app on the phone from the React-Native app",
        "Data Transfer Between Different Screens with React Navigation",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Install MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "React, also known as React js, saves time and effort for developers since they only need one programming language.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "Angular is a complex application that contains multiple libraries and cross-platform functionalities, so it can take some time to learn its many features.",
        "Developers mainly use Angular to build dynamic single-page applications (SPAs) for web, mobile, and desktop.",
        "Angular and React are both rapid application development (RAD) platforms based on JavaScript.",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop fullstack web apps by using tools like NodeJS Redux and Mongodb",
        "React, or React JS, is a frontend Javascript library for building UI components for the web.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web develo",
        "JavaScript is a text-based programming language used for client- and server-side development.",
        "Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows."
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge is required! about javascript, react, react native, angular and web development or mobile development",
        "A Windows PC, Mac or Linux Computer",
        "Es6 knowledge would be beneficial but not required",
        "Desire to learn React and Angular",
        "Desire to learn React or React JS",
        "Desire to learn web development with react, or react js",
        "Desire to learn mobile development with react native, redux, hooks and context",
        "Desire to learn full stack web development with react, react native, angular",
        "Desire to learn React js and Angular js",
        "Desire to learn React js, typescript and Angular js",
        "Desire to learn React, React Native, angular, typescript, http, routing",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to Full Stack Web Development with ReactJS, React Native, Angular course.\nFull Stack Web Development with React JS, React Native, Angular, NodeJS, MongoDB, and Learn Mobile App Development\nReact is one of the best choices for building modern web applications. If you are new to React or maybe you've been struggling to learn and truly understand what’s going on then this course is the best way for you to learn React. React native, react js, react native typescript, react, reactjs, react native web, reactnative, typescript react native, react js and react native, angular react\nEach aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills.\nThe world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that.  React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nAngular is one of the most popular frameworks for building client apps. If you want to establish yourself as a front-end or a full-stack developer, you need to learn Angular.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser. By learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nWe will take you from beginner to advance level.  You will learn  React development step-by-step with hands-on demonstrations. To be able to benefit from this course, all you need is a basic understanding of JavaScript.\nJavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications. On top of that, JavaScript is a great language for beginners because it gives them a chance to write code that does something visual, which is exciting and helpful when you're just getting started as a programmer. Dynamic content is the hot topic in web development right now. Dynamic content refers to content that constantly changes and adapts to specific users whenever possible. For example, JavaScript can be used to determine if a website visitor is using a computer or a mobile device before deciding whether or not to render the mobile version of the website. It's these small things behind the scenes that create genuine value in using JavaScript to create dynamic web pages.\nIn the course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and iOS simulator on your MAC or Windows computer.\nLater on the course, we are going to learn the basics of React.  JSX, 'props system' and 'state system' are going to be crystal clear for you at the end of the course.\nWe tried to tell all complex topics in very detail on the course. We used some diagrams to tell some important topics and created a nice-looking mobile application. We showed two different ways to create a mobile app. We showed both react-native-cli and expo-cli in our course.\nWe'll be creating nice-looking reusable components. So you will be able to use this reusable component on your own future projects.On\nIn this course, I explained all the complex topics in very detail but by making them simpler which I believe will help you a lot. I used some diagrams to tell some important topics and created a nice looking mobile application.\nAt the end of the course you will learn;\nBasics of React, React-Native, React-Navigation libraries\nHow to send an HTTP request from a mobile application,\nHow to use the flex-box system,\nHow to create reusable components,\nTo reach another app on the device from our app and\nCreating your own mobile app both with react-native-cli and expo-cli\nTo reach another app on the device from our app\nCreating Context with Class Based and Functional Components\nHow to Consume Context in Class Based and Functional Components\nHow to Use Multiple Context in one single component\nHooks Functions(useState, useEffect, useReducer, useContext...)\nCreating Reducer and\nUsing Reducer is going to be clear for you.\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nReact Native\nReact js\nReact\nMobile and web development with react js & native & angular\nAngular\nReactjs\nReact native web\nReactnative\nReact js and react native\nMobile-and-web-development-with-react-js-native-angular\nReact native mobile development\nAngular react\nMobile and web development with react js native angular\nMobile developer\nMobile and web development with react js native angular\nWeb development\nMobile development\nReact and angular\nReact free\nReact angular\nMobile and web development\nReact native mobile\nReact js and native\nReact native and react js\nReact hooks\nAngular native\nReact native angular\nMobile and web with react and react native\nfull stack web development\nfront end web development\nfull stack\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn React Native\nThis course starts with very basics. First, you will learn some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the React and hungry to learn more.\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React.JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhat is Angular and what are its benefits?\nAngular is an open-source, client-side framework for building single-page websites and desktop and mobile applications. It is a full-featured JavaScript application built on TypeScript, which operates across platforms and keeps code clean and consistent throughout the codebase. Angular is an all-in-one rapid application development platform that allows web pages to render efficiently by minimizing communication with servers. The Angular framework offers end-to-end tooling or routing, state management, and form validation, as well as dependency injection and declarative templates. Angular offers out-of-the-box functionality and easy updating, along with an extensive collection of pre-made components. The TypeScript base includes high-quality code that reduces the burden of debugging and allows multiple developers to collaborate across platforms with minimal disruption and less coding.\nIs learning Angular hard?\nAngular is a complex application that contains multiple libraries and cross-platform functionalities, so it can take some time to learn its many features. Angular’s learning curve depends partly on your previous knowledge of web development and your familiarity with the languages used in the Angular platform. If you’re new to Angular, it’s helpful to have some familiarity with the basics of web design and the essentials of HTML and CSS. It’s also useful to know about the other languages that make up the Angular framework. These include basic HTML and CSS, as well as ECMAScript6, or ES6, a general programming language designed to ensure interoperability of web pages across the Internet. It’s also helpful to understand TypeScript, a superset of JavaScript used to write Angular. Learning Angular is even easier if you’re familiar with JavaScript, which is an implementation of ES6 and Angular’s base language.\nWhat is Angular used for?\nDevelopers mainly use Angular to build dynamic single-page applications (SPAs) for web, mobile, and desktop. SPAs are web pages based on a single HTML file that is completely controlled by JavaScript. When an action such as clicking a button happens on the page, the code renders it on the page instantly without sending a new request to the server. TypeScript and Angular’s other tools, including routing, state management, and ROM validation, make SPA creation easy and fast. Its open-source JavaScript framework allows developers to reuse code across multiple platforms. Angular’s component-based architecture simplifies the development workflow, making it possible to design apps for deployment in a wide range of environments and update them without extensive recoding.\nWhat is the difference between Angular and React?\nAngular and React are both rapid application development (RAD) platforms based on JavaScript. Angular is a multilayered framework that runs on Typescript and is compatible with many different code editors. It is a full-featured web development platform that requires no additional libraries. This means Angular can independently carry out a full range of development functions such as data binding, form validation, and dependency injection. First introduced in 2013, React is a JavaScript library managed by Facebook, and it works for both single- and multi-page web applications. React is a framework for UI development that’s smaller and faster than Angular. However, it requires other libraries or modules to provide the full range of Angular’s functions. React is easy to install and use for anyone who already knows JavaScript, and because it operates with a virtual DOM, the browser load reduces. Angular operates with a real DOM, which leads to longer runtimes and slower performance.\nIs Angular free to use and where can I get it?\nAngular has both free and paid options, but the developer doesn’t provide pricing information about its paid version for enterprises and large organizations; this information is only available with a custom quote. Individual users can also obtain Angular for free from the developer site. This open-source software is available under an MIT license granted by Google, which gives permission to use the Angular application for any purpose without limitation. New users can also download a free trial version of Angular from the developer. This version is a ready-made standalone app that contains most key features of the platform, and you can install it on any computer without taking all the steps to create the full Angular environment. The free Angular app allows users to get started by learning Angular’s key features and creating a basic app of their own.\nWhat careers use Angular?\nAngular is one of the most popular web development platforms in use today. Skills in using Angular can be helpful for several careers in fields related to web design and development. Angular skills are most important for careers in practical web development, including specialties like frontend development, which involves designing client-facing web elements such as visual content, UI and UX development, and general software development. Software engineers and site designers can also benefit from learning Angular. It is a JavaScript application, so it’s also useful for JavaScript developers. It’s also possible to create a career around a specialization in Angular development alone. Angular development specialists can work as consultants or independent contractors with multiple organizations needing web development services.\nWhat IDE is best for Angular?\nAn integrated development environment, or IDE, is a software application that consolidates essential web developer tools in a single graphical interface, which streamlines the development process and promotes consistency across all relevant platforms. Many IDEs now support Angular development projects, and there’s an option for every budget. The best paid IDE for Angular is Angular IDE. It was developed especially for the platform, so it supports all its features. Angular IDE is available as a standalone plugin or with an Eclipse plugin. New users can get a 45-day free trial before purchasing. Visual Studio Code is a general-purpose IDE that supports multiple development platforms, including Angular. This free, open-source IDE from Microsoft includes support for TypeScript code and several downloadable Angular plugins.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nFull Stack Web Development with ReactJS, React Native, Angular\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Beginners who wants to be React developer",
        "Anyone who wants to become an React Developer",
        "Anyone who wants to build amazing React single page web applications",
        "Students who want to learn how to build fast single page web apps",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Students who want to take their web development skills to the next level and learn a future-proof technology",
        "People who are willing to make a career in the application world",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in NodeJS",
        "Developers new to NodeJS",
        "Anyone who wants to learn MongoDB",
        "Professionals who are willing to learn MongoDB",
        "People who to become web developer",
        "People who to become mobile developer",
        "People who to become front end web developer",
        "People who to become backend web developer",
        "People who to become full stack web developer",
        "People who to become web developement with react, react native, angular",
        "People who to learn full stack web development",
        "People who to learn full stack web development or mobile app development"
      ]
    },
    {
      "title": "Learn Classic WordPress Theme Development with Bootstrap 5",
      "url": "https://www.udemy.com/course/wordpress-theme-development-course-with-bootstrap-5-2021/",
      "bio": "Learn to Advanced WordPress Theme Development from scratch with Bootstrap 5, ACF, & Custom Post Type Complete In-Depth.",
      "objectives": [
        "Build Custom WordPress Themes from Scratch",
        "Integrated Bootstrap 5 within WordPress Theme",
        "Optimize WordPress Theme for Maximum Speed & Load Time",
        "Learn Different Type of Hooks, Filters and Actions",
        "Learn to Add Custom Logo for WordPress Themes",
        "Build Optimized Search Engine within for WordPress Site",
        "Register & Integrate Bootstrap 5 Navigation System",
        "Learn to Create Posts, Pages, Custom Page Templates",
        "Create Custom Widgets for Your WordPress Theme",
        "Learn to Add Advanced Custom Fields for Posts and Pages",
        "Learn to Add Custom Post Type for Post and Pages"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Learning Resources",
          "Getting The Tools",
          "Setting up Development Environment",
          "Hello World",
          "Creating Theme Screenshot",
          "The Master Plan",
          "Section 1 Quiz"
        ],
        "Building The Home Page": [
          "Structuring The Index page",
          "Adding Custom Logo to Our Theme",
          "Creating a Custom Search Bar",
          "Adding Simple Menu",
          "Adding Images for Banner Slider",
          "Displaying The Post Loop",
          "Creating Home Sidebar",
          "Adding Footer Widgets",
          "Section 2 Quiz"
        ],
        "Styling Home Page": [
          "Registering Style Sheet to WordPress Theme",
          "Styling Container",
          "Creating Styles for Logo",
          "Customizing The Search Bar",
          "Styling The Navigation Bar",
          "Creating Banner Slideshow",
          "Cutomizing Content in Home Page",
          "Styling the Sidebar",
          "Customizing Footer in Home Page",
          "Small Fix for Dropdown Menu",
          "Section 3 Quiz"
        ],
        "Building Theme Files": [
          "Simplifying WordPress Theme",
          "Creating Page Template for all Pages",
          "Creating Post Page & Featured Images",
          "Add Meta Informations & Commenst in Post Template",
          "Creating Other Important Template Pages",
          "Creating Search Results Page",
          "Section 4 Quiz"
        ],
        "Bootstrap 5 Integration": [
          "Setting up New Theme for Bootstrap 5",
          "Integrating Bootstrap 5 in WordPress Theme",
          "Adding Navbar for WordPress Theme",
          "Customizing Navbar",
          "Adding Dynamic Links to Navbar",
          "Adding Search Form to Bootstrap Theme",
          "Section 5 Quiz"
        ],
        "Building Default Page": [
          "Creating Post Loop List",
          "Creating Custom Excerpt Data",
          "Adding Images to Post Loop",
          "Registering The Sidebar",
          "Adding Bootstrap Classes to Widgets",
          "Building The Footer",
          "Section 6 Quiz"
        ],
        "Design & Develop Front-Page": [
          "Assigning a Front-Page",
          "Creating Banner Contents",
          "Creating CTA Form & Button",
          "Designing The Featured Section",
          "Adding Course Category Text Area",
          "Adding Course Category Images & Captions",
          "Displaying The Content Section for Front-Page",
          "Adding Form Functionality to Pop-up",
          "Section 7 Quiz"
        ],
        "Making Page Template with Bootstrap 5": [
          "Creating Banner Section of Page",
          "Creating Page Content & Full-With Template",
          "Adding CTA Section to Pages",
          "Simplyfing Sidebars",
          "Adding Image Styles to Page Content",
          "Adding Blockquote Styles",
          "Adding Code Styles to Page Template",
          "Creating Post Template from Page",
          "Section 8 Quiz"
        ],
        "Creating Additional Theme Pages": [
          "Creating The Category Page",
          "Building The Tag Template",
          "Creating The Author Page",
          "Creating Date Archive Page",
          "Creating Archive & Search Page",
          "Creating The 404 Page",
          "Section 9 Title"
        ],
        "Working with Advanced Custom Fields": [
          "Setting up About Page for ACF",
          "Creating Additional Fields with ACF",
          "Displaying ACF Fields in Front-End",
          "Section 10 Quiz"
        ]
      },
      "requirements": [
        "You need to know basics of HTML5 & CSS3",
        "You need to know basics of Bootstrap",
        "You need to know basics of PHP & MySQL"
      ],
      "description": "Hey guys welcome, first of all, I would like to thank you guys for choosing my course “WordPress Theme Development with Bootstrap 5 (2023)”. It’s a great pleasure for me to teach this awesome course on how to build WordPress Themes from Scratch.\nI have built this course keeping all beginners in mind, which makes this course the most advanced way and the easiest way how you can build fast, secure, and reliable WordPress Themes.\nThe primary focus of this course is to help you understand how WordPress themes work and to help you build any kind of theme you like.\nBefore you can enroll in this course, you need to have some prior skills in PHP and MySQL, this will help you to easily build themes. You also need some prior skills in HTML5, CSS, CSS3, and some JavaScript and jQuery.\nThroughout the course, we will cover how you can build a simple plan first and get a basic and minimal theme setup. The first part of the course covers the basic stuff.\nThe second part is where the real fun begins, we will learn how we can create and set up a custom theme that works with Bootstrap 5 (the Latest CSS framework).\nWe will create default pages, front pages, posts, comments, page templates, and much more. We will also see how we can create a custom Bootstrap 5 Menu that will work flawlessly with our theme.\nWe will get into adding Advanced custom fields to our Page templates, and posts, and we will also earn how we can create custom post types.\nWith the help of ACF (Advanced Custom Fields), we will learn how we can add custom fields to our custom post types. We will use all the learning resources we can via the official WordPress website and build the most advanced WordPress theme.\nThe WordPress Theme which we build is going to be the fastest WordPress theme you have ever seen. I have made sure that we do not use any kind of customization plugins like Page builders and stuff, which will slow down our site. Instead, we will build everything from scratch.\nFinally, we will run a simple test via the GT Metrix to test out WordPress Theme, to check how fast can our WordPress Theme loads in Real-Time.\nI hope you guys would enjoy the course, as much as I have enjoyed building this course for you. If you do have any questions or queries along with the lessons, you can always post them in the Q and A section of the Course.\nI will do my best to resolve any issues you face, or any queries you have as soon as possible. So let’s get started. See you in the course.",
      "target_audience": [
        "Anyone who wants to learn to Build Custom WordPress Themes",
        "Anyone interested to learn to Speedup your WordPress Site",
        "Anyone who wants to improve their skills in WordPress Theme Development",
        "Anyone interested to learn WordPress Theme Development from Scratch"
      ]
    },
    {
      "title": "Mastering Web Performance: From Novice to Expert",
      "url": "https://www.udemy.com/course/identify-and-fix-javascript-memory-leaks/",
      "bio": "Enhance your web app’s performance by writing optimized code and leveraging Chrome DevTools",
      "objectives": [
        "You'll learn how to effectively track web performance down with chrome DevTools.",
        "A brief history of web performance.",
        "The difference in the performance requirements between MPA (Multiple Page Application) and SPA (Single Page Application)",
        "The difference between runtime performance and other kind of web performance.",
        "Learn the signs that your web app is leaking memory.",
        "Learn programming patterns that cause JavaScript memory leaks."
      ],
      "course_content": {
        "The Story Behind this Course": [
          "How this Video Course Reached over 30K Students?"
        ],
        "Web Performance 101": [
          "Introduction",
          "A Little Story",
          "About Me",
          "3 Pillars of Web Performance",
          "What Is Rendering?",
          "Visualization of the Rendering Process",
          "Web Rendering Types",
          "Poor Rendering Symptomes",
          "Poor Rendering Causes",
          "Optimization Techniques",
          "Real World Case Study",
          "Rendering Performance (Issues in the Real-World Case Study)"
        ],
        "Runtime Web Performance: JavaScript Memory Leaks": [
          "What's a memory leak?",
          "Introduction",
          "A brief history of web performance and JS memory leaks",
          "Types of web performance problems",
          "Signs that your web app is leaking memory"
        ],
        "How to identify memory leaks with chrome DevTools": [
          "Performance Timeline Record",
          "Heap Snapshots",
          "Heap Profile",
          "Performance Monitor",
          "Task Manager"
        ],
        "Coding patterns that leak memory in JavaScript": [
          "5 coding patterns that leak memory in JavaScript",
          "Collections",
          "Infinite and detached DOM",
          "Why Misusing setTimeout() and timeout() is a Silent Killer for Web Performance"
        ],
        "Case studies": [
          "Case Study 1: Managing Event Listeners in Form Arrays",
          "Case Study 2: A Web App with a Machine Learning Model to Track Hand Gestures",
          "Case Study 3: A ToDo App with Event Listeners to Changes in a From Array's Field",
          "Build a Registration Form with Accessibility & Performance in Mind",
          "JavaScript's \"this\": The Context Chameleon"
        ],
        "Quiz: Memory Leaks": [
          "Memory Leaks"
        ],
        "Security and Compliance: How to Build Secure Applications": [
          "The State of Software Security",
          "15 Principles for Secure Programming"
        ],
        "Code Duel: AI vs. Human Genius in the Programming Arena (Real-World Case Study)": [
          "Introduction",
          "Description of the Case Study",
          "Required Skills",
          "The Code Duel",
          "Running the Test Scenarios",
          "Comparing the 2 Approaches: ChatGPT Approach",
          "ChatGPT Approach: Web Performance",
          "Comparing the 2 Approaches: The Human Approach",
          "The Human Approach: Web Performance",
          "Final Thought"
        ],
        "Future-Proof Your Software Engineering Career": [
          "Leverage AI, Master Essential Skills, and Build Resilience to Thrive"
        ]
      },
      "requirements": [
        "No prior knowledge of web performance optimisation required.",
        "A bit of knowledge about JavaScript/TypeScript and HTML would be helpful."
      ],
      "description": "Hunting web performance issues is a complex problem with fiendish edge cases, and debugging them can be a daunting task. To avoid such a problem in your app, you need awareness about it and constant vigilance.\nJavaScript memory leaks are sneaky and could be challenging to localize because they can go unnoticed for some time. And even if your performance gets progressively worse, you will not see a thrown error on the browser while running the leaking app. Because it’s not an invalid code that causes such issues, but a logical flaw in it.\nIn this course, we’ll see how to effectively track web performance down and learn what causes them. You’ll get insights on how to respect more the end-user device’s resources. You’ll also avoid situations where you pull your hair out trying to understand what’s going on with your performance.\nI designed this course to suit newcomers as well as advanced developers, and I will walk you through the topic step by step until you get your hands dirty.\nAt the end of the course, you’ll be able to identify, diagnose, and fix web performance issues in web apps even if you’re not the one who implemented them. You’ll be also able to catch patterns in your source code that cause them.",
      "target_audience": [
        "For people who want to optimize their runtime web performance and/or fix memory leaks in their web pages.",
        "For frontend developers who want to know more about web development.",
        "For people who want to have more insights on how to use chrome DevTools."
      ]
    },
    {
      "title": "Learn Bootstrap 4: Create Modern Responsive Websites",
      "url": "https://www.udemy.com/course/learn-bootstrap-4-create-modern-responsive-websites-in-2019/",
      "bio": "Learn to build beautiful modern responsive websites with latest Bootstrap 4.1.3, Grid System, Flexbox, CSS and many more",
      "objectives": [
        "Use Bootstrap 4 with Confidence",
        "Create Beautiful, Polished and Responsive Websites",
        "Master Bootstrap Layout and Responsive Design",
        "Know How Bootstrap Components Works and Apply to Projects",
        "FREE PDF full of Resources for Web Design and Development",
        "Bonus Lesson on How to Design and Code Modern Website Background"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation",
          "How does it work?",
          "Web Design and Development Resource PDF"
        ],
        "Understand and Apply Bootstrap": [
          "12 Column Grid System",
          "Container and Container-Fluid",
          "Colors",
          "Navbar",
          "Download Project Starter Files",
          "Project Intro",
          "Navigation Section",
          "Navbar code into Code Editor",
          "Main Section",
          "Overview Section",
          "Carousel",
          "Testimonial Section",
          "Card",
          "Pricing Section",
          "Call To Action Section",
          "Flexbox",
          "Footer Section",
          "Apollo App. - Finished Project File",
          "Thank You + Special Treat for You!"
        ],
        "Bonus": [
          "How to Create Modern Trending Background with Adobe XD"
        ]
      },
      "requirements": [
        "Basic HTML and CSS",
        "Code Editor",
        "No previous knowledge of Bootstrap required"
      ],
      "description": "11k students and counting!\nHeres' what students are saying:\n************************************\n★★★★★\nGreat discussion, NO boring wait times...He traverses website to website - packing a lot of information into the projects. You see it all, and how to do it yourself. Thanks! - Donald Mathis\n************************************\n★★★★★\nGot to know too many useful references , which will really help me to save time. Very good explanation, straight to the point, great lectures , great experience. Thank you. - Koka Sricharitha\n************************************\n★★★★★\nI loved Bootstrap lessons..earlier I used to code all components of HTML using custom CSS styles and js but now it's very easy to create a website in less time and a very responsive- Anand Prabhakar\n************************************\n★★★★★\nThis is the best tutorial for Bootstrap - Vasudha Mahajan\n************************************\n\n\nLearn Bootstrap 4: Create Modern Responsive Websites in 2019\nLearn to build beautiful modern responsive websites with the latest Bootstrap 4.1.3, Grid System, Flexbox, CSS and many more.\nMy approach is simple and I follow Learn and Apply techniques where we learn new things and apply that right away in our project so we have a better understanding of how it affects real-world projects. The course consists of all the latest tools and techniques modern websites use with Bootstrap.\nFor getting most out of the course, I also made a PDF resource handbook for students to go up and beyond the project that we are going to look at as the handbook consists of many resources that I use on a daily basis to make top-notch designs.\nLesson Plan:\nIntroduction\nBootstrap Layout Grid\nColors\nNavbar\nProject Introduction\nNavigation Section\nMain Section\nOverview Section\nCarousel\nTestimonial Section\nCard\nPricing Section\nCall to Action Section\nFlexbox in Bootstrap\nFooter Section\nBonus Includes:\nLessons on Design & Code a beautiful background\nResource Handbook in PDF\n\n\nWhy is this course different?\nWe start slow and then progress\nQuality presentation slides for clear understanding\nResource Handbook with up-to-date and useful contents\nAll Lectures are straight to the point - minimizing effort and maximizing the result\nLearn by working and creating as we go, not by memorizing then creating something at the very end!",
      "target_audience": [
        "Beginner Front-End Developer who want to build responsive app faster and simpler.",
        "Students who want to take their Responsive Design to a new level with Bootstrap 4",
        "Students who are looking to build for fresh and modern designed website",
        "Students who want to learn and apply Bootstrap 4 to their projects",
        "Students who want to apply modern components that new startup companies require"
      ]
    },
    {
      "title": "Next JS ChatGPT clone with Next.JS & OpenAI (NextJS 13 2023)",
      "url": "https://www.udemy.com/course/nextjs-chatgpt/",
      "bio": "Use Next JS + OpenAI to build a ChatGPT clone, incl. mongodb, edge functions, auth0, tailwind css + more! (Next JS v13)",
      "objectives": [
        "Increase your value as a web developer by learning how to build AI powered apps",
        "Build a ChatGPT clone with OpenAI and Next JS",
        "Implement user accounts in your Next JS apps with Auth0",
        "Style your Next JS apps with Tailwind CSS",
        "Store chat history for your ChatGPT clone with MongoDB",
        "Deploy to production using Vercel and utilise edge functions to stream data back from OpenAI, just like ChatGPT!"
      ],
      "course_content": {
        "Introduction": [
          "Important! Read this before you start the course! (Github repo etc)",
          "Introduction",
          "Project setup",
          "Udemy ratings & reviews",
          "Set up the chat route / page"
        ],
        "Authentication & authorization with Auth0": [
          "Set up auth0 for authentication",
          "Create auth api routes",
          "Set up the login and logout state",
          "Style the homepage with tailwind css",
          "Implement signup functionality",
          "Redirect to chat page if logged in"
        ],
        "Build out the chat page": [
          "Create the basic chat page layout",
          "Create the ChatSidebar component and add the logout link",
          "Create the footer and message form"
        ],
        "Build the OpenAI streaming functionality": [
          "Create an OpenAI API key",
          "ISSUES WITH OPENAI",
          "Create the sendMessage endpoint",
          "Set up the OpenAI API call",
          "Stream the OpenAI response on the front end",
          "Create the Message component and display new messages in chat window",
          "Finish implementing the Message component styles and logic",
          "Protect the chat routes and pages so only logged in users can access",
          "Add the loading state to the form",
          "Refine the OpenAI prompt",
          "Fix the footer form position and make chat window scrollable"
        ],
        "Storing chats with MongoDB": [
          "Overview of edge functions",
          "Set up MongoDB Atlas account",
          "Set up the createChat endpoint",
          "Test the createChat endpoint",
          "Create the getChats endpoint",
          "Render the list of chats in the sidebar",
          "Style the chat list in the sidebar",
          "Implement creating a chat in the sendMessage endpoint",
          "Create the addMessageToChat endpoint",
          "Navigate to newly created chat page",
          "Reload chat list on route change",
          "Load chat messages for a particular chat",
          "Render chat messages for a particular chat",
          "Modify the sendMessage endpoint to cater for existing chats",
          "Implement conversation history in OpenAI"
        ],
        "UI Updates": [
          "Fix streaming on wrong chats",
          "Auto-scroll when there's an incoming message",
          "Add Google font for our app",
          "Add missing styles for homepage",
          "Add UI for new chat"
        ],
        "Validation": [
          "Validate chat id for chat id page",
          "Add validation to sendMessage endpoint",
          "Add validation to createNewChat endpoint",
          "Add validation to addMessageToChat endpoint"
        ],
        "Deploy": [
          "Deploy to vercel",
          "BONUS!"
        ]
      },
      "requirements": [
        "Basic understanding of React is required - everything else is covered!"
      ],
      "description": "Don't get left behind! Increase your value as a web developer today by learning how to build AI powered web apps!\nPlease note this course uses the Next JS pages router.\nWelcome to the ultimate course on how to build your very own ChatGPT clone!\nIn this course, you'll learn how to create \"Chatty Pete\", a powerful chatbot with the same capabilities as ChatGPT, that uses Next.js v13, OpenAI's GPT API, Next JS edge functions to stream chat responses, MongoDB for data storage, Auth0 for user authentication and user accounts, and Tailwind CSS for beautiful layouts and styling. We'll end the course by deploying our app live to production, hosted on Vercel.\nYou will be guided through every step of the development process, from setting up your Next JS development environment to deploying your finished ChatGPT chatbot clone to the web using Vercel. You'll learn how to create conversational interfaces, process user input, and generate natural language responses using OpenAI's powerful ChatGPT language models. You'll also learn how to utilise Next JS edge functions to stream data back from the OpenAI API, exactly the same as how ChatGPT does it!\nWith MongoDB, you'll learn how to store and retrieve chat history, while implementing Auth0 within your Next JS app will enable you to add user accounts and secure your application with user authentication and authorization. Finally, you'll use Tailwind CSS to create a stunning user interface within Next JS that looks great on any device.\nThis course is perfect for developers who want to expand their skillset and learn how to build complex web applications using the latest technologies. Whether you're a seasoned web developer or just starting out, the step-by-step approach and easy-to-follow instructions in this ChatGPT clone course with Next.js will help you master the skills you need to build your very own ChatGPT clone.\nSo why wait? Sign up now and start building your own ChatGPT clone today!",
      "target_audience": [
        "React developers who want to increase their value as a developer by learning how to create SAAS products and start leveraging the power of AI"
      ]
    },
    {
      "title": "Intermediate Three.js with Shaders",
      "url": "https://www.udemy.com/course/intermediate-threejs-with-shaders/",
      "bio": "Create an interactive 3d globe with custom ThreeJS shaders",
      "objectives": [
        "Create and understand ThreeJS shader composition and setup",
        "How to import textures into your shader to create a globe",
        "How to create vertex and fragment shaders",
        "How to import shaders into a vite project",
        "Understand complex 3D terms like normals, attributes, varyings, and UVs",
        "How to draw interactive data points onto a globe with latitude and longitude",
        "How to import bulk data and read it onto a scene",
        "How to animate generated meshes with GSAP",
        "How to add click and drag functionality to the globe",
        "How to scale a 3D scene for smaller screen sizes",
        "How to add mobile event listeners"
      ],
      "course_content": {
        "Create An Interactive Globe with Custom Shaders": [
          "Introduction",
          "Create a Sphere",
          "Map Texture Onto Sphere",
          "Sharpen Rendering",
          "Create A Vertex Shader",
          "Create A Fragment Shader",
          "Modify Vertex Shader for Use With Three.js",
          "Add Texture to Fragment Shader",
          "Add Blue Shade to Earth Texture",
          "Add Atmosphere",
          "Add Mouse Movement Interaction",
          "Add Background Stars",
          "Add HTML & CSS"
        ],
        "Add Interactive Data Points to Show Country Population": [
          "Placing Points with Latitude and Longitude",
          "Maintain Canvas Size on Refresh",
          "Always Show Globe on Refresh",
          "Replace Points with Rectangular Prisms",
          "Animate Prisms with GSAP",
          "Create Data Labels on Mouse-Over",
          "Insert Bulk Country Data",
          "Click and Drag Functionality",
          "3D Scene Responsiveness",
          "Mobile Event Listeners"
        ]
      },
      "requirements": [
        "You must have development environment with ThreeJS setup already - I use Vite here for mine, which you can learn how to do by taking my Modern ThreeJS course also on Udemy",
        "Vite with ThreeJS installed is recommended for a frontend server, but not required",
        "ThreeJS version ^0.128.0 is recommended (it's what's used in the course), but not required",
        "You should have a basic math background (the basics of matrices are covered, but not to the detail of a math course)"
      ],
      "description": "PLEASE READ: This is a freemium course—the first hour and a half are free (you can watch right here on Udemy [or YouTube] with each video's \"Preview\" button), while the remaining 3 hours require course purchase. I've always been a big advocate of spreading the basics to as many people as possible, as I believe knowledge and personal growth are some of the best ways to better our world as a whole. Enjoy.\nWelcome to the Intermediate ThreeJS with Shaders course, where you will learn how to create an interactive 3d globe with custom ThreeJS shaders.\nMy name is Christopher Lis, and I'm an award winning Full-Stack Engineer with over ten years of web development experience. I've directly worked with clients like Harvard University, The Basketball Tournament, and premium award winning agencies like Brave People.\nThe goal of this course is to get you writing your own custom ThreeJS shaders with GLSL, and to help you understand how to import these shaders into a practical ThreeJS scene. You'll also learn how to dynamically place data points on a globe based on the latitude and longitude of different countries. There are little to no videos out there that actually go into this topic in-depth so I figured I should tackle it.\nIn this course, you'll learn everything from:\n\n\n- Vertex Shaders\n- Fragment Shaders\n- Import Shaders with Vite Plugins\n- Normals\n- Uniforms\n- Attributes\n- Varyings\n- Point clouds and particles\n- Bulk Data Imports\n- Rectangular Mesh Animation\n- Click and Drag Functionality\n- Scene Responsiveness\n- Touch Event Listeners\n\n\nAnd so much more.\nIf you're serious about taking your ThreeJS skills to the next level, then shaders are logically the next step after become acquainted with the framework. Let me guide you through the full production of a 3d scene you can actually use for a real website.",
      "target_audience": [
        "Intermediate ThreeJS Developers who know how to create scenes with materials, geometries, and meshes"
      ]
    },
    {
      "title": "Mastering JavaScript and jQuery Course Beginners to Advanced",
      "url": "https://www.udemy.com/course/mastering-javascript-and-jquery-course-beginners-to-advanced/",
      "bio": "Create Dynamic Interactive Website With JavaScript & jQuery Coding.",
      "objectives": [
        "Learn JavaScript and jQuery from scratch",
        "Create Dynamic HTML pages with JavaScript and jQuery",
        "Add beautiful effects & animations to your sites",
        "Build professional user interfaces",
        "JavaScript Modules",
        "Functional Programming",
        "All about variables, functions, objects and arrays",
        "Complete Code demonstrated in lecture",
        "Manipulating web pages (DOM) with JavaScript",
        "Create dynamic websites that users enjoy",
        "Build high performing JavaScript and jQuery applications"
      ],
      "course_content": {
        "JavaScript": [
          "Dom Css",
          "Dom document",
          "Dom Elements",
          "Dom event Listener",
          "Dom Event",
          "Dom Forms",
          "Dom Method",
          "Dom Navigation",
          "Dom Node List",
          "Function Bind",
          "Function Closures",
          "Function Definitions",
          "Function Parameters",
          "Function",
          "html dom",
          "Iterables",
          "JSON",
          "Let",
          "Loop for in",
          "Loop for",
          "HTML DOM Elements"
        ],
        "jQuery": [
          "Introduction of Siblings",
          "Filtering",
          "jQuery - AJAX Introduction",
          "jQuery - AJAX load() Method",
          "jQuery - AJAX GET and POST Methods",
          "noConflict() Method",
          "Filters",
          "Moving Elements"
        ]
      },
      "requirements": [
        "No prior coding experience is required"
      ],
      "description": "Learn everything you need to know to become a JavaScript and jQuery expert, from the very basics to advanced concepts.\n\n\nJavaScript is the most popular programming language in the world, and jQuery is the most popular JavaScript library. Together, they are used to create dynamic and interactive web pages and web applications.\n\n\nAre you ready to master the dynamic duo of web development? The \"Complete JavaScript and jQuery Course\" is your all-access pass to becoming an expert in two of the most influential and widely-used scripting languages for creating interactive and feature-rich websites. Whether you're a web development novice or a seasoned coder looking to enhance your skills, this course offers a comprehensive journey through JavaScript and jQuery, empowering you to build web applications that shine.\n\n\nJavaScript is the backbone of modern web development, enabling you to create dynamic and interactive web pages, while jQuery is a powerful library that simplifies and enhances JavaScript programming. In this meticulously designed Udemy course, we take you through the entire spectrum of JavaScript and jQuery, helping you gain a deep understanding and hands-on experience to build impressive web applications.\n\n\nWhat You'll Learn:\n\n\nIntroduction to JavaScript and jQuery: Get acquainted with JavaScript's significance in web development and jQuery's role as a powerful library.\n\n\nSetting Up Your Development Environment: Learn how to set up a JavaScript and jQuery development environment on your computer, ensuring you're equipped to write and run code.\n\n\nBasic JavaScript Syntax: Dive into the fundamentals of JavaScript, including variables, data types, and the essential syntax of the language.\n\n\nControl Structures: Explore conditional statements, loops, and decision-making in JavaScript programs.\n\n\nFunctions and Modular Programming: Master the art of creating functions and using modular programming principles to build organized and maintainable code.\n\n\nThe Document Object Model (DOM): Understand how to manipulate HTML documents and interact with web page elements using JavaScript.\n\n\njQuery Fundamentals: Delve into the power of jQuery, including selectors, animations, and handling DOM elements with ease.\n\n\nAsynchronous JavaScript and AJAX: Explore asynchronous programming, including making requests to external servers and fetching data dynamically.\n\n\nError Handling: Discover how to handle errors gracefully, improving the robustness of your code.\n\n\nWhy Take This Course?\n\n\nHands On Coding Exercises: Gain practical experience through coding exercises and real world projects, ensuring you can apply your knowledge effectively.\n\n\nLifetime Access: Enroll once, and enjoy lifetime access to the course materials, allowing you to revisit and reinforce your skills at your own pace.\n\n\nCertificate of Mastery: Receive a certificate of completion that validates your JavaScript and jQuery expertise, enhancing your professional profile.\n\n\nWhether you're aspiring to become a web developer, enhance your web development skills, or create interactive and engaging web applications, the \"Complete JavaScript and jQuery Course\" is your gateway to success. Enroll today and start your journey to becoming a JavaScript and jQuery expert! Your path to web development excellence begins here.",
      "target_audience": [
        "Who wants to learn to use JavaScript and jQuery",
        "Front End Developers",
        "who want to learn how to build their first JavaScript Application"
      ]
    },
    {
      "title": "JavaScript Masterclass for Beginner to Expert: Bootcamp",
      "url": "https://www.udemy.com/course/javascript-course-for-beginner-to-expert-data-visualization/",
      "bio": "The JavaScript course for everyone! Master in JavaScript with Data Visualization, Validations!",
      "objectives": [
        "Become an advanced, confident JavaScript developer from scratch",
        "Become job-ready by understanding how JavaScript really works behind the webpage",
        "JavaScript fundamentals: variables, if/else, operators, boolean logic, functions, arrays, objects, strings, control flow loops, etc.",
        "How to think and work like a developer: problem-solving, researching, workflows",
        "Data Visualization: Using Google Charts to create line graph, scatter plots, bar, pie, 3D pie charts, etc.",
        "Client-side Validations: On Submit, input, login form, password strength check, etc.",
        "Error Handling: How to apply try catch finally block coding to handle real-time errors.",
        "ChatGPT + JavaScript basic Calculator program creation idea and apply",
        "learn What is Generative AI for prompt engineering",
        "participate on Coding Exercise and test your skills"
      ],
      "course_content": {
        "Introduction Getting Started": [
          "Introduction to Getting Started",
          "Course Curriculum",
          "How to Get Pre-Requisites",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "ChatGPT + JavaScript Calculator program (Learn to Master in JavaScript)",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Setting up Local Development Environment": [
          "What is JavaScript",
          "Choosing Code Editor",
          "Installing Code Editor(Sublime Text)",
          "Installing Code Editor(Visual Studio Code)",
          "Hello World Program",
          "Getting Output",
          "Summary"
        ],
        "JavaScript Fundamentals": [
          "Introduction",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer",
          "Variables",
          "Data Types",
          "Numbers",
          "Boolean",
          "Arrays()",
          "Objects",
          "Comments",
          "Summary",
          "create variables"
        ],
        "JavaScript Strings": [
          "Introduction",
          "Strings",
          "String Formatting",
          "String Methods",
          "Summary"
        ],
        "JavaScript Operators": [
          "Introduction",
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators",
          "Summary"
        ],
        "JavaScript Conditional Statements": [
          "Introduction",
          "If statement",
          "If-else statement",
          "If-else-if statement",
          "Switch-case statement",
          "Summary"
        ],
        "JavaScript Control Flow Statements": [
          "Introduction",
          "While loop",
          "Do-while loop",
          "For loop",
          "Break",
          "Continue",
          "Coding Exercise",
          "Solution for Coding Exercise",
          "Summary"
        ],
        "JavaScript Functions": [
          "Introduction",
          "Creating a Function",
          "Function Call()",
          "Function with parameters",
          "Function Bind()",
          "Summary"
        ],
        "Data Visualization (Google Chart)": [
          "Introduction",
          "How to Use Google chart script",
          "Line Graph chart",
          "Scatter plots chart",
          "Bar chart",
          "Pie chart",
          "3D Pie chart",
          "Summary"
        ],
        "JavaScript Error Handling": [
          "Introduction",
          "Try-catch",
          "Try-catch-finally",
          "Summary"
        ]
      },
      "requirements": [
        "Any computer and OS will work - Windows, macOS or Linux. We will set up your text editor the course.",
        "No coding experience is necessary to take this course! I take you from beginner to expert in JavaScript!",
        "A basic understanding of HTML and CSS is knowing benefit, but not a must!",
        "No Programming experience is needed. You will learn from scratch"
      ],
      "description": "Unlock your full potential in web development with \"JavaScript Masterclass for Beginner to Expert: Bootcamp.\" This comprehensive course is designed to take you from a complete beginner to a confident JavaScript developer, mastering one of the most popular and versatile programming languages used to build dynamic, interactive websites and applications.\n\n\nStarting with the basics, you'll learn JavaScript syntax, variables, data types, operators, and functions. As you progress, you’ll dive deeper into key concepts such as loops, conditionals, arrays, and objects, which form the foundation of any JavaScript application. You'll also explore more advanced topics like asynchronous JavaScript, closures, event handling, and working with real-time scenarios.\n\n\nThe course takes a hands-on approach, with practical exercises and real-world projects that help you apply what you’ve learned. You’ll create interactive websites, build games, and learn how to manipulate the DOM (Document Object Model) to make your web pages dynamic. Along the way, you’ll gain a solid understanding of JavaScript frameworks like Node.js and libraries like jQuery, which will enhance your development skills and expand your career opportunities.\n\n\nBy the end of this bootcamp, you'll have the expertise to write efficient, clean JavaScript code, solve complex problems, and build modern web applications. Whether you're aiming to become a front-end developer, full-stack developer, or just want to add interactivity to your projects, this course is your pathway to success.\n\n\nEnroll now and master JavaScript from scratch, step by step!",
      "target_audience": [
        "Beginner JavaScript developers curious about web development",
        "Take this course if you want to gain a true and deep understanding of JavaScript",
        "Take this course if you want to get started with programming: JavaScript is a great first language!",
        "Who wants to master in Data Visualization and Client-side validations",
        "Anyone wants to learn front-end programming",
        "Anyone wants to become a freelancer on development"
      ]
    },
    {
      "title": "Wordpress Theme Development with Twig and Timber",
      "url": "https://www.udemy.com/course/wordpress-theme-development-with-twig-and-timber/",
      "bio": "Easily learn to create themes in HTML style. Clean and readable code with modern approach. Even without PHP knowledge.",
      "objectives": [
        "Wordpress Theme Development",
        "Twig and Timber"
      ],
      "course_content": {
        "Introduction": [
          "About this course",
          "How does this system work?",
          "Demonstration"
        ],
        "Environment": [
          "Local",
          "VS Code",
          "Composer"
        ],
        "Twig and Timber": [
          "About Twig and Timber",
          "Instruction",
          "Twig - variables",
          "Twig - data types - string, number, boolean, null",
          "Twig - data types - array, hash",
          "Twig - block, extends, parent - template inheritance",
          "Twig - if statement - conditional logic",
          "Twig - ternary operator - conditional logic",
          "Twig - for loop",
          "Twig - more about for loop",
          "Twig - macro and include - reusable templates",
          "Twig - more about macro",
          "Twig - templating example",
          "Twig - filters",
          "Twig - functions",
          "Twig - operators",
          "Twig - truthy and falsy values",
          "Twig - comments and debugging",
          "Timber - basics",
          "Timber - context",
          "Timber - adding variables to the context",
          "Timber - features",
          "Timber - starter theme"
        ],
        "Website - Practice part": [
          "Introduction",
          "Configuration",
          "Bootstrap",
          "Importing data",
          "Navigation bar",
          "News - page template",
          "News - terms",
          "News - pagination",
          "News - breaking news",
          "News - single post template - part 1",
          "News - single post template - part 2",
          "Archive",
          "Subheader - part 1",
          "Subheader - part 2",
          "People - page template",
          "People - person post template - part 1",
          "People - person post template- part 2",
          "Places - page template - part 1",
          "Places - page template - part 2",
          "Home - top story and featured news",
          "Home - latest news",
          "Home - duplicated posts",
          "Home - promoted people",
          "Search form and template",
          "Footer"
        ],
        "Extra": [
          "Deployment",
          "Macro example",
          "Extends - additional 3rd level",
          "Options page with ACF",
          "Bootimber"
        ]
      },
      "requirements": [
        "Basic HTML / CSS knowledge"
      ],
      "description": "Important: Course has been updated in July 2020. Chapter 3 and 4 are live with more information and also increased font size.\n--------------------------\nDefault WordPress templating system has some weaknesses. I will show you how to use Twig and Timber to create themes with modern approach where template is separated from the controller, templates are clean and readable just like in HTML with some extra features.\nYou will learn basics about Twig and Timber and how to use it in WordPress. As the project we are going to create a website from scratch using this environment. PHP and Bootstrap knowledge is useful bot not required. The only requirement is basic knowledge about HTML and CSS to understand the code.\nAdditional information:\nThis course is more like an introduction, we are going to stay near the beginner level for most of the time. It is not a full guide covering all features of Twig or Timber.",
      "target_audience": [
        "Developers that don't know PHP and want to create Wordpress theme.",
        "Developers that know PHP and search for better experience in creating Wordpress themes."
      ]
    },
    {
      "title": "Build Job-Winning MERN & React Projects to Land Dream Jobs",
      "url": "https://www.udemy.com/course/building-a-full-stack-mern-e-commerce-website/",
      "bio": "This is a Build Real-World React & MERN Projects base Course to Boost Your Portfolio, Impress Recruiters, and Get Hired!",
      "objectives": [
        "Build a Full-Stack Application: Develop a complete e-commerce website using the MERN stack.",
        "Implement Advanced E-commerce Features: Create category filtering, color selection, pricing filters, and an efficient shopping cart with calculation capabilitie",
        "Integrate Payment Systems: Set up Stripe for secure online payments and handle order tracking with status updates.",
        "Develop User Dashboards: Design a user dashboard where customers can view orders, payment history, submit reviews, and update profiles.",
        "Create an Admin Dashboard: Build a fully functional admin panel to manage inventory, products, orders, and users, including the ability to upload images etc.",
        "Secure Applications: Implement authentication and authorization using JWT and password hashing with bcrypt, ensuring data security.",
        "Deploy and Maintain Applications: Understand how to deploy your MERN stack application and maintain it for real-world use."
      ],
      "course_content": {
        "Modern Landing Page Design with React, Tailwind CSS, Framer Motion and Swiper JS": [
          "Project Overview of Modern Landing Page",
          "Setup Your First React Project using Vite",
          "Install Tailwind CSS",
          "Create Navbar Component",
          "Make Mobile Responsive Navbar with Toggle Menu",
          "Hero Section",
          "Apply Background Gradient Color on Hero Section",
          "Company Logo Animation Section",
          "Purpose Section",
          "Features Section",
          "Schedule Section",
          "Pricing Section",
          "Services Section",
          "Testimonials Section",
          "Newsletter section",
          "Footer Section",
          "Apply Framer Motion Animation",
          "Deploy Project on Vercel",
          "Download Source Code"
        ],
        "Basic II: Desgin Stunning Landing Page using React 19 and Tailwind CSS": [
          "Project Setup",
          "Install Taiwlind CSS to Your Project",
          "Setup React Router to Implement Routing",
          "Create a Navbar Component",
          "Desktop Menu Design",
          "How to Show Dropdown Menu",
          "Menu Buttons and Mobile Menu",
          "Make Mobile Responsive Menu with Toggle Functionality",
          "Hero Section",
          "Company Logos Animation with Gradient Blur Effect",
          "Features Section using Grid Layout",
          "Design section with Implement Accrodian Tabs Logic",
          "Display Tabs Data with Progress bar and Video Play Pause",
          "Customer Review Video Presentation",
          "About Section with Sticky Image and Texts",
          "Try Now Section",
          "Footer Section",
          "Deploy Your Project on Vercel",
          "Download Source Code"
        ],
        "Basic III: Task Manager (React + Redux Toolkit + Local Storage)": [
          "Task Manager App Overview",
          "Create a React 19 Project",
          "Install Tailwind CSS v4.0",
          "Install Redux Toolkit and Setup Redux Store",
          "Create a Redux State Slice for Tasks Logic",
          "Task Form to Add New Tasks",
          "Display Task Lists",
          "Toggle Task Completed or Pending",
          "Edit, Save and Delete Task Feature",
          "Search and Filtering Tasks Functionality",
          "Download Source Code"
        ],
        "Full-stack Blog Website using Next.js, TypeScript, Clerk, MongoDB & Tailwind CSS": [
          "Project Introduction"
        ],
        "Portfolio Website using Next.js, TypeScript, Tailwind CSS & Framer Motion": [
          "Devfolio Portfolio Website Intro",
          "Setup Next.js 15 Project",
          "Customize Your Project",
          "Routing System in Next js",
          "Create Navbar Component",
          "Responsive Mobile Menu",
          "Implementing Theme Context",
          "Hero Section",
          "Featured Projects Section",
          "Latest Blogs Section",
          "Newsletter Section",
          "Footer Section",
          "About Page",
          "Project Page and Blog Page",
          "Contact Page",
          "API Routes and Post Request to Submit Form",
          "Apply Framer Motion Animation",
          "Production Build and Deploy Your Project",
          "Download Source Code"
        ],
        "Full-stack MERN E-commerce Project": [
          "Introduction",
          "Admin Dashboard Overview",
          "Project Setup",
          "Install Tailwind CSS",
          "Customize your project",
          "Setup React Router Dom",
          "Create a Navbar Component",
          "Hero Banner section",
          "Home Categories",
          "Second Hero Section",
          "Trending Products",
          "Deals Section",
          "Promotional Banner",
          "Home Blogs Section",
          "Footer Section",
          "Category Page",
          "Search Page Functionality",
          "Shop Page",
          "Single Product page",
          "Install Redux Toolkit and Create Cart Slice",
          "Show Cart Modal",
          "Order Summary",
          "Update Quantity, Remove From Cart, Clear Cart functionality",
          "Create Login Page",
          "Register Page",
          "Setup Basic Express Js Server",
          "Install Mongodb and Mongoose",
          "Install dotenv, cors, cookie parser and body parser packages",
          "Create a User Schema and Model",
          "Create User Routes",
          "How to hash password",
          "Create Login Routes",
          "Generate JWT (JSON Web Token) token",
          "Verify Token Middleware",
          "Logout, Delete User and Get all Users Routes",
          "Update User Role",
          "Update User Profile",
          "authApi using RTK Query",
          "authSlice for Logged in user",
          "Logout, Delete, Update Role and Profile auth",
          "Navbar Dropdown Menus",
          "Create Product Schema and Model",
          "Create Reviews Shcema and Model",
          "Create a Product route",
          "Get all Products routes",
          "Get a Single Product by Id routes",
          "Update, Delete and Related Products route",
          "Verify Admin middleware",
          "Create Product Api using RTK Query",
          "Update Shop Page and Show Pagination",
          "Show Single Product Details",
          "Create a Post Review Routes",
          "Total Reviews count and Get Reviews by User id",
          "Create ReviewApi using RTK Query",
          "Show reviews on Product Details Page",
          "Post A New Review",
          "Create Order Schema and Model",
          "Create a Stripe Checkout Session",
          "Create Stripe Confirm Payment route",
          "Make a payment using Stripe card",
          "Payment Success page",
          "User Dashboard Stats",
          "Admin Dashboard Stats",
          "Get orders, update and delete orders route",
          "Setup Dashboard Routes",
          "Create Private Route",
          "Dashboard Layout",
          "User Dashboard",
          "Admin Dashboard",
          "Stats Api using RTK Query",
          "User Dashboard Main",
          "User Orders",
          "Order Tracking System",
          "User Payement page",
          "User Reviews section",
          "How to Update User profile",
          "Admin Dashboard Design",
          "Pie and Line Charts to Present data",
          "Add Product Page Design",
          "Upload Image using Cloudinary and Post a New Product",
          "Manage or Delete Products",
          "Update Product Data",
          "User Role Management",
          "Order Management",
          "Source Code and Why to Use",
          "How to Deploy Your Project on Vercel",
          "Final Test"
        ]
      },
      "requirements": [
        "Basic Knowledge of JavaScript: Familiarity with JavaScript concepts, ES6+ syntax, and basic programming principles.",
        "Understanding of HTML and CSS: Ability to build and style web pages using HTML and CSS.",
        "Experience with React: Prior experience with React is recommended, as the course builds upon React fundamentals."
      ],
      "description": "Full-Stack MERN & React Projects: Build Portfolio & Get Hired!\nAre you ready to land your dream job as a web developer? This project-based course will help you build real-world React and MERN stack projects that make your resume stand out and impress recruiters!\nWhat You’ll Learn:\nMaster React, Redux, Node js, Express, MongoDB\nBuild stunning real-world projects that showcase your skills\nImplement authentication, payments, real-time features, and APIs\nLearn best practices for scalable, production-ready applications\nOptimize your projects for performance, SEO, and security\nGet resume, portfolio, and job interview tips\nProjects You’ll Build are listed bellow:\n1. Beginner-Friendly (Solid Foundation)\nModern Landing Page Design (React, Tailwind CSS, Framer Motion & Swiper JS)\nFully Responsive Landing Page (React 19 + Tailwind CSS v4)\nTask Manager (React + Redux Toolkit + Local Storage)\nWeather App (React + OpenWeather API)\nBlog App (MERN + Markdown Support)\n2. Intermediate-Level (Resume Boosters)\nE-commerce Platform (MERN + Stripe for Payments)\nChat Application (React + Firebase/Socket io)\nNetflix Clone (React + TMDB API + Firebase Auth)\n3. Advanced Projects (Get Hired Faster)\nJob Portal (MERN + Web Scraping + AI Resume Parsing)\nSaaS Dashboard (React + Next js + GraphQL + Prisma)\nAI-Powered Image Generator (MERN + OpenAI API)\nStock Trading App (MERN + WebSockets + Chart js)\nWho is this course for?\nAspiring developers looking to build an impressive portfolio\nBootcamp & CS students preparing for job interviews\nFreelancers & career switchers aiming for high-paying jobs\nAnyone who wants to build & deploy full-stack web applications\nBy the end of this course, you'll have multiple job-ready projects to showcase in your portfolio and the confidence to ace technical interviews!",
      "target_audience": [
        "Aspiring Full-Stack Developers: Ideal for those looking to expand their knowledge and skills in full-stack development using the MERN stack.",
        "Seeking intenship or job, this advanced ecommerce project will help you to get an interview or call",
        "Frontend Developers: React developers wanting to dive deeper into backend development and learn how to integrate their frontend skills with a powerful backend.",
        "Backend Developers: Node js or Express js developers interested in building a complete application",
        "Entrepreneurs and Product Developers: Individuals looking to create a fully functional e-commerce platform for their business ideas.",
        "Students and Learners: Anyone interested in mastering the MERN stack and building scalable, production-ready applications."
      ]
    },
    {
      "title": "JSON For Beginners: A Very Basic Introduction",
      "url": "https://www.udemy.com/course/json-for-beginners-a-very-basic-introduction/",
      "bio": "Learn the very basics of JSON and how it create it's own Objects and Arrays to display data",
      "objectives": [
        "Write your own JSON Syntax",
        "Ability to identify Objects in a JSON syntax",
        "Ability to identify Arrays in a JSON syntax",
        "Create JSON object",
        "Know about variables",
        "Know about functions in javascript",
        "Understand Javascript operators"
      ],
      "course_content": {
        "JSON: The Basics": [
          "Introduction",
          "What is JSON",
          "NotepaD++ Text Editor",
          "Javascript Operators",
          "Javascript Functions",
          "Javascript Variables",
          "How to write JSON Syntax",
          "How to create a JSON Object",
          "Thank You"
        ]
      },
      "requirements": [
        "Notepad++ Text editor is used in this course but you can use whatever text editor you are comfortable with."
      ],
      "description": "JSON stands for JavaScript Object Notation. It is a very popular and widely used data format. It is platform neutral which means it will work with any programming language and operating system. It is a light weight format with the ability to convert to native JavaScript objects.\nJSON is a bit like XML but simpler and shorter to write. The syntax used is similar to that used by JavaScript . Knowing some JavaScript will be useful hence I have included some lectures like JavaScript variables, operators and functions. JSON can be parsed or interpreted using JavaScript functions so having a basic understanding of JavaScript functions will help when the functions are used to translate JSON.\nThis is a short video based course of less than 90 minutes long to introduce you to JSON and learn especially how to write and understand JSON syntax. JSON isn't really a programming language in its own right, it's more of a data format so understanding some JavaScript concepts will help you understand JSON. A basic knowledge of JavaScript is advised but I have included some useful JavaScript concepts like variables, functions and operators to guide you.\nWhat you will learn in this course:\nWhat is JSON\nJSON Syntax\nJavaScript Variable\nJavaScript Operators\nJavaScript Functions\nHow to create JSON objects",
      "target_audience": [
        "This course is meant for those new to JSON syntax. This course is probably not for you if you are an experienced Programmer with Javascript or other major languages."
      ]
    },
    {
      "title": "Code Bootcamp : Learn to code by building 20 real projects",
      "url": "https://www.udemy.com/course/code-bootcamp-learn-to-code-by-building-20-real-projects/",
      "bio": "Build real projects using HTML, CSS, Python, and JavaScript",
      "objectives": [
        "Build projects with HTML | CSS | JavaScript",
        "Build Projects with Python",
        "Build an Analogue Clock",
        "Build a Loan | Mortgage Calculator",
        "Build a quote of the day app",
        "Build a BMI Calculator",
        "Build a Digital Calculator",
        "Build a Contact Form",
        "Build a Todo List App",
        "Build an Interactive Quiz App",
        "Build a Countdown Timer",
        "Build a Number Guessing Game",
        "Build a Currency Converter App",
        "Build a Music Player App",
        "Build a Random Password Generator",
        "Build an Image Slider App",
        "Build a Text to Speech App",
        "Build a Lottery Numbers Simulator App",
        "Build a Screen Break App",
        "Build a Random Number Generator"
      ],
      "course_content": {
        "Introduction to HTML | CSS | JAVASCRIPT": [
          "Introduction",
          "Core Web Programming Languages",
          "What is HTML",
          "What is CSS",
          "What is JAVASCRIPT",
          "Installing a Text Editor"
        ],
        "Build an Analogue Clock": [
          "What we will create",
          "Creating project folder and structure",
          "What is HTML Canvas",
          "Creating the Canvas Object",
          "Creating the clock face",
          "Drawing the clock numbers",
          "Drawing the time and hand",
          "Project Code"
        ],
        "Build a Mortgage | Loan Calculator": [
          "What we will create",
          "Creating project folder and structure",
          "Adding the logic",
          "Adding CSS",
          "Project Code"
        ],
        "Build a Quote of the day app": [
          "What we will create",
          "Creating project folder and structure",
          "Adding CSS",
          "Adding JavaScript",
          "Project Code"
        ],
        "Build a BMI Calculator": [
          "What we will create",
          "Creating project folder and structure",
          "Adding CSS",
          "Adding JavaScript",
          "Project Code"
        ],
        "Build a basic Calculator": [
          "Overview",
          "What we will create",
          "Creating directories and files",
          "Creating the structure",
          "Adding CSS",
          "Adding JavaScript",
          "Project Code"
        ],
        "Build a Digital Clock": [
          "Overview",
          "What we will create",
          "Creating directories and files",
          "Creating the structure",
          "Adding CSS",
          "Adding JavaScript",
          "Project Code"
        ],
        "Build a Creating a Contact Form": [
          "Overview",
          "What we will create",
          "Creating directories and files",
          "Creating the structure",
          "Adding CSS",
          "Adding JavaScript",
          "Project Code"
        ],
        "Build a Todo List App": [
          "Overview",
          "What we will create",
          "Creating directories and files",
          "Creating the structure",
          "Adding CSS",
          "Adding JavaScript: Part 1",
          "Adding JavaScript: Part 2",
          "Project Code"
        ],
        "Build an Interactive Quiz": [
          "Overview",
          "What we will create",
          "Creating directories and files",
          "Creating the structure",
          "Adding CSS",
          "Adding JavaScript: Part 1",
          "Adding JavaScript: Part 2",
          "Project Code"
        ]
      },
      "requirements": [
        "Required Free Software ( The course covers how to install them)"
      ],
      "description": "Coding knowledge is a must-have 21st century skill. The ability to read,write,and understand code\nhas never been more-important,useful,or lucrative as it is today.Computer code has forever changed our lives .\nSome people can't even make it through the day without interacting with something built with code.\nWe will be building 20 real world projects using HTML ,CSS, JAVASCRIPT and PYTHON\n\n\nHTML is the standard markup language for creating Web pages.\nWhat is HTML?\nHTML stands for Hyper Text Markup Language\nHTML is the standard markup language for creating Web pages\nHTML describes the structure of a Web page\nHTML consists of a series of elements\nHTML elements tell the browser how to display the content\nHTML elements label pieces of content such as \"this is a heading\", \"this is a paragraph\"\n\n\nCSS is the language we use to style a Web page.\nWhat is CSS?\nCSS stands for Cascading Style Sheets\nCSS describes how HTML elements are to be displayed on screen, paper, or in other media\nCSS saves a lot of work. It can control the layout of multiple web pages all at once\nExternal stylesheets are stored in CSS files\n\n\nJavaScript is the world's most popular programming language.\nJavaScript is the programming language of the Web.\n\n\nWhat is Python?\nPython is a popular programming language. It was created by Guido van Rossum, and released in 1991.\n\n\nIt is used for:\nweb development (server-side),\nsoftware development,\nmathematics,\nsystem scripting.\nWhat can Python do?\nPython can be used on a server to create web applications.\nPython can be used alongside software to create workflows.\nPython can connect to database systems. It can also read and modify files.\nPython can be used to handle big data and perform complex mathematics.\nPython can be used for rapid prototyping, or for production-ready software development.\nWhy Python?\nPython works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc).\nPython has a simple syntax similar to the English language.\nPython has syntax that allows developers to write programs with fewer lines than some other programming languages.\nPython runs on an interpreter system, meaning that code can be executed as soon as it is written. This means that prototyping can be very quick.\nPython can be treated in a procedural way, an object-oriented way or a functional way.\n\n\nReal Projects we will build step by step\n\n\nBuild an Analogue Clock\nBuild a Loan | Mortgage Calculator\nBuild a quote of the day app\nBuild a BMI Calculator\nBuild a Calculator\nBuild a Digital clock\nBuild a Contact Form\nBuild a Todo List App\nBuild an Interactive Quiz App\nBuild a Countdown Timer\nBuild a Currency Converter App\nBuild a Music Player App\nBuild a Random Password Generator\nBuild an Image Slider App\nBuild a Text to Speech App\nBuild a Lottery Numbers Simulator App\nBuild a Screen Break App\nBuild a Random Number Generator\nBuild a Number Guessing Game",
      "target_audience": [
        "Beginners to Coding | Programming",
        "Beginner web developers"
      ]
    },
    {
      "title": "Unlock WordPress Power: Build Themes, Plugins & FSE Sites.",
      "url": "https://www.udemy.com/course/unlock-wordpress-power-build-themes-plugins-fse-sites/",
      "bio": "Master WordPress Development: Build Themes, Plugins, and Dynamic FSE Websites.",
      "objectives": [
        "Develop skills to market, price, and deliver WordPress projects professionally.",
        "Gain insights into finding clients, managing projects, and scaling your business.",
        "Learn how to start your own web design business using WordPress as a foundation.",
        "Create a multi-page corporate website tailored for business needs.",
        "Use WordPress Custom Post Types to create a real estate listing site.",
        "Include advanced filtering, property detail pages, and interactive elements.",
        "Work with WordPress REST API to integrate external services.",
        "Write PHP to manipulate WordPress data efficiently.",
        "se JavaScript to add dynamic, interactive functionality to websites.",
        "Learn React to build custom block types for the Gutenberg Editor.",
        "Extend Gutenberg's capabilities with unique blocks tailored to specific needs.",
        "Design your own WordPress theme from scratch",
        "Customize templates for custom post types, pages, and archives.",
        "Navigate the dashboard with confidence, understanding all features and tools.",
        "PHP and Object-Oriented Programming (OOP): Lay a foundation for plugin development",
        "React Components: Master React for advanced Gutenberg block development.",
        "Custom Functionality: Extend WordPress with unique solutions for client needs.",
        "Learn how to monetize your skills on freelance platforms.",
        "Offer specialized services like custom plugin development or theme design.",
        "Build a portfolio of professional projects to attract high-paying clients."
      ],
      "course_content": {
        "Developing a Classic Theme with PHP": [
          "Installing WordPress CMS",
          "Starter Theme for WordPress",
          "WordPress Theme File Hierarchy",
          "Including Files/PHP Code",
          "Enqueuing CSS Styles and JS Scripts",
          "Hooks for Header and Footer",
          "Implementing Navigation: Admin and Frontend",
          "Creating a Search Form",
          "Safe Data Output (Escaping)",
          "Preparing Theme Files for Translation",
          "Custom Page Templates",
          "Displaying Posts in the Loop",
          "Registering a Post Type. Part 1",
          "Registering a Post Type. Part 2",
          "Template for Archive and Single Pages of Post Type",
          "Registering a Taxonomy",
          "Template for Taxonomy Archive Page",
          "Registering and Displaying a Sidebar",
          "Creating a Sidebar Widget",
          "WP_Query Class",
          "Pagination for Archive Pages",
          "Custom Pagination",
          "WordPress Child Theme",
          "Media Files and Custom Image Sizes",
          "Custom Fields: Meta Boxes via Hooks",
          "Integrating Required Plugins into the Theme",
          "Meta Boxes via Plugin",
          "Options Settings",
          "Developing a Core Plugin for the Theme",
          "Ajax in WordPress",
          "Elementor Widget",
          "WPBakery Shortcode",
          "Comments Block in WordPress",
          "List of WordPress Hooks",
          "Monetizing WordPress Theme Development Skills",
          "Converting HTML to WordPress #1",
          "Converting HTML to WordPress #2",
          "Converting HTML to WordPress #3",
          "Converting HTML to WordPress #4",
          "Converting HTML to WordPress #5",
          "Converting HTML to WordPress #6",
          "Theme Testing"
        ],
        "Creating a Block Theme (FSE) for WordPress": [
          "Gutenberg Page Builder in WordPress",
          "Difference between Classic and Block Themes for WordPress",
          "Exploring the Design Layout and Beginning the Development",
          "Working with Global Colors and Fonts for the Theme",
          "Creating the Header for a Block Theme",
          "Setting Global Styles for the Button Component",
          "Creating the Footer for a Block Theme",
          "Developing a Hero Block and Using Template Parts",
          "Developing a Post Grid Using Query Loop",
          "Creating Additional Blocks for a Block Theme",
          "Final Adjustments for a Block Theme"
        ],
        "Developing a Static Gutenberg Block with JavaScript": [
          "Creating and Registering the First Block for Gutenberg",
          "First React Component and Setting Up JSX Compilation",
          "Working with CSS (default classes and attributes)",
          "File Hierarchy and @wordpress/create-block",
          "Understanding the Structure of Gutenberg Blocks in WordPress",
          "Code Validation (Format/Lint:JS/Lint:CSS)",
          "Using the RichText Component",
          "Adding Buttons to the Toolbar",
          "Adding Actions to Buttons in the Toolbar",
          "Using the InspectorControls Component",
          "InnerBlocks Component for Nested Blocks",
          "Using RichText for a Nested Block",
          "Adding an Option to Define the Number of Columns",
          "Adding CSS styles for the block on the front and admin parts",
          "Uploading Images using MediaPlaceholder Component",
          "Using isBlobURL to Determine the Loading Status of an Image",
          "Adding the Option to Replace or Remove an Image",
          "Editing alt for an Image"
        ],
        "Developing a Dynamic Gutenberg Block with JavaScript & PHP": [
          "What is a Dynamic Block. Start of Plugin Development",
          "Render Callback for Frontend Part in PHP",
          "Working on the Logic of the Frontend Part and CSS Styles",
          "Building Block Logic for Gutenberg in JavaScript",
          "Displaying Dynamic Content in the Gutenberg Editor with JavaScript",
          "Using Components for Settings the Block from Sidebar",
          "Adding Sorting with QueryControls Component",
          "Additional Features of the QueryControls Component",
          "Different Ways to Add Meta Boxes in Gutenberg Editor",
          "Summarise: Creating Dynamic Blocks"
        ],
        "Developing a Plugin for WordPress with PHP (OOP)": [
          "Plugin Structure and Activation/Deactivation Hooks",
          "Registering a Post Type in a Plugin",
          "Registering a Taxonomy in a Plugin",
          "Registering Meta Boxes in a Plugin",
          "Enqueuing CSS Styles and JS Scripts in a Plugin",
          "Safe Data Output (Escaping)",
          "Translating a Plugin and Language Functions",
          "Template Structure in a Plugin",
          "Displaying Content for Post Type, Taxonomy, Meta Boxes",
          "Filtering by Meta Boxes",
          "Filtering by Taxonomies",
          "Shortcode in a Plugin",
          "Implementing a Widget in a Plugin",
          "Elementor Widget in a Plugin. Part 1",
          "Elementor Widget in a Plugin. Part 2",
          "WPBakery Shortcode",
          "Admin Panel Page for a Plugin",
          "Admin Panel Settings Fields",
          "Ajax for a Plugin. Part 1",
          "Ajax for a Plugin. Part 2",
          "Custom Page Template in a Plugin",
          "Adding Custom Columns to Post Type List",
          "Adding Properties from the Frontend. Part 1",
          "Adding Properties from the Frontend. Part 2",
          "Adding Properties from the Frontend. Part 3",
          "Adding Properties from the Frontend. Part 4",
          "Property Listing. Part 1",
          "Property Listing. Part 2",
          "Wishlist Option. Part 1",
          "Wishlist Option. Part 2",
          "Wishlist Option. Part 3"
        ],
        "Monetize your Skills with Passive Freelancing: Sell on Envato & TemplateMonster": [
          "Analysis of marketplaces for freelancers – Envato Marketplaces.",
          "Choosing a product and platform for passive income.",
          "How to become an author and sell your digital products.",
          "Skills required to work on marketplaces.",
          "How to build and enhance your personal brand and why it’s essential.",
          "Financial aspects and methods for withdrawing earnings from the Envato Marketpla",
          "Pricing strategies: How to set the right price for your products.",
          "Types of licenses for digital products and how to choose the right one.",
          "Packaging your product for sale on Envato.",
          "Customer feedback and support.",
          "Design requirements for digital products.",
          "Competitor analysis and promoting your product on the Envato Marketplace.",
          "Collaborations and teamwork on Envato marketplaces.",
          "Author motivation system on Envato.",
          "SEO optimization and other promotion techniques for marketplaces.",
          "Alternative platforms to ThemeForest: About TemplateMonster Marketplace.",
          "Reasons you can get banned on Envato.",
          "How traffic is generated for products on marketplaces."
        ],
        "PHP Fundamentals for Beginners": [
          "Working Environment, Variables, and Constants",
          "Data Types in PHP",
          "Conditionals: if else, switch case, match",
          "Arithmetic Operators and Loops: for, while, do while, foreach",
          "include / require / User-Defined Functions",
          "Predefined Functions in PHP for Strings and Date/Time Operations",
          "HTTP Data Transmission: $_POST / $_GET",
          "File Upload and File Interaction Functions",
          "Sessions and Cookies in PHP: $_SESSION, $_COOKIE",
          "Databases (MySQL & phpMyAdmin)",
          "Database Practice"
        ],
        "Advanced WordPress Skills": [
          "What is Headless WordPress and How to Use It",
          "Run WordPress with Docker",
          "WooCommerce Intensive Course Stream: Part 1",
          "WooCommerce Intensive Course Stream: Part 2",
          "WooCommerce Intensive Course Stream: Part 3",
          "WooCommerce Intensive Course Stream: Part 4",
          "WooCommerce Intensive Course Stream: Part 5",
          "WooCommerce Intensive Course Stream: Part 6",
          "WooCommerce Intensive Course Stream: Part 7"
        ]
      },
      "requirements": [
        "Basic WordPress knowledge (how to create a blog post, etc)",
        "Basic understanding of HTML/CSS/JS/PHP (be familiar with syntax)"
      ],
      "description": "Ready to elevate your web development skills and become a WordPress expert? This comprehensive course is your gateway to mastering modern WordPress, including Full Site Editing (FSE), custom theme and plugin development, dynamic Gutenberg blocks, and more.\n\n\nWhat You’ll Learn:\nStart from Scratch: No prior coding knowledge? No problem. We'll guide you through WordPress fundamentals, from installation to advanced concepts.\nMaster the Latest Tools: Learn Full Site Editing (FSE), Block Themes, and the Interactivity API introduced in 2024.\nBuild Custom WordPress Solutions: Develop unique themes, create plugins, and design custom post types with intuitive relationships between content.\nDive into the Gutenberg Editor: Create dynamic blocks using React.js, customize layouts with InnerBlocks, and enhance the editing experience.\nLearn Back-End Essentials: Understand PHP and MySQL fundamentals, REST API integration, and custom fields to build robust websites.\nFront-End Mastery: Customize your site with CSS, JavaScript, and WordPress hooks for seamless user interactions.\nOptimize for Performance: Implement SEO best practices, enhance website speed, and ensure top-notch security.\n\n\nWhat Makes This Course Unique?\nExpert Instruction: Learn from an experienced developer with years of real-world WordPress experience.\nUp-to-Date Content: Updated for 2025, covering the latest features and development practices.\nHands-On Projects: Work on practical, real-world examples that mimic client projects to boost your portfolio.\nComprehensive Support: Get answers to your questions and access to a supportive community of learners.\n\n\nBy the End of This Course, You’ll Be Able To:\nBuild professional websites from scratch or customize existing themes for clients.\nDevelop and deploy custom plugins and Gutenberg blocks.\nCreate complex, dynamic websites with custom fields and post types.\nLaunch fully optimized, secure, and scalable websites online.\n\n\nWhy Learn WordPress?\nWith over 40% of the web powered by WordPress, mastering this platform opens doors to a thriving freelance career, full-time opportunities, or the ability to bring your entrepreneurial ideas to life.\nDon’t miss your chance to stay ahead in the ever-evolving world of web development. Enroll now and start building the websites of tomorrow, today!",
      "target_audience": [
        "Perfect for those who see WordPress not just as a blogging platform but as a powerful Content Management System (CMS).",
        "Ideal for developers who want to create custom solutions like bespoke themes, plugins, and advanced functionality.",
        "If you're looking to learn PHP and JavaScript, this course offers practical, real-world applications to help you grasp these languages.",
        "Dive into the REST API to interact with WordPress data dynamically, enabling you to build modern, real-time applications.",
        "For those curious about creating Custom Post Types, custom fields, and content relationships, this course provides hands-on guidance",
        "Starting your own website design business? This course equips you with the skills to create professional websites and manage client projects effectively.",
        "Freelancers looking to expand their services can leverage this course to deliver more advanced WordPress solutions.",
        "If you're new to WordPress and want to build beautiful, responsive websites, this course is an excellent starting point.",
        "Learn the fundamentals of WordPress, from installation to creating content and managing plugins and themes.",
        "Experienced WordPress Developers: If you're already skilled in custom themes, plugin development, and the REST API, this course might cover familiar ground.",
        "Those Seeking Niche Expertise: Developers focused on highly specific areas like advanced server-side optimization or Gutenberg Core development may need more specialized resources."
      ]
    },
    {
      "title": "PHP with MySQL: Build Complete Forum with Admin Panel",
      "url": "https://www.udemy.com/course/php-with-mysql-2023-build-complete-forum-with-admin-panel/",
      "bio": "Build Complete Forum with Admin Panel in PHP MySQL Bootstrap and PDO",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Build a full authentication system",
        "Learn to hash and dehash passwords with PHP",
        "Learn to use advanced PDO queries",
        "Build full topic system",
        "Build complete reply system",
        "Build amazing categories system",
        "Upload images in a professional way",
        "Learn web development tips and tricks",
        "Create full admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Learn to fix bugs along the way of developing this web app",
        "Create profile system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Getting Started and Setting up": [
          "Design and Code for the Project",
          "Creating Config File",
          "Creating Includes Files"
        ],
        "Creating Authentication System": [
          "Registering Users",
          "Logging Users in",
          "Starting Sessions and Validating"
        ],
        "Working with Topics": [
          "Creating Topics",
          "Showing Topics",
          "Displaying a Single Topic",
          "Displaying Replies for every Topic",
          "Deleting Topics",
          "Updating Topics"
        ],
        "Working with Replies": [
          "Creating Replies",
          "Deleting Replies",
          "Updating Replies"
        ],
        "Getting Deeper and Developing More Features": [
          "Counting Topics",
          "Showing Categories",
          "Showing Topics Inside every Category",
          "Creating 404 Page",
          "Showing Statistics for our Forum"
        ],
        "Working with Users Pages": [
          "Updating Users Data",
          "Fixing Bugs",
          "Creating Public Profiles"
        ],
        "Getting Started with Admin Panel": [
          "Design and Code for Admin Panel",
          "Creating Login Page",
          "Creating Sessions",
          "Finishing Login Page and Validating"
        ],
        "Finishing Admins": [
          "Shwoing Admins",
          "Creating Admins",
          "Displaying Stats in Index Page"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and PDO",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Are you as fired up as I am? Do you want to build something awesome? Something amazing? Are you a web developer who wants a cool job? If so, then this course is for you. In this course, you will learn how to build a complete forum from the ground up in a few hours. I already made sure that every part of this course is concise, elegant, and informative, so don't miss out on this cool opportunity. I also included the files needed in different parts of the course for you to follow along with me step by step.\n\n\nHere is what you are going to learn, first of all, I am going to introduce you to the tools that we are going to be using in this course. And then we are going to build a full authentication system from scratch. While building this system I am going to introduce you to hashing and dehashing passwords. And then, we are going to build general and cool features inside our own app. We are going to build the topics system. And in this section, I am going to show you how to create, update, show, and delete topics in an easy manner. And now that every topic has a reply we are going to build the replies system so users will be allowed to create and update and delete their own replies. After all of this, we are going to move to other parts of the forum and they are general parts that are related to categories, topics, and replies. Also, there is a section where we are going to take care of the profile system. And then we will dive deeper into creating the admin panel. There is a lot to talk about, but I don't want to make this description too long. So if you like this course, get it right now!",
      "target_audience": [
        "People who learned PHP and MySQL and want to build a full project",
        "Developers who want to build their CVs",
        "Aspiring programmers who want to level up their development skills with new techniques"
      ]
    },
    {
      "title": "jQuery for Application Development: Fundamentals",
      "url": "https://www.udemy.com/course/jquery-for-application-development/",
      "bio": "jQuery | jQuery Ajax | jQuery UI",
      "objectives": [
        "What is jQuery",
        "How to Integrate the jQuery Libraries",
        "jQuery Syntax",
        "The document ready event",
        "How to use basic selectors",
        "Complex jQuery Selectors",
        "How to use First, Last and (n)th Selectors",
        "How to use PseudoSelectors",
        "Fade Effect with jQuery",
        "Showing and Hiding Elements with jQuery",
        "Hiding Versus Removing jQuery Elements",
        "Sliding jQuery Elements",
        "Creating Animations with jQuery",
        "Understanding jQuery Callback Functions",
        "Manipulating HTML and CSS with jQuery",
        "Adding and Removing Classes",
        "Inserting and Appending Content",
        "Changing the Height and Width of Elements",
        "Positioning Elements with jQuery",
        "Working with Element Content",
        "Wrapping Elements",
        "Setting CSS Rules of Elements",
        "Working with Forms using jQuery",
        "Blur and Focus Form Elements",
        "The change() event",
        "The select() event",
        "The submit() event",
        "Serializing Form Content",
        "Working with Events in jQuery",
        "click() and dblclick()",
        "Mouse events",
        "Browser events",
        "Keyboard events and the event object",
        "Communicating with an API using jQuery",
        "Loading Local Data with jQuery",
        "Loading Remote Data with jQuery",
        "Adding JSON Data",
        "Deleting JSON Data",
        "jQuery UI: Accordians",
        "jQuery UI: Tabs",
        "jQuery UI: Dialog Boxes"
      ],
      "course_content": {
        "Getting Started with jQuery": [
          "Your first jQuery Page",
          "What is jQuery... And Why?",
          "Adding jQuery to Your Site",
          "jQuery Syntax",
          "The document.ready() Event",
          "Basic Selectors (name, class name and Id)",
          "Complex Selectors (attribute, css, decendent)",
          "First, Last and (n)th Selectors",
          "Other Pesudo-selectors"
        ],
        "Effects with jQuery": [
          "Fading in and Out",
          "Showing and Hiding Elements",
          "Hiding Versus Removing Elements",
          "Sliding Elements",
          "Creating Animations",
          "Chaining Animations",
          "Understanding Callback Functions"
        ],
        "HTML and CSS Manipulation with jQuery": [
          "Adding and Removing Classes",
          "Inserting and Appending Content",
          "Height and Width of Elements",
          "Positioning Elements",
          "Working with Element Content",
          "Wrapping Elements",
          "Setting CSS Rules of Elements"
        ],
        "Forms and jQuery": [
          "Blur and Focus Form Elements",
          "The .change() Event",
          "The .select() event",
          "The .submit() Event",
          "Serializing Form Content"
        ],
        "Events in jQuery": [
          ".click() and .dblclick()",
          "Mouse Events",
          "Browser Events",
          "Keyboard Events and the Event Object"
        ],
        "API Communication with jQuery and JSON": [
          "Loading Local Data with jQuery",
          "Loading Remote Data with jQuery",
          "Adding JSON data",
          "Deleting JSON data"
        ],
        "jQuery UI": [
          "Accordians",
          "Tabs",
          "Dialog Boxes"
        ],
        "Goal Tracker App": [
          "Creating a Goal Tracker Application 01",
          "Creating a Goal Tracker Application 02",
          "Creating a Goal Tracker Application 03",
          "Creating a Goal Tracker Application 04",
          "Creating a Goal Tracker Application 05"
        ],
        "Flash Cards Application": [
          "Flash Cards App 01",
          "Flash Cards 02",
          "Flash Cards 03",
          "Flash Card 04",
          "Flash Cards 05",
          "Flash Cards 06",
          "Flash Cards 07",
          "Flash Cards 08",
          "Flash Cards 09",
          "Flash Cards 10",
          "Flash Cards 11",
          "Flash Cards 12"
        ],
        "BART-- Bay Area Rapid Transit App": [
          "Project Introduction",
          "Application Demo",
          "Skills and Technologies Used",
          "The Application HTML",
          "The Application JavaScript",
          "The JavaScript and jQuery Part I",
          "The JavaScript and jQuery Part II",
          "The JavaScript and jQuery Part III",
          "The JavaScript and jQuery Part IV",
          "Good bye and Good Luck"
        ]
      },
      "requirements": [
        "Successful members of this course have a fundamental understanding of HTML, CSS and JavaScript"
      ],
      "description": "jQuery remains the most popular client-side development library on the web. Designed to do some of the heavy-lifting in JavaScript, you're going to find the jQuery library used in millions of sites.\nWhile it's not the sexiest or newest JavaScript library-- jQuery remains the most deployed.  It's a \"need-to-know\" item if you're on the road to becoming a web developer, client-side-engineer, or another type of development pro.\nIf you're going to learn jQuery-- you should do it with Mark Lassoff.  Mark has taught coding, design, and development to over 2,000,000 people online through Udemy and other online sites.  Mark makes learning easy explaining each concept in basic terms so you don't have to be an experienced coder to understand.  The videos included in this course are short, and to the point, without a lot of extra unneeded fluff.\nMark designed this course so you could get moving quickly and apply what you've learned immediately.\nThis course covers it all-- From the basic jQuery syntax, simple through complex selectors, jQuery Ajax, jQuery UI, and much more.  There are even a couple of complete jQuery projects included for you to test your skills after you've learned the fundamentals.\nIf you want to learn jQuery, press the enroll button now!  You'll complete this course and immediately be able to start using your new jQuery skills in your everyday development work!",
      "target_audience": [
        "Web Development Students",
        "Front-end and Client-Side Developers and Designers",
        "Anyone who Wants to Use jQuery-- the most popular Client Side Development Library"
      ]
    },
    {
      "title": "Build a Real Time Chat App With React + NestJS & GraphQL",
      "url": "https://www.udemy.com/course/build-a-real-time-chat-app-with-react-nestjs-graphql/",
      "bio": "Build a full-stack, scaleable, production grade web app following best practices. Includes continuous delivery on AWS.",
      "objectives": [
        "Build & deploy a real-time messaging web application",
        "Implement JWT authentication on the backend & UI",
        "Use Material UI to develop a consistent & responsive UI",
        "Develop a GraphQL API for CRUD functionality",
        "Save data using MongoDB & the Abstract Repository pattern",
        "Execute automatic DB migrations",
        "Use Apollo Client to manage UI state & cache application data",
        "Use GraphQL WebSocket Subscriptions to publish & consume messages in real time",
        "Custom UI routing with React Router",
        "Use code generation tools to automatically generate types from GraphQL schema",
        "Implement server-side pagination to implement infinite scrolling",
        "Use MongoDB aggregation to perform single operation lookups & DB calls",
        "File upload to Amazon S3",
        "Production deployment to AWS all on free-tier",
        "Continuous Delivery & CI/CD",
        "Connect a Pub/Sub app to Redis to allow for distributed messages & horizontal scaling",
        "Connect a app to a custom domain & secure HTTPS traffic"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Demo",
          "Course Audience",
          "Course Resources"
        ],
        "React UI Setup": [
          "Create React App & Material UI",
          "React Router DOM & Auth UI"
        ],
        "NestJS Backend Setup & Users GraphQL CRUD": [
          "NestJS Setup & Users Resource",
          "Abstract Repository",
          "Users Repository & GraphQL CRUD - Part 1",
          "Users Repository & GraphQL CRUD - Part 2",
          "Validation, Logging, & Config Cleanup",
          "Database Migrations",
          "Update User Bug"
        ],
        "Apollo Client": [
          "UI Note",
          "Apollo Client Setup",
          "Create User"
        ],
        "Backend Authentication": [
          "Passport & Local Strategy",
          "Apply Local Strategy",
          "JWT Strategy - Part 1",
          "JWT Strategy - Part 2",
          "Apply GQL Auth Guard"
        ],
        "UI Authentication": [
          "UI Login",
          "Auth Validation - Part 1",
          "Auth Validation - Part 2",
          "Auth Guard",
          "Logout Link",
          "Auth Redirect"
        ],
        "Header": [
          "Header - Part 1",
          "Header - Part 2",
          "Logout",
          "Authentication State"
        ],
        "Snackbar": [
          "Error Snack"
        ],
        "Chat List": [
          "Chat List",
          "Conditional Rendering",
          "Add Chat Modal",
          "Create Chat Backend",
          "GraphQL Type Generation & Create Chat UI",
          "Get Chats",
          "Update Cache",
          "Add Chat Cleanup"
        ],
        "Chat UI": [
          "Chat UI - Part 1",
          "Chat UI - Part 2"
        ]
      },
      "requirements": [
        "Experience with Node/Express backends, preferably NestJS & TypeScript",
        "Experience with building React UIs"
      ],
      "description": "In this course, we go beyond the documentation & small simple starter apps to build a real-world full-stack chatting application. This application is built from the ground up to be scaleable & production-grade. The goal of the course is for you to be comfortable developing full-stack web apps so you can develop your own afterward.\nWe use a NestJS backend, a popular Node.js library that allows us to quickly create clean-code HTTP APIs. Our CRUD functionality will be served by a GraphQL API that persists data using a MongoDB database. We'll use this same GraphQL API to create our messaging subscription which allows for WebSocket connection to our UI to facilitate messaging. Of course, everything will be secured with industry-standard JWT auth.\nOn the UI we will create a React App using the beautiful Material UI to easily create a responsive UI and interact with our backend. We'll choose Apollo Client for state management so we can easily interact with our GraphQL API & cache data.\nFinally, all of this will be deployed onto AWS Elastic Beanstalk & Amplify. Backed by a continuous delivery CI/CD pipeline, whenever we push code our latest changes will get built & deployed to our environment of choice.\nBy the end of the project, you will have learned everything you need to get started in building & deploying your very own production-grade web apps!",
      "target_audience": [
        "Intermediate developers looking to learn best practices for building & deploying a scaleable, production grade web app",
        "Intermediate developers looking to learn how to deploy a web app on AWS with continuous delivery"
      ]
    },
    {
      "title": "Mastering the Django admin dashboard",
      "url": "https://www.udemy.com/course/mastering-the-django-admin-dashboard/",
      "bio": "Learn how to use, customise and supercharge the Django admin to your advantage",
      "objectives": [
        "Mastering the admin functionality",
        "Managing user accounts and permissions",
        "How to secure the admin dashboard",
        "Using rich text editors",
        "Displaying maps",
        "CSV and Excel imports and exports",
        "How to optimise the admin dashboard",
        "How to customise the look and feel of the admin"
      ],
      "course_content": {
        "Introduction and environment set up": [
          "Introduction",
          "Project set up",
          "Changing the site header and site title",
          "Registering models in the admin dashboard",
          "Changing app section headings"
        ],
        "Using the powerful modeladmin class configuration options": [
          "List display",
          "Generating random data using the Faker library.",
          "List filter",
          "Custom ordering",
          "Custom search",
          "Pre-populated fields",
          "Pagination"
        ],
        "Advanced modeladmin options": [
          "Custom admin change list actions",
          "Date hierarchy",
          "Custom field layouts",
          "Fieldsets",
          "Model properties in the admin",
          "Rich text editors"
        ],
        "Model relations in the admin": [
          "One to many relationships in the admin",
          "Comments data generation",
          "Tabular and stacked inlines",
          "List editable",
          "Collapsing sections",
          "Overriding changelist querysets",
          "Many to many relationships",
          "Verbose names",
          "Filter horizontal and filter vertical"
        ],
        "Managing user accounts in the admin": [
          "Different types of user accounts",
          "User permissions",
          "Group permissions"
        ],
        "Select useful third party admin apps": [
          "Adding drop down list filters",
          "Date range filters",
          "Maps",
          "Imports and exports",
          "Custom admin skins - Grapelli"
        ],
        "Securing and optimising the admin dashboard": [
          "Tips on securing the admin",
          "Optimising with list select related",
          "Optimising using raw id fields",
          "Disabling deleting",
          "Django admin honeypot"
        ]
      },
      "requirements": [
        "Basic knowledge of the Django web framework"
      ],
      "description": "One of the most powerful components of Django is the automatic admin interface. It provides a quick, database centric interface that authenticated users can use to manage content on a Django site.\nHowever, the Django admin exposes an API which is unique and quite different from all the other components that ship with Django, such as the auth app. This makes it difficult for Django developers to take full advantage of the admin dashboard.\nThis course, exclusively on the Django admin, aims at solving that. It will arm the student with expert knowledge on how to master, supercharge and be productive with the Django admin.",
      "target_audience": [
        "Django developers who want to master the Django admin dashboard"
      ]
    },
    {
      "title": "Modern Java - Multithreading in Java using Virtual Threads",
      "url": "https://www.udemy.com/course/modern-java-multithreading-in-java-using-virtual-threads/",
      "bio": "A Complete Modern MultiThreading/Concurrency course to learn about Virtual Threads,Structured Concurrency and more.",
      "objectives": [
        "You will learn how to harness the power of Virtual Threads to create highly scalable and efficient Java applications.",
        "What are Platform Threads and the limitations attached to it ?",
        "Learn about Virtual Threads and how to work with them by coding it.",
        "Learn about the advantages and internals of virtual threads.",
        "Learn to launch one million virtualthreads.",
        "Learn to use Structured Concurrency API to implement business logic.",
        "HTTP calls using Virtual Threads.",
        "Build a SpringBoot Application using Virtual Threads.",
        "Compare the performance of Platform Threads vs Virtual Threads in a Springboot App using Apache \"ab\" benchmarking tool.",
        "Use Virtual Threads by building hands-on projects and real world examples."
      ],
      "course_content": {
        "Getting Started With the Course": [
          "Course Introduction",
          "Pre-requestites"
        ],
        "Course Slides and Source Code": [
          "Course Slides",
          "Source Code"
        ],
        "Getting Started with Java Threads [Platform Threads]": [
          "What is a Platform Thread, Why do we need them ?",
          "Java Installation",
          "Base Project Setup in Intellij",
          "Lets Create Platform Threads",
          "Thread Internals - How it works behind the scenes ?",
          "Thread Scalability and Blocking nature of Java Threads - Drawbacks",
          "Effects of Threads in a Backend WebApplication"
        ],
        "Getting Started with Virtual Threads": [
          "Introduction to Virtual Threads",
          "Virtual Threads Scalability - Lets Launch 1 million threads",
          "How VirtualThreads works under the hood? - Mounting/Unmounting Virtual Threads",
          "Mounting and Unmounting threads in Action",
          "Virtual Threads - yield() and run() using Continuation API",
          "Pinned Virtual Threads",
          "Important Facts about Virtual Threads",
          "Platform Threads and Virtual Threads"
        ],
        "Future and CompletableFuture": [
          "Evolution of Concurrency APIs in Java",
          "Parallelism vs Concurrency",
          "Introduction to Future",
          "ProductService using Future API and ExecutorService",
          "CompletableFuture API - ProductService using CompletableFuture API"
        ],
        "Structured Concurrency using Virtual Threads [Preview Feature]": [
          "Introduction to Structured Concurrency",
          "ProductService using StructuredTaskScope.ShutdownOnFailure()",
          "JUnit test for ShutdownOnFailure policy during Exceptions",
          "ProductInfoService using StructuredTaskScope.ShutdownOnSuccess()",
          "Add DeliveryService into the ProductService - New Business Requirement"
        ],
        "HTTP calls using Virtual Threads": [
          "Set Up Simple WebServer",
          "Build the HttpClient for ProductInfo service",
          "Lets make real HTTP calls in ProductService using VirtualThreads"
        ],
        "Using Futures with Virtual Threads": [
          "Virtual Threads + Future & ExecutorService"
        ],
        "Build a SpringBoot Application using Virtual Threads": [
          "Using Virtual Threads with SpringBoot App",
          "Setup the Remote Service and Client Application",
          "Configure the springboot app to use VirtualThreads"
        ],
        "Load Test using \"ab - Apache HTTP server benchmarking tool\"": [
          "Set up and run benchMarking using ab",
          "Load Test - VirtualThreads Spring MVC vs Traditional Spring MVC"
        ]
      },
      "requirements": [
        "Prior Java Experience",
        "Java 21 or higher",
        "Intellij or Eclipse or Similar IDE"
      ],
      "description": "\"Modern Java - Multithreading in Java using Virtual Threads\" is a comprehensive course designed to equip Java developers with advanced skills in parallel programming. In this course, you will delve into the intricacies of multithreading in Java, exploring the latest advancements with Virtual Threads.\nYou will learn how to harness the power of Virtual Threads to create highly scalable and efficient Java applications. Through hands-on projects and real-world examples, you will master techniques for managing concurrency, synchronizing threads, and avoiding common pitfalls in multithreaded programming.\nGetting Started With the Course\nIn this section, I will give you all an introduction to the course and what to expect from this course.\nGetting Started with Java Threads [Platform Threads]\nIn this section, I will give you all an introduction to Java Threads and its limitations.\nGetting Started with Virtual Threads\nIn this section, I will give you all an introduction to Virtual Threads and dive into some detailed concepts.\nConcurrency APIs - Threadpools,Future, ExecutorService & CompletableFuture\nIn this section, I will cover the concurrency APIs Future and CompletableFuture.\nStructured Concurrency using Virtual Threads [Preview Feature]\nIn this section, I will cover Structured Concurrency and learn to write business logic using Structured Concurrency.\nHTTP calls using Virtual Threads\nIn this section, we will code HTTP Clients and use virtual threads to execute them.\nUsing Futures with Virtual Threads\nIn this section, we will learn to use Virtual Threads with Future and ExecutorService.\nBuild a SpringBoot Application using Virtual Threads\nIn this section, we will code and learn to integrate virtual threads with springboot application.\nLoad Test using \"ab - Apache HTTP server benchmarking tool\"\nIn this section, we will run the load test and compare the performance between Spring MVC using VirtualThreads and Traditional Spring MVC\nWhether you're a seasoned Java developer looking to enhance your skills or a newcomer interested in mastering the latest trends in Java development, this course will provide you with the knowledge and tools to take your Java multithreading skills to the next level.",
      "target_audience": [
        "Whether you're a seasoned Java developer looking to enhance your skills or a newcomer interested in mastering the latest trends in Java Concurrency.",
        "Java developers who would like to take their knowledge to the next level to write more concise and readable multithreaded code"
      ]
    },
    {
      "title": "Creating Interactive HTML5 Video",
      "url": "https://www.udemy.com/course/creating-interactive-html5-video/",
      "bio": "Make your video come to life by adding interactive HTML5 videos over your videos.",
      "objectives": [
        "Embed HTML5",
        "Create clickable hotspots over video",
        "Trigger events during certain parts of the video",
        "Jump to different parts of the video based on users input"
      ],
      "course_content": {
        "Introduction and Example": [
          "Introduction",
          "Working with the Project Files"
        ],
        "Creating Your Video Page Layout": [
          "Overview of Skeleton CSS",
          "Basic Video Page Layout",
          "Stylizing the Video Layout",
          "Creating a Video Description Area",
          "Stylizing the Clickable Boxes",
          "Overview of Featherlight JS",
          "Creating the Featherlight Areas"
        ],
        "Adding Interactivity to Your Video": [
          "Setting up Click Events on the Clickable Areas",
          "Fixing an Issue with Chrome Browser",
          "Play/Pause Video Function",
          "Running a Function After Lightbox Closes",
          "Creating the Users Choice",
          "Setting Up Some Variables",
          "Variable Fix",
          "Video Loaded and Time Update Functions",
          "Triggering the Choice in Your Video Timeline",
          "Halfway and Finished Video Events",
          "Choice Handling Event",
          "Jumping to a Certain Point in the Video",
          "Stopping the Video",
          "Updating the Time Labels"
        ],
        "Conclusion": [
          "Final Thoughts"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "Basic understanding of CSS",
        "Basic understanding of JavaScript",
        "Basic understanding of jQuery"
      ],
      "description": "In this course, you will learn how to go beyond just static HTML video and allow your users to interact with your HTML videos. We will take ordinary HTML video and add interactive elements, such as clickable areas on the video that, when clicked on, could allow the user to explore concepts in more depth as well as adding timed triggers that happen at certain points of the video.. Then, you will also learn how to branch out to different parts of the video depending on the user’s choice. Finally, you will see how this interaction is viewable on all mobile and desktop devices.\nConcepts Taught:\nHTML5 Video\nCSS\nJavaScript\njQuery\nSkeleton CSS\nFeatherlight Lightboxes",
      "target_audience": [
        "Coders who understand the basics",
        "NOT for newbies to code"
      ]
    },
    {
      "title": "The Essential WordPress Theme Development Course",
      "url": "https://www.udemy.com/course/best-wordpress-development-course/",
      "bio": "How to Edit PHP, CSS, and HTML code in Wordpress",
      "objectives": [
        "Build a custom WordPress theme using only HTML, CSS, and PHP",
        "Download completed code samples",
        "Know more about how WordPress supports a sizable chunk of websites on the Internet"
      ],
      "course_content": {
        "Get Set Up With Wordpress": [
          "Intro To Wordpress",
          "Who Uses Wordpress?",
          "Prerequisites",
          "Set Up Your Server",
          "Install Wordpress",
          "Use FTP To Connect To WordPress"
        ],
        "Week 1: Theming": [
          "Theming Development (& Download Files)",
          "Activate Your Theme",
          "Add The Bloginfo() Template Tags for the CSS",
          "Add Template Tags for Your Images",
          "Add Template Tags for Your Title"
        ],
        "Week 2: In The Loop": [
          "Header, Footer, Sidebar",
          "Install The Loop",
          "Loop Specific Template Tags",
          "The Author, The Time, and Images",
          "Full-Size Images and Author Options",
          "Permalinks",
          "CSS Hacking at Your Theme"
        ],
        "Week 3: Functionality": [
          "Template Hierarchy",
          "Comments",
          "Functions",
          "Register Your Sidebar",
          "Customize the Available Widgets",
          "Create New Widgits",
          "Navigation Menus",
          "Tags and Categories",
          "Category Navigation"
        ],
        "Week 4: Advanced Wordpress": [
          "Advanced Theming",
          "Edit This Post",
          "Adding Plugins to Your Theme",
          "Install Plugins",
          "Plugins You'll Love",
          "Post Types",
          "Advanced Custom Fields",
          "Wordpress Themes You'll Love"
        ],
        "Bonus Videos": [
          "Cyberduck Permissions",
          "Multiple Sidebars"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML & CSS is required",
        "Basic knowledge of the Wordpress admin panel",
        "Fluency in English",
        "Come self-motivated and ready to learn"
      ],
      "description": "One Month WordPress is the best way to learn WordPress. I've been developing WordPress themes for over 10 years, and in that time I've created WordPress themes for The Black Eyed Peas, General Assembly, Toyota, Aldo, Agency Sacks, and New York Green Roofs. You’ll get to take advantage of all that expertise to develop a WordPress page that’s perfect for you.\n\n\nWho is this WordPress course designed for? If you're a freelance designer, I hope that after this course you can start offering custom WordPress blogs services to your clients. If you're a business owner, I hope that you learn enough to build your own blog from scratch. Whatever your goals are, you'll learn enough so that you can tweak an existing WordPress theme design.\nIn just 4 hours of videos you'll learn how to build custom WordPress themes with:\nThe Loop\nTemplate tags\nThe author tag\nThe date tag\nNavigation menus\nComments\nFunctions\nWidgets\nWordPress Plugins\nAdvance Custom Field\nThe WordPress Codex\nAs well as how to edit CSS styles on an existing WordPress theme. This covers the most common things you would want to build on a WordPress page.\nWordPress powers 28% of the Internet.\nThat’s because both Fortune 500 Companies, artists, and bloggers all want the same things: a custom theme, good SEO, and an easy way to publish content. I'm very proud of how this course came out - and I hope you'll join me.",
      "target_audience": [
        "Anyone who has a WordPress theme already",
        "Entrepreneurs",
        "Freelance developers",
        "Designers"
      ]
    },
    {
      "title": "Advanced Scalable Python Web Development Using Flask",
      "url": "https://www.udemy.com/course/advanced-python-flask/",
      "bio": "Learn to create scalable web applications that can serve millions of users using Flask, MongoDB and Amazon AWS",
      "objectives": [
        "You will learn advanced concepts for Flask web development including Blueprints",
        "You will be introduced to MongoDB and the concepts of NoSQL databases",
        "You will learn strategies for scaling applications to millions of reads and writes per second",
        "You will learn to use Amazon Web Services like S3 and SES through the Boto library"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Your Local Dev Environment": [
          "An Update About C9",
          "Mac Local Dev Environment with Homebrew",
          "Setting up MongoDB with Homebrew",
          "Windows Local Dev Environment with Chocolatey"
        ],
        "MongoDB and Flask Blueprints": [
          "Introduction to MongoDB",
          "Setting up MongoDB on Cloud9",
          "Playing with MongoDB",
          "The Basic Factory Structure",
          "Introduction to Blueprints",
          "Section 2 Quiz"
        ],
        "The User Module and an Introduction to AWS": [
          "Creating the User Model",
          "Adding Indexes",
          "The User Register Form",
          "User Registration",
          "Setting Up Unit Testing",
          "User Registration Unit Testing",
          "User Login",
          "User Login Testing",
          "Navbar and Starting User Profile",
          "User Profile",
          "Check Username Format with Regular Expressions",
          "Edit Profile Form and Model",
          "Edit Profile Views and Templates",
          "Edit Profile Tests",
          "introduction to AWS SES",
          "Implementing Email Templates",
          "Increasing Sending Limits in AWS SES",
          "User Registration Email Confirmation Code",
          "Confirmation Code Functionality",
          "Confirmation Code Testing",
          "Forgot and Reset Password",
          "Forgot and Reset Password Form Work",
          "Forgot and Reset Password Views",
          "Reset Password Tests",
          "Change Password",
          "Change Password Tests",
          "Image Uploading Setup",
          "The Imaging Library",
          "The Edit Form and Template for Image",
          "The Edit View for Imaging",
          "Setting up Amazon S3",
          "Section 3 Quiz"
        ],
        "The Relationship Module": [
          "Starting the Relationship App",
          "Playing with the Relationship Model",
          "Get Relationship Helper",
          "The Relationship Frontend",
          "Relationship Views",
          "More Work on Relationship Views",
          "Complete Relationship Frontend",
          "Relationship Tests",
          "Relationship Tests Part 2",
          "Adding a Profile Image",
          "The Friends Sidebar",
          "The Friends Page",
          "Reusable Follow Button",
          "Relationship Emails",
          "Section 4 Quiz"
        ],
        "The Feed Module": [
          "Introduction to the Fan Out pattern",
          "The Feed Model",
          "Adding the Feed Form to Profile View",
          "Feed Views",
          "Feed Process Message",
          "Feed Message Template",
          "Messages in Profile Views",
          "The Feed Home",
          "Feed Images - Model, Form, Views",
          "Feed images - Resizing, Templates",
          "Feed Timestamp - Milliseconds",
          "Feed Comments - Model and Views",
          "Feed Comments - Templates",
          "Comment Cleanup - Adding Likes",
          "Only See Friend's Posts",
          "Don't Distribute to Blocked Users",
          "Feed Tests - Part 1",
          "Feed Tests - Part 2",
          "The New Homepage",
          "Section 5 Quiz"
        ],
        "Final Project": [
          "Final Project"
        ],
        "Bonus Section": [
          "Course Promo"
        ]
      },
      "requirements": [
        "A computer with internet access and administrative access to install packages",
        "Good understanding of how to use the command line interface, internet and code editors",
        "A credit card is required to open an account on the cloud infrastructure provider",
        "Good knowledge of the Python programming language",
        "Good knowledge of the Flask web framework",
        "Basic knowledge of HTML, CSS and jQuery"
      ],
      "description": "This course will teach you some of the advanced development concepts used in the top tech companies today. How do I know this? Because I’ve been leading tech teams in both large enterprise as well as startup companies in New York City for the past 15 years.\n\nThousands of students have completed my \"Professional Python Web Development Using Flask\" Udemy Course, which introduced them to the basic concepts of Python and Flask and this course builds on top of that knowledge and takes you to the next step in web application architecture design.\nThe course goes through the process of building a social web application using Python Flask and the most popular document store database in the market: MongoDB. We will go over modeling best practices, how to build efficient indexes and how to interact with it using the popular MongoEngine ORM.\nStep-by-step we will go over the user registration, login and management, the relationship model for users to become friends, and a scalable news feed system using the same architectural design that Twitter and other popular social applications have been using to handle massive amounts of user data.\nAdditionally we will setup and use Amazon’s AWS cloud infrastructure for this social application, and you will learn how to manage thousands of images using Amazon S3 and best-of-class email distribution using Amazon SES.\nAt the end of the course students will be challenged with a final project where all the course material will need to be used to complete it. Students that finish the final project will be eligible for special future promotions.\nIf you already know the basics of Python and Flask and you are interested in advancing your knowledge, this course will go over some of the advanced concepts of web application development, architecture design, database modeling and leveraging cloud infrastructure services.\nThe course is divided in 7 sections:\nIntroduction\nFundamental Concepts\nMongoDB and Flask Blueprints\nThe User Module and an Introduction to AWS\nThe Relationship Module\nThe Feed Module\nFinal Project\n\n\nThe course has more than 13 hours of video tutorials as well as the source code at the end of each lesson, so that you can see exactly what the whole project looks like in each stage.\nThe course can take anywhere from 10 days to a month to complete based on how much material the student completes daily.\nAdditionally we’re constantly updating the course, adding contents thanks to the feedback of our students.\nJoin this course and continue your path to becoming a professional Python backend web developer!",
      "target_audience": [
        "Programmers and developers with basic Python knowledge who want to expand their skills",
        "Application architects who want to understand better how to scale their applications",
        "Software developers who want to understand how to build API applications",
        "Startup CTOs who want to understand better best practices for application development",
        "Computer Science Students who want to get exposed to real life concepts"
      ]
    },
    {
      "title": "Master Svelte Framework - The Complete Course",
      "url": "https://www.udemy.com/course/master-svelte-framework-the-complete-course-2023/",
      "bio": "Build a user-friendly website with Svelte and SvelteKit - inc. Firebase, SSR, and more!",
      "objectives": [
        "Learnt the foundations of Svelte and SvelteKit first, then take the next step",
        "Learn Firebase with SvelteKit",
        "Built your own interactive website with Svelte and SvelteKit",
        "Create and manage user sign ups, log ins, and authentication",
        "Build a 'Like' / 'Unlike' voting system for users",
        "Everything you learn in this course and project build can be transferred over to your own site builds"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Svelte Introduction": [
          "Introduction",
          "Svelte up and Running",
          "Svelte Project Tour",
          "Creating Svelte Components",
          "Outputting Javascript Variables",
          "Props",
          "Styles",
          "Binding Variables to Inputs",
          "Color Picker Challenge",
          "DOM Events",
          "Custom Events",
          "Reactive Statements",
          "Reactive Variable Challenge",
          "If template",
          "Each Template",
          "Each Template Id",
          "Await Template",
          "Magic The Gather Counter Challenge",
          "Deploying Magic Gather Challenge",
          "Lifecycle Events (onMount & onDestroy)",
          "Lifecycle Events (beforeUpdate & afterUpdate)",
          "Readable Stores",
          "Writable Stores",
          "Custom Stores",
          "Derived Stores",
          "Contact List Challenge",
          "Introduction to Actions",
          "Actions With Parameters",
          "Slots",
          "Draggable Component (Slot Challenge)",
          "Overview"
        ],
        "SvelteKit Introduction": [
          "Introduction",
          "Getting Started",
          "SvelteKit Tour",
          "Pages and Routes",
          "Routing Parameters",
          "Server Load Function With Environment Variables",
          "Random Number Challenge",
          "Layouts",
          "Prefetching Links and Page Store",
          "Challenge build a personal webpage",
          "Deploying to Vercel",
          "Forms / Form Actions",
          "Form Challenge",
          "Page Rendering Options",
          "Error Pages",
          "API Routes",
          "Create hook",
          "Overview"
        ],
        "SvelteKit with Firestore, Firebase Auth and SSR": [
          "Introduction",
          "Project Setup",
          "Firebase Setup",
          "Bootstrap Navbar",
          "Navbar Mobile Challenge",
          "Navbar Link Highlighting",
          "Messages",
          "Initialize Firebase Client Side",
          "Login with google",
          "Auth Store",
          "Logout",
          "Register Email And Password",
          "Login with email and password",
          "Forgot Password Workflow",
          "After Login Redirect",
          "Saving the user to Firestore Client Side",
          "Firebase initialize on the server",
          "Firebase server auth plan",
          "Token Endpoint",
          "Send Token After Register Challenge",
          "Refresh Token",
          "Logout server side",
          "Auth Hooks",
          "Add Book Validation Part 1",
          "Add Book Validation Part 2",
          "Save Book Database",
          "Show Book Page",
          "Edit Book Page",
          "Enhanced Forms",
          "Like Endpoint",
          "Like Component",
          "Toggling Like",
          "Books Home Page",
          "Like Component Bug",
          "Pagination",
          "Book Component & Home Page",
          "Profile Page Setup",
          "My Books",
          "Fix Book Link",
          "Favorite Books",
          "Unliking books on favorites page",
          "SSR Menu",
          "Real Time New Book Alerts",
          "Deploying to Vercel",
          "Overview"
        ],
        "Course Overview": [
          "Course Overview",
          "Bonus"
        ]
      },
      "requirements": [
        "No prior Svelte or SvelteKit knowledge needed!",
        "Students should know some basic Javascript."
      ],
      "description": "Welcome to Master Svelte Framework - The Complete Course\nIn this course you'll master Svelte and SvelteKit AND learn how to build a fully-functional website as you do! It's a major website build that you can populate with users and user posts, profiles, voting and more - and it's a brilliant way to practice as you learn!\nAs well as the main project, this 13 hour course is filled with dozens of mini-exercises that challenge you to use what you've just learnt and apply it. This is a hands-on coding course!\n\n\nWhy learn Svelte?\nWrite less code! Simplified and streamlined, Svelte is significantly quicker to script than React or Vue\nEasy to learn! Svelte is all HTML, so for newer developers it's intuitive to use and easy to master\nGrowing in popularity! Each year Svelte gets more and more popular and is now used by the New York Times, Ikea, Apple Music and more.\nSvelte is one of the most loved frameworks! In 2021 developers voted Svelte the 'most loved' framework (at 71.47%) and in 2022 Svelte love grew by almost 4% to 75.28% (Stackoverflow Developer Surveys 2021 and 2022)\n\n\nMaster Svelte Framework - The Complete Course is a hands-on deep dive in to Svelte and Svelte Kit. Starting with the basics of each, you'll quickly move on to the main project that the course is built around - a giant Book Lover website project!\nBuilding this website put all your new skills to the test, and each new technique builds on what you just learnt! By the end of the course you'll be able to build a website from scratch that lets users:\nRegister with an email and log in to the site with a password\nAdd their own book information  to the site via a form\n'Like' and 'Unlike' a book they see on the site\nCreate a reactive profile page - with a 'My Books' page and a 'Favourite Books' page\nLearn Firebase and SSR with SvelteKit\nThis course is aimed at beginners to Svelte andSvelteKit, and teaches students everything they need to dive in to Svelte Framework development. Students should have some basic Javascript knowledge.\nBy the end of the course you'll have the skills and knowledge you need to build a site that users can log in to, post content to and vote on their favourite content. It's a lot of functionality, a lot of fun, and a great project for your portfolio too!\nEnjoy the course, and happy coding!",
      "target_audience": [
        "Anyone new to Svelte and Svelte Kit, or any good coders looking to increase their Svelte knowledge"
      ]
    },
    {
      "title": "Learn Full stack development with Django and react",
      "url": "https://www.udemy.com/course/full-stack-development-with-django-react/",
      "bio": "Let's build a complete tshirt selling store with payment gateway, Django 3 and modern React js with hooks",
      "objectives": [
        "Full stack development",
        "Build an e-commerce application with payment gateway",
        "Django 3 with REST API",
        "Modern React JS with hooks",
        "Build complete application",
        "A full tShirt selling store with admin"
      ],
      "course_content": {},
      "requirements": [
        "Basics of python (loops and functions)",
        "Basics of Javascript (loops and functions)",
        "We don't expect prior knowledge of Django and react for this course"
      ],
      "description": "Welcome to Complete full stack web development course with Django 3 as backend and ReactJS in front end. Along with this we will use a payment gateway to configure our t-shirt selling store.\nFull Stack web development is really high in demand and in this course, we are bringing 2 of the most popular programming languages together, Python and JavaScript. We will start by installing python and a virtual environment. After that we will install Django and will work on backend. We are using a scalable approach of dividing project into multiple Django apps. Further we will create API from our backend so that in future you can modify front end without any issues. Django development is very fast and you will quickly realise it.\n\n\nWe will use core Django framework as well as Django REST framework to create backend API. We will also learn to modify framework so that we can sign up custom user in this application\n\n\nMoving to front end, first we will take some crash courses in react, bootstrap and react navigation so that you can come to speed. After that we will create a react project and will structure front end to talk to backend. We will create a modular structure for front end so that in future multiple team can work on front end too. We will learn to create request to multiple URLs of backend and provide authentication to some routes.\nWhen we sign up and sign in from front end, we will learn JSON based request as well as form data based request. We will also learn to protect some routes, so that only authenticated users can access it.\n\n\nFinally we will also learn to integrate payment gateway both at backend and front end of the application. We will study the documentation of the payment gateway and flow of payments. After that user will be able to place order from our store.\n\n\nThis course is packed with lots of information and you will enjoy the learn process!\n\n\nSee you inside the course",
      "target_audience": [
        "Beginner in full stack development",
        "Beginner in Django",
        "Beginner in Reactjs"
      ]
    },
    {
      "title": "Practical CSS3 Flexbox Media Queries & CSS Grid Mastery",
      "url": "https://www.udemy.com/course/master-responsive-web-dev-with-css3-flexbox-media-queries/",
      "bio": "Learn to build responsive websites with the help of CSS3 Flexbox, CSS Grid, Media Queries & how to use Git and Github",
      "objectives": [
        "You will learn about Responsive web design and development",
        "You will learn all concepts of Flexbox and how to use them",
        "You will learn the concepts of Media Queries and how to use them",
        "You will learn CSS Grid and how to use it for responsive web design",
        "You will learn to use HTML and CSS3",
        "You will learn the basics of Git and Github, commit your code to github",
        "You will learn to use Visual Studio Code editor and related extension"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Course Overview",
          "Know Your Instructor & Get Help/Support",
          "Installing VS Code and Server extension",
          "Introduction to Flexbox",
          "Setup index.html and style.css files",
          "Reset margin padding box-sizing on universal operator",
          "Styling the Boxes"
        ],
        "Working with Flexbox": [
          "Apply display flex on parent",
          "Flex Direction row row-reverse column column-reverse",
          "Flex grow shrink",
          "Justify Content Flex Start",
          "Justify Content Flex End",
          "Justify Content Center",
          "Justify Content Space-Around",
          "Justify Content Space-Between",
          "Why you should not use Float property",
          "Align Item Flex End",
          "Align Item Flex Start",
          "Align Item Center",
          "Flex Basis same as Width on Flex Item",
          "Responsivesness with Media Query",
          "Flex Wrap Layout Creation",
          "Styling the Flex layout",
          "Making Screen Responsive with Flex Wrap",
          "Enhancing the responsiveness"
        ],
        "Media Queries and Responsive Web Development": [
          "What is meant by Responsiveness",
          "Example of Non_responsive website",
          "Creating HTML Skeleton for non-responsive website",
          "Styling the non responsive page"
        ],
        "Media Queries Breakpoint for different devices": [
          "Different Device break points",
          "Make Responsive in device upto 768px",
          "Make Responsive for device width upto 468px",
          "Make Responsive for device width above 1024px",
          "Making Responsive between 769px and 1023px"
        ],
        "Git and Github": [
          "Git and Github Part-1",
          "Git and Github Part-2",
          "Git and Github Part-3",
          "Git and Github Part-4"
        ],
        "CSS Grid": [
          "Setup Html and Css Layout - Part-1",
          "Setup Html and Css Layout - Part-2",
          "Background color to boxes",
          "Display Grid with Rows and Columns",
          "Fractional unit for occupying full width",
          "Gap between row and column",
          "Short hand for template rows and columns",
          "Short hand for grid row and column gap",
          "Row and Column lines",
          "Moving Grid element position",
          "Shorthand for row and column and full width",
          "Auto Rows & Explicit and Implicit layout",
          "Responsive behavior only with css grid without media queries"
        ],
        "Source code": [
          "Source code"
        ]
      },
      "requirements": [
        "No Programming Knowledge"
      ],
      "description": "In the course, you will learn all the concepts of flexbox and media queries.\nWe will learn all the concepts with the help of code examples.\nFollowing are the topics we will cover:\n1.1-Installing VS Code and Server extension\n1.2-Introduction to Flexbox\n1.3-Setup index.html and style.css files\n1.4- Reset margin padding box-sizing on universal operator\n1.5-Styling the Boxes\n1.6-Apply display flex on parent\n1.7-Flex Direction row row-reverse column column-reverse\n1.8-Flex grow shrink\n2.1-Justify Content Flex Start\n2.2-Justify Content Flex End\n2.3-Justify Content Center\n2.4-Justify Content Space-Around\n2.5-Justify Content Space-Between\n3.1-Why you should not use Float property\n3.2-Align Item Flex End\n3.3-Align Item Flex Start\n3.4-Align Item Center\n3.5-Flex Basis same as Width on Flex Item\n4.1-Responsivesness with Media Query\n4.2-Flex Wrap Layout Creation\n4.3-Styling the Flex layout\n4.4-Making Screen Responsive with Flex Wrap\n4.5-Enhancing the responsiveness\n1.1-What is meant by Responsiveness\n1.2-Example Non_responsive website\n1.3-Creating HTML Skeleton for non-responsive website\n1.4-Styling the non responsive page\n2.1-Different Device break points\n2.2-Make Responsive in device upto 768px\n2.3-Make Responsive for device width upto 468px\n2.4-Make Responsive for device width above 1024px\n2.5-Making Responsive between 769px and 1023px\nCreating account on Github\nInstalling Git bash\nCreating github token and connecting from local\nUsing git commands to commit and push our local code\nYou will get the complete source code",
      "target_audience": [
        "Any one who wants to learn how to create responsive website"
      ]
    },
    {
      "title": "WordPress Plugin Development",
      "url": "https://www.udemy.com/course/create-wordpress-plugins/",
      "bio": "Complete guide on WordPress Plugin Development with a real life API using PHP, JSON and Ajax.",
      "objectives": [
        "Create a plugin for WordPress",
        "Work with Hooks, Actions and Filters",
        "Work with API's in wordpress",
        "Create an admin page for your plugin",
        "Create widgets",
        "Create shortcodes"
      ],
      "course_content": {},
      "requirements": [
        "You should be comfortable with working with WordPress",
        "You Should have written some PHP before, or know it's concepts.",
        "You should be able to understand HTML and CSS"
      ],
      "description": "This step-by-step course will teach you how to create your own plugin for WordPress using methods that are being used for WordPress pluging Development by industry experts. When you are finished with the course you will know how to create a fully functional Plugin that is created with PHP, HTML, CSS and AJAX and uses data we get from the New York Times using an API!\nOver 2 hours of video in which you will learn everything you need to know to get you started with creating plugins. I will tot only teach how to create a plugin but also what to do and what not to do. But there is more. We are working with an Application Programming Interface (API). With that API we fetch real time data from the New York Times and show that on our website. With the techniques you learn, you can build your own plugin, with an admin page, front-end widget or shortcodes. You can even get data from other API's out there, like Twitter or Facebook. I know the whole idea of creating a plugin can be overwhelming, do do not hesitate to contact me, i will make sure I guide you and help you. If you are not pleased with the content, you can ask for a 100% refund, no questions asked.\n\nFor this course you will need a basic understanding of HTML, CSS and PHP. This course will not teach you how to write PHP but how to create a WordPress plugin with PHP.",
      "target_audience": [
        "When you are learning more about WordPress and want to make the next step by building your own plugin that will seed your needs."
      ]
    },
    {
      "title": "PSD to Bootstrap 3 for Beginners using HTML & CSS",
      "url": "https://www.udemy.com/course/psd-to-bootstrap/",
      "bio": "Learn how to recreate Photoshop designs into responsive Bootstrap pages or sites using HTML & CSS.",
      "objectives": [
        "Develop sites in the bootstrap framework",
        "The skills & knowledge to start building your own pages, and templates in the bootstrap framework",
        "Project files included",
        "Lifetime access to the course"
      ],
      "course_content": {},
      "requirements": [
        "Mac or PC",
        "HTML Editor",
        "Photoshop (any version)"
      ],
      "description": "Transform Photoshop templates and designs info fully working responsive websites or landing pages using the bootstrap framework.\nLearn the basic concepts, tools, and functions that you will need to build fully functional websites or landing page with the popular bootstrap framework using HTML & CSS programming language.\nBootstrap components\nGrid System & Media Queries\nCustom fonts\nWorking carousel\nFont-Awesome icons\nAnimate CSS & WOW js\n\nStop paying someone else to transform your designs into working sites!\nDo you design templates in Photoshop and have to pay someone else to code them into working pages or sites? If so, then you are wasting money. This course will give you the skills to turn those designs into fully working sites or pages.\nDo you code sites and want to add another skill to your portfolio? Then you can see how easy it is to turn a PSD design into a fully responsive website or landing page using the bootstrap framework.\nYou could earn extra money by helping designers turn their designs into working responsive bootstrap websites.\nLearning the basic fundamentals of the bootstrap framework puts a powerful and very useful tool at your fingertips. Bootstrap is free, easy to learn, has excellent documentation, and can help you take your design skills to the next level.\n\nSuitable for programming beginners, through this course of 50 lectures and 3 hours of content, you’ll learn all of the Bootstrap fundamentals and establish a strong understanding of the concept behind the code and it's components.\nThe instructor will walk you through each chapter to make sure you fully understand what you are coding so you can start putting your new learned skills into practical use immediately.\nStarting with the installation of the bootstrap framework, this course will take you through what bootstrap is, including the famous grid system, media queries, components and how to use them. You will also discover what sections of the PSD you need and what can be built directly in the bootstrap framework, which will save you time and effort in the future.\nStudents completing the course will have the knowledge to create functional and useful bootstrap sites and landing pages in the future.\n\nComplete with working files and code samples, you’ll be able to work alongside the author as you work through each concept, and will receive a verifiable certificate of completion upon finishing the course.",
      "target_audience": [
        "Beginners or designers that want to learn how to code",
        "Students wanting to develop sites in bootstrap",
        "Students with a basic understanding of HTML & CSS",
        "Students who want to develop their first website or landing page"
      ]
    },
    {
      "title": "PHP OOP with MySQL: Build Restaurant Management System",
      "url": "https://www.udemy.com/course/php-oop-with-mysql-2023-build-restaurant-management-system/",
      "bio": "Build Restaurant Management System and Fast Food Ordering System in the Same Project in PHP MySQL Bootstrap PayPal",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Build a full authentication system",
        "Learn to hash and dehash passwords with PHP",
        "Learn to use advanced PDO queries",
        "Learn to implement Paypal Payment professionally in you web app",
        "Handle validation like a pro and prevent user to sensitive date",
        "Learn how the business logic of a booking system works under the hood",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Create an amazing admin panel",
        "Learn to fix bugs along the way of developing this web app",
        "Create a cart System",
        "Build a checkout system",
        "Learn how to write clean code with OOP",
        "Learn how to integrate different parts of code together so they can work in the same system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing VS Code"
        ],
        "(PHP OOP) Creating our App Class": [
          "Design and Code for the Project",
          "Creating App Class and Connecting to DB",
          "Selecting Data from DB",
          "Performing CRUD Operations",
          "Creating Register and Login Methods",
          "Starting and Validating Sessions"
        ],
        "Setting up and Creating Authentication System": [
          "Preparing Folder Structure and Setting up",
          "Registering Users",
          "Logging Users in",
          "Validating and Creating Sessions"
        ],
        "Creating Cart and Checkout": [
          "Displaying Food Items in Index Page",
          "Displaying Single Food Item",
          "Adding Items to Cart",
          "Validating Items in Cart",
          "Displaying Cart Items",
          "Deleting from Cart",
          "Checking out"
        ],
        "Paying with PayPal Creating Bookings and More": [
          "Paying with Paypal pt.1",
          "Paying with Paypal pt.2",
          "Validating and Cleaning up pt.1",
          "Validating and Cleaning up pt.2",
          "Performing Booking Tables"
        ],
        "Creating Users Pages and Finishing Users End": [
          "Showing Bookings for every User",
          "Showing Orders for every User",
          "Validating and Cleaning Users Side",
          "Writing Reviews",
          "Showing Reviews and Working with Booking Page"
        ],
        "Getting Started with Admin Side": [
          "Code and Design for Admin Panel",
          "Logging Admins in",
          "Creating Sessions and Validating"
        ],
        "Finishing Admins up": [
          "Showing Admins",
          "Adding New Admins",
          "Working with Index Page"
        ],
        "Finishing Orders up": [
          "Showing Orders",
          "Updating Order Status",
          "Deleting Orders"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and PDO",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Are you as fired up as I am? Do you want to build something awesome? Something amazing? Are you a web developer who wants a cool job? If so, then this course is for you. In this course, you will learn how to build a complete Restaurant booking system with food ordering in the same web app from the ground up in a few hours. I already made sure that every part of this course is concise, elegant, and informative, so don't miss out on this cool opportunity. I also included the files needed in different parts of the course for you to follow along with me step by step.\n\n\nHere is what you are going to learn, first of all, I am going to introduce you to the tools that we are going to be using in this course. We are going to build a class that will help us throughout the whole project and then we are going to build a full authentication system from scratch. While building this system I am going to introduce you to hashing and dehashing passwords. And then, we are going to build general and cool features inside our own app. It's going to be mainly on selecting and placing data. After this part, We are going to build a cart system where we will allow users to add food items to the cart so they can order these items online. And then naturally to the checkout page and after this, I am going to show you how to pay with PayPal easily and nicely. After this part is done I am going to show you how the booking part is done with clean elegant code and full validation. Since this part is done we will only have some general parts on the user end like grabbing bookings and orders for every user, allowing users to write reviews, and so on. And then to the admin panel which is going to be really simple yet very functional and you are going to learn a lot building it. So, to sum up, if that sounds like something interesting to you, go ahead and get the course now.",
      "target_audience": [
        "People who learned PHP and MySQL and want to build a full project",
        "Developers who want to build their CVs",
        "Aspiring programmers who want to level up their development skills with new techniques"
      ]
    },
    {
      "title": "CSS Fundamentals: Comprehensive Training for Web Developers",
      "url": "https://www.udemy.com/course/css-fundamentals-comprehensive-training-for-web-developers/",
      "bio": "Elevate your CSS skills with advanced CSS techniques for dynamic, modern web development",
      "objectives": [
        "Understand the fundamentals of CSS and its role in web development.",
        "Understand the CSS Box Model and its components (content, padding, border, margin).",
        "Master CSS selectors to target specific HTML elements for styling.",
        "Apply typography techniques to enhance text content, including font families, sizes, and spacing.",
        "Incorporate background images into web design for visual appeal.",
        "Implement responsive web designs using CSS media queries.",
        "Understand CSS transformations (e.g., rotate, scale, skew) to elements for dynamic effects.",
        "Build image sliders and carousels using the Cycle2 JS library and using others external libraries for more functionality.",
        "Conduct cross-browser and device testing to ensure website compatibility."
      ],
      "course_content": {
        "Welcome": [
          "Welcome to the Course",
          "What you will learn in this Course"
        ],
        "Getting Started": [
          "Section Overview",
          "Introduction to CSS",
          "Types of CSS",
          "Different Types of Selectors",
          "Section Conclusion",
          "section-2 Quiz"
        ],
        "CSS Fundamentals": [
          "Section Overview",
          "Box Model",
          "Box Shadow",
          "Box Radius",
          "CSS Grid",
          "CSS Flexbox",
          "Designing Table",
          "Section Conclusion",
          "section-3 Quiz"
        ],
        "Typography": [
          "Section Overview",
          "Google Fonts",
          "Custom Fonts",
          "Typography",
          "Section Conclusion",
          "section-4 Quiz"
        ],
        "Background and Images": [
          "Section Overview",
          "Background Image",
          "Linear Gradient",
          "Radial Gradient",
          "Conic Gradient",
          "Transparent Background",
          "Section Conclusion",
          "section-5 Quiz"
        ],
        "Making a Single Page Website - Project": [
          "Section Overview",
          "Making a Navigation Bar",
          "Making a Hero Section",
          "Making a About Section",
          "Making a Portfolio Section",
          "Making a Contact Section",
          "Section Conclusion",
          "section-6 Quiz"
        ],
        "Responsive Web Design": [
          "Section Overview",
          "Making a Responsive Menu",
          "Section Conclusion",
          "section-7 Quiz"
        ],
        "Transition and Animations": [
          "Section Overview",
          "CSS Transform",
          "CSS Transitions",
          "CSS Animations",
          "Section Conclusion",
          "section-8 Quiz"
        ],
        "Advanced Topics and Libraries": [
          "Section Overview",
          "Making Slider",
          "Lightbox Gallery",
          "Section Conclusion",
          "section-9 Quiz"
        ],
        "Testing and Conclusion": [
          "Section Overview",
          "Feature Detection",
          "Chrome Inspect Element and Developer Tools",
          "Section Conclusion",
          "section-10 Quiz"
        ]
      },
      "requirements": [
        "No prior CSS experience is required. Basic HTML knowledge is recommended."
      ],
      "description": "This comprehensive course is designed to elevate your CSS skills and transform your Web Development projects. Focusing exclusively on CSS, you'll begin by mastering the fundamentals—learning about different types of CSS, essential selectors, and the Box Model. You'll then progress to core techniques including Box Shadow, Border Radius, and responsive layout systems like CSS Grid and Flexbox.\n\n\nDelve into creative styling as you explore CSS Typography with custom and Google Fonts, and learn to apply advanced background techniques using linear, radial, and conic gradients. The course also covers the art of designing a single-page website, guiding you through creating engaging navigation bars, hero sections, and portfolio elements.\n\n\nFurther your expertise with in-depth lessons on responsive web design and dynamic transitions and animations that add flair to your projects. Advanced CSS topics are also addressed, with modules on integrating popular libraries such as Cycle2 for sliders and Lightbox2 for gallery lightboxes, as well as essential testing techniques using modern tools like caniuse, Modernizr, and Chrome Developer Tools.\n\n\nWhether you're just starting out or looking to enhance your Advanced CSS techniques, this course provides all the tools and insights needed to excel in modern Web Development.\n\nEnroll now and let's embark on the path to CSS mastery together!\n\n\nWhy Enroll:\nBy the end of this course, you'll have the expertise to design and style web pages like a pro. You'll build a robust skill set in CSS, enabling you to create captivating web experiences, from beautifully styled forms to responsive layouts and dynamic animations. Join us on this exciting journey to become a CSS expert and elevate your web development career.",
      "target_audience": [
        "Web Developers looking to solidify their CSS skills.",
        "Beginners are eager to dive into web design and development.",
        "UX/UI Designers seeking a better understanding of CSS for their projects.",
        "Anyone interested in creating visually appealing and responsive websites"
      ]
    },
    {
      "title": "Django 4 Masterclass: From Development To Deployment",
      "url": "https://www.udemy.com/course/django-4/",
      "bio": "Learn Django from scratch, build & deploy Django apps with advanced features like authentication & payment integration.",
      "objectives": [
        "Learn The Latest Django Version i.e Django 4",
        "Learn Django Basics From Scratch & Gain Essential Skills To Apply For Junior Level Django Developer Positions",
        "Learn About Models, Views & Templates in Django",
        "Learn How To Integrate Stripe Payment Gateway To Collect Payments In Your Django App",
        "Deploy Django App To A Real Server With Digital Ocean",
        "Learn How To Design & Style Your Django App Using Tailwind CSS",
        "Learn How To Perform Authentication i.e Register, Login, Logout Users In Your Django App",
        "Learn How To Implement Class Based Views In Django",
        "Learn How To Customise Django Admin Panel",
        "Add Pagination & Search Functionality To Django Apps",
        "Learn How to Build Web Applications With Django & Python"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction To Django",
          "Section Notes: Introduction To Django"
        ],
        "Installing On Windows": [
          "Installing Python On Windows",
          "Installing Virtualenv on Windows",
          "Creating Virtualenv On Windows",
          "Installing Django On Windows",
          "Creating A Django Project"
        ],
        "Installing Django On Mac": [
          "Installing Python On Mac",
          "Installing Virtualenv On Mac",
          "Creating Virtualenv On Mac",
          "Installing Django On Mac"
        ],
        "Creating A Django Project, Views & URL Patterns": [
          "Understanding Significance Of Project Files",
          "Running Project On Local Server",
          "Creating A Django App",
          "Creating Our First View",
          "Adding URL Patterns To App",
          "Creating Another View",
          "Section Notes: Creating A Django Project, Views & URL Patterns."
        ],
        "Database & Models In Django": [
          "Introduction To Database & Models",
          "How Data Is Stored In Django",
          "Creating A Database Table",
          "How Tables Are Created In Backend",
          "Section Notes: Database & Models In Django"
        ],
        "Django ORM": [
          "Introduction To Django ORM",
          "Saving Products Using Django ORM",
          "Retrieving Products Using ORM",
          "Accessing Django Admin Panel",
          "Section Notes: Django ORM"
        ],
        "Views & Templates": [
          "Getting Products Inside View",
          "Creating A Template",
          "Rendering Template & Passing Context",
          "Looping Through Objects",
          "Detail View Part 1",
          "Detail View Part 2",
          "Creating Links For Product Detail",
          "Removing Hardcoded URLs",
          "Namespacing URLs",
          "Section Notes: Views & Templates"
        ],
        "Adding Styling To Django Project With CSS & Tailwind": [
          "Introduction To Styling",
          "Adding CSS To Django Project",
          "Installing Node For Tailwind",
          "Setting Up Tailwind For Django",
          "Designing Navbar Part 1",
          "Designing Navbar Part 2",
          "Using Base Template",
          "Using Base Template In Detail View",
          "Adding Image Field To Model",
          "Adding Site Hero Using Tailwind",
          "Adding Card Layout To Products",
          "Styling The Detail Page"
        ],
        "Forms & CRUD Operations In Django": [
          "Introduction To CRUD",
          "Creating A Form To Accept Products",
          "Getting Form Data",
          "Testing The Form",
          "Styling Add Product Form",
          "Update Part 1",
          "Update Part 2",
          "Update Part 3",
          "Delete Part 1",
          "Delete Part 2"
        ],
        "Authentication": [
          "Section Intro",
          "Introduction To Authentication",
          "Creating The Users App",
          "Registration Form",
          "Template To Render Registration Form",
          "URL Patterns For Registration",
          "Designing The Registration Form",
          "Removing Focused Outline",
          "Completing Register Functionality",
          "Login Part 1",
          "Login Part 2",
          "Logout",
          "Login Redirect URL",
          "Adding Login Button To Navbar",
          "Login Required Decorator"
        ]
      },
      "requirements": [
        "Must be familiar with the basics of Python",
        "Need to create a Stripe account (required only for payment gateway integration section)",
        "Need to create a Digital Ocean account (required only for deployment section)",
        "Need a credit/ debit card or PayPal account for Digital Ocean (required only for deployment section)"
      ],
      "description": "Django 4 Masterclass 2022 : Build Web Apps With Django\nHere Is What You Get By Enrolling In This Course:\nWord-By-Word Explanation: In the entire course, I explain each line of code, without skipping a single line of code.\nAwesome Quality Content: Over 11+ hours of HD Videos.\nWell Structured & Easy To Learn: Course has been specially designed to make it easy for the students to learn Django starting from a basic level and gradually moving up to advance concepts.\n24 X 7 Support: I will always be there to guide you in your journey to become a Django expert.\n\n\nHere Is Everything You Will Learn In This Complete Course:\nIn this hands-on course, you will learn how to build complex web applications from scratch using Django.\nThe course will teach you Django, right from scratch from a very basic level and will gradually move towards advanced topics like authentication.\nThe entire course is divided into 14 major sections.\nHere is a brief description of what you will learn in each section of the course:\nSection 1: Introduction and installing required software.\nIn this section we will learn what Django is and why it is used. We will also install the tools you will need to start making Django web apps. We will learn how to install Django and setup a Django project both on Windows & Mac individually.\nSection 2: Views & URL Patterns\nDjango is based on the MVT(Model, Views & Templates) architecture and hence we start learning about what are views, how to create our very first view in Django which will power up our first webpage in Django. We then learn how to attach a view with a URL using URL patterns. We learn what are URL patterns and how they can be used to handle incoming URL requests to our Django app. This view section covers function based views as they are much simpler and offer more functionality, however in the later part of the course we will also learn class based views as well which is another way of implementing views in Django.\nSection 3: Database & Models In Django\nAfter learning about Views and URLs, it's now time to learn about models. In Django models are a blueprint to create database tables. Unlike other backend frameworks, in Django you don't have to create a database connection and then create database tables by writing SQL queries but instead Django provides you with models using which database tables are automatically generated at the backend without having to write a single SQL query. In this section we learn how to create a model and how to map that model to create a database table out of it in the backend.\nSection 4: Django ORM\nJust as you don't have to write SQL queries to create a model, you don't have to write any queries for querying data from the database either. Django comes with a built-in ORM which stands for Object Relational Mapper which allows you to treat database table entries as individual objects. In this section we learn how to add data to database tables using the ORM and also learn how to retrieve data as well from the database using the same. We also learn how to access the Django admin panel by creating a super user from where data could be added by the site administrator.\nSection 5: Views & Templates\nOnce we have learned the basics of how views work in Django, we now learn how to populate these views with some database data. We also learn how to connect these views with templates which are nothing but HTML pages rendered dynamically by Django. We also learn how dynamic database data can be injected into these templates by passing context. We also learn how to create detailed views for products and handling hardcoded URLs associated with these detail views.\nSection 6: Adding Styling To Django Project With CSS & Tailwind\nAfter making a barebones app, we now learn how to style up our Django app. There are multiple CSS frameworks and libraries that can be used for styling apps but the one we will be using is Tailwind CSS. It is one of the most modern ways of styling the webpage. With its utility classes we can style every element of our webpage inline without having to create an external CSS file for it. We will learn how to setup Tailwind for a Django project, how to create a navigation bar with it and also how to stye out Django powered webpages with Tailwind.\nSection 7: Form & CRUD Operations In Django\nEvery web application has to perform basic operations like create, read, update & delete data which is also termed as CRUD. In this section we will learn how to design forms in Django so that the end user of our website could perform all these four operations without any issues. Once you learn how to implement CRUD in Django you will be capable of building almost any basic web application in Django.\nSection 8: Authentication\nIt important that we limit certain features of our website to registered users and this is exactly what we will be learning in this section. We learn how to register a user to our Django app, how to login a user and how to control access to certain pages and certain actions to just these logged in users. We also learn how to design the logout functionality so that the users could log out of our application. This entire process is called authentication and we will learn how to implement authentication in our Django app.\nSection 9: Creating User Profile\nEvery registered user must have their own profile, in this section we will start off by learning how to add a functionality that allows every user to create their own profile. We will then learn how to associate a user with the products which they have posted for selling on our Django web app. This can be done by using relationships and keys between two models. We will connect the user model with the product model so that every product would be associated with a user. We will also create a listing page for every user where they can view all the products listed by them on our web app.\nSection 10: Class Based Views In Django\nWe have already learned about the function based view in the earlier part of the course but there is an alternative and a cleaner approach of creating views and that is using class based views. In this section we will re-create every single function based view which is present in our application into a class based view and in the process also learn about the generic views offered by Django such as the ListView, DetailView, CreateView, UpdateView & the DeleteView. we also learn how to add a redirect URL to these views as well.\nSection 11: Customising Admin Panel\nEvery Django application we create comes with a built in Admin panel & it provides us with a functionality to customise this admin panel as per our own needs. In this section we will learn how we could modify the admin headers, how to add custom fields to our model in the admin panel, how to add custom search fields and custom actions as well and how to make fields of a model editable inside the admin panel.\nSection 12: Pagination & Search\nDisplaying hundreds of products on a single page can be challenging, loading them all on a single page might increase the page load times and here is where pagination comes into picture. Pagination is a process of spreading out items in your database to multiple web pages instead of listing them all on a single page. This ensures a better user experience and quick page load times. In this section we will learn how to implement pagination functionality in our Django application and also implement a search functionality which allows users to search multiple products on our web application.\nSection 13: Payment Gateway Integration With Stripe\nAccepting payments is an integral part of any commercial website, hence in this section we will learn how to integrate stripe payment gateway into our Django app so that end users could pay for products and buy them. We will learn how to create a stipe account, how to add secret keys to our application ,we learn how to design the payment and checkout flow to buy any product on our site and return a payment success view upon successful payment. This payment flow could be integrated into any other Django application which you could create.\nSection 14: Deployment\nThis is one of the most interesting part of the course because we will finally be able to deploy our website to the public internet where anyone in the world could access it. We will be using Git & GitHub to initially host our entire project  code online and then deploy the same code form GitHub to DigitalOcean app platform. We learn how to create a code pipeline in such a way that code could be deployed from your local code editor, to Git, to GitHub and finally to DigitalOcean app platform. We learn how to set the environment variables to keep our secret app key private and also learn how to host a remote database and then connect it to our deployed Django application. We will also learn how to fix any issues which may arise in the due process.\n\n\nSo let's begin the journey of becoming a Django expert.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course. If you ever have any questions please feel free to message me directly and I will do my best to get back to you as soon as possible!\n\n\nMake sure to enrol in the course before the price changes.\nTake yourself one step closer towards becoming a professional Django developer by clicking the \"take this course button\" now!\nJoin the journey.\nSincerely,\nAshutosh Pawar",
      "target_audience": [
        "Beginner Python developers or students who want to learn Django",
        "Django developers who want to know how to add payment gateway and host their Django apps on a real server with little effort",
        "Developers from other domains who want to switch roles & get a job as a Django developer."
      ]
    },
    {
      "title": "Python Flask: Make Web Apps with Python",
      "url": "https://www.udemy.com/course/python-flask-make-web-apps-with-python/",
      "bio": "Create web apps using the Python Flask Framework!",
      "objectives": [
        "How to create Python Flask based web apps",
        "How to use Jinja2 Templates",
        "How to use an SQLite database with Flask",
        "How to use CSS to style your Flask web app",
        "How to use an Object Relational Manager through SQLAlchemy",
        "How to create and use HTML forms with your Flask app",
        "How to build Flask web apps (Project: BMI Calculator)",
        "Other neat Flask tricks like Uploading Files, Cookies and Sessions"
      ],
      "course_content": {},
      "requirements": [
        "Basic Python knowledge required",
        "You should know HTML and CSS",
        "Recommended to have SQL or SQLite experience"
      ],
      "description": "This course will teach you how to make your first Python Flask Web Applications\nThe course includes a web app project to help you get started building apps.  It covers all the basics to start writing your own applications. It covers URL Routing, Jinja 2 templates, Cookies, Sessions and other web technologies!\nWe expect you know the basics of Python, HTML and CSS. But don't worry if you're not an expert on these topics yet.\nEnough reading. Time to code",
      "target_audience": [
        "Beginner Python developers, who already learned Python"
      ]
    },
    {
      "title": "Master Course of Rapid Application Development",
      "url": "https://www.udemy.com/course/rapid-application-development/",
      "bio": "RAD - Agile project management - SDLC - Software Development Life Cycle",
      "objectives": [
        "Define the Process and Understanding about Rapid Application Developement (RAD)",
        "Understanding the rapid application development phases",
        "How to manage the Software Engineering and Rapid application development model (RAD) and Project benefits",
        "Differentiate between Rapid Application Development vs. Agile Methodologies",
        "Understanding the System Development Life Cycle (SDLC) and Processing"
      ],
      "course_content": {
        "Video Lectures - Master Course of Rapid Application Development (RAD)": [
          "Introduction of Rapid Application Development (RAD)",
          "Rapid application development phases",
          "Software Engineering, RAD model and Project benefits",
          "System Development Life Cycle (SDLC)",
          "Rapid Application Development vs. Agile Methodologies"
        ]
      },
      "requirements": [
        "No programming experience needed, You will learn everything you need to know"
      ],
      "description": "Master Course of Rapid Application Development\nEmpower yourself with the tools and techniques to revolutionize software development timelines through our comprehensive Master Course of Rapid Application Development (RAD). This advanced program is meticulously crafted for IT professionals, software developers, and project managers seeking to expedite the software development lifecycle and enhance agility in their projects. Explore cutting-edge RAD methodologies, best practices, and hands-on implementation strategies to propel your organization toward faster and more responsive application development.\nThis Master Course begins with an in-depth exploration of the fundamental principles behind Rapid Application Development, offering insights into its origins, evolution, and key tenets. Participants will navigate through the spectrum of RAD tools, frameworks, and methodologies, gaining a holistic understanding of how to select and implement the right RAD approach for their specific projects.\nHands-on labs, interactive workshops, and real-world case studies provide participants with practical experience in leveraging RAD to streamline prototyping, design, and iterative development cycles. Dive into topics such as low-code development, model-driven development, and collaborative methodologies that empower cross-functional teams to work seamlessly !\nBy the end of this Master Course, participants will possess the expertise to design and implement robust RAD strategies, significantly reducing development cycles, enhancing collaboration, and delivering high-quality applications with unprecedented speed. Whether you are a seasoned developer, project manager, or technology enthusiast, this Master Course of Rapid Application Development equips you with the skills to lead innovation in software development. Join us and accelerate your journey toward becoming a master of Rapid Application Development !\nIn this specialised master course you can learn the specialized topics of:\n1. Introduction of Rapid Application Development (RAD)\n2. Rapid application development phases\n3. Software Engineering and Rapid application development model (RAD) and Project benefits\n4. System Development Life Cycle (SDLC)\n5. Rapid Application Development vs. Agile Methodologies\nEnroll now and learn today.",
      "target_audience": [
        "Suitable for IT students, Software development executives, Team leaders, Systems and Technology background learners"
      ]
    },
    {
      "title": "17 Complete JavaScript projects explained step by step",
      "url": "https://www.udemy.com/course/17-complete-javascript-projects-explained-step-by-step/",
      "bio": "Learn faster and enhance your JavaScript skills by building 17 complete projects step by step from scratch",
      "objectives": [
        "Create practical and useful apps for everyday use",
        "Create a calculator",
        "Create a digital clock",
        "Create word length calculator",
        "Create a percentage calculator",
        "Create a button color changer",
        "Create an to display the day of the week",
        "Create a contact form with local storage"
      ],
      "course_content": {},
      "requirements": [
        "A text editor and web browser is required.",
        "You need to have basic knowledge of HTML ,CSS and JavaScript"
      ],
      "description": "The best way  for a  beginner to enhance their skills is by practicing building various projects.\nThis course is a beginner course for those who have some basic knowledge of how HTML, CSS and JavaScript works.\nSome of the projects you will be creating in this practical hands on course include:\nCreating a functional calculator\nCreating a digital clock\nCreating  a word count tool\nCreating a button color changer\nCreating a percentage tip calculator\nCreating a contact form with local storage\nHTML will be used to create the structure of these applications.\nCSS will be used to apply styling to make the applications look nice and presentable.\nJava script creates the functionality for the app and required HTML and CSS to be in place before it can do it's thing.\nThey are are like a canvas for JavaScript to work on.\nIn this course you will learn useful and practical steps to creating web based browser apps that will work when viewed with any modern web browser.\nI will be using google chrome for this project and i advise you do the same.\nA good text editor makes writing code fun and productive.\nI will be using sublime text editor for this course. It is a cross platform text editor that will work on any platform  like windows and macs.It is free to download and use but recommend that you purchase a full license after trying it out if you enjoy using it.\nAnother good cross platform text editor is brackets which is open source and completely free to use. By open source i mean  developers from around the world can contribute to make it even better.\nBy the end of this course you will be confident to build more useful projects .",
      "target_audience": [
        "This course is for anyone with basic knowledge of HTML ,CSS and JavaScript"
      ]
    },
    {
      "title": "Web3 Development for Beginners - NO CODING SKILLS required",
      "url": "https://www.udemy.com/course/web3-development-for-beginners/",
      "bio": "Master tokens, NFTs & smart contracts with a pro guiding you through the entire captivating experience. Join us now!",
      "objectives": [
        "Understand the fundamentals of blockchain and web3",
        "Understand how to read and write smart contracts using Solidity",
        "Explain and develop the connection between frontend and blockchain",
        "Deploy and use smart contracts",
        "Know and understand the economics of the blockchain"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Web3 Introduction",
          "Blockchain Introduction",
          "Programming Introduction",
          "Recap web3 and blockchain"
        ],
        "Blockchain Fundamentals": [
          "How does the blockchain work?",
          "What blockchains you need to know?",
          "What are Layer-2 Blockchains?",
          "Deep dive into Ethereum",
          "Etherscan, Wallets & other tools",
          "Recap Blockchain Fundamentals",
          "Setup a Wallet"
        ],
        "Programming Fundamentals": [
          "Programming boiled down for 5 year olds",
          "NodeJS & Javascript",
          "Interact with Javascript",
          "Solidity Fundamentals",
          "Programming Logic",
          "Standards",
          "Recap Programming Fundamentals"
        ],
        "Blockchain Economics": [
          "Why Blockchain Economics matter?",
          "ERC20 Tokens",
          "NFTs",
          "Supply & Demand",
          "Markets",
          "Liquidity Pools",
          "Recap Blockchain Economics"
        ],
        "Blockchain Development": [
          "Getting the tools ready",
          "Let's deploy with an ERC20 token",
          "Now let's deploy & setup an NFT",
          "Setup Metadata for an NFT",
          "Connecting an NFT to OpenSea",
          "Verifying a Contract on Etherscan",
          "Connecting a Smart Contract to a Website",
          "Extended Smart Contract Features",
          "Recap Blockchain Development"
        ],
        "Where to go from here": [
          "General Guidance",
          "Helpful tools & Thank you"
        ]
      },
      "requirements": [
        "No programming skills needed, as long as you are eager to learn"
      ],
      "description": "Welcome to Web3 Development for Beginners!\n\n\nThis comprehensive course is designed for those with little to no programming experience but are eager to learn about the fascinating world of blockchain technology, decentralized applications (dApps), and the economics behind it all.\nBy the end of this course, you will have a solid understanding of the fundamentals of blockchain and Web3 and the ability to read, write, and deploy smart contracts using the Solidity programming language.\n\n\nCourse Overview:\nBlockchain technology has revolutionized industries by providing a decentralized and secure way to store and transfer digital assets. Web3, a new generation of the internet built on blockchain, has further transformed how we interact with digital platforms, making them more transparent, secure, and user-centric. This course will guide you through the fundamental concepts of blockchain and Web3, including their architecture, consensus mechanisms, and benefits. Additionally, we will explore the economics of blockchain, which is crucial to understanding the incentives and sustainability of these networks.\nThroughout the course, you will learn the ins and outs of smart contracts – self-executing agreements that run on blockchain networks like Ethereum. You will gain hands-on experience in writing smart contracts using Solidity, the most popular programming language for this purpose. Furthermore, we will discuss how to develop a connection between the frontend and the blockchain, allowing you to build fully functional dApps.\nFinally, you will learn how to deploy and use smart contracts on the blockchain, ensuring you have the practical skills to bring your newfound knowledge to real-world applications.\n\n\nCourse Requirements:\nThis course is designed for beginners with no prior programming experience. All you need is a keen interest in learning about blockchain technology and a willingness to dive into the world of smart contracts and decentralized applications. With our step-by-step guidance, you will be amazed at how much you can learn and achieve quickly.\nBy the end of this course, you will have a strong foundation in blockchain and Web3, as well as the practical skills to read, write, and deploy smart contracts using Solidity.",
      "target_audience": [
        "People who want to develop in web3 without any prioer development experience",
        "People who want to develop NFTs and Tokens",
        "Developers with no blockchain experience",
        "Anyone who wants to broaden his/her horizon and learn more about the exiting world of DeFi, NFTs and web3",
        "Future metaverse developers"
      ]
    },
    {
      "title": "Google Apps Script Build 28+ Fun Projects Sites G Suite",
      "url": "https://www.udemy.com/course/google-apps-script-projects/",
      "bio": "Explore Google Apps Script see amazing Google Apps Script projects build power up your GSuite Google Apps Script Plus",
      "objectives": [
        "Build interesting projects that can be used to develop Google Apps Script Skills",
        "Super Charge your Google G Suite Apps with Google Apps Script - over 19 Projects ready for you",
        "Learn G Suite Google Apps Script and how to custom code your G Suite with Amazing functions",
        "How to apply Google Apps Script in Projects",
        "Explore how to use Google Apps Script - Classes and Methods to power up GSuite",
        "How to apply Google Apps Script"
      ],
      "course_content": {
        "Introduction to course and upcoming lessons": [
          "Introduction Google Scripts Projects",
          "Downloadable Guide and Code Snippets"
        ],
        "Introduction to Google Apps Script": [
          "Start Google Apps Script.",
          "Getting Started with Apps Script.",
          "Apps Script Editor.",
          "Source Code",
          "Create a Document.",
          "Source Code",
          "Create a Spreadsheet.",
          "Source Code",
          "JavaScript in Apps Script Variables",
          "Source Code",
          "JavaScript in Apps Script Arrays",
          "Source Code",
          "JavaScript in Apps Script Objects",
          "Source Code",
          "JavaScript in Apps Script Functions",
          "Source Code",
          "JavaScript in Apps Script Conditions",
          "Source Code",
          "JavaScript in Apps Script Loops.",
          "Source Code",
          "Apps Script Coding",
          "Source Code",
          "Create a Web App",
          "Source Code",
          "Google Apps Script Email.",
          "Source Code",
          "Google Apps Script Calendar",
          "Source Code",
          "Google Apps Script Drive.",
          "Source Code",
          "Google Apps Script Conclusion."
        ],
        "Google Apps Script Examples": [
          "Using a WebApp for JavaScript Fetch Get and Post Methods with Apps Script",
          "Web App Get and Post with JavaScript code example"
        ],
        "Form Submission auto response with Google Sheets and Apps Script": [
          "Introduction Google Scripts. Getting started with Apps Script",
          "Google Forms Setup.",
          "Send Email via Script.",
          "Source Code sample email function",
          "Setup Trigger. For automation of scripts on event",
          "Source Code Update Spreadsheet",
          "Copy to another Sheet.",
          "Source Code Spreadsheet updater",
          "Copy content on Submit.",
          "Source Code Sheet Data Range",
          "Sheet data sorter.",
          "Source Code Sort Sheet Column",
          "Check Sheet Data for Value.",
          "Source Code Apps Script",
          "Quick Fixes and Updates.",
          "Source Code Apps Script",
          "Update Spreadsheet UI",
          "Source Code Project",
          "Conclusion Spreadsheet Data",
          "Final Project All Source Code used"
        ],
        "Advanced Services YouTube API made easy with Google Apps Script": [
          "Introduction youTube Project",
          "Project Setup Google Apps Script",
          "Resource Links",
          "Search YouTube API using Google Apps Script",
          "Source Code",
          "Use Data Results From Search",
          "Source Code",
          "Create a Web App with Google Apps Script",
          "Source Code",
          "Create HTML index page Client side web app HTML",
          "Source Code",
          "Get Data from Google Script",
          "Source Code",
          "Output Results to HTML Page.",
          "Output Results to HTML Page Part 2",
          "Output Results to HTML Page Part 3",
          "Project Source Code",
          "Add to Spreadsheet.",
          "Source Code",
          "Code Review youTube Project."
        ],
        "Spreadsheet UI email functionality": [
          "Spreadsheet Email Project.",
          "Google Apps Script Bound Script.",
          "Start Scripting.",
          "Source Code Google Apps Script Email Spreadsheet Project",
          "Get Values from Spreadsheet",
          "Source Code Google Apps Script Email Spreadsheet Project",
          "Create User Object",
          "Source Code Google Apps Script Email Spreadsheet Project",
          "Alert UI Buttons Yes No.",
          "Source Code Google Apps Script Email Spreadsheet Project",
          "HTML Template.",
          "Source Code Google Apps Script Email Spreadsheet Project",
          "Send Email Message",
          "Source Code Google Apps Script Email Spreadsheet Project",
          "Update Spreadsheet column.",
          "Source Code Google Apps Script Email Spreadsheet Project",
          "Final Code Review",
          "Source Code Google Apps Script"
        ],
        "Fun with Spreadsheet series of mini projects that are useful for many projects": [
          "Spreadsheet Code Snippets",
          "Bound Script Starter Lesson",
          "Source Code",
          "Add More Content to Spreadsheet",
          "Source Code",
          "Spreadsheet Formulas with Google Apps Script",
          "Source Code",
          "Update Sheet Content",
          "Source Code",
          "Spreadsheet UI more options",
          "Source Code",
          "Finder and Replace Content",
          "Finder and Replace Content 2",
          "Source Code",
          "Get Cell Values",
          "Source Code",
          "Get Content as HTML. webApp",
          "Source Code",
          "Email Spreadsheet HTML table",
          "Source Code",
          "Copy Spreadsheet as PDF.",
          "Copy Spreadsheet as PDF 2.",
          "Copy Spreadsheet as PDF 3",
          "Source Code Copy App",
          "Content Copy.",
          "Source Code",
          "Search Drive Files",
          "Search Drive Files 2",
          "Search Drive Files Project Source Code",
          "Value Checker if Exists",
          "Source Code",
          "Section Conclusion Code Review",
          "FINAL projects Source Code"
        ],
        "API Data From Spreadsheet": [
          "API JSON Project",
          "Web Developer Setup.",
          "Source Code Client Side HTML",
          "Write Google Apps Script.",
          "Get Spreadsheet Data",
          "Source Code Google Script",
          "Web App Content",
          "Source Code Web App",
          "Connect to WebApp URL.",
          "Source Code JavaScript Client side",
          "Post Data to Sheet.",
          "Source Code JavaScript",
          "WebApp POST",
          "Source Code Web App POST method",
          "Add POST to Spreadsheet.",
          "Google Script Source Code Post",
          "DeBug and Clean Web App.",
          "Web Application Source Code",
          "Application Conclusion Code review.",
          "Project FULL source Code"
        ],
        "Google Drive Image Gallery": [
          "GDrive Image Gallery Project",
          "Web Application Setup.",
          "HTML Source Code",
          "Google Script Web App",
          "Source Code Setup",
          "Get Drive Images",
          "Apps Script Source Code",
          "Connect to WebApp JSON",
          "JavaScript Project Source Code",
          "Create Page Elements.",
          "DOM Page Contents Source Code",
          "JavaScript Popup Image Modal Part 1",
          "JavaScript Modal Popup Source Code",
          "JavaScript Popup Image Modal Part 2.",
          "JavaScript Modal",
          "Code Review Image Gallery",
          "Final Project Source Code"
        ],
        "Google Apps Script Make Images HTML5 Canvas save to Gdrive": [
          "HTML5 Canvas to Gdrive.",
          "Google Apps Script Web App.",
          "Source Code",
          "Images as base64",
          "Source Code",
          "Base64 image client side.",
          "Source Code",
          "Client Side Options",
          "Source Code",
          "Client Side JavaScript.",
          "Source Code",
          "Add Text to Canvas",
          "Source Code",
          "Add Logo to Canvas",
          "Source Code",
          "Upload Image to Canvas",
          "Source Code",
          "Save Canvas Image to gDrive",
          "Source Code",
          "Google Apps Script Save Image.",
          "Source Code",
          "Final Tweaks and Updates",
          "Source Code",
          "Image Uploader Project Conclusion."
        ]
      },
      "requirements": [
        "JavaScript - Web development experience",
        "Prior Programming experience",
        "JavaScript and prior coding experience",
        "Computer access and internet access",
        "Google Account"
      ],
      "description": "Google Apps Script will amaze YOU! - Loaded with content to teach you how to use Google Apps Script and create some amazing projects, Source code is included\nmore content and projects added all the time ..... check out the new projects in the last sections.\nEven if you have never seen Google Apps Script before - you NEED to check out this course.  There is so much you can do when you connect the Google Suite of Products together and power up your Google G Suite workflow - save time - build some cool stuff.\nCourse is taught by an official GOOGLE DEVELOPER EXPERT for G Suite - Learn to create awesome applications connecting you Google Suite of Products together using Google Apps Script.\nPerfect course to learn more about Google Apps Script\nEven if you have never coded Apps Script Before - we have you covered step by step intro covering use of fundamental JavaScript to get you started with Google Apps Script.  Wow you friends and family with Google Apps Script\nWrite a little code and do so so much Google Apps Script\n\"I never knew Google Apps Script can do all this\"\n\"This course was perfect for me to learn and build my own project\"\n\"I think I've found a new career - I love it Google Apps Script Rules\"\n\"This is simply amazing Google Apps Script\"\n\"Google Apps Script is easy to learn I am a JavaScript developer and it took me no time at all\"\nEverything you need to get started with Google Apps Script in one big course.\nApps Script is a scripting platform developed by Google for light-weight application development in the G Suite platform.\nBuild amazing Web Apps\nConnect to your Google Spreadsheet as a source of data for your WEBSITE - Any webs connect with AJAX\nEmail users with the power of Gmail\nTrack users in a spreadsheet\nGet messages from users right into a spreadsheet\nShare content of your drive - create an image gallery for your website from images sitting on your Gdrive\nLet your imagination go wild - whatever you can dream up Google Apps Script can help you accomplish it\nAutomate your tasks\nBuild web apps and automate tasks with Google Apps Script\nApps Script is a rapid application development platform that makes it fast and easy to create business applications that integrate with G Suite.\nNo need for a database - save your time using Google Script for backend functionality\nStart Scripting\nBuild with Google\nFeature-rich APIs let you extend Google services and build your own web applications.\nCode on the Web\nA web browser is all you need to build with Google Apps Script.\nShare your App\nStore and share your projects in Google Drive or publish on the Chrome Web Store.\nLearn the fundamental concepts of Google Apps Script - it’s based on JavaScript allowing you to connect the power of your Google Suite of products together to do some really amazing things. The upcoming lessons are going to show you the basics of how to get started creating your own projects with Google Apps Script.\nThe sections can be skipped if you are already familiar with the content, they are not dependant on the ones prior and fully wrapped within each project from start to finish. You choose which ones you want to do next, have fun.\nIntroduction to Google Apps Script - Find out how it works, get a quick refresher on JavaScript fundamentals like variables, arrays, objects, loops, functions and conditions. Try it out and see with just a few lines of code how you can create a doc, spreadsheet access the Google Calendar add events, and send emails with Script.\nProject #1 - Form Submission auto response - Create custom responses and run code all triggered by a user submission of form data. Connecting Google Suite together to make things happen. This is a common and simple application that can be really useful in a number of ways.\nProject #2 - YouTube API - Connect to YouTube - get content from YouTube that you can use within your application. This section demonstrates utilizing the power of YouTube, searching and retrieving video information back into a web app. Create a webapp with Google Script that can be used to search YouTube and video results.\nProject #3 - Spreadsheet User data Project - Add user data to a Spreadsheet, then take action from the Spreadsheet UI to send emails and update the data. This is a dashboard designed to help manage user lists and send out emails all done within a Spreadsheet.\nProject #4 - Spreadsheet Mini Projects - A collection of useful code snippets that do commonly asked for things within Spreadsheets. Explore functionality that can be extended upon to create useful additions to your web applications. Code snippets and mini projects that you can connect and extend upon.\nProject #5 - Spreadsheet Data as API JSON - Explore how you can output JSON data from your spreadsheet and use within your websites as a data source and content. Use JavaScript fetch to connect to the JSON data coming from Google Scripts Web App.\nProject #6 - GDrive Image Gallery - Use your Gdrive as a source for website images, creating an image gallery project to showcase images from your drive.\nProject #7 - HTML5 Canvas image uploader - Fun project that allows users to create images within HTML5 Canvas, and save them to Gdrive. Upload images into canvas then add text and logo then save as an image to GDrive.\nProject #8 - HTML editor saving HTML files - Using CKEditor create and save HTML files on GDrive. Select existing files from Gdrive and update the content of the file. Fun mini project that focuses on GDrive and file management.\nProject #9 - Simple AutoResponse - Mini project to demo creating an email template, using triggers to automate form responses and tracking data into Spreadsheets.\nProject #10 - PDF Uploader - Mini Project using Google Script to create files, use of blobs for PDF and sending of emails.\nGoogle Sites - Perfect place to host all of your Google Web Apps in one place, showcase your work and more. A quick intro and overview of the new Google Sites.\nProject #11 - GmailApp - Send email with an image attachment that will be copied to your GDrive and moved to another label within your Gmail Folders.\nProject #12 - WebApp Sheet data as API - Explore how you can output Sheet content into a Web API as JSON data\nProject #13 - Google Apps Script Consent Form Exercise - JavaScript Cloud - Useful project on how to create a webapp form have users select fill it out and get a PDF of their response info.\nProject #14 - Google Sheets as JSON data source for JavaScript - Using Google Sheets as a source for data for your website\nProject #15 - Build a team site on sites. Google Apps Script - Project Exercise Spreadsheet web app Team Site on Sites.  Posting board where users can post messages.\nProject #16 - Simple Google Sheet input Project Submit data to your spreadsheet from your website\nStep by step learning Google Apps Script\nFast friendly support is always available within the Q&A section\nExperienced instructor with over 20 years of experience ready to help you learn\nYou have nothing to lose - Join now and start learning to create your own version of this helpful application today!!!\nCreate your own amazing time saving application - Google Apps Script\nDid you know you can automate Google Apps Script",
      "target_audience": [
        "Anyone who wants to power up their Google Suite of Products with really amazing features",
        "Web developers and web coders that want to learn more about the power of Google Apps Script and what it can do",
        "Application Developers who want to explore the power of Google Apps Script",
        "Coders who want to explore how to use Google Apps Script",
        "JavaScript developers who want to add a new language to their portfolio",
        "Anyone who wants to learn more about Google Script",
        "Anyone who wants to create amazing applications"
      ]
    },
    {
      "title": "JSON Crash Course for Beginners",
      "url": "https://www.udemy.com/course/json-crash-course-for-beginners-learn-json-in-one-hour/",
      "bio": "Quickly Learn basics of JSON & start writing the web applications which use JSON objects aggressively",
      "objectives": [
        "Get a strong hold on JSON",
        "Use JSON properly in JavaScript & JQuery",
        "Create JSON objects properly"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Browser",
        "Basics of Internet"
      ],
      "description": "This course is for anyone who is interested in quickly learning JSON & it's power to utilize it in Web Development. Currently no web site or Web Service exist which do not use the JSON. This course will give you the strong basic understanding of JSON using practical implementation on-screen & help you implement it in your web development project.\nI designed this course for anyone including non-technical person. SO if you are not a developer and still interested in learning about the JSOn & see how it works then this course is for you.\nHere we will start from zero & go to higher level very quickly. You don't need multiple hours long course to learn JSON. This course will make you strong enough for the interviews, your college of office projects, your freelancing projects to build basic & complex Web Services & applications.",
      "target_audience": [
        "Anyone interested in building their career in Web Development",
        "Anyone interested in learning web development",
        "Anyone interested in learning JSON & JSON Schema",
        "Anyone going to attend an Interview for a Web Developer"
      ]
    },
    {
      "title": "Testing Angular Apps - The Complete Guide",
      "url": "https://www.udemy.com/course/test-driven-development-in-angular/",
      "bio": "Learn to professionally test Angular apps",
      "objectives": [
        "Learn Test Driven Development in Angular",
        "Learn core concepts of TDD",
        "Learn to test components and models",
        "Learn to test forms and services",
        "Learn professional development in Angular"
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction",
          "What will you learn"
        ],
        "Theory and Terminology": [
          "Types of tests",
          "ECMA Script and TypeScript",
          "Angular testing and You"
        ],
        "Testing components and Models": [
          "Simple Model Test",
          "Methods and Attributes",
          "Adding Find, Save and Destroy methods",
          "Testing Find, Save and Destroy methods",
          "Adding Output and EventEmitter"
        ],
        "Testing Forms": [
          "Preparations",
          "Reactive Forms",
          "Testing Reactive Forms",
          "Template Driven Forms",
          "Testing template Driven Forms",
          "Dynamic Forms",
          "Testing Dynamic Forms"
        ],
        "Testing Services": [
          "Integrating Firebase",
          "Testing Firebase service",
          "Testing Http",
          "Testing Pipes"
        ],
        "Testing Routes": [
          "Testing Routing in practice",
          "Testing routing in practice - Part 2"
        ],
        "End to End testing": [
          "Protractor",
          "Book Edit page",
          "Debugging",
          "Taking Screenshots",
          "Introduction to SauceLabs",
          "Testing on Multiple Platforms"
        ],
        "Summary": [
          "Course Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knolwedge of JavaScript is required to complete the course."
      ],
      "description": "Small apps and websites are easy, but the major challenges arise when the app starts getting bigger and more complex. This is where testing comes in, so that the more codes you add, the less bugs are created. Anyone who has had to deal with bugs understand the painstaking time and energy that goes into removing them.\nTesting is a great way to ensure that your codes work without rendering them or sending them on to production. However, the old manual testing methods are medieval and tedious. Writing codes for every test scenario makes the job not only harder and longer but can also result in bugs still leaking on to the production stage. This is why test-driven development is a great option.\nAngular is currently one of the best frameworks to work for building dynamic and complex apps which result in apps that look professional and work spectacularly. However, that isn’t all that Angular is good for. It also offers a kick-ass TDD environment.\nAngular Testing further simplifies the process of testing by making testing even easier. Using TypeScript, Angular offers a much richer development ecosystem. It allows an environment for testing multiple scenarios, as well as simulation of server-side requests and abstraction of the Document Object Model (DOM).\nHowever, getting started with the Angular TDD can be a little confusing which is why we have designed the ultimate Angular TDD course to help you get started! This course covers everything you would need to know about Angular Test Driven Development. The course will help breakdown exactly how to get started with Angular TDD and even how to incorporate it in your own projects.\nThe course balances theory and practical to ensure that each example comes with the theory behind it and vice versa. At the end of this course, you will have not only mastered Angular TDD, but you’ll also be confident enough to actually start using this amazing environment for your own Angular projects.\nThe course will start with a basic but detailed introduction into Angular Test-Driven Development, from where it will delve deeper into topics such as different testing components, forms, tests, third-party testing services, useful Angular libraries (Jasmine, Karma, Protractor, Faker, etc.), specifics of testing Angular applications and even how to conduct end-to-end testing.\nSo, what are you waiting for? Enroll now and let Angular TDD do the testing for you!",
      "target_audience": [
        "Anyone who wants to learn Test Driven Development in Angular will find this course very useful"
      ]
    },
    {
      "title": "Complete DevOps Gitlab & Kubernetes: Best Practices Bootcamp",
      "url": "https://www.udemy.com/course/gitlab-devops-kubernetes-best-practice/",
      "bio": "Learn Complete Auto DevOps implementation with Gitlab & Kubernetes: Best Practices Bootcamp! All hands-on course",
      "objectives": [
        "You will learn Best Practice applied within the entire DevOps life cycle",
        "Learn Gitlab Enterprise Edition and Deploy on Linux Ubuntu Instance on a Kubernetes Cluster",
        "Create Kubernetes Cluster, VM Instances and work with SSH",
        "Gitlab CI/CD Pipeline",
        "Install and Configure Auto DevOps in Gitlab along with Runners for Jobs",
        "Be able to understand complete DevOps life cycle in terms of enterprise software development"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro & Course Agenda",
          "Course Structure - Meet Your Instructor!",
          "What is DevOps Best Practice?"
        ],
        "Diving Into Kubernetes": [
          "Creating Kubernetes Cluster",
          "Your feedback: Updates - Let us know!",
          "Creating Kubernetes Instance - GitLab",
          "GitLab SSH Keys",
          "GitLab on Ubuntu Linux",
          "Creating Kubernetes Cluster From GitLab"
        ],
        "Core Best Practice Fundamentals": [
          "Difference Between Git, GitHub, and GitLab",
          "GitFlow Best Practice",
          "GitLab Helm Charts",
          "Auto DevOps Best Practice"
        ],
        "GitLab Auto DevOps Runner Configuration": [
          "Creating New Project: Configuring GitLab Runner",
          "Multiple Projects - Adding Repository and GitLab Runner Configuration"
        ],
        "Conclusion & Resources Section": [
          "Downloading Ubuntu Linux",
          "Installing Ubuntu Linux Using Virtual Box",
          "Important Commands",
          "Value of DevOps - Salary Survey"
        ]
      },
      "requirements": [
        "Google cloud platform credentials are required. You can register for free.",
        "Basic knowledge of Software Development Life cycle (SDLC) is desirable, although not required",
        "Fast Internet Connection",
        "Tech Savvy",
        "CI/CD Workflow is not covered in this course, rather focus on Best practice and Auto DevOps is covered. Per GitLab Auto DevOps is currently in Beta and not recommended for production use."
      ],
      "description": "DevOps Kubernetes Using GitLab AutoDevOps Automation: The Only single product for the complete DevOps life cycle! using Google Cloud Platform.\nIn the world of Enterprise software/app development with Big Data lurking all around us within the realm of Cloud Computing - Learn Complete DevOps Gitlab & Kubernetes: Best Practices Bootcamp step-by-step, complete hands-on GitLab, DevOps, and Kubernetes training - Bringing you the latest technologies with up-to-date knowledge.\nCourse Description\nAre you a DevOps Engineer, Architect, or Web Developer and want to gain intermediate and advanced skills and enjoy a fascinating high paying career?\nOr maybe you just want to learn additional tips and techniques taking to a whole new level?\nWelcome to Complete DevOps Gitlab & Kubernetes: Best Practices Bootcamp. A one of its kind course\nIt is not only a comprehensive course, you are will not find a course similar to this. The course gradually builds upon core concepts and then practical application by means of hand-on tutorials With over 4 hours of solid hand-on instruction.\nIt’s our most current, in-depth and exciting sales force developer on new technologies course to date.\nIn this course, you'll learn and practice:\nDevOps Best Practices\nCreating Kubernetes Cluster\nCreating Kubernetes Instance\nWork in the Google Cloud platform\nInstall GitLab in Ubuntu Linux within the Google Cloud - See Best Practice in action!\nWork with Best Practices in installing Runner in Gitlab\nBest practice with CI/CD Pipelines, and learn hands-on Pipleline fro Kubernetes\nGitLab Enterprise Installation Best Practice on Kubernetes engine\nGitLab SSH Keys, AutoDevOps, compelete DevOps automation, including agile, waterfall approaches much more\nYou will also get complete resources commands list with this course! We've built this course with our Team ClayDesk of industry recognized developers and consultants to bring you the best of everything\nWe walk you through the basics and gradually build your knowledge with real world application and projects\nSee what our students say “It is such a comprehensive course that I don’t need to take any other course but this one to learn all new technologies including GitLab-DevOps and Kubernetes, and I would without a doubt recommend it to anyone looking for a complete DevOps cycle course.” Michael Durand\n“This is such an awesome course. I loved every bit of it – Awesome learning experience!” Chris Portman.\nJoin thousands of other students and share valuable experience\nGet started today and join thousands of our happy students, many of whom have changed careers, created second incomes or added critical new skills to their tool kits. Our students have become successful Java programmers and developers managing applications and are earning six figure salaries. Some are freelancing and earning even more with high scaled projects.\nEnroll now in Complete DevOps Gitlab & Kubernetes: Best Practices Bootcamp today and revolutionize your learning. Start building powerful Git Lab Auto DevOps solutions and cash-earning programs today and enjoy bigger, brighter opportunities.\nWhy take this course?\nIf you’re currently thinking of advancing your skills and career into the world of DevOps Automation, and advancing your career as a DevOps Engineer Best Practices, then this is the right course for you. If you wish to get an advanced flavor of How DevOps works with GitLab, this is the right course for you. If you wish to gain additional experience, this is the right course for you. If you are an existing Web developer and want to learn DevOps, then this is the right course for you. If you want to get a high paying job or advance your existing skillet in programming, this is the right course for you!\nEnroll now, and I will see you in class.\nSyed and Team ClayDesk",
      "target_audience": [
        "DevOps Engineers",
        "Web Developers",
        "Enterprise Architects and Solution Design Specialists",
        "Anyone who wants to learn Best Practices within the DevOps Life cycle",
        "Anyone who wants to learn more about Kubernetes - Hands-on",
        "Anyone who wants to learn about GitLab - The only single product for the complete DevOps lifecycle!"
      ]
    },
    {
      "title": "The Complete Node.js Backend Developer Bootcamp (2025)",
      "url": "https://www.udemy.com/course/express-typescript-nodejs-mongodb-more-the-real-path/",
      "bio": "Build & Deploy Production REST APIs with Express, TypeScript, MongoDB, GraphQL, Docker & Unit Testing.",
      "objectives": [
        "Master the entire modern back-end stack: Node, Express, Nestjs, Graphql, TypeOrm, Postgres, MongoDB and Mongoose with Typescript",
        "Learn how to create npm packages with nodejs and typescript",
        "Learn: SocketIO, Stripe, Graphql with apollo and express, Typeorm, github/actions, CI/CD",
        "Learn how to build scalable APIs using Nestjs",
        "Learn how you should structure your nodejs project in a professional way",
        "How to use mongoose with Typescript",
        "Error handling in node js with expresjs",
        "Security: encryption, sanitization, cookie session, etc",
        "Learn how to hide passwords and confidential data in the right way",
        "Deep dive into mongoose (including advanced features)",
        "Learn how to test a nodejs api with automated tests",
        "Create a professional documentation for your api",
        "Upload multiple images and manage them inside MongoDB database",
        "Use Modern Javascript syntax"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript is required",
        "Any computer and OS will work — Windows, macOS or Linux",
        "Basic understanding of how APIs works ( no need for any knowledge related to expressjs or nodejs APIs)",
        "You have at least used npm ones in your life"
      ],
      "description": "Are you ready to build the powerful, fast, and reliable applications that power the modern web? Are you ready to transition from simply using websites to building the engines behind them?\nIf you've ever dreamt of launching a high-impact career in tech, becoming a sought-after developer, or bringing your own complex application ideas to life, you are in the right place. This isn't just another tutorial that shows you a few lines of code. This is your comprehensive, career-focused journey to becoming a confident and capable backend developer.\nThe digital world runs on data, APIs, and servers. Companies from tech giants like Netflix, Uber, and PayPal to the most innovative startups rely on Node.js for its incredible performance and scalability. This has created a massive, ever-growing demand for skilled Node.js developers, with lucrative salaries to match. This course is your direct path to tapping into that opportunity.\nWe'll bridge the gap between knowing some JavaScript and being a job-ready backend professional who can architect and build complex systems from the ground up.\nThis Isn't Just a Course—It's a Career Transformation\nWe know there are other courses out there. Many of them are outdated, too fast, too slow, or leave you stranded with fragmented knowledge and no idea how to build a real-world project.\nThis masterclass is different. It’s built on a project-based learning methodology. You will learn by doing, cementing every concept by applying it immediately to a portfolio-worthy application. We'll tackle challenges step-by-step, explaining the \"why\" behind every decision, not just the \"how.\" You will learn the best practices and architectural patterns that companies look for, ensuring you write code that is not just functional, but also clean, maintainable, and professional.\nWhat You Will Master: A Deep Dive into Your New Skillset\nThis curriculum is meticulously designed to be the only backend course you'll ever need. We leave no stone unturned.\nThe Core Backend Engine\nMaster Node.js from First Principles: Understand the event loop, non-blocking I/O, and the core modules that make Node.js so powerful.\nBuild Powerful APIs with Express.js & TypeScript: Go beyond the basics to build a truly professional, well-structured API. Learn to use TypeScript to eliminate entire classes of bugs and write scalable, enterprise-grade code.\nModern JavaScript (ESNext) Fluency: Write clean, elegant, and powerful code using the latest features of JavaScript.\nProfessional Project Architecture: Learn how to structure your projects for scalability and maintainability—a skill that will immediately set you apart.\nDatabase and Data Mastery\nDeep Dive into Mongoose: Become the go-to expert for modeling data in MongoDB. You'll master schemas, validation, middleware, and population.\nAdvanced Mongoose Queries & Aggregation: Learn to write highly efficient, complex queries to fetch and manipulate data for any feature you can imagine.\nExplore the SQL World with TypeORM & PostgreSQL: Understand the power of relational databases and how to integrate them seamlessly into your Node.js applications.\nExpert File Management: Learn the best and most secure ways to handle file uploads, storage (e.g., on cloud services), and serving files to your users.\nAdvanced & Modern Tooling\nBuild Next-Generation APIs with GraphQL: Move beyond REST and learn to build flexible, efficient, and modern APIs that are a joy for frontend developers to use.\nImplement Real-Time Functionality with Socket-IO: Add live chat, notifications, and other real-time features to your applications.\nDeploy Anywhere with Docker: Learn to containerize your entire application, making deployment and scalability incredibly simple and reliable. This is a must-have skill in modern DevOps.\nGet Ahead with NestJS: Get a solid introduction to NestJS, the fast-growing, next-level framework for building highly structured and scalable server-side applications.\nProfessional Practices, Security & Deployment\nRock-Solid Security: Implement bulletproof Authentication and Authorization with JSON Web Tokens (JWT). Learn to properly hash and encrypt sensitive user data.\nBuild Resilient Applications: Master Advanced Error Handling and Input Validation to create applications that are robust and secure against common threats.\nMaster the Pro Workflow: Become proficient with Git/GitHub for version control, use Postman like an expert for API testing, and learn the full process of Deploying your application to the web.\nGuarantee Code Quality with Automated Testing: Learn how to write critical Unit Tests to ensure your application works exactly as expected, saving you countless hours of manual debugging.\nIs This Course for You? We've Designed it With You in Mind.\nFor the Aspiring Developer: You know some JavaScript, but the backend feels like a black box. This course is your roadmap. We'll connect the dots and give you the skills and confidence to build your first major projects and apply for your first developer job.\nFor the Career Changer: Coming from a different field? We provide the structured, in-depth knowledge you need to make a successful transition into a high-demand tech career.\nFor the Intermediate Developer: You've built a few things with Node.js, but you feel like you have gaps in your knowledge. You're unsure about best practices, architecture, or advanced tools like Docker and GraphQL. This course will consolidate your knowledge and elevate you to a senior level.\nFor the Full-Stack Developer: You're comfortable on the frontend, but you want to become truly self-sufficient. Master the backend to build complete applications on your own and dramatically increase your value in the job market.\nOur Unbreakable Promise: Your Success is the Goal\nWe are so confident in the value this course provides that your enrollment is completely risk-free. You are covered by a 30-day money-back guarantee. If you go through the course and don't feel it has drastically improved your skills and confidence, you get a full refund. No questions asked.\nWe are committed to keeping this course the most up-to-date backend resource available, with regular updates to cover new technologies and best practices.\nDon't let another year pass wishing you had better skills. The best time to start your journey was yesterday. The next best time is right now.\nClick the \"Enroll Now\" button, and let's start building your future as a professional backend developer, today!",
      "target_audience": [
        "You should take this course if you want to make that step forward that you always dreamed about.",
        "Take this course if you want to build anything in your mind with nodejs without opening 10+ tabs in your browser",
        "Take this course if you want to learn not only how to build nodeJS APIs but also how to structure nodeJS projects in a proper and advanced way",
        "Take this course if you want to learn Typescript and use it in a real big projects with mongoose and expressJS",
        "Take this course if you are not confident on your nodeJS or mongoose(+typescript) skills and you want to change that!",
        "This course will be frequently updated and new content (projects, tips, skills..) will be added to it, so if you are one of those people that they can smell a good deal form far away you will take this course"
      ]
    },
    {
      "title": "Building Better APIs with GraphQL",
      "url": "https://www.udemy.com/course/building-better-apis-with-graphql/",
      "bio": "Step-by-step guide to building a better and faster API with GraphQL",
      "objectives": [
        "Create powerful GraphQL APIs",
        "Build APIs faster than ever before",
        "Answer important questions about your data",
        "Glue your data and 3rd party data together into one easy-to-use API"
      ],
      "course_content": {
        "GraphQL Basics": [
          "Introduction",
          "Understanding the GraphQL Schema",
          "Understanding GraphQL Queries"
        ],
        "GraphQL Queries": [
          "Creating our First GraphQL Schema",
          "Implementing our GraphQL Schema",
          "Adding Filters to our GraphQL Schema",
          "Getting Real: Hooking our GraphQL Schema up to a Starwars API",
          "GraphQL on the Server",
          "Getting to Know GraphiQL",
          "Optimizing our Queries with DataLoader (Part I)",
          "Optimizing our Queries with DataLoader (Part II)"
        ],
        "GraphQL Mutations": [
          "Introduction to GraphQL Mutations",
          "What We're Going to Build",
          "Creating our Blog Schema",
          "Serving our Blog Schema"
        ],
        "GraphQL Subscriptions": [
          "The State of GraphQL Subscriptions"
        ]
      },
      "requirements": [
        "Basic Javascript Knowledge",
        "Node.js Installed",
        "An text editor",
        "A willingness to learn"
      ],
      "description": "This course teaches you everything you need to know about GraphQL. GraphQL was open sourced by Facebook in 2015 and is a fresh new approach to API development.\n\nGraphQL will replace REST in the coming years. Don't just take my word for it though, here's what some other folks on Twitter are saying:\n\n\"Just watched a talk on GraphQL, I want this thing and I want it by yesterday\" – @sunesimonsen\n\n\"I long for the day when GraphQL will be the new API standard.\" – @xinron\n\n\"GraphQL is the King. Long Live the King! (R.I.P. REST)\" – @scbarrus\n––––––––––––––––––––––\nAbout this course:\nWe build two projects from scratch so you have everything you need to know to use GraphQL\nFull, free lifetime access\nUnconditional Udemy 30 day money-back guarantee - that's my personal promise of your success!\nOn-screen, over my shoulder view of where to go, what to click on, and how to set everything up from start to finish\n\n\nWhat you'll learn:\nHow the GraphQL schema works so you can use GraphQL on your own servers\nHow to query GraphQL so you can access and mutate your data\nWe'll start simple, creating a schema with dummy data\nThen we'll hook up our with schema to a live Star Wars API\nWe'll learn how to query the data, filter the data, and optimize the queries with DataLoader\nWe'll cover how to put the schema on an Express server so you can get access to your data with just HTTP requests\nThen we'll get started with mutations, the GraphQL version of POST, PUT, and DELETE of REST\nWe'll build a blog API using just GraphQL mutations and queries, tying everything we've learned so far\nWe'll cover the state of GraphQL Subscriptions, an emerging and evolving standard\nSo you've read this far! Thank you.\nOne final and important point\nIf you've ever had trouble working with REST in the past, it's not your fault. It's been the recommended way of building APIs since 1996. There are countless articles on creating \"thoughtful RESTful APIs\", but none of them ever seem to apply to what you're working on. GraphQL offers a way out of this madness.\nI've been running a GraphQL server in production for the last 3 months and it's sped up our response time, simplified our architecture and made it easier to access our data. I am not alone. Many multi-million dollar companies are also seeing the benefits of GraphQL in production including the Financial Times, Artsy, and Facebook.\n\nLet's get started. Click the \"Take this Course\" button in the top-right corner right now and I'll see you on the other side.\nMatthew Mueller",
      "target_audience": [
        "You should take this course if you have data you need to access easily",
        "You should take this course if you want to upgrade your API skills. If you need to access your data in a flexible and reliable way, this course is for you",
        "You should not take this course if you're looking for a React or Relay course. This course covers GraphQL as a standalone technology"
      ]
    },
    {
      "title": "Docker Introduction - Docker, Containers & DevOps - Hands On",
      "url": "https://www.udemy.com/course/diveintodocker/",
      "bio": "Beginner-Friendly Guide to Docker, Docker Desktop, DevOps + More with a Docker Captain, Kubestronaut and CNCF Ambassador",
      "objectives": [
        "Learn Docker and Container Fundamentals with a Docker Captain and CNCF Ambassador",
        "We'll cover the history of Containers, Virtualisation and the key ingredients that make Containerisation possible",
        "The differences between Docker and Docker Desktop",
        "Setup and install Docker Desktop on Windows, Mac OS X or Linux Desktop",
        "Learn about Container Images and how they work",
        "Running Containers with fun and friendly examples",
        "Container Networking and Port Forwarding",
        "How to make use of Container Volumes",
        "Building your own Container Images",
        "Container Image Best Practices and Multi-Stage Builds",
        "How to Upload Images to Container Registries",
        "How to Build Cross Architecture Containers"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Contact & Support",
          "Introduction to Containers - Study Tips",
          "Introduction to Containers",
          "Introduction to Containers - Quiz"
        ],
        "Docker Installation and Configuration": [
          "Docker Desktop Installation and Configuration - Study Tips",
          "Docker Desktop Installation and Configuration",
          "Docker Desktop Installation and Configuration - Quiz"
        ],
        "Container Images: Layers, Registries and Tags": [
          "Container Images - Study Tips",
          "Container Images",
          "Container Images - Quiz"
        ],
        "Running Containers": [
          "Running Containers - Study Tips",
          "Running Containers",
          "Running Containers - Quiz",
          "Running Containers - Optional Challenges",
          "Running Containers - Optional Challenges Solutions"
        ],
        "Container Network Services and Volumes": [
          "Container Networking Services and Volumes - Study Tips",
          "Container Networking Services and Volumes",
          "Container Networking Services and Volumes - Quiz",
          "Container Networking Services and Volumes - Optional Challenge",
          "Container Networking Services and Volumes - Optional Challenge Solution"
        ],
        "Building Container Images": [
          "Building Container Images - Study Tips",
          "Building Container Images - Part 1",
          "Building Container Images - Part 2",
          "Building Container Images - Part 3",
          "Building Container Images - Quiz",
          "Building Container Images - Optional Challenge",
          "Building Container Images - Optional Challenge Solution",
          "Further Study"
        ]
      },
      "requirements": [
        "A basic understanding of Linux is beneficial",
        "A computer or laptop to install and run Docker Desktop",
        "An understanding of terminal/command prompt basics, i.e. common commands, navigating a shell and editing files"
      ],
      "description": "[Docker Endorsed]\n\nStudent Testimonials -\n★★★★★ \" The experience was awesome. Thanks\"\n★★★★★ \" Very good. The workaround and tricks in building container images are just awesome!\"\n★★★★★ \" Great introduction concepts and easy to follow and understand. Would highly recommend.\"\n★★★★★ \" Great teacher! Also, he has delved into all the main aspects of the process. I am a confident new Docker user. Thanks! \"\n★★★★★ \" He is great devops teacher, he made me easily understand how docker works, pull, push and create. All my confusion is gone with just a few videos. Thank you so much\"\n★★★★★ \" I enjoy how the instructor explains the origins and progression of things across time in a straightforward and concise manner\"\n★★★★★ \" Excellent resource to ramp up your knowledge on Docker\"\n\n\nEmbark on a comprehensive journey into the world of Docker with Dive Into Docker - Introduction to Containers with Docker. The ultimate course designed by a Docker Captain, Kubestronaut and CNCF Ambassador to elevate your understanding and skills in container technology to new heights. This course is not just about learning Docker - it's an opportunity to transform your expertise and career in the rapidly evolving field of containerisation and cloud-native technologies.\n\nWhy Choose Our Dive Into Docker Course?\n\nComprehensive Curriculum: This course has been meticulously designed to cover all key areas of Docker and container fundamentals. From the history of containers and virtualisation to the benefits of Docker Desktop, container images, networking, volumes, and best practices for image creation and multi-stage builds, we ensure you grasp both the fundamentals and advanced techniques.\n\nDynamic Learning Experience: Prepare for an engaging learning adventure with:\n\n\nIn-Depth Video Tutorials: Master Docker through high-quality video lessons that clarify complex concepts with practical applications and examples\n\n\nExpert Guidance: Learn from an acclaimed expert in the field, a Docker Captain, Kubestronaut and CNCF Ambassador, bringing a wealth of knowledge and real-world insights into container technologies, Docker, and cloud-native best practices\n\n\nWhat You Will Learn:\n\n\nDocker and Container Fundamentals: Understand the core concepts that make containerisation a cornerstone of modern development and deployment strategies.\nContainer Images and Operations: Dive deep into how container images work, how to run containers effectively, and manage container lifecycles.\nNetworking, Volumes, and Storage: Master container networking, port forwarding, and effectively using volumes for persistent storage.\nImage Creation and Management: Develop skills in building, optimizing, and managing container images, including multi-stage builds and best practices.\nContainer Registries: Learn how to push and pull images from registries, understanding the ecosystem of sharing container images.\nCross-Architecture Containers: Explore the techniques for building containers that operate across different hardware architectures, enhancing your application's portability.\n\n\nWhy Learn from Us?\n\nYour instructor brings decades of experience in software development, DevOps, and container technology. With a passion for teaching and a track record of helping students across the globe, this course promises not just to educate but to mentor you through your Docker learning journey.\nJoin us in Dive Into Docker - Introduction to Containers with Docker to unlock a world of opportunities in containerisation and beyond. Whether you're starting from scratch or looking to deepen your existing knowledge, this course is your gateway to mastering Docker and setting the stage for a thriving career in tech.",
      "target_audience": [
        "Learners wishing to gain knowledge of Docker and Containers"
      ]
    },
    {
      "title": "Angular 12, .NET Core Web API & Microsoft SQL full-stack app",
      "url": "https://www.udemy.com/course/angular-12-net-core-web-api-microsoft-sql-full-stack-app/",
      "bio": "learn to create a full stack web application from scratch using Microsoft SQL Server, .NET Core Web API and Angular 12",
      "objectives": [
        "Full Stack Web Development",
        ".NET Core Web API and SQL Server Backend",
        "Angular 12 Frontend",
        "Build RESTful APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup Environment": [
          "Install Visual Studio",
          "Install Visual Studio Code",
          "Install Postman",
          "Install SSMS",
          "Install Node JS"
        ],
        "Backend : .NET Core & MSSQL": [
          "Create DB Objects",
          "Web API Project",
          "Enable CORS and JSON Serializer",
          "Models",
          "Department Screen APIs",
          "Employee Screen APIs",
          "Upload File API"
        ],
        "Frontend : Angular 12": [
          "Create Angular Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering"
        ],
        "Bonus Lecture": [
          "Project Files"
        ]
      },
      "requirements": [
        "basic html, css, javascript and c#"
      ],
      "description": "Hello Everyone, and welcome to this course on Angular 12, .NET Core Web API, Microsoft SQL Server  full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n* Microsoft SQL Server for the database.\n* .NET Core Web API for the back end web development.\n* And the latest Angular 12 for the front end web development.\n\n\n-We will first start with installing and setting up the environment needed for our database, back end project and front end project.\n-Then we will develop REST API end points using .NET Core Web API.\n-Finally we will be using Angular 12 to design the front end part of our App.\n* You will learn how to create the navigation menu and tables using bootstrap, add routing and navigation to our Angular App, add modal pop up window with drop downs and date pickers, and also add upload profile picture functionality and store it in the backend server. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        ".net, backend developers, frontend developers, angular and react developers"
      ]
    },
    {
      "title": "How to create a plugin for Moodle using PHP",
      "url": "https://www.udemy.com/course/how-to-create-a-plugin-for-moodle-using-php/",
      "bio": "Step by step, detailed instructions taking you through the complete process from zero code to functioning plugin.",
      "objectives": [
        "How to create a plugin for the Moodle Learning Management System"
      ],
      "course_content": {
        "Getting started": [
          "Introduction",
          "Setting up your Moodle platform for development",
          "What is a plugin?",
          "Download the plugin"
        ],
        "Get stuck into the code": [
          "Create the version.php file",
          "Create the language file",
          "Create the index file",
          "Installing the plugin",
          "Creating templates",
          "Adding JavaScript"
        ],
        "Adding functionality": [
          "Sending data to a template",
          "Getting access to the database"
        ],
        "New database table and data entry forms": [
          "Creating a new database table",
          "Creating a form to view, add, edit data"
        ],
        "Adding to the plugin": [
          "A new grader details page - part 1",
          "A new grader details page - part 2",
          "Grade results summary",
          "Export data to CSV and PDF",
          "Securing pages"
        ],
        "Complete": [
          "Thank you"
        ]
      },
      "requirements": [
        "A basic understanding of PHP, JavaScript, HTML",
        "Access to a Moodle server"
      ],
      "description": "This course will take you through the complete process of developing your first Moodle plugin.\nIt is highly recommended that you have PHP, HTML, JavaScript and CSS experience before attempting to create a plugin in Moodle but it is not essential that you have worked in Moodle before.\nThis course will teach you the basic structure and requirements of a plugin, then take you through the actual process of:\ncreating the plugin\nadding the core files\nmanaging versions\nadding templates\nadding JavaScript\na new database table for your plugin\ncreate, read and update data using forms\nprovide data to templates\naccess the Moodle database\nExport data to CSV and PDF\nSecure your pages\nBy the end of this course you will be ready to answer that question.\n\"Can Moodle do THIS?\"\nAnd you will be able to answer...\n\"Sure, let me write a plugin that will do it.\"\nThe plugin process is recorded using Moodle 3.9 but the code can be used in Moodle 3.7.2+\nThis course does get deep into coding but I am sure you will enjoy it and learn so much that will save you searching for days on the internet to find the solution to creating your own first plugin.\nI will see you in the course.\nChris Richter",
      "target_audience": [
        "Moodle administrators",
        "PHP developers that need to learn how to develop for Moodle"
      ]
    },
    {
      "title": "Build a Modern/Creative portfolio html css js three js",
      "url": "https://www.udemy.com/course/build-modern-creative-portfolio-html-css-js-three-js-2022/",
      "bio": "Build the best Modern/Creative/Responsive personal portfolio with 3d experience and amaze people.",
      "objectives": [
        "Create an amazing, modern, creative, unique and responsive portfolio.",
        "Build awesome 3d experiences for absolute beginners.",
        "Learn the secrets on what makes a good portfolio.",
        "Show your work to the world in a modern fashionable way.",
        "Create advanced unique styles for buttons and links.",
        "Create moving animated 3d background.",
        "Make an animated awesome loading screen.",
        "learn how to make hover rgb skewing effect on images with three js and shaders.",
        "Learn how to create a very advanced mobile friendly swiper.",
        "Tired of basic links and buttons here you will create the best of the best using only html css.",
        "Make a different modern contact form that actually look good.",
        "Learn how add smooth scrolling to your website and fix all problems you could face.",
        "Also use snap scrolling to go from links to section by smooth scroll.",
        "make a javascript accordion for frequently asked questions.",
        "Learn how to display projects in an exceptional way and show what it's like being creative.",
        "Learn how to setup, use parcel and manage your project in a better way easily.",
        "Learn code structure like a pro.",
        "Learn how to host your website easily and free.",
        "I teach you about seo and how and what makes your website rank higher in search engines.",
        "lean how to use sass and code css better and more efficient in BEM style.",
        "Understand how three js works and know all you need about it from scratch.",
        "Work with Evenlisteners in javascript and master different approaches.",
        "Use functions like setInterval and setTimeout.",
        "Learn ho to manipulate the DOM with javascript.",
        "Learn how to load data from javascript file to the page easily.",
        "Responsive design from small to large and from large to small screens.",
        "i provide you some of the best loaders and high quality backgrounds to use."
      ],
      "course_content": {
        "Setup, Seo, Reset styles": [
          "Install necessary tools",
          "Let's setup our project using parcel and npm",
          "Seo-rank higher in search engines part 1",
          "Seo-rank higher in search engines part 2",
          "Reset styles, explaining box sizing, inherit..."
        ],
        "Awesome Animated loader": [
          "Let's build the loader (Markup and styles) P1",
          "Let's build the loader (GSAP animations) P2",
          "Let's build the loader (FINISH THE JOB) P3"
        ],
        "Landing section (Header, cool buttons/links/socials/animated mouse...)": [
          "Build the Header",
          "Build an awesome animated link using CSS ONLY !",
          "Build the most fancy animated button with CSS ONLY !",
          "Finishing the fancy button and making the header responsive",
          "Animated colored social links CSS ONLY !",
          "Scroll down animated icon done ONLY WITH CSS",
          "Finish Landing section(INTRO INFOS)"
        ],
        "Skills": [
          "Skills (Markup and css)",
          "Skills moving animation"
        ],
        "Reviews": [
          "Review Header Card with shadow effect",
          "Swiper js setup",
          "Review card",
          "Use JavaScript to list reviews (responsive swiper also :) )",
          "Styling the Swiper and it's components PART 1",
          "Styling the Swiper and it's components PART 2"
        ],
        "projects": [
          "Projects layout",
          "Build an animated rotating Eye Circle with ONLY CSS AGAIN !",
          "Create a curvy animated funny link with CSS INLY AGAIN :)",
          "Make projects responsive"
        ],
        "Frequently asked questions": [
          "Frequently asked questions (Markup and styles)",
          "Accordion with JavaScript"
        ],
        "Contact": [
          "Contact Part 1",
          "Contact Part 2",
          "Receive emails easy"
        ],
        "Animated 3d background with THREE JS": [
          "THREE JS explained for absolute beginners",
          "3d Background setup",
          "Animated 3d background (Vertices explained)",
          "3d Waving background animation"
        ],
        "3d rgb image effect with THREE JS and Shaders": [
          "3d rgb skew image effect part 1",
          "3d rgb skew image effect part 2",
          "3d rgb skew image effect part 3",
          "3d rgb skew image effect part 4"
        ]
      },
      "requirements": [
        "Basic html css javascript knowledge",
        "No three js experience needed i teach you all from zero"
      ],
      "description": "In this course you will learn how to build a modern, creative and responsive portfolio, i take you from a blank page to an amazing portfolio with 3d experience for absolute beginners, teach you all the skills tricks on html css javascript and three js.\nand le me list some of things you will learn :\n-Create an amazing, modern, creative, unique and responsive portfolio.\n-Build awesome 3d experiences for absolute beginners.\n-Learn the secrets on what makes a good portfolio.\n-Show your work to the world in a modern fashionable way.\n-Create advanced unique styles for buttons and links.\n-Create moving animated 3d background.\n-Make an animated awesome loading screen.\n-learn how to make hover rgb skewing effect on images with three js and shaders.\n-Learn how to create a very advanced mobile friendly swiper.\n-Tired of basic links and buttons here you will create the best of the best using only html css.\n-Make a different modern contact form that actually look good.\n-Learn how add smooth scrolling to your website and fix all problems you could face.\n-Also use snap scrolling to go from links to section by smooth scroll.\n-make a javascript accordion for frequently asked questions.\n-Learn how to display projects in an exceptional way and show what it's like being creative.\n-Learn how to setup, use parcel and manage your project in a better way easily.\n-Learn code structure like a pro.\n-Learn how to host your website easily and free.\n-I teach you about seo and how and what makes your website rank higher in search engines.\n-lean how to use sass and code css better and more efficient in BEM style.\n-Understand how three js works and know all you need about it from scratch.\n-Work with Evenlisteners in javascript and master different approaches.\n-Use functions like setInterval and setTimeout.\n-Learn ho to manipulate the DOM with javascript.\n-Learn how to load data from javascript file to the page easily.\n-Responsive design from small to large and from large to small screens.\n-i provide you some of the best loaders and high quality backgrounds to use.",
      "target_audience": [
        "Beginner web developer",
        "People who wants to build a portfolio"
      ]
    },
    {
      "title": "Master Java Web Services: Restful API (JAX RS)",
      "url": "https://www.udemy.com/course/rest-api-using-java/",
      "bio": "Learn building Restful API based application with Java, FREE 6-month IDE.",
      "objectives": [
        "Build RestFul API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction To Web Services",
          "REST web services overview",
          "Resource based URI's",
          "More about resource based URI's",
          "Rest response",
          "Status codes",
          "Idempotence of HTTP Methods",
          "Hypermedia as the Engine of Application State (HATEOAS)",
          "The Richardson Maturity Model",
          "JAX-RS and implementations overview",
          "Meet your Author",
          "Linkedin and Instagram links",
          "Quiz on section 1"
        ],
        "Setting up": [
          "Download of installation of JDK",
          "Download and installation of eclipse",
          "Setting up",
          "Background story",
          "Getting started with Restful API (Fixing warnings)",
          "Getting started with Restful API - First API",
          "Revisiting backgrounds and handling post request",
          "Resource based URI for CRUD methods",
          "PathParams",
          "Project files",
          "Quiz on section 2",
          "IntelliJ IDEA FREE access for 6 months",
          "Checkout \"Our Full Stack Java Developer Course\""
        ],
        "Database connectivity (Hibernate)": [
          "Installing MySQL",
          "Creating sample database",
          "Setting up service",
          "Service layer continues",
          "Integrating hibernate",
          "Add DAO layer",
          "Implement DAO layer",
          "XML response (API demo)",
          "JSON response (API demo)",
          "Connect on LinkedIn, \"It's good!\"",
          "Project files"
        ],
        "Understanding Restful web-services (Jax rs)": [
          "Setup table - Sub-resource",
          "Add sub-resource on existing resource",
          "Add sub-resource on existing resource (In action)",
          "ManyToOne mapping in hibernate",
          "Delegation call to sub-resource object",
          "Filter",
          "Pagination",
          "HeaderParam and CookieParam",
          "ContextParam",
          "Sending status codes",
          "Location headers",
          "Add specific entity method",
          "URI builder",
          "WebApplicationException",
          "Exception handling with json response",
          "Exception mapper",
          "Custom exception map",
          "HATEOAS - part 1",
          "HATEOAS - part 2",
          "HATEOAS - get links from resourse",
          "Discussion forum",
          "Project files"
        ],
        "Under the hood": [
          "Alternate Maven project setup",
          "Alternate application setup",
          "MessageBodyReader and Writer",
          "Implement MessageBody Writer",
          "Resource types",
          "Param with resource types",
          "Param converters",
          "Param converter implementation",
          "Param converter implementation - Nameless object",
          "About Project files",
          "Project files"
        ],
        "Building client": [
          "Building client - introduction",
          "Client building steps",
          "URL building",
          "Post request using client",
          "Read response and wrapper class in brief",
          "Build HATEOS model",
          "Put and Delete operation",
          "We have started AI related courses",
          "Project files"
        ],
        "Google OAuth 2.0 with Rest (JSP as view)": [
          "Understanding protocol",
          "Setting up project",
          "Google login or consent screen",
          "Getting token from Google server",
          "Access user data from Google server",
          "Display userinfo on view",
          "Few more things",
          "Project files"
        ],
        "Bonus": [
          "Consider 5 star rating",
          "Offers",
          "Interview Tips",
          "Thanks for taking this course"
        ]
      },
      "requirements": [
        "Java Basics",
        "A System",
        "IDE"
      ],
      "description": "Transform Your Java Skills with Practical Restful API Expertise.\nWelcome to Master Java Web Services: Restful API (JAX RS), the ultimate course designed to guide you step-by-step in creating robust and efficient Restful API applications using Java. If you're eager to master the essential skills for building modern web applications, this course is your ideal starting point.\nCourse Overview\nIn this hands-on, practical course, you'll dive deep into Java-based Restful API development, exploring fundamental concepts, essential HTTP methods, and real-world applications. Designed to ensure clarity and ease of understanding, you'll progress from foundational knowledge to confidently implementing CRUD operations and advanced API functionalities.\nTarget Audience\nThis course is perfect for:\nJava developers eager to specialize in web services and API development.\nBeginners with basic Java knowledge looking to expand their skill set.\nIT professionals aiming to build scalable, efficient, and dynamic Restful APIs.\nNo prior experience with web services is required—just a foundational understanding of Java programming.\nCourse Objectives\nBy the end of this course, you'll be able to:\nDevelop comprehensive Restful API applications using Java (JAX RS).\nExecute CRUD operations effectively within your APIs.\nUnderstand and implement idempotent HTTP methods.\nUtilize Hypermedia (HATEOAS) to create dynamic, self-descriptive APIs.\nBuild resource-oriented URIs and effectively handle XML and JSON data.\nConstruct dynamic URIs using URI builder techniques.\nSecure your APIs by integrating token-based authentication from external providers such as Google.\nCourse Outline\nModule 1: Introduction to Restful API\nUnderstanding REST principles\nHTTP methods overview\nSet up your development environment with ease — includes a FREE 6-month subscription to any one JetBrains product (e.g., IntelliJ IDEA Ultimate, PyCharm, etc.) to boost your productivity.\nModule 2: CRUD Operations with Restful APIs\nCreate, Read, Update, and Delete operations in practice\nImplementing resource-based URIs\nModule 3: Advanced HTTP Methods and Idempotence\nDeep dive into idempotence and HTTP methods\nBest practices in designing efficient APIs\nModule 4: Leveraging HATEOAS\nHypermedia as the Engine of Application State explained\nBuilding dynamic APIs using HATEOAS principles\nModule 5: Handling Data Formats and Responses\nWorking with XML and JSON data interchange\nManaging complex data responses\nModule 6: Dynamic URI Construction\nIntroduction to URI builder techniques\nPractical demonstrations of dynamic URIs in API development\nModule 7: Securing Your Restful API\nImplementing token-based authentication\nIntegration with Google authentication services\nWhat to Expect\nThis comprehensive course combines clear explanations with hands-on exercises and real-world examples. Expect:\nEngaging video lessons and practical demonstrations.\nInteractive coding exercises for direct, hands-on experience.\nSelf-paced modules allowing flexibility to learn at your own speed.\nExpert support and active Q&A forums for troubleshooting and guidance.\nBenefits and Takeaways\nUpon completion, you'll:\nPossess market-ready skills highly sought after in the IT industry.\nBe equipped to develop and maintain scalable, robust, and secure web services.\nHave a deep understanding of modern API development practices.\nIncrease your professional value and career advancement opportunities.\nWhy Choose This Course?\nBenefit from an experienced instructor with:\nOver 8 years teaching IT and web technologies.\n142,000+ satisfied students worldwide.\nProven industry experience and practical teaching methodology.\nEnjoy peace of mind with our 30-day money-back guarantee. Your satisfaction is our priority—enroll with confidence.\nTake Action Today!\nReady to transform your Java skills and become an expert in Restful API development?\nEnroll now and begin your journey toward mastery and career advancement!\n[Enroll in the Course Now]",
      "target_audience": [
        "Beginner Java developers",
        "Web developers"
      ]
    },
    {
      "title": "React JS: React with Modern Hooks and Context",
      "url": "https://www.udemy.com/course/react-js-react-with-modern-hooks-and-context/",
      "bio": "Learn modern React Hooks and Context with my React Hooks and Context course and leverage your web development skills",
      "objectives": [
        "React, or React JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect lib",
        "React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market",
        "React encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions",
        "React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do.",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "A runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an app",
        "This course is the best way to learn modern React JS and React Hooks and Context",
        "Dive in React JS",
        "Learn how to build single page applications with React JS",
        "Learn components, props, states and component life cycle methods in React JS",
        "Create reusable React Components",
        "Learn modern JavaScript, ES6",
        "Learn to connect to an external API",
        "User Inputs, Forms and Events in React",
        "Routing with React Router",
        "Using React Portals to render Children Outside the DOM Hierarchy",
        "React JS Hooks and Context",
        "React’s modern face is to develop web applications with React Js Hooks and Context",
        "Creating Hooks and Context structures",
        "Creating Hooks and Context structures with explanatory diagrams",
        "What is Context Api and how it is used",
        "Using Context Api and Hooks together",
        "Creating Context with Class Component",
        "Access to Context with Context Type",
        "To manipulate the data in Context",
        "useState, useEffect, useReducer, and useContext hooks",
        "Reducer, action and dispatch concepts and much more",
        "How to use coding techniques to make efficient development",
        "All you need is your computer and you!"
      ],
      "course_content": {
        "What You Will Learn in React with Modern Hooks and Context Course?": [
          "What We Will Learn?",
          "FAQ about React JS, React with Modern Hooks and Context"
        ],
        "Let`s Start to Learn React JS": [
          "Why a Library or Framework Is Needed",
          "What is React?",
          "Why Should we use React",
          "Github Repo",
          "quiz"
        ],
        "First Look at React": [
          "React vs Vanilla JavaScript",
          "Setting up our Development environment.",
          "Look at React Official Documentation",
          "Pure React",
          "Setting up a project with create-react-app",
          "quiz"
        ],
        "Working With Components Props and JSX": [
          "Rendering the root component",
          "Debugging",
          "Creating and reusing a component",
          "What is JSX",
          "Creating more component",
          "JavaScript logic in component",
          "Separation of concerns",
          "Styling React applications",
          "Props",
          "Props & one-way data flow",
          "Rendering list",
          "Conditional Rendering 1",
          "Conditional Rendering 2",
          "Extraction JSX into a new component",
          "Destructuring props",
          "React fragments",
          "Dynamic Classes",
          "React JS - Quiz"
        ],
        "State, Events, and Forms": [
          "Section Overview",
          "Let’s build a new project",
          "Handling Events",
          "What is state?",
          "Creating a state with useState",
          "Set state manually!",
          "Adding open-close button",
          "React Developer Tools",
          "Updating state based on current state",
          "quiz"
        ],
        "Shopping List and Fundamentals of State Management": [
          "Introduction of the Application",
          "Creating the layout",
          "Rendering a list component",
          "Rendering a form component",
          "Controlled Elements",
          "Let’s think about state",
          "Lifting state up",
          "Deleting an item",
          "Updating an item",
          "Calculating package quantities",
          "Shorting items"
        ],
        "Sample Application – Language Card": [
          "Application Introduction",
          "Project Setup",
          "Components Structure",
          "Let’s start using data",
          "Let’s start Creating the card structure"
        ],
        "Class-Based Component and LifeCycles Hooks": [
          "Class-Based Component",
          "Counter example with Class-Based component",
          "Working with event handlers",
          "Class-Based component vs Functional component",
          "Quiz"
        ],
        "useEffect Hook and Data Fetching": [
          "useEffect Hook",
          "Counter example with useEffect hook",
          "Dependency Array",
          "Clean-Up function",
          "useState + useEffect + Data fetching",
          "Project Structure",
          "Component structure & styling",
          "Using an async function & axios",
          "quiz"
        ],
        "Custom Hook and Refs": [
          "Section Overview",
          "Refs",
          "Why we use useRef Hook",
          "Refs to select DOM elements",
          "What is this Custom Hook",
          "Custom Hook counter example",
          "quiz"
        ]
      },
      "requirements": [
        "A computer with access to the internet",
        "Since free tools and platforms are used during the training, you do not need to buy any tools or applications",
        "You need to know basic level HTML, CSS, Javascript",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "This course is ideal for people who have a basic knowledge of HTML, CSS, JavaScript but you don’t need to be an expert",
        "Es6 knowledge would be beneficial but not required",
        "Desire to learn React",
        "Desire to learn React JS",
        "Desire to learn full stack React js with Nodejs, Hooks and Context",
        "Desire to learn future technology react js with nodejs",
        "Desire to learn frontend and backend web development with javascript (react js, nodejs, nodejs )",
        "Desire to learn mern stack with react, nodejs, hooks and context"
      ],
      "description": "Hello there,\nWelcome to React JS: React with Modern Hooks and Context course.\nLearn modern React Hooks and Context with my React Hooks and Context course and leverage your web development skills\nDo you want to learn ReactJS from scratch?\nDo you want to learn the latest React features of Hooks and Context system?\nDo you want to create an app with React Hooks and Context; in a very detailed way?\nIf your answer is \"Yes\", you are in the right place. This React JS: React with Modern Hooks and Context course will be a perfect match.\n\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize React.  In this course, we will be teaching React by creating various projects. This course will take you from a beginner to a more advanced level with hands-on examples.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer. You will always have up-to-date content for this course at no extra charge.\nIn the course, we are going to use free tools and platforms so you don't have to buy any tool or app.\nYou are going to learn the latest React features of Hooks and Context system. We are going to create two nice-looking apps, to show Hooks and Context; in a very detailed way. You are going to learn how to use and state in functional components with the Hooks system and with Context API you won't need any third-party package to manage the Application state.\nWe tried to explain all complex topics in very detail on the course. I used some diagrams to tell some important topics and created a nice-looking mobile application. In the course, we created our applications with expo-cli.\nAt the end of the course, you will learn\nHow to create a Single Page Web Application with React JS.\nThe most important React topics like components, props, state and component life cycle methods\nHow to send request to an API and fetch data.\nHow to create multi-page web app with react-router-dom.\nHow to create a context with the class-based component.\nHow to consume context with ‘context consumer’.\nHow to consume context with ‘static contextType’.\nHow to manipulate context data in class-based components.\nThe most important hook functions like useState, useEffect, useReducer, and useContext.\nHow powerful when we use context and hooks together and much more…react\nreact.js\nnodejs\nnode js\nmodern react\nfull stack\nfull stack javascript\nfull stack react\njavascript\nreact js node js\nnodejs reactjs\nreact js and node js\nnode\nnode js react\nmern full stack\nmongodb\nreact node\nreact nodejs\nreactjs and nodejs\nmern\nnode react\nwebdevelopment with react js, mern stack\nreact js full stack\nhooks\nreact hooks\ncontext\nreact context\nweb hooks\nreact js hooks\nreact context api\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat is React used for?\nReact is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do. The most common use of React is to build dynamic user interfaces for single-page web applications. But the structure of React makes it useful for more than just creating websites. JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element. But JSX can be used as an interface for things other than HTML. React Native uses React to build mobile applications. Here, JSX becomes an interface for mobile UIs instead of HTML. There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware.\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions. These functions return information to tell React what content should be displayed on the screen. The real power of React comes from the ability to nest or compose these functions inside of one another. This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places.\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application. Libraries, on the other hand, assist in building a single aspect of an application. With this in mind, React is a library. It assists engineers in presenting HTML in the browser. React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built.\nIs React worth learning?\nYes, React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market and has been for a few years. If you learn to code in React and can do it well, you will increase your chances of finding a job. This alone is another reason it is worth learning. Website users no longer will settle for old-fashioned sites that won't update without a page reload. React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience. React has also been around a few years and has stood the test of time. A large portion of websites, both small and large, use React as a frontend framework.\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different. But it is easy to learn if you are dedicated and determined to create frontend web applications. To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning. Since React is a Javascript framework, a solid grounding in Javascript will give you a head start. With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp.\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications. React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone. React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different. In React, web components are generated. In React Native, the generated components interact with a phone's native APIs. If your focus is web development, then you should learn React. If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native.\nWhy is React so popular?\nThere are many reasons why React is popular. One reason is that Facebook developed it. The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications. React also solved many of the past issues that developers had with developing single-page applications (SPAs). React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs. One feature that makes it better than past libraries is that React is relatively easy to use. Its components are reusable, plus React's use of the virtual DOM makes it very performant. React should remain popular in the future as each new release brings new features and performance improvements.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and the React is easy to understand for the beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our React JS: React with Modern Hooks and Context course\nWe offer full support, answering any questions.\nSee you in the React JS: React with Modern Hooks and Context course!",
      "target_audience": [
        "Beginner who wants to be React developer",
        "Anyone who wants to become an React Developer",
        "Anyone who wants to build amazing React single page web applications",
        "Anyone who wants to learn React JS",
        "This course is perfect for someone who has little knowledge of HTML, CSS and JavaScript. We are not saying that you need to be expert of JavaScript but little concepts like Loops and functions should be familiar to you. If you know ES6 that’s great, if not, don’t worry, ES6 is also covered in this course.",
        "For those who want to learn React Hooks",
        "Students who want to learn how to build fast single page web apps",
        "For those who want to learn React Context API",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Students who want to take their web development skills to the next level and learn a future-proof technology",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who wants to learn today's most popular front-end architectures and take their Web development skills to the next level and learn a future-oriented technology",
        "Anyone who wants to learn React Js and its modern face Hooks & Context",
        "Anyone who wants to learn Hooks",
        "Anyone who wants to learn Context"
      ]
    },
    {
      "title": "New Angular 15 Crash Course by Angular Engineering Founder",
      "url": "https://www.udemy.com/course/new-angular-15-crash-course-by-angular-engineering-founder/",
      "bio": "Want to learn Angular 15 quickly? Take this course and learn Angular with the best practices from real world projects",
      "objectives": [
        "Develop modern, complex, responsive and scalable web applications with Angular 15",
        "Deeply understand the concepts and architecture behind an Angular application",
        "Use the gained understanding of the Angular fundamentals to quickly establish yourself as a frontend developer",
        "Create single-page applications with one of the most popular JavaScript frameworks out there"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is Angular?",
          "Setting up development environment",
          "Generate a new Angular application",
          "How to structure your Angular application for real world projects",
          "Install most common libraries to make your development easier",
          "The end of the first chapter",
          "Chapter 1 Quiz"
        ],
        "Basics of TypeScript": [
          "Introduction: Variables, types, if statement and loop",
          "Arrow functions (calback functions)",
          "Models (Enumerations and Interfaces)",
          "Chapter 2 Quiz"
        ],
        "Basics of Angular": [
          "Components, Templates and Modules",
          "Lifecycle hooks and Directives",
          "Data binding and Forms",
          "Pipes",
          "Services and Dependency Injection",
          "RxJS",
          "End of Chapter 3",
          "Chapter 3 Quiz"
        ],
        "Dive into the real world": [
          "Git (Version Control System)",
          "Navigation (Routing)",
          "Connect to API and handle the response from API call",
          "Update UI based on the response from an API call",
          "Upgrade Angular project to the newer version",
          "Chapter 4 Quiz"
        ],
        "Advanced techniques": [
          "Lazy loading",
          "State Management (NgRx)",
          "Chapter 5 Quiz"
        ],
        "Extra content": [
          "Deploy your Angular application",
          "Conclusion and Gifts"
        ]
      },
      "requirements": [
        "NO previous Angular knowledge is required!",
        "Basic HTML and CSS knowledge is required",
        "Prior programming knowledge helps, but is not required to benefit from this course"
      ],
      "description": "Welcome to the Angular 15 Crash Course lectured by the founder of Angular Engineering, the only course you need to learn to code and become an Angular developer. With more than 8 years of experience, my Angular course is one of the only courses that gives you advice from REAL WORLD hands on experience!\nAt 3+ hours, this Angular course is without a doubt the most concise Angular 15 course available online. Even if you have 0 programming experience, this course will take you from beginner to mastery. And here's why:\nThe course is lectured by the Senior Angular Engineer working in an international software development company.\nThe course has been prepared to be 2022/2023 ready and you'll be learning the latest advice and technologies used at many international companies.\nThis course will not cover anything that you will not need. It focuses on only the most important things you will use.\nThe curriculum was developed based on my eight year experience, and contains all necessary and important topics.\nYou'll save yourself over $10,000 by enrolling, but still get access to learn from the real world industry expert.\n\n\nI'll take you step-by-step through engaging video lectures and teach you all you need to know to succeed as an Angular web developer.\nThe course includes over 3 hours of HD video tutorials and improves your programming knowledge.\n\n\nThroughout this crash course, I cover the most important tools and technologies, including:\nFront-End Web Development\nAngular 15\nHTML 5\nCSS 3\nAngular Material\nJavascript ES6\nTypescript\nDOM Manipulation\nGit, GitHub and Version Control\nNPM\nREST\nAPIs\nAngular Building Blocks\nRxJS\nState Management (NgRx)\nLazy Loading\nWeb Design\nDeployment\nBy the end of this course, you will be fluently programming in Angular and be ready to make any website you can dream of.\nYou'll also build a demo site that you can show off to any potential employer.\n\n\nI'm so confident that you'll love this course that I am offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the highest quality Angular 15 course out there.",
      "target_audience": [
        "Newcomer as well as experienced developers interested in learning a popular JavaScript framework",
        "This course is for everyone interested in learning a popular frontend JavaScript framework",
        "Taking this course will make you one of the first to gain a very solid understanding of Angular 15"
      ]
    },
    {
      "title": "How to Build Chatbot with Python & Rasa Open Source",
      "url": "https://www.udemy.com/course/how-to-build-chatbot-with-python-rasa-open-source/",
      "bio": "Mastering Conversational AI: Build Smart Chatbots with Python, Rasa, OpenAI, Cohere, Google Gemini, and Hugging Face",
      "objectives": [
        "Gain a comprehensive understanding of the principles and concepts behind conversational AI and the role of Rasa in building chatbots.",
        "Master the techniques to create powerful Natural Language Understanding (NLU) models using Rasa NLU, enabling your chatbot to comprehend user inputs accurately.",
        "Learn how to integrate external APIs to fetch real-time data, demonstrated through the development of a Weather Chatbot that provides weather information.",
        "Explore advanced techniques for NLU enhancement, including entity recognition, synonym handling, and context-sensitive intent recognition",
        "Develop skills in building interactive and dynamic conversations using Rasa Forms",
        "Understand how to design fallback mechanisms for handling user queries that the chatbot doesn't understand",
        "Learn how to integrate Rasa with a MySQL database to store and retrieve user data",
        "Discover different deployment options and strategies for your Rasa chatbot, including Facebook, Slack, Telegram, Ngrok and Whatsapp",
        "Learn how to integrate your Rasa Chatbot with Flask Web Application"
      ],
      "course_content": {
        "Section Introduction": [
          "Course Introduction",
          "Course Requirements"
        ],
        "Introduction to Rasa and Conversational AI": [
          "Conversational AI & Rasa",
          "Rasa Overview and It is Key Components",
          "Setting Up the Development Environment",
          "Create Rasa Project",
          "Rasa Project Structure"
        ],
        "Understanding Rasa NLU": [
          "Hello World Chatbot From Scratch",
          "Overview of Rules.yml File",
          "Overview of NLU File",
          "Overview of Domain File",
          "Overview of Story File",
          "Entity Extraction",
          "Adding More Functionality"
        ],
        "Building Weather Chatbot and API Calls": [
          "Creating Intent and Entities for Weather Bot",
          "Rasa Pipeline",
          "What are Slots",
          "Rasa Policies"
        ],
        "Advanced NLU Techniques": [
          "Rasa Synonyms",
          "Entity Extraction with Regex",
          "Rasa Lookup Table",
          "Movie Recommendation Chatbot Part One",
          "Movie Recommendation Chatbot Part Two",
          "Choosing Right Pipeline in Rasa"
        ],
        "Rasa Forms": [
          "Rasa Form Introduction",
          "Rasa Forms Practical Example"
        ],
        "Fallback and Human Handoff": [
          "Fallback and Human Handoff",
          "Fallbacks in Rasa",
          "NLU Fallback",
          "Handling Low Action Confidence",
          "Two Stage Fallback"
        ],
        "Rasa and MySQL Database": [
          "Creating Basic Chatbot",
          "Adding Data to Database",
          "Show All Data"
        ],
        "Deploy Rasa Chatbot": [
          "Connect Rasa to Ngrok",
          "Integrate Rasa Chatbot with Facebook Messenger",
          "Rasa Chatbot Integration with Slack",
          "Rasa and Telegram Integration",
          "Integrate Rasa Chatbot with WhatsApp"
        ],
        "Rasa and Flask Integration": [
          "Section Introduction",
          "Create Flask and Rasa Chatbot",
          "Handle User Input in Chatbox",
          "Send User Message to the Server"
        ]
      },
      "requirements": [
        "Basic Python"
      ],
      "description": "Welcome to the comprehensive course, \"How to Build Chatbot with Python and Rasa Open Source.\" If you're interested to dive into the exciting world of conversational AI, this course is your gateway to creating powerful, intelligent chatbots from scratch using Python and Rasa Open Source.\n\n\nCourse Description:\nIn today's digital landscape, chatbots have become an integral part of user engagement and customer support. This course is meticulously designed to equip you with the skills needed to creat sophisticated chatbots using Python and also leverage the capabilities of Rasa Open Source, a leading conversational AI framework.\n\n\nKey Focus Areas:\nUnderstanding Rasa NLU: Lay the foundation by grasping the core concepts of Rasa NLU (Natural Language Understanding). Learn how to preprocess and extract meaning from user messages, forming the basis for accurate interactions.\nBuilding Weather Chatbot and API Calls: Dive into practical implementation as you build a Weather Chatbot that interacts with external APIs to provide real-time weather information. Understand how to integrate API calls seamlessly into your chatbot flow.\nAdvanced NLU Techniques: Elevate your chatbot's understanding of user intent and entities. Explore advanced techniques to enhance NLU performance, including entity recognition and synonym handling.\nRasa Forms: Discover the power of Rasa Forms in creating structured conversations. Implement dynamic forms that guide users through complex interactions, ensuring a seamless and user-friendly experience.\nFallback and Human Handoff: Learn how to gracefully handle user queries that fall outside the chatbot's capabilities using fallback mechanisms. Explore strategies for seamless transition to human agents when necessary.\nRasa and MySQL Database: Integrate Rasa with MySQL databases to store and retrieve user-specific data, enabling personalized interactions and a more engaging user experience.\nDeploy Rasa Chatbot: Take your chatbot from development to deployment. Explore deployment options and strategies, ensuring your chatbot is accessible to users across various platforms.\nRasa and Flask Integration: Extend the capabilities of your chatbot by integrating it with Flask, a powerful web framework. Learn how to create a user-friendly web interface for your chatbot.\nMore on Rasa Forms: In this section we are going to learn more about Rasa Forms, and we add more information on Rasa usage.\nCreating News Bot: In this section we want to interact with API and create a news Bot\nRasa with OpenAI LLMs: In this section we want to talk about LLMs, and how we can integrate OpenAI (GPT) LLMs with Rasa Open Source\nRasa with Cohere LLMs: In this section we are going to integrate Rasa with Cohere LLMs.\nRasa with Google Gemini: In this section we are going to talk about Google Vertex AI, and how we can integrate Google Gemini with Rasa Open Source.\nRasa with Hugging Face: In this section we want to learn how to integrate Rasa Open Source with Hugging Face Models.\nBy the end of this course, you'll gain the skills and knowledge to create intelligent chatbots that can understand user intents, retrieve and present information, and provide a delightful conversational experience. Whether you're a developer looking to enter the world of AI-driven chatbots or a professional aiming to enhance customer interactions, this course empowers you to build and deploy sophisticated chatbots with Python and Rasa Open Source. Enroll now and embark on a journey into the exciting realm of conversational AI.",
      "target_audience": [
        "Beginner who are interested building Chatbots with Python"
      ]
    },
    {
      "title": "Python Programming: Build Matchmaking Website + Geolocator",
      "url": "https://www.udemy.com/course/coding-for-entrepreneurs-matchmaker-geolocator/",
      "bio": "Create a matchmaking site and a geolocator in Django/Python in this step-by-step tutorial by Coding for Entrepreneurs.",
      "objectives": [
        "Build a Compatibility Match Making Service",
        "Build a Geolocator",
        "Create a SaaS (Software as a Service)",
        "Learn APIs from FourSquare",
        "Google Maps API"
      ],
      "course_content": {
        "Getting Started with Coding for Entrepreneurs": [
          "Start here only if you're new to Coding For Entrepreneurs"
        ],
        "MatchMaker 2": [
          "Welcome",
          "Walkthrough",
          "On Github",
          "Start Here",
          "Clone Project from Github",
          "Rename Django Project",
          "Matchmaking Questions",
          "Foreign Key Basics",
          "Tabular Inlines (Django Admin)",
          "Foreign Key Basics Part 2",
          "Question QuerySet",
          "Question Form",
          "Question Single",
          "Question Importance",
          "User Answer Model",
          "Save User Answer",
          "Form Validation",
          "Display & Edit User Answer",
          "Assign Point Values",
          "Signals & Receiver Functions",
          "Matching Algorithm Part 1",
          "Matching Algorithm Part 2 - Awarding Points",
          "Matching Algorithm Part 3 - Total Points",
          "Geometric Mean vs Arithmetic Mean",
          "Matching Algorithm Part 4 - Match Percentage",
          "Matches App",
          "Model Manager for Matches",
          "Get Match Percentage from Algorithm",
          "Compare Timezone to Updated Timestamp",
          "Update Match for QuerySet",
          "Complex Queries with Q Lookups",
          "Matching Algorithm Final",
          "Profile App and Image Field",
          "Profile View",
          "Implementing Matching Function",
          "Instance Property for Match Percentage",
          "Matches on Dashboard",
          "Match Images on Dashboard",
          "Get Absolute URL",
          "Match Images on Dashboard Part 2",
          "Fix New User Breaking Matching",
          "Jobs App",
          "Django LocalFlavor",
          "UserJob Model",
          "View & Add User Job",
          "Update Jobs with Model Formset",
          "Get Matches QuerySet Update",
          "Job, Location, Employer Matches",
          "Fix Migration Error",
          "Suggestion Position, Location, Employer",
          "Position Matches",
          "SlugFields",
          "Position Match View",
          "Handle Query Exceptions",
          "Location & Employer Match Views",
          "User Logged In Signal",
          "User Like",
          "Perform Like in a View",
          "User Likes on Dashboard",
          "New User Dashboard",
          "Include Template with Arguments",
          "Improve Dashboard",
          "Get Unanswered Questions",
          "Unanswered Questions Part 2",
          "Django Messages",
          "Bootstrap Alert with Messages",
          "Custom Signals",
          "Test User",
          "Profile User",
          "Profile Data & Image",
          "Thank you!"
        ],
        "The MatchMaker (aka Meet your Match)": [
          "Setup MatchMaker",
          "Create initial Apps",
          "User Profile Information Addresses & Jobs",
          "Single User Profile & Serve Static Media",
          "Django Registration",
          "Twitter Bootstrap",
          "Update Template Files",
          "Improve Profile Template",
          "Edit User Profile",
          "Edit Profile with Formset",
          "Edit profile tabs",
          "Profile Details",
          "Navbar Edits",
          "Questions App",
          "Save User Answers",
          "Paginator",
          "Question Importance",
          "Assign Point Values",
          "Matching Function",
          "Optional Lecture -- Matching Function, Long Form",
          "Match App",
          "Display Suggested Jobs",
          "Good Match Job Suggestions",
          "Add Login, Logout, and Questions links",
          "JobMatch Model",
          "Update User Links and Pictures",
          "Custom User Permissions",
          "Stripe & Subscriptions",
          "Subscribe Template & View Setup",
          "JQuery Plan Select",
          "Better JQuery Links",
          "Select Plan",
          "Check Membership with Middleware",
          "Django Signals to Create Stripe ID",
          "Direct Messages Model",
          "Inbox & Sent Views",
          "Compose Direct Message",
          "View Single Messages & Add Signal",
          "Improve Inbox",
          "Reply",
          "Reply Part 2",
          "Message Read",
          "Charge Customer",
          "Finalize Membership",
          "Matches Read"
        ],
        "It's Happy Hour Time (GeoLocator)": [
          "Foursquare API -- Grab Location Data with Python",
          "Locu API -- Grab Food Data with Python",
          "Automatically Find A Location with Geopy.py",
          "Start Project, Setup Settings, Static, and Serve",
          "Locu Search",
          "Foursquare Search",
          "Setup Location App & Url",
          "Implement Bootstrap",
          "Location Details with Locu",
          "Setup Google Maps on Single Location Pages",
          "Location Details with Foursquare",
          "Get User's Location",
          "User Location in Views",
          "Search Based on Geolocation"
        ],
        "Wrapping Up": []
      },
      "requirements": [
        "Some Django Knowledge Advised",
        "Finished the setup part of Coding for Entrepreneurs (or Basic)",
        "Completion of MVP Landing/Try Django (Youtube)"
      ],
      "description": "Updated: July 27, 2015\nBuild a Matchmaker (updated & expanded)\nComputers are great for finding common interests between people. You will learn how to build your own website that matches people based off interests and questionnaires. We'll implement a subscription model (SaaS) on this one.\nThis is how billion dollar sites like Match and OkCupid were built...this one is adapting the same idea to a job site, it could be the start for your own recruiting empire.\nCreate a Geolocator (It's Happy Hour Time)\nBuild a web-based app to help find local restaurant happy hours for food/drinks. We will build a geo-locating service using Foursquare's API/Data and Google Maps.\nHint: you could use the landing page created in step 1 ascertain interest in an app like that this to test whether or not this in itself could be a business.",
      "target_audience": [
        "Entrepreneurs",
        "Django/Python Coders",
        "Members of Coding for Entrepreneurs"
      ]
    },
    {
      "title": "Learning Functional Javascript with Ramda",
      "url": "https://www.udemy.com/course/learning-functional-javascript-with-ramda/",
      "bio": "Learn Functional programming and Ramda to write simple and reusable Javascript using currying, composition & much more",
      "objectives": [
        "Fully understand functional way of programming",
        "Write elegant and reusable code in javascript",
        "Use Ramda library fluently"
      ],
      "course_content": {
        "Basic knowledge": [
          "What is this section about?",
          "Closures in Javascript",
          "Currying in Javascript",
          "Writing curry function in Javascript"
        ],
        "Getting started with Ramda": [
          "What is this section about?",
          "Functional Javascript with Ramda",
          "Composition in Javascript and Ramda",
          "Getting nested fields with Ramda path",
          "Converge in Ramda"
        ],
        "Conditions and filtering with Ramda": [
          "What is this section about?",
          "Filtering array with Ramda where",
          "Conditions in Ramda",
          "Writing conditions with when and unless in Ramda",
          "Changing object field with Ramda lenses"
        ],
        "Manipulating with arrays and objects": [
          "UseWith in Ramda",
          "Cutting array in Ramda",
          "Grouping in Ramda",
          "Sorting in Ramda",
          "Predicates in Ramda"
        ],
        "Debugging Ramda": [
          "How to debug compositions"
        ],
        "Homework": [
          "Homework",
          "My Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)",
        "Basic knowledge about Javascript and ES6"
      ],
      "description": "This course is about functional javascript with using such a popular library as Ramda. Functional javascript becomes very popular nowadays because code which is written with small, pure functions is easier to support, reuse, improve and test. But getting deep in functional worlds is not an easy task. Thats why\nI created this course to share my experience with you. I am a huge fan of function programming and I created a lot of business project using functional javascript. Ramda as a library gives an opportunity to write elegant and simple code, but it takes a lot of effort to learn all Ramda functions by yourself and get used to then.\nIn this course we will start from scratch in learning such important part of functional programming as currying and composition and then we will have a deep dive into Ramda world.\nWhat you will learn in this course:\nClosures in javascript\nHow to write functional javascript with Ramda\nCurrying in javascript\nComposition in javascript\nWriting conditions with Ramda\nGet deeply nested properties safely\nLenses in Ramda\nGrouping and sorting in Ramda\nConverge and UseWith in Ramda\nSimplifying predicates with Ramda\nAnd much more...\nIf you are feeling like you want a deep dive into functional javascript to improve the quality of your code than this course is for you.\nThis course is for everyone who is interested in functional programming in javascript",
      "target_audience": [
        "This course is for everyone who is interested in functional programming in javascript",
        "This course is for you if you want to learn Ramda library deeply",
        "Tired of poor OOP in Javascript? Than functional Javascript is for you"
      ]
    },
    {
      "title": "Complete Modern PHP 8 Bootcamp",
      "url": "https://www.udemy.com/course/master-php-for-absolute-beginners/",
      "bio": "Become the PHP master, learn the language in-depth & BUILD practical projects with this ALL IN ONE practical course!",
      "objectives": [
        "Launch Your Tech Career: Gain the single most important skill to become a backend or full-stack developer.",
        "Think Like a Programmer: Master the fundamental logic and problem-solving skills that separate hobbyists from professionals.",
        "Build a Job-Ready Portfolio: Create real-world, data-driven web applications that will impress potential employers.",
        "Write Professional Code: Learn Object-Oriented Programming (OOP) to write clean, scalable, and reusable code.",
        "Master Databases: Connect your applications to a database to store, retrieve, and manage user data.",
        "Secure Your Applications: Understand and prevent common security threats like SQL Injection and XSS attacks.",
        "Unlock All Frameworks: Build such a strong foundation in PHP that learning Laravel or Symfony in the future will be a breeze."
      ],
      "course_content": {
        "Start Here!": [
          "Start Here: Your First Real Program in 10 Minutes",
          "Resources and Links"
        ],
        "Learn PHP - Theory (OPTIONAL!)": [
          "Module Introduction",
          "What is PHP?",
          "Where Does the PHP Fit In?",
          "Quick Overview of a PHP File",
          "Expression vs Statement",
          "Quiz: Introduction to PHP"
        ],
        "Learn PHP - Expressions, Control Structures": [
          "Module Introduction",
          "DOWNLOAD THE DIAGRAMS!",
          "How to Run PHP Programs",
          "First PHP Expressions",
          "Practice Expressions",
          "Data Types",
          "Practical Data Types",
          "Conditionals - If Statement",
          "Practice Data Types & If Statement",
          "Loops - While Loop (Guess the Secret Game)",
          "While Loop - Fizz Counter",
          "Loops - For Loop (Rocket Launch Countdown!)",
          "Do...While Loop (Roll the Dice Game)",
          "Foreach Loop (Count the Items in the Basket)",
          "You Didn't Know the Switch Statement (Clothes Size Demo)!",
          "Match Expression [PHP 8.0+] (HTTP Error Codes Demo)",
          "Require/Include (Config File Demo)"
        ],
        "Learn PHP - Functions": [
          "Basics of Functions",
          "Optional Function Arguments",
          "Types in Functions",
          "Variadic Function Arguments",
          "Anonymous Functions"
        ],
        "Learn PHP - Beyond the Basics": [
          "References",
          "Passing by Value and Passing by Reference",
          "Performance Test: Ref vs Value - Big Data Example. Is There a Difference?",
          "Variable Scope",
          "Null in PHP (How it Feels to Have Nothing)",
          "Union Types"
        ],
        "Learn PHP - Functions Deep Dive": [
          "Named Function Arguments [PHP 8.0+] - Forget About the Order!",
          "Arrow Functions [PHP 7.4] - Single Expression Short Functions",
          "Pure Functions",
          "Higher-Order Functions",
          "Recursion - Functions Calling Themselves",
          "Generator Functions - For Memory Intensive Tasks"
        ],
        "Learn PHP - Strings, Numbers, Arrays": [
          "So Many Ways to Write Strings",
          "String Accessing & Manipulation",
          "Searching Through Text and Regular Expressions",
          "Formatting Strings",
          "Advanced Stuff - Base64, Escaping, URL Encoding",
          "Integer, Floating Point, Formatting & Functions, Random Numbers, Min, Max",
          "Arrays #1 - Indexed, Associative, Multi-Dimensional, Sort, Filter, Map, Reduce",
          "Arrays #2 - Diff, Merge, Intersect, Values, Keys, Unpacking"
        ],
        "Learn PHP - Object Oriented Programming": [
          "Classes in PHP",
          "Class Inheritance",
          "Class Members Visibility",
          "Static Class Members (Singleton Example)"
        ],
        "Learn PHP - Object Oriented Programming Deep Dive": [
          "Interfaces (Payment Processors Example)",
          "Abstract Classes",
          "Payment Processors: Abstract Classes & Interfaces Overview",
          "Traits",
          "Final & Readonly Keywords",
          "Enums (Is It Weekend Yet?)"
        ],
        "PHP and the Web - 4 Small Projects": [
          "Dynamic Website (PHP Status Page Demo)",
          "Forms (Sending Email Address Demo)",
          "Cookies & Sessions (Visit Counter Demo + User Tracking Demo)",
          "URL Query Parameters + Forms (Filtering Products Demo)"
        ]
      },
      "requirements": [
        "Absolutely no programming experience is required. We start from ground zero.",
        "A computer (Windows, Mac, or Linux) and an internet connection. That's it.",
        "All software and tools we use are 100% free. I will guide you through the simple installation process when the time is right.",
        "The only true requirement is a desire to learn and the motivation to start your new career. I'll provide the rest."
      ],
      "description": "Ready for modern PHP 8?\nThis course covers the most modern version of PHP but that's not all - you'll learn through practical projects, small & bigger!\nStarting with tiny examples - just 1 per video to cover the language basics, we'll move on to 4 small but useful projects that mix all you've learned so far.\nNext you'll build 2 big projects, Guestbook & Blog with an admin panel.\nYou'll not only learn the PHP language but also the best practices of software development.\nDon't be fooled by AI being everywhere, it's still won't replace real skills and knowledge, which you can't gain by vibe coding!\n\nThis course offers in-depth explanation:\nMVC (build your own framework like Laravel)\nError handling\nSessions & cookies\nSecurity, tokens & best practices\nWorking with databases\nAnd much, much more!\nWho is this course for?\nIt's for people who both never coded before & for people who just don't know PHP, but also for the guys who either want to up skill or worked with older PHP versions. The complexity level is increased gradually.\nWhy join the course?\nTaught by the best-selling instructor of courses on Laravel, Symfony - so you are in good hands. I know how to teach people PHP, as I've been doing that for years!",
      "target_audience": [
        "Complete beginners looking for the perfect first step to start a career in tech.",
        "Aspiring Web Developers who want to master the backend and build full, dynamic applications.",
        "Frontend Developers who want to become full-stack and have complete control over their projects.",
        "Anyone who has felt stuck in \"tutorial hell\" and wants to finally learn how to build real projects from scratch.",
        "Entrepreneurs & Hobbyists who want the freedom to build their own websites and applications without hiring developers."
      ]
    },
    {
      "title": "Fundamental of Web GIS: All Types of Web GIS Interfaces",
      "url": "https://www.udemy.com/course/webgisgeoserver/",
      "bio": "Make yourself Zero to Hero in Web GIS by doing, playing and Enjoying this Web GIS course. This is The ABCD of Web GIS..!",
      "objectives": [
        "What is Web GIS?",
        "Programming Languages for Web GIS",
        "Open Source Web GIS Platforms",
        "GeoServer",
        "ArcGIS Online",
        "GIS Cloud",
        "OpenStreetMap",
        "Introducing Google Maps API",
        "Introducing MapBox",
        "Introducing Leaflet js",
        "How to Start Learning Web GIS",
        "Web GIS Career",
        "Desktop GIS vs Web GIS",
        "Key Elements of Web GIS",
        "Basic Steps of Web GIS",
        "Model of Web GIS",
        "GeoServer Features and Benefits",
        "How to Install GeoServer",
        "GeoServer Interface",
        "GeoServer Web Admin Page",
        "OpenLayer Interface",
        "Export OSM Map",
        "Add Map Note in OSM",
        "Query Feature in OSM",
        "How to Create GIS Cloud Account",
        "GIS Cloud User Interface",
        "Dynamic Web GIS Interface developed by using GIS Cloud",
        "How to Create ArcGIS Online Account",
        "How to Create ArcGIS Online Account",
        "Introducing Map Viewer Interface",
        "Map Frame",
        "Layer Menu",
        "Map Menu",
        "Content",
        "Legend",
        "Basemap",
        "Toolbar",
        "Print",
        "Bookmark",
        "ArcGIS Online Output Interface",
        "Dynamic Web GIS Interface Developed by using ArcGIS Online.",
        "Map Measurement Tools.",
        "Web Map Sharing."
      ],
      "course_content": {},
      "requirements": [
        "No Programming Knowledge is required as this course will guide you from basic of Web GIS to Install and use Many Types of Web GIS Platforms",
        "No previous knowledge of GIS is required, although basic knowledge of GIS will make this course easier to follow.",
        "No tools required, Everything will be provided by particular lecture"
      ],
      "description": "Are you thinking like this...\nYou Want to Start Learning Web GIS with Proper Guideline.\nYou have huge interest on Web GIS but didn't get any proper learning material or course from the internet.\nDo you want to know User Interface of GeoServer, ArcGIS Online, OpenStreetMap and GIS Cloud.\nYou want to make yourself confident to Start Web GIS Career.\nYou want to know how to Install GeoServer and Create Account of ArcGIS Online, GIS Cloud and OpenStreetMap.\nYou are searching for cheap course of Web GIS but having huge detail material, lectures and topics.\nYou are searching for Cool and enjoyable lectures of Web GIS with Practical description.\nDo you want to learn Basic knowledge of all Open source Web GIS.\nThen This course is for you, Because this course...\nWill Give you Step by Step Guideline to Start learning Web GIS.\nHas Proper Learning Materials.\nHas 4 sections for Introducing GeoServer,  ArcGIS Online, OpenStreetMap and GIS Cloud with their Admin Panel and User Interface.\nWill give you proper step by step guideline to start Web GIS Career with Use of Web GIS in many practical sectors.\nWill teach you Step by Step detail to Install GeoServer properly and Open Account of ArcGIS Online, GIS Cloud and OpenStreetMap.\nIs the cheapest course with 40 lectures, 8 Sections, 8 Quiz Test, 4 Downloadable Resources, 1 Assignment and each lecture contains many topics.\nWill give you Logical and Practical description of Web GIS to Enjoy This Platform.\nWill give you basic knowledge on Open Source Web GIS including ArcGIS Online, GeoServer, GIS Cloud, Google Map API, MapBox, Leaflet.JS and OpenStreetMap.",
      "target_audience": [
        "Anyone Who is Interested on Web GIS or has Passion on GIS",
        "Who want to Start learning GeoServer, ArcGIS Online, GIS Cloud and Other Open Source Web GIS",
        "Who are getting confused to start their career in Web GIS sector. Remember, \"NOTHING IS IMPOSSIBLE JUST WAYS ARE DIFFERENT\". You just need to choose the right way.",
        "Who want to Learn Web GIS, Open Source Web GIS and Use of Web GIS",
        "Who want to handle server but getting confused"
      ]
    },
    {
      "title": "Mastering HTML5 and CSS3 (Part 3 - Advanced Level)",
      "url": "https://www.udemy.com/course/mastering-html5-and-css3-part-3-advanced-level/",
      "bio": "Level up your skills in HTML and CSS , learn how to create responsive web templates",
      "objectives": [
        "Learn advanced topics in HTML5 & CSS3",
        "Working with multimedia in HTML",
        "Create and styling forms in HTML",
        "Concepts of Responsive Web Design (RWD)",
        "Advanced & Complicated selectors in CSS3"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Day 1: Multimedia in HTML": [
          "What is Multimedia?",
          "Video in HTML",
          "Audio in HTML"
        ],
        "Day 2: Get user's data using forms": [
          "HTML Forms - Part 1",
          "HTML Forms - Part 2",
          "Form Elements"
        ],
        "Day 3: Continue with forms": [
          "Different Input Types for Form - Part 1",
          "Different Input Types for Form - Part 2",
          "Different Input Types for Form - Part 3",
          "Input Types Attributes"
        ],
        "Day 4: Using Advanced CSS rules in Login Form": [
          "Create a Login Form",
          "Login Form: Box-Sizing in CSS",
          "Login Form: Position in CSS"
        ],
        "Day 5: More About CSS Selectors": [
          "CSS Variables",
          "CSS pseudo-classes",
          "CSS pseudo-elements",
          "Attribute Selectors in CSS",
          "Selector Combinators in CSS"
        ],
        "Day 6: Responsive Web Design Fundamentals": [
          "Responsive Web Design (RWD)",
          "Media Queries",
          "Make images responsive",
          "Responsive Font Size",
          "Sample Responsive Menu"
        ],
        "Day 7 : Advanced Topics in CSS": [
          "CSS z-index",
          "CSS Transition",
          "CSS Transform",
          "Canvas & SVG",
          "Math Functions in CSS"
        ]
      },
      "requirements": [
        "Basic (and a little bit intermediate level) knowledge of HTML & CSS",
        "Any computer: Windows , Linux or Mac",
        "A web browser and a code editor ( VS Code is preferred)",
        "Having enough enthusiasm to learn and solve challenges"
      ],
      "description": "Welcome to the \"Mastering HTML5 and CSS3 (Part 3 - Advanced Level)\" course\nDo you want to know more about HTML & CSS?\n... Or maybe you want to know what responsive web design is and how you can create responsive web templates\n... Or maybe you want to create a responsive web template from scratch, and don’t you know how to start\n... Or maybe you want to be a professional front-end developer\n\n\nSo, this course is suitable for you. Everything that you need to be professional in creating web templates, you will learn here. In this course you will learn advanced topics in HTML & CSS that contains:\nUsing multimedia in your HTML documents\nCreate a simple login form step-by-step and solve the problems that we encounter\nMore complicated CSS selectors: Pseudo-classes , Pseudo-elements, attribute selectors and combine different selectors\nFundamentals of Responsive Web Design (RWD) to create templates that will work in all devices correctly\nUsing Canvas & SVG\nCreate simple animations in CSS & HTML\n...\n\n\nSo, if you are looking for a way to simply learn these topics in HTML & CSS, just stop your searches and start this course here.\n\n\nWhat is included in this course?\nDownloadable design assets from the start to the end for each day\nHD quality videos, easy to find and reference\nStep-by-step guide for each topic in HTML5  & CSS3\nA cheat-sheet for different types of selectors in CSS\n\n\nIf you are not familiar with the basics of HTML & CSS, you can watch my other course in this topic and come back here to learn more.\nIf you already know what HTML is and how you can create a simple template, don't hesitate and join my course. Hope you enjoy and learn!!",
      "target_audience": [
        "Any one who wants to learn how to create a responsive web template",
        "Any one who wants to work as front-end developer or even full-stack developer",
        "Users with some experience in HTML & CSS to level up their skills"
      ]
    },
    {
      "title": "Try FastAPI Test Driven Development",
      "url": "https://www.udemy.com/course/try-fastapi-api-test-driven-development/",
      "bio": "Towards Building Secure and Scalable APIs with FastAPI and Test-Driven Development",
      "objectives": [
        "Install and configure FastAPI, Docker, and essential Python libraries.",
        "Establish project structure and best practices for managing dependencies.",
        "Implement linting and formatting tools for clean and maintainable code.",
        "Grasp the power of Docker for containerization and simplified database deployment.",
        "Learn to configure and manage PostgreSQL databases.",
        "Leverage Python-dotenv for secure environment variable handling.",
        "Work with SQLAlchemy for efficient database interactions.",
        "Implement Alembic for streamlined database migrations.",
        "Understand the test database workflow for effective testing.",
        "Install and configure Pytest, the industry-standard testing framework.",
        "Automate database creation and removal for streamlined testing.",
        "Employ Pytest marks for efficient test discovery and organization.",
        "Gain a comprehensive understanding of Entity-Relationship Diagrams (ERDs) for data modeling.",
        "Implement unit tests to validate table existence, columns, constraints, and relationships.",
        "Explore FastAPI error logging for comprehensive debugging.",
        "Master Pydantic schemas for data validation and serialization/deserialization.",
        "Develop comprehensive unit tests for various functionalities of your API endpoints.",
        "Cover creating, retrieving, updating, and deleting data with unit tests.",
        "Learn to handle exceptions gracefully within your API endpoints.",
        "Delve into integration testing to verify the interaction between your API and the database.",
        "Set up a robust integration testing environment for comprehensive validation.",
        "Develop integration tests for CRUD (Create, Read, Update, Delete) operations on your endpoints.",
        "Analyze code coverage to ensure a significant portion of your code is tested.",
        "Explore manual testing techniques for additional validation using FastAPI documentation."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Resources"
        ],
        "Preparing For Python Development": [
          "Installing Python 3.x on Windows",
          "Installing Python 3.x on Mac",
          "Visual Studio Code Install and Initial Configuration on Windows",
          "Visual Studio Code Install and Initial Configuration on Mac",
          "Introduction to Virtual Environments",
          "Virtual Environments on Windows",
          "Virtual Environments on MacOS"
        ],
        "Setting Up the Project Environment": [
          "Opening Monologue",
          "Project Documentation",
          "Starting a New FastAPI Project",
          "Managing Dependencies with PIP",
          "Setting Up Project Linting and Formatting"
        ],
        "Database Environment Configuration": [
          "Docker - What? Why?",
          "Docker Installation",
          "Dockerizing PostgreSQL",
          "Managing PostgreSQL with Adminer",
          "Python-Dotenv - What? Why?",
          "Install python-dotenv",
          "Using Docker Environment Variables",
          "Creating a PostgreSQL Setup Script",
          "SQLAlchemy - What? Why?",
          "Creating a Project Database Connection Configuration",
          "Implementing Alembic for Database Migrations"
        ],
        "Test Environment Setup": [
          "The test database workflow",
          "Installing, Setup Pytest",
          "Creating a Docker Test Database Programatically",
          "Postgres Setup Script",
          "Adding Containers to a Docker Network",
          "Configuring Alembic for Multi-Database",
          "Remove the Container after Testing"
        ],
        "Database Build and Structural / Migration Testing:": [
          "The Structural Testing Phase",
          "The Project Database ERD",
          "Category Table Requirements Analysis",
          "Test Planning (Structural Testing)",
          "Category Table Test Case 1 - (table exists)",
          "Category Table Test Case 2 - (validate expected columns)",
          "Category Table Test Case 3 - (verify nullable)",
          "Category Table Test Case 4 - (specific constraints)",
          "Category Table Test Case 5 - (default values)",
          "Category Table Test Case 6 - (column lengths)",
          "Category Table Test Case 7 - (unique constraints)",
          "Automating Pytest Marks Test Discovery",
          "Product Table Requirements Analysis",
          "Product Table Test Case Development",
          "Implement the Product Table",
          "ProductLine Table Requirements Analysis",
          "ProductLine Table Test Case Development",
          "Implement the ProductLine Table",
          "ProductImage Table Requirements Analysis",
          "ProductImage Table Test Case Development",
          "Implement the ProductImage Table",
          "Seasonal Events Table Requirements Analysis",
          "Seasonal Events Table Test Case Development",
          "Implement the Seasonal Events Table",
          "Attributes Table Requirements Analysis",
          "Attributes Table Test Case Development",
          "Implement the Attributes Table",
          "ProductType Table Requirements Analysis",
          "ProductType Table Test Case Development",
          "Implement the ProductType Table",
          "AttributeValue Table Requirements Analysis",
          "AttributeValue Table Test Case Development",
          "Implement the AttributeValue Table",
          "ProductLine-AttributeValue Table Requirements Analysis",
          "ProductLine-AttributeValue Table Test Case Development",
          "Implement the ProductLine-AttributeValue Table",
          "Product-ProductType Table Requirements Analysis",
          "Product-ProductType Table Test Case Development",
          "Implement the Product-ProductType Table"
        ],
        "End Point Development Unit Testing": [
          "FastAPI Error Logging",
          "Analysis of Category Functional Specifications",
          "Unit Testing Overview",
          "Test Planning for Category Endpoint - (Add a New Category)",
          "Pydantic Schemas - Serialisation and Deserialization",
          "Unit Test: Pydantic Schema",
          "Unit Test: Inserting a New Category",
          "Exploring FastAPI Router Usage",
          "Endpoint Creation: Post Method for Creating New Categories",
          "Introducing Get, Post, Put, Delete",
          "Unit Test Development: Capturing Insertion Constraints for Categories",
          "Endpoint Implementation: Defining Insertion Constraints for Categories",
          "Unit Test Development: Handling Exceptions in Category Functionality",
          "Endpoint Implementation: Managing Exceptions in Category Endpoints",
          "Test Planning for Category Endpoint - (Get All Categories)",
          "Unit Test Development - (Get All Categories)",
          "Endpoint Implementation - (Get All Categories)",
          "Test Planning for Category Endpoint - (Get Single Record from Parameter)",
          "Unit Test Development - (Get Single Record from Parameter)",
          "Endpoint Implementation - (Get Single Record from Parameter)",
          "Test Planning for Category Endpoint - (Update Single Record from Parameter)",
          "Unit Test Development - (Update Single Record from Parameter)",
          "Endpoint Implementation - (Update Single Record from Parameter)",
          "Test Planning for Category Endpoint - (Delete Single Record from Parameter)",
          "Unit Test Development - (Delete Single Record from Parameter)",
          "Endpoint Implementation - (Delete Single Record from Parameter)",
          "Creating Multiple Logs",
          "A Note on Refactoring Unit Tests"
        ],
        "End Point Development Integration Testing": [
          "Integration Testing",
          "Integration Testing Test Plan",
          "Reviewing the Testing Environment Workflow",
          "Integration Test Environment Setup",
          "Integration Test Development - (Create Category)",
          "Integration Test Development - (Create Category 404)",
          "Integration Test Development - (Return Category)",
          "Integration Test Development - (Update Category)",
          "Integration Test Development - (Delete Category)",
          "Testing Strategy Changes for Futures Endpoints",
          "Test Coverage",
          "Manually Testing Endpoints FastAPI Docs"
        ]
      },
      "requirements": [
        "You will need a computer which can support Python, Visual Studio Code and Docker Desktop"
      ],
      "description": "Try FastAPI API Test Driven Development 2024\n\n\nUdemy Business Users:\nThis course requires you to download software Python from the official python website and Docker Desktop from official docker website. If you are a Udemy Business user, please check with your employer before downloading software.\n\n\nTowards Building Secure and Scalable APIs with FastAPI and Test-Driven Development\nThis comprehensive course equips you with the skills to create robust and well-tested APIs using FastAPI, a powerful Python framework. Leveraging the Test-Driven Development (TDD) approach, you'll gain a solid foundation for building APIs with confidence.\nWhat You'll Learn:\nSet Up Your Development Environment:\nInstall and configure FastAPI, Docker, and essential Python libraries.\nEstablish project structure and best practices for managing dependencies.\nImplement linting and formatting tools for clean and maintainable code.\nMaster Database Management:\nGrasp the power of Docker for containerization and simplified database deployment.\nLearn to configure and manage PostgreSQL databases.\nLeverage Python-dotenv for secure environment variable handling.\nWork with SQLAlchemy for efficient database interactions.\nImplement Alembic for streamlined database migrations.\nTest-Driven Development with Pytest:\nUnderstand the test database workflow for effective testing.\nInstall and configure Pytest, the industry-standard testing framework.\nAutomate database creation and removal for streamlined testing.\nEmploy Pytest marks for efficient test discovery and organization.\nDatabase Build and Structural Testing:\nGain a comprehensive understanding of Entity-Relationship Diagrams (ERDs) for data modeling.\nWrite detailed test plans for thorough structural testing of your database schema.\nImplement unit tests to validate table existence, columns, constraints, and relationships.\nFastAPI Endpoint Development and Unit Testing:\nExplore FastAPI error logging for debugging.\nMaster Pydantic schemas for data validation and serialization/deserialization.\nDevelop comprehensive unit tests for various functionalities of your API endpoints.\nCover creating, retrieving, updating, and deleting data with unit tests.\nLearn to handle exceptions gracefully within your API endpoints.\nFastAPI Endpoint Development and Integration Testing:\nDelve into integration testing to verify the interaction between your API and the database.\nSet up a robust integration testing environment for comprehensive validation.\nDevelop integration tests for CRUD (Create, Read, Update, Delete) operations on your endpoints.\nLearn to adapt your testing strategy for future endpoints.\nTest Coverage and Manual Testing:\nAnalyze code coverage to ensure a significant portion of your code is tested.\nExplore manual testing techniques for additional validation using FastAPI documentation.\nBy the end of this course, you'll be able to:\nBuild production-ready, well-tested APIs using FastAPI.\nImplement TDD principles for writing clean and maintainable code.\nEffectively manage databases and data interactions within your API.\nDevelop a robust testing strategy for ensuring API functionality and reliability.\nThis course is ideal for developers with some Python experience who want to build modern, scalable APIs. Join us and unlock the power of FastAPI and Test-Driven Development!",
      "target_audience": [
        "This course is ideal for developers with some Python experience who want to build modern, scalable APIs."
      ]
    },
    {
      "title": "Orchard CMS Tutorial for Absolute Beginners",
      "url": "https://www.udemy.com/course/orchard-cms-tutorial-for-absolute-beginners/",
      "bio": "Learn the fundamentals of Orchard CMS with Step-By-Step instructions.",
      "objectives": [
        "Getting started with Orchard CMS",
        "Learn how to Install Orchard CMS on your local IIS",
        "Learn about all the Orchard CMS Terminologies",
        "Learn how to use the Orchard CMS Admin Panel",
        "Learn how to host an Orchard CMS website on to a live web server"
      ],
      "course_content": {
        "Introduction (Version 1.7.x onwards)": [
          "Course Overview",
          "Course Update",
          "What is Orchard CMS",
          "Try Orchard Online",
          "DotNest - The SaaS Provider for Orchard CMS",
          "Technologies used by Orchard CMS",
          "Source Code or Web Project",
          "WebMatrix or Visual Studio",
          "Recipes in Orchard CMS",
          "How to install Orchard CMS using IIS 8.1",
          "IIS Full Trust Level",
          "Orchard CMS folder structure",
          "Themes",
          "Modules",
          "Summary",
          "What's next",
          "Bonus: Installing Orchard Source Code"
        ],
        "Orchard CMS for Absolute Beginners Part 1 (Version 1.7.x onwards)": [
          "Pages and Blogs",
          "Content Types",
          "Content Parts",
          "Content Fields",
          "Content Items",
          "Layers",
          "Zones & Widgets",
          "Queries",
          "Projection",
          "Taxonomies",
          "Navigation, Menu & Sub Menu",
          "Media Library and Image Editor",
          "Summary",
          "What's next"
        ],
        "Orchard CMS for Absolute Beginners Part 2 (Version 1.7.x onwards)": [
          "Categories for Blog Posts",
          "Creating Content Type & Attaching Fields",
          "Creating a Form using Custom Forms",
          "Users , Roles and Permissions",
          "Email Notifications using Workflows",
          "Site Settings",
          "Warmup Module",
          "Caching",
          "SQL Server & Database settings",
          "Hosting Orchard to live web server",
          "Summary"
        ],
        "Orchard CMS for Absolute Beginners Part 3(Version 1.7.x onwards)": [
          "Multi Tenancy : Creating Mutiple Orchard Websites",
          "Setting-Up Recaptcha in Orchard",
          "Content & Widget Control Wrappers"
        ],
        "Orchard CMS for Absolute Beginners Part 4 (Version 1.9 onwards)": [
          "Let's Stay Connected",
          "Resources",
          "Next Level : Orchard CMS Recipes (Free Course)"
        ]
      },
      "requirements": [
        "Microsoft WebMatrix 3",
        "Visual Studio 2012 or above(Including free expression editions)",
        "SQL Server 2012 Express",
        "IIS Internet Information Server (7.5 / 8 / 8.1)",
        "Orchard CMS Source Code and Web Project from CodePlex",
        "Web Browser (IE, Chrome, FireFox)"
      ],
      "description": "Hello Welcome to this course on “Orchard CMS for Absolute Beginners”.\nAre you confused, frustrated or intimidated about how to begin or get started with Orchard CMS? If your answer to this question is YES, then this course is for YOU!\nNOTE : Orchard 1.9 Tutorials (In Progress)\nWhat is this course about?\nOrchard CMS for Absolute Beginners is a course about the latest open-source .NET Content Management System which is written in ASP.NET platform using the ASP.NET MVC framework.\nWhat are the course requirements?\nIn order to get started with this course you will need to install the following things on your computer\nMicrosoft WebMatrix 3\nSQL Server 2012 Express\nVisual Studio 2012 or higher (Including free express editions)\nDownload Orchard CMS source and web project from CodePlex\nIIS 7.5/ 8 / 8.1\nAny web browser\n\n\nHow will you benefit from this course?\nYou will get a good working knowledge of Orchard CMS and its admin panel and how to use Orchard CMS as an advanced user.\nAfter completing this course you will be able to download Orchard, Install it locally and remotely on a live web server, use the Orchard admin panel very efficiently, Install new themes and modules from the gallery, create pages, blogs and pretty much everything that a content manager will do to manage his content using Orchard CMS.\nWhat things you will be learning in this course?\nGetting started with Orchard CMS\nLearn how to Install Orchard CMS on your local IIIS\nLearn about all the Orchard CMS Terminologies\nLearn how to use the Orchard CMS Admin Panel\nLearn how to host an Orchard CMS website on to a live web server\nLearn how to use the Built-In Modules & feature in Orchard CMS\n\n\nBefore you join this course I would like to introduce myself to you.\nMy name is Abhishek Luv and I’m from Mumbai, India. I’m an Orchard Dojo trainer and a contributor to the official orchard cms documentation website and I have created numerous courses and tutorial videos on orchard. I’m also the founder of Orchard Beginner. Now, orchard beginner is and will be the one-stop place where you can get started with orchard cms , but orchard beginner is still in its initial stage and it will build up pretty soon. And I’m also the founder of the orchard cms india community.\nI hope that I have convinced you to join this course. Join Now.\nThank You!",
      "target_audience": [
        "Novice Web Developers",
        "Anyone having interest to learn Orchard CMS",
        "College students"
      ]
    },
    {
      "title": "Build three custom, functional websites in Django 3.0",
      "url": "https://www.udemy.com/course/build-three-custom-functional-websites-in-django-30/",
      "bio": "Build functionalities with Django on HTML themes",
      "objectives": [
        "How to install,create and activate virtual environment",
        "How to create Django project",
        "How to create Django app",
        "How to connect HTML template with Django backend",
        "How to use Bootstrap",
        "How to build blog section",
        "How to use Django filters to filter content",
        "How to work with Django forms",
        "How to build authentication system",
        "How to build comments system"
      ],
      "course_content": {},
      "requirements": [
        "Linux system",
        "Understanding of Django basics"
      ],
      "description": "In this course you will learn how to build websites in Django form scratch, how to use django-filters, build comments and authentication systems, how to connect theme to a Django backend. First website wil be portfolio website with blog section, secon one will be website for interior design studio, and third one will be elearning website.",
      "target_audience": [
        "Beginner/intermediate Django developers"
      ]
    },
    {
      "title": "MERN STACK REACT NODE API - Real Estate Marketplace App",
      "url": "https://www.udemy.com/course/react-node-mern-real-estate-marketplace/",
      "bio": "Beginners guide to build full stack JavaScript app using MERN (MongoDB Express React NodeJs) stack & AWS from scratch.",
      "objectives": [
        "Frontend Web Development with React",
        "Backend/API Development with NodeJs and MongoDB",
        "Learn to use AWS services like IAM, SES and S3",
        "Full Login and Registration system with Email Confirmation",
        "Forgot and Reset Password Implementation",
        "Google Maps and Places API for Maps and Address Auto-complete",
        "Using Google Geo-location Service for Nearby Locations based Search",
        "Multiple Image Uploads with AWS S3",
        "AWS SES for Sending Emails to Real Estate Agents (sellers)",
        "Advance CRUD (create, read, update, delete)",
        "JWT Based Authentication, Authorization and Route Protection",
        "Refresh Tokens",
        "React Context for State Management",
        "Real Estate Listing for Buy, Sell and Rent Properties",
        "Properties Like and Unlike Features",
        "Wishlist, Enquired Properties List and Ad Management",
        "Advance Property Search with Combination of Multiple Filtering Options",
        "Agents Public Profile Page with their Listings",
        "Load More Pagination",
        "User Dashboard for both Buyers and Sellers (Agents)",
        "User Profile Update",
        "More than 100 How-To Solutions"
      ],
      "course_content": {
        "Introduction": [
          "Course introduction",
          "Are you ready for this course?",
          "Finished project demo",
          "Download source code from Github"
        ],
        "NodeJs and MongoDB Project Setup": [
          "How to initialize NodeJs project?",
          "How to create Node Express server?",
          "How to connect to MongoDB locally?",
          "How to use Mongo Atlas?",
          "How to load routes file in NodeJs?",
          "How to use controller functions in NodeJs?"
        ],
        "User Registration and Login with Email Confirmation using AWS SES (Server)": [
          "How to create database model in MongoDB?",
          "How to check if user provided valid email address?",
          "Signup to AWS for using SES and S3",
          "How to send email using AWS SES?",
          "How to send dynamic email using AWS SES?",
          "How to build your own template to send emails using AWS SES?",
          "How to decode JWT?",
          "How to hash and compare password using Bcrypt in NodeJs?",
          "How to register or save user in MongoDB?",
          "How to apply email and password validation in NodeJs?",
          "How to login user in NodeJs?"
        ],
        "Forgot Password and Accessing Account (Server)": [
          "How to implement forgot password feature in NodeJs?",
          "Trying out forgot password request using Postman",
          "How to allow user to access account after forgot password request?"
        ],
        "Protect Routes and Refresh Token (Server)": [
          "How to protect routes from not logged-in users?",
          "How to send fresh token on refresh token request?",
          "Code refactoring, manual testing and recap",
          "How to get currently logged-in user from MongoDB?"
        ],
        "User Profile and Update (Server)": [
          "How to create user public profile endpoint?",
          "How to implement user password update?",
          "How to update user profile?"
        ],
        "React Project Setup with React Router and Context": [
          "How to create a new React project?",
          "How to use material bootstrap theme in React?",
          "How to add multiple routing system using React router?",
          "How to create and access a global state in React using Context?",
          "How to create navigation menu in React?",
          "How to create dropdown menu in React?"
        ],
        "User Registration, Login, Reset Password and Accessing Account (Client)": [
          "How to create user registration form in React?",
          "How to store user input in local component state in React?",
          "How to make POST request using Axios?",
          "How to show server error messages using toast notifications in React?",
          "How to configure Axios globally?",
          "How to show loading status and redirect user?",
          "How to grab route params in React?",
          "Register the user by sending JWT",
          "How to solve Axios making 2 request for same endpoint?",
          "How to prevent React Context data lost on page refresh?",
          "How to create login page in React?",
          "How to implement logout in React?",
          "How to conditionally show login and logout links?",
          "How to add forgot password feature in React?",
          "How to allow user to access account on forgot password?"
        ],
        "Protected Pages and Refresh Token (Client)": [
          "How to create user dashboard with sidebar menu?",
          "How to protect pages from not logged-in user?",
          "Axios interceptors code",
          "How to refresh token using Axios?",
          "Conditionally navigate user based on auth status?"
        ],
        "Create Ad to Sell or Rent, Google Places and Multiple Image Uploads to AWS S3": [
          "Create Ad page with options to sell or rent",
          "How to implement sell or rent house and land options?",
          "How to use single Ad create form for selling or renting house and land?",
          "How to get google places API keys?",
          "How to use google places to auto-complete address dropdown?",
          "How to create price field with comma separated currency format?",
          "Add additional form fields to the Ad create form",
          "How to create image upload component in React?",
          "How to resize image client side in React?",
          "How to create bucket policy in AWS S3?",
          "How to upload image to AWS S3 from NodeJs?",
          "Code snippet for uploading image",
          "How to display array of uploaded images?",
          "How to delete image from AWS S3?"
        ]
      },
      "requirements": [
        "Basic Understanding of JavaScript",
        "Basic Understanding of React",
        "Basic Understanding of NodeJs"
      ],
      "description": "Welcome to one of the most comprehensive Full Stack JavaScript course where you will learn how to build a production quality app from scratch. This course will teach you how to build a Real Estate Marketplace app using MERN (MongoDB ExpressJs ReactJs NodeJs) Stack. Each lessons are represented as how-to solutions for easy learning and understanding the concepts.\nBuilding a massive project such as a marketplace requires a lot more than just coding experience. You should be able to plan the entire system, execute the tasks one by one until you have a fully working project. A marketplace usually consists 2 types of users. Buyers and sellers. In this app, one group of users will be buyers (people looking to buy or rent houses) and other group will be sellers (real estate agents or house/land owners wanting to sell/rent their properties).\nUsually this type of projects are very complicated but not anymore. Yes, you heard me right. I believe in simplicity. No matter how complex the project is, if you have used the simplest and cleanest solutions as building blocks, your app will become incredibly easy to build, manage and scale.\nThere are massive amount of topics covered in this course. Every little detail has been covered. Every line of code has been explained. The knowledge you gain building this marketplace can be used to build any type of full stack apps.\nHere are some of the course highlights:\nComplete login registration system with email confirmation, forgot and reset passwords\nJWT based authentication, authorization with refresh token\nAWS services such as IAM (Identity and access management) S3 (Simple storage service) and SES (Simple email service)\nGoogle maps and places API for displaying maps and address dropdown auto-complete\nGeo-location based search based on lattitude and longitude\nMultiple image uploads\nAdvance CRUD with MongoDB using mongoose ODM (Object document mapping)\nJWT based authentication, authorization and route protection (both server and client)\nState management with React Context\nReal estate listing for buying, selling and renting house and lands\nContact emails for buyers to communicate with sellers (Real estate agents or home owners)\nAds (Real estate listings) like and unlike feature\nUser wishlist, enquired properties list and created Ads management (create, read, update and delete)\nAdvance searching with multiple search combinations (buy, sell, rent, price range, nearby location etc)\nUser profile update and public profile views\nLoad more pagination feature\nUser dashboard (for both buyers and sellers)\nIncludes well over 100 how-to solutions that can be used as a guide to build any projects in future\nThe project you will build in this course is the simplest yet most powerful app you will build while learning the fundamentals of full stack app development online. Enroll into this course to join me in this incredible journey.",
      "target_audience": [
        "JavaScript Developers learning to Build Real Apps with React",
        "JavaScript Developers learning to Build NodeJs API",
        "JavaScript Developers learning to Build E-commerce App with Advance CRUD, Authentication, Authorization, Searching and Filtering"
      ]
    },
    {
      "title": "Python GUI Development with Tkinter: Build Pro Desktop Apps!",
      "url": "https://www.udemy.com/course/python-gui-development-with-tkinter-build-pro-desktop-apps/",
      "bio": "Mastering Python GUI Development with Tkinter: Build Professional Desktop Applications with Confidence and Ease",
      "objectives": [
        "Learn the Fundamentals of GUI Development: Gain a solid understanding of GUI programming concepts and the Tkinter library.",
        "Create Stunning Interfaces: Learn how to design visually appealing and user-friendly interfaces using a wide range of Tkinter widgets.",
        "Layout Management: Master the art of organizing and structuring widgets within frames and containers using Tkinter's geometry managers.",
        "Build responsive and flexible layouts for your applications.",
        "Explore advanced Tkinter widgets and techniques, including listboxes, comboboxes, scrollbars, canvas, treeviews, message boxes, and dialogs.",
        "Unlock the full potential of Tkinter to create dynamic and interactive applications.",
        "Understand the event-driven programming model and learn how to handle various events triggered by user interactions, such as button clicks, mouse movements.",
        "Discover techniques to customize the appearance of Tkinter widgets, including configuring colors, fonts, and images.",
        "Learn to create visually cohesive interfaces that align with your application's branding or personal preferences.",
        "Master coding best practices specific to Tkinter development, write clean and modular code, and structure your applications for maintainability and scalability.",
        "Apply your skills by working on practical projects throughout the course. Develop a text editor, calculator, database viewer, weather app, and more."
      ],
      "course_content": {
        "Tkinter: The Cross-platform GUI Library": [
          "What is Tkinter?",
          "Getting Started with Tkinter",
          "Basic structure of a Tkinter program",
          "Course Materials"
        ],
        "The Building Blocks of Tkinter (Part 1)": [
          "Introduction to widgets",
          "The Label Widget",
          "The Entry Widget",
          "The Button Widget",
          "The Checkbutton Widget",
          "The Radiobuttton",
          "Drawing with Canvas",
          "Widgets in Window with the frame widget",
          "Making a List with the Listbox",
          "Let’s make a Menu",
          "Menu with Menubutton"
        ],
        "The Building Blocks of Tkinter (Part 2)": [
          "Multiple lines with Message",
          "The Scale like a thermometer",
          "Scrolling Through a List",
          "The Text widget",
          "The Toplevel Application",
          "The Spinbox Widget",
          "Dividing with panes",
          "Grouping labels with Labelframe",
          "Messagebox and desktop prompts"
        ],
        "Giving a UI identity to each Element": [
          "Introduction to Attributes",
          "Dimensions",
          "Colors",
          "Attention and Fonts",
          "Widgets Anchors",
          "Relief Styles",
          "Bitmaps",
          "Cursors"
        ],
        "Placing Widgets Element at Their Right Place on the Application window": [
          "The .pack() geometry manager",
          "The .grid() geometry manager",
          "The .place() geometry manager"
        ],
        "Putting Everything Together Through a Real life Project": [
          "Project Calculator"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "BONUS Section - Don't Miss Out": [
          "BONUS Section - Don't Miss Out"
        ]
      },
      "requirements": [
        "Eagerness to learn and experiment with GUI development using Tkinter",
        "The ability to do simple math",
        "Readiness, flexibility, and passion for learning",
        "While not mandatory, prior experience in any programming language can be beneficial"
      ],
      "description": "Unlock the Power of GUI Development and Build Stunning Desktop Applications with Python and Tkinter!\nAre you a Python enthusiast eager to take your skills to the next level? Do you dream of creating intuitive and visually appealing desktop applications that captivate users? Look no further! The \"GUI DEV With Python and Tkinter\" course is your ultimate gateway to mastering the art of GUI development using the renowned Tkinter library.\n\n\nWhy Choose This Course?\n\n\nComprehensive Learning Journey: This course is designed to take you on a step-by-step journey, from the fundamentals of GUI programming to building complex and feature-rich desktop applications. With a well-structured curriculum, you'll gain in-depth knowledge of Tkinter, empowering you to create stunning graphical interfaces.\nHands-On Projects: Theory alone won't make you an expert. That's why we emphasize hands-on learning through practical projects. You'll work on real-world applications, including a text editor, calculator, database viewer, and more. By applying your skills in a practical context, you'll develop the confidence to tackle any GUI development challenge.\nExperienced Instructors: Learn from industry professionals who have mastered Tkinter and have extensive experience in GUI development. Our instructors will guide you through every concept and provide valuable insights, tips, and best practices along the way. You'll receive personalized attention and support throughout your learning journey.\nComprehensive Resource Materials: Gain access to a wealth of high-quality resources, including video tutorials, code examples, cheat sheets, and supplementary reading materials. These resources will be at your disposal even after completing the course, serving as valuable references in your future GUI development projects.\nCareer Opportunities: GUI development is in high demand across various industries. By mastering Python and Tkinter, you'll equip yourself with a valuable skill set that can open doors to exciting career opportunities. Whether you're looking to land a job or freelance as a GUI developer, this course will give you a competitive edge.\nCourse Curriculum Overview:\nIntroduction to GUI programming and Tkinter\nBuilding a solid foundation with basic Tkinter widgets\nExploring advanced Tkinter widgets and layouts\nMastering event handling and creating interactive interfaces\nDesigning and structuring robust GUI applications\nCustomizing widget appearance and styling\nBest practices for efficient and maintainable code\nReal-world projects to apply your knowledge\nAnd much more!\nDon't miss out on this incredible opportunity to become a GUI development expert using Python and Tkinter. Enroll in our \"GUI Dev with Python and Tkinter\" course today and embark on a journey that will transform you into a skilled Python GUI developer!\nReady to take the leap? Sign up now and unlock a world of possibilities!",
      "target_audience": [
        "Python developers looking to expand their skill set into GUI development.",
        "Programmers interested in building desktop applications with Python and Tkinter.",
        "Students or professionals in computer science or software engineering seeking to learn GUI development using Tkinter.",
        "Individuals who want to enhance their portfolio with interactive and visually appealing desktop applications.",
        "Anyone interested in creating user-friendly interfaces and interactive experiences using Python and Tkinter.",
        "Enthusiasts who enjoy exploring different aspects of Python and want to delve into GUI programming."
      ]
    },
    {
      "title": "JavaScript manipulation of the DOM Document Object Model",
      "url": "https://www.udemy.com/course/javascript-manipulation-of-the-dom-document-object-model/",
      "bio": "Access HTML elements using JavaScript make updates, set up event listeners and create new HTML elements.",
      "objectives": [
        "Create Dynamic interaction on webpages",
        "Update HTML elements",
        "Manipulate Element Styling",
        "Add event triggers."
      ],
      "course_content": {
        "Learn how to manipulate HTML elements": [
          "Introduction to working with JavaScript and the DOM",
          "How the DOM works Windows Object",
          "JavaScript DOM Document Object Model",
          "JavaScript getElementById",
          "JavaScript DOM select elements via Class and Tags",
          "JavaScript the Document Object data",
          "JavaScript Update Styling attributes using the DOM",
          "Source Code DOM",
          "JavaScript DOM onclick",
          "JavaScript Mouse Event Listeners",
          "Source Code Events",
          "JavaScript addEventListener",
          "Source AddEventlistener",
          "JavaScript Queryselectorall mulitple elements event listeners",
          "JavaScript More Element Selection options",
          "Source Code Multiple Element selection",
          "JavaScript Creating New Elements",
          "Source Code Create Elements",
          "DOM and Form Create Form Validation",
          "Source Code Form Validation"
        ],
        "Bonus Section": [
          "DOM page elements",
          "JavaScript Coding Examples Array Method Includes",
          "Source Code includes"
        ]
      },
      "requirements": [
        "Desire to learn",
        "Basic JavaScript HTML knowledge",
        "Access to a computer"
      ],
      "description": "JavaScript manipulation of the DOM - Start creating Dynamic and Interactive Content.\nLearning how to interact with the DOM, will get you started quickly with more interaction on your webpages.\nThe Document Object Model is a model of your HTML document represent within JavaScript as objects.\nElements are within the HTML page rendered out by the browser.  JavaScript engine in the browser then create representations of the elements as JavaScript Objects. Which in turn gives you the developer a whole lot to work with, the sky's the limit with what you can do at this point.  You can communicate with these objects using JavaScript and then manipulate them.  Any changes you make will be visible within the webpage itself.\nUse JavaScript to select elements from your HTML code.   All the web page elements are represented within the DOM.  Document Object Model.  Learning to better utilize the DOM will allow you to create more advanced user interactions, and update the content dynamically.\nSee how easy it is to select elements and make the interactive.\nSelect any element from within your HTML and bring it to life with JavaScript.\nFrom an instructor with over 15 years of real world web development experience, learn how to use the DOM for your web projects.\nEvery element is an element object, which contains details about the object.  The DOM is like a doorway to access all of this functionality that is already there.  JavaScript gives you the ability to open up that door and make amazing things happen on your website.\nSelecting Elements from your HTML\nUpdate the element HTML on the fly.\nAdd event triggers.\nStyle your elements dynamically\nRead and validate inputs\nBy the end of the course you will have the skills and know how to manipulate the DOM within you website.\nI am here to help you learn how to create your own websites and ready to answer any questions you may have.\nJavaScript is the most in demand skills, and learning how to use JavaScript will help to separate you from the crowd.\nWant to know more, what are you waiting for take the first step.  Join now to start learning how you too can create DYNAMIC and INTERACTIVE pages within your website today.",
      "target_audience": [
        "Anyone who wants to learn more about how the DOM works",
        "JavaScript developers who want to learn about the DOM",
        "HTML CSS JavaScript developers"
      ]
    },
    {
      "title": "Bootstrap 4 Single Page Website from Scratch",
      "url": "https://www.udemy.com/course/bootstrap-4-tutorial/",
      "bio": "Build a fully responsive modern website in less than an hour using Bootstrap 4",
      "objectives": [
        "Apply bootstrap to web design projects",
        "Use Bootstrap to develop website rapidly"
      ],
      "course_content": {
        "Introduction to Bootstrap 4": [
          "Introduction to building a website with Bootstrap 4",
          "Course Resources Setup Environment",
          "Basic Bootstrap 4 Template Creation",
          "Template Source Code",
          "Create Bootstrap NavBar",
          "Source Code Nav",
          "Header Section",
          "Build Home Section",
          "Webpage Source Code",
          "About Me Section",
          "Bootstrap Cards Grid Columns",
          "Project Source Code",
          "Create Contact Form Grid",
          "Project Source Code",
          "Footer and Tweak Page",
          "Add jQuery Animate",
          "Source Code Index",
          "Source Code CSS",
          "Website Overview Bootstrap 4",
          "Resources"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "HTML Experience",
        "CSS expereince"
      ],
      "description": "Discover how to build amazing looking fully responsive modern websites from scratch using Bootstrap 4\nExplore the 12 grid column layout, see whats new with Bootstrap 4 make use of responsive navbars, and more.  Source Code and links to top resources included to get you started quickly.\nTopics Include\nParallax background images\nNavBar collapsing\nBootstrap Grid\nResponsive images\nCards header, images, body and text\nButtons and colors\nBackground images and text utilities\nBootstrap 4 Components\nAdding jQuery Animation\nBootstrap is the most popular HTML, CSS, and JS framework in the world for building responsive, mobile-first projects on the web.  Bootstrap is an open source toolkit for developing with HTML, CSS, and JS\n\nTaught by an instructor with over 18 years of Web development experience, ready to help you learn Bootstrap 4.  See what you can do with Bootstrap join now!",
      "target_audience": [
        "Web designers",
        "Web developers",
        "Anyone who wants to learn how to use Bootstrap"
      ]
    },
    {
      "title": "A-Frame Web VR Programming Tutorial Series (Virtual Reality)",
      "url": "https://www.udemy.com/course/a-frame-webvr/",
      "bio": "Learn how to create awesome virtual reality experiences for websites, Oculus Rift and HTC Vive.",
      "objectives": [
        "Virtual Reality Design Philosophies",
        "A-Frame programming",
        "User JavaScript To Create Virtual Reality Experiences/Applications",
        "Create Cross Platform Games/Applications",
        "Use A-Frame To Make Games/Applications",
        "Understand The Best Ways How Virtual Reality Can Be Used"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup": [
          "Setting Up"
        ],
        "Basics": [
          "Drawing A Box",
          "Transformations",
          "Textures",
          "Animations",
          "Interacting With Objects"
        ],
        "Advanced": [
          "Lighting",
          "Skybox",
          "Model Loading",
          "Image"
        ],
        "The Cool Stuff": [
          "Curved Image",
          "Video",
          "Video Sphere",
          "Plane",
          "Object Loading"
        ],
        "Extra Virtual Reality Resource Links": [
          "Virtual Reality Awesome Articles",
          "Designing for Virtual Reality",
          "Becoming a Virtual Reality Designer.",
          "The User Experience of Virtual Reality",
          "Designing the perfect home, through virtual reality",
          "The Philosophy of Virtual Reality"
        ],
        "FREE 3D Models": [
          "TurboSquid",
          "cg-trader",
          "Free3D",
          "Sketchfab",
          "Clara.io",
          "Unit Asset Store"
        ],
        "Bonus Lecture: Discounted Course": [
          "Bonus Lecture: Discounted Course"
        ]
      },
      "requirements": [
        "Understand the fundamentals of Virtual Reality",
        "Game Development (optional)",
        "JavaScript Programming",
        "Coding",
        "Passion for Virtual Reality"
      ],
      "description": "\"Virtual reality was once the dream of science fiction. But the internet was also once a dream, and so were computers and smartphones. The future is coming.\" - Mark Zuckerberg\n\"We are all created equal in the virtual world and we can use this equality to help address some of the sociological problems that society has yet to solve in the physical world.\" - Bill Gates\n\"By feeling truly present, you can share unbounded spaces and experiences with the people in your life. Imagine sharing not just moments with your friends online, but entire experiences and adventures.\" - Mark Zuckerberg\nThe most powerful and influential people in the world believe virtual reality is going to shape the future of the world. This course will guide you through learning the fundamentals of Virtual Reality, providing you with the tools to make awesome and futuristic experiences.\nThis course will cover the following concepts:\nA-Frame programming\nVirtual Reality design philosophies\nVirtual reality programming\nSetting up a project\nDrawing 3D objects\nTransformations and animations\nTexturing objects\nLighting the 3D world\n3D Model Loading\nSkyboxes\nPlus much more\nVirtual reality is fast becoming the hottest technology in the world, with platforms from Oculus to PlayStation VR, there are millions of users around the world. A-Frame provides the features to tap into this immensely large and popular market.\nYou will be provided with the full source code to aid in development during and after this course. The source code is free to use in as many projects as you wish.\n\n\n\nOver 205,000 students have enrolled on my courses and all of them are extremely satisfied. You will also be satisfied with this course. If you do not like the course, remember that within 30 days you can request a full refund. I guarantee you satisfaction.\nIf you have any questions regarding the topics covered in this course, please feel free to ask. I'm always happy to help those who want to learn.\n\n\nTo summarise this is what you get:\n• Lifetime access to HD quality videos. No monthly subscription. Learn at your own pace, whenever you want.\n• All videos are downloadable. Learn wherever you want, even without an internet connection!\n• Downloadable starter code and final code for each section.\n• Free helpful support in the course Q&A when you have questions or get stuck.\n• Multiple coding challenges to practice your new skills (solutions included).\nSounds great? Then start this adventure today by clicking the “Take this course\" button, and join me in the only course that you will need!",
      "target_audience": [
        "Suited for JavaScript Developers",
        "Suited for Budding Game Developers",
        "Love Video Games & Relish The Prospect Of Making A Game",
        "Love New Technology",
        "Desire To Create Awesome Virtual Reality Experiences"
      ]
    },
    {
      "title": "Learn By Example: jQuery",
      "url": "https://www.udemy.com/course/learn-by-example-jquery/",
      "bio": "53 examples which form a step-by-step guide to master jQuery",
      "objectives": [
        "Use jQuery with ease to add styles, animations, Ajax support and more to their websites",
        "Use custom plugins to add common components to sites rather than re-inventing the wheel",
        "Build their own stateless and stateful custom plugins in jQuery",
        "Work with the jQuery UI library including the theme roller"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of HTML, CSS and Javascript"
      ],
      "description": "NOTE: This course uses jQuery 3.1.0 and jQuery UI 1.12.1\njQuery takes the most common operations that you would want to perform on your website and allows you to accomplish it in one line of code. Learn jQuery by example: from  basic building blocks to developing your own custom plugins!\nLet's parse that.\nAccomplish stuff with one line of code: jQuery makes common stuff super simple. Select all paragraphs on a page? One line of code. Style all headers under the container <div> with a yellow highlight? One line of code. Animate all the ball widgets such that they bounce and move around the screen? One line of code\nBasic building blocks to custom plugins: The course starts with basic principles which form the backbone of jQuery. Selectors, working with events, applying styles and animations, DOM manipulations, Ajax requests, using custom plugins etc. The later part of the course shows you can roll your own stateless and stateful plugins using the $.fn object and the widget factory.\nIn this course, we will learn by example. Each example is self-contained, has its source code attached, and gets across a specific jQuery use-case. Each example is simple by itself, but they come together as building blocks to build complex use cases.\nWhat's included in this course:\nInstalling and setting up a basic web server with jQuery and jQuery UI libraries\njQuery basics: Selectors, selector functions, mouse and key event handlers, CSS animations and styles, the animate() function, appending and editing DOM elements, Ajax requests\njQuery in-depth: Advanced selectors, event propagation, event capture and bubble phases, how animations work, custom animation queues and bypassing the queues, performance tips and tricks\njQuery plugins: Using custom plugins, developing a stateless plugin using the $.fn object, stateful plugins using the Widget Factory, jQuery UI components and the jQuery UI theme roller",
      "target_audience": [
        "Yup! Web developers who want to move beyond mundane Javascript programming and harness the power of jQuery",
        "Nope! Students who have never done web development using Javascript before"
      ]
    },
    {
      "title": "Ruby on Rails 6 Complete Beginner's Course",
      "url": "https://www.udemy.com/course/complete-beginners-course-for-ruby-on-rails-6/",
      "bio": "Learn the latest version of Rails in this new course and build powerful web applications with ease.",
      "objectives": [
        "How to install Ruby on Rails 6 on your computer",
        "How to build a new Ruby on Rails 6 application from scratch",
        "Build templates (views) for your application",
        "Setup a database (Postgres/MySQL)",
        "Install third party libraries using Ruby Gems",
        "Add user friendly interfaces using Bootstrap 4",
        "Use the Rails Console to explore our database entries",
        "Use the Rails Server Logs to debug errors",
        "Create a new model and learn how to create our own methods",
        "Create a new controller and write our own actions",
        "Create helpers and using them from our views",
        "Build a blog in Rails 6"
      ],
      "course_content": {},
      "requirements": [
        "Some basic programming knowledge will be helpful but not required (no Ruby / Rails knowledge required)",
        "Willingness to learn and a computer with internet access"
      ],
      "description": "Learn all the basic skills needed to develop Ruby on Rails 6 apps in just a few hours.\nNO FILLER CONTENT, this course will get straight into the action and teach you how to build FAST!\nThis isn't a 20+ hour course, and quite frankly you don't need to waste tons of time learning the basics.\nI have been building web apps with Ruby on Rails for close to 10 years and now it's time to share that experience so accelerate your learning.\nRuby on Rails is one of the most powerful frameworks for building web applications and is trusted by huge companies such as Airbnb, Shopify and Github.\nOne of the most attractive benefits you will discover with Rails is the ability to create working products FAST! This is why it has been hugely popular with many startups and a highly sought after skillset in tech hubs like Silicon Valley.\nThe underlying language for Rails is Ruby. Ruby was created for developer satisfaction, with the language being very easy to learn and lightweight in comparison to many other verbose languages and frameworks.\nThroughout this course we will discuss each step that we are taking and build a blog application as we progress through the course.\nRuby on Rails has changed a lot since the earlier versions and Rails 6 is no exception. Throughout this course we will focus on learning all the basics to get you comfortable building any Rails app you can imagine in the latest framework.",
      "target_audience": [
        "Anyone who wants to build powerful web apps / platforms",
        "Beginner Ruby / Ruby on Rails developers",
        "Developers who want to create powerful, secure applications fast!",
        "Entrepreneurs wanting to learn how to create a Minimum Viable Product (MVP)"
      ]
    },
    {
      "title": "CSS3 Animations, Transforms and Transitions Ultimate Guide",
      "url": "https://www.udemy.com/course/css3-animations-transforms-and-transitions-ultimate-guide/",
      "bio": "Enhance User Experience, Interactive Pages, 3D Animations, Real-Life Projects and Best Practices with CSS3 Animations",
      "objectives": [
        "Two and Three dimensional transforms: translate, scale, rotate, and skew",
        "Bringing live and interactivity to your page with transitions",
        "Adding advanced and complex motion to your page with keyframe animations",
        "Discovering The Real Power of CSS3 Animations",
        "Stunning Hover CSS3 Transitions and Effects",
        "Elegant CSS Transformations with examples and a comprehensive project",
        "Advanced and the most modern CSS3 Techniques",
        "The Cutting-edge Industry Standards and best practices",
        "Interactive Projects, Lab Sessions and Contents",
        "Enhancing User Experience (UX) with CSS Animations"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Setting Up the Working Environment",
          "What is Web Animation? Why to animate?",
          "Creating Our First Animation"
        ],
        "Transforms": [
          "Introduction to Transforms",
          "Moving Elements using Translate Function",
          "Resizing Elements using Scale Function",
          "Spinning Elements using Rotate Function",
          "Tilting Elements using Skew Function",
          "Transformable Elements",
          "Moving the Origin of the Element",
          "Multiple Transforms on One Element"
        ],
        "Project: Polaroid Image Gallery": [
          "Creating a Polaroid Image Card",
          "Creating the Gallery",
          "Paste Our Polaroid Images with Sticky Tapes",
          "Final Touches"
        ],
        "Transitions": [
          "Controlling Our Transitions",
          "Defining property to Apply the Transition",
          "Specifying How Long the Transition Will Take",
          "Transition Timing Functions Part 1",
          "Transition Timing Functions Part 2",
          "Transition Timing Functions Part 3",
          "Setting Timeout Before the Transition",
          "Lab Session: Bringing All Transition Properties Together",
          "Transition Shorthand Property",
          "Using Multiple Transitions on An Element",
          "Lab Session: Rocket Emoji Animation with Multiple Transitions",
          "Which CSS properties can be transitioned?",
          "Lab Session: Adding Transition Effects to Our Polaroid Image Gallery"
        ],
        "Project: Creative Link Effects": [
          "Growing and Scaling Bottom Effects",
          "Left to Right and Right to Left Effects",
          "Center to Edges Effect",
          "Edges to Center Effect",
          "Top and Bottom Left to Right and Right to Left Effects",
          "Top and Bottom Reverse Effect",
          "Swipe Text Effect in Vertical Direction",
          "Swipe Text Effect in Horizontal Direction",
          "Left Right Lines to Top and Bottom Effect"
        ],
        "Project: Cool Button Effects": [
          "Scale Effect - Grow and Shrink Button Size",
          "Swipe Fill Left and Right Effects",
          "Swipe Fill Top and Bottom Effects",
          "Slice Effect in Vertical Direction",
          "Slice Effect in Horizontal Direction",
          "Left Top and Right Bottom Corners to Full Border Effect",
          "Right Top and Left Bottom Corners to Full Border Effect",
          "Micro Interactions - Button Icons Effects",
          "Circle Fill Hover Effect",
          "Mouse Position Aware Circle Fill Hover Effect",
          "Social Buttons with Hover Effects"
        ],
        "Project: Image Hover Effects": [
          "Zoom In Effect",
          "Zoom Out Effect",
          "Rotate Effect",
          "Filter Effects - Sepia and Grayscale",
          "Caption Hover Effect"
        ],
        "Keyframe Animations": [
          "Animations",
          "Defining Keyframes",
          "Lab Session: Moving Around Box",
          "Specifying the Animation Name",
          "Defining How Long the Animation Lasts",
          "Animation Timing Functions",
          "Lab Session: Sprite sheet animation with steps()",
          "Setting Timeout Before the Animation",
          "Defining How Many Times the Animation Run",
          "Specifying the Animation Direction",
          "Defining Styles Before and After the animation",
          "Pausing Animation - Controlling the Animation State",
          "Animation Shorthand Property - Bringing All Animation Properties Together",
          "Multiple Keyframe Animations on Element"
        ],
        "Project: Pure CSS Spinners and Preloaders": [
          "Classic Circular Border Spinner",
          "Growing Circle Spinner",
          "Three Dots Pulse Spinner",
          "Heartbit Preloader",
          "Rotating Squares Preloader",
          "Wave Preloader",
          "Colorful Center Squares Preloader",
          "Square to Circle Rotating Spinner",
          "Clock Arrow Spinner"
        ],
        "Project: Real Life Animations": [
          "Pure CSS Typing Effect",
          "Auto Play Pure CSS Image Slider",
          "Fading Overlay with Spinner",
          "Animated progress bar - Loading Bar"
        ]
      },
      "requirements": [
        "Basic understanding on HTML5",
        "Basic understanding on CSS3",
        "Basic understanding on JavaScript",
        "Text editor for development",
        "Modern Web Browser",
        "Curiosity to Learn Professional Web Development Techniques",
        "Eagerness to become an expert frontend developer"
      ],
      "description": "# The most comprehensive CSS Animations Course in Udemy!\n# Lab Sessions and Real Life Projects\n# English Captions (not auto-generated)\n# All resources and code samples can be downloaded\n# Experienced and Responsive Author\n\n\nCSS has become a very popular and essential language for ever single developer in modern web development stack and this language is continuing to evolve by having more capabilities. Nowadays, CSS can handle the majority of motion and animation needs by using CSS transitions, CSS transforms and CSS keyframe animations.\n\n\nIn this course, we will cover all of the key points of adding motion to your designs and web pages together. The course will show you how to work with transforms, transitions, and keyframe animations in modern browsers.\n\n\nEvery topics are supported by comprehensive CSS3 Transform, Transition and Keyframe Animation examples, projects and also lab sessions are added to support and reinforce the learning curve.\n\n\nSo to become a CSS expert and a good web developer, you have to understand the fundamental topics very clearly. The most important topics of CSS Animations are included in this course to make everything clear in your mind.\n\n\nThe topic covered in the course are mainly :\nWhat CSS transforms are and how to use them\nUnderstanding 2d transformations: translate(), scale(), rotate(), and skew()\nBringing life to the page with transitions\nSimple and advanced transition effects\nWhat you can and can’t transition and animate\nUnderstanding the shorthand syntax of CSS transition properties\nCSS transition timing functions\nHow to animate with CSS using keyframes\nThe animation properties and syntax details\nUnderstanding 3d transforms: translate3d(), scale3d(), rotate3d(), and skew3d()\nPerspective\n\n\nAt the end of this course, you'll have gained a better understanding of the capabilities and potentials of CSS Transformations, Transitions and Animations.\n\n\nDon't forget! Small Interactions Big Impacts",
      "target_audience": [
        "Complete beginners who wants to enhance their skillsets",
        "Frontend Developers and Designers",
        "Professionals who wants to level up CSS skills",
        "Experts who wants to reinforce themselves",
        "Anyone who wants to refresh knowledge",
        "Developers who are tired of fighting with CSS"
      ]
    },
    {
      "title": "Professional RESTful API Design using Python Flask",
      "url": "https://www.udemy.com/course/restful-api-flask-course/",
      "bio": "Learn the fundamental concepts and build a RESTful API application from scratch",
      "objectives": [
        "You will learn the fundamental concepts for the design of RESTful API platforms",
        "You will be introduced to the RESTful API constraints",
        "You will learn how to setup an authentication API layer",
        "You will learn how to effectively build API endpoints"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "APIs and the Six Constraints of REST",
          "The RESTful Uniform Interface Constraint"
        ],
        "A Simple API - Pet Store": [
          "Installing the Docker Client",
          "Basic Container Structure",
          "Running the Container",
          "Flask Pluggable Views and Our First GET Method",
          "Using Postman",
          "Our First POST",
          "An Introduction to HTTP Status Codes",
          "A Real CRUD",
          "PUT and DELETE",
          "A Simple Authentication",
          "Testing our Simple Authentication",
          "Token API Model and API Endpoints",
          "Token API Views and Decorator",
          "Install bcrypt and Test Tokens",
          "Building the Apps Tests",
          "Token Tests",
          "Starting the Store End Point",
          "The JSON Schema Library",
          "The Store API File",
          "Trying out the Stores End Point",
          "Implementing PUT and DELETE",
          "Implementing pagination on GET all stores",
          "Store Tests",
          "Pet Endpoint Initial CRUD",
          "Finishing Pet GET, POST and Postman Tests",
          "Pets PUT and DELETE",
          "Pets Tests",
          "Pets Pagination Tests",
          "Get all Pets in a Specific Store Endpoint",
          "Testing the get all pets endpoint",
          "Search pets across stores"
        ],
        "Conclusion": [
          "Congratulations on Finishing the Course!",
          "Conclusion"
        ],
        "Bonus Section": [
          "Course Promo"
        ]
      },
      "requirements": [
        "A computer with internet access and administrative access to install packages",
        "Good understanding of how to use the command line interface, internet and code editors",
        "Good knowledge of the Flask web framework"
      ],
      "description": "This course will teach you how to build a professional API platform using pure Flask, without any supplemental libraries, so that students can learn the fundamentals of RESTful API design.\n\nIn today’s world, dominated by gorgeous JavaScript user interfaces and mobile applications, the ability to build a scalable and well architected API is key to be able to supplement those applications and ensure that clients and servers communicate with the proper interfaces.\nThe course covers the basic concepts of the RESTful API pattern and then goes into detail and step by step building an API platform that will cover the six constraints of the architecture. Students will learn the industry-standard and will follow best practices for API architectures.\nAt the end of the course students will be able to design, architect and build their own RESTful API platforms, and with the deep understanding of the laws governing APIs, can go ahead and try out the API libraries available for Python and Flask, knowing the fundamentals and the advantages of using them.\nIf you already know the basics of Flask and you are interested in how to design, architect and build an API platform, this is the course for you.\nThe course is divided in 2 sections:\nIntroduction which covers all the concepts necessary to understand what is a RESTful API and its six constraints\nA step by step explanation building a Pet Store API that will include an authentication layer, a Store endpoint and a Pet endpoint as well as search functionalities\nThe course has more than 5 hours of video tutorials as well as the source code at the end of each section, so that you can follow along with the coding process.\nThe course can take anywhere from 3 to 10 days to complete based on how much material the student completes daily.\nAdditionally we’re constantly updating the course, adding contents thanks to the feedback of our students.\nJoin this course and continue your path to becoming a professional backend web developer!",
      "target_audience": [
        "Programmers and developers with basic Flask knowledge who want to learn how to design and build professional API platforms",
        "Application architects who want to understand better how to build API applications",
        "Startup CTOs who want to understand better best practices for API design",
        "Computer Science Students who want to get exposed to real life API building concepts"
      ]
    },
    {
      "title": "School Management System - Build With PHP CodeIgniter Part 2",
      "url": "https://www.udemy.com/course/php-school-system-using-codeigniter-framework2020-part-2/",
      "bio": "This is the only course on this platform where school website, computer based test, chat application is fully developed",
      "objectives": [
        "Have a new PHP Skill that would increase income",
        "Craft a portfolio of web apps to apply for seniour developer jobs",
        "Build complete school management in codeigniter",
        "Be able to build any web app you want using codeigniter",
        "Work as a freelance codeigniter developer",
        "Build fully-fledged web apps for your startup or business",
        "Build complete school computer based test (CBT)",
        "Build complete school website.",
        "Build comlete school system with standard chat app"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "1.2 How to download complete source codes and database.",
          "2.1 General Inttroduction",
          "1.3 Showing Areas To Perfect In The Last Course",
          "1.4 Brief Information On The Course Outline",
          "1.5 Quick Summary On Codeigniter Must Watch"
        ],
        "2. Changing Language Dynamically From The Header": [
          "2.1 Uncomment header drop down for language",
          "2.2 Creating The Language Method In Controller",
          "2.3 Working on the header to change language",
          "2.4 Select country logo and name from database",
          "2.5 Fixing display image and perfect codes",
          "2.6 List all the languages from table",
          "2.7 Fixing the language arrangment",
          "2.8 Change language with ajax and round up section"
        ],
        "3. Working on the Terminal Report Card": [
          "3.1 Information on the country standard report card",
          "3.2 Create terminal report card in admin controller",
          "3.3 Preparing the html form for terminal report card",
          "3.4 Adding total score and button for mass report card",
          "3.5 Create the mass report method in admin controller",
          "3.6 Quick explanation on the terminal report",
          "3.7 Prepararing terminal report template",
          "3.8 Working with the terminal report template",
          "3.9 Selecting student information",
          "3.10 Selecting student information",
          "3.11 Working with the student attendance",
          "3.12 Working with the student marks",
          "3.13 Working with the student marks",
          "3.14 Working with the student grade score",
          "3.15 Working with the subject remarks",
          "3.16 Working with the head and class teacher",
          "3.17 Working with the student outstanding fee",
          "3.18 Round up section"
        ],
        "4. Building Student Identity Card": [
          "4.1 Searching for free id card css template",
          "4.2 Preparing the id card button",
          "4.3 Arranging the identity card css and html",
          "4.4 Displaying student information inside the identity card",
          "4.5 Displaying system information inside the identity card",
          "4.6 Creating the barcode model file",
          "4.7 Working with the barcode generator",
          "4.8 Display the student barcode roll number",
          "4.9 Clarifying the css in the barcode"
        ],
        "5. Building the student mass identity card": [
          "5.1 Creating a new student",
          "5.2 Adding page name to navigation bar",
          "5.3 Creating the method for mass id card",
          "5.4 Preparing the student mass id card with ajax",
          "5.5 Arrangement of the student id card side by side",
          "5.6 Perfecting terminal report and copy print button",
          "5.7 Fix printing id card and roun up section"
        ],
        "6. Building the school website": [
          "6.1 Introducing the template to be used",
          "6.2 Brief information on the template",
          "6.3 Preparing the template in our codeigniter file",
          "6.4 Coverting html to php file",
          "6.5 Separating and including with php include",
          "6.6 Completing separating the files",
          "6.7 Using base url to find the css and javascript",
          "6.8 Create website controller and loading the website",
          "6.9 Our first select codes in school website",
          "6.10 Load school logo and using get phase",
          "6.11 Complete working with navigation bar",
          "6.12 Working with the school subject",
          "6.13 Counting teacher, student, alumni and parents",
          "6.14 Working with the footer message",
          "6.15 Creating Facebook like plugins"
        ],
        "7. Building the school website PART TWO": [
          "7.1 Using the standard way of coding",
          "7.2 Creating school website setting table",
          "7.3 Create banner, contact, subscriber table",
          "7.4 Adding website setting to the navigation bar",
          "7.5 Create website setting method in admin controller",
          "7.6 Prepararing the html for tabs",
          "7.7 Perfecting the tab heading information",
          "7.8 Prepararing general setting forms",
          "7.9 Perfecting general setting form",
          "7.10 Completing general settings codes and test",
          "7.11 Working with the banner tab",
          "7.12 Completing working with banner codes",
          "7.13 Working with testimony tab",
          "7.14 Working with the testimony status",
          "7.15 Praparing the parent testimony form",
          "7.16 Completing the codes from the admin page",
          "7.17 Test codes and round up the testimony tab"
        ],
        "8. Building the school website PART THREE": [
          "8.1 Complete the admin website settings",
          "8.2 Working with school website navigation",
          "8.3 Display website banner and banner text",
          "8.4 Working with about us information",
          "8.5 Working with the website home page",
          "8.6 Fixing testimony image size",
          "8.7 Working with the subscriber",
          "8.8 Working with the subscriber",
          "8.9 Completing the subscriber codes",
          "8.10 Fixing notification message and test codes",
          "8.11 Working with the footer logo and text",
          "8.12 Generating facebook like codes and test",
          "8.13 Display the video on the website",
          "8.14 Working with the teacher navigation",
          "8.15 Generating map codes from google in contact page",
          "8.16 Preparing the contact navigation information",
          "8.17 Saving the contact information to the database",
          "8.18 Working with the language changing",
          "8.19 Final touching and round up section"
        ],
        "9. Building general user chat application": [
          "9.1 Showing the template to be used for the chat app",
          "9.2 Arranging the css and the javascript files",
          "9.3 Understanding the chat template",
          "9.4 Create general message table",
          "9.5 Display chat widget image and name",
          "9.6 Display message chat from the general message",
          "9.7 Fix simple bug encounter and test codes",
          "9.8 Insert message manually and test student part",
          "9.9 Javascript that automatically refresh the chat widget",
          "9.10 Ajax codes that insert into general message table",
          "9.11 Create method in controller to save to table",
          "9.12 Fix sending message with ajax",
          "9.13 Working on the textrea to enhance chat",
          "9.14 Sorting the chat message ascending order",
          "9.15 Round up chat application section"
        ],
        "10. Build student book request": [
          "10.1 Brief explanation on student book request",
          "10.2 Preparing the student request book page",
          "10.3 Prepararing the html form for book request",
          "10.4 Create book request table work on codes",
          "10.5 Working on the student request book",
          "10.6 Working with the student controller",
          "10.7 Insert code for the student book request",
          "10.8 Complete the student request book part",
          "10.9 Working with book request in admin page",
          "10.10 Display all student book request",
          "10.11 Working on the update book",
          "10.12 Round up book request section"
        ]
      },
      "requirements": [
        "Please dont take this course if you have not taken Complete PHP School System Using CodeIgniter Framework (2020)",
        "Must have taking Complete PHP School System Using CodeIgniter Framework (2025)",
        "PHP version 7+ is a must",
        "Little knowledge of CSS will be an advantage",
        "Zeal to learn codeIgniter framework",
        "I'll walk you through, step-by-step how to setup codeigniter",
        "Computer system - windows/mac"
      ],
      "description": "Please READ all the points before proceeding\nPlease watch the preview video and ensure you are satisfy with my accent and my English before enrolling for the course.\nPlease do not take the course if you are not ready to learn how to build complete school solution.\nPlease note that The objective of this course is not to sell complete school system but to learn codeigniter by building your own complete school system through learning by practical.\nPlease read the Pre-Requisites before signing up\nIf you are still with me lets continue\nBuilding dynamic websites is not an easy challenge and requires time and effort dedicated to coding every bit and piece of the website, which is why anytime there is a new tool that promises to ease the woes of coding, developers always jump at the chance to try it.\nCodeIgniter is a simple open-source framework that makes it the coding tasks easier by providing a faster way to set up a PHP website from the ground-up. This tool with a small framework ensures that developers can design websites that are light, fast and dynamic.\nSo, for any developer that wants to become a server-side master, this is a tool that they should definitely have in their toolkit. But, it’s not always easy to find a course that is clear and concise and targets exactly what you are looking for!\nThis is why we have designed this course with an aim teach you everything you need know about CodeIgniter with real world project (Building Standard and Most School Management System) using a no-fluff and clear approach at the topic at hand, this tutorial will breakdown CodeIgniter into simple and easy to learn videos so as to be able to build any real world application on CodeIgniter.\nAt the end of this course, you will have not only learnt the CodeIgniter framework, but you will actually be able to start building your own projects from scratch. In addition to knowledge, this course will also give you the practical hands-on experience and the confidence to start coding your own websites by building school system.\nThe course will start at the very beginning with a detailed introduction into the CodeIgniter framework, from there moving on to installing the framework. From there you will become familiar with the framework, and start building your own school system.\nJoin us today as we learn CodeIgniter together by building real world software and be free from some authors who claim to teach you a particular programming language but only teach you basis and some copy and paste projects which at the end cannot take you to anywhere.\nSome of those things we will cover are as follows:\nTerminal Report\nBuild complete school website\nBuild Internal Messaging (Chat App)\nBuild complete computer based test (CBT)\nStudent requesting book from their respective pages\nGenerating student ID card with barcode\nChanging language dynamically\nIntegrate stripe payment gateway\nMore on reports\nand many professional retouching\nSign up today, and look forwards to:\nOver 600 hours of HD 1080p video content, everything you’ll ever need to succeed as a CodeIgniter developer.\nBuilding complete and standard school management system.\nAll the knowledge you need to start building any web app you want\nBuild school management system software worth $8000\nChallenges and Solutions\nFast and helpful support if you need anything or have questions\nMy great sense of humor.\nBuild meaningful software quickly\nFrom Beginner to Expert CodeIgniter Developer\nWe know that you’re here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they’re doing, you’d be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and we’re always on hand to answer student questions.\nSo by the end of the course, you’ll completely understand:\nCodeIgniter framework to level of building your own software especially school system.\nHow to use Ajax, jQuery effectively\nBuild school management system software worth $8000\nHow to create secure Login for Code\nSoftware Design: How to organize and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, classes and protocols.\nDon’t waste your time\nDon’t waste another minute of your precious life on poor quality videos on YouTube. Or instructors who you can’t understand. Or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it.\nDon’t waste your money\nInside this course, you’re getting exactly the same course materials and curriculum as our 3 weeks in-person programming boot camp. Instead of spending $8000+ dollars and taking time off work, save loads of money by getting this course and do it at your own pace!\nJoin us NOW as we build this awesome software together using one of the best frameworks - Codeigniter!!!",
      "target_audience": [
        "Beginner developer want to learn more about codeigniter",
        "Beginner Codeigniter developers curious about how to build school system",
        "Developers who want to be codeigniter expert.",
        "Professional who want to add more to their knowledge",
        "Those who want to know how to build complete school system",
        "If you need school software to power your school"
      ]
    },
    {
      "title": "All You Need To Know About AngularJS - Training On AngularJS",
      "url": "https://www.udemy.com/course/angularjs/",
      "bio": "This course covers all the basics of how to get up and running with AngularJS. An InDepth training course.",
      "objectives": [
        "Learn everything you need to know about the AngularJS framework"
      ],
      "course_content": {
        "Getting To Know The AngularJS Framework": [
          "Important - Download These First - Working Files",
          "0101 Introduction",
          "0103 What Is New And Different About AngularJS",
          "0104 Model View",
          "0105 How You Should Be Thinking About AngularJS",
          "0106 How To Access Your Working Files"
        ],
        "Views, Controllers, And Built-In Directives": [
          "0201 Application Setup",
          "0202 Interpolation And Controllers",
          "0203 Built-In Directives",
          "0204 ngRepeat",
          "0205 ngClass, ngTemplate, And ngInclude",
          "0206 ngModel",
          "0207 $Scope.$Watch",
          "0208 Remove Scope Watcher",
          "0209 ngCloak"
        ],
        "Filters": [
          "0301 Built-In Filters",
          "0302 Tricks With Filters",
          "0303 Custom Filters"
        ],
        "AngularJS Service Types": [
          "0401 How To Think About Services",
          "0402 Constants And Values",
          "0403 Factories",
          "0404 Services",
          "0405 Providers",
          "0406 Decorators",
          "0407 Dependency Injection"
        ],
        "Directives": [
          "0501 How To Think About Directives",
          "0502 Breaking Down Your First Directive",
          "0503 Working Through Your First Directive - Part 1",
          "0504 Working Through Your First Directive - Part 2",
          "0505 Working Through Your First Directive - Part 3",
          "0506 Compile And Link Functions",
          "0507 Directive Communication Channels",
          "0508 Transclusion",
          "0509 Data"
        ],
        "Routing And Promises": [
          "0601 Basic Routing - Part 1",
          "0602 Basic Routing - Part 2",
          "0603 Redirects",
          "0604 Promises",
          "0605 Resolve",
          "0606 Routing Events"
        ],
        "Advanced Scope": [
          "0701 Scope Events",
          "0702 $Scope.$Apply - Part 1",
          "0703 $Scope.$Apply - Part 2"
        ],
        "Testing": [
          "0801 How To Think About Testing",
          "0802 Unit Testing:",
          "0803 E2E Testing:"
        ],
        "Practices For Production Apps": [
          "0901 Serving AngularJS",
          "0902 Organizing AngularJS Modules"
        ],
        "Interacting With Servers": [
          "1001 $Http",
          "1002 $Resource"
        ]
      },
      "requirements": [
        "A willingness to learn cool stuff"
      ],
      "description": "This AngularJS training course from Infinite Skills teaches you all about this open-source JavaScript framework. This course is designed for the absolute beginner, meaning no prior knowledge of AngularJS is required, however you should already have a fundamental understanding of HTML, CSS and JavaScript.\n\nYou will start by setting up the application and learning about the views, controllers, and built-in directions. From there, the course will teach you about filters, showing you tricks with filters and how to create custom filters. This video tutorial will cover topics in AngularJS including service types, directives and directive communication channels, routing and promises, and advanced scope. Finally, you will learn about interacting with servers and 3rd party libraries.\n\nBy the completion of this computer based training course, you will have gained the knowledge and experience necessary for working with the AngularJS framework. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Web Designers and Developers"
      ]
    },
    {
      "title": "PHP & MySQL - Learn The Easy Way. Master PHP & MySQL Quickly",
      "url": "https://www.udemy.com/course/learning-php-and-mysql-development-the-easy-way/",
      "bio": "Learn To Build Robust PHP / MySQL Web Applications, Taught By Leading Zend Certified PHP Trainer. Learn To Code PHP Fast",
      "objectives": [
        "How to download and install PHP and MySQL tools and frameworks onto a server and home machine.",
        "How to configure relevant setting to match the needs of your project.",
        "How to work between a user interface and a database back-end that stores critical information.",
        "How to plan and apply PHP and MySQL to specific examples and finally your own real world projects."
      ],
      "course_content": {
        "Getting Started": [
          "PHP Working Files - Download These First",
          "0101 What The Course Covers",
          "0102 Course Setup Using XAMPP",
          "0103 Installing XAMPP On Windows",
          "0104 Installing MAMP On The Mac",
          "0105 Installing XAMPP On Linux",
          "0106 Configuring PHP And MySQL",
          "0107 Configuring Apache",
          "0108 Using Editors And IDEs",
          "0109 Saving Your Code",
          "0110 Searching PHP And MySQL Documentation",
          "0111 Getting Help And Verifying XAMPP Status",
          "0112 Setup And Finding Course Files:",
          "0113 Lab: Building A New Website",
          "0114 Solution: Building A New Website"
        ],
        "Understanding The Basics": [
          "0201 Creating Variables In PHP",
          "0202 Assigning Different Data Types",
          "0203 Performing Arithmetic Operations",
          "0204 Adding Comments To The Code",
          "0205 Assigning Constant Values In PHP",
          "0206 Using The printf Command To Format A String",
          "0207 Understanding The substr Command",
          "0208 Working With Strings",
          "0209 Debugging An Application",
          "0210 Lab: Mixing HTML And PHP",
          "0211 Solution: Mixing HTML And PHP"
        ],
        "Working With Arrays": [
          "0301 Working With Numeric Keys",
          "0302 Working With Associative Arrays",
          "0303 Assigning Values To Arrays",
          "0304 Creating A Multidimensional Array",
          "0305 Searching Arrays",
          "0306 Sorting Arrays",
          "0307 Removing Values From Arrays",
          "0308 Measuring Array Differences",
          "0309 Merging Arrays",
          "0310 Lab: Using An Array To Generate A Drop Down Menu",
          "0311 Solution: Using An Array To Generate A Drop Down Menu"
        ],
        "Creating Control Structures: Looping And Branching": [
          "0401 Comparing Values",
          "0402 Using if, else, And elseif",
          "0403 Using switch",
          "0404 Setting Up A for Loop",
          "0405 Configuring while And do while Loops",
          "0406 Using A foreach Loop",
          "0407 Branching With continue, break, And goto",
          "0408 Lab: Using Loops To Display Rows Of Data On A Web Page",
          "0409 Solution: Using Loops To Display Rows Of Data On A Web Page"
        ],
        "Managing The Code: Functions": [
          "0501 Using Built-In Functions",
          "0502 Creating Your Own Functions",
          "0503 Returning Values",
          "0504 Defining Mandatory And Optional Parameters",
          "0505 Using Parameters By Reference",
          "0506 Handling A Variable Number Of Parameters",
          "0507 Understanding Global Variables In PHP",
          "0508 Lab: Creating A Function Which Paginates Rows Of Data",
          "0509 Solution: Creating A Function Which Paginates Rows Of Data"
        ],
        "Managing The Code: Object-Oriented Programming": [
          "0601 Defining Classes",
          "0602 Adding Properties",
          "0603 Creating Methods",
          "0604 Determining The Visibility Level",
          "0605 Building Classes By Inheritance",
          "0606 Handling Exceptions",
          "0607 Introducing The MVC (Model-View-Controller) Design Pattern",
          "0608 Lab: Building An MVC Website Using OOP",
          "0609 Solution: Building An MVC Website Using OOP"
        ],
        "Managing The Code: External Libraries": [
          "0701 Loading Code With include",
          "0702 Loading Code With require",
          "0703 Loading Code Once Only",
          "0704 PHP Extensions And PECL",
          "0705 PHP Libraries And PEAR",
          "0706 Lab: Downloading An External Library",
          "0707 Solution: Downloading An External Library"
        ],
        "Managing Files": [
          "0801 Using The f* Family",
          "0802 Using The *file* Family",
          "0803 Understanding Streams",
          "0804 Updating The Error_Log",
          "0805 Parsing Directory Structures",
          "0806 Lab: Reading A CSV File",
          "0807 Solution: Reading A CSV File"
        ],
        "Managing A MySQL Database": [
          "0901 Understanding RDBMS Terminology",
          "0902 Command Line Access",
          "0903 Using phpMyAdmin",
          "0904 Configuration",
          "0905 Creating A Database",
          "0906 Managing Tables - Part 1",
          "0907 Managing Tables - Part 2",
          "0908 Understanding Indexes And Relationships",
          "0909 Establishing Relationships And Constraints",
          "0910 Lab: Defining Tables And Relationships For A Website",
          "0911 Solution: Defining Tables And Relationships For A Website"
        ],
        "Understanding Structured Query Language (SQL)": [
          "1001 Retrieving Data Using SELECT",
          "1002 Adding Data Using INSERT",
          "1003 Editing Data Using UPDATE",
          "1004 Removing Data Using DELETE",
          "1005 Performing Advanced Queries Using JOIN",
          "1006 Lab: Creating Select, Insert, Update, And Delete SQL Statements",
          "1007 Solution: Creating Select, Insert, Update, And Delete SQL Statements"
        ]
      },
      "requirements": [
        "The Desire To Create Cool Web Applications In PHP And MySQL"
      ],
      "description": "A 15 hour PHP & MySQL Training Course Taught By A Zend Certified PHP Trainer, This PHP with MySQL Essential Training Teaches You All You Need To Know.\nIn this PHP / MySQL training title from InfiniteSkills, you will learn PHP and MySQL and its fundamentals. These two platforms have been virtually inseparable for many years, and major groundbreaking websites such as WordPress, Wikipedia, and Facebook use PHP and MySQL technologies.\n\nThis PHP with MySQL Essential Training is designed for the beginner; no previous programming or database experience is required. Your training begins with the absolute basics, covering topics such as creating variables, working with data types and outputting them to a web page. You will learn how to work with arrays, how to use loops and control structures such as for each, while and if. You will learn about functions and creating classes for object-oriented programming. You will master interacting with MySQL and using SQL functions to store and retrieve data. Doug also provides in-depth lessons on how PHP and MySQL can be used to send email, work with date and time functions, use cookies and sessions, building web forms, and much more.\n\nThroughout this PHP with MySQL Essential Training course you will complete labs that re-enforce the concepts you have learnt. Once you have completed this video tutorial you will be well versed in the fundamentals of creating web applications using PHP and MySQL. Working files are included, allowing you to follow along with the author throughout the lessons.\n</p>",
      "target_audience": [
        "Anyone who wants to build a website that goes beyond the requirements of basic HTML and CSS.",
        "Anyone who wants to learn how to build an app that can handle data and interface with end users at the same time.",
        "Anyone who wants to learn how MySQL can function as a database solution.",
        "Anyone who wants to learn basic programming and development skills without days of digging through technical books."
      ]
    },
    {
      "title": "Python Programming: Learn Python by Build a XTwitter Chatbot",
      "url": "https://www.udemy.com/course/twitter-chat-bot-in-python/",
      "bio": "Master Python Basics with Step-by-Step Examples and Build a Twitter Chatbot from Scratch",
      "objectives": [
        "Learn Python in easy and simple way.",
        "Learn Python programming basics.",
        "Learn coding in Python by examples.",
        "Apply what you will learn in Python through building a fully working Twitter Chat Bot in Python."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Python2 VS Python3",
          "Understanding Data Types in Python"
        ],
        "Python Refresher": [
          "Variables, Operators and Data Types in Python",
          "String Functions in Python",
          "Control Flow VS Loops",
          "Data Structures in Python",
          "Error Handling in Python",
          "Functions in Python",
          "Files and Modules in Python"
        ],
        "Python Skills Role Plays.": [
          "Python Code Review & Refresher.",
          "Python Skills Refresher Chat."
        ],
        "Twitter Chat Bot in Python": [
          "Twitter Chat Bot Part 1",
          "Twitter Chat Bot Part 2",
          "Twitter Chat Bot Part 3"
        ],
        "Bouns": [
          "Thank You"
        ]
      },
      "requirements": [
        "No primer programming experience needed for this course.",
        "Computer and internet.",
        "Your enthusiasm to learn Python Basics and Python Object Oriented Programming.",
        "Everything else you need to learn Python Programming & to build is already Twitter Chat Bot in this course."
      ],
      "description": "Python programming is an essential skill for anyone interested in software development, machine learning, or data science. Whether you're a beginner or an experienced developer, this course will help you learn Python programming basics and build a Twitter chatbot from scratch.\n\n\nIn this comprehensive course, we'll cover everything from Python installation to advanced topics like control flow, loops, and functions. With step-by-step examples, quizzes, and a real-world project, you'll be able to master Python programming and apply what you learn to build a Twitter chatbot from scratch.\n\n\nYou'll learn how to install Python, use Python IDEs like IDLE and Anaconda, and master Python data types, operators, functions, modules, and file handling. You'll also learn how to handle errors in your Python programs and use Python to open files.\n\n\nWith hands-on exercises, quizzes, and a real-world project, you'll be able to master Python programming and build a Twitter chatbot from scratch.\n\n\nWhat you will learn in this course?\n\n\n- Learn Python programming basics with step-by-step examples.\n- Master Python data types, operators, functions, modules, and file handling.\n- Explore advanced topics like control flow, loops, and functions.\n- Learn how to handle errors in your Python programs and use Python to open files.\n- Apply what you learn to build a Twitter chatbot from scratch.\n\n\nPython programming is an essential skill for software development, machine learning, and data science. With our comprehensive curriculum and hands-on exercises, you'll gain the knowledge and skills you need to become a Python Programming expert.\n\n\nJoin us today and start your journey to mastering Python Programming and Building a Twitter Chatbot!",
      "target_audience": [
        "Beginner Python Programmer who want to master Python programming Concepts in simple and easy way.",
        "By the end of the course you’ll get the confidence to code in Python smoothly & fluently.",
        "Students want to build the skills that is needed to get your first Python programming job.",
        "Students want to build Twitter Chat Bot in Python from Scratch."
      ]
    },
    {
      "title": "The essential guide to Firebase with React.",
      "url": "https://www.udemy.com/course/the-essential-guide-to-firebase-with-react/",
      "bio": "Create modern app using modern technologies",
      "objectives": [
        "Move around Firebase and make it work with a React app",
        "Storage, Databases, hosting, cloud f all the main tools from firebase."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What it firebase ?",
          "Creating a firebase app",
          "Linking firebase to React"
        ],
        "Firestore": [
          "Creating a DB",
          "Accessing firestore from our app",
          "Looping data",
          "References",
          "Subcollections",
          "Get, Where, Doc, Order by",
          "Adding documents",
          "Adding documents 2",
          "Updating",
          "Limit, limit to last, start and end at",
          "Checking the exits property",
          "OnSnapshot"
        ],
        "Authentication": [
          "Enabling Auth",
          "Creating a sign in and a register form",
          "Creating a sign in and a register form 2",
          "User state change",
          "The user object",
          "Verify user email",
          "Using providers",
          "Storing user data"
        ],
        "Storage": [
          "Starting with storage",
          "Uploading an image",
          "The upload task",
          "Pause, cancel and resume",
          "The download URL",
          "Using the download URL",
          "Custom metadata",
          "Listing all",
          "Deleting data"
        ],
        "Hosting": [
          "Preparing the project",
          "Deploying to production"
        ],
        "Firebase rules": [
          "Firestore rules",
          "Firestore rules 2",
          "Firestore rules 3",
          "Firestore rules 4",
          "Storage rules",
          "Storage rules 2"
        ],
        "Cloud functions": [
          "Intro",
          "Init the functions",
          "Deploying the functions",
          "HTTP and trigger functions",
          "Callables",
          "Run it locally"
        ],
        "Practice project: xnbeats": [
          "intro and installation",
          "Creating the routes",
          "Adding Redux",
          "Creating the login form",
          "Creating a firebase project",
          "Registering users",
          "Registering users 2",
          "Login users",
          "Auto-signin",
          "Logout",
          "Route guards",
          "Login guard",
          "Dashboard layout",
          "Creating the profile",
          "Creating the login modal",
          "Finishing the login modal",
          "Finish update profile",
          "Creating the add reviews component",
          "Adding Formik and Yup",
          "Adding Formik and Yup 2",
          "Adding a wysiwyg",
          "Uploading review images",
          "Uploading review images 2",
          "Finish uploading review images",
          "Clearing add reviews",
          "Main reviews dashboard",
          "Main reviews dashboard 2",
          "Main reviews dashboard 3",
          "Creating the edit reviews",
          "Finish the edit reviews",
          "Creating home posts",
          "Finish home posts",
          "Creating the review post view",
          "Finish the review post view",
          "Creating the contact section",
          "Sending emails with cloud functions",
          "Creating the dashboard messages",
          "Creating the dashboard messages 2",
          "Adding rules to firestore",
          "Adding rules to firestore 2",
          "Adding rules to storage",
          "Deploy"
        ],
        "React mini-course [ optional ]": [
          "Installing node js and using the cli",
          "The bundle",
          "Getting started with the Code",
          "JSX behind the scenes",
          "Importing components",
          "Types of components",
          "Adding styles",
          "Events",
          "Using STATE",
          "Using props",
          "Using props 2",
          "Props to class",
          "React children",
          "More with styles",
          "Style plugins",
          "Filter the news",
          "ROUTES: installing routes",
          "ROUTES: Creating components",
          "ROUTES: Using routes",
          "ROUTES: Linking",
          "ROUTES: Params",
          "ROUTES: Other features",
          "ROUTES: Switch",
          "ROUTES: Redirections",
          "ROUTES: 404 and withrouter",
          "PROJECT 1: Getting ready",
          "PROJECT 1: Adding a header and a banner",
          "PROJECT 1: Bringing the HOME list",
          "PROJECT 1: Creating the artist detail",
          "Component life-cycle",
          "Component life-cycle 2",
          "Conditional rendering",
          "Pure components",
          "Adjacent elements",
          "HOC",
          "HOC 2",
          "TRANSITIONS: Using them",
          "TRANSITIONS: Using more of it",
          "TRANSITIONS: CSS transitions",
          "TRANSITIONS: Transitions group",
          "Proptypes",
          "Proptypes 2",
          "Controlled components",
          "PROJECT 2: NBA - Installation",
          "PROJECT 2: Setting routes, footer and header",
          "PROJECT 2: Adding a carrousel/slider",
          "PROJECT 2: Subscriptions",
          "PROJECT 2: Subscriptions 2",
          "PROJECT 2: Home blocks",
          "PROJECT 2: Creating a poll",
          "PROJECT 2: finishing the poll",
          "PROJECT 2: The teams section",
          "PROJECT 2: Finishing the teams section",
          "PROJECT 2: The team view",
          "REDUX: Redux introduction",
          "REDUX: Creating a store",
          "REDUX: The redux flow",
          "REDUX: Combining reducers",
          "REDUX: Creating a valid reducer",
          "REDUX: Creating actions",
          "REDUX: MapStateToProps and connect",
          "REDUX: Dispatching",
          "REDUX: Types",
          "REDUX: Using middleware",
          "REDUX: Tiny practice project with redux",
          "REDUX: Connecting routes and redux",
          "REDUX: Home, bringing the artists",
          "REDUX: Filtering the home list",
          "REDUX: Creating the artists section",
          "REDUX: Clearing the artistdata",
          "PROJECT 3: Installation",
          "PROJECT 3: Adding redux",
          "PROJECT 3: Getting home data",
          "PROJECT 3: Latest news component",
          "PROJECT 3: Other news section",
          "PROJECT 3: Articles page",
          "PROJECT 3: Adding the likes component",
          "PROJECT 3: Finish the handle likes",
          "PROJECT 3: Clearing data",
          "HOOKS: Introduction to hooks",
          "HOOKS: Usestate",
          "HOOKS: Usestate 2",
          "HOOKS: UseEffect",
          "HOOKS: UseReducer",
          "HOOKS: The context",
          "HOOKS: The context 2"
        ]
      },
      "requirements": [
        "No, just css and html."
      ],
      "description": "Do you want to create web applications with Firebase and React ?. This is the course for you.\nWe will start from the very beginning, from \"I don't even know how to create a firebase account ….and why should I?“ to actually understand how Firebase works and make a practice project.\nYou will learn all the logic and practice behind Firebase in different modules and as we advance through the course we will be increasing the difficulty.\nTo sum everything up, you will learn in this course:\nHow to move around the firebase dashboard\nUnderstand the different services we we with FBase\nCreate and application and link it to your React app\nWork with Firestore, the firebase DB\nHow to make authentication happen on your web app.\nUnderstand firebase storage and use it.\nHow to use cloud functions\nApply rules to your queries.\nHow to host your app on firebase so the world can see it.\nCreate a practice application to apply what we have learned\nDon’t know how to use React.? Don’t panic, at the end of the course you get a full React mini course, so you get two courses for the price of one.\nWhat about the instructor experience ?\nWell I've been around for 13 years now, built lots of applications for small projects and big companies like Citi, Fox, Disney and a lot more.\nToday I work as a developer for a major company developing applications on React , Angular and Vue, but I like to teach in my spare time.\nHow about the target audience?\nThis course is for almost everyone, a little bit of Javascript is required.We will use ES6 but you can learn as we go.\nIf you want to take your coding to the next level, this is the course for you.",
      "target_audience": [
        "Mostly beginners, but everyone is welcomed."
      ]
    },
    {
      "title": "Springboot 3 with JWT Authentication & Authorization in 2025",
      "url": "https://www.udemy.com/course/practical-bootcamp-jwt-authentication-with-java-springboot/",
      "bio": "UPDATED-2025 - Learn to secure your SpringBoot based RESTful API's using Role Based JWT Authentication & Authorization",
      "objectives": [
        "You will learn basics of security like Authentication and Authorization",
        "You will learn everything about JWT(JSON Web Token)",
        "You will learn to Implement JWT with SpringBoot and Spring Security",
        "You will learn to Develop CRUD API and secure it with JWT",
        "You will learn to Implement Role Based Authentication & Authorization with JWT & Spring Security",
        "You will learn to setup a SpringBoot project from scratch",
        "You will learn to create API's which will talk to Database using Spring Data JPA",
        "You will learn to protect your API's based on user role",
        "You will get the complete source code"
      ],
      "course_content": {
        "NEW: Springboot 3.3.5 with JWT Authentication & Authorization": [
          "What is JWT and How does it work to serve Token based Authentication and Author",
          "How does JWT token look like and its different parts",
          "Understanding the JWT Workflow",
          "Software Download and Installation",
          "Generating the starter springboot 3.3.5 project",
          "Intellij Project Settings",
          "Adding JWT dependencies",
          "Adding Different User Roles",
          "Creating Role Entity",
          "Creating User Entity",
          "Adding profile based application properties files",
          "Adding H2 file based Database configuration",
          "Creating Role Repository with required custom queries",
          "Creating User Repository with required custom queries",
          "Adding logic for UserDetailsImpl class for mapping the User Entity and Role",
          "Adding logic for UserServiceImpl to load user and save user",
          "Service for generating validating token and extracting claims",
          "Implementing JWT Authentication Filter",
          "Implementing and understanding Security Config bean",
          "Exception handling for all security errors",
          "Understanding Security Filter Chaining configuration",
          "Handling Cors Configuration in the application",
          "Creating Signup Request DTO",
          "Creating LoginRequest and Response DTO and Message DTO",
          "Implementing Signup and Registration functionality in Auth Controller",
          "Understanding Auth Controller",
          "Startup command to insert roles into database",
          "Solving circular dependency",
          "Testing the application",
          "Updating Security Config rules and testing again",
          "Implement Test Controller to test Authentication and Authorization",
          "Testing different roles with API endpoints security",
          "Get LoggedIn user information",
          "Defining ErrorDTO and BusinessException in Backend API",
          "Implementing Global Exception Handler",
          "Mapping the Login Response to right fields",
          "Source code"
        ],
        "Designing a Real World Multi Role Based Application": [
          "Design- Service Provider Functionalities",
          "Design- Service Consumer Functionalities",
          "Design- Admin Functionalities",
          "Design- Listing down the different entity classes"
        ],
        "CRUD Operation with Role Based Authentication & Authorization": [
          "Refactor Generic BE as per Service Marketplace",
          "Create Category entity and repository",
          "POST API endpoint for adding category by ADMIN",
          "GET API endpoint to get all categories",
          "UPDATE API endpoint to update a category by ADMIN",
          "POSTMAN Testing and Debugging of ADD, GET and UPDATE Category"
        ]
      },
      "requirements": [
        "Basic knowledge of Java",
        "Basic knowledge SpringBoot"
      ],
      "description": "This course has been updated in 2025 as per new Spring Security Features and JWT Specification to implement Role Based Authentication & Authorization of any SpringBoot based Application.\nDevelop CRUD API and secure it with JWT\nJWT(Json web token) is a standard for securing API's in a Microservices architecture, using this standard we can secure API's built in any technology like Nodejs, Python, .NET etc but in this course we will building API's using Java and SpringBoot and than we will be securing them using JWT and Spring security, we will also use all the industry best practices and standards along the way.\nWe will start with learning concepts like:\nWhat is Authentication\nWhat is Authorization\nImportance of securing RESTful API's\nWhat is JWT(Json Web Token)\nVarious components and terminology associated with JWT\nWorkflow and a diagramatic use case of using JWT\nThan we will move on to the actual handson and implementation of JWT in our Springboot project by following below steps:\nCreate springboot project from scratch\nAdding required maven dependencies\nSetup project in Github and follow continous integration process\nSetting up database and establishing connection\nCreate our Hibernate entity classes\nCreate our controller class\nCreate the first API\nStart configuring JWT and Spring security\nCreate security related classes like configuartion, filters, service\nMaking the secret and expiration time configurable\nConfiguring the allowed and not allowed endpoints\nCreating user registration and login endpoints\nCreating Role based classes\nCreate multiple roles\nRestrict users to functionalities based on Roles\nSetting up github to push code with token\nCreating a JWT token\nUsing the JWT token to call a secured API\nUsing Postman to test our API's\nMechanism to check if a particular JWT token is valid or not\nExtracting user information and role information from JWT token\nDevelop CRUD API and secure it with JWT\nComplete source code",
      "target_audience": [
        "Anyone who wants to learn about securing API's at an industry grade standard"
      ]
    },
    {
      "title": "CSS For Everyone: Learn CSS3 From Scratch",
      "url": "https://www.udemy.com/course/css-for-everyone-learn-css-from-scratch/",
      "bio": "Learn CSS to build responsive real world websites with CSS3 and become a modern web designer",
      "objectives": [
        "CSS, Css3 for everyone from scratch",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "We will learn to place pages in the easiest way by talking about all layout models in CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "Learning how to code HTML without also learning CSS is like learning how to read but not write.",
        "Consider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size.",
        "What is Cascading Style Sheets (CSS)? CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages.",
        "What careers use CSS? CSS applies to any career that involves web development.",
        "Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites.",
        "Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser."
      ],
      "course_content": {
        "Introduction to CSS For Everyone Learn CSS3 From Scratch": [
          "Let's Meet CSS",
          "FAQ about CSS For Everyone Learn CSS3 From Scratch",
          "CSS Basics",
          "CSS Colors",
          "CSS Background and Border",
          "CSS Selectors",
          "Css Quiz"
        ],
        "Intermediate CSS": [
          "CSS Text and Fonts",
          "Debugging in CSS",
          "CSS Box Model",
          "CSS Position",
          "CSS Float",
          "CSS3 Display Property",
          "CSS3 Box-Model Practice",
          "CSS Float-Layout Practice",
          "CSS Box-Sizing",
          "CSS Media Queries",
          "Css Quiz 2"
        ],
        "Flexbox and Grid for CSS": [
          "Flexbox Introduction",
          "CSS Flexbox Properties 1",
          "CSS Flexbox Properties 2",
          "CSS Flexbox Properties 3",
          "Grid CSS Intro",
          "Grid CSS",
          "Grid CSS - 2",
          "Grid CSS - 3",
          "Grid CSS - 4",
          "Grid CSS - 5",
          "Grid and Flexbox Project",
          "Grid and Flexbox Project - 2",
          "Grid and Flexbox Project - 3",
          "Grid and Flexbox Project - 4",
          "CSS Quiz 3"
        ],
        "Extra": [
          "CSS For Everyone: Learn CSS3 From Scratch"
        ]
      },
      "requirements": [
        "No prior CSS knowledge needed",
        "Desire to learn HTML and CSS",
        "Computer with access to the internet",
        "Desire to learn web development, web design",
        "Desire to learn CSS, or CSS3",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Css, css for everyone: learn css from scratch, css for everyone, web designer Html, css, html css, html css javascript, sass, html5, web design, html and css, Css, html css, css3\nHello there,\nWelcome to the CSS For Everyone: Learn CSS3 From Scratch course.\nLearn CSS to build responsive real-world websites with CSS3 and become a modern web designer\nThis course will be your gateway to learning web design with CSS3 with a step-by-step approach.  We can assure you that only this course will be enough for you to learn CSS from scratch to intermediate.\nLearning how to code HTML without also learning CSS is like learning how to read but not write. All of your hard web development work is lost if you don’t optimize it for different screen sizes. Udemy has top-rated courses to show you how CSS helps you do just that.\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work and is rightfully considered a cornerstone of internet technology.\nIn this course, we will learn CSS in all details.\nThis course will take you from a beginner to a more experienced level. You will learn CSS3 step by step with hands-on examples.\nIn this course you will learn;\n\n\nCourse Introduction\nCSS Basics\nCSS Colors\nBackground and Border\nSelectors\nText and Fonts\nDebugging in CSS\nBox Model\nCSS Position\nCSS Float\nDisplay Property\nBox -Model Practice\nFloat-Layout Practice\nBox-Sizing\nCSS3\nCSS Media Queries\nCSS Flexbox Properties\nCSS Grid\nGrid and Flexbox Project\n\n\nNo prior knowledge is needed!\nYou will learn CSS3 step by step with hands-on examples from scratch\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat skills should I have before learning CSS?\nBefore learning CSS, you should know the basics of using a computer and how to use a text editor because that is where you will be writing CSS. You should also be familiar with web browsers for browsing the web because it will inform your use of CSS. Since you may end up using specialized tools to write CSS, you should know how to install software on your computer and create and manage files and folders on your computer so you can create a CSS project. Once you have those skills down, the next thing to learn is HTML; after all, CSS is nothing without an HTML page to apply styles. That should be the basics you need to know to get started with CSS.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you with the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now CSS For Everyone: Learn CSS3 From Scratch course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to building your own website, you should enroll",
        "If you want to learn CSS 3 the first step in web development, completely and easily, you are at the right place.",
        "People who are willing to make a career in the Web Development",
        "People who want to learn CSS",
        "People who want to learn CSS3 for everyone",
        "People who want to start web development",
        "People who want to learn css3 before javascript"
      ]
    },
    {
      "title": "Create a classified website in 2 hours - Guaranteed",
      "url": "https://www.udemy.com/course/create-a-classified-website-in-2-hours-guaranteed-b/",
      "bio": "Create classified website without knowledge of HTML - CSS - PHP - JAVA Script in just 2 hours GUARANTEED",
      "objectives": [
        "Student will be able to create classified website in just 2 hours without coding experience required, and start building your own platform right away.",
        "Offer your services on freelance websites like Fiverr and Upwork, creating classified websites for clients and earning money.",
        "Learn to monetize your classified website effectively with methods like featured ads, paid placements, and affiliate marketing.",
        "Gain the skills to manage and scale your own classified ads website, adding advanced features and growing a successful platform."
      ],
      "course_content": {
        "Setting Up Your Classified Website": [
          "Introduction of Course",
          "What you will learn in this course",
          "Downloading Open Source Classified Script",
          "Domain name and hosting server registration step by step",
          "Upload php script to the server",
          "Creating database and Installation"
        ],
        "Managing & Customizing Your Classified Platform": [
          "Exploring the Admin Panel – Overview",
          "Adding - removing categories and subcategories",
          "Reviewing & Approving Classified Listings",
          "Theme Plugin Language and Location",
          "Header logo",
          "Adding removing locations - regions - cities",
          "Adding Currencies",
          "Media settings",
          "User Settings",
          "Statistics"
        ],
        "Monetization of Classified Website": [
          "Step by Step Monetization of Classified Website"
        ]
      },
      "requirements": [
        "Internet",
        "PC or Laptop",
        "Chrome browser or any other",
        "Domain name",
        "Hosting server",
        "And just follow this course. That's it"
      ],
      "description": "Updated February 20, 2025: Fresh content added\n\n\nWho Is This Course For?\nIf you have ever wanted to create a classified website where people can post their ads to sell and buy things, like Craigslist, OLX, Gumtree or Kijiji , this course is designed for you! Whether you are an entrepreneur, a small business owner, or someone simply interested in online marketplaces, you can now create classifieds website with ease. No coding required.\nIn “Create a Classified Website in 2 Hours – Guaranteed,” you’ll discover how to build a fully functional classified ads website from scratch. You don't need any prior programming knowledge. Just follow along with our step-by-step video instructions, and in just two hours, you will have your own classified website where people can post and browse ads.\nBy the end of this course, you'll have the skills to create a classified website like:\nCraigslist\nGumtree\nOLX\nKijiji\nQuikr\nExpatriates\nClassifiedAds\nThis course guides you through creating a classifieds site without touching a single line of code. It's a hands-on project that teaches everything you need to get started in the world of online classifieds.\n\n\n\n\nWhy Take This Course?\nNo Coding Experience Needed:\nYou don’t need knowledge of HTML, CSS, PHP, or JavaScript. This course is designed for absolute beginners who want to create a professional classified website without coding.\n\nLearn by Doing:\nThis course follows a learn-by-project approach. You’ll be building your own classified website inspired by popular platforms like Craigslist, OLX, Gumtree and Kijiji, ensuring you gain practical skills and experience.\n\nMonetization Techniques:\nWe’ll show you not only how to build the classified website but also how to monetize it effectively. Learn how to add premium features, banner ads, and much more.\n\nQuick Results:\nIn just two hours, you will have a fully functional classified website, ready for you to launch and start making money.\n\nAffordable & Comprehensive:\nGet 20 video lessons covering everything from downloading essential files and setting up the database to advanced features like custom categories and currency settings.\n\n\nHow Will You Monetize Your Classified Website?\nOnce your classifieds website is up and running, it's time to turn it into a money-making platform. Here are some common ways to earn revenue from your website:\nFeatured Ads:\nAllow users to pay for featured placements to make their ads stand out, driving more visibility and engagement.\nMove Ads to the Top (Special Placement):\nOffer users the option to pay for their ads to appear at the top of listings, increasing exposure and generating revenue.\nAdvertising Banners:\nDisplay banner ads from third-party advertisers targeting specific audiences. This is an effective way to monetize your site while keeping it relevant.\nPay to Post:\nYou can charge users for posting in specific categories or for premium ad placements—ideal for niche markets with high demand.\nAffiliate Links:\nPromote products through affiliate links on your classified platform and earn commissions when users make a purchase.\nPremium Memberships:\nOffer paid memberships for users who want additional features, such as ad boosting or extra posting credits.\n\n\n\n\nWhy Learn to Create a Classified Website?\nThe demand for online classified platforms is growing rapidly. Whether you're looking to build a large-scale site like Craigslist or OLX or you want to create a niche platform focused on specific products or services, this course will give you the foundational knowledge to create your own successful classified website.\n\n\nCourse Benefits:\nGuaranteed Results:\nYou’ll have your own live classified site up and running in just two hours—guaranteed.\nNo Experience Necessary:\nLearn to create a website without prior programming knowledge. This course is beginner-friendly.\nPractical Application:\nBy following along with the project, you’ll gain real-world experience you can apply to your own classified platform.",
      "target_audience": [
        "Anyone looking to create a classified website without any coding knowledge or technical experience.",
        "Aspiring entrepreneurs who want to build a classified website and monetize it through ads and paid features.",
        "Freelancers and aspiring web developers interested in creating classified websites for clients and earning income through platforms like Fiverr and Upwork.",
        "Beginners with no prior knowledge of HTML, JavaScript, PHP, or CSS who want to quickly build a professional classified website."
      ]
    },
    {
      "title": "Coding Made Easy: HTML & CSS For Beginners",
      "url": "https://www.udemy.com/course/coding-made-easy-html-css-for-beginners/",
      "bio": "Learn the basics of HTML & CSS, the essential foundation for anyone interested in web development!",
      "objectives": [
        "Understand basic web page structures",
        "Write and understand basic HTML",
        "Style HTML pages using CSS",
        "Understand how to import files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Video"
        ],
        "HTML": [
          "Introduction to HTML",
          "Student Exercise - Introduction to HTML",
          "What makes up HTML?",
          "Student Exercise - What makes up HTML?"
        ],
        "CSS": [
          "Make it look good!",
          "Student Exercise - Make it look good!",
          "Classes and IDs",
          "Student Exercise - Classes and IDs",
          "Fonts",
          "Student Exercise - Fonts"
        ],
        "HTML Tags & Placing": [
          "More HTML Tags",
          "How do I put it THERE?",
          "Student Exercises - HTML Tags & Placing"
        ],
        "Introduction to Bootstrap": [
          "Bootstrap",
          "Student Exercise - Bootstrap"
        ]
      },
      "requirements": [
        "Students should have basic computer literacy",
        "Students do not need to prepare anything ahead of taking this course",
        "Students do not need to download any software"
      ],
      "description": "Welcome to the simplest introductory guide to learning HTML & CSS!\n\nThis course will cover HTML (Hyper Text Markup Language) and CSS (Cascading Style Sheets).\nHTML is a tool to provide content and metadata to a web browser. CSS is used to style this content for presentation. These are the technologies that practically every website on the internet uses.\nAbout the teacher.\nColin Fruit is a web developer based in San Francisco, California. His Dad first introduced him to coding at the age of 10, when he was shown how to use Python.\nSince that day, Colin has amassed many teaching hours, launched his own projects and continues to build easy to understand modules around a variety of programming languages.\n\nSimple lectures, straight forward exercises.\n\nThe course will be taught in a series of eight video lectures, combined with exercises to solidify content learned. Videos are typically about twelve minutes in length, and the following exercises can take between thirty minutes to one hour to complete.\nUnderstand how to read and write basic HTML & CSS.\nAfter this course, you the student will be justifiably confident in your ability to read and write basic HTML and CSS.\nIn today's technical age, a knowledge of websites will give you a tremendous advantage in the job marketplace as well as with your own business aspirations.\nLearn how websites function, position yourself for a new career in web development or understand how to utilise these skills to start your own projects!\n\nFollowing this course, you will be able to understand exactly what is going on with most of the websites that you visit on a day to day basis. It will be a great start for anyone considering embarking on a career in web development or even someone wanting to build their own online presence.\nSo, whether an aspiring developer, professional, or just a curious human, this course will be a benefit to you if you're interested in the internet and creating your own webpages.",
      "target_audience": [
        "This course is strictly for beginners with no knowledge (or very limited) of HTML & CSS"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/learn-web-development-by-building-a-blog/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "MERN React Node MongoDB CRUD with Smart Login for Beginners",
      "url": "https://www.udemy.com/course/mern-react-node-crud/",
      "bio": "Build your own Node API with MongoDB to communicate with your React App for performing CRUD operations with Login System",
      "objectives": [
        "Building React Frontend",
        "Building Node Express and MongoDB API",
        "Smart login system",
        "Implement CRUD (create read update delete)",
        "Using Mongo Atlas (Database in the cloud)",
        "React hooks",
        "Better application architecture",
        "Learn MERN Stack Full Stack Web App Development",
        "Deployment to Heroku"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of React and Node is preferred",
        "Basic understanding of JavaScript"
      ],
      "description": "Do you want to learn how to build a complete MERN (Mongo Express React Node) Stack project with CRUD (Create, Read, Update, Delete) features and Login System?\nIf so, I am here to help you out. This course is clear and easy to read and follow along. We will build a React Node CRUD application from scratch and go all the way to publishing it to heroku cloud servers.\nBy the end of this course, you will get comfortable enough for writing your own API with Node Express and MongoDB. You will also deploy your project to heroku so that you can share it with the entire world.\nYou will learn to write modular code that is easy to understand with separate backend and frontend. You will love every minute of it. With this course, learning is rewarding and fun at the same time.\n\n\nSmart Login System\nI will show you one more interesting concept in this course, and that is implementing your own very simple login system. We will not build full authentication (login/register) system but instead implement a smart way of securing your routes for example lets say create, update and delete routes only admin user.\n\n\nMERN React Node CRUD with SMART login system\nCRUD is the basis of all enterprise applications. Once you know how to do CRUD operations you build any type of web apps because the core fundamental of web apps in general is to create something, read that data, be able to update that data and delete that data.\nAlmost all the applications in the world are build around this concept of CRUD. That is what you will learn in this course with React Node Express and MongoDB from scratch to live servers in heroku cloud platform.\nYou will learn all the fundamental skills of building MERN Stack/FullStack app, implement smart login system, be able to create read update delete with your own API using React App.\nThere are a lot of extra topics coved in this course that will be super useful while building any type of web app such as usage of axios to make HTTP requests, using rich text editor to create beautiful posts, protect pages from unauthorized access and a very detailed explanation along the way.\n\n\nJoin me in this fun, exciting and rewarding journey of building a complete CRUD app with MERN Stack from Scratch to Heroku cloud servers.",
      "target_audience": [
        "Anyone looking to build FullStack/MERN Stack web app",
        "Anyone looking to learn Node Js API Development",
        "Anyone looking to build web app with React",
        "Frontend developer looking to build his/her own API",
        "Build CRUD (create read update delete) app",
        "Interested to learn how to implement JWT (json web token) based authentication system",
        "Learn to work with MongoDB",
        "Learn to deploy your React and Node JS apps to Heroku cloud"
      ]
    },
    {
      "title": "MERN Auth: Full-Stack MERN App Mastery",
      "url": "https://www.udemy.com/course/mern-auth-full-stack/",
      "bio": "Mastering MERN Authentication: Building Dynamic Web Apps with Google Login, Redux Toolkit, and Firebase Image Uploads",
      "objectives": [
        "Mastering MERN Stack Development",
        "Advanced State Management with Redux Toolkit",
        "Implementing Modern Authentication Methods",
        "Creating Feature-Rich User Experiences",
        "Real-World Integration of Third-Party Services",
        "Project Deployment and Performance Optimization"
      ],
      "course_content": {
        "Intro and Installation": [
          "Intro",
          "Project preview",
          "Install React js and tailwind CSS and create the first template"
        ],
        "Pages and routes and header component": [
          "Add routes and create pages",
          "Create header component"
        ],
        "Create the server and connect to the database": [
          "Create and run the sever",
          "Connect to the database",
          "Create user model",
          "Create a test API route"
        ],
        "Signing up users": [
          "Create sign up API route",
          "Add a middleware and a function to handle errors",
          "Complete sign up page UI",
          "Complete sign up page functionality"
        ],
        "Signing in users": [
          "Create sign in API route",
          "Complete the sign in page functionality"
        ],
        "Redux toolkit": [
          "Add redux toolkit",
          "Add redux persist"
        ],
        "Google OAuth and update header": [
          "Create and add OAuth component",
          "Update header component and make the profile page private"
        ],
        "Profile page": [
          "Complete profile page UI",
          "Complete image upload functionality",
          "Create update user API route",
          "Complete update user functionality",
          "Add delete user functionality",
          "Add sign out user functionality"
        ],
        "Complete pages and deployment": [
          "Complete home and about pages",
          "Deploy to Render"
        ]
      },
      "requirements": [
        "Basic Web Development Knowledge: Familiarity with HTML, CSS, and JavaScript is essential.",
        "Basic React Understanding: While we'll cover React concepts in the course, having a foundational understanding of React will help you grasp the content more quickly."
      ],
      "description": "Build Feature-Rich MERN Authentication Apps | Complete Course\n\n\nCourse Overview: Join our comprehensive MERN authentication app course to elevate your web development skills. This course delves deep into creating dynamic web applications that stand out in the modern digital landscape. Whether you're a beginner or an experienced developer, this course empowers you with hands-on experience and advanced features.\n\n\nCourse Highlights:\nMastering MERN Stack Fundamentals: Dive into MongoDB, Express.js, React, and Node.js to build a strong foundation for your applications.\nAdvanced State Management with Redux Toolkit: Learn to efficiently manage complex app states using Redux Toolkit.\nSeamless Google Authentication Integration: Implement one-click Google logins for a smooth and user-friendly authentication process.\nExploring Firebase Storage for Image Uploads: Discover how to enable secure image uploads with Firebase Storage.\nPersonalized User Profile Management: Develop user-friendly profile management systems with easy editing capabilities.\nCrafting Private Profile Pages with React Router DOM: Keep user data secure by creating private profile pages.\nNavigating with React Router DOM: Master smooth and intuitive navigation using React Router DOM.\nImplementing Secure Account Deletion: Understand how to provide users with a secure account deletion process while respecting their privacy.\nWho's It For: This course caters to a diverse audience, including beginners eager to delve into web development, seasoned developers looking to expand their skillset, and those keen on creating immersive and dynamic web applications.\nWhy Enroll: Our comprehensive course ensures you gain practical experience, backed by real-world examples, expert guidance, and insightful projects. By course completion, you'll have the confidence to craft MERN authentication apps enriched with advanced features that elevate user experiences.\nPrerequisites: While prior knowledge of HTML, CSS, and JavaScript is beneficial, this course is structured to accommodate learners of various backgrounds. Familiarity with React is advantageous but not mandatory.\nCourse Format:\nHours of in-depth instructional video content\nStep-by-step guidance for every concept\nReal-world project and examples to reinforce learning",
      "target_audience": [
        "Beginner Developers: If you're new to web development, this course is a fantastic starting point. We'll guide you through each step, from setting up your development environment to building advanced features. By the end, you'll have a solid foundation in modern web development.",
        "Frontend Developers: If you're comfortable with HTML, CSS, and JavaScript and want to expand your skills, this course will help you master frontend technologies like React and Redux Toolkit. You'll also learn about integrating third-party services and enhancing user experiences.",
        "Backend Developers: Backend developers looking to dive into full-stack development will benefit from learning about frontend technologies and how they integrate with backend services. You'll gain insights into building seamless user experiences from end to end.",
        "React Beginners: If you're a React newbie, this course will introduce you to the world of React while building a real-world project. By the end, you'll feel confident in creating dynamic UIs and managing state effectively.",
        "Experienced Developers: Even if you're experienced in web development, our course offers advanced features like Firebase integration, Google Authentication, and Redux Toolkit. These skills will enrich your toolkit and help you create more impressive and interactive applications."
      ]
    },
    {
      "title": "Top Programming Bundle: Learn Rails And Ruby Programming",
      "url": "https://www.udemy.com/course/ruby-code-and-ruby-on-rails-bundle/",
      "bio": "Learn Ruby Programming and the Rails Web Development Platform Fast! Become a Coder, Web Developer, or Software Engineer",
      "objectives": [
        "Build Your Own Stock Market Website",
        "Use Databases with Ruby on Rails",
        "Deploy a Rails App To a Web Host",
        "Learn The Bootstrap CSS Framework",
        "Ruby From Beginner To Advanced",
        "Object Oriented Programming",
        "Set Up A Cloud Dev Environment",
        "Variables, Strings, and Data Types",
        "Getting User Input and Output",
        "Conditional If/Else & Comparisons",
        "Arrays, Loops, And Hashes",
        "Methods, Classes and More!"
      ],
      "course_content": {
        "Ruby Programming Basics": [
          "Introduction",
          "First Things First: How To Get Support Fast!",
          "Install Sublime Text and Git Bash",
          "Install Ruby",
          "Hello World! First Ruby Program",
          "Printing To The Screen With Puts and Print",
          "String Manipulation",
          "Variables",
          "Getting User Input With Gets",
          "Git Bash Weirdness...",
          "Simple Math",
          "Converting To An Integer",
          "Comparison Operators",
          "Assignment Operators",
          "If/Else Conditional Statements"
        ],
        "Intermediate Ruby Programming": [
          "Arrays",
          "While Loops",
          "Each Loops",
          "Hashes",
          "Building FizzBuzz!",
          "Methods Part 1",
          "Methods Part 2"
        ],
        "Advanced Ruby Programming": [
          "Intro To Ruby Classes",
          "Ruby Classes Part 1",
          "Class Getters",
          "Class Setters",
          "Adding Perimeter and Area Methods",
          "Class Attr Accessor",
          "Creating a Draw Method",
          "Ruby Course Conclusion"
        ],
        "Installing Ruby On Rails": [
          "Intoduction",
          "Rails Overview",
          "Install Node.js",
          "Install Sublime and Git Bash Terminal",
          "Create SSH Key",
          "Install The Heroku Toolbelt",
          "Install Ruby on Rails",
          "Update!",
          "Create Test Project and Handle Errors"
        ],
        "Creating The Basic Rails App": [
          "Ruby On Rails Overview",
          "Rails Server",
          "Create First Webpage With Generator",
          "Root Route",
          "Version Control With Git",
          "Github",
          "Create About Page Manually",
          "Application.html.erb page",
          "Create Embedded Ruby Links",
          "Partials"
        ],
        "Styling The App With Bootstrap CSS": [
          "Bootstrap Overview",
          "Installing Bootstrap",
          "Bootstrap Navbar",
          "Mobile Ready Design"
        ],
        "Stock Quote API": [
          "Stock Quote Gem Intro",
          "Stock Quote Update - API KEY",
          "Stock Quote Gem Walkthru",
          "Stock Forms",
          "Stock Form Controller",
          "\"Nothing\" Error Handling",
          "\"Junk\" Error Handling"
        ],
        "Creating a User Management System": [
          "Install Devise User Management System",
          "Devise Database",
          "Flash Messages",
          "Devise Links",
          "Bootstrap Forms",
          "Conditional Navbar Links"
        ],
        "Creating A Stock Database Table": [
          "Stocks Database Table",
          "Stocks Views",
          "Fix Formatting and Rails Association",
          "Stocks Navbar and CRUD",
          "Authenticate Users",
          "Correct User Controller",
          "Correct User New Form",
          "Final Association Stock Index Page Loop",
          "Connecting to Stock Quote Gem Overview",
          "Connect Stocks Table To Quote Gem",
          "Precision and Delimiter Price fix",
          "Stock Index Error Handling",
          "Form Validation",
          "Bootstrap Table Stock Index Page",
          "More Error Handling",
          "Stocks Show Page"
        ],
        "Using Professional Webhosting For Our App - For Free!": [
          "Heroku Intro",
          "Heroku Push",
          "Heroku Run Rails DB:Migrate",
          "Heroku Domain Names",
          "Conclusion - Bonus"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "This is a bundle of two of my most popular courses, \"Ruby On Rails: Stock Market App\" and \"Ruby Programming For Everyone\".\nThe question I get asked most often is this...\"Do I need to learn Ruby in order to use Ruby on Rails?\"\nThe answer is...No!  But you SHOULD learn Ruby if you really want to become a Rails master.  This course is perfect because you'll learn both the Ruby programming language from beginner to advanced AND Ruby on Rails.\nWe'll start out learning Ruby and we'll start by setting up a free cloud development environment that has all the tools you need to start writing and running Ruby code.\nThen, we'll dive into very basic computer science concepts. Things like:\nPrinting to the Screen\nString Manipulation\nVariables\nGetting User Input\nSimple Math\nComparison Operators\nAssignment Operators\nAfter that, we'll move into more intermediate topics like:\nConditional If/Else Statements\nArrays\nWhile Loops\nEach Loops\nHashes\nFizzbuzz\nFinally we'll finish up with more advanced topics like:\nMethods\nClasses\nAfter that we'll move into Ruby on Rails and build a cool stock market app!\nOur Stock Market app will let you look up stock quotes and financial information and save it to a database.\nUsers can create an account and sign up to your website, log in, add stocks, check stock prices and all kinds of other cool financial information.\nWe'll style the website using the popular Bootstrap CSS framework (I'll show you how to use it!)\nWe'll end by pushing our app to a professional web host (Heroku) which I'll show you how to use for free! We'll even talk about getting a domain name and all that fun stuff.\nIf you've ever wanted to learn Ruby on Rails and were put off about learning Ruby, then this is the course for you.\nI'll see you on the inside!",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the Ruby programming Language And Ruby on Rails Framework"
      ]
    },
    {
      "title": "FullStack Vaadin (14-24+) - Practical Solutions",
      "url": "https://www.udemy.com/course/fullstack-vaadin-14-23-practical-solutions/",
      "bio": "Vaadin 14-24+ (with Spring Boot) - working with MongoDB, PDF, MS Excel, Vaadin Push, GridFS",
      "objectives": [
        "Create, step-by-step, a basic single-page Vaadin application",
        "Using Vaadin @Push for websocket communication",
        "Create MS Excel files from dynamic data, use advanced formatting, embed images, etc.",
        "Create PDF files on-fly with nice formatting, images, barcodes",
        "Using MongoDB as a persistent data store(database backend)",
        "Manage file upload and download using MongoDB GridFS as data storage from your Vaadin applications",
        "Create web applications without writing JavaScript or HTML directly"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Basic ToDo application step-by-step guide": [
          "Application overview - basic setup and dependencies",
          "Single page app - overview",
          "Single page app - layouts",
          "Implementing simple in-memory data storage",
          "Single page app - items view",
          "What we are not doing - overview",
          "Dynamic params from URL",
          "Adding items",
          "Removing items",
          "What we are not doing - overview",
          "Dynamic page title",
          "Selecting / deselecting all items",
          "Single Page application created"
        ],
        "Server side @Push - real time communication": [
          "What is @Push about? Use cases.",
          "Vaadin @Push broadcaster implementation",
          "Using @Push broadcaster in our application - part 1",
          "Using @Push broadcaster in our application - part 2",
          "@Push - implementation summary"
        ],
        "Working with MS Excel exports": [
          "MS Excel usage overview",
          "Dependencies needed",
          "Adding a export button to the screen",
          "Building a backend code for creating MS Excel file part 1",
          "Connect the backed Excel export implementation with our button",
          "Applying a simple styling for our Excel file",
          "Implementing MS Excel export of selected items",
          "What we are not doing - overview"
        ],
        "Adding PDF reporting": [
          "PDF usage overview",
          "Building backend for creating PDF file part1",
          "Building backend for creating PDF file part2",
          "Adding HTML template (blueprint) for PDF",
          "Implementing button for download PDF",
          "Implementing button for download PDF part 2",
          "What we are not doing - overview",
          "Various PDF formatting",
          "Adding images to PDF",
          "Adding a barcode to PDF",
          "PDF reporting from Vaadin application overview"
        ],
        "Quiz": [
          "Quick Vaadin knowledge review #2"
        ],
        "Storing data into MongoDB": [
          "Why MongoDB?",
          "In-memory storage to MongoDB migration",
          "Implementing basic application features - adding / removing items with MongoDB",
          "MongoDB implementation summary"
        ],
        "GridFS - file upload from Vaadin into MongoDB and vice-versa": [
          "What is GridFS and why to use it?",
          "Storing file uploads into GridFS - backend",
          "Storing file uploads into GridFS - frontend with Vaadin",
          "What we are not doing - overview",
          "Downloading files stored in GridFS - backend",
          "Downloading files stored in GridFS - frontend",
          "Deleting files from GridFS - backend",
          "Deleting files from GridFS - frontend",
          "Using store files metadata + project source link"
        ]
      },
      "requirements": [
        "Java 8+, basic knowledge of web development",
        "Basic or none VAADIN framework experience",
        "Basic Spring / SpringBoot knowledge"
      ],
      "description": "Welcome to the ‘FullStack Vaadin (23+) - Practical Solutions’ course. With this course, you are going to add value to your existing JAVA and Vaadin 23+ (with SpringBoot) knowledge by getting familiar with several techniques for solving specifically selected areas of JAVA application development. Each topic involves a project configuration section but mostly covers practical solutions being split into several steps.\n\n\nWe will focus on several topics often useful in corporate JAVA development but not exclusively. SpringBoot is being used here as an underlying framework, but solutions presented here are not specific to this platform and can be reused e.g. with recent Quarkus support, etc. Java 11 is used in this course (required by Vaadin 23+), but the solutions provided here are Java 8 compatible and reusable with legacy applications.\n\n\nThe primary idea of this course is to help existing Vaadin developers to adopt certain knowledge in an easy way. The solutions presented are being used for several years in production-grade Vaadin applications and the libraries used are well-known for stability and active development. This will protect the value invested into adopting some libraries or projects.\n\n\nWhat you'll learn\nCreate interactive application using modern LiveView like programming approach\nUse of Java for creating a full stack application (frontend / backend)\nUse of Push techniques for updating users from backend\nCreate collaboration types of applications using popular LiveView approach\nIncrease your programming speed 5x using Vaadin for building complex UIs\nCreate highly maintainable and easy to read application code\nAdd value to your existing SpringBoot development knowledge\n\n\nTopics covered by this course:\nDuring a course, we create a basic Vaadin single-page application and each lecture will add a new enhancement to it. Eventually, we create a single application with many different features.\ncreate a full featured single page application using VAADIN\ncollaboration using server Push technology\nexport application data in MS Excel format with formatting and some other features\nexport application data in PDF format with formatting, embedded images or bar-codes\nincluding MongoDB as persistent data storage\nusing GridFS as an attachment/file uploads data storage\nAn important part of this course is to realize 'what we don't need to do' when using Vaadin. Simplification can be a huge and old saying that 'the best code is the code you don't have to write' is proven here.\n\n\nGitHub repository:\nThe source code is available through the link attached to the last lecture in this course. You can clone the repo and use the code snippets we are building in this course.\n\n\nWho is this course for:\n‘FullStack Vaadin - Practical Solutions’ course is targeted at individuals or small/medium teams of professional Java developers that want to be productive and competitive in this large market. Techniques presented here can be reused easily in application development of many kinds.\n\n\nNote: The course video quality was increased recently. Now we are running video footage in 1080p depending on your bandwidth available.",
      "target_audience": [
        "‘Fullstack Vaadin’ course is targeted for individuals or small/medium teams of professional Java developers that want to be productive and competitive in this large market. You will see that Vaadin can help you to create applications that you can maintain easily for decades."
      ]
    },
    {
      "title": "Build REST APIs with Python, Django REST Framework: Web API",
      "url": "https://www.udemy.com/course/build-rest-apis-with-python-django-rest-framework-web-api/",
      "bio": "Mastering API Development with Python, Django REST Framework, PostgreSQL, and Postman - Build GET, POST, PUT, and DELETE",
      "objectives": [
        "How to build a REST API web service with the Django REST framework",
        "Set up a development environment with Python, Django, PostgreSQL, and Postman",
        "Understand the fundamentals of RESTful architecture and API design principles",
        "Model resources and perform serialization using Django models and serializers",
        "Implement CRUD operations (Create, Read, Update, Delete) on API resources using Django REST Framework",
        "Handle relationships between models and serialization for complex API structures",
        "Explore advanced API features such as CORS for improved functionality and scalability",
        "Writing API Endpoints like GET, POST, PUT, and DELETE methods",
        "Optimize database queries using PostgreSQL for enhanced performance",
        "Use Postman for comprehensive API testing, including request sending, response inspection, and API Calling",
        "REST API testing workflows in Postman for efficient and reliable testing",
        "Handle common error scenarios and debug your APIs effectively",
        "Sending Images or Docs to upload using Django REST APIs",
        "learn what is Generative AI for future learning",
        "Participate in Practice test to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting started on Windows, macOS, and Linux",
          "How to ask great questions",
          "FAQs",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Setting up a Python development": [
          "Installing Python step by step",
          "Installing PyCharm IDE (code editor) for development",
          "Creating the first project",
          "Write and Run Hello World program",
          "Command line basics",
          "Installing and accessing pip command",
          "Postman API platform installation",
          "Build REST APIs - Complete Project Source Code"
        ],
        "Django setting up the REST API project": [
          "Introduction to web framework and Django",
          "Installing Django and Djangorestframework",
          "Django(CORS) installation",
          "Creating Django project",
          "Understanding Django architecture and structured",
          "Creating a Django application",
          "Understanding Django models, views, and URL routings",
          "Registering the app to project"
        ],
        "Building Django Models for API with PostgreSQL": [
          "Introduction to PostgreSQL and its advantages for web applications",
          "Installing PostgreSQL and setting up",
          "pgAdmin Secure login and create database",
          "Building Django models for the REST API data structures"
        ],
        "Django API Model ORM-Migrations to PostgreSQL": [
          "Installing the psycopg2 module for DB connection",
          "Database (DB) connection - Django to PostgreSQL",
          "Creating and applying ORM-migrations for the PostgreSQL database",
          "SQL Querying and adding Sample Data into tables"
        ],
        "Creating Serializers for Complex Datatypes": [
          "Serializers in Django REST API",
          "Serializing data with Django REST Framework serializers"
        ],
        "Writing REST API Endpoints": [
          "Import required modules to write API methods",
          "Implementing API GET method using REST Framework",
          "Implementing API POST method using REST Framework",
          "Implementing API PUT method using REST Framework",
          "Implementing API DELETE method using REST Framework",
          "Validating data with Django REST Framework validators",
          "Handling API requests and responses"
        ],
        "URLs Mapping on Application and Project": [
          "Writing App URLs and path setting",
          "Write Project URLs and include app",
          "Exercise and Solution for it",
          "Practice Test on Django URLs file"
        ],
        "POSTMAN for Testing API Methods": [
          "Exploring Postman API app",
          "API GET method testing",
          "API POST method testing",
          "API PUT method testing",
          "API DELETE method testing"
        ],
        "Project: Creating REST APIs Quickly": [
          "Creating REST API methods at one snap",
          "Writing URLs on an app for access APIs",
          "POSTMAN API testing"
        ]
      },
      "requirements": [
        "Fundamentals of Programming (optional)",
        "You will learn everything you need to know REST API",
        "Fundamentals of Basic SQL Queries (optional)"
      ],
      "description": "The \"Build REST APIs with Python, Django REST Framework, PostgreSQL, and Postman API Testing\" course is a comprehensive and practical learning experience that will equip you with the skills and tools needed to create robust and scalable RESTful APIs using Python, Django REST Framework, PostgreSQL, and Postman for API testing.\nlearn what is Generative AI for future learning\n\n\nParticipate in Practice test to test your learning skills\n\n\nIn today's interconnected world, REST APIs play a crucial role in enabling communication between different applications and services. This course is designed to provide you with a solid foundation in building REST APIs using Python, leveraging the power of Django REST Framework, and utilizing PostgreSQL as the database backend. Additionally, you will learn how to test your APIs effectively using Postman.\n\n\nThroughout the course, you will start with the fundamentals and gradually progress to more advanced topics. You will learn how to set up a development environment with Python, Django, and PostgreSQL, and configure Django REST Framework for backend API development. The course will cover key concepts such as resource modeling, serialization, JSON Parsing, and JSON Response on HTTP Requests while emphasizing the importance of data integrity and security.\n\n\nBy combining Python, Django REST Framework, and PostgreSQL, you will gain hands-on experience in implementing CRUD operations (Create, Read, Update, Delete) on your API resources, managing relationships between models, and optimizing database queries for improved performance. You will also learn to create GET, POST, PUT, and DELETE methods for your serializer model classes to enhance the functionality and scalability of your APIs.\n\n\nFurthermore, the course will introduce you to Postman, a popular API testing tool. You will learn how to create comprehensive test suites to verify the functionality and behavior of your APIs. From sending requests and inspecting responses on workflows, you will become proficient in using Postman to ensure the quality and reliability of your APIs.\n\n\nReal-world examples and practical exercises will be integrated into the course, allowing you to apply your newfound knowledge in a hands-on manner. You will develop API endpoints, write APIs and tests, and handle error scenarios.\n\n\nKey Topics Covered:\n- Setting up a development environment with Python, Django, PostgreSQL, and Postman\n- Introduction to RESTful architecture and API design principles\n- Resource modeling and serialization using Django models and serializers\n- Applying Cross-Origin-Resource-Sharing (CORS)\n- Implementing CRUD operations on API resources with Django REST Framework\n- Managing relationships between models and serialization\n- Advanced API features: making a unique record to update\n- Optimizing database queries with PostgreSQL\n- Introduction to Postman and API testing fundamentals\n- Creating comprehensive test suites in Postman\n- Handling common error scenarios and debugging\n- Writing a Base path setting to save External images or docs on API requests\n- Postman API to save external Images to local project\n\n\nBy the end of this course, you will have the skills and confidence to develop robust REST APIs using Python, Django REST Framework, PostgreSQL, and effectively test them using Postman. Whether you're a beginner seeking to enter the world of API development or an experienced developer looking to enhance your skills, this course will provide you with the knowledge and hands-on practice necessary to build high-quality and thoroughly tested backend web APIs.",
      "target_audience": [
        "Beginners software developers curious about Django REST API application development",
        "Web developers who want to learn how to build REST API for mobile applications using Django REST and PostgreSQL",
        "Python developers who want to expand their skill set toward REST WEB API development",
        "Students or professionals looking to enhance their Restful API web development skills with Django REST framework and PostgreSQL",
        "Who wants to learn to develop Web Services using Python Rest API",
        "Who wants to build HTTP REST API backend services"
      ]
    },
    {
      "title": "The Ultimate CSS - Best Practise on Animations & Effects",
      "url": "https://www.udemy.com/course/the-ultimate-css-best-practise-on-animations-effects/",
      "bio": "Brush up your CSS skills and dive in even deeper. EVERY web developer has to know CSS.",
      "objectives": [
        "Source Code For Download is Attached",
        "Best way to learn CSS with really real world examples",
        "How CSS works behind the scenes: the cascade, specificity, inheritance, etc.",
        "Latest And Real time Examples with 7X Fast to Write",
        "Tons of modern CSS techniques to create stunning designs and effects",
        "Using EMMET Short Methods to Write Coding to deliver Fast"
      ],
      "course_content": {
        "Introduction": [
          "Intro About the Topics Part-1",
          "Intro About the Topics Part-2",
          "Intro About the Topics Part-3",
          "About Myself !"
        ],
        "Glow Checkbox Creation Using HTML & CSS": [
          "Creating HTML Document For the CheckBox GLOW",
          "Adding CSS For Designing Checkbox Selection",
          "Download the Source Code"
        ],
        "Creating Activate or De-activated Selection": [
          "Creating HTML Document For Red and Green Activate Selection",
          "Adding CSS For the Layout",
          "Download the Source Code"
        ],
        "List Items Selections Using CheckBox": [
          "Intro to List Food Item Selection",
          "Creating the HTML Document For List Food Items",
          "Creating the CSS Design For List Food Items",
          "Download the Source Code"
        ],
        "Wave Banner Using CSS": [
          "Intro to Wave Banner",
          "Creating the HTML Document For Wave Banner",
          "Creating the CSS Design For Wave Banner",
          "Download the Source Code"
        ],
        "Waves Using CSS": [
          "Intro to Waves",
          "Creating the HTML Document For Waves",
          "Creating the CSS Design For Waves",
          "Download the Source Code"
        ],
        "CLIP-PATHS Using CSS": [
          "Intro to CLIP-PATHS",
          "Creating the HTML Document For Clip-paths",
          "Creating the CSS Design For Clip-path",
          "Download the Source Code"
        ],
        "BONUS CONTENT": [
          "HTML & HTML 5 [ E-BOOK ]"
        ]
      },
      "requirements": [
        "You should have some familiarity with HTML5 , And CSS",
        "All you need is a computer (Windows, macOS, or Linux) with an internet connection (Windows, macOS, or Linux)"
      ],
      "description": "CSS - short for Cascading Style Sheets - is a \"programming language\" you use to turn your raw HTML pages into real beautiful websites.\nThis course covers it all - we start at the very basics (What is CSS? How does it work? How do you use it)? and gradually dive in deeper and deeper. And we do this by showing both practical examples as well as the theory behind it.\nWho this course is for ?\nYou want to delight and amaze your visitors, and make your websites stand out from the rest. You want to use animation not just to wow, but also to help make your sites more useful, polished and professional. You're already creating websites but you want to take your knowledge to the next level. This is the course for you. This course will give you the practical tools you need to bring animation to your projects.\nThis is a video course full of real downloadable code examples. You'll be able to take the knowledge, as well as the real working code, to your projects and make sure they stand out.\nUsed Properties in CSS :\nFilters: The filter CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\nKeyframes : The @keyframes CSS at-rule controls the intermediate steps in a CSS animation sequence by defining styles for keyframes (or waypoints) along the animation sequence. This gives more control over the intermediate steps of the animation sequence than transition\nTo use keyframes, create a @keyframes rule with a name that is then used by the animation-name property to match an animation to its keyframe declaration. Each @keyframes rule contains a style list of keyframe selectors, which specify percentages along the animation when the keyframe occurs, and a block containing the styles for that keyframe.\nTransition: CSS transitions provide a way to control animation speed when changing CSS properties. Instead of having property changes take effect immediately, you can cause the changes in a property to take place over a period of time. For example, if you change the color of an element from white to black, usually the change is instantaneous. With CSS transitions enabled, changes occur at time intervals that follow an acceleration curve, all of which can be customized.\nResponsive Web Design\nCreate Responsive Website Using HTML5 CSS3\nfrontend developers\nwebsite designer\nHtml Developers\nLearn Web Development Courses and Tutorials\nhow to make responsive website using Html CSS Javascript\nBuild a real world responsive website\njavascript front end tutorial\nfront end developer course\nfront end development tutorials\nLearn Web Development Courses and Tutorials\nresponsive website design from scratch 2020\nDesign A Complete Responsive Business Website From Scratch\nhtml5 + css3 responsive web design\nLearn Modern Responsive Web Design With Example Step by Step\nResponsive Html5 CSS3 Website\nWeb Design For Beginners\nBuild A Modern Looking Responsive Websites\nLearn Responsive Web Design From Scratch\nReal World Coding in HTML & CSS\nHtml5 CSS3 and Javascript : A Guide To Web Design From Scratch\nWeb Design HTML CSS Create Single Page Website from Scratch\nFront End Web Development\nHelp and inspiration ?\nNot only do you get a load of practical, useful starting projects in this course, you can also head over to CSS Animation.rocks for more, and even sign up to a weekly newsletter packed full of tutorials, inspiration and tips for animating on the web.\nThere’s no better time to learn Animations : You’ve made a smart choice, because CSS 3 Animations is the most popular language out there. This is no exaggeration. This popularity and growth means more jobs and opportunities than ever before.\nGet access to fast support if you get stuck : There’s nothing worse than getting stuck ten hours into a course and not getting the help you need to continue. Getting stuck is part of the learning process. That’s why I’m here to answer every single question that comes my way.\nI guarantee that this is the most up-to-date and engaging course available, and it comes with a Udemy 30-day money-back guarantee.\nI can’t wait to see you on the inside !\n- B. Praveen Kumar ( PHP Developer & Web Designer - FULL Stack Developer ).",
      "target_audience": [
        "All Levels From beginner to Advance"
      ]
    },
    {
      "title": "Learn Javascript Step By Step By Building Projects",
      "url": "https://www.udemy.com/course/learn-and-master-javascript-step-by-step/",
      "bio": "This course teaches the fundamentals of JavaScript, UI component, patterns tips/tricks and build a DOM based OO game",
      "objectives": [
        "The student will be able to build large scale applications, understand how things works in deep level, and overall master the fundamental of programming.",
        "Build an Online Editor like Codepen/jsbin using structured coding practice",
        "Build your own reusable component",
        "Build your own pagination control/library",
        "Build and refactor a simple CRUD app",
        "Implement drag and drop without using any library",
        "Build a DOM based game using OOP",
        "Build a jQuery like DOM Library step by step",
        "Build a Slide Show/Image Gallery App using our custom library",
        "Understand closure, call, apply and bind function thoroughly"
      ],
      "course_content": {
        "Introduction and Basics": [
          "Introduction and Motivation",
          "Please read this first"
        ],
        "In the Beginning": [
          "Introduction to JS",
          "Getting Started",
          "A quick note on debugging",
          "Introduction to Variable",
          "Variables - Quick Demo",
          "Variables - Some conventions",
          "Variables - Undefined and Reference Error",
          "A note of let/const hoisting",
          "Var statement in detail - Hoisting, Scope (audio editing in progress)",
          "Let statement in detail - Hoisting, Scope (audio editing in progress)",
          "Understanding Const",
          "Summary of Var, Let and Const",
          "Const Assignment"
        ],
        "Beginners - Numbers in JavaScript": [
          "Data Types - Introduction",
          "Common Operations on Numbers",
          "Number - toString() and valueOf() methods",
          "Number - isNan() function",
          "Number - isNan() - Some note",
          "Exercise 1 - Calculate Seconds in an Hour",
          "Exercise 2 - Calculate Seconds in a Day",
          "Number - Pre and Post Operators",
          "Understanding Arrays"
        ],
        "Beginners - Strings in JavaScript": [
          "Introduction to Strings",
          "Handling long strings and intro to Template Literal",
          "String Operations - Length and Concatenation",
          "String - ES6 Template Literal",
          "String - Handling Quote within String",
          "String - indexOf method",
          "String - indexOf method More Details",
          "String - lastIndexOf method",
          "String - Slice method Visual Explanation",
          "String - Slice method (negative index)",
          "String - Slice method (notes on endIndex)",
          "String - substr and substring method",
          "String - replace method",
          "String - Transforming text cases",
          "String - charAt - Find character at specified index/position",
          "String - Trimming characters from beginning and end of string",
          "String - Splitting a string into an array",
          "Write a JavaScript function to capitalize first letter of a string;",
          "Swap case"
        ],
        "Tips and Questions": [
          "Tips and Important JavaScript Questions"
        ],
        "Basics of Functions": [
          "Theory - Understanding Scope",
          "The Function - Intro",
          "Function Statement Demo",
          "Function Expression Demo - (with Hoisting discussion)",
          "Arrow Function Notes",
          "Understanding function"
        ],
        "Functions": [
          "Function Introduction (from live session)"
        ],
        "Intermediate Knowledge": [
          "Understanding call, apply and bind functions",
          "Closures - Read this first",
          "Understanding Closures",
          "Code your Own Bind method polyfill",
          "Currying",
          "Functions",
          "Closures Quiz"
        ],
        "Object Oriented Programming": [
          "Understanding constructor function",
          "Quick intro to ES6 class",
          "Fixing new keyword bug when invoking constructor function",
          "Adding instance methods to constructor function/class",
          "How inheritance works in es5 and es6",
          "Method overriding",
          "Static methods"
        ],
        "OOPS Q & A": [
          "OOPS - Clarification -1 - call and object.create"
        ]
      },
      "requirements": [
        "Basics of HTML and CSS",
        "Knowledge of any programming language will be helpful but not a prerequisite"
      ],
      "description": "Dear Friends,\nWelcome to the JavaScript Step by Step Project-based course. Treat this offer as a \"One Time Investment\" to all future updates.\nSome of the topics we will cover are listed below (content will be incrementally added and user feedback will be taken into consideration).\nOur goal in this course is to master JavaScript incrementally using the concepts of \"First Principle\". And we do this by building lots of small and big projects to understand the concepts.\nThe Core\nIntroduction and basics\nObjects\nFunctions\nArrays\nObject Oriented Programming using ES5/ES6\nCall, Apply, and Bind\nClosure\nLexical Scoping\nArrow functions\nSpread Operators\nREST Parameters\nPromise\nvar/let/const\nIIFE\nThe DOM\nDOM Manipulation\nBetter practices\nBuilding Re-usable Code\nBuilding Reusable Libraries/Components\nImplementing Drag and Drop without using third-party library\nUpdated: Nov 2018\nGame Development\nBuild a pong game using ES5 OOP and DOM\nUpdated: Dec 2018\nBuilding Components with JavaScript\nBuild a base Dialog/Notification Component\nUpdated: Apr 2020\nCode Your Own jQuery-like Library to Master DOM Manipulation\nUpdated: Jan 23rd, 2021\nEssential JavaScript for Libraries and Frameworks Series\nUpdated: Feb 3rd, 2021\nBuild a Live Code Editor like CodePen, JSBin using Vanilla JavaScript\nHope you enjoy this course!\nSpecial thanks to the team at Algorisys Technologies for the support in creating these contents.",
      "target_audience": [
        "Beginner programmer who wants to learn and understand how to use JavaScript to build websites and applications",
        "Students who wish to learn fundamentals and build projects"
      ]
    },
    {
      "title": "Mendix 10: Building & Integrating Apps With External Systems",
      "url": "https://www.udemy.com/course/mendix-10-building-integrating-apps-with-external-systems/",
      "bio": "Learn OQL (Object Query Language) Module, Inheritance, New PDF Generation Module, Published Rest Services & more...",
      "objectives": [
        "Students will learn Advanced Javascript Actions.",
        "Students will learn Advanced Inheritance Concepts.",
        "Students will learn How to Integrate Mendix apps with External Systems.",
        "Students will learn OQL Module. (Object Query Language)",
        "Students will learn PDF Document Generation Module.",
        "Students will learn Published Rest Services in all details."
      ],
      "course_content": {
        "Introduction": [
          "What We Are Going To Build?",
          "IMPORTANT NOTES!",
          "How To Access Project Files?",
          "How To Install Mendix 10.1?",
          "How To Create Blank App?"
        ],
        "Setting Up Project": [
          "Install Necessary Modules",
          "Remote Object Creation With Attributes",
          "BCO_RemoteObject Implementation",
          "Inheritance & Nested Before Commits",
          "Polymorphism & Microflows"
        ],
        "Enabling App For Anonymous Users": [
          "Setting App Project Security",
          "Conditional Form",
          "Register Validation",
          "Create Account",
          "Setting Up Eclipse",
          "Getting User Location With MaxmindDB (without REST API)",
          "Implement Location Logic"
        ],
        "Setting Up Builder Module": [
          "Setup Entites - Connected Grids",
          "Connected Grids CRUD Operations",
          "Preparation for Data Employee Role",
          "Creation of Data Employee Role",
          "Is Owner Of Object?",
          "Cascade Delete & Order Of Before Delete Event"
        ],
        "Building Test Composer": [
          "What We Are Going To Build In This Section?",
          "Data Creation for Connected Selectors",
          "Connected Dropdowns Implementation",
          "Solving Bugs - Optimize Performance for Connected Selectors",
          "Implement Test & Config Builder page",
          "What If Custom Widgets Not Found on Market?",
          "Building Builder Component",
          "Navigating Questions",
          "Creating Question Form",
          "Creating Preview Form",
          "Improve Test Builder Form",
          "Implement Save Test Function",
          "Text Change Behaviour - Fixing Bugs With JS",
          "My Tests Page Implementation",
          "Adding Page Routes",
          "Setting Entity Access Rules",
          "Edit Test Logic",
          "Editing Questions Directly",
          "Implementation Of Delete Operations"
        ],
        "Building Test Solver": [
          "What We Are Going To Build In This Section?",
          "Implement Solver Module",
          "Generate Solver Tests",
          "Showing Solver Tests to User",
          "Changing Option Selection Behaviour",
          "Implementation Of Spent Time Logic",
          "Implement Test Status Logic",
          "Implement Review Mode",
          "Implement Test Results",
          "Solved Tests Page",
          "Review Solver Test",
          "Correct Wrong Option Colors",
          "Fixing Dynamic Class Bug",
          "Applying Entity Access To Solver",
          "Solver Test - Lecture Association",
          "Fixing Route Mistakes"
        ],
        "Data Generation For OQL Module": [
          "Generate Builder Tests",
          "Generate Solver Tests with 5 users",
          "Adding More Demo Users"
        ],
        "Deep Dive Into OQL Module": [
          "What Is OQL? (Object Query Language)",
          "Writing First Query",
          "Adding Utility Functions",
          "Important Lecture : Passing Parameter to Dataset",
          "Access OQL Functions Documentation",
          "OQL Playground App"
        ],
        "Published Rest Services": [
          "Get All Builder Tests",
          "Extending Get All Builder Tests",
          "Using Query Parameters with OQL",
          "Using Paths as Parameters",
          "Using Request Body as Parameter",
          "Username Password Authentication",
          "Custom Authentication"
        ],
        "PDF Generation Module": [
          "Generate PDF Of Builder Test",
          "Dynamic Test Export as PDF",
          "Standardization Of PDF Export For All Tests"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "Beginner Java",
        "Intermediate Javascript",
        "Intermediate Mendix Knowledge"
      ],
      "description": "Mendix is a huge low-code platform, and the best in low-code development. It provides and utilizes tools to build, test, and deploy applications in same platform. Mendix has been building out the platform so that businesses can go live sooner and attain success faster. In addition to that on 1  October  2018, Mendix was acquired by Siemens, the largest industrial manufacturing company in Europe.\nIn this course you will build and learn;\nStudents will learn Advanced Javascript Actions.\nModularization Concepts\nAdvanced Inheritance Concepts\nAdvanced Domain Model Skills\nObject Query Language For Reporting\nNew Pixel Perfect PDF Generation Module\nPublished Rest Services including Basic Authentication\nPublished Rest Services including Custom Authentication\nConnected Components Patterns\nAdvanced Security Concepts\nEntity Access Rules\nPolymorphism and Microflows\nThis is a 13 hours course to teach you to give more deep insight about Mendix development.\nMendix is a high productivity app platform that enables you to build and continuously improve mobile and web applications at scale. The Mendix Platform is designed to accelerate enterprise app delivery across your entire application development lifecycle, from ideation to deployment and operations.\nMendix enables you to implement both Agile and DevOps best practices. It even goes beyond that by involving business stakeholders in the actual development of the applications.",
      "target_audience": [
        "Software Developers",
        "Mendix Developers",
        "IT Engineers"
      ]
    },
    {
      "title": "Setup LAMP Stack on a Remote Cloud Server + PHP Foundations",
      "url": "https://www.udemy.com/course/setup-lamp-stack-on-a-remote-cloud-server-php-foundations/",
      "bio": "Cloud Computing Foundations | Instance Deployment | LAMP Stack Configuration | Database Deployment | PHP Basics",
      "objectives": [
        "The benefits of cloud computing over traditional on-premises data centers.",
        "Foundations of Cloud Computing Service Models",
        "Setting up and navigating a Linode account",
        "Securing a Linode account with TFA",
        "Remote Server Administration via SSH",
        "Securely Authenticating to a Virtual Instance Remotely using SSH Key Pairs",
        "Foundations of the Linux Filesystem",
        "Linux Maintenance and Configuration",
        "Linux Use Accounts and System Security",
        "Foundations of Web Servers",
        "Foundations of DBMSes and Database Transaction Standards",
        "Foundations of SQL vs NoSQL Databases",
        "Installing and Configuring LAMP Stack on Ubuntu",
        "Testing MariaDB & PHP on Apache",
        "A Beginners Guide to Coding in PHP [Variables, Arrays, Functions, Loops, Conditional Statements, etc.)"
      ],
      "course_content": {
        "Introduction to Cloud Computing": [
          "Intro to Cloud Computing",
          "Benefits of Cloud Computing",
          "Cloud Computing Service Models"
        ],
        "Linux Server Deployment on Linode": [
          "Linode Account Setup",
          "Exploring the Linode Cloud Manager",
          "Enabling TFA on Linode",
          "Deploying a Linode Virtual Instance",
          "Exploring the Linode Instance Dashboard",
          "Remote Server Admin via SSH",
          "Password vs SSH Key Authentication",
          "SSH Key Pair Authentication on Windows",
          "SSH Key Pair Authentication on MacOS",
          "Connecting with LISH",
          "Adding SSH Public Keys to Linode"
        ],
        "Linux Foundations": [
          "Introduction to Linux",
          "The Linux Filesystem",
          "Linux Maintenance Commands",
          "Linux Directory Commands [Part 1]",
          "Linux Directory Commands [Part 2]",
          "Ubuntu Basic Server Configuration",
          "Introduction to User Accounts",
          "Creating a Non-Root Account",
          "Securing the New User Account",
          "Disabling Root User Access and Password Authentication"
        ],
        "Web Server and Database Foundations": [
          "Introduction to Web Servers",
          "Self Hosting vs Hosting Provider",
          "Web Server Software (NGINX vs Apache)",
          "Introduction to Databases",
          "SQL vs NoSQL Databases",
          "Database Transaction Standards (ACID vs CAP)",
          "CAP Theorem for NoSQL Databases",
          "Characteristics of SQL vs NoSQL DBMSes",
          "Key Terms: Stacks, Frameworks, & Languages [Part 1]",
          "Key Terms: Stacks, Frameworks, & Languages [Part 2]",
          "Key Terms: Stacks, Frameworks, & Languages [Part 3]"
        ],
        "LAMP Stack Installation and Configuration": [
          "Installing LAMP Stack on Ubuntu via Command Line",
          "Installing LAMP Stack using Linode Marketplace",
          "Testing PHP on Apache",
          "Testing MariaDB Connection from PHP [Part 1]",
          "Testing MariaDB Connection from PHP [Part 2]",
          "Remote Server Administration using Linode GLISH"
        ],
        "PHP Foundations": [
          "PHP Introduction",
          "PHP Preparation",
          "PHP File Test",
          "PHP Syntax",
          "PHP Variables",
          "PHP Variable Scope",
          "PHP Global Keyword",
          "PHP Static Keyword",
          "PHP Echo - Print",
          "PHP Data Types",
          "PHP Objects",
          "PHP Strings",
          "PHP Constants",
          "PHP Operators",
          "PHP Conditional Statements",
          "PHP ElseIf Statement",
          "PHP Switch Statement",
          "PHP While Loops",
          "PHP For Loops",
          "PHP Functions",
          "PHP Functions Continued",
          "PHP Arrays",
          "PHP Multidimensional Arrays",
          "PHP Sorting Arrays",
          "PHP Superglobal Variables",
          "PHP Forms Introduction",
          "PHP POST vs GET Basics",
          "PHP Form Output and Validation",
          "PHP Form Required Fields",
          "PHP Validation Continued"
        ]
      },
      "requirements": [
        "Basic computer skills.",
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "In this course you will learn the foundations of LAMP Stack and PHP. LAMP is an acronym for a popular group of software packages used to deliver high-performance web applications. LAMP is most commonly used to denote Linux, Apache, MySQL, and PHP. However, MySQL and PHP are often swapped for alternative software solutions such as MariaDB, and Python.\n\nThe course starts with a detailed overview on setting up and configuring an instance remotely using terminal and terminal emulators such as PuTTY. Here, students learn the foundations of Linux and various Linux distributions such as Ubuntu to securely power web servers. Students will learn various Linux maintenance and directory commands, coupled with user account configuration and disabling root user access. From there, we dive into the foundations of database management systems and explore the difference between SQL and NoSQL databases. We also explore the two main database transaction standards, including ACID and CAP theorem.\n\nOnce students have a solid understand on the foundations of cloud computing, we demonstrate how to securely install and configure LAMP Stack on Ubuntu. The installation will be complete with MariaDB and PHP, whereby students will learn to execute database commands directly from server-side PHP scripts. The course concludes with an entire section devoted to PHP development, where we explore just about every aspect of PHP syntax to code dynamic web content.\nAs you can see this course covers a tremendous bit of ground and we hope you’re just as excited about this course as we are, if so - hit that enroll button and let’s get started.",
      "target_audience": [
        "Students interested in Cloud Computing and the Cloud Computing Service Models",
        "Students interested in Deploying and Configuring Virtual Instances using Cloud Services [IaaS]",
        "Students interested in learning the Foundations of Linux",
        "Students interested in learning the foundations of Web Servers and Databases",
        "Students interested in Installing and Configuring LAMP Stack on Ubuntu",
        "Students interested in learning how to code in PHP"
      ]
    },
    {
      "title": "Full Stack React Js with Redux, Node.Js, Express.Js, MongoDB",
      "url": "https://www.udemy.com/course/full-stack-react-js-with-redux-nodejs-expressjs-mongodb/",
      "bio": "Learn React JS with Redux, Hooks, Context, Node.js, Express js and Mongo DB from scratch. Dive in React, Express, nodejs",
      "objectives": [
        "This is the full React JS course. You will learn React JS, Redux, Hooks and Context, NodeJs, ExpressJs and Mongo DB",
        "You will learn React JS with hands-on examples",
        "Learn how to create Single Page Web Application with React JS",
        "Create reusable React Components",
        "User Inputs, Forms and Events in React",
        "Learn to create multi-page web app with react-router-dom",
        "We will learn how to perform asynchronous operations with Redux thunk",
        "Learn to consume context with Context Consumer",
        "How to manipulate context data in class-based components",
        "Learn how powerfull when we use Context and Hooks together",
        "Learn components, props, states and component life cycle methods in React JS",
        "Learn sending request to an API and fetch data",
        "Routing with React Router",
        "Manage the data of our application with the Redux library",
        "Create context with class-based component",
        "Learn how to consume context with static contextType",
        "Learn the most important hook functions like, useState, useEffect, useReducer and useContext",
        "Learn how to easily build the largest and most advanced React applications",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoD",
        "Learn the key concepts of the Express JS",
        "Express Route parameters",
        "Middleware & Static files",
        "Query Strings",
        "There are many reasons why React is popular. One reason is that Facebook developed it.",
        "React, or React JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect lib",
        "React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market",
        "Frameworks provide an opinionated approach to building an entire application.",
        "React encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions",
        "React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do.",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "A runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an app"
      ],
      "course_content": {},
      "requirements": [
        "This course is ideal for people who have a basic knowledge of HTML, CSS, JavaScript but you don’t need to be an expert",
        "Computer with access to the internet",
        "A Windows PC, Mac or Linux Computer",
        "Es6 knowledge would be beneficial but not required",
        "Desire to learn React",
        "Desire to learn React JS",
        "Desire to learn full stack React js with Redux, nodejs, express, mongodb",
        "Desire to learn Reactjs with redux",
        "Desire to learn future technology react js with nodejs",
        "Desire to become fullstack web developer with react, redux, nodejs, express, mongodb",
        "Desire to learn frontend and backend web development with javascript (react js, nodejs, redux framework, nodejs, express, mongodb)",
        "Desire to learn mern stack with react, nodejs, express js, mongodb",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to the \"Full Stack React Js with Redux, Node Js, Express Js, MongoDB\" course\nLearn React JS with Redux, Hooks, Context, Node js, Express js and Mongo DB from scratch Dive in React, Express, nodejs\nIn this course, you will learn to develop a web application with React JS, Redux, Hooks & Context, Node Js, Express Js and Mongo DB from scratch\nIf you are thinking to start to learn ReactJS, this course is the best match for you\nWe have explained React from beginner to all levels We have explained all the topics as simple as possible with examples, slides, and diagrams\nWe have created a lot of projects while explaining the subjects Because we believe that applied educations are much more useful than other teaching methods\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels\nWe paid attention to explain all the topics in order Because we think that the order of presentation of the subject is as important as the content of education We have seen this shortcoming in many pieces of training we have examined and tried to explain these issues to you in the best way\nReact is an essential Javascript framework for web development It is the most popular framework for developing web, mobile, and desktop app user interfaces\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from\nNode js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser\nNodeJS and Express is a growing web server technology By learning Node with Express, you can improve your skills, get a new job and you can build a powerful, robust backend\nLearning Node js is a great way to get into backend web development, or expand your fullstack development practice With Udemy’s hands-on Node js courses, you can learn the concepts and applications of this wildly useful JavaScript runtime\nNode js is essential to developing real-time applications in JavaScript and has been instrumental in the development of websites like eBay and PayPal Node is designed around an event loop, which allows for easy management of asynchronous functions This makes it a popular environment for modern developers working on chat and gaming apps\nMongoDB is a cross-platform document-oriented NoSQL database program By using MongoDB, you can build a modern application database for your projects\nMongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows It’s schemaless nature allows greater flexibility or changing application requirements It’s one of the best databases in terms of developer productivity\nMongoDB is an document-oriented database designed to allow developers to scale their applications to meet scalability demands MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster\nNo Previous Knowledge is needed!\nYou don’t need to have previous knowledge about React This course will take you from a beginner to a more advanced level with hands-on examples\nYou will be confident in using React JS, and if you ever get stuck, we will be there to help\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS In this course, we will be teaching React by creating various projects\n\nIn this Full React Js course, you will learn;\nHow to create Single Page Web Application with React JS\nThe most important React topics like components, props, state and component life cycle methods\nHow to send requests to an API and fetch data\nHow to create a multi-page web app with react-router-dom\nHow to manage the data of our application with the redux library\nWe will learn how to perform asynchronous operations with Redux thunk\nHow to create a context with a class-based component\nHow to consume context with ‘context consumer’\nHow to consume context with ‘static contextType’\nHow to manipulate context data in class-based components\nThe most important hook functions like useState, useEffect, useReducer, and useContext\nHow powerful when we use context and hooks together\nHow to easily build the largest and most advanced react applications\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nReact js\nexpress\nexpress js\nreact\nreactjs nodejs\nnodejs\nnode js\nreact js\nexpressjs\nfull stack\nfull stack javascript\nfull stack react\njavascript\nreact js node js\nnodejs reactjs\nreact js and node js\nnode\nmern stack\nnode js react\nmern full stack\nmongodb\nfull stack react js with redux node js, express js, mongodb\nexpress\nreact node\nreact nodejs\nnodejs express js mongodb\nreactjs and nodejs\nmern\nnode react\nweb development with react js, mern stack\nreact js full stack\nAt the end of the course\nBy the end of the course, you will be able to build amazing React single-page web applications\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nreact\nreact js\nreactjs\ngraphql\ntypescript\nredux\nexpress\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook The simplest definition of React is that it is a user interface library used for building UI components for the web But if that was all React did, it would be little more than a template library Developers define components in React by using an HTML-like syntax called JSX These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM) These features give React components the ability to react dynamically and efficiently to changes in their state A set of simple components in React can be composed into either simple single-page applications or large, complex web applications\nWhat is React used for?\nReact is an open-source JavaScript frontend library Some developers consider it a frontend framework because it does more than standard libraries usually do The most common use of React is to build dynamic user interfaces for single-page web applications But the structure of React makes it useful for more than just creating websites JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element But JSX can be used as an interface for things other than HTML React Native uses React to build mobile applications Here, JSX becomes an interface for mobile UIs instead of HTML There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach Engineers create components, which are normal Javascript functions These functions return information to tell React what content should be displayed on the screen The real power of React comes from the ability to nest or compose these functions inside of one another This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application Libraries, on the other hand, assist in building a single aspect of an application With this in mind, React is a library It assists engineers in presenting HTML in the browser React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built\nIs React worth learning?\nYes, React is worth learning There are a couple of reasons The first one is that React is in high demand in the software development job market and has been for a few years If you learn to code in React and can do it well, you will increase your chances of finding a job This alone is another reason it is worth learning Website users no longer will settle for old-fashioned sites that won't update without a page reload React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience React has also been around a few years and has stood the test of time A large portion of websites, both small and large, use React as a frontend framework\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different But it is easy to learn if you are dedicated and determined to create frontend web applications To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning Since React is a Javascript framework, a solid grounding in Javascript will give you a head start With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different In React, web components are generated In React Native, the generated components interact with a phone's native APIs If your focus is web development, then you should learn React If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native\nWhy is React so popular?\nThere are many reasons why React is popular One reason is that Facebook developed it The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications React also solved many of the past issues that developers had with developing single-page applications (SPAs) React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs One feature that makes it better than past libraries is that React is relatively easy to use Its components are reusable, plus React's use of the virtual DOM makes it very performant React should remain popular in the future as each new release brings new features and performance improvements\nWhat is Node Js and what is it used for?\nNode Js is a server environment built for fast and easily scalable network applications It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time By using JavaScript, node Js can be put to work by many software developers familiar with JavaScript Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux) Node js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast Examples of applications that use node Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming\nWhat are the advantages of Node Js?\nNode Js is open-source, meaning it’s free code for all developers On top of that, it also means that there is a thriving community of Node Js users and programmers that all add to the knowledge base Many are happy to share their flavor of the code with other developers, and collectively, the Node Js environment continues to be enhanced Because Node Js uses JavaScript, there is a large pool of developers that understand and can code in the environment It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training Node Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable\nWhat does it mean that Node Js is a runtime system?\nA runtime system is a platform where a software program runs It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run) Node Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required Because Node Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time It’s an efficient system, making it the preferred choice for many software and tech companies\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer You will always have up-to-date content for this course at no extra charge\nThe instructor helped me whenever I needed it, and I've learned a lot in very little time Now I can create simple single-page applications, and I fell in love with CodePen and VS Code!\nIf you are wanting to learn how to; build for production, push to production, have a dev and production version, and learn how to navigate the two, this is the class for you! Seriously there is so much real-world knowledge here it should be worth way more than what it is!\nAfter taking this course, I decided to adopt Node js as my specialized language/technology Thank you\nThe course is great and he does not say anything without an explanation If you want to really understand how to use MongoDB, how to test it, and how to set up and use Express with MongoDB, then this is an amazing course\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nFull Stack React Js with Redux, Node Js, Express Js, MongoDB course\nWe offer full support, answering any questions\nSee you in the class!",
      "target_audience": [
        "Beginner who wants to be React developer",
        "Anyone who wants to become an React Developer",
        "Anyone who wants to build amazing React single page web applications",
        "For those who want to learn React Hooks",
        "Anyone who wants to learn React Js and its modern face Hooks & Context",
        "Students who want to learn how to build fast single page web apps",
        "For those who want to learn React Context API",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Anyone who wants to learn today's most popular front-end architectures and take their Web development skills to the next level and learn a future-oriented technology",
        "Who wants to learn React-Router, React-Portals and Redux",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who wants to learn MongoDB",
        "Anyone interested in NoSQL Schema",
        "Professionals who are willing to learn MongoDB Database",
        "Anyone looking to build a career as a NodeJS or Express developer",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "People who want to learn mern stack ( mongodb, express, react js, node js)",
        "People who want to learn full stack react js, express js, nodejs, mongodb"
      ]
    },
    {
      "title": "AJAX Expert Course (RESTful APIs | CORS | MORE) 2025",
      "url": "https://www.udemy.com/course/ajax-beyond-fundamentals/",
      "bio": "Advanced AJAX course for everyone. HTTP Basic Auth | CORS | Modules | RESTful APIs | xhr | Fetch | Axios | Projects ETC",
      "objectives": [
        "Understand advanced AJAX",
        "Learn the differences between XHR, Fetch and Axios",
        "Understand what RESTful APIs are, and how to use them",
        "Learn how to send authentication information using XHR and Fetch",
        "Understand Single-Origin-Policy vs CORS",
        "Basic HTTP Authentication using AJAX",
        "How to access JSON and text data from a server response",
        "How to access XML data from a server response",
        "What is Apache and how it differs from Node",
        "How to set up an Apache server, a PHP server and a Node server",
        "Preflight vs Simple CORS requests",
        "How to allow cross-domain requests with AJAX",
        "What happens when an AJAX request arrives at the server",
        "How a server can handle an AJAX request",
        "How to use Postman to test your server side routes",
        "How to use Nodemon to speed up your server side development process",
        "ES Modules vs CommonJS modules",
        "What are CORS errors, and how you can fix them",
        "Practical - build awesome dynamic front-end AJAX examples with me",
        "I am here to support you, step-by-step",
        "From beginner to expert (advanced +)",
        "You will emerge an expert",
        "Gives you depth of knowledge to boost your ability and confidence to built dynamic websites"
      ],
      "course_content": {},
      "requirements": [
        "Desire to become a serious full stack web developer",
        "Basic idea of what HTML, CSS and JavaScript is",
        "A Mac or PC is required as you need to code alongside me to learn effectively"
      ],
      "description": "*** THE BEST ADVANCED AJAX COURSE ***\nMaster Asynchronous Requests: Learn how to make seamless HTTP requests with AJAX.\nExplore Advanced Concepts: Dive into heavy topics such as HTTP Basic Auth, CORS, and RESTful APIs to understand how they integrate with AJAX.\nRESTful API Project: Work with various tools like XMLHttpRequest, Fetch API, and Axios to implement AJAX in a real-world project.\nBuild Dynamic Applications: Discover how to effectively manage and manipulate data using AJAX for a smoother user experience.\nLearn Advanced Techniques: Understand modules, error handling, and best practices for optimizing your AJAX calls.\nThis AJAX  advanced course will teach you how to use AJAX in different ways, and also teach you how to solve common issues you’ll face when working with AJAX. Real life practical training.\nWhat This Advanced AJAX Course Covers\nIn this advanced course, we will cover a wide range of topics that are essential for mastering AJAX:\nThe fundamentals of making asynchronous requests\nHow to implement HTTP Basic Authentication and handle CORS issues\nA thorough understanding of RESTful APIs and how they work with AJAX\nPractical coding examples using XMLHttpRequest, Fetch API, and Axios\nTechniques for error handling and debugging AJAX requests\nBuilding projects that utilize AJAX for dynamic content updates\nEven if you have little knowledge about AJAX, I’ve got you covered.\nI do have a fundamentals AJAX course that provides a summary of AJAX. But in this advanced course, we start building projects together and from Section 4 we start digging into advanced concepts like Basic Auth, CORS and servers.\nKnowing  advanced AJAX concepts is crucial if you want to become a serious fullstack developer, as it will allow you to make asynchronous HTTP requests and listen for incoming data from servers. AJAX can get tricky at times, and I don’t dispute this, but with correct training which includes explaining difficult concepts in a simple way, you will, like me, learn to master and love AJAX.\nWhat is AJAX in one sentence\nAJAX allows your users to add/delete/view/update content, post comments, submit reviews, submit forms and a ton more, without a page refresh.\nLearn the (advanced) secrets of AJAX in this course\nUnderstanding the fundamentals of AJAX is important. That's why I created the first part AJAX Fundamentals course. I assume that you have either (1) done my AJAX Fundamentals course, or (2) at the very least you've heard of AJAX and know about the XHR object and the Fetch API.\nThis AJAX EXPERT COURSE is important, because it goes beyond the fundamentals of AJAX. It allows you to use AJAX to its fullest to advantage you best. It allows you to master AJAX and take your skills to the next level.\nIt will equip you to become a highly sought-after programmer.\nLearn how to send authentication information using the XHR object and the Fetch API\nLearn how to take user inputs, convert it into JSON data, and send that data to a server\nLearn how to retrieve XML, JSON and text data from a server\nLearn how to take data from server and update the page dynamically using JavaScript\nLearn how to write great code using modules, writing middleware and defining RESTful AJAX APIs, and more!\nDelivering an interactive, asynchronous web experience is challenging. In this AJAX BEYOND FUNDAMENTALS course, we take a deep-dive into AJAX. Together, we will tackle questions like: How can you use Basic HTTP Authentication with AJAX? What do you do if you get a CORS issue using AJAX? What happens when an AJAX request reaches a server? What are RESTful APIs and how do you set them up? Answering these questions with confidence will propel you to being confident in AJAX and able to maximize performance.\n\n\nWHAT THIS AAJX COURSE COVERS?\nThis course is best done if you have at least a little understanding of AJAX.\nIf you have never heard of AJAX, I encourage you to first do my AJAX Fundamentals course. The reason I have done this is that my AJAX Fundamentals course provides everything you need to start using AJAX yourself. It gives you the sound fundamentals and practicals regarding AJAX. It will take you to the point where you will understand where AJAX came from, how to set up an AJAX request using the XHR object and the modern Fetch API.\nTHIS AJAX EXPERTS COURSE picks up on my AJAX Fundamentals course and goes further by digging into topics that are more advanced. My AJAX BEYOND FUNDAMENTALS course will captivate you with real life examples and catapult you to the next level and set you well on your way to achieving everything you want to with AJAX.\nWhat you will learn:\nUnderstand how to use the XHR, Fetch API and Axios to make an AJAX request\nHow to set up Basic HTTP Auth using Apache, PHP and Node\nHow to solve CORS issues\nHow to define your own AJAX library\nHow to use Modules (ES Modules and CommonJS modules)\nHow to build an entire application that makes RESTful AJAX requests\nHow to use middleware (like cors(), express.urlencoded() and express.json()) on your server\nHow to set up Routes on your server and send responses back to a browser\nHow to become a better frontend programmer\nAnd more!\n\n\nIn my AJAX BEYOND FUNDAMENTALS course you’ll learn, in a simple and fun way, about Basic Auth, CORS, SOP, RESTful services, server routes, middleware, modules, and a ton more!\n\n\nEND GOAL OF THIS COURSE\nYou will be confident in AJAX and together we build a fully functional site that performs basic CRUD operations and saves data to a server. This simple application will use the power of RESTful AJAX APIs to speak to a server and perform tasks like adding/deleting/updating and viewing data that is stored on your server.\nIn building this application you will learn the following:\nSet up a server to store all of your data\nThe server will be set up on a different port number than your frontend code\nYou will have to solve CORS errors\nListen for the DOMContentLoaded event to send an AJAX request to populate your table data\nThe users will be able to perform all CRUD operations (create/read/update/delete dog data)\nAll your AJAX code will be written in a module and will be RESTful compliant\nAnd a ton more!\nHow amazing is that?\nBy the end of this AJAX BEYOND FUNDAMENTALS course, you'll be able to “speak” and “walk” AJAX by gaining an understanding of how you can use it in meaningful and practical ways. We dig deeper in every lecture, and this course has a lot of additional content that will extend your knowledge base and test your skills.\nThrough practical examples, I help you understand AJAX piece by piece. And together we use the latest and best features of JavaScript and browsers along the way so you can confidently create what you like using AJAX and stay ahead of the pack.\n*** One of the most advanced AJAX courses on Udemy ***\nSuccessful programmers know more than the basics of AJAX. They also know how to solve CORS issues, how to implement authentication and how to set up servers . If you’re wanting to become a full stack developer, you need to know how to send JSON to a server via AJAX (i.e you need to know how to convert your JS objects to JSON), how to define modules and how to use the response data to update the page dynamically. You need to master CORS, and how to allow cross-domain requests, and more! Side by side I take you through all you need to know.\nI want you to gain maximum benefit from this AJAX course, and I am here to help\nI want you to be able to easily apply what I teach you in this course to any webpage or challenge of your choosing.\nIf AJAX is your interest, this course is perfect for you my dear student.\n\n\nHow is this course different?\nThere are lots of great courses that focus on web development. But they never get into the detail about AJAX related issues that will pop up when you start creating more complex sites.\nIn this AJAX BEYOND FUNDAMENTALS course, I focus on the more advanced topics of AJAX. This includes understanding why the XHR object allowed a username and password field, why you will sometimes want your frontend running a port number that is different to the server port, how to set up a server, how to implement Basic Auth, how to utilize the power of Modules, and more!\n\n\nPractice makes perfect\nTheory is theory … but there’s nothing like the real McCoy and getting behind your computer and typing in good code. That’s why we will be coding, laughing and pulling out our hair together as we code real life websites and exercises during this course. From Section 2 and beyond we start building AJAX projects together.\nI love doing practical examples with my students, which is why this course has a number of them. My practical examples offer great lasting benefit to students and that is why I advocate them. My final course project that we will build together is a highlight, it is an application giving a user the ability to add, update, delete and fetch data from a server.\nHow much fun isn’t that?\n\n\nIs This Course Right for You?\nThis course is perfect for anyone interested in enhancing their web development skills. If you find yourself in any of these categories, you’ll benefit greatly from this course:\nYou want to deepen your understanding of asynchronous programming.\nYou’re eager to learn how successful developers build dynamic web applications.\nYou wish to explore advanced concepts like CORS and RESTful APIs.\nYou’re looking for hands-on experience with real-world projects.\n\n\nWHY START NOW?\nThe demand for skilled web developers is growing rapidly. By mastering AJAX today, you'll position yourself ahead of the competition. This course offers memorable learning experiences, actionable insights, and practical examples that will empower you in your development journey.\n\n\nWhat do you get?\nLifetime access to all tutorial videos.\nNo fees or monthly subscriptions.\nQ&A support.\nQuizzes and challenges to help you learn.\nI’ve allowed you to download all of my lectures for offline viewing.\nLet's get excited about becoming a professional web developer, and to be able to confidently apply it to your own websites.\nSee you in the lectures.\nLet's get crackin'",
      "target_audience": [
        "YES: This course is for beginners to intermediate programmers. Although some AJAX knowledge will be helpful, it is not vital because I have a section dedicated to recapping what AJAX is",
        "NO: This course is NOT only for beginners. It is a complete beginner to advanced master course that is suitable for intermediates who know the basics and have an idea about AJAX, but want to dig deeper to know its inner workings. Experienced students sometimes prefer to skip the first section that they are very familiar with",
        "YES: This course is for someone wanting to be a professional, to be expert and confident in the entire front-end development process",
        "Those interested in building their own frameworks, or being better able to learn from the source code of other well-known frameworks and libraries",
        "Those wanting to start using frameworks (e.g. like Angular or Node) that are heavily reliant on JavaScript and knowing the process flow of front-end web development",
        "Those who have some knowledge of web development, but little knowledge about how it works behind the scenes, and how to practically implement best practices in their websites"
      ]
    },
    {
      "title": "Kotlin Mastering: Complete Kotlin Web Development Course",
      "url": "https://www.udemy.com/course/kotlin-mastering-complete-kotlin-web-development-course/",
      "bio": "Mastering Complete Kotlin Web Development Course. Learn Coding and Designing Android Apps With Kotlin.",
      "objectives": [
        "Understanding Kotlin",
        "Learn about classes, objects and inheritance in the context of Kotlin.",
        "Explore Kotlin syntax, data types, and basic language features.",
        "Learn about the Kotlin Standard Library",
        "You will be very confident using Kotlin"
      ],
      "course_content": {
        "Introduction": [
          "Kotlin Syntax",
          "For Loops",
          "Kotlin Array",
          "Kotlin Booleans",
          "Kotlin Break And Continue Statement",
          "Kotlin Class Function",
          "Kotlin Classes And Objects",
          "Kotlin Comments",
          "Kotlin Constructor",
          "Kotlin Data Types",
          "Kotlin Function",
          "Kotlin Inheritance",
          "Kotlin Operators",
          "Kotlin Output",
          "Kotlin Range",
          "Kotlin Strings",
          "Kotlin Variables",
          "Kotlin When",
          "Kotlin While Loop"
        ]
      },
      "requirements": [
        "Basic Knowledge of Coding Language"
      ],
      "description": "Welcome to the Kotlin for Modern Android App Development Masterclass! In this comprehensive course, you will dive deep into the world of Android app development using Kotlin, the modern and powerful programming language designed to make Android development faster and more enjoyable.\n\n\nThroughout this masterclass, you will learn everything you need to know to build high-quality, efficient, and feature-rich Android applications. Whether you're a beginner looking to start your journey in Android development or an experienced developer wanting to switch to Kotlin, this course is designed to cater to all skill levels.\n\n\nHere's a breakdown of what you can expect to learn:\nKotlin Syntax\nKotlin Output\nKotlin Comments\nKotlin Variables\nKotlin Data Types\nKotlin Operators\nKotlin Strings\nKotlin Booleans\nKotlin If ... Else\nKotlin When\nKotlin While Loop\nKotlin Break and Continue\nKotlin Arrays\nKotlin For Loop\nKotlin Ranges\nKotlin Functions\nKotlin OOP\nKotlin Classes and Objects\nKotlin Constructors\nKotlin Class Functions\nKotlin Inheritance\n\n\nThroughout the course, By the end of this masterclass, you'll have the skills and confidence to develop cutting-edge Android apps using Kotlin, positioning yourself as a proficient Android developer in today's competitive market.  Join us on this exciting journey into the world of Kotlin for Modern Android App Development, and let's build the future of mobile applications together!",
      "target_audience": [
        "Software Developers and Programmers",
        "Students and Programming Enthusiasts",
        "Android App Developers"
      ]
    },
    {
      "title": "Web APIs JavaScript Fetch getting JSON data Fun with APIs",
      "url": "https://www.udemy.com/course/ajax-javascript-json/",
      "bio": "Explore how to connect to various web APIs using JavaScript fetch. Use the returned data JSON data within you Code.",
      "objectives": [
        "Explore how JavaScript Objects Work",
        "Explore how to get data from JSON",
        "JSON and JavaScript Objects",
        "Connect to APIs get Data",
        "Use data within coding"
      ],
      "course_content": {
        "Introduction to AJAX requests and connecting to web APIs": [
          "Web API JSON Introduction",
          "Web developer Setup",
          "Resource Guide and Code Challenges PDF Guide",
          "Make an AJAX request to local JSON file",
          "JavaScript Objects",
          "Source Code",
          "JavaScript Arrays",
          "Source Code JavaScript",
          "Iterate Array Contents",
          "Source Code JavaScript",
          "Iterate Object Contents",
          "Source Code JavaScript",
          "JSON Parse and Stringify",
          "Source Code JavaScript",
          "JSON Content Files",
          "Source Code JavaScript",
          "Web APIs GET data",
          "Source Code JavaScript",
          "JavaScript Fetch AP",
          "Source Code JavaScript",
          "Fetch Arrow Expression",
          "Source Code JavaScript",
          "Random User API Practice Exercise AJAX JSON Data",
          "Source Code JavaScript",
          "Reddit Post API Practice Exercise AJAX JSON Data",
          "Source Code JavaScript",
          "GitHub Repo API Practice Exercise AJAX JSON Data",
          "Source Code JavaScript",
          "GitHub Repo API Part 2",
          "Source Code JavaScript",
          "StackOverflow API Practice Exercise AJAX JSON Data",
          "Source Code JavaScript",
          "Post data with Fetch to Web API",
          "Source Code JavaScript",
          "Get posted data from Web API Pagination of Data Practice Exercise",
          "Source Code JavaScript"
        ],
        "Course Questions and Answer - Useful Code Snippets and more": [
          "Google Sheet WebApp endpoint Code Review",
          "Source Code",
          "Use JSON locally fetch JSON file contents output to HTML page",
          "Code Snippet Local JSON data using Fetch example",
          "Google Spreadsheet Data for Webpage output as HTML content using JavaScript",
          "Source Code example Google Sheet data for Webpage JSON data with JavaScript",
          "JavaScript Logical Conditions Coding Examples",
          "Source Code JavaScript Logical Conditions Coding Examples"
        ],
        "AJAX with JavaScript Coding Examples": [
          "AJAX fetch and xHR coding with JavaScript Local JSON and API connections",
          "JavaScript AJAX XHR object with code example",
          "JavaScript AJAX xHR readystate coding example",
          "JavaScript AJAX Get method JSON data from request",
          "JavaScript AJAX xhr POST method with form field data",
          "JavaScript AJAX how to use fetch",
          "JavaScript AJAX fetch local JSON data",
          "JavaScript AJAX connect to API",
          "JavaScript AJAX how to create a Quiz"
        ],
        "Previous Coding Examples - Changed API endpoints For code reference only": [
          "Web Developer Setup",
          "OLD Version Google Sheet Data Practice Exercise AJAX JSON Data",
          "Google Sheet JSON data Part 2",
          "Source Code JavaScript",
          "Source Code JavaScript",
          "myJSON json file Practice Exercise AJAX JSON Data",
          "Source Code JavaScript myJSON"
        ],
        "JavaScript Code Examples and sample source code projects": [
          "AJAX API with JSON data",
          "HTTP request Object",
          "Fetch with JavaScript",
          "How to flatten nested Arrays with JavaScript",
          "Additional Resources and Guides PDF learning more"
        ]
      },
      "requirements": [
        "JavaScript Experience",
        "HTML and CSS knowledge",
        "Computer access"
      ],
      "description": "Web APIs JavaScript Fetch getting JSON data Fun with APIs\nExplore how to connect to various web APIs using JavaScript fetch.  Use the returned data JSON data within you Code.\nExplore JavaScript Objects and how you can get JSON data with an API connection using JavaScript Code\nGet data from a web server and use that data within you JavaScript application.\nPrevious JavaScript knowledge is a prerequisites to this course - YOU MUST HAVE JAVASCRIPT EXPERIENCE\nCourse is focused on applying JavaScript to connect to web APIs and get back JSON data\nCourse covers:\nWhat JavaScript objects are and how to use them in code\nHow to iterate through arrays and objects to get data\nComplex JavaScript Objects with many layers of data\nJSON lint and how to read JSON data\nHow to use fetch to connect to web APIs\nVarious examples of connecting to APIs to create interactive web applications.\nUsing JavaScript code to connect to web APIs\nSetup of localhost using node and express\nUsing node to make API requests\nSetup of local web host\nSource code is included so you can copy and paste the code to try for yourself.\nStep by step learning\nFast friendly support is always available within the Q&A section\nExperienced instructor with over 20 years of experience ready to help you learn\nYou have nothing to lose - Join now and start learning to create your own version of this helpful application today!!!",
      "target_audience": [
        "Web developers",
        "Anyone who wants to learn about APIs",
        "Learners who want to know more about JSON and Data",
        "JavaScript Fetch and connecting to APIs",
        "Web masters",
        "Web designers",
        "Application Developers"
      ]
    },
    {
      "title": "Full Stack Machine Learning | Django REST Framework, React",
      "url": "https://www.udemy.com/course/full-stack-machine-learning-django-rest-framework-react/",
      "bio": "Learn to Build full-fledged Stock Prediction Portal using Python, Django REST Framework, React.js and Machine Learning",
      "objectives": [
        "REST API Development",
        "Backend Development with Django and Frontend with React JS",
        "Machine Learning with Neural Networks",
        "Deep Learning with LSTM Models",
        "Data Analysis, Data Manipulation and Data Visualization",
        "How to decide which type of machine learning to use for specific problems.",
        "Where deep learning comes in and how neural networks work.",
        "Why a neural network is the best choice for this specific stock prediction use case.",
        "Integration of Machine Learning Models with Web Applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How To Get The Most Out Of This Course",
          "Asking Questions & Getting Help"
        ],
        "Getting Started": [
          "Software Installation",
          "What is an API",
          "One more thing...",
          "What is REST API?"
        ],
        "Django REST Framework": [
          "Django Installation & Starting the Project",
          "Django Rest Framework Installation",
          "Web Application Endpoint",
          "Simple API Endpoint",
          "Create Model",
          "Manual Serialization",
          "Serializers",
          "Function Based View Get Method",
          "Storing Data Using Serializers",
          "Get A Single Object Primary Key Based Operation",
          "Update Operation On Student",
          "Delete Operation"
        ],
        "Class Based Views": [
          "Class Based Views Introduction",
          "Employee Model",
          "Employee Serializer",
          "Class Based View Get All Employees",
          "Class Based Creating Employee",
          "Getting Single Object",
          "Update And Delete Employee"
        ],
        "Mixins": [
          "Mixins Overview",
          "List And Create Model Mixins",
          "Retrieve Update Destroy Mixins"
        ],
        "Generics": [
          "Generics Overview",
          "ListCreateAPIView",
          "RetrieveUpdateDestroyAPIView"
        ],
        "Viewsets": [
          "Viewsets Introduction",
          "List And Create Data Using Viewsets",
          "Retrieving Single Object",
          "ModelViewsets"
        ],
        "Nested Serializers": [
          "Nested Serializers Introduction",
          "Blog And Comment Model",
          "Creating Serializers",
          "Nested Serializers Implementation",
          "Primary Key Based Operations On Blog Comment"
        ],
        "DRF Pagination, Filtering, Search and Ordering": [
          "Pagination Overview",
          "Global Pagination",
          "Custom Pagination",
          "Filtering",
          "Custom Filter Employee By Designation",
          "Custom Filter Employees By Name And ID",
          "Advanced Filtering",
          "Search Filters",
          "Ordering Filter",
          "Wrapping Up DRF"
        ],
        "React.js Introduction & Installation": [
          "React.js Introduction",
          "Components And Virtual DOM",
          "Pre-requisite For React",
          "Install Node.js",
          "Create React App Using NPX",
          "Create React Project With Vite",
          "Directory Structure",
          "Edit Default React App",
          "Deleting Default React App"
        ]
      },
      "requirements": [
        "Basic knowledge of Python & Django",
        "Basic Knowledge of HTML, CSS and JavaScript"
      ],
      "description": "Not just another course, this is a hands-on program where you’ll build a complete, stock prediction portal using Django REST Framework, React.js, and Machine Learning.\n\n\nCourse Flow:\nFirst, you'll learn the fundamentals of Django REST Framework, including what REST APIs are and how to create them. If you're already familiar with Django REST Framework, you can skip this section.\nNext, we'll dive into the fundamentals of React.js to build the front-end of our application.\nAfter that, we'll connect Django REST Framework with React.js to build the portal. This will include implementing a user authentication system and other essential features needed for a functional application.\nOnce the portal structure is ready, it's time to dive into machine learning. This course is not a Machine Learning Bootcamp, so it won’t cover every ML concept in detail. Instead, it takes a practical approach focused on building a stock prediction portal as a real-world use case.\nMachine Learning Section:\nThe basics of machine learning and its different types.\nHow to choose the right ML approach for a specific problem.\nWhen and why to use deep learning and how neural networks work.\nWhy a neural network is the best choice for this stock prediction use case.\nYou'll build an LSTM model in Jupyter Notebook to analyze stock price data and make predictions. Once the model is ready, you’ll create an API to integrate it with the portal and display the results.\nThis course gives you the full experience of building a real-world stock prediction portal—a full-stack project combining Django REST Framework, React.js, and machine learning.\nAdditional Skills You'll Learn:\nData manipulation using Pandas and NumPy.\nData visualization using Matplotlib.\nBy the end of this course, you'll have built a complete project while gaining hands-on experience in both web development and machine learning.\n\n\nImportant Disclaimer: This prediction model should NOT be implemented in real stock market trading. It is developed purely for educational purposes to help you understand the principles of machine learning and stock market data. Relying on this model for actual investments can lead to significant financial risks.",
      "target_audience": [
        "Beginner programmers who want to learn how to build web applications using Python, Django & React",
        "Developers with experience in other programming languages who want to transition to Machine Learning",
        "Students who are interested in pursuing a career in full stack machine learning development",
        "Anyone who wants to improve their knowledge of Django and build upon their existing Python skills",
        "Individuals who have some experience with Django but want to level up their skills by building advanced custom projects."
      ]
    },
    {
      "title": "CSS Animations: Learn CSS Animations from Scratch",
      "url": "https://www.udemy.com/course/css-animations-master-css-animations-within-3-hours/",
      "bio": "Create great looking CSS animations. Learn CSS animation on 13 projects.",
      "objectives": [
        "Create CSS Animations",
        "Master CSS Transitions",
        "Learn how to create great hover animations",
        "Learn how to use Keyframes",
        "Create 13 \"CSS animation\" Projects",
        "Master CSS Transformations"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Say Hello :)",
          "Install VisualStudio Code",
          "Install extensions"
        ],
        "CSS Animations, Button Animation": [
          "Transition",
          "What we will create?",
          "1# Button",
          "2# Button",
          "3# Button",
          "#4 Button",
          "#5 Button",
          "#6 Button",
          "#7 Button",
          "#8 Button"
        ],
        "2D Transformations": [
          "Rotate",
          "Scale",
          "Translate",
          "Skew",
          "Keyframes"
        ],
        "Spinners": [
          "What we will create?",
          "#1 Spinner",
          "#2 Spinner",
          "#3 Spinner",
          "#4 Spinner",
          "#5 Spinner"
        ],
        "BONUS: Discounts to my other courses!": [
          "BONUS: Discounts to my other courses!"
        ]
      },
      "requirements": [
        "Basic CSS and HTML"
      ],
      "description": "Pretty much every website have some animations, when you hover over an Item in menu or button, you can see the background change. When you look at slider you can probably see some cool 3D transition between slides.\nAll of these animations can be created using CSS.\n\n\nDo you want to Learn How to use CSS animation?\nWell, you have come to the right place, in this course I cover everything you need to know in order to create great looking CSS animations.\nI start off by explaining how transition works and all the things you can set.\nThen we use the gained knowledge and create 8 Buttons, Everyone of them will be somehow animated. using only CSS animations. Then we move on to Transformations. I explain how Rotate, Translate, Scale and Skew works and I also cover How keyframes works and how to use them. Then, once again, we will use the gained knowledge and create 5 Spinners.\nRequirements:\nBasic CSS and HTML knowledge\n\n\nWho should take this course:\nAnyone who wants to learn how to Animate web using CSS\nAnyone who wants to learn more about CSS animations\nAnyone who wants to improve their CSS animation skills\n\n\nWhat will you learn & archive:\nCreate CSS Animations\nMaster CSS Transitions\nMaster CSS Transformations\nLearn how to create great hover animations\nLearn how to use Keyframes\nCreate 13 \"CSS animation\" Projects",
      "target_audience": [
        "Anyone who wants to learn how to Animate web using CSS",
        "Anyone who wants to learn more about CSS animations",
        "Anyone who wants to improve their CSS animation skills"
      ]
    },
    {
      "title": "Web Development Revolution: ChatGPT Beginner's Mastery",
      "url": "https://www.udemy.com/course/chatgpt-for-web-development-beginners-guide-into-chatgpt/",
      "bio": "\"Unleash the Power of ChatGPT: A Beginner's Guide to Web Development with ChatGPT\" : JavaScript : Html : CSS & More!",
      "objectives": [
        "Understand the fundamental concepts of ChatGPT and its role in web development.",
        "Gain proficiency in HTML, CSS, and JavaScript, the foundational languages of web development.",
        "Learn how to integrate ChatGPT into web applications to enhance interactivity and user experience.",
        "Explore the different ways ChatGPT can be utilized, such as chatbot functionality and natural language processing.",
        "Develop the skills to generate dynamic and responsive content using ChatGPT's language generation capabilities.",
        "Acquire knowledge of best practices for integrating ChatGPT seamlessly into existing web development workflows.",
        "Gain insights into the ethical considerations and potential limitations when using ChatGPT in web development projects.",
        "Apply the learned concepts and techniques to build practical web applications that incorporate ChatGPT."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "CHATGPT For Web Development 101": [
          "Setup Visual Studio Code and ChatGPT",
          "Structuring the Web Design using HTML part 1",
          "Structuring the Web Design using HTML part 2",
          "Styling the Web Design using CSS part 1",
          "Styling the Web Design using CSS part 2",
          "Styling the Web Design using CSS part 3",
          "Styling the Web Design using CSS part 4",
          "Debugging the Web Design using CSS",
          "Making the Web Design Interactive using JavaScript"
        ],
        "ChatGPT FOR Javascript": [
          "part1 Setup Environment",
          "part2.1 Initializing Files",
          "PART2.5 Initializing Files",
          "part3 Styling the App",
          "part4.1 Learning Javascript With ChatGPT Part1",
          "PART4.5 Learning Javascript With ChatGPT Part1.5",
          "part5 Learning Javascript With ChatGPT Part2",
          "part6 Learning Javascript With ChatGPT Part3",
          "part7 Learning Javascript With ChatGPT Part4",
          "part8 Learning Javascript With ChatGPT Part5",
          "part9 Learning Javascript With ChatGPT Part6",
          "part10 Learning Javascript With ChatGPT Part7",
          "part11 Javascript Mini Project - Cat Photo Album",
          "part12 Learning Javascript With ChatGPT Part8",
          "part13 Javascript Mini Project - Rock Paper Scissors",
          "PART14.1 Building the App using custom API",
          "PART14.5 Building the App using custom API",
          "part15 Finalization of App"
        ],
        "Foundations of AI | Core Concepts and Principles in Machine Learning and NLP": [
          "Foundations of AI | Core Concepts and Principles in Machine Learning and NLP"
        ],
        "JavaScript : ChatGPT : Learning The Power Of AI": [
          "js-part1 - JavaScript Essentials | Hello World and Beyond",
          "js-part2 - JavaScript Variables Demystified | Part 1",
          "js-part3 - Unleashing the Power of JavaScript Variables | Part 2",
          "js-part4 - Advanced JavaScript Variables | Part 3",
          "js-part5 - Mastering JavaScript Strings | Manipulation and Operations",
          "js-part6 - JavaScript Increment and Decrement | Unlocking Numeric Manipulation",
          "js-part7 - Deep Dive into JavaScript Logical Operators | Logic and Boolean Op",
          "js-part8 - JavaScript Loops Unleashed | Iteration and Repetition",
          "js-part9 - JavaScript Conditionals | Exploring If-Else Statements",
          "js-part10 - Exploring JavaScript Case Statements | Versatile Decision-Making",
          "js-part11 - JavaScript Functions Revealed | Part 1",
          "js-part12 - Advanced JavaScript Functions | Part 2",
          "js-part13 - JavaScript Objects | Manipulating and Organizing Data",
          "js-part14 - JavaScript Error Handling | Try-Catch Blocks Demystified",
          "js-part15 - Harnessing the Power of JavaScript Callback Functions",
          "js-part16 - JavaScript Promises Unveiled | Part 1",
          "js-part17 - Advanced JavaScript Promises | Part 2",
          "js-part18 - Building Personal Chatbots | Part 1 - AI-Powered Conversational Inte",
          "js-part19 - Building Personal Chatbots | Part 2 - Integration of APIs and Serv",
          "js-part20 - Personal Chatbots Empowered | Part 3 - Implementing Natural Language",
          "js-part21 - Elevating Conversational Experiences | Sentiment Analysis, Context",
          "js-part22 - Advanced Dialogues and User Interactions | Handling Complexity",
          "js-part23 - Deploying Personal Chatbots | Strategies for Efficient Implementate",
          "part24 - ChatGPT Clone | Building an AI Conversation Model - Part 1",
          "part25 - ChatGPT Clone | Building an AI Conversation Model - Part 2",
          "part26 - ChatGPT Clone | Building an AI Conversation Model - Part 3",
          "part27 - ChatGPT Clone | Building an AI Conversation Model - Part 4",
          "part28 - Deploying ChatGPT Clone | Taking Conversational AI Live"
        ]
      },
      "requirements": [
        "Need to have access to a computer",
        "Need to be ready to learn!"
      ],
      "description": "Are you ready to revolutionize your web development skills with the power of artificial intelligence? In this comprehensive course, we invite you on an exciting journey into the world of ChatGPT and its application in web development. Whether you're a complete beginner or an experienced developer looking to enhance your skill set, this course is designed to equip you with the knowledge and tools to leverage ChatGPT effectively.\nThroughout this course, you'll embark on a step-by-step learning experience, starting from the fundamentals and gradually progressing towards more advanced techniques. We'll cover the essentials of web development, exploring HTML, CSS, JavaScript, and their integration with ChatGPT. By the end of the course, you'll have a solid understanding of how to incorporate ChatGPT into your web projects, enhancing user experience and interactivity.\nThrough hands-on exercises and real-world examples, you'll gain practical skills in utilizing ChatGPT's language generation capabilities to create dynamic and responsive web applications. You'll learn how to integrate ChatGPT seamlessly with your web development workflow, enabling chatbot functionality, natural language processing, and intelligent responses.\nJoin us in this immersive learning experience and unlock the potential of ChatGPT for web development. Enhance your projects with AI-driven interactivity and create engaging user experiences. Enroll now and embark on your journey to becoming a proficient ChatGPT web developer.",
      "target_audience": [
        "This course is for beginners in the ChatGPT & Web Development space"
      ]
    },
    {
      "title": "Core: A Web App Reference Guide for Django, Python, and More",
      "url": "https://www.udemy.com/course/coding-for-entrepreneurs-core/",
      "bio": "A comprehensive guide to launching and building your own web project using Django & Python. Made for Non-Technicals.",
      "objectives": [
        "Learn Django & Python Fundamentals",
        "Learn jQuery Fundamentals",
        "Learn Web Development Process",
        "Keep as a long-term reference guide"
      ],
      "course_content": {
        "Welcome to CORE": [
          "Welcome to Coding for Entrepreneurs",
          "Why Even Learn?",
          "What we will learn",
          "Who's this For? Not Just Entrepreneurs...",
          "How this class works.",
          "What else is out there? Wordpress, Ruby on Rails, Joomla, and Shopify..",
          "Getting Help"
        ],
        "Setup your Computer": [
          "Install the Tools you Need",
          "System Setup Links",
          "Notes on Text Editors"
        ],
        "Web Basics": [
          "Domain Names + buying them, Website Hosting, and Understanding Paths.",
          "Local vs Live (Development vs Production)",
          "Front End vs Backend"
        ],
        "Introduction to Python": [
          "Start Here",
          "Your Python Introduction",
          "Numbers",
          "Numbers Part 2",
          "Strings",
          "Storing Data: Lists",
          "Storing Data: Dictionary",
          "Loops : For & While",
          "Python Built-in Library of Functions",
          "Third Party Packages & Next Steps"
        ],
        "Introduction to HTML/CSS": [
          "Start Here",
          "Build an HTML Website",
          "Add Images",
          "Add Pages to your HTML Website.",
          "Add CSS",
          "What's Next?"
        ],
        "Try Django: Build an MVP Landing Page": [
          "Try Django -- An Introduction to Coding for Entrepreneurs",
          "Now What?",
          "Welcome to Try Django 1.7",
          "Apps & Migrations (new in Django 1.7)",
          "Django Admin",
          "Views & Urls",
          "Setting Up Static Files",
          "Templates & Using Static Files",
          "Add Bootstrap (v. 3.1.1)",
          "Customize Bootstrap",
          "Update Templates with Blocks and Urls",
          "Add A Form",
          "Setup to Send Email",
          "Django Context",
          "Django Crispy Tags & More Bootstrap",
          "Login, Logout, & Authentication with Django AllAuth",
          "Customize Django All Auth Templates",
          "Login Required & Template Updates",
          "Start Checkout Process with Stripe",
          "Checkout with Stripe Part 2",
          "Django Signals",
          "Stripe Customer & Charges & Cards| All Together",
          "Beta Wrap Up"
        ],
        "Bootstrap Basics": [
          "Welcome",
          "Button Label & Alert Colors",
          "Navbar",
          "CSS Sprites to use an Image as your Logo",
          "Grid System",
          "Add Bootstrap To Django Admin with Django Admin Bootstrapped",
          "Bootstrap Basics"
        ],
        "Introduction to jQuery": [
          "Introduction",
          "General Setup",
          "Load Custom Javascript File",
          "Selector Basics",
          "Prevent Default (actions)",
          "Fading objects"
        ],
        "Django Project": [
          "How to Start a New Project",
          "Virtual Environments (Usage, Benefits, Requirements.txt)",
          "Layout Structure"
        ],
        "Django Views: Function Based Views": [
          "Function Based Views",
          "Render & Render_to_Response",
          "Context",
          "Forms in Views using ModelForm"
        ]
      },
      "requirements": [
        "Interest in building Web Applications",
        "Ready to learn through the struggles",
        "Mac OS X (Mavericks)",
        "Windows XP or Higher",
        "Linux (recommended: Ubuntu 12)"
      ],
      "description": "Coding for Entrepreneurs CORE is a comprehensive guide to help you build better projects. Updated August 17 2015\nThis course is designed as a compliment to all Coding For Entrepreneurs Projects and will help you better understand Django, Bootstrap, Python, jQuery, and more.\nWe have worked with over 100,000 students worldwide and it allows us to continually improve our content and our ability to help entrepreneurs build better projects.\nYou can be anything you want to be. This has always been true but even more so now thanks to incredible people working hard around the world to both learn and teach. We strive to help you become a better entrepreneur by helping you better understand the fundamentals of the technology that is changing all of our lives for the better.\nAnything that can be automated, will be. Who is going to be doing the automating? Who will be designing the systems? Who will be rebuilding the systems? Who will be managing the systems?\nIt's an incredible time to be an entrepreneur. Join us, we'd like to work with you to improve our skills together.\nCheers,\nJustin Mitchel Founder Coding For Entrepreneurs",
      "target_audience": [
        "Non-Technical Entrepreneurs",
        "Beginning Programmers",
        "Any age"
      ]
    },
    {
      "title": "Make Visual Novels with Ren'Py",
      "url": "https://www.udemy.com/course/make-visual-novels-with-renpy/",
      "bio": "Getting Started With Ren'Py",
      "objectives": [
        "Create your own Visual Novel with Text, Images, and Music"
      ],
      "course_content": {
        "Introduction": [
          "What is a Visual Novel anyway?",
          "Why RenPy?",
          "RenPy Installation and Setup",
          "How to Navigate the RenPy Documentation"
        ],
        "RenPy Basics": [
          "File System and Structure",
          "Characters and Say Statements",
          "Showing Images",
          "Variables and Python",
          "Control Flow",
          "Exercise: Control Flow",
          "Exercise: Control Flow Solution",
          "Sound and Music",
          "Basic GUI Customization",
          "Final Project"
        ]
      },
      "requirements": [
        "You should be familiar with basic computer skills, such as installing programs"
      ],
      "description": "Have you ever wanted to tell a story with a game? Consider making a Visual Novel. This course is perfect for beginners, as I'll take you step-by-step through what you need to know to make a Visual Novel in Ren'Py.\nIf you already feel that you have a grasp on the basics, then there is no need to take this course, but keep an eye out for more advanced ones that are on their way!",
      "target_audience": [
        "Anyone who wants to make Visual Novels or other games with Ren'Py"
      ]
    },
    {
      "title": "Master Bulma CSS framework and code 4 projects with 14 pages",
      "url": "https://www.udemy.com/course/bulma-responsive-web-design-and-development/",
      "bio": "Master the latest version of Bulma and create real projects and themes while learning HTML, web design and coding",
      "objectives": [
        "Learn how to create and use all elements, components and modifiers of the Bulma framework",
        "Learn how to create four different responsive websites using the Bulma framework",
        "Practice with 44 coding exercises and a special built Bulma Learning Kit (100+ source files)",
        "Master the latest version of Bulma",
        "How to creating fluid and responsive layouts",
        "How to use breakpoints and the grid system",
        "How to structure all kinds of content",
        "How to use all the modifiers",
        "How to create all kinds of forms",
        "How to build all of the 11 elements",
        "How to build all of the 10 components",
        "How to add icons with Font Awesome 5",
        "Project 1: Create a resume and CV page with Bulma",
        "Project 2: Create a small business website with Bulma",
        "Project 3: Create a knowledge base with Bulma",
        "Project 4: Create an online forum"
      ],
      "course_content": {
        "Introduction": [
          "About the course",
          "Projects Overview and Demos",
          "Understanding Bulma",
          "Responsiveness",
          "Colors",
          "Downloading and installing Bulma v0.9.1",
          "Downloading and installing Font Awesome v5.1.0",
          "Bulma Learning Kit"
        ],
        "Helpers": [
          "Color",
          "Color: Text Color",
          "Color: Background Color",
          "Spacing",
          "Typography",
          "Typography: Text Weight",
          "Typography: Text Transformation",
          "Typography: Responsive Text Alignment",
          "Typography: Responsive Text Size",
          "Visibility",
          "Visibility",
          "Flexbox",
          "Other",
          "Other"
        ],
        "Columns": [
          "Basics",
          "Sizes",
          "Responsiveness",
          "Nesting",
          "Gap",
          "Options"
        ],
        "Layout": [
          "Columns",
          "Container",
          "Container",
          "Hero",
          "Hero",
          "Section",
          "Section",
          "Footer",
          "Footer",
          "Level",
          "Media Object",
          "Tiles"
        ],
        "Forms": [
          "General",
          "Form - Control",
          "Form - Field",
          "Form - Addon",
          "Input",
          "Input",
          "Textarea",
          "Textarea",
          "Select",
          "Select",
          "Checkbox & Radio Button",
          "File"
        ],
        "Elements": [
          "Block",
          "Box",
          "Box",
          "Button",
          "Button: Default Button",
          "Button: Button Colors",
          "Button: Button Sizes",
          "Button: Button Styles",
          "Button: Button States",
          "Content",
          "Content",
          "Delete",
          "Delete",
          "Icon",
          "Icon",
          "Image",
          "Image",
          "Notification",
          "Notification",
          "Progress",
          "Progress",
          "Table",
          "Table",
          "Tag",
          "Tag",
          "Title",
          "Title"
        ],
        "Components": [
          "Breadcrumb",
          "Default Breadcrumb",
          "Various Breadcrumbs",
          "Card",
          "Card",
          "Dropdown",
          "Menu",
          "Message",
          "Default Message",
          "Message Colors",
          "Message Sizes",
          "Modal",
          "Modal",
          "Navbar",
          "Pagination",
          "Default Pagination",
          "Various Paginations",
          "Panel",
          "Tabs",
          "Default Tabs",
          "Tabs Styles"
        ],
        "Extensions": [
          "Extensions – Overview",
          "Accordion",
          "Badge",
          "Calendar",
          "Carousel",
          "Checkradio",
          "Divider",
          "Page Loader",
          "Pricing Table",
          "Quickview",
          "Slider",
          "Steps",
          "Switch",
          "Tags Input",
          "Timeline",
          "Toast",
          "Tooltip"
        ],
        "Project 1: Resume and CV Page": [
          "About the Project",
          "Setup and Basic Structure",
          "Box – Introduction",
          "Box – Work Experience",
          "Box – Education",
          "Box – Testimonials",
          "Box – Contact Info",
          "Box – Portfolio",
          "Box – Skills"
        ],
        "Project 2: Small Business Website": [
          "About the Project",
          "Installing Bulma and Font Awesome",
          "Home – Navigation",
          "Home – Hero",
          "Home – Notification",
          "Home – What We Do",
          "Home – News",
          "Home – Footer",
          "Services",
          "About – Our Story",
          "About – Our Office",
          "About – Our Clients",
          "Team",
          "Contact – Address",
          "Contact – Opening Hours",
          "Contact – Message",
          "Contact – Map"
        ]
      },
      "requirements": [
        "Basic understanding of HTML",
        "A text editor and a browser"
      ],
      "description": "ABOUT\nBulma - one of the world's most popular front-end frameworks!\nThis course covers all the different parts of the latest version of one of the world's most popular front-end framework, Bulma 0.9.1. Bulma has been used by thousands of people around the world and have been carefully developed to cover a wide range of typical user interfaces.\nWeb pages built with Bulma works across all kinds of devices, browsers and screen sizes and will have a clean and modern design.\nThis course is for the beginner who want to learn Bulma from the bottom up. It goes through all the different parts, but each lecture can be watched independently.\nIn addition to just learning about the different parts of Bulma you will find a detailed walk-through of how to build four different responsive and modern complete projects using only Bulma.\nPROJECTS\nCreate the following projects with Bulma\nProject 1: Resume and CV Page\nProject 2: Small Business Website\nProject 3: Knowledge Base\nProject 4: Online Forum\nLEARNING STYLE\nMore than just video lectures\nIn addition to the video lectures this course contains the following kinds of learning materials:\n44 coding exercises:\nA total of 301 automatic tests against your code. This is one of the best ways to learn how to code - no downloads or installations required.\nBulma Learning Kit: Downloadable ZIP file that works offline A custom built learning kit with source code for all parts of Bulma. Features a reference section with many examples and a practice section, which you can use while learning about Bulma. More than 100 source files included in this learning kit.\nUPDATES\nUpcoming future updates for this course will include the following:\nNew projects will be added: online shop, social network, portfolio, CMS admin, dashboard and more...\nNew components, utilities and other features in future versions of Bulma will be added\nAdvanced section on how to customize Bulma with Sass\nQuizzes and assignments\nTESTIMONIALS\nDon't take my word for it – read what other students are saying:\nGreat and detailed explanation\n– Vasil Murvanidze\n(...) quick and concise explanation from the instructor.\n– Elin Marte\nExcellent course !!\n– Rohit Singh\nWhat a great course on such a simple, almost intuitive CSS framework! While going thru 40-plus exercises was draining, it did drive home the points. Loved the resource/starter kit that was provided. Very useful.\n– Mark Orlando\nIf you want to learn Bulma, this is the course to buy. (...) The course is direct to the point and it doesn't waist your time. At the end you'll know everything you need about Bulma.\n– Nelson Prado\n(...) i am looking forward to the projects which seem to be promising :D\n– Martin Nirtl\nI'm enjoying the course, the explanation (...)\n– Leonardo Isso Campos de Oliveira",
      "target_audience": [
        "Anyone who wants to learn how to make responsive and modern websites with Bulma",
        "Anyone who wants to learn how to make quick prototypes",
        "Anyone who wants to learn a new and popular CSS framework"
      ]
    },
    {
      "title": "Web Application with React JS and Redux",
      "url": "https://www.udemy.com/course/web-application-with-react-js-and-redux/",
      "bio": "Learn modern web application with React JS and Redux. Master React Router, React Portals, Redux and create React app!",
      "objectives": [
        "React JS",
        "Dive in ReactJS",
        "Become React Developer",
        "Build single page applications with React JS",
        "Components, Props, States and Component Life Cycle Methods in React JS",
        "Create reusable React Components",
        "Learn modern JavaScript, ES6",
        "Learn to connect to an external API",
        "User Inputs, Forms and Events in React",
        "Routing with React Router",
        "Using React Portals to render Children Outside the DOM Hierarchy",
        "React-Router, React-Portal and Redux libraries used with React JS",
        "Create multi-page web applications with React-Router",
        "How to manage the data of our application with the Redux library",
        "How to easily access the data we hold globally from our components",
        "Learn how to manipulate the data stored in the Redux store by creating actions",
        "This course is ideal for people who have a basic knowledge of HTML, CSS and JavaScript",
        "Each aspect of creating websites and applications entails a unique set of skills.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "What are the steps to becoming a web developer? Some web developers will obtain a degree or certification in the field.",
        "How long does it take to become a Web Developer? The answer to this question will depend on you.",
        "The more time you spend developing your skills, the faster you can become a web developer.",
        "The good news is that web development generally uses light-weight code that is easier to learn than many other languages.",
        "Learn more about React React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop",
        "What is React? React is a front-end library in Javascript that was developed by Facebook.",
        "What is React used for? React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard",
        "How does React work? React encourages engineers to write code using a Functional Programming approach.",
        "Is React worth learning? Yes, React is worth learning. There are a couple of reasons.",
        "The first one is that React is in high demand in the software development job market and has been for a few years.",
        "Is React hard to learn? Every technology or programming language has a learning curve, and React is no different.",
        "What is the difference between React Native and ReactJS, and which one should I learn? React, or React JS, is a front-end Javascript library for building UI com",
        "Why is React so popular? There are many reasons why React is popular. One reason is that Facebook developed it.",
        "Learn more about Bootstrap Bootstrap is a free frontend web development framework for creating responsive websites."
      ],
      "course_content": {
        "What We Will Learn?": [
          "What We Will Learn?",
          "React Project Files and Course Documents",
          "FAQ about Web Application with React, Redux"
        ],
        "What Is React and Why Should We Use React?": [
          "Why a Library or Framework Is Needed",
          "What is React?",
          "Why Should we use React",
          "quiz"
        ],
        "First Look at React": [
          "React vs Vanilla JavaScript",
          "Setting up our Development environment.",
          "Look at React Official Documentation",
          "Pure React",
          "Setting up a project with create-react-app",
          "quiz"
        ],
        "Working With Components Props and JSX": [
          "Rendering the root component",
          "Debugging",
          "Creating and reusing a component",
          "What is JSX",
          "Creating more component",
          "JavaScript logic in component",
          "Separation of concerns",
          "Styling React applications",
          "Props",
          "Props & one-way data flow",
          "Rendering list",
          "Conditional Rendering 1",
          "Conditional Rendering 2",
          "Extraction JSX into a new component",
          "Destructuring props",
          "React fragments",
          "Dynamic Classes"
        ],
        "State, Events, and Forms": [
          "Section Overview",
          "Let’s build a new project",
          "Handling Events",
          "What is state?",
          "Creating a state with useState",
          "Set state manually!",
          "Adding open-close button",
          "React Developer Tools",
          "Updating state based on current state",
          "quiz"
        ],
        "Shopping List and Fundamentals of State Management": [
          "Introduction of the Application",
          "Creating the layout",
          "Rendering a list component",
          "Rendering a form component",
          "Controlled Elements",
          "Let’s think about state",
          "Lifting state up",
          "Deleting an item",
          "Updating an item",
          "Calculating package quantities",
          "Shorting items",
          "Quiz - React JS, React, Redux"
        ],
        "Sample Application – Language Card": [
          "Application Introduction",
          "Project Setup",
          "Components Structure",
          "Let’s start using data",
          "Let’s start Creating the card structure"
        ],
        "Class-Based Component and LifeCycles Hooks": [
          "Class-Based Component",
          "Counter example with Class-Based component",
          "Working with event handlers",
          "Class-Based component vs Functional component",
          "Quiz"
        ],
        "useEffect Hook and Data Fetching": [
          "useEffect Hook",
          "Counter example with useEffect hook",
          "Dependency Array",
          "Clean-Up function",
          "useState + useEffect + Data fetching",
          "Project Structure",
          "Component structure & styling",
          "Using an async function & axios",
          "Quiz - React JS, React, Web Development"
        ],
        "Custom Hook and Refs": [
          "Section Overview",
          "Refs",
          "Why we use useRef Hook",
          "Refs to select DOM elements",
          "What is this Custom Hook",
          "Custom Hook counter example",
          "quiz"
        ]
      },
      "requirements": [
        "No prior knowledge is required!",
        "A Windows PC, Mac or Linux Computer",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don’t need to be an expert",
        "Es6 knowledge would be beneficial but not required",
        "Desire to learn React and Redux",
        "Desire to learn web application with react js, redux",
        "Desire to learn web application with react redux",
        "Desire to learn react js, redux",
        "Desire to become web developer, react developer, front end web developer",
        "Desire to learn frontend web app development, website development with react js and redux",
        "Desire to learn full stack react js with redux",
        "Desire to learn web app development with react js, redux",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to Web Application with React JS and Redux course\nLearn modern web application with ReactJS and Redux Master React Router, React Portals, Redux and create React app!\nReact is one of the best choices for building modern web applications If you are new to React or maybe you've been struggling to learn and truly understand what’s going on then this course is the best way for you to learn ReactJS\nIn this course, we will take you through everything you need to know to master web development using React JS and Redux by providing powerful knowledge through a mixture of diagrams and the creation of a simple application\nEach aspect of creating websites and applications entails a unique set of skills Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills\nThe world of web development is as wide as the internet itself Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from\nReact is an essential Javascript framework for web development It is the most popular framework for developing web, mobile, and desktop app user interfaces\nNo Previous Knowledge is needed!\nYou don’t need to have previous knowledge about React and Redux This course will take you from a beginner to a more advanced level with hands-on examples\nYou will be confident in using both React JS, Redux and if you ever get stuck, we will be there to help\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS In this course, we will be teaching React and Redux by creating various projects ate React app\n\nWe have explained React and Redux from beginner to all levels We have explained all the topics as simple as possible with examples, slides and diagrams\nWe have created a lot of projects while explaining the subjects Because we believe that applied educations are much more useful than other teaching methods\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels\n\nHere is the list of what you’ll learn by the end of the course,\nHow to create a Single Page Web Application with React JS\nThe most important React topics like components, props, state and component life cycle methods\nHow to send a request to an api and fetch data\nHow to create a multi-page web app with react-router\nHow to manage the data of our application with the redux library\nHow to perform asynchronous operations with Redux-thunk\nHow to easily build the largest and most advanced applications using React and Redux\nWeb application development\nWeb Application\nReact js, react, reactjs, react application\nReact redux\nReact\nReact native, react js, reactjs, redux, react redux, redux react, reactjs redux, react redux typescript\nmodern react with redux\nreact web applicaiton\nWeb application security\nReact, react native,\nreact js, reactjs, redux, react redux, redux saga,\nredux react, angular react, reactjs redux, react redux typescript\nweb app development\nfront end web development\nwebsite development\nweb application with react, redux\n\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website You can break web development into two different categories: frontend (client-side) and backend (server-side) Frontend code executes on the user's computer This can include HTML, JavaScript, and CSS Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP Web development does not necessarily include the design process — it focuses on code A web designer builds wireframes to mockup their vision for a website and then shares that with a developer The developer is responsible for writing the code that implements the design\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field So, it is more important that you know how to show off your skills You could highlight your skills through relevant work experience or a portfolio of past projects You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development You need these three essential elements to create a modern website and work as a frontend web developer HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone CSS (Cascading Style Sheets) styles the content JavaScript controls the interactive elements of the website\nHow long does it take to become a Web Developer?\nThe answer to this question will depend on you The more time you spend developing your skills, the faster you can become a web developer The good news is that web development generally uses light-weight code that is easier to learn than many other languages If dedicated, you can learn the basics of web development in a couple of months But good web developers never stop learning A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing The more you code, the more you will run into problems or find bugs in your code A significant aspect of web development is solving problems and debugging code The better you get at solving problems and tracking down bugs, the faster you will get at coding\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook The simplest definition of React is that it is a user interface library used for building UI components for the web But if that was all React did, it would be little more than a template library Developers define components in React by using an HTML-like syntax called JSX These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM) These features give React components the ability to react dynamically and efficiently to changes in their state A set of simple components in React can be composed into either simple single-page applications or large, complex web applications\nWhat is React used for?\nReact is an open-source JavaScript frontend library Some developers consider it a frontend framework because it does more than standard libraries usually do The most common use of React is to build dynamic user interfaces for single-page web applications But the structure of React makes it useful for more than just creating websites JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element But JSX can be used as an interface for things other than HTML React Native uses React to build mobile applications Here, JSX becomes an interface for mobile UIs instead of HTML There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach Engineers create components, which are normal Javascript functions These functions return information to tell React what content should be displayed on the screen The real power of React comes from the ability to nest or compose these functions inside of one another This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application Libraries, on the other hand, assist in building a single aspect of an application With this in mind, React is a library It assists engineers in presenting HTML in the browser React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built\nIs React worth learning?\nYes, React is worth learning There are a couple of reasons The first one is that React is in high demand in the software development job market and has been for a few years If you learn to code in React and can do it well, you will increase your chances of finding a job This alone is another reason it is worth learning Website users no longer will settle for old-fashioned sites that won't update without a page reload React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience React has also been around a few years and has stood the test of time A large portion of websites, both small and large, use React as a frontend framework\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different But it is easy to learn if you are dedicated and determined to create frontend web applications To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning Since React is a Javascript framework, a solid grounding in Javascript will give you a head start With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different In React, web components are generated In React Native, the generated components interact with a phone's native APIs If your focus is web development, then you should learn React If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native\nWhy is React so popular?\nThere are many reasons why React is popular One reason is that Facebook developed it The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications React also solved many of the past issues that developers had with developing single-page applications (SPAs) React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs One feature that makes it better than past libraries is that React is relatively easy to use Its components are reusable, plus React's use of the virtual DOM makes it very performant React should remain popular in the future as each new release brings new features and performance improvements\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increases its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer You will always have up-to-date content for this course at no extra charge\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWeb Application with React JS and Redux\nWe offer full support, answering any questions\nSee you in the class!",
      "target_audience": [
        "Beginners who wants to be React developer",
        "Anyone who wants to become an React Developer",
        "Anyone who wants to build amazing React single page web applications",
        "Developers who want to take their development skills to the next level and learn a future-proof technology",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Anyone who wants to learn Redux, React-Router and React-Portals",
        "Anyone who wants to learn today's most popular front-end architectures",
        "Students who want to take their Web development skills to the next level",
        "People who want to become web application, react application",
        "People who want to learn react js, react, react redux",
        "People who want to learn react js, redux, react redux",
        "People who want to create web application, react application with react js and redux",
        "People who want to learn web application development, react js web application",
        "People who want to create web apps with react js, react redux",
        "A total beginner, with a curious mind and wants to be a web developer"
      ]
    },
    {
      "title": "Complete Guide to Redux-Toolkit & RTK Query with React JS",
      "url": "https://www.udemy.com/course/complete-guide-to-redux-toolkit-rtk-query-with-react-js/",
      "bio": "Become a master by learning modern Redux concept like Redux Toolkit and RTK Query with React",
      "objectives": [
        "Master fundamental concepts behind structuring Redux-toolkit applications",
        "API call with createAsyncThunk middleware",
        "CRUD Operation in React with Redux-toolkit",
        "Learn different design framework like MDB and Ant Design",
        "Form development with React",
        "HTTP Rest API Call with RTK Query",
        "CRUD Operation in React with RTK Query",
        "Learn Modern React JS Hook",
        "Learn Functional Component with React",
        "Learn Redux-Saga integration with Redux-Toolkit",
        "Learn to persist data using Redux-Persist with Redux-Toolkit",
        "Learn some typesript with React",
        "Learn to integrate 3rd party API with RTK Query",
        "Learn to Implement Authentication using RTK Query",
        "Learn to implement Firebase/Firestore integration using RTK Query",
        "Learn to use React-Query with Redux-Toolkit",
        "Learn to use GraphQl Apollo Client with Redux-Toolkit"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Redux and why we use it ?",
          "Understand Redux Core Principles",
          "Core problem of React",
          "What is Redux Toolkit ?",
          "Understand Redux Toolkit API",
          "Environment Set-Up"
        ],
        "Understand Redux-Toolkit": [
          "Intro",
          "Starter code overview",
          "Create blog slice",
          "List blogs",
          "Create blog selector",
          "Create action to add blog",
          "Understand immer js role in slice",
          "Dispatch an action to Add blog",
          "Use prepare callback",
          "Redux-dev tool",
          "Create Users slice",
          "List users in dropdown",
          "Modify action & prepare callback",
          "Post blog with user",
          "Write redux action for Like/Unlike",
          "Show Like/Unlike count using action",
          "Wrap-Up"
        ],
        "Project 1 - Cocktail App with Redux Toolkit": [
          "App Demo",
          "Understand createAsyncThunk",
          "Set-Up",
          "Structuring App",
          "Working on Header",
          "Configure and Writing 1st action with Redux Toolkit",
          "Search Component",
          "Render Cocktails using Redux Toolkit Actions",
          "createAsyncThunk Action to Fetch Single Cocktail",
          "Working on Single Cocktail",
          "Searching with createAsyncThunk Action",
          "Wrap Up"
        ],
        "Project 2 - CRUD with Redux Toolkit": [
          "App Demo",
          "Set-up",
          "Structuring",
          "Basic Form",
          "Configuration & Writing GET Action using createAsyncThunk",
          "Dispatch GET createAsyncThunk Action",
          "Adding Buttons",
          "DELETE with createAsyncThunk",
          "POST action with createAsyncThunk",
          "Create Post Form",
          "Dispatch POST createAsyncThunk action",
          "PUT action with createAsyncThunk",
          "Populate Post Data on Form",
          "Dispatch PUT createAsyncThunk action to Update",
          "Wrap Up"
        ],
        "Understand RTK Query": [
          "What is RTK Query ?",
          "App Demo",
          "Project Overview",
          "Creating apiSlice & writing 1st RTK Query",
          "Wiring apiSlice in React App using ApiProvider",
          "useGetTodos Query in TodoList",
          "Adding mutation in apiSlice",
          "Apply Mutation in TodoList",
          "Understand cached data",
          "Tags, invalidating cache and auto-refetching",
          "Transforming response"
        ],
        "Project 3 - RTK Query Random User App": [
          "App Demo",
          "Project Set-up",
          "App Cleaning-Up",
          "Configure RTK and Writing 1st Query",
          "Render Random User - Part 1",
          "Render Random User - Part 2",
          "Wrap Up"
        ],
        "Project 4 - RTK Query CRUD App": [
          "App Demo",
          "Set-up",
          "Structuring Project",
          "Configure and Writing First RTK Query",
          "Show Data with RTK Query",
          "Handling Error with RTK Query",
          "Working on POST RTK Query",
          "Working on Form",
          "Use RTK Query to Add Data",
          "DELETE with RTK Query",
          "Fetch Single Contact with RTK Query",
          "Populate Form Data",
          "Update Data",
          "Wrap Up"
        ],
        "Project 5 - Movie App with Redux-Saga & Redux-Toolkit": [
          "App Demo",
          "Redux-Saga Overview",
          "What is Generator function ?",
          "Project Set-up",
          "Configure OMDB Movie API Key",
          "App Structure and Cleanup",
          "Configure Redux-Toolkit & Redux-Saga",
          "Enable Routing",
          "Working on Actions & API - Fetch Movies",
          "Working on Saga - Fetch Movies",
          "Working on Search",
          "Handle Error",
          "Render Movies List Item",
          "Action, API & Saga - Fetch Single Movie",
          "Redux Saga effect cheat sheet",
          "Single Movie Page",
          "Wrap Up"
        ],
        "Project 6 - Redux-Persist with Redux-Toolkit (Shopping Cart)": [
          "App Demo",
          "Set-up Project and Folder Structure",
          "Configure Redux-Toolkit",
          "Navbar",
          "Shopping Cart",
          "Writing Get Cart Total Redux Action",
          "Increase, Decrease and Remove Redux Action",
          "Empty Shopping Cart using Redux Action",
          "Persist Cart value using Redux-Persist",
          "Wrap Up"
        ],
        "Project 7 - Recipe App with 3rd Part API using RTK Query": [
          "Intro",
          "Configure Edamam Recipe API",
          "Project Set-Up",
          "Folder Structure",
          "Configure Store & RTK Query",
          "Navbar & Search Input Field",
          "List Recipes in Card",
          "Search Recipe & Spinner",
          "Get Recipes on Health Category",
          "Show Recipe Detail on Modal",
          "Working on Types",
          "Wrap Up"
        ]
      },
      "requirements": [
        "Some sort of HTML, CSS and JavaScript knowledge required.",
        "Basic understand of ES6 module",
        "Basic React knowledge will added an Advantage.",
        "Redux knowledge required little bit but I will explain everything from scratch.",
        "No prior working experience required with JSON server."
      ],
      "description": "Become a highly-demanded Frontend developer by adding the Redux-Toolkit Skill set into your React knowledge. This course is designed in such way that anybody can get enroll into this course who wanted to enhance their Redux concept.\n** Best thing about this course is that it will get updated time to time whenever new concept get added into Redux-Toolkit package along with new project will also get added frequently in this course. Initially, I launch this course with 4 project. Now, it has 11 project . So, it will keep getting updated**\nThis project-based course will have you coding right away. Building application with the help of React and Redux-Toolkit in this course will sharpen your skills in modern web development.\nWith the help of createAsyncThunk middleware and RTK Query, you will get know how to work with api in React Application. And I am sure after taking this course you will become master to implement Redux-Toolkit in any one of your existing React application.\nYou will also able to learn how to integrate Redux-Saga middleware with Redux-toolkit by building a Movie App using 3rd party API.\nYou will also able to persist your data by using library called Redux-Persist with Redux-toolkit by building a Shopping Cart App.\nYou will also going to implement JWT authentication using RTK-Query by building Authentication App.\nYou will also going to implement firebase using RTK-Query by building a Blog App in which we learn to write different firebase query to perform CRUD feature and in that app we will be using cloud firestore database\nIn this course, you will learn below key concept related to Redux-Toolkit & RTK Query with React:\nHow Redux-toolkit fits into a front end single page application with React?\nWhat is Redux-Toolkit and it's API ?\nHow to configure store with Redux-Toolkit ?\nHow to configure Redux-Saga with Redux-Toolkit ?\nLearn different Redux-Toolkit API like createSlice, configureStore, createAction, createReducer & createAsyncThunk\nHow to make an API request with Redux-Tookit using createAsyncThunk middleware and deal with the response ?\nUnderstanding different promise lifecyle that get generated by createAsyncThunk middleware.\nWhat is RTK Query and it's API ?\nLearn different RTK Query API like createApi & fetchBaseQuery\nWriting different RTK Query to make HTTP Rest Api request\nError handling with RTK Query\nYou will learn to use sagas with Redux-Toolkit\nYou will able to persist data using Redux-Persist with Redux-Toolkit.\nJWT authentication using RTK Query\nYou will learn to use GraphQL Apollo Client with Redux-Toolkit\nYou will learn implementation of React Query with Redux-Toolkit\nLearn different design framework like MDB5, MUI , Bootstrap 4 & 5 and Ant Design to build React component.\nWhat you will build in this course ?\nFirst we will start with some theoretical concept like we will try to understand core problem of React and why we use Redux with React ?\nAfter that we will build 4 application with Redux-Toolkit and RTK Query to help you understand how React and Redux-Toolkit work together.\nIn this course, you will also learn to build full React CRUD application with the help of Redux-Toolkit & RTK Query using JSON Fake server. For beginner React developer, sticking to JSON-server is recommended.\nWe will be also learning different design framework like Material Design Bootstrap 5 and Ant Design in this course to work on our React component like Table, Form, Button, Card and many more component we will build with the help of Material Design Bootstrap 5 and Ant Design.\n\n\nBelow future project going to include in this course.\n1. JWT Authentication with RTK Query (Released).\n2. Recipe App using 3rd part Api key with RTK Query (Released).\n3. Integrate firebase with RTK Query (Released).\n4. Redux Toolkit with Graphql and Apollo Client (Expected to release in June)",
      "target_audience": [
        "The course is designed for Beginner React Developer who wanted to learn the implementation of Redux-Toolkit with React"
      ]
    },
    {
      "title": "Webpack 1 & 2 - The Complete Guide",
      "url": "https://www.udemy.com/course/webpack-complete-guide/",
      "bio": "Master Webpack Once and For All",
      "objectives": [
        "Understand all the concepts about Webpack",
        "Know key differences between Webpack 1 and Webpack 2",
        "Understand how web browsers cache content",
        "Know how to use long term caching",
        "How to use css inside of Javascript",
        "Use ESLint in their projects",
        "Break web apps into multiple entry points",
        "Use React with Webpack",
        "Use Angular with Webpack",
        "Learn the importance of SourceMaps and how to use them",
        "Create optimized production builds",
        "Minify Javascript and CSS",
        "Embed images using DataURI",
        "Use YAML as config files",
        "Learn about the fastest package manager called YARN developed at Facebook",
        "Deploying Static content with Surge",
        "Use Webpack 1",
        "Use Webpack 2",
        "Use SASS",
        "Use CoffeeScript",
        "Use TypeScript"
      ],
      "course_content": {
        "Welcome": [
          "Welcome",
          "Overview of what we are going to develop"
        ],
        "Lets Understand Webpack": [
          "Why",
          "What is Webpack",
          "Modular Approach Example",
          "Webpack Dependecy Graph"
        ],
        "YARN Facebook Dependency Manager": [
          "Introduction to YARN",
          "Enviroment set up with YARN and NodeJS"
        ],
        "Webpack the Basics": [
          "Hello World",
          "Exports and Require own Modules",
          "Third Party Libaries",
          "webpack.config.js",
          "Exersise",
          "Exersise Solution"
        ],
        "Webpack Loaders": [
          "Lets Understand Loaders",
          "Coffee Script",
          "ES6",
          "Query Object",
          "Pre Loaders with ESLINT",
          "React JS",
          "React Preset",
          "Exercise i",
          "Exercise i Solution",
          "Exercise ii",
          "Exercise ii Solution"
        ],
        "Webpack Dev Server": [
          "Webpack Dev Server",
          "Setting up Webpack Dev Server"
        ],
        "Webpack & CSS": [
          "Webpack & CSS",
          "Lets use CSS",
          "Webpack & SASS",
          "Bootstrap",
          "5 - Exersise with Fontawesome",
          "Exercise with Fontawesome Solution"
        ],
        "Resolve": [
          "Overview",
          "How to remove file extensions",
          "Alias",
          "index.js \"Special File Name\"",
          "Exercise",
          "Exercise Solution"
        ],
        "url loader, file loader & images": [
          "Understanding File and URL Loader",
          "Real example"
        ],
        "Code Splitting": [
          "Why Code Splitting",
          "Multiple Entry Points",
          "Multiple Entry Points Part 2",
          "CSS Code Splitting",
          "CSS Code Splitting PART 2",
          "Let's organise app folder structure",
          "Vendor Code Splitting (Commons Chunk Plugin)",
          "Provide Plugin",
          "Exercise",
          "Exercise Solution"
        ]
      },
      "requirements": [
        "The basics of Javascript"
      ],
      "description": "Webpack by far the best and greatest tool for front end development. It is a module bundler suitable for both large or small single-page web applications.\nIn this course you will fully understand and master all the aspects you need to know about this awesome tool. You will learn all the different configuration options allowing you customise Webpack to work the way you want for your own projects.\nThis is the most detailed course on Webpack ever created. You will learn both Webpack 1 and 2, so that you understand the key differences between the versions.\nThe topics you will are:\nRunning a Webpack build\nSetting up loaders and presets\nConfiguring webpack-dev-server\nCSS, SASS & Bootstrap\nAdding entry points\nBundling vendor files\nProduction Builds\nLong term caching\nDeployment",
      "target_audience": [
        "This course is for students who know nothing about webpack.",
        "This course is for students who want to better architect their web applications.",
        "This course if for students who want to master webpack",
        "This course is for students who wish to use languages other than javascript in their projects. i.e. typescript, CoffeeScript & ES6",
        "This course for students who want to use ReactJS for their next web application."
      ]
    },
    {
      "title": "Projects with JSON and APIs",
      "url": "https://www.udemy.com/course/projects-with-json-and-apis/",
      "bio": "Learn how to access JSON data through APIs and then manipulate the data in your application.",
      "objectives": [
        "Integrate Google Maps into your projects",
        "Style your Google Maps with the MapOptions property",
        "Understand how JSON data and APIs work",
        "Fetch and manipulate JSON data from APIs",
        "Create projects on CodePen"
      ],
      "course_content": {},
      "requirements": [
        "Nothing, just have a willingness to learn."
      ],
      "description": "In this course we will take a step-by-step approach to learning how to handle JSON data, how to connect to APIs, and how to work with Google Maps. We will learn how to create a CodePen account and cover the basic set up of the apps and then we will dive right into coding our applications! We will start with creating basic HTML elements and then move to using the jQuery getJSON() method to grab JSON data. In the final lectures, we will build a \"Location App\" that uses the Google Maps API. Along the way you will learn several important topics, including:\nHTML and CSS\nfor loops\nobjects\nJSON\nAPIs\nGoogle Maps API\njQuery\nAnd much more!\nThere are only two things that you need to take this course: an internet connection and a computer. There is no need to download any paid software or set up complex development environments.\nThe course is about 2 hours long and is structured in a step-by-step manner, from simple to more difficult concepts. We build the various applications from the ground up and cover each new feature one at a time - so you will never feel overwhelmed with the content.\nWith the knowledge gained in this course you can move forward and build more complex applications, and use the main \"Location App\" you created at the end of this course to add to your portfolio.\nI hope to hear from you soon, and look forward to having you in my course!",
      "target_audience": [
        "Beginners in HTML, CSS and JavaScript",
        "Students with very limited knowledge of JSON and APIs"
      ]
    },
    {
      "title": "Build a Responsive Real World Website From Scratch HTML CSS",
      "url": "https://www.udemy.com/course/complete-responsive-website-design-from-scratch/",
      "bio": "Learn How to design an attractive and responsive website from scratch for all devices by using HTML5 CSS3 and Javascript",
      "objectives": [
        "Responsive Web Design Tutorial",
        "Web Design Responsive Website Template from Scratch HTML CSS",
        "Build Responsive Real World Websites with Html CSS & Javascript",
        "Responsive Design Web Design Website From Scratch HTML CSS",
        "Build Responsive Real World Websites with HTML5 and CSS3",
        "Complete HTML CSS Responsive Web Design Course From Scratch",
        "Complete Responsive Website Using HTML CSS Javascript",
        "Build Responsive Website Using HTML5, CSS3, JS",
        "How to build a responsive HTML5 website Step by Step",
        "how to make website responsive using css",
        "Learning Responsive Web Design",
        "CSS Flexbox Learn and Build Responsive Websites",
        "Mobile Responsive Website Design 2020",
        "Learn how to design a complete responsive website from scratch using HTML5, CSS and JavaScript step by step",
        "Complete Responsive Web Develoment",
        "Responsive Web Design Html CSS Javascript",
        "Web Design Website From Scratch Html CSS Responsive Design",
        "Html and CSS : A Guide To Web Design",
        "Build Responsive Real World Website with Html5 and CSS3",
        "Build complete responsive website design",
        "Learn Responsive Web Development from Scratch",
        "Build a Website",
        "Design Complete Responsive Business Website From Scratch Step By Step using Html CSS and Javascript"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of html css and javascript",
        "Any Code Editor Of Your Choice",
        "An Internet Connection"
      ],
      "description": "Build Complete Real World Responsive Websites from Scratch\n\n\nLearn how to use HTML CSS and Javascript to make a complete responsive websites from scratch.  This course covers the fundamentals on how to use HTML and CSS together to build real world websites. The course takes you step by step, from start to finish through everything you need...\n\n\nSource Code is included\n\n\nTop Resources and links used to create websites\n\n\nHD quality video\n\n\nStep by step instruction\n\n\ntaught by an instructor with over 8 years industry experience\n\n\nFrom start to finish, all of the above is really easy to do... you just watch me do it in the videos and then copy me and do it yourself. And just in case you need me, I'm always available in the course for further help, advice and support.\n\n\nThis course is designed for beginners but can be taken by anyone as it's detailed and comprehensive. It goes from basic to advance level with in-depth explanation. So, you start as a beginner but by the end of this course, you’ll become an expert in HTML5 and CSS3.\n\n\nAll this will help you gain confidence and learn quickly.\n\n\nWe teach you the latest techniques and tools to use in order to create amazing web content. Everything you need to know is included in this course. Learn at your own pace, lifetime access to this course.",
      "target_audience": [
        "Responsive Web Design",
        "Create Responsive Website Using HTML5 CSS3",
        "frontend developers",
        "website designer",
        "Html Developers",
        "Learn Web Development Courses and Tutorials",
        "how to make responsive website using Html css Javascript",
        "Build a real world responsive website",
        "javascript front end tutorial",
        "front end developer course",
        "front end development tutorials",
        "Learn Web Development Courses and Tutorials",
        "responsive website design from scratch 2020",
        "Design A Complete Responsive Business Website From Scratch",
        "html5 + css3 responsive web design",
        "Learn Modern Responsive Web Design With Example Step by Step",
        "Responsive Html5 CSS3 Website",
        "Web Design For Beginners",
        "Build A Modern Looking Responsive Websites",
        "Learn Responsive Web Design From Scratch",
        "Real World Coding in HTML & CSS",
        "Html5 CSS3 and Javascript : A Guide To Web Design From SCratch",
        "Web Design HTML CSS Create Single Page Website from Scratch",
        "Front End Web Development"
      ]
    },
    {
      "title": "HTML CSS JavaScript Course for UI/UX Modern Web Developers",
      "url": "https://www.udemy.com/course/html-css-javascript-course-for-modern-web-developers/",
      "bio": "A Complete Steps Guide for Beginners interested in learning HTML, CSS, & JavaScript to Build Interactive Web Pages.",
      "objectives": [
        "Build websites and webapps",
        "Start their own online business",
        "Get a job as a junior web developer",
        "Master front-end development using HTML, CSS, & JavaScript",
        "Create stunning, responsive layouts using CSS",
        "Add Client-Side interactivity to Web Pages using JavaScript",
        "Data Visualization and Client-side validations",
        "Complete HTML CSS and JavaScript Beginner to Expert",
        "learn What is Generative AI for prompt engineering",
        "participate on Coding Exercise to test your skills"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Course Curriculum",
          "How to Get Course requirements",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Setting up Development Environment": [
          "Introduction",
          "Choosing Code Editor",
          "Installing Code Editor(Sublime Text)",
          "Overview of a Webpage",
          "Full HTML Code Page",
          "First “Hello World!” page",
          "Summary"
        ],
        "HTML Fundamentals": [
          "Introduction",
          "Heading",
          "Paragraph",
          "Formatting text",
          "List Items Un Ordered",
          "List Items Ordered",
          "Classes",
          "ID’s in CSS",
          "Comments in HTML",
          "Summary",
          "Heading tag exercise"
        ],
        "HTML Intermediate": [
          "Introduction",
          "Images",
          "Forms",
          "Form Actions",
          "Br tag",
          "Marquee",
          "Text area",
          "Tables",
          "Links",
          "Navbar / Menu",
          "HTML Entities",
          "Div tag",
          "Google Maps",
          "Summary"
        ],
        "HTML Advanced": [
          "Introduction",
          "HTML5 Audio",
          "HTML5 Video",
          "Progress Bar",
          "Drag & Drop",
          "Canvas",
          "I frames",
          "Input Types",
          "Input Attributes",
          "YouTube Video Linking",
          "Creating Responsive Page",
          "Summary"
        ],
        "HTML Expert": [
          "Introduction",
          "Registration Form",
          "Login Form",
          "About Us Form",
          "Contact Us Form",
          "Footer Form",
          "Integrate All Together",
          "Coding Exercise",
          "Solution for Coding Exercise",
          "Summary"
        ],
        "HTML Website Project": [
          "Introduction",
          "Challenge – HTML 5 Clock Face with Numbers",
          "Project Overview",
          "Conclusion on Project",
          "Summary"
        ],
        "CSS Fundamentals": [
          "Introduction",
          "CSS Syntax",
          "Creating webpage with CSS",
          "Inline CSS",
          "Internal CSS",
          "External CSS",
          "CSS Classes",
          "CSS IDs",
          "Colors",
          "Backgrounds",
          "Floating",
          "Positioning",
          "Margins",
          "Padding",
          "Borders",
          "Summary"
        ],
        "CSS Intermediate": [
          "Introduction",
          "Styling Text",
          "Aligning Text",
          "Styling Links",
          "Font Family",
          "Font Styles",
          "Applying Google Fonts",
          "Box Model",
          "Icons",
          "Tables",
          "Navigation-Menu",
          "Dropdowns",
          "Summary"
        ],
        "CSS Advanced": [
          "Introduction",
          "Advanced Selectors",
          "Forms",
          "Website Layout",
          "Rounded Corners",
          "Color Keywords",
          "Animations",
          "Pseudo Classes",
          "Gradients",
          "Shadows",
          "Calculations",
          "Creating Responsive Page",
          "Summary"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Become a skilled UI/UX web developer with \"HTML, CSS, JavaScript Course for UI/UX Modern Web Developers.\" This course is specifically designed for those who want to create visually stunning, user-friendly, and interactive websites. Whether you're starting from scratch or looking to enhance your front-end development skills, this course will equip you with the essential tools to excel in modern web development.\n\n\nYou’ll begin by mastering the building blocks of web development—HTML and CSS. Learn how to structure web pages with semantic HTML, create beautiful layouts with CSS, and style your website with modern design principles. You’ll also dive into responsive design techniques, ensuring your websites look great on all devices using Flexbox, CSS Grid, and media queries.\n\n\nAs you move forward, you’ll explore JavaScript to add interactivity and enhance user experience (UX). From handling events and form validation to DOM manipulation, you’ll learn how to make your websites dynamic and responsive to user input. Additionally, the course covers modern UX principles, including usability, accessibility, and design thinking, ensuring you can create websites that are both functional and enjoyable to use.\n\n\nWith hands-on projects and real-world examples, you’ll apply your learning to build functional, modern websites and user interfaces. By the end of the course, you’ll be equipped to develop websites that are not only visually appealing but also user-centered and responsive.\n\n\nEnroll today to become a proficient UI/UX web developer and start building modern websites!",
      "target_audience": [
        "Beginner HTML, CSS and JavaScript developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Learn By Example: The Foundations of HTML, CSS & Javascript",
      "url": "https://www.udemy.com/course/learn-by-example-html-css-javascript/",
      "bio": "Closures, prototypes, JSON, the DOM, selectors, inheritance in CSS and in Javascript, and first class functions",
      "objectives": [
        "Understand HTML - its structure, and the commonly used tags",
        "Utilise CSS, including inheritance, selectors, the box model - the very topics that make CSS hard to use",
        "Master the fundamentals of Javascript",
        "Use closures, dynamic prototyping, JSON, and the Document-Object-Model with confidence"
      ],
      "course_content": {
        "Welcome to HTML, CSS and Javascript!": [
          "Welcome to HTML, CSS and Javascript!"
        ],
        "HTML": [
          "Introducing HTML and CSS",
          "Introduction to HTML",
          "Introduction to CSS",
          "The A Tag",
          "Paths",
          "Quotes",
          "Lists - Ordered and Unordered",
          "Other Miscellaneous HTML Tags",
          "URL and Domain Names",
          "The img Tag",
          "The HTML Standard"
        ],
        "CSS": [
          "Cascading Stylesheets reintroduced",
          "Inheritance in CSS",
          "CSS Selectors",
          "Fonts",
          "Colors",
          "The Box Model",
          "The <div> Element",
          "What is the exact style applied?",
          "The <span> Element",
          "HTML States and Pseudo-classes",
          "Normal Rendering Flow Of The Browser",
          "The CSS float and clear properties",
          "Experimenting with the position attribute",
          "Fluid And Fixed Layouts",
          "The CSS display property",
          "Chrome Developer Tools"
        ],
        "Javascript Basics": [
          "Introducing Javascript",
          "Example 1: Executing Javascript code",
          "Example 2: Basic programming constructs",
          "Example 3: Separating HTML and JS files",
          "Example 4: Using the console.log statement",
          "Example 5: Local and global variables",
          "Example 6: Undeclared variables in JS are global",
          "Example 7: Local variables hide global variables of the same name",
          "Example 8: Javascript is ephemeral, reloading a page resets everything",
          "Example 9: Creating and using arrays",
          "Example 10: Copying an array",
          "Example 11: Adding an element to an array",
          "Example 12: Deleting elements from an array",
          "Example 13: Arrays can contain different types",
          "Example 14: Non-existent array elements are undefined",
          "First class functions"
        ],
        "Objects in Javascript": [
          "Introduction to Javascript objects",
          "Example 15: Creating an object using JSON",
          "Example 16: Creating an object using a constructor",
          "Example 17: Adding properties to objects dynamically",
          "Example 18: Removing properties from objects dynamically",
          "Example 19: Object properties can be functions",
          "Example 20: Object constructors can have property functions",
          "Example 21: Two ways of accessing object properties",
          "Example 22: Iterating over all properties in an object",
          "Example 23: Calling a constructor without new",
          "Example 24: Understanding the typeof operator",
          "Example 25: Paternity tests using instanceof",
          "Example 26: Faking public and private properties"
        ],
        "First Class Functions - In Detail": [
          "Example 27: Functions as arguments to functions",
          "Example 28: Functions that return functions",
          "Example 29: Arguments pass by value to functions",
          "Example 30: Arguments pass by reference"
        ],
        "Javascript Quirks": [
          "Introduction to Javascript Quirks",
          "Example 31: Understanding undefined",
          "Example 32: Understanding null",
          "Example 33: Understanding NaN",
          "Example 34: Strings and numbers and conversions between them",
          "Example 35: Strange comparison operators",
          "Example 36: Truthy and falsy",
          "Example 37: Simple string operations"
        ],
        "Functions Yet Again": [
          "Example 38: Declared Functions, Function Literals and Hoisting",
          "Example 39: Named And Anonymous Function Literals",
          "Example 40: Nested Functions",
          "Example 41: Nested functions can be declared"
        ],
        "Closures": [
          "Introduction to closures",
          "Example 42: Closure variables win over local variables",
          "Example 43: Closures with declared functions and function literals",
          "Example 44: Referencing environment with function parameters",
          "Example 45: Closure variables cooler than global variables"
        ],
        "Prototypes, Dynamic Prototyping and Inheritance": [
          "Introduction to prototypes",
          "Example 46: Prototypical Inheritance In Action",
          "Example 47: Dynamic Prototyping",
          "Example 48: Inheritance hierarchy using chained prototypes",
          "Example 49: Overriding properties using prototypes",
          "Example 50: The base object as the ultimate prototype",
          "Example 51: Overriding properties of built-in objects"
        ]
      },
      "requirements": [
        "Any modern browser and a simple text editor are all that will be needed for the code examples",
        "Some prior programming experience will definitely help in the advanced Javascript portions - if you are entirely new to programming, the second half of the Javascript section will seem very challenging"
      ],
      "description": "Closures, prototypes, JSON, the DOM, selectors, inheritance in CSS and in Javascript, and first class functions - that's what this course is about.\nThis is not a course on Javascript frameworks - its about solid, fundamental HTML, CSS and Javascript. You'll be surprised by how much more you can get done on your web pages once you learn these technologies the right way.\nWhat do we mean by that?\nRelatively few folks formally learn HTML, CSS or Javascript, because its quite easy to get stuff done in these technologies in a \"quick-and-dirty way\".\nThat \"quick-and-dirty\" way of learning and doing leads to problems over time, because Javascript and CSS are actually quite complex, so it is easy to do things the wrong way\nThis course will help, because it has 75 examples, 20 in HTML/CSS and 55 in Javascript. Each is self-contained, has its source code attached, and gets across a simple, specific use-case. Each example is simple, but not simplistic.\nWhat's Included:\n\nBasic HTML: Folks stopped counting HTML as a language worth formally learning sometime in the 90s, but this is only partially justified. It always helps to have strong basics.\nCSS: Cascading Stylesheets are incredibly powerful, and incredibly hard to use - until you know how they really work. Once you understand inheritance and selection in CSS, it will all make a lot more sense.\nJavascript is a full-fledged, powerful and complicated language. Its really important to learn Javascript formally, because it is just so different from most other languages you would have encountered. For instance - Javascript has objects and inheritance but no classes.\nClosures in Javascript are a rather mind-bending concept - functions that \"remember\" how the world looked when they were created.\nPrototypes are Javascript's way of doing inheritance, and its very different from the C++/Java way of doing it.\nJSON is not conceptually difficult to use, but it is incredibly important, and you should understand why - because its the glue between backends written in Java or other traditional languages, and front-ends written in Javascript\nThe Document-Object-Model is what ties Javascript back to HTML and CSS. Together with JSON, the DOM ties it all together from server to skin.",
      "target_audience": [
        "Yep! Folks who are absolutely new to web programming, and wish to learn HTML and CSS from scratch",
        "Yep! Folks who are seeking to learn Javascript the right way - including folks who may done some Javascript programming, but are not quite confident using advanced features such as closures or dynamic prototyping",
        "Yep! Java, C#, Python or C++ programmers who are looking to master Javascript",
        "Nope! This class is not right for you if you are looking to learn Javascript frameworks such as JQuery, Angular or Node.js"
      ]
    },
    {
      "title": "Build Complete PHP MySQL Food Ordering Ecommerce Store",
      "url": "https://www.udemy.com/course/build-complete-2023-php-mysql-food-ordering-ecommerce-store/",
      "bio": "Create Ecommerce Store with PayPal Payment and Admin Panel in PHP MySQL Bootstrap and PDO",
      "objectives": [
        "Learn to set up the right environment when getting started with coding",
        "Build a complete authentication system",
        "Learn to do advanced coding with hashing and un-hashing passwords",
        "Warp your head around cool programming concepts like validations",
        "Limit the user ability to access sensitive data by protecting it",
        "Learn to deal with sessions and customize them based on your needs",
        "Create a category system",
        "Set up layers and layers of validations for various profiles on your web app",
        "Create an admin panel and learn how it works under the hood from start to finish",
        "How to integrate Ajax-JQuery with PHP and MySQL to create cool features in you web app",
        "Learn to implement payment with PayPal and create a checkout system",
        "Learn how to create a cart system and how to fully customize it",
        "Learn file uploading and how to fully update and delete its bugs along the way of developing this web app"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Getting Started with the Project": [
          "Design and Code for the Project",
          "Creating Config File",
          "Setting up our Project"
        ],
        "Authentication System": [
          "Registering Users",
          "Logging Users in",
          "Checking and Validating Sessions"
        ],
        "Implementing Categories and Products Systems": [
          "Shwoing Categories in Home Page",
          "Showing Categories in Shop Page",
          "Showing Products in Shop Page pt.1",
          "Showing Products in Shop Page pt.2",
          "Showing Products in Shop Page pt.3",
          "Showing Details for Every Product",
          "Showing Related Products"
        ],
        "Implementing Cart": [
          "Adding Products to Cart pt.1",
          "Adding Products to Cart pt.2",
          "Displaying Products in Cart",
          "Updating Cart pt.1",
          "Updating Cart pt.2",
          "Updating Cart pt.3",
          "Deleting Products from Cart",
          "Updating Total Price for Products",
          "Updating Number of Products in Cart"
        ],
        "Processing Payment with PayPal, Checkout and More": [
          "Checking out pt1",
          "Checking out pt.2",
          "Checking out pt.3",
          "Processing Payment with PayPal pt.1",
          "Processing Payment with PayPal pt.2",
          "Adding Success Page",
          "Validating Users Data pt.1",
          "Validating Users Data pt.2",
          "Displaying Transactions for every User",
          "Updating User Data pt.1",
          "Updating User Data pt.2"
        ],
        "Getting Started with Admin Panel": [
          "Code and Design for Admin Panel",
          "Logging Admins in pt.1",
          "Logging Admins in pt.2",
          "Validating Logging in Page",
          "Creating New Admins",
          "Displaying Admins",
          "Displaying Stats in Index Page"
        ],
        "Perfecting Categories (Admin Panel)": [
          "Showing Categories",
          "Deleting Categories",
          "Creating Categories",
          "Updating Categories"
        ],
        "Perfecting Products (Admin Panel)": [
          "Displaying Products",
          "Changing Products availability",
          "Creating Products",
          "Deleteing Products",
          "Deleting Images of Products and Categories"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and PDO",
        "Very little knowledge of Bootstrap",
        "Ajax-JQuery knowledge would be great but not mandatory"
      ],
      "description": "Are you ready for a treat? Ready for a fantastic journey with me? In this course, you will get to discover the infinite possibilities of PHP and MySQL. In this course, I will show you how to build an amazing e-commerce store from start to finish. After you complete this course, you should have something solid, awesome, and legit to show off on your CV.\n\nHere is what we are going to build. First of all, I am going to show you how to build a full authentication system with confirm password functionality and that's after creating our config file. After that, we are going to deal with showing data of products and categories neatly on our website and we are going to create a shop page. Now to the cart system where we are going to implement inserting, updating, showing, and deleting products and that's going to be done using Ajax-JQuery. And then to another hardcore part of this project and that is integrating Paypal inside our app. I am going to show you not to only integrate it but also to pay for your first product using it by setting up buyer and merchant accounts. We will see how these whole PayPal configurations work under the hood and before that, I am going to show how to place your first order by creating the checkout page. The last part of the user's side is to allow the user to see his orders and update his data and I am going to show you how to do this securely. In the second part of this course, we are going to take care of the admin panel where I am going to show you how to deal with admins, categories, products, and orders. Of course, there are going to be a lot of details to talk about. So if you think this course is beneficial to you, go ahead and get it now. See you inside.",
      "target_audience": [
        "People who learned PHP and MySQL and want to build a full project",
        "Developers who want to create a professional store and get a programming job",
        "Aspiring programmers who want to level up their development skills with new techniques",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "Node, Express, React JS & MySQL full stack web development",
      "url": "https://www.udemy.com/course/node-express-react-js-mysql-full-stack-web-development/",
      "bio": "learn to create a full stack web application from scratch using React JS, Node, Express JS and MySQL",
      "objectives": [
        "Full Stack Web Development",
        "Backend Development with Node, Express JS and MySQL",
        "Front End Web Development with React JS",
        "Build RESTful APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup Environment": [
          "Install Visual Studio Code",
          "Install Postman",
          "Install MySQL Workbench",
          "Install Node JS"
        ],
        "Backend : Node, Express and MySQL": [
          "Create DB Objects",
          "Express JS Project",
          "Enable CORS",
          "Connect Backend Project to MySQL",
          "API Methods",
          "Upload File API"
        ],
        "Frontend : React JS": [
          "Create React JS Project",
          "Routing and Navigation",
          "Bootstrap Table",
          "Modal Popup Window",
          "Employee Details Screen",
          "Upload Image File",
          "Sorting and Filtering"
        ],
        "Extra": [
          "Project Files"
        ]
      },
      "requirements": [
        "basic html, css and javascript"
      ],
      "description": "Hello Everyone, and welcome to this course on React JS, Node, Express JS and MySQL full-stack web development.\nIn this course, you will learn how to develop a web application from scratch using popular technologies such as\n* MySQL for the database.\n* Node, Express JS for the back end web development.\n* And the latest React JS for the front end web development.\n\n\n-We will first start with installing and setting up the environment needed for our database, back end project and front end project.\n-Then we will develop REST API end points using Node and Express JS.\n-Finally we will be using React JS to design the front end part of our App.\n* You will learn how to create the navigation menu and tables using bootstrap, add routing and navigation to our React App, add modal pop up window with drop downs and date pickers, and also add upload profile picture functionality and store it in the backend server. We will also learn how to add custom filtering and sorting features without using any third party packages.\n\n\nI am sure that this course will definitely help you in your journey as a full stack web developer.\nWelcome to the course, and happy learning.",
      "target_audience": [
        "Backend developers, Frontend developers, Node JS developers, Angular, React and Vue JS developers"
      ]
    },
    {
      "title": "Mastering MUI (Material UI): Component Customization [2024]",
      "url": "https://www.udemy.com/course/mastering-mui-component-customization/",
      "bio": "React's Most Popular Component Library: Master MUI with In-Depth Expert Insights and Advanced Customization Techniques",
      "objectives": [
        "Learn from a bestselling MUI instructor who has contributed to the MUI source code and spoken about MUI at React conferences",
        "Understand how to use every Material UI component including all props",
        "Customize every detail of every Material UI component with your own design - override the defaults!",
        "Adjust your styles and layouts for different screen sizes with the integrated responsive design system",
        "Breakdown complex layouts with a simple, repeatable method using the Grid system",
        "Utilize all the powerful features of the Material UI styling system with the sx prop",
        "Create a systematic mental framework of concepts that will even work on new components in the future",
        "Put your MUI Mastery to the test with assignments, quizzes, and a final mastery assessment",
        "Know when to use one component instead of another with specific use cases, like the Box vs Paper",
        "Centralize your most commonly used styles with the MUI theme and access them anywhere",
        "Master the foundations of Material UI to start building web applications faster with ease and prepare for more advanced concepts",
        "Develop deep understanding of how to get the most out of Material UI's most powerful features",
        "Take a look behind the scenes with the Component X-ray to see how each MUI component really works under the hood"
      ],
      "course_content": {
        "Introduction": [
          "Why MUI?",
          "How I Fixed A Bug In MUI",
          "Course Overview",
          "Course Requirements",
          "Understanding the MUI Ecosystem",
          "Understanding the Material UI Documentation",
          "How To Access The Course Code",
          "How To Get Help"
        ],
        "Material UI Core Concepts": [
          "Material UI Components - Basics",
          "Material UI Styling - The Theme",
          "Material UI Styling - The SX Prop Part 1",
          "Material UI Styling - The SX Prop Part 2",
          "Material UI Styling - Basics",
          "Material UI Styling - Reusable Styles",
          "Material UI Styling - Global Styles",
          "Advanced Material UI Styling with the Theme",
          "5 Step Styling System Overview",
          "5 Step Styling System Example 1",
          "5 Step Styling System Example 2",
          "Using the Component Classes Object",
          "Using the Component X-Ray",
          "Core Concepts Quiz"
        ],
        "Material UI Input Components": [
          "Autocomplete Functionality",
          "Autocomplete Component X-Ray",
          "Autocomplete Customization",
          "Autocomplete Customization Using Component Classes Object",
          "Button Functionality",
          "Button Component X-Ray",
          "Button Customization",
          "Button Customization Using Component Classes Object",
          "ButtonGroup Functionality",
          "ButtonGroup Component X-Ray",
          "ButtonGroup Customization",
          "ButtonGroup Customization Using Component Classes Object",
          "Checkbox Functionality",
          "Checkbox Component X-Ray",
          "Checkbox Customization",
          "Checkbox Customization Using Component Classes Object",
          "Floating Action Button Functionality",
          "Floating Action Button Component X-Ray",
          "Floating Action Button Customization",
          "Floating Action Button Customization Using Component Classes Object",
          "Input Components Quiz 1",
          "Form Components Functionality",
          "Form Components Component X-Ray",
          "Form Components Customization",
          "Form Components Customization Using Component Classes Object",
          "Radio Functionality",
          "Radio Component X-Ray",
          "Radio Customization",
          "Radio Customization Using Component Classes Object",
          "Rating Functionality",
          "Rating Component X-Ray",
          "Rating Customization",
          "Rating Customization Using Component Classes Object",
          "Select Functionality",
          "Select Component X-Ray",
          "Select Customization",
          "Select Customization Using Component Classes Object",
          "Slider Functionality",
          "Slider Component X-Ray",
          "Slider Customization",
          "Slider Customization Using Component Classes Object",
          "Input Components Quiz 2",
          "Switch Functionality",
          "Switch Component X-Ray",
          "Switch Customization",
          "Switch Customization Using Component Classes Object",
          "TextField Functionality",
          "TextField Component X-Ray",
          "TextField Customization",
          "TextField Customization Using Component Classes Object",
          "Toggle Button Functionality",
          "Toggle Button Component X-Ray",
          "Toggle Button Customization",
          "Toggle Button Customization Using Component Classes Object",
          "Input Components Quiz 3",
          "Input Components Customization Assignment"
        ],
        "Material UI Data Display Components": [
          "Avatar Functionality",
          "Avatar Component X-Ray",
          "Avatar Customization",
          "Avatar Customization Using Component Classes Object",
          "Badge Functionality",
          "Badge Component X-Ray",
          "Badge Customization",
          "Badge Customization Using Component Classes Object",
          "Chip Functionality",
          "Chip Component X-Ray",
          "Chip Customization",
          "Chip Customization Using Component Classes Object",
          "Divider Functionality",
          "Divider Component X-Ray",
          "Divider Customization",
          "Divider Customization Using Component Classes Object",
          "List Functionality",
          "List Component X-Ray",
          "List Customization",
          "List Customization Using Component Classes Object",
          "Data Display Components Quiz 1",
          "MUI Icons Functionality",
          "MUI Icons Customization",
          "SvgIcon Functionality",
          "SvgIcon Component X-Ray",
          "SvgIcon Customization",
          "Table Functionality",
          "Table Component X-Ray",
          "Table Customization",
          "Table Customization Using Component Classes Object",
          "Tooltip Functionality",
          "Tooltip Component X-Ray",
          "Tooltip Customization",
          "Typography Functionality",
          "Typography Component X-Ray",
          "Typography Customization",
          "Data Display Components Quiz 2",
          "Data Display Components Customization Assignment"
        ],
        "Material UI Feedback Components": [
          "Alert Functionality",
          "Alert Component X-Ray",
          "Alert Customization",
          "Alert Customization Using Component Classes Object",
          "Backdrop Functionality",
          "Backdrop Component X-Ray",
          "Backdrop Customization",
          "Dialog Functionality",
          "Dialog Component X-Ray",
          "Dialog Customization",
          "Dialog Customization Using Component Classes Object",
          "Progress Functionality",
          "Progress Component X-Ray",
          "Progress Customization",
          "Progress Customization Using Component Classes Object",
          "Skeleton Functionality",
          "Skeleton Component X-Ray",
          "Skeleton Customization",
          "Snackbar Functionality",
          "Snackbar Component X-Ray",
          "Snackbar Customization",
          "Snackbar Customization Using Component Classes Object",
          "Feedback Components Quiz",
          "Feedback Components Customization Assignment"
        ],
        "Material UI Surface Components": [
          "Accordion Functionality",
          "Accordion Component X-Ray",
          "Accordion Customization",
          "Accordion Customization Using Component Classes Object",
          "AppBar Functionality",
          "AppBar Component X-Ray",
          "AppBar Customization",
          "Card Functionality",
          "Card Component X-Ray",
          "Card Customization",
          "Card Customization Using Component Classes Object",
          "Paper Functionality",
          "Paper Component X-Ray",
          "Paper Customization",
          "Surface Components Quiz",
          "Surface Components Customization Assignment"
        ],
        "Material UI Navigation Components": [
          "BottomNavigation Functionality",
          "BottomNavigation Component X-Ray",
          "BottomNavigation Customization",
          "BottomNavigation Customization Using Component Classes Object",
          "Breadcrumbs Functionality",
          "Breadcrumbs Component X-Ray",
          "Breadcrumbs Customization",
          "Breadcrumbs Customization Using Component Classes Object",
          "Drawer Functionality",
          "Drawer Component X-Ray",
          "Drawer Customization",
          "Drawer Customization Using Component Classes Object",
          "Link Functionality",
          "Link Component X-Ray",
          "Link Customization",
          "Menu Functionality",
          "Menu Component X-Ray",
          "Menu Customization",
          "Menu Customization Using Component Classes Object",
          "Navigation Components Quiz 1",
          "Pagination Functionality",
          "Pagination Component X-Ray",
          "Pagination Customization",
          "Pagination Customization Using Component Classes Object",
          "SpeedDial Functionality",
          "SpeedDial Component X-Ray",
          "SpeedDial Customization",
          "Stepper Functionality",
          "Stepper Component X-Ray",
          "Stepper Customization",
          "Stepper Customization Using Component Classes Object",
          "Tabs Functionality",
          "Tabs Component X-Ray",
          "Tabs Customization",
          "Tabs Customization Using Component Classes Object",
          "Navigation Components Quiz 2",
          "Navigation Components Customization Assignment"
        ],
        "Material UI Layout Components": [
          "Box Functionality",
          "Box Component X-Ray",
          "Box Customization",
          "Container Functionality",
          "Container Component X-Ray",
          "Container Customization",
          "Grid Functionality",
          "Grid Component X-Ray",
          "Grid Demo Layout Breakdown",
          "Grid Demo",
          "Grid Customization",
          "Grid Customization Using Component Classes Object",
          "ImageList Functionality",
          "ImageList Component X-Ray",
          "ImageList Customization",
          "ImageList Customization Using Component Classes Object",
          "Stack Functionality",
          "Stack Component X-Ray",
          "Stack Customization",
          "Layout Components Quiz",
          "Layout Components Customization Assignment"
        ],
        "Material UI Utilities": [
          "ClickAwayListener Functionality",
          "CSSBaseline Functionality",
          "CSSBaseline Customization",
          "Modal Functionality",
          "Modal Component X-Ray",
          "Modal Customization",
          "NoSSR Functionality",
          "Popper Functionality",
          "Popper Component X-Ray",
          "Utilities Quiz 1",
          "Portal Functionality",
          "TextareaAutosize Functionality",
          "TextareaAutosize Component X-Ray",
          "Transitions Shared Functionality",
          "Transitions Component X-Ray",
          "Transitions Individual Functionality",
          "TransitionGroup Functionality",
          "useMediaQuery Functionality",
          "useScrollTrigger Functionality",
          "Utilities Quiz 2"
        ],
        "Final Mastery Assessment": [
          "Final Mastery Assessment"
        ]
      },
      "requirements": [
        "Basic React skills - if you know about components, props, and state then you're ready!",
        "No Material UI experience is necessary! This course will teach you everything from the very basics to advanced styling techniques"
      ],
      "description": "Welcome to Mastering MUI: Component Customization!\nWhether you're just starting out with React or Material UI, or you've been using MUI for years, you just found the best, most comprehensive course to deepen your knowledge and expand your skills. Mastering MUI was created by Zachary Reece, a best-selling MUI instructor of over 20,000 students, who has even contributed to the MUI source code! Buckle up for a deep dive into the most popular React component library used by some of the biggest tech companies in the world like Spotify, Amazon, NASA, and Netflix! If you're looking to develop a marketable skillset that can get you into these high-earning positions then a new chapter of your journey starts here.\n\n\nMaterial UI (MUI) is the most popular React component library with over 90,000 stars on GitHub! That's more than any competing libraries - even more than TailwindCSS and Bootstrap. MUI is so popular because it is so powerful. If you're still relatively new to React then you may ask - what is a component library? I'm glad you asked! A component library is a collection of pre-built React components for all the most common web elements like sliders, switches, ratings, alerts, and so much more. Every application you build requires these basic components. Instead of building them from scratch every time, using MUI allows you to start out with an entire suite of these ready-to-go components so you can get going faster and focus on building the new, more interesting parts of your web app! Learn to let Material UI do the heavy lifting for you with its comprehensive customizable component library with integrated styling, theming, layout, and responsive design systems.\nMUI is not just a simple component library. What makes it so powerful is the fact that it comes with an entire ecosystem of tools all integrated together which solve all the most common problems you face when working with a large number of components! MUI has an amazing built-in styling system allowing you to customize your components in any way imaginable to match your own custom designs. To simplify your customizations you can centralize all your most commonly used styles in one convenient place and access them from anywhere using the theming system! Anything stored in the theme can easily be accessed in any component which streamlines your styles, reduces redundancy, and makes your code more maintainable to update in the future. MUI also comes with an integrated layout system to arrange your components on the screen in a consistent and predictable way using the Grid component. Finally, there is an incredible responsive design system built into the components, the layout system, and the styling and theming systems to adapt your styles and layouts to the user's device ensuring your applications look perfect on every screen size.\n\n\nThis is a truly unique course on Material UI - there's no other course like it! We will examine every single component in the component library. That includes everything about how each component works, specific use cases for when to use one component over another, the underlying DOM elements that each component renders, and advanced techniques for customizing every little detail of each component (even when it's in different states like disabled or focused). You'll learn customizations that you can't even find in the MUI documentation!\nNot only will you learn every secret tip and trick to every component, but you'll also learn all the foundational core concepts of Material UI and how to get the most out of all its powerful features. When you're learning anything new it's so important to start with the basics and develop a rock solid understanding of the core concepts. This builds a strong foundation that you can then build on top of by learning more advanced concepts and techniques in the future - that's exactly what this course delivers!\nThe course is also full of quizzes that test your understanding of the functionality and customization techniques for every component to ensure you're learning all of the most important concepts. The course ends with a final Mastery Assessment to put all your knowledge to the test and see if you have really mastered MUI!\n\n\nMaterial UI has started expanding beyond just a component library into an entire ecosystem under MUI. This now includes Base UI, Joy UI, Material UI, MUI X, and MUI System. As this ecosystem continues to evolve there's more information to learn, it becomes more difficult for beginners to know where to start, and even seasoned developers have a hard time keeping up with all the changes. That's exactly why Mastering MUI was created. We are dedicated to providing you with the most comprehensive MUI education, broken apart into digestible pieces with a clear structure that sets you up for success with deep understanding and practical skills. This course is your first step along the road to Mastering MUI!\n\n\nHere are some of the main concepts you're going to be learning from our expert instructor:\nLearn to use every single component in Material UI (including all important component props)\nCustomize every single detail of every component to override the default styles\nDevelop an easy and repeatable 5-step system to applying any customization for any component\nKnow when to use one component instead of another similar component (like Box vs Paper)\nUnderstand the MUI styling system with the SX prop and all of its powerful features and shorthand syntax\nDive even deeper to see the DOM elements rendered by every component using the Component X-Ray\nBreakdown and build complex layouts with responsive design that adapt to screen size using the Grid component\nExplore the entire MUI ecosystem and how its evolving beyond just a simple component library\nApply global styles that affect every component in your project using the Material UI theming system\nUse a shortcut to writing your styling selectors using the Component Classes object\nPractice everything you learn with 13 quizzes, 6 assignments, and 1 final mastery assessment at the end\n\n\nAfter taking this course you will be completely confident in your ability to use and customize any current or future Material UI components all on your own! You'll be ready to start using MUI to build your own projects with stunning design and simple code. You'll become the expert that everyone on your team will look to for advice when they're still stuck figuring out how to override some default styles!\n\n\nAlong with lifetime access to 24 HOURS of content, you'll also find easy access to support through active Q/A. You've got nothing to lose - this course comes with a 30-day money-back guarantee in case you aren't completely satisfied!\nTake the first step along your journey to Mastering MUI today and learn real React skills beyond the basics.",
      "target_audience": [
        "React Developers who have struggled to customize and override the default styles in Material UI",
        "React Developers who have a hard time learning from just the documentation",
        "React Developers looking to gain real marketable skills with a tool used by Spotify, Amazon, NASA, and Netflix",
        "Material UI beginners looking to develop a rock solid foundation to really understand how MUI works",
        "React Developers looking for a complete component toolkit for building whole applications",
        "React Developers looking for an easier, faster way to get up and running with clean, consistently designed applications",
        "React Developers looking for a simpler, more powerful, integrated styling and theming system with responsive design",
        "Material UI Developers who want a quick reference guide to visit when working with a tricky component",
        "Experienced Material UI Developers looking for a deeper understanding of MUI to truly master the core concepts",
        "Experienced React Developers looking for a well maintained, actively developed component library and extensible design system"
      ]
    },
    {
      "title": "Master React, Redux and Next.js: The Practical Course",
      "url": "https://www.udemy.com/course/the-ultimate-react-course-become-a-pro-in-no-time/",
      "bio": "Master React.js | Redux | Hooks | Side effects | React Router | GraphQL | Tailwind CSS | Next.js | Jest",
      "objectives": [
        "Become a professional React developer from scratch",
        "Understand all React concepts from basics to advanced",
        "Build real-world projects to practice and apply your knowledge and also add to your portfolio",
        "Learn how to style react components with Tailwind CSS",
        "Master single-page applications development with React Router",
        "Learn full-stack web development with Next JS"
      ],
      "course_content": {
        "Introduction": [
          "What is React ?",
          "Environment Setup",
          "IMPORTANT: Source Code Repository"
        ],
        "React Basics": [
          "Creating React Project",
          "Creating the First React Component",
          "Function Components",
          "The App Component and Other Generated Files",
          "React JSX",
          "Adding Styles",
          "Displaying Data",
          "Conditional Rendering",
          "More on Displaying Lists in React",
          "Event Handling",
          "Props",
          "Project 1 - Profile Card",
          "Props Validation",
          "State",
          "Stale State",
          "React Basics Quiz"
        ],
        "Project - Task Manager": [
          "Project Overview",
          "TaskList Component",
          "TaskInput Component",
          "App Component",
          "Adding Event Handling",
          "Styling"
        ],
        "React Hooks": [
          "Introduction to React Hooks",
          "Context Hook",
          "Reducer Hook",
          "Project 2 Follow Up: Using Reducers",
          "useRef",
          "useMemo",
          "Custom Hooks",
          "React Hooks Quiz"
        ],
        "Side Effects in React": [
          "Introduction to Side Effects",
          "useEffect Hook",
          "useEffect with Dependecies",
          "Cleanup Functions",
          "Side Effects Quiz"
        ],
        "Project - SpaceX Launches Tracker": [
          "Creating LaunchTracker Component",
          "Adding Pagination",
          "Styling the Website"
        ],
        "Testing in React": [
          "Introduction to Testing",
          "Introduction to Jest",
          "Writing the First React Component Test",
          "Matchers in Jest",
          "Mocking",
          "Test Suites"
        ],
        "Redux": [
          "Introduction to Redux",
          "Redux Fundamentals",
          "Redux Toolkit"
        ],
        "Debugging and Deploying React Applications": [
          "React Development Tools",
          "Deploying to Github Pages",
          "Deploying With Vercel"
        ],
        "Project - Match the Pairs Game": [
          "Game Source Code",
          "Match the Pairs Game Overview",
          "Create the Project and Basic Styling",
          "Start/Reset the Game Timer",
          "Shuffle the Cards",
          "The Card Component",
          "Styling the Card",
          "Implementing the Game Logic",
          "Reset the Game After Winning"
        ]
      },
      "requirements": [
        "Basic Javascript, HTML and CSS knowledge"
      ],
      "description": "Welcome to the ultimate React course!\nUnlike many other React courses on Udemy, this course will make you ready to professionally work with React in the quickest, a practical and efficient way.\n\nIn this course you will master all React JS concepts from basics to advanced and apply your knowledge by working on real-world projects which you can also add to your portfolio.\n\n\nAfter finishing this course you will be able to start developing with React.js professionally in the quickest and most efficient way possible!\n\n\nThe course covers the following topics:\nWhat is React ?\nFunction Components\nStyling React Components\nConditional Rendering\nEvent Handling\nProps\nState\nReact Hooks\nSide Effects in React\nGraphQL\nTesting in React.js using Jest\nRedux\nDebugging and Deploying React Applications\nUsing Tailwind CSS with React\nClass Components in React\nReact Router\nFullstack web development with Next.js\nUsing PostgreSQL with Next.js\nCreating APIs with Next.js\nDeployment via Vercel\nJavascript Refresher (Optional)\n\n\nBig names in the industry, like Facebook, Netflix, and Airbnb, use React, which is the most popular JavaScript tool for making dynamic web apps.\nLearning how to use React will help your job by letting you make modern, fast, and scalable web apps.\nSign up for this course to get your skills up to speed quickly and find jobs that are in high demand!\n\n\nThis course doesn't require any prior React knowledge!\n\n\nThis course starts with zero knowledge assumed! All you need is basic Javascript, HTML and CSS knowledge.\n\n\nSo what are you waiting for ? join the course risk-free thanks to the 30-day money-back guarantee and I'll see you there :)",
      "target_audience": [
        "Web developers or designers who want to step to master React and professionally start developing using it"
      ]
    },
    {
      "title": "React and its Ecosystem - A Complete Beginner's Guide",
      "url": "https://www.udemy.com/course/react-and-its-ecosystem-a-complete-beginners-guide/",
      "bio": "Learn React.js from scratch! Get a deep understanding of the fundamentals, advanced topics, hooks, redux and more!",
      "objectives": [
        "Deep understanding of React Fundamentals, Advanced Topics and Hooks",
        "Learn the most popular packages that work with React like React Redux",
        "Understand why React code is written the way it is written"
      ],
      "course_content": {
        "React Fundamentals": [
          "Introduction",
          "Hello World",
          "Folder Structure",
          "Components",
          "Function Components",
          "Class Components",
          "Hooks update",
          "JSX",
          "Props",
          "State",
          "setState",
          "Destructuring Props and State",
          "Event Handling",
          "Binding Event Handlers",
          "Methods as Props",
          "Conditional Rendering",
          "List Rendering",
          "Lists and Keys",
          "Index as Key Anti-pattern",
          "Styling and CSS Basics",
          "Basics of Form Handling",
          "Component Lifecycle Methods",
          "Component Mounting Lifecycle Methods",
          "Component Updating Lifecycle Methods",
          "Resources"
        ],
        "React Advanced Topics": [
          "Fragments",
          "Pure Components",
          "memo",
          "Refs",
          "Refs with Class Components",
          "Forwarding Refs",
          "Portals",
          "Error Boundary",
          "Higher Order Components - Part 1",
          "Higher Order Components - Part 2",
          "Higher Order Components - Part 3",
          "Render Props - Part 1",
          "Render Props - Part 2",
          "Context - Part 1",
          "Context - Part 2",
          "Context - Part 3",
          "HTTP",
          "HTTP GET Request",
          "HTTP POST Request"
        ],
        "React Hooks": [
          "Introduction",
          "useState Hook",
          "useState with Previous State",
          "useState with Object",
          "useState with Array",
          "useEffect Hook",
          "useEffect after Render",
          "Conditionally Run Effects",
          "Run Effects Only Once",
          "useEffect with Cleanup",
          "useEffect with Incorrect Dependency",
          "Fetching Data with useEffect - Part 1",
          "Fetching Data with useEffect - Part 2",
          "Fetching Data with useEffect - Part 3",
          "useContext Hook - Part 1",
          "useContext Hook - Part 2",
          "useContext Hook - Part 3",
          "useReducer Hook",
          "useReducer (Simple State & Action)",
          "useReducer (Complex State & Action)",
          "Multiple useReducers",
          "useReducer with useContext",
          "Fetching Data with useReducer - Part 1",
          "Fetching Data with useReducer - Part 2",
          "useState vs useReducer",
          "useCallback Hook",
          "useMemo Hook",
          "useRef Hook - Part 1",
          "useRef Hook - Part 2",
          "Custom Hooks",
          "useDocumentTitle Custom Hook",
          "useCounter Custom Hook",
          "useInput Custom Hook",
          "Resources"
        ],
        "React and Redux": [
          "Introduction",
          "Getting Started",
          "Three Core Concepts",
          "Three Principles",
          "Actions",
          "Reducers",
          "Store",
          "Cakes and Ice Creams",
          "Multiple Reducers",
          "Combine Reducers",
          "Middleware",
          "Async Actions",
          "Redux Thunk Middleware",
          "React Redux Setup",
          "Actions",
          "Reducers",
          "Store",
          "connect",
          "React Redux with Hooks",
          "useSelector Hook",
          "useDispatch Hook",
          "Cakes and Ice Creams",
          "Logger Middleware",
          "Redux Devtool Extension",
          "Action Payload",
          "mapStateToProps",
          "mapDispatchToProps",
          "Async Actions",
          "Redux Thunk GET Request",
          "Resources"
        ],
        "Practical React": [
          "Introduction",
          "Icons",
          "Toast Notifications",
          "Modal",
          "Tooltip",
          "CountUp",
          "Idle Timer",
          "Color Picker",
          "Credit Cards",
          "Date Picker",
          "Presentation Decks",
          "Video Player",
          "Loading Indicators",
          "Charts"
        ],
        "React Formik": [
          "Introduction",
          "Simple Form",
          "useFormik Hook",
          "Managing Form State",
          "Handling Form Submission",
          "Form Validation",
          "Validation Function",
          "Displaying Error Messages",
          "Visited Fields",
          "Improving Validation UX",
          "Schema Validation with Yup",
          "Reducing Boilerplate",
          "Formik Component",
          "Form Component",
          "Field Component",
          "ErrorMessage Component",
          "Journey So Far",
          "Field Revisited",
          "ErrorMessage Revisited",
          "Nested Objects",
          "Arrays",
          "FieldArray Component",
          "FastField Component",
          "When does Validation Run?",
          "Field Level Validation",
          "Manually Trigerring Validation",
          "Disabling Submit - Part 1",
          "Disabling Submit - Part 2",
          "Load Saved Data",
          "Reset Form Data",
          "Building Reusable Formik Controls",
          "FormikControl Component",
          "Input",
          "Textarea",
          "Select",
          "Radio Buttons",
          "Checkbox Group",
          "Date Picker",
          "Login Form",
          "Registration Form",
          "Course Enrollment Form",
          "Wiring up a UI Library",
          "ChakraInput",
          "Wrapping Up",
          "Resources"
        ],
        "React Render and Optimization": [
          "Introduction",
          "Rendering",
          "useState",
          "useReducer",
          "State Immutability",
          "Parent and Child",
          "Same Element Reference",
          "React memo",
          "Questions on Optimziation",
          "Incorrect memo with children",
          "Incorrect memo with Impure Component",
          "Incorrect memo with props Reference",
          "useMemo and useCallback",
          "Context",
          "Conext and memo",
          "Context and Same Element Reference",
          "Resources"
        ]
      },
      "requirements": [
        "HTML, CSS and JavaScript fundamentals are absolutely required",
        "You DON'T have to be a JavaScript expert to take up this course",
        "NO prior React or any other JS framework experience is required!"
      ],
      "description": "Start from 0 and learn everything to do with React and its ecosystem. This course will be an ever growing course as the react ecosystem is continously evolving. All updates aer of course availabl for free\nContent and Overview\nSpecifically for beginners, this course contains all the fundamentals and advanced topics  you need to know, in one place, simplified and straight forward!\nIf you're looking for a React develoepr job or planning on enhancing your React knowledge, this course will hit you with the utmost clarity on why React code is written the way it is.\n\n\nWe will start with the fundamentals and move on to the advanced topics, and hooks. We then dive into the React ecosystem starting with Redux and move on to working with Forms using Formik. Later on, explore some of the popular packages you tend to use in a React app. Focus on performance optimization and more.",
      "target_audience": [
        "Web developers interested in learning React and its ecosystem"
      ]
    },
    {
      "title": "Learn React by Building Real Projects",
      "url": "https://www.udemy.com/course/learn-react-by-building-a-real-projects/",
      "bio": "Be challenged and build a real web application",
      "objectives": [
        "Learn React",
        "Working with forms",
        "Filtering Data",
        "Breaking down layouts with components"
      ],
      "course_content": {
        "Introduction to React": [
          "Setting Up Environment",
          "This course is free because...",
          "A quick peek under the hood",
          "My first Component",
          "Different ways to create components",
          "Attributes with jsx",
          "Working with events",
          "Lets organize these components",
          "Passing Data through props"
        ],
        "Build Real Estate App": [
          "Setting up for the real estate",
          "laydown the header",
          "Finish styling the header",
          "Laydown content area",
          "Filter HTML",
          "Style the filter section",
          "Laydown Listings Area",
          "Style search bar and sort area",
          "style the listing box part 1",
          "Style the listing box part 2",
          "Style the listing box part 3",
          "Pagination",
          "Creating dummy data",
          "Loop our data",
          "Working with forms",
          "Filtering by price and floor",
          "Filter by City",
          "Populating Data",
          "Sorting Data",
          "Change Vies",
          "Search functionality",
          "More Videos Coming Every Day",
          "Real Estate App Conclusion"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "Javascript"
      ],
      "description": "One of the most important projects for a developer is to build a real estate app because of so many different skills that are needed to create it. So for developers this is a must have for your portfolio. We go from learning how react works to building each component to filtering the listings.",
      "target_audience": [
        "Any developer that is looking to learn react by building real apps"
      ]
    },
    {
      "title": "DigitalOcean Cloud Platform Fundamentals",
      "url": "https://www.udemy.com/course/digitalocean/",
      "bio": "Learn the fundamentals of an easy to use cloud platform and master it",
      "objectives": [
        "What is cloud and how to work with it",
        "Various services and features of DigitalOcean",
        "Working with DigitalOcean Droplets",
        "Working with new Spaces API",
        "Working with load balancers, DigitalOcean Firewalls, Networking, and more"
      ],
      "course_content": {
        "Introduction": [
          "Course Kickstart!",
          "What is DigitalOcean?",
          "DigitalOcean v/s AWS and similar platforms",
          "DigitalOcean v/s Heroku and similar platforms",
          "DigitalOcean v/s GoDaddy and similar platforms",
          "Let's start DigitalOcean!"
        ],
        "DigitalOcean Droplets": [
          "What is a droplet?",
          "DigitalOcean Droplet plans",
          "DigitalOcean data centers",
          "Setting up SSH for a droplet",
          "Simple web app on DigitalOcean Droplet",
          "Enabling usage metrics for a droplet"
        ],
        "Firewalls": [
          "What is a firewall?",
          "TCP and UDP firewall rules"
        ],
        "VPC": [
          "What is VPC and why is it needed?",
          "Creating a VPC with DigitalOcean",
          "Communicating among droplets within VPC"
        ],
        "Snapshots": [
          "DigitalOcean Snapshot intro",
          "What are DigitalOcean Snapshots? Why are they needed?",
          "Creating a snapshot",
          "Restoring droplet from snapshot"
        ],
        "Spaces": [
          "What is DigitalOcean Spaces?",
          "Block storage vs object storage",
          "Creating your first space",
          "Uploading files on spaces",
          "Public file listing",
          "Private files and signed URLs"
        ],
        "Finishing off": [
          "Finishing off"
        ]
      },
      "requirements": [
        "A laptop with a modern browser should be fine"
      ],
      "description": "DigitalOcean makes it simple to launch in the cloud and scale up as you grow – with an intuitive control panel, predictable pricing, team accounts, and more.\nThis is a great course to get you started with DigitalOcean. In this course, we'll cover everything about DO and how you can get started using it by making a lot of the most common things used familiar to you:\nDigitalOcean Droplets\nDigitalOcean Spaces\nDeploying VPC\nCloud Firewall\nSnapshots\nNetworking\nCommunication b/w instances\nPricing of most services\nCloud is the future. And DigitalOcean allows you to cheaply get started with it and learn it. It's like the baby steps for more advanced cloud platforms like AWS or GCP. Learning DO is a must if you're an indie developer wanting to get into Cloud and DevOps. Hurry up and get yourself equipped with the most in-demand tech!",
      "target_audience": [
        "Anyone who wants to learn about cloud computing",
        "Anyone who wants to setup their web app end to end on a cloud",
        "Anyone getting into cloud computing and wants a way to start easily"
      ]
    },
    {
      "title": "Creative Web Animation with GSAP 3 [ JavaScript SVG CSS ]",
      "url": "https://www.udemy.com/course/advanced-web-animations-with-gsap-from-greensock-javascript-svg-css/",
      "bio": "Learn GSAP 3 [Greensock Animation Platform] and plugins. Building creative web animations with JavaScript SVG CSS Canvas",
      "objectives": [
        "Basic concepts [Gsap object, Tween, common methods for it creating, Timeline tool, Position parameters, Basic animation control methods, Easing]",
        "Animation methods and properties of the GSAP core [purpose, syntax, application features, examples of using]",
        "GSAP core plugins [AttrPlugin, CSSPlugin, ModifiersPlugin, EndArrayPlugin, SnapPlugin]",
        "This course contains unique animation projects which illustrate the features of the properties and methods included in the core of the GSAP library"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to GSAP",
          "Introduction to course structure and topical overview",
          "installing the GSAP library"
        ],
        "Basic GSAP concepts": [
          "JavaScript object & gsap object",
          "Tween",
          "Common methods for creating a Tween",
          "Timeline tool",
          "Positioning of animations on the timeline",
          "Basic animation control methods"
        ],
        "GSAP capabilities in depth": [
          "set() method",
          "Staggered animations [numerical values part1: lesson2a]",
          "Staggered animations [numerical values part1: lesson2b]",
          "Staggered animations [numerical values part1: lesson2c]",
          "Staggered animations [numerical values part2]",
          "Your help is needed here!",
          "Staggered animations [configuration objects]",
          "Staggered animations [functions as values]",
          "Animation construction logic [Interactivity]",
          "Animation construction logic [Recursion]"
        ],
        "GSAP core Plugins": [
          "AttrPlugin [Animation of SVG filters]",
          "CSSPlugin [Part 1: general information]",
          "CSSPlugin [Part 2: Animation of complex values]",
          "CSSPlugin [Part3: Simultaneous animation of 2d and 3d properties]",
          "CSSPlugin [Part4: xPercent, yPercent]",
          "CSSPlugin [Part5: Directional rotation]",
          "CSSPlugin [Part6: Animation of CSS filters]",
          "ModifiersPlugin",
          "ModifiersPlugin [Part 2]",
          "EndArrayPlugin",
          "SnapPlugin"
        ],
        "Extra Eases [Ease Pack]": [
          "ExpoScaleEase [Part1]",
          "ExpoScaleEase [Part2]",
          "ExpoScaleEase [Part3]",
          "ExpoScaleEase [Part4]",
          "ExpoScaleEase [Part5]"
        ],
        "GSAP Extra Plugins": [
          "TextPlugi [Part 1]",
          "TextPlugi [Part 2]",
          "TextPlugi [Part 3]",
          "TextPlugi [Part 4]",
          "TextPlugi [Part 5]",
          "Draggable [Part 1]",
          "Draggable [Part 2]",
          "Draggable [Part 3]",
          "Flip [Part 1]",
          "Flip [Part 2]",
          "Flip [Part 3]",
          "Flip [Part 4]",
          "Flip [Part 5]",
          "ScrollTrigger [Part1]",
          "ScrollTrigger [Part2]",
          "ScrollTrigger [Part3]",
          "ScrollTrigger [Part4]",
          "ScrollTrigger & ScrollToPlugin [Parallax] [Part1]",
          "ScrollTrigger & ScrollToPlugin [Parallax] [Part2]",
          "ScrollTrigger & ScrollToPlugin [Parallax] [Part3]",
          "ScrollTrigger & ScrollToPlugin [Parallax] [Part4]"
        ],
        "Showcase for Inspiration": [
          "Page scrolling [Part1]",
          "Page scrolling [Part2]",
          "Page scrolling [Part3]",
          "Image Galleries [Part 1]",
          "Image Galleries [Part 2]",
          "Parallax [Part 1]",
          "Parallax [Part 2]",
          "A bit of Creativity [Part 1]",
          "A bit of Creativity [Part 2]",
          "A bit of Creativity [Part 3]"
        ],
        "Bonus section": [
          "Information",
          "Interactive Web Animation. 3d Positioning (Part1)",
          "Interactive Web Animation. 3d Positioning (Part2)",
          "Interactive Web Animation. 3d Positioning (Part3)",
          "Interactive Web Animation. Demo lesson [part 1]",
          "Interactive Web Animation. Demo lesson [part 2]",
          "Interactive Web Animation. Demo lesson [part 3]",
          "Interactive Web Animation. Demo lesson [part 4]",
          "HTML Canvas element [Introduction]. Part1",
          "HTML Canvas element [Introduction]. Part2",
          "HTML Canvas element [Introduction]. Part3",
          "Canvas & Web Audio API [Audio Visualizer]. Part1",
          "Canvas & Web Audio API [Audio Visualizer]. Part2",
          "Canvas & Web Audio API [Audio Visualizer]. Part3",
          "Canvas & Web Audio API [Audio Visualizer]. Part4",
          "Canvas & Web Audio API [Audio Visualizer]. Part5",
          "Pixel canvas manipulation [ImageData object]. Part1",
          "Pixel canvas manipulation [ImageData object]. Part2",
          "Pixel canvas manipulation [ImageData object]. Part3",
          "Pixel canvas manipulation [ImageData object]. Part4",
          "Pixel canvas manipulation [ImageData object]. Part5",
          "Introduction to Chart.js [Part 1]",
          "Introduction to Chart.js [Part 2]",
          "Introduction to Chart.js [Part 3]",
          "Introduction to Chart.js [Part 4]",
          "Introduction to Chart.js [Part 5]",
          "Introduction to Chart.js [Part 6]",
          "What's next?"
        ]
      },
      "requirements": [
        "Basic knowledge of CSS, SVG and JavaScript",
        "Web browser - Google Chrome (all animations have been tested in this browser)",
        "A text editor or you can work in the online CodePen editor (links to examples with code are prepared and attached to the corresponding lessons)",
        "There are lessons where the preparation of images in a graphics editor is required for animations (images are already prepared and attached to the corresponding lessons)",
        "Archiver for unpacking \".rar\" archive with animation sources [If you choose the option of working with the code in the online editor CodePen, you will not need an archiver]"
      ],
      "description": "Do you want to learn how to build creative web animations? Perhaps you are already familiar with GSAP animation and want to deepen and expand this knowledge? Are you looking for interesting animation effects and optical illusions?\nYou have chosen the right course!\n\n\nIn this course, you will learn a very powerful tool for creating web animations: the GreenSock Animation Platform (GSAP). You will get acquainted with the latest version of the web animation tool: GSAP 3. Today it is the most robust, high-performance JavaScript animation library on the planet!\n\n\nThis tutorial uses the classic academic teaching model. At the beginning of the lessons, theoretical information is presented, followed by practical web animation examples that consolidate new knowledge. The aim of this course is to show the completeness and variety of animation techniques using GSAP.\n\n\nThis course is structured sequentially: from simple to complex. At the very beginning, the basic concepts are studied and the simplest animations are built, then a dive into the available properties and methods of the GSAP library follows, and more complex animations are built. And finally, towards the end of the course, there is an acquaintance with built  into the core plugins as well as external plugins. In the final part, the most interesting and complex web animations will be built.\n\n\nThe structure of the graphic design of the course:\nin the upper right part - the title of the chapter [Example: “GSAP capabilities in depth”];\nin the upper left part - the number of the lesson in the current chapter [Example: “Lesson 1”];\nin the upper middle part - the name of the lesson or the next topic of the current lesson [Example: “CSSPlugin (Part3: Simultaneous animation of 2d and 3d properties)”];\non the right side of the screen - a board with theoretical information;\non the left side of the screen - Visual studio code editor with examples illustrating the theory\nat the bottom of the screen - additional auxiliary information [Example: “smoothOrigin: true”].\nAll lessons in this course are available for viewing in 1080p quality [view lessons in maximum quality whenever possible.]\n\n\nIn this course, you will find many interesting javascript animation examples with code.\nYou can work and experiment on your own by choosing one of two options\nGet a link to the code of the current lesson in the online CodePen editor (for this you need to click the “Resources” button corresponding to the lesson you are currently studying, download the file with the link [example file: “C2L1 CodePen Link.txt”], open it in a text editor and follow the link).\nDownload the archive [example: “C1L2.rar”]. Unpack to disk. Open files in a text editor [“Visual Studio Code” can become a convenient editor, or any of your choice]. Connect the library according to the “Lecture 2” [“Installing the library”] instruction in the “Introduction” chapter.\n\n\nUpon completion of the course, you will fully master the GSAP 3 library. And you will be able to create any web animations that your imagination will allow you.\n\n\nSEO part:\nAre you looking to build creative web animations or expand your knowledge of the GreenSock Animation Platform [GSAP]? If so, you're in the right place! In this course, you'll learn how to use the latest version of GSAP 3 – the most robust and high-performance JavaScript animation library on the planet.\nThe course is designed using a classic academic teaching model, with theoretical information presented at the beginning of each lesson, followed by practical web animation examples to consolidate new knowledge. Our goal is to show you the completeness and variety of animation techniques using GSAP.\nThe course is structured sequentially, starting with the basics and gradually progressing to more complex animations, with an introduction to the plugins built into the core of the library towards the end. The graphic design of the course includes the title of the chapter, the lesson number, the name of the lesson or the next topic, theoretical information on the right, a Visual Studio code editor on the left with examples illustrating the theory, and additional auxiliary information at the bottom.\nThis course offers 1080p quality lessons with subtitles available in English, Arabic, Finnish, French, German, Hindi, Indonesian, Italian, Japanese, Korean, Norwegian, Polish, Portuguese, Russian, Spanish, Swedish, Traditional Chinese, Turkish, and Vietnamese.\nYou'll find many interesting JavaScript animation examples with code, and you can experiment on your own by choosing one of two options. First, you can get a link to the code of the current lesson in the online CodePen editor. Second, you can download the archive and unpack it to your disk. Open the files in a text editor and connect the library according to the instruction in the \"Introduction\" chapter.\nUpon completion of the course, you'll fully master the core of the GSAP 3 library and be able to create any web animations that your imagination allows.\nEnroll now and start building stunning web animations using JavaScript, SVG, and CSS with the GreenSock Animation Platform.",
      "target_audience": [
        "everyone who is interested in web animation",
        "JavaScript developers",
        "CSS developers",
        "Html developers",
        "website designer",
        "frontend developers",
        "UX/UI designers",
        "for people who collect a unique library of knowledge in order to have access to it from anywhere in the world",
        "creative people interested in learning new things"
      ]
    },
    {
      "title": "The complete Javascript ES6 course.",
      "url": "https://www.udemy.com/course/the-complete-javascript-es6-course/",
      "bio": "Upgrade your javascript knowledge to 6.0",
      "objectives": [
        "You will learn ES6 from the ground up.",
        "How to use the tools ES6 provides to code at today's standards"
      ],
      "course_content": {},
      "requirements": [
        "Knowing a liitle bit of HTML, CSS and Javascript, everything else you will learn it as we go."
      ],
      "description": "Upgrade yourself with ES6 !!\nWant to take you JavaScript knowledge to meet today's standards ? so this is the course for you.\nRight here you will learn ES6 from the ground up.\nRight know in the web development industry, there is a growing demand for modern web framework such as REACT, Angular or VUE. So mastering ES6 syntax will put you in a place were you can create amazing web apps and meet today's standards.\nThis new version of JavaScript comes with a lot of new features and a bunch of updates for the old ways. We will cover every new piece of syntax ES6 provides to us as well as the updates that made this language great, but now makes it better.\nStarting from the foundation of JS Array helpers such as \"foreach\", \"map\", \"reduce\", \"for..in\", then we will learn the new ways to interact with our code with \"Object literals\", \"template strings\", \"default arguments\" ,\"classes\" and we will end learning the hard stuff of ES6 like \"Generators\" and \"modules\".\nWhich topics will we cover ?\nConstants and variables\nTemplate strings\nArray helpers ( foreach, map, filter, reduce, every and some, reduce, for..of)\nFat arrow functions\nObject literals and default function arguments\nRest and Spread operator.\nHow to use classes\nMake the code simple with Destructuring\nPromises and fetch\nHow to use modules\nGenerators\nMap and Set",
      "target_audience": [
        "From beginners in javascript to intermediate."
      ]
    },
    {
      "title": "Chrome Developer Tools Course",
      "url": "https://www.udemy.com/course/chrome-developer-tools-course/",
      "bio": "Learn Chrome DevTools to edit, debug, test and optimize your web apps",
      "objectives": [
        "Edit websites on-the-fly",
        "Test ideas and quickly make some design changes",
        "Add workspaces and persist changes to disk",
        "Use command menu",
        "Debug JavaScript code",
        "Set breakpoints",
        "Use Console Log and other commands",
        "Improve load and runtime performance",
        "Analyze security issues",
        "Find memory leaks and fix memory problems",
        "Make audit and improve website's google ranking",
        "Inspect and Debug Progressive Web Apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Chrome Developer Tools Overview",
          "Chrome Developer Tools resources",
          "Panels overview"
        ],
        "Elements panel": [
          "HTML and DOM changes",
          "Edit CSS",
          "Command menu",
          "Adding a workspace",
          "Elements panel_Keyboard shortcuts",
          "Elements panel quiz"
        ],
        "Debugging": [
          "JavaScript debugging pane overview",
          "Breakpoints",
          "Debugging JS code",
          "Console panel",
          "Additional tips",
          "Debugging_quiz"
        ],
        "Audit and Performance": [
          "Web fundamentals / Performance matters",
          "Critical Rendering Path",
          "Critical Rendering Path Optimization",
          "Network panel",
          "Performance panel",
          "Memory panel",
          "Garbage Collector",
          "Application panel",
          "Security panel",
          "HTTP/HTTP2/HTTPS",
          "Audits panel",
          "Audit and Performance quiz",
          "Bonus lecture: Additional tools",
          "Bonus lecture: Increase your website speed: Image Optimization"
        ]
      },
      "requirements": [
        "basic knowledge of html, css and/or javascript (for debugging)"
      ],
      "description": "Google Chrome is currently one of the most popular web browsers used by web developers today, but most people only know about the most basic features. Chrome Developer Tools provide deeper access to the web applications and knowledge of additional features can increase productivity and your work speed.\nDuring the course you will learn such things as..\nInspect and Edit HTML and CSS\nDebug JavaScript\nSet Breakpoints\nConsole Logs and other Commands\nUse Snippets\nAdd Workspaces and Persist Changes to Disk\nView and Remove Browser Storage\nExamine Network and Resources\nAnalyze Memory and Security Problems\nOptimize Critical Rendering Path\nDiscover useful tools\nTest and Optimize Performance\nPerform Audits\nOptimize Website's Speed\nThis course consists of 3 main sections: editing, debugging, testing and optimizing performance. We'll walk through each of 9 panels of Chrome's developer tools and learn all the great, useful things they can do.\nAfter finishing this course you'll be able  to use your new knowledge in developing faster and better apps!",
      "target_audience": [
        "web-developers",
        "web-designers",
        "software developers",
        "project/product managers"
      ]
    },
    {
      "title": "Amazon Web Services (AWS) with JavaScript & NodeJS",
      "url": "https://www.udemy.com/course/amazon-web-services-aws-with-javascript-nodejs/",
      "bio": "Learn Amazon Web Services (AWS) Features with JavaScript & NodeJS",
      "objectives": [
        "In this course students will learn how to work with AWS IAM",
        "In this course you will learn how to work with AWS Dynamodb and how you can integrate that with JavaScript & NodeJS",
        "In this course you will learn how to work with AWS S3 (Simple Storage Services) and JavaScript",
        "In this course you will learn how to work with AWS RDS (Relation Database Service)",
        "In this course you will learn how to work with AWS EC2 (Elastic Compute Cloud)",
        "In this course you will learn how to work with Lambda Functions",
        "In this course you will learn how to work with SES (Simple Email Services)",
        "In this course you will learn how to work with Amazon Elastic Beanstalk",
        "In this course students will learn deploying NodeJS REST API in Elastic Beanstalk and adding custom domain from Route53"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction",
          "Course Requirements"
        ],
        "AWS & IAM V2 Introduction": [
          "AWS Introduction & Creating Account",
          "AWS Region Overview",
          "What Is IAM",
          "Creating IAM User",
          "AWS Console UI Changes",
          "Signing As IAM User",
          "IAM User Group",
          "AWS Configuration with JavaScript",
          "Changes in IAM Creating Programmatic Access Key",
          "Installing AWS SDK Version 2 For JavaScript",
          "Creating IAM User with JavaScript",
          "List All AWS Users with JavaScript",
          "Update AWS IAM User with JavaScript",
          "Creating AWS Custom Policy with JavaScript",
          "List All AWS Policies with JavaScript",
          "Attach Policy to IAM User with JavaScript",
          "Detach Policy from IAM User with JavaScript",
          "Create AWS User Group with JavaScript",
          "Attach AWS Policy to Group with JavaScript",
          "Adding Users to AWS Group with JavaScript",
          "Detach Policy from Group with JavaScript",
          "Create IAM User Access Key with JavaScript",
          "Create Login Profile with JavaScript",
          "Delete Login Profile with JavaScript",
          "Change IAM User Password with JavaScript",
          "Delete an IAM User with JavaScript",
          "Get Information About Group with JavaScript",
          "Get Information about IAM User with JavaScript"
        ],
        "AWS & IAM V3 Introduction": [
          "Create IAM User with SDK Version 3",
          "Listing IAM Users with JavaScript V3 SDK",
          "Update IAM User with JavaScript V3 SDK",
          "Create Policy with JavaScript V3 SDK",
          "Listing Policies with JavaScript V3 SDK",
          "Attach Policy to IAM User with JavaScript V3 SDK",
          "Detach Policy from IAM User with JavaScript V3 SDK",
          "Create IAM User Group with JavaScript V3 SDK",
          "Attach Policy to User Group with JavaScript V3 SDK",
          "Add Users to Group with JavaScript V3 SDK",
          "Detach Policy from Group with JavaScript",
          "Create Access Key for the User with JavaScript",
          "Create Login Profile with JavaScript",
          "Delete Login Profile with JavaScript",
          "Delete IAM User with JavaScript"
        ],
        "Advanced AWS IAM": [
          "Create IAM Roles with JavaScript",
          "Attach Policy to IAM Role",
          "Create Instance Profile",
          "Add Role to Instance Profile with JavaScript",
          "Create EC2 Instance with Role",
          "IAM Conditional Policies with JavaScript",
          "IAM Users Tag Management"
        ],
        "IAM with AWS CloudShell": [
          "AWS CloudShell Create IAM User",
          "AWS CloudShell IAM Login Profile",
          "AWS CloudShell IAM User Policy",
          "AWS CloudShell Create Access Key",
          "AWS CloudShell Create Group"
        ],
        "Dynamodb with JavaScript V2 SDK": [
          "Introduction to Dynamodb",
          "Creating Table in Dynamodb",
          "Read & Write Capacity",
          "Dynamodb PartiQL Editor",
          "Global Secondary Index (GSI)",
          "Inserting Data to Dynamodb with JavaScript",
          "Insert Multiple Items with BatchWriteItem in JavaScript",
          "Describing Dynamodb Table with JavaScript",
          "List Dynamodb Tables with JavaScript",
          "Update Table with JavaScript",
          "Create Backup with JavaScript",
          "Get Item from Dynamodb Table with JavaScript",
          "Get Batch Items with JavaScript",
          "Delete Dynamodb Table with JavaScript",
          "Create Dynamodb Table with JavaScript",
          "Load Movie Data to Dynamodb Table with JavaScript",
          "Adding Single Movie with JavaScript",
          "Get Movie Item with JavaScript",
          "Update Movie with JavaScript",
          "Delete Dynamodb Item with JavaScript"
        ],
        "Dynamodb with JavaScript V3 SDK": [
          "Creating Dynamodb Table with JavaScript V3 SDK",
          "Listing Dynamodb Tables with JavaScript SDK V3",
          "Describing Dynamodb Table with JavaScript V3 SDK",
          "Insert Data to Dynamodb Table with JavaScript V3 SDK",
          "Update Data in Dynamodb with JavaScript V3",
          "Get Item from Dynamodb with JavaScript V3",
          "Delete Item in Dynamodb with JavaScript V3",
          "BatchWriteCommand with Dynamodb",
          "BatchGetItemCommand with Dynamodb",
          "Updating Dynamodb Table with JavaScript V3",
          "Delete Dynamodb Table with JavaScript V3 SDK"
        ],
        "AWS ElasticCache": [
          "Introduction to AWS ElasticCache",
          "Testing Redis ElasticCache with EC2"
        ],
        "AWS Simple Storage Service (S3) with V2 SDK": [
          "Amazon S3 Introduction",
          "Uploading files to S3 Bucket",
          "Creating Bucket with JavaScript V2 SDK",
          "Upload Image to S3 Bucket with JavaScript",
          "Listing S3 Buckets with JavaScript",
          "Delete S3 Bucket with JavaScript V2 SDK",
          "Delete Non Empty Bucket with JavaScript V2 SDK",
          "Upload File to S3 Bucket with JavaScript",
          "Get Object from S3 Bucket with JavaScript",
          "Listing Objects with JavaScript",
          "List Filtered Objects with JavaScript",
          "Get Object Attribute with JavaScript",
          "Copy Object with JavaScript",
          "Delete an Object from S3 Bucket",
          "Delete Multiple Objects with JavaScript",
          "Hosting Static Website in Amazon S3"
        ],
        "AWS Simple Storage Service (S3) with V3 SDK": [
          "Creating Bucket with JavaScript V3",
          "Generate Bucket Policy with JavaScript",
          "Delete Bucket Policy with JavaScript",
          "Upload Image with JavaScript V3 SDK",
          "List Buckets with JavaScript V3 SDK",
          "Delete Bucket with JavaScript V3 SDK",
          "Delete Object with JavaScript V3 SDK",
          "Delete Multiple Objects with JavaScript V3 SDK",
          "List Objects with JavaScript V3 SDK",
          "Copy Object to Another Bucket with JavaScript"
        ]
      },
      "requirements": [
        "Basic Knowledge of JavaScript"
      ],
      "description": "In this course we are going to learn Amazon Web Services (AWS) with JavaScript & NodeJS, so Amazon Web Services (AWS) is the world’s most comprehensive and broadly adopted cloud platform, offering over 200 fully featured services from data centers globally. Millions of customers including the fastest growing startups, largest enterprises, and leading government agencies are using AWS to lower costs. And you can use AWS with different programming languages, in this course we want to learn AWS with JavaScript & NodeJS.\n\n\n\n\nThis course is divided in to different sections, we are going to use SDK version 2 and Version 3 for JavaScript, it means first we create our examples using JavaScript V2 SDK and after that V3 SDK.\n\n\nIn the first section we are going to talk about IAM, so IAM is AWS Identity and Access Management. With IAM, you can specify who can access which services and resources, and under which conditions, we will create some examples with AWS console and after that we go through JavaScript examples. also we are going to work with two versions of JavaScript\nSDK V2 and also V3\n\n\nIn the second section we want to learn about AWS Dynamodb, so DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you oﬄoad the administrative burdens of operating and scaling a distributed database so that you don't have to worry about hardware provisioning, setup and conﬁguration, replication, software patching, or cluster scaling. You don’t need to worry about these, because all of them are done by dynamodb.\n\n\nIn the third section we want to talk about amazon S3, so S3 stands for Simple Storage Service, it is an object storage service that offers industry-leading scalability, data availability, security, and performance.\n\n\nIn the fourth section we want to learn about Amazon RDS or Amazon Relational Database Services and we want to learn about two relational databases and their integration with JavaScript like MySQL and Postgres.\n\n\nIn the fifth section we are going to learn about Amazon EC2 or we can say elastic compute cloud and it provides scalable computing capacity in the Amazon Web Services (AWS) Cloud. We create some examples using the AWS console and after that we go through JavaScript, also we are going to deploy a NodeJS RESTAPI project in EC2.\n\n\nIn this sixth section we are going to talk about Elastic Beanstalk, Code Pipeline, Amazon RDS, Route53 and Certificate Manager, we create a simple REST API with NodeJS and we mix these technologies together.\nIt means that we add relational database to our NodeJS RESTAPI, after that we deploy our project using Code Pipeline to Elastic Beanstalk, after that we add a custom domain name to REST API using Route53 and at the end we request a certificate from AWS Certificate Manager and we assign that to the Nodejs Rest API\n\n\nIn the seventh section we want to talk about AWS Lambda Function , so it is server less computing service that lets you run code without provisioning or managing servers.\n\n\nIn the eight section we want to learn about AWS SES or we can say Simple Email Services, and using this service we can send emails to our customers.",
      "target_audience": [
        "Those who are interested in working with Amazon Web Services (AWS) with JavaScript & NodeJS",
        "Those who are interested in deploying NodeJS projects in Amazon Web Services like Elastic Beanstalk and EC2"
      ]
    },
    {
      "title": "Google Tag Manager for Developers",
      "url": "https://www.udemy.com/course/google-tag-manager-gtm/",
      "bio": "Learn to manage your analytics and remarketing scripts quickly and easily using GTM",
      "objectives": [
        "Use Google Tag Manager (GTM) to easily manage your tracking and remarketing scripts",
        "Master the core concepts of how Google Tag Manager works",
        "Integrate Google Analytics with GTM",
        "Integrate Facebook Pixel with GTM"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "What is Google Tag Manager?",
          "Meet your instructor"
        ],
        "Getting set up": [
          "Registering an account",
          "Tags and containers",
          "Creating your first container",
          "Install the GTM code",
          "Installing in WordPress",
          "WordPress plugin",
          "Using Tag Assistant",
          "Using other browsers"
        ],
        "Tags": [
          "Creating your first tag",
          "Previewing and publishing",
          "Setting up Google Analytics",
          "Setting up Facebook Pixel"
        ],
        "Triggers": [
          "What are triggers?",
          "Creating a trigger",
          "Using the trigger in a tag",
          "Sequencing tags",
          "Everything is a tag",
          "Sending events to Google Analytics",
          "Custom events"
        ],
        "Variables": [
          "What is a variable?",
          "Built-in variables",
          "DOM elements",
          "Cookies",
          "Data layer variables"
        ],
        "Cookbook": [
          "What are recipes?",
          "Custom dimensions in Google Analytics",
          "Google Analytics User-ID",
          "Track events with Facebook",
          "Install click tracking with FullStory",
          "Use if statements with variables"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "No experience with Google Tag Manager is required",
        "Students should have a basic understanding of analytics tools such as Google Analytics",
        "A basic knowledge of HTML will be useful, but not essential"
      ],
      "description": "Google Tag Manager (GTM) allows you to quickly and easily manage your analytics scripts, remarketing pixels, click tracking software and any other software that requires JavaScript tags inserting into your website.\nIn this course, you'll learn how to use GTM, from the fundamentals to more advanced features. Step-by-step we will walkthrough:\nCreating tags\nUsing event and URL-based triggers\nSequencing tags correctly\nTracking custom data with variables\nIntegrating with Google Analytics and Facebook Pixel\nYou will be able to follow along on your own website, from installing GTM, to setting up your tags, previewing, testing and publishing them.\nIf you want a practical guide to getting started with Google Tag Manager, this is the course for you. I can't wait to see you inside!",
      "target_audience": [
        "Digital marketers",
        "Web developers",
        "Anyone who works in analytics and marketing"
      ]
    },
    {
      "title": "PHP User Login Registration Script With All Features",
      "url": "https://www.udemy.com/course/php-user-login-registration-system/",
      "bio": "PHP User Management Login, Registration, Forgot Password, Members Area from Basic to Advanced Covering All The Features.",
      "objectives": [
        "Develop a User Management Application in PHP & MySQL",
        "Learn PHP & MySQL with Hands On Experience",
        "You can integrate Membership Area in your website.",
        "You will be able to create Web Applications on Your Own"
      ],
      "course_content": {
        "Introduction": [
          "New Project Demo",
          "How to Access the Source Code",
          "How to Access the Source Code (Windows)",
          "Source Code Download",
          "Old Project Demo"
        ],
        "Project Setup": [
          "Going through HTML files",
          "Migrating HTML files to PHP files",
          "2.3 Planning Database Tables",
          "2.4 Creating Database Tables",
          "2.5 Connecting to Database with PDO"
        ],
        "User Registration": [
          "3.1 Setting Up Registration Form & Registering New Users",
          "3.2 Adding PHP Validations",
          "3.3 Displaying Form Values on Failure",
          "3.4 Password Validations & Hashing",
          "3.5 Making E-Mail and Username Filed as Unique",
          "3.6 CSRF protection",
          "3.7 Adding User Registration to Activity Log",
          "3.8 Generating Activation Token",
          "3.9 Sending Email for User Account Activation",
          "3.10 Activating User Account through Email",
          "3.11 Adding Account Activation to Activity Log & Sending Email",
          "3.12 Adding Google ReCaptcha",
          "3.13 Username and Email Ajax Check"
        ],
        "User Login": [
          "4.1 Setting Up Login Form & Working on Login Functionality",
          "4.2 Adding PHP Validations & Displaying Form Values on Failure, Making Login wor",
          "4.3 CSRF protection",
          "4.4 Adding Account Login to Activity Log & Login Activity",
          "4.5 Limiting Failed Login Attempts - Brute Force Attacks",
          "4.6 Creating Secure Session",
          "4.7 Checking Login in Members Area Page",
          "4.8 Working on Logout functionality",
          "4.9 Adding Logout activity to activity log & Logging in Again without Logout add"
        ],
        "Reset Password": [
          "5.1 Working on Reset Form, Adding PHP Validations, CSRF Tokens & Displaying Form",
          "5.2 Checking User Account, Creating Reset Token and Adding Reset Token Email Sen",
          "5.3 Sending Reset Token Email",
          "5.4 Working on Update Password HTML Page, Adding PHP Validations, CSRF Tokens",
          "5.5 Getting User Details from DB & Preparing form to work for Password Update",
          "5.6 Working on Update Password Functionality, Adding Activity Log"
        ],
        "6 Members Area": [
          "6.1 Working on Members Area Dashboard HTML Page, Selecting Data from Database",
          "6.2 Creating Constructive UPDATE SQL query for Edit Profile Feature 1",
          "6.2 Creating Constructive UPDATE SQL query for Edit Profile Feature 2",
          "6.3 Inserting Activity Log after updating the Profile & Checking Passwords",
          "6.4 Updating Password & Adding Activity Log, Sending Password Update Email",
          "6.5 CSRF Token",
          "6.6 Uploading Profile Pic",
          "6.7 Displaying & Deleting Profile Pic",
          "6.8 Displaying Logged in User Activity Log & User Login Information"
        ],
        "Public Profile Page": [
          "7.1 Working on Public Profile HTML Page & Displaying information based on the id"
        ],
        "Working with User Permissions": [
          "8.1 Planning & Creating Permissions DB Table",
          "8.2 Fetching User Permissions on permissions page",
          "8.3 Working on Inserting User Permissions",
          "8.4 Working on User Permissions page to update permissions",
          "8.5 Checking Permissions to Display User Information"
        ],
        "Admin User Role": [
          "9.1 Setting Up DB Table for User Roles",
          "9.2 Checking the Admin User Login",
          "9.3 Displaying Additional information in Nav Bar for Admin User",
          "9.4 Displaying Login/Logout Information for Admin & Displaying Activity Log"
        ],
        "Fixing Bugs / Issues": [
          "1. If LoggedIn, Redirecting User to dashboard page from login & registration pag",
          "2. Fixing Navigation Issue with Footer Template File",
          "3. Updating Static Userid value with Session User Id on All Pages",
          "4. Updating Static From & To Email Addresses with Users Email",
          "5. Updating with User Name in Admin Activity Log Pages",
          "6. Create Clean URL's for User Profile",
          "7. Edit Profile File Upload Issue"
        ]
      },
      "requirements": [
        "Basic Knowledge of PHP & MySQL"
      ],
      "description": "Welcome to the course PHP User Login Registration System\n=> Watch the Promo Video to see what you can learn from this course\n=> You receive over 4+ hours of video content & 30+ lectures & So Much More!\n-----------------------------------------------------------------------------------------------------------------\nLast Updated on October 2017 | New Lectures added based on your feedback.\nIn this course you will learn about all the features of user management system. And it is best suitable for feature developers who want to learn with hands-on project. This project covers from basic to advanced concepts on working PHP project.\nStudents Feedback About Course :\nComprehensive tutorials for beginner given you have a background in programming for those starting to learn PHP and MySQL. But overall everything is understandable. Looking forward to more online course from this mentor. --- Ariel\nIt's good though front end and back end are joined together. But the tutorial is good and straight to the point. Would recommend it to others. --- Gerald\nGreat course. Giving me the actual experience of building something with php. --- Nafes\nAwesome course!!! I get to learn many new concepts and work around of PHP and also the course flow is perfect for beginners and intermediate learners and advance level. Thanks For this course. --- Hasan\nExcellent course. Just as described. Lessons are structured well and are become more difficult as you become more confident with the code. Great work and recommended. --- Jonathan\nThis course provides a perfect understanding of the PHP coding language. I've always been programming the way Vivek did, so this is an absolute recommendation to any programmer trying to achieve a secure online environment for their customers. -- Ben\n______________________________________________________________________________\nThis course (User Authentication System) is structured based on the topics for building complete login system php mysql. And it is easily understood by any one who has basic knowledge of PHP & MySQL. These are the main modules Registration, Login, Forgot(Reset) Password, Members Area..\nIn user registration system you will learn\nUsername availability check\nActivating user Account by E-Mail\nRemembering submitted form data\nSecuring User Registration\nAdding Captcha\nIn login system you will learn\nLogin with User Name or E-Mail\nSecuring Login from SQL injection\nIn forgot (reset) password, you will learn\nSending password directly through email\nResetting password using auto-generated password\nIn Members Area, you will learn\nAltering DB structure based on our needs\nUploading profile picture and lot more...\nAnd I'm going to add new lectures based on student inputs.\n-------------------------------------------------------------\nSee you in the course!\nSincerely,\nVivek Vengala",
      "target_audience": [
        "Who want to learn PHP with handson project.",
        "Who want to develop a web applications in PHP",
        "Who want to Create Dynamic Websites in PHP"
      ]
    },
    {
      "title": "Create Shopify App - Master Shopify CLI, App Bridge, Polaris",
      "url": "https://www.udemy.com/course/shopify-app/",
      "bio": "Learn Shopify App dev with React, Next.js, Node.js, Polaris, Shopify ScriptTag, Shopify Rest and GraphQL, App Bridge",
      "objectives": [
        "How to develop amazing Shopify Apps",
        "How to use the Shopify Rest API",
        "How to use the Shopify GraphQL API",
        "How to use Shopify Polaris",
        "How to use the Shopify CLI",
        "How to use the Shopify App Bridge to create embedded apps",
        "How to modify Shopify existent Themes to add our app changes",
        "How to create beautiful Shopify admin pages"
      ],
      "course_content": {
        "Introduction": [
          "Creating a Shopify partners account"
        ],
        "Installing and understanding the Shopify CLI": [
          "Installing the Shopify CLI",
          "Creating a Shopify Store",
          "Connecting the Shopify CLI to our Shopify Store"
        ],
        "Creating a Shopify App and installing in our Development Store": [
          "Installing our Shopify App",
          "Understand some of the Shopify template files created for us by the Shopify CLI"
        ],
        "Using the Shopify CLI to create new product to our development store": [
          "Adding products to our Shopify Developer Store"
        ],
        "Shopify Polaris, what is it and how it can help us": [
          "An Introduction to Polaris"
        ],
        "Creating a modal to select and save selected Shopify products from the store": [
          "Creating a Modal Popup on our Shopify App to display the products",
          "Saving our Select Products to state and displaying in our Shopify App"
        ],
        "Making our Shopify selection modal and table more attractive and functional": [
          "Displaying the selected products on our Shopify App",
          "Displaying an Empty State when no products where selected"
        ],
        "Trust me, it is not you it is NGrok": [
          "Too many connections NGrok error"
        ],
        "How to pre-select products before open the model in Shopify": [
          "Displaying the selected products on our Shopify App"
        ],
        "Adding images to our Shopify products": [
          "Adding image to our Shopify products and displaying on our app"
        ]
      },
      "requirements": [
        "Basic to intermediary programming language",
        "Knowledge of JavaScript or another programming language",
        "Knowledge in React, Next JS and Node JS is an advantage"
      ],
      "description": "Shopify is growing exponentially and this is the time for you to get your share of this pie and be free from the 9 am to 5 pm job\nAccording to the Shopify Developers website, Shopify developers have the potential to make $272,000.00 a year, today there are more than 500.000 Shopify stores driving more than $40 billion worth of sales, and these store owners need your help to developed apps to make the life easier, and they are happy to pay, some even will contract freelancers to develop a custom solution for their store.\nI start to develop Shopify apps back in 2018 for my partner store, we use to design and sell baby clothes using Printfy, however, the Printfy app at the time was terrible, even tho it would create new products for you it would create a new product for each size and color and of course, we want to be all one product with many variants (different sizes and colors), my partner and I would expend hours after creating each new print grouping and fixing the cloths until one day I had enough and I thought to myself, I'm a developer I can create an app to make this laborious job easy.\nAnd so I start work on it, just to find out the many parts of the Shopify app is not well documented, after reading many documents and asking many questions on the Shopify forum and Slack I got it done, I told that was so cool I showed it at work where they also asked me to create a payment gateway for Shopify and so I did.\nIn this course, I will share everything I learned on my Shopify journey with you. And you will learn everything you need to know to be part of this trend, from creating a Shopify partners account, to create a fully functional app that will install and uninstall itself automatically on any Shopify Store.\nFew topics we will learn:\nHow to create a Shopify partners account\nHow to install the Shopify CLI\nHow to create a Shopify store\nHow to populate your new Shopify Store using the Shopify CLI\nHow to create an embedded Shopify App using Shopify App Bridge\nHow to create a Shopify Admin UI that looks like just the Shopify UI using Polaris\nHow to fetch, display and select products from the store using Shopify Rest API\nHow to fetch, modify and upload changes on the Shopify Store pages\nHow to create new pages on the Shopify Store\nHow to create new pages using Liquid (Shopify proprietary language)\nHow to instal and unistal ScriptTags\nHow to check if a ScriptTag is installed before display your app in the StoreFront\nHow to use Shopify Webhooks\nand much more\n\n\nIf you want to start your own business creating your own Shopify apps or working as a freelancer, this is the course for you.",
      "target_audience": [
        "Intermediate/Advanced developers interested in learn Shopify App Development",
        "JavaScript, React, or Node JS Developers",
        "Developers wanting to create amazing Shopify apps",
        "Developers that want to understand how Shopify Apps work",
        "Developer that want to start they own Freelance career",
        "Developers that want to start they own business building Shopify Apps"
      ]
    },
    {
      "title": "ASP.NET Core Deep-Dive in .NET 9",
      "url": "https://www.udemy.com/course/aspnet-core-deep-dive/",
      "bio": "Ultimate ASP.NET Core course with assignments and projects",
      "objectives": [
        "ASP.NET Core anatomy and structures",
        "In-Depth Exploration of HTTP",
        "Building Robust Middleware",
        "Minimal APIs Mastery",
        "MVC Framework",
        "Razor Pages",
        "Advanced Development Techniques",
        "API Documentation and Versioning",
        "Data Management Made Simple",
        "Error Handling, Exception Handling and Logging",
        "Authentication & Authorization"
      ],
      "course_content": {},
      "requirements": [
        "Basic HTML, CSS, Javascript",
        "Intermediate C#",
        "Good understanding of OOP, esp. the usage of interface (although Dependency Injection is thoroughly covered in this course)",
        "SQL basics and ADO .NET basics"
      ],
      "description": "Master ASP.NET Core like a pro and take your .NET skills to the next level! Join this in-depth course designed for developers eager to completely understand the ASP.NET CORE  and unlock the full potential of .NET 9. With hands-on assignments, real-world scenarios, and step-by-step explanations, you'll transform into an ASP.NET Core expert.\n\n\nCourse Overview:\nIntroduction to ASP.NET Core\nExplore the foundational concepts of ASP.NET Core, including its anatomy and structure, and follow step-by-step guidance to create your first ASP.NET Core app. This section sets the stage for your journey into modern web development.\nIn-Depth Exploration of HTTP\nGain a deep understanding of the HTTP protocol and its context within ASP.NET Core. You'll learn about HTTP methods like GET, POST, PUT, and DELETE, how requests and responses are handled in HttpContext, and how to refine routing logic to build robust applications.\nBuilding Robust Middleware\nMaster the middleware pipeline, from understanding its theory to implementing custom middleware components. Learn how to use built-in middleware, branch pipelines effectively, and avoid common issues when writing response logic.\nMinimal APIs Mastery\nDive into the world of Minimal APIs, covering everything from routing and model binding to validation and producing standardized results. You'll implement CRUD operations and work with features like query strings and custom route constraints.\nMVC for Professionals\nDelve into the Model-View-Controller (MVC) framework, starting with controllers and routing techniques. Discover how to bind models, validate inputs, and produce results efficiently. You'll also explore creating razor views, managing layouts, and integrating dependency injection.\nRazor Pages Demystified\nUncover the power of Razor Pages and understand how they differ from MVC. Learn to build dynamic apps with features like route matching, model binding, validation, and reusable components. This section ties together essential development techniques.\nAdvanced Development Techniques\nLearn to use Tag Helpers to simplify complex scenarios, create interactive views, and componentize your apps with partial views and JavaScript. Manage configurations and environments effectively to streamline your development process.\nBuilding APIs That Stand Out\nMaster the art of documenting and versioning APIs using OpenAPI, and secure your applications with JWT-based authentication. You'll learn to produce API results that are both consistent and customizable.\nData Management Made Simple\nSimplify data management with Entity Framework Core. Discover how to create a database context, configure connections, run migrations, and implement repositories for efficient data handling in your applications.\nError Handling and Logging\nUnderstand the anatomy of logs and learn how to write effective logs using built-in and custom loggers. You'll also master the art of handling errors gracefully with custom exception handling and status code management.\nSecuring Your Apps\nDevelop secure web applications by mastering authentication and authorization principles. Learn how to protect APIs with JWT authentication, enable HTTPS, and remove authentication tickets when necessary.\n\n\nWhy This Course?\nComprehensive Curriculum: Covers everything from basics to advanced concepts.\nHands-On Assignments: Apply what you learn with real-world scenarios.\nExpert Guidance: Designed by experienced professionals.\nUp-to-Date with .NET 9: Get ahead with the latest tools and practices.\n\n\nWho Should Enroll?\nAspiring developers looking to master ASP.NET Core.\nProfessionals seeking to upgrade their .NET skills.\nAnyone passionate about building modern, secure, and scalable web applications.\nGet Started Today!\nTransform your .NET skills with ASP.NET Core Deep Dive in .NET 9. Enroll now and take the first step toward becoming a sought-after .NET developer.",
      "target_audience": [
        "Aspiring developers looking to master ASP.NET Core.",
        "Professionals seeking to upgrade their .NET skills.",
        "Anyone passionate about building modern, secure, and scalable web applications."
      ]
    },
    {
      "title": "PHP with MySQL: Build Amazing Streaming Service",
      "url": "https://www.udemy.com/course/php-with-mysql-2023-build-amazing-streaming-service/",
      "bio": "Build Fancy Streaming Service with Admin Panel in PHP MySQL Bootstrap and PDO",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Build a full authentication system",
        "Learn to use advanced PDO queries",
        "Learn to hash and dehash passwords with PHP",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Create an amazing admin panel",
        "Create views counter system",
        "Create following system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Setting up and Getting Started": [
          "Code and Design for the Project",
          "Creating Config File",
          "Structuring our Project"
        ],
        "Creating Authentication System": [
          "Creating Register Page",
          "Logging Users in",
          "Starting Sessions and Validating"
        ],
        "Diving Deeper and Getting Main Features Done": [
          "Selecting Data for Slider",
          "Selecting Trending Shows pt.1",
          "Selecting Trending Shows pt.2",
          "Selecting Shows in Index Page pt.1",
          "Selecting Shows in Index Page pt.2"
        ],
        "Working with Genres and Shows": [
          "Selecting Genres",
          "Grabbing Shows for Every Category",
          "Display Single Show",
          "Loading other Shows and Comments",
          "Following Shows pt.1",
          "Following Shows pt.2"
        ],
        "Working with Episodes, Comments, Views and More": [
          "Inserting Comments",
          "Showing Episodes for every Show pt.1",
          "Showing Episodes for every Show pt.2",
          "Adding and Showing Comments",
          "Increasing Views Per User"
        ],
        "Building User Pages and Searching": [
          "Displaying Followed Shows",
          "Searching for Shows",
          "Validating and Cleaning up pt.1",
          "Validating and Cleaning up pt.2"
        ],
        "Getting Started with Admin Panel": [
          "Design and Code for Admin Panel",
          "Logging Admins in",
          "Starting Sessions and Validating"
        ],
        "Finishing Admins Section": [
          "Working with Index Page",
          "Showing Admins",
          "Creating New Admins"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and PDO",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Are you as fired up as I am? Do you want to build something awesome? Something amazing? Are you a web developer who wants a cool job? If so, then this course is for you. In this course, you will learn how to build a complete Streaming Service from the ground up in a few hours. I already made sure that every part of this course is concise, elegant, and informative, so don't miss out on this cool opportunity. I also included the files needed in different parts of the course for you to follow along with me step by step.\n\n\n\nHere is what you are going to learn, first of all, I am going to introduce you to the tools that we are going to be using in this course. And then we are going to build a full authentication system from scratch. While building this system I am going to introduce you to hashing and dehashing passwords. And then, we are going to build general and cool features inside our own app. It's going to be mainly on selecting and placing data. Right after this, we are going to work with genres and shows and we will build our following system to allow users to follow their new shows' updates. And then, we are going to let users comment and view episodes of the show and we are going to build our own views counter. We are going to finish the users' end by allowing users to view their followed shows and we are going to work with the search box. And now to the admins panel where we are going to let admins manage the web app by working with admins, episodes, shows, genres and more. Of course, there are a lot of things and functionlites to talk about in this course but I don't want to waste any more of your time. So if that sounds like something you are intersted in, conside getting the course now. See you inside",
      "target_audience": [
        "People who learned PHP and MySQL and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "Learn Top Ten PHP FrameWorks By Building Projects",
      "url": "https://www.udemy.com/course/learn-top-ten-php-frameworks-by-building-projects/",
      "bio": "An unique course which covers the ten most popular PHP frameworks and help you learn them by building projects",
      "objectives": [
        "Understand uniqueness and similarity among the ten frameworks",
        "Be a complete PHP web developer",
        "Learn all frameworks in one single course",
        "Learn to create applications using the most popular php frameworks"
      ],
      "course_content": {
        "Course Intro": [
          "Introduction"
        ],
        "CakePHP - Patient Manager": [
          "Section Intro",
          "Patientcare App & DB Setup",
          "Navigation & Adding Data Part A",
          "Navigation & Adding Data Part B",
          "Formatting Display Data",
          "User Login Functionality",
          "Logout & Access Control"
        ],
        "Yii2 - Job Board": [
          "Section Intro",
          "App & Database Setup",
          "Creating Controllers & Views with Gii",
          "Create Models & Category Actions Part A",
          "Create Models & Category Actions Part B",
          "Fetch & Display Jobs Part A",
          "Fetch & Display Jobs Part B",
          "Create Jobs",
          "Edit & Delete Jobs",
          "User Registration",
          "Login & Access Control"
        ],
        "Symfony - Event Calendar": [
          "Section Intro",
          "Controllers & Routing",
          "Views & Layout",
          "Fetching Categories & Events Part A",
          "Fetching Categories & Events Part B",
          "Creating Categories & Events Part A",
          "Creating Categories & Events Part B",
          "Edit Categories & Events",
          "Delete Categories & Events"
        ],
        "Codeigniter - Sparkup CMS": [
          "Section Intro",
          "Codeigniter Setup & Template Library Part A",
          "Codeigniter Setup & Template Library Part B",
          "Bootstrap Template",
          "Add Subjects Part A",
          "Add Subjects Part B",
          "List, Edit & Delete Subjects Part A",
          "List, Edit & Delete Subjects Part B",
          "Add Pages",
          "List, Edit & Delete Pages",
          "Dashboard & User CRUD",
          "Login Functionality",
          "Access Control",
          "Frontend Layout & Homepage",
          "Frontend Navigation Menu"
        ],
        "Laravel - Photo Gallery": [
          "Section Intro",
          "Controllers & Routes",
          "Views & Layouts",
          "Database & Create Gallery Part A",
          "Database & Create Gallery Part B",
          "Display Galleries",
          "Upload & Display Photos",
          "Photo Details",
          "User Authentication"
        ],
        "Zend - Knowledgebase": [
          "Section Intro",
          "Zend Module & Config",
          "Linking Controllers & Views",
          "Connect & Configure Database",
          "Displaying Categories & Articles",
          "Adding Categories & Articles",
          "Edit & Delete Categories & Articles",
          "Frontend Views"
        ],
        "Slim - RESTful API": [
          "Section Intro",
          "Slim PHP Setup Part A",
          "Slim PHP Setup Part B",
          "Fetching Posts",
          "Adding Posts",
          "Edit & Delete Posts",
          "Category CRUD",
          "API Use Example"
        ],
        "Nette - FreshIdeas Idea Diary": [
          "Section Intro",
          "Nette Setup",
          "Fetch & Display Ideas",
          "Commenting Functionality",
          "Creating & Updating Ideas",
          "Login & Authentication"
        ],
        "PHPixie - Weblink Manager": [
          "Section Intro",
          "PHPixie Processor Setup",
          "Database & Displaying Weblinks",
          "Adding Weblinks",
          "Viewing Individual Weblinks",
          "Editing & Deleting Weblinks"
        ]
      },
      "requirements": [
        "Basic Knowledge of PHP, MySQL and HTML is required for taking this course"
      ],
      "description": "ONE COURSE TO RULE THEM ALL- Eduonix brings you an unique and innovative course which will help you learn the top ten popular PHP frameworks. It will help you learn why a particular framework is suited for a project. It will provide you the complete perspective across all of them and will help you choose the best framework for your project.\nEach framework comes with its own set of benefits and features. If you are new to coding and haven’t yet determined which framework fits your developing style, then this course is perfect for you.\nOur PHP framework tutorial covers 10 of the most popular frameworks that are available. These frameworks come with different features that make it stand out amongst the other frameworks. Not only will we go over each framework and its features, but we will also use the framework to create an application for some hands-on experience.\nIn this course, we will cover the following frameworks:\nLearn how to create a Patient Manager using the CakePHP framework\nDesign a Job Board using the Yii2 framework\nCreate an Event Calendar with the Symfony framework\nBuild a Sparkup CMS using the Codeigniter framework\nLearn how to design a Photo Gallery with the Laravel framework\nCreate a Knowledgebase using Zend framework\nCreate a RESTful API using Slim framework\nMake a FreshIdeas Idea Diary using the Nette framework\nDesign a Weblink Manager with the PHPixie framework\nCreate an Albumshelf with the FuelPHP framework\nWe have managed to pack lot of good stuff and cool development techniques in one complete course. With so much knowledge and information in one course, what are you waiting for? Enroll now and find out which framework will help you create the next big project..",
      "target_audience": [
        "Students who want to learn popular PHP frameworks will find this course extremely useful"
      ]
    },
    {
      "title": "Quasar V1: Weather App for Mobile, Desktop & Web (Vue JS 2)",
      "url": "https://www.udemy.com/course/weather-app-vue-js-quasar/",
      "bio": "Use Quasar V1 & Vue JS 2 to create a Beautiful, Cross-Platform Weather App for Web, iOS, Android, Mac & Windows",
      "objectives": [
        "How to create a beautiful, cross-platform weather app for Android, iOS, Mac, Windows & Web using Qusasar Framework V2 & Vue JS 2",
        "How to get the user's location on all devices",
        "How to create Icons & Splashscreens for all devices",
        "How to launch the app for development on Mac, Windows, iOS & Android",
        "How to setup simulators for iOS & Android",
        "How to debug your app on all platforms",
        "How to launch & debug the app on Real iOS & Android devices",
        "A quick introduction to creating Cross-Platform apps with Vue JS & Quasar Framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course App",
          "What is Quasar?"
        ],
        "Getting Started": [
          "Install Node.js and Quasar CLI",
          "Create & Launch a New Quasar Project",
          "Update: Quasar V1 Documentation",
          "Folder Structure - Layouts, Pages & Routes",
          "Install Vue Devtools on Chrome",
          "Vue.js Basics",
          "Clean up the Project"
        ],
        "Layout & Design": [
          "Layout - Remove Header & Drawer",
          "Add a Gradient Background",
          "Design - Search Bar",
          "Design - Location, Weather Description & Temperature",
          "Design - Add Image & Skyline",
          "Design - Start Screen"
        ],
        "Get Location & Weather": [
          "Get User's Location",
          "Setup OpenWeatherMap API",
          "Get Weather by Coordinates",
          "Display Data in View",
          "Get Weather By Search"
        ],
        "Finishing Touches": [
          "Different Backgrounds for Day & Night",
          "Add Loading Screens"
        ],
        "Icons & Splash Screens": [
          "Install IconGenie",
          "Generate Icons & Splashscreens",
          "Create an NPM Script for Easy Icon & Splash Generation"
        ],
        "Platforms - Mac (Electron)": [
          "Module Introduction / If You Don't Have a Mac",
          "Launch App on Mac for Development",
          "Add a Geolocation Fallback for Electron",
          "src-electron folder",
          "Generate Mac Icons",
          "Build for Mac",
          "Publishing to Mac App Store"
        ],
        "Platforms - Windows (Electron)": [
          "Module Introduction",
          "Install Virtualbox",
          "Install Windows 10 Virtual Machine",
          "Setup Virtual Machine & Enable File Sharing",
          "How to work on the Windows version of your app",
          "Build the App for Windows",
          "Launch App on Windows 10 Virtual Machine",
          "Publishing to the Windows Store"
        ],
        "Platforms - iOS (Cordova)": [
          "Module Introduction / If You Don't Have a Mac",
          "Install Cordova and Xcode",
          "Launch App on iOS Simulator for Development",
          "Generate Icons & Splashscreens",
          "Debug with Safari Dev Tools",
          "Src-cordova folder",
          "Install Cordova Geolocation Plugin",
          "Simulator - Run on Different iOS Devices",
          "Develop on a Real iOS Device",
          "Build the App for Production",
          "Publishing to iOS App Store"
        ],
        "Platforms - Android (Cordova)": [
          "Module Introduction",
          "Install Android Studio and SDK",
          "Add Android to your Path (Mac Users)",
          "Install Additional Software & Set Environment Variables (Windows Users)",
          "Setup Android Virtual Device",
          "Launch on Android Simulator",
          "Generate Icons & Splash Screens",
          "Debug with Chrome Dev Tools",
          "Fix Error On Simulator",
          "Develop on a Real Android Device",
          "Build the App for Production",
          "Publish to Google Play Store"
        ]
      },
      "requirements": [
        "Basic HTML, CSS & JavaScript knowledge is required",
        "Basic VueJS knowledge is beneficial but not required",
        "A Mac for development is preferred (and required for developing Mac & iOS apps)"
      ],
      "description": "In this short course, I'll show you how to use Quasar Framework V1 & Vue JS 2 to create a gorgeous Weather App from scratch - and get it running and working on 5 different platforms - Web, iOS, Android, Mac & Windows.\nYES! We'll be creating real apps that can be deployed to all of the various App Stores!\nIn this app we can get the user's location and display the weather where they are (using the OpenWeatherMap API) all within a beautifully designed layout.\nWe can also search for a location using the Search Bar.\nWe will display a different background, depending on whether is daytime or nighttime in the current location.\nWe'll create beautiful Icons & Splashscreens for all the different devices using Quasar Framework's incredible IconGenie CLI tool.\nWe'll setup Simulators for testing on Android & iOS.\nAnd we'll setup a Virtual Machine using Virtualbox for testing on Windows (when developing on a Mac computer).\nWe'll even get the app running on Real iOS & Android devices. Yes! REAL iOS & Android devices!\nIf you want a quick introduction to creating Cross-Platform Apps using Vue JS 2 (and Quasar V1), then this is the course for you.\nNOTE: This course is for Quasar V1 (with Vue 2). Quasar V2 (with Vue 3) is not covered in this course.",
      "target_audience": [
        "Anyone who wants a quick introduction to creating Cross-Platform apps using Vue JS by creating a simple, beautiful, useful app"
      ]
    },
    {
      "title": "Flutterflow / Firebase 2023 (Tinder clone)",
      "url": "https://www.udemy.com/course/flutterflow-firebase-2023-tinder-clone/",
      "bio": "Low Code / No code Flutterflow , Firebase and Stripe. Let's develop a Tinder clone.",
      "objectives": [
        "From zero to hero with flutterflow",
        "Tinder clone developed with flutterflow and firebase and Stripe payments integrated",
        "Create a tinder clone with Flutterflow (2023) with stripe payments integrated",
        "Low code / No Code Flutterflow (Tinder clone)",
        "Javascript basics and simple backend with Firebase Functions"
      ],
      "course_content": {
        "Introducción": [
          "Presentation and first project creation",
          "Create firebase project and enable services",
          "Explore firebase services",
          "Connect firebase and flutterflow",
          "Pages and navigation",
          "Navigation by actions",
          "Navigation with lateral menu",
          "Navigation to child page",
          "Read data from firestore",
          "Create object in firestore",
          "Delete object from firestore",
          "Update firestore document",
          "Create component",
          "Version control",
          "Login",
          "Signup",
          "Google Auth",
          "Reset password",
          "Upload images",
          "Update images",
          "Upload videos",
          "Conditionals",
          "API Calls",
          "Layout with columns and rows",
          "Layout with containers",
          "Layout with listview",
          "Layout with gridview",
          "Pass data to component by parameters"
        ],
        "Tinder clone": [
          "Tinder: authentication and my profile",
          "Tinder: add description",
          "Tinder: swipeable stack",
          "Tinder: icons in swipeable",
          "Tinder: firebase change plan",
          "Tinder: needed tools",
          "Tinder: firebase functions setup",
          "Tinder: firestore and functions connection",
          "Tinder: version control and clone of a project",
          "Tinder: functions of \" I like a person\"",
          "Tinder. Test API Post",
          "Tinder: Api Call Integration in action",
          "Tinder: Query people that likes me",
          "Tinder: Query subcollection of \"theyLikeMe\"",
          "Tinder: Detail of person who likes me",
          "Tinder: I don't like a person",
          "Tinder: Backend logic for a match",
          "Tinder: integration API Call of create match",
          "Tinder: create item for user chat",
          "Tinder: chat conversation page",
          "Tinder: chat page layout",
          "Tinder: chat BBDD design",
          "Tinder: backend generate chat doc",
          "Tinder: custom functions of generate chat id",
          "Tinder: how to debug errors",
          "Tinder: chat behaviour implementation",
          "Tinder: chat item improvement",
          "Tinder: adding circle image",
          "Tinder: break match logic",
          "Tinder: final test"
        ],
        "Stripe Payments": [
          "Stripe",
          "Stripe: firebase permissions",
          "Stripe: deploy functions and put credentials",
          "Stripe: create api call to create customers",
          "Stripe: integrate payment flow in the app"
        ],
        "Forms validations": [
          "Forms validations"
        ],
        "Annex 1: Javascript Basics": [
          "Javascript \"Initial Setup\"",
          "Javascript variables",
          "Javascript functions",
          "Javascript Data Types",
          "Javascript Data Types (2nd Part)"
        ]
      },
      "requirements": [
        "You don't need any previous experience"
      ],
      "description": "We will see the basic concepts of flutterflow and firebase. In the first block of the course. Then we will prepare some small backend with Firebase Functions, and with all the firebase libraries, using the programming language of Javascript.  And then we will develop a full Tinder Clone with chat, swipes, matches, breaking matches functionality and even payments (using Stripe). Also along the course Chatgpt will be introduced and used as an assistant while we work. Here I Present you all the lectures that are included in this course:\nPresentation and creation of first project\nCreate a firebase project and enable services\nExplore firebase services\nConnect firebase and flutterflow\nPages and navigation\nNavigation by actions\nNavigation with lateral menu\nNavigate to child page\nRead data from firestore\nCreate object in firestore\nDelete an object from firestore\nUpdate a firestore document\nCreate a component\nVersion control\nLogin\nSign Up\nGoogle Auth\nReset Password\nUpload images\nUpdate image url\nUpload video\nConditionals\nAPI Calls\nLayout columns rows\nLayout with containers\nLayout with listview\nLayout with gridview\nPass data to component by parameters\nTinder: authentication and my profile\nTinder: add description\nTinder: swipeable stack\nTinder: icons in swipeable\nTinder: firebase change plan\nTinder: needed tools\nTinder: Firebase functions setup\nTinder: Firestore functions conection\nTinder: Version control and clone of a project\nTinder: function of I like a person\nTinder: Test API Call Post\nTinder: API Call integration in an action\nTinder: Query people that likes me\nTinder: Query subcollection they like me\nTinder: Detail of person who likes me\nTinder: I don't like a person\nTinder: backend logic for a match\nTinder: integration API Call of create match\nTinder: create component for user item chat\nTinder: chat conversation page\nTInder: chat page layout\nTInder: chat BBDD design\nTInder: backend generate chat doc\nTinder: custom functions generate chat Id\nTInder: how to debug errors\nTInder chat behaviour implementation\nTInder: chat item improvement\nTInder: adding circle image\nTinder: break match logic\nTinder: final test\nStripe\nStripe: firebase permissions\nStripe: deploy functions and put credentials\nStripe: create api call to create customers\nStripe: integrate payment flow in app",
      "target_audience": [
        "People interested in Low Code / No Code tools for the development of Apps"
      ]
    },
    {
      "title": "Create a PHP Contact Form in Bootstrap",
      "url": "https://www.udemy.com/course/bootstrap-php-contact-form/",
      "bio": "Learn how to create a fully functioning PHP Contact Form within bootstrap...",
      "objectives": [
        "Skills to create a PHP contact form from scratch",
        "See how easy it is to build a contact form in HTML",
        "Apply a contact form to any bootstrap website or landing page"
      ],
      "course_content": {
        "Build a PHP Contact Form": [
          "Introduction",
          "Download Bootstrap",
          "Getting Setup",
          "Building our Section",
          "Building our Form",
          "PHP Markup",
          "Styling our Alerts",
          "Styling our Form",
          "Final Form",
          "Final contact form files"
        ],
        "Bonus Material": [
          "Clearing our form after 'submit'",
          "Send form to multiple addresses"
        ]
      },
      "requirements": [
        "PC or Mac",
        "Server/Hosting Package with FTP",
        "Basic HTML skills"
      ],
      "description": "Learn the basic concepts, tools, and functions that you will need to build fully functional Contact Form using PHP markup within bootstrap 3 or 4!\nYou will work through these lectures and build a fully working contact form that you can apply to any website through the use of HTML, CSS & PHP. Ideal for getting feedback, answering questions or even collecting emails for a mailing list.\nCreate a working PHP form in the bootstrap 3 or 4 framework\nAdd success & error message to increase user experience\nAdd custom styles to your form via CSS\n\nWe will work our way through the entire process so you can easily add a contact form to your current bootstrap page, bootstrap website or add contact forms to your bootstrap templates to increase conversions, and you’ll soon realize that it isn't actually as difficult as it may seem, and it will give you page a whole new feature.\nThis course will walk you through the entire process, from setting up your page, to applying the form through HTML, then applying what PHP you need to 'plug' the form into your page. You will then add styles to the form through CSS so you can easily match it to any style of page you want to create, or have already created.\n\nYou will code the whole form from start to finish, and get a solid understanding of how easy it is to build a contact form within the bootstrap framework and how to apply PHP markup so you’ll be receiving messages through your site in no time at all.\nSo enroll on this course today and give your landing pages or sites a new feature with a fully working contact form!",
      "target_audience": [
        "Students who want to learn how to create contact forms",
        "Students that want to add a contact form to their current landing page"
      ]
    },
    {
      "title": "Chatbot WhatsApp API and Node JS Send and receive messages",
      "url": "https://www.udemy.com/course/send-receive-messages-with-whatsapp-cloud-api-and-node-js/",
      "bio": "WhatsApp Cloud API | Meta | | Node JS | Postman | Web App",
      "objectives": [
        "Understand the APIs available by WhatsApp Cloud",
        "Use WhatsApp Cloud APIs from Postman",
        "Understand the structure of each message type",
        "Create an application with Node js",
        "Publish your application in the cloud",
        "Integrate a Node js application with WhatsApp Cloud",
        "Create a user-bot interaction use case"
      ],
      "course_content": {},
      "requirements": [
        "Programming Basics"
      ],
      "description": "Send and receive messages with WhatsApp Api and Node js\n\n\nWelcome to this course, where you will learn to consume the WhatsApp Cloud Api services, without the need to connect to a third party.\n\n\nYou will understand each of the services to send and receive messages of different types such as: Image, audio, video, document, sticker, buttons, list of options and map locations.\nWe will create an application in Node js, using good programming practices, we will publish our application in the cloud, we will create a webhook to validate and receive messages directly from WhatsApp.\n\n\nAt the end we will create a real use case of user interaction with the developed application that will take the role of a chatbot.\n\n\nWhatsApp Business Cloud API\n\n\nThis course will help you use the WhatsApp Business Platform, which is intended for people who develop on their own or for their organization. All developers must follow the WhatsApp Commerce Policy.\nIf you want to send and receive a first message with a test number from the Meta platform, you must complete the following steps:\n\n\nConfigure developer assets and platform access\nSend a test message\nConfigure a webhook\nReceive a test message\nIn addition to that, we will create our application in node js to integrate it with the WhatsApp platform.",
      "target_audience": [
        "Developers"
      ]
    },
    {
      "title": "React JS & Firebase Complete Course (incl. Chat Application)",
      "url": "https://www.udemy.com/course/react-js-firebase-complete-course-incl-chat-application/",
      "bio": "Create \"real world\" React JS applications connected to Firestore (Firebase). Redux, authentication + real time features!",
      "objectives": [
        "Develop real-world web application with React JS and Firebase",
        "Understand the processes and concepts of React JS 2",
        "Use gained knowledge to create your own Web Applications"
      ],
      "course_content": {
        "React Basics": [
          "Section Introduction",
          "Project initialization",
          "Framework deep dive",
          "Functional Component",
          "Class vs Functional Component",
          "What is State ?",
          "State in Functional component",
          "Counter functional component",
          "Counter class component",
          "Props in class component",
          "Props in functional component",
          "Previous data in functional component",
          "Jsconfig",
          "Init layout + styles",
          "Iterate services",
          "Service item component",
          "Routing",
          "Create Link + Navbar section"
        ],
        "State Management": [
          "Section Introduction",
          "What is Redux",
          "Connect function",
          "Dispatch action + simple reducer",
          "Services reducer",
          "Add logger to dispatch",
          "Init Firebase",
          "Redux Promises",
          "Middleware improvements",
          "Add service detail page",
          "Service reducer",
          "Add API",
          "Reducer improvements",
          "Spinner component",
          "Is fetching state",
          "Redux thunk",
          "Caching improvements",
          "Enhancers"
        ],
        "Authentication": [
          "Section Introduction",
          "Login & Register page",
          "Add useForm package",
          "Validators",
          "Custom validators",
          "Custom validators part 2",
          "Register User",
          "Create user profile",
          "Handle register response",
          "Handle Login",
          "Structural changes of App",
          "Watch auth state changes",
          "Display UI auth changes",
          "Handle Logout",
          "Fresh JS Loading",
          "Fresh JS Loading part 2",
          "Reset auth state",
          "High order component",
          "Custom HOC",
          "Small Improvements Dispatch"
        ],
        "Service Feature": [
          "Section Introduction",
          "Service Create Page",
          "Handle form submit",
          "Create Service",
          "User services page",
          "User Services reducer",
          "User services reducer rework",
          "Modal component",
          "Add modal content",
          "Create user ref",
          "Structural changes of API"
        ],
        "Offer Feature": [
          "Section Introduction",
          "Create offer",
          "Send & Received Offers",
          "Fetch Offers",
          "Display Offers + Extract Data",
          "Display offer in Service Item",
          "Accept and Decline Offer Button",
          "Accept & Decline Offer",
          "Create collaboration and messages",
          "Create Collaboration API",
          "Mark offer as in collaboration"
        ],
        "Messages Feature": [
          "Subscribe to messages",
          "Create message component",
          "Display actual messages",
          "Mark message as read one"
        ],
        "Collaboration Feature": [
          "Section Introduction",
          "Auth reducer refactor",
          "Collaboration List page",
          "Collaboration Detail",
          "Firebase functions",
          "Check user connection",
          "Check online status on firestore",
          "Set offline on logout",
          "Subscribe to collaborations",
          "Display joined people",
          "Watch profile changes",
          "Display correct status",
          "UI color changes of status",
          "On send message function",
          "Subscribe to messages",
          "Display messages",
          "Clean messages + Start collab button",
          "Count expiration time",
          "Timer Component",
          "Timer fix",
          "Handle Collaboration status",
          "Small fixes",
          "Improvements on detail page"
        ],
        "Firestore Rules": [
          "Section Introduction",
          "Rules introduction",
          "Service Rules",
          "More rules!"
        ],
        "Application Improvements": [
          "Fixing logout, messages and register",
          "Collaboration messages fix",
          "Collaboration Rules",
          "Application Testing"
        ],
        "Deployment": [
          "Section Introduction",
          "Service Fix",
          "Vercel Deployment",
          "[Alternative]: Git installation + Service fix",
          "[Alternative]: Deployment Heroku",
          "Final testing part 1",
          "Final testing part 2",
          "Course Outro"
        ]
      },
      "requirements": [
        "Javascript and ES6 knowledge is required!",
        "Base Html and CSS is required"
      ],
      "description": "WHAT IS REACT JS?\nReact is a declarative, efficient, and flexible JavaScript library for building user interfaces. It lets you compose complex UIs from small and isolated pieces of code called \"components.\"\nWHAT IS FIREBASE?\nFirebase provides a real-time database and backend as a service. The service provides application developers an API that allows application data to be synchronized across clients and stored on Firebase's cloud.\n\n\nTHE COURSE\nStudents learn best when they're putting what they learn into practice straight away, so we've built this course around one great project (which will look fantastic in your career portfolio!):\nIn this course, we will build an application where users can participate in different services that can improve users' expertise in various fields.\nWe will start with the basics of React JS framework. We will create the initial layout, first pages, and routing.\nThe first section will not only be about React JS. We need a database to make our application dynamic and up to the standards. The database we will use in this course is cloud Firestore from Firebase. IN Firestore, we will keep different data types, for example, services, offers, collaborations, and users.\nAfter the first section, you will start learning about firebase authentication. I will show you how to log in and register with Firebase. After the user is logged in, we will display our application with modifications only authenticated users can see.\nThe main idea of this application is to offer and subscribe to various services. For this reason, we will implement a page. where users can create service and where I get you familiar with form validation as well\nAfter the service is created, it will be displayed on the Home page and offered to other users.\nLater we will be creating functionality to trade services between the users. Every logged-in user can make an offer for service after submitting the offer. Then, it is up to the service owner if he is willing to accept or decline an offer. If the service owner accepts the offer, the user can create collaboration.\nWhen all of the users are joined into collaboration, then cooperation can be started for a specific amount of time, and users can exchange messages. Once collaboration is created, the service owner will receive a message to participate in the partnership. After the partnership is finished, messaging is disabled.\nIn the last section, I will be talking about security rules for Firestore, and finally, we will deploy our application to Heroku so you can share it with your friends and family. This is just a short preview of all of the features, and there is much more prepared for you.\n\n\nWith over 24 hours of on-screen instruction, it doesn't matter whether you're planning to start your career as a developer or want to improve your programming skills. This is the right course for you!",
      "target_audience": [
        "Developers new to React JS & Firebase",
        "Experienced developers looking to hone their React JS & Firebase skills",
        "People eager to learn new knowledge"
      ]
    },
    {
      "title": "Learn Asp Net C# OOPs SQL and JavaScript for Development",
      "url": "https://www.udemy.com/course/learn-asp-net-c-oops-sql-and-javascript-for-development/",
      "bio": "Complete developers course for web design, development, coding and database - by Microsoft Certified Professional",
      "objectives": [
        "You will learn to apply C# coding on Web applications and games",
        "Get a job as a junior web developer on Microsoft technologies",
        "Create your own stunning logics on control flow statements",
        "Start logical programming on fully function dynamic web application for real world",
        "Master client-end code using JavaScript, back-end development C# asp net coding with Microsoft SQL",
        "Apply Advanced C# OOPs concepts for your real time coding solutions",
        "Create fully function web apps using Microsoft C#, SQL and JavaScript",
        "Identify the Business required intelligence reports using Microsoft SQL queries",
        "Write the light weight mobile base web pages using JavaScript web pages",
        "learn what is Generative AI for future learning",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to as great questions",
          "What is JavaScript",
          "Hello World Program",
          "Getting Output",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "JavaScript Basics": [
          "Variables",
          "Data Types",
          "Numbers",
          "Strings",
          "String Formatting",
          "Variable creation exercise"
        ],
        "JavaScript Operators": [
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators"
        ],
        "JavaScript Conditional Statements": [
          "If-else statement",
          "If-else-if statement"
        ],
        "JavaScript Control Flow Statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Coding Exercise",
          "Solution for Coding Exercise"
        ],
        "JavaScript Functions": [
          "Creating a Function",
          "Function Call()",
          "Function with parameters"
        ],
        "JavaScript Error Handling": [
          "Try-catch",
          "Try-catch-finally"
        ],
        "JavaScript Client-Side Validations": [
          "On Submit Validation",
          "Input Numeric Validation"
        ],
        "C# Introduction": [
          "Introduction to CSharp",
          "CSharp vs .NET",
          "What is CLR",
          "Architecture of .NET Application",
          "Getting Visual Studio",
          "First CSharp Hello World Application",
          "First CSharp Core Hello World Program",
          "Assessment Test",
          "Solution for Assessment Test"
        ],
        "C# Basic": [
          "Variables",
          "CSharp Identifiers",
          "Data Types",
          "Type Casting",
          "User Inputs",
          "Comments"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Unlock your potential as a full-stack developer with \"Learn ASP.NET C#, OOPs, SQL, and JavaScript for Development.\" This comprehensive course is designed for aspiring developers who want to master both the front-end and back-end technologies needed to build dynamic and scalable web applications.\n\n\nIt is easy to learn and understand our online JavaScript, asp net C# and Microsoft SQL Training course is designed for you with the complete steps to require learn Complete Developer topics. Mr. Sekhar Metla [MCP - Microsoft Certified Professional] will explain to you even complex topics to simplify and teach you that even beginners can easily understand with real-time examples.\n\n\nYou’ll begin by learning ASP.NET with C#, one of the most powerful frameworks for building robust web applications. Learn to build server-side functionality, manage web requests, and implement OOPs architecture to organize your applications efficiently. Gain hands-on experience with C# to handle business logic, data manipulation, and integration with databases.\n\n\nNext, dive into Object-Oriented Programming (OOP) principles, a core concept in C#. Master classes, objects, inheritance, polymorphism, and encapsulation to design reusable, maintainable, and efficient code that scales with your applications.\n\n\nThe course also covers SQL for database management, teaching you how to design, manage, and interact with relational databases. Learn how to write complex queries, perform joins, and optimize data retrieval using SQL Server. You’ll also learn how to integrate SQL with ASP.NET applications for seamless data interaction.\n\n\nOn the front-end, you’ll master JavaScript to build interactive web pages. Learn how to manipulate the DOM, handle events, and create dynamic, responsive interfaces that enhance the user experience.\n\n\nBy the end of the course, you'll have the skills to develop complete web applications using ASP.NET, C#, OOP, SQL, and JavaScript, ready to deploy and maintain in the real world.\n\n\nEnroll today to become a full-stack developer with this in-depth training!",
      "target_audience": [
        "Beginner Asp Net C# coding, Microsoft SQL and JavaScript developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build career in Data Science",
        "Anyone who wants to become a professional on Software technologies",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Laravel Microservices: Breaking a Monolith to Microservices",
      "url": "https://www.udemy.com/course/laravel-microservices/",
      "bio": "Break a Laravel Monolith into Microservices with Apache Kafka and Event-Driven Architecture",
      "objectives": [
        "Event Driven Architecture with Apache Kafka",
        "Multiple Database Connections",
        "Internal Http Requests",
        "Run Docker with multiple networks",
        "Create Custom Laravel Queues",
        "Create Custom Composer Packages",
        "Import Data from multiple databases",
        "Use Kubernetes",
        "Deploy to Google Cloud Platform"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Monolith": [
          "Setup",
          "Stripe Keys",
          "Exploring the code",
          "Email Microservice",
          "Monolith vs Microservices"
        ],
        "Email Microservice": [
          "Setup",
          "Kafka Setup",
          "Confluent Cloud CLI",
          "Consume Kafka Messages",
          "Custom Queues",
          "Produce Messages",
          "Producing Jobs",
          "Sending Emails",
          "Custom Composer Packages",
          "Using Custom Packages",
          "Multiple Topics"
        ],
        "User Microservice": [
          "User Microservice",
          "Setup",
          "Importing Users",
          "User Service",
          "External Networks",
          "Login",
          "Authenticated User",
          "Refactoring API Service",
          "Finishing AuthController",
          "Removing User from Controllers",
          "Removing the User Model",
          "Scope Middleware",
          "Creating User Service Package"
        ],
        "Checkout Microservice": [
          "Checkout Microservice",
          "Setup",
          "Importing Data",
          "Moving Controllers",
          "Configuring Kafka",
          "Completing the Checkout Microservice",
          "Testing"
        ],
        "Ambassador Microservice": [
          "Admin and Ambassador Microservice",
          "Setup",
          "Importing Data",
          "Moving Controllers",
          "Refactoring AuthController",
          "Configuring Kafka"
        ],
        "Admin Microservice": [
          "Setup",
          "Importing Data",
          "Moving Controllers",
          "Final Changes",
          "Testing and Bugfixing"
        ],
        "Kuberntes & Deployment": [
          "Kubernetes",
          "Pods",
          "Mailtrap",
          "Kompose",
          "Secrets",
          "Google Kubernetes Engine",
          "Google Cloud SDK",
          "Google Container Registry",
          "Users Production Build",
          "Cloud SQL",
          "Users Deplyoment & Service",
          "Ingress",
          "Database Private IP",
          "Refreshing Environment Variables",
          "Admin production Setup",
          "Admin Deployment and Services",
          "Admin Ingress",
          "Changing the User Service",
          "Admin Production Setup",
          "Ambassador Kubernetes Files",
          "Deploy Ambassador",
          "Checkout Setup",
          "Checkout Kubernetes Files",
          "Deploy Checkout",
          "Changing Service Names",
          "Testing the frontend",
          "Building Frontend Images",
          "Deploying the Frontend"
        ]
      },
      "requirements": [
        "Good understanding of Laravel"
      ],
      "description": "Welcome to Laravel and Kafka: Breaking a Monolith to Microservices Course - the course that will take your Laravel development skills to the next level.\nHere are some interesting facts:\nThe average Laravel developer salary in the US is $92,285\nHowever:\nThe average Kafka developer salary in the US is $97,500\nThe average Microservices developer salary in the US is $134,546\nThis means if you are a Laravel developer you have the potential to increase your salary by up to 40% just by purchasing this course!\n\n\nHow this course works\nThis course will start with a pre-built monolith, the building of the starting app won't be covered in this course. So in this course, you will start immediately with Microservices Architecture, this course is intended for people that have a solid understanding of Laravel and want to learn in a short amount of time more advanced concepts. I am very clear and precise in my way of teaching so this course won't have unnecessary explanations on my part, I will explain what is needed when it is needed.\nIf you are interested in learning how the Monolith is created you can check my other courses:\nAngular Material, Universal & Laravel: A Rapid Guide\nReact, Next.js and Laravel: A Rapid Guide - Advanced\nVue 3, Nuxt.js and Laravel: A Rapid Guide - Advanced\nIn those courses, you will learn how to build a SPA with your favorite frontend framework.\n\n\nWhat you will learn in this course\nIn this course, you will start with a pre-built monolith and you will learn:\nWhat is the Microservices Architecture\nHow to Configure Kafka with PHP\nInternal Http Requests\nHow to make a Microservice only for Authentication Purposes\nRun Docker with multiple networks\nProduce Kafka Events to multiple topics\nCreate Custom Laravel Queues\nCreate Custom Composer Packages\nImport Data from multiple databases\n\n\nAbout Me\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Laravel developers curious about the Microservices Architecture"
      ]
    },
    {
      "title": "SPRING 5 (Covers Annotation & XML Config) + Hibernate",
      "url": "https://www.udemy.com/course/java-spring-framework/",
      "bio": "A beginners course for Java Web Developers using Spring Framework 4 & 5, Covers Annotations and XML Config, FREE 6M IDE",
      "objectives": [
        "Develop Web Application using Spring Framework",
        "Understand the Spring Framework",
        "Inversion of control - Continues (XML Configuration)",
        "Spring Beans and Collection",
        "Styling and External Resources",
        "Understanding the App Architecture",
        "Aspect Oriented Programming (AOP)",
        "Make use of Hibernate with Spring"
      ],
      "course_content": {
        "Spring framework: Getting started": [
          "Download required software's",
          "Installing required software",
          "Link to setup process for Mac and Linux",
          "First project setup on STS",
          "Spring 5 vs spring 4"
        ],
        "Spring framework: Inversion of control, Dependency injection": [
          "Dependency injection",
          "Understand dependency injection",
          "Project files for Spring module",
          "Meet your Author"
        ],
        "Spring framework: Autowire": [
          "Autowire introduction",
          "Autowire scenarios",
          "Qualifier annotation",
          "IntelliJ IDEA FREE access for 6 months",
          "Linkedin and Instagram links"
        ],
        "Spring framework: Spring Bean": [
          "Spring bean",
          "Constructor injection",
          "Checkout \"Our Full Stack Java Developer Course\""
        ],
        "Spring framework: IDE setup steps": [
          "Spring project on IntelliJ",
          "Adding SpringMVC support on Eclipse",
          "Simple dynamic web project",
          "Model in webproject",
          "Connect on LinkedIn, \"It's good!\""
        ],
        "Spring framework: Spring MVC": [
          "Spring MVC minimal setup",
          "Basic form with Spring MVC",
          "Request param and Model under Spring MVC",
          "ModelAndView and foreach on data",
          "Discussion forum"
        ],
        "Spring framework: Spring form elements": [
          "Setting up project",
          "Getting started with forms",
          "Input and radio",
          "Radiobuttons and background",
          "Dropdown list",
          "Text area",
          "Checkboxes",
          "About Project files"
        ],
        "Spring framework: Styling and External Resources": [
          "Adding STS 3 support into Eclipse",
          "Add external resource",
          "Add style sheet",
          "We have started AI related courses"
        ],
        "Spring framework: Form validations": [
          "Form Validation using HTML",
          "Hibernate validator introduction",
          "Repopulate form data",
          "ModelMap & Simplifying controller",
          "Show error messages",
          "Validation rules"
        ],
        "Database Connectivity using JDBC (XML Configuration)": [
          "Maven Setup for hibernate and MySQL",
          "Alternate eclipse environment",
          "Dynamic web project approach",
          "Installing MySQL",
          "SQL workbench",
          "Understanding the App Architecture",
          "Understanding the Architecture(Document)",
          "Methods of Mapping",
          "Methods of Mapping(Document)",
          "Setting Up Project",
          "Adding Data Access Object (DAOs)",
          "Defining Beans (XML Configuration)",
          "Reading from Database",
          "Showing Information on webpage",
          "Project files"
        ]
      },
      "requirements": [
        "Core Java",
        "Basic typing skills are recommended with file system operations",
        "A computer with an Internet connection",
        "Basic knowledge of SQL will help (Recommended)",
        "Dedication for learning"
      ],
      "description": "Course Description\nSpring Framework is the most popular Java framework in the world, there are numerous positions that are always eager to hire a web developer with the ability of the Spring Framework.\nThis course was created with a lot of effort and research, Spring Framework is considered complex, we try to create a course that is very easy to understand.\nThis Spring Framework course has covered almost all the topics you need to start web development with the Spring Framework.\nThis course is based on Spring 4, but we have also covered in-depth the XML configurations to better understand the previous version of Spring. What we consider important is that many of the business applications still use the previous version of the Spring Framework.\nThis course is a perfect combo to learn Spring XML configuration and annotations along with all the * other necessary things.\n\n\nHere is a compact list to topics covered in this course\n\n\nGet a FREE 6-month subscription for IntelliJ IDEA Ultimate or another\nInversion of control - Getting Started (XML Configuration)\nDependency injection (XML Configuration)\nSpring bean (XML Configuration)\nSpring Beans and collection\nAuto writing (XML Configuration)\nInversion of Control (Annotations)\nDependency injection (With Annotation)\nUnderstanding Spring bean (Annotations)\nSpring Configuration Annotation (No XML)\nSpring MVC\nSpring Form Elements\nForm Validations\nDatabase Connectivity using JDBC (XML Configuration)\nDatabase Connectivity using JDBC (Annotations)\nException Handling Under Spring MVC\nAspect Oriented Programming (AOP)\nSpring Security\nSpring XML Configurations\nAnnotations\nSpring MVC\nAOP\nHibernate\nDatabase Connectivity\nException Handling Under Spring MVC\nPurpose of Aspect Oriented Programming (AOP)\nAOP with XML Configuration\nUnderstanding Proxy Object\n\n\nLearn a powerful skill at your home\nThis is the best course for the SPRING & HIBERNATE COURSE. Theoretical power is not adequate for learning SPRING & HIBERNATE. Practice makes man perfect and everything depends on your efforts and hard work. It will help you practice coding every day at home for learning Spring XML configuration and Annotations along with all* other required things.\nYou will get good quality, of course, with solid technical material and excellent audio and video production.\nWhy Spring & Hibernate\nHibernate is a persistence framework and is used to preserve Java objects in a relational database. Spring can be used to connect all this and to provide declarative transaction management. Learning Spring & Hibernate can benefit you professionally as you gain a popular skill and brings to in a better position to build a future proof application quickly. Knowing Hibernate is one of the most popular assets for all Java Developers. It is an excellent skill for components development to enhance applications and boost our career prospects as an IT professional.\nWhy Learn From Here\nLearning SPRING & HIBERNATE can be challenging and complex. To navigate this tangle, you need an easy and direct approach to the point.\nHelping you master these issues is my highest priority. This course gives you my teaching experience and my knowledge of the industry. I have taught IT for more than eight years to more than 1, 42,000+ students, and I am also an application developer. My teaching style is exclusive and easy to understand because I usually take simple and easy examples and follow a step-by-step approach.\n\n\nNo question asked - Money Back Guarantee!\nThere is no risk, this course comes with a 30-day money-back guarantee. Once you purchase the course, if for any reason you are not satisfied with the course, please let me know, we will refund 100%, no questions asked. So you have nothing to lose, sign up for this course, and learn SPRING 4 & HIBERNATE COURSE (Covers Annotation & XML Config)!\n\n\nAt the end of the course, you will have great confidence. So what are you waiting for?\nJoin me on this adventure today! I'll see you on the course.",
      "target_audience": [
        "A person must have core Java knowledge",
        "A person willing to make a career as Spring Web application development must take this course",
        "Basic knowledge of SQL will help"
      ]
    },
    {
      "title": "Complete SAS Programming Bootcamp 2019: Go from zero to hero",
      "url": "https://www.udemy.com/course/sas-programming/",
      "bio": "Learn to program in the SAS Language, also known as SAS Base or Base SAS. SAS Programming is awesome for Data Science!",
      "objectives": [
        "You will learn the SAS language from scratch and we will get you to an expert level! You will learn from the basics: Importing Data, SAS Variables, SAS Dates, Formats, Procedures and much more!",
        "We will teach how to use the Data Step to do all types of data manipulations, filtering, transforming variables, do complex calculations.",
        "Learn how to combine data, transpose , use do loops, arrays, summarize data with pivot tables, creating professional reports.",
        "Learn how to use SAS Functions to manipulate Character, Numeric, Date Variables."
      ],
      "course_content": {
        "Setting Up Your SAS Environment and Download the Data!": [
          "Setup your SAS Environment with SAS WPS Analytics",
          "Setup your SAS Environment with SAS University Edition"
        ],
        "Welcome to the world of SAS!": [
          "What can you do with SAS?",
          "What is a SAS Program?, How does the syntax work in SAS?",
          "SAS Libraries (Libname Statement)",
          "What is a SAS Data Set? Proc Contents and Proc Print",
          "Types of Variables in SAS",
          "Filter data using the WHERE statement - Operators (Logic, Comparison, Arithmetic",
          "Special Operators for the WHERE statement",
          "What is a SAS Format?",
          "Dates and Date Formats in SAS",
          "Creating a user-defined format using Proc Format",
          "Ordering data and creating reports by Groups using the BY statement",
          "Improve the aesthetics of a report adding Titles, Footnotes, Labels."
        ],
        "Data Manipulation I (Learn to use the powerful Data Step!)": [
          "Learn to read a SAS Data Set with the Data Step",
          "Creating Variables and Filtering Variables with the KEEP & DROP statements",
          "Difference between filtering with the WHERE and Subsetting IF statements",
          "Adding Permanent Attributes using the LABEL, FORMAT, and LENGTH statements",
          "How the Data Step Processing works?",
          "Using simple functions and learning to get frequencies using PROC FREQ",
          "Process data conditionally using IF-THEN/ELSE statements",
          "Execute multiple statements conditionally using DO and END statements"
        ],
        "Summarizing Character and Numeric Data! (Proc Freq, Means, Univariate).": [
          "Summarize Character Data in Frequencies using Proc Freq!",
          "Create Contingency Tables (2x2 table) with Proc Freq!",
          "Summarize Numeric Variables with Proc Means (N Mean Median Std Min Max etc..)",
          "Summarize Numeric Data (Proc Univariate: Quantiles, Central Tendency Measures)"
        ],
        "Importing Data (Excel, CSV, Tab) in different formats/structures": [
          "Using the PUT function to convert Numeric Variable to Character Variable",
          "Using INPUT function and INFORMATS to convert Character to Numeric variables",
          "Using PROC IMPORT to import different file formats (csv, xlsx, txt)",
          "[Advanced] Other techniques to Read Data using Data Step",
          "[Advanced] COLUMN INPUT technique to read data organized in columns",
          "[Advanced] FORMATTED INPUT technique to read Nonstandard data organized in colum",
          "[Advanced] MODIFIED LIST INPUT tecnique to read delimited data (Non/Standar Data"
        ],
        "Data Manipulation II (Controlling Input and Output, Accumulating Totals & more!)": [
          "Writing Observations Explicitly (Output Statement)",
          "Writing to Multiple SAS Data Sets",
          "Optimize the processing using SAS Data Set Options (Firstobs=, obs=, Keep=)",
          "More Data Set Options (Rename = , Where=)",
          "Create an Accumulating Total Variable (Process data vertically - RETAIN statmnt)",
          "Accumulating Totals for a Group of Data using the BY Statement and Data Step",
          "Accumulating Totals for more than One Group using the By statement and Retain"
        ],
        "SAS Functions (Character & Numeric Functions)!": [
          "Character Functions to Extract Text ! (SUBSTR, LENGTH)",
          "More functions to Extract Text from String! (RIGHT, LEFT, CHAR, PROPCASE)",
          "More Character Functions (SCAN, INDEX, CATX, TRIM, STRIP)!",
          "Character Functions to Concatenate Strings (CAT, CATT, CATS)!"
        ],
        "Working with Dates Values (Dates - , Datetime - , Time Values": [
          "Introduction to SAS Dates (Date Values - Datetime Values - Time Values)",
          "Converting Dates stored in text (Character) to Date Values (Numeric)",
          "Converting Date Values (Numeric) to text (Character)",
          "Using the INTCK() function to calculate difference of 2 dates (in months, years)",
          "Using INTNX() function to increment a date (in years, months, qtrs, days, etc)",
          "Calculate difference between Dates using the DATDIF() function"
        ],
        "Learning to Combine Data (Concatenating and Merging/Joins)": [
          "Concatenate Data using the Set Statement in the Data Step - Part 1",
          "Concatenate Data using the Set Statement in the Data Step - Part 2",
          "Concatenate Data using Proc Append",
          "Understand how data can be related (One-to-One, One-to-Many, Many-Many)",
          "Using Merge to get all types of Joins (Left, Right, Inner, Full Join, etc)",
          "Learn how to merge data in a One-to-One and One-to-Many Scenario",
          "Warning on Merge Statement in a Many-to-Many scenario, use SQL instead."
        ],
        "Do Loops - Processing Data Iteratively": [
          "Introduction to Do Loops (Iterative, Do Loop)",
          "Business Scenario using Iterative, Do-Loops",
          "Introduction to Infinite Loops (Do While and Do Until)",
          "Business Scenario using Do While/Do Until",
          "Solving a Business Scenario Using Iterative, Do Loops and Do While/Until",
          "Learn to use Nested Do Loops to solve real problems!"
        ]
      },
      "requirements": [
        "No need to have prior experience with the language. We will teach you from the very basics.",
        "You only need to download a free application to follow along all the exercises we will cover in the videos.",
        "Be passionate on working with data to turn it into insights and knowldedge!"
      ],
      "description": "In this course you will learn to program in the SAS Language to do data analysis. This language is really easy to learn since you don't need to write too much code to get great results!\nThis course is broken down in 3 parts: 1. Beginner, 2. Intermediate, 3. Advanced. So anyone interested in learning how to program in SAS, from people with nothing or some experience, can enroll in this course.\nThe most important requirement to enroll is to be committed to learn it and be willing to invest some hours. I promise you once you are done with this course, you will feel very comfortable and loving it when programming in this wonderful language!",
      "target_audience": [
        "People who want to learn SAS Programming",
        "Beginner SAS Programers",
        "Interested in learning SAS Base or Base SAS",
        "SAS Macros , SAS SQL",
        "SAS Procedures, SAS Data Science"
      ]
    },
    {
      "title": "Web Developer Bootcamp",
      "url": "https://www.udemy.com/course/full-stack-web-developer-bootcamp/",
      "bio": "Learn HTML5, CSS3, Javascript, Bootstrap, Media Queries, PHP, OOP, MYSQL Database. Become a Full Stack Developer!",
      "objectives": [
        "Learn Web Development from Scratch - Frontend & Backend (Beginner to Advanced)",
        "Learn Javascript (Arrays, Functions, Objects, Events and much more..)",
        "Learn HTML 5 and CSS 3 from Scratch (Beginner to Advanced)",
        "Create a Resume Template with HTML5 and CSS3",
        "Learn Complete Front End Development",
        "Learn Document Object Model (DOM) in Javascript - Advanced",
        "Learn Twitter Bootstrap 4.0 (Beginner to Advanced)",
        "Learn Complete Backend End Development",
        "Learn the Fundamental of PHP and Mysql",
        "Learn and Apply Media Queries and The Responsive Web Design - To Build Mobile Websites",
        "Learn Database Design and Modeling in Mysql Server (Beginner to Advanced)"
      ],
      "course_content": {
        "Setup and Software Installation (Installing Brackets Code Editor)": [
          "Windows - Install and Setup Code Editor to Learn Web Development",
          "MAC - Windows - Install and Setup Code Editor to Learn Web Development"
        ],
        "HTML5 - Essential Training": [
          "Creating and Saving Your First HTML Page",
          "Autopsy Of An HTML Document",
          "DOCTYPE Declaration",
          "Understanding The Head Section",
          "The Body Tag and Other Elements",
          "HTML Content Models",
          "HTML Quiz",
          "Heading Levels in HTML",
          "Paragraphs in HTML",
          "Style Attribute in HTML",
          "Formatting Elements in HTML",
          "Adding Images in HTML",
          "Adding Links in HTML",
          "Adding Lists in HTML",
          "Building a Good Structure in HTML"
        ],
        "CSS3 - Essential Training": [
          "What is CSS?",
          "Default Browser Style",
          "CSS Syntax",
          "Practicing Selectors (Video Exercise)",
          "Color Values (RGB, HEX and Keywords)",
          "Typography in CSS",
          "Block Vs Inline Display",
          "Box Model in CSS",
          "Practicing Margins, Width and Max-Width",
          "Floats in CSS (With Practice)",
          "Box Model Fix (With Practice)",
          "Positioning in CSS"
        ],
        "CSS3 - Advanced Techniques": [
          "Debugging and Resetting CSS Files",
          "The Background Property",
          "Adding Gradients and Transparency to Images",
          "Learning SVG (with Practice)",
          "Button Links in CSS",
          "CSS3 Transition Property",
          "Keyframes and Animation"
        ],
        "HTML5 and CSS3 Project - Create a Resume Template": [
          "Introduction to The Resume Template Development",
          "Creating the Portfolio Structure",
          "Adding CSS (Part 1)",
          "Adding CSS (Part 2)",
          "Adding CSS (Part 3)"
        ],
        "CSS3 & HTML5 - Media Queries and The Responsive Design": [
          "Why Go Mobile Friendly?",
          "Example Of A Responsive Site",
          "Adding Media Queries",
          "No Meta Viewport Tag?"
        ],
        "HTML5 and CSS3 - Create & Validate Forms, Input Fields & Form Styling using CSS": [
          "Critical Role of Forms",
          "Modern Form Input Types",
          "Adding Form Inputs",
          "Validating Forms",
          "Labels And Placeholders",
          "Styling Forms With CSS"
        ],
        "Javascript (Most Popular Programming Language) - Learn Basics": [
          "What is Javascript?",
          "Tools to Add Javascript and Browser Console",
          "How to Add Javascript?",
          "How to Write Javascript?",
          "Javascript: The Logical Part and Data Types",
          "Arithmetic Operators in JS",
          "Strings and Numbers",
          "Conditional Statements",
          "Arrays in JS",
          "Arrays Advanced in JS",
          "Functions in JavaScript",
          "Adding Arguments",
          "Anonymous Functions And Returning Values",
          "Global And Local Variables",
          "CONSTANT and LET (ECMA2015)",
          "Objects in Javascript",
          "Objects in Javascript (Advanced)",
          "Closures in Javascript"
        ],
        "Javascript - Document Object Model (DOM)": [
          "Introduction to DOM",
          "Targeting Elements in Javascript",
          "Accessing Elements",
          "Accessing Attributes",
          "Creating Elements in DOM",
          "Applying Inline CSS in Javascript"
        ],
        "Javascript - Create an Analogue Clock Web App": [
          "Creating Structure Of The Clock",
          "Adding CSS To The Clock",
          "Adding JavaScript To The Clock"
        ]
      },
      "requirements": [
        "This course is highly recommended for you if you've never written a line of code",
        "A PC, MAC or Linux with an internet connection",
        "Passion for learning web development",
        "No programming experience is required"
      ],
      "description": "Welcome to the Full Stack Web Developer Bootcamp, the most comprehensive and informative course available that will change your world.\nThis online course is different, better, and way more exciting than any other course available on the internet!!\nAll you need is passion, dedication, hard work, an internet connection, a Laptop or PC, a comfy cushion, yourself, and voila you are all set to begin!!!\nThis course offers all the nitty-gritty details that you require to fully learn about the world of web programming and coding. You will learn all about web programming from scratch and will be able to design your own websites by the end of this course.\nOnline videos with clear instructions and competent instructors will make it easier for you to learn even with zero past experience or knowledge.\nThis boot camp will broaden your horizon, offer you countless opportunities, and will give you the confidence you need to make a difference.\nThis course offers the following programs\nHTML 5\nCSS 3\nJavascript\nBootstrap\nJQuery\nWeb Development from scratch\nTwitter Bootstrap\nPHP\nMYSQL\nIt does not matter if you are a beginner, an entrepreneur, or the next big miracle waiting to happen – this course is for you.\nIt will provide you with all the basic tools you need to make your place in the fast-paced world of web programming.\nThis online Bootcamp is different from the other various web programming courses available online. It offers you the latest and up-to-date techniques in a friendly environment that helps you to learn fast and effectively\nWe do not waste your time here with boring and uninformative videos that will be a waste of your money and energy.\nThat is why we offer a 30-day money-back guarantee…\nIf you feel that you are not getting your money’s worth then you will get your money back.\nThis course is highly recommended for people who have ZERO prior experience in programming and have never even programmed a single thing before.\nIt doesn’t matter if you have absolutely no idea about the basics, we will teach you everything that you need to know about developing and programming.\nAll you need is lots of enthusiasm, willingness to work hard, an internet connection, and a laptop or PC.\nOur course will equip you with the latest knowledge, up-to-date content, efficient coding, and programming techniques.\nAnd it’s all in one perfectly-packaged, super-convenient online solution.\nJoin today and become one of those million people who have changed their careers, have started their own business or have created opportunities for themselves that were not possible before.\nStudent Reviews:\n\" Simple, Easy to follow instructions. Good explanations are given.\" Brian Bath\n\"Easy to understand instructions. Covered all the frontend and backend development. A must-have course to become a full stack developer!\" MIKE D\nWeb technologies that you will learn…..\nIf you wish to explore the world of JavaScript and jQuery, this course is for you.\njQuery has become the most popular tool in use today for the design and implementation of JavaScript in web pages, and this course you will learn in a step-by-step manner JavaScript programming concepts and functionality.\nWeb Development - CSS3 and HTML5 introduce you to advanced features and functionality of CSS3 and HTML5, which allow for very precise styling and formatting of web pages.\nYou will learn how to create a correctly formatted form using the form element and create different types of form inputs. You will also learn how to identify and use input types for the input element, and identify and use attributes for the input element.\nLearn in a step-by-step manner how to use HTML5 elements and CSS3 style sheets for responsive web design by studying the course Full Stack Web Developer Bootcamp using HTML5 and CSS3.\nHow HTML structures the content on a web page and how CSS styles the content on a web page will be taught.\nYou will learn how to declare an HTML5 document and set up the head and body sections of a web page. You will then learn about a wide range of HTML5 elements and their functions and uses.\nAll this and much more are provided in this comprehensive Full Stack Web Developer Bootcamp.\nSo what are you waiting for??\nThis is your chance to shine and pave your way to a brighter future.\nEverything is just a click away…\nThe course starts with the fundamentals. We will show you insider tips to work quickly and efficiently with web technologies like HTML5, CSS3, and Javascript.\nAfter learning that we will take you to the next step where we will teach you how to build your own responsive websites using more advanced techniques such as iQuery, PHP, MySQL 5, and Twitter Bootstrap.\nYou will start developing blogs and E-commerce sites with WordPress, and learn smart ways to add dynamic content, using APIs to connect to sites such as Google Maps and Facebook.\nYou will be tasked with quizzes and fun assignments throughout the course which will help you in learning and master web technologies easily and comprehensively.\nDO NOT miss this chance…\nWeb development boot camp also offers you a friendly and cordial atmosphere where you can interact with your fellow students and have discussions on various topics.\nYou can ask questions anytime you want directly from the instructor.\nThis forum will give you a chance to grow as an individual and gives you a platform from which you can take your next big jump into the world of success.\nYou will have lifetime access to the program content and can always refer back to any lecture, whenever you want.\nYou can also access the course from your smart TV and mobile phones.\nNever again waste your time and energy on boring online videos, chunky and difficult-to-understand ebooks, and other stuff that just makes you yawn and question your sanity.\nMake this the year that you took a risk, you learned new skills, had exciting experiences, and received great opportunities.\nHope you take the plunge and join us on this journey to a new and exciting world that is just around the corner!!!!",
      "target_audience": [
        "Suitable for beginner programmers and ideal for users who learn faster when shown",
        "Recommended for people with no programming or app developer experience",
        "Best for Startup founders who have never written a line of code",
        "Entrepreneurs who want to learn web development and save money on outsourcing",
        "Best for Digital Managers who have never written a line of code",
        "Technical recruitment consultants to understand how the code works"
      ]
    },
    {
      "title": "Build 13 Projects with PHP MySQL Bootstrap and PDO",
      "url": "https://www.udemy.com/course/build-13-projects-with-php-mysql-bootstrap-and-pdo/",
      "bio": "Build Amazing Projects with PHP MySQL Bootstrap and PDO and Take your Web Development Skills to the Next Level",
      "objectives": [
        "Learn to Work with APIs",
        "Learn to deal with PHP and MySQL in a professional way",
        "Learn to combine Ajax-Jquery with PHP",
        "Create a full like and dislike system",
        "Train your prior knowledge with PHP and MySQL",
        "Learn to deal with files and install a library for it",
        "Build a simple CV creator",
        "Build an auth system",
        "Build a rating system",
        "Learn Debugging in PHP and MySQL along the way with Ajax JQuery",
        "Train your knowledge as a PHP developer",
        "Learn to create a URL shortening service",
        "Learn to insert and manipulate images on your app",
        "Learn to send emails professionally and dynamically",
        "Explore top tips and tricks about development in general",
        "Learn how to integrate PayPal inside your web app",
        "Build simple forum"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Project #1 Payment Page with PayPal": [
          "Getting Started with the Project",
          "Creating Config File",
          "Grapping Data from Database",
          "Proccing Payment with Paypal pt.1",
          "Proccing Payment with Paypal pt.2"
        ],
        "Project #2 Simple Forum": [
          "Getting Started and Files for the Project",
          "Creating Includes Files",
          "Creating Posts",
          "Adding Replies",
          "Getting Replies for every Post",
          "Displaying Posts pt.1",
          "Displaying Posts pt.2",
          "Dsiplaying Data for every Post",
          "Creating Categories",
          "Finshng Project Up"
        ],
        "Project #3 Full Crud App": [
          "Setting Up",
          "Inserting into DB",
          "Pulling the Data",
          "Deleting the Data",
          "Updating the Data"
        ],
        "Project #4 URL Shortening Service": [
          "Config File",
          "Insertting and Showing Links",
          "Shortening URLs",
          "Counting Clicks pt.1",
          "Counting Clicks pt.2"
        ],
        "Project #5 Sending Emails with PHP": [
          "Sending Emails pt.1",
          "Sending Emails pt.2"
        ],
        "Project #6 Building an Authentication System": [
          "Intro to the Project",
          "Code for the Design of the Project",
          "Config File",
          "Register Page",
          "Logging Users in",
          "Logging in and Checking for Sessions"
        ],
        "Project #7 Building a Comments System": [
          "Intro and Preparing",
          "Creating Posts",
          "Showing Posts in Index",
          "Showing a Single Post",
          "Inserting Comments",
          "Showing Comments",
          "Deleting Comments",
          "Fixing Bugs pt.1",
          "Fixing Bugs pt.2"
        ],
        "Project #8 Creating a Rating System": [
          "Getting Started and Setting up the Plugin",
          "Creating the Ratings for every Post",
          "Showing the Rating for every Post",
          "Fixing Bugs pt.1",
          "Fixing Bugs pt.2"
        ]
      },
      "requirements": [
        "Basic PHP, MySQL and PDO knowledge",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Do you want to develop your skills further as a developer? Did you build a couple of projects with PHP and MySQL, but you still think you are inexperienced and you are missing out on a lot of things when coming to developing bigger projects? If yes, then this course is the right resource for you. This course is very digestible and informative and it was created specifically to enhance your coding skills and knowledge not just in PHP and MySQL, but overall in developing web projects.\n\n\nHere is what we are going to do in this course. Naturally, we are going to get started by setting up the right tools for our projects. And after that, we are going to build our first simple yet very interesting project and that's a payment page with Paypal. The second project will be about a simple forum system. They are going to be also a couple of generic projects like the full CRUD app and so on. After this, the next project will be the starting of something big because it's an authentication system where I am going to teach you how to develop a login and a register page, how to hash and de-hash passwords, how to do validation and so much more. After this, we are going to build a comments system and this will be the biggest project in this course. We will begin first by doing a post system and then we will grab comments for every post that we have of course we will use Ajax-JQuery for inserting, deleting, and showing comments. after that, we will integrate a rating system into the previous two projects to make a bigger project. So, I will show how to download a JQuery plugin, how to integrate it and how to use it to do the rating system for every post, and so on. And the rating system is going to be implemented of course using Ajax-JQuery. The upcoming project is going to be also created with Ajax and JQuery and that's a live search system and we will combine it with our big project. There are a lot of projects along the way but it's going to take a very long time to talk about them. So I will let you discover the many benefits of this course. If that sounds like something you are interested in, get the course now",
      "target_audience": [
        "Every PHP and MySQL developer who want to advance their skills",
        "Developers who want to explore web development further",
        "Developers who want to build cool projects and to build up their CVs"
      ]
    },
    {
      "title": "React Native Complete Course with Router, Hooks and Context",
      "url": "https://www.udemy.com/course/complete-react-native-course-with-router-hooks-and-context/",
      "bio": "React Native with Full React Native, Router, Hooks and Context course. Build React Native (web, cli, expo) skills",
      "objectives": [
        "Complete React native Set up virtual environment",
        "Install React-Native dependencies for MAC and Windows",
        "Run Android and IOS simulator",
        "React Native Expo installation",
        "Run Expo App on Mobile Device",
        "JSX syntax and expressions",
        "ES6 syntax",
        "See the content on the simulator",
        "Styling with React-Native and flex-box rules",
        "Send an HTTP request to a remote API",
        "State ve Props systems",
        "Reusable components",
        "Reach another app on the phone from the React-Native app",
        "React Navigation Library",
        "React Route Between Different Screens",
        "Data Transfer Between Different Screens with React Navigation",
        "Learn to create React Hooks and Context structures",
        "Creating React Hooks and Context structures with explanatory diagrams",
        "What is React Context Api in and how it is used",
        "Using react Context Api and Hooks together",
        "Creating Context with Class Component",
        "Access to Context with Context Type",
        "To manipulate the data in Context",
        "How to Use Multiple react Context",
        "How to Create Reducer",
        "How to Use Reducer",
        "useState, useEffect, useReducer, and useContext hooks",
        "Reducer, action and dispatch concepts and much more",
        "How to use coding techniques to make efficient development with React",
        "Build fast, user-friendly web apps with React",
        "Complete react native course with router, hooks and context",
        "Learning React Native is a great avenue through which to gain experience developing mobile apps.",
        "React Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android",
        "Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.",
        "Created by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting android, ios",
        "Businesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native.",
        "Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms",
        "React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "React Native expo, react native cli, react native hooks and react native context",
        "Whether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and Mongo"
      ],
      "course_content": {
        "Welcome to Complete React, React Native Router, Hooks and Context Course": [
          "Let's What We Will Learn about Full React Course?",
          "How To Get Help?",
          "Github Complete Course Repo",
          "FAQ about React Native, Router, Hooks and Context"
        ],
        "React Native - Set Up For Windows": [
          "Free Tools For Windows",
          "Windows Setup for React Native",
          "How to Start Emulator In Android Studio",
          "Android Emulator Setup Checklist"
        ],
        "React Native - Setup For OSX": [
          "Free Tools for IOS",
          "OSX Setup for React Native",
          "Start the Emulator",
          "MAC IOS Emulator Setup Checklist"
        ],
        "React Native and Expo": [
          "React Native on Mobile Device",
          "Expo CLI Project"
        ],
        "React Native and JSX": [
          "How To Create An App",
          "See Content on Emulator",
          "Why Do We Need React and React Native?",
          "ES6 Syntax ( Let, Const, Var )",
          "First Component",
          "How To Show Component on Device",
          "How to Build Our First App",
          "How To Connect A Component To The Root Component",
          "Import A Component To Another Component",
          "quiz"
        ],
        "Styling For React Native": [
          "Styling with JSX",
          "Displaying of Views",
          "Header Component’s Styling",
          "React Props",
          "How To Reuse Code With Props System",
          "quiz"
        ],
        "API Request With React Native": [
          "How To Show a List To The User",
          "The List Component",
          "Func Component vs Class Based Component"
        ],
        "LifeCycle Methods": [
          "When Do We Need Lifecycle Methods?",
          "LifeCycle Methods",
          "Making Request With Axios",
          "quiz"
        ],
        "State in React Native": [
          "What Is State And How To Initial State",
          "Using of State",
          "A Component’s Lifecycle With State",
          "List Component",
          "List Item Component",
          "Reusable Components",
          "Styled Component for List Items",
          "Usage of Props.Children",
          "Item Section",
          "quiz"
        ],
        "Layout With Flexbox": [
          "Introduction to the Flexbox",
          "Section Header Component",
          "How To Show An Image",
          "Scrollable Content",
          "User Interaction with React Native",
          "Event Handlers",
          "How To Open Another App (Browser)",
          "quiz"
        ]
      },
      "requirements": [
        "No prior React and React-Native knowledge, you learn complete react native",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don't need to be an expert any programming languages",
        "Basic ES6 knowledge would be beneficial but not required",
        "Desire to learn React Native",
        "Computer with access to the internet",
        "Desire to learn mobile development with full React Native course",
        "Desire to learn react native hooks, react native context, react native cli, react native expo",
        "Desire to learn mobile app development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device"
      ],
      "description": "Hello there,\nWelcome to React Native Complete Course with Router, Hooks and Context course.\nReact Native with Full React Native, Router, Hooks and Context course. Build React Native (web, cli, expo) skills.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that. For mobile development React is all you need to create awesome mobile apps that work on both Android and iOS.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\nThis course is for all levels. To be able to take this course, all you need is a basic understanding of JavaScript.\nIn the react native full course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer. Besides, with the Expo app, you will be able to run your apps on your own mobile device as well.\nLater on the course, we are going to learn the basics of React and React Navigation. JSX, 'props system' and 'state system' are going to be crystal clear for you at the end of the course. We are going to create nice-looking reusable components. You are going to be able to use these reusable components in your own future projects. You are going to go to different screens from the app with React navigation.\nFinally, you are going to learn the latest React features \"React Hooks and React Context\" system. We are going to create two nice-looking app, teach you \"Hooks and Context\" in a very detailed way. You are going to learn how to use \"state\" in functional components with the \"Hooks\" system and with \"Context API\" you won't need any third-party package to manage the Application state.\nReact is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from.\nWe tried to tell all complex topics in very detail on the course. We used some diagrams to tell some important topics and created a nice-looking mobile application. We showed two different ways to create a mobile app. We showed both react-native-cli and expo-cli in our course.\nAt the end of the course;\nBasics of React, React-Native, React-Navigation libraries\nHow to send an HTTP request from a mobile application\nHow to use flex-box system\nHow to create reusable components\nTo reach another app on the device from our app\nCreating your own mobile app both with react-native-cli and expo-cli\nCreating Context with Class Based and Functional Components\nHow to Consume Context in Class-Based and Functional Components\nHow to Use Multiple Context in one single component\nHooks Functions(useState, useEffect, useReducer, useContext...)\nCreating Reducer and\nUsing Reducer is going to be clear for you.\nReact and react-native full course with router, hooks and context\nReact-native firebase, react native web, react native cli, react native expo, react native android and ios\nThe complete React native with router, hooks and contexts\nLearn mobile development\nWhy would you want to take this course?\nLearning React Native is a great avenue through which to gain experience developing mobile apps. Udemy features top-rated React Native courses that take you through every level of the React Native framework, so that you can start writing better apps, faster.\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise. Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and React is easy to understand for beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practice.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook. The simplest definition of React is that it is a user interface library used for building UI components for the web. But if that was all React did, it would be little more than a template library. Developers define components in React by using an HTML-like syntax called JSX. These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM). These features give React components the ability to react dynamically and efficiently to changes in their state. A set of simple components in React can be composed into either simple single-page applications or large, complex web applications.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our React Native Complete Course with Router, Hooks and Context course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Programmers who want to learn React and React Native",
        "Anyone who wants to learn React Hooks & Class-based Components",
        "Anyone who wants to create mobile applications with both react-native-cli and expo-cli",
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "People who are planning a career in the react native application world",
        "Developers who have researched React but have had trouble mastering some concepts",
        "Anyone who want to start from scratch and to move more advanced level",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who want to take their web development skills to the next level and learn a future-proof technology",
        "Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more."
      ]
    },
    {
      "title": "Python Web Development with Django and Bootstrap, HTML, CSS",
      "url": "https://www.udemy.com/course/web-development-with-bootstrap-python-django/",
      "bio": "Django and Python Web development with HTML, CSS, Bootstrap 4. Build responsive websites with Django and Python",
      "objectives": [
        "Learn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap. Full Stack Web development, python, django, python django, django bootstrap, html css",
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Start learning from scratch and learn about every Python 3 topic with hands-on examples",
        "Learn how to setting up Python, PostgreSQL, Visual Studio Code, Postgres App, PgAdmin on Mac",
        "Get a crash course of the Bootstrap Grid System with the theme layout",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "Create a beautiful, responsive landing page for any one",
        "Learn the difference in usage between block level and inline elements in HTML",
        "Free software and tools used during the python web development course",
        "You will be able to work with Python functions, namespaces and modules",
        "Apply the Python knowledge you get from this course in coding exercises, real-life scenarios",
        "Understand how to use Python and Django Framework",
        "Understand Django basics like Models, HTTP, Processes",
        "Learn Django Templates basics and configurations",
        "Each aspect of creating websites and applications entails a unique set of skills. Udemy offers a host of courses to bring you up to speed on modern front-end",
        "The world of web development is as wide as the internet itself. Much of our social and vocational lives play out on the internet, which prompts new industries",
        "What is web development? Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Python instructors on Udemy specialize in everything from software development to data analysis, and are known for their effective, friendly instruction",
        "What is Python? Python is a general-purpose, object-oriented, high-level programming language.",
        "Python vs. R: what is the Difference? Python and R are two of today's most popular programming tools.",
        "What does it mean that Python is object-oriented? Python is a multi-paradigm language, which means that it supports many programming approaches.",
        "What are the limitations of Python? Python is a widely used, general-purpose programming language, but it has some limitations.",
        "How is Python used? Python is a general programming language used widely across many industries and platforms.",
        "Django is an excellent framework for new web developers and efficiency-minded veterans alike.",
        "What is Django? Django is a Python-based Web Application Framework that follows the Model-View-Controller architectural pattern.",
        "What is Django used for? As an MVC Web Application Framework, many use Django to develop and deploy web applications rapidly.",
        "Who uses Django? Python programmers who are interested in a low code development prefer Django for its “don’t repeat yourself” model.",
        "What is the model-view-controler (MVC) architectural pattern? The Model-View-Controller architectural pattern (MVC) is a type of software pattern for creating",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "HTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML"
      ],
      "course_content": {
        "Intro to Full stack web development with Python, django, boostrap, html css": [
          "Let's See What You Will Learn in HTML Part?",
          "General Terms",
          "Project Files and Course Documents: Python web development, Django, Bootstrap",
          "How the Website Works?",
          "What Is IDE?",
          "FAQ about Python web development, Python, Django, Bootstrap, HTML CSS",
          "First Webpage"
        ],
        "HTML Fundamentals": [
          "About the Section",
          "What is HTML?",
          "HTML Document Structure",
          "Text Element",
          "Lists",
          "Images",
          "Hyperlinks",
          "Container Elements",
          "What is Semantic HTML?",
          "Creating Tables with HTML",
          "Colspan & Rowspan",
          "Working With Form Elements",
          "Checkbox",
          "Input type; Radio & File",
          "Select & Option",
          "New Visual Studio Code Extensions",
          "Challenge",
          "Let’s Make the Challenges",
          "Challenge Solutions Continue",
          "Quiz"
        ],
        "CSS Fundamentals": [
          "About the Section",
          "What is CSS",
          "Styling Methods-Inline, Internal and External",
          "Let’s Do Some Styling",
          "Combining Selectors",
          "Style Operation With Class and Id Assignment",
          "Order of Priority in CSS",
          "Working with Colors",
          "Working with Colors on Code",
          "Using Border in CSS",
          "Pseudo-Class in CSS",
          "Styling Hyperlinks With Pseudo-Class",
          "Crome DevTools",
          "Important Advices for CSS",
          "Challenge 1",
          "Box Model",
          "Margin & Padding",
          "Let’s Start Using Margin & Padding",
          "Dimensioning with CSS",
          "Let’s Centre Our Page",
          "Challenge 2",
          "Types of Boxes",
          "Element Positioning with CSS",
          "Use of Fixed and Sticky",
          "Creating Shadow in CSS",
          "Challenge 3",
          "Quiz"
        ],
        "Layout on Webpage": [
          "About the Section",
          "3 Ways to Create Layout on Web Pages",
          "Float",
          "Flexbox",
          "Flexbox Overview",
          "Let’s Keep Using Flexbox",
          "Flex-Wrap",
          "Adding Flexbox to Our Project",
          "Adding Flexbox to Our Project 2",
          "Let’s Change the Page Layout with Flexbox",
          "Introduction to CSS Grid",
          "What Is CSS Grid?",
          "Let’s Continue Examining CSS Grid Features",
          "Other Grid Features",
          "Quiz"
        ],
        "Media Query and CSS Animations": [
          "Section Overview",
          "Media Query and CSS Animations Code Samples",
          "Responsive Menu Making With Media Query",
          "CSS Animations",
          "Making a Slider Menu With Transform",
          "Keyframes",
          "Animation Examples With Keyframes",
          "Quiz"
        ],
        "Portfolio Website": [
          "Portfolio Website",
          "Let’s Start Creating the Sections",
          "Let’s Start With Header Creation",
          "Home Section",
          "About Section",
          "Services Section",
          "Portfolio Section",
          "Contact Section & Footer",
          "Responsive Page Design"
        ],
        "Bootstrap 5 Fundamentals": [
          "Bootstrap 5",
          "How to Integrate Bootstrap Into Applications",
          "Container and Container Fluid",
          "Bootstrap 5 Typography Review",
          "Text Features",
          "Use of Colors",
          "Spacing",
          "Border",
          "Display",
          "Position Relative & Absolute",
          "Position Fixed & Sticky",
          "Sizing",
          "Buttons",
          "Using Images Classes",
          "Other Bootstrap 5 Features",
          "Quiz"
        ],
        "Bootstrap 5 Advanced": [
          "Grid",
          "Using Bootstrap Grid Structure on Different Screen Size",
          "Aligning Columns and Gutters",
          "Let's Start Using Flex with Bootstrap 5",
          "Vertical and Horizontal Alignment in Flex Structure",
          "Other Flexbox Features",
          "List Group",
          "Form Classes",
          "Let's Continue Working with Form Elements",
          "Other Input Features",
          "Creating Tables With Bootstrap 5",
          "Quiz"
        ],
        "Bootstrap Features Working With JavaScript": [
          "Bootstrap Features Working With Javascript",
          "Dropdown",
          "Modal",
          "Carousel",
          "Collapse & Accordion",
          "Quiz"
        ],
        "Bootstrap 5 Project": [
          "Project Presentation",
          "Navbar",
          "Let’s Start Creating Carousel",
          "Let’s Start Creating the Main Section",
          "Creation of Students and Questions Sections",
          "Creation of Contact and Footer Section"
        ]
      },
      "requirements": [
        "No prior Bootstrap, HTML CSS knowledge needed",
        "No prior knowledge of Python, Django is required",
        "Desire to learn Full stack web development with Python Django, boostrap, HTML, CSS",
        "This course will take you from scratch to the advanced level",
        "Computer with access to the internet",
        "Desire to learn python web development, full stack web development",
        "Desire to learn django, python django",
        "Desire to learn python web development with python, django, bootstrap, html css",
        "Desire to learn web development with python, django, bootstrap, html css",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to Python Web Development with Django and Bootstrap, HTML, CSS course.\nDjango and Python Web development with HTML, CSS, Bootstrap 4. Build responsive websites with Django and Python\nDjango, python web development, python, python Django, django bootstrap, django web development, web development with bootstrap python python & django, bootstrap, web development python, web development with python, bootstrap django, django python\nThis course will be your gateway to learn web design with blank HTML, CSS, and Bootstrap files with a step-by-step approach.  We can assure you that only this course will be enough for you to learn web development from scratch to intermediate. Then you will learn Python Programming step-by-step.\nI made Python 3 programming simple and easy with exercises, challenges, and lots of real-life examples. Then we will continue with the Django framework for developers because it provides the infrastructure required for database-driven websites that have user authentication, content administration, contact forms, and more. Instead of creating all of these features from scratch, you can use the Django framework that is already built so you can focus your time on developing your web app instead.\nWe'll be moving rapidly to give you the quickest, yet most thorough web development experience.\nIn this course, we have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an HTML page associated with it and has a start state. As we move along through the lectures, you code along with us while learning all that Bootstrap 4 offers including helpers/utilities, components, widgets, grid, and more.\nWhat you will learn?\nIn this course, we will start from the very beginning and go all the way to programming with hands-on examples. We will first learn how to set up a lab and install needed software on your machine.  Then during the course, you will learn;\nLearn to use the latest HTML5 and CSS3 to add unique styling to Bootstrap\nLearn and create amazing high-quality Bootstrap 4 themes and UIs from scratch\nMaster every single Bootstrap component\nLearn to compile Sass in the easiest way possible using a GUI\nGet a crash course of the Bootstrap Grid System with the theme layout\nLearn how to add Website Scrolling Animation to any Bootstrap Component or HTML Element\nVariables, Data types, Numbers, Strings\nConditionals and Loops\nFunctions and modules\nLists, Dictionaries, and Tuples\nFile operations\nObject-Oriented Programming\nFull stack web development\nPython web development\nHTML CSS\nBootstrap\nDjango\nPython\nPython django\nDjango bootstrap\npython django web development\nDjango web development\nFull stack web developer, python web developer\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat are the most popular coding languages for web development?\nThe must-know languages for frontend web development are HTML, CSS, and JavaScript. These languages are used by nearly every site you visit. JavaScript is a fundamental programming language for adding interactivity to your website. There are many popular JavaScript libraries that you can import and allow you to add useful functionality while dramatically decreasing the amount of code you might write, and offering features that would be difficult or time-consuming to code yourself. Once you are comfortable with JavaScript, you will want to explore the many libraries available. There are many other programming languages that you can use for web development. If you want to write backend code, you will need to learn a language that runs on the server that powers your website (as opposed to the web browser, where frontend code is executed). Consider learning Python, Ruby, Java, or PHP. It can be helpful to research which backend language is popular in the field that interests you most.\nWhat are the skills I need to become a web developer?\nYou'll need to be able to code in HTML, CSS, and JavaScript. Mastering these three languages is essential for web development. They each serve a crucial function: HTML is the content itself – the words, pictures, etc., CSS controls how all of that content looks, and JavaScript makes a website interactive. Luckily, you can learn all three languages on your own using online tools and courses. To be a good web developer, you'll also need many skills beyond programming languages. A crucial professional skill is problem-solving. Good problem-solving skills will help you to track down bugs quickly and develop algorithms to complete complex tasks. Interpersonal skills are also necessary for the job, such as communication and collaboration. Many web development projects require a team of developers. To succeed in web development, you must work well in team environments.\nWhat is the difference between front-end, back-end, and full-stack web development?\nFrontend web developers write client-side code. This is all the code that runs on the user's computer when they visit a website. Generally, this includes everything that the user can see. To write frontend code, you need to know HTML, CSS, and JavaScript. Backend web developers write server-side code. This is all the code that runs on the website's server. Backend code controls the logic of the website. For example, a frontend developer may code where a username will appear on a website and its style, but the backend developer will write the code that retrieves the username from the database. Backend developers need to know a server-side programming language in addition to HTML and JavaScript. Not all projects have a front and backend web developer. Some projects only have full-stack web developers, which do both front and backend coding. The team composition depends on the needs of the project. Full-stack web developers need to be strong front and backend coders.\nWhat is Python?\nPython is a general-purpose, object-oriented, high-level programming language. Whether you work in artificial intelligence or finance or are pursuing a career in web development or data science, Python is one of the most important skills you can learn. Python's simple syntax is especially suited for desktop, web, and business applications. Python's design philosophy emphasizes readability and usability. Python was developed on the premise that there should be only one way (and preferably, one obvious way) to do things, a philosophy that resulted in a strict level of code standardization. The core programming language is quite small and the standard library is also large. In fact, Python's large library is one of its greatest benefits, providing different tools for programmers suited for a variety of tasks.\nPython vs. R: what is the Difference?\nPython and R are two of today's most popular programming tools. When deciding between Python and R, you need to think about your specific needs. On one hand, Python is relatively easy for beginners to learn, is applicable across many disciplines, has a strict syntax that will help you become a better coder, and is fast to process large datasets. On the other hand, R has over 10,000 packages for data manipulation, is capable of easily making publication-quality graphics, boasts superior capability for statistical modeling, and is more widely used in academia, healthcare, and finance.\nWhat does it mean that Python is object-oriented?\nPython is a multi-paradigm language, which means that it supports many programming approaches. Along with procedural and functional programming styles, Python also supports the object-oriented style of programming. In object-oriented programming, a developer completes a programming project by creating Python objects in code that represent objects in the actual world. These objects can contain both the data and functionality of the real-world object. To generate an object in Python you need a class. You can think of a class as a template. You create the template once, and then use the template to create as many objects as you need. Python classes have attributes to represent data and methods that add functionality. A class representing a car may have attributes like color, speed, and seats and methods like driving, steering, and stopping. The concept of combining data with functionality in an object is called encapsulation, a core concept in the object-oriented programming paradigm.\nWhat are the limitations of Python?\nPython is a widely used, general-purpose programming language, but it has some limitations. Because Python is an interpreted, dynamically typed language, it is slow compared to a compiled, statically typed language like C. Therefore, Python is useful when speed is not that important. Python's dynamic type system also makes it use more memory than some other programming languages, so it is not suited to memory-intensive applications. The Python virtual engine that runs Python code runs single-threaded, making concurrency another limitation of the programming language. Though Python is popular for some types of game development, its higher memory and CPU usage limits its usage for high-quality 3D game development. That being said, computer hardware is getting better and better, and the speed and memory limitations of Python are getting less and less relevant making Python even more popular.\nHow is Python used?\nPython is a general programming language used widely across many industries and platforms. One common use of Python is scripting, which means automating tasks in the background. Many of the scripts that ship with Linux operating systems are Python scripts. Python is also a popular language for machine learning, data analytics, data visualization, and data science because its simple syntax makes it easy to quickly build real applications. You can use Python to create desktop applications. Many developers use it to write Linux desktop applications, and it is also an excellent choice for web and game development. Python web frameworks like Flask and Django are a popular choice for developing web applications. Recently, Python is also being used as a language for mobile development via the Kivy third-party library, although there are currently some drawbacks Python needs to overcome when it comes to mobile development.\nWhat jobs use Python?\nPython is a popular language that is used across many industries and in many programming disciplines. DevOps engineers use Python to script website and server deployments. Web developers use Python to build web applications, usually with one of Python's popular web frameworks like Flask or Django. Data scientists and data analysts use Python to build machine learning models, generate data visualizations, and analyze big data. Financial advisors and quants (quantitative analysts) use Python to predict the market and manage money. Data journalists use Python to sort through information and create stories. Machine learning engineers use Python to develop neural networks and artificial intelligent systems.\nHow do I learn Python on my own?\nPython has a simple syntax that makes it an excellent programming language for a beginner to learn. To learn Python on your own, you first must become familiar with the syntax. But you only need to know a little bit about Python syntax to get started writing real code; you will pick up the rest as you go. Depending on the purpose of using it, you can then find a good Python tutorial, book, or course that will teach you the programming language by building a complete application that fits your goals. If you want to develop games, then learn Python game development. If you're going to build web applications, you can find many courses that can teach you that, too. Udemy’s online courses are a great place to start if you want to learn Python on your own.\nWhat is Django?\nDjango is a Python-based Web Application Framework that follows the Model-View-Controller architectural pattern. As one of the most popular Web Application Frameworks available today, Django has an extensive amount of documentation and extensions available. It is also built primarily for data-driven websites. A non-profit organization and an active community of developers contribute to Django’s platform, which is both open-source and free. The advantages of using Django are rapid development and less code. Django also provides an administrative interface and many bundled components. Websites such as The Washington Times, Instagram, and Nextdoor used Django for development, and employers frequently seek Django developers and Python specialists for web development.\nWhat is Django used for?\nAs an MVC Web Application Framework, many use Django to develop and deploy web applications rapidly. Django makes it easier for developers to hit the ground running rather than having to build the entirety of their platform from scratch. Mainly, Django is useful for those who are experts in Python — data models, settings, and files all use the Python language. In development since 2005, Django is a mature Web Application Framework with a significant amount of documentation and support, making its utilization attractive to those building complex, data-driven applications. Because Django is well-supported and robust, developers can use Django for large, enterprise-grade applications — but you can also use it for simpler applications.\nWho uses Django?\nPython programmers who are interested in a low code development prefer Django for its “don’t repeat yourself” model. Ideally, Django can create streamlined programs that require little coding to initialize. It has a significant body of architecture within its components and libraries, and you can administer it internally. Developers primarily use Django for web applications that need to balance large amounts of data and significant loads. Over 2,500 packages are available to extend Django’s behavior, making it a particularly robust platform. Developers interested in using Django can check to see if the functionality they desire already exists. Django is also often favored by full-stack developers who want to be able to build web applications from start to finish, as you can use it for both frontend and backend design.\nIs Django frontend or backend?\nFrontend design is related to what the user sees and interacts with. Backend is concerned primarily with the data. Django is both a frontend and backend Web Application Framework, unlike platforms like JavaScript’s Bootstrap, which you can use for frontend design. Django concerns itself primarily with the application’s interior workings, such as data manipulation, but is also useful for end-to-end frontend and backend design. A developer familiar with Django may be able to develop their web application “full-stack,” developing the entirety of the web application from front to back. However, frontend and backend work in Django can be separated if desired, meaning you can use Django for one or the other with some work. When separated in this way, Django is compatible with other frontend or backend technology.\nWhat are the key considerations when deciding on a Web Application Framework?\nThere are both open-source, free Web Application Frameworks and commercial, proprietary frameworks. The latter is more expensive, but it will generally come with more support. Web Application Frameworks usually focus on a specific language. Django works with Python. Additionally, every Web Application Framework has its own level of complexity and learning curve, documentation, and support. Most web developers will want a Web Application Framework in a language they are fluent in. A solid library of extensions and plug-ins is also ideal as it reduces the amount of work the developer will need to do. Since the Web Application Framework has a lot to do with how a system functions, the system's look-and-feel may also come into play, as may other quality of life issues such as the robustness of the administrative panel.\nWhat is the model-view-controler (MVC) architectural pattern?\nThe Model-View-Controller architectural pattern (MVC) is a type of software pattern for creating user interfaces. It standardizes how information flows through an application and makes it easier for developers to control all levels, from frontend to backend. Many Web Application Frameworks today follow the MVC model. Under the MVC architecture, the “model” refers to the data. The “view” refers to the display. Finally, the “controller” refers to the way that both models and views are updated. By retaining this consistency, multiple developers can also work together (both frontend and backend) without potentially retreading ground or overwriting essential items. The MVC model makes it easier to manage interconnected elements while ensuring that the application functions as a whole. MVC is compatible with desktop, mobile, and web application designs.\nWhat careers use Django?\nAs a Python-based web framework, Django is primarily used by web developers. Because developers can use Django for both front- and backend web development, it's useful for frontend developers, backend web developers, and full-stack web developers. Large enterprises such as Instagram, Mozilla, and Pinterest are driven by Django and contribute to the Django community. Everyone from entry-level web developers to senior web architects can make a promising career with Django.\nWhat are some alternatives to Django?\nIn the world of Python-based web frameworks, there are dozens of contenders. Flask is a popular Django alternative. Those who are new to web development may find Flask easy to adapt to, as its structure is clean and rigid. Both are based on Python, but Django requires more individualized knowledge. Another popular alternative to Django is TurboGears. TurboGears does not have the feature set of Django but has some extensive database management support. Other alternatives include Web2Py, Tornado, and CherryPy. When looking at Django, Flask, TurboGears, and other frameworks, it's important to contemplate a few factors: price, support, community, features, and integration. While many are better for niche situations, developers often consider Django to be the best all-around.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy are CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is an HTML element and why is it important?\nHTML is designed on a modular basis, meaning every part of the web page has a specific “place.” An HTML element is a part of the page. Common HTML elements include “<p>” for a “paragraph” and “<title>” for the “title” of the page. In fact, the entirety of the HTML page is within the “<html>” element. Elements are begun and ended with tags, so a title would be written: “<title>This is the Title to the page.</title>” Organizing code this way makes it easier to reference and control. Each element may also have characteristics. For instance, the “<p>” (paragraph) tag can be aligned in a certain direction. These are the basic building blocks of HTML and what most designers should learn first.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned instructors' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, all programming languages updates its system, and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now Python Web Development with Django and Bootstrap, HTML, CSS course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5 and CSS 3, Bootstrap 4 the first step in web development, completely and easily, you are at the right place.",
        "Anyone who plans a career as a Python developer",
        "For those who want a great start guide to Django",
        "People who are willing to make a career in the Web Development",
        "If you want to building your own website, you should enroll",
        "People who want to learn python web development, django bootstrap, html css, full stack web development",
        "People who want to learn django python, bootstrap, html, css",
        "Anyone who wants to be master python web development, python django, python, bootstrap, python django"
      ]
    },
    {
      "title": "HTML and CSS for complete Beginners",
      "url": "https://www.udemy.com/course/easy-html-and-css-for-beginners/",
      "bio": "Learn HTML 5 and CSS3 from scratch and build interesting projects.easy step by step tutorials.",
      "objectives": [
        "design a website"
      ],
      "course_content": {
        "HTML": [
          "overview",
          "What is HTML ?",
          "First webpage",
          "HTML Tags",
          "HTML Basic Structure",
          "HTML Headings",
          "HTML paragraph",
          "HTML Attributes",
          "HTML Comments",
          "HTML Anchor",
          "HTML Image",
          "HTML table",
          "HTML lists",
          "HTML Forms",
          "Form Fields",
          "Project: creating a registration form",
          "HTML div",
          "HTML quiz"
        ],
        "CSS": [
          "About CSS",
          "Css identifiers",
          "Css : Selecting child elements",
          "Css Display",
          "Css more about display",
          "Position: Relative",
          "Position: Absolute",
          "Position: Fixed",
          "Margin",
          "Padding",
          "Css quiz 1",
          "Overflow",
          "Border",
          "Border Radius",
          "Text-formatting",
          "External Stylesheet",
          "z-index",
          "Color codes",
          "Project 1: News Website design Part-1",
          "project 1: website design part-2",
          "Project 1: website design part-3",
          "Project 1: website design part-4",
          "Project 1 website design part-5 Last",
          "Hover Selector",
          "HTML Iframe",
          "Box-sizing",
          "Project 2: create a virtual Mobile phone"
        ]
      },
      "requirements": [
        "You should be able to use computer and browse internet."
      ],
      "description": "Easy HTML and CSS course is especially designed for beginners but anyone can give a try.Course starts with Introduction to HTML and HTML tags,attributes and Entities.then after finishing HTML section there will be an exercise in which students will make a registration form using html.\nthen students Learn Css from scratch and will be able to design a news website.",
      "target_audience": [
        "Anyone Who wants to learn about web development"
      ]
    },
    {
      "title": "GRUNT js: Automate web development tasks and save your time",
      "url": "https://www.udemy.com/course/gruntjs-automate-web-development-tasks-and-save-your-time/",
      "bio": "Save time automating web development tasks like compressing CSS/JS files on fly. Set Grunt and enjoy your free time!",
      "objectives": [
        "install and configure Grunt.js, npm, Node.js",
        "minify and merge CSS and JS files -> which will improve website loading speed",
        "automatically add vendor prefixes, after setting the project you won't need to think about vendor prefixes anymore",
        "find Javascript bugs almost instantly -> no more time consuming debugging of Javascript code",
        "dramatically decrease time needed for running many tasks at once"
      ],
      "course_content": {
        "Introduction": [
          "What is Grunt.js?",
          "Who Am I?",
          "What you will know after this course?"
        ],
        "Installation & Configuration": [
          "Installation of great editor for Grunt.js",
          "Node.js & npm & grunt-cli",
          "Configuration of Gruntfile.js and package.json",
          "Fast summary of Installation & Configuration"
        ],
        "Grunt Plugins": [
          "Installing and executing tasks on example using Autoprefixer",
          "How to configure tasks on example using Autoprefixer",
          "Watching for Changes: contrib-watch",
          "Automatically Compressing CSS files: contrib-cssmin",
          "Automatically Compressing and merging JS files: grunt-contrib-uglify",
          "Load many grunt tasks at once",
          "Image Optimisation",
          "Compressing images only if a new one is added: grunt-newer",
          "JShint - find bugs in your Javascript code instantly",
          "Run many tasks at once and improve the speed: grunt-concurrent",
          "Grunt Plugins Summary"
        ],
        "Summary": [
          "What after this course?"
        ],
        "BONUS": [
          "Bonus: Links to my other courses"
        ]
      },
      "requirements": [
        "html, css, javascript"
      ],
      "description": "As a front-end developer you have to do many time-consuming tasks.\nGrunt is a task runner automating the web development tasks, it will save you a lot of precious time.\nAs always time = money. Save your time by learning Grunt.\nSample tasks that are going to be executed for you by Grunt:\ncompressing of CSS and JS files -> making files smaller means that your website will load faster\nmerging CSS and JS files -> you can maintain many JS/CSS files and at the end use only one. This is decreasing the number of required requests (which also improves the website's loading speed)\noptimizing your images -> reducing their file sizes without affecting quality\nautomatically adding vendor prefixes -> you won't need to worry about vendor prefixes anymore. Grunt gives you a perfect solution with no performance hit and nothing new to learn.\nfinding Javascript bugs almost instantly -> bugs in JS are the hardest to spot. With JShint one of the Grunt plugins you can forget about this problem.\nand many more -> there are over 4,000 plugins available\n\n\nAfter my course you will know everything I mentioned above!\nSet it once and enjoy your saved time! Build your websites faster and avoid repetitive work.\nWhat's more, you will also know how to:\ninstall Grunt.js/npm/Node.js\nproperly configure and install plugins\nrun tasks concurrently which will drastically improve the needed time for execution of task\nI give you 100% satisfaction - if you do not like my course you can request a full refund up to 30 days. Remember that if you have any questions regarding topics covered in the course please feel free to ask. I'm always happy to help!\nOver 350,000 people from around the world enrolled in my courses\nPlease check free lessons before buying! See for yourself the great quality of the course and enjoy it!",
      "target_audience": [
        "This Grunt.js course is meant for people who are familiar with HTML, CSS and Javascript. No prior knowledge about Grunt.js/Node.js/npm is needed. Everything is described from the beginning."
      ]
    },
    {
      "title": "PHP with Laravel: Build CMS Blog with Admin Panel",
      "url": "https://www.udemy.com/course/php-with-laravel-2023-build-cms-blog-with-admin-panel/",
      "bio": "Build Complete CMS Blog in PHP Laravel, MySQL and Bootstrap and Build up your Web Development Skills",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Laravel UI package",
        "Learn how the MVC structure works in Laravel",
        "Integrate your own theme easily",
        "Work with Models and Eloquent the professional way",
        "Work with views and Eloquent the professional way",
        "Work with Controllers and Eloquent the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn to create a working search box",
        "Learn some advanced routing ways",
        "work with Middlewares and Guards",
        "Learn to validate with Requests",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Create full posting system",
        "Create full categories system",
        "Create full comments system"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of Laravel would help a lot"
      ],
      "description": "If you're interested in learning how to build a CMS blog with PHP Laravel, this course is perfect for you. Throughout the course, you will learn how to create a complete content management system (CMS) with the Laravel PHP framework. You'll be creating your CMS from scratch, complete with page, user, and blog management capabilities.\n\n\nThe course is designed to be hands-on, so you will be working on real-world projects throughout the course. You will learn how to use PHP Laravel to create a dynamic and interactive web application that is both functional and user-friendly. By the end of the course, you will have a complete CMS blog that you can use as a template for your own web applications.\n\n\nHere's what you can expect to learn in the course:\n\n\nHow to install and set up PHP Laravel\nHow to create a database and connect it to your application\nHow to create a user authentication system\nHow to integrate your own theme\nHow to create a full posting system\nHow to create a full categories system\nHow to create a commenting system\nHow to create a full comments system\nHow to create a search system\nHow to build a custom admin panel\nHow to work with MVC structure\n\nand So much more. Whether you are a beginner or an experienced developer, this course is perfect for anyone who wants to learn how to build a complete CMS blog using PHP Laravel. So, if you're ready to take your web development skills to the next level, enroll in the course today!",
      "target_audience": [
        "People who learned PHP Laravel and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "Python Web Developer Masterclass - Build 6 Website",
      "url": "https://www.udemy.com/course/python-web-developer-masterclass-build-6-website/",
      "bio": "Python Web Development Bootcamp: From Beginner to Full-Stack Developer",
      "objectives": [
        "Python Fundamentals: Grasp the core concepts of Python programming, including data structures, control flow, and object-oriented programming.",
        "Web Development Basics: Understand the fundamentals of web development",
        "Django Framework: Build complex web applications with ease using Django's powerful features.",
        "Flask Framework: Create lightweight and flexible web applications with Flask.",
        "Front-End Development: Learn to create beautiful and interactive user interfaces."
      ],
      "course_content": {},
      "requirements": [
        "No experience required"
      ],
      "description": "Are you ready to transform your web development skills with Python?\nThis comprehensive course is designed to take you from a Python beginner to a full-stack web developer. You'll learn how to build robust, scalable, and dynamic web applications using powerful Python frameworks like Django and Flask.\nWhat You'll Learn:\nPython Fundamentals: Master the core concepts of Python programming.\nWeb Development Basics: Understand HTML, CSS, and JavaScript.\nDjango Framework: Build complex web applications with ease.\nFlask Framework: Create lightweight and flexible web apps.\nDatabase Integration: Work with SQL and NoSQL databases.\nRESTful APIs: Design and implement powerful APIs.\nWeb Security: Protect your applications from vulnerabilities.\nDeployment: Deploy your web apps to the cloud.\nReal-World Projects: Build 6 practical website\nWhy Choose This Course?\nClear and Concise Explanations: Easy-to-follow lessons and code examples.\nHands-On Projects: Build real-world applications to solidify your skills.\nExpert Instructor: Learn from a seasoned Python web developer.\nCertificate of Completion: Showcase your expertise to potential employers.\nWho Is This Course For?\nAspiring developers looking for a structured introduction to web development.\nBy the end of this course, you’ll have a portfolio of professional-grade websites and the confidence to start your journey as a Python web developer.\nEnroll now and embark on your journey to becoming a proficient Python web developer!",
      "target_audience": [
        "Those new to programming who want to learn Python and web development from scratch."
      ]
    },
    {
      "title": "Build PHP Hospital System Using CodeIgniter Framework (2025)",
      "url": "https://www.udemy.com/course/build-complete-hospital-system-using-php-codeignitger/",
      "bio": "This is the only course where complete erp software is fully developed using the most simpliest approach for very secure",
      "objectives": [
        "Be able to build any web app you want using codeigniter",
        "Build fully-fledged web apps for your startup or business",
        "Build complete hospital management in codeigniter",
        "Work as a freelance PHP developer",
        "Craft a portfolio of web apps to apply for seniour developer jobs",
        "Learn to use CodeIgniter",
        "Have a new PHP Skill that would increase income"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "1.2 How to download complete source codes and database."
        ],
        "2. Downloading Required Tools": [
          "2.1 Files download and installation (text editor, wamp, codeigniter)",
          "2.2 Solving common wamp server problem",
          "2.3 Downloading Free Admin Template",
          "2.4 Showing the html template we want use",
          "2.5. Converting Html File To Php File",
          "2.6. Understanding PHP include and how to use it"
        ],
        "3. Introduction to codeigniter": [
          "3.1 Introducing php codeigniter framework",
          "3.2 Installation and setup of codeigniter",
          "3.3 Quick Explanation on How Codeigniter Works",
          "3.4. Basic Codeigniter Config Explainning Files Autoload, Config, Database, Rout",
          "3.5 Integrating html template to the codeigniter",
          "3.6 Linking the css with the base url",
          "3.7. How to download the template we are using in this course - MUST WATCH"
        ],
        "4. Understanding the admin template": [
          "4.1. Introduction And Section Objective",
          "4.2 Quick explanation on the codeigniter template you downloaded from our google"
        ],
        "5. Loading and Working With Our First Login Page": [
          "4.1. Introduction And Section Objective",
          "5.2 Creating Our First Database And Connecting With Our Software",
          "5.3 Creating session save path table in phpmyadmin",
          "5.4 Loading Our First Login Page",
          "5.5 Working with language with codeigniter helper",
          "5.6 Creating language and settings table in phpmyadmin",
          "5.7 Using Get Phrase Function For Language Translation",
          "5.8 Creating Admin Table in database",
          "5.9 Login codes in controller part one",
          "5.10 Login Codes In Controller Part Two",
          "5.11 Implementing Mvc For Login",
          "5.12 Testing Our Login Codes",
          "5.13 Creating Admin Controller And Setting The Page Data",
          "5.14 Login In user and redirecting to user dashboard",
          "5.15 Logout codes and Redirect if session is on",
          "5.16 Error message for wrong email or password",
          "5.17 Quick Explanation on the template",
          "5.18 Echo system name and title in the login page"
        ],
        "6. Working with system navigation": [
          "6.1. Introduction And Section Objective",
          "6.2 Workiing With The Navigation Menu Part One",
          "6.3 Workiing With The Navigation Menu Part Two",
          "6.4 Quick explanation on the sidebar"
        ],
        "7. Building admin profile information": [
          "7.1 Introduction And Section Objective",
          "7.2 Preparing Html Form And Creating Method In Controller",
          "7.3 Adding More Columns To The Admin Table",
          "7.4 Creating admin model and autoload from config",
          "7.5 Working With Codes That Update Admin Table",
          "7.6 Fix Bug And Test Our Codes",
          "7.7 Creating Change Password Function In Admin Model",
          "7.8 Writting Codes To Change Password In Model",
          "7.9 Setting global codes for image url",
          "7.10 Display The Admin Information From Admin Table",
          "7.11 Display The Admin Information From Admin Table",
          "7.12 Display User Info On The Navigation Menu Part Two",
          "7.13 Display Logged In User Information At The Header"
        ],
        "8. Working with system settings": [
          "8.1 Introduction and section objective",
          "8.2 Creating setting controller and function",
          "8.3 Creating Html Form For System Settings (part One)",
          "8.4 Creating html form for system settings (Part Two)",
          "8.5 Selecting From The Setting Table",
          "8.6 Selecting From The Setting Table II",
          "8.7 Selecting From The Setting Table III",
          "8.8 Rounding Up The General Setting Form",
          "8.9 Creating And Loading Setting Model",
          "8.10 Working With The Update Codes I",
          "8.11 Working With The Update Codes II",
          "8.12 Finishing System Setting Codes"
        ],
        "9. Building the Department": [
          "9.1 Introduction and section objective",
          "9.2 Creating The Department Table",
          "9.3 Creating Department Controller And Manage Department Method",
          "9.4 Loading Our Department Html Form",
          "9.5 Working With The Html Form",
          "9.6 Workiing With Department Method And Creating Department Model",
          "9.7 Create, Update And Delete Codes In Department Model",
          "9.8 Testing The Insert Codes For The Department",
          "9.9 Displaying From Department Table",
          "9.10 Creating The Modal Controller",
          "9.11 More Explanation On The Modal View Page",
          "9.12 Working With The Update And Delete Buttons",
          "9.13 Finalizing The Codes And Testing"
        ],
        "10. Building Hospital Doctor Information": [
          "10.1 Introduction and section objective",
          "10.2 Creating the staff table",
          "10.3 Create Staff Controller",
          "10.4 Create add and list staff method",
          "10.5 Rename staff to doctor and add more to the navigation",
          "10.6 Loading doctor html form",
          "10.7 Model - Selecting From Department Table",
          "10.8 Model - Creating The Insert Code For Doctor",
          "10.9 Model - Complete Insert Code For Doctor",
          "10.10 Loading Doctor Model In Admin Controller And Fix Bugs",
          "10.11 Select From Doctor Table",
          "10.12 Create Edit Doctor File And Select From Doctor Table",
          "10.13 Working On The Update Doctor File",
          "10.14 Working on the update doctor file",
          "10.15 Complete The Update Doctor File",
          "10.16 Working With The Update Code In Model",
          "10.17 Create Doctor Profile Button And Method",
          "10.18 Explain The Doctor Profile Template"
        ]
      },
      "requirements": [
        "PHP version 7+ is a must",
        "Little knowledge of PHP, though not neccessary becase I'll teach you everything you need to know",
        "Little knowledge of CSS will be an advantage",
        "Zeal to learn codeigniter framework",
        "Computer system - windows/mac",
        "I'll walk you through, step-by-step how to setup codeigniter"
      ],
      "description": "Please READ all the points before proceeding\nPlease watch the preview video and ensure you are satisfy with my accent and my English before enrolling for the course.\nPlease do not take the course if you are not ready to learn how to build complete hospital solution.\nPlease note that The objective of this course is not to sell complete hospital system but to learn codeigniter by building your own complete hospital system through learning by practical.\nPlease read the Pre-Requisites before signing up\nIf you are still with me lets continue\nBuilding dynamic websites is not an easy challenge and requires time and effort dedicated to coding every bit and piece of the website, which is why anytime there is a new tool that promises to ease the woes of coding, developers always jump at the chance to try it.\nCodeIgniter is a simple open-source framework that makes it the coding tasks easier by providing a faster way to set up a PHP website from the ground-up. This tool with a small framework ensures that developers can design websites that are light, fast and dynamic.\nSo, for any developer that wants to become a server-side master, this is a tool that they should definitely have in their toolkit. But, it’s not always easy to find a course that is clear and concise and targets exactly what you are looking for!\nThis is why we have designed this course with an aim teach you everything you need know about CodeIgniter with real world project (Building Standard and Most School Management System) using a no-fluff and clear approach at the topic at hand, this tutorial will breakdown CodeIgniter into simple and easy to learn videos so as to be able to build any real world application on CodeIgniter.\nAt the end of this course, you will have not only learnt the CodeIgniter framework, but you will actually be able to start building your own projects from scratch. In addition to knowledge, this course will also give you the practical hands-on experience and the confidence to start coding your own websites by building school system.\nThe course will start at the very beginning with a detailed introduction into the CodeIgniter framework, from there moving on to installing the framework. From there you will become familiar with the framework, and start building your own hospital system.\nJoin us today as we learn CodeIgniter together by building real world software and be free from some authors who claim to teach you a particular programming language but only teach you basis and some copy and paste projects which at the end cannot take you to anywhere.\nFrom Beginner to Expert CodeIgniter Developer\nWe know that you’re here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they’re doing, you’d be on YouTube.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and we’re always on hand to answer student questions.\nSo by the end of the course, you’ll completely understand:\nCodeIgniter framework to level of building your own software especially hospital system.\nHow to use Ajax, jQuery effectively\nBuild hospital management system software worth $8000\nHow to create secure Login for Code\nSoftware Design: How to organise and format code for readability and how to implement the Model ­View­ Controller (MVC) design pattern.\nControl Structures: Using If/­Else clauses, Switch statements and logic to control the flow of execution.\nConcepts of Object Oriented Programming (OOP): The type system, variables, functions and methods, inheritance, classes and protocols.\nDon’t waste your time\nDon’t waste another minute of your precious life on poor quality videos on YouTube. Or instructors who you can’t understand. Or teachers who have no real world in-person teaching experience. Your time is precious. Take this course and find out why everybody is raving about it and why many students rated my courses 5 stars!\nDon’t waste your money\nInside this course, you’re getting exactly the same course materials and curriculum as our 12 week in-person programming bootcamp. Instead of spending $8000+ dollars and taking time off work, save loads of money by getting this course and do it at your own pace!\nREMEMBER… I’m so confident that you’ll love this course that we’re offering a FULL money back guarantee for 30 days! So it’s a complete no-brainier, sign up today with ZERO risk and EVERYTHING to gain.\nWho is this course for:\nIf you have never programmed before, then take this course to learn CodeIgniter\nIf you know how to code, but are new to CodeIgniter, then take this course to build web Apps.\nIf you are a CodeIgniter developer, then take this course to see how much time you can save building real world software – Hospital Management System.\nIf you’ve tried CodeIgniter before, then take this course to get a comprehensive curriculum that covers all the important aspects of CodeIgniter development\nEntrepreneurs Who Want to Build Web Apps with Single Codebase\nManagers and Program Managers Who Want to Learn How to Build Complete Hospital Management System.\nAnyone wanting to learn to code in a practical way\nAnyone who wants to kick start a career or hobby developing apps\nBuild meaningful software quickly\nThis is the only course on Udemy where students can drop their desired features and both the students and the instructor will develop it together. This is also a course where more features will be added by the instructor and each section will be released everyday.\nJoin us NOW as we build this awesome software together using one of the best frameworks - Codeigniter!!!",
      "target_audience": [
        "Beginner developer want to learn more about codeigniter",
        "Professional who want to add more to their knowledge",
        "Those who want to know how to build complete hospital management system",
        "Developers who want to be codeigniter expert.",
        "Beginner Codeigniter developers curious about how to hospital school system",
        "If you need hospital software to power your hospital business"
      ]
    },
    {
      "title": "Create a Code Writing ChatGPT A.I. Site With Django Python",
      "url": "https://www.udemy.com/course/create-a-code-writing-chatgpt-ai-site-with-django-python/",
      "bio": "Learn to Connect Your Django Python Apps To OpenAI The Fast And Easy Way!",
      "objectives": [
        "Intro To the OpenAI Text Completion API",
        "Intro To Django",
        "Intro Use of Python",
        "How To Connect to The OpenAI API With Django"
      ],
      "course_content": {
        "Setup and Installation": [
          "Introduction",
          "Install Python",
          "Install Sublime Text and Git Bash Terminal",
          "Set Up A Virtual Environment",
          "Django Start Project and App"
        ],
        "Version Control With Git and Github": [
          "Create SSH Key",
          "Set Up Git and Github"
        ],
        "Build Out The Website": [
          "Settings and Urls",
          "Create A Homepage",
          "Extends Base",
          "Create A Navbar",
          "Intro To Prism",
          "Download and Install Prism",
          "Add CSS and Javascript",
          "Use Prism on the Homepage",
          "Add Form",
          "Add Select Box",
          "Create Form Action",
          "Null Select"
        ],
        "OpenAI API": [
          "OpenAI Introduction",
          "Create API Request",
          "Parse API Response",
          "Add Suggestion Page",
          "Create Suggestion Reguest"
        ],
        "User Authentication": [
          "Authentication Setup",
          "Login and Logout View",
          "Register User View",
          "Signup Form",
          "Create Register Page",
          "Login",
          "Login Error Handling"
        ],
        "Save Code To Database": [
          "Create The Code Model",
          "Save Code To Database",
          "Create Past Code Page",
          "Delete Code Items",
          "Final"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No special tools are necessary to take this course",
        "A Basic Understanding of Python and Django Is Helpful"
      ],
      "description": "In this course I'll teach you how  to make web apps for Django and Python, and how to connect those apps to the OpenAI (makers of ChatGPT) Text Completion Artificial Intelligence API and have it fix code that you submit as well as write code that you ask it to write.\n\n\nWe'll use Python, Django, and the Bootstrap Framework to build a cool Coding website that connects to OpenAI.\n\n\nYou'll be able to:\n\n\nSubmit your Code and have the A.I. suggest fixes\nAsk The A.I. To write code for you.\nChoose from over a dozen programming languages\nSave your code responses to the Database\nView Past Code Responses from the Database\n\n\nWe'll use a database to save all of the code answers that you've received from the OpenAI API, and we'll query that database and output the answers on their own web page.\n\n\nFinally, I'll discuss how to connect to OpenAI with an API Key, query the engine, and parse the responses in the correct way and output the answers to the homepage of your Django app.\n\n\nIf you've seen ChatGPT recently and want to learn how to use these tools programmatically, then this is the course for you!\n\n\nWe'll use the Bootstrap CSS Framework to make our Django web app look a little more modern and professional.  This will allow us to make our site look great, very quickly and easily-- without knowing much about design.",
      "target_audience": [
        "This course is geared towards anyone who's interested in programming ChatGPT from Open AI.",
        "This course is aimed towards beginers through intermediate Coders who want to learn the to build Apps With Django and Python"
      ]
    },
    {
      "title": "Javascript, HTML and CSS | HTML CSS Javascript for Beginners",
      "url": "https://www.udemy.com/course/html-css-and-javascript-complete-guide-for-beginners/",
      "bio": "Javascript, HTML and CSS for Full Stack Web Development. Become Full stack Developer with HTML CSS Javascript course.",
      "objectives": [
        "You will have a basic understanding of HTML",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "We will learn to place pages in the easiest way by talking about all layout models in CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "What is conditional statements (if else, switch case, ternary operator), how to use",
        "What is loops (for loops, while loops, continue and break statements), how to use them",
        "How to write Functions, what are the differences between Function Decleration and Function Expression",
        "How to create Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "How to create objects, how to update them, object methods",
        "You will learn to use basic tags which are used commonly",
        "Learn the difference in usage between block level and inline elements in HTML",
        "By learning the use of HTML table, you will be able to create different designs of your own",
        "JavaScript is a text-based computer programming language used to make dynamic web pages.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for webdevelop",
        "JavaScript is a text-based programming language used for client- and server-side development."
      ],
      "course_content": {
        "Introduction to Javascript, HTML CSS JavaScript, html, css": [
          "What is Internet and HTML ?",
          "Javascript, HTML CSS JavaScript Project Files and Course Documents",
          "Basic Tags in HTML CSS JavaScript",
          "Images and Attributes in HTML CSS JavaScript",
          "Lists in HTML CSS JavaScript",
          "List Example in HTML CSS JavaScript",
          "Block Level - Inline Elements in HTML, CSS, JavaScript",
          "FAQ about JavaScript, HTML, CSS",
          "Html Quiz 1"
        ],
        "Let's Learn More Complex Topics in HTML": [
          "Tables in HTML",
          "Table Example in HTML",
          "HTML Forms",
          "HTML Forms Example",
          "Html Quiz 2"
        ],
        "CSS": [
          "CSS Basics",
          "CSS Colors",
          "CSS Background and Border",
          "CSS Selectors",
          "CSS Quiz"
        ],
        "Intermadiate CSS": [
          "CSS Text and Fonts",
          "Debugging in CSS",
          "CSS Box Model",
          "CSS Position",
          "CSS Float",
          "CSS Display Property",
          "Box-Model Practice",
          "CSS Float-Layout Practice",
          "CSS Box-Sizing",
          "CSS Media Queries",
          "CSS Quiz"
        ],
        "Flexbox and Grid For CSS": [
          "CSS Flexbox Introduction",
          "Flexbox Properties 1",
          "Flexbox Properties 2",
          "Flexbox Properties 3",
          "Grid CSS Intro",
          "Grid CSS",
          "Grid CSS - 2",
          "Grid CSS - 3",
          "Grid CSS - 4",
          "Grid CSS - 5",
          "Grid and Flexbox Project",
          "Grid and Flexbox Project - 2",
          "Grid and Flexbox Project - 3",
          "Grid and Flexbox Project - 4",
          "CSS Quiz"
        ],
        "JavaScript": [
          "Introduction to JavaScript",
          "JavaScript Setup Visual Studio Code",
          "Adding js File",
          "quiz"
        ],
        "JavaScript Language Basics": [
          "JavaScript Variables and Data Types",
          "JavaScript Type Coercion",
          "JavaScript Variable Mutation",
          "JavaScript Basic Operators",
          "JavaScript Boolean Logic",
          "JavaScript Logical Operators",
          "quiz"
        ],
        "JavaScript Conditional Statements": [
          "JavaScript Conditional Statements",
          "JavaScript Code Quiz 1 Solution",
          "JavaScript Ternary Operator",
          "Switch, Case Statements",
          "JavaScript Code Quiz 2",
          "Code Quiz 2 Solution",
          "quiz"
        ],
        "JavaScript Loops": [
          "Introduction to JavaScript Loops",
          "JavaScript While Loops",
          "While Loops Quiz",
          "While Loops Quiz Solution",
          "JavaScript for Loops",
          "for Loops Quiz Solution",
          "JavaScript Continue and Break Statements",
          "quiz"
        ],
        "JavaScript Functions": [
          "Introduction to JavaScript Functions",
          "JavaScript Function Decleration",
          "JavaScript Function with Arguments",
          "JavaScript Function return",
          "JavaScript Function Expression",
          "JavaScript Function Quiz",
          "JavaScript Function Quiz Solution",
          "JavaScript Function Scope",
          "quiz"
        ]
      },
      "requirements": [
        "No prior HTML or CSS knowledge needed",
        "Willingness and Motivation to successfully complete the javascript html css training",
        "Desire to learn javascript, html css javascript, html css, html, css",
        "Desire to learn html css javascript for full stack web development",
        "Desire to learn front end web development with javascipt, html css",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to the Javascript, HTML and CSS | HTML CSS Javascript for Beginners course.\nJavascript, HTML and CSS for Full Stack Web Development. Become Full stack Developer with HTML CSS Javascript course.\nThis course will be your gateway to learn web design with HTML5, CSS3 with a step-by-step approach.  We can assure you that only this course will enough for you to learn HTML and CSS from scratch to intermediate. Javascript, html css javascript, html, html css, css, javascript for beginners, html css and javascript, html css js, java script, html css javascript for beginners\nHTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML.\nHTML stands for HyperText Markup Language, which is the biggest markup language used to display web pages on the Internet. In other words, web pages are composed of HTML, which is used to display text, images, or other resources through a web browser.\nHTML is the basic building block of the web and actually isn’t a technical programming language. It is responsible for the structure of the website.\nJavaScript is the number one programming language for internet applications. The basics of JavaScript are dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject.\nConsider the devices that you use to access the internet on a daily basis. You’ll notice that there isn’t a standard screen size. Without CSS, rendering a website’s text, layout, and design for these discrepancies in screens would be impossible. CSS is the backbone of all website styling work and is rightfully considered a cornerstone of internet technology.\nDuring our course, you will be informed about the basics of JavaScript in detail and how to solve problems.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nThe most important feature that distinguishes this course from the others is that it deals with the most basic issues about JavaScript in detail and helps students to put what they have learned in theory into practice.\nJavaScript is a text-based computer programming language used to make dynamic web pages. A must-learn for aspiring web developers or programmers, JavaScript can be used for features like image carousels, displaying countdowns and timers, and playing media on a webpage. With JavaScript online classes, you can learn to build interactive web applications, choose the best framework, and work with other programming languages like HTML and CSS.\nIn this course, we will start with HTML, which is the basis of web development and then we will continue to learn CSS and final learn JavaScript.\nThis course will take you from a beginner to a more experienced level. You will learn HTML5, CSS3, and JavaScript step by step with hands-on examples.\nIn this course you will learn;\nTo create static HTML sites,\nTo create a beautiful, responsive landing page for anyone,\nYou will learn to use basic tags which are used commonly,\nYou will be able to prepare lists in different formats,\nThe difference in usage between block-level and inline elements in HTML,\nThe uses of HTML table, and by learning this you will be able to create different designs of your own,\nTo able to create commonly used user login and registration pages by learning the form structure,\nAnd improve your knowledge step by step by learning the basics of CSS\nTo place pages in the easiest way by talking about all layout models in CSS.\nTo prepare web pages with Grid CSS and Flexbox features.\nHow you can operate on variables,\nBoolean logic,\nHow to create a conditional statement,\nHow you can perform transactions with Loops,\nHow a function is created and why it needs arguments,\nHow Arrays and Objects, which are basic data structures, are created,\nHow DOM Manipulation is done,\nYou will have learned and had the opportunity to test what you have learned with the code quizzes in our course.\nFrond end web development with Javascript, HTML, CSS\nFull stack web development with html css Javascript\nHTML\nCSS\nJavascript\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is an HTML element and why is it important?\nHTML is designed on a modular basis, meaning every part of the web page has a specific “place.” An HTML element is a part of the page. Common HTML elements include “<p>” for a “paragraph” and “<title>” for the “title” of the page. In fact, the entirety of the HTML page is within the “<html>” element. Elements are begun and ended with tags, so a title would be written: “<title>This is the Title to the page.</title>” Organizing code this way makes it easier to reference and control. Each element may also have characteristics. For instance, the “<p>” (paragraph) tag can be aligned in a certain direction. These are the basic building blocks of HTML and what most designers should learn first.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat skills should I have before learning CSS?\nBefore learning CSS, you should know the basics of using a computer and how to use a text editor because that is where you will be writing CSS. You should also be familiar with web browsers for browsing the web because it will inform your use of CSS. Since you may end up using specialized tools to write CSS, you should know how to install software on your computer and create and manage files and folders on your computer so you can create a CSS project. Once you have those skills down, the next thing to learn is HTML; after all, CSS is nothing without an HTML page to apply styles. That should be the basics you need to know to get started with CSS.\nNo prior knowledge is needed!\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel our seasoned instructors' expertise.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now Javascript, HTML and CSS | HTML CSS Javascript for Beginners course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5 and CSS 3 the first step in web development, completely and easily, you are at the right place.",
        "It's perfect for complete beginners with zero experience.",
        "People who are willing to make a career in the Web Development",
        "Anyone who trying to learn JavaScript but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real apps",
        "Those who want to learn the basics of JavaScript, the world's most popular programming language",
        "People who want to learn html css javascript",
        "People who want to develop with full stack javascript",
        "People who want to learn html css, javascript",
        "Anyone who start to develop webside",
        "Anyone who want to learn front end web development and webside development"
      ]
    },
    {
      "title": "Modules developer guide for Prestashop 1.7",
      "url": "https://www.udemy.com/course/create-module-prestashop-1-7/",
      "bio": "Learn about modules & create your own",
      "objectives": [
        "Create a module for prestashop 1.7",
        "Understand the anatomy of prestashop module"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Tools & setup"
        ],
        "Setup prestashop": [
          "Install prestashop on Docker",
          "Install prestashop on local server/ hosted server"
        ],
        "Getting to know Prestashop module": [
          "Module general introduction",
          "A look into an existing module [ block assurance ]",
          "Create first module",
          "Module extending and derived classes",
          "Constructor method",
          "Installation"
        ],
        "Prestashop module in depth": [
          "Introduction",
          "Install method",
          "Uninstall method",
          "Create first hook",
          "Use the configuration object",
          "Shop object introduction",
          "Module files structure",
          "Create first widget | prestashop 1.7 new feature",
          "How to render a widget [the method]",
          "Call widget ( hook a hook)",
          "Call a widget inside smarty",
          "Call a widget the classic hook way"
        ],
        "Configuration page": [
          "Setup a configuration page",
          "Simple update example",
          "Update data using a template form",
          "Add security check on submission",
          "Set default form value",
          "Use alert message helper",
          "Update data using a helper form"
        ],
        "Object Model": [
          "Introduction",
          "ObjectModel in action"
        ],
        "Front controller": [
          "Create a front controller",
          "Get method",
          "Apply global template to controller page",
          "Add custom style file to front controller",
          "POST method",
          "Create friendly URL"
        ],
        "Core controller [Admin controller]": [
          "Introduction",
          "Create new legacy controller",
          "Create an admin tab",
          "Activate the Admin Tab",
          "Uninstall the admin tab",
          "Add content page using Field list helper",
          "Add bootstrap style to the controller page",
          "Add action buttons to the items"
        ],
        "Bonus Chapter": [
          "Bonus"
        ]
      },
      "requirements": [
        "Must know PHP",
        "Must have knowledge about Prestashop",
        "Basic Docker knowledge (Optional)"
      ],
      "description": "This course is created to teach you first of all what is a prestashop module,\nThrough the episodes of this series you will learn how to create a fully functional module for prestashop 1.7 with front and back page ( controllers ) and various hooks that will allow you to show content generated from the module in various place of the view.\nLearn the new feature of prestashop 1.7 module such widget .\nLearn while creating is the way of this course.",
      "target_audience": [
        "Prestashop developers",
        "Prestashop fans"
      ]
    },
    {
      "title": "AWS CloudFormation-Beginner to Advanced (Hands-On with YAML)",
      "url": "https://www.udemy.com/course/aws-cloudformation-beginner-to-advanced-hands-on-guide/",
      "bio": "Beginners looking to learn AWS CloudFormation(YAML) & Build 3 End to End Enterprise Apps (No coding experience required)",
      "objectives": [
        "Develop expertise in writing AWS CloudFormation Templates and Build End to End Enterprise Use Cases using YAML - No previous coding experience required",
        "Course is designed for absolute beginners and starts with writing basic AWS CloudFormation services to advanced End to End use cases",
        "25+ AWS Services covered (Lambda, API Gateway, REST API Resources & Methods, IAM Roles, Route 53, ALB, EC2, S3, CW Logs, SNS, VPC and many others) using YAML",
        "Three real world enterprise use cases to be demonstrated end to end",
        "Enterprise Use Case 1- provision end to end Web Application using EC2, ASG, Launch Config, ALB, CloudWatch Log Group, SNS, Route 53 - Hosted Zone, CW Alarm",
        "Enterprise Use Case 2- provision Serverless Banking AccountBalance App using AWS API Gateway-REST API, Method, Resources, API Deployment, Lambda, IAM Role, S3",
        "Enterprise Use Case 3 - Provision end to end Networking Infrastructure - VPC, Subnet, Route Tables, Internet Gateway, NACL, Security Group",
        "Deploying the CloudFormation template through the CI-CD DevOps Pipeline using AWS CodeCommit, CodeBuild, CodeDeploy & CodePipeline Services.",
        "Learn about Resources, Parameters, Metadata, Mappings, Conditions, Rules, Output, Transform",
        "Learn YAML basics and write all the CloudFormation templates using YAML.",
        "Advanced Resources (DependsOn, DeletionPolicy, Stack Failure, Termination Protection)",
        "This course not only teaches you core concepts on CloudFormation but helps you build end to end Enterprise Use Cases critical in Real World Enterprise Settings",
        "I strongly believe this is the best AWS CloudFormation Course on Udemy. Try out the course, If you donot like it, comes with 30 day money back guarantee from Ud"
      ],
      "course_content": {
        "Course Introduction and Outline": [
          "Course Introduction and Outline",
          "Course Pre-Requisites"
        ],
        "CloudFormation - Basic Terminology": [
          "CloudFormation - Basic Terminology - Theory",
          "CloudFormation - Template Anatomy - Theory"
        ],
        "CloudFormation - Resources": [
          "Resources - Introduction",
          "Resources - S3 Bucket",
          "Resources - EC2 and S3",
          "Resources - VPC"
        ],
        "CloudFormation - Parameters": [
          "Parameters - Theory",
          "Parameters - HandsOn"
        ],
        "CloudFormation - Metadata": [
          "Metadata - EC2 and S3 - Theory",
          "Metadata - EC2 and S3 - HandsOn"
        ],
        "Resources, Parameters and Metadata - Tying it all together": [
          "Resources, Parameters and Metadata - Tying it all together : Part 1",
          "Resources, Parameters and Metadata - Tying it all together : Part 2"
        ],
        "Enterprise Serverless Banking Use Case - 1": [
          "AWS Serverless Architecture - API Gateway, AWS Lambda and S3",
          "AWS Serverless - S3 Bucket",
          "AWS Serverless Architecture - Lambda Execution Role",
          "AWS Serverless Architecture - AWS Lambda",
          "AWS Serverless Architecture - REST API and API Resources",
          "Important - Course Rating and Feedback",
          "AWS Serverless Architecture - API Method and API Deployment",
          "AWS Serverless Architecture - Lambda Invoke Permission",
          "AWS Serverless Architecture - End to End Demo",
          "AWS Serverless Architecture - End to End with Parameters Section",
          "AWS Serverless Architecture - End to End with Metadata and Parameters Section"
        ],
        "Enterprise Use Case - 2": [
          "WebApplication - Architecture",
          "WebApplication - Launch Configuration and Auto Scaling Group",
          "WebApplication - Application LoadBalancer",
          "WebApplication - CloudWatch Log Group and SNS",
          "WebApplication - Hosted Zone and ResourceRecords",
          "WebApplication - CloudWatch Alarm",
          "WebApplication - Changing the Name Servers with Domain Registrar",
          "WebApplication - Final Demo",
          "Troubleshooting"
        ],
        "Launching CloudFormation using AWS CI-CD Pipeline": [
          "AWS CI-CD Introduction",
          "Deploying CloudFormation using AWS CI-CD Pipeline without Parameters",
          "Deploying CloudFormation using AWS CI-CD Pipeline with Paramaters"
        ],
        "CloudFormation General Concepts - ChangeSets, IAM Role, Deletion Policy": [
          "Change Sets - Theory",
          "Change Sets - Handson",
          "CloudFormation IAM Role - Theory",
          "CloudFormation IAM Role - HandsOn",
          "CloudFormation - Resource Deletion (Delete, Retail and Snapshot) Theory",
          "CloudFormation - Resource Deletion (Delete, Retail and Snapshot) Hansdson"
        ]
      },
      "requirements": [
        "No programming experience or YAML/JSON experience required.",
        "Basic AWS Services Knowledge"
      ],
      "description": "Welcome to the most comprehensive AWS CloudFormation Course on Udemy from an instructor with actual enterprise hands-on implementation experience migrating more than 200+ workloads for Fortune 100 companies.\nThis AWS CloudFormation course is a fully handson course and will start with absolute basics and build on the basics to help you gain expertise at CloudFormation (YAML) to be able write any enterprise grade CloudFormation stack in no time.\n\n\nAbsolutely no coding or YAML background is required.\n25+ AWS Services covered (AWS Lambda, API Gateway, REST API Resources & Methods, IAM Roles, Route 53, ALB, EC2, S3, Auto Scaling, Launch Configuration, Cloud Watch Logs, SNS, VPC and many others\nThree End to End Enterprise Use Cases -:\nBanking Serverless App - API Gateway, AWS Lambda and S3\nWeb Application - Route 53, ALB, EC2 AutoScaling, CloudWatch Logs and Alarms, SNS\nAWS Account Baseline VPC Setup - VPC, Subnets, Internet Gateway, Route Tables, Security Group  and others\nBelow are the topics that will be covered as part of this course.\nAWS CloudFormation - Introduction\nCourse Introduction and Outline\nCloudFormation - Pre-Requisites, Basic Terminology and Template Anatomy\nAWS CloudFormation - Resources, Parameters and Metadata\nResources – S3, EC2 and VPC\nParameters – S3 and EC2\nMetadata\nResources, Parameters and Metadata - Tying it all together\nEnterprise Use Case 1 – Web Application\nWebApplication - Architecture\nWebApplication - Launch Configuration and Auto Scaling Group\nWebApplication - Application LoadBalancer\nWebApplication - CloudWatch Log Group and SNS\nWebApplication - CloudWatch Alarm\nWebApplication - Hosted Zone and ResourceRecords\nCloudFormation General Concepts - Change Sets, CloudFormation IAM Role, Resource Deletion Policies\nChange Sets - Theory\nChange Sets - Handson\nCloudFormation IAM Role - Theory\nCloudFormation IAM Role - HandsOn\nCloudFormation - Resource Deletion (Delete, Retail and Snapshot) - Theory\nCloudFormation - Resource Deletion (Delete, Retail and Snapshot) - HansdsOn\nLaunching CloudFormation using AWS CI-CD Pipeline\nAWS CI-CD Introduction\nDeploying CloudFormation using AWS CI-CD Pipeline without Parameters\nDeploying CloudFormation using AWS CI-CD Pipeline with Parameters/Configuration File\nEnterprise Use Case 2 - AWS Serveless Banking Use Case - API Gateway, AWS Lambda and S3\nArchitecture\nAWS S3 Bucket\nAWS Lambda Execution Role\nAWS Lamba\nAWS API Gateway - REST API, Resources\nAWS API Gateway - REST Method and Deployment\nLambda Invoke Permission\nEnd-to End Demo\n\n\nEnterprise Use Case 3 - AWS Account Baseline VPC Setup\nArchitecture\nVirtual Private Cloud\nPublic and Private Subnets\nInternet Gateway\nRoute Table and Routes\nSecurity Group\nNACL\nAWS CloudFormation – Mappings, Output, Conditions, Rules and Transform\nAWS CloudFormation Mappings\nAWS CloudFormation Outputs\nAWS CloudFormation Conditions\nAWS CloudFormation Rules and Transform\nAWS CloudFormation General Concepts - ChangeSets, IAM Role, Deletion Policy\nAWS CloudFormation Change Sets\nAWS CloudFormation Resource Deletion (Delete, Snapshot, Retain)\nAWS CloudFormation IAM Role\n\n\nFollowing AWS Services will be Coded in Cloudformation in this course using YAML\n- AWS Lambda\n- AWS API Gateway - REST API, Resources and Methods\n- AWS Lambda Execution Role\n- EC2\n- S3\n- VPC\n- Public and Private Subnet\n- IG\n- Route Table\n- NACL\n- Security Group\n- Tags\n- Route 53 Hosted Zone\n- Resource Records\n- Application Load Balancer\n- Auto Scaling Group\n- Launch Configuration\n- CloudWatch Log Group\n- CloudWatch Alarm\n- SNS\n- Deployment using CI-CD Pipeline\n- Lambda InvokePermission\n- API Gateway Deployment\n\n\nAWS CloudFormation Concepts to be discussed in the course\n- AWSTemplateFormatVersion\n- Description\n- Metadata\n- Parameters\n- Rules\n- Mappings\n- Conditions\n- Transform\n- Resources\n- Outputs\n\n\n- ChangeSets\n- CloudFormation IAM Role\n- Deletion Policy",
      "target_audience": [
        "This course is meant for learners who want to learn AWS CloudFormation in a simple yet comprehensive way in the shortest possible time even with no previous coding experience.",
        "Anyone looking to build end to end Enterprise Apps including using Serverless Services"
      ]
    },
    {
      "title": "JavaScript Variables Lifecycles",
      "url": "https://www.udemy.com/course/javascript-variables-lifecycles/",
      "bio": "Understand JavaScript Engine phases and lifecycles of the \"var\", \"let\", \"const\". Scopes, hoisting, closures simplified.",
      "objectives": [
        "Explain difference between global scope, function scope and block scope",
        "Understand how variables declared using \"var\" behave",
        "Explain difference between \"let\" and \"const\"",
        "Practice different variables declarations types",
        "Understand two JavaScript Engine Phases - \"Compilation\" and \"Execution\"",
        "Deeply understand variables lifecycle phases for variables declared using \"var\", \"let\" and \"const\"",
        "Explain lifecycle phases for the undeclared variables",
        "Understand lifecycle of the function",
        "Practice and understand most important variables usage guidelines"
      ],
      "course_content": {
        "Course Setup": [
          "LECTURE - Intro",
          "Let's get connected! Join the Learning Community",
          "LECTURE - Course Navigation.mp4",
          "PRACTICE - Git repository and Coding Environment setup"
        ],
        "Scopes": [
          "LECTURE - Recap of the \"var\"",
          "LECTURE - Scopes - Global, Function and Block"
        ],
        "Var, Let and Const": [
          "LECTURE - let",
          "LECTURE - const",
          "LECTURE - Variables Usage Guidelines",
          "LECTURE - Var, Let or Const?",
          "CHALLENGE 1-1 - let, var and const",
          "✓ CHALLENGE 1-1 - let, var and const - SOLUTION",
          "CHALLENGE 1-2 - let, var and closures",
          "✓ CHALLENGE 1-2 - let, var and closures - SOLUTION"
        ],
        "JavaScript Engine Phases": [
          "LECTURE - JavaScript Engine Phases"
        ],
        "Variable Lifecycle Phases": [
          "LECTURE - Variable Lifecycle Phases",
          "LECTURE - Lifecycle of the \"var\"",
          "LECTURE - Undeclared variable lifecycle",
          "LECTURE - Lifecycle of the \"let\"",
          "LECTURE - Lifecycle of the \"const\"",
          "LECTURE - Function lifecycle - Part 1",
          "LECTURE - Function lifecycle - Part 2",
          "LECTURE - What is finally hoisting?",
          "DEMO - Putting different variables lifecycles together",
          "DEMO - Putting different variables lifecycles together - SOLUTION, Part 1",
          "DEMO - Putting different variables lifecycles together - SOLUTION, Part 2",
          "CHALLENGE 1-3 - Variable Lifecycles",
          "✓ CHALLENGE 1-3 - Variable Lifecycles - SOLUTION"
        ],
        "Summary": [
          "LECTURE - Variables Phases Summary",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge",
        "Fundamentals of CSS",
        "Basic understanding of HTML"
      ],
      "description": "Do you want to understand real difference between different types of variables in JavaScript?\nUnderstand different types of scopes?\nWant easily explain what is hoisting?\nWhat about closures?\nIn this course I will dive deep into the JavaScript and explain you what happens under the hood when you declare any variable or function. You will understand what happens on the \"Compilation\" and \"Execution\" phases in JavaScript Engine.\nI will make explain you what is variable declaration, initialization and assignment that are all-together called Variable Lifecycle Phases.\nWe will also focus in this course on the Variables Usage Guidelines:\nMake Code clear and readable for others\nAlways declare variables before first usage\nAlways use \"use strict\" globally\nDon't expose to the outer scopes local variables\nYou will also get several practical exercises where you will need to apply gain knowledge about different variables, hoisting, scopes and closures.\nAll exercises and code samples are available as Git repository.\nIn this course I will dive deep into the JavaScript and explain you what happens under the hood when you declare any variable or function. You will understand what happens on the \"Compilation\" and \"Execution\" phases in JavaScript Engine.\nI will make explain you what is variable declaration, initialization and assignment that are all-together called Variable Lifecycle Phases.\nWe will also focus in this course on the Variables Usage Guidelines:\nMake Code clear and readable for others\nAlways declare variables before first usage\nAlways use \"use strict\" globally\nDon't expose to the outer scopes local variables\nHope to see you onboard!",
      "target_audience": [
        "JavaScript developers",
        "Front-end developers",
        "Full-stack developers"
      ]
    },
    {
      "title": "Complete HTML, CSS, JavaScript & jQuery Course for Beginners",
      "url": "https://www.udemy.com/course/website-design-with-html-css-and-javascript-for-beginners/",
      "bio": "The Complete Web development Bootcamp and Fundamentals of HTML, CSS, JavaScript and jQuery for Absolute Beginners",
      "objectives": [
        "Become a full stack web developer with the most essential skills in HTML, CSS & JavaScript",
        "Skills that will allow you to apply for jobs like: Web Developer, Software Developer, Front End Developer, JavaScript Developer, and Full Stack Developer",
        "Master Front-End and Back-End web development by building a complete industry based website from scratch",
        "Master how to build modern websites with complete responsive features and mobile adaptability",
        "Use Bootstrap to create good-looking responsive layouts",
        "Write Javascript functions, and understand scope and higher order functions",
        "Use JavaScript variables, conditionals, loops, functions, arrays, and objects"
      ],
      "course_content": {},
      "requirements": [
        "A computer (Windows/Mac/Linux) with internet only",
        "No previous coding experience is needed"
      ],
      "description": "HTML & HTML5:\nStart your web development journey with HTML, the foundation of all web pages. You will learn to create well-structured web pages using HTML tags and elements. As you advance, you'll explore HTML5, the latest version that introduces new elements and attributes, enabling you to create modern, interactive websites. Topics include:\nHTML Basics: Understanding the structure of a webpage, working with headings, paragraphs, links, images, and lists.\nHTML5 Enhancements: Utilizing new tags like <header>, <footer>, <article>, <section>, and multimedia elements like <audio> and <video>.\nForms and Input Types: Creating and styling forms, using new input types, and enhancing user interaction.\nCSS & CSS3:\nOnce you’ve mastered HTML, it’s time to make your web pages look amazing with CSS. Learn how to style your pages with colors, fonts, and layouts, and bring your designs to life with CSS3. This module covers:\nCSS Fundamentals: Introduction to selectors, properties, and values, and how to apply styles to HTML elements.\nCSS Layout Techniques: Mastering the box model, positioning, floating elements, and using Flexbox and Grid for responsive design.\nCSS3 Innovations: Leveraging transitions, animations, gradients, shadows, and media queries to create dynamic and responsive websites.\nJavaScript:\nAdd interactivity to your web pages with JavaScript, the programming language of the web. This section will take you from the basics of JavaScript to creating fully functional web applications. You will learn:\nJavaScript Basics: Variables, data types, operators, control structures, loops, and functions.\nDOM Manipulation: How to interact with and manipulate HTML elements using the Document Object Model (DOM).\nEvents and Event Handling: Responding to user interactions like clicks, mouse movements, and keyboard input.\nJavaScript Functions and Scope: Creating reusable code blocks and understanding local and global scope.\njQuery:\nSimplify your JavaScript coding with jQuery, a powerful library that makes tasks like DOM manipulation, event handling, and animations easier and more efficient. In this section, you'll learn:\njQuery Basics: Introduction to the jQuery library, selectors, and methods.\nDOM Manipulation with jQuery: Simplifying the process of selecting and manipulating HTML elements.\njQuery Events: Streamlining event handling with jQuery’s concise syntax.\nAnimations and Effects: Creating smooth animations and effects with just a few lines of code.\nCourse Benefits:\nComprehensive Learning Path: This course covers everything from the fundamentals to advanced topics in HTML, CSS, JavaScript, and jQuery, ensuring you gain a well-rounded understanding of web development.\nHands-On Experience: With numerous examples, exercises, and projects, you’ll not only learn the theory but also get plenty of practice to reinforce your skills.\nReal-World Applications: The skills you acquire in this course are directly applicable to real-world web development projects, preparing you to build professional, responsive websites.\nCareer Advancement: Whether you’re starting a new career in web development or enhancing your current skill set, this course provides the knowledge and tools to excel in the industry.\nSupportive Learning Environment: With step-by-step guidance and accessible explanations, you’ll never feel lost. This course is designed to make learning web development as smooth and enjoyable as possible.\nWho Should Take This Course?\nAbsolute Beginners: If you have no prior experience in web development, this course will take you from zero to hero in a structured and easy-to-follow way.\nAspiring Web Developers: If you’re considering a career in web development, this course provides the essential foundation needed to succeed.\nFreelancers and Entrepreneurs: If you want to build your own websites or enhance your web development skills, this course offers the tools and knowledge to achieve your goals.\nDesigners Looking to Code: If you have a background in design and want to learn how to bring your designs to life on the web, this course is the perfect fit.\nEnroll now and start your journey to becoming a proficient web developer! With the \"Complete HTML, CSS, JavaScript & jQuery For Web Development for Beginners\" course, you’ll gain the skills and confidence to create beautiful, responsive websites from scratch..\nEmenwa Global instructors are industry experts with years of practical, real-world experience building software at industry leading companies. They are sharing everything they know to teach thousands of students around the world, just like you, the most in-demand technical and non-technical skills (which are commonly overlooked) in the most efficient way so that you can take control of your life and unlock endless exciting new career opportunities in the world of technology, no matter your background or experience.",
      "target_audience": [
        "Developers who want to learn REAL industry skills to get hired as a web developer and earn a higher salary",
        "This course is for anyone who wants to learn about web development, regardless of previous experience",
        "This course if for anyone who wants to start his own business or become a freelancer",
        "It's also great for anyone who does have some experience in a few of the technologies(like HTML and CSS) but not all"
      ]
    },
    {
      "title": "Learning Path: Akka: Building Applications and Microservices",
      "url": "https://www.udemy.com/course/learning-path-akka-building-applications-and-microservices/",
      "bio": "Embrace yourself to learn the art of creating applications and microservices with Akka",
      "objectives": [
        "Explore Akka's version of the actor model",
        "Find out how actors solve concurrency problems",
        "Build stateful actors with Akka Persistence",
        "Create microservices using Akka HTTP",
        "Write performance tests for your microservices"
      ],
      "course_content": {
        "Learning Akka": [
          "The Course Overview",
          "Understanding the Actor Model",
          "Concepts and Terminology",
          "Let's Create Hello World",
          "Actor System and Hierarchical Structure",
          "Actor Components and Lifecycle",
          "Creating an Actor with Props",
          "Talking to an Actor",
          "Supervision and Monitoring",
          "ActorRef Versus Actor Path Versus Actor Selection",
          "Sending Messages via Router",
          "Replacing Actor Behavior via become/unbecome",
          "Replacing Actor Behavior via FSM",
          "Introduction to Akka Persistence",
          "Creating Persistent Actors",
          "Playing with a Persistent Actor",
          "Persistence FSM",
          "Persistence Query",
          "Playing with Remote Actors",
          "Building a Cluster",
          "Adding Load Balancer to a Cluster Node",
          "Creating a Singleton Actor in the Cluster",
          "Cluster Sharding",
          "How to Test an Actor?",
          "Testing a Parent-child Relationship",
          "Testing FSM",
          "Multi Node Testing",
          "Introduction to Akka Streams",
          "Reactive Tweets",
          "Testing Streams",
          "Working with Graphs",
          "Working with Stream IO",
          "Introduction to Akka HTTP",
          "Working with Client-side API",
          "Working with Server-side API",
          "Let's Implement a REST API",
          "Let's Test Our REST API",
          "Balancing Workload Across Nodes",
          "Throttling Messages",
          "Shutdown Patterns",
          "Ordered Termination",
          "Scheduling Periodic Messages"
        ],
        "Building Microservice with AKKA HTTP": [
          "The Course Overview",
          "Responsive",
          "Resilient",
          "Elastic",
          "Message Driven",
          "Putting All Reactive Principles Together",
          "Introduction to Akka",
          "Introduction to Akka HTTP",
          "Getting to Know Core API of Akka HTTP",
          "Creating Controllers for our REST Microservice",
          "Writing Tests for Our Microservice",
          "Making Our Service Comply with Reactive Manifesto Principles",
          "Writing"
        ]
      },
      "requirements": [
        "Knowledge of Java and Scala"
      ],
      "description": "If you’re looking at building distributed, concurrent, fault-tolerant and scalable applications with ease, Akka is the go-to tool for it.\nAkka written in Scala, helps you build distributed systems that provides outstanding performance on local machines as well as over remote networks.\nAkka: Building Applications and Microservices with Akka is Packt’s Video Learning Path that is a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThis Learning Path delivers a clear and practical introduction to the Akka toolkit, explaining the key components you need to know to get up and running with developing applications of your own. You will learn about the actor system, how to create hierarchical structures in Akka, and how to make routes in order to send messages to other actors. We will look at other use cases such as building an actor that can change its behavior during runtime. You will then create stateful actors, work with a cluster system, and work with remote actors.\nThen, this Learning Path will make you understand how to build Reactive microservices using Akka and Akka HTTP, which adhere to the principles underlying the Reactive Manifesto. You will delve deeper into concepts such as Responsive, Resilient, Elastic, and Message-Driven and will see how microservices should be designed to adhere to those principles. By the end of this Path, you’ll be well-versed in creating applications and microservices.\nThe goal of this course is to make you efficient at building applications and microservices with Akka.\nThis Learning Path is authored by some of the best in the field.\nSalma Khater is a senior software engineer with over 5 years of professional experience in development and deploying applications on the JVM using both functional and object-oriented paradigms including Scala and Java. She is specialized in designing and engineering real-time applications and distributed systems based on Akka and using frameworks and libraries like Play2, Spray. io, Thrift, Vertx, Django, Rails, and multiple SQL and NoSQL storage systems, for example  MongoDB, Cassandra, Neo4J, Elasticsearch, and PostgreSQL.\nTomasz Lelek is a Software Engineer and Co-Founder of initLearn. He mostly does programming in Java and Scala. He dedicates his time and energy to being better at everything. He is now delving into Big Data Technologies. He is very passionate about everything associated with software development.",
      "target_audience": [
        "If you’re a Scala developer looking forward to building distributed, concurrent, fault-tolerant and scalable applications with ease, then this Video Learning Path is for you."
      ]
    },
    {
      "title": "HTML Learn It From Scratch Course",
      "url": "https://www.udemy.com/course/html-learn-it-from-scratch-course/",
      "bio": "All that you need to learn about HTML, explained with examples, pure HTML without overwhelming with other technologies!",
      "objectives": [
        "You'll learn what is HTML and how it works",
        "You'll learn how to create HTML documents (web pages)",
        "You'll learn about HTML tags and HTML elements",
        "You'll learn how to customize HTML elements with HTML attributes",
        "You'll learn about text formatting in HTML",
        "You'll learn how to organize data in HTML page with tables and lists",
        "You'll learn how to link different HTML pages",
        "You'll learn how to import images in your web pages",
        "You'll learn how to import content from another website in your web page",
        "You'll learn how to create HTML forms (login, sign up etc.)",
        "You'll learn about various form elements (input fields, dropdown lists, radio buttons, checkboxes, buttons etc.)",
        "You'll learn how to validate your form data",
        "You'll learn how to optimize your website to be better ranked in searching engines (Google, Yahoo)",
        "You'll learn how to create website from scratch step-by-step",
        "We will prepare you for HTML job interview with more than 100 the most common interview questions"
      ],
      "course_content": {
        "Introduction to HTML": [
          "Introduction to HTML"
        ],
        "HTML document structure": [
          "HTML document structure"
        ],
        "HTML Attributes": [
          "HTML Attributes"
        ],
        "HTML Paragraph and text formatting": [
          "HTML Paragraph and text formatting"
        ],
        "HTML Quotation elements": [
          "HTML Quotation elements"
        ],
        "Display types - block and inline elements": [
          "Display types - block and inline elements"
        ],
        "HTML Comments": [
          "HTML Comments"
        ],
        "HTML Headings": [
          "HTML Headings"
        ],
        "HTML Lists": [
          "HTML Lists"
        ],
        "HTML Tables": [
          "HTML Tables"
        ]
      },
      "requirements": [
        "The only prerequisite for attending this course is basic knowledge of any text editor (Notepad, Notepad++ etc.)",
        "You don't need to have any previous knowledge about HTML or website development"
      ],
      "description": "You want to learn how to build websites? If answer is yes and If we would say on that, this is a good starting point, it would be cliché, right? But also, that would be even lie because if you want to learn how to build websites this is not good point to start, this is where you need to start. Every website on the internet have been built completely or on some way with HTML. So, learning of  HTML is the first step that you need to make if you want to learn how to build websites.\nThis course is made for all of you without any previous experience with HTML and for all of you that want to improve your previous, basic knowledge about HTML. We know how tough is to start with learning of something new, so we will not overwhelm you with bunch of other technologies. Something like, you know HTML is cool but do you know what is even more cool than that, to use some JavaScript and jQuery and maybe some Bootstrap! Don’t worry we will not do that. We will do our best in this course to teach you all that you need to learn about HTML. From what is HTML, through how to create HTML documents (web pages), to the how to create complete HTML website from the scratch. Once when you feel comfortable with all that you know about HTML we are sure that you will continue with learning of all that other technologies, but until then we will provide you pure and simple HTML with just basic information about CSS and JavaScript, like why to use it and where to use it in your websites.\nIn this course every lesson contains four parts.\n1. In the first part of lesson we’ll introduce you what we going to learn in that lesson.\n2. In the second part we will catch little bit of theory related with that topic.\n3. In the third part we will implement all that in code, in some real-life example.\n4. And in the fourth and the last part of the lesson, we will recap all that we have learned in that lesson.\nLearning of HTML is super easy and super fun and we have done our best to make this course just like that! So, if you are ready to start, we are here for you and we are honored to be the part of this journey with you. For all your questions we will provide answers as soon as possible and we are continuously working on improvement of our materials.",
      "target_audience": [
        "For absolute beginners that want to learn HTML",
        "For those who want to improve previous basic knowledge about HTML"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/the-react-js-masterclass-2020-hooks-routers-with-projects/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Django & Django REST Framework with React Frontend",
      "url": "https://www.udemy.com/course/django-django-rest-framework-build-rest-api-in-python/",
      "bio": "Learn how to build websites and Backend REST API in Django and integrate that with ReactJS frontend - Updated Django 4.0",
      "objectives": [
        "The students will learn fundamental concepts on Django",
        "The students will learn how to create Blog and Q&A apps in Django",
        "The students will learn that how to deploy Django Apps in Heroku and PythonAnyWhere",
        "The students will learn about fundamental concepts in Django REST Framework (DRF)",
        "The students will learn that how to create Backend REST API in Django",
        "The Students will learn that how to deploy Django REST Framework in Heroku and PythonAnyWhere"
      ],
      "course_content": {
        "Course Introduction & Requirements": [
          "Course Introduction",
          "Course Prerequisites",
          "Software Requirements"
        ],
        "Building Blog Application in Django": [
          "Section Introduction",
          "Django Introduction & Installation",
          "Creating Super User",
          "Creating Apps in Django",
          "Creating View Function",
          "Django Models",
          "Django Model Relationship",
          "Model Registration in Admin Panel",
          "Django Templates",
          "Template Inheritance",
          "Adding CSS and Bootstrap Styles",
          "Creating Dynamic Slug with Signals",
          "Retreiving All Data",
          "Adding Bootstrap Navbar",
          "Getting the Details of Articles",
          "Login System",
          "Registration System",
          "Django Built in Login",
          "Django Logout",
          "Restricting Navbar",
          "Change Password",
          "Add Articles",
          "Update & Delete Buttons",
          "Update Article",
          "Delete Article",
          "Django Pagination",
          "Login Required Decorator",
          "Deploy to Heroku",
          "Migrating to Postgress Database",
          "Django Social Authentication"
        ],
        "Chatbot Integration with Django App": [
          "Section Introduction",
          "Introduction to Chatbot",
          "Introduction to Intent",
          "Follow up Intent",
          "Introduction to System Entities",
          "Introduction to Custom Entities",
          "DialogFlow and Kommunicate Integration",
          "Django Chatbot Integration"
        ],
        "Django 4.0 Updated Blog App": [
          "Update Django Blog App to Django 4.0",
          "Deploy Django 4.0 Project to Heroku"
        ],
        "Building Question and Answer App in Django": [
          "Section Introduction",
          "Creating Project and App",
          "Creating Question and Answer Model",
          "Creating Dynamic Slug",
          "Listing All Questions",
          "Adding Bootstrap Navbar",
          "Question Details",
          "Login and Logout",
          "User Registration",
          "Restricting Navbar from Unauthorized Users",
          "Creating Questions",
          "Listing Answers",
          "Adding Answers",
          "Creating Update & Delete Buttons for Question",
          "Update Question",
          "Delete Questions",
          "Update & Delete Buttons for Answer",
          "Update Answer",
          "Delete Answer",
          "Change Password",
          "Change Account Information",
          "Listing Question & Answer",
          "Login Required",
          "Search Functionality",
          "Deploy Django App in Python AnyWhere"
        ],
        "Django 4.0 Updated Question & Answer App": [
          "Update Question & Answer App to Django 4.0",
          "Deploy Django 4.0 Project to PythonAnyWhere"
        ],
        "Django REST Framework": [
          "Section Introduction",
          "Introduction & Installation",
          "Django Apps & Models",
          "Dynamic Slug",
          "Serialization",
          "Model Serializer",
          "Writing View Function for the API",
          "API View Decorators",
          "Class Based API View",
          "Mixins",
          "Generic Class Based Views",
          "Viewsets & Routers",
          "Generic Viewsets",
          "Model Viewset",
          "Authentication",
          "Django REST Auth",
          "Overriding perform_create Method",
          "Custom Permission",
          "Deploy Django REST Framework in Heroku",
          "Migrating to Postgress Database"
        ],
        "Django 4.0 Updated Django REST Framework": [
          "Update Django REST Framework Project to Django 4.0",
          "Deploy Django 4.0 to Heroku"
        ],
        "REST API Backend for Q&A App": [
          "Section Introduction",
          "Creating Project & Installation",
          "Creating Apps & Models",
          "Creating Slug",
          "Creating Serializer and Viewsets",
          "Registering New User",
          "Creating Authentication",
          "Custom Permissions",
          "JWT Token Authentication",
          "Deploy Django REST Framework to Python AnyWhere"
        ],
        "Django 4.0 Updated Q&A REST API": [
          "Update Django Q&A API to Django 4.0",
          "Deploy Django 4.0 Q&A to PythonAnyWhere"
        ]
      },
      "requirements": [
        "Basic Python & JavaScript Knowledge"
      ],
      "description": "Welcome to Django & Django REST Framework with React Frontend , so first of all what is Django ?\n\n\nWhat is Django ?\nDjango is a Python Web Framework that is used for web development. Django framework uses a set of design principles that produces one of  the most productive web development processes compared to many other web frameworks. also Django provides a set of tightly integrated components.  all of these components are developed by the Django team itself, you can use Django as a Full stack Web Framework, it means that you can build frontend an backend in Django, or you can just build your backend REST API using Django REST Framework and you can integrate that with any frontend frameworks and libraries like reactjs, vuejs or mobile frontend like react native.\n\n\nWhat is RESTFul API's ?\nA RESTful API acts as a translator between two machines communicating over a Web service. If your familiar with the concept of API This is just like an API but it’s working on a RESTful Web service and the API is used by two applications trying to communicate with each other  over a network or Internet. Web developers program REST API that server can receive data  from applications. These applications can be web-apps, Android/iOS apps, etc. RESTful APIs return JSON files which can be interpreted by a variety of devices.\n\n\n\n\nWhat is Django REST Framework ?\nDjango REST framework is a powerful and flexible toolkit for building Web APIs. Some reasons you might want to use REST framework:\nThe Web browsable API is a huge usability win for your developers.\nAuthentication policies including packages for OAuth1a and OAuth2.\nSerialization that supports both ORM and non-ORM data sources.\nCustomizable all the way down – just use regular function-based views if you don’t need the more powerful features.\nExtensive documentation, and great community support.\nUsed and trusted by internationally recognized companies including Mozilla, Red Hat, Heroku, and Eventbrite.\n\n\n\n\nWhat is React ?\nReact is a free and open-source front-end JavaScript library for building user interfaces based on UI components. It is maintained by Meta and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications\n\n\nThis course is divided in to different parts, in the first part we are going to have introduction to the course, in the second part we are going to build a blog application using django, in this section we focus on fundamental concepts of django, also we deploy our django app to Heroku, in the third part we are going to build a Chatbot using Google DialogFlow and after that we integrate our Chatbot with Django Blog Application. in the fourth part we are going to build a question and answer app and we deploy our app to PythonAnyWhere. in the fifth part we are going to dive in to building backend REST API using Django and Django REST Framework, we focus on fundamental concepts of Django REST Framework, also we deploy our Django REST Framework to Heroku. in the sixth part we create our backend REST API for our question and answer app, also we deploy our DRF in the PythonAnyWhere, in the seventh part we are going to integrate our Backend REST API with React Frontend.",
      "target_audience": [
        "Beginner Level"
      ]
    },
    {
      "title": "PHP Microframeworks with Slim",
      "url": "https://www.udemy.com/course/php-microframeworks-with-slim/",
      "bio": "Learn Slim PHP framework and build your first six projects",
      "objectives": [
        "Build six projects using Slim microframework",
        "Slim PHP microframework",
        "Learn what microframeworks are and how to use them",
        "Routing, dependency injection, error handling and middleware"
      ],
      "course_content": {},
      "requirements": [
        "A basic knowledge of PHP would be helpful"
      ],
      "description": "Are you looking to learn Slim framework, increase your knowledge of PHP and understand microframeworks?\nThis course will take you step-by-step through the world of  Slim microframework, from the very basics of creating your first page to advanced topics such as error handling and custom middleware.\nTogether, we'll build six projects using Slim so you get hands-on experience writing PHP and using the framework. We'll create routes, handle form data, return JSON, manage session data, build an authentication system and more.\nFully working example code is provided so that you can check your answers. I cannot wait to see you inside the course!",
      "target_audience": [
        "Developers who want to learn about microframeworks",
        "Developers looking to learn Slim"
      ]
    },
    {
      "title": "Build Real-World REST APIs with MERN Stack (Node & MongoDB)",
      "url": "https://www.udemy.com/course/build-real-world-rest-apis-with-mern-stack-node-mongodb/",
      "bio": "Learn to create scalable REST APIs using Node.js, Express, MongoDB, and deploy full-stack-ready apps",
      "objectives": [
        "Build and deploy RESTful APIs using Node.js, Express, and MongoDB, with real-world features like CRUD, authentication, and file uploads.",
        "Connect backend APIs to any frontend, including React and mobile apps, enabling complete full-stack JavaScript application development.",
        "Implement advanced backend features like pagination, filtering, sorting, search, and file uploads for dynamic, scalable applications.",
        "Secure your applications with JWT auth, bcrypt, Helmet, and validation while following best practices for environment and error management."
      ],
      "course_content": {
        "Why Learn Backend API Development with MERN?": [
          "Welcome & Course Roadmap: Mastering Backend API Development with MERN",
          "The Importance of Backend Development: Powering Modern Web Applications",
          "What You’ll Gain: Skills, Opportunities & Real-World Impact"
        ],
        "Getting Started: RESTful APIs and the MERN Stack Toolkit": [
          "Understanding RESTful APIs: The Backbone of Modern Web Services",
          "Project Overview: What We’ll Build Throughout This Course",
          "Essential Tools & Technologies: Setting Up Your MERN Stack Toolkit"
        ],
        "Setting Up Your Backend: Project Initialization & Structure Best Practices": [
          "Initializing Your Backend Project: Node.js & npm Setup",
          "Creating Your First Express Server: Backend Server Setup",
          "Organizing Your Codebase: Folder Structure & Scalability Best Practices"
        ],
        "Building Your First API: Routes, Middleware & Development Tools": [
          "Why Build Your Own APIs: Control, Flexibility & Real-World Use Cases",
          "Understanding Middleware & Routing: Building Your First API Endpoint",
          "Streamlining Development with Nodemon: Live Reload for Express Server"
        ],
        "Structuring Your Backend: MVC Architecture & Clean Code Practices": [
          "Modularizing Your Backend: Introduction to Scalable Project Structure",
          "Setting Up Folder Structure for Routes & Controllers",
          "Deep Dive: Creating and Connecting Controllers with Routes"
        ],
        "Integrating MongoDB: Connecting Your API to the Cloud Database": [
          "MongoDB Integration: Overview & Why It Matters in Backend Development",
          "Setting Up MongoDB Atlas: Your Cloud Database Environment",
          "Defining Your Data: Creating Your First Mongoose Schema & Model"
        ],
        "Building CRUD APIs: Managing Job Resources with Mongoose": [
          "CRUD Operations Overview: Managing Job Data in Your API",
          "Creating the Job Model + Implementing POST and GET All Jobs APIs",
          "Implementing GET by ID, PUT, and DELETE APIs for Jobs",
          "Data Validation & Error Handling in Mongoose and Express"
        ],
        "Enhancing API Responses: Pagination, Filtering & Sorting": [
          "Implementing Pagination: Limiting Results per Page for Better Performance",
          "Sorting API Responses: Organizing Jobs by Date, Salary, and More",
          "Filtering Job Listings: Build Dynamic Query Parameters for Your API"
        ],
        "Securing Your API: Authentication, Authorization & Access Control": [
          "User Registration & Password Encryption with Bcrypt",
          "Implementing Secure Login Using JSON Web Tokens (JWT)",
          "Protecting Routes: Authentication Middleware in Express",
          "Implementing Role-Based Access Control (RBAC) in Your API"
        ],
        "Robust APIs: Validating Data and Handling Errors Gracefully": [
          "Validating Request Data with Global & Custom Middleware",
          "Understanding HTTP Status Codes: Communicating API Responses Clearly"
        ]
      },
      "requirements": [
        "Basic Knowledge of JavaScript Learners should have a foundational understanding of JavaScript—variables, functions, loops, arrays, and objects.",
        "Familiarity with HTML & CSS While the focus is backend, knowing basic HTML and CSS will help when integrating with frontends like React.",
        "A Computer with Internet Access You'll need a computer (Windows, macOS, or Linux) with a stable internet connection to install tools and access course materials.",
        "A Willingness to Learn and Build No prior backend or database experience is required—this course is beginner-friendly and walks you through each concept step by step."
      ],
      "description": "Backend API Development with MERN Stack – Build Real-World Projects\nAre you ready to master backend development and build your own RESTful APIs from scratch? In this hands-on course, you’ll learn how to create powerful, production-ready APIs using the MERN stack (MongoDB, Express, React, Node.js) — one of the most in-demand tech stacks in today’s job market.\nThis course is perfect for developers, freelancers, and aspiring full-stack engineers who want to understand how backend systems work, build complete APIs that connect to any frontend (React, mobile apps, etc.), implement real-world features like authentication, file uploads, and email notifications, and deploy their backend applications to the cloud using modern tools and best practices.\nWhat You’ll Build\nYou’ll work on real-world projects including a RESTful Job Portal API, a full authentication system using JWT, file upload and email notification features, and clean backend architecture following MVC principles. You will also learn to deploy your backend to Vercel and connect to MongoDB Atlas. As an extra, you’ll document your API using Postman.\nWhat You’ll Learn\nBy the end of this course, you’ll be able to set up Node.js and Express from scratch, structure scalable backend projects, work with MongoDB using Mongoose, and handle CRUD operations with best practices. You'll also learn to secure your API through proper validations, centralized error handling, and implement essential features like authentication, file uploads, and email notifications. Finally, you’ll deploy your projects and connect them to a live database in production.\nWhether you're aiming for a full-time development role, want to offer backend services as a freelancer, or build complete applications for your own startup, this course equips you with the practical skills and confidence to do so.\nEnroll today and take the next step toward becoming a backend development expert.",
      "target_audience": [
        "Frontend developers who want to become full-stack by learning how to build and integrate backend APIs.",
        "Beginners and self-taught coders looking to break into backend development with step-by-step, project-based learning.",
        "Coding bootcamp graduates or computer science students who want hands-on experience building real-world applications.",
        "Freelancers and tech entrepreneurs who want full control over their app’s backend without relying on third-party tools.",
        "Developers building job portals, eCommerce sites, admin panels, or blogs who need a flexible and scalable backend.",
        "Anyone interested in API-first development that works with any frontend, including web and mobile apps.",
        "Motivated learners with basic JavaScript knowledge ready to explore full-stack development using the MERN stack."
      ]
    },
    {
      "title": "The Complete Nodejs MySQL Login System",
      "url": "https://www.udemy.com/course/the-complete-nodejs-mysql-login-system/",
      "bio": "Learn how to work with Nodejs and MySQL together",
      "objectives": [
        "How to create a simple Website with Nodejs",
        "How to connect Nodejs with MySQL",
        "How to Create a Login and Register System"
      ],
      "course_content": {},
      "requirements": [
        "Knowing the basics of HTML, CSS and JavaScript"
      ],
      "description": "In this course we are going to build a complete Login and Register system using Nodejs and MySQL as a database.\nFirst we will learn how to connect Node with MySQL, then we will create a Login and Register system.\nAfter we will learn how users can log in using cookies in the browsers, and finally how we can have private pages that only users logged in can access.\nFinally don’t worry I will cover every single detail so you guys can easily follow along, even if you have little experience, I will add the full code in the end of the course!\nBy taking this course you will learn:\nLearning outcome:\nCreate a Complete Login and Registration System\nCreate private pages only accessible to users logged in\nConnecting Nodejs with MYSQL database\nLearning how to Hash user passwords\nUsing cookies in the browser\nand much more…",
      "target_audience": [
        "Developers who want to increase their knowledge with Nodejs and MySQL"
      ]
    },
    {
      "title": "30 Days of Angular: Build 30 Projects with Angular",
      "url": "https://www.udemy.com/course/30-days-of-angular/",
      "bio": "Master Angular by building interactive web applications",
      "objectives": [
        "Master Core Angular Concepts - Understand and apply essential Angular features including components, directives, services, routing, forms and pipes.",
        "Work with APIs and Async Data - Use HTTPClient and RxJS to manage APIs, asynchronous data, and real-time updates effectively.",
        "Build 30 Practical Projects - Create a wide variety of functional web applications that mirror real development scenarios and user needs.",
        "Develop a Professional Portfolio - Showcase your work with a polished portfolio website featuring your new projects.",
        "Strengthen Your Developer Skillset – Work through hands-on coding challenges that build technical thinking, debug skills, and problem-solving capacity.",
        "Learn Industry-Standard Practices - Structure projects using modular architecture, clean code, and scalable design principles."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript, HTML, and CSS is required—but no need to be an expert.",
        "Familiarity with programming fundamentals like variables, arrays, functions, and loops is expected.",
        "No Angular experience needed. We will start from the beginning and learn step by step."
      ],
      "description": "In today’s era, practical experience - not just theoretical knowledge - is what the industry values most. To succeed as a developer, you need a strong portfolio filled with meaningful projects that showcase your competences and problem-solving ability. That’s exactly what you'll gain from 30 Days of Angular.\nThis is not an average programming course. In this hands-on learning experience, you’ll create 30 fully functional web applications - each designed to teach you core concepts of the Angular framework. From simple apps like a profile card, counter, and calculator to more complex ones like a crypto chart, resume builder, and user management system, you’ll work on projects modeled after practical scenarios to help you gain relevant skills.\nYou’ll work with essential features such as components, directives, services, HTTPClient, pipes, and more, while also diving into advanced techniques with RxJS for managing asynchronous data. Most importantly, you’ll be learning by doing - one of the most effective ways to develop real-world skills that are valued across the industry.\nThroughout the course, you’ll also build fun and interactive games like Guess the Number, Tic Tac Toe, Checkers, and Minesweeper to sharpen your logical thinking and problem-solving skills. These projects not only teach you to use the framework effectively - they also demonstrate that you can deliver functional solutions in realistic scenarios.\nBy the end, you won’t just have theoretical knowledge - you’ll have 30 practical projects that clearly demonstrate your capabilities. Your final project will be a professional portfolio, giving you a polished platform to present your work to potential clients, employers, or collaborators. With this website, you’ll be able to confidently showcase your skills and stand out from other developers.\nWhether you’re just starting out or looking to enhance your skills, this course is designed to prepare you for real-world programming challenges. It’s not just about learning Angular; it’s about proving you can build things that work.\nLet’s build exciting projects, create a portfolio you’re proud of, and learn the skills to stand out.\n\nNote: This course uses Angular 19, but it does not cover every feature of the version.",
      "target_audience": [
        "Aspiring Angular Developers & Students – Whether you're beginning your journey into web development or learning Angular as part of your studies, this course will help you deeply understand the framework through hands-on, practical experience.",
        "Freelancers & Self-Taught Developers – Build a professional portfolio of Angular projects to showcase your skills and attract clients or potential employers.",
        "Developers from other frameworks or Vanilla JavaScript – If you're experienced with frameworks like React or Vue, this course will help you transition to Angular seamlessly.",
        "Everyone who wants to improve in web development — This course reinforces fundamentals like HTML, CSS, and frontend architecture concepts that are valuable across all frameworks."
      ]
    },
    {
      "title": "Python Django Basics To Advanced | Complete Blog Application",
      "url": "https://www.udemy.com/course/python-django-for-beginners-build-3-practical-projects/",
      "bio": "Master Django Development with Practical Projects: Build a To-Do App and Blog Application for Real-World Web Development",
      "objectives": [
        "Learn how exactly Django works",
        "Learn Basic Fundamentals of Django framework",
        "Build Employee Directory & TODO App",
        "Build A Real World Blog Application with Custom Dashboard"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started with Basics": [
          "What Is Django",
          "Why Should You Use Django",
          "Software Installation",
          "Virtual Environment Overview",
          "Creating and Activating Virtual Environment"
        ],
        "Fundamentals of Django": [
          "Project Structure",
          "Django Settings Explained",
          "How Django Works",
          "Urls and HttpResponse",
          "Implement Django Template",
          "Implement Bootstrap",
          "Django Static Files"
        ],
        "Project 01 - Employee Directory": [
          "Django Apps",
          "Django Admin Panel",
          "Create Model",
          "Migrations",
          "Django Media Files",
          "Fetch Data From Database",
          "Show Data On Table",
          "Fetch Employee Detail View",
          "Employee Detail Page",
          "End Of Project 01"
        ],
        "Project 02 - TODO App": [
          "Todo Project Creation",
          "Create Superuser And Home View",
          "Todo Template",
          "Github Setup"
        ],
        "App Creation & CRUD Operations": [
          "Create Todo App And Model",
          "Fetch Tasks",
          "Admin List Display",
          "Add Task With Csrf Token",
          "Add Task Function",
          "Completed Tasks",
          "Mark As Done"
        ],
        "Assignment": [
          "Build a \"Mark As Undone\" feature to this TODO App."
        ],
        "Edit & Delete Task CRUD": [
          "Edit Task Url Pattern",
          "Edit Task Page With Get Request",
          "Edit Task Feature With Post Request",
          "Delete Task",
          "Git Push Todo"
        ],
        "Project 03 - Django Blog Application": [
          "Django Blog Create Project",
          "Create Superuser",
          "Creating Home Url & Implementing Template",
          "Design Homepage And Configure Static Files",
          "Setup Git With Gitignore"
        ],
        "Category Model, Blog Model and Media Files": [
          "Category Model",
          "Media Files Configuration",
          "Blog Model",
          "Prepopulate Slugs",
          "Admin Table List Display",
          "Git Push"
        ]
      },
      "requirements": [
        "Basic Python and HTML"
      ],
      "description": "In this course, you will master the basics of Django, a popular Python web framework used for developing robust, scalable, and secure web applications.\nWe will dive into the key concepts of Django, such as models, views, templates, and URL routing by developing a simple practical Employee Directory website.\nThen, you'll dive into building the To-Do application, which will give you hands-on experience with Django's Object-Relational Mapping (ORM), views, templates, and forms and most importantly it will teach you how to perform the CRUD Operations.\n\n\nLevel Up: The Complete Django Blog\nThroughout the course, you will learn how to create, read, update, and delete blog posts in the application. You will also gain practical experience with Django's built-in authentication and authorization system, which will enable you to manage user accounts and permissions in your application.\nAdditionally, you will learn how to create dynamic pages, custom dashboards, search functionality, and display data using Django's built-in template language.\n\n\nMaster Django Fundamentals: Build a Strong Foundation in Python Web Development with Django!\nBuild a simple Employee Directory Website with Django\nBuild a To-Do app using the Django framework\nLearn how to create, read, update, and delete tasks in the application\nUnderstand the basics of Django's Model-View-Controller (MVC) framework\nGain hands-on experience with Django's Object-Relational Mapping (ORM)\nBuild a Blog application using the Django framework\nLearn to build the CRUD functionalities\nComplete Assignments",
      "target_audience": [
        "Beginner programmers who want to learn how to build web applications using Python and Django",
        "Developers with experience in other programming languages who want to transition to Python and Django",
        "Students who are interested in pursuing a career in web development or software engineering",
        "Anyone who wants to improve their knowledge of Django and build upon their existing Python skills",
        "Individuals who have some experience with Django but want to build more Real World Projects to improve knowledge"
      ]
    },
    {
      "title": "ASP.NET (MVC) 5 CORE: Web Development, jQuery & RESTful API",
      "url": "https://www.udemy.com/course/aspnet-mvc-5-core-web-development-jquery-restful-api/",
      "bio": "ASP.NET (CORE ) MVC 5: Web & App Development In C#, jQuery Plugins & RESTful API, Web Services & Entity Framework",
      "objectives": [
        "Overview Of Web Technologies and ASP NET",
        "Features Of ASP Net MVC Framework",
        "The Advantages Of MVC Based Application",
        "Understand Model, View, Controller, Architecting MVC Application",
        "Learn CRUD Operations",
        "MVC With Frameworks And Plugins",
        "Use Entity Framework, Jquery Plugins, Jquery To Respond To Users and use Automapper",
        "Build Web Application With MVC",
        "Build Forms With Validation",
        "Build Web Services",
        "Understand Cycle Of ASP MVC Request",
        "Implement Security With MVC",
        "Apply Role Based Security",
        "Deploy And Testing ASP NET MVC Web Applications",
        "Perform Unit Testing",
        "Configure Exception Handling"
      ],
      "course_content": {},
      "requirements": [
        "No Prior Knowledge Or Work Is Necessary To Take This Course.",
        "Pen And Paper For Precious Notes"
      ],
      "description": "ASP.NET is revolutionizing the programming industry, this open-source and cross-platform application framework can let you program websites, applications and web services, but if you miss the opportunity to learn how to use this useful framework, other designers and developers will be chosen do complete these jobs.\nWhat if you could change that?\nMy complete ASP.NET course will show you the exact techniques and strategies you need to build dynamic website, applications and web services, know ASP.NET standard controls, validate data, and create master pages. For less than a movie ticket, you will get over 4 hours of video lectures and the freedom to ask me any questions regarding the course as you go through it. :)\nWhat Is In This Course?\nYour Websites, Applications and Web Services Will Never Be The Same.\nExcept if you’re an expert at Adobe Illustrator, apply role based security, understand model, view and controller, CRUD operations, build forms with validation perform unit testing and configure exception handling, you are going to lose many job/career opportunities or creating awesome content. This video editing software will change how you create.\nAs what Thomas C. Gale, an Chrysler automobile designer, says \" \"Good design adds value faster than it adds cost.\"\nThis is offered with a 30 days money back guarantee. You can try it with no financial risk.\nIn This Adobe Illustrator Training, You'll Learn:\nOverview Of Web Technologies and ASP.NET\nFeatures Of ASP.Net MVC Framework\nThe Advantages Of MVC Based Application\nUnderstand Model, View, Controller, Architecting MVC Application\nLearn CRUD Operations\nMVC With Frameworks And Plugins\nUse Entity Framework, Jquery Plugins, Jquery To Respond To Users and use Automapper\nBuild Web Application With MVC\nBuild Forms With Validation\nBuild Web Services\nUnderstand Cycle Of ASP.MVC Request\nImplement Security With MVC\nApply Role Based Security\nDeploy And Testing ASP.NET MVC Web Applications\nPerform Unit Testing\nConfigure Exception Handling\n------------------------------------------------------------------------------------------------------\nIs This For You?\nDo you want to build dynamic website, applications and web services?\nAre you wondering how to program and build robust Websites using the latest technologies?\nDo you think you will feel proud mastering ASP.NET?\nThen this course will definitely help you.\nThis course is essential to all developers, programmers, app builders and anyone looking to build dynamic web sites, web applications and web services.\nI will show you precisely what to do to solve these situations with simple and easy techniques that anyone can apply.\n------------------------------------------------------------------------------------------------------\nWhy To Master ASP.NET?\nLet Me Show You Why To Master ASP.NET:\n1. You will build dynamic website, applications and web services.\n2. You will know ASP.NET standard controls.\n3. You will validate data.\n4. You will create master pages.\nThank you so much for taking the time to check out my course. You can be sure you're going to absolutely love it, and I can't wait to share my knowledge and experience with you inside it!\nWhy wait any longer?\nClick the green \"Buy Now\" button, and take my course 100% risk free now!",
      "target_audience": [
        "All Graphic Designers, Web Designers, UI Developers",
        "Anyone Looking To Master Adobe Illustrator.",
        "This Is Not For People Looking For Lazy Ways To Do Things"
      ]
    },
    {
      "title": "Django + React : Build a Location-Based Real Estate Website",
      "url": "https://www.udemy.com/course/django-react-build-a-location-based-real-estate-website/",
      "bio": "In this course, Learn & practice React, Django, Django Rest Framework, GeoDjango, Material UI, React-Leaflet, PostGIS",
      "objectives": [
        "Connect React and Django",
        "Build an API with Django Rest Framework",
        "Interactive maps with React-Leaflet",
        "Make spatial queries with Geodjango and PostGIS",
        "Deploy a full stack app with Digital Ocean and Namecheap",
        "The basics of React",
        "The basics of Material UI",
        "The basics of React-Leaflet",
        "Backend Authentication with Djoser",
        "Install Nginx and Gunicorn",
        "Setup SSL certificate",
        "Store media files with Digital Ocean Spaces",
        "Django storages / Boto 3"
      ],
      "course_content": {},
      "requirements": [
        "You need to know the basics of web development: HTML, CSS and JavaScript.",
        "You also need to know Python.",
        "The very basics of Django will also help.",
        "Logical thinking."
      ],
      "description": "In this project-based course, we will build a location-based real estate website. It is going to be a full stack web application with Django powering the backend and React Js the frontend.\nWe are going to build the frontend very fast by using Material UI which is a very easy and intuitive React library for building UI components. Throughout the course we will get to use lots of Material UI components that we will easily style.\nWe are then going to build the API with Django Rest Framework (DRF) and we are going to make requests to the API with React.\nLeaflet is a JavaScript library for building interactive maps. We will add a geographic aspect to this project by placing the property listings on a map. We are going to achieve that with React-Leaflet which provides a binding between React and Leaflet.\nWe are also going to make our PostgreSQL database be spatially aware by adding the PostGIS extension to it. So, on top of making regular queries to the database, we are also going to make spatial queries (geometric information such as distance).\nWe are also going to cover user authentication with the Djoser library. We will get end users to add, delete or update property listings from the frontend. We are also going to handle both client-side errors and server-side errors in the forms.\nOnce we are done building the website on our local machines, we will then deploy it with Digital Ocean and Namecheap. During deployment, we are going to:\nPush our project to GitHub\nGet domain names for the backend and frontend\nSetup a mailbox in “private email”\nSetup an SSL certificate\nInstall and setup Nginx and Gunicorn\nStore media file in the cloud with Digital Ocean spaces\nI will be using:\nWindows\nPython 3.9\nDjango 4.0\nReact 17 (Updated for React 18-Works perfectly fine, check out the lectures on the Bonus section for more details)\nMaterial UI 5\nThe following topics will be covered in this course:\nThe basics of React\nReact hooks (useState, useEffect, useContext, useReducer, useRef, useMemo)\nThe basics of Material UI\nStyling with Material UI\nThe basics of React-Leaflet\nReact-Leaflet hooks (exp: useMap)\nBuilding API endpoints with Django Rest Framework\nAuthentication with Djoser\nDjango signals\nMaking spatial queries with Geodjango and PostGIS\nCalculating distances\nDjango deployment\nReact Deployment\nCreating a remote server\nAfter completing this in-depth project-based course, you will know how to connect Django and React. You will also know how take full advantage of a spatially or geographically aware database.",
      "target_audience": [
        "Developers who want take their skills to new levels.",
        "Students who want to build real-world projects",
        "Developers who want to play with maps",
        "Map lovers"
      ]
    },
    {
      "title": "Django Masterclass: Get Started With Django Web Development",
      "url": "https://www.udemy.com/course/django-masterclass-get-started-with-django-web-development/",
      "bio": "Get Started With Django Web Development. Learn How To Create Real Life Web Applications With Django.",
      "objectives": [
        "Understanding with Django Language",
        "Learn How To Create Models, Views & Templates",
        "Learn How To Customize Admin Panel",
        "Learn How To Build Web Applications Using Django",
        "Django Authentication, Filtering Pagination and much more",
        "Working with Django Models and Forms"
      ],
      "course_content": {
        "Introduction": [
          "Create Project",
          "Views",
          "URLs",
          "Templates",
          "Models",
          "Insert Data",
          "Update Data",
          "Delete Data",
          "Update Model"
        ],
        "Django Display Data": [
          "Prepare Template and View",
          "Add Link to Details",
          "Add Master Template",
          "Add Main Index Page",
          "404 Template (page not found)",
          "Add Test View"
        ],
        "Django Admin": [
          "Create User",
          "Include Member",
          "Set Fields to Display",
          "Update Members",
          "Add Members",
          "Delete Members"
        ],
        "Django Syntax": [
          "Variables",
          "Template Tags",
          "If Else",
          "For Loops",
          "Comments",
          "Include"
        ],
        "Query Sets": [
          "QuerySet Introduction",
          "QuerySet Get Data",
          "QuerySet Filter",
          "QuerySet Order By"
        ],
        "Static Files": [
          "Create Static File",
          "Installing White Noise",
          "Collect Static Files",
          "Global Static Files",
          "Add CSS File to the Project"
        ]
      },
      "requirements": [
        "Basic Knowledge of Web Development HTML, CSS, JS and Python"
      ],
      "description": "Welcome to the Django Masterclass: Get Started With Django Web Development! This comprehensive course is designed to equip you with the knowledge and skills necessary to embark on your journey into web development using Django, the powerful and high-level Python web framework.\n\n\nWhether you're a complete beginner or have some experience with web development, this masterclass will guide you through the process of building dynamic and interactive web applications with Django. By the end of the course, you'll have the confidence to create your own web projects from scratch and take your development skills to the next level.\n\n\nHere's what you can expect to learn:\n\n\nCreate Project\nCreate App\nViews\nURLs\nTemplates\nModels\nInsert Data\nUpdate Data\nDelete Data\nUpdate Model\nPrepare Template and View\nAdd Link to Details\nAdd Master Template\nAdd Main Index Page\n404 Template (page not found)\nAdd Test View\nAdmin\nCreate User\nInclude Member\nSet Fields to Display\nUpdate Members\nAdd Members\nDelete Members\nVariables\nTemplate Tags\nIf Else\nFor Loops\nComments\nInclude\nQuerySet Introduction\nQuerySet Get Data\nQuerySet Filter\nQuerySet Order By\n\n\n\n\nThroughout the course, By the end of this masterclass, you'll have the skills and confidence to create dynamic, database-driven web applications using Django, setting you on the path to becoming a proficient web developer. Join us on this exciting journey into the world of Django web development, and let's build amazing web applications together!",
      "target_audience": [
        "Anyone Who Want to Learn Modern Android App Development Using Django Framework"
      ]
    },
    {
      "title": "Full Stack Web Development: Javascript, NodeJS, CSS and HTML",
      "url": "https://www.udemy.com/course/the-complete-2021-guide-to-web-development/",
      "bio": "Full stack web development with HTML CSS JavaScript, NodeJS, MongoDB. Become full stack web developer with full stack JS",
      "objectives": [
        "You will have a basic understanding of HTML",
        "We will improve our knowledge step by step by learning the basics of CSS",
        "We will learn to place pages in the easiest way by talking about all layout models in CSS",
        "Create a beautiful, responsive landing page for any one",
        "It will be much easier to prepare web pages with Grid CSS and Flexbox features",
        "What is conditional statements (if else, switch case, ternary operator), how to use",
        "What is loops (for loops, while loops, continue and break statements), how to use them",
        "How to write Functions, what are the differences between Function Decleration and Function Expression",
        "How to create Arrays, Array methods (push, pop, shift, unshift ...), Array iteration",
        "How to create objects, how to update them, object methods",
        "You will learn to use basic tags which are used commonly",
        "Learn the difference in usage between block level and inline elements in HTML",
        "By learning the use of HTML table, you will be able to create different designs of your own",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Install MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "How to create objects, how to update them, object methods",
        "CSS or Cascading Style Sheets is a style sheet language used to style markup language.",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications",
        "Full stack web development with javascript, html, css, nodejs and mongodb",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "Some web developers will obtain a degree or certification in the field.",
        "Front end web development with javascript, html css",
        "Each aspect of creating websites and applications entails a unique set of skills.",
        "Web development is a broad description of the tasks and technologies that go into creating a website.",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language",
        "JavaScript is the programming language that allows users to interact with the websites that they're visiting making it very important language for web developer",
        "JavaScript is a text-based programming language used for client- and server-side development.",
        "Choosing the best JavaScript framework for your web project depends on what you are looking for.",
        "HTML, or hypertext markup language, is computer code used to create web pages and emails. Web developers, email marketers, web writers, and many others use HTML",
        "HTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.",
        "HTML is not considered a programming language but rather a markup or formatting language.",
        "Bootstrap is a free frontend web development framework for creating responsive websites.",
        "Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "Learning Nodejs is a great way to get into backend web development, or expand your fullstack development practice"
      ],
      "course_content": {},
      "requirements": [
        "No prior HTML or CSS knowledge needed",
        "Willingness and Motivation to successfully complete the training",
        "Computer with access to the internet",
        "Desire to learn javascript",
        "Desire to learn HTML & CSS",
        "Desire to learn full stack web development",
        "Desire to learn react or react js with redux, hooks and context",
        "Desire to build react applications, mern stack project, web applications from zero to hero",
        "Desire to learn react native, react js with redux, hooks and context",
        "Desire to learn web development with react, react native, html, css, bootstrap",
        "Desire to learn bootstrap for web design, website development",
        "Desire to learn grid css",
        "Desire to learn html, css, javascript",
        "Desire to learn mern stack and mern stack project",
        "Desire to learn html css javascript",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device"
      ],
      "description": "Hello there,\nWelcome to Full Stack Web Development: Javascript, NodeJS, CSS and HTML course.\nFull stack web development, web development, javascript, full stack, node js, html css javascript, fullstack web development, complete web development, nodejs\nFull stack web development with HTML CSS JavaScript, NodeJS, MongoDB. Become full stack web developer with full stack JS\nWith this course, you will learn HTML, CSS, JavaScript, NodeJS, and Mongo DB from scratch with hands-on examples.\nThis course will be your gateway to learn web design with HTML5, CSS3 with a step-by-step approach.  We can assure you that only this course will enough for you to learn HTML and CSS from scratch to intermediate.\nHTML stands for HyperText Markup Language, which is the biggest markup language used to display web pages on the Internet. In other words, web pages are composed of HTML, which is used to display text, images, or other resources through a web browser.\nHTML is the basic building block of the web and actually isn’t a technical programming language. It is responsible for the structure of the website.\nJavaScript is the number one programming language for internet applications. The basics of JavaScript are dealt with in detail and students are provided to test what they have learned with code quizzes prepared for each subject.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser. By learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nDuring our course, you will be informed about the basics of JavaScript in detail and how to solve problems.\nHere's how a JavaScript code works, not just how it works. Because in today's JavaScript world, besides writing a code, you need to know how to debug this topic and be able to read every written JavaScript code.\nThe most important feature that distinguishes this course from the others is that it deals with the most basic issues about JavaScript in detail and helps students to put what they have learned in theory into practice.\nIn this course, we will start with HTML, which is the basis of web development and then we will continue to learn CSS and final learn JavaScript.\nJavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications. On top of that, JavaScript is a great language for beginners because it gives them a chance to write code that does something visual, which is exciting and helpful when you're just getting started as a programmer. Dynamic content is the hot topic in web development right now. Dynamic content refers to content that constantly changes and adapts to specific users whenever possible. For example, JavaScript can be used to determine if a website visitor is using a computer or a mobile device before deciding whether or not to render the mobile version of the website. It's these small things behind the scenes that create genuine value in using JavaScript to create dynamic web pages.\nThis course will take you from a beginner to a more experienced level. You will learn HTML5, CSS3, JavaScript, Node.js and Mongo DB step by step with hands-on examples.\nIn this course you will learn;\nTo create static HTML sites,\nTo create a beautiful, responsive landing page for anyone,\nYou will learn to use basic tags which are used commonly,\nYou will be able to prepare lists in different formats,\nThe difference in usage between block-level and inline elements in HTML,\nThe uses of HTML table, and by learning this you will be able to create different designs of your own,\nTo able to create commonly used user login and registration pages by learning the form structure,\nAnd improve your knowledge step by step by learning the basics of CSS\nTo place pages in the easiest way by talking about all layout models in CSS.\nTo prepare web pages with Grid CSS and Flexbox features.\nHow you can operate on variables,\nBoolean logic,\nHow to create a conditional statement,\nHow you can perform transactions with Loops,\nHow a function is created and why it needs arguments,\nHow Arrays and Objects, which are basic data structures, are created,\nHow DOM Manipulation is done,\nYou will have learned and have the opportunity to test what you have learned with the code quizzes in our course.\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nFull stack web development\nJavascript\nnodeJs\nmongodb\nhtml css javascript\nnode.js\ncomplete web development course\nfull stack javascript\nhtml css\nfull stack developer\nNo prior knowledge is needed!\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nWhat are the main uses of JavaScript?\nJavaScript is a text-based programming language used for client- and server-side development. Web developers have used JavaScript since its inception to add simple interactivity to web pages like modals, animated elements, or image slideshows. While that is still one of its primary uses, Javascript has evolved to building complete web applications. SPAs, or single page applications, depend on JavaScript-based frameworks like React, Angular, and Vue to bring a desktop-like application experience to the browser. However, it's important to note that web browsers aren't places that make good use of the programming language. Javascript is also popular for building web services and back-end infrastructure with Node.js. React Native, Xamarin, Ionic, and NativeScript frameworks use JavaScript for developing phone apps as well.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nChoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhat is AJAX and what is it used for?\nAJAX stands for Asynchronous JavaScript and XML. AJAX is a technology that developers use to create better, faster and more interactive web applications. AJAX uses XHTML for content, CSS to style the page, and JavaScript for controlling content dynamically. AJAX allows you to update a web page without reloading the page (this technique is called a “SPA” or Single Page Application), request data for the page after it has loaded, receive data after the page has loaded, and send data to the server in the background. Despite XML being part of the acronym that makes up AJAX, AJAX can send and receive data in any format, including JSON or plain text. While traditional web applications use synchronous methods to send and receive information from a web server, AJAX can use asynchronous API calls in the background without blocking activity in the browser. AJAX is a data-driven rather than a page-driven technology.\nHow can I teach myself Javascript?\nOne of the best ways to learn to write code is through an online course that teaches you how to write JavaScript with an instructor that will explain the code, what versions you should use, and why. Learning to develop a real-world application, with an instructor explaining in a step-by-step fashion, will teach you modern code techniques.\nWhat is the best IDE for Javascript?\nWith all of the different JavaScript IDEs available, the best option depends on how you intend to use it, along with your personal preferences. Webstorm is a popular JavaScript IDE from JetBrains. It provides fast static code analysis, integrated testing, local history, code refactoring, and debugging. While the IDE requires a paid subscription, many developers swear by it because of its compatibility with JavaScript, HTML, and CSS. Those searching for a free option might prefer VS Code. This general-purpose, open-source IDE comes with IntelliSense, Git integration, and debugging features built-in. Many third-party extensions are available to add new language and programming features, making it one of the more flexible choices. Atom is another general-purpose IDE that is popular with JavaScript developers. It is also free, open-source, and has third-party extensions to add.\nWhat is HTML and why is it important?\nHTML stands for hyper-text markup language. Whether on a mobile device or a computer, every website that you browse is designed with HTML. HTML isn’t a “programming language,” but rather a “formatting language.” It tells a browser how to display text, images, and other media elements. When HTML was first developed, it was fairly simple. For example, the text on a page could be bolded, italicized, or underlined, and images could be resized and aligned. Today, HTML is much more complex and dynamic, allowing front-end developers to create any layout or setup they desire.\nWhy is CSS and Javascript important for HTML?\nHTML is a formatting language, not a programming language. Javascript is often necessary to make HTML “dynamic.” While HTML can make it so that text is displayed on the screen, Javascript can update this text or make it move. Javascript is used for both front-end and back-end development, hand-in-hand with HTML, to create complex and attractive web designs. Meanwhile, CSS (Cascading Style Sheets) are used to organize the look and feel of a website and make the website easier to update and manipulate. Today, HTML, CSS, and Javascript are frequently used to develop responsive web designs — designs that react to a user’s environment for a better user experience.\nWhat is an HTML element and why is it important?\nHTML is designed on a modular basis, meaning every part of the web page has a specific “place.” An HTML element is a part of the page. Common HTML elements include “<p>” for a “paragraph” and “<title>” for the “title” of the page. In fact, the entirety of the HTML page is within the “<html>” element. Elements are begun and ended with tags, so a title would be written: “<title>This is the Title to the page.</title>” Organizing code this way makes it easier to reference and control. Each element may also have characteristics. For instance, the “<p>” (paragraph) tag can be aligned in a certain direction. These are the basic building blocks of HTML and what most designers should learn first.\nIs HTML a programming language?\nHTML is not considered a programming language but rather a markup or formatting language. This is an important distinction. Formatting languages merely control how things are displayed on a visual level, whereas programming languages are more dynamic; they use logic gates to determine the behavior of a program. But there is some crossover. “DHTML,” for instance, refers to Dynamic HTML. It is a type of HTML augmented by Javascript to make it easier to adjust on the fly. Because HTML, Javascript, and CSS are so frequently used together, they can often be folded together, which can contribute to some confusion regarding whether HTML is a programming language.\nIs HTML hard to learn?\nHTML is known as one of the easiest languages to learn. It’s also one of the most ubiquitous. Many individuals interested in front-end, back-end, or full-stack development will learn HTML first. While HTML is largely intended for websites as a language, it is also used in many other programs. For example, when you create an email signature, you will usually be using HTML. Emails themselves use a combination of HTML and CSS. An advantage (and an occasional double-edged sword) to HTML is that it is very forgiving. You can get some HTML wrong, and your page will still be displayed, if not exactly how you want it to be.\nWhat jobs use HTML?\nNearly any development or design job will require a cursory understanding of HTML. HTML has also evolved dramatically since it was originally developed; it is far more complex and standardized than before. Because of this, even those who have been experts in HTML during their career may need to undergo an HTML refresher periodically. Most jobs that require HTML will involve web design, web development, or layout and design. For example, someone who manages a content management system such as WordPress may not need to know any other programming languages but should still know HTML basics. Similarly, someone who formats online newsletters or an online magazine in an administrative capacity may not need to be a web designer or web developer but might need to understand the principles of HTML.\nWhat is responsive design?\nResponsive design is a new type of design intended to respond to the platform and environment that a user is on. When HTML was created, most people used PCs. Today, people can browse a website on a PC, phone, tablet, or even a game console. In the past, developers created separate sites for “desktop” and “mobile.” While it worked, it wasn't easy to maintain. Rather than creating separate sites, responsive design generates the site based on the environment it detects. This greatly reduces the amount of development and maintenance for the site. Responsive design is generally achieved with a combination of HTML, CSS, and Javascript.\nWhat is Cascading Style Sheets (CSS)?\nCSS or Cascading Style Sheets is a style sheet language used to style markup language. Markup languages include HTML, XHML, XML, and other XML-based languages. The most common use of CSS is to style HTML web pages. Although HTML doesn't need CSS to function, every web page would look the same without it. With CSS, you can target specific elements in a web page and change the look and arrangement on the page. CSS can make an embedded image small or cover the entire webpage as a background. You can enlarge a heading and apply a specific font to stand out from the rest of the page. Other things you can do with CSS include changing the color of elements, making elements float to one side of the page, and the list goes on. Every web page uses HTML, and every web page that has its unique look uses CSS.\nWhat careers use CSS?\nCSS applies to any career that involves web development. Web designers create the templates, mockups, and styles for a website using HTML and CSS that web developers use to build websites. Front-end web developers use CSS with HTML and JavaScript to build front-end web applications that run in the browser. Fullstack web developers create both the part of a web application that runs in the browser and on the server and need to know CSS to make the front-end look good. Content managers may need to know CSS to apply custom styles to articles they publish through a content management system like WordPress. Other job titles that may require you to know CSS include junior web developer, social media manager, website editor, content editor, website project manager, website support specialist, and webmaster.\nWhat skills should I have before learning CSS?\nBefore learning CSS, you should know the basics of using a computer and how to use a text editor because that is where you will be writing CSS. You should also be familiar with web browsers for browsing the web because it will inform your use of CSS. Since you may end up using specialized tools to write CSS, you should know how to install software on your computer and create and manage files and folders on your computer so you can create a CSS project. Once you have those skills down, the next thing to learn is HTML; after all, CSS is nothing without an HTML page to apply styles. That should be the basics you need to know to get started with CSS.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel our seasoned instructors' expertise.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now Full Stack Web Development: Javascript, NodeJS, CSS and HTML course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "If you want to learn HTML 5 and CSS 3 the first step in web development, completely and easily, you are at the right place.",
        "It's perfect for complete beginners with zero experience.",
        "People who are willing to make a career in the Web Development",
        "Anyone who trying to learn JavaScript but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real apps",
        "Those who want to learn the basics of JavaScript, the world's most popular programming language",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in NodeJS",
        "Developers new to NodeJS",
        "Anyone who wants to learn MongoDB",
        "Professionals who are willing to learn MongoDB",
        "People who want to become web development with html, css, javascript, react, react native",
        "People who want to learn front end web development",
        "People who want to learn backend web development",
        "People who want to learn full stack web development",
        "People who want to learn website development",
        "People who want to become mern stack developer and create real work react projects, mern stack projects, web application",
        "People who want to be full stack web developer using javascript, html, css",
        "People who want to learn web development, building web applications"
      ]
    },
    {
      "title": "The Freelance Stack: Real project with NextJS and Strapi",
      "url": "https://www.udemy.com/course/the-freelance-stack-real-project-with-nextjs13-and-strapi/",
      "bio": "From Design to Deployment: Building Real-World Projects for Freelancers",
      "objectives": [
        "Learn NextJS and Strapi with a real world project",
        "Understand how to deliver websites to people who can't code (aka your clients!)",
        "Create beautiful styling with simple CSS and no additional framework!",
        "Integrate complex datastructures from Strapi API with any kind of Frontend",
        "Combine the easy-to-use advantage of website builders with the full flexibility of coding a website from scratch",
        "Logic behind Server and Client Side Components"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "What is the Freelance Stack?",
          "How to go through this course",
          "Materials to go through the course"
        ],
        "NextJS Crash Course": [
          "Why are we using NextJS?",
          "Setting up a NextJS Project",
          "Simple Routing in NextJS",
          "Layouting in NextJS",
          "Linking from Page to Page",
          "Server and Client Components Overview",
          "Data Fetching",
          "Dynamic Routing",
          "Not Found Pages"
        ],
        "Developer Intro To Figma": [
          "What is Figma and how to use it"
        ],
        "Initial Project Setup NextJS, Strapi and Sass": [
          "NextJS Base Setup",
          "Reminder on styling",
          "Styling Video: Variables and Typography",
          "Overview of our setup (and why we set it up this way)",
          "Styling Video: Sass Setup",
          "Strapi Installation and Overview"
        ],
        "Landing Page & Experience Page with Layout Components": [
          "Header JSX Structure",
          "Footer JSX Structure",
          "Filter to give SVGs any colour you want",
          "Styling: Footer",
          "Styling: Header",
          "Hero Section JSX Structure",
          "Styling: Hero Section",
          "InfoBlocks JSX Structure",
          "Styling: InfoBlocks",
          "Experience Page: Reuse created Hero Section and Infoblocks",
          "Styling: Adjust Header colour per path"
        ],
        "Connecting our Frontend to Strapi": [
          "Creating InfoBlock Content Type on Strapi",
          "Use Single Content Type in Strapi to create InfoBlocks per page",
          "Fetch InfoBlock Data on Strapi",
          "Fetch Data from Strapi and process it",
          "Render InfoBlocks on page",
          "Create Button from InfoBlock Strapi Data on page",
          "Render InfoBlocks on Experience page"
        ],
        "Main Page of the Blog": [
          "Highlight Article JSX Structure",
          "Styling: Highlight Article",
          "Subscribe To Newsletter JSX Structure",
          "Styling: Subscribe to Newsletter Component",
          "Functionality Subscribe to Newsletter Component",
          "Featured Items Component JSX Structure",
          "Styling Featured Items Component"
        ],
        "Implement Blog on frontend through Strapi and NextJS": [
          "Create blog article type on Strapi",
          "Input blog article data on Strapi",
          "Render articles from Strapi data on main page of the blog",
          "Create dynamic routes for all blog articles"
        ],
        "Create fully customisable blog article": [
          "Create dynamic zone in Strapi for customisable blog content",
          "Creating data for highlight article",
          "Article Hero Section JSX",
          "Styling: Article Hero Section",
          "Article Intro Component JSX",
          "Styling: Article Intro Component",
          "Generic Article Component to render different component depending on strapi data",
          "Article Headline JSX",
          "Styling: Article Headline",
          "Text with Image Component JSX",
          "Styling: Text with Image Component",
          "Article Paragraph JSX",
          "Styling: Article Paragraph",
          "Image Component JSX",
          "Styling: Image Component",
          "Other Articles Section on Individual Blog Page",
          "Blog Section Homepage JSX",
          "Styling: Blog Section Homepage",
          "Fix Article Item for Featured Items on Homepage"
        ],
        "Events Section - Create Signup Functionality for offered Surfcamps & Events": [
          "Post Requests in Strapi with the Newsletter Signup",
          "Hook up Frontend to Signup Component in Strapi",
          "Strapi Participant and Event Content Type",
          "Feeding Data into Strapi for all events",
          "Signup Form JSX",
          "Styling: Signup Form",
          "Signup Form Functionality: Sending data to Strapi from main events page",
          "Pregenerate individual event pages",
          "Event Data Processing",
          "Render individual event page based off strapi data",
          "Sign up for specific event",
          "Fetch and filter upcoming events with a string query from Strapi",
          "Adjust featured items component for individual event page",
          "Styling: FeaturedItem Component adjusted for event",
          "Fetch more events on individual event page & THANK YOU"
        ]
      },
      "requirements": [
        "JavaScript (you should be aware of the basics of JavaScript, array methods, data types etc.)",
        "A basic knowledge of React"
      ],
      "description": "Dive into the world of freelancing with hands-on, project-based learning that bridges the gap between theory and real-world application. Whether you're an aspiring freelancer or a seasoned developer eager to expand your toolkit, this course is tailored for you.\n\n\nWhy Choose This Course?\nReal-World Project Focus: Avoid generic examples. Build a fully functional website for a surfcamp with an integrated, customizable blog and sign-up forms.\nComprehensive Stack: Delve deep into the synergy of NextJS13 and Strapi, the tried-and-tested combo for flexible design and seamless developer experience.\nClient-Centric Development: Learn not just to code, but to deliver. Equip yourself to offer clients the ability to directly update website content, rivaling the convenience of platforms like Wordpress/Squarespace/Wix using a Headless CMS\nFrom Design to Deployment: Transform Figma designs into live sites. Harness the power of a seamless design-to-development workflow.\nWhat's Inside?\nNavigate through an engaging and intuitive curriculum with over 12 hours of learning content. Each section is thoughtfully designed to introduce new concepts at a comfortable pace, ensuring you grasp every element without feeling overwhelmed. The course's structure is its core strength, allowing learners to continually build on their knowledge base.\n\n\nYour Journey and Takeaway\nThis isn't just a technical course. It's a roadmap to becoming a great freelance developer. By its end, you won't just have learned new technology, you'll understand how to deliver applications to your clients needs.\nYou'll understand the power of the fusion of a headless CMS with a flexible frontend lets you provide a package where clients can change content at their whim.\nYour offering will stand out, bridging the gap between custom-built platforms and user-friendly CMS like Wordpress.",
      "target_audience": [
        "Anybody with a bit of React experience that wants to go freelance."
      ]
    },
    {
      "title": "Build CRUD app using MERN(MongoDB, Express, React, Node.js)",
      "url": "https://www.udemy.com/course/full-stack-mern/",
      "bio": "Get started with MERN as the most popular Javascript tech-stack for web development",
      "objectives": [
        "Build web application from the ground up",
        "Learn how to build RESTFul API",
        "Learn MERN(MonggoDb, ExpressJs, React, NodeJs)",
        "Build CRUD(Create,Read,Update, and Delete) application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Full-stack overview"
        ],
        "Mongodb": [
          "Setup"
        ],
        "Node.js with Express": [
          "Setup ExpressJs",
          "Route & Middleware 1",
          "Route & Middleware 2",
          "Connect to DB"
        ],
        "React": [
          "Setup React",
          "Retrieve data from backend",
          "Add new data entry",
          "Update and delete"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript and HTML",
        "Basic Linux command"
      ],
      "description": "In this course you will be learning to build a CRUD(Create, Read, Update, and Delete) app using one of the most popular web framework with MERN(MongoDB, ExpressJS, React, and NodeJS) stack. You will learn how to connect Front-end application(React) with Backend application(Express, MongoDB, NodeJS). This course is intended for those who want to get a hands-on coding to build a website from the ground up following current industry standard. At the end of the course, you should have the knowledge to start your own website from scratch.\n\n\nThe course will be structured as follows:\n- Setup database using MongoDB\n- Setup your backend using Express\n- Implement both routes and middleware in Express\n- Connect your backend app and your database using Mongoose\n- Setup your frontend using React\n- Show data from backend to your React application\n- Add a new data entry to the backend from your React application\n- Delete a data entry to the backend from your React application\n- Update a data entry to the backend from your React application\n\n\nThis course focus mainly on the integration of this tech stack and how to does not provide lots of concept. If you want to learn more about each of this libraries, you could find the official documentations for each of the libraries. Here's the technology stack and tools that we will be using in this course:\n- Visual Studio code\n- Postman\n- NodeJS\n- Express\n- React\n- MongoDB\n- Mongoose\n- CORS\n- npm",
      "target_audience": [
        "Tech enthusiast who want to build web application",
        "Professionals who work closely with engineers and want to acquired some coding skills",
        "Professionals who want to start career in software engineering field"
      ]
    },
    {
      "title": "SAP ABAP Objects Complete Hands-On Course For Practitioners",
      "url": "https://www.udemy.com/course/sap-abap-objects-online-training-course-study-for-sap-certification/",
      "bio": "Learn Object-Oriented Programming with ABAP Objects in this Hands-On Complete Course!",
      "objectives": [
        "understand the true benefits of object-oriented design",
        "develop confidently advanced applications based on ABAP Objects",
        "know everything you need to know to get your ABAP development career to the next level",
        "know all relevant object-oriented concepts in ABAP Objects"
      ],
      "course_content": {
        "Introduction and Object-oriented Basics incl. UML": [
          "Introduction to the course",
          "Course Agenda",
          "Object-oriented Introduction",
          "Object-oriented Terminology",
          "Advantages of Object-oriented Programming",
          "UML Tutorial",
          "Introduction and Object-oriented Basics"
        ],
        "ABAP Objects Basics": [
          "ABAP Objects Syntax Overview",
          "Creating Your First ABAP Objects Class",
          "Encapsulation in Object-oriented Programming using Getter and Setter Methods",
          "Types of Parameters: Pass by Reference vs. by Value"
        ],
        "Working with Objects": [
          "Declaration and Instantiation of Objects and the Class Constructor",
          "Working with Objects and Components",
          "Types of Method-Calls and the Null-Object-Reference"
        ],
        "Events and the Class Builder": [
          "Events in Object-oriented Programming",
          "Getting Started with the SAP Class Builder",
          "Class Builder: Attributes, Events and Types",
          "Class Builder: Methods",
          "Class Builder: Generating Method Call Code with the Pattern Wizard"
        ],
        "Inheritance": [
          "Inheritance: Creating a Subclass",
          "Inheritance: Redefinition",
          "Inheritance: Instantiate Subclass",
          "Inheritance: Class Constructor",
          "Inheritance: Abstract Classes and Methods",
          "Inheritance vs. Composition: Pros and Cons"
        ],
        "Polymorphism, Interfaces and Friends": [
          "Introduction to Polymorphism: Casting",
          "Polymorphism: Narrowing and Widening Cast",
          "Polymorphism: Dynamic Binding",
          "Interfaces",
          "Friends"
        ],
        "Exception Handling in ABAP Objects": [
          "Exception Classes: Overview",
          "Exception Classes: Declaration",
          "Exception Classes: Raising and Catching Exceptions Part 1",
          "Exception Classes: Raising and Catching Exceptions Part 2"
        ],
        "Testing, Debugging and Persistent Classes": [
          "Unit Testing with ABAP Unit",
          "Persistent Classes",
          "How To Debug Objects",
          "Conclusion",
          "Bonus Lecture and Coupons for my other courses"
        ]
      },
      "requirements": [
        "You should have basic SAP knowledge and experience in the classic procedural ABAP development",
        "Or you already have joined my course \"ABAP Crash Course for beginners\""
      ],
      "description": "If you want to get your career to the next level and become a confident developer that can deal with complex requirements and develop robust applications this is the right course for you!\nUnlike other courses, we will not waste too much time on theory but dive\n\ndeep into actually programming in SAP. We will be logged onto the\nsystem and create the programs step by step.\nAfter we covered the basics of object-oriented design and programming (incl. UML) we will get started with the ABAP Objects syntax and then expand our knowledge step by step.\nWe will cover all relevant concepts like Inheritence, Polymorphism, Interfaces, Exceptions, object-oriented unit testing, and so much more!\nSo, what are you waiting for? Get your development skills to the next level! I’m looking forward to see you inside!",
      "target_audience": [
        "People who are an existing SAP ABAP developer who want to get to the next level of their career and learn how to develop more robust and better maintainable programs with ABAP Objects",
        "People who want to understand how object-oriented applications are built and work"
      ]
    },
    {
      "title": "Python Flask Web Development: REST API, Postman & JavaScript",
      "url": "https://www.udemy.com/course/python-flask-web-development-rest-api-postman-javascript/",
      "bio": "Python Flask Web Development: Work With JavaScript, SoapUI, JSON, XML, MySQL, CSS REST API & Postman For Web Developer",
      "objectives": [
        "Flask Basics",
        "Creating Our First Web App",
        "Request Variable And Clean URL",
        "Working With Templates",
        "Work With Flask RestAPI",
        "Rest API Concepts And Examples",
        "Unit Testing With Flask Testing",
        "Postman",
        "Functional Testing In Soapui",
        "Build Your First Restful App",
        "API Authentication And Logging In",
        "Working with Database",
        "Running SQLAlchemy Database",
        "Working with WT Forms",
        "Uploading and Returning Files from a Database",
        "Creating a Login Page Using Session",
        "APP Design Process",
        "Steps To Getting A Web Development Job"
      ],
      "course_content": {
        "Flask Basics": [
          "Introduction",
          "Creating Our First Web App",
          "Request Variable And Clean Url",
          "Working With Templates"
        ],
        "Flask RestAPI": [
          "Understanding Rest API",
          "Rest API Concepts And Examples",
          "Unit Testing With Flask Testing",
          "Postman",
          "Functional Testing In Soapui"
        ],
        "Flask Restful API": [
          "Understanding Restful API",
          "Your First Restful App",
          "API Authentication And Logging In"
        ],
        "Working with Database": [
          "Running SQLAlchemy Database",
          "Working with WT Forms",
          "Uploading and Returning Files from a Database",
          "Creating a Login Page Using Session"
        ],
        "APP Design Process": [
          "Start With An Idea",
          "Specifications",
          "Start Building"
        ],
        "Steps TO GETTING A WEB DEVELOPMENT JOB": [
          "The REAL requirements",
          "How to Find Web Development Jobs in Your City",
          "What Companies are REALLY Looking For",
          "Your First Interview",
          "Soft Skills Always Win"
        ]
      },
      "requirements": [
        "No Prior Knowledge Or Work Is Necessary To Take This Course.",
        "Pen And Paper For Precious Notes"
      ],
      "description": "Flask is a micro web framework written in Python and based on the Werkzeug toolkit and Jinja2 template engine. Flask is called a micro framework because it does not require particular tools or libraries, it has no database abstraction layer, form validation, or any other components where pre-existing third-party libraries provide common functions, but if you don’t master Flask, you will miss the opportunity to work with web and mobile applications.\nWhat if you could change that?\nMy complete Flask course will show you the exact techniques and strategies you need to connect web or mobile applications to databases, run Flask applications, develop a Flask application and process data from HTML Forms.\nFor less than a movie ticket, you will get over 4 hours of video lectures and the freedom to ask me any questions regarding the course as you go through it. :)\nWhat Is In This Course?\nYour Flask Skills Will Be Much Easier.\nExcept if you’re an expert at Flask, Create Web Applications, do Unit Testing With Flask Testing Postman, Build Your First Restful App, do API Authentication And Logging In, Work with Database & WT Forms and Create a Login Page Using Session, you are going to lose many job/career opportunities or even miss develop a Flask application.\nAs what Bram Cohen, an American computer programmer, best known as the author of the peer-to-peer (P2P) BitTorrent protocol, says “My favorite language for maintainability is Python. It has simple, clean syntax, object encapsulation, good library support, and optional named parameters.”\nYou can try it with no financial risk.\nIn This Flask Training, You'll Learn:\nFlask Basics\nCreating Our First Web App\nRequest Variable And Clean URL\nWorking With Templates\nFlask RestAPI\nRest API Concepts And Examples\nUnit Testing With Flask Testing\nPostman\nFunctional Testing In Soapui\nBuild Your First Restful App\nAPI Authentication And Logging In\nWorking with Database\nRunning SQLAlchemy Database\nWorking with WT Forms\nUploading and Returning Files from a Database\nCreating a Login Page Using Session\nAPP Design Process\nSteps To Getting A Web Development Job\n------------------------------------------------------------------------------------------------------\nIs This For You?\nDo you want to connect web or mobile applications to databases?\nAre you wondering how to run Flask applications?\nDo you know how to effectively develop a Flask application?\nThen this course will definitely help you.\nThis course is essential to all software developers, Programmers, Project Managers, Computer students and anyone looking to master Flask.\nI will show you precisely what to do to solve these situations with simple and easy techniques that anyone can apply.\n------------------------------------------------------------------------------------------------------\nWhy To Master Flask?\nLet Me Show You Why To Master Flask:\n1. You will connect web or mobile applications to databases.\n2. You will run Flask applications.\n3. You will develop a Flask application.\n4. You will process data from HTML Forms.\nThank you so much for taking the time to check out my course. You can be sure you're going to absolutely love it, and I can't wait to share my knowledge and experience with you inside it!\nWhy wait any longer?\nClick the green \"Buy Now\" button, and take my course 100% risk free now!",
      "target_audience": [
        "All Software Developers, Programmers, Project Managers, Computer Students",
        "Anyone Looking To Master Flask.",
        "This Is Not For People Looking For Lazy Ways To Pass The Exam"
      ]
    },
    {
      "title": "Build Responsive Websites with Modern HTML & CSS with Sass",
      "url": "https://www.udemy.com/course/responsive-websites-modern-html-css-with-sass/",
      "bio": "Learn HTML5, CSS3 and web design by building real world websites with flexbox, grid and sass",
      "objectives": [
        "You will become a modern and confident HTML and CSS developer, no prior knowledge is needed!",
        "You will learn CSS core concepts such as the box model, positioning schemes, CSS flex, grid, and many more.",
        "How to plan a website from sketch",
        "You will able to build real world website",
        "How to make websites work on every possible mobile device (responsive design)",
        "Learn how to work with responsive images",
        "Downloadable source code"
      ],
      "course_content": {
        "Introduction": [
          "01. Introduction"
        ],
        "Project Overview": [
          "HTML & CSS Project Overview",
          "SASS Project Overview",
          "Portfolio Project Overview"
        ],
        "02. Basic Preparation": [
          "Setup Web Development Environment"
        ],
        "03. HTML Essential Training": [
          "HTML Introductions",
          "HTML Elements",
          "HTML Attributes",
          "HTML Headings",
          "HTML Paragraphs",
          "HTML Styles",
          "HTML Text Formatting",
          "HTML Quotation",
          "HTML Comments",
          "HTML Colors",
          "HTML Styles - CSS",
          "HTML Links",
          "HTML Images",
          "HTML Favicon",
          "HTML Page Title",
          "HTML Tables",
          "HTML Lists",
          "HTML Block and Inline Elements",
          "HTML Div Element",
          "HTML class Attribute",
          "HTML id Attribute",
          "HTML Iframes",
          "HTML Forms",
          "HTML Media",
          "HTML JavaScript implementation",
          "HTML File Paths",
          "HTML Head Element",
          "HTML Layout Elements",
          "HTML Responsive Web Design",
          "HTML Mistakes to Avoid",
          "What's Next?"
        ],
        "04. CSS3 Essential Training": [
          "01. CSS Introduction",
          "CSS Syntax",
          "03. CSS Selectors",
          "04. How To Add CSS",
          "05. CSS Comments",
          "06. CSS Color & Backgrounds",
          "07. CSS Borders",
          "08. CSS Margins & Padding",
          "09. CSS Height and Width",
          "10. CSS Text",
          "11. CSS Fonts",
          "12. CSS Links",
          "13. CSS Lists",
          "14. CSS Tables",
          "15. CSS position Property",
          "16. CSS z-index Property",
          "17. CSS Overflow",
          "18. CSS float",
          "19. CSS Pseudo Class and Elements",
          "20. CSS Opacity",
          "21. CSS Navigation Bar",
          "22. CSS Form",
          "23. Multiple Backgrounds",
          "24. CSS Gradients",
          "25. CSS Shadow Effects",
          "26. CSS Text Effects",
          "27. CSS Transforms And Transitions",
          "28. CSS Animation",
          "29. CSS Box Sizing Property",
          "30. CSS Media Queries",
          "31. CSS Flex Container",
          "32. CSS Grid",
          "33. CSS Variables"
        ],
        "05. Extra Tips and Tricks": [
          "01. Solving color problems",
          "VS Code Keyboard Shortcuts",
          "02. Font Awesome",
          "03. Extra Resources",
          "04. Chrome Developer Tools",
          "05. VS Code Shortcuts",
          "How to Center A Div",
          "Useful CSS websites",
          "nth Child Selector in CSS"
        ],
        "06. Creating A Project from Scratch": [
          "01. Collecting resources for the project",
          "02. Creating Top Header area",
          "03. Creating Header Area",
          "04. Creating Banner Area",
          "05. Creating Service Area",
          "06. Creating Contact Area Section",
          "07. Creating Footer Area",
          "08. Adding Mobile menu for Responsive Website",
          "09. Creating our website Mobile Friendly Responsive",
          "10. Making the website live"
        ],
        "07. SCSS Tutorial": [
          "01. SASS Introduction",
          "02. SASS Basics",
          "03. Creating a section with SASS",
          "04. Managing SASS Files",
          "05. SASS mixin",
          "06. SASS Extend & Oparetor",
          "07. SASS Function"
        ],
        "08. Creating A SASS Project": [
          "01. Collecting resources for the project",
          "02. Creating Top Header Area",
          "03. Creating Header Area",
          "04. Creating Hero Area",
          "05. Creating Checkout Section",
          "06. Creating About Us Area",
          "07. Creating Why Area",
          "08. Creating Living Area",
          "09. Creating Contact Area",
          "10. Creating Footer Area",
          "11. Responsive Design"
        ],
        "Portfolio Project": [
          "01. Setup Work Folder",
          "02. Header Area",
          "03. Hero Area",
          "04. Service Area",
          "05. Portfolio Area",
          "06. Testimonial Area",
          "07. Contact Area",
          "08. Footer Area",
          "09 Responsive Design"
        ]
      },
      "requirements": [
        "A code editor and a browser",
        "You don't need any prior experience in HTML and CSS"
      ],
      "description": "This is a perfect course for beginners, who wants to learn web design with modern HTML5, CSS3, flexbox, CSS grid as well as SASS. This course includes basic to real-world projects. So, you will be able to create any website with responsive real-world websites. This website will look great on phones, tablets, laptops, and desktops.\nYou can create a website independently without CSS frameworks like bootstrap and tailwind. any website with this skill. You don't need a computer science degree or expensive software. In order to begin this course, you do not need any prior experience with computers. However, you should have basic computer operation experience.\nWhy should you learn HTML and CSS first?\nBuilding a website is fun and creative work. No matter what website it is, every website’s structure builds HTML and styles with CSS anyways. HTML and CSS is the entry point for web development. I will not only teach you HTML and CSS also I will teach you how to combine your skill and create a website.\n\n\nThis course will cover\nHTML Fundamentals\nCSS Fundamentals\nCSS Flexbox\nCSS Grid\nResponsive design with media queries\nAnimations with Keyframes & Transitions\nSass project\nIf you go through with me, I hope you will have an excellent experience, how things work. I to code a website from scratch. You will be able to create a full and fresh hand-coded website.",
      "target_audience": [
        "Complete beginners who want to learn how to build a professional, beautiful and responsive website",
        "If you know HTML and CSS a bit but do not know how to build real-world projects, this course is perfect for you."
      ]
    },
    {
      "title": "Leaflet From Scratch With A GeoDjango Project",
      "url": "https://www.udemy.com/course/leaflet-from-scratch-with-a-geodjango-project/",
      "bio": "Master Leaflet (JavaScript web mapping library), GeoDjango, Django REST, PostGIS, and build web mapping applications",
      "objectives": [
        "SEE DESCRIPTION FOR DISCOUNT CODE",
        "All the Key Concepts of Leaflet",
        "Vector Layers in Leaflet including points, polylines, polygons, GeoJSON layers, markers, scalable vector graphics",
        "Styling Vector layers including basic styling, event based styling and others",
        "Raster layers, WMS and WFS layers",
        "Managing layers in Leaflet including GeoJSON",
        "Map projections and Coordinate Reference Systems",
        "Map controls and interactions",
        "Custom Leaflet plugin development",
        "Full stack web-GIS development with Leaflet, Django, GeoDjango, Django REST Framework, and PostGIS",
        "Learn and Build a Complete Web-GIS Project with Leaflet, Django, GeoDjango, Django REST Framework, and PostGIS",
        "And much much more"
      ],
      "course_content": {
        "Getting started": [
          "Setting up a work environment",
          "First Leaflet Map",
          "Debugging techniques"
        ],
        "Key concepts in Leaflet": [
          "Central Leaflet Map Class - Overview",
          "Map controls",
          "Raster layers",
          "Vector layers"
        ],
        "Leaflet Map Object": [
          "Leaflet Map Class Options",
          "Leaflet Map Class Events - Geolocation API",
          "Leaflet Map Class Methods",
          "Leaflet Map Class Properties"
        ],
        "Vector layers": [
          "Geographical location - longitude and latitude",
          "Custom marker icon - Part 1",
          "Custom marker icon - Part 2",
          "Drawing polylines dynamically - Part 1",
          "Drawing polylines dynamically - Part 2",
          "Polyline options",
          "Drawing polygons dynamically - Part 1 (A Leaflet plugin development)",
          "Drawing polygons dynamically Part 2 (A Leaflet plugin development)",
          "Drawing polygons dynamically - Part 3 (A Leaflet plugin development)",
          "Rectangle overlays",
          "Circle overlays",
          "SVG - Scalable Vector Graphics (Part 1)",
          "SVG - Scalable Vector Graphics (Part 2)"
        ],
        "Grouping Layers in Leaflet and GeoJSON": [
          "LayerGroup - Part 1",
          "LayerGroup - Part 2",
          "FeatureGroup",
          "GeoJSON - Part 1",
          "GeoJSON - Part 2",
          "GeoJSON - Part 3"
        ],
        "Styling Vector Layers": [
          "Basic styling of point features",
          "Event based styling",
          "Styling point features using a pointToLayer function",
          "Styling lines",
          "Styling polygons - Part 1",
          "Styling polygons - Part 2",
          "Layer order - Part 1",
          "Layer order - Part 2"
        ],
        "Raster Layers, WMS Layer and WFS Layer": [
          "Video Overlay",
          "WMS Layer - Part 1",
          "WMS Layer - Part 2",
          "WFS Layer - Part 1",
          "WFS Layer - Part 2"
        ],
        "Map Projections and Coordinate Reference System (CRS)": [
          "Map projections and CRS - Introduction",
          "Map Projections and CRS basics",
          "Extending projections and CRS support in Leaflet with Proj4Leaflet - Part 1",
          "Extending projections and CRS support in Leaflet with Proj4Leaflet - Part 2",
          "Map projection methods in Leaflet"
        ],
        "Map controls and Leaflet Plugins": [
          "Leaflet Draw Plugin",
          "Leaflet Cluster Plugin"
        ],
        "Leaflet Miscellaneous": [
          "Leaflet miscellaneous - part 1",
          "Leaflet miscellaneous - part 2"
        ]
      },
      "requirements": [
        "Basics of HTML, CSS and JavaScript"
      ],
      "description": "**DISCOUNT CODE**: Use the current month in uppercase followed by the year.\nExamples: JULY2025, AUGUST2025, SEPTEMBER2025\n\n\nLeaflet is an open source JavaScript front-end library that can be used to build interactive web mapping applications.\nThis course focuses on the latest version of the Leaflet (the course was recorded in 2023), and is the most comprehensive and modern Leaflet course you can find in UDEMY. It starts with very basics and goes all the way to advanced concepts. Once we master all the Leaflet concepts, we build a complete Leaflet project in the last section, which uses Leaflet at the front-end, and GeoDjango, Django REST framework and PostGIS at the back-end. For those who do not have Python programming experience, I provide a crash course on Python that covers the concepts you will need in the project development.\nBy the end of this course, you can build amazing web mapping applications using Leaflet.\n\n\nMore details about what the course covers\nIntroduction to Leaflet library\nSetting up the environment\nSimple map\nIntroduction to key concepts and components of Leaflet\nVector Layers in Leaflet including points, polylines, polygons, GeoJSON layers, markers, scalable vector graphics\nStyling Vector layers including basic styling, event based styling and others\nRaster layers, WMS and WFS layers\nManaging layers in Leaflet including GeoJSON\nProjections and Coordinate Reference Systems including different projections, coordinate transformations, and reprojecting of geospatial data\nMap controls and interactions\nCustom Leaflet plugin development\nA crash course on Python (optional)\nFull stack web-GIS development with Leaflet, Django, GeoDjango, Django REST Framework, and PostGIS\nAnd much more!",
      "target_audience": [
        "People that want to learn web mapping using Leaflet",
        "People interested in developing a web-GIS apps with Leaflet, Django, GeoDjango, Django REST framework, and PostGIS",
        "GIS (Geographic Information Science) professionals and students"
      ]
    },
    {
      "title": "How To Create Professional Websites In Oxygen Builder",
      "url": "https://www.udemy.com/course/how-to-create-professional-websites-without-coding-oxygen-builder/",
      "bio": "Learn how to build any kind of website using Oxygen Builder",
      "objectives": [
        "How to create professional websites using Oxygen website builder",
        "How to create websites for companies",
        "How to create blogs",
        "How to create portfolio websites",
        "How to create responsive websites"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "2.Oxygen builder overview": [
          "2.1What is Oxygen Builder",
          "2.2Don't buy it - try it",
          "2.3Uploading Oxygen to our site",
          "2.4Activating Oxygen"
        ],
        "3.Creating the header": [
          "3.1Add the pages",
          "3.2Add the first template",
          "3.3Oxygen's interface",
          "3.4Global colors and fonts",
          "3.5Start building the header",
          "3.6Add padding and marging to the logo",
          "3.7Taking care of the responsiveness",
          "3.8Add the desktop menu",
          "3.9Make the menu bigger",
          "3.10Set up the responsive menu",
          "3.11Off canvas menu",
          "3.12Menu presets",
          "3.13Inner content",
          "3.14Sticky and overlay header",
          "3.15Tidying up the menu.mp4"
        ],
        "4.Creating the hero section": [
          "4.1Centering the content in a section",
          "4.2Centering the background image",
          "4.3Adjusting the hero content",
          "4.4Add the margin to the content",
          "4.5Using the History pane",
          "4.6.Customizing buttons",
          "4.7Add the slider",
          "4.8Make the slider full width and height"
        ],
        "5.Add the services section": [
          "5.1First add the columns",
          "5.2Create the first icon",
          "5.3Classes and id's",
          "5.4Editing classes and id's",
          "5.5The Icon Box module",
          "5.6Make the services responsive"
        ],
        "6.Add the portfolio gallery": [
          "6.1Create the gallery section",
          "6.2Add the captions",
          "6.3Responsive gallery"
        ],
        "7.Add the About us section": [
          "7.1Create a full width section",
          "7.2Add the video",
          "7.3Adding the text and fixing the responsiveness"
        ],
        "8Create thePricing section": [
          "8.1Add the first pricing box",
          "8.2Add the class",
          "8.3Add the images to pricing boxes",
          "8.4Add the testimonials",
          "8.5Put the testimonials in a slider"
        ],
        "9Create the footer": [
          "9.1Put the footer in the template",
          "9.2Add the copyright info"
        ],
        "10Add the blog page": [
          "10.1Add the blog posts",
          "10.2Create the blog template",
          "10.3Add the header and a footer to our blog posts page",
          "10.4Add the blog posts",
          "10.5Style the blog posts",
          "10.6Add the single post template",
          "10.7Add the post main elements",
          "10.8Add the Post content",
          "10.9Create the author info",
          "10.10Add the social media icons",
          "10.11Add the latest posts",
          "10.12Change the query to adjust the latest posts",
          "10.13Add the categories module",
          "10.14Style the categories",
          "10.15Add the hover transitions",
          "10.16Add the comments"
        ]
      },
      "requirements": [
        "You need to know at least the very basics of Wordpress",
        "It is advisable, but not necessary, to have Wordpress and Oxygen builder installed on your computer"
      ],
      "description": "Have you been trying to learn how to develop websites? Or maybe you are a designer who would like to offer web dev services to your clients?\nYou know, designing is one thing, but turning that design into a real website is another. A more complex one I must say.\nAnd for many, this may look like some sort of witchcraft. When they think of developing websites they get intimidated and just quit.\nLuckily, this really doesn’t have to be the case. Nowadays creating custom, professional websites is easier than ever before.\nSo is this course just about that?\nLet me tell you fist what this course is not:\nIt is definitely not another Wordpress course. If you are a total Wordpress noob, I advise you to first learn the basics and then get back to this course.\nWordpress is going to be an environment in which we’ll be working, but we won’t be focusing on it at all\nYou will learn how to build any kind of website using Oxygen Builder.\nIt is a site builder, which means it allows you to design, develop and control ANY aspect of a website: headers, footers, menus, blogs, sliders… you name it.\nWhat’s distinct about it is that it gives you total control over the development part: it’s really hard to imagine a design that could not be developed with Oxygen.\nAnd the vast majority of the designs can be turned into websites without even touching the code – you can use the tools provided and not write a single line of code.\nSure, if you need something more complex, you can add extra code – Oxygen gives you total freedom.\nAt first it may seem intimidating, but after a few minutes, especially if you are familiar with any design tool, everything will start to make sense. And of course, I am here to guide you so… fear not!\nOnce we’ve installed Oxygen, we will start developing a site and along the way we you will learn various tools and aspects of the plugin:\nWe will\nbuild headers (including sticky headers), footers and menus\nadd sliders, including full width background sliders\nadd galleries, icons, videos and portfolios\nmake everything nicely responsive\nTo finish the course, we will actually grab a ready-made design and recreate it using Oxygen. We will go from the header, through main sections with images, icons and transitions, all the way to an extended footer.\nIf you’ve been looking for a course to teach you how to develop professional, custom websites and that would do it straight to the point, you are in the right place.\nEnroll now and see you inside!",
      "target_audience": [
        "Designers and starting web developers who want to create professional websites without the need to code"
      ]
    },
    {
      "title": "Go full stack Spring: Spring + RESTFUL API + Spring Boot",
      "url": "https://www.udemy.com/course/spring-web-services-spring-boot/",
      "bio": "Understand Spring Framework, RESTFUL web services and Spring Boot course concepts with simplified examples, FREE 6M IDE",
      "objectives": [
        "Develop Web Application using Spring Framework",
        "Understanding Spring bean (XML Configuration)",
        "Inversion of control - Continues (XML Configuration)",
        "Auto wiring (XML Configuration)",
        "Spring Beans and Collection",
        "Spring MVC - Reading Data",
        "Styling and External Resources",
        "Understanding the App Architecture",
        "Styling and External Resources",
        "Database Connectivity using JDBC (XML Configuration)",
        "Aspect Oriented Programming",
        "Spring With Hibernate app",
        "Web Services - Restful API",
        "Understanding Jax rs",
        "Building client",
        "Building restful micro service with Spring boot"
      ],
      "course_content": {
        "Spring framework: Getting started": [
          "Download required software's",
          "Installing required software",
          "Link to setup process for Mac and Linux",
          "First project setup on STS",
          "Meet your Author",
          "Linkedin and Instagram links"
        ],
        "Spring framework: Inversion of control, Dependency injection": [
          "Dependency injection",
          "Understand dependency injection",
          "Connect on LinkedIn, \"It's good!\"",
          "MCQs and Predict the Output",
          "Project files for Spring module"
        ],
        "Spring framework: Autowire": [
          "Autowire introduction",
          "Autowire scenarios",
          "Qualifier annotation",
          "Discussion forum",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Spring framework: Spring Bean": [
          "Spring bean",
          "Constructor injection",
          "About Project files",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Spring framework: IDE setup steps": [
          "Spring project on IntelliJ",
          "Adding SpringMVC support on Eclipse",
          "Simple dynamic web project",
          "Model in webproject",
          "We have started AI related courses",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Spring framework: Spring MVC": [
          "Spring MVC minimal setup",
          "Basic form with Spring MVC",
          "Request param and Model under Spring MVC",
          "ModelAndView and foreach on data",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Spring framework: Spring form elements": [
          "IntelliJ IDEA FREE access for 6 months",
          "Setting up project",
          "Getting started with forms",
          "Input and radio",
          "Radiobuttons and background",
          "Dropdown list",
          "Text area",
          "Checkboxes",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Spring framework: Styling and External Resources": [
          "Adding STS 3 support into Eclipse",
          "Add external resource",
          "Add style sheet",
          "Project files"
        ],
        "Spring framework: Form validations": [
          "Form Validation using HTML",
          "Hibernate validator introduction",
          "Repopulate form data",
          "ModelMap & Simplifying controller",
          "Show error messages",
          "Validation rules",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Spring framework: Database Connectivity using JDBC (XML Configuration)": [
          "Maven Setup for hibernate and MySQL",
          "Alternate eclipse environment",
          "Dynamic web project approach",
          "Installing mysql",
          "SQL workbench",
          "Understanding the Architecture",
          "Methods of Mapping",
          "Setting Up Project",
          "Adding Data Access Object (DAOs)",
          "Defining Beans (XML Configuration)",
          "Reading from Database",
          "Showing Information on webpage",
          "MCQs and Predict the Output",
          "Project files"
        ]
      },
      "requirements": [
        "Core Java",
        "A computer with an Internet connection",
        "Basic knowledge of SQL"
      ],
      "description": "Welcome to the Ultimate Spring Framework + RESTful Web Services + Spring Boot Course!\nThis comprehensive course is designed to cater to beginners as well as professionals who want to master these technologies. We have gone to great lengths to ensure that this course covers almost all aspects of RESTful web services, providing you with in-depth knowledge and practical examples in a variety of contexts, including REST, WS, JAX-RS, document-based, XML, and Java.\nBy enrolling in this course, you will gain a solid understanding of the Spring Framework, learn about its core concepts, and be exposed to simplified examples that will reinforce your learning. Additionally, we will delve into both the basic and advanced concepts of Spring Boot, an indispensable tool for developing Spring applications.\nThis course aims to be one of the most comprehensive resources available on Udemy. We have left no stone unturned in ensuring that every topic related to Spring Framework, including configuration and annotations (both XML and annotation-based), is covered extensively. Whether you prefer XML configuration or want to explore the latest annotation-based approaches, this course has got you covered.\n\n\nGet a FREE 6-month subscription for IntelliJ IDEA Ultimate or another AS WELL!\n\n\nHere's a compact list of the topics covered throughout the course:\n\n\nSection 1: Introduction\nInversion of Control (XML Configuration)\nDependency Injection (XML Configuration)\nSpring Beans (XML Configuration)\nSpring Beans and Collections\nAuto Wiring (XML Configuration)\nSection 2: Annotation-based Configuration\nInversion of Control (Annotations)\nDependency Injection (Annotations)\nUnderstanding Spring Beans (Annotations)\nSpring Configuration Annotations (No XML)\nSection 3: Spring MVC\nSpring Form Elements\nForm Validations\nDatabase Connectivity using JDBC (XML Configuration)\nDatabase Connectivity using JDBC (Annotations)\nException Handling under Spring MVC\nSection 4: Advanced Concepts\nAspect-Oriented Programming (AOP)\nSpring Security\nSpring XML Configurations\nAnnotations\nSpring MVC\nAOP\nHibernate Query Language Basics\nSpring with Hibernate App - Adding Service Layer\nSpring and Hibernate App - with Spring Security\nDatabase Connectivity\nException Handling under Spring MVC\nPurpose of Aspect-Oriented Programming (AOP)\nAOP with XML Configuration\nUnderstanding Proxy Objects\nSection 5: RESTful Web Services\nResource-Based URIs\nStatus Codes\nJAX-RS and Implementations\nGetting Started with Restful API - First API\nRevisiting Backgrounds and Handling Post Requests\nResource-Based URI for CRUD Methods\nCreating a Sample Database\nUnderstanding JAX-RS Filters\nAddressing Concerns with the Spring Framework\nSection 6: Spring Boot\nIntroduction to Maven\nSpring MVC + Restful Web Service Background\nBuilding a Restful Microservice with Spring Boot\nRestful Microservice with Database Connectivity\nCRUD Operations\nUnderstanding spring.jpa.hibernate.ddl-auto\nDeploying a WAR file on Tomcat Web Server\nThis course provides you with the perfect blend of theoretical knowledge and practical coding exercises. We firmly believe that practice is crucial to mastering any programming language or framework, so we encourage you to code along with us and put in the effort to solidify your skills.\nWhat sets this course apart is the quality of our content, which is backed by robust technical material, excellent audio and video production, and the convenience of learning from the comfort of your own home. Our goal is to provide you with an exceptional learning experience that will enhance your career prospects as an IT professional.\nWhy should you learn the Spring Framework, RESTful Web Services, and Spring Boot?\nThe answer is simple. RESTful web services, guided by the architectural style of Representational State Transfer (REST), enable the development of high-performance, scalable, and easily modifiable web services.\nThe Spring Framework serves as a powerful tool to connect these web services and provides declarative transaction management capabilities. Moreover, Spring Boot starters simplify the process of initiating specific functionalities by bundling the required dependencies.\nBy mastering these technologies, you will acquire the skills needed to develop robust components, enhance your applications, and boost your career prospects in the IT industry.\nWhy should you choose this course?\nThe combination of the Spring Framework, RESTful Web Services, and Spring Boot makes this course particularly exciting and relevant. RESTful web services represent the first step toward building excellent microservices. We are committed to helping you master these technologies, drawing on our teaching experience and industry knowledge.\nHaving taught IT to over 142,000 students for more than eight years, we understand the importance of delivering content that is easy to comprehend. Our teaching style involves using simple examples and following a step-by-step approach.\nMoney-Back Guarantee\nTo alleviate any concerns, we offer a 30-day money-back guarantee. If you are not satisfied with the course for any reason, let us know, and we will refund your payment, no questions asked. So, you have nothing to lose!\nYour satisfaction is our priority, and we are confident that you will find value in our course.\nJoin us on this adventure today, and take your knowledge and confidence to new heights.\nDon't hesitate to sign up for the \"Go Full-Stack Spring: Spring + RESTful API + Spring Boot\" course and embark on a transformative learning journey.\nI'll see you on the course!",
      "target_audience": [
        "Individuals interested in Spring Boot",
        "IT professional",
        "IT students"
      ]
    },
    {
      "title": "Build Realtime Twitter and Fiverr with Node.js + Stripe",
      "url": "https://www.udemy.com/course/web-developer-build-fiverr-twitter-and-mvp-with-nodejs/",
      "bio": "Start with MVP then Real-time Twitter and finally Fiverr website",
      "objectives": [
        "Build a Real-time web application",
        "Build a complete Marketplace"
      ],
      "course_content": {
        "Foundation": [
          "Introduction",
          "What is a website",
          "What is Node.js",
          "What is HTTP",
          "What is MongoDB and its operations",
          "Working with HTTP and MongoDB"
        ],
        "Build an MVP - Newsletter web application": [
          "What are we going to build",
          "Setting up",
          "Requiring all the files",
          "Middleware - concept",
          "Middleware and Running our first server",
          "First Route - Home Route",
          "Adding Templating Engine - Handlebars",
          "Adding another middleware, bootstrap and our first web page",
          "Position the form",
          "Create Mailchimp account",
          "Using request to post data and store user's email Part 1",
          "Using request to post data and store user's email Part 2",
          "Final Touch",
          "MVP source code"
        ],
        "Build a Real-time Twitter Application": [
          "What are we going to build",
          "Setting up and run the server",
          "Setup home route and landing.hbs",
          "Setting up layout and partials to organize our codes",
          "Our first Model - User Model",
          "Creating Database - connecting and creating a new user object",
          "Developing Authentication Feature Part 1: Extend User Model",
          "Developing Authentication Feature Part 2: compare password",
          "Developing Authentication Feature Part 3: Setting up Session",
          "Developing Authentication Feature Part 4: Signup Route",
          "Developing Authentication Feature Part 4: Passport and Login Route",
          "Real-time Tweet Part 1: Setting up the layout",
          "Real-time Tweet Part 2: What is socket.io?",
          "Real-time Tweet Part 3: Configure socket.io",
          "Real-time Tweet Part 4: Teach socket.io to learn about passport",
          "Real-time Tweet Part 5: Tweet Model",
          "Real-time Tweet Part 6: Emitting messages",
          "Real-time Tweet Part 7: Receiving messages",
          "Real-time Tweet Part 8: Saving Data into Database",
          "Real-time Tweet Part 9: Render data on Home.hbs",
          "Creating Profile Part 1: User Route",
          "Creating Profile Part 2: User.hbs",
          "Follow and Unfollow Feature Part 1: Create Follow route",
          "Follow and Unfollow Feature Part 2: Ajax Call",
          "Follow and Unfollow Feature Part 3: Fixing Follow bugs",
          "Follow and Unfollow Feature Part 4: Unfollow Feature",
          "Twitter source code"
        ],
        "Build a Marketplace like Fiverr": [
          "What are we building",
          "Mongolab: Create a new database",
          "Clone a project starter",
          "Create a Gig Schema",
          "My gig route and page",
          "Adding a new gig route: GET method",
          "Adding a new gig route: POST method",
          "Create a table list",
          "Render data on Home page",
          "Creating Single gig route and page",
          "Order Summary Page",
          "Payment Route Part 1: GET Route and Handlebars file",
          "Payment Route Part 2: POST Route",
          "Order Schema",
          "Order Page: adding fourth process and Order Route",
          "Order seller list page",
          "One on One Chat Part 1: Setting session for socket.io",
          "One on One Chat Part 2: Sending messages",
          "One on One Chat Part 3: Saving data to the database",
          "One on One Chat Part 4: Render data on page",
          "Promo code API",
          "Real-time search engine Part 1: sync data to Algolia index",
          "Real-time search engine Part 2: Adding real-time search feature on frontend",
          "Real-time search engine Part 3: Adding basic search",
          "Cart Feature Part 1: Creating add to cart ROUTE",
          "Cart Feature Part 2: add cart icons",
          "Cart Feature Part 3: Ajax call for add item to cart",
          "Cart Feature Part 4: Showing items in the cart ROUTE",
          "Cart Feature Part 5: render cart's items on HBS file",
          "Cart Feature Part 6: Remove item from cart API",
          "Cart Feature Part 7: Remove item from cart AJAX",
          "Cart Feature Part 8: Cart payment route",
          "Social authentication Part 1: Facebook Developer",
          "Social authentication Part 2: Passport-facebook configuration",
          "Social authentication Part 2: Passport-facebook frontend",
          "Social authentication Part 3: Google developer",
          "Social authentication Part 4: Passport Google",
          "Update your profile feature",
          "Amazon S3 Upload Part 1: Setting up account",
          "Fiverr source code"
        ]
      },
      "requirements": [
        "You should have the 'never give up' attitude",
        "Understand basic HTML and CSS concepts",
        "Understand basic javascript concepts"
      ],
      "description": "Have you ever wondering on how to build your next marketplace Web application?\n\nThis course will teach you step by step on how to clone an Fiverr website with the latest cutting edge technology and that is Node.js\nYou will use Javascript on both the backend and frontend of the web application.\nLive is too short to depend on someone else, if you are still waiting for that one amazing technical co-founder to help you on building your web app, then I suggest you instead of waiting , its better for you to do it yourself.\nEvery code that will be written by me, will be explained in details. So you do not need to worry about not understanding certain algorithm.\nIf you are ready to embark on this journey on building an marketplace web application, then what are you waiting for? Lets get into it!\n0. Foundations\nYou will learn the fundamentals on how the web works\nYou will learn what sort of technology you will use to build a sophisticated web applications\nYou will learn what is HTTP\n1. MVP website - Newsletter\nYou will learn on how to capture user's email and store it on Mailchimp\nYou will learn the fundamentals of building a web application with Node.js\nYou will learn on how to use an amazing template engine - Handlebars\n2. Real-Time website - Twitter\nYou will learn on how to build an Authentication Features\nYou will on how to use a websocket, so that you could send tweets in real-time\nYou will learn on how to save data to the database\nYou will learn on how to retrieve data from the database\nYou will learn how to do an AJAX call, and update content instantly\n3. Marketplace website - Fiverr\nYou will learn on how to do Social Authentication like Facebook and Google\nYou will learn on how to update your profile\nYou will learn on how to create a basic search feature using Algolia\nYou will learn on how to add a real-time search engine feature using Algolia (Used by companies like Product Hunt, Medium, Twitch, Periscope and Hacker News)\nYou will learn on how to add a payment feature using Stripe\nYou will learn how to create a one on one chat room feature between buyers and sellers\nYou will learn on how to create a cart feature, and using AJAX to update changes instantly (Like removing the cart's item, or updating the cart icon on the navbar)\nYou will learn on how to upload an image to Amazon S3 server both for profile picture and when you add a new GIG\nYou will learn on how to pay single GIG and multiple GIGS",
      "target_audience": [
        "Entrepreneurs who want to launch a website",
        "Anyone who has a dream to build a tech company",
        "Code Ethusiast"
      ]
    },
    {
      "title": "Laravel Vuejs Private (one to one) Chat App",
      "url": "https://www.udemy.com/course/private-one-to-one-chat-app-with-laravel-vuejs-and-pusher/",
      "bio": "An Advanced One to One Chat App with Laravel as backend, Vuejs as frontend & Pusher Channels for making things Real Time",
      "objectives": [
        "How to create Awesome One to one chat app from scratch",
        "How a chat app database is designed",
        "How to think for creating a big and challenging course",
        "How to use Pusher with Laravel",
        "Update : Use Laravel WebSocket package to make realtime system free",
        "Update : Upgrade application to Laravel 5.8"
      ],
      "course_content": {
        "1 Introduction": [
          "Introduction",
          "How to Proceed in this Course"
        ],
        "2 Setting Up Environment": [
          "Install Laravel and Setting it up",
          "Setting Up NPM stuffs",
          "Greatness of Github Repository"
        ],
        "3 Schema Building": [
          "Thinking About Schema | How thing Works",
          "Salute to Session Schema",
          "A message for Messages Schema",
          "Challenging Chat Schema"
        ],
        "4 Factory": [
          "Why we need Factory | How thing Works",
          "Fun with Factory"
        ],
        "5 Model, Controller and Resources": [
          "Why we need Resource | How thing Works",
          "Making of Models",
          "Control the Controllers",
          "Robust Resources"
        ],
        "6 Relationships": [
          "Relate with Relationships"
        ],
        "7 Start with Vuejs": [
          "Why Vuejs Only",
          "Setup Vuejs and Intro to Vuejs Component",
          "Check this Chat Component",
          "Mark new Message Component",
          "Magic of Vue Scroll",
          "Mess with Messages",
          "I want to Block you !",
          "Lets Clear Chat history"
        ],
        "8 Chat Session": [
          "Session - How thing works",
          "Get Friends",
          "Use UserResource",
          "Chat Message for everyone",
          "Create Session on frontend",
          "Show session on frontend",
          "Create session on backend",
          "Get session with SessionResource"
        ],
        "9 Making things real with Pusher": [
          "Start with Pusher with Laravel",
          "Configure Pusher settings"
        ],
        "10 Presence Channel": [
          "Presence Channel - How thing works",
          "Who is online",
          "Who leaved or Joined",
          "Online Green Button"
        ]
      },
      "requirements": [
        "Have at least basic knowledge of Laravel",
        "Have at least basic knowledge of Vuejs",
        "Ready for challanges",
        "Never Quit"
      ],
      "description": "Build an Awesome Chat App Having lots of Unique feature.\nWho is online\nBlock/Unblock,\nClear Chat history\nTyping\nSend timing/Read Timing on Hover over message\nChange Color if message is read\nOffline message received\nNumber of unread messages.\nWhat Will I Learn?\nHow to create chat application\nHow websocket works\nInstalling Laravel\nUsing Git and Github\nSetting Up Vuejs\nHow to Transform any model for your API\nHandling Errors and Exceptions\nAll this with Mysql, Laravel, Pusher, Vuejs and laravel websockets.",
      "target_audience": [
        "Laravel developer who want to enhance his knowledge",
        "Vuejs Developer who want to know how to use it with laravel",
        "Curious people who need to create real time one to one chat app",
        "Learn to know how web socket system works"
      ]
    },
    {
      "title": "Using a Third Party API to Send SMS with PHP (SMS)",
      "url": "https://www.udemy.com/course/php-send-and-receive-mobile-text-messages-sms/",
      "bio": "Learn to send SMS messages with your PHP application",
      "objectives": [
        "Learn to send SMS messages in their PHP Application"
      ],
      "course_content": {
        "Let's get some tools first and set it up.": [
          "Introduction",
          "Download entire project here",
          "Tools",
          "Intro to the API we are using"
        ],
        "Let's start coding": [
          "Folder structure and PHP Library installation",
          "Setup part 1",
          "Setup part 2",
          "Setting up our Index / home page",
          "Sending a message part 1",
          "Sending a message part 2",
          "Verification code setup",
          "Verification code insertion in database",
          "Verifying accounts",
          "The Conclusion"
        ]
      },
      "requirements": [
        "Basic PHP"
      ],
      "description": "The course has been UPDATED in April 9th, 2020. I created all the lectures brand new from scratch.\n\n\nIn this course, you are going to learn to implement an SMS feature to any PHP website or application.\nMost web applications are using SMS to verify user identity these days and these feature has become necessary to any application.\nAs more people get online these days, more hackers and bad people as well, and they are after user identities. Companies have understood how important is to secure their user data and that's why more features are being implemented all the time.\nWe more security questions, more Recaptcha code, email verifications, and no more phone call verifications than ever before. You as a developer should know how to implement this to your applications.\nCome join me in this new adventure and let's get ahead of the game today!",
      "target_audience": [
        "Students that want to learn how to implement a SMS feature to their application should take this course"
      ]
    },
    {
      "title": "Javascript Interview Questions with answers",
      "url": "https://www.udemy.com/course/javascript-interview-questions-and-answers/",
      "bio": "Javascript Interview Questions with answers",
      "objectives": [
        "How to handle tricky & real-world questions asked during JavaScript interviews in IT companies.",
        "How to gracefully answer basic Javascript interview questions around Prototype,Hoisting,IIFE,Closures,Module pattern,Let vs Var,Datatypes, Temporal dead zones.",
        "Javascript Interviewers love to confuse candidates around async and threads. 2 chapters covering async, await, thread,webworker , event loops &callback queues.",
        "Promises are hot in JS interviews. Complete chapter dedicated to promises covering promises,chaining,Microtask,Macrotask,webworker , concurrency, & async/await",
        "No javascript interview is complete with out questions on ES6. A complete chapter is dedicated to ES6 covering classes,arrow functions,prototype,class vs func"
      ],
      "course_content": {
        "Lesson 1:- JavaScript Interview Questions & Answers Introduction.": [
          "JavaScript Interview Questions & Answers Introduction."
        ],
        "Lesson 2:- Basic Questions covering Prototype,Hoisting,IIFE,Closures,Module ,TDZ": [
          "JavaScript basics Interview questions with answers."
        ],
        "Lesson3:-ES6 Questions around classes,arrow functions,ArrowvsNormal function etc": [
          "7 Important JavaScript Questions on ES6 & JavaScript Functions."
        ],
        "Lesson 4:- Questions on Async,Threading,Event Loop,Call back queues,Web API": [
          "Technical Questions on Sync, Async, Threading, Event Loop, Blocking."
        ],
        "Lesson 5:- Questions on Promises,callbacks,Asynch,Await,Micro,Macro,Webworker.": [
          "JavaScript Promises, Chaining, callbacks, Asynch, Await, Micro,Macro, Webworker."
        ],
        "Source Code Files": [
          "Source Code Files"
        ],
        "JavaScript Interview Questions & Answers PDF": [
          "JavaScript Interview Questions & Answers PDF"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge."
      ],
      "description": "If you are looking forward to crack JavaScript interviews with ease , then you are at the right place.\nJavaScript is a very tricky language and JavaScript interviews becomes more tricky.\n\n\nWorking in Javascript and cracking Javascript interviews are two different things.\n\n\nThis course focuses on revising most asked interview questions around JavaScript.  Interview is all about expressing your answers in a precise and proper way. You can have tons of knowledge , you must have done tons of coding but cracking interview is a different ball game.\nThis course is revision course where we have focused on what kind of questions are asked and how to answer them in a elaborate way.\nBelow is the complete course agenda.\nHappy learning , Happy job hunting.\n\n\nJavaScript basics Interview questions with answers.\nQuestion 1 :- Why do we call JavaScript as dynamic language\nQuestion 2 :- how does JavaScript determine data types ?\nQuestion 3 :- What is typeof ?\nQuestion 4 :- How to check data type in JavaScript ?\nQuestion 5 :- What are different datatypes in JavaScript ?\nQuestion 6 :- Explain Undefined Data types ?\nQuestion 7 :- What is Null ?\nQuestion 8 :- Differentiate between Null and Undefined ?\nQuestion 9 :- Explain Hoisting ?\nQuestion 10 :- Are JavaScript initialization hoisted ?\nQuestion 11 :- What are global variables ?\nQuestion 12 :- What are the issues with Global variables ?\nQuestion 13 :- What happens when you declare variable with out VAR ?\nQuestion 14 :- What is Use Strict ?\nQuestion 15 :- How to force developers to use Var keyword ?\nQuestion 16 :- How can we handle Global Variables ?\nQuestion 17 :- How can we avoid Global variables ?\nQuestion 18 :- What are Closures ?\nQuestion 19 :- Why do we need Closures ?\nQuestion 20 :- Explain IIFE ?\nQuestion 21 :- What is the use of IIFE ?\nQuestion 22 :- What is name collision in global scope ?\nQuestion 23 :- IIFE vs Normal Function\nQuestion 24 :- What are design patterns ?\nQuestion 25 :- Which is the most used design pattern\nQuestion 26 :- What is module Pattern and revealing module pattern ?\nQuestion 27 :- How man ways are there to create JavaScript objects ?\nQuestion 28 :- How can we do inheritance in JavaScript ?\nQuestion 29 :- What is prototype in JavaScript ?\nQuestion 30 :-Explain Prototype chaining ?\nQuestion 31 :- What is Let Keyword ?\nQuestion 32 :- Are Let variables hoisted ?\nQuestion 33 :- Explain Temporal Dead Zone ?\nQuestion 34 :- Let vs Var\nQuestion 35 :- String Concatenation and Arithmetic puzzle\n7 Important JavaScript Interview Questions on ES6 & JavaScript Functions.\nQuestion 36 :- What is class in ES6 ?\nQuestion 37 :- So with class Keyword does it imply JavaScript is a OOP language ?\nQuestion 38 :- Differentiate between class and normal function ?\nQuestion 39 :- What is a Arrow function ?\nQuestion 40 :- Why do we use Arrow function ?\nQuestion 41 :- Differentiate between Arrow vs Normal Function ?\nQuestion 42 :- Does Arrow function create its own this ?\nTechnical Questions on Sync, Async, Threading, Event Loop, Blocking and Non-Blocking and Callback Queue.\nQuestion 43. Explain Synchronous execution ?\nQuestion 44. What is a call Stack ?\nQuestion 45. What is a blocking call ?\nQuestion 46. How to avoid blocking calls ?\nQuestion 47. Explain Asynchronous execution ?\nQuestion 48. Synch vs Asynch ?\nQuestion 49. How can we do Asynch calls ?\nQuestion 50. What is a thread ?\nQuestion 51. Explain Multi-threading ?\nQuestion 52. Is JavaScript Multi-threaded ?\nQuestion 53. Then how does Settimeout run ?\nQuestion 54. What is a WebAPI/Browser API ?\nQuestion 55. What is a Event loop and callback queue?\nQuestion 56. Eventloop and Callback code question\nJavaScript Promises, Chaining, callbacks, Asynch, Await, Micro,Macro, Webworker.\n57. What are promises in JavaScript?\n58. How to catch error in promises ?\n59. What are callbacks ?\n60. Explain Promise chaining ?\n61. Three States of Promises ?\n62. Explain Async and Await ?\n63. Why to make a promise synch?\n64. Does Async represent a promise ?\n65. Can we use Async with out Await ?\n66. What are Micro and Macro queues ?\n67. Who executes first Micro or Macro ?\n68. How will the code execute(testing Micro and Macro)?\n69. Can we schedule a MicroTask Manually ?\n70. Are Micro and Macro Task synch or Async ?\n71. Explain Webworker ?\n72. How to create WebWorker ?\n73. What are postmessage and onmessage in webworker ?\n74. Can Webworker update UI ?\n75. WebWorker vs Async Task\n76. WebWorker vs Promises\n77. Asynch vs Threads\n78. Concurrency vs Parallelism",
      "target_audience": [
        "Developers who are looking to crack JavaScript interviews."
      ]
    },
    {
      "title": "NodeJS complete course | Node JS & Express JS for Beginners",
      "url": "https://www.udemy.com/course/the-complete-nodejs-express-with-nodejs-for-beginners/",
      "bio": "NodeJS and React are javascript languages. Node.js is way to get into Full Stack web development. Node JS and Express JS",
      "objectives": [
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter for NodeJS and Express JS",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the key concepts of the Express JS",
        "Express Route parameters with Node",
        "Middleware & Static files in Nodejs",
        "Query Strings in Nodejs",
        "Learning Nodejs is a great way to get into backend web development",
        "Expand your fullstack development practice with NodeJS",
        "Learn with my hands-on Nodejs course on Udemy",
        "You will learn the Node JS concepts and applications of this wildly useful JavaScript runtime.",
        "Nodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal.",
        "NodeJs is a server environment built for fast and easily scalable network applications.",
        "NodeJs is open-source, meaning it’s a free code for all developers. On top of that, it also means that there is a thriving community of Node Js users"
      ],
      "course_content": {
        "Intro to NodeJS and Express JS": [
          "What is NodeJS and Express JS?",
          "What Will We Learn In This NodeJS Course?",
          "FAQ about NodeJS and Express JS"
        ],
        "Let’s Dive Into nodeJs": [
          "Installing Node",
          "Nodejs and Express JS Project Files",
          "V8 Engine in NodeJS",
          "Node Globals in NodeJS",
          "Functions in NodeJS",
          "Module and Require in NodeJS",
          "Module exports patterns in NodeJS",
          "Event Emitter in NodeJS",
          "More about Event Emitters in NodeJS",
          "Reading and Writing Files in NodeJS",
          "Creating and Removing Directories in NodeJS",
          "Quiz Nodejs, express js, Node.js"
        ],
        "Server in NodeJS": [
          "Clients & Servers in NodeJS",
          "Creating Server in NodeJS",
          "Quiz NodeJS, Express JS"
        ],
        "Streams and Buffers in NodeJS": [
          "Streams and Buffers in NodeJS",
          "Readable Stream in NodeJS",
          "Write Stream in NodeJS",
          "Pipe in NodeJS",
          "Serving HTML in NodeJS",
          "Serving JSON data in NodeJS",
          "Routing in NodeJS",
          "Quiz Nodejs, Express JS"
        ],
        "Express": [
          "Node Package Manager in Express JS",
          "Package Json File in Express JS",
          "Installing Nodemon in Express JS",
          "Express",
          "Route Params in Express JS",
          "Template Engines in Express JS",
          "Template Engines 2 in Express JS",
          "Partial Views in Express JS",
          "Static Files in Express JS",
          "Query Strings in Express JS",
          "Post Request in Express JS",
          "Todo App (Part-1) in Express JS",
          "Todo App (Part-2) in Express JS",
          "Todo App (Part-3) in Express JS",
          "Todo App (Part-4) in Express JS"
        ],
        "What We Have Learned in NodeJS complete course | Node JS & Express JS Course": [
          "Recap - NodeJS complete course | Node JS & Express JS for Beginners"
        ],
        "Extra": [
          "NodeJS complete course | Node JS & Express JS for Beginners"
        ]
      },
      "requirements": [
        "Ability to install software on your computer",
        "Basic HTML knowledge",
        "Basic understanding of JavaScript",
        "Desire to learn nodejs",
        "Desire to learn nodejs and express js",
        "Desire to learn node",
        "Desire to learn Node. JS",
        "Desire to learn backend web development with nodejs and express js",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device."
      ],
      "description": "Hello there,\nWelcome to NodeJS complete course | Node JS & Express JS for Beginners course.\nNodeJS and React are javascript languages. Node.js is a great way to get into Full Stack web development. Node JS and Express JS.\nNodejs, node js, Express js, node, react, node.js, the complete node.js, Express, node js for beginners, node js Express, nodejs beginner, nodejs Express, nodejs for beginner\nNode and Express are growing web server technologies. By learning Node with Express, you can improve your skills, get a new job and you can build a powerful, robust backend.\n\nLearning Node.js is a great way to get into backend web development, or expand your full stack development practice. With my course hands-on  Node.js course on Udemy, you can learn the concepts and applications of this wildly useful JavaScript runtime.\n\nThis course is designed to be a comprehensive approach to Node.JS and Express, no prior knowledge or experience is required. At the end of this course, you will get the basics of Express and Node js.\nNodejs is essential to developing real-time applications in JavaScript, and has been instrumental in the development of websites like eBay and PayPal. Node is designed around an event loop, which allows for easy management of asynchronous functions. This makes it a popular environment for modern developers working on chat and gaming apps.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser.\n\nWhat node.js can do?\nNode js can generate the dynamic page content\nNode.js can create, open, read, write, delete, and close files on the server\nnode js can collect form data\nnode.js can add, delete, modify data in your database\nNodeJS\nExpress JS\nNode.JS\nBackend web development with nodejs and express framework\nBackend Web Development with Full stack Web development\nThis course is designed to be a comprehensive approach to nodejs. It is really easy to learn node js. That is being said, no prior knowledge or experience is required. At the end of this course, you will get the basics of node js.\nIn this course, we'll look at how the C++ written V8 Javascript engine works and how NodeJS uses it to expand the abilities of Javascript.\nIn this course;\nYou'll learn how asynchronous code works in node.js and the nodejs event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files. We'll see how that leads to building a web server in Node with hands-on examples.\nThen we will learn how easy to work with React Node when we use Express.\nWe will learn routing, middleware, query string and a lot more in this course.\n\nWith my \"NodeJS complete course | Node JS & Express JS for Beginners\" course, you will learn rapidly growing web server technology, and become an Express and Node developer which is among the highest-paid in the industry.\nWhat is Node.Js and what is it used for?\nNode.Js is a server environment built for fast and easily scalable network applications. It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time. By using JavaScript, node.Js can be put to work by many software developers familiar with JavaScript. Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux). Node.js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast. Examples of applications that use node.Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming.\nWhat are the advantages of Node.Js?\nNode.Js is open-source, meaning it’s a free code for all developers. On top of that, it also means that there is a thriving community of Node.Js users and programmers that all add to the knowledge base. Many are happy to share their flavor of the code with other developers, and collectively, the Node.Js environment continues to be enhanced. Because Node.Js uses JavaScript, there is a large pool of developers that understand and can code in the environment. It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training. Node.Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable.\nWhat does it mean that Node.Js is a runtime system?\nA runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run). Node.Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required. Because Node.Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs. The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time. It’s an efficient system, making it the preferred choice for many software and tech companies.\nWhat is microservices architecture and how can Node.Js be used for it?\nMicroservices architecture is a software development style or method where single-function modules originate. Each has a very well-defined operation and interface and can deploy on its own. In essence, it’s a way of developing modules that you can repurpose from one program or application to another. When you create an application, it’s a collection of modules that have been thoroughly tested and are well-maintained. The modules are typically built around different business-specific capabilities and are then loosely coupled to other modules when deployed as part of a program. You can use Node.Js in microservices architecture as the language of choice for one, some, or all of the microservices (or modules). The beauty of microservices is that you can use the best language for the specific microservice. But where highly scalable, fast programs are needed, Node.Js would be a top contender.\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now\nNodeJS complete course | Node JS & Express JS for Beginners course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in Express with Node",
        "Developers new to Express and Node",
        "Anyone who wants to expand fullstack development practice with NodeJS",
        "Anyone who wants to learn the Node JS concepts and applications of this wildly useful JavaScript runtime",
        "People who want to learn nodejs, express js",
        "People who want to learn backend web development with nodejs, express js",
        "People who want to learn second of full stack web development with nodejs, express"
      ]
    },
    {
      "title": "MEAN Fullstack Trello clone: WebSocket, Socket IO",
      "url": "https://www.udemy.com/course/build-fullstack-trello-clone-websocket-socket-io/",
      "bio": "Learn MEAN Stack, WebSocket, Socket IO, Angular, Typescript, NodeJS, Express, Mongodb and Deployment",
      "objectives": [
        "MEAN fullstack project with Angular, Express, Node, Typescript, Socket io, MongoDB",
        "Write high quality code",
        "Create reusable modules and services",
        "Write perfect architecture and dry code"
      ],
      "course_content": {
        "Preparing tools": [
          "What is this section about?",
          "MEAN Stack. What technologies do we use?",
          "Downloadable resources",
          "Installing Node & Angular",
          "Configuring NodeJS server",
          "Installing Mongodb Database",
          "Do you use a good editor? VsCode is what I recommend"
        ],
        "Authentication": [
          "What is this section about?",
          "Setting up Web Sockets in NodeJS",
          "Creating Mongoose user model",
          "Adding registration in NodeJS",
          "Implementing login in NodeJS",
          "Creating auth middleware in NodeJS",
          "Creating auth module in Angular",
          "Register page in Angular - Markup + Form",
          "Register page in Angular - service + validation",
          "Login page in Angular",
          "Home page in Angular",
          "Auth interceptor in Angular",
          "Auth guard in Angular"
        ],
        "Boards page": [
          "What is this section about?",
          "Gettings boards",
          "Frontend for gettings boards",
          "Inline form",
          "Implementing creating a board",
          "Adding Top bar and logout"
        ],
        "Board page": [
          "Creating board module",
          "Getting a single board",
          "Adding board stream",
          "Creating socket service",
          "Joining and leaving board",
          "Authentication in socket.io",
          "Getting columns",
          "Create column with websockets",
          "Getting columns",
          "Create column form",
          "Creating a basic task",
          "Getting tasks",
          "Create task form"
        ],
        "Board Improvements": [
          "Update board name",
          "Delete board",
          "Delete column",
          "Update column",
          "Unsubscribe in Angular"
        ],
        "Task Modal": [
          "Task module and basic component",
          "Get task and columns",
          "Update task",
          "Delete task"
        ],
        "Deployment": [
          "Mean stack deployment"
        ],
        "What's next?": [
          "Homework",
          "My Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)",
        "Javascript knowledge is required"
      ],
      "description": "In this course we will build a Trello clone API using MEAN Stack: Angular, Typescript, NodeJS, Express, MongoDB and Socket IO . This course is fully focused on fast and deep dive into creation of fullstack application with this tools. We will start from scratch and step by step you will get close to finished real application. You will deeply understand how to structure your application, build reusable and understandable modules and services and split code into smaller chunks of code. We will write code together in efficient way to make it pure and avoid data complexity. We will do real time communication by implementing WebSocket with Socket IO.\nOur code will be written with Typescript on the backend and on the client.\nWe will deploy our application to the real production server at the end of the course.\nFor each lesson you'll get source code of the lesson, so it's easy to see the progress and get a working app on any lesson you want.\nWhat you will learn in this course:\nStructure and configure project\nWrite high quality code with Typescript on real project\nCreate reusable modules, controllers and services\nImplementing authentication both in http and in websockets\nDeeply understand Angular & Express design patterns\nNo prior knowledge except of Javascript is needed (because I will teach you everything from basics) but if you have experience with any of Mean stack  (Angular/Express/Typescript/MongoDB/Socket io) it will be easier for you to go through this course.\nIf you are feeling like you learned web but you still still missing knowledge of how to build your own real application this course is what you need.",
      "target_audience": [
        "This course is for you if you want to develop a real fullstack project from beginning to the end",
        "This course is for everyone who is interested in learning development with Angular, Typescript, Socket IO",
        "This course is for you if you want to improve you knowledge of web development"
      ]
    },
    {
      "title": "Learn Bootstrap 4 The Complete Guide by Building 8 Projects",
      "url": "https://www.udemy.com/course/learn-bootstrap-4-the-most-popular-html5-css3-js-framework/",
      "bio": "Learn Bootstrap 4 CSS Framework by Building 8 Projects & 1 WordPress Theme from Scratch with this 100% practical course!",
      "objectives": [
        "Create Responsive websites in NO TIME thanks to bootstrap",
        "Take any PSD or JPG design and convert it into a Bootstrap Project",
        "Build Websites with the New Bootstrap Version with the new Flexbox Grid!",
        "Connect PHP / MySQL with a Bootstrap Website",
        "Learn almost all the Components and Bootstrap Classes with a Hands On Training Course",
        "Take your existing site into a fully dynamic WordPress site",
        "Convert a Bootstrap site into a WordPress Theme!",
        "Create 8 different & amazing projects!"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of CSS and HTML if you have ever writen a little HTML or CSS you will be fine!",
        "A Text Editor i will be using ATOM & Visual studio Code, Brackets or Sublime Text are free too and available for Windows, Mac and Linux",
        "A Local Server will be needed for the PHP section, i will be using MAMP, for the WordPress section i will show you a great tool called Local",
        "6 Photoshop files are included, but if you don't have photoshop don't worry, i'll provide the images, colors and everything you need to complete the course",
        "A great desire to LEARN with a 8 Real World Projects"
      ],
      "description": "UPDATE AUGUST 2018:\nJust Added more than 100 videos and 7 Projects with the newest Bootstrap Version!\nLearn Bootstrap 4 The Complete Guide by Building 8 Projects\nWelcome to the course!! What makes this course the best about Bootstrap?\nIn this course we will build 8 different projects (Beautiful and well Designed Websites)\nThe projects included in this Bootstrap 4 Course:\nSpa Website\nReal State Website\nMusic Festival Website\nAdmin Panel\nE-commerce Design\nFiverr Clone\nArchitecture Studio Website\nCuisine School Website\nThis Course contains everything you need to know about the new Bootstrap 4 Version + Building a Complete Project from Scratch ( 7 Different Projects included also! & a WordPress Theme )\nThe new version of Bootstrap contains a lot of new classes, helper utilities, a Flexbox powered grid and new components which all will be covered  in this new course.\nWe're building a complete Website (with 6 internal pages) and i'm gonna show you how to integrate  PHP / MySQL with Bootstrap 4.\nAlso we're building the Homepage of 7 Different Projects\nAlso we will take our design and create an amazing WordPress Theme.\nYou will also learn how to extend Bootstrap components with CSS to make them look the way that you need to.\n6 Photoshop files (PSD) are included in this course that are going to be converted intro a Bootstrap 4 Website, so if you're looking for a PSD to Bootstrap course, this is the course that you should take!",
      "target_audience": [
        "If you're a web designer that's trying to create responsive websites this course is for you",
        "Bootstrap is really popular, and the new version is amazing, if you want to add bootstrap to your skills this course is for you",
        "If you learn most by building real world projects this course is for you"
      ]
    },
    {
      "title": "Laravel - Develop a Directory Listing Website From Scratch",
      "url": "https://www.udemy.com/course/laravel-develop-a-directory-listing-website-from-scratch/",
      "bio": "Building an Advanced Directory Listing Website Using Laravel 10, with Comprehensive Step-by-step Instructions",
      "objectives": [
        "Develop a Directory Listing Website From Scratch with Laravel 10",
        "Dynamic Listing Feature",
        "3. Multi Authentication System with Breeze 4.",
        "Dynamic Drag and Drop Menu Builder",
        "Live Chat Feature",
        "User Role Management",
        "User Permission Management",
        "Dynamic Package/Pricing System",
        "Multiple Payment Gateway (PayPal, Stripe, Razorpay) Implementation",
        "Dynamic Listing Categories",
        "Dynamic Listing Amenities",
        "Dynamic Listing Locations",
        "Listing Review System",
        "Order Management Feature",
        "Dynamic Blog System",
        "Page Management Module",
        "Sections Management Module",
        "Dynamic Social Links",
        "Multiple Image Upload System",
        "Dashboard Analytics",
        "Dynamic User Dashboard",
        "Testimonial Module",
        "Admin-User Password Change Option",
        "Dynamic Site Settings Module",
        "Database Clearing Module",
        "Lecture By Lecture Git Source Code"
      ],
      "course_content": {},
      "requirements": [
        "You have to know basic PHP",
        "Laravel fundamental",
        "Basic HTML, CSS, Bootstrap, jQuery",
        "Local Server : XAMPP/WAMP/MAMP/Laragon",
        "Text Editor/IDE: Notepad++ / Sublime Text / Visual Studio Code / PhpStrom"
      ],
      "description": "Welcome to \"Laravel 10 Develop a Directory Listing Website From Scratch\"! Are you ready to dive into the latest advancements in Laravel and embark on a journey to create a powerful directory listing website? This course is your gateway to mastering Laravel 10 while building a real-world project that will elevate your skills as a professional developer in the competitive web development landscape.\nWhy Choose to Learn Laravel 10?\nLaravel 10, the latest iteration of the renowned PHP framework, is a game-changer for web development. Its robust feature set, enhanced performance, and vibrant community make it the ultimate choice for crafting scalable and high-performing web applications. Whether you're a seasoned developer or just starting, Laravel 10 is your key to unlocking web development excellence.\nWhat Will You Achieve in This Course?\nIn Laravel 10 Develop a Directory Listing Website From Scratch, you'll acquire comprehensive skills and knowledge to build a feature-rich directory listing platform. Our cutting-edge curriculum covers a wide range of advanced functionalities, including:\nBuilding a Directory Listing Website From Scratch with Laravel 10\nDynamic Listing Feature\nMulti Authentication System with Breeze\nDynamic Drag and Drop Menu Builder\nLive Chat Feature\nUser Role Management\nUser Permission Management\nDynamic Package/Pricing System\nMultiple Payment Gateway (PayPal, Stripe, Razorpay) Implementation\nDynamic Listing Categories\nDynamic Listing Amenities\nDynamic Listing Locations\nListing Review System\nOrder Management Feature\nDynamic Blog System\nPage Management Module\nSections Management Module\nDynamic Social Links\nMultiple Image Upload System\nDashboard Analytics\nDynamic User Dashboard\nTestimonial Module\nAdmin-User Password Change Option\nDynamic Site Settings Module\nDatabase Clearing Module\nLecture By Lecture Git Source Code\nAnd More\nWhy Should You Select This Course?\nDifferent from other courses that only scratch the surface, this immersive learning experience takes you through the entire development process of a real-world project. Beyond coding, you'll gain valuable insights into project management and industry best practices. Plus, you'll have lifetime access to both the course materials and the complete source code of the project.\nUpon completion, you'll possess a highly marketable skill set, positioning you to earn a lucrative income as a professional Laravel developer.\nEnroll today and take the first step toward a successful career in web development!",
      "target_audience": [
        "Aspiring developers looking to excel in Laravel",
        "Web developers eager to elevate their Laravel/PHP expertise",
        "Students seeking hands-on experience in building a comprehensive directory listing project with Laravel",
        "University students tackling project assignments with Laravel",
        "Working professionals aiming to enhance their portfolios and career prospects with Laravel expertise"
      ]
    },
    {
      "title": "Make A Responsive Website Project #2: HTML, CSS & Javascript",
      "url": "https://www.udemy.com/course/build-a-holiday-sales-website-using-html-css-and-bootstrap/",
      "bio": "Create A Responsive, Holiday Themed Website using HTML, CSS, Bootstrap, Animate.css, Javascript, JQuery and Snowstorm.js",
      "objectives": [
        "How to build a responsive website using HTML, CSS and Javascript"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "CSS Review": [
          "CSS Animation Property",
          "CSS Transition Property",
          "CSS Adding A Type Of Font",
          "CSS Font Family Property"
        ],
        "How To Create An Overlay": [
          "How To Create An Overlay"
        ],
        "Layout Review": [
          "Types Of Layouts",
          "Using Percentages Instead Of Pixels"
        ],
        "Introduction To Bootstrap": [
          "What Is Bootstrap",
          "Installing Bootstrap"
        ],
        "Bootstrap Classes Used In This Project": [
          "Bootstrap: Button Classes",
          "Bootstrap: Container Class",
          "Bootstrap: Grid System(Columns) Classes",
          "Bootstrap: Text-Center Class"
        ],
        "Adding The Javascript": [
          "Installing JQuery",
          "Installing Snowstorm.js"
        ],
        "Introduction To Animate.css": [
          "What Is Animate.css",
          "How To Use Animate.css"
        ],
        "Creating Our Main Website": [
          "Adding The Stylesheets",
          "Setting Up The Body And Font Faces",
          "Setting Up Btns Classes",
          "Setting Up The Input Classes",
          "Setting Up The Heading Classes",
          "Setting Up The Paragraph Class",
          "Setting Up The Sectionhead Classes",
          "First Section: Adding The HTML",
          "First Section: Adding The CSS",
          "Second Section: Adding The HTML",
          "Second Section: Adding The CSS",
          "Third Section: Adding The HTML",
          "Third Section: Adding The CSS",
          "Fourth Section: Adding The HTML",
          "Fourth Section: Adding The CSS",
          "Fifth Section: Adding The HTML",
          "Fifth Section: Adding The CSS",
          "Sixth Section: Adding CSS and HTML",
          "Seventh Section: Adding HTML and CSS"
        ],
        "Introduction To Responsive Design": [
          "Introduction To Media Queries",
          "A Note On Min-Width In Media Queries",
          "A Simple Example Of Media Queries",
          "Media Queries: Two More Examples"
        ]
      },
      "requirements": [
        "A solid foundation in HTML(e.g. recognize what <section></section> means)",
        "A solid foundation in CSS(e.g. know the difference between position: relative and position: absolute)",
        "Some prior exposure to Javascript and JQuery",
        "You will be required to download JQuery, Bootstrap, Animate(dot)css and Snowstorm. All of of these are available free and no sign ups are required. Although I have included all of those files in the source code, I suggest you also to learn where to download them yourself as well."
      ],
      "description": "Would you like to know how to create all those cool effects that you see in my introduction video?\nOr maybe you are wondering how you can cut the time it takes for you to create a responsive website by half with one simple framework?\nIf so, this course is for you! In this course, I will be guiding you step by step in creating a responsive website using two of the most popular CSS frameworks out there.\n\n\nOkay, so what’s this course about?\nIn this course, we will create a responsive, holiday themed website from scratch using HTML, CSS, Bootstrap, Animate.css, JQuery and Snowstorm.js.\nAfter completing this website, you can be sure:\nyou are proficient with HTML/CSS\nyou are familiar with how to make a website responsive\nyou know how to use some of the most important features of Bootstrap and Animate.css\nyou know how to install Snowstorm.js\n\n\nSupport\nBy enrolling in this course, I will offer you my complete support. I love helping students out and am ready to answer any question you may have: programming issues, errors, general programming advice - it doesn't matter!\n\n\nFun!\nFinally, you’ll discover that programming websites is a lot of fun and I know you'll have a great time.\n\n\nSource Code\nYou can download the source code for this project in the conclusion lecture to help you follow along.\n\n\nPlease Note:\nYou will be required to download JQuery, Bootstrap, Animate.css and Snowstorm.js to complete this project. All of these can be downloaded for free and no sign ups are required. I have included the appropriate files in the source code, however, I strongly advise you download them yourself as well so that you know where to find the correct files.",
      "target_audience": [
        "Developers with some experience in HTML, CSS and Javascript"
      ]
    },
    {
      "title": "Lightning fast memory grids using Hazelcast IMDG",
      "url": "https://www.udemy.com/course/lightning-fast-memory-grids-using-hazelcast-imdg/",
      "bio": "Deep dive on developing and monitoring a memory grid using Hazelcast and spring boot",
      "objectives": [
        "You will be able to get a solid understanding of memory grids and basic and advanced features of Hazelcast. This course is more hands on driven where we will be creating and enhancing a springboot application. We will load volume data in to the memory grid and solve some interesting memory leaks. Upon completion of this course you will be able to get a good understanding on creating springboot based miroservices embedding hazelcast."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Tools Used"
        ],
        "What are memory grids": [
          "What are memory grids"
        ],
        "Springboot microservice embedding hazelcast": [
          "Develop a springboot microservice from scratch embedding hazelcast"
        ],
        "Loading Bulk data and monitoring memory": [
          "Loading Bulk data and monitoring memory"
        ],
        "Querying Data": [
          "Querying Data"
        ],
        "Distributed Locks": [
          "Distributed Locks"
        ],
        "Distributed Computing": [
          "Distributed Computing"
        ],
        "Concurrency issues": [
          "Concurrency issues"
        ],
        "Data Structures": [
          "Data Structures"
        ],
        "Monitoring": [
          "Monitoring"
        ]
      },
      "requirements": [
        "Some java experience, any level is fine."
      ],
      "description": "This course provides a in depth deep dive on Hazelcast, the leading in memory grid in the Java space. We will be building a springboot application with Hazelcast embedded in it. We will load some buld data in to the grid and we will solve some memory leaks. We will be extending the application step by step showcasing the various features of hazelcast that can be used in an enterprise application.",
      "target_audience": [
        "This course will be most beneficial to java programmers of any level who are looking forward to learn more about memory grids for solving performance bottlenecks"
      ]
    },
    {
      "title": "Build a To-Do List App with Node, Express, React and MongoDB",
      "url": "https://www.udemy.com/course/build-to-do-list-app-with-node-express-react-mongodb/",
      "bio": "Learn React, Express and MongoDB while building a fun to-do list app",
      "objectives": [
        "The basics of React and React Hooks",
        "Integrate React with Express and MongoDB",
        "How to build your own React apps",
        "How to deploy your React apps",
        "How to handle forms in React"
      ],
      "course_content": {
        "Promotional Video": [
          "Promotional Video"
        ],
        "Environment Setup": [
          "Installing Node",
          "Installing React",
          "Installing MongoDB Locally",
          "Installing ExpressJS and Mongoose"
        ],
        "Learn React (Crash Course)": [
          "What is JSX?",
          "Writing Our First App",
          "Components #1",
          "Components #2",
          "Writing Components",
          "Understanding Our App Structure",
          "Props",
          "Lifecycle Methods",
          "State #1",
          "State #2",
          "Seconds Counter App",
          "Handling Forms",
          "Controlled Components",
          "The Hooks System",
          "The useState() Hook",
          "The useEffect() Hook",
          "Refactoring the Seconds Counter App",
          "The Return Statement Inside of useEffect()",
          "Function vs. Class Components",
          "Making Requests Inside of React",
          "The Article Searcher App",
          "Sending Ruquests",
          "Displaying the Results",
          "The dangerouslySetInnerHTML Prop",
          "The key Prop",
          "Deployment with Vercel",
          "Alternative Method"
        ],
        "Creating the Front-End": [
          "Thinking About the Front-End",
          "Using Semantic UI",
          "Creating the Form #1",
          "Creating the Form #2",
          "Turning the Input into a Controlled Component",
          "Creating Sections",
          "Creating the To-Do List",
          "Editing the To-Do Items",
          "Styling the Input and Listening for Key Codes",
          "Auto Focusing the Input and Making it a Controlled Component",
          "Fixing the ESC Key",
          "Checking To-Do Items",
          "Simulating Our Back-End",
          "Fixing Some Problems",
          "Adding To-Do Items",
          "Emptying the Input and Form Validation",
          "Removing To-Do Items",
          "Writing the Logic of removeTodo()"
        ],
        "Creating the Back-End": [
          "Building our Back-End Structure",
          "Connecting to Our Database and Creating a Model",
          "Fetching Data from Our Database",
          "Solving the Warning Messages",
          "Creating More Routes",
          "Inserting & Deleting Records",
          "Following RESTful Conventions",
          "Creating the PUT Method",
          "Responding to Requests"
        ],
        "Binding the Front-End with the Back-End": [
          "Paving the Way for Binding",
          "Making Requests from Our Front-End",
          "Solving the CORS Issue",
          "Creating To-Do Items from Our Front-End",
          "Deleting To-Do Items from Our Front-End",
          "Editing To-Do Items from Our Front-End"
        ]
      },
      "requirements": [
        "A basic understanding of HTML and JavaScript (including ES2015)"
      ],
      "description": "React is the most popular JavaScript library of the last five years, and the job market is still hotter than ever. Companies large and small hire engineers who understand React, and salaries for engineers are high all the time. So, it's a great time to learn React! This course starts with zero knowledge assumed! All you need is basic web development and JavaScript knowledge.\n\n\nIn this course, you'll start with the basics of React and React Hooks and then expand your knowledge by building a fun to-do list app, both the front-end and the back-end, which puts you in a state of learning in a practical way.\n\n\nAfter finishing React and React Hooks, you'll start with building the front-end of the app, you'll style your app by using a third-party CSS library, build components for your app and imitate the behavior of the back-end. After finishing the front-end, you'll begin with developing your back-end where you'll create the database, develop routes in the back-end and finally integrate it with the front-end.\n\n\nWhat's in this course?\nAn introduction to React.\nHow React works, building components with React and building UIs with React.\nComponents, props and dynamic data binding.\nWorking with user events and state to create interactive applications.\nA look behind the scenes to understand how React works under the hood.\nA good explanation on how to work with lists and conditional content.\nAn introduction to React Hooks.\nHow to debug React apps.\nClass-Based components and function components.\nSending HTTP requests and handling transitional states and responses.\nHandling forms and user input.\nIntegrate React with MongoDB and Express.\nDevelop a back-end separately and integrate it with React.\nCreate your databases with MongoDB.",
      "target_audience": [
        "Programmers looking to learn React",
        "Developers who want to step up their knowledge",
        "Developers trying to learn how to integrate their apps with a database",
        "Developers trying to learn how to build reactive web apps"
      ]
    },
    {
      "title": "Design Website with ChatGpt in less than 1 hour",
      "url": "https://www.udemy.com/course/design-website-with-chatgpt-in-less-than-1-hour/",
      "bio": "Learn how to use chatgpt and develop as many websites you want and sell it on online platforms",
      "objectives": [
        "Basics of HTML,CSS and JS",
        "Building a Responsive Portfolio Website",
        "Building a Responsive Portfolio Website",
        "How to use ChatGPT to design website"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Designing Website": [
          "Basics of HTML,CSS, JS and Structure of Website",
          "Designing navbar and homepage",
          "Final - Designing other pages",
          "Contact Us Section"
        ],
        "Host Online": [
          "Host your website online"
        ]
      },
      "requirements": [
        "Laptop with internet and chatgpt account"
      ],
      "description": "New Lectures Added (10th Feb 2025)\n- Contact Us Section\n\n\nHello everyone! Welcome to this exciting course where you’ll learn how to create professional websites from scratch — no prior experience required. In less than an hour, you’ll gain all the essential skills you need to build a complete and responsive portfolio website that you can proudly showcase to potential employers or clients.\nThis comprehensive course is designed for absolute beginners. We’ll start by covering the basics of HTML, CSS, and JavaScript, the fundamental building blocks of the web. You’ll learn how to structure your website using HTML, style it beautifully with CSS, and add interactivity with JavaScript to enhance user experience and engagement.\nTogether, we’ll create a fully functional portfolio website with four sections: Home, About, Projects, and Contact. I’ll guide you through designing a stylish navigation bar, crafting visually appealing layouts, and implementing smooth scrolling for a seamless user experience across different devices.\nBy the end of this course, you’ll not only have a finished website but also a solid understanding of how to build and customize any website you dream of. Whether you’re looking to kickstart your web development journey, create your first portfolio, or enhance your existing skills, this course has everything you need.\nLet’s dive in and build your first website — it’s easier than you think!",
      "target_audience": [
        "Anyone who wants to create website with ChatGPT in less time."
      ]
    },
    {
      "title": "JavaScript - Become Higly Paid Front End Developer",
      "url": "https://www.udemy.com/course/javascript-become-higly-paid-front-end-developer/",
      "bio": "Learn JavaScript from the basics using this tutorial and become highly paid JavaScript developer.",
      "objectives": [
        "Add interactivity to existing websites",
        "Quickly understand and make changes to existing JavaScript applications",
        "Write clean and modular JavaScript code"
      ],
      "course_content": {
        "Introduction to JavaScript": [
          "Introduction"
        ],
        "JavaScript Syntax": [
          "Statements",
          "Variables",
          "Variables - Part 2",
          "Using an external file",
          "Functions",
          "Functions part2",
          "Operators",
          "Loops",
          "Loops - Part 2",
          "Functions and if statement",
          "Return statements",
          "Global and local variables",
          "Pass by value",
          "Arrays"
        ],
        "JavaScript Objects": [
          "Objects",
          "String Object",
          "Math Object",
          "Date Object"
        ],
        "DOM (The Document Object Model)": [
          "Document Object Model",
          "getElementById Method",
          "getElementsByTagName",
          "getElementsbyTagName - Part 2"
        ],
        "JavaScript Events": [
          "Introduction to events",
          "The mouseover event",
          "Swap images with mouseover event",
          "Creating a new element - part 2",
          "Remove element",
          "Placement of script tag",
          "Follow up session"
        ]
      },
      "requirements": [
        "Have any text editor (we'll use brackets but any editor is fine)",
        "Elementary HTML and CSS skills will help"
      ],
      "description": "JavaScript is a programming language used to make web pages interactive and it's the most popular programming language in the world!.\nIt runs on your visitor's computer and doesn't require constant downloads from your website. JavaScript is often used to create polls, validation and quizzes.\nEssentially JavaScript is designed to add interactivity to your website.\n\n\nWhat you will learn in this course?:\n\nJavaScript Syntax (Statements, Functions, Operators, Loops, etc)\nJavaScript Objects\nDOM\nmuch more!\nIn this tutorial we'll learn JavaScript from from scratch together and will implement and explain a number of real-life code examples which you'll be able to re-use in your own JavaScript projects.",
      "target_audience": [
        "HTML and CSS developers who are willing to become more paid web developers"
      ]
    },
    {
      "title": "Laravel and Postman Rest API Development: Beginner to Pro",
      "url": "https://www.udemy.com/course/laravel-and-postman-rest-api-development-beginner-to-pro/",
      "bio": "Mastering RESTful API Development using Laravel and Postman",
      "objectives": [
        "Understand what APIs are and the fundamentals of RESTful APIs.",
        "Set up a local development environment using XAMPP, Composer, Laravel, and Postman.",
        "Create a basic API, make GET requests, and use parameters for custom data retrieval.",
        "Implement CRUD operations (Create, Read, Update, Delete) and search functionality in your API.",
        "Validate API requests and responses for data integrity and security.",
        "Implement authentication in your API using Laravel Sanctum for improved security.",
        "Deploy your Laravel API to cPanel hosting"
      ],
      "course_content": {
        "Welcome": [
          "What you will learn in this Course"
        ],
        "Introduction to API Development": [
          "Basics of API"
        ],
        "Setting Up Development Environment": [
          "Installing and Configuring Xampp Server",
          "Installing Composer",
          "Installing Laravel",
          "Installing Postman"
        ],
        "Building Your First API": [
          "Laravel Basics",
          "Create Migrations and Models",
          "Fetch All Records using GET Request",
          "Fetch Single Record using GET Request"
        ],
        "Data Manipulation with API": [
          "Implement POST Request for Storing Record",
          "Update Record using PUT Request",
          "Deleting Record using DELETE Request",
          "Update Data Partially",
          "Search Functionality"
        ],
        "API Data Validation": [
          "Validating API Data"
        ],
        "API Security": [
          "Implementing Authentication",
          "Create Book Resource"
        ],
        "API Deployment": [
          "API Deployment to cPanel Hosting"
        ],
        "Quiz Challenge": [
          "Laravel and Postman Quiz"
        ]
      },
      "requirements": [
        "No programming or API experience needed. You will learn everything you need to learn."
      ],
      "description": "Are you ready to master the art of building powerful RESTful APIs using Laravel, one of the most popular PHP frameworks? Whether you're a beginner eager to dive into API development or an experienced developer looking to sharpen your skills, this comprehensive course is your gateway to becoming a pro in creating RESTful APIs with Laravel.\nIn this hands-on journey, you will start with the basics, learning what APIs are and understanding the core principles of RESTful architecture. You'll then set up your development environment, ensuring you have everything you need to get started.\nFrom there, you'll dive headfirst into building your first API, gradually progressing through the essential topics, including making GET requests, handling parameters, performing CRUD operations, and implementing search functionality. You'll also explore critical aspects of API development such as data validation and security.\nAs you advance, you'll master the art of authentication with Laravel Sanctum, safeguarding your APIs against unauthorized access. And, when your API is ready for the world, you'll learn how to deploy it to a cPanel hosting environment and create comprehensive documentation to assist users.\nBy the end of this course, you'll be equipped with the skills and knowledge to create robust, secure, and efficient RESTful APIs with Laravel. Whether you're building APIs for your web applications, mobile apps, or backend services, you'll have the confidence to tackle any API development project.\nJoin us on this exciting journey, and let's turn you into a Laravel RESTful API pro! Enroll today and start building the future of web and mobile applications.",
      "target_audience": [
        "Beginner Developers those who are new to API development and want to learn from scratch.",
        "Web Developers familiar with web development (HTML, CSS, and JavaScript) who want to expand their skill set to include API development.",
        "Backend Developers with experience in backend web development who want to specialize in API development using Laravel.",
        "Full-stack developers looking to strengthen their backend skills and gain expertise in building RESTful APIs using Laravel as part of their toolkit.",
        "Mobile app developers who need to create APIs to connect their mobile apps to server-side data.",
        "PHP developers seeking to expand their knowledge to include API development using Laravel, which is a popular PHP framework for this purpose.",
        "Software engineers interested in building RESTful APIs as part of a larger software architecture, regardless of their previous experience.",
        "Individuals who are enthusiastic about technology and have a desire to learn how APIs work and how they are developed.",
        "Software Testers"
      ]
    },
    {
      "title": "Master ReactJS: Learn React JS from Scratch",
      "url": "https://www.udemy.com/course/master-reactjs/",
      "bio": "Master the basics of ReactJS and be ready for the future of web development.",
      "objectives": [
        "Develope dynamic User Interfaces using ReactJS",
        "Understand all the basic concepts of ReactJS",
        "Make use of ReactJS with other frameworks/libraries like jQuery"
      ],
      "course_content": {
        "Introduction to ReactJS": [
          "Introduction",
          "Downloading & Installing ReactJS - Our First Example - Hello World!",
          "Understanding Virtual DOM"
        ],
        "Components in ReactJS": [
          "Rendering Data in ReactJS",
          "Applying CSS class to HTML content in ReactJS",
          "Playing Safe with HTML Entities",
          "Component State & Life Cycle",
          "Component State in Action",
          "Understanding State in React",
          "Understanding Component LifeCycle - I",
          "Understanding Component LifeCycle - II",
          "Understanding Component LifeCycle - III",
          "Creating Multiple Components in ReactJS",
          "Creating Reusable Components"
        ],
        "Properties & Events": [
          "Working with Properties",
          "Accessing Child Properties",
          "Making use of transferPropsTo - [Deprecated] See lecture 61 for update",
          "Working with Mixins",
          "Understanding Events in ReactJS",
          "Exploring static methods"
        ],
        "Forms Components": [
          "Working with Forms in ReactJS"
        ],
        "Accessing DOM": [
          "Referring DOM Nodes - The Refs way"
        ],
        "Tooling Support": [
          "Converting JSX to JS",
          "Using Gulp To compile and concatenate JSX files - I",
          "Using Gulp To compile and concatenate JSX files (Using Browserify) - II",
          "Component Communication",
          "Working with jQuery - Ajax",
          "DOM Event Listeners",
          "Inline Styles in ReactJS",
          "Using dangerouslySetInnerHTML"
        ],
        "Major AddOns in ReactJS": [
          "Two Way Data Binding",
          "Clone Elements - [cloneWithProps Deprecated - Use React.cloneElement instead]",
          "Using React.cloneElement",
          "Making use of classSet to apply Conditional Styles",
          "Making use of classnames to apply conditional styling",
          "Animation using CSSTransitionGroup"
        ],
        "Introduction to React Router": [
          "Working with React Router",
          "Working with Links & Creating Nested Routes",
          "Refactoring Routes and Components"
        ],
        "React and Remote Data": [
          "Introducing Fetch",
          "Rendering Remote Data in Components"
        ],
        "React Developer Tool for Chrome": [
          "React Dev Tools"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "JavaScript"
      ],
      "description": "Now covering the latest version 0.14\nMaster the art of ReactJS and be ready for the future of web development. Companies like Facebook and Instagram are already making use of ReactJS to build dynamic User Interfaces for better user experience\nThis course covers all the topics from basic to advance including Flux.\nYou will find concepts like\n1. HTML Entities\n2. Component State and Life Cycle\n3. How to create Multiple Components\n4. Creating Reusable components\n5. Displaying Data\n6. Events\n7. Properties\n8. Mixins\n9. Form Components\n10. JSX and how it can be pre-compiled\n11. DOM\n12. How to make use of Inline Styles\n13. Making use of AJAX technique\n14. How to communicate between components\n15. Cloning\n16. Two way Data Binding\n17. Understanding Flux\nAt the end of the course you will also develop a course cart application which will brush up all the concepts that we have covered in this amazing course\nSo let's start learning...Master ReactJS",
      "target_audience": [
        "Aspiring Web Designers",
        "Aspiring Web Developers",
        "Web Developers",
        "Web Designers",
        "Web Architects"
      ]
    },
    {
      "title": "Build a SMS Verification with Login System Using PHP MySQL",
      "url": "https://www.udemy.com/course/php-login-and-registration-with-email-mobile-verification/",
      "bio": "Learn To Build Login and Registration System with Mobile & Email Code Verification Using PHP and MySQL",
      "objectives": [
        "Learn to build Login & Regiestartion system",
        "Learn to create SMS and Email verification system",
        "Learn to Send SMS From PHP Script",
        "Learn to setup SMTP ('Simple Mail Transfer Protocol') account to send Emails",
        "Learn to generate verification link",
        "Learn to generate SMS verification Code",
        "Learn to create account recovery system",
        "Learn to create secure password hash"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Creating Folder & Files",
          "Download Project Files",
          "Source Codes"
        ],
        "Database": [
          "Creating Config File",
          "Creating Database Connection",
          "Creating Method to Make Database Class Accessible",
          "Creating a Proxy Way to Native PDO Methods"
        ],
        "Validation & Login": [
          "Creating User Table",
          "Creating method to Get Data From Database",
          "Creating method to escape user inputs",
          "Creating Method to Filter Email",
          "Creating method to check if email is already exists",
          "Creating method to hash password",
          "Logging in and redirecting user"
        ],
        "User data and settings": [
          "Creating Method to Return User Data",
          "Creating Method to Logout User",
          "Rewriting User Freindly Url for Settings Page",
          "Setting Up the Settings Page",
          "Creating method to Check lenght of User Inputs",
          "Continue to Valdating the Settings Form",
          "Creating method to Update user"
        ],
        "Registration": [
          "Setting up Registration Page",
          "Validating Registration Form",
          "Create Method to Insert Data into Database"
        ],
        "Email Verfication": [
          "Setting Up Verification Page",
          "Setting up PHPMailer",
          "Creating method to generate verification link",
          "Creating Method to send Verification email",
          "Inserting verification code into our new verification table",
          "Verifying User Account",
          "Redirecting Unverified Users to Verification Page"
        ],
        "Mobile Verification": [
          "Validating User Phone Form",
          "Creating a method to gerenate mobile verification code",
          "Setting Up SMSGetaway to Send SMS to Users mobile",
          "Creating Method to Send SMS",
          "Verifying User Verification SMS Code"
        ],
        "Recovering User Account": [
          "Creating new table for password recovery",
          "Creating page to reset password",
          "Redirecting user to password page",
          "Updating User's new Password",
          "You have made it"
        ]
      },
      "requirements": [
        "basic PHP knowledge",
        "A text editor"
      ],
      "description": "How to Create Secure PHP Login and Registration system with mobile and email verification using PHP, OOP , PDO and MySQL. Every one who just started learning web developing and web designing and wanted to learn more in PHP ,MySQL OOP concept then you are at the right place at the right time.\nBefore taking this course you need to know some basics about PHP and HTML, CSS we will be straight coding in PHP.\nPHP Login and Registration system this is not the simple Sign-in & Sign-up system, we will be creating OOP methods for better understanding how PHP OOP works. I've created the secured Login and registration system .\nSupport:\nBy taking this course will get my full support. I’m always loved to help my students (could be you). I’m always in ninja mood, if there’s been question it’ll be answered within an hour or few.\nWe love helping!\nIf you stuck in any of my lectures, then don’t worry we are always here to help. Or if you need assistance from a lecture? Tells us the problem.\nThis Course Covers The Following Features:\n• Login System\n• Sign-up System\n• User Settings\n• Account Recovery\n• Email Verification\n• SMS Verification\n• Clean Friendly URLs\nPlease look at all the lectures to see more things that are covered.",
      "target_audience": [
        "For anyone who wants to learn use of PHP OOP in real world",
        "For PHP beginners who want create own login and Registration system with Email & SMS verification",
        "For anyone who wants to learn use of PDO with MySQL",
        "For anyone who wants to learn use of PHP OOP"
      ]
    },
    {
      "title": "How to Build a Java Spring Boot Web Application from Scratch",
      "url": "https://www.udemy.com/course/how-to-build-a-java-spring-boot-web-application-from-scratch/",
      "bio": "Making a Full-Stack Java Web App that Integrates with the NASA Mars Rover API",
      "objectives": [
        "Building Web Application with Java and Spring Boot",
        "Bootstrap 4",
        "Using Postman to Test Your App",
        "Spring MVC",
        "JUnit",
        "Thymeleaf",
        "Hibernate"
      ],
      "course_content": {
        "Getting Started": [
          "Join the Discord Server",
          "Introduction to Full-Stack Java Development",
          "What is an API?",
          "NASA Mars Rover API",
          "Introduction to Postman"
        ],
        "Creating a RESTful Web App": [
          "Using Spring Tool Suite IDE to Create Spring Boot Application",
          "Configuring our MySQL Database",
          "Starting to use Spring MVC",
          "Deep Dive on Spring Models",
          "Using RestTemplate and Junit",
          "Mapping JSON Response to Java Objects",
          "Debugging JSON Response Mapping Issue"
        ],
        "Working with the Front End": [
          "Displaying Mars Rover Photos",
          "Bootstrap Crash Course",
          "Thymeleaf forEach Magic",
          "Adding Dynamic Elements to our View",
          "Using JS to Add Events to Buttons",
          "POSTing Data via HTML Form to Java",
          "GETing Data via HTML Forms",
          "Highlighting Buttons with JavaScript",
          "Adding Mars Sol Filter",
          "Researching Mars Cameras API",
          "Data Binding with Thymeleaf",
          "Adding Mars Cameras to the View",
          "Mobile Friendly UIs with Bootstrap"
        ],
        "Refactoring and Building on Our Code": [
          "Improving Mars API Calls with Cameras",
          "Refactoring our Ugly Code",
          "Disabling Non-Valid Cameras in View",
          "Debugging Disabling of Checkboxes"
        ],
        "Adding a Database to the Project": [
          "Adding Remember Preferences Checkbox",
          "Playing with Local Storage",
          "Using a Form POST",
          "Creating a DB Entity",
          "Creating a Repository",
          "Improving our DB Design",
          "Bug Fixes Galore",
          "Final Bug Fixes and Next Steps"
        ]
      },
      "requirements": [
        "Basic Knowledge of Programming"
      ],
      "description": "In this course you'll learn how to use Spring Boot to create a web application that pulls data from NASA's Mars Rover API.\nThis interactive application will allow users to choose from three of the Mars Rover landers and pull images from another planet!\nIt's super fun while also being educational. A win-win for any aspiring Java coder that has a soft-spot for space exploration.",
      "target_audience": [
        "Beginner or Intermediate Java Programmers interested in Full-Stack Web Development"
      ]
    },
    {
      "title": "Parcel Bundler: The Complete Tutorial",
      "url": "https://www.udemy.com/course/parcel-bundler-the-complete-tutorial/",
      "bio": "Learn Parcel Bundler from the very basics to advanced! Use Parcel with React, Vue, jQuery, Bootstrap, Express, Babel!",
      "objectives": [
        "Quickly get started, without long introductions and rambling.",
        "Integrations with React, Vue, jQuery, and Bootstrap.",
        "Learn advanced features like Tree Shaking, Code Splitting, and Lazy Loading.",
        "Optimize your production code to be small and fast.",
        "Set up Gzip and Brotli compression.",
        "Use latest cutting edge JavaScript features with Parcel and Babel 7."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What You Need for This Course"
        ],
        "Initial Setup and Installing Parcel": [
          "Set Up the Application",
          "Install Parcel",
          "Parcel v2",
          "Looking Inside the Generated Files"
        ],
        "Assets in Parcel": [
          "Introduction to Assets",
          "Using LESS/SASS with Parcel",
          "Configuring PostCSS",
          "Note About PostCSS",
          "EcmaScript 6 Modules",
          "Integration with jQuery",
          "Using Latest JavaScript Features with Babel",
          "How To Handle Images with Parcel",
          "Integration with FontAwesome"
        ],
        "Integration with Bootstrap": [
          "Integration with Bootstrap. CSS",
          "Note About Importing Bootstrap CSS",
          "Integration with Bootstrap. JavaScript"
        ],
        "Building for Production": [
          "Why Do We Need Production Mode",
          "Building for Production",
          "NODE_ENV Variable",
          "Browser Caching",
          "How To Clean the Dist Folder"
        ],
        "Optimizing for Production": [
          "Tree Shaking. Simple Example",
          "Tree Shaking. Using in our Application",
          "Minifying Images",
          "Removing Unused CSS from Production Code",
          "GZIP Compression"
        ],
        "Integration with Express Framework": [
          "Introduction",
          "Integrating Express Framework Into the Application",
          "Serving HTML in Express Framework",
          "Serving Static Files in Express Framework",
          "Enable GZIP Compression in Express Framework"
        ],
        "Code Splitting and Lazy Loading": [
          "Code Splitting and Lazy Loading"
        ],
        "Integration with React": [
          "Integration with React"
        ],
        "Integration with Vue": [
          "Integration with Vue"
        ]
      },
      "requirements": [
        "Basics of JavaScript"
      ],
      "description": "My main goal is to help you understand and master Parcel web application bundler. This course was specifically designed for those who want to learn Parcel bundler from scratch or improve their current knowledge in this topic. At the moment this course covers Parcel v1.\nIn this course we will build fully functional todo list application from scratch. Along the way we will learn and apply various Parcel features to this application. We will start from the very basics and then gradually move towards more advanced topics like tree shaking, code splitting and lazy loading. Large portion of this course is dedicated to optimizing your applications in production. You will learn how to optimize large images, remove unused CSS, and compress your resulting bundles with gzip and brotli.\nWe will also cover Parcel integrations with popular JavaScript libraries like React, Vue, jQuery, Bootstrap etc. Each lesson builds on top of the previous ones, so it is easy to follow. Therefore, after taking this course you will definitely be able to use Parcel in your projects.\nIf you have any questions regarding Parcel, feel free to post them in the Q&A section. Many people have already found answers to their questions there, and I will do my best to help you with your questions as well.\nP. S. Made in Ukraine",
      "target_audience": [
        "All developers with basic JavaScript knowledge"
      ]
    },
    {
      "title": "Responsive Web Development With HTML5 & CSS3",
      "url": "https://www.udemy.com/course/responsive-web-development-with-html5-css3-for-beginners/",
      "bio": "Build More Than Six Real World Projects and Also Learn How To Host Your Website On Github!",
      "objectives": [
        "Work with HTML5 elements and CSS3 to structure a web site.",
        "CSS Grid",
        "CSS Flexbox",
        "Animation and Transition Effects",
        "Learn How to Host and Deploy Your Website Online For Free",
        "Creating Forms",
        "Create More Than 6 Projects",
        "Gain Real-World Skills To Build Professional,Beautiful and Truly Responsive Websites",
        "After This Course,Knowledge Gained Can Land You A Job",
        "Understanding CSS Units",
        "CSS Variables"
      ],
      "course_content": {
        "Requirements": [
          "Requirements"
        ],
        "HTML": [
          "Introduction To HTML",
          "Introduction To HTML",
          "HTML Tags",
          "HTML Tags",
          "Text Formatting",
          "Elements and Attributes",
          "Image",
          "Links",
          "Lists",
          "Add List",
          "Table",
          "Table Project 1",
          "Forms",
          "Form Project 1",
          "HTML5 Intro"
        ],
        "CSS Section": [
          "Introduction To CSS.mp4",
          "CSS Syntax",
          "Formatting",
          "Background",
          "Box Model",
          "Box Sizing",
          "Positioning and Layout",
          "Z-index"
        ],
        "Table Project 2": [
          "Table Project Part 2"
        ],
        "CSS Continued": [
          "Media Query",
          "Animation"
        ],
        "Flexbox": [
          "Flexbox",
          "Photo Gallery Project"
        ],
        "CSS Grid": [
          "CSS Grid",
          "News Grid Project"
        ],
        "Form Project 2": [
          "Form Project Part 2"
        ],
        "CSS Variables": [
          "CSS Variables"
        ],
        "CSS Units": [
          "Units"
        ]
      },
      "requirements": [
        "Basic Computer Skills",
        "Passion"
      ],
      "description": "Hello , Welcome To The Course Titled Responsive Web Development With HTML5 And CSS3. HTML5 Is Just The Latest Version Of HTML Just as CSS3 Is Latest Version Of CSS.\nThis Will Be The One And Only Course You Need To Get Started In Your Development Journey. With This Course, It Sets You On The Right Path. There Is No Already Made Code And We Build Everything Right From The Ground Up. There Are No Starter Files With Already Made Code Where You Need To Try And Understand Someone Else's Code(which is intimidating for beginners) So We Will Be Building Everything From Start To Finish.\nBeing Both Schooled And A Self Taught Developer, I Know And Have Been Through The Hurdles And Frustrations Of Learning On Your Own, Especially Getting Stuck And Making You Feel Like Almost Giving Up. Due To This, I Will Use Effective Methods And Also Go Straight To The Point And Every Explanation Will Follow A Practical Example.\nAlso, This Course Will Teach You To Write Clean And Effective HTML/CSS.\nHTML/CSS Is The Basic Foundation Development, Once You Get That Understanding, Delving Into Other Languages And Frameworks Like Bootstrap, JavaScript And The Rest Becomes Really Easy. Not Only Will We Learn The Theory Of Html And CSS Step By Step But Its Practical Aspect And We Will Also Apply That Knowledge By Building Real Life Projects . We Are Going To Be Building A Website Alongside Mini Projects.\nThis Course Is Designed To Help Beginners And Intermediates To Learn And Master the basics of HTML & CSS.\nNo Prior Knowledge of HTML & CSS Required. You Will Learn All That From Scratch. Skip Those Boring Courses Full of Slides And Actually Learn By Doing And Building a Handful of Projects.",
      "target_audience": [
        "Those Looking To Build A Very Strong Foundation In Web Development with HTML and CSS",
        "Those Looking to Get New Job In Web Development"
      ]
    },
    {
      "title": "Next.js and Apollo - Portfolio App (w/ React, GraphQL, Node)",
      "url": "https://www.udemy.com/course/nextjs-and-apollo-portfolio-app-w-react-graphql-node/",
      "bio": "Learn GraphQL and Apollo! Create a fast portfolio application in Next.js(Next 9+) / React backed with Apollo + Node.js",
      "objectives": [
        "Develop Real-world web application with Next JS, Apollo and Node",
        "Create your own portfolio application in most demanded frameworks on the market",
        "Grasp full power of GraphQL",
        "Establish yourself in field of the exciting Next and React web development environment"
      ],
      "course_content": {},
      "requirements": [
        "Basics of React JS",
        "Fundamentals in HTML and CSS, but isn't must have"
      ],
      "description": "What is GraphQL?\nGraphQL is a query language for your API and a server-side runtime for executing queries using a system you define for your data. GraphQL isn't tied to any specific database or storage engine and is backed by your existing code and data.\nWhat is Apollo?\nApollo is the industry-standard GraphQL implementation, providing the data graph layer that connects modern apps to the cloud. Apollo will handle data fetching, caching, and state management of out the box!\nWhat is Next.js?\nNext.js is React framework that provides infrastructure and simple development experience for server-side rendered(SSR) applications.\nAn intuitive page-based routing system (with support for dynamic routes)\nPre-rendering, both static generation (SSG) and server-side rendering (SSR) are supported on a per-page basis\nWhat are we going to build?\nWe will work mainly on portfolios features. You will learn how to manage client and server data with Apollo and Graphql. Data will be stored in Mongo Atlas Database, to which we will be communicating through the Node JS Server. We will create functionality to create a portfolio, and I will explain how to manage forms efficiently. Then we will look at an update functionality where I will show you how to populate inputs with existing data. After that, works on a delete functionality. All of the features will be reactive and updating views in real-time. You will learn the basics of data fetching and data mutations with Apollo.\nAnother significant feature we will be working on will be session-based authentication. We will prepare login and register forms. Users will register, login, and experience features only for authenticated users. You will learn how to manage sessions, protect the pages, and organize an authentication state through your application.\nThe forum feature will be the biggest one. You will learn how to create a fully working forum consisting of topics and posts. We will integrate a component used for topic and posts creation. Users will be able to develop various topics, posts, and replies to other posts, all updated in real-time and across the browsers. After that, you will learn how to create a fully working pagination!\nLater in the course, we will create features to get randomized data for the home page, and I will talk about re-usability. We will finish the CV page, and we will get into deploying. After all production improvements are applied, we will deploy our application to Heroku so anyone on the internet can access our portfolio.",
      "target_audience": [
        "Starting as well as experienced developers interested in Next JS, GraphQL, Apollo",
        "This course is for everyone eager to create apps with modern tech stack"
      ]
    },
    {
      "title": "How to Develop REST Web API using ASP.NET MVC",
      "url": "https://www.udemy.com/course/how-to-develop-rest-web-api-using-aspnet-mvc/",
      "bio": "SQL Server Database | Entity Framework | Token Based Authorization | API Security Key | JSON Objects Mapper",
      "objectives": [
        "REST Web API Development from Basic to Advance level",
        "Introduction to REST Web API",
        "REST Web API vs SOAP Web API",
        "Setup Basic REST Web API Project in Visual Studio",
        "API Security Key Generation for Authorization",
        "JSON Object Mapper in C#",
        "Non-Token Based REST Web API Authorization",
        "Token Based REST Web API Authorization",
        "Introduction to Entity Framework",
        "REST Web API connection with SQL Server Database using ASP dot NET MVC Platform"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction to REST Web API",
          "How to Setup REST Web API Project in Visual Studio",
          "How to Generate REST Web API Security Key for Authorization",
          "What are JSON Objects Mapper in C#.NET"
        ],
        "How to Develop REST Web API using ASP.NET MVC": [
          "How to Create REST Web API HTTP POST type method using ASP.NET MVC",
          "How to Create REST Web API HTTP GET type method without Request Query Parameters",
          "How to Create REST Web API HTTP GET type method with Request Query Parameters",
          "How to change REST Web API method name in ASP.NET MVC using Name Routing"
        ],
        "How to Authorize REST Web API using ASP.NET MVC": [
          "How to Create non-token based basic REST Web API authorization using ASP.NET MVC",
          "How to Create Token based REST Web API authorization using oAuth in ASP.NET MVC"
        ],
        "How to Connect SQL Server Database with REST Web API using ASP.NET MVC": [
          "Introduction to Entity Framework",
          "How to connect REST Web API with SQL Server Entity Framework Database First"
        ]
      },
      "requirements": [
        "Understanding of ASP dot NET MVC Platform",
        "Understanding of C# Programming",
        "Understanding of SQL Server Database"
      ],
      "description": "Web APIs are one of the essential component in the applications which involve data exchange in client-server machine architecture. In this course you will learn about development of REST web API using ASP.NET MVC platform from basic to advance level. This course outlines following topics i.e.\n\n\nWhat is REST Web API?\nHow to setup basic REST Web API Project using ASP.NET MVC in Visual Studio?\nHow to generate REST Web API Security Key for authorization?\nWhat are JSON Objects Mapper in C#.NET?\nHow to create REST Web API HTTP POST type method?\nHow to create REST Web API HTTP GET type method without Request Query Parameters?\nHow to create REST Web API HTTP GET type method with Request Query Parameters?\nHow to change REST Web API method name in ASP.NET MVC using Name Routing?\nHow to do non-token based basic REST Web API authorization?\nHow to do Token based REST Web API authorization using oAuth in ASP.NET MVC?\nWhat is Entity Framework?\nHow to connect REST Web API with SQL Server using Entity Framework Database First?",
      "target_audience": [
        "Beginner to Advance Web Developers",
        "Curious Database Developers"
      ]
    },
    {
      "title": "Demystifying Parallax: Learn to Create Interactive Web Pages",
      "url": "https://www.udemy.com/course/demystifying-parallax-learn-to-create-interactive-web-pages/",
      "bio": "With JavaScript, HTML & CSS",
      "objectives": [
        "Create a parallax experience with JavaScript, HTML and CSS",
        "Understand how to connect (or map) inputs to outputs in JavaScript",
        "Understand the theory behind Parallax"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Parallax Explained": [
          "Parallax Explained"
        ],
        "How This Class Is Going To Work": [
          "How This Class Is Going To Work"
        ],
        "Inputs And Outputs": [
          "Inputs And Outputs"
        ],
        "Plan Like An Amateur": [
          "Plan Like An Amateur"
        ],
        "Capturing Mouse Movement": [
          "Lecture 6: Capturing Mouse Movement"
        ],
        "Connecting Mouse Movement To An Output": [
          "Connecting Mouse Movement To An Output"
        ],
        "Creating The Parallax Effect": [
          "Creating The Parallax Effect"
        ],
        "Making It More Realistic": [
          "Making It More Realistic"
        ],
        "Capturing Scroll Position": [
          "Lecture 10: Capturing Scroll Position"
        ]
      },
      "requirements": [
        "A basic knowledge of HTML, CSS & JavaScript",
        "A code editor like Sublime Text or Visual Studio Code"
      ],
      "description": "You know what parallax is right? It’s that awesome 3D effect we’ve seen in tons of websites, games and apps (like Alto's Adventure for example). Parallax is an interaction delight and it attracts people like crazy. It may appear like voodoo and dark magic, but it’s actually pretty simple to code yourself! In this class I’m going to peel back the illusion that parallax is and show you how to start making interactive web pages with JavaScript.\nYou'll learn to create an interactive illusion of depth – where items further away move at a slower speed than items that are closer. And you’ll learn to make everything respond to a user's movement, like when the mouse moves or when the page scrolls.\nThe class is designed for someone with a basic knowledge of HTML, CSS + JavaScript. I do have some beginner classes on HTML + CSS and JavaScript that should get you up to speed.\nThroughout this class, we'll cover:\nListening for user input (mouse movement and scroll position changes).\nConnecting element properties like position, blur, and scale to user input.\nCreating life-like illusions.\nJavaScript principles.",
      "target_audience": [
        "Developers wanting to start creating more interactive frontend experiences",
        "Designers wanting to who want a fun and friendly way of getting into creative and interactive coding",
        "Designers and developers who want a theoretical and a practical course on how to create a parallax experience"
      ]
    },
    {
      "title": "TypeScript Developer Course in 2025 – Beginner to Expert",
      "url": "https://www.udemy.com/course/typescript-developer-course-beginner-to-expert/",
      "bio": "Learn TypeScript, leverage its Power to Create Production-Grade Web Applications and Take Your Skills to the Next Level",
      "objectives": [
        "Learn and understand what TypeScript is and why TypeScript is so Popular",
        "Solve Challenges to Solidify Beginner to Advanced TypeScript Concepts",
        "Learn All the Advanced Features of TypeScript",
        "Learn How TypeScript Leverages Modern JavaScript",
        "Understand TypeScript Documentation and Source Code by Learning Advanced Types such as Type Queries, Conditional Types, Utility Types & Mapped Types",
        "Learn to Create TypeScript Modules and Master Modern Techniques",
        "Understand & Write Custom TypeScript Declaration Files",
        "Single-File Compilation with Webpack"
      ],
      "course_content": {},
      "requirements": [
        "No Previous TypeScript Knowledge is Required",
        "Only Beginner JavaScript Knowledge is Required",
        "Leave the rest to me :)"
      ],
      "description": "Welcome to a Real-World TypeScript course!\nI am extremely excited to present to you a complete guide to TypeScript. This course covers TypeScript from the ground up and covers all the little and complicated details of TypeScript.\nTypeScript is a superset of JavaScript and makes writing JavaScript easier and more maintainable while keeping the code less bug prone. TypeScript introduces types, among other modern features, into the world of JavaScript and compiles to JavaScript before being used in production environments. One of the main issues with JavaScript that TypeScript solves is that the errors are going to be detected in the development environment, unlike JavaScript, which significantly improves performance and reduces time spent debugging applications.\nTypeScript has seen a surge in popularity during the recent years and has become an integral part of frontend and backend web development. It is worth mentioning that TypeScript seamlessly integrates with modern web frameworks such as Angular, Vue and libraries such as React. TypeScript can also be integrated with JavaScript runtimes to create backend web applications.\nThe need of modern web for type safety and ease of scalability has made TypeScript an indispensable part of web development jobs and interviews. TypeScript's popularity is only going to increase in the coming years and right now is the best time to employ TypeScript into your project safely and effectively.\nIn this course, we are going to start at the basics of TypeScript and how primitive JavaScript data types integrate into the work of TypeScript. There is going to be challenges along the way to strengthen basic concepts.\nAfter making sure you feel comfortable with the basics of TypeScript, we will kick things up a notch and talk about basic TypeScript types and from that point onward, we will cover TypeScript generics, type narrowing & widening, interfaces and more intermediate types such as index signatures, indexed access types, partial types and so much more.\nEach of the major concepts of TypeScript will be followed by a complete section of challenges to solidify all the concepts and retain the knowledge for the long term.\nAt this point in the course, we will talk about Object-Oriented Programming in TypeScript and this section will be followed by the most advanced challenges of this course.\nNow is the time to talk about more advanced TypeScript types. When learning a new technology, it is of utmost importance to read, understand and decipher the language's documentation and source. For this reason, I have included several sections where I am going to teach you how to read TypeScript documentation and source code as well as TypeScript declarations files. Specifically, we will cover type queries, conditional types, utility types and mapped types.\nA main idea behind the creation of TypeScript was to utilize this powerful language for medium to large scale applications.  Applications at this scale cannot be written in a single file and here is where TypeScript modules come into the picture. TypeScript modules allow us to break a large project into several files and directories and make the maintainability and scalability of the project supremely easy. We will cover exporting, importing, re-exporting, barrel files, module resolution and so many more advanced and real-world techniques that are used on a daily basis in TypeScript projects.\nSince TypeScript cannot be rendered directly by the browser, we will have to use some sort of third-party module bundler to compile a TypeScript to a web application and for this purpose we will cover single file compilation using webpack.\nMajor TypeScript Concepts Covered in this Course:\nTypeScript Setup\nTypeScript Configuration\nPrimitive Types\nAny Type\nArray Type\nTuple Type\nEnum Type\nConditionals\nLoops\nFunctions\nVoid Type\nNever Type\nNullability\nType Aliases\nType Casting\nUnion Type\nLiteral Type\nIntersection Type\nFunction Type\nObject Type\nGeneric Arrays\nGeneric Functions\nGeneric Objects\nGeneric Sets\nType Narrowing\nType Guards\nType Widening\nInterface Type\nUnknown Type\nIndex Signatures\nIndexed Access Types\nPartial Type\nRead-only Types\nOOP\nType Queries\nConditional Types\nUtility Types\nMapped Types\nTypeScript Modules\nTypeScript Integration with Webpack\n\n\nENROLL RIGHT NOW AND LEARN THE SKILLS OF THE FUTURE!",
      "target_audience": [
        "Everyone who want to transition from JavaScript to TypeScript in the smoothest manner possible",
        "Everyone who wants to learn TypeScript from the ground up and really understand what TypeScript is and what it does"
      ]
    },
    {
      "title": "MongoDB, Express, React, Node, Angular (MEAN/MERN) - 5 in 1",
      "url": "https://www.udemy.com/course/mongodb-express-react-node-angular-mean-mern-stack-5-in-1-course/",
      "bio": "Test & Improve your Full Stack Development skills | All topics included | Practice Tests | Common Interview Questions",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "In the field of web development, full-stack development is playing a vital role. A full-stack development provides a solution for perfect solutions for front-end, back-end, testing, mobile application. In today’s world, the demand for a full-stack developer is rising tremendously. A full-stack developer can take care of the entire design structure of a project. There exist different full-stack development frameworks like MEAN stack and MERN stack.\n\n\nMEAN stack: MEAN is an abbreviation that stands for MongoDB, ExpressJS, AngularJS, Node.js. This framework provides quick and easy development of web and mobile applications.\nMERN stack: MERN is an abbreviation which stands for MongoDB, ExpressJS, ReactJS, Node.js. This framework also provides quick and easy development of web and mobile applications using java as its main component.\n\n\nMongoDB: It is a document-oriented No-SQL data store used to store back-end applications.\nExpressJS: It is a layered framework built on top of NodeJS that takes care of the website’s back-end functionality and structure.\nReactJS: It is a library that facilitates creating the user interface components of single-page web applications.\nNodeJS: It is a runtime environment capable of running JavaScript on a machine\nAngularJS: It is the front-end framework that runs the code in the browser.\nGiven the wide range of available technology stacks, MEAN Stack and MERN Stack present you with similar functionalities in their work. In the present application development market, MEAN and MERN have become equally important in conducting their roles. They are rapidly growing in popularity as an integral part of Full Stack Development. Both MEAN and MERN are reliable frameworks. However, they differ in their structure placement.\n\n\nWhat does this course offer you?\nThis course consists of 5 practice tests.\nPractice test consists of 50 questions each, timed at 30 minutes with 50% as passing percentage.\nThe questions are multiple-choice.\nThe answers are randomized every time you take a test.\nQuestions are of varying difficulty - from easy to moderate to tough.\nOnce the test is complete, you will get an instant result report with categories of strength to weakness.\nYou can re-take the tests over and over again as and when it suits you.\nNew set of questions will be added frequently and you can practice along without having to buy the course again.\nLearning Resources will be shared over email frequently to all enrolled students, along with any latest updates/news/events/knowledge.\n\nSample Question : When you query a collection, MongoDB returns a ________ object that contains the results of the query.\nOptions : row, cursor, columns\nAnswer : cursor\nExplanation : The mongo shell then iterates over the cursor to display the results.\n\n\nWith this course you will get lifetime-long access to 250 Interview and Practice Questions on MERN & MEAN Stack that are updated frequently. After the test you will become more confident in these areas and will be able easily perform basic and advanced tasks while working on any Web Application Development project -  these practices work in all areas of varied kind of situations. Not just that, you will have enough knowledge to clear your next Full Stack Job Interview !\nBut most important is that you will UNDERSTAND MERN & MEAN Stack fundamentals.\nYou will also get 30-days money-back guarantee. No questions asked!\nDon't wait and join the course now!",
      "target_audience": [
        "Web Development professionals looking to sharpen their skills",
        "Anyone preparing for Full stack Developer Interview",
        "Students / professionals looking to learn and master MERN / MEAN Stack as career path"
      ]
    },
    {
      "title": "The Complete CSS Mastery Course",
      "url": "https://www.udemy.com/course/the-complete-css-mastery-course/",
      "bio": "The Only Course You Need to Master the Art of Styling Websites with CSS.",
      "objectives": [
        "You will Master CSS3.",
        "Master CSS Color Values.",
        "Master Chrome Developer Tools.",
        "Master How CSS Units Work.",
        "Learn CSS in a Well Organized Way.",
        "Understand CSS with Real World Examples.",
        "Learn a new CSS Property in each and every section.",
        "Learn to Build Professional Looking Websites with CSS.",
        "Learn about CSS Property values using Examples.",
        "Be Able to Build your own Dream Project with CSS.",
        "Learn About CSS Box-Modal In Great Detail.",
        "Master All The Position Property Values.",
        "Learn About The Transform Property With Examples.",
        "Be Able To Create Simple Animations Using Transition Property.",
        "Be Able To Add Beautiful Shadows For Your Website.",
        "Master How Flexbox Works In CSS.",
        "Be Able To Create Complex Animations Using @Keyframe Rule And Animation Property.",
        "Learn To Create Responsive Web Design Using Media Queries."
      ],
      "course_content": {
        "Introduction To CSS": [
          "What Is CSS?",
          "CSS Syntax",
          "Installing Visual Studio Code",
          "CSS - Quiz",
          "CSS - Test",
          "CSS - Key Points",
          "Summary"
        ],
        "Inline, Internal, External CSS": [
          "The Three CSS Way",
          "Inline CSS",
          "Inline - Coding Exercise",
          "Inline - Assignment",
          "Internal CSS",
          "Internal - Coding Exercise",
          "Internal - Assignment",
          "External CSS",
          "External - Coding Exercise",
          "External - Assignment",
          "The Winner",
          "Inline, Internal, External - Quiz",
          "Master - The Three Ways",
          "Summary"
        ],
        "Color": [
          "Color Property",
          "Color Property Examples",
          "Color",
          "Color",
          "Color - Assignment",
          "Color - Article",
          "Summary"
        ],
        "Selector": [
          "CSS Selectors",
          "Universal Selector",
          "Universal - Coding Exercise",
          "Universal - Assignment",
          "Type Selector",
          "Type - Coding Exercise",
          "Type - Assignment",
          "ID Selector",
          "ID - Coding Exercise",
          "ID - Assignment",
          "Class Selector",
          "Class - Coding Exercise",
          "Class - Assignment",
          "Attribute Selector",
          "Attribute - Coding Exercise",
          "Attribute - Assignment",
          "Selector - Quiz",
          "Master - Selector",
          "Summary"
        ],
        "Background-Color": [
          "Background-color Property",
          "Background-color Values",
          "Background-color - Coding Exercise",
          "Background-color - Assignment",
          "Background-color - Article",
          "Summary"
        ],
        "CSS Combinators": [
          "CSS Combinator",
          "Descendant Selector",
          "Descendant - Coding Exercise",
          "Descendant - Assignment",
          "Child Selector",
          "Child - Coding Exercise",
          "Child - Assignment",
          "General Sibling Selector",
          "General Sibling - Coding Exercise",
          "General Sibling - Assignment",
          "Adjacent Sibling Selector",
          "Adjacent Sibling - Coding Exercise",
          "Adjacent Sibling - Assignment",
          "Combinator - Assignment",
          "Combinator - Article",
          "Summary"
        ],
        "Color Values": [
          "Intro To Color Values",
          "Named Colors",
          "Named - Coding Exercise",
          "Named - Assignment",
          "RGB Colors",
          "RGB - Coding Exercise",
          "RGB - Assignment",
          "Hexadecimal Colors",
          "Hexadecimal - Coding Exercise",
          "Hexadecimal - Assignment",
          "Color - Article",
          "Summary"
        ],
        "Text-Decoration-Line": [
          "Text-Decoration-Line Property",
          "Text-Decoration-Line Examples",
          "Text-Decoration-Line - Coding Exercise",
          "Text-Decoration-Line - Assignment",
          "Summary"
        ],
        "Text-Decoration-Color": [
          "Text-Decoration-Color Property",
          "Text-Decoration-Color Examples",
          "Text-Decoration-Color - Coding Exercise",
          "Text-Decoration-Color - Assignment",
          "Summary"
        ],
        "Text-Decoration-Style": [
          "Text-Decoration-Style Property",
          "Text-Decoration-Style Examples",
          "Text-Decoration-Style - Coding Exercise",
          "Text-Decoration-Style - Assignment",
          "Summary"
        ]
      },
      "requirements": [
        "A Computer with a Good Internet Connection.",
        "Basics of HTML.",
        "A Web Browser."
      ],
      "description": "Welcome to the Complete CSS Mastery Course. The only course you need to Master CSS.\nHave you ever dreamed of creating beautiful and professional-looking websites? If yes, then you are in the right place.\nCSS is the most popular language that is used to create attractive websites. To be precise CSS is used by almost 96% of all websites. So, in this course, you will master CSS, not the old version, the up-to-date version of CSS, that is CSS3. Yes, At the end of this course you will be a master in CSS3.\nWhat makes this course unique?\nLearn CSS with Real-World Examples.\nSay Goodbye...To boring slides and enjoy learning CSS with Interactive and Premium-looking slides. Most Importantly you get access to all of my Premium slides.\nBe able to build your own Dream Project.\nLearn about CSS Properties in a well-organized way.\nWhat do you mean by well-organized way?\nThis course has a separate section for each and every CSS Style. Yes, you will master a new CSS Style after each and every section. Great right.\nThe Exciting Part:\nThis CSS Mastery course will be constantly updated with a new section each and every week.\nAny questions raised in the Q&A forum will be answered within 24 hours.\nWhat you will learn throughout this course?\nWhat is CSS?\nAdding CSS to HTML\nCSS Color Values\nAdding Background-colors\nCSS Font Styling\nSpecificity\nPseudo Class\nInheritance\nChrome Developer Tools\nCSS Units\nBorder\nOutline\nBorder-Radius\nPadding\nBox-Sizing\nMargin\nBox-Modal\nPseudo Element\nDisplay\nBackground-Image\nPosition\nZ-Index\nTransform\nTransition\nTransform-Origin\nBox-Shadow\nOverflow\nOpacity\nVisibility\nCursor\nFlexbox\nFlex-Direction\nJustify-Content\nAlign-Items\nFlex-Wrap\nAlign-Content\nAlign-Self\nAnimations\n@Keyframes\n@Media\nAnd much more...\nCome and Join along with Alearnr to Master CSS.",
      "target_audience": [
        "Beginners with No Experience in CSS Styling.",
        "Web Developers who wants to learn about CSS3 with Real World Examples.",
        "Students who Love to create Professional-looking and Attractive Websites."
      ]
    },
    {
      "title": "The Complete Front-End Web Development Bootcamp",
      "url": "https://www.udemy.com/course/the-challenge-quiz-game-with-html-css-js/",
      "bio": "Master Front-End Web Development by Creating 20+ Hands-On Projects",
      "objectives": [
        "Start learning about JavaScript, HTML,CSS",
        "Dynamically generate HTML in JavaScript",
        "learn core JavaScript",
        "Work with local storage and save high score in local storage",
        "ES6 JavaScript features like arrow functions, const, let and template literal string",
        "How to use FlexBox, Animations and REM units in CSS",
        "Good technique of programming",
        "Project based teaching to charpen your HTML, CSS and JavaScript",
        "Modern styling with flexbox, CSS animation custom properties..."
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of HTML and CSS is a plus, but not a must!"
      ],
      "description": "Are you ready to become a web developer? Whether you're a complete beginner or looking to sharpen your coding skills, The Complete Web Development Bootcamp: HTML, CSS, & JavaScript is your ultimate guide to building stunning, responsive, and interactive websites from scratch.\nIn this hands-on course, you'll learn the fundamentals of web development using HTML, CSS, and JavaScript—the core technologies of the web. Through real-world projects and practical exercises, you'll gain the skills to design beautiful web pages, create dynamic user experiences, and build fully functional websites.\nYou’ll explore essential topics like semantic HTML, CSS Flexbox and Grid, responsive design with media queries, and JavaScript DOM manipulation. You’ll also learn how to handle events, validate forms, and create dynamic content, all while building interactive, user-friendly web interfaces. This step-by-step approach ensures that complex concepts are broken down into manageable lessons, making learning easy and enjoyable.\nThis course is project-based, meaning you’ll learn by doing. With 20+ hands-on projects, including a color flipper, interactive navbar, to-do list app, and more, you’ll gain practical experience while building a strong portfolio. Each project is designed to reinforce what you've learned and help you apply those skills in real-world scenarios. By the end, you’ll be confident in your ability to create professional websites and web applications.\nWhy This Course?\nProject-Based Learning: Apply your knowledge with 20+ hands-on projects, including a color flipper, counter app, interactive navbar, sidebar, modals, and more.\nStep-by-Step Guidance: Easy-to-follow lectures that break down complex concepts into simple, actionable steps.\nReal-World Skills: By the end of the course, you'll have a strong portfolio of projects to showcase your web development skills.\nWhether you want to start a career in web development, build your own website, or add new skills to your toolkit, this course is for you. By the end, you'll have a solid understanding of HTML, CSS, and JavaScript, along with a portfolio of projects to showcase your skills.\nJoin now and start your journey to becoming a web developer today!",
      "target_audience": [
        "Anyone who want to start working with javascript"
      ]
    },
    {
      "title": "JavaScript in Action JavaScript Projects",
      "url": "https://www.udemy.com/course/javascript-in-action-learn-javascript-projects/",
      "bio": "Guide to create JavaScript coded applications like an online calculator from scratch",
      "objectives": [
        "create amazing JavaScript applications",
        "use JavaScript in projects",
        "create an online calculator"
      ],
      "course_content": {},
      "requirements": [
        "access to computer",
        "basic JavaScript HTML and CSS"
      ],
      "description": "JavaScript is the most popular programming language online.  I've designed this course to show you some really amazing things that you can do with JavaScript.\nWithin this course you will learn to create an online JavaScript calculator application from scratch.  Learn how to create applications like this while learning more about using and applying JavaScript.\nJavaScript is easy to use and creating applications in JavaScript can add a lot of value to your websites.  Web visitors enjoy interaction and having the ability to interact with your web content.  I've been using and creating JavaScript applications for over 15 years and am always amazed at the capabilities it has.  You can do so many amazing things with JavaScript.\nWithin this course we show you how to add event listeners to classes, create and update calculations right on your webpage, and make updates to the application to provide more functionality.\nThe source code and instruction is included within this course.  This course content you will not find elsewhere, let's start learning JavaScript.... Let's begin.",
      "target_audience": [
        "web developers",
        "applications developers",
        "anyone who wants to learn more about JavaScript"
      ]
    },
    {
      "title": "The CSS and CSS3 Crash Course",
      "url": "https://www.udemy.com/course/the-css-and-css3-crash-course/",
      "bio": "The most in-depth CSS and CSS3 course on Udemy.",
      "objectives": [
        "To understand what CSS and CSS3",
        "To learn the basic techniques of CSS and CSS3",
        "To greatly advance your knowledge of CSS and CSS3",
        "To build your first website",
        "To build many more websites in the future"
      ],
      "course_content": {
        "Introduction to the Course": [
          "What Is CSS?",
          "Understanding CSS",
          "How CSS and HTML Work Together"
        ],
        "CSS and CSS3 Basics": [
          "Selectors (Part 1/4)",
          "Selectors (Part 2/4)",
          "Selectors (Part 3/4)",
          "Selectors (Part 4/4)",
          "Styling Links (Hyperlinks)",
          "Widths and Heights",
          "Positioning",
          "Centering a Container",
          "Display Types",
          "Hiding an Element",
          "Margins and Padding",
          "Overflow",
          "Element Stack Order (z-index)",
          "Cursors",
          "Box Sizing",
          "Color",
          "Font Basics",
          "Floats",
          "Clearfix",
          "Forcing Uppercase, Lowercase and Capitalisation",
          "Text Alignment",
          "Text Indenting",
          "Backgrounds",
          "Multiple Background Images",
          "Background Size",
          "Borders",
          "Border Images"
        ],
        "Your First CSS Projects": [
          "Build a Website (Part 1/3)",
          "Build a Website (Part 2/3)",
          "Build a Website (Part 3/3)",
          "Dropdown List Menu (Part 1/2)",
          "Pure CSS Drop-Down Menu",
          "Dropdown List Menu (Part 2/2)"
        ],
        "Intermediate CSS and CSS3": [
          "Horizontal Menu (Part 1/2)",
          "Horizontal Menu (Part 2/2)",
          "Vertical Menu",
          "Creating a Button",
          "Display Property",
          "Floating Elements",
          "Styling Headers",
          "Clearfix (For Clearing Floats)",
          "Styling Unordered Lists"
        ],
        "Advanced CSS and CSS3": [
          "Opacity",
          "Sprites",
          "Dashed Link Underline",
          "Rounded Borders",
          "Element Shadows (Box Shadow)",
          "Text Shadows",
          "Before and After Pseudo Elements",
          "Image Overlay Effect (Part 1/2)",
          "Image Overlay Effect (Part 2/2)"
        ],
        "2D Transformations": [
          "2D Transformations (Part 1/4)",
          "2D Transformations (Part 2/4)",
          "2D Transformations (Part 3/4)",
          "2D Transformations (Part 4/4)"
        ],
        "Fun Advanced Topics": [
          "Styling Tables (Part 1/2)",
          "Styling Tables (Part 2/2)",
          "Styling Form Elements (Part 1/2)",
          "Styling Form Elements (Part 2/2)",
          "Slide Out Navigation Part 1",
          "Slide Out Navigation Part 2",
          "Buttons",
          "Quick & Easy CSS Triangles",
          "Progress Bar",
          "Creating a 3D Cube with CSS3",
          "Create a CSS3 Avatar/Profile Picture Effect",
          "CSS Speech Bubble Comment Effect",
          "CSS Headline Background Effect",
          "Pure CSS Video Play Button",
          "CSS Icon Fonts"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer"
      ],
      "description": "Like us on Facebook and/or Follow us on Twitter. Message us to let us know you liked us, or Tweet us @sr_elearning.\nLink to Our Facebook Page\nLink to Our Twitter Profile\nStone River eLearning\n_____________________________________________________________________________________\nWith more video content than any CSS or CSS3 course on Udemy, you can be sure you'll learn everything you need without having to read hundreds of pages of text. No eBook here, just great video content.\nIf you have ever wanted to become a web developer, then you know you need to know both CSS and CSS3. It's your choice how you learn it. You can read through a textbook or eBook, or you can have your own personal tutor showing you how to do everything every step of the way. That's what this course is all about.\nIf you're interested in more programming, web development or mobile app development courses, Stone River eLearning has everything you need.\nHow the Course is Taught\nThis course is taught via a step-by-step tutorial system. You will start with tutorials for beginners who are new to CSS and CSS3 programming and move through progressively more difficult skills, including everything you need to know to build a fully functional, modern and sleek website.\nCourse Length\nThere are well over 11 hours of video lectures in this course. It is estimated that you would spend anywhere from 30 - 100 hours in total after viewing all the lectures to practice and master each skill on your own.\nWhy Take this Course?\nYou should take this course because it is comprehensive, easy to follow, inexpensive, fun and exciting! Web development is a huge industry, and if you really want to become an app developer, it starts with CSS and CSS3.",
      "target_audience": [
        "Beginning website developers",
        "Beginning website designers",
        "Experienced website developers",
        "Experienced website designers"
      ]
    },
    {
      "title": "Build Modern Web Layouts With CSS Flexbox",
      "url": "https://www.udemy.com/course/css-flexbox-m/",
      "bio": "Get a hands-on, in-depth look at building CSS Flexbox layouts",
      "objectives": [
        "Get a hands-on, in-depth look at building CSS Flexbox layouts.",
        "See how you can quickly and easily build even intricate layouts with minimal code.",
        "Create flexible, responsive layouts without the need for code hacking or media queries."
      ],
      "course_content": {},
      "requirements": [
        "Students should have a basic understanding of HTML and CSS, and be comfortable coding by hand and navigating through code."
      ],
      "description": "Once upon a time building functional, responsive web layouts required hacking, lots of JavaScript, and more than a few CSS floats. Then came Flexbox, a layout mode for CSS that got rid of all the headaches. This online course will get you up to speed on the latest version, introduce you new even better features, and help you get to grips with Flexbox in a hands-on, practical way.\nCreate and Manage CSS Flexbox Layouts\nTake an in-depth look at building CSS Flexbox layouts\nBuild intricate layouts with minimal code, quickly and easily\nDevelop flexible, responsive layouts without code hacking or media queries\nControl flex spacing, alignments and positioning\nGain a new perspective on CSS and web development\nLearn Fundamental Flexbox Concepts\nThis course is intended for those who have a working knowledge of HTML and CSS, and who are comfortable coding by hand and navigating through code. With an emphasis on in-depth, hands-on training, you'll learn the latest techniques for building and managing functional CSS-based web layouts.\nTo start off, you'll be introduced to fundamental Flexbox concepts and terminology, as well as the other essential knowledge you'll need to know before going further. From there, the lessons get progressively more hands-on and challenging. You'll cover flex containers, flow axis directions, flex widths, axis spacing and alignment, establishing element flexibility, working with nested flex containers, and more. Each section includes a practical exercise to put your skills to the test, and a quiz to help compound your knowledge.\nIf you want to push your HTML, CSS and web design skills further, if you want to learn the latest in CSS web layout techniques, or if you just want to know the secret to building responsive, mobile layouts with minimal code, then this online course is a must.\nAbout Flexbox\nFlexbox, or the CSS Flexible Box, is a layout mode in CSS that allows designers to build and manage website layouts quickly and easily. Arrange each page element and test on different screen sizes (i.e. desktop, mobile, tablet) and display devices to ensure your code behaves accordingly. It was created to replace float and table layout hacks, making life much easier for designers and developers everywhere.",
      "target_audience": [
        "This course is suited for students wanting to push their HTML, CSS, and web design skills further.",
        "This course is ideal for users who want to discover the latest techniques for building responsive, mobile layouts with minimal code.",
        "This course is perfect for web designers who want to learn the latest CSS web layout techniques.",
        "This course is targeted towards those who want a hands on approach to learning CSS Flexbox."
      ]
    },
    {
      "title": "Learn to Deploy your Angular NodeJS Application on Server",
      "url": "https://www.udemy.com/course/learn-to-deploy-your-angular-nodejs-application-on-server/",
      "bio": "Learn to upload your application on AWS Amazon Web Server as one combined App or as two seperated Apps from Scratch",
      "objectives": [
        "Learn how to Deploy your Application to a real Web Server",
        "2-ways to Upload your App to AWS Server",
        "Upload Angular and NodeJS as one Application - Integrated Approach",
        "Upload Angular and Node as seperated Application - Different Domains",
        "Create a NodeJS Server"
      ],
      "course_content": {},
      "requirements": [
        "No prior Knowledge required"
      ],
      "description": "You may have build your MEAN Stack application but you don't know how to deploy all these stuff to a real web server like the Amazon web Server. In this course we are going to see everything step by step and i will show you the options you have to deploy your MEAN Stack application to AWS from Scratch.",
      "target_audience": [
        "Everyone who want to learn how you can upload an Application",
        "Begginner Angular Developers",
        "Begginner NodeJS Developers"
      ]
    },
    {
      "title": "ASP.NET Core MVC - Build an E-Commerce Web Application 2025",
      "url": "https://www.udemy.com/course/aspnet-core-mvc-guide/",
      "bio": "Build clean web application using ASP.NET Core MVC, Entity Framework Core, Identity, SQL Server and Visual Studio 2022.",
      "objectives": [
        "Learn How to Build Web Applications using ASP .NET Core MVC",
        "Understand the Architecture and the Features of ASP .NET Core MVC",
        "Learn How to Install and Use Entity Framework to Access SQL Server Databases",
        "Create, Read, Update and Delete Data from SQL Server Database using Entity Framework",
        "Implement Pagination, Search and Sort Functionalities using Entity Framework",
        "Undestand the MVC Pattern and How to Create Models, Views and Controllers",
        "Learn Different Techniques to Pass Data from the Controller to the View",
        "Implement User Registration, Authentication and Role-based Authorization using Identity",
        "Edit the User Profile and Password, and Request Password Reset Tokens by Email",
        "Create and Store the Shopping Cart and Orders"
      ],
      "course_content": {
        "ASP.NET Core MVC Essentials": [
          "Project Structure",
          "Actions Views and Controllers",
          "Razor Syntax",
          "Loops in Razor Views",
          "Conditions in Razor Views",
          "Razor Directives",
          "Pass Data to View",
          "Tag Helpers",
          "Partial Views",
          "Layout Files",
          "Classic Forms",
          "Data Binding and Form Validation"
        ],
        "Perform CRUD Operations on Products": [
          "Introduction",
          "Create a new MVC project and a new database connection",
          "Add Entity Framework Packages",
          "Create and Register the ApplicationDbContext",
          "Create the Product Model",
          "Create and Fill the Database Table",
          "Read and Display the Product",
          "Create the ProductDto Model",
          "Create Products - Create the Form",
          "Create Products - Save the Product",
          "Update Products - Create and Initialize the Form",
          "Update Products - Save new Details",
          "Delete Products",
          "Add Pagination functionality",
          "Add Search functionality",
          "Sort functionality - Add Query Parameters",
          "Sort functionality - Sort the Products",
          "Sort functionality - Add Arrow",
          "Change Controller Route",
          "Add Admin Dropdown in the Navbar",
          "Change the website name and icon",
          "Home Page - Add the hero section",
          "Home Page - Add the newest products section",
          "StoreController - Read Products",
          "StoreController - Add Pagination",
          "StoreController - Add Search Sort and Filter Functionalities",
          "Read product details"
        ],
        "Registration, Authentication and Authorization": [
          "Introduction",
          "Install Identity package",
          "Create Identity Tables",
          "Add Identity Services to the Service Container",
          "Create Roles and Default Admin User",
          "User Registration - Create RegisterDto model",
          "User Registration - Create the Register Form",
          "User Registration - Create User Account",
          "Update the Navbar - Display Username and Role",
          "User Logout",
          "User Authentication - Create the Login Form",
          "User Authentication - Authenticate the user",
          "User Authorization and Role-based Authorization",
          "Display User Profile",
          "Update User Profile",
          "Update User Password",
          "Request Password Reset Link",
          "Send Emails",
          "Reset User Password",
          "Display Registered Users",
          "Display Registered Users - Add Pagination",
          "Display User Details",
          "Update User Role",
          "Delete User Account"
        ],
        "Shopping Cart and Orders": [
          "Introduction",
          "Create Entity Models and Tables",
          "Shopping Cart Storage Principle",
          "Add the Shopping Cart Icon To the Navbar",
          "Add Products to the Shopping Cart",
          "Read the Cookie on the Server and Display the Cart Size",
          "Shopping Cart - Display Items",
          "Shopping Cart - Create and Submit the Form",
          "Shopping Cart - Create Orders",
          "Shopping Cart - Increase Decrease and Delete Items",
          "Admin Orders - Display Orders to Admin",
          "Admin Orders - Add Pagination Functionality",
          "Admin Orders - Show Order Details",
          "Admin Orders - Edit Order",
          "Client Orders - Display Client Orders",
          "Client Orders -Show Order Details"
        ],
        "Paypal Payment": [
          "Add Paypal Payment",
          "Use Paypal Payment to Purchase Products"
        ],
        "Source Code": [
          "Source Code"
        ]
      },
      "requirements": [
        "Beginner knowledge of C#, HTML and Visual Studio 2022"
      ],
      "description": "This course is for Beginners to ASP.NET having some knowledge of C# or similar programming languages.\nIn this course, I will show you how to create a web application using ASP.NET Core MVC. You will understand the MVC pattern and you will be able to create Models, Views and Controllers.\nWe will use Entity Framework to perform CRUD (Create, Read, Update and Delete) operations and to implement advanced functionalities, such as pagination, search and sort.\nWe will use Identity to implement user Registration, Authentication and Role-based Authorization. Besides, we will add many useful functionalities, such as edit the user profile, update the user password, display the registred users, update the user role, delete the user account, and request a password reset token.\nAlso, we will create the shopping cart and orders. We will store the shopping cart into a cookie and we will use colored badges to track the order status.\nIn this course, you will learn:\n- The architecture of ASP.NET Core MVC\n- How to create Models, Views and Controllers\n- How to pass data from the controller to the view\n- How to create forms and bind models to the forms\n- How to validate form data using attributes and model binding\n- How to install and use Entity Framework to access SQL Server Databases\n- How to perform CRUD operations (Create, Read, Update and Delete) using Entity Framework\n- How to advanced functionalities: pagination, search and sort\n- How to upload images to the server\n- How to read application parameters from appsettings.json\n- How to use dependency injection: add services to the application container and request services from this container\n- How to install Identity and how to create Identity user and tables\n- How to create user Roles and how to register the Admin user\n- How to register, authenticate and authorize users\n- How to edit the user profile and password\n- How to request password reset token by email\n- How to display the registered users\n- How to edit the user role\n- How to delete the user account\n- How to create, read, update and delete the shopping cart\n- How to create orders and how to update the order status\n\n\nTo follow this course, you need to install the following tools\n- Visual Studio 2022 including two components: “ASP.NET and web Development” and “.NET Desktop development”\n- Microsoft SQL Server",
      "target_audience": [
        "Beginners who want to understand and use ASP .NET Core MVC to build advanced web applications"
      ]
    },
    {
      "title": "Learn Codeigniter Step by Step :Beginners Guide",
      "url": "https://www.udemy.com/course/learn-codeigniter-by-building-project/",
      "bio": "Learn Php Codeigniter and understand working with MVC and HMVC",
      "objectives": [
        "Learn Codeigniter Basics",
        "Learn to work with MVC",
        "Learn to Manage Layouts",
        "Learn Migrations",
        "Learn Codeigniter Customization",
        "Learn Advance Concepts",
        "Learn to work with HMVC",
        "Learn to DRY up your code",
        "Learn to write reusable code",
        "Learn the difference between MVC and HMVC",
        "Learn to create a project by using all the knowledge gained in the course"
      ],
      "course_content": {},
      "requirements": [
        "basic knowledge of html, css, javascript, php and some basic understanding of programming"
      ],
      "description": "This course is focused on teaching the most useful aspects of Codeigniter a well known php framework. This course not only teaches the basics but also teaches the advance concepts used by developers to make your php application development rapid in a professional manner.\nIt also teaches you the difference between concepts like MVC and HMVC and how to use both of them for application development.\nApart from that this course is also loaded with many techniques and methods that can help you write reusable code and DRY( Don't Repeat Yourself ) up your programs.\nAnd to bring it all together there is a project section in which the student will learn to build a project using the knowledge gained in the course.\nSo this course is suited for any type of student, doesn't matter if you are a beginner or an intermediate developer or an experienced campaigner you still can pick up the course and can make gains in your knowledge.",
      "target_audience": [
        "beginners, intermediate level students(developers) and even advance students can take this course"
      ]
    },
    {
      "title": "GDPR Basics Masterclass: Data Protection Training in 1 Hour",
      "url": "https://www.udemy.com/course/ness-m-gdpr-simplified-the-basics/",
      "bio": "Part 1 : Simplify GDPR - Data Privacy, Personal Data, Processing & EU Coverage Explained .. for Beginners",
      "objectives": [
        "What GDPR is about?",
        "Classify Personal Data",
        "Why Privacy is a big deal?",
        "Identify Processing activities",
        "Who is protected under GDPR?",
        "What Data Protection Roles exist?",
        "Which organizations need to comply?",
        "Set GDPR scope for your organization"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge needed - get started now!",
        "Beginners",
        "Experienced but Confused"
      ],
      "description": "GDPR Top-rated Masterclass\n* Experience the ultimate GDPR Masterclass — Top-rated, Expert-led, Content Creator-designed, Simplified for you & updated for 2025 *\n* Enroll today and start learning instantly! *\nData Privacy is important. So is GDPR (General Data Protection Regulation). It is the strictest privacy regulation in the world.\nWhen I first started on GDPR, I went through a humongous course on GDPR from a top reputed industry site, watched videos, read a lot of articles, browsed through the actual GDPR law. I still struggled with a whole set of nagging questions in my mind about GDPR. And, these were all basic questions that should have been answered in the courses, but they weren't. That's when I decided to make this course. A lot of effort went in to bring all the foundational topics, clarify the concepts, and then further simplify it for you. It targets the what, where, when, who and why. I simplify it all  - for you. Get the essential concepts right – this will impact how well you fare when you implement the GDPR for your organization.\nMotto - \"Make everything as simple as possible, but not just simpler.\" - Albert Einstein\nIt has thoroughly researched content and is one of the very few visually engaging courses available on GDPR. If you are new to GDPR Data Protection, you will find this course quite easy to understand. While if you have been struggling with the applicability & scope of GDPR, you would appreciate this course more.  This course is right for you!\nAgenda:\nPersonal data\nProcessing\nGeographical coverage\nJoin in today & begin your journey towards succeeding at GDPR.",
      "target_audience": [
        "Beginners who need to know about GDPR",
        "Anyone wanting to understand Data Privacy",
        "Everyone who handles privacy data as part of their work:",
        "> Developers, InfoSec professionals, Compliance analysts",
        "> Business analysts, Managers",
        "> Privacy consultants, Lawyers, Data Protection Officers"
      ]
    },
    {
      "title": "Git Essentials for Beginners (3 Courses in 1)",
      "url": "https://www.udemy.com/course/mastering-git-for-beginners-and-experts/",
      "bio": "Become a Git expert!",
      "objectives": [
        "Git Architecture",
        "Add, Delete, Move & Edit Files",
        "Revert/Undo File Changes",
        "Working with Branches",
        "Working with Tags",
        "Working with Aliases",
        "Ignoring Files",
        "Git Log Filtering",
        "Cloning a remote repository",
        "Merging",
        "Merging Types",
        "Merge Conflicts",
        "Branching Strategies",
        "Stashing",
        "Rebasing",
        "Searching",
        "Rewriting History",
        "Git Reset - Soft, Mixed and Hard"
      ],
      "course_content": {
        "> > > > > Course 1 : Git Essentials < < < < <": [
          "Course Overview"
        ],
        "Getting Started": [
          "Module Overview",
          "What is a Version Control System?",
          "VCS Types",
          "Little History",
          "What is Git? Why Git?",
          "Git Landscape"
        ],
        "Git Installation & Basic Concepts": [
          "Overview",
          "Git Installation - Ubuntu 20.04",
          "Git Installation - MAC",
          "Git Installation - Windows 10",
          "Git Completion",
          "Git Configuration",
          "Git Help",
          "Initializing a Git Repository & \".git\" Folder",
          "My First Commit",
          "Git Clone",
          "A Note on commit messages"
        ],
        "Git Architecture & Basic Operations": [
          "Module Overview",
          "Git Architecture (3 Stages) & Workflow",
          "Hash values (SHA-1)",
          "The HEAD pointer",
          "Add & Edit Files",
          "Move, Rename and Delete Files",
          "View Changes",
          "Single Step to Add & Commit",
          "\"add\" dry-run",
          "Git diff - Part 1",
          "Git diff - Part 2"
        ],
        "Revert The Changes": [
          "Module Overview",
          "Rollback File Changes",
          "Amend Commits",
          "Rollback a Commit",
          "Remove Untracked files"
        ],
        "Ignore Files": [
          "Module Overview",
          "Ignoring Files",
          "Track empty directories",
          "Ignore tracked files"
        ],
        "Git Branches": [
          "Module Overview",
          "Understanding Branches",
          "Create Branches & Switch",
          "Rename Branches",
          "Delete Branches",
          "Merging Branches",
          "Git Prompt Script"
        ],
        "Tags": [
          "Module Overview",
          "What are Tags? (& Types)",
          "Create, List & Delete Tags",
          "Tags folder in \".git\"",
          "ReTagging/Replacing Old Tags",
          "Checkout Tags & Detached HEAD"
        ],
        "Aliases": [
          "Module Overview",
          "Git Aliases",
          "Git Alias Sample List"
        ],
        "Remote Repository & Commit Log Filtering": [
          "Module Overview",
          "Clone a remote repository",
          "Review the cloned repo",
          "Commit Log Filtering - Part 1",
          "Commit Log Filtering - Part 2",
          "Commit Log Filtering - Part 3"
        ]
      },
      "requirements": [
        "Basic Linux Command-line"
      ],
      "description": "Version Control has always been an integral part of the software development lifecycle, enabling programmers to restore previous versions and manage releases effectively. Git, as a popular open-source distributed version control software, excels in handling hundreds of branches and coordinating work among numerous programmers efficiently. This course will teach you the fundamentals of Git, enhancing your understanding of platforms like GitHub and BitBucket.\nYou'll start by learning how to install Git and grasp all its fundamentals through a step-by-step approach. The course covers Git architecture, helping you understand its core principles. You will create Git repositories, add, change, and delete files, commit changes, compare commits, and review commit logs. Additionally, you'll learn how to undo changes, ignore files based on names, regular expressions, and folder names, and efficiently use the git log command to filter commit logs.\n\n\nLearning Objectives:\nDifferent types of Version Control Systems\nInstalling Git on Linux, MAC, and Windows\nGit Architecture - The Three Stages\nGit States\nGit Workflows\nInitializing a repository\nGit Configuration\nAdding, Modifying, Moving & Deleting files\nAdding Commit messages\nTracking files\nViewing commits and comparing versions\nUndoing changes\nRetrieving previous versions\nIgnoring files by name, folders & regular expression\nCreating Branches\nMerging Branches\nMerge Conflicts\nCloning Remote Repository\nBranching Strategies\nStashing\nRebasing\nSearching\nRewriting History\nGit Reset - Soft, Mixed and Hard\nFormat:\nOnline, self-paced learning with interactive lessons\nHands-on projects to reinforce learning\nCertification:\nEarn a recognized certificate upon completion\nWith the perfect blend of animations and hands-on demos, the concepts are easy to grasp!",
      "target_audience": [
        "Cloud Engineers & Architects",
        "DevOps Engineers & Architects",
        "Developers",
        "Programmers",
        "Software Managers",
        "Modern Operations Managers"
      ]
    },
    {
      "title": "Full Stack - React Django DRF Channels Project - djChat",
      "url": "https://www.udemy.com/course/full-stack-react-django-drf-channels-project-djchat/",
      "bio": "React, Typescirpt, Django, Channels and DRF. Building a live chat application.",
      "objectives": [
        "Develop Django projects with RESTful APIs using Django REST Framework (DRF) and efficiently manage project source control.",
        "Build a robust chat server administration API with features like server filtering, channel management, and related data retrieval.",
        "Create visually appealing front-end interfaces using React, React Router, and Material-UI for seamless user experience.",
        "Integrate external APIs into Django projects using Axios, handle CORS, and implement CRUD operations for efficient data handling.",
        "Implement secure authentication mechanisms using djangorestframework-simplejwt, including token-based login, registration, and WebSocket authentication."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Build Technical Preview"
        ],
        "Setup Guides": [
          "[Windows] Installing Python",
          "[Windows] Visual Studio Code Induction",
          "[Windows] Creating Virtual Environments",
          "[macOS] Visual Studio Code Induction",
          "[macOS] Installing Python",
          "[macOS] Creating Virtual Environments"
        ],
        "Django DRF Project Initiation": [
          "Source Control: Initiating Project Source Control",
          "Build: Create a New Django DRF Project",
          "Build: Configuring Environment Variables for your Project",
          "Linting and Formatting: Configuring Visual Studio Code for Black Formatting",
          "Linting and Formatting: Configuring Visual Studio Code for Flake8 Liniting",
          "Source Control: Create your first commit in a Git repository"
        ],
        "Chat Server Administration API": [
          "Build: Initiate Chat Server Administration App",
          "Build: Creating a Django Custom User Model (AbstractUser)",
          "Build: Chat Server Administration Models (Database Tables and Fields)",
          "API Documentation: Configuring DRF-Spectacular with Swagger UI: Installation and",
          "Build: Configuring Default Authentication Classes in Django DRF",
          "Build: Creating an API Endpoint for Filtering Servers by category",
          "Build: Creating an API Endpoint for Filtering Servers by User",
          "Build: Creating an API Endpoint for Filtering Servers by Server ID",
          "Build: Creating an API Endpoint for Filtering Servers by Quantity",
          "Build: Returning Related Data - Server Associated Channels",
          "Build: Creating an API Endpoint for Filtering Servers and Returning Annotation o",
          "ChatGPT: Creating Code Comments with ChatGPT",
          "ChatGPT: Creating DocStrings with ChatGPT",
          "API Documentation: Creating an API Endpoint Decorator for Detailing Endpoints",
          "Build: Configuring Django to Handle Storing Images",
          "Build: Model Refactor for Icons and Banners in Django Model (Category)",
          "Build: Model Refactor for Icons and Banners in Django Model (Server)",
          "Building: Creating a Django Model Validation Class for Image Field Creation and",
          "Source Control: Commit and Merge"
        ],
        "Front End Templating": [
          "Build: Create a new React Project with Vite",
          "Build: Pages Directory and Home Component",
          "Build: React Routing Introduction with React Router",
          "Build: Install MUI and integrate it into the existing project",
          "Build: Creating the Primary App Bar (Part-1) Framework",
          "Build: Integrating Google Fonts into an existing React/MUI project",
          "Build: Responsive Fonts",
          "Build: Creating the Primary App Bar (Part-2) Responsive",
          "Build: Primary Draw (Part-1) Framework",
          "Build: Primary Draw (Part-2) Functionality",
          "Build: Secondary Draw (Part-1) Framework",
          "Build: Main Component (Part-1) Framework"
        ],
        "API Integration": [
          "Build: Install Axios and create first API request (CORS Intro)",
          "Build: Configuring Cross-Origin Resource Sharing (CORS)",
          "Build: Create a global configuration file",
          "Build: Axios Interceptor",
          "Build: Create a CRUD Hook",
          "Build: Primary Draw Component - Popular Servers",
          "Build: Secondary Draw Component - Explore Categories",
          "Build: Main Component - Exploring Servers",
          "Build: Primary App Menu - Explore Categories",
          "Build: Dark Mode"
        ],
        "Building Chat Services": [
          "Build: Installing Django Channels",
          "Build: Installing and Managing Uvicorn",
          "Build: Implementing WebSockets - Routing",
          "Build: Channel Consumer + Sending and Receiving Messages",
          "Build: Towards Multiple User Chat Rooms",
          "Build: Server Page Templating",
          "Build: Implementing Server Channels",
          "Build: Switching Chat Rooms (Channels) in a Server",
          "Build: Implementing Channel Message History",
          "Build: Server Landing Page",
          "Build: Templating - Dynamic Channel Selection",
          "Build: Templating - Message Template",
          "Build: Templating - Message Input",
          "Build: Templating - Message Scrolling",
          "Build: Templating - Message DateTime"
        ],
        "Authentication": [
          "Build: Installing djangorestframework-simplejwt",
          "Theory: Refresh and Access Tokens",
          "Build: Creating the Login Form",
          "Build: Authentication Context and Authentication Services",
          "Build: Protecting API Endpoints",
          "Build: Implement Protected Routes",
          "Build: Logging Out Users",
          "Build: JWT Interceptor - Using Refresh Token",
          "Theory: LocalStorage vs HttpOnly Cookie",
          "Build: Customising Simple JWT - HTTP Only Authentication",
          "Build: JWTAuthentication Class Customisations",
          "Build: Returning the User ID - Subclassing JWT Serializer",
          "Build: WebSocket Authentication",
          "Build: WebSocket Refresh Access Token",
          "Refactoring: useChatServices Custom Hook",
          "Refactoring: Incorporating Custom Hooks to allow access to the Router",
          "Build: Removing HTTP Only Cookies on Logout",
          "Build: Handling Login Form Validation",
          "Build: Registration Form"
        ],
        "Extending Chat Services": [
          "Build: Server Membership",
          "Build: Server Membership Chat Restrictions"
        ]
      },
      "requirements": [
        "Prior experience in using the Django framework would be advantageous",
        "Knowledge of relational database principles would be advantageous",
        "Having a computer would definitely be advantageous"
      ],
      "description": "The course focuses on building a chat server administration API and integrating it with a front-end templating framework. It also covers API integration and building chat services with features like authentication.\nThe first module covers source control and project initiation, including creating a new Django DRF project and configuring environment variables. It also teaches configuring Visual Studio Code for linting and formatting.\nThe second module focuses on building a chat server administration API. It covers generating names, designing chat servers, and creating the necessary models and database tables. It also includes configuring API documentation and creating API endpoints for filtering servers and returning related data.\nThe third module introduces front-end templating with React. It covers creating a new React project, routing, integrating Material-UI, and building components like the app bar, primary draw, and principal component.\nThe fourth module covers API integration using Axios. It teaches making API requests, configuring Cross-Origin Resource Sharing (CORS), and creating a CRUD hook. It also includes building components for exploring popular servers and categories.\nThe fifth module focuses on building chat services using Django Channels. It covers installing and configuring Channels, implementing web sockets, and creating chat room functionality. It also includes templating for server pages and implementing message history.\nThe sixth module covers authentication using the djangorestframework-simplejwt library. It covers token-based authentication, creating login and registration forms, protecting API endpoints, and implementing WebSocket authentication.\nThe final module extends chat services with additional features.\nThe course provides a comprehensive guide to building a Django DRF project with chat server administration, integrating with a front-end framework React, and implementing essential features like authentication and chat functionality.\n\n\nTrademark Usages and Fees Disclosures:\nUsage of Django Logo: The Django logo used in this product is for identification purposes only, to signify that the content or service is Django-related. It does not imply that this product is officially endorsed by the Django Software Foundation (DSF) or the Django Core team as representatives of the Django project.\nFees Disclosure: We would like to clarify that 100% of the fees will be retained by the author to support the ongoing development and maintenance of this product. Currently, 0% of the fees, if applicable, will be contributed back to the DSF as a donation to further support the Django community.\nNote: The Django name and logo are registered trademarks of the Django Software Foundation, and their usage is subject to the Django Trademark License Agreement.\nUsage of React Logo: The React logo used in this product is for identification purposes only, to signify that the content or service is Reactjs-related. It does not imply that this product is officially endorsed by the logo licensor. Copyright © Facebook Licensed under Creative Commons Attribution-ShareAlike 1.0 Generic (CC BY-SA 1.0).",
      "target_audience": [
        "Beginners, Developers, Students, and Enthusiasts new to the React and Django Framework",
        "Developers, Students, and Enthusiasts looking to refresh their knowledge of React, Django, DRF and Django Channels"
      ]
    },
    {
      "title": "Angular 7 with Angular Material and Firebase Cloud Firestore",
      "url": "https://www.udemy.com/course/angular-firebase-firestore/",
      "bio": "Learn Angular 7+ by example with Cloud Firestore and Angular Material. Includes CRUD, Authentication, Routing, HTTP.",
      "objectives": [
        "Build web apps using Angular 7+",
        "How to use the Angular CLI",
        "Add styling using Angular Material",
        "Generate Angular modules, forms, components, and routes",
        "Retrieve data from the OpenWeatherMaps API",
        "Integrate Google Maps API",
        "Work with the Cloud Firestore NoSQL Database",
        "Authenticate users",
        "Store and retrieve user's data",
        "Perform CRUD operations",
        "Deploy to production on a live URL!"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "App Demo",
          "Keeping Updated (Angular 7+)"
        ],
        "Understanding NoSQL and Firestore": [
          "Module Intro",
          "NoSQL Databases Explained",
          "Cloud Firestore Features"
        ],
        "App Setup": [
          "Module Intro",
          "Overview of Technologies",
          "App Setup",
          "App Structure",
          "Angular Material",
          "Toolbar"
        ],
        "Weather Module": [
          "Module Intro",
          "Weather Module Seutp",
          "Weather Routing",
          "Search Form and Card",
          "Open Weather API Setup",
          "Display Open Weather Data",
          "Transform Response",
          "Error Message",
          "Property Bag Service",
          "Google Maps"
        ],
        "Firebase Setup": [
          "Module Intro",
          "Overview of Firebase and AngularFire",
          "Firebase Setup",
          "Add Authentication"
        ],
        "User Authentication": [
          "Module Intro",
          "User Module Setup",
          "User Service & Toolbar",
          "Login and Profile Page",
          "CSS Fixes"
        ],
        "Firestore CRUD": [
          "Intro to Module",
          "Firestore Data Structure",
          "City Interface",
          "Create Form to Edit Cities",
          "Saved Cities Routing",
          "Add City - Service Logic",
          "Add City - Component Logic",
          "Get User Cities",
          "Display User Cities",
          "Update City - Component",
          "Update City - Service",
          "Delete a City"
        ],
        "Secure and Deploy": [
          "Intro to Module",
          "Security Rules - Part 1",
          "Security Rules - Part 2",
          "Enable Persistence",
          "Deploy!",
          "NG Update"
        ]
      },
      "requirements": [
        "Helpful to know the basics of Angular",
        "You should have NodeJS installed"
      ],
      "description": "Learn to build blazing fast single-page web apps using Angular, Angular Material and Cloud Firestore database.\nThis course is made in a learn by example format.  You will use the Angular CLI to build a dynamic and interesting application.  Once complete, you will create a production build and push your application to a live URL.\nApplication Features Include:\nAuthentication, CRUD, Data Persistence to Firestore, App Deployment\n\n\nWho is this course for?\nMade with the beginner in mind, this course is structured to help you fully grasp every terminal command and line of code.\n\n\nWhat Angular concepts will I learn?\nYou will learn about all the major concepts needed to build interesting apps, including:\nForms, Routing, HTTP, Components, Modules and Interfaces\n\n\nWhich external libraries are covered?\nThe app we build will include the following libraries:\nAngular Material with Flex-Layout for styling, Google Maps, AngularFire for Firestore, Ngx-Auth-FirebaseUI for Authentication\n\n\nWhich API's will be used?\nWe will be using the OpenWeatherMaps API to request real-time city data.  Then persist this data to our Firestore database for logged in users.\n\n\nWhat skills will I have once I have completed?\nAfter completing this course, you will have a strong understanding of Angular 7+ with typescript.  This includes how to structure your application files and folders, how to use the Angular CLI and what is considered best practices when building Angular apps.  Additionally, you will be able to create production ready applications that authorize users, are secure and persist data.",
      "target_audience": [
        "Anyone interested in learning how to build apps using Angular and Firestore.",
        "This course is made with the beginner in mind."
      ]
    },
    {
      "title": "Node.Js: Learning Koa.Js By Building REST APIs",
      "url": "https://www.udemy.com/course/learning-koajs-by-building-rest-apis/",
      "bio": "The complete guide to build REST APISs with Koa.Js, Sequelize And Mysql",
      "objectives": [
        "Learn how to build REST APIS in Nodejs",
        "Learn how to documentation for REST API",
        "Learn how to implement JWT Authentication"
      ],
      "course_content": {
        "Koa.js Fundamentls": [
          "Getting Setup",
          "Source Code",
          "What is Koa",
          "Setting Up KoaJs",
          "Asyn/Await Demo",
          "Adding Middleware",
          "Debugging In VS Code",
          "Debugging In Webstorm",
          "Debugging In Chrome",
          "Understanding Application Object",
          "Understanding Context Object",
          "Understanding Req and Res"
        ],
        "Building API in Koa.js": [
          "Challenge Setup koa-router",
          "Solution: Setup koa-router",
          "Challenge: GET Posts Endpoint",
          "Solution: Get Posts Endpoint",
          "Challenge: Add New Post",
          "Solution: Add new post",
          "Challenge: Get Post By Id",
          "Solution: Get Post By Id",
          "Challenge: Delete Post By Id",
          "Solution: Delete Post By Id",
          "Challenge: Update Post By Id",
          "Solution: Update Post By Id",
          "Understanding Routing in Koa",
          "Understanding bodyParser"
        ],
        "Integrating Koa with Sequelize.js": [
          "What is Sequelize",
          "Database Design",
          "Setup Project",
          "Adding Sequelize",
          "Creating Company Model",
          "Adding Controllers And Routes",
          "Creating New Company",
          "Find All Companies",
          "FindOne Company",
          "Delete Company By Id",
          "Update Company By Id"
        ],
        "Adding Relationship Between Models": [
          "One To Many Relationship Between Job And Company",
          "Creating Jobs Endpoint",
          "Populating Jobs with Companies",
          "Adding Many to Many Relationship",
          "Creating New Application",
          "Find All Jobs",
          "Debugging Model.create method",
          "Debugging FindAll Method"
        ],
        "Authentication In Koa": [
          "JWT Authentication Workflow",
          "Signup New User",
          "Encrypt the User Password",
          "Creating JSON Web Token",
          "Adding Policy to Routes",
          "Relationship between User and Company",
          "Migrations Quick Demo"
        ],
        "Adding Documentation In Koa": [
          "Serving Static Files",
          "Adding Documentation for Signup",
          "Adding Documentation for Login",
          "Documentation for Jobs Endpoints",
          "Documentation for Compnaies Endpoints"
        ],
        "Bonus": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript required",
        "Basic knowledge of Nodejs required"
      ],
      "description": "What is Koa.js?\nKoa is a new web framework designed by the team behind Express, which aims to be a smaller, more expressive, and more robust foundation for web applications and APIs. Through leveraging generators Koa allows you to ditch callbacks and greatly increase error-handling. Koa does not bundle any middleware within core, and provides an elegant suite of methods that make writing servers fast and enjoyable.\nDoes Koa replace Express?\n\nKoa is more like Connect, but a lot of the Express goodies were moved to the middleware level in Koa to help form a stronger foundation. Koa makes middleware more enjoyable and less error-prone to write, for the entire stack, not just the end application code.\nTypically many middleware would re-implement similar features, or even worse incorrectly implement them, when features like signed cookie secrets among others are typically application-specific, not middleware specific.\nWhy is not Koa Express4.0?\nKoa is a pretty large departure from what people know about Express, the design is fundamentally much different, so the migration from Express 3.0 to this Express 4.0 would effectively mean rewriting the entire application, so we thought it would be more appropriate to create a new library.\nWhy you should learn Koa?\nPromise based flow in Koa\nNo Callbacke hell in Koa\nBetter error handling through try/catch in Koa\nKoa is more modular\nBetter user experience in Koa\nProper stream handling in Koa\nWhat you will learn in this course\nFundamentals of Koa\nBuilding API from scratch in Koa\nIntegrating Koa with Sequelize\nHow to use Mysql with Koa\nAdding relationship between models in Sequelize\nAdding authentication in Koa and Sequelize\nAdding documentation for REST APIS in Koa",
      "target_audience": [
        "Developers who want to learn how to build APIS with Nodejs",
        "Students who want to learn Koa framework",
        "Students who want to learn Sequelizejs",
        "Developers who want to learn how to add documentation for REST APIS"
      ]
    },
    {
      "title": "ASP.NET Core MVC - A Step by Step Course",
      "url": "https://www.udemy.com/course/aspnet-core-mvc-course/",
      "bio": "Master ASP NET Core MVC from the Experts. A Step by Step practical course to learn ASP.NET Core MVC easily",
      "objectives": [
        "Gain insights to the Fundamentals and Concepts of ASP .NET CORE MVC",
        "Acquire sufficient knowledge on role of Model, View and Controller in integrating them to develop complete web application.",
        "Client Side Development using Gulp, Grunt and Bower.",
        "Learn Razor Syntax",
        "Building Custom Model Binders and Model Validation",
        "Dependency Injection into Controllers",
        "Testing controllers",
        "Working with multiple environments",
        "Implement security in ASP .NET MVC applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Structure"
        ],
        "Fundamentals": [
          "MIddleware",
          "Static Files",
          "Routing",
          "Error Handling",
          "Configuration",
          "Logging",
          "File Providers",
          "Dependency Injection",
          "Working with multiple environments",
          "Hosting",
          "Sessions and Http Context",
          "Request Features",
          "Choose between ASP.NET and ASP.NET Core"
        ],
        "MVC - Razor Syntax": [
          "Razor Syntax"
        ],
        "MVC - Views": [
          "View Compilation",
          "Layout",
          "Tag Helpers"
        ],
        "MVC - Model Binding": [
          "Model Binding"
        ],
        "MVC - Model Validation": [
          "Model Validation"
        ],
        "MVC - Controllers": [
          "File Uploads",
          "Dependency Injection into Controllers"
        ],
        "MVC - Advanced": [
          "Filters",
          "Areas",
          "Formatting Response Data"
        ],
        "Testing Controllers": [
          "Review Project",
          "Unit Tests",
          "Integration Tests"
        ],
        "Client-Side Development": [
          "Using Gulp",
          "Using Grunt",
          "Using Bower"
        ]
      },
      "requirements": [
        "A computer with Windows, Linux, or Mac OSX Operating System",
        "Visual Studio 2017",
        "Basic ASP .NET Programming Knowledge"
      ],
      "description": "ASP.NET Core MVC is Microsoft’s next-generation, open-source, and cross-platform framework. It’s designed from the ground up to be fast, flexible, modern, and work across different platforms.\nThis course will cover the fundamentals of what you need to know to start building your first ASP.NET Core application with the MVC framework.\nASP.NET Core is Built from the ground up and is a significant redesign of ASP.NET.  It provides an optimised development framework for apps that are either run on-premises or deployed to the cloud.\nThis ASP.NET Core MVC training course is prefect for .NET developers who are new to the MVC design pattern or want to explore the ever-evolving Microsoft Web Development stack.\nAt the end of ASP.NET CORE MVC Training course, you will be able to:\n* Gain insights to the Fundamentals and Concepts of ASP.NET CORE MVC * Acquire sufficient knowledge on role of Model, View and Controller in integrating them to develop complete web   application. * Learn Razor Syntax * Building Custom Model Binders and Model Validation * Dependency Injection into Controllers * Client Side Development using Gulp, Grunt and Bower. * Testing controllers * Working with multiple environments * Implement security in ASP.NET MVC applications.\nASP.NET Core MVC is one of the most popular asset for software development industry. Knowing ASP.NET CORE MVC can get you a nice job with a decent salary or if you are already working, you may get a good raise in salary.\nJoin in, As for learning ASP.NET Core MVC, this course is the authority and equally important you will get a certification of completion that validates your skills.\nFeel forward to have a look at course description and demo videos and we look forward to see you inside.",
      "target_audience": [
        "Anyone who wants to learn ASP .NET CORE MVC"
      ]
    },
    {
      "title": "Starting with Firebase",
      "url": "https://www.udemy.com/course/starting-with-firebase/",
      "bio": "JavaScript web and mobile application development",
      "objectives": [
        "Code a Firebase JavaScript app with an Online IDE",
        "Understand and use of Firebase for JavaScript projects",
        "Work with Firebase's Real-time Database",
        "Use Cloud Functions to extend Firebase",
        "Authenticate users with 3rd party providers",
        "Learn to use Cloud Messaging to communicate with clients",
        "Implement Email/Password Authentication",
        "Create a real-time Trollbox with Firebase",
        "Understand what Firebase for JavaScript is all about, and how it can help you as a developer ... and much, much more!"
      ],
      "course_content": {
        "Starting with Firebase": [
          "Introduction",
          "Firebase Defined",
          "Firebase and GCP",
          "A Mobile Solution",
          "Firebase for JavaScript"
        ],
        "Firebase Features": [
          "Introduction",
          "Authentication",
          "Realtime Database",
          "Cloud Functions",
          "Cloud Messaging"
        ],
        "A Firebase Project": [
          "Introduction",
          "Google Authentication",
          "Database Integration",
          "Trollbox Implementation",
          "Cloud Functions Translator"
        ],
        "Additional Features": [
          "Introduction",
          "Additional Database Operations",
          "Firebase Hosting",
          "User Managed Administration",
          "Wrap up"
        ]
      },
      "requirements": [
        "Before taking this course, a student should ideally (but not absolutely) have some experience in",
        "Creating web UI’s with normal Javascript tools (i.e. jQuery, Bootstrap, ASP NET, AngularJS, etc.) Integrating databases and JavaScript applications (i.e. mySQL, MongoDb, Postgres, etc.) JavaScript development of complete web app solutions.",
        "FIREBASE EXPERIENCE IS NOT REQUIRED!!!"
      ],
      "description": "Any IT professional or hobbyist anticipating a solid understanding of how Firebase works in JavaScript web and mobile applications and desires an understanding of Firebase's suite of features (including its real-time database, user authentication options, Cloud Function serverless back-end integration, and Cloud Messaging features) needs to go through this course to leverage Firebase in new or existing web projects.  Anyone desiring to learn how Firebase solutions are designed, configured, and developed needs the knowldege and practice presented in this course.  This not only includes web, mobile, and service application developers, but also architects, UI designers, testers, and administrators. This course provides a solid understanding of how to get Firebase for JavaScript projects up and running.",
      "target_audience": [
        "This course was built for JavaScript developers who create data-driven solutions for mobile and the web.",
        "This course is designed for those developers who want to design and prototype JavaScript web apps without the hassle of normal conventions, including database integration, authentication, hosting, and server-side logic. Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how Firebase is designed and used to provide robust JavaScript applications.",
        "This course IS NOT intended for native mobile Android or iOS developers. The content presented is in the context of Firebase JavaScript development for web and mobile web applciations."
      ]
    },
    {
      "title": "Google Apps Google Script - Content System Web App Project",
      "url": "https://www.udemy.com/course/google-script/",
      "bio": "Learn to Build a custom web application using Google Scripts connecting Google Apps together",
      "objectives": [
        "Create Google Docs with script",
        "Send gmail emails with Google Script",
        "Translate Google docs to different languages",
        "Use Google sheets to store data and access data",
        "Create web apps using Google Script"
      ],
      "course_content": {
        "Introduction to Google Script": [
          "Introduction to Creating webapps with Google Script",
          "What is Google Scripts",
          "Setup Google account open script editor",
          "How to Create a Google Doc with Google Script",
          "Access existing document and add content Google Script",
          "Setup Triggers Run script using Google Script",
          "Run method to copy current content and output as bold Google Script Doc",
          "Change text attributes output different colors Google Scripts",
          "Link more google services into your Script Use JavaScript Methods",
          "Google Scripts Send Email",
          "Google Script Source Code Examples",
          "Google Script Resources"
        ],
        "Google Sheets get data with App Script launch web apps": [
          "Use Google Sheets as a webapp with Data",
          "Google Sheet data into local application jQuery",
          "Source Code accessing Google Sheet",
          "OnOpen Setup default buttons Google Script",
          "Get Sheet values into object",
          "Output data from spreadsheet",
          "Source Code output as HTML",
          "Popup HTML file within Google Sheet",
          "Pass data Object to HTML page Google Script",
          "Pass Sheet data as object array into HTML page Google Script",
          "output content from sheet get each value",
          "Source Code",
          "Deploy as Web App",
          "Source Code GS",
          "Source Code Index.html"
        ],
        "Portal Gateway Project with Content System using Apps Script": [
          "Custom portal setup Google Scripts",
          "Create Alert with prompt response shown in sidemenu",
          "Source Code Sidemenu response",
          "Setup testing popup modal with content Google Script",
          "Setup user portal entry page",
          "Dynamic Drop down content from Google Sheet",
          "Pass Google Sheet data to Frontend Google Script",
          "Generate home page content from google sheet data",
          "Send data to Google Script for processing",
          "Generate Page Content Google Sheet",
          "Project Source Code Google Script",
          "Project Source Code index.html",
          "Callback webpage builder",
          "Bug Fix and Tweak output pages",
          "Return row contents using Google Script",
          "Add in validation check for email addresses",
          "Tweaks and Bug Fixes Google Script",
          "Deploy as webapp Google Script Application",
          "Code review Index.html",
          "Index Source Code",
          "Code Review Code Google Script",
          "Source Code Code.gs Google Script"
        ],
        "Bonus Content Sample code and exercises": [
          "Google Apps Script Coding Guide and examples Guide",
          "Resources",
          "Apps Script how to create a Doc with Code",
          "reading Data from Sheets",
          "Additional Course Resources: Access to Downloads, Applied Examples"
        ]
      },
      "requirements": [
        "JavaScript",
        "HTML CSS",
        "Google Account",
        "jQuery",
        "Bootstrap"
      ],
      "description": "Learn how to build Web Apps with Google Script\nIncrease the power of your favorite Google apps — like Calendar, Docs, Drive, Gmail, and Sheets.  Apps Script lets you do more with Google. All on a JavaScript platform in the cloud.\nIf you know JavaScript you can jump right in and start creating web apps connecting all of your Google application together.   Automate your work you will be amazed at how easy it is to work with Apps Script.\nJavaScript is a prerequisite to this course!\nCourse Lessons will demonstrate how to use Google Script\nLearn what Google script is and how to write code with it\nCreate a Google Doc with one line of code\nUpdate existing Google Docs\nSetup up automation with Triggers\nCopy content from your Google Doc\nChange colors and text within your Google Doc\nLink to other Google apps\nTranslate your Google Doc in One line of Code!\nSend your Google Doc info as an email through Gmail\nBuilding a Webap\n\nConnecting your Google Sheet Data\nAccessing Sheet data via a JSON feed\nConnecting your Sheet data to a local application using AJAX\nHow to add Bootstrap and jQuery into your Google App\nHow to create popup modals and dynamic interaction\nDeploy your first web app\nBuild a Custom Content System driven from Google Sheet data\nAdd Alerts and interactive dialog\nSetup HTML page\nAdd Bootstrap 4 and jQuery to your app\nCreate a dynamic drop list from Google Sheets\nGenerate a home page of content from Sheets\nSend data back to GS to callback\nGenerate HTML output from Google Sheets data\nProvide Access control of content\nHow to bug fix and tweak your application\nGet a web url for your application\nCheck and authenticate users\nOutput content from Google Sheet data\nCode review and output\nTaught by an instructor with over 18 years of web development experience.  I'm here to help you learn about Google Scripts and ready to answer any questions you might have.\nYou will be amazed at what you can do with Google Scripts, join now to start creating your own applications today.\nPlease note that this is a project based course and the scope of the course is to use technologies like HTML, CSS, JavaScript, jQuery, Bootstrap to create the project.  All of the source code is included.",
      "target_audience": [
        "JavaScript application developers",
        "Anyone who wants to do more with Google Apps",
        "Anyone who wants to learn more about connecting Google Apps together"
      ]
    },
    {
      "title": "Build a web-shop in React MERN Full Stack [2024 Update]",
      "url": "https://www.udemy.com/course/learn-to-build-an-e-commerce-app-with-react-and-chakra-ui/",
      "bio": "Build a full stack e-commerce platform from scratch with React, Redux, Express, MongoDB [MERN Stack + Chakra UI]",
      "objectives": [
        "Programming in JavaScript using ReactJs",
        "Learn building applications with Chakra UI",
        "Modern Redux with ReactJs",
        "Version control using Git (Github)",
        "Building API's with Express & Node",
        "Full stack software engineering / Web development",
        "Creating e-commerce shops for any kind of products",
        "Formik & Yup for easy form validation",
        "React hooks",
        "React routing",
        "Json web tokens (jwt)",
        "User login and registration back to front",
        "Password hashing",
        "MongoDb set up",
        "Easy & free deployment",
        "Object data mapping",
        "Postman",
        "REST API's",
        "Website administration",
        "PayPal Payment",
        "Redux Js Toolkit",
        "Email address verification",
        "Google Authentication for easy login & registration",
        "Password reset",
        "Stripe Credit Card Payment Checkout"
      ],
      "course_content": {
        "Introduction": [
          "App Demo"
        ],
        "Installing Necessary Tools": [
          "Node",
          "Git",
          "Visual Studio Code",
          "Visual Studio Code Extensions",
          "Prettier Settings"
        ],
        "Project Initialization": [
          "Project Init",
          "Backend Init",
          "Installing Dependencies",
          "Index js",
          "Mongo DB Setup",
          "Mongo DB Compass",
          "Product Model",
          "Product Route",
          "Version Control via Git",
          "If You Get Stuck"
        ],
        "Chapter 1 - Products & Redux Setup": [
          "Chapter One - Intro",
          "Cleaning Up Client Directory",
          "Getting Started With Chakra UI",
          "First Chakra UI Box",
          "Product Cart Part 1",
          "Product Card Part 2",
          "Product Card Part 3",
          "Product Card Part 4",
          "Product Card Part 5",
          "Concurrently",
          "Bable Plugin Warning Fix",
          "Redux Intro",
          "Redux Store",
          "Products Slice",
          "Product Actions",
          "Redux Devtools",
          "Dispatchers & Selectors",
          "Handling Images & Loading",
          "Pushing Our Code To Github",
          "Checkout My Branch"
        ],
        "Chapter 2 - Pagination & Favorites": [
          "Intro",
          "Get Products Refinement To Allow Pagination",
          "Redux Slices For Favorites",
          "Products Actions For Pagination",
          "Product Actions Continued",
          "Header Initialization",
          "React Router Initialization",
          "Product Card Add & Remove Favorite",
          "Fixing Icon Heart In Header",
          "Pagination & Favorites On ProductsScreen",
          "Pushing Our Code To Github",
          "Checkout My Code"
        ],
        "Chapter 3 - Products Screen & Landing Screen": [
          "Intro",
          "Get Product By Id Route",
          "Set Product Actions",
          "Get Product Actions",
          "Product Screen & Landing Screen Route",
          "Landing Screen",
          "ProductsScreen refinement",
          "Toggle Color Mode Component",
          "NavLink Component",
          "Header Part 1",
          "Header Part 2",
          "Header Part 3",
          "Header Part 4",
          "Product Card Route",
          "StarIcon",
          "Product Screen Part 1",
          "Product Screen Part 2",
          "Product Screen Part 3",
          "Product Screen Part 4",
          "Reviews Schema",
          "Pushing Our Code To Github",
          "Checkout My Branch If You Are Stuck"
        ],
        "Chapter 4 - Cart Screen & Footer": [
          "Intro",
          "Initialize CartScreen & Footer",
          "Cart Slice Part 1",
          "Cart Slice Part 2",
          "Cart Actions",
          "Cart Icon In Header",
          "Product Card Add Cart Functionality",
          "Product Card Add Cart Functionality",
          "Cart Screen Structure",
          "Cart Screen Structure Continued",
          "Order Summary Component",
          "CartItem Component",
          "Footer Part 1",
          "Footer Part 2",
          "Pushing Our Work To Github"
        ],
        "Chapter 5 - Login & Registration": [
          "Intro",
          "User Modal",
          "User Routes Part 1",
          "User Routes Part 2",
          "Postman Intro",
          "Register User",
          "Test Register User In Postman",
          "Test User Login In Postman",
          "Send Verification Email",
          "Google Pass",
          "Send Verification Email Continued",
          "Test Verification Email",
          "Verify Email Route",
          "Password Reset Request",
          "Password Reset",
          "JWT Decode",
          "User Slices",
          "User Actions Part 1",
          "User Actions Part 2",
          "User Actions Part 3",
          "TextField Creation",
          "Password Field",
          "Password Forgotten Form",
          "Login Screen Part 1",
          "Login Test",
          "Header Login Functionality Part 1",
          "Header Login functionality Part 2",
          "Test Login In Header",
          "Email Verification Screen",
          "Email Verification Screen Debug",
          "Testing Invalid Email Verification Token",
          "Password Reset Form Part 1",
          "Password Reset Form Part 2",
          "Testing & Debugging Reset Password",
          "Testing Whole Registration & Sign In Functionality",
          "Banner Notification",
          "Refining Banner Workflow",
          "Debugging Reset Email Notification",
          "Pushing Our Work To Github"
        ],
        "Chapter 6 - Google Authentication & Protect Route": [
          "Intro",
          "Google Console For Client Id",
          "Google Login Route",
          "Get Request For Google Client Id",
          "Google Oauth Provider",
          "Google User Actions",
          "Login Screen With Google",
          "Debugging Google Login",
          "Google Changes In Header",
          "Pushing Our Work To Github"
        ],
        "Chapter 6.1 - Authentication Middleware": [
          "Protect Route Middleware",
          "Testing & Debugging"
        ]
      },
      "requirements": [
        "A computer with an internet connection"
      ],
      "description": "Major upgrade including now Google Auth, password reset, pagination, email verification, credit card checkout using Stripe and many more.\n\n\nHello and welcome to my course. This is a beginner’s course for building modern web applications. This is the right course for you if you are:\n- Interested in web development\n- Studying IT\n- Interested in programming in general\n- Upskilling your existing knowledge of React\n- Interested how full-stack applications are build\n- Solid understanding of programming and want to start with React/JavaScript\n- Interested in Chakra UI.\n- You are new to the world of IT and you want to start somewhere\nWhat will you learn?\n- React and React hooks\n- Functional components\n- State management with ReduxJs Toolkit\n- Using a component library such as Chakra UI\n- Styling and designing webpages\n- Responsive design\n- User registration and authentication (login)\n- Writing an API and storing data to a database.\n- Using MongoDB\n- Using NodeJS\n- Using Express\n- Version control using Git with Github\n- And many more…\nThis course is very practical, about 90%+ of the lessons will involve you coding along with me on this project. If you are the type of person who gets the most out of learning by doing, then this course is definitely for you.\nOn this course we will build an example e-commerce shop called Techlines, completely from scratch using the most popular JavaScript library called React in combination with Redux, Chakra UI, NodeJs, Express, MongoDB and many more. All you will need to get started is a computer with your favourite operating system, and a passion for learning how to build an application.",
      "target_audience": [
        "Everybody who wants to learn modern web development, software engineering or simply wants to create their own ecommerce website to sell products.",
        "Beginner in JavaScript, React or Programming"
      ]
    },
    {
      "title": "SharePoint Framework SPFx from Zero to Hero | Get Hired",
      "url": "https://www.udemy.com/course/sharepoint-framework-spfx-darwish/",
      "bio": "SharePoint Framework Development with PnP, No JS, Extensions, Typescript, Office-UI-Fabric",
      "objectives": [
        "SharePoint Online Complete Training",
        "Whats SharePoint Framework SPFx?",
        "Microsoft 365 Plans",
        "SharePoint List & Library",
        "Build webpart and deploy it on SharePoint Online"
      ],
      "course_content": {
        "Introduction": [
          "What's SharePoint ?"
        ],
        "SharePoint Framework": [
          "What's SPFx",
          "SPFx tool chain",
          "Preparing SharePoint SPFx Development Environment",
          "Creating demo for the First SPFx Project",
          "Installing Visual Studio Code",
          "Create App Catalog",
          "Create Site Collection",
          "What's SharePoint Online, Different Plans, Create App Catalog"
        ],
        "Typescript Crash Course": [
          "What's Typescript ?",
          "Typescript-Types",
          "Typescript-operators",
          "Typescript-define-variables",
          "Dive-into-Typescript-types",
          "Typescript function",
          "Typescript-builtin-methods",
          "Typescript-array",
          "Typescript interface"
        ],
        "SharePoint Framework Web Part": [
          "Web Part Project Structure",
          "SPFx Project Configuration structure",
          "Create multiple web parts",
          "Deploy Spfx Package to SharePoint Online App Catalog",
          "Configure Web part Property",
          "Configure the Web part property pane",
          "Connect your client-side web part to SharePoint",
          "Define SharePoint List On Workbench",
          "Retrieve & Render lists from SharePoint Online",
          "Deploy SharePoint Web Part",
          "Deploy Web Parts Assets Files to Microsoft 365 CDN",
          "Adding JQuery UI Accordion to a webpart",
          "Web Part Property Pane Overview",
          "SPFx Web Part Property Pane Example",
          "Web Part Property Pane Slider Example",
          "Property Pane Custom Control 01",
          "Property Pane Custom Control 02"
        ],
        "Communicating with SharePoint Online using Rest API": [
          "Get SharePoint List Names using SPFx Rest API",
          "Create SharePoint List using SPFx REST API",
          "Create SharePoint Subsite using SPFx REST API",
          "SPFx CRUD Insert SharePoint List item",
          "Adding EmpId to EmpList SPFx",
          "SPFx Crud Fetch SharePoint List item"
        ],
        "SPFx pnp crud Operation": [
          "pnp insert method",
          "pnp Read Method",
          "Modification restructure the example",
          "pnp Update Crud Operation",
          "pnp delete Crud operation"
        ],
        "SharePoint (SPFx) Extensions": [
          "What's SPFx Extensions, Application customizer, and a demo",
          "SPFx Extensions, Field Customizer",
          "SPFx Challenge"
        ]
      },
      "requirements": [
        "No Requirement"
      ],
      "description": "Join Now Because it's time to get started The SPFx Training:-\nWhy Take This Course?\nTo Allow businesses to extend the functionality of Microsoft 365 tenants. PnP Helps to connect and realize the extensions in a consistent manner.\nBy End of this course, you should be able to create SharePoint Applications using Pattern & Practices\n\n\nSharePoint Framework (SPFx) Training Walks you through all SHAREPOINT FRAMEWORK (SPFX) DEVELOPER TRAINING from Zero to Hero on practical and real-time examples which will help you to learn SharePoint easily.\nI will teach you technical skills:-\nIntroduction to SharePoint Framework (SPFx)\nSetting up a SharePoint Framework Development Environment\nSharePoint Framework Development Environment Set up\nDownloading and Installing Node.js\nNode Package Manager (npm)\nGulp and Yeoman installation\nInstalling the SharePoint Framework\nVisual Studio Code installation\n\n\nTypeScript Crash Course\nWhat is TypeScript & Benefits\nTypeScript for SharePoint Development\nInstalling TypeScript\nCreate a TypeScript Application\nTypeScript language features\nTypeScript Annotations, Variable\nTypeScript Arrays, Enums\nTypeScipt Functions\nTypeScript if-else, switch, for loop, while loop, do-while loop\nInterface in TypeScript\nTypeScript classes\nNamespace in TypeScript\nTypeScript Modules\nGenerics in TypeScript\nPromises and async/await\n\n\nReactJS Essentials\nReact Component\n\n\nSharePoint Framework Client Web Parts\nCreate First SharePoint Framework (SPFx) web part\nCreate a client-side web part and Understanding of the project structure, files, and folders\nPackage and Deploy SPFx Client-Side Web Part\n3 Different ways to create SPFx Solution\nSharePoint Framework (SPFx) Client-Side Web Part Properties\n\n\nLoading SharePoint Data in a client web part\nWorking with the context in SPFx Web Parts\nSharePoint List data via REST using SPHttpClient\nCRUD Operations using SPHttpClient in SPFx - Insert Item Example\nCRUD Operations using SPHttpClient in SPFx - Update List Item Example\nCRUD Operations using SPHttpClient in SPFx - Display and Delete List Items Example\n\n\nSharePoint Framework (SPFx) with PnP\nIntroduction PnP JS Library in SharePoint Framework (SPFx)\nCRUD Operations in SPFx Web Part using PnP Core JS Library - Insert\nCRUD Operations in SPFx Web Part using PnP Core JS Library - Update\nCRUD Operations in SPFx Web Part using PnP Core JS Library - Delete\nCRUD Operations in SPFx Web Part using PnP Core JS Library - Display\n\n\nDeploying SharePoint Framework (SPFx)\nPackaging and Deployment SPFx Web Part - SharePoint Online App Catalog Site\nPackaging and Deployment SPFx Web Part - SharePoint Online CDN\nPackaging and Deployment SPFx Web Part - Microsoft Azure Storage CDN\n\n\nBrand your client web parts with Office-UI-Fabric\nSPFx Office UI Fabric Introduction\nAre There Lots of Examples?  There are loads of examples\nPay once, benefit a lifetime! with 30 Days money-back guarantee. Certification after course completion",
      "target_audience": [
        "SharePoint Developers",
        "JavaScript Developers | React Front End Developers",
        "Software Developers",
        "System Admin | Azure | Exchange",
        "Dynamic CRM Developers"
      ]
    },
    {
      "title": "Complete ASP.NET Core MVC 6: A Project guide 2025",
      "url": "https://www.udemy.com/course/aspnet-core-mvc-webforms-a-project-method-from-scratch/",
      "bio": "Build real world application using ASP.NET Core MVC 6.0, Entity Framework Core, Razor pages and SQL.",
      "objectives": [
        "Learn structure of ASP .NET MVC Core (.NET 6) Project",
        "Create websites and webapp for your business needs",
        "Get a job as a junior web developer on Microsoft technologies",
        "Identify a case study to manage a project development",
        "Master front-end development using HTML & CSS back-end development using C# & MS SQL",
        "Create fully function dynamic MVC Core web applications using Asp .NET Core",
        "Creating Functional Model, View and Controller functionality on Movie Project",
        "Learn to Add Entity Framework Packages to Project Using NuGet Package Manager",
        "Applying SQL Server Database Connection to your application",
        "Running Power Shell Commands for Scaffolding and CRUD function Webforms",
        "Identify and applying Database Migrations",
        "You will learn fully functional Validations for your project",
        "learn what is Generative AI for future learning",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {},
      "requirements": [
        "Basic C# programming experience needed(optional). You will learn MVC Core need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required on MVC - you will learn from basic"
      ],
      "description": "The \"Complete ASP.NET Core MVC 6: A Project Guide 2025\" is a comprehensive, hands-on course designed to help you master ASP.NET Core MVC 6 by building real-world web applications. Whether you're a beginner or an experienced developer looking to sharpen your skills, this course will guide you step-by-step in creating modern, scalable web applications using the MVC architecture in ASP.NET Core.\n\n\nIn this course, you'll start with the basics of ASP.NET Core MVC 6, understanding how to set up projects, configure middleware, and handle routing. You'll learn how to build applications using the Model-View-Controller pattern, which helps separate business logic, data access, and user interface for clean and maintainable code.\n\n\nAs you move forward, you'll dive into data management with Entity Framework Core, learning how to interact with relational databases efficiently, perform CRUD operations, and implement data validation. Learn how to authenticate and authorize users, implement session management, and work with APIs to extend the functionality of your web applications.\n\n\nThis course also focuses on creating responsive and user-friendly interfaces using Razor Views and Bootstrap for styling. You’ll learn how to integrate modern features such as AJAX  for a more dynamic user experience.\n\n\nBy the end of this course, you will have developed a fully functional, real-world web application, ready to be deployed. If you're looking to specialize in ASP.NET Core MVC 6, this course is your complete guide to success.\n\n\nEnroll now and start building web applications with ASP.NET Core MVC 6 today!",
      "target_audience": [
        "Beginner Asp .Net MVC Core C# coding, Microsoft SQL and CSS developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build dynamic web applications",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer",
        "Anyone who wants to build fully functional asp .net core mvc database applications"
      ]
    },
    {
      "title": "SSL/TLS essentials: theory and implementation",
      "url": "https://www.udemy.com/course/ssltls-essentials-theory-and-implementation/",
      "bio": "Master SSL/TLS hard parts, implement web security like a pro, and become your team's expert in HTTPS!",
      "objectives": [
        "Master SSL/TLS in HTTPS, web certificates, PKI, and mTLS on all types of web applications",
        "Guide your team members through the correct SSL/TLS implementation",
        "Build your own certificate authority (CA) and issue SSL certificates instead of asking someone to do it for you",
        "Work confidently with Let's Encrypt and deploy production-grade, public HTTPS certificates to your applications",
        "Authenticate your client with certificates using mutual TLS (mTLS)",
        "Stand out of the crowd by not only implementing SSL/TLS like a pro, but also understand how it works"
      ],
      "course_content": {},
      "requirements": [
        "Some Linux background, You should be comfortable using the shell."
      ],
      "description": "SSL/TLS is often implemented without being fully understood!\nIf you've worked in an IT environment of any size and for any period, you've used SSL/TLS at least once. Think of that self-signed certificate you’ve created for the company's internal portal or when the information security department required you to switch to HTTPS for all web communications.\n90% of the time, you follow the steps to implement SSL/TLS, but you don't really get the why and the how. Remember when the information security professional required you to use TLS 1.2 and not 1.1? what’s the difference? Are we using SSL or TLS or both? Why does the browser sometimes show a warning message when you switch to HTTPS although you followed every step in the guide? What is mTLS?\nDo you have time to read books and articles about all that jargon? Probably not.\nThis class is here to help you!\nSSL/TLS theory and implementation was designed for those of us who need to get up to speed with SSL/TLS as soon as possible. But they don’t have time to go through all the books, articles, guides, and manuals.\nThe class was created with junior developers, operators, and QA engineers in mind. It is a beginner’s course. So, if you are a seasoned security professional with many years of IT security experience and you’re looking to take your knowledge to the next level, this course is not for you.\nSSL/TLS is the kind of knowledge that will make you stand out of the crowd!\nIT professionals with more than one skill set are more likely to get hired/promoted. That’s a fact. Your time is precious, and you need to widen your skillset as fast as possible. That’s another fact.\nHow to maximize your benefit from this class?\nSome people like to read the theory first, grasp the concept, and build a mental model. Further on, they start implementing what they’ve learned.\nSome other people prefer to get their hands dirty as soon as they can. If they are stuck with something, they refer to the theory and explanation.\nIf you’re of the first kind, you can go through the course from start to finish. Sections one and two draw the big picture and lay the ground for what’s next. The rest of the class includes many hands-on exercises for the most common use cases of SSL/TLS.\nThose of you who are less patient can start directly at section three, which is the first section in the “implementation” part of the class.\nWhat is covered?\n· What is SSL/TLS and the Public Key Infrastructure (PKI)?\n· What is an X.509 certificate and how does it fit in the equation?\n· How and when to use wildcard certificates?\n· What is a CA, an intermediary CA, and a leaf/node certificate?\n· How to create a self-signed certificate in just one command?\n· How to deploy certificates on Nginx, Apache web server, and Apache Tomcat application server?\n· How to create your very own certificate authority (CA)?\n· How to create an intermediary CA for enhanced security?\n· How to use free services like Let’s Encrypt to install certificates to your websites?\n· What and how to use mutual TLS (mTLS) for client authentication?\n· How to use SSL/TLS with Kubernetes Ingress Nginx controller?\n· How to use free certificates from Amazon using AWS certificate manager?\nIn addition to several quizzes to test your knowledge.\nA note about Extra Lectures\nThis class includes more than one lecture which is labeled “extra lectures”. The purpose of them is to provide even more value for the student. However, they may require some additional background that not everyone has. So, they are not strictly required to understand the core concept of the class, but they provide some extra value. For example, using SSL/TLS certificates with Kubernetes Ingress controller requires an understanding of Kubernetes clusters and how they work.\nAgain, SSL/TLS is more implemented than understood.\nEnrich your knowledge, become an expert in multiple domains, and jumpstart your professional IT career.\nThe course offers a 30-days money-back guarantee, no questions asked.\nGo ahead and enroll now!",
      "target_audience": [
        "IT professionals who need to understand how SSL/TLS really works",
        "Developers who don't know why they are required to use HTTPS in their APIs and services",
        "Operators who need a hands-on guide on how to properly deploy public key infrastructure (PKI) in their environments",
        "Backend and frontend web developers who need to know how to effectively secure communication to their web services"
      ]
    },
    {
      "title": "React for Beginners: Build a Game While Learning React",
      "url": "https://www.udemy.com/course/tic-tac-toe-a-playful-intro-to-react/",
      "bio": "The very basics of React.js for absolute beginners",
      "objectives": [
        "React",
        "Web development",
        "Game development"
      ],
      "course_content": {},
      "requirements": [
        "JavaScript",
        "HTML",
        "CSS"
      ],
      "description": "Do you want to learn React the fun way? In this class, you will learn the key concepts of React while building a Tic Tac Toe game.\nReact is currently the most popular front-end library. It's easy to begin with yet it's very capable even for building large-scale professional web-applications. In this course, we learn the fundamentals of React while having some fun and creating a Tic Tac Toe game.\nWhile building a game we dive into the fundamentals of React like:\nHow to break down your application or game into smaller pieces, into components?\nHow to structure your logic and how to connect these components with props and callbacks?\nHow to deal with change, what is the state, what to store in it, and where to define it?\nHow to add interaction and how does re-rendering work in React?\nAnd while it has nothing to do with React we are also going to draw some basic images by coding SVGs\nThis is an introductory course for beginners. We don't get to more advanced things like routing or state management of large-scale applications. Instead, I give you a foundation you can build on.\nRequirements:\nThis is an intro course, no prior React knowledge is required, but some HTML, CSS, and basic Javascript skills are necessary.",
      "target_audience": [
        "Beginner Web developers eager to learn React in a fun way"
      ]
    },
    {
      "title": "C to Learn Programming Technique : C to Master Skills",
      "url": "https://www.udemy.com/course/c-language-to-learn-programming-technique-c-to-master-skill/",
      "bio": "C is to Develop Programming Technique and to Master in C , all the basic concepts of C , SCRATCH to DATA STRUCTURE",
      "objectives": [
        "Programming techniques helps to develop Skills | Basic concepts of C Language gets strong | Learn and Understand all the topics of C Language in Depth"
      ],
      "course_content": {
        "INTRODUCTION": [
          "Introduction of C Language",
          "Compiling and Linking",
          "Computer Basic & Programming Technique",
          "Hardware & Software Co-ordination",
          "C Tokens",
          "Variables and Datatypes",
          "Code Blocks Installation",
          "Steps to work in Code::Blocks | Steps to create your first program in C",
          "Declaration of C Variables",
          "Explanation of Header files and Library files",
          "Use of Type Specifiers in C Language",
          "Use of & sign with variables",
          "About Main function and other syntax"
        ],
        "IF STATEMENT": [
          "Explanation of First Program of C Language in Flowchart",
          "Explanation of First Program of C Language in Code - Blocks",
          "Explanation of Second Program in Flowchart",
          "Explanation of Second Program",
          "Single If Statement Program (Flow Chart)",
          "Single If Statement Program Explanation",
          "If... else if Statement Program (Flowchart)",
          "If .... else if Statement Program",
          "Multiple Selection Program (Flow chart)",
          "Multiple Selection Program",
          "Continuous If Program (Flow Chart)",
          "Continuous If Statement Program",
          "Nested If Statement Program (Flow Chart)",
          "Nested If Statement Program",
          "Use of getchar and putchar functions program"
        ],
        "LOOP": [
          "First Program of Loop (Flowchart)",
          "First Program of Loop (While Loop)",
          "First Program of Loop (For Loop)",
          "Second Program of Loop (Flow Chart)",
          "Second Program of Loop (While Loop)",
          "Second Program of Loop ( For Loop )",
          "Third Program of Loop ( Flow Chart)",
          "Third Program of Loop",
          "Fourth Program of Loop ( Flow Chart )",
          "Fourth Program of Loop ( While Loop )",
          "Fourth Program of Loop ( For Loop )",
          "Loop With If Statement Program ( Flow Chart )",
          "Loop With If Statement Program",
          "Loop with If Statement Second Program Continue...",
          "Loop with if Statement Second Program",
          "Loop Within Loop Explanation with Real Time Example",
          "Loop Within Loop Program Explanation in Flow chart",
          "Loop Within Loop Program"
        ],
        "SWITCH CASE": [
          "Switch Case Program ( Use of Integer Value)",
          "Switch Case Program ( Use of Character Value)",
          "Switch Case Program ( Continue ...)"
        ],
        "ARRAY": [
          "Explanation of Array",
          "First Program of Array",
          "Second Program of Array",
          "Third Program of Array",
          "Fourth Program of Array",
          "Fifth Program of Array",
          "Sixth Program of Array (Loop with if)",
          "Double Dimension Array Program",
          "Program of Sum of two Matrices",
          "Program of Multiplication of two Matrices ( Continue ...)",
          "Program of Multiplication of two Matrices",
          "Selection Sort ( Continue...)",
          "Selection Sort Program",
          "Bubble Sort ( Continue .... )",
          "Bubble Sort Program"
        ],
        "FUNCTIONS": [
          "What is Function",
          "First Program of Function ( Continue ...)",
          "First Program of Function",
          "Second Program of Function ( Return Val) - I",
          "Second Program of Function ( Return Value ) - II",
          "Third Program of Function",
          "Fourth Program of Function",
          "Fifth Program of Function",
          "Sixth Program of Function",
          "Seventh Program of Function - I",
          "Seventh Program of Function - II",
          "Eighth Program of Function",
          "Ninth Program of Function",
          "Tenth Program of Function (Use of Different Datatypes)",
          "Use of void with Function"
        ],
        "RECURSIVE FUNCTION": [
          "Recursive Function - I",
          "Recursive Function - II",
          "Program of Recursion"
        ],
        "POINTER": [
          "Explanation of Pointer - I",
          "Explanation of Pointer - II",
          "Pointers And Arrays"
        ],
        "POINTERS AND FUNCTIONS": [
          "Call By Reference Program",
          "Second Program( Call by Reference)",
          "Third Program - Call by Reference (continue...)",
          "Third Program - Call by Reference",
          "Fourth Program - (Call by Reference - continue..)",
          "Fourth Program (Call by Reference)"
        ],
        "POINTERS AND ARRAYS": [
          "Pointers And Arrays Program ( Continue...)",
          "Pointer And Arrays Program",
          "Array of Pointer Program"
        ]
      },
      "requirements": [
        "This course is design for all ,those who are totally new in programming field , and also those having knowledge of any other programming languages ,course starts from scratch till depth explanation."
      ],
      "description": "Step by Step explanation of each topics in C Language with lots of programs . This C Language course is aimed at complete Beginners and intermediate programmers. No previous programming experience is required . Explanation of C Language  program is in Flowchart to clear the concept and then implementation of program in C to better understand . Unique and easy methods to develop programming skills in  C and to understand the Basic concepts of C Language topics . Theoretical and practical explanation of all topics - Array , Pointers ,Functions , Structure etc. Easy approach to understand each topics of C Language.\nC is a high-level programming language that was developed in the early 1970s by Dennis Ritchie at Bell Labs.\nKey Features of C:\nEfficiency: C programs are known for their performance and efficiency, making the language suitable for system programming, embedded systems, and performance-critical applications.\nPortability: C is designed to be portable across different platforms, which means that programs written in C can be compiled and run on various hardware architectures with minimal modifications.\nLow-Level Access: C provides low-level access to memory through the use of pointers, enabling developers to manipulate hardware directly.\nRich Set of Operators: C provides a variety of operators, including arithmetic, logical, bitwise, and relational operators, allowing for complex expressions and manipulations.\nStandard Library: C comes with a robust standard library that provides functions for handling input/output, string manipulation, memory allocation, and more.\nStructured Programming: C supports structured programming through functions, which helps in organizing and Modularizing code for better readability and maintainability.",
      "target_audience": [
        "Those who want to improve their Programming Skills , Master Programming techniques , they can join."
      ]
    },
    {
      "title": "PHP with MySQL: Build Complete Tours and Travel Website",
      "url": "https://www.udemy.com/course/php-with-mysql-2023-build-complete-tours-and-travel-website/",
      "bio": "Build Complete Tours and Travel Management System with Paypal Payment in PHP MySQL Bootstrap and PDO",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Build a full authentication system",
        "Learn to hash and dehash passwords with PHP",
        "Learn to use advanced PDO queries",
        "Learn to implement Paypal Payment professionally in you web app",
        "Handle validation like a pro and prevent user to sensitive date",
        "Learn file uploading and how to fully update and delete it",
        "Create an amazing admin panel",
        "Learn to fix bugs along the way of developing this web app",
        "Build a multi input based search form",
        "Learn web development tips and tricks along the way"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of PHP, MySQL and PDO",
        "Very little knowledge of Bootstrap"
      ],
      "description": "Are you as fired up as I am? Do you want to build something awesome? Something amazing? Are you a web developer who wants a cool job? If so, then this course is for you. In this course, you will learn how to build a complete booking system from the ground up in a few hours. I already made sure that every part of this course is concise, elegant, and informative, so don't miss out on this cool opportunity. I also included the files needed in different parts of the course for you to follow along with me step by step.\n\n\nHere is what you are going to learn, first of all, I am going to introduce you to the tools that we are going to be using in this course. And then we are going to build a full authentication system from scratch. While building this system I am going to introduce you to hashing and dehashing passwords. And then, we are going to build general and cool features inside our own app. It's going to be mainly on selecting and placing data. The next step is showing how a booking system is created professionally and then we are going to move to one of the most crucial things in this course and that's Processing the payment with Paypal in the easiest yet most efficient way possible. And then, we are going to build a search form to search for booking deals with multiple inputs. After this, we are going to move to the next part and that's the admin panel. In the admin panel, we are going to finish up every part of our website. We are going to complete the admins, countries, cities, and book parts. So it's going to be fun!! Of course, there is a lot to talk about, but this is just a short description of the course. So if you like it, what are waiting for? Get it now!!",
      "target_audience": [
        "People who learned PHP and MySQL and want to build a full project",
        "Developers who want to build their CVs",
        "Aspiring programmers who want to level up their development skills with new techniques"
      ]
    },
    {
      "title": "Build a WordPress Blog Website Step by Step",
      "url": "https://www.udemy.com/course/build-a-wordpress-blog-step-by-step/",
      "bio": "Learn how to build a clean and professional WordPress blog from scratch",
      "objectives": [
        "Install WordPress on Your Computer",
        "Build Clean and Professional WordPress Blog",
        "Install WordPress Theme, Import Demo Content, and Customize Theme",
        "Install WordPress Plugins",
        "Design User Friendly Blog Website",
        "Create Pages and Write Articles",
        "Migrate WordPress website to live server"
      ],
      "course_content": {},
      "requirements": [
        "You Need a Computer with an Internet Connection",
        "You don't need any prior knowledge about WordPress"
      ],
      "description": "Welcome to “Build a WordPress Blog Website Step by Step”!\nWhether you're an aspiring blogger, a freelancer offering blog design services, or someone who simply wants to learn WordPress from scratch, this course is built for you.\nThis course now includes two complete methods to build a blog.\n\n\nNew Version: Live Hosting + Modern Tools\nIdeal if you’re ready to go live with a real domain and hosting. In this updated version, you’ll learn how to,\n\n\nSet up WordPress on real hosting and a custom domain\nUse the Astra Theme (Free) + Elementor Page Builder (Free)\nSpeed up your workflow using AI tools for content and design\nDesign modern blog layouts with drag-and-drop\nCreate a subscriber form and connect basic email marketing\nLaunch a clean, fast, and mobile-friendly blog\nYou'll go from zero to fully published using modern tools,  no coding or prior experience needed.\n\n\nOriginal Version: Beginner-Friendly + No Hosting Needed\nPerfect if you're just getting started and want to build your blog without spending money upfront.\nYou’ll learn how to,\nInstall WordPress using XAMPP (free local server)\nWork completely offline on your own computer\nDesign a blog using free plugins and a clean theme\nCreate pages, write blog posts, and build layouts\nMigrate your blog from local server to a live website\nThis Course is 100% Beginner-Friendly\nNo coding required\nNo prior WordPress experience needed\nAll tools used are free\nWhat You’ll Learn\nHow to install WordPress (both locally & on hosting)\nHow to use Astra + Elementor to design your blog\nHow to use ColorMag theme for a minimalist layout\nHow to use AI tools for writing, design, and efficiency\nHow to build menus, footers, categories, and hero sections\nHow to create and test subscribe forms\nHow to migrate your blog from local to live server\nBONUS: Blogging tips and monetization ideas\nWhether you want to create a personal blog, build blog websites for clients, or just learn how WordPress works, this course gives you everything you need to start and grow.\n\n\nWhat You’ll Need\nA computer\nAn internet connection\nHosting and domain name, or use XAMPP for free (Will show how to setup)\nBy the End of This Course, You’ll Be Able To\nLaunch a clean, professional WordPress blog\nStart your own blogging journey or sell blog websites to clients\nConfidently use Astra, Elementor, and AI to build websites faster\nUnderstand how to build both local and live WordPress sites from scratch\nLet’s get started and bring your blog to life, step by step!",
      "target_audience": [
        "Anyone Thinking Of Start a WordPress Blog",
        "Anyone Who Want to Learn How to Build a WordPress Blog From Scratch"
      ]
    },
    {
      "title": "Projects in Node.js - Learn by Example",
      "url": "https://www.udemy.com/course/projects-in-nodejs/",
      "bio": "Learn full stack JavaScript by developing applications using Node.js, MongoDB, Express.js, and AngularJS.",
      "objectives": [
        "Build Apps with Node.js",
        "Build MEAN stack apps",
        "Create API's using Express.js",
        "Understand Routing in Express",
        "Know how to create Schema's, Models and Controllers",
        "Use Passport to authenticate users",
        "Create CRUD features with ease",
        "Install and use Mongoose Plugins",
        "Include different view engines into Node.js",
        "Use the Async Module"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Installing MongoDB"
        ],
        "Mongoose CRUD Application": [
          "Introduction to Project",
          "Mongoose Overview",
          "Build a Schema",
          "Build a CRUD App - Part 1",
          "Build a CRUD App - Part 2",
          "Build a CRUD App - Part 3",
          "Build a CRUD App - Part 4",
          "Project 1 Quiz"
        ],
        "User Login App": [
          "Introduction to User Login Project",
          "Add HTML and CSS",
          "Server Setup",
          "User Registration",
          "User Registration - Part 2",
          "Model Validation",
          "Hide Password Plugin"
        ],
        "Meeting App": [
          "Introduction to Meeting App Project",
          "Application Setup",
          "Explanation of Swig Template",
          "Create Models",
          "Validation for Models",
          "Add Controller Files",
          "Create Note",
          "Async for Front Page",
          "Filter by Member Name"
        ],
        "Search Engine App": [
          "Overview of Project",
          "Server Side Setup",
          "Client Side Setup",
          "Angular Setup",
          "Angular Setup - Part 2",
          "Models Setup - User & Website",
          "Authorization Part 1 - Passport Setup",
          "Authorization Part 2 - Register & Login Methods",
          "Angular Registration Setup",
          "Angular Log In Setup",
          "Website Server Routes & Controller",
          "Save New Website",
          "Display Search Results"
        ]
      },
      "requirements": [
        "Have Node.js Installed",
        "Understand JavaScript Basics"
      ],
      "description": "Go from beginner to advanced by building 4 Node.js applications of increasing complexity.\nThis course will teach you how to build web apps from the ground up while focusing on best practices. The main technologies used will be Node.js, Express.js and MongoDB.\nWe'll use a variety of templating engines for our frontend.  This will include Swig, Angular and plain HTML.\nWe'll be using Mongoose throughout this course. Mongoose is a node module built on top of MongoDB to assist in creating and handling database objects.\nProject 1\nGetting to Know Mongoose\nFamiliarize yourself with Node and Mongoose by building a CRUD example app.\nLearn about the different data types used in Mongoose models.\nUnderstand how to make API calls using Postman to add, update or delete documents.\nGet to know important methods used to query, save and remove document properties.\n\n\nProject 2\nUser Login App\nBuild a user login app consisting of a log in and success page.\nCreate static Express routes to connect with HTML pages.\nLearn about advanced Mongoose methods for Validating input and how to use mongoose Plugins to hide password data.\n\n\nProject 3\nMeeting Reporting App\nUse Express, Swig and Mongoose to develop an app for recording meeting notes.\nLearn how to create new Notes and filter by user.\nCreate a RESTful API and implement using best practices.\nLearn how to handle and display custom Errors.\nUse the Async module and learn how to query multiple documents at the same time.\n\n\nProject 4\nSearch Engine\nMEAN-stack application built from the ground up. (MongoDB, Express, Angular, Node.js)\nBuild a search engine using the Mongoose search plugin, Angular and Bootstrap.\nLearn how to reference and populate documents.\nIntegrate Passport.js for secure Local authentication. Learn how to protect routes from non-verified users.\n\n\nAfter taking this course you will:\n* Know how to build Full-Stack applications using JavaScript throughout.\n* Learn how to setup a server and routing using Express, work with various view engines like Swig, Angular and plain HTML.\n* Understand how to perform CRUD operations by building useful apps to save, update and retrieve documents from a database.\n* Be able to build a MEAN-stack application from the ground up.\n* Understand Mongoose methods for working with schemas, plugins, validators, and data types.",
      "target_audience": [
        "This course is meant for those who already are familiar with the basics of Node.js. We will be using Express.js for routing and MongoDB as our database, so any experience using these technologies is helpful but not required."
      ]
    },
    {
      "title": "The Complete NUXT 3 Bootcamp: Full-Stack Guide",
      "url": "https://www.udemy.com/course/nuxtjs-fluency-the-premier-nuxt-3-masterclass/",
      "bio": "Become a NuxtJS Expert with just ONE COURSE, and build Powerful Full-Stack Web Applications. {From zero to PRO in Nuxt}",
      "objectives": [
        "Learn NuxtJS from Scratch:",
        "Start with the basics and gradually progress to advanced topics, ensuring a solid understanding of NuxtJS fundamentals.",
        "An Introduction to this masterclass:",
        "We'll guide you through success tips, course outline, tools needed, coding exercises, file downloads, and online classroom access",
        "Introduction to Nuxt JS:",
        "Dive into NuxtJS concepts like rendering (server-side, client-side, universal), pros/cons, universal rendering, and Nuxt vs Vue comparison.",
        "Nuxt JS Basics:",
        "Dive into Nuxt JS basics like setup, components, navigation, styling, middleware, lazy loading, assets, SEO, metadata, transitions & beyond!",
        "Data Fetching:",
        "Mastering Data Fetching! Learn useFetch, useAsyncData & $fetch for dynamic apps.",
        "State Management:",
        "Learn best practices for handling state management in Nuxt JS.{useState, Internal State, Shared State and shallowRef State}",
        "Error Handling:",
        "Master the art of Error Handling in Nuxt JS with optimal strategies for seamless development.",
        "Server-Side (Backend) in Nuxt JS:",
        "Become a Nuxt JS backend master with Nuxt 3's Nitro server side.{Server routes, middleware, data fetching and more }",
        "Testing in Nuxt JS:",
        "You will learn why testing is very important and discover optimal test writing techniques for your Nuxt apps using Nuxt and Vue test utilities.",
        "Authentication in Nuxt 3 using Supabase:",
        "You will learn user authentication in Nuxt 3, grasp its significance, and effortlessly implement it with Supabase.",
        "Authentication using Google and Github in Nuxt 3 using Supabase:",
        "Additionally, you'll gain expertise in implementing login with Google and GitHub, enhancing your application's accessibility and user experience.",
        "Deployment of Nuxt JS apps:",
        "Learn to easily deploy any Nuxt app on Netlify.",
        "Build and Deploy a Full-Stack Movie Info App using Nuxt 3:",
        "Build & deploy \"Cinemate,\" a full-stack movie info app, with Nuxt 3, Tailwind CSS, and Flowbite. Boost your Nuxt JS and web development skills & portfolio.",
        "Build and Deploy an API service using Nuxt 3:",
        "Build & deploy \"Randoms\" API service with Nuxt 3 & Docus. Enhance backend skills in Nuxt 3 & boost your backend and Nuxt JS portfolio.",
        "Build and Deploy a fully functioning E-commerce App using Nuxt 3:",
        "Create & deploy an e-commerce app with Nuxt 3, Tailwind CSS, Flowbite, Prisma & Supabase. Elevate your full-stack skills & stand out in the job market",
        "A very important Outro:",
        "Finally, we will give you an essential outro on your next steps after this masterclass."
      ],
      "course_content": {},
      "requirements": [
        "NO prior Nuxt JS or Full-Stack web development experience needed: This course is designed for beginners, and we will guide you through every step, starting from the basics and gradually progressing to advanced concepts.",
        "A Mac or PC computer with internet access: You will need a computer with internet connectivity to follow along with the course and complete the coding exercises and course projects.",
        "Basic familiarity with HTML, CSS, JavaScript, Node JS, and Vue JS is crucial. Understanding these fundamentals will greatly aid in comprehending Nuxt JS concepts, as Nuxt JS is built upon them",
        "No paid software required: The course will utilize open-source tools and libraries, and there is no need to purchase any paid software.",
        "Understanding basic usage of the terminal and command line.",
        "We will provide detailed instructions on how to install and set up all the necessary software required for the course. No prior installation experience is necessary."
      ],
      "description": "Unleash the full power of Nuxt 3 with NuxtJS Fluency: The Premier Nuxt 3 Masterclass! This comprehensive course isn't just about learning Nuxt - it's about achieving Nuxt fluency. Become a Nuxt master and craft blazing-fast, SEO-friendly web apps with ease. Our in-depth lessons will transform you from Nuxt novice to Nuxt ninja, ready to tackle any project with confidence. Enroll now and join the Nuxt revolution!\n\n\nWelcome to 'NuxtJS Fluency: The Premier NUXT 3 Masterclass', the best resource on the whole internet to learn NuxtJS, Master it, and become a professional Nuxt JS Developer! Get ready to master one of the most in-demand skills in the job market of web development.\n\n\nThis comprehensive masterclass covers Nuxt JS Version 3 with Node.js and Vue.js, powerful and popular programming languages and frameworks. Whether you're a beginner or have some knowledge, we'll guide you step-by-step through engaging 4K video tutorials and hands-on projects to ensure your success as a Nuxt.js developer.\n\n\nThroughout the course, you'll build full-stack web applications, leveraging Nuxt.js for dynamic, interactive experiences. Covering basic concepts to advanced topics such as views, routing, styling, navigation, middleware, lazy loading, data fetching, state management, error handling, server-side, testing, authentication, and deployment, we've got you covered.\n\n\nBut this course goes beyond just teaching you syntax. We dive into the theory behind Nuxt JS, explaining why things are done in certain ways, so you can gain a deeper understanding of the subject matter.\n\n\nLed by Noor Fakhry, an experienced software engineer and passionate instructor, this course combines his expertise with animations, real-life examples, amazing whiteboard explanations, hands-on coding 4K videos, and humor to make learning fun and engaging. Noor's goal is not only to teach you how to code but also to equip you with the skills and knowledge needed to succeed in the tech industry.\n\n\nNoor's journey led him to discover his true passion for teaching programming and coding, where he finds joy in helping individuals achieve their aspirations and turn their dreams into reality. This very passion drove him to become a full-time online course creator at Programming Fluency.\n\n\nBy enrolling in this course, you'll save over $10,000 on bootcamps and gain access to 15+ hours of 4K video tutorials, quizzes, coding exercises, a private online classroom, and 3 major projects: Cinemate App (a full-stack movie info app like IMDB), Randoms (an API backend service) and Shopiverse (a fully functioning full-stack e-commerce web app).\n\n\nIn addition to learning the latest tools and technologies used by top tech companies like Apple, Google, Netflix, Microsoft, and Facebook, you'll also receive detailed animated explanation videos and a comprehensive curriculum developed based on years of experience and student feedback.\n\n\nGet ready for a hands-on journey toward becoming a professional Nuxt JS developer! This comprehensive curriculum covers everything you need to know, starting from the basics and fundamentals of Nuxt JS and progressing to advanced topics and real-life projects.\n\n\nHere's an overview of the topics covered in this course:\nWe'll begin with the basics and fundamentals of Nuxt JS, ensuring you have a solid foundation to build upon.\nWe will give you an introduction to Nuxt JS. We will learn what Nuxt JS is conceptually and technically. We'll explore what rendering a web page entails, including server-side rendering and client-side rendering, along with the pros and cons of each. We'll delve into universal rendering and its implications. Additionally, we'll differentiate between Nuxt JS and Vue JS.\nWe will cover Nuxt JS fundamentals to establish a strong foundation in Nuxt. These fundamentals include views, routing, styling, navigation, lazy loading, and more.\nThen we will cover a crucial aspect of Nuxt JS and web development: Data fetching. We'll explore what it is and why it's essential. Afterward, we'll delve into Data fetching in Nuxt in detail, including the three Nuxt tools for data fetching: useFetch(), useAsyncData(), and $fetch().\nThen we will cover state management in Nuxt, which encompasses internal state, shared state, and shallow ref state.\nAfter that, we will explore how to handle errors effectively in Nuxt 3.\nThen we will progress to the server-side in Nuxt 3, focusing on the Nitro server component. We'll learn how to create backend applications using Nuxt 3.\nThen we will cover testing in Nuxt 3 and discuss how to test your Nuxt 3 apps.\nThen you will learn how to authenticate users in Nuxt 3 apps. We'll explore what authentication is in web development and introduce Supabase and its advantages. We'll cover using Supabase for authentication, including registration, logging in, logging out, and logging in with external providers like Google and GitHub.\nThen you will learn how to deploy any Nuxt 3 app online to showcase to potential employers.\nThen you will build and deploy a full-stack movie info web app named Cinemate (similar to IMDb) using Nuxt 3, Tailwind CSS, and Flowbite.\nAfter that, you will build and deploy an API backend service named Randoms using Nuxt 3. It will serve multiple data to users and be documented using a Nuxt theme called Docus.\nThen we will move on to our final and biggest project of this masterclass, which is building and deploying a fully functioning e-commerce app named Shopiverse using Nuxt 3, Tailwind CSS, Flowbite, Prisma, Supabase, and Stripe. We will then deploy it using Netlify.\nThen we will provide you with some advice and tips on what comes next for you.\n\n\nIn this course, Each lecture is provided as a high-quality 4K video with clear explanations.\nThroughout the course, you will have access to the complete source code for every project and feature that we will build. This means you can review the code, experiment with it, and use it as a reference to deepen your understanding of Nuxt 3. Having the source code at your fingertips will empower you to explore and enhance the projects in your own unique way.\n\n\nMastering Nuxt JS version 3 is within your reach! With a commitment of just 3 to 6 months and dedicating 1 to 2 hours per day, you'll embark on a transformative journey. Each day, you'll build a new Nuxt 3 feature, immersing yourself in writing Nuxt JS code and getting your hands dirty. This active and consistent practice is the key to mastering Nuxt 3 and becoming a confident developer in this amazing technology.\n\n\nBy the end of this Masterclass, you'll have a comprehensive understanding of Nuxt JS version 3 and be equipped with the skills to build Full-Stack web applications, test them, deploy them, and ensure their reliability. Get ready to level up your Nuxt JS expertise and become a confident developer in this exciting field!\n\n\nWhether you want to become a professional Nuxt JS developer or start your own tech startup, finishing this course and mastering Nuxt JS can be life-changing. So, why wait? Enroll now and unlock your potential as one of the best Nuxt JS web developers. Get ready to level up your coding skills and create real-world web applications with Nuxt JS version 3.\n\n\nAbout Noor Fakhry(The Instructor):\nMeet Noor Fakhry, an experienced software engineer with many years of hands-on experience working in the field. Noor is the founder and lead instructor at Programming Fluency, where he shares his expertise with aspiring programmers. With a strong background in software development, Noor brings practical knowledge and real-world insights to his teaching. He has worked on various projects and tackled complex challenges, gaining valuable experience that he now imparts to his students.\nNoor's extensive experience as a software engineer enhances his ability to provide practical guidance and industry-relevant knowledge. He is currently pursuing a Master's degree in Computer Science, further deepening his understanding of the field. With a passion for both self-learning and formal education, Noor recognizes the specific needs of beginner coders and is committed to creating comprehensive and engaging programming and tech courses. His unique approach not only makes learning to code fun and interactive but also equips students with the skills they need to thrive in the tech industry. Noor goes beyond teaching coding concepts, he also emphasizes the reasoning behind certain practices, fostering a deeper understanding of the subject matter.\nBeing a self-taught programmer, Noor recognizes the abundance of online courses, tutorials, and books that tend to be excessively wordy and insufficient in imparting essential skills. Many individuals find themselves overwhelmed and uncertain about where to begin when learning programming and how to code. Furthermore, a considerable number of people lack the financial means to invest $20,000 in a coding bootcamp. The accessibility of programming skills should be inclusive and affordable for everyone. Educational materials ought to focus on imparting practical, up-to-date skills, ensuring they do not waste a student's precious time.\nTo enhance the learning experience, Noor employs animations, real-life examples, and whiteboard amazing explanations allowing students to visualize and comprehend complex concepts easily.\nNoor's journey led him to discover his true passion in teaching programming and coding, where he finds joy in helping individuals achieve their aspirations and turn their dreams into reality. This very passion drove him to become a full-time online course creator at Programming Fluency.\nJOIN Noor on a transformative journey towards programming fluency and a successful career in tech today!\n\n\nAre you ready to become FLUENT in your favorite programming language?",
      "target_audience": [
        "Beginners in Nuxt JS: This course is perfect for individuals who have basic familiarity with HTML, CSS, JavaScript, NodeJS, and Vue JS but are new to Nuxt JS. You'll start from scratch and build your knowledge and skills through hands-on 4K Video Lectures, coding projects, quizzes, and more.",
        "Web Developers: Whether you're a seasoned web developer or an intermediate-level developer looking to enhance your skills, this course offers value. By learning Nuxt JS through coding projects, you'll quickly grasp the concepts and techniques needed to incorporate Reactivity and Full-Stack functionality into your web applications. This course will help you level up your web development skills and add a powerful tool to your skills.",
        "Entrepreneurs and Startup Founders: If you have an idea for a Full-Stack application or want to start your own startup centered around Web application functionality, this course is for you. You will learn how to leverage Nuxt JS effectively to build interactive and dynamic web applications, setting a solid foundation for your entrepreneurial journey.",
        "Those Seeking Professional Web Development: If you're looking to expand your professional skills and become a Nuxt JS professional, this course provides comprehensive coverage. From the basics to advanced topics, you'll gain a deep understanding of Nuxt JS and its applications. By completing the course and building your portfolio, you'll be well-equipped to showcase your expertise to potential employers or clients.",
        "Passionate Learners: If you have a genuine interest and enthusiasm for learning how to build Full-Stack web applications, this course is designed to fuel your passion. You'll dive deep into Nuxt JS's capabilities and discover how to create engaging web application functionality. By embracing the challenges and possibilities of building full-stack applications, you'll develop a strong foundation in Nuxt JS and unleash your creativity in designing interactive and dynamic web applications."
      ]
    },
    {
      "title": "Introduction to HTML, CSS, and JavaScript from scratch",
      "url": "https://www.udemy.com/course/introduction-to-html-css-and-javascript-from-scratch/",
      "bio": "Learn real world hands -on web development skills | Create 7 Apps",
      "objectives": [
        "Understand core concepts of HTML",
        "Understand core concepts of CSS",
        "Understand core concepts of JavaScript",
        "Create HTML Document Structure",
        "Style HTML elements with CSS",
        "Create interactivity with JavaScript",
        "Create a basic website",
        "Create web apps"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Core Web Development Languages",
          "Text Editors",
          "Web Browsers",
          "Planning a web project",
          "Sketching out your design",
          "Creating files and folders for your web project"
        ],
        "Free Online Labs": [
          "Introduction",
          "JSBIN",
          "JSFIDDLE",
          "CODEPEN",
          "DABBLET",
          "PLUNKER",
          "LIVEWEAVE"
        ],
        "Introduction to HTML": [
          "What is HTML",
          "Anatomy of an HTML Element",
          "HTML document -Basic structure",
          "Build a basic HTML document structure -Part 1",
          "Build a basic HTML document structure -Part 2",
          "Build a basic HTML document structure -Part 3",
          "What are Attributes",
          "How to Markup Text",
          "How to create Links",
          "Adding comments to your HTML code",
          "What is a source code"
        ],
        "Introduction to CSS": [
          "What is CSS",
          "Methods of applying CSS",
          "How to style multiple properties",
          "How to style multiple elements",
          "How to modify your CSS",
          "Basic CSS Selectors",
          "The CSS Box Model",
          "CSS Padding and Margin Property",
          "CSS background property",
          "Styling a web page title",
          "The CSS Font Property",
          "CSS Display property",
          "Exploring and using Google Fonts",
          "Adding comments to CSS Code"
        ],
        "Introduction to JavaScript": [
          "What is JavaScript",
          "The developer Console",
          "Where to Place JavaScript",
          "JavaScript Syntax",
          "What are statements",
          "What are expressions",
          "What are Variables",
          "Variable Naming Convention",
          "What are Arrays",
          "Data Types",
          "Mixing Data Types",
          "Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Operator Precedence",
          "Comparison Operators",
          "Logical Operators",
          "Conditional statements",
          "Functions",
          "Linting tools",
          "Events",
          "Adding an Image Changer",
          "Fixing linting issues - part 1",
          "Fixing linting issues - part 2",
          "Adding a welcome message to a web page",
          "Adding comments to JavaScript Code"
        ],
        "Project 1: Build a Basic Web Calculator": [
          "What we will create",
          "Project design and sketch",
          "Create directory and files",
          "Creating the structure with HTML - Part 1",
          "Creating the structure with HTML - Part 2",
          "Add functionality with JavaScript",
          "Add styling with CSS"
        ],
        "Project 2: Create a TodoList Web App": [
          "What we will create",
          "Create project directory and files",
          "Create the structure with HTML",
          "Add style with CSS",
          "Add functionality with JavaScript - Part 1",
          "Add functionality with JavaScript - Part 2"
        ],
        "Project 3: Build an Image Slider": [
          "What we will create",
          "Creating directory and files",
          "Creating structure with HTML",
          "Add styling with CSS",
          "Add functionality with JavaScript"
        ],
        "Project 4: Create a Loan Calculator": [
          "What we will create",
          "Creating directory and Structure",
          "Adding the logic with JavaScript",
          "Adding styling with CSS"
        ],
        "Project 5: Create Event Count Down Timer": [
          "What we will create",
          "Overview",
          "Creating directory and files",
          "Creating structure with HTML",
          "Add styling with CSS",
          "Add functionality with JavaScript"
        ]
      },
      "requirements": [
        "Basic understanding of computers",
        "Basic understanding internet"
      ],
      "description": "This  introductory course to  HTML ,CSS and JavaScript is  vital for anyone who wants to become a web developer..\nThese three technologies are skills every web developer must learn and have.\nHTML : Used to create  content\nCSS: Used to present the content\nJavaScript : Used to create interaction\nThey are the building blocks of all websites and web based projects.\nThis course will teach you the basics of these three technologies by creating a basic one page website and 7 other projects.\n\n\nWhat You will learn  include:\n\n\nIntroduction to basic HTML\nCreating a very basic website\nPlanning a basic website\nAssembling files and folders\nWhat is HTML\nHTML document structure\nAnatomy of HTML element\nMarking up text\nLinks\nUsing comments\nHTML Attributes\n\n\nIntroduction to  basic CSS\nWhat is CSS\nWays to apply CSS\nCSS Ruleset\nCSS basic selectors\nStyling multiple elements\nCSS Box model\nUsing margin and padding properties\nChanging background color\nCSS Display property\nCSS Font property\nUsing google fonts\n\n\nIntroduction to basic JavaScript\nWhat is JavaScript\nWhere to place JavaScript\nVariables\nData Types\nOperators\nOperator precedence\nUsing Conditionals\nFunctions\nEvents\nUsing Linting tools\nAdding image changer\nAdding personalized message\n\n\nProjects we will create :\nTodoList\nCalculator\nInteractive quiz\nImage slider\nCountdown timer\nWeight converter tool\nLoan calculator",
      "target_audience": [
        "Beginners to HTML",
        "Beginners to CSS",
        "Beginners to JavaScript",
        "Beginners to web development",
        "Beginners to computer programming"
      ]
    },
    {
      "title": "Mastering Full Stack Development : From Frontend to Backend",
      "url": "https://www.udemy.com/course/mastering-full-stack-development-from-frontend-to-backend/",
      "bio": "Unlock the Full Potential: Master Full Stack Development! Prompt Engineering Concepts for Quick Learning",
      "objectives": [
        "Learn to apply complete full-stack web development skills",
        "Master back-end development with Python, and Django framework",
        "Identify and solve real-world problems using ChatGPT Generative open ai techniques",
        "Complete a case study to manage a project from conception to completion state",
        "Be a comfortable front-end developer by making beautiful designing",
        "Using Artificial Intelligence techniques to create website and real-time source code",
        "Learn to write REST API services for your mobile apps and apply Gen AI",
        "Apply Database techniques as a Data Analyst or Data Science engineer",
        "Create light-weight apps using JavaScript language",
        "Confidently apply PostgreSQL skills for your real world projects and apps",
        "Participate in Practice test to test your learning skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting started on Windows, macOS, and Linux",
          "How to ask great questions",
          "FAQ’s",
          "Best Practices for Learning Online Course"
        ],
        "Introduction to Full Stack Development": [
          "Understanding the role of a full-stack development",
          "Introduction to front-end, back-end, and database technologies",
          "Learn What is Generative AI / Gen AI"
        ],
        "Introduction to ChatGPT Open AI": [
          "What is ChatGPT",
          "Set up an account with ChatGPT",
          "How to use ChatGPT",
          "ChatGPT for your day-to-day tasks"
        ],
        "==== Fundamentals of HTML Cheat Sheet ====": [
          "HTML5 cheat sheet downloadable resource notes"
        ],
        "Frontend Development – HTML-CSS": [
          "HTML5 and CSS3 fundamentals",
          "Using ChatGPT to create HTML5 source code",
          "Using ChatGPT to create CSS3 source code",
          "Installing code editor – Sublime Text",
          "HTML – heading",
          "HTML – paragraph",
          "HTML - formatting text",
          "HTML – forms",
          "HTML – tables",
          "HTML – navbar / menu",
          "HTML – div tag"
        ],
        "Frontend Development – Basic": [
          "HTML5 – audio",
          "HTML5 – video",
          "HTML5 – drag and drop",
          "HTML5 – iframe",
          "HTML5 – YouTube video setting",
          "HTML5 – registration form",
          "HTML5 – login form",
          "Coding exercise",
          "Solution for a coding exercise"
        ],
        "==== Frontend Development of CSS Cheat Sheet ====": [
          "CSS3 cheat sheet downloadable resource notes"
        ],
        "Frontend Development – Intermediate": [
          "CSS – creating a webpage with CSS",
          "CSS – inline CSS",
          "CSS – internal CSS",
          "CSS – external",
          "CSS – classes",
          "CSS - id",
          "CSS – colors",
          "CSS – backgrounds",
          "CSS – padding",
          "CSS – borders",
          "CSS – box model"
        ],
        "Frontend Development – Advanced": [
          "CSS – forms",
          "CSS – website layout",
          "CSS – rounded corners",
          "CSS – pseudo classes",
          "CSS – gradients",
          "CSS – shadows",
          "CSS – button styles",
          "CSS – creating flexbox",
          "CSS – creating grids",
          "CSS – social media icons",
          "CSS – coding exercise",
          "CSS – solution for coding exercise"
        ],
        "==== Frontend Scripting of JavaScript Cheat Sheet ====": [
          "Frontend Scripting of JavaScript Cheat Sheet reference notes"
        ]
      },
      "requirements": [
        "No pre-knowledge is required - enthusiasm is all you need!, you will be trained from scratch",
        "No paid software required - all coding will be created with open source",
        "A PC or Mac computer with access to the internet",
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "Are you ready to unlock the full potential of Full Stack Development and become a proficient software engineer capable of creating robust web applications from start to finish? If so, \"Mastering Full Stack Development: From Frontend to Backend Excellence\" is the ultimate online course that will equip you with the comprehensive skill set and knowledge needed to excel in the dynamic world of web development.\n\n\nIn this in-depth and hands-on online course, you will embark on an exciting journey through the entire web development stack, mastering both frontend and backend technologies. Whether you're a seasoned developer looking to expand your horizons or a complete beginner eager to enter the field, our carefully curated curriculum caters to learners of all levels.\n\n\nParticipate in Practice test to test your learning skills\n\n\nCourse Objectives:\n1. **ChatGPT Generative Open AI:** You will begin by start learning how to use and apply ChatGPT Generative Open AI techniques in full stack development, like getting the real-world problem solutions and source code and apply to your project like a prompt engineering concept.\n\n\n2. **Frontend Fundamentals:** You will begin by mastering HTML, CSS, and JavaScript—the essential building blocks of modern front-end development. Learn to craft visually engaging and responsive user interfaces that provide seamless user experiences across devices.\n\n\n3. **Backend Technologies:** Transition into the world of server-side development, where you will explore languages like Python. Grasp the principles of server-side logic, RESTful APIs, and data management. From this course, you will learn Python programming language and how to apply chatGPT Generative open ai techniques to solve real-world problems.\n\n\n4. **Server-side Frameworks:** Mastering in Python language frameworks of Django and REST API frameworks to learn to build web application development and REST API services for mobile apps or other service requests.\n\n\n5. **Database Management:** Learn how to work with databases effectively, in SQL databases. Understand how to design efficient database schemas and implement CRUD operations for PostgreSQL. Also, you will learn MySQL RDBMS (relational database management system) concepts.\n\n\n6. **Authentication and Security:** Gain expertise in user authentication, data encryption, and best practices for securing web applications from potential vulnerabilities and threats.\n\n\n7. **Project Management:** Discover the process of developing web applications, managing development workflows, and writing source code tasks with tools.\n\n\n8. **REST API services:** Acquire vital skills in writing REST APIs, POSTMAN API tests, and conducting efficient debugging to ensure the reliability and quality of your API code.\n\n\n9. **Performance Optimization:** Learn techniques for optimizing frontend and backend performance to create lightning-fast web applications that provide an excellent user experience.\n\n\n10. **Real-world Projects:** Throughout the course, you will work on practical projects, applying the concepts you learn to build comprehensive full-stack applications using Gen AI prompts. These hands-on experiences will reinforce your skills and boost your confidence as a full-stack developer.\n\n\nBy the end of \"Mastering Full Stack Development: From Frontend to Backend Excellence,\" you will have a thorough understanding of the entire web development process, enabling you to create impressive and scalable web applications from scratch. As you progress, you will have the support of our experienced instructors.\n\n\nJoin us now and take the first step towards becoming a sought-after full stack developer, equipped to meet the demands of the ever-evolving web development landscape. Enroll today and unleash your potential in the exciting world of full stack development!",
      "target_audience": [
        "Beginners - Those who are new to web development and want to learn both frontend and backend technologies.",
        "Frontend Developers looking to expand their skills and venture into backend development to enhance their career opportunities.",
        "Backend Developers seeking to gain expertise in frontend technologies to be able to build complete web applications and work on both ends of the development stack.",
        "Aspiring Full Stack Developers Individuals who aspire to work as full stack developers and want to gain a comprehensive understanding of the entire web development process.",
        "Web Designers - who want to complement their design skills with coding abilities and create fully functional web applications.",
        "Software Engineers interested in strengthening their skills and knowledge in full stack development to contribute effectively to end-to-end projects.",
        "Computer Science Students studying computer science or related fields who wish to get hands-on experience and practical knowledge in web development.",
        "Career Changers Professionals from other industries who want to transition into the field of web development and need a complete understanding of full stack technologies.",
        "Who wants to become a Full stack developer curious about full stack development and data science"
      ]
    },
    {
      "title": "Laravel - Restful API with Passport Authentication",
      "url": "https://www.udemy.com/course/laravel-restful-api-with-passport-authentication/",
      "bio": "Learn to create Restful API's and at the same time Authenticate them",
      "objectives": [
        "Students will learn to create Restful API's and Authenticate with Passport"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Reference files",
          "Connecting Database, Migrating and Package Install",
          "Setting Up Passport and Routes",
          "Creating Our Register Method Par 1",
          "Creating Our Register Method Par 2",
          "Creating Our Login Functionality Part 1",
          "Creating Our Login Functionality Part 2",
          "Creating Our Login Functionality Part 3",
          "Creating Our Login Functionality Part 4",
          "Creating Our Logout Feature",
          "Creating Our User and Testing it",
          "Conclusion"
        ]
      },
      "requirements": [
        "Laravel Intermediate Knowledge is required"
      ],
      "description": "In this course you will learn to build Restful API's with Laravel and at the same time we are learning about Passport / oAuth. This course is small and every lecture is short and right to the point so that you can get what you want fast.\nTaking this course will allow you to jump a different level in the Laravel world and give you extra knowledge employers are looking for.\nAre you ready to to take it to another level? The let's do it!",
      "target_audience": [
        "Any student wishing to learn how to create Restful API's with Laravel should take this course",
        "Any student wishing to learn how to use Passport Auth should take this course"
      ]
    },
    {
      "title": "Learn jQuery: An In-depth Course For Beginners",
      "url": "https://www.udemy.com/course/jquery/",
      "bio": "Master jQuery at your own Pace. Learn Everything you need to know about jQuery!",
      "objectives": [
        "Starting by first introducing you to jQuery, the teaching style Craig uses to convey this sometimes complex topic makes it easy to learn.",
        "The examples he uses are easy to understand, and the lessons build on one another throughout the training course.",
        "You will begin by learning the essentials of working with CSS selections, and quickly move on to creating animations - slides, easing, fading, and more.",
        "The training escalates with DOM manipulation, event handling, and AJAX interactions.",
        "You will even learn how to create your own jQuery plugins.",
        "The training course concludes with you working alongside Craig to create real-world usable tab controls, and a browser game written with jQuery!"
      ],
      "course_content": {
        "Getting Started": [
          "Working Files - Download These First",
          "What You Will Learn",
          "Need To Know",
          "What Is jQuery",
          "Web Browsers",
          "Web Tools"
        ],
        "Introduction To jQuery": [
          "jQuery Basics",
          "Include jQuery",
          "First jQuery Program",
          "jQuery Chaining",
          "When Not To Use"
        ],
        "Selectors": [
          "CSS Selectors Introduction",
          "Select By name,id, and class",
          "Attribute Selectors",
          "Advanced Selectors",
          "Efficient Selectors",
          "Traversing Filtering",
          "Your Own Selectors",
          "Selector Answers"
        ],
        "Animation": [
          "Browser Animation",
          "Hiding/Showing",
          "Fade In And Out",
          "Sliding Up And Down",
          "Custom Animations",
          "Easing Functions",
          "Queues Scheduling/Cancelling",
          "Disabling Animations"
        ],
        "Manipulating The Page": [
          "DOM Introduction",
          "Get/Set Attributes",
          "Get/Set Classes",
          "Get/Set Form Values",
          "Get/Set Text",
          "Get/Set HTML5 Data",
          "Get/Set Positions",
          "Insert/Replace HTML",
          "Wrapping HTML",
          "Copying HTML",
          "Deleting HTML",
          "Modify Your Page",
          "Page Modification Answers"
        ],
        "Event Handling": [
          "Events Introduction",
          "Load Events",
          "Basic Events",
          "Event Object",
          "Delegation Live Events",
          "Triggering Events",
          "Deregistering Events",
          "Your Own Events",
          "Event Answers"
        ],
        "jQuery Utility Functions": [
          "Browser Feature Detection",
          "Array Functions"
        ],
        "AJAX": [
          "AJAX Introduction",
          "Web Services And Data Formats",
          "AJAX HTML Example",
          "AJAX JSON Example",
          "AJAX Errors"
        ],
        "jQuery Plugins": [
          "Plugin Introduction",
          "Your First Plugin"
        ],
        "Real World jQuery Examples": [
          "HTML5 Tab Control",
          "Target Practice Game"
        ]
      },
      "requirements": [],
      "description": "This jQuery for beginners course provides a complete guide to web-based development using this Javascript library that allows unprecedented functionality and graphical effects. With hands-on training from expert author and web designer Craig Buckler, you'll learn the internal structure of the jQuery library and see how you can create functional animations, utilities and effects according to current web standards.\nThough it was created in 2006, jQuery is already being used by more than 50 percent of the most popular sites online and is only growing. In this jQuery tutorial, you'll learn how to harness its power to your own advantage, first looking at basic chaining, selectors and events, and also going into more sophisticated HTML5, AJAX and plugin features.\nThis jQuery course is designed for beginners. You'll learn everything you need to harness jQuery's full potential.",
      "target_audience": [
        "Anyone looking to go beyond basic HTML and CSS to create impressive interfaces.",
        "Web developers looking to learn another standard for interface design.",
        "Anyone wanting to customize their existing sites with customized jQuery plugins."
      ]
    },
    {
      "title": "Use Laravel to Consume APIs and Services Over HTTP",
      "url": "https://www.udemy.com/course/http-client-laravel-guzzle-requests-consume-apis-services/",
      "bio": "Create an HTTP client with Laravel and Guzzle HTTP to consume any API and online service over HTTP requests from Laravel",
      "objectives": [
        "Consume any HTTP service (yours or from a third party)",
        "Re-utilize the components created during the course to consume any HTTP service you want",
        "Authenticate users in your HTTP Client using information obtained from external HTTP services",
        "Build and HTTP Client with Laravel, completely modular and maintainable",
        "Domain the usage of access tokens and OAuth2 when sending requests and authorizing the requests of your HTTP Client"
      ],
      "course_content": {},
      "requirements": [
        "PHP installed and functional in your system (PHP 7.2 or higher recommended)",
        "Composer installed and functional in your development environment",
        "PHP basic knowledge"
      ],
      "description": "Do you need to consume an HTTP Service or API and it overwhelms you to think about HTTP methods, requests, OAuth2, access tokens, credentials, grant types, user sessions and so on?\nI cover you! In this course, I show you that everything is about using the correct values and tools to make everything much simpler.\n\n\nCreate your HTTP client with Laravel: Build and design a web project with Laravel, to consume online services and APIs.\nObtain data from HTTP services or APIs (yours or from third parties) and show it in a friendly and correct way to your users.\nLearn step-by-step, everything you need to consume any web service or API online, with PHP from a Laravel project and using Guzzle.\nAt the end of the course, you will have multiple components that you can re-utilize in your projects to consume any HTTP service or API.\n\n\nDo not wait any longer and sign up :)\n\n\nWhy should you choose this course?\nBecause it gives you a detailed view, as in no other course, of how to consume an HTTP service or API using Laravel and PHP.\nBecause it gives you the essential components that you can re-utilize in your other projects when consuming any HTTP service or API\nBecause you will be able and confident enough to use any service or API protected by OAuth2 and access tokens.\nBecause I not only show you how to create your HTTP Client with Laravel, but I also help you identify the different challenges of an HTTP Client and how to solve them properly.\nBecause simply, there is no other course that covers all these topics.\n\n\nWhat will you be able to do at the end of the course?\nIn general, you will be able to implement an HTTP client that allows you to consume any HTTP service or API, either your own or from third parties, using PHP and Laravel. In addition, you will have a clear idea of how to proceed when facing new projects and services to be consumed, reusing as much as possible the components created and learned during this course.\nYou will know how to use a high-level library such as Guzzle, to send HTTP requests from PHP with Laravel. Implementing generic components that allow sending requests of any kind to any HTTP service with Guzzle.\nIn the end, you will have gained complete confidence in sending secure and correctly authorized requests to different HTTP services, either using simple access tokens or even using an entire security mechanism such as OAuth2. Everything, using PHP and Laravel.\n\n\nDuring the course, you will learn this...\nFor the HTTP Client:\nHow to consume a service or API through HTTP requests from Laravel\nHow to authenticate and create user sessions in your HTTP Client with information from other services\nHow to automate the process of obtaining an access token to authorize the requests of your HTTP Client\nThe different ways to obtain an access token from a service that uses OAuth2 and its differences (grant types)\nHow to handle the expiration times of a token and avoid losing access to information\nHow to handle access errors to the consumed HTTP service or API and how to proceed\nHow to handle and authenticate protected requests associated with a user's information from the HTTP Client\nUse of Guzzle from Laravel, to send HTTP requests to whatever HTTP service or API\nHow to configure and prepare Laravel to make requests to any HTTP service or API\nUse of Bootstrap 4 to show the information obtained from the consumed services\nHandling and preparing to resolve exceptions and errors when consuming external services with Laravel\n\n\nFor any Laravel project:\nHow to install Laravel in your development environment for professional projects\nConfigure Laravel, in your environment for an agile and simple development\nBuild of a professional, modular and, a scalable project with Laravel\nCreation of routes, views, templates, controllers and more with Laravel\nHandling errors and internal exceptions of the Laravel project\nInstallation of dependencies to a Laravel project (Guzzle case)\nOf course, that's not all. Take a look at the full description of sections and classes for more details.\n\n\nIt does not end there! You will have lifetime access to current classes and those I can add later to the course.\nSubscribe now and do not wait any longer to consume those services that you need and obtain the information that your users require.\n\n\nStill having doubts?\nDo not worry, here I share some more information about HTTP Client with Laravel.\n\n\nWhy an HTTP Client with Laravel?\nAbout HTTP:\nHTTP (HyperText Transfer Protocol) is a widely used protocol on the Internet and any current language has a mechanism to make requests on HTTP in a simple way which, of course, includes PHP and Laravel (a framework for PHP).\nSince HTTP is a protocol that is currently widely used, any current system or language will be able to communicate correctly with other systems that use this protocol (regardless of the programming language), allowing the use of data and information from whatever system online. Such information, obtained from any HTTP service, can be used in your projects to offer any type of information and service to the users of your systems. This makes you an HTTP client since you will be consuming any HTTP service or API from your own project.\nAbout Laravel:\nLaravel is the most popular framework for PHP, even one of the most popular in the world. With Laravel, you will be able to develop very complex PHP applications in a very short time, which includes an HTTP Client. During the course, you will see the enormous facilities that Laravel provides when obtaining and using the information of importance for your users, as well as facilitating the process of integrating external systems easily.\nLaravel has innumerable characteristics that differentiate it from multiple frameworks for PHP and other languages, which allow implementing very complex tasks in a simple way and in a short time.\n\n\nOf course, if you need more information, just get in touch :)\nSubscribe now. See you in classes",
      "target_audience": [
        "Advanced or beginners who wants to consume any HTTP service (yours or from a third party) using Laravel",
        "Who are having problems to domain the usage of access tokens to send and authenticate requests to HTTP services or APIs",
        "Who want to dominate OAuth2 and its usage to authenticate requests to protected HTTP services or APIs",
        "Who wants to domain the different ways to obtain valid access tokens to authorize the requests to any protected HTTP service",
        "Who needs to authenticate users and create sessions, using information obtained from external HTTP services or APIs"
      ]
    },
    {
      "title": "Develop your Operating System from SCRATCH using SUSE linux",
      "url": "https://www.udemy.com/course/develop-your-own-custom-operating-system-with-suse/",
      "bio": "Learn to make operating system and os development in Simple and Comprehensive manner",
      "objectives": [
        "On completion of this course you could easily create your own Custom Operating System.",
        "You would be able to implement Pre-installed Applications and Repositories.",
        "You would get a better understanding about how an Operating System works, and got implemented.",
        "You would learn various kinds of Kernel, and Other Components of OS.",
        "Learn various Classifications and Application ares for OS."
      ],
      "course_content": {},
      "requirements": [
        "Grasp over fundamentals of Operating System and related terms like kernel, process, system call could be useful. But NOT mandatory at all!"
      ],
      "description": "With this course you are going to Develop you own Custom Operating System with SUSE and learn few fundamental concepts related to working and development of an OS (Operating System). There are different ways for developing an Operating System-\nLinux From Scratch (LFS) using Linux kernel\nUnix based\nSUSE studio express\nother methods\nIn this course you will be learning about creating a custom Operating System with SUSE studio express. With this method you are not expected to do any sort of complex coding, although if you want to do so, you can develop an utility and add with this newly created OS image. SUSE is a popular Linux distribution, and you can add a lot of native functionalities of SUSE with ease.\nIn the first section, you will learn the fundamentals of an Operating System learning a few basic concepts, then you will learn the types and components of an OS, followed by steps to create one. You will be learning how to use Linux Kernel, add some utilities and applications, with configurations, and finally deploy and test it. We would also create an user and set permission. We would generate OS image (.iso) file at the end.\nYou can use this generated OS image to install on various kinds of computation devices.",
      "target_audience": [
        "Anyone who is passionate about creating their own OS, either for simple college project or for Advanced Applications. It could also be useful for developers who want to experiment with Linux Kernel and add their own repositories."
      ]
    },
    {
      "title": "Learn animation using CSS3, Javascript and HTML5",
      "url": "https://www.udemy.com/course/animating-css-javascript/",
      "bio": "Master the art of animation for the web. Easy to follow videos. Source code included.",
      "objectives": [
        "Create animations and transitions using CSS, Javascript and HTML",
        "Use popular javascript libraries to help create animations"
      ],
      "course_content": {},
      "requirements": [
        "To code along with this course you will just need a text editor and a browser.",
        "Following along will be easier if you have a basic understanding of html, css and javascript."
      ],
      "description": "In this course you will learn how to create animations and transitions in CSS3 and Javascript. The easy to follow along tutorials will have you animating in no time.\nMaster the art of adding animation to your websites and pick the right tools for the job.\nCreate animations and transitions using CSS3\nLearn the building blocks of how animation works in Javascript\nSee how different techniques can add life to your animations\nLeverage animation frameworks that take care of the hard work and let you animate quickly.\nFollow along with the included source code\n\n\nWe'll learn the basics of animating all the way through complex sequenced animations.\n\nYou'll learn how to use CSS3 syntax to create quick and smooth animations without needing javascript. Next I'll show you the building blocks of animating in javascript using setInterval and requestAnimationFrame in the canvas. Then you will learn how to leverage jQuery's animation methods, events, and properties to get animating quickly. Last but not least we'll cover GSAP (Greensock animation platform) where you'll learn the basics all the way through complex sequenced animations. This course comes complete with working code samples so you can work along side the instructor and modify to create your own animations. The full course can be completed in just over 2 hours.",
      "target_audience": [
        "This Animation course it meant for beginner to advanced developers who want to broaden their understanding of animation and the tools to create animations.",
        "A basic understanding of html, css and javascript is nice to have but not required.",
        "This course is focused specifically on animations for HTML, CSS and Javascript. It's not intended to be a full web development course"
      ]
    },
    {
      "title": "How to Use Custom Fields in Wordpress Theme Development",
      "url": "https://www.udemy.com/course/ignite-wordpress-theme-development-with-advanced-custom-fields/",
      "bio": "Learn how to utilize over 20 powerful custom field types in our comprehensive guide to the Advanced Custom Fields plugin",
      "objectives": [
        "Learn how to set up over 20 different custom field types in WordPress",
        "Start integrating any of these field types into your theme with ease",
        "Master how to easily pull custom field values from posts, pages, users & more!",
        "Learn how to create an admin interface for your theme that your clients will LOVE using"
      ],
      "course_content": {
        "Introduction, Installation & Field Groups": [
          "Intro to Advanced Custom Fields & Installing the Plugin",
          "Getting Started with Field Groups"
        ],
        "Basic & Content Field Types": [
          "Text Field",
          "Textarea & WYSYWIG Editor",
          "Number Field",
          "Email Field",
          "Password Field",
          "Check to See If Field Exists",
          "Image Field",
          "File Field"
        ],
        "Choice Field Types": [
          "Choice Field Type Admin Set Up",
          "Checkbox",
          "Radio",
          "True/False & Select",
          "Conditional Display"
        ],
        "Relational Field Types": [
          "Page Link",
          "Post Object",
          "Relationship/Multiple Post Objects",
          "Taxonomy",
          "User"
        ],
        "jQuery Field Types": [
          "Google Maps",
          "Color Picker",
          "Date Picker"
        ],
        "Layout Field Types": [
          "Tab & Message"
        ],
        "Additional Locations": [
          "Retrieving Values from a Taxonomy Term",
          "Retrieving Values from a User"
        ],
        "Advanced Custom Fields PRO": [
          "Upgrade Process & Overview",
          "Repeater Field",
          "Gallery Field",
          "Flexible Content Field",
          "Options Page",
          "oEmbed Field"
        ],
        "BONUS: Additional Resources": [
          "Quick Reference Cheat Sheet"
        ]
      },
      "requirements": [
        "Understanding of the WordPress theme structure",
        "Familiarity with HTML & CSS",
        "Should be comfortable editing code in your WordPress theme files"
      ],
      "description": "Interested in speeding up your WordPress theme development? Do you want to build beautifully simple admin interfaces to control complex front end layouts with ease?\n\nLet us help you master a tool that can shave tons of time off your WordPress development process and help you create websites that your clients find incredibly easy to maintain.\nIf you have done any kind of WordPress theme development, more than likely you've encountered the use of custom fields. The default behavior of WordPress custom fields isn't the most intuitive. While you can definitely improve upon its admin appearance with functions for custom metaboxes and your own custom field types, that can get time-intensive very quickly, not to mention can be a daunting hurdle for those just starting to dip their feet into the world of WordPress theme development.\nThis is where Advanced Custom Fields comes in as a powerful time-saving tool to incorporate into your WordPress development workflow. It simplifies the creation of a variety of custom field types, allowing you to quickly & effectively create complex WordPress themes that still have an incredibly straightforward admin interface.\nDo your clients need to be able to attach supplementary PDFs to their blog posts? Want to integrate with Google Maps, YouTube and more in less than 5 minutes? How about create beautiful & intuitive color and date pickers with just a few clicks?\nLet us open your WordPress development up to all of these possibilities -- plus MANY MORE -- with this powerful plug-in. What are you waiting for? Let us help you take your WordPress theme development to the next level.\nAdvanced Custom Fields is developed & maintained by Elliot Condon and is available in both a free and a (highly recommended) paid/pro version.",
      "target_audience": [
        "Novice & Advanced WordPress Developers",
        "WordPress developers who want to improve their theme's UI & speed up their workflow"
      ]
    },
    {
      "title": "Next.js & Django - Build Complete Jobs Portal with Postgres",
      "url": "https://www.udemy.com/course/nextjs-django-build-complete-jobs-portal-with-postgres/",
      "bio": "Build Full Stack Jobs Portal App with Next.js & Django with Postgres - with Authentication, Maps Rendering, Deployment",
      "objectives": [
        "How to build REST API in Django Rest Framework",
        "How to generate coordinates of address",
        "All about authentication with Simple JWT",
        "How to work with databases like Postgres",
        "How to handle exceptions",
        "How to add filters & pagination to API",
        "How to Upload Files on AWS S3",
        "Learn Server Side Rendering with Next JS",
        "How to add maps and locations in Nextjs",
        "Learn all different ways to pre fetch data",
        "How to deploy full stack app on Vercel & Heroku",
        "and much more..."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course",
          "DEMO of Project",
          "Next.js & Django"
        ],
        "Setting up Environment": [
          "SOURCE CODE OF PROJECT",
          "Installing all required tools"
        ],
        "Let’s start backend with Django & Postgres": [
          "Create Django Project",
          "Setup & Connect to database",
          "Setup GDAL on Windows",
          "Django Admin Panel & Env Variables"
        ],
        "Starting with Jobs Resource": [
          "Create Jobs Model",
          "Adding GeoCoder to generate Coordinates",
          "Run Migrations & Create first Job",
          "Get all Jobs & Serializing Data",
          "Get Job by ID",
          "Create new Job & update Job Endpoint",
          "Delete Job by ID",
          "Get Stats of Topic"
        ],
        "Backend - Search, Filters & Pagination": [
          "Filter Jobs",
          "Adding Search to API",
          "Add Pagination"
        ],
        "Backend Authentication": [
          "Auth App & JWT Configuration",
          "Sign Up & User Serializer",
          "Register User",
          "Login User",
          "Get Current User",
          "Modeling UserProfile",
          "Save User while Creating Job",
          "Update User Profile"
        ],
        "Exception Handling": [
          "Handle 404 & 500 Errors",
          "Custom Exception Handling"
        ],
        "Upload Resume to AWS S3": [
          "AWS S3 Configuration",
          "Uploading & Saving User Resume",
          "Validate Resume before uploading"
        ],
        "Apply To Job - Backend": [
          "Modeling CandidatesApplied",
          "CandidatesApplied Serializer",
          "Apply to Job",
          "Get Current User Applied Jobs",
          "Creating isApplied",
          "Get Current User Jobs",
          "Get Candidates List of Job"
        ],
        "Let’s start frontend with Next.js": [
          "Create Next.js App",
          "Jobbee Components Details",
          "Header & Footer & Loader Component",
          "Layout Component",
          "Jobbee Homepage"
        ]
      },
      "requirements": [
        "You should know to build API with Django REST Framework",
        "You should be comfortable using Terminal",
        "You must have good knowledge React and Nextjs",
        "Must be familiar with main technologies like Node, React, Postgres",
        "Nothing else, Just you and your precious time"
      ],
      "description": "If you want to build a Full Stack App with Next js & Django REST Framework then welcome to this Ultimate Full-stack course of modern technologies Next.js & Django.\n\n\nNext.js is a production-ready react framework that gives you the best developer experience with all the features you need for production: hybrid static & server rendering, route pre-fetching, and more. This is one of the most powerful tools with its three most key features:\n\n\nFile-based routing\nServer-Side Rendering\nFull-stack application development\n\n\nOn the other hand, the Django REST framework is a powerful and flexible framework for building Web APIs. It is one of the most popular frameworks from Django, it is beginner-friendly and provides a lot of features. It has made life a lot easier with features like Serialization, Filtration, Pagination, Exception Handling, Validations, Authentication, and much more.\n\n\nSo we will be using Next.js, Django, and Postgres to build a complete Full Stack Jobs Portal. We will generate the coordinates of an address and then render the map on UI. We are going to follow the best practices to build this full-stack app.\n\n\n===   Super Friendly Support   ===\nIf you ever get stuck in any problem, I'm here to unstuck you. I always respond as fast as I can. Because I know there’s nothing worse than getting stuck into problems, especially programming problems. So, I am always here to support you.\n\n\n\n\nBelow are some features that will add to this production-ready app:\n\n\nAdd the Jobs resource\nGenerating Coordinates of address\nAdding Pagination and Filtration\nComplete Authentication with Simple JWT\nProtecting Routes from Unauthenticated Users\nUploading files to AWS S3\nRenders Maps with Mapquest\nCustom Exception Handling\nServer Side Rendering with Next.js\nComplete the section for Employer\nApply to a Job\nPosting new Jobs\nHandling Candidates for a Job\nGenerate Topic Stats like Java\nDeploy app on Heroku & Vercel\n\n\nYou can watch the complete DEMO of this project in the course content. If you are ready to build Production-Ready, Full Stack Jobs Portal App then I will see you in the course.",
      "target_audience": [
        "Intermediate programmers who want to build build Full Stack Applications",
        "Developers who want to learn how to use Django and Nextjs to build apps",
        "Anyone who loves to learn new technologies"
      ]
    },
    {
      "title": "Angular unit test case with Jasmine & Karma",
      "url": "https://www.udemy.com/course/angular-unit-test-case-with-jasmine-karma/",
      "bio": "Learn how to write Angular unit test case with Jasmine & Karma",
      "objectives": [
        "Writing Angular unit test case with Jasmine & Karma",
        "Understanding on Jasmin and Karma",
        "Understanding on spy in angular",
        "Writing Angular unit test case with Jasmine & Karma in All version of angular",
        "The source code is also attached topic-wise."
      ],
      "course_content": {
        "Angular unit test case with Jasmine & Karma": [
          "Introduction",
          "Introduction of Jasmine & Karma",
          "How Angular Unit test case Flow",
          "How to run angular unit test cases",
          "Jasmine & Karma Configuration With Angular",
          "First Angular Unit test case",
          "Exclude Angular unit test case from Execution",
          "Jasmin Matchers in angular unit test case",
          "ToBe and ToEqual in-built matcher in angular unit test",
          "toBe(true), toBeTrue() and toBeTruthy() , toBeFalse() and toBeFalsy() Jamine",
          "toBeGreaterThan() ,toBeGreaterThanOrEqual() ,toBeLessThan() ,toBeLessThanOrEqual",
          "toMatch() and toBeCloseTo() Jasmin Matcher",
          "toBeDefined and toBeUndefined Jasmine matcher",
          "tobenull() ,tocontain() ,tobeNan() , toBePositiveInfinity, toBeNegetiveInfinity",
          "BeforeEach and AfterEach Jasmine functions",
          "BeforeAll and AfterAll in Jasmin Method",
          "Arrange-Act-Assert(AAA) Pattern",
          "TestBed and Component Fixture",
          "SpyOn to mock and Stub methods in angular unit test",
          "Change detection in angular unit test",
          "Debug Element & DOM events in angular unit test",
          "Call Private Method and private variable in angular unit test",
          "SpyOn Private Method in angular unit test",
          "Angular Unit test on interpolation",
          "Unit test on property binding",
          "Unit test on ngClass and ngStyle Binding",
          "Unit test on Attribute Binding",
          "Unit test on event Binding",
          "WhenStable, Async Test and twoWay data binding unit test",
          "FakeAsync and async in unit test",
          "Unit Testing on Conditional Rendering (If condition)",
          "Angular Unit test on ngSwitch",
          "Angular unit test on ngFor",
          "Angular unit test case on dependency injection",
          "Angular unit test case on Pipe and Custom Pipe",
          "Angular Unit test case on input output directive",
          "Angular unit test On Routing",
          "Angular Unit test case on lazy loading",
          "Angular Unit test case on Http Client or services method",
          "Angular Unit test case for Subscribe method",
          "CreateSpy , createSpyObj and spyOn in angular unit test",
          "Angular unit test case on Reactive Forms",
          "Angular Unit test case on template driven form",
          "Code Coverage in angular unit test"
        ]
      },
      "requirements": [
        "Basic knowledge on Angular"
      ],
      "description": "I welcome you all to this amazing course. Hope the learning would add value to your knowledge and you will learn How to write angular unit tests using Jasmine and Karma\nWishing you a happy understanding. Please do comment and provide feedback on the course.\nRequirements\nVisual Studio Code\nBefore continuing on this course we should have basic knowledge of Angular\n\n\nThis course will teach you about:\nAngular unit test case using Jasmine and Karma, we will cover every topic which we use to create an angular application\n\n\nAutomated testing concepts and tools\nWhat to unit test and how angular unit test flow\nTracking how much of your code is covered by tests using code coverage\nTesting re-usable components\nTesting templates driven\nTesting forms driven\nTesting Spy\nTesting HTTP client\nTesting navigation\nTesting attribute directives\nMocking dependencies\nWorking with asynchronous operations\nWhat is TestBad\nThe source code is also attached topic-wise.\nThis course is suitable for the following:\nBeginner and experienced angular developers\n\n\nAbout project implementation\nIn this course, we will see each topic with a real-time example and we will see how to implement all concepts in Visual studio code so we are able to understand it very well.\nI recommend, please you install visual studio code so it will be helpful to implement logic in visual studio and you will learn every concept practically.\nIt will be very helpful if you have basic knowledge of angular.\nI am glad that you successfully completed the course.\nHope you enjoyed it.\nKeep growing.\nHave a wonderful life ahead!!!!!",
      "target_audience": [
        "developer",
        "student",
        "Angular developer"
      ]
    },
    {
      "title": "SVG Fundamental",
      "url": "https://www.udemy.com/course/svg-fundamental/",
      "bio": "Learning the theoretical foundations of SVG and SVG Animation [ W3C specification in detail ]. Homework practice.",
      "objectives": [
        "EDUCATIONAL ROUTE [from simple to complex (inductive method of cognition)]:",
        "1. The simplest concepts [coordinate system features in SVG, <svg> as a container element]",
        "2. Types & Application of basic shapes [painting (fill stroke markers), clipping mask] ......FROM 3. TO 26. -> INSIDE",
        "3. Positioning of primitives in the coordinate system and control of their geometric properties [<rect>, <circle>, <ellipse>, <line>, <polyline>, <polygon>]",
        "4. Element <path> and its application in SVG [current point concept]",
        "5. Path command [moveTo(M,m), lineTo(L,l), curveTo(C,c,S,s), curveTo(Q,q,T,t), arc(A,a), closePath(Z,z)]",
        "6. “d” property & Path data syntax [speed up rendering by minimizing file sizes]",
        "7. Bezier curve [cubic, Smooth cubic poly, Quadratic] & Elliptical arc curve commands and its arguments",
        "8. Options for changing styles of graphic elements",
        "9. The CSS rules specificity [specificity calculation, priority of applied styles]",
        "10. Presentation attributes [using, limitations]",
        "11. Internal user agent operation algorithms in SVG [(rx, ry calculation),(constructing a rectangle with the rounded corners), (ellipse rendering)]",
        "12. ***EXCLUSIVE: All the image customization options in the SVG [the concept of viewport in SVG, viewBox and its parameters, viewport initial coordinate system, local coordinate system]",
        "13. The relationship of viewport and viewBox in SVG [transformation of coordinate system in image rendering, the effect of the viewport and viewBox settings on the final image, pan and zoom functions]",
        "14. Advanced image customization options in the SVG: <preserveAspectRatio> attribute [<align> & <meetOrSlice> parameters]",
        "15. Nested viewport [units, percentage calculation algorithm]",
        "16. Document structure [SVG fragment, types of elements], Grouping [<g> element and its properties], Reusable content [<defs>, <use>, <symbol> element and their application features]",
        "17. Painting [types of graphic elements, <fill> & <stroke> attributes, different ways of painting, <paint> values, SVG color units]",
        "18. Fill properties [color control flexibility in fill methods, fill algorithm in case of value fill-rule property: <nonzero>, fill algorithm in case of value fill-rule property: <evenodd>, flexible control of opacity]",
        "19. Stroke properties [stroke, stroke-width, stroke-opacity, paint order], [stroke-linecup values (but, round, square), stroke-linejoin values (bevel, round, miter, arcs, miter-clip), miter (miter-length calculation, miter-limit)], [stroke-dasharray, stroke-dashoffset]",
        "20. Markers [comparing attributes and properties of markers & symbol elements, marker creation algorithm]",
        "21. Bounding boxes [three kinds of bounding boxes (object, stroke, decorated), revealing bounding boxes of various elements in code]",
        "22. Paint Servers [types of paint servers (gradients, patterns), paint servers properties, paint server user agent algorithm]",
        "23. Gradients [types of gradients (linear, radial), concepts of vector and normals, color stops, color transitions]",
        "24. Linear Gradient [vector attributes, gradient stops (stop elements), <offset> attribute, stop-color properties, stop-opacity properties, algorithm for constructing a linear gradient by a user agent during rendering, gradientUnits (objectBoundingBox, userSpaceOnUse), gradientTransform (translate, skew, rotate, scale), spreadMethod (pad, reflect, repeat)]",
        "25. Radial gradient [vector (inner & outer circumference and their geometric properties), stop color in radial gradient]",
        "26. Patterns [fill, stroke, tile concept; attributes (x,y,height,width, patternUnits, viewBox, preserveAspectRatio, patternTransform, href, patternContentUnits)]",
        "BRIEFLY SUMMARIZING: You will get theoretical knowledge & You will have real practical assignments, which will consolidate your knowledge!"
      ],
      "course_content": {
        "The simplest concepts: сoordinate system, <svg> container element, basic shapes": [
          "C.S features <svg>element [first simplified approach to the concept of viewport]",
          "Types & Application of Basic Shapes. <rect> geometry [x,y,width,height,rx,ry]",
          "<circle> <ellipse> <line> elements and its geometric properties",
          "<polyline> [points = “x1,y1, … xn,yn”] <polygon> [points = “x1,y1, … xn,yn”]"
        ],
        "<path> element [purpose, application]. C.P. concept. “d” property [Path data]": [
          "Path data[syntax]. C.P. concept. moveTo(M,m) lineTo(L,l) closePath(Z,z) commands",
          "The cubic Bézier curve, Smooth cubic poly Bezier curve and its geometry",
          "Quadratic Bezier Curve, Smooth Quadratic poly Bezier and its geometry",
          "elliptical arc curve [Rx, Ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]"
        ],
        "Styling. Presentation attributes & geometry properties. CSS rules specificity": [
          "Options for changing styles of SVG graphic elements",
          "The CSS rules specificity. Specificity calculation. Priority of applied styles",
          "Geometry properties & Presentation attributes. Using. Limitations",
          "G.P in-depth [Part1]. rx and ry in detail. rx, ry calculation algorithm",
          "G.P in-depth [Part2]. Algorithm of the rectangle with the rounded corners",
          "G.P in-depth [Part3]. Algorithm of the ellipse rendering"
        ],
        "The concept of viewport in SVG, viewBox and its parameters [x, y, width, height]": [
          "The concept of viewport & viewBox in SVG. Initial & Local coordinate systems",
          "The relationship of viewport and viewBox in SVG",
          "Your help is needed here!",
          "The viewBox and transformations",
          "The preserveAspectRatio attribute",
          "Establishing a new SVG viewport [nested viewport, units]"
        ],
        "Document structure [Types of elements, Grouping (<g> element), Reusable content]": [
          "SVG fragment, types of elements",
          "Grouping. Element <g>. Properties of <g> element as a container element",
          "Reusable content [<defs> <use> <symbol> elements]",
          "Application features of the <use> element"
        ],
        "Painting": [
          "The paint operations. <paint> values. SVG color units",
          "Fill properties",
          "Stroke properties [stroke, stroke-width, stroke-opacity, paint order]",
          "Stroke properties: stroke-linecup, stroke-linejoin",
          "Stroke properties [stroke-dasharray & stroke-dashoffset]",
          "Markers",
          "Bounding box"
        ],
        "Paint servers [gradients & patterns]": [
          "Paint Servers",
          "Gradients [types, vector, normal, color stops, color transitions]",
          "linear Gradient: the vector attributes [x1,x2,x3,x4]",
          "linear Gradient other Attributes[gradientUnits, gradientTransform, spreadMethod]",
          "Radial gradient [vector, inner & outer circumference,- stop color]",
          "patterns [tile concept, types, attributes]"
        ],
        "SVG Animations": [
          "Information",
          "SVG's animation elements (Part1)",
          "SVG's animation elements (Part2)",
          "Attributes to identify the target element for an animation & control the timing",
          "Attributes to control animation over time",
          "Attributes to control additivity, Morphing example & Clock values",
          "SVG elements, attributes, properties and data types that can be animated",
          "Interactivity features in SVG"
        ],
        "Bonus section": [
          "Information",
          "Interactive Web Animation. Demo lesson [part 1]",
          "Interactive Web Animation. Demo lesson [part 2]",
          "Interactive Web Animation. Demo lesson [part 3]",
          "Creative Web Animation with GSAP 3. Demo lesson",
          "Staggered animations [configuration objects]",
          "ScrollTrigger [Part1]",
          "ScrollTrigger [Part2]",
          "ScrollTrigger [Part3]",
          "ScrollTrigger [Part3]",
          "Advanced Web Animation with Canvas. Demo lesson [part 1]",
          "Advanced Web Animation with Canvas. Demo lesson [part 2]",
          "Advanced Web Animation with Canvas. Demo lesson [part 3]",
          "Advanced Web Animation with Canvas. Demo lesson [part 4]",
          "Advanced Web Animation with Canvas. Demo lesson [part 5]",
          "What's next?"
        ]
      },
      "requirements": [
        "No special requirements"
      ],
      "description": "Do you want to learn Scalable Vector Graphics (SVG)? Perhaps you already have basic knowledge and want to deepen and expand it? Congratulations! You are on the right track.\nThis course provides the most complete and detailed information on the Scalable Vector Graphics standard of the W3C (World Wide Web Consortium) specification.\nToday, 99% of the World Wide Web sites actively use this standard. Take a look at some of the benefits of SVG:\n- scales without loss in image quality, which means it is ideal for responsive sites (graphic elements of such sites should be displayed without distortion at any screen resolution);\n- has a small \"weight\" due to the ability to good compression (any site, ideally, should load quickly);\n- supported by all modern browsers (SVG is fully compatible with web technologies and therefore becomes an organic part of sites);\n- easy to use and easy to modify (the format allows you to set the necessary settings for color, shadow, blur and other design effects, both in a graphics editor and on the page itself using CSS, JavaScript);\n- animated and made interactive (adding objects to the digital description of the picture and connecting scripts of the Javascript programming language to them);\n- SVG is a text format, so you can optimize the file for SEO without external meta tags by directly entering keywords into the image code\nAnd believe me, that's not all! To appreciate all the advantages of SVG, you need to work with it. But first, you should study it!\n\n\nA classic academic learning model awaits you, allowing you to activate thinking, creativity and create new things.\nIn the video lessons of this course, you will become familiar with the theory of Scalable Vector Graphics (language elements, syntax, structure,  algorithms, data types).\nAll the practical part is attached to the lessons. Here you will find pdf documents summarizing lecture materials as well as homework modules (HTML & CSS files), where specific practical goals will be set for you. You will also find modules with answers (showing one of the possible options for the implementation of the task).\nThe academic model of training has proven itself all over the world for a long time and today there is no alternative to it in terms of the effectiveness of training specialists.\nBasically, if you are looking for a hands-on course to learn a few tricks using SVG then DON'T take the course. Find the course where the instructor types the code and repeat. Everyone else: you should take the course, today!",
      "target_audience": [
        "Target students: Web Researchers"
      ]
    },
    {
      "title": "#1 Complete Blockchain, Cryptocurrency, Wallet Development",
      "url": "https://www.udemy.com/course/toufiqelahy5/",
      "bio": "Build a Blockchain and Cryptocurrency like Bitcoin Using C# , Asp.Net Core , Web Api and Mobile Wallet app using Xamarin",
      "objectives": [
        "Can make your own Cryptocurrency",
        "Able to make wallet app",
        "Will able to use the Cryptocurrency as payment gateway in any site"
      ],
      "course_content": {
        "Introduction": [
          "Final Project",
          "why this course"
        ],
        "Blockchain Theory": [
          "Blockchain Theory part 1",
          "Blockchain Theory part 2"
        ],
        "Building BlockChain Api's": [
          "Install Visual Studio",
          "Plan for this Section",
          "Initial Project Setup",
          "Implementing Class Library",
          "Blockchain Implementation",
          "Web Api REST Services",
          "Implementing swagger and Enabling CORS",
          "Blockchain FrontEnd",
          "Adding New Miner to the Network",
          "Explanation 1: How genesis block with initial transaction added to BlochChain",
          "Explanation 2: How Miner's mine the transaction",
          "Explanation 3: How new Miner can join the Network and How Consensus works"
        ],
        "Building BlockChain Client Application": [
          "Plan for this Section",
          "Implementing BlockChain Client Api's",
          "Private/Public Key generation",
          "Making Transaction By sending Coins",
          "Implementing View Transaction Page",
          "Implementing Wallet Web App",
          "Explanation 1: Overall Flows",
          "Explanation 2: How Transaction Works",
          "Explanation 3: How Miner Mine Unconfirmed Transactions",
          "Explanation 4: How Consensus Works (Longest chain Win)",
          "Explanation 5: Whoever Mine First will be the winner"
        ],
        "Video Unlocking Online Shopping Site": [
          "Introduction of this project",
          "Adding Classes and all necessary files",
          "Implementing SignalR",
          "Video Unlocking Page",
          "QR Core Generator Page",
          "Implementing Payment Api"
        ],
        "Mobile Wallet Development Using Xamarin": [
          "Initial Project Setup",
          "Adding Model Classes",
          "Working with Xaml and Code behind Part 1",
          "Working with Xaml and Code behind Part 2",
          "How all projects work all together Part 1",
          "How all projects work all together Part 2",
          "How all projects work all together Part 3",
          "How all projects work all together Part 4",
          "How all projects work all together Part 5"
        ],
        "Learn Asp.NET Core by building E-Learning Site (Stripe+Bitcoin) Payment Gateway": [
          "Installing Visual Studio",
          "Installing Sql Server",
          "Installing Sql Server Management Studio",
          "Playing with sql Server",
          "Initial Project Setup",
          "Database Migration and File Upload",
          "Facebook Authentication",
          "Facebook Login",
          "Implemeting Database",
          "Working with Identity",
          "Implementing Course page",
          "ApplicationUser Role Management",
          "Specifying Role",
          "Stripe Payment Gateway",
          "Video uploading Platform",
          "Display Profile Pictures"
        ],
        "Bitpay API Integration with Asp.NET Core : Bitcoin Payment Gateway": [
          "Bitpay API Integration : Bitcoin Payment Gateway (with Source Code)",
          "Bitpay API Integration with Asp.NET Core (Real World Implementation)",
          "Installing Bitpay wallet in mobile And making Bitcoin Payment"
        ],
        "HIRE ME For Real-World Project": [
          "Mobile Wallet (Ethereum and Erc20 token)",
          "Send erc20 token to Any Account without Eth Or Gas Fee",
          "NopCommerce Cryptocurrency payment Gateway (plugin)",
          "Erc20 token Payment Gateway in Ecommerce Site",
          "Safe Wallet-Secure Multi Coin Decentralized Wallet",
          "Risk-free Multi Level Marketing on Ethereum Blockchain (1)",
          "Risk-free Multi Level Marketing on Ethereum Blockchain (2)",
          "Risk-free Multi Level Marketing on Ethereum Blockchain (3)",
          "NFT (Non Fungible Token) Sale On Auction Site",
          "Turn Anything Into NFT And Sell On Auction Site",
          "Convert Your Asset Into NFT and Sell On Auction",
          "Escrow Based Digital Content Selling[NFT] MarketPlace",
          "Blockchain Based Banking System and Stable Coin",
          "Layer2 proof of stake Blockchain [Polygon Clone]",
          "OpenSea Clone (Generative ARTs NFT)",
          "Login User With Any EVM Wallet After Creating KYC based NFT"
        ]
      },
      "requirements": [
        "C# programming",
        "Visual Studio 2017",
        "Asp .Net Core Web Api",
        "Xamarin Mobile app Development"
      ],
      "description": "Caution: Each Student will need to purchase The Project which is not belongs to this Course. I have used paid Project on this Course.\nI have Copy+Pasted the code from the paid Project.\nHow to create your Own Cryptocurrency. This is the complete Cryptocurrency making Course based on blockchain technology using C#..\n\nHere, What You will Learn:\n> How Miner’s can join the Network\n> How Proof Of Work function Works by solving Cryptographic puzzle based on Sha256 algorithm\n> How real-time transactions is added to the mempool\n> How Mining Works and Generates New Coins\n> How Transactions are added in a Block after Mining\nAnd:\n> How new block is added in BlockChain after adding transactions in a Block\n> How System resolve the conflicts from a longest chain by validating each block along with verifying each transactions\n[ Consencus: “How Longest chain Win”  ]\n> How Signature of a Transaction get verified\nBy using public key\n> How public and private keys get generated using RSA algorithm\n> How Client User generates Signature using Private key\nAnd:\n> How Wallet Transaction Works\n> How \"Blockchain Client\" for users to generate wallets and send coins\n> How to Buy digital content from Online Shopping Site using this cryptocurrency\n> How user can check Life-time Transaction and balance\n> How user can send coin to another user using mobile wallet after scanning QR Code\n> How user can generate QR Code image to send/receive coins\nAnd many more….\nWhy Cryptocurrency is the Future?\nAll you need is to generate public and private keys then save it in order to make transaction.\n[No Need Bank to follow complex process]\nAnyone can receive money using their publicKey only.\nAnd anyone can send money using wallet app to generate signature using privateKey.\nThis is the most easiest way to transfer money within seconds. In near future the process will be so efficient that user will able to make transaction using human body parts [Artificial Intelligance]\nInitial Story:\nAnyone who will download the script can join the network by broadcasting the network and they are recognized as Miner. At genesis(initial) 1st block, only miner will have few coins. So, 1st miner will give coins to new user . Thus transactions will take place and then Miner will mine the transactions and system will give few coins to miner as reward. This way new coins get generated. Whole information is saved in miner’s machine.\nYou will understand whole process once I will explain blockchain theory and You will better understand once you finish building Cryptocurrency application with me.\nHow this Coin will Get Real Values\nIf Miners confident with this script and start joining the network and if so many users do transaction with real fiat currency that time this cryptocurreny will have real values. It’s totally based on trust and faith..\nAnd coin values also follows demand and supply rules of economic…\nCourse Summary\nWithin This Course:\nModule 1: I will explain Blockchain Theory\nModule 2: I will build BlockChain application then expose through web api.\nModule 3: I will build blockchain client application to interact with BlockChain api’s\nModule 4: I will Build Shopping Site using asp.net core, SignalR\nModule 5: I will build Mobile Wallet app using Xamarin to buy digital contents from the shopping site.\nWhat technology is used in front-end?\nJquery , Ajax\nHTML & Razor Code\nWhat technology is used in back-end?\nc#, Linq\nASP .NET-MVC Core\nAsp.NET Web Api\nWhat tools you will need?\nVisual Studio 2017\nASP.NET Core 2.0 will need to be installed in your Machine\nAny browser Whatever you like most\nWhy I applied My Plugin to Asp .NET Core application:\nCross-platform needs.\nHigh-performance and scalable systems.\nAll coding best practices (asynchronous programming, dependency injection)\nWithin this course I will Show:  How powerful and complex cross-platform real-time blockchain and cryptocurrency application we can build using asp.net core, web api and also mobile wallet using Xamarin\nI’m always updating this course with fresh content, too.\nIt’s no secret how technology is advancing at a rapid rate. New, more powerful hardware and software are being released every day, meaning it’s crucial to stay on top with the latest knowledge.\nThat’s why I’m always adding new, up-to-date content to this course at no extra charge. Buy this course once, and you’ll have lifetime access to it and any future updates (which are on the way as we speak).",
      "target_audience": [
        "Anyone who loves Block-chain technology",
        "Students who are looking to build Cryptocurrency",
        "Curious human to learn craziest technique to achieve using block-chain",
        "Students who want to build Wallet"
      ]
    },
    {
      "title": "OAuth 2.0: The Complete Guide",
      "url": "https://www.udemy.com/course/getting-started-with-oauth-20/",
      "bio": "Covering OAuth 2.0 Workflows, Endpoints, Scopes, Tokens: JWTs and API Security. Real-life examples included!",
      "objectives": [
        "Deep Understanding of the OAuth 2.0 Protocol",
        "Deep dive into Tokens, their Types and Lifetime",
        "How is OAuth actually working",
        "OAuth Grant Types",
        "What is JWT and its Structure",
        "Use OAuth to Protect your APIs",
        "OAuth Endpoints",
        "OAuth Scopes",
        "Hand-on practice examples to access Public APIs using OAuth 2.0",
        "Why Social and Internet Applications give us the option to sign up using other applications"
      ],
      "course_content": {
        "OAuth Notions": [
          "What is OAuth?",
          "The General OAuth Flow Explained",
          "OAuth Terminology and Key Components",
          "OAuth Detailed Workflows",
          "What is OAuth used for?",
          "OAuth Scopes",
          "OAuth Endpoints",
          "OAuth Best Practices"
        ],
        "Tokens Concepts": [
          "Reference tokens",
          "Self Encoded Tokens - JWT",
          "JWT Structure",
          "Tokens Lifetime"
        ],
        "OAuth 2.0 in practice": [
          "Setup OAuth 2.0 in Your Application",
          "Login on Facebook using OAuth 2.0",
          "Implementing OAuth 2.0 (Hands-on)"
        ],
        "Where to go from here?": [
          "Bonus lecture"
        ],
        "OAuth 2.0 Quiz": [
          "Welcome to this quiz!",
          "OAuth 2.0 Quiz"
        ]
      },
      "requirements": [
        "No prerequisites needed for this course"
      ],
      "description": "OAuth 2.0 has become the web-industry standard protocol for providing secure access to web APIs, allowing applications to access users' data without compromising security and actually passing their password around. Companies around the world add OAuth to their APIs to enable secure access from their own mobile apps and third-party IoT devices and even access to banking APIs. So if you think about the big names in the technology industry, you can pretty much bet they have OAuth implemented.\nWith that being said, it is pretty obvious that this skill will improve by a mile your software developer abilities and will make you much more valuable in the work field.\nIf you're building an API, you'll learn in this tutorial the differences and tradeoffs between different access token formats, including JWT, how to choose an appropriate access token lifetime, and how to design scopes to protect various parts of your APIs.\n\n\nBy the end of this course, you’ll understand:\nThe problems OAuth was created to solve\nThe actual types of workflows regarding OAuth detailed in steps\nThe basics of OAuth 2.0 including what it is, how it is used, and what it is used for.\nOAuth 2.0 Endpoints that you can call\nOAuth 2.0 Terminology and key components\nDeep dive into tokens and their types\nJWT and its structure and also how they work\nSo, if all of this sounds interesting, I look forward to seeing you guys in the lectures! :)",
      "target_audience": [
        "This course is for beginners in API Security and OAuth 2.0"
      ]
    },
    {
      "title": "Next.js With Tailwind CSS-Build a Frontend Ecommerce Project",
      "url": "https://www.udemy.com/course/nextjs-with-tailwind-css-build-a-frontend-ecommerce-project/",
      "bio": "Learn to Design Next.js Apps With Tailwind CSS. Build a Complete Responsive Frontend E-commerce Project.",
      "objectives": [
        "Next JS to Build a Complete Frontend Project",
        "Next JS With Tailwind CSS",
        "How to Design a Frontend App Using Tailwind CSS",
        "A Complete Fronted E-commerce Project",
        "How to Build a Responsive Frontend E-commerce Project with Tailwind CSS"
      ],
      "course_content": {
        "Introduction": [
          "Project Demo"
        ],
        "Creating a Next JS Project": [
          "Creating a Next JS Project Part-1"
        ],
        "Files and Folders of Next JS": [
          "Files and Folders of Next JS Part-2"
        ],
        "Starting With Top Header": [
          "Starting With Top Header Part-3"
        ],
        "Adding Contents to Top Header": [
          "Adding Contents to Top Header Part-4"
        ],
        "Styling the Top Header": [
          "Styling the Top Header Part-5"
        ],
        "Styling the Remaining Top Header": [
          "Styling the Remaining Top Header Part-6"
        ],
        "Creating the Main Header": [
          "Creating the Main Header Part-7"
        ],
        "Styling the Main Header": [
          "Styling the Main Header Part-8"
        ],
        "Creating and Styling the Navbar": [
          "Creating and Styling the Navbar Part-9"
        ]
      },
      "requirements": [
        "No previous experience is required to learn Next Js and Tailwind CSS",
        "A laptop or computer is required for writing code",
        "Basic HTML and CSS knowledge"
      ],
      "description": "In this course, you are going to learn Next.js and Tailwind CSS. You will build a complete frontend ecommerce project.\nThe key features that you will learn in this course are:\n\n\nHow to work with Next.js and organize the Next.js project.\nHow to use Tailwind CSS and integrate it with a Next.js project.\nHow to create a complete responsive e-commerce app using Tailwind CSS.\nYou will gain a complete understanding of how to create a Next.js frontend project from start to finish. While developing it, you will learn how to organize the project effectively.\nYou will explore real-world applications of Tailwind CSS as you design the entire app using this framework.\nHow to work with Next.js and its various features, such as passing data using props and sharing data between components.\nYou will learn how to utilize different external npm packages with Next.js.\nIn the complete fronted app that you will build in this course, you will learn how to add a carousel slider and make it responsive for all devices using Tailwind CSS.\nYou will encounter various sections in the project where you will tackle different design challenges using Tailwind CSS and learn how to resolve them.",
      "target_audience": [
        "If you're a fronted developer",
        "If you want to build a complete project with Next JS and Tailwind CSS",
        "If you are interested in learning Tailwind CSS"
      ]
    },
    {
      "title": "HTML5 Game Development : Beginner to Pro",
      "url": "https://www.udemy.com/course/html5-game-development-beginner-to-pro/",
      "bio": "Learn to use the HTML5 Canvas to create HTML5 games that will run in all modern desktop and mobile browsers.",
      "objectives": [
        "Create stunning games that will run in most modern browsers, desktop and mobile.",
        "Understand how to approach a complex interactive game for a client.",
        "Understand how to approach multi-player games using web sockets.",
        "How to add the bells and whistles to your game that make it stand out in the market"
      ],
      "course_content": {
        "Introduction": [
          "Join the Facebook Group",
          "JavaScript in 12 Easy Lessons - e-book",
          "What are you going to learn",
          "Using Web Server for Chrome",
          "Using GitHub",
          "Setting up a web server on Windows",
          "Setting up a web server on a Mac",
          "Setting up a web server on Linux",
          "Creating, testing and inspecting your test page",
          "Are you ready to start the course"
        ],
        "Getting started with the HTML5 Canvas": [
          "Showing a single image on a HTML5 canvas",
          "Using the resources",
          "Multiple sprites and frame refreshing",
          "Multiple sprite states and destroying sprites",
          "Adding interactivity",
          "Using sprite sheets",
          "What do you know about simple sprites"
        ],
        "Animating your sprites": [
          "Introducing frame animation",
          "Canvas transforms",
          "Adding user interaction to control the sprite",
          "What have you learned"
        ],
        "Let's make a noise": [
          "Using the AudioContext interface",
          "Adding music",
          "Adding sound events to a simple game",
          "What have you learned?"
        ],
        "Creating a collapse game": [
          "Initialising the collapse game",
          "Understanding the different game states and different sprite states.",
          "Finding the connected sprites using recursion",
          "Use recursion to find connected items in a 8 x 9 grid",
          "Updating the game grid, spawning new sprites and handling the drop",
          "Amending the collapse game"
        ],
        "Physics is fun": [
          "Introducing the Matter physics engine",
          "Adding physics bodies to sprites",
          "Adding mouse events to the physics engine",
          "Controlling sprite animations with physics",
          "What have you learned?"
        ],
        "Using Spritoon": [
          "How to use the Spritoon app",
          "Rigging a character with the Spritoon online app",
          "Overview of the Spritoon library",
          "Matrices to move, rotate and scale sprites in a parent-child hierarchy"
        ],
        "OK - we know enough, let's make a real game": [
          "Save the bear - navigate a polar bear across melting icebergs",
          "Controlling the user character and adding a UI",
          "Adding a download progress bar",
          "Adding instructions and updating sprite layering",
          "Create a Spritoon Anim",
          "Test your knowledge of pre-loading"
        ],
        "Platformers": [
          "Preloading and scrolling a platform game",
          "Handling the user character",
          "Collision testing"
        ],
        "Games where the computer is the opponent": [
          "Initialising the reversi game",
          "Adding player moves",
          "Adding computer moves"
        ]
      },
      "requirements": [
        "Basic knowledge of setting up a website.",
        "A text editor, Brackets (free) is recommended.",
        "A basic knowledge of HTML and javascript is assumed."
      ],
      "description": "HTML5 Games run on just about all devices. Learn how to create them from someone who has spent the last 20 years creating casual games. All HTML5 games are based around a knowledge of displaying content on a Canvas using JavaScript. We use the latest JavaScript version, ES6, so as well as learning game development you will also learn the latest JavaScript syntax. In this course we start with the basics of individual images on a Canvas. From there we move onto sprites - developing step by step a sprite library that you are free to use in your own games. The library allows you to display frame animated sprites that show a flip book of images to display walking and running characters and much more.\nYou will learn:\nAbout physics to easily add dynamic collision detection to your games.\nHow to create platform games, puzzle and card games.\nHow to add multiple layers of audio.\nHow to add a preloader to your games.\nHow to add the bells and whistles that make your game stand out.\nHow to handle multiple users via WebSockets.\nAll code is free to use in your own games. The course contains lots of assets and code examples that you are free to use in your own games. As a course student you also have access to an online tool for creating spritesheets and animations.\nHaving completed this course you will be ready to develop any 2d game. Only a basic knowledge of HTML and Javascript are assumed, all ideas are explained with examples you can try and resources you can use in your own games.\nTake a look at the trailer to see the kind of content that you will be building once you've studied the course. HTML5 Game Development is great fun to learn and the skills you learn in this course will greatly improve your JavaScript skills which will be useful in your Web Development career.\nStudent reviews\n“Great Course!!! I am learning so much. Nicholas is very good at presenting a concept explaining it and then implementing it into code all the while, allowing me the student to code along addressing any nuances that may be there. He is also very responsive to any questions. I know that enrolling into this course was a great decision and I already have the confidence to begin planning and developing my first game”\n\"If you're looking for the stepping stones to becoming a Game Developer with HTML5, this is the best starting stone you could possibly find. Love this course!!\"\n\"This is the first game development course I have been through where I really feel like I am being taught by an absolute expert/professional in the field.\"\n\"I am currently taking a gaming class in college and this course so far has been able to help me understand what the professor was doing as they expected you to know just a proper setup which I didn't, and this course brought me up to speed very quickly by just doing the initial setup.\"",
      "target_audience": [
        "Students wishing to learn about 2d game authoring",
        "Developers who want to use the HTML5 canvas for complex graphic content.",
        "Students who want to learn tips and tricks from a pro on interactive sprite animation",
        "Developers who want to learn how to create platform, tiled, card and puzzle games."
      ]
    },
    {
      "title": "The Laravel essential guide.",
      "url": "https://www.udemy.com/course/the-laravel-essential-guide/",
      "bio": "Learn to build beautiful web apps using Laravel. Includes three practice projects.",
      "objectives": [
        "Create web application using Laravel's front and backend logic."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "IDE"
        ],
        "Installation": [
          "XAMPP and Composer - MAC",
          "XAMPP and Composer - WINDOWS",
          "Creating a Laravel project - MAC",
          "Creating a Laravel project - WINDOWS",
          "Configuring XAMPP - MAC",
          "Configuring XAMPP - WINDOWS"
        ],
        "The basics": [
          "Structure overview",
          "Working with routes",
          "Route list and names",
          "Using controllers",
          "Controllers with resource",
          "A better way to routes",
          "Blade layouts",
          "Blade static files",
          "Component slots",
          "Passing values to views",
          "Control structures",
          "Connecting to a DB",
          "Migrations",
          "Modifying tables"
        ],
        "Eloquent": [
          "Starting with eloquent",
          "Getting data",
          "Saving and updating",
          "Mass assignment",
          "Deleting posts",
          "Softdeletes"
        ],
        "Eloquent Relationships": [
          "Introduction to Relationships",
          "One to one",
          "One to one - reverse",
          "One to many",
          "Many to many",
          "Has many through",
          "Polymorphic one to one and one to many",
          "Polymorphic many to many",
          "Polymorphic many to many reverse"
        ],
        "Forms and the db": [
          "Forms and creating a template",
          "Posting data",
          "Adding data to the DB",
          "Post index",
          "Editing posts",
          "Delete posts",
          "Validation",
          "Validating with requests"
        ],
        "More on Laravel": [
          "Carbon",
          "Accessors and mutators",
          "Authentication",
          "More on authentication",
          "Sessions",
          "More on session and flashing",
          "Creating custom middlewares",
          "Creating an admin middleware",
          "Group middlewares",
          "Seeders",
          "Factories",
          "Getting a WYSIWYG",
          "Adding a filemanager",
          "Uploading files",
          "Pagination"
        ],
        "Practice project": [
          "Installation and setup",
          "Admin user and posts View",
          "Creating an admin layout",
          "Admin users: Index",
          "Admin users: posting users",
          "Admin users: posting users 2",
          "Admin users: posting users validation",
          "Admin users: editing users",
          "Protecting admin routes",
          "Admin posts: creatiing posts",
          "Admin posts: creating posts 2",
          "Admin posts: creating posts 3",
          "Admin posts: filemanager",
          "Admin posts: request file",
          "Admin posts: index view",
          "Admin posts: edit posts",
          "Admin posts: delete posts",
          "Adding categories",
          "Edit categories",
          "Adding title and description to posts",
          "Creating the app layout",
          "Creating the home carrousel",
          "Home post reviews",
          "Creating the post view",
          "Pretty url with SLUGS",
          "Searching for posts",
          "Finishing the search posts",
          "Adding a page counter",
          "Adding a most views posts to home",
          "Creating the admin Site data",
          "Using global variables"
        ],
        "Rest API": [
          "Project setup",
          "Get all and Single data post",
          "Editing data post",
          "Deleting records",
          "Adding posts and using controllers",
          "Register users using TOKENS",
          "Generating the token",
          "Login users",
          "Protecting routes"
        ],
        "Laravel mix": [
          "Compiling assets or files",
          "More on laravel mix"
        ]
      },
      "requirements": [
        "Just a little bit of javascript and some CSS."
      ],
      "description": "Do you want to learn the whole process of building an App with Laravel ?.\nThis is the course for you.\n\n\nWe will start from the very beginning, from \"I don't even know how to install it....and why should I“ to actually understanding how Laravel communicates with the front and backend.\nYou will learn all the logic and practice behind Laravel in different modules and as we advance through the course we will be increasing the difficulty.\n\n\nSince I believe that the best way to fully learn is by coding, after the “getting to know laravel” sections we will put everything in practice with a practice project.\n\n\nTo sum everything up, you will learn in this course:\nThe very basics of Laravel. How to install and set up everything( Mac and Windows )\nWe will talk basics with templates, controllers, migration and models.\nOnce we are done with the basics, we will learn about Eloquent.\nWe will connect our Laravel app with mysql.\nPerform crud operations.\nWill use plugins like WYSIWYG, Filemanager, slugs, etc.\nPut everything into practice with a practice project.\n\n\nWhat about the instructor experience ?\nWell I've been around for 10 years now, built lots of applications for small projects and big companies like Citi, Fox, Disney and a lot more.\nToday I work as developer for a major company developing applications in React or Angular mostly, but I like to teach in my spare time.\n\n\nHow about the target audience?\nThis course is for almost everyone, a little bit of Javascript, css and HTML is required.\nIf you want to take your coding to the next level, this is the course for you.",
      "target_audience": [
        "This course is for everyone."
      ]
    },
    {
      "title": "JavaScript: Learn Front End Web Development",
      "url": "https://www.udemy.com/course/lern-front-end-web-development-with-javascript/",
      "bio": "Are you ready to become a full stack Web Developer? If your answer is YES, then welcome to our course!",
      "objectives": [
        "How to build dynamic websites and web applications using JavaScript",
        "Write clean, modular and robust JavaScript code according to the best coding practices",
        "Learn and understand any JavaScript based framework quickly"
      ],
      "course_content": {},
      "requirements": [
        "Understanding of HTML and CSS basics",
        "Have any text editor (we will use sublime text and we'll install it together)"
      ],
      "description": "Welcome to \"Learn Front End Web Development With JavaScript\" course!\nAs you probably know JavaScript gives your websites extra functionality that can be executed on the user's computer without re-connecting to the servers.\nIt's the most popular programming language in the world and it's used for creating dynamic action on your websites. Because of this, the user interface becomes much more friendly and much more interactive.\nIf you want to remove, change or add a content to your websites dynamically, you must know JavaScript anyway!\n\nLearning JavaScript will allow you to become a full stack web developer. With JavaScript you'll be able to use front end frameworks like React or Angular or any other JavaScript based frameworks. And you also you'll be able to code on back end server side with NodeJS and create databases with MongoDB.\nFundamental understanding of JavaScript syntax will also allow you to understand frameworks like jQuery really quickly.\nJavaScript is absolutely required to understand AJAX which lets you load content on your websites without reloading the whole website.\n\nOur JavaScript course is based on the best coding practices for developing clean, easy to read and maintain, well-performing code in JavaScript and it I will take you step by step from theory to building your own real-world JavaScript applications.\n\nUpon completion of this course you will know JavaScript perfectly and learning any JavaScript based framework will not be a problem for you anymore!\nJust start your learning today and join the biggest programming community in the world!",
      "target_audience": [
        "Students who are interested in dynamic websites development",
        "People who want to start learning the most popular programming language in the world",
        "HTML and CSS developers who are ready to understand JavaScript and become a full stack web developers"
      ]
    },
    {
      "title": "Web Crawling with Nodejs (H&M, Amazon, LinkedIn, AliExpress)",
      "url": "https://www.udemy.com/course/web-crawling-with-nodejs-hm-amazon-linkedin-aliexpress/",
      "bio": "Learn how to create a web crawler using various methods on popular sites like H&M, Amazon, LinkedIn, AliExpress!",
      "objectives": [
        "Differences between web crawling and web scraping in Nodejs",
        "The 3 main methods to use in web crawling, and when to use what method!",
        "How to get data from sites like H&M and AliExpress easily and fast using their hidden API's",
        "How to build a web crawler for server rendered sites like Amazon to crawl all their products",
        "How to build a Puppeteer based web crawler for a site that requires JavaScript like Linkedin"
      ],
      "course_content": {},
      "requirements": [
        "Basic JavaScript"
      ],
      "description": "Do you want to build a webcrawler in Nodejs?\nIn this course you will learn how to build a webcrawler using the newest JavaScript syntax with popular sites like H&M, Amazon, LinkedIn and AliExpress!\nYou'll learn how to find hidden API's on sites like H&M and AliExpress and see how you can even avoid building a web crawler in the first place, you can save a lot of time this way!\nThen I show how to build a web crawler for Amazon the test-driven way, by building out tests for the various product page layouts there is on Amazon.\nAfter that we'll take a look at how to automate login and scraping profiles from LinkedIn using Puppeteer, the automated Chromium browser!",
      "target_audience": [
        "Students looking to learn web crawling with Nodejs",
        "Students looking to learn web scraping with Nodejs"
      ]
    },
    {
      "title": "Learn how to convert PSD to HTML and CSS responsive",
      "url": "https://www.udemy.com/course/learn-how-to-convert-psd-to-html-and-css-responsive/",
      "bio": "Learn all techniques to covert your PSD design into HTML and make it animate and responsive with CSS media queries",
      "objectives": [
        "Make your own website in HTML from a PSD design",
        "Start your online career as front end web developer"
      ],
      "course_content": {
        "Learn PSD TO HTML & CSS": [
          "Introduction",
          "Finding a PSD design",
          "Slicing from PSD file",
          "Creating basic structure of website in HTML part -1",
          "Creating basic structure of website in HTML part -2",
          "Designing HTML tags in CSS Part 1",
          "Designing HTML tags in CSS Part 2",
          "Designing HTML tags in CSS Part 3",
          "Designing HTML tags in CSS Part 4",
          "Designing HTML tags in CSS Part 5",
          "Designing HTML tags in CSS Part 6",
          "Designing HTML tags in CSS Part 7",
          "Adding animations to different sections",
          "Making website responsive"
        ]
      },
      "requirements": [
        "HTML",
        "CSS"
      ],
      "description": "Are you planning to start your online career? And looking for a good starting point which can serve you all the needs of learning webpage development. Or maybe you are a web developer already and want to enhance your front end skills. OR you want to learn specifically HOW TO CONVERT ANY PSD DESIGN INTO HTML AND CSS AND MAKE IT RESPONSIVE as well.\nEither way, PSD to HTML conversion is a MUST-HAVE skill for any aspiring or experienced web developer/designer out there.\nThis PSD to HTML and CSS conversion course will take you from a complete beginner to a Expert level developer who is feeling comfortable converting PSD designs into fully functional and responsive HTML websites. Adding sliders, adding sliding navigation bars and animations.\nThis course serve you more than just PSD to HTML. This course will give you the ability to understand how HTML works. I made this course to share my knowledge that I received throughout my online career as a web developer. This course will cover allot of different portions where most of the people stuck and find very difficult to come over that issue.\nIn this course we will be learning how can start writing basic structure of HTML by looking at your PSD design, and then design that HTML code in CSS. I will teach you how to deal with problems and bugs that occurs during conversion in HTML. How to fix positions and arrangements of div.\nDuring the development stage, we'll learn a lot of things when styling our design: floats, positioning, width, custom columns, fluid design, full-width backgrounds AND MUCH MORE!!!\nWe will animate things for example\nAnimation of sidebar or navigation menu.\nAdding Image Slider right from scratch\nAdding masonry effect using masonry library to arrange all of your posts aligned and responsive.\nWe will make our website responsive, mobile and tablet friendly using CSS media queries.\nWe will see. What are the basic programming technique that will help you throughout your programming career?\nSo, what are you waiting for? Press on “Take this course” button and start learning web design & development today! 30-day money back guarantee!",
      "target_audience": [
        "Anyone who want to learn how you can convert your PSD design into a real website",
        "Anyone who want to work online as PSD to HTML expert"
      ]
    },
    {
      "title": "Zero to Hero hands-on mastery on HTML5 JavaScript & ES6",
      "url": "https://www.udemy.com/course/zero-to-hero-hands-on-mastery-on-html5-javascript-es6/",
      "bio": "Become a pro HTML5 and modern JavaScript developer by implementing every concepts through project based learning",
      "objectives": [
        "You will learn everything about HTML5, JavaScript & ES6 with examples and projects",
        "You will learn to apply various html tags in different scenarios",
        "You learn different JavaScript and ES6 concepts with hands-on practical examples",
        "You will learn the skill of debugging, finding issue and fixing them",
        "You will learn the basics of web development",
        "You will also learn to use different frontend development tools"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Know Your Instructor & Get Help/Support",
          "Introduction to web development",
          "Installation and Setup"
        ],
        "Basic HTML structure and Tags": [
          "html-structure-comments",
          "head-meta-link-script-tags",
          "headings-p-span-div-br-hr-text",
          "anchor-img-tag"
        ],
        "Layout and Form tags": [
          "Ordered and Unordered list",
          "Table Row Column",
          "Form Input Select Textarea"
        ],
        "Advance HTML Tags and Source code": [
          "inline-block-entities-header-footer-section-button-article-audio-video-iframe"
        ],
        "Javascript - Introduction & Setup": [
          "Introduction to the World of JavaScript",
          "JavaScript Popularity and ECMAScript evolution",
          "Installation and setup",
          "Writing your first javascript"
        ],
        "Basic JavaScript Programming Concepts": [
          "datatype and variables",
          "comments in javascript",
          "operators and operands",
          "string concatenation",
          "string functions",
          "scope in javascript"
        ],
        "Intermediate JavaScript Programming concepts": [
          "if else switch case",
          "object in javascript",
          "array in javascript",
          "function in javascript",
          "alert prompt confirm parse in javascript",
          "loops in javascript",
          "spread operator",
          "ternary operator",
          "array filter function"
        ],
        "Advance JavaScript Programming concepts": [
          "understanding DOM",
          "manipulating DOM with javascript",
          "event and event-listener in javascript",
          "setTimeout and clearTimeout",
          "setInterval and clearInterval",
          "Date and Time Part-1",
          "Date and Time Part-2",
          "JSON object and its manipulation",
          "Arrow function",
          "Window, document, localStorage, sessionStorage",
          "Math object and various functions"
        ],
        "Projects": [
          "Project 1",
          "Project 2",
          "Project 3"
        ],
        "Source Code": [
          "Source code"
        ]
      },
      "requirements": [
        "Anyone who is interested to start doing web development"
      ],
      "description": "If you have been always thinking about learning web development or you have been thinking of becoming full-stack developer then this is the course that will not just teach you rather make you implement each and every concept of HTML5, JavaScript, ES6 like a pro.\nYou will learn every concepts by doing projects.\nMany of the students just shy away from frontend technologies because they think it's not their cup of tea, but this course will break that perception and will make you a developer by teaching you how to implement the concepts without the need of being remembering anything.\nThe topics that will be covered in the course are:\nIntroduction to web development\nClient-server architecture\nThree-tier architecture\nWhat is HTML\nWhat is CSS\nWhat is JavaScript\nLocal development environment setup with industry-standard tools\nPlugins and techniques to speed up development\nDebugging skills\nStructure of HTML page\nHML tag and concept of attributes\nVarious components of HTML document\nMeta tag and its importance\nHead tag\nLink tag\nScript tag\nDisplay tags like h1 until h6\nDisplay tags like paragraph, span, division, label\nInline vs block elements\nHow to use Entities in HTML\nNavigation via an anchor tag\nButton tag\nLoading images on your website\nDifferent utility tags to make text bold, italics emphasize\nListing tags like ul, ol\nLayout tag like table\nHow to create Registration form in HTML\nVarious form tags in HTML like\nform\nDifferent types of input tag\nFile uploading\nCreating dropdown with different options\nWriting address in textarea\nHeader and Footer tag\nSection and Article tag\nVideo and Audio tag\nLoading various websites inside Iframe tag\nMuch more\nYou will get the complete source code so that if you get any doubts anywhere you can just refer the source code.\nThis course not only covers different topics of Html5, JavaScript and ES6 from scratch but also has many projects and real-world scenarios that will make a real modern JavaScript developer.\nFollowing are the topics that will be covered in this Javascript Mastery course:\nSetup Installation\nJavaScript Introduction\nECMAScript evolution\nDifferent types of Data types in Javascript\nVariables & Constants\nDifferent types of Comments in Javascript\nVarious Operators and their working on Operands\nString and String manipulation\nWhat is Variable Scoping\nControl statement like if, else, switch-case-break\nLoops - for, for of, forEach, while, do-while\nWorking with Arrays\nWorking with Objects\nWhat are Functions and how to create custom functions and call them\nWhat is the use of Prompt\nWhat is the use of Confirm\nWhat is the use of Alert\nWhat is Document Object Model(DOM)\nDOM manipulation using Javascript\nEvent and Event Listener\nSet Timeout and Set Interval\nClear Timeout and Clear Interval\nDate and Time operation and using its various methods\nWorking with Math Object\nWorking with JSON\nWindow and document object\nlocation and history\nlocalStorage and sessionStorage\nCalling API with Fetch\nWhat is the Ternary operator and how to use it.\nWhat is the Array Filter function and how to use it.\nDebugging and Troubleshooting in JavaScript\nTemplate literals (Template strings) in ES6\nObject Destructuring assignment in ES6\nlet and const\nSpread operator\nArrow function expressions\nWe will also do Multiple projects in order to understand different concepts.\nYou will also get the complete source code of the whole course",
      "target_audience": [
        "Anyone who wants to learn about frontend development and want to become a true Frontend Developer"
      ]
    },
    {
      "title": "Learn HTML, CSS , jQuery and Bootstrap by Building Websites",
      "url": "https://www.udemy.com/course/learn-html-css-jquery-and-bootstrap-by-building-websites/",
      "bio": "Start your career as Front End Developer. Learn how to build Modern and Responsive Website Using Latest Trends - 2022",
      "objectives": [
        "Skill set to build your own real world, modern and responsive website using free softwares",
        "Knowledge to work in industry as Front End Developer to build trendy websites in 2020",
        "Practical knowledge of HTML 5, CSS 3, Java Script, jQuery, Bootstrap",
        "Practical knowledge of Responsive Web Design",
        "Learn to use cool jQuery effects like text animations, scroll spy effects and sticky navigation",
        "Learn to use jQuery Plugins Morphext, Isinviewport, Magnific Popup, Owl Carousel and Pace",
        "Best practices of modern web development in the industry"
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "What are We Going to Build"
        ],
        "Setting Up Working Environment": [
          "Installing Google Chrome",
          "Installing Brackets Code Editor",
          "Installing Brackets Extensions",
          "Creating Ideal Folder Structure"
        ],
        "HTML 5": [
          "Make Your First Website Under a Minute",
          "What is HTML",
          "HTML Structure",
          "HTML Elements",
          "HTML Lists",
          "HTML Images",
          "HTML Links",
          "How to Make Tables in HTML",
          "How to Make Forms in HTML",
          "Challenge - My Complete Website",
          "Solution - My Complete Website"
        ],
        "Chrome Developer's Tools": [
          "Chrome Developer's Tools"
        ],
        "CSS 3": [
          "What is CSS and Its Syntax",
          "CSS Methods",
          "CSS Selectors",
          "CSS Colors",
          "CSS Box Model",
          "CSS Position Property",
          "CSS - Tables. How to give a Modern Look to an Ugly Table",
          "Convert Ugly Looking Forms of HTML in to Beautiful Forms of CSS",
          "CSS Challenge - My Complete Website",
          "CSS Solution - My Complete Website"
        ],
        "Java Script": [
          "What is Java Script",
          "Basic Concepts of Java Script",
          "Inline, Internal and External Java Script"
        ],
        "jQuery": [
          "Getting Started with jQuery",
          "jQuery Syntax and Selectors",
          "jQuery Events",
          "jQuery CSS",
          "jQuery Animations",
          "jQuery Chaining",
          "jQuery Add and Remove Classes"
        ],
        "Bootstrap": [
          "What is Bootstrap",
          "Getting Started With Bootstrap",
          "Bootstrap Grid System",
          "Bootstrap Components"
        ],
        "Building Galaxy": [
          "Setting Up Project Environment",
          "Pre Loader",
          "Hero Titles - Part 1 of 3",
          "Hero Titles - Part 2 of 3",
          "Hero Titles - Part 3 of 3",
          "Hero Slider",
          "Hero Navigation Bar",
          "What We Do",
          "Portfolio",
          "About Us",
          "Our Team",
          "Blog",
          "Contact Us",
          "Footer",
          "Tweaking the Navigation Bar and Adding Scroll Spy Effect",
          "Tapered Sections",
          "Responsive Web Design",
          "Going Live",
          "Improvements Upon Previous Design"
        ],
        "Additional Resources": [
          "Popper.js"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "No coding or design experience is required",
        "Any computer (Windows, OSX or Linux)",
        "Free softwares will be used for this course"
      ],
      "description": "This Course Learn HTML, CSS , jQuery and Bootstrap by Building Websites gives you the skills to work as a Front End Web Developer. In this course I will start from very scratch to give you the detailed concepts of basic building blocks of any good website. Then I will build upon these concepts and take you to a professional level. By the end of this course you would have gained the skills to develop any modern and responsive website. I will be using free software so that you will not have to spend a single penny for development of websites.\nIn this course we will learn about the fundamentals of the modern day technologies for building the awesome looking websites.\n\n\nThis is what our students have to say:\n“I am in the middle of the course and so far it looks very promising. Very good teaching style; clear, simple, to the point, step by step and easy to follow with clarity on why, do’s and can-do’s”. Zeest D.\n\n\n“Loved this course from the beginning!\nThe course is great for any body who wants to learn HTML, CSS, jQuery and Bootsrap. I had some knowledge of these technologies earlier, this course has taught me much more.\nAysel is really passionate about teaching, she talks at an appropriate pace and explains the things really well.\nI will recommend this course for all levels. The beginners will get the basic understanding of these technologies, the mid level developers like me will get their concepts cleared and the experienced web developers will get a different perspective of how things are being done in modern websites.\nAfter under going the course, I am much more confident, I can make great looking websites in shorter time frame and I have already started working as free lance front end web developer.\nOverall a superb course and looking forward for other courses by the same author.” King Fisher\n\n\nThis course is absolutely great for the beginners and equally good for a medium level front end developer.",
      "target_audience": [
        "Anyone who wants to build his/her very own website.",
        "Beginner Front End Developer, who wants to learn HTML 5, CSS 3, Java Script, jQuery and Boot Strap from the scratch.",
        "Anyone who wants a template of website to tweak it for his/her use.",
        "Professional Front End Developer who wants to polish his/her skills."
      ]
    },
    {
      "title": "PHP: Complete Registration and Login with Email Verification",
      "url": "https://www.udemy.com/course/php-complete-registration-and-login-with-email-verification/",
      "bio": "In this course you will learn all you need to know to build a registration and login system in php.",
      "objectives": [
        "Create login and signup system",
        "Do form validations",
        "Create an email verification system",
        "Make parts of the application private",
        "Implement Remember Me functionality",
        "Work with cookies Sessions and SQL databases"
      ],
      "course_content": {
        "Introduction": [
          "Requirements and what we will make in the course"
        ],
        "Project Structure and UI Creation": [
          "Creating Directory Structure",
          "Create and Connect to Database",
          "Creating Index and Register Pages",
          "Creating myaccount and forgotpassword pages"
        ],
        "Creating the Registration system": [
          "Creating users table and requiring the inputs",
          "Restoring the form values on submit",
          "Fixing a small bug",
          "Validating name and Password",
          "Validating Email",
          "Save user into database",
          "Setup localhost to send Emails",
          "Sending Activation Emails",
          "Activating User accounts",
          "Quiz 1"
        ],
        "Creating the Login system": [
          "Logging the User in",
          "Displaying Error Messages and Logging Out",
          "Making Account Page Private",
          "Adding the Remember Me Feature",
          "Deleting Cookies on Logout",
          "Adding Forgot Password Feature",
          "Quiz 2"
        ],
        "Uploading Project Online": [
          "Uploading Project Online Part 1",
          "Uploading Project Online Part 2",
          "Quiz 3"
        ]
      },
      "requirements": [
        "Basic Knowlege of HTML and CSS is required",
        "Basics of PHP(optional)",
        "A code Text Editor(Brackets or Notepad++ recommended)",
        "Xampp with installed PHP 5.6"
      ],
      "description": "In this course you will learn all you need to know to build a registration and login system in php.\n\nThis course will take you through the whole process in a step by step manner so that you can learn progressively and enhance your skills. I will be explaining all the steps in an easy to understand manner.\nAfter completing this course you will not only be able to create a registration and login system but you will also understand the whole process.\nWho is the Ideal Student?\nBeginners who are fairly new to PHP development\nAnyone who wants to learn how registration and login systems are created\nWhat are the Requirements?\nXampp installed(with PHP 5.6.15)\nA Text Editor(Brackets is preferred but can use any)\nPassion to Learn :)\nAfter Completing the Course you will be able to:\nCreate login and signup system\nDo form validations\nCreate an email verification system\nMake parts of the application private\nImplement Remember Me functionality\nWork with cookies Sessions and SQL databases",
      "target_audience": [
        "Beginners who are fairly new to PHP development",
        "Anyone who wants to learn how registration and login systems are created"
      ]
    },
    {
      "title": "JavaScript for beginners with live examples",
      "url": "https://www.udemy.com/course/javascript-from-basic-fundamentals-to-advanced/",
      "bio": "Javascript: Learn complete javascript from basics concepts to advanced with examples",
      "objectives": [
        "write own javascript to manipulate HTML page",
        "Gain strong fundamental knowledge of javascript",
        "Apply JavaSript in real time applications"
      ],
      "course_content": {
        "Introduction to JavaSript Basics": [
          "Introduction",
          "first program",
          "no script",
          "commenting",
          "variables and data types",
          "document.write",
          "mathematical operators",
          "Q & A"
        ],
        "If Else Conditional statements": [
          "if else statements",
          "else if statement",
          "even or odd program",
          "Biggest number example"
        ],
        "Switch Case": [
          "switch case",
          "switch case example",
          "example 2",
          "Q & A"
        ],
        "Loops": [
          "while loop",
          "do while loop",
          "for loop",
          "multiplication table example",
          "nested for loop",
          "nested for loop example",
          "break and continue",
          "break using lables",
          "Q & A"
        ],
        "Functions and Methods...": [
          "functions",
          "calling function outside script",
          "alert() method",
          "confirm() method"
        ],
        "Events": [
          "events",
          "redirect",
          "navigator object",
          "pop up with link",
          "print",
          "external file"
        ],
        "JavaScript OOP Concepts": [
          "Basic Concepts Text",
          "js objects",
          "Objects creation 2",
          "functions inside objects",
          "Creating Objects using functions",
          "argument in Objects",
          "Date Objects",
          "Date methods text"
        ],
        "Arrays": [
          "Arrays",
          "Different data types in array",
          "Getting data from user into array",
          "Array example",
          "concat method",
          "join, sort, reverse",
          "Array methods text",
          "math methods",
          "All math methods list"
        ]
      },
      "requirements": [
        "who know little bit of HTML",
        "Nothing else because we will start from scratch"
      ],
      "description": "In this Course you will learn JavaScript from Basic fundamentals to advanced topics, Each topic is covered with examples to understand the concepts better.\n\nWhat Exactly Is JavaScript?:\nJavaScript is a programming language used to make web pages interactive. It runs on your visitor's computer and doesn't require constant downloads from your website. JavaScript is often used to create polls, validation and quizzes.\nJavaScript was originally developed in 10 days in May 1995 by Brendan Eich, while he was working for Netscape Communications Corporation. Indeed, while competing with Microsoft for user adoption of web technologies and platforms, Netscape considered their client-server offering a distributed OS with a portable version of Sun Microsystems' Java providing an environment in which applets could be run.[citation needed] Because Java was a competitor of C++ and aimed at professional programmers, Netscape also wanted a lightweight interpreted language that would complement Java by appealing to nonprofessional programmers, like Microsoft's Visual Basic.\n\nWhat you will learn in this course?:\nBasic fundamentals from scratch (covers everything from scratch)\nJavaScript Objects\nJavaScript Error Handling\nvalidations\nDebugging\nMultimedia\nImage map\nAnimation\nAnd many more with examples replicating real time scenarios..\nAdditional Topics will be added regularly",
      "target_audience": [
        "Beginners who wants to learn javascript from scratch to advanced topics",
        "who wants to become javascript programmer"
      ]
    },
    {
      "title": "Secured Login Registration System in PHP - Email Activation",
      "url": "https://www.udemy.com/course/secured-login-registration-system-in-php/",
      "bio": "Learn how to build login registration system with email verification, forgot password, remember me, recaptcha and more",
      "objectives": [
        "How to work with SESSIONS",
        "How to work with COOKIES",
        "How to work with GET and POST Method",
        "New user sign up",
        "User login",
        "Email verification (Confirmation)",
        "Forgot password (Password Recovery)",
        "Remember me (Keep me logged in)",
        "Security (Password Hashing, MySQL Injection)",
        "Implementing Google reCaptcha (I'M NOT A ROBOT)",
        "This link valid for 20 minutes",
        "Link expired and more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup",
          "First Step"
        ],
        "Super global GET and POST": [
          "GET super global",
          "POST super global"
        ],
        "COOKIES and SESSIONS": [
          "COOKIES",
          "SESSIONS"
        ],
        "SIGN UP": [
          "Project folder and markup",
          "Creating reuseable components",
          "Creating database and establish database connection",
          "Grab input field value using POST super global",
          "SQL injection",
          "Introduction to regular expression",
          "First name validation using regular expression",
          "Last name validation using regular expression",
          "User name validation with regular expression",
          "Email validation with regular expression",
          "Password validation with regular expression",
          "Password hashing",
          "Creating database table",
          "Insert user data into database",
          "Fix registration date and sign up successful message"
        ],
        "Implementing Google recaptcha I'M NOT A ROBOT in sign up page": [
          "Google Recaptcha part 1",
          "Google Recaptcha part 2",
          "Google Recaptcha part 3"
        ],
        "Email confirmation": [
          "Downloading composer and PHPMailer",
          "Sending email with gmail part 1",
          "Sending email with gmail part 2",
          "Email verification part 1",
          "Email verification part 2",
          "Email verification part 3",
          "Email verification part 4",
          "Extra feature part 1 (Already Verified)",
          "Extra feature part 2 (Link Expired)"
        ],
        "Extra feature for Sign Up": [
          "Help user for sign up no re enter",
          "User name not available",
          "Email already exist",
          "Unset user input value"
        ],
        "Login": [
          "Login part 1",
          "Login part 2",
          "Login part 3",
          "Login part 4 (reCaptcha)"
        ],
        "Extra feature for login": [
          "Unverified user login functionality part 1",
          "Unverified user login functionality part 2",
          "Unverified user login functionality part 3"
        ],
        "Forgot password": [
          "Forgot password part 1",
          "Forgot password part 2",
          "Forgot password part 3",
          "Forgot password part 4",
          "Forgot password part 5",
          "Forgot password part 6",
          "Forgot password part 7",
          "Forgot password part 8"
        ]
      },
      "requirements": [
        "A computer with internet connection",
        "Have basics knowledge of PHP",
        "Little HTML knowledge"
      ],
      "description": "Welcome to \"Secured Login Registration System in PHP\" course.\nThis is a course for building complete login registration system with all the basics concept. Learn how to implement login registration functionality on your working project. We will cover all the major things behind login registration system. Learn how to implement google reCaptcha in your code.\n\n\nYou will learn in this course: )\nSection 1 : Introduction\nIntro and setup\nSection 2 : GET and POST super global\nLearn the basics of GET and POST super global\nSection 3: COOKIES and SESSIONS\nHow to work with session and cookie\nSection 4: Sign Up\nCreating DATABASE Connection, SQL Injection, PASSWORD HASHING, regular expression (REGEX), Input field validation and more\nSection 5: Implementing Google reCaptcha I'M NOT A ROBOT in sign up page\nHow to implement google reCaptcha I'm not a robot using google API\nSection 6: Email confirmation\nHow to send email, email confirmation/verification\nSection 7: Extra feature for Sign Up\nUser name not available, email exists\nSection 8: Login\nLogin functionality\nSection: 9: Extra feature for login\nNew way to verify unverified during login\nSection 10: Forgot password\nHow to change user their password if they forgot or want to change\nSection 11: Remember me\nIf user close/shutdown their browser after login with remember me checkbox checked, mark them as login user in the browser perspective\nSection 12: Conclusion\nLast words\n\n\nMoney Back if you don't like it, So no worries!\nWith money guarantee within 30 days, you have nothings to lose.\n\n\nIs it still worth it to learn PHP?\nYes!\nPHP is one of the most used language to build websites. Biggest tech company like Facebook, Twitter, Wikipedia still using PHP.\n\n\nWe will be build an amazing project from complete scratch, you will learn all the things need to implement login registration system. This is a real world project.  I walk step by step on everything from scratch.\n\n\nSo now Enroll this Login registration system course  and enjoy!\n\n\nSee you inside!",
      "target_audience": [
        "Who want to learn secured login registration system",
        "Want to learn basics concept behind login registration system"
      ]
    },
    {
      "title": "Starting with NodeJS-HapiJS and ReactJS",
      "url": "https://www.udemy.com/course/starting-with-nodejs-hapijs-and-reactjs/",
      "bio": "Build Restful sentiment analysis API with HapiJS, connect with React. Learn NodeJS, ReactJS, NLTK-sentiment analysis",
      "objectives": [
        "Build a NodeJS/HapiJS API server.",
        "Integrate Python NLP sentiment analysis in their NodeJS application.",
        "Build a ReactJS application that interacts with a server API.",
        "Understand Promises in JavaScript.",
        "Understand fetch API in JavaScript.",
        "Integrate python in NodeJS."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting up development environment": [
          "Setup NVM, NodeJS, NPM and Atom"
        ],
        "NodeJS-HapiJS sentiment analysis API": [
          "Initialize NodeJS project",
          "Configure Babel transpiler",
          "Start hapi server",
          "JS Promise explained",
          "Separate server routes",
          "Nodemon for auto-reload",
          "Introduce NLTK (Natural Language ToolKit) for sentiment analysis",
          "Implement sentiment analysis Python module",
          "Integrate sentiment analysis python module via Python-shell"
        ],
        "ReactJS Client App for interacting with sentiment analyzer API backend": [
          "Start with create-react-app",
          "Create form component",
          "Add styles to form",
          "Add event handler to textarea in form",
          "Onclick listener and fetch API"
        ]
      },
      "requirements": [
        "Basic programming knowledge"
      ],
      "description": "With this course, you will learn to build a NodeJS (HapiJS) JSON-based Restful API backend for sentiment analysis and a ReactJS client that interacts with the API. HapiJS, a rich and configuration-centric server framework for NodeJS allows  us to build powerful and configurable applications. Moreover, sentiment analysis allows automated reasoning about sentences to determine whether they are positive, negative or neutral. A popular use case is to find out how people feel about a product or service. This is course introduces you to a powerful Python package, NLTK (Natural Language ToolKit), that allows you to do more than sentiment analysis. Aside from learning and building together a HapiJS API and ReactJS App, we learn how to integrate the NLTK Python package (and for that matter any other Python package) into a NodeJS application.\nWe will start by first building a HapiJS server that can receive texts and send simple responses. We will interact with our server via Chrome's Postman plugin. Then, we will integrate VADER NLTK sentiment analysis into the server, that will allow the server to determine the sentiments of sentences in English. Afterwards, we will build a ReactJS client that allows us to enter and send sentences to the server and display the sentiment of a our sentence.\nSo, in summary, this learning by doing doing course is prepared for you to:\nlearn the HapiJS framework of NodeJS for building API backends.\nlearn to use the VADER module of the NLTK (Natural Language ToolKit) for sentiment analysis.\nlearn to integrate Python modules into NodeJS.\nlearn to build apps in ReactJS.\nunderstand the new concepts in JavaScript (e.g Promise, arrow functions, etc).",
      "target_audience": [
        "Anyone who wants to learn to build NodeJS/HapiJS API servers.",
        "Anyone who wants to learn to integrate sentiment analysis into their server.",
        "Anyone who wants to learn to integrate Python in their NodeJS applications.",
        "Anyone who wants to start building applications with ReactJS."
      ]
    },
    {
      "title": "Build Responsive Real World Portfolio WordPress Website",
      "url": "https://www.udemy.com/course/build-responsive-real-world-portfolio-wordpress-website/",
      "bio": "Learn to Create a Professional Portfolio / Resume Website Without Coding | Use WordPress & Elementor Page Builder Plugin",
      "objectives": [
        "What is Wordpress",
        "What is domain & hosting",
        "From Where You can Purchase domain and hosting",
        "How to change the title and tagline of the wordpress website",
        "How to change the permalink of your website",
        "How to install themes and plugins",
        "How to import premade Blocksy Theme Demo",
        "How to create blog post",
        "How to create and publish pages",
        "How to set the blog and homepage",
        "How to use the elementor page builders",
        "How to design page from scratch with the elementor page builders",
        "How to add a contact form",
        "How to upload you own brand logo image",
        "How to create a logo",
        "How to create a video",
        "How to optimize, resize image and also videos.",
        "How to convert videos into webp format",
        "How to install local server for free to start working",
        "How to move website from localhost to live domain and hosting",
        "How to add Filterable portfolio to your website",
        "Learn to add Downloadable PDF format CV",
        "And Many More ......"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview Video",
          "Introduction with WordPress"
        ],
        "Start Working with WordPress": [
          "Download XAMPP - Local Server",
          "Install XAMPP- Local Server",
          "Download WordPress",
          "Install WordPress In Localhost"
        ],
        "Essentials Tools We Need before Creating Website": [
          "Download Photos and Videos For Free",
          "Learn to Resize Images",
          "Let's make a basic logo for Website",
          "Remove background from a Image for free using online tools",
          "How to Create a CV for Free",
          "Download a Free Video, Compress the Video Size, Add Overlay to the Video"
        ],
        "After Installing WordPress": [
          "Delete & Change Essential Things",
          "Create Page & Select Home & Blog Page From WordPress Settings Area"
        ],
        "How to use Elementor Page Builders?": [
          "Elementor Page Builder Plugin - Part 1",
          "Elementor Page Builder Plugin - Part 2",
          "Elementor Page Builder Plugin - Part 3"
        ],
        "Install Theme & Learn to Customize the Theme": [
          "Reset WordPress & Install Blocksy Theme",
          "Import Blocksy Theme Demos",
          "Customize Blocksy Theme - Part 1",
          "Customize Blocksy Theme - Part 2",
          "Add Portfolio Items to Your Website",
          "Add New Blog Post To Your Website",
          "Add a Contact Form To Your Website"
        ],
        "Transfer Website to Domain & Hosting + The End": [
          "What is Domain Name & Hosting | From where you Can Buy ?",
          "Transfer Website from Localhost to Domain & Hosting",
          "Add a Download CV Button and Upload The CV + The End"
        ]
      },
      "requirements": [
        "No previous knowledge of Wordpress CMS is required as everything will be covered in this course.",
        "No previous knowledge of Website Design is required.",
        "You will need a working computer or laptop and a web browser like google chrome, mozilla firefox or brave connected to the internet..",
        "You don't need any coding experience at all. Because everything will be drag and drop.",
        "Be super creative & Desire of creating a Website .",
        "Need content like text, images and videos to add to your Website."
      ],
      "description": "If you are a freelancer, a designer , a marketer or a skilled person who is looking job or a freelance projects and need a perfect portfolio website then this course is for you. In this course you will get a perfect step by step guidelines for building your personal Portfolio / CV / Resume website. After watching this course you will be comfortable about making websites with WordPress without coding.\nHere is a list of things you can learn from this course:-\nWhat is WordPress\nWhat is domain & hosting?\nFrom Where You can Purchase a domain name and web hosting\nHow to Download XAMPP\nHow to Install XAMPP\nHow to Install WordPress\nHow to create page\nHow to create post\nHow to Use Elementor Plugin\nHow to design page with Elementor Plugin\nHow to Install Theme\nHow to Install Plugin\nHow to Import Ready Made Demos\nHow to customize theme\nLearn to change the theme color\nAdd a Scroll to Top Button to your website\nHow to customize plugin\nHow to Create CV\nHow to create a simple logo\nHow to create and optimize a video for background\nHow to add a contact form\nHow to make the website responsive for Mobile / Tablet / Desktop\nHow to resize the image size\nDownloading free images and free videos\nHow to remove background from logo using a free online tools",
      "target_audience": [
        "Freelancer",
        "Graphic Designer",
        "Digital Marketer",
        "Video Editing Expert",
        "Youtubers",
        "Doctors",
        "Engineers",
        "Anyone who want to learn to build website without any programming or coding knowledge",
        "Anyone who need to build a portfolio website"
      ]
    },
    {
      "title": "Easily Build A WordPress Website - Avada Theme",
      "url": "https://www.udemy.com/course/easily-build-a-wordpress-website/",
      "bio": "Use WordPress and the Avada theme to create a beautiful and professional website!",
      "objectives": [
        "This class is for Avada theme version 5.5.2. Please know that BEFORE you buy the class.",
        "This class is for beginners to intermediate level website designers/developers",
        "You will learn a broad overview of what WordPress is and why you should use it to build your website",
        "Learn how to download, install, and customize the Avada theme to build out your website.",
        "Learn every Avada Theme option, including global options to update elements of the site from one location, and on-page options that will allow you to override the global options for that one particular page.",
        "Learn how to build out a page using the Fusion Page Builder, how to add elements like text, blogs, image carousels, flip boxes and more",
        "Learn how to build out your blog page, segment the posts onto various pages, setup categories, etc.",
        "Learn how to build a slider element to use on your pages"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - What You're Going to Learn in this Class",
          "What is WordPress and Why Should I Use It?",
          "Overview of the WordPress Admin Area",
          "Pros and Cons of the Avada Theme",
          "How to Purchase, Download & Install the Avada Theme",
          "Review of the Avada Tab Options",
          "Layout & Menu - Global Options",
          "Responsive Design & Colors - Global Options",
          "Header, Logo, & Page Title Bar - Global Options",
          "Sliding Bar, Footer, and Sidebar - Global Options",
          "Background, Typography, Blog, and Portfolio - Global Options",
          "Social Media, Slideshows, Elastic Slider and Lightbox - Global Options",
          "Contact Form, Search, Extra, and Advanced - Global Options",
          "Custom CSS, Fusion Elements, Import & Export - Global Options",
          "Building a Blog Post",
          "Building a Page Using the Page Builder",
          "Creating & Using Templates Throughout Your Site",
          "Creating a Portfolio",
          "How to Build, Edit, or Remove the Navigation Menu",
          "Build Sliders Using the Fusion Slider",
          "Creating & Using Widgets",
          "Installing & Using Plugins",
          "Maintenance - Updating Your Theme, Plugins, and WordPress Files",
          "One Final Avada Tip!"
        ]
      },
      "requirements": [
        "This class is for beginners to intermediate level website designers/developers. I will be using WordPress and the Avada Theme. Some knowledge of domain name registration and website hosting will be helpful to know in order to setup your platform for building your website."
      ],
      "description": "Wordpress is a very powerful, very popular content management system (also called a CMS) that allows you to build a powerful website using plugins, built-in features, theme, and even a page builder.  Wordpress is older than Twitter and Facebook and has more than 50,000 free plugins available for you to use in building your sites.\nIn this class, we will review what WordPress is and how it works, and why you should use it to build your website. Then, I will show you how to download and use one of the most popular WordPress themes, Avada. It's a highly customizable and very easy to use theme that will allow you to easily build a professional and original WordPress website.\nI will review every Avada Theme option, including global options that will allow you to update elements of the site from one location, and on-page options that will allow you to override the global options for that one particular page.\nAvada is an amazingly powerful and customizable theme that will allow you to build a beautiful website with tons of built in features that will make your website eye-catching and professional.",
      "target_audience": [
        "Beginner or intermediate users who want to be able to install a WordPress theme, then customize it to build out their website."
      ]
    },
    {
      "title": "The Complete Web Developer Course - Build 20 Websites",
      "url": "https://www.udemy.com/course/the-complete-web-developer-course-build-20-websites/",
      "bio": "Learn the fundamentals of HTML, CSS and JavaScript by building 20 real world websites!",
      "objectives": [
        "Learn to build your own websites.",
        "Learn how to code in CSS",
        "Learn to code in JavaScript",
        "Learn to code in HTML",
        "Build 20 fantastic websites",
        "Start a web design business",
        "Make money from this course"
      ],
      "course_content": {},
      "requirements": [
        "Need to know how to use a computer",
        "JSBin (free web building website)"
      ],
      "description": "This course was funded through a massively successful Kickstarter campaign.\nLearn how to build websites for your business or your portfolio. This is the best course to learn how to build websites with HTML CSS and JavaScript. In this course you learn by doing. Build your own fantastic websites today.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.\nYou will get full lifetime access to this course for a single one off fee. John Bura has created many games, apps and training courses so he is extremely qualified to teach you how to master technology. This is an instructor that does not only teach, he produces apps. This means you get the most relevant information on how to code. Most courses do not show you practical skills and real world examples.\nWhat makes you a good teacher?\nI have released over 40 games and apps that have done very well in the app store.\nI run a company called Mammoth Interactive so I am actively in the field building apps and making money\nI have been teaching since 2002\nI personally love learning online and my life is much better because I have learned online rather than a classroom\nI am one of the top 10 highest grossing Udemy teachers\nI have been a Udemy instructor since 2011.\nI make sure people learn how to make money from their creations.\nI have over 110k students worldwide\nWho is this class for?\nPeople who want to improve their technical skills\nComplete beginners\nPeople who want to make money. I show people the tools on how to make money through various methods of passive income\nPeople who want to get ahead of the pack by learning online.\nHow you will make money by learning new skills\nLearn practical skills\nLearn about how leverage your new skills to greater wealth\nLearn through practical examples\nWhy should you learn online?\nThere is an online education revolution taking place. You may have heard about it in the news or heard it from a friend. Either-way, education is going to be changed forever. In this short course I talk about how Online Education has\nMotivated me\nHelped my career\nHelped me as a teacher\nImpacted several lives around the planet\nI promise that this course will be better and more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.",
      "target_audience": [
        "Complete beginners",
        "People who want to learn to make websites",
        "Not professional programmers"
      ]
    },
    {
      "title": "Fullstack web development : CSS JavaScript and PHP Mastery",
      "url": "https://www.udemy.com/course/fullstack-web-development-css-javascript-and-php-mysql/",
      "bio": "Become a fullstack web developer (and get a job) by taking this ONE course, even if you've never coded before.",
      "objectives": [
        "Build Dynamic web applications and apps using ChatGPT",
        "Learn to apply ChatGPT AI skills for your quick development",
        "Create your own stunning, CSS layouts for awesome websites",
        "Learn quickly using AI skills for your real-world requirements",
        "Master front-end development using CSS & JavaScript back-end development with PHP and MySQL",
        "Add JavaScript for light weight webpage applications",
        "Apply CSS, JavaScript and PHP Code and MySQL database queries on real-world tasks",
        "Create real-world function web apps using PHP, MySQL and JavaScript",
        "Learn What is Generative AI / Gen AI",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - you will learn from basic"
      ],
      "description": "Become a Fullstack Web Development Master with \"Fullstack Web Development: CSS, JavaScript, and PHP Mastery.\" This course is designed to take you from a beginner to an advanced level, equipping you with the full set of skills needed to create dynamic, interactive, and fully functional web applications. Whether you're new to web development or looking to enhance your existing skills, this course will provide comprehensive knowledge of both front-end and back-end technologies.\n\n\nYou'll start by mastering the core front-end technologies—CSS for styling and JavaScript for interactivity. Learn how to create responsive, visually appealing websites that work seamlessly across devices and browsers. With JavaScript, you'll be able to implement advanced functionality, including animations, form validations, and dynamic content.\n\n\nOn the back-end, you'll dive into PHP, one of the most popular server-side programming languages for web development. Learn how to work with databases like MySQL, process user data, implement security measures, and build custom web applications. You’ll also explore integrating front-end and back-end technologies, enabling you to create full-stack applications.\n\n\nThroughout the course, you'll build hands-on projects, such as creating e-commerce sites, social media platforms, and content management systems, reinforcing your understanding of the technologies.\n\n\nBy the end of the course, you'll have the expertise to build and deploy full-stack web applications from scratch.\n\n\nEnroll now and become a Full stack Web Developer proficient in CSS, JavaScript, and PHP!",
      "target_audience": [
        "Beginner CSS, JavaScript PHP and MySQL developers curious about web development",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites using ChatGPT AI skills",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance",
        "Anyone who wants to become a Full stack web developer"
      ]
    },
    {
      "title": "Learn to Code HTML & CSS for Responsive Real-World Websites",
      "url": "https://www.udemy.com/course/learn-to-code-html-css-for-responsive-real-world-websites/",
      "bio": "Learn HTML & CSS from scratch while designing and coding your own project step-by-step.",
      "objectives": [
        "Become a strong modern and confident HTML and CSS developer, no prior knowledge needed!",
        "Learn to apply ChatGPT AI skills for your website development",
        "Quickly apply CSS concepts such as the box model, positioning schemes, inheritance, solving selector conflicts, etc.",
        "Find, get and use free design assets such as images, fonts, and icons",
        "Apply Common components and layout patterns for professional website design",
        "Modern CSS3, including flexbox and CSS Grid for layout",
        "Learn to Publish your Website project on Live Server or Cloud step by step",
        "learn what is Generative AI for future learning",
        "participate on Coding Exercise to test your skills"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Course Curriculum",
          "How to get Course requirements",
          "Getting Started on Windows, Linux or Mac",
          "How to ask a Great Questions",
          "FAQ’s",
          "What is Source code",
          "Add ChatGPT AI skills for your Course Learning",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Setting up Development Environment": [
          "Introduction",
          "Choosing Code Editor",
          "Installing Code Editor(Sublime Text)",
          "Overview of a Webpage",
          "Full HTML Code Page",
          "First “Hello World!” page"
        ],
        "HTML Fundamentals": [
          "Introduction",
          "Heading",
          "Paragraph",
          "Formatting text",
          "List Items Un Ordered",
          "List Items Ordered",
          "Classes",
          "ID’s in CSS",
          "Comments in HTML",
          "Summary",
          "Write Heading tags"
        ],
        "HTML Intermediate": [
          "Introduction",
          "Images",
          "Forms",
          "Form Actions",
          "Br tag",
          "Marquee",
          "Text area",
          "Tables",
          "Links",
          "Navbar / Menu",
          "HTML Entities",
          "Div tag",
          "Google Maps",
          "Summary"
        ],
        "HTML Advanced": [
          "Introduction",
          "HTML5 Audio",
          "HTML5 Video",
          "Progress Bar",
          "Drag & Drop",
          "Canvas",
          "I frames",
          "Input Types",
          "Input Attributes",
          "YouTube Video Linking",
          "Creating Responsive Page",
          "Summary"
        ],
        "HTML Expert": [
          "Introduction",
          "Registration Form",
          "Login Form",
          "About Us Form",
          "Contact Us Form",
          "Footer Form",
          "Integrate All Together",
          "Coding Exercise",
          "Solution for Coding Exercise",
          "Summary"
        ],
        "HTML Website Project": [
          "Introduction",
          "Challenge – HTML 5 Clock Face with Numbers on Canvas",
          "Project Overview",
          "Conclusion on Project",
          "Summary"
        ],
        "CSS Fundamentals": [
          "Introduction",
          "CSS Syntax",
          "Creating webpage with CSS",
          "Inline CSS",
          "Internal CSS",
          "CSS External",
          "CSS Classes",
          "CSS IDs",
          "Colors",
          "Backgrounds",
          "Floating",
          "Positioning",
          "Margins",
          "Padding",
          "Borders",
          "Summary"
        ],
        "CSS Intermediate": [
          "Introduction",
          "Styling Text",
          "Aligning Text",
          "Styling Links",
          "Font Family",
          "Font Styles",
          "Applying Google Fonts",
          "Box Model",
          "Icons",
          "Tables",
          "Navigation-Menu",
          "Dropdowns",
          "Summary"
        ],
        "CSS Advanced": [
          "Introduction",
          "Advanced Selectors",
          "Forms",
          "Website Layout",
          "Rounded Corners",
          "Color Keywords",
          "Animations",
          "Pseudo Classes",
          "Gradients",
          "Shadows",
          "Calculations",
          "Creating Responsive Page",
          "Summary"
        ]
      },
      "requirements": [
        "No coding or design experience necessary (should know computer operating)",
        "Any computer works — Windows, macOS or Linux",
        "You don’t need to buy any software — we use the best free open-source code editor in the world",
        "No programming experience needed. You will learn from scratch"
      ],
      "description": "Dive into web development with \"Learn to Code HTML & CSS for Responsive Real-World Websites.\" This course is perfect for beginners who want to learn how to create beautiful, functional, and mobile-friendly websites from scratch using HTML and CSS. With responsive design becoming essential in today's digital landscape, this course equips you with the skills to build websites that look great on all devices—from desktop computers to smartphones.\n\n\nYou’ll start with the fundamentals of HTML, learning how to structure web pages with elements like headings, images, forms, and links. Once you're comfortable with the basics, you'll explore CSS to style your pages and create visually appealing layouts. You'll dive into techniques like Flexbox and CSS Grid for responsive design, and learn how to use media queries to adapt your website’s layout for different screen sizes.\n\n\nThrough hands-on projects and real-world examples, you’ll gain practical experience building responsive websites that are optimized for performance and accessibility. The course also covers best practices for creating smooth navigation, designing user-friendly interfaces, and using CSS animations to enhance user interaction.\n\n\nBy the end of this course, you’ll have the skills to create responsive websites with HTML and CSS that look professional on any device. Whether you're looking to start a career in web development or create your own personal projects, this course provides the tools you need to succeed.\n\n\nJoin now and start coding your responsive websites today!",
      "target_audience": [
        "Who wants learn to apply ChatGPT AI skills on Web designing",
        "Students with some knowledge about HTML and CSS, but who bridging challenges to put together a great website",
        "Complete beginners who want to learn how to build a professional, beautiful and responsive website design",
        "Who wants to learn HTML and CSS from scratch to start web developer career",
        "Anyone who wants to become a freelancer on website development"
      ]
    },
    {
      "title": "PHP Laravel: Build Coffee Shop Management System",
      "url": "https://www.udemy.com/course/php-laravel-2023-build-coffee-shop-management-system/",
      "bio": "Build Complete Coffee Shop Management System with Laravel MySQL and Bootstrap and Level up your Web Development Skills",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Laravel UI package",
        "Learn how the MVC structure works in Laravel",
        "Integrate your own theme easily",
        "Work with Models and Eloquent the professional way",
        "Work with views and Eloquent the professional way",
        "Work with Controllers and Eloquent the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn some advanced routing ways",
        "work with Middlewares and Guards",
        "Learn to validate with Requests",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Integrate PayPal API for payment processing and online ordering",
        "Create a menu management system",
        "Create  a table reservation system",
        "Create a customer ordering system",
        "Create a review system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Before you Start with the Course",
          "Installing Xampp",
          "Installing Visual Studio Code"
        ],
        "Creating Authentication System and Getting Started": [
          "Design and Code for the Project",
          "Creating New Laravel Project and Running the Server",
          "Creating Authentication System",
          "Integrating our Theme pt.1",
          "Integrating our Theme pt.2"
        ],
        "Diving Deeper and Getting Main Features Done": [
          "Displaying Products",
          "Displaying Single Product",
          "Displaying Related Products"
        ],
        "Working with Cart and Checkout": [
          "Adding Products to Cart",
          "Validating Cart",
          "Displaying Products in Cart",
          "Deleting Products form Cart",
          "Displaying Total Price",
          "Preparing Checkout",
          "Creating Orders and Checking Out"
        ],
        "Paying with PayPal and Booking and Working with Menu": [
          "Paying with Paypal pt.1",
          "Paying with Paypal pt.2",
          "Validating Payment and Checkout",
          "Booking Tables",
          "Validating Form Booking",
          "Working with Menu"
        ],
        "Working with Users Pages and Writing Reviews": [
          "Displaying Orders for every User",
          "Displaying Bookings for every User",
          "Writing Reviews",
          "Displaying Reviews",
          "Validating and Cleaning up pt.1",
          "Validating and Cleaning up pt.2",
          "Fininshing Users End"
        ],
        "Creating Admin Panel with Laravel": [
          "Desing and Code for Admin Panel",
          "Creating Custom Authentication System pt.1",
          "Creating Custom Authentication System pt.2",
          "Validating Authentication System pt.1",
          "Validating Authentication System pt.2"
        ],
        "Working with Admins Section": [
          "Working with Index Page",
          "Displaying All Admins",
          "Creating New Admins"
        ],
        "Working with Orders Section": [
          "Displaying All Orders",
          "Updating Orders Status",
          "Deleting Orders"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of Laravel would help a lot"
      ],
      "description": "If you're looking for a comprehensive online course that covers the latest version of PHP Laravel and teaches you how to build an amazing coffee shop management System from scratch, you've come to the right place. My course \"PHP Laravel 2023: Build Coffee Shop Management System\" includes everything you need to know to develop a powerful and efficient Coffee Shop Management System using the latest features of Laravel, the industry-standard PHP web framework.\n\n\nWith hands-on project-based learning, you'll develop essential skills in database and application design, user authentication, security mechanisms, and payment processing, that will allow you to create a fully functional, user-friendly, and secure Coffee Shop Management System. I will guide you every step of the way.\n\n\nWhat makes this course unique is that I focus on building a production-ready application that includes all the essential components such as menu management, online ordering, reservations, payments, review system, and more. You'll also learn how to customize the application further to meet your specific business requirements.\n\n\nI have a lot of experience in designing various enterprise-level applications and will help you develop real-world skills along with an in-depth understanding of how to leverage the power of PHP Laravel. You'll get access to all course materials for life, and our team is always available to assist you in case of any questions or concerns.\n\n\nHere are some of the key features of the course:\nLearn Laravel installation and setup\nBuild a database schema for coffee shop menus, orders, and reservations\nCreate models, controllers, and views for coffee shop menus, orders, and reservations\nImplement user authentication and authorization\nIntegrate PayPal API for payment processing and online ordering\nBuild a dashboard for restaurant managers and staff\nCreate a menu management system\nCreate  a table reservation system\nCreate a customer ordering system\nCreate a review system and so much more\n\n\nEnroll now and take the first step towards building your own coffee shop management System using PHP Laravel – the preferred framework of industry professionals. Let's get started!",
      "target_audience": [
        "People who learned PHP Laravel and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "Learn React and Redux by examples (Updated to React 16.12.0)",
      "url": "https://www.udemy.com/course/learn-react-and-redux-by-examples/",
      "bio": "Your practical guide to build a mobile-ready web applications using React, Redux and React Router",
      "objectives": [
        "Build super fast reactive web apps",
        "Understand JSX thoroughly",
        "Create reusable components",
        "Differentiate between stateless and stateful components",
        "Handle events",
        "Work with controlled and uncontrolled components",
        "Understand and create Higher order components",
        "Share state amongst components using Parent-Child association",
        "Use Redux for state management",
        "Create Single Page Applications (SPA) using React Router"
      ],
      "course_content": {
        "Introduction": [
          "Course intro",
          "Software setup"
        ],
        "EcmaScript essentials (ES6, ES7, ES8... NextGen JavaScript)": [
          "Using \"let\" and \"const\"",
          "Template strings",
          "Arrow functions",
          "Spread and rest operators",
          "Classes and objects",
          "Object destructuring",
          "Promise and async/await",
          "Quiz on EcmaScript essentials"
        ],
        "Learn React by examples": [
          "A quick overview of ReactJS",
          "Creating a new ReactJS application",
          "Hello, React!",
          "Using props",
          "Handling events",
          "Stateful component",
          "Stateless component",
          "Using refs",
          "Controlled components",
          "Form validation",
          "Lifecycle of a React component",
          "Working with arrays",
          "Using AJAX for getting data from REST endpoint",
          "Higher order components",
          "What is the buzz about Virtual-DOM?",
          "State management with multiple components",
          "Quiz on React basics"
        ],
        "Learn Redux by examples": [
          "Introduction to Redux",
          "Using Redux+Thunk with React",
          "Quiz on React + Redux"
        ],
        "Learn Routing by examples": [
          "React router for SPA",
          "Using route parameters in React SPA"
        ],
        "Final thoughts": [
          "Thank you",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Basics of HTML, CSS and JavaScript",
        "Eagerness to learn"
      ],
      "description": "This course is fully up-to-date with the latest version of React (16.12.0)  and includes Redux and Routing  feature!\n\n\nWhat's this course about?\n\n\nLearn React and Redux by coding examples. Learn all aspects of the most popular JavaScript framework today using simple but very powerful examples.\n\n\nFor a long time, JavaScript has been the key element of the world wide web. Historically, it's been used for front end validations, dynamic menus, making some AJAX requests etc.\n\n\nBut things have changed since the introduction of Single Page Applications (SPAs). The first major such framework was Angularjs (1.x) from Google, which eventually made way to the new Angular 2, which now is called just Angular. Angular is a very complete framework addressing each and every issue that an application needs.\n\n\nDevelopers at Facebook reased a completely different kind of framework called React (or ReactJS), which uses a combination of plain JavaScript and HTML elements (in XML syntax), called JSX. Unlike the Angular framework, this one simply addresses the View part of MVC. The main goal of a React application is to breakdown the entire web application into a bunch HTML-like elements called Components. A component defines the visual appearance of your UI, while converting the data it holds into user interface elements.\n\n\nUsing these components, you can quickly develop amazing and powerful web apps. These components are completely reusable.\n\n\nThis course will start from ground zero and explain what exactly React is and how you may use it (and for which kind of apps). Thereafter, we'll go all the way from basic to advanced. We'll not just scratch the surface but dive deeply into React as well as popular libraries like react-router and Redux.\n\n\nBy the end of the course, you can build amazing React (single page) applications!\n\n\nWho's teaching you in this course?\n\n\nMy name is Vinod Kumar Kayartaya, I'm a freelance web developer, consultant and a full time professional software trainer. All of my Udemy courses have received a very warm appreciation with ratings >= 4.8.\n\n\nSince I have an enormous experience in the I.T. teaching industry, I know exactly what a student is looking for when learning a new technology. This way, I would have answered your question, even before you ask them.\n\n\nFor all of my courses, I start from the very basic installation of softwares and tools, and get you started with coding.\n\n\nNO advanced JavaScript knowledge is required, though you'll be able to move even quicker through the course if you know next-gen JavaScript features like ES6 Arrow functions. Whatever the necessary ES 6/7/8 features that we will be using in React applications, are covered before that.\n\n\nI hope you will take the first step and enroll yourself for this course.\n\n\n\n\nAll the best!\nhappy learning.\n\n\nVinod.",
      "target_audience": [
        "Software developers",
        "College students who want to learn the most popular and in-demand tool"
      ]
    },
    {
      "title": "Ruby On Rails: Stock Market App",
      "url": "https://www.udemy.com/course/ruby-on-rails-stock-market-app/",
      "bio": "Build a Cool Stock Quote App In Rails",
      "objectives": [
        "Build Web Apps With Ruby On Rails",
        "Build Your Own Stock Market Website",
        "Understand the Bootstrap CSS Framework",
        "Use Databases with Ruby on Rails"
      ],
      "course_content": {
        "Installing Ruby On Rails": [
          "Introduction",
          "Rails Overview",
          "Install Node",
          "Install Sublime Text and Git Bash Terminal",
          "Generate an SSH Key",
          "Install Heroku Toolbelt",
          "Install Ruby on Rails",
          "Update!",
          "Create a Test Project and Handle Errors"
        ],
        "Creating The Basic Rails App": [
          "Ruby On Rails Overview",
          "Rails Server",
          "Create First Webpage With Generator",
          "Root Route",
          "Version Control With Git",
          "Github",
          "Create About Page Manually",
          "Application.html.erb page",
          "Create Embedded Ruby Links",
          "Partials"
        ],
        "Styling The App With Bootstrap CSS": [
          "Bootstrap Overview",
          "Installing Bootstrap",
          "Bootstrap Navbar",
          "Mobile Ready Design"
        ],
        "Stock Quote API": [
          "Stock Quote Gem Intro",
          "Stock Quote Update - API KEY!",
          "Stock Quote Gem Walkthru",
          "Stock Forms",
          "Stock Form Controller",
          "\"Nothing\" Error Handling",
          "\"Junk\" Error Handling"
        ],
        "Creating a User Management System": [
          "Install Devise User Management System",
          "Devise Database",
          "Flash Messages",
          "Devise Links",
          "Bootstrap Forms",
          "Conditional Navbar Links"
        ],
        "Creating A Stock Database Table": [
          "Stocks Database Table",
          "Stocks Views",
          "Fix Formatting and Rails Association",
          "Stocks Navbar and CRUD",
          "Authenticate Users",
          "Correct User Controller",
          "Correct User New Form",
          "Final Association Stock Index Page Loop",
          "Connecting to Stock Quote Gem Overview",
          "Connect Stocks Table To Quote Gem",
          "Precision and Delimiter Price fix",
          "Stock Index Error Handling",
          "Form Validation",
          "Bootstrap Table Stock Index Page",
          "More Error Handling",
          "Stocks Show Page"
        ],
        "Using Professional Webhosting For Our App - For Free!": [
          "Heroku Intro",
          "Heroku Push",
          "Heroku Run Rails DB:Migrate",
          "Heroku Domain Names",
          "Conclusion - Bonus"
        ],
        "Old Course Videos": [
          "About This Section",
          "Introduction To C9 Development Environment",
          "First Things First: How To Get Support Fast!",
          "C9 Cloud Development Environment Setup",
          "Ruby on Rails Directory Walkthru",
          "Version Control With Git",
          "Saving Our Code To Github.com",
          "Building a Webpage with the Rails Generator",
          "Building an About Webpage Manually",
          "Understanding Application.html.erb",
          "Creating Links with Embedded Ruby",
          "Using Partials",
          "Installing Bootstrap",
          "Creating a Navbar with Bootstrap",
          "Using Containers and Mobile First Design",
          "Installing The Stock Quote Gem",
          "Stock Quote Gem Walkthru",
          "Creating A Stock Quote Lookup Form",
          "Connecting Our Form To The Controller",
          "Stock Quote Error Handling",
          "Stock Data Return Formatting",
          "Installing the Devise Gem",
          "Setting Up Devise Flash Message Partials",
          "Devise Database Rake DB:Migrate",
          "Creating Devise Navbar Links",
          "Styling Devise Views",
          "Devise Menu Link Conditionals",
          "Creating a Stocks Scaffold",
          "Stocks Views",
          "Associating Stocks with Users",
          "Stock Links and C.R.U.D.",
          "Authenticating Stock Views",
          "More Stock View Authentication",
          "Final Stock User Association",
          "Lookup Stock Information",
          "Stock Lookup Error Handling",
          "Styling Our Stock Views",
          "Creating a Stocks Table",
          "Styling Our Show Page",
          "More Show Page Styling",
          "Adding a Stock Quote Lookup Form To The Stock Index Page",
          "Introduction to Heroku Web Hosting",
          "Modifying Our Gemfile For The Postgres Database",
          "Pushing Our Code To Heroku",
          "Using A Custom Domain Name With Heroku",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You need a computer with Internet access",
        "No programming skills necessary to take this course but a little HTML and CSS would be helpful"
      ],
      "description": "Ruby on Rails can seem overwhelming at first, but it doesn’t have to be! In this course I’ll walk you through it step by step and you’ll be building your first web app in MINUTES. You’ll be amazed how quick and easy it is to create very professional looking websites, even if you have no programming or web design experience at all.\nWatch over my shoulder as I build a cool Stock Market app step by step right in front of you. You’ll follow along and build your own copy. By the time we’re finished, you’ll have a solid understanding of Ruby on Rails and how to use it to build awesome web apps.\nThe course contains 42 videos – and is just over 3 hours long. Watch the videos at your own pace, and post questions along the way if you get stuck. You don’t need any special knowledge or software to take this course, though any experience with HTML or CSS is a plus. You don’t even need to know the Ruby programming language. I’ll walk you through EVERYTHING.\nRuby on Rails is a great web development tool and learning it has never been this easy.\nWhat We'll Build...\nWe'll build a cool Stock Market app that let's you look up stock quotes and financial information and save it to a database.\n\nUsers can create an account and sign up to your website, log in, add stocks, check stock prices and all kinds of other cool financial information.\n\nWe'll style the website using the popular Bootstrap CSS framework (I'll show you how to use it!)\nSign up today and I'll see you on the inside!",
      "target_audience": [
        "This course is meant for absolute beginners who want to learn Ruby on Rails for Web Development",
        "Anyone wanting to learn to build web apps"
      ]
    },
    {
      "title": "The Complete MERN Stack Development course 2021",
      "url": "https://www.udemy.com/course/the-complete-mern-stack-development-course/",
      "bio": "Learn everything about MERN stack and make a social networking website",
      "objectives": [
        "Node",
        "Express",
        "Mongo DB",
        "React",
        "MERN stack",
        "REST api",
        "MERN stack project",
        "Social networking website using MERN Stack",
        "all the concepts of M.E.R.N"
      ],
      "course_content": {},
      "requirements": [
        "Little knowledge of Javascript"
      ],
      "description": "Welcome to \"The Complete MERN Stack Course 2021\". In this course, we will build an in-depth Social Network website using Node.js, Express, React, and MongoDB along with ES6+. We will start with a blank text editor and end with a deployed full-stack website on Heroku.\nThis course also uses the latest React Hooks and Redux which is an absolute joy. Your code will be so much simplified and readable.\nAt the end of this course, we'll build an entire project(FACEBOOK CLONE) and you will learn how these different technologies work together step by step. We'll first have a look at all the individual building blocks so that we then can also combine them all into one amazing application by the end of the course.\nIn detail, this course offers\nAll the basics of React, Node, Express, MongoDB\nProject sections for each technology where the theoretic knowledge is applied\nA full MERN stack website\nA complete course project where all the technologies come together into one application\n\n\nList of the things that you will learn:\nLearn how to use Codesandbox\nLearn React from scratch\nConditional Rendering\nReact and it's advantages\nJSX\nChallenges after every topic\nJSX attributes\nInline styling for react elements\nJavascript ES6 concepts\nReact props\nMapping data to components\nUsing React dev tools\nLogin Project\nReact router and project\nReact Hooks (use state.use effect)\nEvent handling\nform handling\nTodo list project\nContext API\nSmall project with context API\nRedux\nReact-redux\nC.R.U.D website using React-redux\nMiddleware in React-redux and a project on that\nNode js\nREST API\nExpress\nMongo DB\nMongoDB compass\nand many more things.\nBy the end of this course, you'll feel comfortable building your own MERN stack applications and you can build upon all the knowledge taught throughout this course to dive into your own projects and use-cases.\nWhat are the requirements for taking this course?\nNO prior MERN stack knowledge is required\nHTML,CSS and Javascript\n\n\nLet's do it. Let's code together.",
      "target_audience": [
        "Beginner Web developers",
        "Students who want to learn about MERN from scratch",
        "Javascript developers",
        "beginner developers curious about Node js and express js",
        "Backend developers",
        "Full stack developers"
      ]
    },
    {
      "title": "Responsive Web Design: Made Easy",
      "url": "https://www.udemy.com/course/responsive-web-design-made-easy/",
      "bio": "Learn how to create modern day websites with HTML5, CSS3, JQuery, Bootstrap, Frameworks such as Boilerplate, Zurb etc.",
      "objectives": [
        "Teach you how to make 100% responsive sites including fluid layouts, flexible images and media queries",
        "Learn how to format an HTML5 document and use proper techniques when coding",
        "Look at look at the various tools we can use with responsive web design such as testing and code tools.",
        "Build a custom project from scratch that shows you what goes into setting things up, step by step"
      ],
      "course_content": {
        "Mobile Web Overview": [
          "The Importance of Mobile Web",
          "What is Responsive Web Design",
          "Tools for Responsive Design - Part 1",
          "Tools for Responsive Design - Part 2",
          "Environment Setup"
        ],
        "HTML5 Structure": [
          "File & Folder Structure",
          "HTML5 Structure - Part 1",
          "HTML5 Structure - Part 2",
          "The Viewport Meta Tag"
        ],
        "Responsive CSS Fluid Layouts": [
          "Base CSS",
          "Fluid Layout",
          "Sticky Footer"
        ],
        "CSS3 Media Queries": [
          "JQuery Screen Size Display",
          "Media Queries for iPads & Laptops",
          "Responsive Navigation",
          "Media Queries for Smartphones",
          "Responsive Forms",
          "CSS3 Transitions"
        ],
        "Twitter Bootstrap": [
          "Bootstrap Overview",
          "File Structure",
          "Navbar",
          "Jumbotron & Grid",
          "Grids & Panels",
          "Forms, Wells & Footer"
        ],
        "Other Frameworks": [
          "Zurb Foundation",
          "HTML5 Boilerplate",
          "Skeleton"
        ]
      },
      "requirements": [
        "We assume you are somewhat familiar with HTML and have made some basic websites"
      ],
      "description": "Responsive Web Design: Made Easy!\nLearn how to create modern day websites using Responsive Web Design with HTML5 and CSS3 - in less than 7 hours!\n\nThe mobile web is not going anywhere - it’s only getting bigger…\nAnd, YOU need to be in on the action!\nAs the mobile web gets bigger than desktop PC and laptop browsing - this is one skill you absolutely need in your bag of tricks!\n\nImpress your clients or land a higher paying job or build that dream website with all the cool web technologies.\n\nIn this course, you will master the tricks and techniques that modern web development gurus use to create fancy sites that work on any browser or device… be it any mobile phone, tablet, browser, desktop or laptop.\n\nThe course is taught over SIX Sessions, spanning\n7 hours\nof easy to follow Videos with real examples and source code.\nHere’s what you get -\n\nThis course is for any level of developer …whether you just know the basics of HTML or you are a development guru - there is something for everyone.\n\nAccess and download the full course immediately upon payment - so you can learn at your own pace!\n\nWe start out with an overview of the mobile web and the importance of mobile design & development.\n\nWe discuss what responsive web design actually means, and we look at the various tools we can use with responsive web design such as testing and code tools.\n\nYou will learn how to format an HTML5 document and use proper techniques when coding.\n\nThe layouts we create will be 100% responsive including a fluid layout, flexible images and media queries.\n\nWe will build a custom project from scratch that shows you what goes into setting things up, step by step.",
      "target_audience": [
        "Web developers and designers wanting to catch up and become part of the Mobile Web craze!"
      ]
    },
    {
      "title": "The Complete Azure Web Developer Course Learn The Essentials",
      "url": "https://www.udemy.com/course/azurecourse/",
      "bio": "In this complete course students will learn only the essentials of Microsoft Azure and Cloud Computing",
      "objectives": [
        "By the end of this short course you will have learned how to host your website over the cloud using Azure!",
        "You will be able to upload and download data over the cloud on Azure"
      ],
      "course_content": {
        "Introduction - Welcome To Microsoft Azure Essentials Course!": [
          "Welcome To The Complete Azure Web Developer Course Learn The Essentials!",
          "What's in this course",
          "Getting Started With Microsoft Azure",
          "Creating an Account with Microsoft Azure",
          "Azure Dashboard"
        ],
        "Getting Started - Learn Azure Practical": [
          "Make a first Devops project (Static Website)",
          "Making A wordpress (dynamic) website on Azure",
          "App Service Settings (Internal Left sidebar in detail)",
          "App Service Editor (Editing a Php webpage)",
          "Azure Essentials Summary"
        ],
        "How To Use Virtual Machines": [
          "Windows Virtual Machine Setup",
          "Windows Virtual Machine Interface",
          "Installing IIS Server on Windows Virtual Machine",
          "Create a Website Using a Virtual Machine and Making it Live",
          "Virtual Machine summary"
        ],
        "Course Summary and Conclusion": [
          "Conclusion - What Did We Learn - Students Will Now Be Able To....",
          "SPECIAL BONUS VIDEO - JOIN THE JOE PARYS ACADEMY TODAY :)"
        ]
      },
      "requirements": [
        "Students may need some basic knowledge and understanding of web development",
        "Basic knowledge of Hosting and Domains is recommended for this course",
        "Having an active Microsoft account is required - using @live or @hotmail are examples"
      ],
      "description": "Are you a web developer looking to learn Microsoft Azure and cloud computing?\nDon't want to spend hours learning Azure, but just want the Essentials?!\nThen The Complete Azure Web Developer Course Learn The Essentials is for YOU!\n\n_________________________________________________________________________\n\nWelcome To The Complete Azure Web Developer Course Learn The Essentials\n⇉ This course is Short, Quick and To The Point!\n⇉ Join 950,000+ Students Who Have Enrolled in My Udemy Courses!\n⇉ 10,000+ Five Star Reviews Show Students Who Enrolling Are Getting Real Results!\n⇉ You Get Over +15 Lectures and +1.5 hours of HD content!\n⇉ Watch the Promo Video to see how you can Get Started Today!\nDon’t Delay! Click the \"Buy Now\" Button For Instant Life-Time Access!\n_________________________________________________________________________\nHere is what you will learn in our complete course:\nThis course is designed for web developers who wants to learn about clouds and how to use cloud as a host for their websites. we will be talking about how to develop projects in azure and make them live, also how to use virtual machines just like our computer and make them host for our websites.\nNow, if you ever have any questions, all you have to do is post in our course discussion to receive help! Not only only will you learn with more than 1+ hours of HD video, but you will also learn by doing and creating your very own content!\n\nBy the time you are finished with our complete course, you will understand the essentials of cloud computing and how to begin using Microsoft Azure today!\nBut thats not all...\nThe benefits to our course an absolutely unlimited!\nYou will learn useful skills such as:\nCloud Computing\nHow To Begin Using Microsoft Azure\nStatic and Dynamic Websites\nVirtual Machines\nAnd So Much More!\nCheck out some of the recent review from our students!\n_________________________________________________________________________\nWith the right mindset, understanding, and application, you will instantly begin learning how to use the essentials of Microsoft Azure without wasting hours of your time!\nWhen I learn something new I add it to the course -at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n_________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But it can be done!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n_________________________________________________________________________\nIt's time to take action! This course will not remain this price forever!\nClick the \"Buy Now\" button, top right, Today!\nEvery hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys & Shahzaib Kamal",
      "target_audience": [
        "This course is for any Web developer who want to host their websites over the Microsoft Azure",
        "This course is also for web developers looking to learn about virtual machines"
      ]
    },
    {
      "title": "Mega CSS Animation Course : 30 Projects Included",
      "url": "https://www.udemy.com/course/mega-css-animation-course/",
      "bio": "Learn CSS Animation with unique projects (10 hover Effects ,10 Loader Animations, Character Animations and many more)",
      "objectives": [
        "You will Learn complete CSS Transition and Animation from scratch",
        "You will Learn Creating Amazing Projects with CSS Transition and Animation",
        "You will Learn Creating Creative Hover Effects with 10 Unique Projects",
        "You will Learn Creating Amazing Loader Animations with again 10 Unique Projects",
        "You will Learn Creating Character Animations with 5 Projects",
        "You will Learn to create An Animated Intro Presentation (which is our Final Mega Project)",
        "There are also some additional projects like Rain Animation , Water / Wave Animation , Button Hover Effect",
        "Amazing tips and tricks are shared through out this course"
      ],
      "course_content": {
        "Introduction": [
          "Mega CSS Animations Course : 30+ Projects",
          "Introduction",
          "What you are going to Learn from this Course"
        ],
        "Transition Basics": [
          "Transition Property and Transition Duration",
          "Transition Timing Function and Transition Delay",
          "Interesting Illustration with Transition Delay",
          "Project : Cool Unique Button Hover Effect"
        ],
        "Animation Basics": [
          "Animation Basics : Part1",
          "Animation Basics : Part2",
          "Animation Shorthand",
          "Animated Video Background Hero Area Project : Part1",
          "Animated Video Background Hero Area Project : Part2",
          "Animated Video Background Hero Area Project : Part3"
        ],
        "10 Unique Hover Effect Projects": [
          "Basic Markup to start with",
          "Using FontAwesome",
          "Basic styles",
          "Hover Project1",
          "Hover Project2",
          "Hover Project3",
          "Challenge for You",
          "Hover Project4",
          "Hover Project5",
          "Hover Project6",
          "Hover Project7",
          "Hover Project8",
          "Hover Project9",
          "Hover Project10"
        ],
        "10 Unique Loader Animation Projects": [
          "Basic MarkUp to start with",
          "Loader Animation Project1",
          "Loader Animation Project2",
          "Loader Animation Project3",
          "Loader Animation Project4",
          "Loader Animation Project5",
          "Loader Animation Project6",
          "Loader Animation Project7",
          "Loader Animation Project8",
          "Loader Animation Project9",
          "Loader Animation Project10",
          "Implementation of Full Page and Constrained dimension of Animated Loaders"
        ],
        "Character Animation Projects": [
          "Simple but Important Informations to start with",
          "Project: Running Santa Claus",
          "Walking Dinosaur",
          "Fun Project : Dino Chasing Santa",
          "Project with Unique Concept : Bahamut",
          "Project : DarkKnight"
        ],
        "Mega Promo Project : Unique Animated Presentation": [
          "Basic Markup",
          "Part1 : Intro styling",
          "Part1 : Intro section Complete",
          "Part2 : City",
          "Part2: Bird",
          "Part2: Car1",
          "Part2: Car2",
          "Part2 : Car 3 and Car 4",
          "Part2 : Boy and Girl",
          "Part3 : Completing our Full Animated Presentation"
        ],
        "Additional Projects": [
          "Project : Water Wave Animation",
          "Project : Rain Animation"
        ],
        "Resource Section": [
          "Resources"
        ]
      },
      "requirements": [
        "If you are aware with HTML and CSS , thats a plus for you"
      ],
      "description": "Do you want to Learn CSS Animation from scratch ?\nOR\nDo you want to create Unique Creative Hover Effects ?\nOR\nDo you want to create Awesome Unique Loader Animations and many other Projects using CSS?\nIf your answer to any of the above questions is Yes , then this Course is for you !!!\nWelcome to The Mega CSS Animation Course - One of the Biggest Course in CSS Animation with 30 Projects with over 12Hrs of HD Video Content .\nThis course covers the following topics along with projects :\nComplete Understanding of CSS Transition and Animation\nA Unique Button hover Project\nA Modern Animated Hero Area with Video Background\n10 Unique Hover Effect Projects\n10 Unique Loader Animation Projects\n5 Character Animation Projects\nRain Animation Project\nWater/Wave Animation Project\nAnd Final Mega Project : An Animated Intro Presentation Project which is an Amazing Unique presentation using CSS Animation\nAlong with the Course , many tips and tricks are shared which will help you to develop problem solving Skill.\nEach and every code is explained and All the resource files are included.\nAfter taking the course, if you have any issue understanding some concept or if you have any issue with any project , always feel free to let me know . I am always here to help you out .\nNow take a look at free preview videos of this course , to take a complete understanding of what you are going to learn from this course and how to take full advantage of this course . I am looking forward to see you inside :)",
      "target_audience": [
        "If you want to Learn CSS Transition and Animation , this course is for you",
        "If you want to Learn creating Awesome Unique Hover Effects , this course is for you",
        "If you want to Learn Creating Amazing Loader Animations , this course is for you",
        "If you want to Learn Character Animations in CSS , this course is for you",
        "If you want to create Animated Intro Presentation(A unique Idea with CSS) , this course is for you"
      ]
    },
    {
      "title": "React Native and React with NodeJS, MongoDB | React JS 2022",
      "url": "https://www.udemy.com/course/mobile-and-web-development-2021-guide-inlc-nodejs-mongodb/",
      "bio": "React JS and React Native (Router, Hooks & Context) with NodeJS, MongoDB for Web Development and Mobile App Development",
      "objectives": [
        "Dive in React JS and React Native",
        "Learn how to build single page applications with React JS",
        "Learn to connect to an external API",
        "Create reusable React Components",
        "Set up our virtual environment for React Native, React JS, NodeJS, MongoDB",
        "Run Android and IOS simulator",
        "JSX syntax and expressions",
        "ES6 syntax for Javascript, React, React Native, NodeJS, MongoDB",
        "See the content on the simulator for React Native, React JS",
        "User Inputs, Forms and Events in React",
        "Using React Portals to render Children Outside the DOM Hierarchy",
        "React JS Hooks and Context",
        "React’s modern face is to develop web applications with React Js Hooks and Context",
        "Creating Hooks and Context structures",
        "Routing with React Router",
        "Route Between Different Screens",
        "Data Transfer Between Different Screens with React Navigation",
        "Reducer, action and dispatch concepts and much more",
        "How to use coding techniques to make efficient development with React",
        "Build fast, user-friendly web apps with React",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "Install MongoDB",
        "Logic behind the MongoDB data storage",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoDB",
        "Created by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android a",
        "What careers use React Native? Businesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers",
        "What is the difference between React Native and Google Flutter? Google Flutter offers developers a UI toolkit that has some similarities to React Native.",
        "What is web development? Web development is a broad description of the tasks and technologies that go into creating a website.",
        "What are the steps to becoming a web developer? Some web developers will obtain a degree or certification in the field.",
        "How long does it take to become a web developer? The answer to this question will depend on you. The more time you spend developing your skills, the faster you",
        "JavaScript is one of the most ubiquitous programming languages on the planet, mostly because it's the backbone of interactive web applications.",
        "What is JavaScript? JavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language.",
        "Why is JavaScript important? JavaScript is the programming language that allows users to interact with the websites that they're visiting"
      ],
      "course_content": {
        "Let's Start to Learn React JS": [
          "Your First React JS App Overview",
          "Frequently Asked Questions about React JS and React",
          "Project Files and Course Documents - React JS, React Native",
          "Let, Const and Var in 3 Minutes",
          "Install Node JS",
          "Create Your React App",
          "Why You Will Need To Create a React App?",
          "Start Creating React App",
          "Do You Want to Learn How To Stop React App?",
          "Important Functional Components",
          "FAQ about React Native, React, NodeJS, MongoDB",
          "quiz"
        ],
        "What is JSX?": [
          "Converting HTML JSX",
          "Inline Styling with JSX in React JS",
          "JavaScript Variable in JSX",
          "quiz"
        ],
        "React with Props": [
          "Three Tenets of Components",
          "Simple App with React",
          "Styling App with Semantic UI",
          "Building Component in React JS",
          "Specifying The Image in React JS",
          "Duplicating The Single Component in React Native",
          "Component Nesting in React",
          "Props System in React",
          "Passing Props to Child in React JS",
          "Reusable Component Overview",
          "Props Children",
          "Quiz React Native, React JS"
        ],
        "Class - Based Components": [
          "Class - Based Components and Functional Components",
          "New App Overview",
          "Getting Users Physical Location",
          "Handling Async Operation in React",
          "Transformation Functional Component to Class Based Component",
          "quiz"
        ],
        "State in React": [
          "State Rules",
          "Initializing State In Constructor",
          "Lifecycle Method Overview for React JS, React Native",
          "Conditional Rendering",
          "quiz"
        ],
        "React JS Lifecycle Methods": [
          "Get to Know Lifecycle Method",
          "Refactoring App with Lifecycle Method",
          "Passing State as Props",
          "Ternary Expressions in JSX",
          "Showing Picture in React JS",
          "Styling The App in React JS",
          "Free React Developer Tools",
          "General App Review for React JS, React Native",
          "quiz"
        ],
        "User Inputs, Forms and Ivents in React JS": [
          "React JS App Overview",
          "Component Design in React JS",
          "Handling Forms",
          "Styling The App",
          "Creating Event Handlers",
          "Controlled vs Uncontrolled Elements",
          "Why Controlled Elements?",
          "Understanding ‘this’ Key Word In JS",
          "Communicating Child to Parent",
          "Invoking Callbacks In Children"
        ],
        "API Request with React": [
          "Fetching Data",
          "Axios vs Fetch",
          "Async Await Function",
          "Setting The State",
          "Rendering a List of Components",
          "Implementing The Key Values In List",
          "What We Have Learned From The App?",
          "quiz"
        ],
        "Navigation with React Router": [
          "Initializing The Project",
          "The React Router",
          "Link and NavLinks",
          "Programmatic Redirects",
          "Route Parameters",
          "React Router Switch Tag",
          "quiz"
        ],
        "React Portals": [
          "How to Create a Modal?",
          "Why React Portals?",
          "Creating a React Portals",
          "quiz"
        ]
      },
      "requirements": [
        "No prior react native and react js knowledge is required!",
        "A Windows PC, Mac or Linux Computer",
        "JavaScript + HTML + CSS fundamentals are absolutely required but you don’t need to be an expert",
        "Desire to learn React",
        "Desire to learn react native, react js, react, nodejs, mongodb",
        "Desire to learn web development and mobile app development",
        "Desire to learn nodejs, react js, mongodb, react native",
        "Desire to learn mongodb react native, react js",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hello there,\nWelcome to React Native and React with Node JS, MongoDB | React JS 2022 course.\nReact JS and React Native (Router, Hooks & Context) with NodeJS, MongoDB for Web Development and Mobile App Development\nReact native, react, react js, nodejs, reactjs, reactnative, node, mongodb, nodejs MongoDB react native, node js, react native node, web development, react native nodejs, react native web\n\nLearning React Native is a great avenue through which to gain experience developing mobile apps. Udemy features top-rated React Native courses that take you through every level of the React Native framework, so that you can start writing better apps, faster.\nReact Native enables programmers to write true native apps in JavaScript across multiple platforms at once, eliminating the need to code for iOS and Android separately. React Native also includes features like “hot reloading,” which have made the framework a favorite among efficiency-minded developers.\n\n\nDo you want to learn React Js from scratch?\nDo you want to learn React Native from scratch?\nDo you want to learn the latest React features of the Hooks and Context system?\nDo you want to create an app with React React Router; in a very detailed way?\nDo you want to learn NodeJS from scratch?\nDo you want to learn Mongo DB from scratch?\nIf your answer is \"Yes\", you are in the right place. This React Native and React with Node JS, MongoDB | React JS 2022 course will be a perfect match.\nReact is one of the best choices for building modern web applications. If you are new to React or maybe you've been struggling to learn and truly understand what’s going on then this course is the best way for you to learn React.\nReact-Native is a library developed by the React team and it is widely used to create mobile applications for both Android and IOS. You do not need to learn Java, Android, Swift, Objective-C, or anything of that. React and JavaScript is all you need to create awesome mobile apps that work on both Android and iOS.\nNode.js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser.\nBy learning growing web server technology, NodeJS, you can improve your skills, get a new job and you can build powerful, robust web applications.\nMongoDB is a cross-platform document-oriented NoSQL database program. By using MongoDB, you can build a modern application database for your projects.\nThis course is for all levels. We will take you from beginner to advance level. You will learn to React development step-by-step with hands-on demonstrations. To be able to benefit from this course, all you need is a basic understanding of JavaScript.\nIn the course, we are going to tell you what dependencies you need to install and how in detail, to be able to create mobile apps on both MAC and Windows. We are going to use free tools and platforms so you don't have to buy any tool or app. You are going to learn how to run an Android and IOS simulator on your MAC or Windows computer. Besides, with the Expo app, you will be able to run your apps on your own mobile device as well.\nLater on in the course, we are going to learn the basics of React and React Navigation. JSX, 'props system', and 'state system' are going to be crystal clear for you at the end of the course. We are going to create nice looking reusable components. You are going to be able to use these reusable components in your own future projects. You are going to go to different screens from the app with React-navigation.\nFinally, you are going to learn the latest React features \"Hooks and Context\" system. We are going to create two nice looking apps, teach you \"Hooks and Context\" in a very detailed way. You are going to learn how to use \"state\" in functional components with the \"Hooks\" system and with \"Context API\" you won't need any third-party package to manage the Application state.\nWe tried to tell all complex topics in very detail on the course. We used some diagrams to tell some important topics and created a nice-looking mobile application. We showed two different ways to create a mobile app. We showed both react-native-cli and expo-cli in our course.\nAt the end of the course, you will learn;\nBasics of React, React-Native, React-Navigation libraries\nHow to send an HTTP request from a mobile application\nHow to use flex-box system\nHow to create reusable components\nTo reach another app on the device from our app\nCreating your own mobile app both with react-native-cli and expo-cli\nCreating Context with Class-Based and Functional Components\nHow to Consume Context in Class-Based and Functional Components\nHow to Use Multiple Context in one single component\nHooks Functions(useState, useEffect, useReducer, useContext...)\nCreating Reducer and\nUsing Reducer is going to be clear for you.\nYou'll learn how asynchronous code works in Node and the Node event loop, as well as how to use the event emitter, streams, buffers, pipes, and work with files.\nWe'll see how that leads to building a web server in Node with hands-on examples.\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nReact Native\nReact JS\nNodeJS\nWeb development with react js, nodejs, mongodb\nMobile App Development with react native, nodejs, mongodb\nWhat is React Native?\nCreated by Facebook, React Native is an open-source-based mobile application framework that uses only JavaScript, making it capable of supporting both Android and iOS platforms. React, also known as React.js, saves time and effort for developers since they only need one programming language. The Native element allows developers to create JavaScript components to design software programs that run on various devices and platforms, such as smartphones, smart TVs, and laptops. With React Native, developers use the same concepts used in the original React framework to design a rich mobile user interface (UI) for various environments from existing components.\nWhat careers use React Native?\nBusinesses that want to create mobile apps for iOS and Android simultaneously to ensure a seamless rollout need developers with a background in React Native. Careers in mobile app development that rely on React Native can count on professionals who can design and build stunning UIs in multiple platforms since it works hand-in-hand with platforms like Windows and tvOS. React Native developers are also vital to helping iOS, and Android companies update and otherwise modernize their apps with features like push notifications and animation for better effectiveness for mobile app subscribers. Developers with a background in React Native might work in full-stack development, designing and refining web-based games, websites, mobile apps, and more.\nWhat is the difference between React Native and Google Flutter?\nGoogle Flutter offers developers a UI toolkit that has some similarities to React Native. Flutter also has a native component and compiles web, mobile, and desktop applications from a single collection of source codes. Relying on existing code, Flutter is also a free and open-source framework for developers. Until this point, the two frameworks might sound similar. However, React Native is based on and only uses JavaScript, while Flutter only has a loose connection to the language. Google Flutter primarily uses a new language called Dart. Other differences between the two involve sourcing the tool itself and the installation process, setup and configuration, UI component and development, and community support.\nWhat is web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website. It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website. You can break web development into two different categories: frontend (client-side) and backend (server-side). Frontend code executes on the user's computer. This can include HTML, JavaScript, and CSS. Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP. Web development does not necessarily include the design process — it focuses on code. A web designer builds wireframes to mockup their vision for a website and then shares that with a developer. The developer is responsible for writing the code that implements the design.\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field. However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field. So, it is more important that you know how to show off your skills. You could highlight your skills through relevant work experience or a portfolio of past projects. You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others. HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development. You need these three essential elements to create a modern website and work as a frontend web developer. HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone. CSS (Cascading Style Sheets) styles the content. JavaScript controls the interactive elements of the website.\nHow long does it take to become a web developer?\nThe answer to this question will depend on you. The more time you spend developing your skills, the faster you can become a web developer. The good news is that web development generally uses light-weight code that is easier to learn than many other languages. If dedicated, you can learn the basics of web development in a couple of months. But good web developers never stop learning. A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice. Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing. The more you code, the more you will run into problems or find bugs in your code. A significant aspect of web development is solving problems and debugging code. The better you get at solving problems and tracking down bugs, the faster you will get at coding.\nWhat is JavaScript?\nJavaScript is a curly-braced, dynamically typed, prototype-based, object-oriented programming language. It started as the programming language for the web and is one of the three layers of standard web technologies — the other two being HTML and CSS. JavaScript allows you to create and control content dynamically on a web page without requiring a page reload. Web browsers are able to interpret it, and when triggered by events, modify the HTML and CSS of a web page with dynamic updates. JavaScript also uses asynchronous calls to fetch data from web services in the background. Although it was initially only used in web browsers, JavaScript engines have since been put to use as servers with Node.js, included in desktop application frameworks like Electron, and embedded in phone frameworks like Apache Cordova.\nWhy is JavaScript important?\nJavaScript is the programming language that allows users to interact with the websites that they're visiting, making it a very important language for web developers to know. In the past, most developers focused on the backend; JavaScript was only relevant when they needed to use visual effects. As web development evolved and the focus shifted towards user experience, programmers started to rely on JavaScript for their frontend code heavily. Today, most sites use JavaScript to fetch and submit data, use logic, and generate HTML in browsers. JavaScript can also communicate asynchronously with data servers in the background without interrupting the user interaction in the foreground. These features make JavaScript not only an important language but a necessary language for modern web development.\nReact vs. Angular vs. Vue: what is the best JavaScript framework?\nhoosing the best JavaScript framework for your web project depends on what you are looking for. React is a popular framework, which means you will find a lot of community support if you need help. It is also considered relatively easy to learn but is being developed at a rapid pace. Angular is a framework that makes data binding easy so that you can template an application faster. It also uses the RxJS library to simplify asynchronous programming and Typescript (which compiles to JavaScript) for a cleaner, less error-prone development process. Some cons of Angular are that it can have a steep learning curve and can be complex. Vue is a lightweight framework, so it is easy to learn, very performant, and flexible. Some cons of Vue are limited plugins, and its flexibility can lead to irregular code.\nWhat is JSON and what is it used for?\nBecause of the evolution of the JavaScript language, JavaScript has a variety of techniques for creating objects. But, ultimately in the background, JavaScript is using a syntax called JSON. JSON stands for JavaScript Object Notation and is a standard text-based format used to represent objects in JavaScript. The same basic types of data represented in Javascript can also be represented in JSON, including strings, numbers, arrays, booleans, and JavaScript objects. Although JSON is based on the JavaScript object, it is not just used in JavaScript. It is also used as a format to transfer data from a web browser to a server and vice versa because of the format's simplicity and small size. The JSON format is used in REST APIs for this purpose and has replaced XML as the standard format for many APIs. Because of this, just about any language you use will have a method of converting data into JSON to interact with REST APIs.\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn it and React is easy to understand for beginners.\nThis course starts with very basics. First, you will learn how to install the tools, some terminology. Then the show will start and you will learn everything with hands-on practice. I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of React and valuable insights on how things work under the hood and you'll also be very confident in the basics of coding and game development, and hungry to learn more. The good news is since the Free and popular tools are used you don’t need to buy any tool or application.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you with the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now to our React Native and React with Node JS, MongoDB | React JS 2022 course.\nReact JS and React Native (Router, Hooks, Context) with NodeJS, MongoDB for Web Development and Mobile App Development\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Beginner who wants to be React developer",
        "Anyone who has basic HTML, CSS and JavaScript knowledge and wants to learn how to create complex applications",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone who wants to build amazing React single page web applications",
        "Anyone who wants to create mobile applications for both Android and IOS",
        "People who are planning a career in the application world",
        "Developers who have researched React but have had trouble mastering some concepts",
        "Anyone who want to start from scratch and to move more advanced level",
        "Anyone looking to build a career as a NodeJS developer",
        "Anyone interested in NodeJS",
        "Developers new to NodeJS",
        "Anyone who wants to learn MongoDB",
        "Professionals who are willing to learn MongoDB",
        "People who want to learn web development with react js, nodejs, mongodb",
        "People who want to learn mobile app development with react native, nodejs, mongodb"
      ]
    },
    {
      "title": "Full Stack Web App Development: Mern Stack Project & React",
      "url": "https://www.udemy.com/course/full-stack-web-app-development-mern-stack-project-react/",
      "bio": "Full Stack web development, MERN stack project (React JS, NodeJS, Express, MongoDB) Redux, Build GraphQL React project",
      "objectives": [
        "This is the full React JS course. You will learn React JS, Redux, Hooks and Context, NodeJs, ExpressJs and Mongo DB",
        "You will learn React JS with hands-on examples for Mern stack",
        "Learn how to create Single Page Web Application with React JS",
        "Create reusable React Components",
        "User Inputs, Forms and Events in React",
        "Learn to create multi-page web app with react-router-dom",
        "We will learn how to perform asynchronous operations with Redux thunk",
        "Learn to consume context with Context Consumer",
        "How to manipulate context data in class-based components",
        "Learn how powerfull when we use Context and Hooks together",
        "Learn components, props, states and component life cycle methods in React JS",
        "Learn sending request to an API and fetch data",
        "Routing with React Router",
        "Manage the data of our application with the Redux library",
        "Create context with class-based component",
        "Learn how to consume context with static contextType",
        "Learn the most important hook functions like, useState, useEffect, useReducer and useContext",
        "Learn how to easily build the largest and most advanced React applications",
        "Dive into Nodejs, learn rapidy growing web server technology, Nodejs & understand how NodeJS works with Node course!",
        "By learning growing web server technology, Nodejs, you can improve your skills, get a new job and you can build powerful, robust web applications.",
        "Learn the key concepts of the NodeJS",
        "Learn to create servers, and understand how it works",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Learn routing with NodeJS",
        "Learn the most used, open-source document database, and NoSQL database aka MongoDB",
        "The most popular Object Data Modeling Library for MongoDB, Mongoose JS",
        "Learn to execute CRUD - write queries to create, read, update and delete operations",
        "Understand terminal commands for managing the database",
        "Advanced Features of MongooseJS",
        "The best testing framework for NodeJS, Mocha",
        "Learn how easy to use MongoD",
        "Learn the key concepts of the Express JS",
        "Express Route parameters",
        "Middleware & Static files",
        "Query Strings",
        "There are many reasons why React is popular. One reason is that Facebook developed it.",
        "React, or React JS, is a front-end Javascript library for building UI components for the web. If you are interested in web development, React is the perfect lib",
        "React is worth learning. There are a couple of reasons. The first one is that React is in high demand in the software development job market",
        "Frameworks provide an opinionated approach to building an entire application.",
        "React encourages engineers to write code using a Functional Programming approach. Engineers create components, which are normal Javascript functions",
        "React is an open-source JavaScript frontend library. Some developers consider it a frontend framework because it does more than standard libraries usually do.",
        "React is an essential Javascript framework for web development. It is the most popular framework for developing web, mobile, and desktop app user interfaces.",
        "A runtime system is a platform where a software program runs. It’s essentially an environment housing the collection of software and hardware that allows an app",
        "Build amazing single page applications with React JS and GraphQL",
        "Realize the power of building flexible data schemas",
        "Become fluent in the ecosystem supporting GraphQL, including the differences between Apollo and Relay",
        "Master fundamental concepts behind structuring GraphQL servers",
        "Be the engineer who explains how GraphQL works to everyone else, because you know the fundamentals so well",
        "Learn how to use GraphQL's schema to define relations between your data objects"
      ],
      "course_content": {
        "Intro to Full Stack Web Development with React, Redux, nodejs, express, mongodb": [
          "What will we learn and How to get help in full stack react, redux, nodejs, mern?",
          "MERN Stack, ReactJS Project Files",
          "FAQ about Full stack Web Development with React, Redux, Hooks and Context"
        ],
        "Let's Start to Learn React": [
          "Your First React App Overview",
          "Frequently Asked Questions about React, Redux, Express, Nodejs, Mongodb",
          "React Let, Const and Var in 3 Minutes",
          "Install Node JS",
          "Create Your React App",
          "Why You Will Need To Create a React App?",
          "Start Creating React App",
          "Do You Want to Learn How To Stop React App?",
          "React Functional Components",
          "Complete React with Redux Course GitHub Repo",
          "quiz"
        ],
        "What is JSX?": [
          "Converting HTML JSX in React",
          "Inline Styling with JSX in React JS",
          "JavaScript Variable in JSX",
          "quiz"
        ],
        "React Props": [
          "Three Tenets of Components in React",
          "Simple App with React",
          "Styling App with Semantic UI in React JS",
          "Building Component in React",
          "Specifying The Image in React JS",
          "Duplicating The Single Component in React",
          "Component Nesting in React",
          "Props System in ReactJS",
          "Passing Props to Child in React",
          "React JS Reusable Component Overview",
          "Props Children in React JS",
          "React JS - Quiz"
        ],
        "Class - Based Components": [
          "Class - Based Components and Functional Components in React",
          "New App Overview in React JS project",
          "Getting Users Physical Location in React Js",
          "Handling Async Operation in React",
          "Transformation Functional Component to Class Based Component",
          "quiz"
        ],
        "State System in React": [
          "State Rules in React JS",
          "Initializing State In Constructor",
          "Lifecycle Method Overview in React",
          "Conditional Rendering in React with Redux, Hooks, Context",
          "quiz"
        ],
        "React Lifecycle Methods in React JS with Redux": [
          "Get to Know Lifecycle Method about full stack react",
          "Refactoring App with Lifecycle Method",
          "Passing State As Props",
          "Ternary Expressions in JSX",
          "Showing Picture in React JS",
          "Styling The App in React JS",
          "React Developer Tools in React JS with redux, hooks, context",
          "General App Review in React JS with Redux, hooks, context, nodejs, express",
          "quiz"
        ],
        "React Forms": [
          "App Overview with React",
          "Component Design in React",
          "Handling Forms in React JS",
          "Styling The App in React JS",
          "Creating Event Handlers in React with Redux, express, node js, mongodb",
          "Controlled vs Uncontrolled Elements in React JS",
          "Why Controlled Elements in React?",
          "Understanding ‘This’ Key Word and Binding in React",
          "Communicating Child to Parent in React",
          "Invoking Callbacks In Children in React js"
        ],
        "Asyncronous Programming in React with redux, nodejs, express js, mongodb": [
          "Fetching Data in React",
          "Axios vs Fetch in React",
          "Async Await Function in React js",
          "Setting The State in React JS",
          "Rendering A List of Components in react js",
          "Implementing The Key Values In List in react with redux, express, mongo db",
          "What We Have Learned From The React App?",
          "quiz"
        ],
        "React Router": [
          "Initializing The React Project",
          "The React Router",
          "Link and NavLink in React",
          "Programmatic Redirects in react",
          "Route Parameters in React JS",
          "React Router Switch Tag",
          "quiz"
        ]
      },
      "requirements": [
        "This course is ideal for people who have a basic knowledge of HTML, CSS, JavaScript but you don’t need to be an expert",
        "Computer with access to the internet",
        "A Windows PC, Mac or Linux Computer",
        "Es6 knowledge would be beneficial but not required",
        "Desire to learn React",
        "Desire to learn React JS",
        "Desire to learn full stack React js with Redux, nodejs, express, mongodb",
        "Desire to learn Reactjs with redux",
        "Desire to learn future technology react js with nodejs",
        "Desire to become fullstack web developer with react, redux, nodejs, express, mongodb",
        "Desire to learn frontend and backend web development with javascript (react js, nodejs, redux framework, nodejs, express, mongodb)",
        "Desire to learn mern stack with react, nodejs, express js, mongodb",
        "Desire to Learn the process of combining a backend server with a front end React",
        "Desire to Grasp the difference between GraphQL, Apollo, and Relay, and when to use each",
        "Desire to Develop apps that are unique, fun, and responsive.",
        "Desire to Build servers that can be used with both React and React Native applications",
        "Desire to Master handling authentication with GraphQL",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Web development, Full stack web development, Front end web development, Web developer, Backend web development, Website development, NodeJS - The Complete Guide, MVC, REST APIs, GraphQL, Deno, nodejs, node js, node js, express js, graphql, rest api, deno, Graphql, react, fastapi, graphql react, apollo graphql, hasura, flutter, nest js\nHello there,\nWelcome to the \"Full Stack Web App Development: Mern Stack Project & React\" course\nFull Stack web development, MERN stack project (React JS, NodeJS, Express, MongoDB) Redux, Build GraphQL React project\nMaster Node JS & Deno js, build REST APIs with Node js, GraphQL APIs, add Authentication, use MongoDB, SQL & much more!\nLearn and master GraphQL by building real web apps with React and Node\nIn this course, you will learn to develop a web application with React JS, Redux, Hooks & Context, Node Js, Express Js and Mongo DB from scratch React, or React js, React Native, Reactjs, Nodejs, Nodejs Express, Advanced nodejs, Nodejs api, React nodejs, Rest api nodejs, Mongodb, Nodejs, Mongodb python, Mongodb administration, Mongodb certification, Mongodb java, Nodejs mongodb Express, Python mongodb, React js, React js complete guide, React js and node js React js, Express js, react, reactjs nodejs, nodejs, node js, full stack react, reactjs, expressjs, full stack, full stack, full stack javascript, javascript, react js and node js, mern full stack, react js node js, nodejs reactjs, mern stack, node, react full stack, react nodejs, node js react\nEach aspect of creating websites and applications entails a unique set of skills Udemy offers a host of courses to bring you up to speed on modern front-end, back-end, and fullstack web development practices and skills\nThe world of web development is as wide as the internet itself Much of our social and vocational lives play out on the internet, which prompts new industries aimed at creating, managing, and debugging the websites and applications that we increasingly rely on\nReact is an essential Javascript framework for web development It is the most popular framework for developing web, mobile, and desktop app user interfaces\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from\nIf you are thinking to start to learn ReactJS, this course is the best match for you\nWe have explained React from beginner to all levels We have explained all the topics as simply as possible with examples, slides, and diagrams\nWe have created a lot of projects while explaining the subjects Because we believe that applied educations are much more useful than other teaching methods\nWe explained all the subjects with simple examples and applications, and explanatory diagrams in a way that the student can understand at all levels\nWe paid attention to explaining all the topics in order Because we think that the order of presentation of the subject is as important as the content of education We have seen this shortcoming in many pieces of training we have examined and tried to explain these issues to you in the best way\nReact is an essential Javascript framework for web development It is the most popular framework for developing web, mobile, and desktop app user interfaces\nWhether you’re interested in adding React to your existing dev skillset, or you want to develop full-stack web apps by using tools like NodeJS, Redux, and MongoDB in conjunction with React, Udemy has a comprehensive selection of courses to choose from\nNode js is an open-source, cross-platform, back-end, JavaScript runtime environment that executes JavaScript code outside a web browser\nNodeJS and Express is a growing web server technology By learning Node with Express, you can improve your skills, get a new job and you can build a powerful, robust backend\nLearning Node js is a great way to get into backend web development, or expand your full stack development practice With Udemy’s hands-on Node js courses, you can learn the concepts and applications of this wildly useful JavaScript runtime\nNode js is essential to developing real-time applications in JavaScript and has been instrumental in the development of websites like eBay and PayPal Node is designed around an event loop, which allows for easy management of asynchronous functions This makes it a popular environment for modern developers working on chat and gaming apps\nMongoDB is a cross-platform document-oriented NoSQL database program By using MongoDB, you can build a modern application database for your projects\nMongoDB is a document-oriented data store that is easy to get started with but also scales well as your application grows It’s schemaless nature allows greater flexibility or changing application requirements It’s one of the best databases in terms of developer productivity\nMongoDB is a document-oriented database designed to allow developers to scale their applications to meet scalability demands MongoDB features a flexible document model that allows for accelerated development productivity so that you can release better applications, faster\n\"Instaverse MERN Stack Project\" In this course, we will be building a full-stack Social Media project application using Node js, Express, React, and MongoDB\nThis is not an \"Intro to React\" or \"Intro to Node\" course It is a practical hands-on course for building an app using the incredible MERN Stack\nThis course project is probably the biggest and most exciting project you have built so far It is packed with hundreds of tips and tricks that can help you build almost any type of full-stack app (not limited to this project)\nYou can build the biggest and most complex apps of your dream or as required at your job Master the stack of all stacks and become the most productive and innovative developer of your team I welcome you to be a part of this incredible journey\nGraphql, graphql react, react, react graphql, graphql with react, graphql with react: build real World graphql projects, node js, react js, graphql with react build real World graphql projects, nodejs, graphql with react – build real World graphql projects, react Project, react projects, node js mongodb projects, apollo\nNo Previous Knowledge is needed!\nYou don’t need to have previous knowledge about React This course will take you from a beginner to a more advanced level with hands-on examples\nYou will be confident in using React JS, and if you ever get stuck, we will be there to help\nLearn by doing!\nSo we have made this course as simple as possible in order to take you through step by step so you can feel confident and get a truly good understanding of how to utilize ReactJS In this course, we will be teaching React by creating various projects\n\nIn this Full React Js course, you will learn;\nHow to create Single Page Web Application with React JS\nThe most important React topics like components, props, state and component life cycle methods\nHow to send requests to an API and fetch data\nHow to create a multi-page web app with react-router-dom\nHow to manage the data of our application with the redux library\nWe will learn how to perform asynchronous operations with Redux thunk\nHow to create a context with a class-based component\nHow to consume context with ‘context consumer’\nHow to consume context with ‘static contextType’\nHow to manipulate context data in class-based components\nThe most important hook functions like useState, useEffect, useReducer, and useContext\nHow powerful when we use context and hooks together\nHow to easily build the largest and most advanced react applications\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS\nThe best testing framework for NodeJS, Mocha\nHow to create Single Page Web Application with React JS\nThe most important React topics like components, props, state and component life cycle methods\nHow to send requests to an API and fetch data\nHow to create a multi-page web app with react-router-dom\nHow to manage the data of our application with the redux library\nWe will learn how to perform asynchronous operations with Redux thunk\nHow to create a context with a class-based component\nHow to consume context with ‘context consumer’\nHow to consume context with ‘static contextType’\nHow to manipulate context data in class-based components\nThe most important hook functions like useState, useEffect, useReducer, and useContext\nHow powerful when we use context and hooks together\nHow to easily build the largest and most advanced react applications\nThe logic behind MongoDB’s data storage\nThe most popular Object Data Modeling Library for MongoDB, Mongoose JS\nWriting queries for creating, reading, updating, and deleting operations\nAdvanced Features of MongooseJS4\nBuilding an extensive backend API with Node js & Express\nBuilding our frontend to work with the API\nIntegrating React with our backend and creating a great workflow\nGet, Post, Patch and Delete Request using MongoDB\nState management with Redux\nReact Hooks, Async/Await & modern practices\nCreate a CRUD Application with MERN Stack\nLearn how to use GraphQL's schema to define relations between your data objects\nLearn the process of combining a backend server with a front end React\nMaster the process of thinking about your application's data in terms of a graph structure\nGrasp the difference between GraphQL, Apollo, and Relay, and when to use each\nDevelop apps that are unique, fun, and responsive\nBuild servers that can be used with both React and React Native applications\nMaster handling authentication with GraphQL\nLearn the core principles of navigation with React Router and GraphQL\nHandling Forms\nJWT Authentication\nCreating a build script, securing our keys, and deploy to Heroku using Git\nWeb development\nFull stack web development\nFront end web development\nWeb developer\nBackend web development\nWebsite development\nReact, or React js\nReact Native\nReactjs\nNodejs\nNodejs Express\nAdvanced nodejs\nNodejs api\nReact nodejs\nRest api nodejs\nMongodb\nNodejs\nMongodb python\nMongodb administration\nMongodb certification\nMongodb java\nNodejs mongodb Express\nPython mongodb\nReact js\nReact js complete guide\nReact js and node js\nWeb development with react js, mern stack\nReact js full stack\nMern full stack projects with express js, mongodb, nodejs\nFull stack react projects with redux, hooks and context\nFront end web development\nBackend web development\nReact js\nExpress\nExpress js\nReact\nReactjs nodejs\nNodejs\nNode js\nReact js\nExpressjs\nFull stack\nFull stack javascript\nFull stack react\nJavascript\nReact js node js\nNodejs reactjs\nReact js and node js\nNode\nMern stack\nNode js react\nMern full stack\nMongodb\nFull stack react js with redux node js, express js, mongodb\nExpress\nReact node\nReact nodejs\nNodejs express js mongodb\nReactjs and nodejs\nMern\nNode react\nWeb development with react js, mern stack\nReact js full stack\nGraphql, graphql react\nGraphql with react\nGraphql projects\nGraphql, react, fastapi, graphql react, apollo graphql, hasura, flutter, Nest Js\nAt the end of the course\nBy the end of the course, you will be able to build amazing React single-page web applications\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in English, Portuguese, Spanish, Turkish, and a lot of different languages on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers expertise Questions sent by students to our instructors are answered by our instructors within 48 hours at the latest\nWhat is Web development?\nWeb development is a broad description of the tasks and technologies that go into creating a website It can be as simple as making a static text-based website or as elaborate as developing an interactive dynamic website You can break web development into two different categories: frontend (client-side) and backend (server-side) Frontend code executes on the user's computer This can include HTML, JavaScript, and CSS Backend code runs on the server — this commonly includes communicating with a database and often involves languages like Python, Ruby, Java, or PHP Web development does not necessarily include the design process — it focuses on code A web designer builds wireframes to mockup their vision for a website and then shares that with a developer The developer is responsible for writing the code that implements the design\nWhat are the steps to becoming a web developer?\nSome web developers will obtain a degree or certification in the field However, most jobs don't require a specific degree or level of education, just demonstrated knowledge of the field So, it is more important that you know how to show off your skills You could highlight your skills through relevant work experience or a portfolio of past projects You might also share code you have developed using a platform like GitHub, or participate in solution-based forums like StackOverflow that reward you for helping others HTML, CSS, and JavaScript are the first three coding languages you'll need to learn to break into web development You need these three essential elements to create a modern website and work as a frontend web developer HTML (Hyper-Text Markup Language) specifies the content of the website and builds the backbone CSS (Cascading Style Sheets) styles the content JavaScript controls the interactive elements of the website\nHow long does it take to become a web developer?\nThe answer to this question will depend on you The more time you spend developing your skills, the faster you can become a web developer The good news is that web development generally uses light-weight code that is easier to learn than many other languages If dedicated, you can learn the basics of web development in a couple of months But good web developers never stop learning A better question might be, \"What can I do to become a better web developer faster?\" The answer to this question is practice Becoming familiar with coding helps tremendously, but there is also a less obvious benefit of practicing The more you code, the more you will run into problems or find bugs in your code A significant aspect of web development is solving problems and debugging code The better you get at solving problems and tracking down bugs, the faster you will get at coding\nWhat is React?\nReact is a front-end library in Javascript that was developed by Facebook The simplest definition of React is that it is a user interface library used for building UI components for the web But if that was all React did, it would be little more than a template library Developers define components in React by using an HTML-like syntax called JSX These encapsulated components manage their own state, making it simple to pass rich data to a component and keep the state of the application and its components out of the Document Object Model (DOM) These features give React components the ability to react dynamically and efficiently to changes in their state A set of simple components in React can be composed into either simple single-page applications or large, complex web applications\nWhat is React used for?\nReact is an open-source JavaScript frontend library Some developers consider it a frontend framework because it does more than standard libraries usually do The most common use of React is to build dynamic user interfaces for single-page web applications But the structure of React makes it useful for more than just creating websites JSX, which is one feature of React, is a syntax extension for Javascript that provides a template for the HTML and manages the state of the element But JSX can be used as an interface for things other than HTML React Native uses React to build mobile applications Here, JSX becomes an interface for mobile UIs instead of HTML There are even a few libraries that use React and JSX to interact with and manage hardware like React Hardware\nHow does React work?\nReact encourages engineers to write code using a Functional Programming approach Engineers create components, which are normal Javascript functions These functions return information to tell React what content should be displayed on the screen The real power of React comes from the ability to nest or compose these functions inside of one another This nesting ability encourages code reuse and allows an engineer to write a component a single time, but in many different places\nIs React a framework or library?\nFrameworks provide an opinionated approach to building an entire application Libraries, on the other hand, assist in building a single aspect of an application With this in mind, React is a library It assists engineers in presenting HTML in the browser React has no opinions on how data is fetched, how styling is applied, or how the app is deployed or built\nIs React worth learning?\nYes, React is worth learning There are a couple of reasons The first one is that React is in high demand in the software development job market and has been for a few years If you learn to code in React and can do it well, you will increase your chances of finding a job This alone is another reason it is worth learning Website users no longer will settle for old-fashioned sites that won't update without a page reload React’s method of dynamically updating the HTML of a web page fits these users' needs and improves their experience React has also been around a few years and has stood the test of time A large portion of websites, both small and large, use React as a frontend framework\nIs React hard to learn?\nEvery technology or programming language has a learning curve, and React is no different But it is easy to learn if you are dedicated and determined to create frontend web applications To make learning React simpler, you should stick to the basics of React before you add any extra libraries, as that will only complicate your learning experience in the beginning Since React is a Javascript framework, a solid grounding in Javascript will give you a head start With this knowledge, the unique concept of JSX, React's templating language, and the way React uses state will be much easier to grasp\nWhat is the difference between React Native and ReactJS, and which one should I learn?\nReact, or React JS, is a front-end Javascript library for building UI components for the web If you are interested in web development, React is the perfect library to learn to create interactive, dynamic single-page apps, or even full-scale web applications React Native is a framework for building native mobile applications for both the Android phone and Apple's iPhone React Native is still React, which means the syntax and workflow for building applications are basically the same, but the generated components are different In React, web components are generated In React Native, the generated components interact with a phone's native APIs If your focus is web development, then you should learn React If you want to build mobile applications, it is best to learn React first and become familiar with the technology before you try React Native\nWhy is React so popular?\nThere are many reasons why React is popular One reason is that Facebook developed it The social proof is that if it is good enough for Facebook, one of the most popular social networks on the web, it should be good enough for other applications React also solved many of the past issues that developers had with developing single-page applications (SPAs) React came out when SPAs were becoming popular, and all the existing frameworks to build them made development complicated and prone to bugs One feature that makes it better than past libraries is that React is relatively easy to use Its components are reusable, plus React's use of the virtual DOM makes it very performant React should remain popular in the future as each new release brings new features and performance improvements\nWhat is Node Js and what is it used for?\nNode Js is a server environment built for fast and easily scalable network applications It was built on Chrome’s JavaScript runtime and uses an event-driven, non-blocking model that makes it the best fit for applications that run on distributed devices and need to run in real-time By using JavaScript, node Js can be put to work by many software developers familiar with JavaScript Because the code is open-source, you can also use it on any platform (Mac OS, Windows, or Linux) Node js is the architecture for creating websites and real-time applications because it’s easy for teams to learn, and it’s fast Examples of applications that use node Js include video conferencing apps, chat servers, eCommerce software, and collaborative online gaming\nWhat are the advantages of Node Js?\nNode Js is open-source, meaning it’s free code for all developers On top of that, it also means that there is a thriving community of Node Js users and programmers that all add to the knowledge base Many are happy to share their flavor of the code with other developers, and collectively, the Node Js environment continues to be enhanced Because Node Js uses JavaScript, there is a large pool of developers that understand and can code in the environment It’s also a relatively simple environment for new team members to learn, making it an efficient choice for development teams with people that need training Node Js was developed on Push technology instead of web sockets, which is why it’s the preferred choice for real-time communication applications and programs that need to be highly scalable\nWhat does it mean that Node Js is a runtime system?\nA runtime system is a platform where a software program runs It’s essentially an environment housing the collection of software and hardware that allows an application to execute (or run) Node Js is a runtime system because it provides the environment necessary for applications to run within it, and no additional code or hardware is required Because Node Js makes use of JavaScript, it’s a runtime system that provides a framework where you can use JavaScript to create and run programs The JavaScript programming language (which is quite popular) is then automatically translated into machine code for the hardware to run the program in real-time It’s an efficient system, making it the preferred choice for many software and tech companies\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better React developer You will always have up-to-date content for this course at no extra charge\nThe instructor helped me whenever I needed it, and I've learned a lot in very little time Now I can create simple single-page applications, and I fell in love with CodePen and VS Code!\nIf you are wanting to learn how to; build for production, push to production, have a dev and production version, and learn how to navigate the two, this is the class for you! Seriously there is so much real-world knowledge here it should be worth way more than what it is!\nAfter taking this course, I decided to adopt Node js as my specialized language/technology Thank you\nThe course is great and He does not say anything without an explanation If you want to really understand how to use MongoDB, how to test it, and how to set up and use Express with MongoDB, then this is an amazing course\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nFull Stack Web App Development: Mern Stack Project & React course\nWe offer full support, answering any questions\nSee you in the class!",
      "target_audience": [
        "Beginner who wants to be React developer",
        "Anyone who wants to become an React Developer",
        "Anyone who wants to build amazing React single page web applications",
        "For those who want to learn React Hooks",
        "Anyone who wants to learn React Js and its modern face Hooks & Context",
        "Students who want to learn how to build fast single page web apps",
        "For those who want to learn React Context API",
        "Anyone interested in learning an extremely popular technology used by leading tech companies like Facebook, Instagram and Netflix",
        "Anyone who wants to learn today's most popular front-end architectures and take their Web development skills to the next level and learn a future-oriented technology",
        "Who wants to learn React-Router, React-Portals and Redux",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone planning a job transformation and wants to become a React developer",
        "Anyone interested in NoSQL Schema",
        "Professionals who are willing to learn MongoDB Database",
        "Anyone looking to build a career as a NodeJS or Express developer",
        "Also, if you are looking to move in React-Native App development, it would be great for starting with React Js. Once you are familiar with concepts like JSX, props and states, same concepts are applied in React Native too. And moving into React Native would be so easy",
        "People who want to learn mern stack ( mongodb, express, react js, node js)",
        "People who want to learn full stack react js, express js, nodejs, mongodb",
        "People who want to master graphql and build graphql projects"
      ]
    },
    {
      "title": "Twitter Bootstrap 2 for Beginners",
      "url": "https://www.udemy.com/course/twitter-bootstrap/",
      "bio": "Twitter Bootstrap is an amazing tool. Try it out today.",
      "objectives": [
        "To learn the Bootstrap interface",
        "To develop your first website",
        "To develop more sites based on the principles in this course"
      ],
      "course_content": {
        "Introduction to Twitter Bootstrap": [
          "Introduction",
          "What Is Bootstrap?"
        ],
        "Building a Website with Twitter Bootstrap": [
          "Setting Up",
          "Navigation",
          "Hero Unit",
          "Fluid Grid System",
          "Glyphs",
          "Navigation List"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer",
        "A passion for website design and development"
      ],
      "description": "Like us on Facebook and/or Follow us on Twitter. Message us to let us know you liked us, or Tweet us @sr_elearning.\nLink to Our Facebook Page\nLink to Our Twitter Profile\nStone River eLearning\n_____________________________________________________________________________________\nBootstrap is an amazingly simple and powerful free web development and design framework that allows anyone to create great looking, responsive websites in no time at all. Get started learning Bootstrap today, and join the hundreds of thousands of Bootstrap developers in creating great websites easily.\nCourse Overview\nThis course gives you a great overview of Bootstrap so you will understand what you can use it for. It goes into detail on how to build a site using great looking templates, and offers lots of helpful tips and tricks along the way.\nBy the time you're done with this course, you will know enough to begin developing websites by choosing a template and customizing it for your needs or the needs of your clients.\nCan I Make Money with Bootstrap?\nYes. Hundreds of thousands of web developers already use Bootstrap as their main development tool, and you can too. If you've ever been interested in starting your own web development company, then Bootstrap should be on your short list of tools to learn. The best part is that Bootstrap is completely free to use.",
      "target_audience": [
        "Web developers",
        "Aspiring web developers",
        "Web designers",
        "Aspiring web designers",
        "Entrepreneurs",
        "Business owners"
      ]
    },
    {
      "title": "Vue 3, Nuxt.js and Laravel: A Rapid Guide - Advanced",
      "url": "https://www.udemy.com/course/vue-laravel-influencer/",
      "bio": "VueJS with Typescript, Nuxt.js, Vuetify, Composition API, Laravel 8, Laravel Sanctum, Docker, Redis, Stripe",
      "objectives": [
        "Use Vue 3 and Nuxt js with Typescript",
        "Use Composition API and Options API",
        "Use Docker",
        "Authentication and Authorization",
        "Laravel Passport",
        "Upload Images",
        "Export CSV files",
        "Create charts with c3js",
        "Pay with Stripe"
      ],
      "course_content": {},
      "requirements": [
        "Beginner PHP Developers",
        "Beginner Javascript Developers"
      ],
      "description": "Learn how to create an Ambassador App using VueJS, Nuxt.js and Laravel. We will build 3 frontend apps Admin, Ambassador and Checkout and they will consume a big Laravel API.\nIn Laravel you will learn:\nHow to create API's with Laravel\nAuthenticate using Laravel Sanctum\nLaravel Json Resources\nInstall and use Docker\nUse Redis\nUse Stripe\nLaravel Events & Listeners\nSending Emails\nIn this Vue you will learn:\nUse Vue with Typescript\nUse Nuxt.js with Typescript\nUse Vuex\nHow to use Composition API and Options API\nUse Vuetify\nCreate public and private routes\nPay with Stripe\nI'm a FullStack Developer with 10+ years of experience. I'm obsessed with clean code and I try my best that my courses have the cleanest code possible.\nMy teaching style is very straightforward, I will not waste too much time explaining all the ways you can create something or other unnecessary information to increase the length of my lectures. If you want to learn things rapidly then this course is for you.\nI also update my courses regularly over time because I don't want them to get outdated. So you can expect more content over time from just one course with better video and audio quality.\nIf you have any coding problems I will offer my support within 12 hours when you post the question. I'm very active when trying to help my students.\nSo what are you waiting for, give this course a try and you won't get disappointed.",
      "target_audience": [
        "Beginner PHP Developers",
        "Beginner Javascript Developers"
      ]
    },
    {
      "title": "XML For Absolute Beginners: Learn to create your own tags",
      "url": "https://www.udemy.com/course/xml-for-absolute-beginners-learn-to-create-your-own-tags/",
      "bio": "XML is a popular standard for exchanging data between applications and organisations",
      "objectives": [
        "Choose a root tag",
        "Create your own custom tags",
        "Create an XML document Structure",
        "Generate an XML document",
        "Create nested tags"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with HTML and basic CSS"
      ],
      "description": "XML is a mark up language used to record data which is readable to both people and also a range of software applications. XML is used extensively in the publishing world to fill layouts with content and enable people with no database development skills to build data structures with ease.\nXML is a popular standard for exchanging data between applications and organisations.\nThis course will teach you the very basics of XML from the syntax to document structure.\nThe course is video based and less than 1 hour long.\nWhat you will learn includes:\n· How to write a proper XML syntax\n· How to create your own custom tags\n· How to set a root element\n· How to create nested child elements\n· How to create a document structure\n· How to use comments",
      "target_audience": [
        "This Course is meant for absolute beginners who do not know what XML does."
      ]
    },
    {
      "title": "Your Second JavaScript Course",
      "url": "https://www.udemy.com/course/javascript-boost/",
      "bio": "Advanced Topics: ES6, Promise, Async Await, Arrow Function, Prototype Chain, Data Structure, Sorting Algorithms",
      "objectives": [
        "Understand how JavaScript works: queue, stack, heap, stack overflow, event loop, task queue, etc.",
        "Master ES6 new syntaxes: let, map, set, Symbol, iterator, generator, reflect, promise, proxy, etc.",
        "Destructuring assignment",
        "Completely understand the JavaScript inheritance and the prototype chain",
        "ES6 Module and CommonJS",
        "Constructors and classes",
        "Real-life creative ways of designing constructors and inheritance programs",
        "The strict mode",
        "Tail call optimization",
        "Recursion",
        "Deep and shallow object copy",
        "Two-way data binding",
        "Data structure",
        "Sorting algorithms"
      ],
      "course_content": {
        "Fill up knowledge loopholes: var, let, const, hoisting, temporal dead zone": [
          "Everything you need to know about VAR",
          "Everything you need to know about LET",
          "Constant",
          "TDZ: Temporal Dead Zone",
          "Real-life application of LET"
        ],
        "Fill up knowledge loopholes: function hoisting, arguments, caller, callee, THIS": [
          "Who has the highest priority? Variable name, function name or argument name?",
          "Arguments, caller, callee",
          "Three ways to redirecting THIS of a funciton",
          "Higher-order function and currying",
          "Currying and closure"
        ],
        "Closure and arrow function": [
          "Closure",
          "Real-life application of Closure",
          "Syntax of arrow function",
          "THIS in an arrow function",
          "Application of arrow function"
        ],
        "Destructure: the 'fancy' way of setting variable values": [
          "Destructure array",
          "Destructure object",
          "Destructure string",
          "Destructure number, boolean, null and undefined",
          "Destructure function arguments"
        ],
        "ES6 new syntax: Map and Set": [
          "Map basics",
          "Iterate over MAP using FOR OF",
          "SET basics",
          "Application of SET"
        ],
        "ES6 new syntax: Symbol": [
          "Introduction to Symbol",
          "How to create a Symbol value",
          "Symbol.for()",
          "Use Symbol value as the property name",
          "Well-known Symbol"
        ],
        "ES6 new syntax: Iterator and generator": [
          "The iteration protocol: the iterable protocol and the iterator protocol",
          "Create your own iterator",
          "Generator",
          "Application of generator",
          "The next() method",
          "yield *"
        ],
        "ES6 new syntax: Promise": [
          "Introduction to Promise",
          "The Promise constructor",
          "The application of Promise",
          "The then_able object",
          "Promise.resolve() and Promise.reject()",
          "Limits of Promise.resolve() and Promise.reject()",
          "Process several promises together: .all(), .allSettled() and .race()"
        ],
        "ES6 new syntax: async await": [
          "async await",
          "async await: supplement"
        ],
        "ES6 new syntax: Reflect and Proxy": [
          "Reflect and its methods",
          "What is Proxy",
          "Create private properties using the GET trap",
          "The SET trap",
          "The has and deleteProperty trap",
          "Use a proxy object as the prototype",
          "The defineProperty trap",
          "The apply trap",
          "The constructor trap",
          "Revocable proxy",
          "Real-life Application"
        ]
      },
      "requirements": [
        "Basic JavaScript development experience"
      ],
      "description": "This is the course that scratches the itch!\nThis is a JavaScript enhancement course, designed to help junior JavaScript developers gain a wider and deeper understanding of JavaScript.\nWhat you will learn:\nYou will learn ES6 new features like destructuring assignment, async/await, reflect, proxy, symbol, iterator, generator, etc.\nThen you will learn the JavaScript object system and prototypal inheritance in the most detailed way. You will learn every method the Object constructor has.\nTo completely understand how JavaScript works, you will learn advanced topics like thread, process, stack, queue, heap, task queue, event loop, recursion, deep and shallow object copy, etc.\nTo further boost your coding skills, you will also learn 8 sorting algorithms: bubble sorting, cocktail sorting, quick sorting, counting sorting, insertion sorting, bucket sorting, selection sorting, and heap sorting.\nYou will also develop a proper understanding of linear and non-linear data structures, including array, linked list, binary search tree, max heap, min heap, etc.\nWhat you will achieve:\nAfter this course, you will develop a solid JavaScript knowledge base and most importantly, gain a deep understanding of how JavaScript works under the hood. This knowledge can help you create more efficient programs and succeed in job interviews.\nIf you need to learn JS frameworks like Vue, React, and Angular, a solid knowledge foundation in JavaScript can tremendously accelerate your study.\nThroughout the course, you will also learn how to answer questions that are frequently seen in job interviews.\nContent highlights:\nLecture 1, 2: Everything you need to know about var and let [FREE Preview]\nLecture 6: Priority comparison: variable name, function name, and argument name\nLecture 9, 10: Higher-order function and currying\nLecture 11, 12: Closure and its real-life application [FREE Preview]\nLecture 68, 69, 70, 71: The JavaScript prototype chain\nLecture 85: two-way data binding\nLecture 103: Data structure: Queue, Stack, and Heap  [FREE Preview]\nLecture 104: Thread and Process, sync and async, blocking and non-blocking\nLecture 105: Recursion and stack overflow\nLecture 107: Event loop\nLecture 108: Interview challenges: predict the result of the following programs using event loop, macro and micro task queue\nLecture 110, 111: tail call optimization\nLecture 114, 115, 116, 117: creative inheritance program design\nLecture 120, 121: 'Deep' copy and assign objects\nLecture 122, 123: JavaScript garbage collection, reference count, and the mark-and-sweep algorithm\nLecture 124, 125, 126, 127: Basic computing knowledge: bit, byte, memory address, byte addressing, bit width, encoding\nLecture 142, 153, 144: Type coercion, wrapper object, explicit and implicit typecasting\nLecture 151-163: Bubble sorting\nLecture 164, 165: Cocktail sorting\nLecture 166, 167: Quick sorting\nLecture 168, 169, 170, 171: Counting sorting\nLecture 172, 173: Insertion sorting\nLecture 174. 175: Bucket sorting\nLecture 176, 177: Selection sorting\nLecture 178: Time and space complexity and the big O notation\nLecture 179, 180: Linear and non-linear data structures: array, linked list, binary search tree, max heap, min heap, etc.\nLecture 181, 182, 183, 184: binary heap and heap sorting\nLecture 185, 186, 187: the Observer pattern and two-way data binding using the Observer pattern\nPlease Note: This is NOT a beginner course and does not cover JS DOM and jQuery.",
      "target_audience": [
        "Students who want to take their JavaScript skill to the next level",
        "Students who need to enhance their JavaScript knowledge foundation",
        "Students who need to master advanced and confusing JavaScript topics like prototype chain, event loop, closure, etc.",
        "Developers who need to know more about the running mechanism of JavaScript",
        "Developers who need to improve the efficiency and quality of their codes"
      ]
    },
    {
      "title": "Stripe Masterclass With React.js & Node.js",
      "url": "https://www.udemy.com/course/stripe-masterclass-with-react-node/",
      "bio": "Build a real world fully functional e-commerce site with React, Hooks, Context API, Node.js, Express.js and Firebase",
      "objectives": [
        "Real World Backend RESTful API For Accepting Payments With Stripe",
        "How To Build An E-Commerce Cart with React",
        "How To Accept Payments With Stripe",
        "How To Save Customer Credit Card Information",
        "Learn All About Webhooks By Securely Listening For Events From Stripe With webhooks",
        "Learn About 3D Secure payment handling",
        "Learn How To Create Customers With Stripe"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming principles",
        "Modern JavaScript (ES6)",
        "Basic Understanding Of React Library",
        "Basic Understanding Of APIs"
      ],
      "description": "You will build a real world fully functional e-commerce site with React, Hooks, Context API, Node.js, Express.js and Firebase with the following features:\nNode.js Server with Express\nReact frontend\nFully function e-commerce cart built with only functional components, hooks, & the context API\n3D Secure payment handling with Stripe\nManage Stripe customers and save credit cards for future use\nSecurely listen to events from Stripe via webhooks\nLearn how to read the comprehensive Stripe API documentation",
      "target_audience": [
        "People who want to learn how to integrate a payment processing gateway",
        "Entrepreneurs and app developers who want to integrate their website or App with Stripe"
      ]
    },
    {
      "title": "Tailwind CSS From Scratch | With Multiple Projects",
      "url": "https://www.udemy.com/course/tailwindcss-with-projects/",
      "bio": "Learn Utility-first Tailwind CSS framework from scratch & Build Multiple Projects using Tailwind CSS with best practice",
      "objectives": [
        "You will learn Tailwind CSS core concepts",
        "You will become confident Tailwind CSS",
        "How to plan a website from sketch",
        "You will able to build real world website",
        "How to make websites work on every possible mobile device (responsive design)",
        "Downloadable source code"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of HTML & CSS",
        "Latest version of node and npm installed",
        "Basic JavaScript Knowledge (Not Mandatory)"
      ],
      "description": "Welcome to Tailwind CSS From Scratch: With Multiple Projects. In this course, you will learn the latest Tailwind step by step. After completing the basics, I will create some projects so you know how to create projects with the skills, and if I missed something in the course it will cover also the project. Always after learning skills we should create some projects for solid learning. This course covers all the different parts of the latest version of the world's most popular front-end framework, Tailwind. It has been used on millions of websites around the world and has been carefully developed to cover a wide range of typical user interfaces.\nWhat to learn before tailwind CSS?\nIf you are interested to learn tailwind CSS you must have an excellent understanding in\nHTML (Hyper Text Markup Language)\nCSS (Cascading Style Sheets)\nJavaScript (not mandatory)\nNPM (not mandatory)\nYou do not need to learn older technologies like Tailwind v2 or others.\n\n\nWhat to do with tailwind CSS?\nUtility-first framework\nEasily customizable\nFaster styling process\nResponsiveness\nSmall file size\nDon’t have to name classes\n\n\nIncrease your value as a front-end web developer today by learning a more advanced way of styling your websites using Tailwind CSS.\n\n\nI also uploaded all resources, if you stack them anywhere, you can check them. So what are you waiting for? Enroll and learn the world's most popular front-end framework Tailwind.",
      "target_audience": [
        "If you know HTML and CSS a bit but do not know how to build real-world projects, this course is perfect for you.",
        "Web developers of all levels who want to increase their value by learning a more advanced way of styling their apps & sites",
        "Anyone that wants to get better at creating website and UI layouts"
      ]
    },
    {
      "title": "Advanced Shopify Theme Development: Liquid + Vue.js (v3.0)",
      "url": "https://www.udemy.com/course/shopify-vue-theme/",
      "bio": "Learn to build Shopify themes using Liquid, JavaScript, and Vue.js v3.0 from scratch. No experience required!",
      "objectives": [
        "How to create a Shopify theme from scratch with Vue. and Liquid",
        "Advanced Liquid Techniques",
        "Create a high quality Shopify Theme",
        "Advanced Shopify Techniques using Vue and Liquid",
        "Shopify Ajax API",
        "Create a custom variant and option selector for products",
        "Create a powerful Mini-Cart using Vue",
        "How to implement Vue using a CDN in Shopify themes"
      ],
      "course_content": {},
      "requirements": [
        "Have an understanding of HTML & CSS",
        "Access to a computer with a modern browser (Chrome, Safari, Firefox)"
      ],
      "description": "Advanced topics include:\n- How to build a fully functional Shopify Theme from Scratch\n- Advanced Liquid Techniques\n- Shopify Ajax API\n- Create a powerful Mini-Cart using Vue.js\n- Create a custom variant and option selector for products\n- Build an Advanced Shopify Theme from the Future (Vue.js 3.0)\n- How to implement Vue.js using a CDN in Shopify themes\n\n\nWho is the course for?\nAnyone who is looking to build ecommerce themes for themselves, clients or to get an in demand job using the Shopify platform. Most Shopify themes are stuck in the past. Utilizing jQuery for dynamic content is from the past. This course throws jQuery out the window and replaces it with Vue.js. The most flexible and powerful JavaScript framework that allows us to create a Shopify theme from the future.\nThe theme built in this course utilizes the best practices for Shopify themes but adds an innovation piece where it is needed the most. The way we will be building this theme will allow for the best customer experience with the least maintenance.\n\n\nWhy Vue.js?\nVue.js is the only framework that allows for the kind of flexibility that is needed when building Shopify themes. We are able to inject Vue.js into the parts of the theme where we need it most and keep it away from where we don't need it. Vue.js is also easy to pick up and start using. There is no extensive setup required and no dependencies. It super lightweight and allows us to easily manage state within our theme.",
      "target_audience": [
        "Shopify Developers",
        "Software Developers",
        "E-Commerce / Shopify Agencies",
        "E-Commerce / Shopify Developers"
      ]
    },
    {
      "title": "PHP Laravel: Build Amazing Restaurant Management System",
      "url": "https://www.udemy.com/course/php-laravel-2023-build-amazing-restaurant-management-system/",
      "bio": "Build Complete Restaurant Management System with Laravel MySQL and Bootstrap and Level up your Web Development Skills",
      "objectives": [
        "Learn to setup the necessary tools for building modern web apps",
        "Set up the authentication system in seconds with Laravel UI package",
        "Learn how the MVC structure works in Laravel",
        "Integrate your own theme easily",
        "Work with Models and Eloquent the professional way",
        "Work with views and Eloquent the professional way",
        "Work with Controllers and Eloquent the professional way",
        "Learn to Perform CRUD operations in the simplest way possible",
        "Learn some advanced routing ways",
        "work with Middlewares and Guards",
        "Learn to validate with Requests",
        "Create your own custom admin panel",
        "Handle validation like a pro and prevent user to sensitive date",
        "Write professional maintainable code",
        "Work with some SQL complex queries",
        "Learn file uploading and how to fully update and delete it",
        "Learn how to integrate different parts of code together so they can work in the same system",
        "Learn to fix bugs along the way of developing this web app",
        "Learn security tips and tricks",
        "Integrate PayPal API for payment processing and online ordering",
        "Build a dashboard for restaurant managers and staff",
        "Create a menu management system",
        "Create  a table reservation system",
        "Create a customer ordering system"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Before you Start with the Course: Very Important",
          "Installing Xampp",
          "Installing VS Code"
        ],
        "Getting Started and Creating Authentication System": [
          "Desgin and Code for the Project",
          "Creating New Laravel Project and Running the Server",
          "Creating Authentication System",
          "Integrating our Theme pt.1",
          "Integrating our Theme pt.2"
        ],
        "Working with Cart": [
          "Displaying Food Items pt.1",
          "Displaying Food Items pt.2",
          "Displaying Details for every Food Item",
          "Adding Food Items to Cart pt.1",
          "Adding Food Items to Cart pt.2",
          "Displaying Food Items in Cart",
          "Deleting Items form Cart",
          "Validating Cart"
        ],
        "Creating Checkout and Paying with Paypal and Booking Tables": [
          "Checkout pt.1",
          "Checkout pt.2",
          "Paying with Paypal pt.1",
          "Paying with Paypal pt.2",
          "Validating Paying",
          "Booking Tables",
          "Validating Booking Form"
        ],
        "Working with Users Pages and Dealing with Reviews": [
          "Working with Menu",
          "Displaying Bookings for every User",
          "Displaying Orders for every User",
          "Writing Reviews",
          "Displaying Reviews",
          "Validating and About Page",
          "Validating and Cleaning up"
        ],
        "Getting Started with Admin Panel": [
          "Design and Code for Admin Panel",
          "Creating Custom Authentication pt.1",
          "Creating Custom Authentication pt.2",
          "Validating Authentication System pt.1",
          "Validating Authentication System pt.2"
        ],
        "Working with Admins": [
          "Working with Index Page",
          "Displaying All Admins",
          "Creating New Admins"
        ],
        "Working with Orders": [
          "Displaying All Orders",
          "Updating Orders",
          "Displaying all Bookings",
          "Deleting Orders"
        ],
        "Working with Bookings": [
          "Updating Bookings",
          "Deleting Bookings"
        ]
      },
      "requirements": [
        "Knowledge of PHP, MySQL and Bootstrap",
        "Very little knowledge of Laravel would help a lot"
      ],
      "description": "If you're looking for a comprehensive online course that covers the latest version of PHP Laravel and teaches you how to build an amazing restaurant management system from scratch, you've come to the right place. My course \"PHP Laravel 2024: Build Amazing Restaurant Management System\" includes everything you need to know to develop a powerful and efficient restaurant management system using the latest features of Laravel, the industry-standard PHP web framework.\n\n\nWith hands-on project-based learning, you'll develop essential skills in database and application design, user authentication, security mechanisms, and payment processing, that will allow you to create a fully functional, user-friendly, and secure restaurant management system. I will guide you every step of the way.\n\n\nWhat makes this course unique is that I focus on building a production-ready application that includes all the essential components such as menu management, online ordering, reservations, payments, review system, and more. You'll also learn how to customize the application further to meet your specific business requirements.\n\n\nI have a lot of experience in designing various enterprise-level applications and will help you develop real-world skills along with an in-depth understanding of how to leverage the power of PHP Laravel. You'll get access to all course materials for life, and our team is always available to assist you in case of any questions or concerns.\n\n\nHere are some of the key features of the course:\nLearn Laravel installation and setup\nBuild a database schema for restaurant menus, orders, and reservations\nCreate models, controllers, and views for restaurant menus, orders, and reservations\nImplement user authentication and authorization\nIntegrate PayPal API for payment processing and online ordering\nBuild a dashboard for restaurant managers and staff\nCreate a menu management system\nCreate  a table reservation system\nCreate a customer ordering system and so much more\n\n\nEnroll now and take the first step towards building your own restaurant management system using PHP Laravel – the preferred framework of industry professionals. Let's get started!",
      "target_audience": [
        "People who learned PHP Laravel and want to build a full project",
        "Developers who want to build their CVs"
      ]
    },
    {
      "title": "Javascript for beginners",
      "url": "https://www.udemy.com/course/java-script-quick-beginner-introduction/",
      "bio": "Learn a basic introduction to javascript and how to write a simple javascript code.",
      "objectives": [
        "Write JavaScript code from scratch",
        "Change webpage content using javascript",
        "Write JavaScript comments",
        "JavaScript Data Types",
        "Create Variables",
        "Create Functions",
        "Write Conditional Statements",
        "Create functions",
        "Experiment with JavaScript with Chrome Developer Tools",
        "Build a browser based Calculator",
        "Build a browser based Todo List",
        "Build a browser based CountDown Timer",
        "Build a browser based Analogue Clock"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML and CSS helpful but not mandatory",
        "Computer is required",
        "Modern version of web browsers e.g google chrome and Mozilla firefox"
      ],
      "description": "JavaScript is a scripting or programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc. — you can bet that JavaScript is probably involved.\nJavaScript is the most popular scripting language in the world. It is responsible for the interactivity like games, online forms or surveys and other activities user’s can engage with on a website. Most dynamic if not all website contains some element of JavaScript.\nJavaScript programming language drives millions of interactive web sites, powers fast web servers and can even be used to build desktop and mobile applications.\nJavaScript is one of the core languages used in web development. The other two are HTML and CSS.\nJavaScript interacts and creates functionality with HTML and CSS.\nHTML is the markup language that we use to structure and give meaning to our web content, for example defining paragraphs, headings, and data tables, or embedding images and videos in the page.\nCSS is a language of style rules that we use to apply styling to our HTML content, for example setting background colors and fonts, and laying out our content in multiple columns.\nJavaScript is a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much everything else. (Okay,\nIn this course you will learn  how to code or program with JavaScript from scratch.\nWhat You Will Learn include:\nData Types\nVariables\nOperators\nConditional Statements\nEvents\nArrays\nFunctions\nWe will also create four projects from scratch.\nAnalogue Clock\nCalculator\nCount down timer\nTodo List App",
      "target_audience": [
        "Beginners to JavaScript",
        "Beginners to computer programming"
      ]
    },
    {
      "title": "RxJS - Mastering Observables, Subjects and Operators",
      "url": "https://www.udemy.com/course/rxjs-101/",
      "bio": "Learn to leverage observables and asynchronous data streams in this first-class course on RxJS!",
      "objectives": [
        "Create an RxJS Observable",
        "Subscribe to observables with observers",
        "Create and subscribe to RxJS subjects",
        "Understand and use RxJS Behavior Subjects",
        "Implement RxJS Replay Subjects",
        "Use Static and Instance Operators (RxJS)"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of JavaScript",
        "Any PC or Mac Workstation"
      ],
      "description": "With almost 20K stars on GitHub, Reactive X for Javascipt (or RxJS) is one of the web's hottest and fastest-growing libraries.\nIf you've come to this page, you're probably aware that a large percentage of Angular applications use RxJS under the hood. BUT, for most of your life, maybe even up until this very moment, you probably thought RxJS was confusing.. hard even! How wrong you were!\nIn this course, I teach you that RxJS isn't hard! By the end of it, you'll be using RxJS like a pro!\nIn this course, you'll learn RxJS by...\n\nObserving informative and carefully prepared slides\nHearing every concept explained in base terms by the code whisperer\nCoding along in five separate demo clips (all the necessary tools to code along at home are provided!)\nWorking with the exclusive RxJS Playground provided to users of this course\nThere's no doubt that the following topics, all of which are covered, will make you more valuable to any agile Angular team:\nRxJS Observables and Observers\nRxJS Subjects, Behavior Subjects (An Angular Favorite!) and Replay Subjects\nRxJS Operators\nAdvantages and Disadvantages of Reactive X\nIn fact, I'm so confident in this course, I'm going to GUARANTEE all of the following statements - if you feel any don't match up with YOUR reality, get a 100% refund via Udemy's refund policy, no questions asked!\nYou WILL feel more confident in job interviews involving Angular or RxJS\nYou WILL integrate more quickly and effectively into teams using this techology\nYou WILL feel more confident around async code in general and be more capable of differentiating the advantages and disadvantages of promises, enumerators, etc\nYou WILL learn and have fun!\nWhat more can I say? Can anyone offer ANYTHING better than a 100%, no questions asked, money back guarantee?\nTake advantage of the special price listed and sign up TODAY!!\n- the Code Whisperer",
      "target_audience": [
        "Developers seeking jobs in the Angular field",
        "Web architect who need to know in detail about promises, observables, etc.",
        "Junior developers wishing to improve their skills",
        "Independent developer who want to learn a good technology for larger projects"
      ]
    }
  ]
}