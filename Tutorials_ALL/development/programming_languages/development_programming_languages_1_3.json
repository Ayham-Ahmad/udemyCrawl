{
  "courses": [
    {
      "title": "Minimum Viable Programming for Maximizing AI",
      "url": "https://www.udemy.com/course/beginner-programming-fast-track-for-maximizing-artificial-intelligence/",
      "bio": "Learn how to get 1000x more out of Artificial Intelligence tools with just a LITTLE coding knowledge",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No Pre-Requisites. All are welcome"
      ],
      "description": "Intro to \"MVP AI\" aka \"Minimum Viable Programming for Using Artificial Intelligence\".\n\n\nThis course is simply an accelerated \"follow along to get up and running\" course for people who want to use AI tools that don't have a slick user interface built - which opens up alot of projects (probably millions on github).\n\n\nIm going to walk you through what you need to install & setup, and the workflow I use to open projects and start using them. You don't need to know anything to follow along!\n\n\n\"MVP AI\" or \"Minimum Viable Programming for Using Artificial Intelligence\" is an accelerated course designed for individuals who want to utilize AI tools without a polished user interface. This course provides a step-by-step guide on what to install, how to set up, and the workflow required to start using AI projects effectively. The aim is to empower learners to engage with numerous projects, potentially millions on platforms like GitHub, by eliminating the need for extensive programming knowledge.\n\n\nThroughout the course, participants will discover how to leverage APIs to perform tasks in bulk, regardless of their programming proficiency. The emphasis is on practical, hands-on learning, with the assurance that no prior programming knowledge is necessary to follow along.\n\n\nYou'll learn how to leverage APIs to do things in bulk, even if you have no programming knowledge whatsoever.\n\n\nIn addition to practical skills, \"MVP AI\" fosters a mindset of experimentation and exploration within the AI and machine learning domains. By embracing a minimum viable approach, learners are encouraged to iterate quickly, test hypotheses, and adapt their strategies based on feedback.\n\n\nThis iterative process not only accelerates learning but also cultivates a sense of confidence and resilience when encountering challenges.\n\n\nThrough this course, individuals not only gain technical proficiency but also develop a problem-solving mindset essential for navigating the dynamic landscape of artificial intelligence and machine learning. Get ready to embark on a journey of discovery and innovation with \"MVP AI.\"\n\n\nLet's get started!\n\n\n#artificialintelligence #machinelearning #ai #python #aiforbeginners #programming #programmingforbeginners #machinelearningforbeginners #artificialintelligenceforbeginners\n\n\nComments from previous students:\n\n\n\"dude, where was this for me 15 years ago?!? LOL keep teaching buddy, super handy cookbook\"\n\n\n\"ls - 'list, shit. That's how I think about it' haha! I use 'windows terminal' (not cmd.exe - it's new and opt-in) on windows, not 'powershell' which is okay.\"",
      "target_audience": [
        "Anyone looking to leverage AI & AI tools to do things in BULK (and don't know how to program)"
      ]
    },
    {
      "title": "C Programming Language from Scratch",
      "url": "https://www.udemy.com/course/c-programming-language-from-scratch/",
      "bio": "Welcome to the future of coding",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No programming experience needed . Any laptop or pc for practice is required."
      ],
      "description": "Anyone from Non Programming background can choose this course - all the basics has been covered for clarity.\n\n\nC Programming is a Basic programming Language which acts as a base for Professional Programmers . Once you learn C Program ,you can Start coding for many different Language's .\nOnce you are good in basics with strong practice , you can Learn any other Language Easily.\nThe only requirement is you should have a computer or laptop to practice.\nIn this course ,you will Learn all these Concepts under C Programming .\nI have explained how to install the software for free , so do not worry about your ram or space of laptop .\nThe software can run even in 2gb ram laptop and is very easy to install .\nAll the concepts from basic has been covered so that you understand clearly.\nExamples has been mentioned for each and every topic for more clarity.\nIf you are clear with this , then you can go ahead with any language you want in future.\n\n\nBe the first to learn new skills . If you have any doubts regarding course or any code , you can ask me .\nIf you find any concept difficult , let me know i will clear it for you .",
      "target_audience": [
        "Beginner who want to know if coding can help them in future."
      ]
    },
    {
      "title": "Programming in C++",
      "url": "https://www.udemy.com/course/functions-in-c-p-p/",
      "bio": "Learn the basics of programming in C++ language",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Presentation"
        ],
        "An introduction to C++": [
          "Basic syntax. Data types. Variables & Constants. IO commands",
          "Exercises",
          "Quiz",
          "Individual Work"
        ],
        "Functions. Operators": [
          "Functions",
          "Operators",
          "Exercises",
          "Quiz",
          "Individual work"
        ],
        "Control statements. Loops": [
          "Control statements. Loops",
          "Exercises",
          "Quiz",
          "Individual Work"
        ],
        "Arrays": [
          "Arrays",
          "Exercises 1",
          "Exercises 2",
          "Quiz",
          "Individual Work"
        ],
        "Scope rules": [
          "Scope rules",
          "Exercises",
          "Quiz",
          "Individual work"
        ]
      },
      "requirements": [
        "Basic knowledge of mathematics, but not compulsory."
      ],
      "description": "This course comes as a part of the C++ tutorial training suite; and provides you with useful information about programming fundamentals. C++ is one of the most popular programming languages worldwide, used as an introductory programming language in most universities and training centers. You will learn here how to build your own functions and use such technic as recursion. The given course does not cover a total study program of the C++ language, it is just a basic part, indispensable to the learning process. However, we recommend everyone to follow this course for a better understanding of functions, statements, and operators, and just to arouse your interest in the C++ language. This short initiation, though brief, could have a very beneficial role for those interested in studies, careers, or simply out of self-interest. We hope the information provided here will arouse your interest and introduce you to several questions that you will most likely seek answers to. You will also find Quizzes, and Individual Exercises for each chapter, which are an indispensable part of the learning process. We recommend you begin your programming journey with this course, C++ is a recommendable programming language, though from it derived other popular languages like Java and C#.",
      "target_audience": [
        "Anyone interested in getting started in programming."
      ]
    },
    {
      "title": "Swift Programming For Beginners - No Programming Experience",
      "url": "https://www.udemy.com/course/swift-programming-for-beginners-no-experience/",
      "bio": "Learn Swift for iPhone iOS development, no programming development experience is required. Swift for complete beginners",
      "objectives": [],
      "course_content": {
        "Getting started": [
          "Download Xcode from the App Store"
        ],
        "Constants, Variables and Data Types": [
          "Introduction to playground",
          "Constants and variables",
          "Introduction to Data Types",
          "Introduction to String Data Type",
          "Introduction to Int data Type",
          "Introduction to Float and Double Type",
          "Introduction to Boolean Data Type",
          "String interpolation",
          "String interpolation continued...",
          "Good naming conventions to follow"
        ],
        "Swift Operators": [
          "Arithmetic operators",
          "Integer division and possible errors",
          "Remainder operator",
          "Compound assignment operators",
          "Comparison operator",
          "Comparison operator - checking for equality",
          "NOT operator",
          "How to find out the data types of variables",
          "Type Casting",
          "Problem Solution 1 - Swap variables",
          "Problem Solution 2 - Area and perimeter",
          "Problem Solution 3 - Calculate Percentage",
          "Problem Solution 4 - Last digits of a number"
        ],
        "If Statements": [
          "Introduction to If statements",
          "Else branch",
          "Nested if statement",
          "Else...if statements",
          "Problem and Solution: Maximum of two numbers",
          "Problem and Solution: Even or odd number",
          "Problem and Solution: Divisibilty calculations",
          "Logical AND operator",
          "Logical OR operator",
          "Problem Solution: Class marks",
          "Problem Solution: Divisibility revisited",
          "Ternary conditional operator"
        ],
        "Switch Statements": [
          "Switch statements",
          "Switch case - matching multiple values",
          "Switch range matching",
          "Switch break statement",
          "Fallthrough statement"
        ],
        "Arrays": [
          "Introduction to Swift Array",
          "Reading values from array",
          "Getting multiple values using closed range",
          "Array type and Any type",
          "Merging two arrays",
          "Adding values to existing array",
          "Removing values from arrays",
          "Modifying values in arrays",
          "Mutable and immutable array",
          "Copying value from one array to another - reference and value types"
        ],
        "Dictionaries": [
          "Introduction to Dictionary",
          "Retrieving values from a dictionary",
          "Adding a new key-value pair to a dictionary",
          "Updating value in a dictionary",
          "Removing items from dictionary",
          "Other dictionary methods"
        ],
        "For Loop, While Loop and Repeat While Loop": [
          "Introduction to For Loop",
          "Using value of \"i\" in a loop and the underscore variable",
          "Looping through arrays",
          "Looping over dictionaries",
          "Problem and Solution: Maximum value in an array",
          "Problem and Solution: Separate numbers into odd and even",
          "Problem and Solution: Sum the content of an array",
          "Problem and Solution: Reversed array",
          "Inner loops",
          "Break statement",
          "Continue statement",
          "Introduction to While Loop",
          "Beware of an infinite loop",
          "Repeat while loop",
          "Repeat while loop example",
          "Problem and Solution: Separate numbers to array - while loop example"
        ],
        "Swift Functions": [
          "Introduction to Function",
          "Function parameters",
          "Multiple parameters of a function",
          "Returning values from functions",
          "Calling a function from another function",
          "Parameter as a let constant"
        ],
        "Optionals": [
          "Introduction to Optionals",
          "Introduction to Optionals contd...",
          "Returning nil from a function",
          "How to work with optional values",
          "Unwrapping optional values",
          "Force unwrap optional types",
          "Implicitly unwrapped Optionals",
          "Nil coalescing operator",
          "Multiple optional binding - unwrapping multiple optionals",
          "Optional Chaining",
          "Variable scopes"
        ]
      },
      "requirements": [
        "You should have a Mac computer"
      ],
      "description": "Swift Programming for Beginners\nHave you been trying to learn Swift programming but found it too difficult? Do you want to develop iPhone apps but don’t know where to start? Then this course is for you.\nThis course has been developed or beginners, no programming experience is required. This course will teach you in step-by-step approach, making Swift programming less daunting and more fun.\nIn this course you will learn all the basics of computer programming, which are similar to other programming languages such as C# and Java. Swift programming language is simpler to learn and easy to understand. Some of the topics we’ll cover in this course include;\nDifferent data types such as Int, String, Float and Double\nString Interpolation\nArithmetic operators\nRemainder operator\nComparison operators\nType casting\nIf statement\nLogical operators\nTernary operators\nSwitch statements\nSwift Arrays and their properties\nSwift Dictionary and their properties\nFor loop\nWhile loop\nRepeat while loop\nFunctions\nOptionals\nAnd many more…\nBy the end of this course you will have a good grasp of Swift programming and you will be able to write simple functional code. You will be able to create basic iPhone apps and be confident to advance into more Swift programming.\nEnroll now to start your journey into the world of Swift programing and iOS app development.",
      "target_audience": [
        "Anyone who wants to learn Swift programming from scratch with no previous programming experience"
      ]
    },
    {
      "title": "Introduction to OCaml Programming - Higher Order Functions",
      "url": "https://www.udemy.com/course/master-functional-programming-with-ocaml/",
      "bio": "Unleash the Power of Functional Programming",
      "objectives": [],
      "course_content": {
        "Course Introduction": [
          "Introduction to the Course"
        ],
        "Solved Problems - Higher Order Functions": [
          "Problem 1 - Equality Problem",
          "Problem 2 - Product of Elements",
          "Problem 3 - Even Result",
          "Problem 4 - Infinite Powers of Two",
          "Problem 5 - Scalar Product",
          "Problem 6 - Flattening of Lists",
          "Problem 7 - Length",
          "Problem 8 - Reverse",
          "Problem 9 - Occurrences"
        ]
      },
      "requirements": [
        "This course assumes basic programming knowledge, and familiarity with OCaml is helpful but not required.",
        "To have already taken the Part 1 and Part 2."
      ],
      "description": "Welcome to the world of Higher Order Functions in OCaml, where programming is elevated to an art form. This course is your gateway to mastering the intricacies of functional programming, exploring OCaml's expressive capabilities, and harnessing the unparalleled power of higher-order functions.\nFunctional programming is not just a programming paradigm; it's a mindset that simplifies complex problems and enhances code reliability. In this course, you'll embark on a journey through OCaml, a language known for its strong functional programming support.\nWhat You'll Learn:\n\nFunctional Programming Concepts: Explore the core principles of functional programming, including immutability, pure functions, and recursion.\nHigher-Order Functions: Dive deep into the concept of higher-order functions, learning how functions can be treated as first-class citizens in OCaml.\nAnonymous Functions: Discover the power of anonymous functions (also known as lambda functions) and how they simplify complex logic.\nFunction Composition: Learn how to combine functions to create elegant and reusable code.\nCurrying: Understand currying and how it enables you to create specialized functions from general ones.\nMap, Filter, and Reduce: Master the trio of higher-order functions that are indispensable for processing collections of data.\nRecursion: Explore the beauty of recursive functions and how they are a fundamental building block of functional programming.\nPattern Matching: Delve into pattern matching, a powerful feature in OCaml for handling complex data structures.",
      "target_audience": [
        "Programmers: If you're looking to expand your programming skills into functional programming with OCaml, this course is for you.",
        "Students: Whether you're studying computer science or mathematics, mastering OCaml's Higher Order Functions can enhance your problem-solving abilities.",
        "Professionals: Professionals in finance, formal methods, or research fields can benefit from OCaml expertise."
      ]
    },
    {
      "title": "C++ Certified Associate Programmer (CPA) Tests Prep for 2025",
      "url": "https://www.udemy.com/course/c-programming-practice-tests-interview/",
      "bio": "CPA C++ Practice Exam, Designed to prepare students and job seekers for exams and interviews, Elevate your skills",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "CPA C++ Certified Associate Programmer is a comprehensive certification program designed to validate the skills and knowledge of individuals in the field of C++ programming. This certification is recognized globally and is highly regarded by employers in the IT industry. It is an ideal choice for individuals who wish to enhance their career prospects and demonstrate their proficiency in C++ programming.\n\n\nCPA C++ Certified Associate Programmer certification covers a wide range of topics related to C++ programming, including syntax, data types, control structures, functions, classes, and object-oriented programming concepts. The program consists of a rigorous examination that assesses the candidate's understanding of these topics and their ability to apply them in real-world scenarios. By successfully completing this certification, individuals can showcase their expertise in C++ programming and their ability to develop efficient and reliable software solutions.\n\n\nCPA C++ Certified Associate Programmer certification is suitable for both beginners and experienced programmers. It provides a solid foundation in C++ programming and equips individuals with the necessary skills to develop high-quality software applications. This certification is recognized by leading IT companies and can significantly enhance job prospects and earning potential. Whether you are a recent graduate looking to kickstart your career or an experienced professional seeking to validate your skills, the CPA C++ Certified Associate Programmer certification is an excellent choice to demonstrate your proficiency in C++ programming.\n\n\nCPA C++ Certified Associate Programmer Exam details :\nExam Name C++ Certified Associate Programmer\nExam Code CPA\nExam Duration 65 mins\nExam Format Multiple Choice and Multi-Response Questions\nExam Type programming\nNumber of Questions 55 Questions\nEligibility/Pre-Requisite NIL\nExam Status Live\nExam Language English\nPass Score 80%\n\n\nCPA C++ Certified Associate Programmer Certification Exams skill questions:\nAbsolute basics\nmachine and high-level programming languages, compilation process,\nobtaining the machine code: compilation process,\nwriting simple programs,\nvariables,\nintegers: values, literals, operators,\ncharacters: values, literals, operators,\ndealing with streams and basic input/output operations.\nFlow control and more data types\nhow to control the flow of the program\nfloating point types: values, literals, operators,\nmore integer types: values and literals,\nloops and controlling the loop execution,\nlogic, bitwise and arithmetic operators.\nFunctions\nfunctions,\ndeclaring and invoking functions,\nside effects,\ndifferent methods of passing parameters and their purpose,\ndefault parameters,\ninline functions,\noverloaded functions.\nAccessing data and dealing with exceptions\nconverting values of different types,\nstrings: declarations, initializations, assignments,\nstring as an example of object: introducing methods and properties,\nnamespaces: using and declaring,\ndealing with exceptions.\nFundamentals of the object-oriented approach\nclass,\nobjects,\nclass components,\nconstructors,\nreferring to objects,\nstatic members,\nclasses and their friends,\ndefining and overloading operators.\nClass hierarchy\nbase class, superclass, subclass,\ninheritance: how it works,\ntypes of inheritance,\ninheriting different class components,\nmultiple inheritance.\nMore on classes\npolymorphism: the notion and the purpose,\nvirtual methods: declaration and usage,\ninheriting virtual methods,\nabstraction and abstract classes.\nExceptions - dealing with expected and unexpected problems\nwhat is an exception,\ncatching and throwing exceptions,\ndifferent classes and hierarchy of exceptions,\ndefining your own exceptions.\n\n\nCPA C++ Certified Associate Programmer Practice Exam is an invaluable resource for individuals seeking to enhance their knowledge and skills in C++ programming. It provides a comprehensive and challenging assessment of their proficiency in the language, enabling them to identify areas for improvement and focus their study efforts accordingly. With its rigorous and comprehensive approach, the practice exam is an essential tool for anyone seeking to achieve the CPA certification and advance their career in C++ programming.",
      "target_audience": [
        "You'll have a clear understanding of which CPA C++ Certified Associate Programmer Certification exam domains you need to study.",
        "201 Unique Questions.",
        "Suitable for All Levels.",
        "You'll feel confident taking the CPA C++ Certified Associate Programmer Certification exam knowing these practice tests have prepared you for what you will see on the actual exam.",
        "You'll learn additional knowledge from the question explanations to prepare you to pass the CPA C++ Certified Associate Programmer Certification exam.",
        "Anyone studying for the CPA C++ Certified Associate Programmer Certification who wants to feel confident about being prepared for the exam.",
        "This practice paper will help you to figure out your weak areas and you can work on it to upgrade your knowledge.",
        "Have a fundamental understanding of the CPA C++ Certified Associate Programmer Certification.",
        "By taking this course, develop your CPA C++ Certified Associate Programmer.",
        "You Will Be Able To Zero to Hero in CPA C++ Certified Associate Programmer.",
        "CPA C++ Certified Associate Programmer skills to your resume.",
        "Students who are preparing for CPA C++ Certified Associate Programmer.",
        "You will be confident enough to take the CPA C++ Certified Associate Programmer Certification exam and pass the exam at First attempt.",
        "Anyone looking forward to brush up their skills.",
        "Students who wish to sharpen their knowledge of CPA C++ Certified Associate Programmer.",
        "Anyone who is looking to PASS the CPA C++ Certified Associate Programmer exam."
      ]
    },
    {
      "title": "Linux shell & scripting tutorial",
      "url": "https://www.udemy.com/course/linux-unix-shell-scripting-tutorial/",
      "bio": "Learn shell script core to get full potential at command line",
      "objectives": [],
      "course_content": {
        "Linux/Unix shell and shell scripts": [
          "Introduction and course overview",
          "Shell introduction and bash shell configuration",
          "Variable scopes, Command line argument, Functions",
          "Synchronous & asynchronous command, Exit status, Looping and condition construct",
          "Redirection, Pipes"
        ]
      },
      "requirements": [
        "No"
      ],
      "description": "This course is design for intermediate programmers and students to give detail understanding of core shell script concepts.  This course has more focus on practical then slide presentation.\nFor those programmers who like to automate many of there routine task using shell script, this course is very helpful for them.",
      "target_audience": [
        "Beginner programmers who want to explore power of Linux/Unix shell"
      ]
    },
    {
      "title": "Everything you need to know about JDBC",
      "url": "https://www.udemy.com/course/everything-you-need-to-know-about-jdbc/",
      "bio": "Connecting Java applications to an RDBMS using JDBC API",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Overview of JDBC",
          "Working of JDBC application"
        ],
        "Software setup": [
          "Setup H2 Database"
        ],
        "Coding JDBC": [
          "Connecting to H2 database",
          "DbUtil class",
          "Create table",
          "Insert a record",
          "Insert record using PreparedStatement",
          "Batch execution",
          "Get multiple records from DB",
          "Get single record from DB"
        ],
        "A bit advanced topics": [
          "Get auto generated primary key"
        ],
        "Finally...": [
          "Thank you note and bonus lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of Java programming language",
        "Very basic knowledge of RDBMS and SQL commands would be helpful"
      ],
      "description": "JDBC (Java DB Connectivity) is a Java Standard API for connecting a Java application to an RDBMS. Although you may not need to use JDBC directly in any application today, it is important to understand how it works. Any modern frameworks like Hibernate or JPA which are ORM (Object-Relation-Mapper) or Mybatis which is an SQL mapper, behind the scene use JDBC.\nIn this class, we will be looking into the architecture of a JDBC application, connecting to a DB, executing SQL statements, and handling the results of SQL SELECT statements. We will also be learning how to setup a light weight DB called H2, with out having to install anything on our computer.\nThe class is completely hands-on based, so get ready to code a lot.",
      "target_audience": [
        "A beginner to Java programming",
        "Developer looking to execute SQL commands using native Java API"
      ]
    },
    {
      "title": "A Beginner's Guide to Python",
      "url": "https://www.udemy.com/course/python-101-newbie/",
      "bio": "Head Start for Newbies",
      "objectives": [],
      "course_content": {
        "Python Overview": [
          "Introduction to Python",
          "History of Python",
          "Future of Python",
          "Job Opportunities in Top Companies"
        ],
        "Setup and Basics": [
          "Installation and Environment Setup",
          "Case Sensitive and Reserved Keywords",
          "Important Characters and Print Function"
        ],
        "Input and Output Operations": [
          "Input operations",
          "Output Operations"
        ],
        "Comments": [
          "Comments and Its Usage",
          "Single Line and Multi Line"
        ],
        "Data Types": [
          "Overview and Basic Data Types",
          "Number Data Type",
          "Boolean and String Data Type"
        ],
        "Variables in Python": [
          "Local and Global Variable"
        ],
        "Python Operators": [
          "Types of Operators"
        ]
      },
      "requirements": [
        "You need to know basic programming concepts"
      ],
      "description": "This course is designed for first time python learners. We have created a syllabus which curates for the need of an absolute beginner to Python. We have provided crystal clear explanations and relevant examples wherever needed. This course may help you shape problem solving skill in real life situations.\nThis course is designed for newbies only. If you are experienced, then this is not for you. Also, if you want to get a job as python developer or want to join internship in python. This course would be helpful for those as well. Feel free to ask if you have any questions. Apart from lectures, I'll be sharing quizzes later.\nIf you learn coding, it enhances your personality and also provides you with a new way of looking at things. It enhances your logical reasoning skills. Overall, this course is good for school kids as well.\nOnce you learn python, it opens the door to many new opportunities like data science, machine learning, data analytics, artificial intelligence, and what not. Grab this opportunity to learn this great language and be awesome.\nNote: Nowadays our attention span has reduced drastically. Hence, I would suggest going through each video at least thrice to get optimal benefit out of this course. Keep your pen and paper handy for taking notes or taking down important points.\nHope you enjoy this course! Thanks.",
      "target_audience": [
        "Beginner Developers: New to Python"
      ]
    },
    {
      "title": "Angular 5 tutorial from scratch - Beginners tutorial",
      "url": "https://www.udemy.com/course/angular-5-tutorial-from-scratch-beginners-tutorial/",
      "bio": "In this course you will learn angular 5 basics",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Create your first Angular 5 project - step-by-step",
          "How does Angular 5 app works?",
          "Module and Component",
          "Data Types",
          "How to add Bootstrap in Angular 5",
          "How to use Bootstrap Card with Navigation Bar and Images",
          "Display List of Products"
        ]
      },
      "requirements": [
        "node js, Angular cli, Angular5"
      ],
      "description": "Are you new to Angular and want to get started with real development? This course is the perfect place to begin your journey!\nIn this beginner-friendly course, you’ll start with the essentials to quickly build a solid foundation in Angular 5. Currently, the course includes 5 concise and practical videos covering:\nInstallation Guide: Step-by-step setup of Node.js, Angular CLI, and creating your first Angular project.\nHow Angular 5 Works: Understand the core architecture and how Angular apps function behind the scenes.\nModules and Components: Learn how Angular projects are structured using Modules and Components.\nData Types in Angular 5: Get introduced to the key data types used in Angular development.\nAdding Bootstrap: Learn how to integrate Bootstrap for responsive and stylish UI components.\nMore content is coming soon! I’m actively working on new videos to expand your knowledge and help you master Angular 5.\nStay tuned, keep learning, and don’t forget to share the course with others. Thanks for being a part of this learning journey!\nPlease feel free to ask your queries through personal messages.  You will definitely get immediate help. Thank you!\nYou can also try our asp.net MVC course with demo project for download at very minimal and attractive cost.",
      "target_audience": [
        "Beginners who want to learn angular 5 from scratch"
      ]
    },
    {
      "title": "Python Masterclass 2021: Python for Everything[AI+ML+WebDev]",
      "url": "https://www.udemy.com/course/python-masterclass-python-for-everything/",
      "bio": "Master the complete basics of Python that will help you widely to work with latest tech fields AI, ML, Robotics, WebDev",
      "objectives": [],
      "course_content": {
        "Python Introduction and Setup": [
          "Introduction",
          "A high level understanding of what is PYTHON and why it is used?",
          "Setup guide and Video reference",
          "Python syntax"
        ],
        "Python Basics: Understanding the Basics": [
          "Variables in python",
          "Variable Naming Rules",
          "More on Variables",
          "Python Numbers and Type Conversion",
          "Data Types",
          "Strings and String slicing",
          "Negative slicing",
          "String Modification",
          "Format string"
        ],
        "Python Advance: One step further": [
          "Lists",
          "Tuples",
          "Sets",
          "Dictionaries",
          "Functions",
          "Parameters and important talk",
          "Completed files"
        ]
      },
      "requirements": [
        "A computer with any operating system with internet connection"
      ],
      "description": "Python Masterclass 2021: Python for Everything[AI+ML+WebDev]\nMaster the complete basics of Python that will help you widely to work with latest tech fields AI, ML, DS-ALGO, WebDev\nSo why learn Python?\nPython is extremely versatile, with multiple uses\nJust to name a few of its most common uses, Python is used in Data Mining, Data Science, AI, Machine Learning, Web Development, Web Frameworks, Embedded Systems, Graphic Design applications, Gaming, Network development, Product development, Rapid Application Development, Testing, Automation Scripting, the list goes on.\nPython is used as an easier and more efficiently-written alternative to languages that perform similar functionalities like C, R, and Java. Therefore Python is growing in popularity as the primary language for many applications.\nPython uses in Data Science and Machine Learning\nHistorically, the R programming language is most commonly used for data science. As Python code is considered easier to maintain and more scalable than R, Python has increased in popularity for data science – especially among professionals without advanced education in statistics or mathematical fields.\nIn the past few years, many packages have been developed for data analysis and machine learning using Python. This includes numpy and pandas, which allow users to understand and transform data; tensorflow, which is used to code machine learning algorithms; and pyspark, an API for working with Spark – a framework for easily working with large data sets.\nThese libraries enable your every day web developer to analyze large data trends, without having to learn the ins and outs of the more complex R.\nWhat types of companies use Python?\nPython is great for quick prototyping, hence is used extensively by startups to build their first minimum viable product (MVP). As a highly scalable language, Python is also used in the world’s largest and most sophisticated companies. Netflix discussed its uses of Python in everything from their Content Delivery Network (CDN) to their monitoring systems.\nGoogle also loves Python programming for its solutions",
      "target_audience": [
        "Beginner Python Developers Curious about Development in Python"
      ]
    },
    {
      "title": "Kotlin Programming - A Basic Introduction",
      "url": "https://www.udemy.com/course/kotlin-tutorial-for-beginners/",
      "bio": "Introduction to the Kotlin programming language",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Intro to Kotlin Tutorial"
        ],
        "Getting set up for programming in Kotlin": [
          "Intellij for ubuntu",
          "Intellij and JDK setup Windows",
          "Create first kotlin project and code"
        ],
        "Syntax": [
          "Kotlin Comments and Syntax"
        ],
        "Kotlin Variables": [
          "Intro to Kotlin Variables",
          "More about kotlin variables part 1",
          "More about kotlin variables part 2",
          "More about kotlin variables part 3"
        ]
      },
      "requirements": [
        "Skills in downloading and installing necessary applications",
        "Minimal programming skills",
        "A knowledge of basic programming concepts"
      ],
      "description": "This Kotlin tutorial is intended for complete beginners.\nYou will learn basic programming concepts in Kotlin. Start watching this course if you are interested in learning Kotlin as a beginner.\nIn this Kotlin tutorial you will go though some of the basic concepts of the language. Feel free to start watching this tutorial. As a beginner in Kotlin, you will definitely learn some concepts that will enable to step onto the next concepts.\n\n\nKotlin is used in the Web, Desktop and Android platforms. Kotlin has become the first choice for native Android development. if that field is appealing to you, you need to get better in programming with this programming language.\nWith Kotlin the possibilities are many. You can go into any field that uses Kotlin. And there are many. learning Kotlin definitely has its merits.\n\n\nHere are some reasons developers prefer Kotlin to Java:\nKotlin is concise, saving time that you'd otherwise spend writing boilerplate code in Java.\nYou can convert a Java file into a Kotlin file with just a script.\nKotlin has no runtime overhead. Sometimes, adding features to a language means it has more overhead, which lowers its performance. Not so with Kotlin.\nKotlin has a large community. If you ever get stuck, you can easily find other developers to help you on coding forums and social networks.\nKotlin streamlines asynchronous programming. Making network and database calls asynchronously in Java is clumsy and painful. Kotlin has coroutines that make asynchronous programming simple and efficient.\nKotlin handles nulls. A null in Java can crash a program if you haven't prepared for it. In Kotlin, you can add a simple operator to variables that may be null to prevent these crashes.\nKotlin can run on multiple platforms. Kotlin can run anywhere Java runs, so you can use it to build cross-platform apps.\nIt's easy to switch to Kotlin. Kotlin is fully compatible with Java, so you don't have to change all your code at once. You can slowly migrate an application to use Kotlin.\n\n\nGo ahead and start watching this Kotlin course right away.\n\n\nThis Kotlin tutorial is not geared towards Android ,Web or Desktop Application development. However, this tutorial is a general concept tutorial to help you learn how to use the Kotlin programming language concepts.\nStart watching it today.",
      "target_audience": [
        "Beginners who want to learn about the Kotlin programming language"
      ]
    },
    {
      "title": "Python 3 Plus: Python desde Cero + Data Analysis y Matplot",
      "url": "https://www.udemy.com/course/python-3-plus-python-desde-cero-data-analysis-y-matplot/",
      "bio": "El curso que te da más valor 2021: Aprende Python 3 desde cero hasta experto en Data Analysis.",
      "objectives": [
        "Aprenderás a programar en Python 3 desde cero.",
        "Aprenderás a instalar los programas necesarios para codificar en Python 3.",
        "Sabras utilizar todos los Tipos de Datos que hay en Python 3.",
        "Crearás código utilizando todas las Estructuras de Control de Python 3.",
        "Aprenderás a definir funciones.",
        "Aprenderás a extraer y manipular información desde archivos de texto.",
        "Aprenderás Programación Orientada a Objetos de una manera sencilla y amigable.",
        "Análisis de datos con Python",
        "Aprenderás a analizar grandes volúmenes de datos rápidamente con Pandas.",
        "Aprenderás a encontrar relaciones entre las variables de tus datos.",
        "Aprenderás como hacer gráficas atractivas para los datos.",
        "Aprenderás a generar representaciones gráficas de la información para tener un mejor entendimiento de ella.",
        "Aprenderás a exportar los datos tratados a Excel.",
        "Aprenderás a importar datos desde un CSV o desde un Excel para analizarlos.",
        "Aprenderás como crear una Base de Datos con Python para leer y escribir datos en ella."
      ],
      "course_content": {},
      "requirements": [
        "No se necesitan requisitos previos, el curso esta diseñado para aprender desde cero.",
        "Muchas ganas de aprender.",
        "Computadora Windows/Mac"
      ],
      "description": "¡El curso con mas valor: Python desde cero + Data Analysis + Visualizaciones en Matplot!\n\n\nPython es un lenguaje de programación de código abierto, orientado a objetos, muy simple y fácil de entender. Tiene una sintaxis sencilla que cuenta con una vasta biblioteca de herramientas, que hacen de Python un lenguaje de programación único.\n\n\nSaber programar en Python es una habilidad solicitada por las empresas de todo el mundo. Un programador Jr. en Python gana $77,000 USD al año en promedio.\n\n\n¿Qué esperas? Te llevaremos de la mano en cada uno de los temas para que te conviertas en un experto de Python y del Data Analysis.\nEl objetivo de la primera sección del curso es que sin conocimientos previos aprendas con ejercicios prácticos a:\nIdentificar los tipos de datos.\nDefinir funciones.\nCrear clases y objetos con la POO.\nHerencia y multiherencia en las clases.\nLeer y manipular datos desde archivos de texto.\nControlar el flujo del programa.\nManejar errores y excepciones.\nEn la segunda sección del curso aprenderemos:\nComo crear una Base de Datos con Python para leer y escribir datos en ella.\nA usar Numpy para trabajar con arrays y para generar muestras aleatorias.\nA importar datos desde un CSV o desde un Excel para analizarlos.\nA trabajar con fechas y variables de diferentes formatos.\nA exportar los datos tratados a Excel.\nA generar representaciones gráficas de la información para tener un mejor entendimiento de ella.\nTambien abordamos varios ejercicios donde ponemos en practica lo aprendido durante las lecciones.\n\n\n¿Qué esperas? Con este curso añadirás valor a tu CV y habilidades que te harán destacar en tu trabajo. Desbloquea tu potencial con el análisis de datos, desarrollarás habilidades profesionales y estarás listo para aplicarlas en cualquier trabajo. Recuerda que la habilidad de analizar datos es de las más demandadas hoy en día.\n\n\nDespués de tomar este curso serás capaz de generar códigos potentes en Python para proyectos personales o para el entorno profesional, todo esto basado en la programación orientada a objetos que es la mejor practica en el mundo del desarrollo. Tambien serás capaz de  analizar grandes volúmenes de datos en Python para proyectos personales o para el entorno profesional.\n\n\nCon este curso añadirás valor a tu CV y habilidades que te harán destacar en tu trabajo.",
      "target_audience": [
        "Profesionistas que quieran aprender a programar en Python para facilitar sus tareas del día a día.",
        "Desarrolladores que quieran aprender Python de una manera ágil, completa y sencilla.",
        "Profesionistas que requieran trabajar con una gran cantidad de datos.",
        "Profesionistas que necesiten analizar grandes volúmenes de datos."
      ]
    },
    {
      "title": "C# Completo e Profissional",
      "url": "https://www.udemy.com/course/csharp-completo-e-profissional/",
      "bio": "Aprenda C#.NET do Zero ao Avançado na prática com projetos e exerícios utilizando os principais recursos da linguagem.",
      "objectives": [
        "Desenvolver aplicações completas em C# NET.",
        "Programação Orientada a Objetos utilizando a linguagem C#.",
        "Desenvolver um bom raciocínio e lógica de programação.",
        "Criar tanto aplicações de Linha de Comando quanto de Ambiente Gráfico Windows utilizando a linguagem C#.",
        "Trabalhar com Bases de Dados em C#.NET",
        "Trabalhar com Criptografia utilizando C#.NET",
        "Manipular arquivos e pastas do computador utilizando C#.NET",
        "Trabalhar com Sockets utilizando C#.NET",
        "Criar Bibliotecas de Classes (.dll) utilizando C#.NET",
        "Tabalhar com consultas LINQ utilizando C#.NET",
        "Trabalhar com Desenhos e Imagens (GDI+) utilizando C#.NET",
        "Criar programas de Computador utilizando a linguagem C#.",
        "Utilizar os principais recursos da linguagem C#.",
        "Instalar e configurar o Visual Studio Community assim como as ferramentas necessárias para programar em C#."
      ],
      "course_content": {},
      "requirements": [
        "Ter um computador ou notebook para poder desenvolver os estudos.",
        "Ter acesso à internet para poder baixar e instalar as ferramentas necessárias para desenvolver o curso.",
        "Não há necessidade de qualquer conhecimento prévio em linguagens de programação."
      ],
      "description": "Neste curso o aluno aprenderá de forma prática a desenvolver aplicações completas e profissionais utilizando os mais importantes recursos que a .NET (.NET Framework e .NET Core) oferecem, tudo isto de forma clara e objetiva.\nApós realizar este curso o aluno sera capaz de desenvolver aplicações profissionais utilizando a linguagem C# e aplicando de forma correta todos os recursos que esta poderosa linguagem de programação oferece.\nAlém do que o aluno será capacitado para ingressar de forma segura no mercado de TI.\nAlguns dos Tópicos que serão abordados durante o curso:\nEstruturas básicas da programação\nSintaxe da linguagem C#\nDesenvolvimento de aplicações de Linha de Comando\nDesenvolvimento de Aplicações de Ambiente Gráfico\nDesenvolvimento de Páginas Web com ASP.NET Core\nProgramação Orientada a Objetos\nTrabalhar com bases de dados em C#\nTrabalhar com manipulação de arquivos e pastas em C#\nTrabalhar com bases de dados em C#\nTrabalhar com Sockets (Comunicação Cliente Servidor) em C#\nTrabalhar com GDI+ (Desenho Vetorioal e Imagem)\nTrabalhar com LINQ (Linguagem de Consulta integrada ao C#)\nCriar bibliotecas DLL\nCriar um Instalador Profissional para as Aplicações\nAssim como também o aluno aprenderá os conceitos necessários das linguagens de programação para poder continuar a desenvolver seus conhecimentos, seja com esta ou qualquer outra linguagem de programação sem qualquer dificuldade e com total segurança.",
      "target_audience": [
        "Pessoas interessadas em começar a aprender a programar utilizando a linguagem C#.",
        "Pessoas sem experiência que queiram começar a entender como funciona a programação de computadores assim como desenvolver suas primeiras aplicações na prática.",
        "Pessoas interessadas em desenvolver projetos completos e profissionais utilizando C#.NET"
      ]
    },
    {
      "title": "Python Eğitim Kampı: Uygulama Ağırlıklı Proje Geliştirme",
      "url": "https://www.udemy.com/course/python-egitim-kamp-uygulama-agrlkl-proje-gelistirme/",
      "bio": "Python Projeleriyle Pratik Programlama: Veri Manipülasyonu, Web Scraping, API Entegrasyonu ve Otomasyon",
      "objectives": [
        "Gerçek dünya projeleriyle Python programlamayı öğrenerek temel algoritma ve veri yapılarını anlayacaklar.",
        "Özgün projeler geliştirerek problem çözme yeteneklerini güçlendirecekler.",
        "API entegrasyonu ve veri manipülasyonu gibi ileri seviye beceriler kazanarak gerçek uygulamalar yapabilecekler.",
        "Kendi kendine yeterli, proje tabanlı Python geliştiricisi olacaklar."
      ],
      "course_content": {
        "Giriş": [
          "Kurs Tanıtım",
          "Python Nedir?",
          "Python Kurulumu",
          "Visual Studio Code Kurulumu"
        ],
        "Veri Tipleri": [
          "Matematiksel İşlemler",
          "String Veri Tipi Sözel İfadeler",
          "String ve İnt İşlemler Metinsel ve Sayısal işlemler birlikte",
          "Karakter Dizileri Print() Fonksiyonu Format() ve F Mantığı",
          "İnput() Kullanıcıdan Veri Alma",
          "Alıştırma - Ortalama Hesaplama",
          "Listeler []",
          "Demetler"
        ],
        "Operatörler": [
          "Atama Öperatörleri",
          "Karşılaştırma Operatörleri",
          "Mantıksal Operatörler"
        ],
        "Koşul Durumları": [
          "İf ve Else Koşulu",
          "Elif Koşulu",
          "Alıştırma - Ortalama Hesaplama",
          "Alıştırma Korona Virüs Uygulaması"
        ],
        "Döngüler": [
          "While Döngüsü",
          "Alıştırma - Kullanıcı Giriş Uygulaması",
          "For Döngüleri",
          "Alıştırma - Giriş Uygulaması For Döngüsü ile",
          "Alıştırma - Kelimelerin İlk Harfini Bulan Algoritma"
        ],
        "Fonksiyonlar": [
          "Fonksiyonlara Giriş",
          "Fonksiyonlarda Parametre Kullanımı",
          "Alıştırma - Günlük Su Tüketimi",
          "Return Komutu",
          "Varsayılan Değerler",
          "Global ve Yerel Değişkenler"
        ],
        "Sözlükler": [
          "Sözlük Oluşturma",
          "Sözlük Devam Get()",
          "Sözlük Manipülasyonu",
          "Alıştırma - Telefon Uygulaması",
          "Alıştırma - Telefon Uygulaması 2"
        ],
        "Modüller": [
          "Modül Kavramı",
          "Random () Modülü",
          "DateTime()",
          "Alıştırma - Çekiliş Uygulaması",
          "Alıştırma - Çekiliş Uygulaması 2",
          "Alıştırma - Şifre Korumalı Uygulama Yazma"
        ],
        "Hata Yakalama": [
          "Try ve Except Kavramları",
          "Finally Kavramı ve Örnek"
        ],
        "Dosya İşlemleri": [
          "Dosyalara Giriş",
          "Dosyalar Read()Readline()Readlines() ve Türkçe Karakter Sorununu Aşma",
          "Dosyalar R+ Veriler Üzerine Manipülasyon",
          "Alıştırma - Dosya Not Defteri"
        ]
      },
      "requirements": [
        "Kursa katılmak için özel bir gereksinim yok. Her seviyeden öğrenci kabul edilir. Temel bilgisayar kullanımı yeterlidir."
      ],
      "description": "Merhaba! \"Python Eğitim Kampı: Uygulama Ağırlıklı Proje Geliştirme\" kursuna hoş geldiniz. Bu kurs, Python'un temellerini anlamış her seviyeden öğrenci için tasarlanmıştır. Gerçek dünya projeleri üzerinden ilerleyerek, sizi sadece kod yazan değil, aynı zamanda uygulamalar geliştiren bir Python geliştiricisi yapmayı amaçlıyoruz.\nKurs boyunca veri manipülasyonundan web scraping'e, API entegrasyonundan otomasyona kadar çeşitli alanlarda derinlemesine çalışacağız. Pratik yaklaşımımızla, öğrendiklerinizi hemen gerçek projelere uygulayacak ve özgün fikirler üreteceksiniz.\nVeri manipülasyonu becerileriyle veri setleri üzerinde analizler yapacak, web scraping ile çevrimiçi verileri çekecek, API entegrasyonu ile dış servislerle etkileşime geçecek ve otomasyon yetenekleriyle tekrarlayan görevleri otomatikleştireceksiniz.\nAlanında deneyimli eğitmenlerimiz, sizi adım adım rehberlik edecek ve her konuyu örnek projelerle açıklamalarıyla pekiştirecektir. Bu kurs, sizi projelerinizi hayata geçiren, özgüveni yüksek bir Python geliştiricisi olarak yetiştirmeyi amaçlar.\nEğer kendi uygulamalarınızı geliştirmek, gerçek dünya projeleri üzerinde çalışmak ve Python becerilerinizi en üst düzeye çıkarmak istiyorsanız, bu kurs tam size göre! Siz de hemen kaydolun ve Python dünyasına pratik bir yolculuğa başlayın. Unutmayın, geleceğinizi kodlayın!\n\nPython, bugünün teknoloji dünyasında en yaygın ve etkili programlama dillerinden biridir. Python öğrenmek, birçok avantajı beraberinde getirir.\nİlk olarak, Python'un okunabilir ve anlaşılabilir bir sözdizimi vardır, bu da kodunuzu daha hızlı ve hatasız yazmanıza olanak tanır. Aynı zamanda geniş bir topluluk tarafından desteklenir, bu da sorularınıza daha hızlı cevap bulmanızı sağlar.\nPython, çok çeşitli alanlarda kullanılır. Veri bilimi, yapay zeka, web geliştirme, otomasyon, oyun geliştirme ve daha fazlası için tercih edilir. Çeşitli kütüphaneler ve çerçevelerle zengin bir ekosisteme sahiptir.\nKodunuzun hızı ve performansı endişesi taşımadan, hızlı prototipleme yapabilirsiniz. Bu, fikirlerinizi hızla test etmenizi ve uygulamanızı kolaylaştırır.\nPython öğrenmek, sadece bir programlama dilini değil, aynı zamanda problem çözme ve mantık becerilerini geliştirmek anlamına gelir. Kariyer olanaklarını artırırken, projelerinizi hayata geçirme özgürlüğü sunar.\nÖzetle, Python öğrenmek geleceğin teknolojik taleplerine uyum sağlamanın anahtarıdır. Hem başlangıç seviyesindeki geliştiriciler hem de deneyimli profesyoneller için önemli bir yetenektir.",
      "target_audience": [
        "Yeni Başlayanlar: Hiç programlama deneyimi olmayanlar için temel konuları anlaşılır bir şekilde öğretir.",
        "Orta Düzey Kullanıcılar: Temel bilgisi olanlar için ileri düzey konuları işleyerek becerilerini geliştirir.",
        "Hobiler ve Meraklılar: Kodlamayı sadece merak edenler için pratik projelerle keyifli bir öğrenim deneyimi sunar.",
        "İleri Seviye Geliştiriciler: Gerçek dünya projeleriyle becerilerini pekiştirip yeni fikirler üretmelerine yardımcı olur."
      ]
    },
    {
      "title": "Python 3: Sıfırdan Programcılık Mesleğine",
      "url": "https://www.udemy.com/course/python-3-sifirdan-programcilik-meslegine/",
      "bio": "12 Kapsamlı Proje, Gerçek Hayattan Örneklerle Anlatım ve Canlı Soru Cevap İle Hayatına Yeni Bir Yetenek Katacaksın.",
      "objectives": [
        "İş görüşmelerinde kendinize güvenerek Python biliyorum diyebileceksiniz.",
        "12 Gerçek dünya projesini tamamlayacaksınız.",
        "Dünyadan freelance işler alıp ek kazanç elde edebilecek yeterliliğiniz olacak.",
        "Kurstaki zorlu projeleri tamamlayarak sorun çözme konusunda deneyim sahibi olacaksınız.",
        "Diğer programlama dillerini öğrenmek sizin için en fazla, arabayı soldan direksiyon yerine sağdan direksiyonla kullanmak kadar zor olacak."
      ],
      "course_content": {},
      "requirements": [
        "Bilgisayar ve internet bağlantısına sahip olmak"
      ],
      "description": "Sadece kuralları öğrenmek yeterli olmaz, öğrendiklerini doğru yerde ve zamanda uygulayabilmelisin. İyi bir programcı olmak için mümkün olduğunca çok zorlukla karşılaşmış ve çözüm bulmuş olmalısın. Bu kurs senin karşına zorlu projeler çıkarmak için hazırlandı.  Gerçek hayattan örneklerle yapılan anlatım daha önce hiç programlama deneyimi olmayan birinin dahi rahatlıkla anlamasını sağlayacak. Sadece Python'ın kurallarını öğrenmekle kalmayacak aynı zamanda zorlu projeler yaparak sorun çözme konusunda deneyim kazanacaksın.",
      "target_audience": [
        "Herkes"
      ]
    },
    {
      "title": "Curso de C#",
      "url": "https://www.udemy.com/course/curso-de-csharp/",
      "bio": "C# nivel Básico a intermedio",
      "objectives": [
        "El uso del lenguaje de Programación C#",
        "Programación Orientada a Objetos con C#",
        "Linq para manejo de colecciones de datos",
        "Conexión a base de datos desde C#"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Introducción a C#": [
          "Creación de un proyecto",
          "Variables",
          "Tipos de datos",
          "Funciones",
          "Sentencia If",
          "Sentencia Switch",
          "Arreglos",
          "Sentencia While y Do While",
          "Sentencia For"
        ],
        "Programación Orientada a Objetos": [
          "Clases y Objetos",
          "Propiedades",
          "Herencia",
          "Sobrecarga de métodos",
          "Sobreescritura de métodos",
          "Static",
          "Interfaces",
          "Generics",
          "Formato JSON",
          "Serialización de Objetos (Json)"
        ],
        "Listas y Sentencia Foreach": [
          "Introducción a Listas",
          "Sentencia Foreach",
          "Métodos comunes de Listas"
        ],
        "Tipos de Datos Anónimos": [
          "Tipos Anónimos",
          "Tuplas"
        ],
        "Excepciones": [
          "Explicación de Excepciones",
          "Creación de Excepciones Personalizadas"
        ],
        "LINQ": [
          "Seleccionar, buscar y ordenar",
          "Union (Join)"
        ],
        "Base de Datos": [
          "Creación de la Base de datos",
          "Conexión",
          "Obtención de datos",
          "Insertar",
          "Editar",
          "Eliminar"
        ],
        "Entity Framework": [
          "Explicación e Instalación",
          "Utilización de Entity Framework",
          "Seleccionar información",
          "Insertar",
          "Editar",
          "Eliminar"
        ],
        "Introducción a la Programación Funcional": [
          "Explicación de Delegados",
          "Delegados como parametro",
          "Delegado genérico Action",
          "Expresiones Lambda",
          "Delegado genérico Func",
          "Delegado genérico Predicate"
        ]
      },
      "requirements": [
        "Conocimiento básico de programación",
        "Visual studio instalado (No Visual Studio Code), puede ser Visual Studio 2015, 2017, 2019 o 2022",
        "Sql Server Management Studio instalado, puede ser cualquiera"
      ],
      "description": "En este curso vas a aprender a utilizar el lenguaje de programación C#.\nC# es un lenguaje de programación potente con el cual puedes hacer todo tipo de aplicación, desde videojuegos, aplicaciones de Internet de las cosas, desarrollo web, backend, frontend con blazor, aplicaciones de escritorio y bibliotecas las cuales puedes utilizar en tus proyectos diarios.\nEl objetivo es darte una base solida del lenguaje antes de que te adentres a entornos de trabajo.\nEn mi experiencia he visto que el mayor problema al utilizar un framework directamente es el mal manejo del lenguaje, es por eso que he hecho este curso donde te dare las caracteristicas más importantes, con las cuales al utilizar y entender un entorno de trabajo con C#, siendo un entorno Blazor, ASP, Unity etc.\nEn este curso aprenderás:\n-Los distintos tipos de datos existentes.\n-Programación Orientada a Objetos, donde veremos el concepto de clase y objeto, herencia, sobrecarga, sobreescritura, interfaces, generics.\n-LINQ una extensión del lenguaje C# para el manejo de forma declarativa de colecciones de información\n-Conexión a base de datos\n-Tipos de datos anónimos lo que le da a C# una flexibilidad enorme.\n\n\nAl finalizar este curso estarás listo para comenzar con un entorno de trabajo de C# sin complejidad alguna.",
      "target_audience": [
        "A personas que deseen adentrarse al lenguaje de Programación C#"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/nesne-yonelimli-programlama-cpp/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "【한글자막】 완전 초보자를 위한 Java 프로그래밍 : 단기간에 Java 완벽 정복",
      "url": "https://www.udemy.com/course/best-java-programming/",
      "bio": "초보자를 위한 자바 프로그래밍 과정부터 자바 객체 지향 프로그래밍까지. 보너스: Spring Boot를 활용한 REST API 설계",
      "objectives": [
        "연습문제와 퍼즐을 통한 실습과제: 자바로 객체 지향 프로그래밍 배우기",
        "자바에 대한 궁금증 해소: 자바 프로그래밍 능력의 전문성을 키우기 위한 학습",
        "자바 컬렉션 - List 인터페이스(ArrayList, LinkedList, Vector), Set 인터페이스(HashSet, LinkedHashSet, TreeSet), Queue 인터페이스(PriorityQueue), Map 인터페이스- 비교, 다른점, 선택",
        "자바 Array, ArrayList - 자바 String Array, 객체 Array, 기본 자료형, toString과 예외 처리"
      ],
      "course_content": {},
      "requirements": [
        "즐기면서 배우려는 자세 가지기 :)",
        "프로그래밍 경험이 전무하며, 자바 프로그래밍을 배우고 싶으신 분"
      ],
      "description": "완전 초보자를 위한 JAVA 프로그래밍 강의!\n100개 이상의 실습 프로그램!\n최신 자바 16 버전 과정!\n무료 강좌 지원 웹사이트 및 퍼즐, 연습문제 등 학습 자료 포함!\n\n\n완전 초보자를 위한 Java 프로그래밍 강의를 선택해야 하는 이유\n자바는 가장 유명한 프로그래밍 언어 중 하나입니다. 자바는 객체 지향 및 함수형 프로그래밍 특징을 지니고 있습니다. 이 과정은 IDE로써의 JShell과 이클립스의 결합을 통해 200개 이상의 자바 코딩 연습문제, 퍼즐, 코드 예제들을 제공하는 실습과제 위주의 학습을 제공합니다. 이 과정은 프로그래밍 및 자바에 관한 경험이 전무한 (입문자)에게 적합합니다. 컴퓨터 프로그래밍 경험이 전혀 없거나, 혹은 다른 프로그래밍 언어 경험이 있지만 빠르게 자바를 배우고 싶으신 분이라면, 이 과정은 당신에게 매우 적합합니다. 250가지 이상의 단계를 통해, 가장 중요한 자바 프로그래밍 언어 특징들을 탐색할 것입니다.\n자바 프로그래밍 학습 200개 이상의 자바 프로그램, 퍼즐, 연습문제를 제공하는 이 강의는 자바와 프로그래밍에 완전 초보자에게 권장됩니다!\n(보너스 또한 제공됩니다 – Spring, Spring Boot, JPA 를 이용하여 REST API 설계 학습)\n\n\n이 자바 프로그래밍 과정에 관하여 알아야 할 7가지 사항을 아래에 알려드립니다\n100,000명의 이상의 학습자,  Udemy의 높은 평점의 과정들 중 하나\n자바 프로그래밍의 완전 초보자에게 적합\n100개 이상의 실습 프로그램 – 자바 프로그래밍을 배우는 가장 좋은 방법은 직접 해 보는 것입니다!\n당신의 학습 향상을 도와줄 퍼즐과 연습문제\n자바 16에 업데이트 된 최초 과정들 중 하나이며, 자바 9~ 16의 모든 특징을 다룹니다.\n150 페이지의 무료 강좌 지원 웹사이트\n보너스: Spring, Spring Boot, JPA (Hibernate) 를 이용하여 REST API 설계 학습\n\n\n완전 초보자를 위한 Java 프로그래밍 강의의 세부 커리큘럼\n자바 프로그래밍의 기초: 표현식, 변수, 출력값\n자바 연산: 자바 대입 연산자, 논리 연산자, 단축 연산자\n자바 조건문과 If문\n메소드: 매개변수, 전달인자, 반환값\n객체 지향 프로그래밍:  클래스, 객체, 상태, 행동\nOOPS의 기초: 캡슐화, 추상화, 상속, 다형성\n자바 자료형의 기초: 변환, 연산 등\n자바 내장 클래스: BigDecimal, String, Java Wrapper Classes\n자바 조건문: If Else문, 중첩 If Else, 자바 Switch문, 자바 삼항 연산자\n루프: For 반복문, 자바 While 반복문, Do While 반복문, Break과 Continue\nJava Wrapper Classes의 불변성: Sting과 BigDecimal\n자바 Dates: LocalDate, LocalTime, LocalDateTime 소개\n자바 Array, ArrayList: 자바 String Array, 객체 Array, 기본 자료형, toString과 예외 처리\n가변적 매개변수 소개\n클래스 설계 기초: 클래스, 객체, 상태, 행동. 상태 및 생성자 선정\n객체 구성과 상속 이해\n자바 추상화 클래스와 인터페이스 다형성 소개\n자바 컬렉션: List 인터페이스(ArrayList, LinkedList, Vector), Set 인터페이스(HashSet, LinkedHashSet, TreeSet), Queue 인터페이스(PriorityQueue), Map 인터페이스(HashMap, HashTable, LinkedHashMap, TreeMap), 비교, 다른점, 선택\n제네릭: 제네릭은 왜 필요한가? 제한점과 확장, 제네릭 메소드, 와일드카드, 상계, 하계\n함수형 프로그래밍: 람다 표현식, 흐름, 흐름에서의 연산(중간 연산: Sort, Distinct, Filter, Map, 끝 연산: max, min, collect to list), 함수형 인터페이스, Predicate 인터페이스, Consumer 인터페이스, 배치와 메소드 레퍼런스를 위한 Function 인터페이스, static, instance 메소드\n스레드와 멀티 스레딩 소개: 스레드의 필요성\n스레드 구현: 확장 스레드 클래스, 실행 가능한 인터페이스 구현\n스레드의 상태, 스레드와 소통\nExecutor 서비스 소개: 스레드 수의 사용자 정의 후처리에서 돌아오기, invokeAll, invokeAny\n예외처리 소개: 예외처리 동안의 구상. try, catch, finally. 예외처리 우선 순위: 점검 예외처리, 비점검 예외처리. 예외처리 던지기. 사용자 정의 예외처리 던지기, CurrenciesDoNotMatchException. 기존 자원을 통해 시도하기 , Java 7의 새로운 특징.\nFiles list 메소드를 통한 디렉토리 안의 리스트 파일과 폴더, File walk 메소드, find 메소드, 파일에서의 읽기, 쓰기\n\n\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요.\n그래야 답변을 드릴 수 있습니다.\n\n\n지금 수강 버튼을 누르시고 최단 기간에 자바 프로그래밍을 정복하세요.\n강의에서 만나요!\nin28minutes\n\n\n이 강의로 자바를 단기간에 정복한 실제 학습자들의 후기입니다:\n별 5개 - 입문자를 위한 최고의 자바 강좌. 적극 추천합니다\n별 5개 - 이 과정은 제 기대 이상입니다. 적극 추천합니다!\n별 5개 - 이론과 연습문제의 좋은 조합!\n별 5개 - 매우 좋은 강좌입니다!\n별 5개 - 제가 들었던 것 중 최고의 자바 과정입니다. 간단명료하면서도 세부 내용들도 빠짐없이 다루고 있어서, 강의를 따라가면서 자바 실행에 있어서 빠르게 이해하고 배울 수 있습니다. 정말 마음에 듭니다.\n별 5개 - 온라인 과정이 이렇게나 도움이 될 거라고는 생각하지 못했습니다. 강사 분은 꽤나 적극적이며 적당히 많은 연습문제를 제공합니다.\n별 5개 - 이 강좌는 정말 대단해요! 너무 잘 들었고, 정말로 입문자를 위한 것이 맞기 때문에 프로그래밍에 대해 아무 것도 모르는 사람들에게 매우 유익합니다.\n별 5개 - 매우 잘 제작된 과정입니다. 끊임없는 연습문제와 심화학습 문제가 매우 맘에 들었습니다.",
      "target_audience": [
        "프로그래밍 경험이 전무하며, 자바 프로그래밍을 배우고 싶으신 분",
        "자바 프로그래밍 입문자이며, 좋은 자바 프로그래밍을 만드는 법을 배우고 싶으신 분",
        "자바 프로그래밍 객체 지향 언어의 기초를 배우고 싶으신 분",
        "자바 함수형 프로그래밍 기초를 배우고 싶으신 분"
      ]
    },
    {
      "title": "Linguagem de programação C# - Intermediário",
      "url": "https://www.udemy.com/course/linguagem-de-programacao-c-intermediario/",
      "bio": "Aprendendo mais que o básico",
      "objectives": [
        "Criar programas com gravação de dados",
        "Terão conhecimentos intermediários sobre a linguagem C#",
        "Conhecerão as peculiaridades da linguagem C# e POO no C#",
        "Herança, Tipos de Classes, Modificadores de Acesso e muito mais serão apresentados no curso."
      ],
      "course_content": {
        "Revisão de POO.": [
          "Introdução a seção 1.",
          "Revisão - Classe, Propriedade, Método.",
          "Revisão - Métodos.",
          "Revisão - Construtores."
        ],
        "POO - Parte 1.": [
          "Introdução a seção 2.",
          "Referências.",
          "Modificadores de Acesso - Conceito.",
          "Modificadores de Acesso - Public.",
          "Modificadores de Acesso - Protected.",
          "Modificadores de Acesso - Private.",
          "Modificadores de Acesso - Internal.",
          "Encapsulamento.",
          "Auto-Implement Propriety.",
          "Auto-Implement Propriety - Customizado.",
          "Palavra ReadOnly."
        ],
        "Estrutura e Passagem de valores.": [
          "Introdução a seção 3.",
          "Estrutura - Conceito.",
          "Estrutura - Prática.",
          "Passagem parâmetro por valor.",
          "Passagem parâmetro por referência.",
          "Passagem parâmetro com Out.",
          "Passagem parâmetro com Params."
        ],
        "Classes internas, abstratas, interface e enumeradores.": [
          "Introdução a seção 4.",
          "Classe Interna.",
          "Classe Parcial.",
          "Método Parcial.",
          "Classe Abstrata.",
          "Método Abstrato.",
          "Propriedade Abstrata.",
          "Classe Sealed.",
          "Interface.",
          "Enumeradores."
        ],
        "Tratamento de erros.": [
          "Introdução a seção 5.",
          "Lançando Exception.",
          "Tratando erro.",
          "Criando nossa própria Exception."
        ],
        "Mais informações sobre Herança.": [
          "Introdução a seção 6.",
          "Palavra This.",
          "Palavra Base.",
          "Construtor palavra Base.",
          "Casting.",
          "Boxing e Unboxing.",
          "Interface e Polimorfismo."
        ],
        "Trabalhando com arquivos.": [
          "Introdução a seção 7.",
          "Escrever Arquivo.",
          "Ler Arquivo.",
          "Escrever arquivo com Using."
        ],
        "Projeto de Cadastro.": [
          "Introdução a seção 8.",
          "Nosso projeto.",
          "Fluxo principal do nosso projeto.",
          "Construindo a tela cadastrar cliente.",
          "Salvar Cliente.",
          "Manter funcionario."
        ],
        "Dicas.": [
          "Construtor rápido.",
          "Auto Implement Propriety - Atribuir valor.",
          "Using Static.",
          "Formatar texto."
        ],
        "Download": [
          "Código-Fonte"
        ]
      },
      "requirements": [
        "Programação Orientada a Objeto",
        "C# Básico - Sintaxe, Estruturas Condicionais e de repetição"
      ],
      "description": "Neste curso vamos dar um passo a mais em relação ao curso anterior \"Linguagem de programação C# - Básico\". Vamos continuar aprender C# e suas estruturas principais, desta vez focado em aprender como construir programas com o uso da Programação Orientada a Objeto. Neste curso você aprender tópicos como:\n- Struct.\n- Passagem de parâmetros por Valor e por Referência.\n- Classes Abstratas, Seladas(Sealed) e Interface.\n- Classe e Métodos Parciais.\n- Enumeradores.\n- Tratamento de erros (Try, Catch e Finally).\n- O uso de muitas palavras reservadas (This, Base, Readonly e etc).\n- A trabalhar com arquivos.\n- Faremos um projeto final para fixar o conteúdo apresentado\n- Além de dicas e outras informações passadas em nosso curso.\nAproveite este curso, que é o segundo da serie de programação com C#, para aprender todos os fundamentos da Linguagem mais poderosa da atualizada.",
      "target_audience": [
        "Profissionais que desejam aperfeiçoar seu conhecimento de C#",
        "Estudantes de C#",
        "Universitários da área de tecnologia"
      ]
    },
    {
      "title": "Aprenda Programação PYTHON para Iniciantes",
      "url": "https://www.udemy.com/course/python-iniciantes-programacao/",
      "bio": "Curso Básico Introdutório para Iniciantes em Programação Python com aulas 100% Hands on!",
      "objectives": [
        "Você será capaz de desenvolver pequenos programas em Python",
        "Conceitos básicos de programação",
        "Manipular strings Python",
        "Realizar operações lógicas"
      ],
      "course_content": {
        "Iniciando": [
          "Introdução ao Curso de Python",
          "Boas Vindas ao Curso",
          "Objetivo do Curso",
          "A História do Python e seu criador"
        ],
        "Instalando o Python": [
          "Iniciando com a Instalação",
          "Download e Instalação do Python 3",
          "Download e Instalação do PyCharm CE",
          "Entendendo a Plataforma do Pycharm CE"
        ],
        "Python": [
          "Iniciando com Python",
          "Print('Hello World')",
          "Variables",
          "Strings",
          "Numbers",
          "Input",
          "Construindo uma Calculadora",
          "Lists",
          "List Functions",
          "If Statements",
          "Testando seu Conhecimento em Python Code"
        ],
        "Finalizando": [
          "Agradecimento",
          "BONUS"
        ]
      },
      "requirements": [
        "Este curso é para iniciantes em programação Python e não tem pré-requisitos"
      ],
      "description": "Curso Linguagem de Programação PYTHON para Iniciantes\nComece a aprender a Linguagem de Programação PYTHON com o nosso curso para Iniciantes!\nSe você está procurando uma nova habilidade de programação, PYTHON é uma excelente escolha para iniciantes. A linguagem é amplamente utilizada em grandes empresas, aplicações e provedores de Cloud Computing em todo o mundo, como Amazon AWS, Azure e Google Cloud, tornando-se uma das linguagens de programação mais populares em uso atualmente.\nNosso curso de Linguagem de Programação PYTHON para Iniciantes em 2023 é projetado para ajudá-lo a começar sua jornada de aprendizado em PYTHON, independentemente do seu nível de experiência em programação. Com uma metodologia simples e direta, você será introduzido às sintaxes básicas da linguagem, para entender os conceitos fundamentais e começar a programar seus próprios projetos em PYTHON.\nDurante o curso, você aprenderá conceitos básicos, como estruturas condicionais e de repetição, manipulação de strings, listas e arquivos. Além disso, você também irá praticar a resolução de problemas, escrever algoritmos simples e criar seus próprios programas em PYTHON. Meu objetivo é ajudá-lo a desenvolver as habilidades necessárias para se tornar um programador em demanda no mercado de trabalho.\nExistem várias vantagens em aprender PYTHON, aqui estão algumas delas:\n\n\nFácil de Aprender: PYTHON é considerada uma das linguagens de programação mais fáceis de aprender, com uma sintaxe clara e simples. Isso significa que os iniciantes em programação podem facilmente aprender os conceitos básicos e começar a criar programas rapidamente.\nAmpla Aplicação: PYTHON é usado em uma variedade de campos, incluindo ciência de dados, aprendizado de máquina, automação de tarefas, desenvolvimento web, jogos e muito mais. Isso significa que, ao aprender PYTHON, você terá uma ampla gama de oportunidades de carreira e poderá aplicar seus conhecimentos em diversos projetos.\nGrande Comunidade de Desenvolvedores: PYTHON possui uma grande comunidade de desenvolvedores em todo o mundo, o que significa que há muitos recursos disponíveis para ajudar os desenvolvedores a resolver problemas e aprender novas habilidades. Além disso, existem muitas bibliotecas e frameworks disponíveis para ajudar os desenvolvedores a criar programas de alta qualidade mais rapidamente.\nSuporte a múltiplas plataformas: PYTHON pode ser executado em várias plataformas, incluindo Windows, Mac e Linux. Isso significa que os programas criados em PYTHON são portáteis e podem ser executados em diferentes sistemas operacionais sem a necessidade de ajustes significativos.\nGrande demanda de mercado: Devido à sua ampla aplicação, PYTHON é uma das linguagens de programação mais demandadas no mercado de trabalho. Isso significa que, ao aprender PYTHON, você estará se preparando para uma carreira em um setor em constante crescimento e em alta demanda.\nEssas são apenas algumas das muitas vantagens em aprender PYTHON. Se você está interessado em programação, PYTHON é uma ótima escolha para iniciantes.\nAo concluir o curso, você terá uma sólida compreensão dos conceitos básicos da linguagem PYTHON, bem como habilidades práticas para criar seus próprios programas. Isso irá prepará-lo para continuar sua jornada",
      "target_audience": [
        "Alunos interessados em aprender Python",
        "Desenvolvedores de outras linguagens que desejam aprender mais sobre Python",
        "Interessados por programação"
      ]
    },
    {
      "title": "來杯Java吧! 2025 Java 入門到精通課程",
      "url": "https://www.udemy.com/course/java-master-chinese/",
      "bio": "從入門開始學習Java語法，課程包含Java 8、物件導向程式設計，製作貪食蛇遊戲、出埃及記遊戲、面試題目解題、MySQL資料庫、Servlet、JSP網頁開發、Stream、多線程Java編寫等等內容，一步一步成為Java大師。",
      "objectives": [
        "認識8個Java當中的原始資料型態，以及每種資料型態的使用時機與語法",
        "使用Java內建的String、Array、ArrayList等物件",
        "學習並且應用Java物件導向的程式設計語法",
        "學習製作Java桌面應用程式與遊戲",
        "認識物件導向的三大要素：Polymorphism(多型), Inheritance(繼承), Encapsulation(封裝)",
        "學習Abstract Class以及Interface，以及使用KeyListener與MouseListener",
        "認識Method Override, Method Overloading, Method Chaining三種比較與使用時機",
        "了解NullPointerException、Concurrent Modification Exception 問題處理流程與方法",
        "了解JVM概念，並學習Memory Leak (記憶體洩漏)與Java Garbage Collector",
        "製作Java遊戲，並且在多個作業系統執行",
        "使用Java連結MySQL資料庫，並學習如何架設資料庫",
        "在Java當中預防SQL Injection攻擊資料庫",
        "了解HTTP網路基本概念，認識網路協議與傳送請求與回應請求",
        "學習Java Servlet, JSP, JDBC等網頁開發工具",
        "認識Java Stream語法",
        "使用多線程Java編寫（Multi-threading Programming），提高運算速度",
        "使用Socket語法資料傳輸，傳送基本數據、進階數據、文件資料",
        "學習面試題目解題，總題數超過40題",
        "使用Java Swing 製作貪食蛇遊戲、製作出埃及記遊戲",
        "實作Merge Sort, HashMap, Enum Class, JavaDoc, Short-Circuit Evaluation等進階內容",
        "了解泛型(Generics)基礎與進階概念與應用，包含Type Erasure"
      ],
      "course_content": {
        "Chapter 0 - 課程準備": [
          "Learning Tips",
          "Course Resources",
          "Intro to Java",
          "Course Structure",
          "Java and IDE Download",
          "First Java Program",
          "Java History",
          "Note Taking Skills"
        ],
        "Chapter 1 - 基本語法": [
          "Start Writing Java",
          "Java Variable and Assignment",
          "Java Data Type",
          "String Operation",
          "Relational, Conditional Operator",
          "Arithmetic Operator",
          "if statement",
          "BMI 計算機",
          "疫苗種類查詢",
          "Array and ArrayList",
          "2D Array",
          "For Loop",
          "while loop",
          "Nested Loops",
          "break, continue",
          "終極密碼遊戲",
          "Java GUI",
          "drawLine, setColor, drawRect",
          "Loop Lab",
          "Java Method",
          "Return Keyword",
          "Method Overloading"
        ],
        "Chapter 1.5 - Java 技術": [
          "Static Context",
          "Reference Data Type",
          "Exchange elements",
          "String split and substring method",
          "Math Class",
          "Recursion and Stack Overflow",
          "Binary and Decimal",
          "Mod Operator"
        ],
        "Java 題目練習": [
          "Java題目",
          "Introduction",
          "入門題目1-2",
          "入門題目3-5",
          "入門題目 6-8",
          "入門題目 9-10",
          "初階題目 1-2",
          "初階題目 3-5",
          "初階題目 6-7",
          "初階題目8-9",
          "初階題目10-11",
          "中階題目 1-2",
          "中階題目 3-4",
          "高階題目 1-2",
          "高階題目 3-4"
        ],
        "Chapter 2 - 物件導向程式設計": [
          "Packages",
          "Constructor",
          "Methods of Class",
          "Public and Private Attributes",
          "Fields and Local Variable",
          "Quick Fix",
          "this keyword",
          "static variables and methods",
          "Java Modifiers",
          "Encapsulation",
          "Inheritance",
          "super keyword",
          "Method Override",
          "@Override 補充說明",
          "JPanel and JFrame Inheritance",
          "Object Class and equals override",
          "Polymorphism",
          "Polymorphism補充",
          "Dynamic Binding",
          "Abstract Class",
          "Interface",
          "Keylistener and Mouselistener",
          "其他規則補充 1",
          "其他規則補充 2",
          "其他規則補充 3",
          "其他規則補充 4"
        ],
        "Chapter 2.5 - Java Skills 實用技巧": [
          "toString method",
          "Switch Statement",
          "NullPointer Exception",
          "ConcurrentModification Exception",
          "Memory Leak and Garbage Collector"
        ],
        "Project - Snake Game 貪食蛇遊戲製作": [
          "Introduction to Snake Game",
          "Game View and Snake",
          "Fruit Setting",
          "Moving the Snake",
          "Controlling the Snake",
          "Crossing the Border",
          "Eating Fruit Logic",
          "Game Over Logic",
          "Keeping the Highest Score",
          "Exporting the Game to JAR file",
          "問題處理筆記 - 無法打開.jar檔案怎麼辦？",
          "Final Code"
        ],
        "Google Form": [
          "Google Form"
        ],
        "Project - Bible Game 出埃及記遊戲製作": [
          "Resource Download",
          "UML Diagram",
          "Game Introduction",
          "Basic Game Setup",
          "Disaster Game View",
          "Moving Moses",
          "Making the moves more meaningful",
          "Switching between GameViews",
          "Shooting Enemies",
          "Collect Ten Commandments",
          "Final Code"
        ],
        "Chapter 3 - Java Syntax 實用語法": [
          "Java Exceptions",
          "throw and throws",
          "Scanner and wc command",
          "Map interface and Hashmap",
          "(補充內容) Hashtable與Hashmap的差別",
          "Enum Class",
          "JavaDoc",
          "Wrapper Class",
          "Java Nested Class",
          "Static Nested Class 補充",
          "Short-circuit evaluation",
          "Method Chaining"
        ]
      },
      "requirements": [
        "對學習Java、Android或程式設計有一點興趣即可",
        "一台可以上網的電腦"
      ],
      "description": "2025 Java 入門到精通課程從頭開始學習Java語法，內容包含基本語法、物件導向的程式架構、解決問題的邏輯思路、遇到問題狀況的處理、Debug技巧，建立扎實的Java必備知識。此外，也帶你從無到有開發完整的Java桌機遊戲，練習物件導向的程式設計，寫出商業與便捷功能，可連結資料庫、高可讀性、高維護性以及高功能性的程式碼。此課程會不斷更新以提供新的內容，根據學生的狀況與開發趨勢，不斷更新讓知識保持新鮮且豐富。\n基礎課程包含：\n1. Java Primitive Data type (Byte, Short, Long, Integer, Character, Boolean, Float, Double)\n2. Reference Data Type (Class, Array, ArrayList, ...)\n3. 物件導向語法, Fields, Scope, Static\n4. 物件導向的三大要素：Polymorphism(多型), Inheritance(繼承), Encapsulation(封裝)\n5. Abstract Class, Interface\n6. Method Override, Method Overloading, Method Chaining三種比較與使用時機\n7. KeyListener、MouseListener\n8. toString(), equals() method 覆寫、switch statement撰寫\n9. NullPointerException、Concurrent Modification Exception 問題處理\n10. Memory Leak (記憶體洩漏)與Java Garbage Collector\n\n\n除此之外，我們也會，加上Java常見應用，例如：\n1. MySQL資料庫架設與連接\n2. 預防SQL Injection攻擊資料庫\n3. 網頁開發、HTTP\n4. Java Stream語法\n5. 多線程Java編寫（Multi-threading Programming）\n6. Socket語法與資料傳輸，傳送基本數據、進階數據、文件資料\n7. 學習面試題目解題，總題數超過40題\n8. 使用Java Swing 製作貪食蛇遊戲\n9. 製作出埃及記遊戲\n10. Merge Sort, HashMap, Enum Class, JavaDoc, Short-Circuit Evaluation等進階內容\n\n\nJava 是一種廣泛使用的電腦程式設計語言，擁有跨平台、物件導向等特性，廣泛應用於企業級Web應用開發和各種行動應用開發。例如: Android Apps,數據中心和超級計算機,桌面應用程序,數據庫連接, 資料視覺化, 以及數據分析，都可以見到Java的應用。許多政府機關、醫療、 教育、 國防，以及的電子交易的系統也是用Java做成的！\nJava 是非常受歡迎的程式語言，可以運用在各種領域，支援性非常強大！此外， Java是跨平台的程式語言，寫一份程式碼，就可以在多個平台上運行！現在許多開發工作與需要維護的程式碼，都需要擁有Java專業知識的工程師，因此，Java為目前業界非常熱門的程式開發語言。",
      "target_audience": [
        "正在大學就讀資訊工程、電腦科學、資料科學、數學的學生",
        "想學習Java開發的學生、或是轉職者",
        "對於電腦科學、資訊管理、資訊工程有興趣的任何人",
        "想學習用SpringBoot製作網頁的網頁開發者",
        "想做Android手機app程式者",
        "對金融業平台開發、數據分析有興趣者",
        "桌面的應用程式、伺服器、設備等開發應用有興趣者"
      ]
    },
    {
      "title": ".NET Core 3.0 & C# 7 Backend Frontend Geliştirici Kursu - 4",
      "url": "https://www.udemy.com/course/net-core-csharp-kursu-4/",
      "bio": "Kurumsal mimaride etkin bir backend geliştirici olacağınız serinin 4. bölümü. C# 7, AOP, Exception Handling, Clean Code",
      "objectives": [
        "AOP ve Cross Cutting altyapılarını anlayacaksınız",
        "Backend seviyesinde Exception Handling yapacaksınız",
        "FrontEnd seviyesi için global Exception Handling yapacaksınız",
        "AOP - ExceptionLogAspect yazacaksınız",
        "Kaliteli ve sürdürülebilir iş kuralı yazacaksınız"
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Düzeltme ve Geliştirmeler": [
          "JWT Bug Düzeltmesi",
          "Loglama için Improvement"
        ],
        "BackEnd Seviyesinde Exception Handling": [
          "Değerlendirmeler Hakkında",
          "Exception Handling Konusunda Konuşalım",
          "ExceptionLogAspect Yazmaya Başlayalım",
          "LogDetail Nesnesini Extend Etmek",
          "GetLogDetail Operasyonunun Yazılması",
          "Autofac Entegrasyonuyla Log Testi"
        ],
        "FrontEnd Seviyesi İçin Exception Handling": [
          "ErrorDetail Nesnesinin Yazılması",
          "Exception Middleware Yazmak",
          "Extension Middleware Yazmak ve Test Etmek"
        ],
        "Business Yazma Teknikleri ve Clean Code": [
          "Business Yazmaya Başlamak",
          "Business Logic Runner Yazmak",
          "Yapılan Çalışmayı Test Etmek"
        ],
        "Servis Odaklı Sistemlerle Çalışmak": [
          "Farklı Servislerle Çalışmak",
          "Validation İçin Sistemi İyileştirme İhtiyacı",
          "Validation İçin Sistemin İyileştirilmesi",
          "Kaynak Kodlar"
        ],
        "Bonus": [
          "Bonus Ders"
        ]
      },
      "requirements": [
        "Temel C# ve teknolojileri bilgisi"
      ],
      "description": "Bu seri daha önce klasik .NET Framework ile yayınladığım \"C# ile Backend Geliştirici Olun\" serisinin .NET Core ile yazılmış ve geliştirilmiş versiyonudur.\n.NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır.\nBu kursta kullanılan mimari eğitim ve danışmanlık yaptığım 300+ kurumda veya firmada kullandırdığım şekliyle birebir yansıtılmıştır. Sektörün önde gelen bir çok firmasında da kullanılmaktadır. Profilimden bu firmaların bazılarını inceleyebilirsiniz.\nSerinin dördüncü bölümünü keyifle hazırladım.\nAOP ve Cross Cutting Altyapılarını Anlamak\nBackend seviyesinde Exception Handling\nFrontEnd seviyesi için global Exception Handling\nAOP - ExceptionLogAspect\nKaliteli ve sürdürülebilir iş kuralı yazmak\nve daha fazlası...\nBu seri daha önce klasik .NET Framework ile yayınladığım \"C# ile Backend Geliştirici Olun\" serisinin .NET Core ile yazılmış ve geliştirilmiş versiyonudur.\n.NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır.\nBu kursta kullanılan mimari eğitim ve danışmanlık yaptığım 300+ kurumda veya firmada kullandırdığım şekliyle birebir yansıtılmıştır. Sektörün önde gelen bir çok firmasında da kullanılmaktadır. Profilimden bu firmaların bazılarını inceleyebilirsiniz.\nEğer kurumsal bir kariyer hedefiniz varsa, bu kurs sizin için başladığınız gibi heyecanla bitireceğiniz bir kurs olacaktır. Şimdiden başarılar dilerim.",
      "target_audience": [
        ".NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır."
      ]
    },
    {
      "title": "Formação Profissional Python: Curso Completo + Projetos",
      "url": "https://www.udemy.com/course/formacao-python/",
      "bio": "Um curso prático, moderno e objetivo para você se especializar na linguagem de programação que mais cresce no mundo!",
      "objectives": [
        "Domine Orientação a Objetos criando suas próprias classes",
        "Aprenda a Manipular dados com Pandas",
        "Trate Erros e Produza Logs",
        "Leia e Salve dados em Arquivos como Csv, Json e Yaml",
        "Crie e utilize Expressões Regulares",
        "Domine a biblioteca Numpy",
        "Crie Gráficos de Todos os Tipos com Matplotlib",
        "Desenvolva testes automatizados com Pytest",
        "Crie um Serviço de API e teste o mesmo desenvolvendo um cliente",
        "Aprenda os princípios de Computação na Nuvem com Python",
        "Acesse Bancos de Dados, lendo e escrevendo informações",
        "Aprenda a caputurar dados da internet com Web scraping",
        "Aprenda os fundamentos de Machine Learning",
        "Publique (deploy) uma aplicação Python na Nuvem",
        "Desenvolve projetos simulando o mundo real",
        "Domine estruturas como Listas, Sets, Tuplas, Dicionários e List Compreension",
        "Crie funções, funções lambda, funcões recursisas, aprenda a utlizar decoradores",
        "Faça gestão e criação de módulos"
      ],
      "course_content": {},
      "requirements": [
        "Não é necessário experiência prévia",
        "O curso utliza um ambiente Cloud, portanto você não precisa instalar ou baixar nada"
      ],
      "description": "Seja bem vindo a um curso Moderno e Prático de Python!\nComeçe a aprender agora, utilizando qualquer computador, sem precisar instalar nada!\nAprenda tudo o que importante de forma prática, com acesso a scripts e material complementar\nMais de 250 aulas em 24 seções\nMais de 140 Atividades Totalmente Práticas com Solução\nMais de 120 Testes de Múltipla Escolha para você fixar seus Conhecimentos\nDois Projetos Finais com Solução\nVocê sabia que Python é a linguagem de programação que mais cresce no mundo? Estima-se que atualmente existam meio milhão de vagas abertas para desenvolvedores nesta linguagem!\nO que você vai aprender neste curso:\nApresentação e Introdução ao Ambiente do Curso\nFundamentos e Estrutura da linguagem, como tipos, operadores lógicos e casting de tipos\nEstruturas de programação, como if, while, for\nTipos estruturais como Listas, Sets, Tuplas, Dicionários e List Compreension\nCriação e uso de funções, funções Lambda, funções recursivas, decoradores\nFunções built-in do Python para texto, lista, datas e números\nFundamentos e prática de Orientação a Objetos no Python: propriedades, métodos, herança, herança multipla\nGestão e Instalção de módulos\nGestão de Exceções (erros) e produção de Logs\nIteradores, funções iteráveis, upacking de iteradores\nLendo e gerando arquivos como textos, csv, Json e Yaml\nUso e criação de Expressões Regulares\nBiblioteca Ciêntifica Numpy\nBiblioteca de Dados Pandas\nProdução de Gráficos com Matplotlib\nTestes Automatizados de Aplicações Python\nCriando um Serviço (API) e clientes do serviço com Python\nComputação na Nuvem, com prática em Python\nBanco de Dados com Python: grando e lendo dados de bancos de dados\nWeb scraping com Python: lendo dados e tabelas de sites\nMachine Learning com Python: criando modelos de machine learning e fazendo previsões\nImplantação (Deploy) de aplicações Python: Publique uma aplicação na Internet!\nProjeto Final parte I: Desenvolva um algoritmo completo de ciência de dados\nProjeto Final parte II: Desenvolva um projeto uso de uma API e Banco de Dados\nAspectos Finais Diversos\nVocê ainda terá acesso a todo material do curso, como slides e scripts, além de acesso vitalício!\nSeja bem vindo e Bons estudos!",
      "target_audience": [
        "Todos aqueles interessados em aprender Python"
      ]
    },
    {
      "title": "Apprendre C# et le développement logiciel avec WPF",
      "url": "https://www.udemy.com/course/apprendre-csharp-et-le-developpement-de-logiciels-avec-wpf-net-core/",
      "bio": "Découvrez la POO avec C# et créez des logiciels avec WPF / .NET Core. La formation complète en programmation C# / .NET.",
      "objectives": [
        "Programmer avec C# (C-Sharp)",
        "Comprendre la programmation orientée objet (POO)",
        "Utiliser Microsoft Visual Studio",
        "Développer des logiciels et applications",
        "Utiliser WPF et .NET Core",
        "Créer un logiciel complet",
        "Windows Presentation Foundation",
        "Installer les outils pour travailler avec C#",
        "Apprendre LINQ",
        "Conditions, boucles, tableaux, listes avec C#",
        "Organiser son code et créer des fonctions",
        "Découvrir .NET",
        "Vous aurez accès en illimité à cette formation pour apprendre à votre rythme",
        "Travailler avec une base de données",
        "Créer vos propres projets de zéro",
        "Apprenez par la pratique",
        "Devenir développeur C#"
      ],
      "course_content": {
        "Notions fondamentales de la programmation avec C# & .NET Core": [
          "Introduction à la formation développeur C#",
          "Tour d'horizon du contenu de cette formation C#",
          "Prise en main du player vidéo d'Udemy pour suivre au mieux une formation !",
          "Coder avec C# en ligne (sans Visual Studio) et collaborer avec un utilisateur",
          "Comprendre le code de base du programme C#",
          "Les variables avec C#",
          "Les fonctions en C#",
          "Les conditions",
          "Les boucles (for et while)",
          "Atelier pratique : Création d'un mini jeu sous forme de texte en console",
          "Les tableaux et les listes en C#",
          "Les classes et la POO",
          "Lire et écrire dans des fichiers",
          "Testez vos connaissances (Quiz n°1)",
          "Exercice de codage n°1",
          "Microsoft Visual Studio 2022, l'IDE intelligent qui code avec vous",
          "Visual Studio Installer et avoir plusieurs versions de VS en parallèle",
          "Avant de passer à la session suivante (Votre premier projet C#)"
        ],
        "La programmation orientée objet (POO) avec C# - Le cours condensé en 1 vidéo": [
          "Le tutoriel POO (programmation orientée objet) avec C# + Cas pratique"
        ],
        "[PROJET COMPLET] Développer un logiciel complet avec WPF et .NET Core": [
          "Découverte de la conception d'interfaces avec WPF et .NET Core",
          "Création de l'interface de notre logiciel avec WPF 1/2",
          "Création de l'interface de notre logiciel avec WPF 2/2",
          "Programmation des fonctions de base et gestion des clics sur les boutons",
          "Programmation de la fonction d'analyse de l'ordinateur",
          "Développement de la fonction de nettoyage du PC",
          "Récupérer des informations sur un serveur web",
          "Persistance des données dans un fichier sur le disque",
          "Création d'un installeur pour le logiciel afin de le partager",
          "Comment vendre un logiciel facilement en ligne grâce à Gumroad ?"
        ],
        "Projets annexes : WPF & Material design par la pratique - Ateliers créatifs": [
          "Vidéos complémentaires (optionnelles) ! Apprenez avec des exercices pratiques.",
          "Présentation de la formation et préparation d'un nouveau projet WPF",
          "Empiler les éléments à l'aide du StackPanel",
          "Positionner votre contenu avec le DockPanel",
          "Créer une interface avancée en mixant plusieurs types de panels",
          "Utiliser l'outil \"Grid\" pour concevoir une interface sous forme de grille",
          "Création du formulaire de connexion avec WPF",
          "Création d'un navigateur web (1/3) : Le menu principal",
          "Création d'un navigateur web (2/3) : Naviguer sur le web avec WebBrowser",
          "Création d'un navigateur web (3/3) : Un logiciel à plusieurs pages",
          "Installer Material Design : Concevoir des interfaces flat et modernes",
          "Conception d'une interface présentant des recettes avec Material Design & Grid",
          "Conception d'une page détail de la recette avec les étapes (Material Design)",
          "Création d'une interface/formulaire pour un outil de réservation",
          "Création d'une interface flat pour fast food et la commande d'un repas"
        ],
        "Vidéos en vrac pour aller plus loin avec C#": [
          "Utiliser les threads avec C# et comprendre l'avantage du multi-threading",
          "Implémenter des tests unitaires dans un projet C# .Net Core & TDD",
          "Créer des programmes robustes qui ne plantent pas grâce à la gestion d'erreurs",
          "Utiliser LINQ et écrire des requêtes pour écrire des programmes plus propres",
          "Utiliser une base de données MySQL (Lire et écrire des données) avec C# et SQL.",
          "ListView & Data Binding : Créer une liste et afficher des données sources",
          "Lire et écrire dans un fichier INI (fichier de configuration type clé/valeur)"
        ],
        "Aller plus loin avec le langage C# - Notions avancées de programmation c-sharp": [
          "Création d'un projet application consone C# pour préparer le terrain",
          "Les structures avec C# (mot-clé STRUCT)",
          "Les énumérations avec C# (mot-clé ENUM)",
          "Plus loin avec les tableaux (array) et tableaux multidimensionnels",
          "Comprendre et utiliser un delegate C#",
          "Créer et implémenter une interface C#",
          "Sources des vidéos"
        ],
        "Comprendre, apprendre et maîtriser LINQ, le puissant outil de requêtes": [
          "LINQ : Créer une requête (query) et une expression lambda",
          "Quelques filtres de LINQ pour filtrer le résultat d'une requête",
          "Faire des maths avec LINQ et ses fonctions",
          "LINQ : Intersection, Union, Exception, Concaténation !",
          "LINQ : Any, All et Contains pour tester la présence d'un résultat",
          "LINQ : Travailler avec des listes d'objets et filtrer les résultats",
          "Plus loin avec LINQ et mot-clé \"JOIN\" pour travailler sur 2 listes simultanément",
          "Code source des vidéos sur LINQ"
        ],
        "Mini projets avec C# et WPF": [
          "Développer un lecteur audio avec une interface graphique (C# + WPF)"
        ],
        "POO & WinForm pour concevoir des IHM": [
          "Présentation de cette section optionnelle",
          "Exercice sur la programmation orientée objet (POO) : Un mini RPG C# en console",
          "Présentation de WinForm pour la conception de logiciels avec interface",
          "Création d'un logiciel d'inscription d'utilisateurs dans un fichier clients",
          "Création d'un mini navigateur web (WebBrowser) avec WinForm"
        ],
        "Pratiquer C# en s'amusant dans le cadre du développement de jeux vidéo !": [
          "Présentation de cette section offerte et de ce que vous y trouverez",
          "Télécharger et installer Unity pour développer des jeux avec C#",
          "L'interface d'un moteur de jeu (Unity) + Prise en main",
          "Tour d'horizon des menus du logiciel (partie 1)",
          "Tour d'horizon des menus du logiciel (partie 2)",
          "Comprendre ce que sont les assets pour un jeu vidéo",
          "Petit mot avant de parler de C# dans le cadre du développement de jeux vidéo.",
          "Introduction à C# dans le cadre de la création de jeux (partie 1)",
          "Introduction à C# dans le cadre de la création de jeux (partie 2)",
          "Bien comprendre C# et son utilisation sous Unity : Vidéos complémentaires",
          "C# dans le cadre du développement de projets sous Unity",
          "Les variables C# et leur utilisation sous Unity",
          "Les conditions",
          "Les boucles for et while",
          "Les tableaux",
          "Les fonctions, première partie",
          "Les fonctions, la suite",
          "Gestion des inputs avec C# (Détection clavier / souris)",
          "Travailler avec un projet 2D sous Unity et comprendre les différences avec la 3D",
          "3 projets de jeux vidéo avec C# pour pratiquer avec des cas concrets !",
          "Création d'un projet pour pouvoir développer nos jeux avec C#",
          "[Projet jeu C# 1] Pong - Créer la raquette",
          "[Projet jeu C# 1] Pong - Créer la balle",
          "[Projet jeu C# 1] Pong - Créer l'interface utilisateur",
          "[Projet jeu C# 1] Pong - L'intelligence artificielle (adversaire/ordinateur)",
          "[Projet jeu C# 2] Puissance 4 - Préparation du projet",
          "[Projet jeu C# 2] Puissance 4 - Mise en place du plateau de jeu",
          "[Projet jeu C# 2] Puissance 4 - Jouer un jeton",
          "[Projet jeu C# 2] Puissance 4 - Changement de joueur",
          "[Projet jeu C# 2] Puissance 4 - Gérer les collisions / limites",
          "[Projet jeu C# 2] Puissance 4 - Détection condition de victoire (partie 1)",
          "[Projet jeu C# 2] Puissance 4 - Détection condition de victoire (partie 2)",
          "[Projet jeu C# 2] Puissance 4 - L'intelligence artificielle de l'ordinateur",
          "[Projet jeu C# 3] Memory - Préparation du projet",
          "[Projet jeu C# 3] Memory - Placer les cartes sur la table de jeu",
          "[Projet jeu C# 3] Memory - Retourner une carte au clic",
          "[Projet jeu C# 3] Memory - Détecter la victoire d'un joueur",
          "[Projet jeu C# 3] Memory - Coder l'intelligence artificielle de l'adversaire",
          "Conclusion sur le développement de jeux avec C#"
        ]
      },
      "requirements": [
        "Savoir utiliser un ordinateur",
        "Avoir accès à internet",
        "Vouloir apprendre avec un expert",
        "Souhaiter créer des logiciels modernes avec C#"
      ],
      "description": "Bienvenue sur la formation certifiante développeur C# la plus complète du marché. Grâce à ce cours, vous apprendrez les ficelles du développement de logiciels avec C# et WPF (Windows Presentation Foundation), l'outil ultime pour la conception d'applications qui a remplacé Windows Forms. Vous découvrirez de façon précise, progressive et pratique les notions fondamentales du langage C# à travers de nombreux projets concrets.\n\n\nCe cours complet est destiné à tous ceux qui souhaitent découvrir le monde passionnant du développement informatique et apprendre leur premier langage de programmation (ici, le C#). Vous découvrirez des outils puissants et les mettrez en pratique à travers de nombreux projets concrets (Nous allons coder ensemble plusieurs logiciels réels). Vous apprendrez également la programmation orientée objet (POO) et l'algorithmique, vous permettant ainsi d'ouvrir des portes dans le monde professionnel.\n\n\nNous commencerons par vous enseigner les notions fondamentales de C# et de la POO, en vous faisant écrire vos premiers programmes. Puis, nous passerons au développement d'un logiciel complet avec C# et WPF, pour poursuivre votre apprentissage par la pratique et développer un projet complet, concret et fonctionnel. Vous apprendrez également à créer un installeur pour votre logiciel, vous permettant de le mettre en vente en ligne.\n\nVous apprendrez de nombreuses techniques de conception de logiciels, comme la communication avec une base de données, une API web et un système de connexion par e-mail / mot de passe pour accéder à une zone privée du logiciel. Vous découvrirez également comment utiliser Material design pour concevoir des interfaces utilisateur intuitives et ultra modernes avec le Framework .NET et WPF. Nous avons également inclus des sections plus avancées pour ceux qui souhaitent devenir experts en programmation C#.\n\nEn réponse à vos demandes, nous avons également ajouté 15 heures de vidéo à cette formation, incluant notamment des notions avancées de programmation C#, une section complète sur l'utilisation de LINQ et 5 nouveaux projets pour pratiquer / s'exercer avec C#.\n\n\nA l'issue de ce cours vous aurez toutes les bases pour développer des outils avec C#. Vous serez également en mesure d'utiliser WPF, l'outil de conception d'interfaces afin de développer n'importe quel type de logiciel par la suite. Nous aurons développé ensemble plusieurs logiciels / outils que vous pourrez ajouter à votre portfolio.\nNous verrons toutes les bases du langage de programmation C# (C-Sharp) :\nLes outils de développement\nComprendre C# et l'environnement .NET\nLes variables (int, float, bool, string)\nLes fonctions\nLes conditions (if / else)\nLes boucles (for, while, foreach)\nLes tableaux et tableaux à plusieurs dimensions\nLes classes et interfaces avec C#\nL'utilisation des fichiers\nLINQ pour être encore plus efficace avec C#\nCommuniquer avec une base de données\nAinsi que tout ce qui vous permettra de créer et de coder des interfaces (logiciels) :\nCréation de projets WPF .Net Core\nDesign de l'interface (UI)\nProgrammation des événements (Clic)\nProgrammation des fonctionnalités du logiciel\nCommunication avec un serveur web\nPersistance des données (Fichier, base de données)\nCréation d'un installeur professionnel\nConsommer une API web (WebClient)\nCréer une API simple (Topo sur ASP.NET)\nTravailler avec les chaînes de caractères, l'encodage, les dates, le data binding...\n\n\nCe cours est le point de départ idéal pour se lancer. Je vous assure qu'après avoir suivi ma formation vous serez capable de développer vos propres logiciels, c'est garanti satisfait ou remboursé. Si ma formation ne tient pas ses promesses, je vous rembourse intégralement !\n\n\nEnfin, à la fin de notre formation, vous recevrez un certificat de réussite qui témoignera de vos compétences en développement C# et WPF. Ce certificat est un véritable atout pour votre parcours professionnel et vous permettra de vous démarquer sur le marché de l'emploi.\n\n\nEn outre, notre cours est conçu pour vous accompagner tout au long de votre apprentissage, avec des explications claires et concises, des exemples concrets et des exercices pratiques pour mettre en application les connaissances acquises. Vous bénéficiez également d'un accès à vie à notre formation, vous permettant de suivre les cours à votre rythme et de vous référer aux leçons à tout moment.\n\n\n\n\n====================================\n*** MISE À JOUR : 15 HEURES DE BONUS ***\n====================================\n\n\nVous souhaitez aller plus loin dans la conception de logiciels avec C# sous Visual studio ? Vous avez envie de vous perfectionner avec WPF (Windows Presentation Foundation) ? Vous aimeriez mettre en place Material design pour concevoir des interfaces modernes ? Mettre en place un système de connexion avec vérification de l'utilisateur dans la base de données ? Vous aurez vos réponses dans cette nouvelle section.\n\nL'objectif de cette mise à jour est de vous accompagner pour aller plus loin avec WPF et la création d'applications. Nous allons découvrir comment positionner des éléments à l'écran grâce aux différents panels de WPF puis nous verrons comment réaliser de beaux designs à l'aide de Material Design pour WPF et XAML. Nous découvrirons :\n\nLe StackPanel pour empiler des éléments\nLe DockPanel pour ancrer vos widgets\nLa grille (Grid) pour travailler dans une grille\nComment imbriquer plusieurs panels\nComment concevoir des formulaires\nComment importer les outils pour travailler avec Material Design\n\nPuis une fois que ces outils seront maîtrisés, nous allons apprendre par la pratique en développant plusieurs petits projets :\n\nDesign d'une calculatrice\nCréation d'un navigateur web\nNaviguer entre des pages et fenêtres\nCréer une liste de recettes\nCréer une page détails de la recette\nCréer un outil de réservation (Hôtel, Camping, Resto...)\nCréer un système de commande (Type écran tactile comme au fast food)\nA l'issu de ce cours, vous aurez de solides connaissances sur WPF et ses composants, sur les panels et grilles permettant d'organiser les pages et sur l'utilisation de Material Design pour XAML afin de concevoir des interfaces modernes et claires.\n\n\nBoostez votre carrière\nIngénieur en informatique de formation et développeur C# depuis plus de 10 ans, je partagerai avec vous des conseils et astuces qui vous permettront d'augmenter votre employabilité. De plus tous les projets créés dans ce cours pourront être ajoutés à votre CV.\n\nUne formation TOUT en 1\nLes autres formations vous apportent les bases et sont souvent vendues en plusieurs formations séparées. Ici TOUT y est : Bases, Notions avancées, Développement logiciel, Interface utilisateur, Bonnes pratiques, Tests, POO, projets réels et concrets, Bases de données...\n\nQu'en pensent les internautes ?\nSébastien G - ⭐️⭐️⭐️⭐️⭐️\nTout simplement excellent!!! un formateur à suivre. Les cours sont clairs et bien établis par des exemples concrets. De plus nous sommes actifs durant le cours! Pour moi un des meilleurs formateurs que j'ai trouvé jusqu'à présent. Étant débutant j'espère de nouvelles formations qui vont plus loin dans la conception d'un logiciel. Merci pour cette formation\nGilles C -  ⭐️⭐️⭐️⭐️⭐️\nJe suis très satisfait et je me félicite d'avoir choisi cette formation pour commencer mon apprentissage en c#, le formateur connait très bien sa matière et j'ai appris beaucoup avec la théorie mais surtout avec les exercices pratique, Gros Merci Gilles C.\n\n\nTout ce que vous devez savoir pour devenir développeur C# est dans ce cours ! Vous apprendrez tout de A à Z et par la pratique sur des projets concrets. Je met régulièrement à jour la formation pour vous présenter les dernières nouveautés.\nApprenez avec un expert et lancez-vous dans le développement logiciel avec ce fabuleux langage qu'est C# ! Vous pourrez ensuite plus facilement trouver un travail dans l'industrie du développement logiciel.\n\n\nEn résumé, notre formation certifiante de développeur C# est l'opportunité idéale pour ceux qui souhaitent apprendre à développer des applications professionnelles avec C# et WPF, en bénéficiant d'un accompagnement personnalisé et d'une pratique concrète grâce à de nombreux projets concrets. Inscrivez-vous dès maintenant pour découvrir les joies de la programmation C# !",
      "target_audience": [
        "Toute personne souhaitant apprendre C#",
        "Les internautes qui souhaitent créer des logiciels",
        "Les développeurs qui souhaitent migrer vers C# & .Net Core",
        "Les développeurs C# qui souhaitent se perfectionner",
        "Ceux qui souhaitent découvrir WPF",
        "Si votre objectif est d'obtenir un certificat de réussite C#"
      ]
    },
    {
      "title": "PL/SQL de ORACLE en Español - 2016",
      "url": "https://www.udemy.com/course/plsql-de-oracle/",
      "bio": "Porque el PL/SQL puede ser fácil si se explica bien!",
      "objectives": [
        "Aprender los fundamentos del PL/SQL de Oracle",
        "Poder crear funciones y procedimientos en la base de datos",
        "Dominar el PL mediante ejercicios ilustrados, ejercicios prácticos y tareas"
      ],
      "course_content": {
        "Empezar aquí": [
          "Curso Legacy",
          "Introducción",
          "Nuevo enlace de descarga de la versión express de Oracle",
          "Instalación del ambiente de trabajo.",
          "Conexión a la base de datos",
          "¡Únete a Nuestra Comunidad de DevTalles en Discord!"
        ],
        "Empecemos a escribir PLs": [
          "Hola Mundo en PL/SQL",
          "Manejo de variables básicas",
          "Constantes",
          "Valores de un Query a variables - INTO",
          "Funciones creadas por Oracle",
          "Arreglos",
          "Tarea #1 - Empezando a crear PLs",
          "Tarea #1 - Resolución"
        ],
        "Condiciones y Operadores": [
          "Condicion IF - THEN y IF THEN ELSE",
          "Condición IF-THEN-ELSIF",
          "Condicional CASE",
          "Operadores de evaluación",
          "Tarea: Realizar un PL, que determine el aumento que recibirá un empleado.",
          "Tarea Resolución: Mostrando una manera de resolver la tarea."
        ],
        "Ciclos en PL/SQL, (bucles o repeticiones)": [
          "Ciclo FOR",
          "Salir o Continuar en el ciclo ( EXIT y CONTINUE)",
          "Ciclo Básico - Loop",
          "Ciclo Mientras - WHILE",
          "Tarea Ciclos #1: Realizar el calculo de un promedio de 4 notas",
          "Resolución de la tarea de ciclos #1",
          "Tarea Ciclos #2: Obtener el numero factorial",
          "Resolución de la tarea de ciclos #2"
        ],
        "Procedimientos y Funciones": [
          "Preparando el ambiente de trabajo",
          "Función Básica",
          "Funciones con parámetros de entrada",
          "Función: Cálculo de edad actual",
          "Definir funciones dentro de PLs",
          "Procedimiento Básico",
          "Procedimiento con variables de Entrada y Salida",
          "Tarea de Funciones #1: Crear una función que retorne el promedio de notas",
          "Resolución de tarea Funciones #1"
        ],
        "Cursores y Tipo de dato RECORD.": [
          "Cursor en tiempo de ejecución",
          "Cursores Implicitos",
          "Cursores Explicitos",
          "Tipo de dato registro - Table base Record",
          "Registro definido por usuario - User defined record",
          "Registros como parámetros a funciones y procedimientos.",
          "Preparación para la tarea",
          "Tarea de cursores: Imprima el total a pagar de los empleados de la tabla.",
          "Resolución de la tarea de cursores."
        ],
        "Excepciones": [
          "Manejo de excepciones",
          "Excepciones personalizadas.",
          "Excepciones pre definidas por Oracle."
        ],
        "Despedida": [
          "Más sobre mis cursos",
          "Gracias por tomar el curso"
        ]
      },
      "requirements": [
        "Conocimiento básico de SQL query. Basta con saber hacer algún SELECT * FROM...",
        "Deben de ser perseverantes y realizar las tareas y los ejercicios",
        "PL/Sql, es un lenguaje de programación, por lo que sería de gran ayuda saber la lógica de programación estructurada"
      ],
      "description": "Nota Legacy:\nDespués de varios años desde el lanzamiento inicial de este curso, queremos informarte que el mismo ha pasado a ser versión legacy. Esto implica que su contenido no recibirá actualizaciones adicionales y nuestro equipo de Co-instructores no continuará proporcionando soporte a preguntas relacionadas a este curso.\nSin embargo, queremos que sigas aprendiendo con confianza. Por eso, te invitamos a unirte a nuestra comunidad en Discord, donde podrás conectar con otros estudiantes, compartir conocimientos y recibir apoyo de nuestra comunidad.\n¡Gracias por tu comprensión y por ser parte de nuestra comunidad de aprendizaje!\n\n\nEste curso se enfoca en llevarte de un nivel CERO a intermedio-avanzado en el lenguaje de programación de Oracle el PL/SQL.\nEs importante recalcar, que deben de saber al menos que es un SELECT * FROM... es todo.\nConocimientos de programación no son necesarios, pero ayudaría mucho si saben algo de programación básica o estructurada.\nPor qué tomar este curso? Porque cuando me enseñaron PL/SQL hace muchos años atrás, me costo mucho dominarlo, pero fue porque tuve malos asesores. Yo te aseguro que eso no te pasara a ti.\nLo mejor de todo es que en menos de 1 mes (hasta menos), tendrán un conocimiento de PL/Sql medio-avanzado. Se los garantizo.\nEl curso esta hecho en vídeos y tareas cortas, de rápida resolución que hasta te servirá para utilizarlo en futuras referencias.",
      "target_audience": [
        "Este curso necesita un conocimiento básico de SQL, (hacer queries básicos)",
        "Se requiere WINDOWS, ya que Oracle Express solo corre bajo Windows y Linux. Pero no cubriremos Linux tampoco.",
        "Usaremos Oracle Express y SQL Developer. Por lo que no caeremos en ningún costo adicional.",
        "Conocimiento básico de programación estructurada. (Lógica básica de programación)"
      ]
    },
    {
      "title": "Curso Certificación Profesional Java 11, 17 y 21",
      "url": "https://www.udemy.com/course/curso-certificacion-profesional-desarrollador-java-se-11/",
      "bio": "Preparación para obtención de la certificación oficial de Oracle, versiones Java 11, Java 17 y Java 21",
      "objectives": [
        "Al finalizar este curso, el alumno estará preparado para presentarse a los exámenes de certificación Oracle Desarrollador Java 11 y Java 17 Profesional",
        "Aprenderás en detalle toda la sintaxis del lenguaje Java, así como las clases de uso general",
        "Aprenderás a utilizar expresiones lambda y construir instrucciones de manipulación de datos mediante Streams",
        "Conoceras los detalles de la programación de aplicaciones multitarea",
        "Realizarás múltiples preguntas tipo exámen que servirán de entrenamiento"
      ],
      "course_content": {
        "Introducción": [
          "Introducción a los exámenes de certificación Java"
        ],
        "Trabajando con Java y tipos de datos": [
          "Declarar e inicializar variables",
          "Tipos primitivos y tipos objeto",
          "Ciclo de vida de los objetos",
          "Clases de envoltorio",
          "Revisión preguntas de examen",
          "Inferencia de tipos",
          "Revisión de preguntas de examen",
          "Operadores Java",
          "Operadores a nivel de bits",
          "Operador complemento a uno",
          "Igualdad de objetos",
          "Revisión de preguntas de examen"
        ],
        "Estructuras de control de flujo": [
          "Operador if y ternario",
          "Uso de switch",
          "Revisión preguntas de examen",
          "Instrucciones repetitivas for y while",
          "Uso de break y continue",
          "Revisión preguntas de examen"
        ],
        "Programación Orientada a objetos": [
          "Creación de métodos y sobrecarga",
          "Paso de parámetros",
          "Miembros estáticos",
          "Revisión preguntas de examen",
          "Creación e inicialización de instancias",
          "Modificadores de acceso",
          "Encapsulación",
          "Revisión preguntas de examen",
          "Herencia",
          "Constructores en la herencia",
          "Sobrescritura de métodos",
          "Revisión preguntas de examen",
          "Tipo de objeto y tipo de referencia",
          "Clases abstractas y polimorfismo",
          "Interfaces",
          "Interfaces Java 8 y 9",
          "Interfaces funcionales",
          "Revisión preguntas de examen",
          "Clases anidadas",
          "Enumeraciones",
          "Revisión preguntas de examen"
        ],
        "Arrays y colecciones": [
          "Arrays de una dimensión",
          "Arrays multidimensionales",
          "Revisión preguntas de examen",
          "Genéricos",
          "Iterables y colecciones",
          "Listas",
          "Tablas",
          "Revisión preguntas de examen",
          "Conjuntos",
          "Colas dobles",
          "Ordenación arrays y listas I",
          "Ordenación arrays y listas II",
          "Revisión preguntas de examen",
          "Preguntas resumen"
        ],
        "Modularidad": [
          "Conceptos básicos de modularidad",
          "Compilación y ejecución de aplicaciones modulares",
          "Empaquetado de módulos",
          "Módulos anónimos y automáticos",
          "Otras características de la modularidad",
          "Revisión preguntas de examen"
        ],
        "Lambdas y Streams": [
          "Expresiones lambda e interfaces funcionales",
          "Interfaces java.util.function",
          "Revisión de preguntas de exámen",
          "Introducción a streams",
          "Métodos de Stream I",
          "Métodos de Stream II",
          "Métodos de Stream III",
          "Revisión preguntas de examen",
          "Métodos de Stream IV",
          "Métodos de Stream V",
          "Referencias a métodos",
          "Streams paralelos",
          "Revisión preguntas de examen"
        ],
        "Entrada-salida y bases de datos": [
          "Entrada-salida java.io I",
          "Entrada-salida java.io II",
          "Serialización",
          "Revisión preguntas de examen",
          "Entrada-salida java.nio I",
          "Entrada-salida java.nio II",
          "Revisión preguntas de examen",
          "Bases de datos",
          "Revisión preguntas de examen",
          "Preguntas resumen"
        ],
        "Control de excepciones": [
          "Excepciones y tipos de excepciones",
          "Captura de excepciones",
          "Creación y gestión de excepciones personalizadas",
          "Revisión preguntas de examen",
          "Utilización de try con recursos",
          "Revisión de preguntas de examen"
        ],
        "Multitarea": [
          "Multitarea clásica. Conceptos",
          "Revisión preguntas de examen",
          "Nueva multitarea I",
          "Nueva multitarea II",
          "Revisión preguntas de examen",
          "Las clases Atomic",
          "Utilización de CyclicBarrier"
        ]
      },
      "requirements": [
        "Conveniente tener algún mínimo conocimiento de Java"
      ],
      "description": "La obtención de una certificación del fabricante que avale nuestros conocimientos en una materia o producto es, sin duda alguna, un elemento de valor en nuestro curriculum que puede ser determinante a la hora de conseguir un buen puesto de trabajo. El caso de Java no es una excepción y cada vez es más valorado por las empresas y departamentos de selección el hecho de que el aspirante a un puesto de trabajo posea la certificación de programador Java.\nHasta la versión 8, para obtener la certificación completa de Programador Java era necesario superar dos exámenes: Programador Asociado (OCA) y Programador Profesional (OCP). Desde la actualización de la certificación para la versión Java 11, los dos exámenes se han fusionado en un sólo: Oracle Desarrollador Profesional Java 11 Certificado. Actualmente, además de mantener la certificación para Java 11, disponemos también de los exámenes  Oracle Desarrollador Profesional Java 17 Certificado y  Oracle Desarrollador Profesional Java 21 certificado.\nEl hecho de los objetivos de ambos exámenes se hayan concentrado en uno sólo, supone un ahorro económico y de preparación, pero también hace que este único examen sea más difícil de superar que cualquiera de los anteriores, por lo que vas a necesitar una preparación intensa que te ayude a conseguir tu objetivo.\nY eso es precisamente lo que pretendo con este curso, prepararte a conciencia para que puedas superar cualquiera de los tres exámenes de certificación de Desarrador Profesional, el Java 11 1Z0-819, el Java 17 1Z0-829 y el Java 21 1Z0-830. Para ello, a lo largo de las más de 100 lecciones que componen el curso, analizaremos uno a uno todos los objetivos del examen, y resolveremos más de 120 preguntas tipo, muy similares a las que encontrarás en el examen real. Algunas incluso, idénticas a las que puedes encontrar en el examen. Además de estas preguntas tipo, muchas de las lecciones contienen preguntas de repaso de conceptos que tienen como objetivo resaltar aspectos clave que debes de tener en cuenta a la hora de resolver las cuestiones del examen\nPara realizar este curso tan solo necesitas tener conocimientos de programación y, deseable, algunas nociones de Java\n\n¿Quieres certificarte?, pues, ¡adelante!!",
      "target_audience": [
        "Programadores en general que quieran obtener la certificación Java para mejorar profesionalmente"
      ]
    },
    {
      "title": "Aprenda JAVASCRIPT em 7 Dias + Projetos Reais",
      "url": "https://www.udemy.com/course/aprenda-javascript-em-7-dias/",
      "bio": "Crie Aplicações Web, Interaja com o DOM, Consuma APIs e Desenvolva Projetos Reais para seu Portfólio",
      "objectives": [
        "Você irá aprender na prática a linguagem JavaScript, do zero!",
        "Pratique suas habilidades realizando os diversos projetos do curso",
        "Aprenda como funcionam as variáveis, if/else, operadores, lógica booleana, funções, arrays, objetos, loops, strings, e etc.",
        "Prepare-se para o mercado de trabalho entendendo como o JavaScript realmente funciona!",
        "Entenda como os desenvolvedores Javascript trabalham no dia a dia",
        "Aprenda tudo sobre POO (programação orientada a objetos) com JavaScript, trabalhando com protótipos e classes"
      ],
      "course_content": {
        "Iniciando": [
          "Introdução ao Curso de JavaScript",
          "Objetivo do curso",
          "Como aproveitar ao máximo este curso",
          "Arquivos do Curso"
        ],
        "Dia 1": [
          "Iniciando o dia 1",
          "O que e JavaScript",
          "Escolhendo a sua IDE",
          "Instalando o Node JS",
          "JavaScript no browser",
          "Os 3 Arquivos",
          "Preparando o Visual Code",
          "Testando o Webserver local",
          "Escrevendo o seu primeiro código",
          "As Variáveis",
          "Constantes",
          "Utilizando o ASI",
          "Os tipos primitivos",
          "JavaScript é dinamico",
          "Objetos",
          "Arrays",
          "Funções com tarefas",
          "Funções com calculos"
        ],
        "Dia 2": [
          "Iniciando o dia 2",
          "Operadores Aritméticos",
          "Operadores de Atribuição",
          "Operadores de comparação",
          "Operadores de igualdade",
          "Operadores ternarios",
          "Operadores logicos",
          "Operadores logicos com Strings",
          "Precedencia dos operadores",
          "If e Else",
          "Switch e Case",
          "For loop",
          "While Loop",
          "Do While loop",
          "For in loop",
          "For of loop",
          "Adicionando o break",
          "Desafio 1 - Expicando o desafio",
          "Desafio 1 - Criando os arquivos",
          "Desafio 1 - Concatenando com variaveis",
          "Desafio 1 - Alterando o CSS",
          "Quiz do dia 2"
        ],
        "Dia 3": [
          "Iniciando o dia 3",
          "Iniciando com Object Oriented Programming",
          "O que e um Objeto",
          "Criando um Objeto",
          "Funções dentro de um Objeto",
          "O que e Factory",
          "Criando uma Factory",
          "Adicionando propriedades",
          "Criando um Constructor",
          "Sobre o Garbage Collector",
          "Objetos Built in",
          "O String",
          "Utilizando Template Literals",
          "Desafio 2 - Explicando o desafio",
          "Desafio 2 - Criando os arquivos",
          "Desafio 2 -Adicionando um prompt",
          "Desafio 2 - Adicionando o IF Else"
        ],
        "Dia 4": [
          "Iniciando o dia 4",
          "O que sao Arrays",
          "Adicionando valores a uma Array",
          "Localizando itens em uma Array primitiva",
          "Localizando itens em uma Array de referencia",
          "Utilizando a Arrow Function",
          "Removendo itens da Array",
          "Esvaziando uma Array",
          "Concatenando uma Array",
          "Utilizando o Join Array",
          "Revertendo a sua Array",
          "Verificando elementos na Array",
          "Filtrando uma Array com o filter",
          "Projeto 1 - Construir uma Calculadora",
          "Projeto 1 - Os arquivos html e css",
          "Projeto 1 - Declarando as variaveis",
          "Projeto 1 - Adicionando o If e Else"
        ],
        "Dia 5": [
          "Iniciando o dia 5",
          "Inicando com as funções",
          "Hoisting",
          "Utilizando os Agumentos em funções",
          "Configurando parametros default",
          "Projeto 2 - Calculadora de Tip",
          "Projeto 2 - Download dos arquivos",
          "Projeto 2 - Criando a primeira funcao",
          "Projeto 2 - Criando as variaveis",
          "Projeto 2 - Realizando os calculos",
          "Projeto 2 - Retornando informacoes ao HTML",
          "Projeto 2 - Retornando o total",
          "Projeto 2 - Finalizando o projeto",
          "Projeto 2 - Corrigindo um problema"
        ],
        "Dia 6": [
          "Iniciando o dia 6",
          "Projeto 3 - Click a Color",
          "Projeto 3 - Download dos arquivos",
          "Projeto 3 - Declarando as variaveis",
          "Projeto 3 - Adicionando uma funcao ao botao",
          "Projeto 3 - Gerando uma cor randomica",
          "Projeto 3 - Trocando as cores com o botao",
          "Projeto 3 - Retornar ao HTML o nome da cor"
        ],
        "Dia 7": [
          "Iniciando o dia 7",
          "Projeto 4 - Iniciando o Projeto",
          "Projeto 4 - Download dos arquivos",
          "Projeto 4 - Gerando um numero randomico",
          "Projeto 4 - Armazenando os meus numeros em uma Array",
          "Projeto 4 - Adicionando IF e Else",
          "Projeto 4 - Esvaziando um campo",
          "Projeto 4 - Adicionando o numero de tentativas",
          "Projeto 4 - Adicionando o maximo de tentativas",
          "Projeto 4 - Finalizando o projeto"
        ],
        "Finalizando": [
          "Agradecimento :)",
          "BONUS"
        ]
      },
      "requirements": [
        "Nenhum conhecimento de programação é requerido"
      ],
      "description": "Aprenda JavaScript do Zero ao Avançado em Apenas 7 Dias – Desenvolva Projetos Reais e Entre no Mercado de Programação\nO JavaScript é a linguagem mais utilizada no mundo para desenvolvimento web e uma das habilidades mais requisitadas no mercado de tecnologia. Se você quer criar sites dinâmicos, sistemas interativos, jogos ou aplicações completas, dominar JavaScript é o primeiro passo.\n\n\nNeste curso intensivo e 100% prático, você vai aprender JavaScript do zero, mesmo que nunca tenha programado antes, e colocar a mão no código desde a primeira aula para criar projetos reais que podem ser incluídos no seu portfólio.\n\n\nO que você vai aprender\n\n\nFundamentos do JavaScript (variáveis, funções, condicionais, loops)\nManipulação do DOM para criar páginas interativas\nEventos, formulários e validações no JavaScript\nFunções avançadas, arrays, objetos e JSON\nProgramação orientada a objetos aplicada\nConsumo de APIs e integração com serviços externos\nProjeto final: aplicação completa com JavaScript\nBoas práticas de programação e organização de código\n\n\nPor que este curso é diferente\n\n\nAprendizado acelerado: domine JavaScript em apenas 7 dias\n100% prático: teoria aplicada diretamente em projetos reais\nLinguagem simples e didática para facilitar o aprendizado\nProjetos reais para enriquecer seu portfólio e aumentar chances de contratação\nAcesso vitalício para estudar no seu ritmo\nPara quem é este curso\n\n\nIniciantes que nunca programaram e querem aprender JavaScript\nEstudantes que querem entrar no mercado de desenvolvimento web\nProfissionais que desejam ampliar suas habilidades técnicas\nAutodidatas que querem criar projetos reais rapidamente\n\n\nAo final deste curso, você estará apto a desenvolver aplicações web interativas com JavaScript, pronto para continuar evoluindo como programador e se destacar no mercado.\n\n\nInscreva-se agora e aprenda JavaScript em apenas 7 dias com projetos reais.",
      "target_audience": [
        "Iniciantes em desenvolvimento que desejam aprender JavaScript do zero"
      ]
    },
    {
      "title": "Python でわかる オブジェクト指向 とはなにか？【Python オブジェクト指向 の「なぜ？」を「徹底的に」解説】",
      "url": "https://www.udemy.com/course/oop-python/",
      "bio": "あなたはオブジェクト指向、理解してますか？元塾講師プログラマが教える、Python オブジェクト指向 プログラミング（OOP）！Python 初心者が必ずつまづく、OOPの歴史+メリット+周辺技術+Python での実装方法を徹底的に解説！",
      "objectives": [
        "Pythonを使ってオブジェクト指向プログラミング（OOP）の概要と、OOPのための文法を学びます",
        "オブジェクト指向が誕生した歴史的な背景が理解できます",
        "オブジェクト指向で開発するメリットが理解できます",
        "クラス・インスタンスの使い方と、オブジェクト指向にどう活かされるのかが理解できます",
        "オブジェクト指向のアイデアを、開発に自在に使えるレベルになるために、この講座の後に学ぶべきことを知れます"
      ],
      "course_content": {
        "オブジェクト指向を学ぶ前に": [
          "講座の概要",
          "質問をする前に必ず読んでください",
          "プログラミング言語の歴史を知れば、オブジェクト指向がわかる",
          "プログラミング言語の誕生",
          "当時のソフトウェア開発の問題点①",
          "当時のソフトウェア開発の問題点②",
          "オブジェクト指向プログラミング（OOP）の誕生"
        ],
        "クラス": [
          "講座資料の準備",
          "資料が開けなかった場合",
          "クラス",
          "カプセル化",
          "インスタンスの生成",
          "コンストラクタ",
          "まとめ・ポイント",
          "演習問題①",
          "演習問題①解説",
          "Pythonはすべてがオブジェクト"
        ],
        "コラム：値渡しと参照渡し、オブジェクトはメモリをどう使うか？": [
          "オブジェクトの分類①：コンテナオブジェクト",
          "オブジェクトの分類②：ミュータブルとイミュータブル",
          "オブジェクトはメモリをどう使うのか？",
          "メモリの観点でコンテナオブジェクトを理解する",
          "メモリの観点でミュータブルを理解する",
          "メモリの観点でイミュータブルを理解する",
          "値渡しとは",
          "レクチャー「値渡しとは」の補足",
          "参照渡しとは",
          "参照渡しの問題点",
          "Pythonは値渡し",
          "リストはメモリをどう使うか？",
          "参照の値渡しとは",
          "参照渡しと参照の値渡しの違い",
          "おまけ：is演算子と==演算子の違い"
        ],
        "継承": [
          "継承",
          "継承（共通部分をまとめる）",
          "オーバーライド",
          "まとめ・ポイント",
          "演習問題②",
          "演習問題②解説",
          "デコレータ"
        ],
        "ポリモーフィズム": [
          "ポリモーフィズム",
          "抽象クラス・抽象メソッド",
          "まとめ・ポイント",
          "演習問題③",
          "演習問題③解説",
          "特殊メソッド"
        ],
        "オブジェクト指向プログラミングの周辺技術": [
          "OOPがもたらした再利用技術",
          "モジュール",
          "フレームワーク",
          "設計原則とデザインパターン"
        ],
        "結局のところ、オブジェクト指向とは何か？": [
          "データの抽象化とは",
          "OOPを使わないと発生する問題",
          "OOPでデータを抽象化する方法",
          "OOPを最大限活用するために"
        ],
        "ボーナス": [
          "さらなる上達のための学習コンテンツ"
        ]
      },
      "requirements": [
        "講座「Python から飛び込むプログラミングの世界【丁寧な解説+小さなシステム開発ゼミで、知識「ゼロ」から「使える」知識に】」レベルの、Pythonの基本的な文法知識"
      ],
      "description": "この講座は、オブジェクト指向についてよくわかっていないあなたが、\n「オブジェクト指向とはなにか？」を短時間で理解するための講座です。\n\n\n\n\nあなたは、オブジェクト指向を理解できていますか？\n\n\nオブジェクト指向とは、ソフトウェア開発における考え方のひとつで、\nプログラミング言語の入門書では、かなり最後の方に登場するものです。\nオブジェクト指向は、現代のソフトウェア開発においてきわめて重要な概念であり、\nオブジェクト指向を理解せずにすぐれたソフトウェアを開発することは、もはや不可能である\nと言っても過言ではないでしょう。\n\n\nですが実際のところ、オブジェクト指向についてあまりわかっていない、という方もとても多いです。\nそれもそのはずで、オブジェクト指向はソフトウェア開発の総合技術であり、\n開発で実際に活用できるようになるまでには、数多くのことを学ばなければいけません。\nであるにもかかわらず、プログラミングの入門書の中では、\nページ数や著者の解説力などの制約から、オブジェクト指向はおまけ程度に扱われることが多く、\nオブジェクト指向という、ひと筋縄ではいかない概念を理解するのには、\nまったく足りない量の説明しかされないことも多いのです。\n\n\nそのため、クラスやインスタンスという機能についてはなんとなくわかったけれど、\n結局それらが何に役立つのか？いつ使えば良いのか？については、まったくわからない、、、\nという方も多いのではないでしょうか？なにを隠そう、以前の私がまさにそうでした（汗）\n\n\nそんな方が「オブジェクト指向とはなにか？」をやさしく理解できる講座を作りたい。\n\n\nこの想いから、本講座は作成されました。\n\n\n\n\n本講座では、オブジェクト指向について理解するために、次の3つの工夫を凝らしました。\n①エンジニアでなくても使える言語、Pythonのコードを使用\n②オブジェクト指向誕生までの歴史を知って、必要性を理解する\n③「なるほど！」「わかった！」へ導く、とことん噛み砕いた丁寧な解説\n\n\n①エンジニアでなくても使える言語、Pythonのコードを使用\n本講座では、オブジェクト指向についてPythonのコードを使って学んでいきます。\n他のオブジェクト指向の教材では、わかりやすく解説しようとして、\nソフトウェア開発とはまったく関係のないたとえ話を用いた結果、\nむしろわかりづらくなってしまっているものも多いです。\nなので本講座では、Pythonのコードで解説をすることで、曖昧なたとえ話ではなく、\n実際のコードで概念を理解することができるようにしています。\n\n\nまたPythonは現在、エンジニア以外にも広く使われており、\nPythonからプログラミングを始めた方も多くなっています。\nですが一方で、オブジェクト指向をPythonで学べる教材はほとんど存在しません。\nですので本講座では、Pythonを使用することで、\nPythonからプログラミングをはじめた方でも、わかりやすく学ぶことができるようにしています。\nPythonの実行環境には、Google Colaboratoryを使用するので、\nめんどうな環境構築は一切不要で、すぐに学習をはじめることができます。\n\n\nさらに本講座では、オブジェクト指向の周辺知識として、\nオブジェクトはメモリをどう使うか\n引数の値渡しと参照渡し\nデコレータ\n特殊メソッド\nといった内容についても紹介していきます。\nこれらはすべて、プログラミング中級者にステップアップするためには必須の知識ですので、\nオブジェクト指向と合わせて習得していきましょう。\n\n\n②オブジェクト指向誕生までの歴史を知って、必要性を理解する\nなにごともそうですが、それが誕生した背景を知ると理解が深まります。\n特にオブジェクト指向の学習においては、プログラミング言語の進化の歴史を知ることが欠かせません。\n当時あったソフトウェア開発の問題を解決するために普及したのが、オブジェクト指向だからです。\n\n\nですので本講座では、まず初めにオブジェクト指向誕生までの歴史について学んでいきます。\n歴史を学ぶことでオブジェクト指向が、当時あった問題を解決するために、\n必然性をもって誕生した技術であることが理解できるかと思います。\n\n\nオブジェクト指向の学習における、大きなハードルの一つは、\n「必要性がわかりづらい」ということだと思います。\n本講座でオブジェクト指向誕生までの歴史を知れば、\nオブジェクト指向の必要性をすっきりと理解できるようになるでしょう。\n\n\n③「なるほど！」「わかった！」へ導く、とことん噛み砕いた丁寧な解説\n本講座中のすべての動画では、とことん噛み砕いた丁寧な解説をすることを心がけました。\n\n\n具体的には、\n講座全体をバラバラの要素の集まりではなく、1つのストーリーとして理解できるようにする\n知識を1つずつ積み上げていくような、ボトムアップの解説\n同じ機能をさまざまな観点から捉えなおすことで多角的な理解をうながす\nといった点を意識して、資料と動画を作成しています。\n\n\nこのような工夫によって、講座中では「なるほど！」「そういうことだったのか！」という\n深い理解に到達する瞬間がきっとあるはずです。\nオブジェクト指向は一度理解してしまえば、それほどむずかしい概念ではありません。\n本講座で深い理解を得て、今後のより発展的な学習をスムーズに進められるようにしましょう。\n\n\n\n\nこれら3つの工夫で、あなたにとって、今までまったくわからないものだったオブジェクト指向を、\n「今すぐに開発に使えと言われたら無理だけど、オブジェクト指向がどういうものであるかはわかった！」\nと思えるレベルまで連れて行くのがこの講座の目標です。\n\n\nオブジェクト指向は現代のソフトウェア開発において、必ず習得すべき知識です。\nオブジェクト指向を理解していないエンジニアの書いたコードは、\n変更に弱く、他のエンジニアにとっても、わかりづらいものになってしまいます。\n\n\nわからないものをわからないままにしておくのではなく、\nあなたもこの講座で、オブジェクト指向について学んでみませんか？",
      "target_audience": [
        "オブジェクト指向の必要性・メリットがいまいちピンとこない方",
        "クラス・インスタンスなどの文法を学習したが、使い所がわからなかった方",
        "「Pythonはすべてがオブジェクトである」と言われても意味がわからない人",
        "「オブジェクト指向の三大要素の意味をそれぞれ説明して」と言われたら解答に困ってしまう方",
        "講座「Python から飛び込むプログラミングの世界【丁寧な解説+小さなシステム開発ゼミで、知識「ゼロ」から「使える」知識に】」を受講された方"
      ]
    },
    {
      "title": "Programando en C# - De Principiante a Profesional",
      "url": "https://www.udemy.com/course/programando-en-csharp-de-principiante-a-profesional/",
      "bio": "Aprende C# viendo videos, contestando preguntas y resolviendo problemas",
      "objectives": [
        "Aprender a desarrollar programas con C#",
        "Utilizar clases para centralizar datos y comportamiento",
        "Conectarse a una base de datos y ejecutar procedimientos almacenados desde C#",
        "Características nuevas de versiones recientes de C#"
      ],
      "course_content": {
        "Introducción": [
          "Introducción y bienvenida",
          "¿Qué es .NET?",
          "¿Qué es C#?",
          "Visual Studio y Visual Studio Code",
          "Instalando Visual Studio",
          "Instalando Visual Studio Code",
          "Creando una App de Consola con Visual Studio",
          "Creando una App de Consola con Visual Studio Code y el dotnet CLI",
          "La Estructura de Nuestra Solución",
          "Preguntas",
          "Resumen",
          "Ejercicios - Explicación",
          "Repositorio del Curso"
        ],
        "Variables": [
          "Introducción",
          "Creando el Proyecto",
          "Sentencias de Alto Nivel",
          "Sentencias de Alto Nivel",
          "Sintaxis Básica de C#",
          "Sintaxis Básica de C#",
          "¿Dónde Encontrar el Código del Curso?",
          "Introducción a las Variables - Números Enteros",
          "Introducción a las Variables - Números Enteros",
          "Ejercicio: Números Enteros",
          "Otros Tipos de Dato de Números Enteros",
          "Otros Tipos de Dato de Números Enteros",
          "Números Reales o Punto-Flotantes",
          "Números Reales o Punto-Flotantes",
          "Booleanos",
          "char y strings - Secuencias de Escape",
          "Ejercicio: Escapando un String",
          "Strings Verbatim",
          "Literales de Cadena Sin Procesar - Raw String Literals",
          "Introducción a DateTime",
          "Ejercicio: Introducción a DateTime",
          "Nombres de Variables",
          "Variables Implícitamente Tipadas",
          "Valores por Defecto",
          "Nulo - Tipos de Valor y Tipos de Referencia",
          "Nulo - Tipos de Valor y Tipos de Referencia",
          "Nulificables - Tipos de Referencia no Nulos",
          "Nulificables - Tipos de Referencia no Nulos",
          "Operaciones Binarias",
          "Otras Operaciones Binarias",
          "Otras Operaciones Binarias",
          "Ejercicio: Otras Operaciones Binarias",
          "Operaciones Binarias y Aproximaciones",
          "Overflow Aritmético",
          "Overflow Aritmético",
          "Interpolación de Strings",
          "Operaciones Unarias",
          "Operaciones Unarias",
          "Expresiones void",
          "Expresiones void",
          "Operaciones de Asignación",
          "Orden de Precedencia de las Operaciones - Legibilidad",
          "Orden de Precedencia de las Operaciones - Legibilidad",
          "Constantes y Valores Mágicos",
          "Advertencias y Errores",
          "Resumen"
        ],
        "Decisiones e Iteraciones": [
          "Introducción",
          "Creando la App del Módulo",
          "Lógica Booleana",
          "Lógica Booleana",
          "Operadores Condicionales Booleanos",
          "Operadores Condicionales Booleanos",
          "Condicional if",
          "Ejercicio: ¿Cuál es el número más grande?",
          "Operador Ternario",
          "Ejercicio: ¿Cuál es el número más grande? (Parte 2)",
          "Sentencia Switch",
          "Sentencia Switch",
          "Patrones Relacionales",
          "Patrones Lógicos",
          "Expresiones Switch y Discard",
          "Interpolación de Strings con Varias Líneas",
          "Bucle while",
          "Bucle do-while",
          "Bucle for",
          "Bucle foreach",
          "Bucles",
          "Ejercicio: FizzBuzz",
          "Sentencias de Saltos - Break y Continue",
          "Bucles Infinitos",
          "Resumen"
        ],
        "Más Acerca de Tipos de Datos": [
          "Introducción",
          "Creando la App",
          "ToString",
          "Parse y TryParse",
          "ToString y Parse",
          "Casteos",
          "Casteos",
          "Enums",
          "Introducción a los Arreglos",
          "Ejercicio: Número Mayor",
          "Expresiones de Colecciones",
          "Índices",
          "Índices",
          "Rangos",
          "Rangos",
          "Arreglos Multidimensionales",
          "Arreglo de Arreglos",
          "Manipulando Strings",
          "Resumen"
        ],
        "Funciones": [
          "Introducción",
          "Creando la App",
          "Declarando Funciones",
          "Ejercicio: Declarando Funciones",
          "Alcance de las Variables",
          "Alcance de las Variables",
          "Parámetros",
          "Ejercicio: Función con un Parámetro",
          "Parámetros Opcionales",
          "Parámetros Opcionales",
          "Arreglos como Parámetros",
          "Pasando Tipos de Referencia",
          "Parámetros out",
          "Ejercicio: Min, Max y Promedio",
          "Tuplas",
          "Tuplas",
          "Funciones Locales",
          "Expresiones Lambda",
          "Ejercicio: Expresión lambda de una línea",
          "Action",
          "Func",
          "Predicados",
          "Delegados",
          "Delegados",
          "Funciones Anónimas",
          "Ejercicio: Funciones Anónimas",
          "Función Main",
          "Resumen"
        ],
        "Clases, Structs y Records": [
          "Introducción",
          "Creando la App",
          "Clases y Campos",
          "Clases y Campos",
          "Ejercicio: Clases y Campos",
          "Propiedades",
          "Propiedades",
          "Ejercicio: Propiedades",
          "Usando field para ahorrar código",
          "Métodos",
          "Ejercicio: ¿Es la persona mayor de edad?",
          "Constructores",
          "Constructores",
          "Ejercicio: Constructores",
          "Constructores Primarios",
          "Clases como Valores de Salida",
          "Deconstructores",
          "Clases y Miembros Estáticos",
          "Clases y Miembros Estáticos",
          "Ejercicio: Clases y Miembros Estáticos",
          "Métodos de Extensión",
          "Métodos de Extensión",
          "Miembros de Extensión",
          "Patrones de Propiedad",
          "Tipos Anónimos",
          "Namespaces y la Directiva using",
          "Namespaces y la Directiva using",
          "Using's Implícitos y Globales",
          "Clases Parciales",
          "Structs",
          "¿Cuándo usar clases o structs?",
          "Igualdad - Clases y Structs",
          "Igualdad - Clases y Structs",
          "Introducción a los Records",
          "Introducción a los Records",
          "Creando un Record",
          "Records Posicionales",
          "Records Posicionales",
          "Clonando Records - Mutación no Destructiva",
          "Clonando Records - Mutación no Destructiva",
          "Propiedades Inmutables en Clases con Init",
          "Propiedades Inmutables en Clases con Init",
          "Miembros Requeridos",
          "El operador de Elvis (.?)",
          "El operador de Elvis (.?)",
          "Asignación condicional nula",
          "El Operador de Coalescencia Nula (??)",
          "El Operador de Coalescencia Nula (??)",
          "Perdonando el Nulo y nameof",
          "Resumen"
        ],
        "Programación Orientada a Objetos": [
          "Introducción",
          "¿Qué es la Programación Orientada a Objetos?",
          "Creando la App",
          "Introducción a la Herencia",
          "Introducción a la Herencia",
          "Sobrescribiendo Métodos: Virtual",
          "Sobrescribiendo Métodos: Virtual",
          "Clases Abstractas",
          "Clases Abstractas",
          "Sellando Clases con Sealed",
          "Sellando Clases con Sealed",
          "Constructor en la Clase Base",
          "La Clase Base de Todas las Clases: Object",
          "La Clase Base de Todas las Clases: Object",
          "Casteando a Object",
          "Límites de Herencia",
          "Límites de Herencia",
          "Herencia con Records",
          "Herencia con Structs",
          "Introducción a los Modificadores de Acceso",
          "Public",
          "Private",
          "Internal",
          "Protected",
          "Protected Internal",
          "Private Protected",
          "El modificador de acceso file",
          "Introducción a los Modificadores de Acceso",
          "Introducción a las Interfaces",
          "Introducción a las Interfaces",
          "Nuestra Primera Interfaz",
          "Nuestra Primera Interfaz",
          "Polimorfismo Con Interfaces",
          "Polimorfismo Con Interfaces",
          "Compartiendo Código de una Manera Flexible",
          "Introducción a la Inyección de Dependencias",
          "Introducción a la Inyección de Dependencias",
          "Inyección por el Constructor",
          "Contenedor de Inversión de Controles",
          "Contenedor de Inversión de Controles",
          "Implementaciones por Defecto en Interfaces",
          "Implementaciones por Defecto en Interfaces",
          "Sobrecarga de Operadores",
          "Igualdad de Structs",
          "Igualdad de Clases",
          "Resumen"
        ],
        "Debugging y Manejo de Errores": [
          "Introducción",
          "Creando la App",
          "Debug WriteLine",
          "Mensajes de Log con Tracepoints",
          "Mensajes de Log con Tracepoints",
          "Breakpoint Normal",
          "Breakpoint Temporal",
          "Breakpoint Condicional",
          "Breakpoint Dependiente",
          "Breakpoints",
          "Valores de Variables",
          "Ventana Inmediata",
          "Ventana Call Stack",
          "Lanzando Excepciones",
          "Atrapando Excepciones con try-catch",
          "Bloque finally",
          "Excepciones y try-catch-finally",
          "Excepciones por Defecto",
          "Excepciones Personalizadas",
          "Filtros de Excepción",
          "Relanzando Excepciones",
          "Relanzando Excepciones",
          "Resumen"
        ],
        "Genéricos y Colecciones": [
          "Introducción",
          "Creando la App",
          "Introducción a los Genéricos",
          "Introducción a los Genéricos",
          "Restricciones a los Genéricos",
          "Restricciones a los Genéricos",
          "Colecciones - Listado",
          "Colecciones - Listado",
          "Colecciones Como Parámetros",
          "Diccionarios",
          "Diccionarios",
          "GetHashCode",
          "IEnumerable",
          "yield y Ejecución Diferida",
          "yield y Bucles Infinitos",
          "IEnumerable y yield",
          "Comparaciones Personalizadas con IComparable y IComparer",
          "Resumen"
        ],
        "Introducción a LINQ": [
          "Introducción",
          "Creando la App",
          "¿Qué es LINQ?",
          "¿Qué es LINQ?",
          "Ejecución Diferida",
          "Filtrando con la Función Where",
          "Filtrando con la Función Where",
          "First y FirstOrDefault",
          "First y FirstOrDefault",
          "Ordenando con OrderBy",
          "Ordenando con OrderBy",
          "Proyectando con Select",
          "Proyectando con Select",
          "Haciendo Productos Cartesianos con SelectMany",
          "Funciones Escalares: Conteo, Sumar, Mínimo, Máximo y Promedio",
          "Funciones Escalares: Conteo, Sumar, Mínimo, Máximo y Promedio",
          "MinBy y MaxBy",
          "Cuantificadores Universales: All, Any y Contains",
          "Cuantificadores Universales: All, Any y Contains",
          "Take y Skip",
          "Take y Skip",
          "Agrupando con GroupBy",
          "Eliminando Repetidos con Distinct y DistinctBy",
          "Función Chunk",
          "Resumen"
        ]
      },
      "requirements": [
        "No se necesita mucha experiencia de desarrollo, ya que empezaremos por lo más básico (como qué es una variable) y por ahí seguimos."
      ],
      "description": "Vamos a aprender C#. Este lenguaje de programación es bastante popular, porque nos permite programar para distintos tipos de ambiente: escritorio, web, móvil, juegos, inteligencia articial, internet de las cosas, entre otros.\nSin embargo, para poder llegar a desarrollar aplicaciones efectivas con C#, es importante conocer sus fundamentos. En este curso vas a aprender las características más importantes de este lenguaje.\nIremos desde lo básico a lo avanzado, por lo que es un curso idóneo para personas que recién comienzan, o, si eres una persona con experiencia y que busca actualizarse, este curso también es para ti.\nNo se aprende mucho simplemente viendo al otro, por eso en este curso he incluido preguntas y problemas opcionales, que te ayudarán a poner en práctica lo aprendido. Descuida si no sabes como resolver uno de los problemas, pues te doy acceso a todas las soluciones de todos los problemas planteados.\nAlgunos de los temas que veremos:\n- Cómo declarar e inicializar variables\n- Tipos de datos\n- Sintaxis básica de C#\n- Cómo trabajar con números (int, double, decimal, float, entre otros)\n- Cómo trabajar con el tipo de dato string\n- Cómo trabajar con DateTime para el manejo de fechas\n- Tipos de valor y tipos de referencia\n- Tipos de referencia no nulificables\n- Expresiones y operaciones\n- Decisiones (usando if, el operador ternario y switch)\n- Bucles (usando while, do-while, for y foreach)\n- Sentencias de salto y bucles infinitos\n- Cómo transformar de un tipo de dato a otro con casteos\n- Cómo trabajar con arreglos, índices y rangos\n- Declarar tus propias funciones, usando parámetros y tipo de dato de salida\n- Usar tuplas para devolver varios valores de una función\n- Expresiones lambda y funciones anónimas\n- Utilizar clases, structs y records\n- Introducción a la programación orientada a objetos\n- Manejo de errores y debugging\n- Accediendo a archivos usando C#\n- Accediento a una base de datos desde una app de C# (incluido trabajar con procedimientos almacenados)\n- Uso de LINQ para trabajar con colecciones\n- Uso de concurrrencia para manejar programación asíncrona y paralelismo\n- Nuevas características del lenguaje C# a medida que vayan saliendo\nEstos son solo algunos de los temas que veremos.",
      "target_audience": [
        "Principiantes del desarrollo que quieran aprender C#",
        "Personas con conocimiento de C# que quieran actualizar sus conocimientos"
      ]
    },
    {
      "title": "Java Programmieren für Anfänger - Der Ultimative Java Kurs",
      "url": "https://www.udemy.com/course/java-programmieren-fur-anfanger-der-ultimative-java-kurs/",
      "bio": "Deine Investition in die Zukunft! Lerne Java Programmieren anhand von leichtverständlichen Beispielen in wenigen Stunden",
      "objectives": [
        "100+ Lektionen und 10 Quizes",
        "Über 11 Stunden mit hochqualitativem Inhalt",
        "Du wirst in der Lage sein Deine eigenen Programme zu entwickeln",
        "30 Tage Rückgaberecht!",
        "Du bekommst die Grundlagen die Du brauchst um für Android zu entwickeln",
        "Du lernst die perfekte Grundlage um andere Programmiersprachen sehr leicht zu lernen."
      ],
      "course_content": {
        "Einführung": [
          "Was Du in diesem Kurs lernst",
          "WICHTIG - Wie du das meiste aus dem Kurs holst",
          "Was ist Java und wozu ist es gut?",
          "Ein Java Programm kompilieren."
        ],
        "Los geht's": [
          "Herunterladen und Installieren des JDK (Java Development Kit)",
          "Wichtiger Hinweis!",
          "Herunterladen und Installieren von Eclipse",
          "Kurze Einleitung zu Eclipse und Hello World! Der erste Code"
        ],
        "Datentypen und Variablen": [
          "Einführung in Datentypen",
          "Datentypen primitiv und String",
          "Namensgebung von Variablen",
          "Variablen Deklarieren",
          "Variablen einen Wert zuweisen",
          "Parsen",
          "Typecasting",
          "Übungsaufgabe - Variablen Anlegen und Werte zuordnen",
          "Lösung zur Übungsaufgabe - Variablen Anlegen und Werte zuordnen",
          "Übungsaufgabe zu Datentypen und Variablen",
          "Lösung zur Übungsaufgabe zu Datentypen und Variablen",
          "Datentypen und Variablen"
        ],
        "Methoden": [
          "Die erste eigene Methode",
          "Void Methoden (ohne Rückgabe)",
          "Methoden mit mehreren Parametern",
          "Übungsaufgabe - zwei Methoden erstellen",
          "Lösung zur Übungsaufgabe - zwei Methoden erstellen",
          "Static",
          "Quiz zu Methoden"
        ],
        "Java input (Eingabe) und output (Ausgabe)": [
          "Eingabe via Scanner - String",
          "Eingabe via Scanner - double",
          "Ausgabe mit print, println und tabs",
          "Ausgabe mit printf",
          "Übungsaufgaben zu input und ouptut - Simpler Zinsrechner",
          "Lösung zur Übungsaufgabe - Simpler Zinsrechner",
          "Quiz zu Input und Ouput"
        ],
        "Einführung in Klassen und Objekte": [
          "Klassen und Objekte",
          "Unsere erste eigene Klasse",
          "Erstellung eines Konstruktors",
          "Setter und Getter",
          "Mehrere Konstruktoren",
          "Die Math Klasse",
          "Zufallsgenerator Random",
          "Verwendung von this",
          "Zugriffsmodifikatoren - public, private, protected, default",
          "Zugriffsmodifikatoren",
          "Übungsaufgabe zu Klassen und Objekten",
          "Lösung zur Übungsaufgabe zu Klassen und Objekten",
          "Quiz zu Klassen"
        ],
        "Entscheidungen treffen": [
          "Relative und Logische Operatoren",
          "If Abfragen (falls)",
          "Die if-else if Aussage",
          "Verschachtelte if-else Aussage",
          "Switch Case mit Int",
          "Switch Case mit String",
          "Übungsaufgabe zu If und Else-if - Textlänge",
          "Lösung zur Übungsaufgabe zu Entscheidungen",
          "Quiz zu Entscheidungen"
        ],
        "Schleifen (Loops)": [
          "While Schleife",
          "Zustandsgesteuerte While Schleife",
          "Do While Schleife",
          "For Schleife",
          "break und continue",
          "Übungsaufgabe zu Schleifen - Zähler",
          "Lösung zur Übungsaufgabe - Zähler",
          "Quiz zu Schleifen"
        ],
        "Arrays / Felder": [
          "Einen Array erstellen",
          "Auf Arrayelemente zugreifen und die For Each Schleife",
          "Arrays als Parameter",
          "Zweidimensionale Arrays",
          "Übungsaufgabe zu Arrays",
          "Lösung zur Übungsaufgabe zu Arrays",
          "Quiz zu Arrays"
        ],
        "Arraylisten": [
          "Eine Arrayliste Deklarieren und Inizialisieren",
          "Informationen einer Arrayliste hinzufügen",
          "Arraylisten durchsuchen",
          "Auf Elemente einer Arrayliste zugreifen",
          "Arraylisten als Parameter verwenden",
          "Arraylisten Sortieren",
          "Übungsaufgabe zu Arraylisten",
          "Lösung zur Übungsaufgabe zu Arraylisten",
          "Quiz zu Arraylisten"
        ]
      },
      "requirements": [
        "PC oder Mac",
        "Generelles Verständnis vom Umgang mit dem Computer"
      ],
      "description": "Lerne die Grundlagen, Werkzeuge und Funktionen die Du brauchen wirst um voll funktionsfähige Programme mit der populären Programmiersprache Java zu erstellen.\n\nBilde eine starke Grundlage in Java und Objekt-Orientierter Programmierung mit diesem Tutorial für Anfänger\nInstallation des Java Development Kits\nDatentypen und Operatoren\nObjekt- Orientierte Programmierung (OOP), Klassen und Objekte\nSchleifen und Bedingungen\nDiese Mächtige Fähigkeit direkt an deinen Fingerspitzen\nDurch das Lernen der Grundlagen von Java bekommst Du eine neues Mächtiges Werkzeug. Java ist kostenlos und leicht zu lernen, es hat eine umfangreiche Dokumentation und ist die Basis aller Objekt Orientierten Programmiersprachen.\nEs gibt viele freie Positionen im Bereich der Java Entwicklung. Außerdem wird Dir die Fähigkeit Java programmieren zu können extrem dabei helfen andere Objekt Orientiere Programmiersprachen so wie C++, C#, Ruby und Pascal in sehr kurzer Zeit zu erlernen.\nInhalt und Übersicht\nPerfekt für die ersten Schritte in der Programmierung, wirst du in diesem Kurs in 85 Lektionen und 8 Stunden Inhalt wirst Du alle Grundlagen der Java Entwicklung lernen und dadurch ein starkes Verständnis der Konzepte der Objekt Orientierten Programmierung lernen. Jedes Kapitel wird mit einer Übungsaufgabe abgeschlossen, sodass Du deine neu erlernten Fähigkeiten direkt anwenden kannst.\nWir beginnen mit der Installation des Java Development Kit, danach führe ich Dich durch die Datentypen und Variablen und zeige Dir wie sie funktionieren. Danach wirst Du mit Hilfe von Klassen und Objekten ein hohes Verständnis der Objekt Orientierten Programmierung erhalten.\n\nSobald diese Grundlagen gemeistert sind, wird dich dieser Kurs dich durch weitere wichtige Bestandteile der Java Programmierung führen. Dabei wirst du lernen wie du die verschiedenen Schleifen-arten verwenden kannst und sehen wie man ein Programm entwickeln kann, das Entscheidungen trifft. Du lernst dadurch auch komplexere Programme zu schreiben.\n\nKursteilnehmer die den Kurs fertigstellen, werden ein umfangreiches Wissen in Java entwickeln, sodass sie eigene nützliche Java Programme entwickeln können.\nVollende den Kurs mit zusätzlichen Übungsaufgaben, Codebeispielen und Quizes, die es Dir noch leichter machen dein gelerntes Wissen zu festigen.\n\nSollte Dir der Kurs nicht gefallen, hast Du 30 Tage um die Kosten komplett erstattet zu bekommen.",
      "target_audience": [
        "Jeder der Programmieren lernen will",
        "Jeder der mit Java Programmierung anfangen will",
        "Jeder der die nötigen Grundlagen fürs Android Apps programmieren braucht"
      ]
    },
    {
      "title": "Python - Полный Курс по Python, Django, Data Science и ML",
      "url": "https://www.udemy.com/course/python-ru/",
      "bio": "Изучите самый популярный язык программирования Python, включая Django, Pygame, Jupyter, Data Science и Machine Learning",
      "objectives": [
        "Вы узнаете основные принципы работы Python и изучите все основные функции, которые используются в реальных проектах чаще всего и востребованные больше всех",
        "Вы будете выполнять на практике все примеры, которые я буду показывать на протяжении курса, используя интерпретатор Python, Visual Studio Code с Code Runner",
        "Вы освоите все необходимые внешние пакеты для Data Science и Machine Learning, такие как NumPy, Pandas, Matplotlib и Scikit-learn с помощью Jupyter Notebook",
        "Вы изучите основной функционал Python, начиная от переменных, списков, словарей и заканчивая классами, циклами, модулями и созданием виртуальных сред",
        "Кроме того, вы научитесь использовать функциональный и объектно-ориентированный подходы в программировании на языке Python"
      ],
      "course_content": {
        "Введение в Python": [
          "Введение в курс Python",
          "Присоединяйтесь к сообществу единомышленников!",
          "Как проходить курс",
          "Где выполнять и писать код Python",
          "Установка Python"
        ],
        "Установка и настройка редактора Visual Studio Code": [
          "Установка редактора кода VS Code",
          "Начало работы в VS Code",
          "Изменение настроек редактора VS Code",
          "Знакомство с интерпретатором Python",
          "Выполнения кода в Visual Studio Code"
        ],
        "Установка PyCharm": [
          "Установка и использование PyCharm"
        ],
        "Основные концепции в Python": [
          "Самое важное в Python",
          "Основные типы в Python",
          "Практика в интерактивном интерпретаторе Python"
        ],
        "Встроенные функции в Python": [
          "Встроенные функции",
          "Функция dir и атрибуты объектов",
          "Практика - Встроенные функции print и dir",
          "Практика - Встроенная функция input и методы строк"
        ],
        "Форматирование кода и PEP8": [
          "Отступы в Python",
          "ВАЖНО - Настройка форматирования с autopep8",
          "Форматирование кода Python и PEP8",
          "Комментарии в Python"
        ],
        "Введение в функции": [
          "Практика - Объявление функции, параметры и аргументы",
          "Практика - Ключевое слово return в функциях",
          "Практика - Резюме по основам функций"
        ],
        "Выражения и инструкции": [
          "Выражения",
          "Инструкции"
        ],
        "Переменные": [
          "Переменные",
          "Объявление переменных и присвоение им значений"
        ],
        "Типы и структуры данных": [
          "Динамическая типизация",
          "Типы и структуры данных",
          "Переменные и объекты",
          "Встроенная функция id",
          "Практика - Встроенная функция id и объекты"
        ]
      },
      "requirements": [
        "Предварительных требований нет, все что от вас требуется - желание учиться и практиковаться",
        "Желательно учиться на ноутбуке с внешним монитором, можно также использовать планшет"
      ],
      "description": "Python - это самый простой язык программирования в мире. Но в то же время, Python является мощным инструментом, с помощью которого можно решать огромный спектр различных задач, начиная от обработки файлов, и заканчивая машинным обучением, обработкой данных, созданием игр и созданием веб приложений.\nТем самым, выучив Python, вы можете выбирать профессию из большого спектра вакансий, либо же использовать Python для создания собственных приложений и решения собственных задач.\nЭтот курс включает много практических задач, а также задачи для самостоятельного выполнения.\nPython - это объектно-ориентированный язык программирования.\nPython - это также язык с огромным количеством функций, но для того чтобы УМЕТЬ писать код на Python, нужно ПОНИМАТЬ ключевые концепции Python. И именно на этом я и сконцентрируюсь вместе с вами в этом курсе.\nПрежде чем писать код и запускать примеры, вы получите от меня объяснения и ответы на вопросы ЗАЧЕМ и ПОЧЕМУ, а уже только после этого КАК писать код.\nЯ не буду тратить ваше время и потому я создал максимально эффективную структуру курса. Все примеры, которые я буду объяснять и запускать, написаны мною до курса, но вы будете самостоятельно писать и запускать код.\nДлительность всех видео-лекций в этом курсе более 45 часов, но рассчитывайте потратить около 300 часов для освоения всех тем курса, включая самостоятельное выполнение всех практических заданий.\n\n\nТемы, которые мы рассмотрим в этом курсе:\n\n\nВведение в курс Python\nГде выполнять и писать код Python\nУстановка Python\nУстановка редактора кода VS Code\nНачало работы в VS Code\nИзменение настроек редактора VS Code\nЗнакомство с интерпретатором Python\nВыполнения кода в Visual Studio Code\nСамое важное в Python\nОсновные типы в Python\nПрактика в интерактивном интерпретаторе Python\nВстроенные функции\nФункция dir и атрибуты объектов\nПрактика - Встроенные функции print и dir\nПрактика - Встроенная функция input и методы строк\nОтступы в Python\nФорматирование кода Python и PEP8\nКомментарии в Python\nВыражения\nИнструкции\nПеременные\nОбъявление переменных и присвоение им значений\nДинамическая типизация\nТипы и структуры данных\nПеременные и объекты\nВстроенная функция id\nПрактика - Встроенная функция id и объекты\nСтроки - str\nПрактика - Строки\nВстроенные функции и методы строк\nПрактика - Методы строк\nЦелые числа - int\nПрактика - Целые числа\nЧисла с десятичной точкой - float\nКомплексные числа - complex\nЛогический тип - bool\nПрактика - Логический тип\nКонвертация типов\nПрактика - Введение в магические методы\nМагические методы\nСписки - list\nМетоды списков\nРазные операции со списками\nКопирование списков\nПрактика - Списки\nСловари - dict\nИзменение и удаление значений в словарях\nИспользование переменных в словарях\nДлина словаря\nНесуществующие ключи и метод get\nРезюме по словарям\nПрактика - словари\nПрактика - Копирование словаря\nПрактика - Конвертация других значений в словарь\nЗадача - Словари\nКортежи - tuple\nМетоды кортежей\nПрактика - Кортежи\nНаборы - set\nПрактика - Проверка неупорядоченности наборов\nИзменяемые объекты в наборах\nПрактика - Наборы\nМетоды наборов\nПрактика - Методы наборов\nПрактика - Симметричная разница в наборах\nДиапазоны - range\nПрактика - Диапазоны\nСравнение типов последовательностей\nВстроенная функция zip\nКонвертация zip в dict\nИзменение объектов в Python\nПоведение изменяемых объектов\nКак избежать изменения копий\nПрактика - Создание поверхностных и полных копий\nФункции\nСамая корткая функция и pass\nПередача неизменяемых объектов в функцию\nПередача изменяемых объектов в функцию\nКак избежать изменения внешних объектов в функции\nАргументы функций\nОбъединение всех аргументов в кортеж в функции\nАргументы с ключевыми словами\nОбъединение именованых аргументов в словарь\nЗначения параметров функции по умолчанию\nПрактика - Значения параметров по умолчанию\nКолбэк функции\nПрактика - Колбэк функции\nПравила работы с функциями\nДокументация функции docstring\nОбласти видимости\nЖизненный цикл переменных\nКлючевое слово global в функциях\nПрактика - Глобальные и локальные переменные\nОператоры\nОператоры и магические методы\nФункция dir\nБинарные и унарные операторы\nОператоры in, not in\nПриоритетность операторов\nЛожные значения\nЛогические операторы\nОператоры короткого замыкания or и and\nПрактика - Логические операторы\nОператор распаковки словаря\nОбъединение словарей\nИнструкция del\nСоединение строк\nФорматирование строк с f-strings\nПрактика - Соединение строк с помощью +\nПрактика - f-strings\nЛямбда функции\nПрактика - Лямбда функции\nОбработка ошибок\nПолучение информации об ошибке\nРазные типы ошибок в разных блоках except\nБлоки else и finally в обработке ошибок\nОтсутствие типа ошибки и класс Exception\nСоздание ошибок\nРаспаковка списков и кортежей\nРаспаковка словаря в именованые аргументы\nРаспаковка списка в позиционные аргументы\nУсловные инструкции\nИнструкция if\nИнструкция if else\nИнструкция if elif\nИспользование if в функциях\nТернарный оператор\nПрактика - Тернарный оператор\nЦиклы\nЦикл for in\nПрактика - цикл for in\nИтерация по ключам с значениями в словаре\nЦикл for in для наборов\nВстроенная функция filter\nЦикл while\nИспользование continue в циклах\nСокращенный цикл for in\nПримеры с сокращенным циклом for in\nПрактика - сокращенный цикл for in\nГенераторы в сокращенном for in\nПрактика - генераторы\nОбъекты и классы\nПрактика - Создание экземпляров класса\nМагический метод классов __init__\nПрактика - Объекты с собственными атрибутами\nМетоды и экземпляры классов\nСтатические методы классов\nАтрибуты класса\nМагические методы в классах\nНаследование из других классов\nПрактика - Создание подклассов\nМодули\nПрактика - Модули\nЧто такое __main__ и __name__\nВстроенные модули\nСоздание пакетов\nJSON\nКонвертация JSON в словарь\nПрактика - JSON\nРабота с файлами\nМетоды класса Path\nПрактика - Работа с путями к файлам и директориям\nЧтение и запись файлов\nПрактика - Запись и чтение файлов\nПрактика - Удаление файлов\nСоздание zip архива\nПрактика - Распаковка zip архива\nРабота с CSV файлами\nПрактика - Чтение из CSV файлов\nМодуль datetime\nПрактика - Форматирование дат\nИспользование класса timedelta\nМодуль time\nМодуль random\nМодуль secrets для генерации паролей\nМодуль math\nРекурсивные функции\nМодуль для регулярных выражений re\nСохранение паттерна в отдельном объекте\nПроверка email с помощью регулярного выражения\nОтправка email с помощью модуля smtplib\nКомпоновка и отправка email\nHTML шаблоны для отправки email\nОтправка вложений в email\nМодуль SQLite3 и создание базы данных\nПрактика - Запись данных в таблицу SQLite\nПрактика - Чтение данных из таблицы SQLite\nМодуль array\nАргументы функции и модуль sys\nМодуль webbrowser\nМенеджер пакетов PIP\nВиртуальные среды и Pipenv\nСоздание виртуальной среды\nФайлы Pipfile и Pipfile.lock\nИспользование пакетов в виртуальной среде\nИнсталяция дополнительных пакетов в виртуальной среде\nДерево пакетов и обновление пакетов\nОбзор проекта Django\nВведение в Django и паттерн MVC\nУстановка Django\nСоздание нового проекта Django\nЗапуск сервера Django\nВыбор виртуальной среды в VS Code\nФайлы проекта Django\nОбзор настроек проекта Django\nНастройки WSGI и ASGI\nОстальные настройки проекта Django\nНастройки роутинга в проекте Django\nСоздание приложения Django\nРазница между проектом и приложениями\nОбзор файлов приложения\nСоздание функции вида\nПривязка функции вида к маршруту\nДобавление маршрутов приложения к маршрутам проекта\nПроверка доступности приложения в веб интерфейсе\nПрименение миграций для базы данных\nСоздание аккаунта администратора\nСоздание моделей\nИзменение списка установленных приложений\nСоздание миграций\nПрименение созданных миграций\nИзменение моделей\nСоздание категории с помощью модели\nСоздание курсов в категории\nПодключение моделей в панели администратора\nДобавление магического метода __str__ в модели\nОтображение названий курсов на веб странице\nСоздание HTML шаблона\nИспользование данных из базы данных в шаблоне\nСвязь между слоями в приложениях Django\nПодключение библиотеки стилей Bootstrap\nСоздание базового HTML шаблона\nДобавление общего навигационного блока\nДобавление маршрута для одного курса\nСоздание функции вида для страницы курса\nСоздание шаблона для страницы курса\nПроверка страницы отдельного курса\nОтображение страницы 404 если курса нет в базе\nНастройка роутинга между страницами\nРоутинг с использованием имен маршрутов\nРоутинг с использований имен приложений и маршрутов\nПеренос шаблонов в общую папку\nПодведение итогов по приложению Shop\nСоздание приложения api\nСоздание моделей для приложения api\nНастройка роутинга для приложения api\nПроверка работы сервиса API\nДобавление версии API\nУстановка программы Postman\nНастройка аутентификации и авторизации для API\nСоздание API ключа\nУдаление курса через API\nСоздание нового курса с помощью POST\nИзменение данных перед отправкой клиентам через API\nПодведение итогов по приложению api\nРефакторинг приложения api\nПеренос магазина на главную страницу\nИзменение панели администратора\nПодведение итогов по всему проекту Django\nВведение в Pygame\nЗапуск игры и события в Pygame\nИзменение цвета фона в игре\nДобавление прямоугольника в игре\nПеремещение прямоугольника кнопками на клавиатуре\nПеремещение прямоугольника только в рамках экрана\nПодведение итогов по игре с прямоугольником\nДемонстрация игры типа shooter\nДобавление корабля на экран\nПеремещение корабля влево и вправо\nНепрерывное перемещение корабля при нажатой клавише\nДобавление шарика на экране\nПеремещение и скрытие шарика\nОтображение инопланетянина в игре\nДобавление проигрыша в игре\nПопадание шарика в инопланетянина\nУскорение движения инопланетянина\nДобавления счетчика попаданий\nПодведение итогов по созданию игры\nВведение в Data Science и Machine Learning\nУстановка и запуск Jupyter Notebook\nЗнакомство с Jupyter Notebook\nИспользование переменных в Jupyter\nИмпорт из встроенных модулей в Jupyter\nУстановка внешних модулей в Jupyter\nИспользование внешних модулей в Jupyter\nУстановка Jupyter Lab\nЗнакомство с Jupyter Lab\nДобавление оглавления и разметка\nУправление файлами, консоль и терминал в Jupyter Lab\nТекстовые файлы и подсказки в Jupyter Lab\nОбзор Anaconda\nВведение в NumPy\nСоздание одномерных массивов в NumPy\nФорма, размерность и тип данных в NumPy\nДвухмерные массивы в NumPy\nОси в массивах NumPy\nСлияние массивов NumPy\nСоединение одномерных массивов\nЗаполнение массива нулями и единицами\nМодуль random для массивов NumPy\nПсевдо случайные числа\nМетоды randint, uniform и choice\nМетоды arange и reshape\nМетод flatten для трансформации в одномерный массив\nОдномерные массивы в NumPy - Примеры 1, 2\nОдномерные массивы в NumPy - Примеры 3, 4\nДвухмерные массивы в NumPy - Пример 5\nДвухмерные массивы в NumPy - Пример 6\nТрехмерные массивы в NumPy - Пример 7\nРезюме секции по NumPy\nОбзор Pandas и создание DataFrame\nОбзор DataFrame в Pandas\nМетод describe для DataFrame в Pandas\nВыбор колонок по типу данных\nОтсутствующие значения и метод isna\nКонвертация строк в даты\nПодведение итогов по DataFrame\nSeries в Pandas\nОперации с Series в Pandas\nВыборка столбцов и рядов в DataFrame с помощью loc и iloc\nФильтрация в DataFrame\nФильтрация с помощью метода isin\nСортировка в DataFrame\nПодведение итогов по фильтрации и сортировке DataFrames\nДобавление и изменение данных в DataFrame\nСлияние DataFrames\nУдаление колонок и рядов в DataFrame\nПодведение итогов по слиянию и изменению DataFrames\nГенерация случайных данных для DataFrame\nСохранение DataFrame в CSV файле\nСоздание DataFrame из CSV файла\nСохранение DataFrame в Excel и JSON файлах\nАнализ и группирование данных, загруженных из CSV файла\nОтображение диаграмм с помощью Matplotlib\nПодведение итогов по проекту с данными из CSV файла\nПодведение итогов по пакету Pandas\nВведение в Matplotlib и базовые диаграммы\nПримеры plot диаграмм - line, bar, area, pie\nПример гистограммы\nПример диаграммы boxplot\nПример диаграммы heatmap\nРезюме по примерам диаграмм\nЗагрузка данных из CSV файла для визуализации\nОтображение реальных данных на диаграммах\nДиаграммы для транспонированного DataFrame\nПодведение итогов по визуализации реальных данных из CSV файла\nПодведение итогов по Matplotlib и Seaborn\nВведение в Scikit-learn и обзор данных для создания модели\nПланирование шагов по построению модели\nЭтап очистки данных перед построением модели\nПопытка создания модели\nЭтап кодирования с помощью метода replace\nЗамена значений на цифровые с помощью LabelEncoder\nСоздание модели после очистки и кодирования данных\nПредсказание целевых значений с помощью модели\nРазбиение данных на части для обучения и тестирования модели\nОценка точности построенной модели\nЭкспорт модели в .dot файл для визуализации процесса принятия решений\nОтображение диаграмм на основании данных для модели\nПодведение итогов по созданию модели\nЗагрузка большого реального набора данных для построения модели\nЗагрузка данных из большого CSV файла и базовый анализ\nОчистка данных после загрузки\nОтображение диаграмм на этапе анализа данных\nКодирование данных перед созданием модели\nОтображение дополнительных диаграмм\nФильтрация данных на этапе анализа\nСоздание модели с помощью DecisionTreeClassifier\nОценка точности модели, построенной с помощью DecisionTreeClassifier\nСоздание моделей с помощью RandomForestClassifier, KNeighborsClassifier и LogisticRegression\nИтоги по построению моделей и планы для изменения данных\nПостроение модели без отзывов пассажиров\nТестирование модели на основании вручную созданных данных\nПодведение итогов по модели без отзывов пассажиров\nСохранение модели в файле и загрузка из файла\nПодведение итогов по примеру с пассажирами\n\n\nСписок задач для самостоятельного выполнения\n\n\nЗАДАЧА - Запись и чтение файлов\nЗАДАЧА - JSON\nЗАДАЧА - Классы и экземпляры\nЗАДАЧА - Наборы\nЗАДАЧА - Обработка ошибок\nЗАДАЧА - Операторы\nЗАДАЧА - Проверка пароля\nЗАДАЧА - Словари\nЗАДАЧА - Условные инструкции\nЗАДАЧА - Функции\nЗАДАЧА - Цикл while\nЗАДАЧИ - Именованые аргументы функций\nЗАДАЧИ - Сокращенный цикл for in\nЗАДАЧИ - Списки\nЗАДАЧИ - Тернарный оператор\nЗАДАЧИ - Цикл for in\nЗАДАЧИ - Сокращенный цикл for in\nЗАДАЧА - Классы и экземпляры\nЗАДАЧА - JSON\nЗАДАЧА - Запись и чтение файлов\nЗАДАЧА - Проверка пароля\nПосле прохождения этого курса вы смело сможете сказать, что ЗНАЕТЕ Python и УМЕЕТЕ пользоваться самыми востребованными функциями Python.",
      "target_audience": [
        "Начинающие программисты Python, желающие научиться программировать",
        "Планирующие работать в направлении Data Science и Machine Learning",
        "Веб разработчики, которые хотят создавать веб приложения с помощью Python",
        "Желающие выполнять задачи, связанные с машинным обучением, обработкой данных",
        "Разработчики игр, которые хотят создавать игры с помощью Python Pygame"
      ]
    },
    {
      "title": "Introducción a la programación (+90 ejercicios propuestos)",
      "url": "https://www.udemy.com/course/introduccion-a-la-programacion-90-ejercicios-propuestos/",
      "bio": "Aprende desde 0 conceptos básicos de programación con más de 90 ejercicios para el alumno, 30 resueltos y exámenes.",
      "objectives": [
        "Entender, analizar y diseñar algoritmos para solucionar problemas."
      ],
      "course_content": {
        "Errores comunes de los que quieren aprender programación": [
          "Errores comunes de los que quieren aprender programación"
        ],
        "Introducción": [
          "Introducción al curso",
          "Algoritmos",
          "Introducción a la programación",
          "Instalación de PSEint",
          "Las variables",
          "Comentarios",
          "Leer y mostrar",
          "Operadores matemáticos",
          "Precedencia aritmética",
          "Funciones matemáticas",
          "Ejercicios 1 .- Área del triángulo",
          "Ejercicio 2 .- Círculo y circunferencia",
          "Ejercicio 3 .- Interés Simples",
          "Ejercicio 4 .- Promedio",
          "Ejercicio 5 .- Distancia entre puntos",
          "Examen del módulo introductorio"
        ],
        "Condicionales y operadores lógicos": [
          "Expresiones booleanas",
          "Operadores lógicos y de comparación",
          "Condicional simple",
          "Condicional simple anidada",
          "Condicional múltiple",
          "Ejercicio 1 .- Número par o impar",
          "Ejercicio 2 .- Positivo, negativo o neutro",
          "Ejercicio 3 .- Estacionamiento",
          "Ejercicio 4 .- Menú de operaciones matemáticas",
          "Ejercicio 5 .- Oferta de venta",
          "Ejercicio 6 .- Verificando fecha",
          "Ejercicio 7 .- Oferta del supermercado",
          "Ejercicio 8 .- IMECA",
          "Ejercicio 9 .- Pulsaciones por minuto",
          "Ejercicio 10 .- Trabajadores de una empresa",
          "Examen sobre condicionales"
        ],
        "Estructuras repetitivas": [
          "Mientras",
          "Hasta que",
          "Para",
          "Ejercicio 1 .- Número de digitos",
          "Ejercicio 2 .- Sumatoria",
          "Ejercicio 3 .- Menor valor",
          "Ejercicio 4 .- Suma de N números",
          "Ejercicio 5 .- Número primo",
          "Ejercicio 6 .- Tabla de multiplicar",
          "Ejercicio 7 .- Mostrar cubos",
          "Ejercicio 8 .- Números positivos, negativos y neutros",
          "Ejercicio 9 .- Promedio de notas",
          "Ejercicio 10 .- Simular reloj digital",
          "Examen de estructuras repetitivas"
        ],
        "Arreglos unidimensionales": [
          "Teoría de arreglos unidimensionales",
          "Ejercicio 1 .- Leer y mostrar",
          "Ejercicio 2 .- Ingresar al final",
          "Ejercicio 3 .- Eliminar por posición",
          "Ejercicio 4 .- Insertar por posición",
          "Ejercicio 5 .- Sin elementos repetidos",
          "Examen de arreglos unidimensionales"
        ],
        "Matrices": [
          "Teoría sobre Matrices - Arreglos bidimensionales",
          "Ejercicio 1 .- Leer y mostrar matrices",
          "Ejercicio 2 .- Suma de matrices",
          "Ejercicio 3 .- Suma de filas",
          "Ejercicio 4 .- Suma de columnas",
          "Ejercicio 5 .- Rotar una matriz 90°",
          "Examen de matrices"
        ],
        "Funciones": [
          "Teoría de funciones",
          "Paso por referencia",
          "Modularización",
          "Trabajando con arreglos y matrices",
          "Ejercicio: Números amigos",
          "Despedida",
          "Examen de funciones"
        ]
      },
      "requirements": [
        "Muchas ganas de aprender.",
        "Tiempo para resolver los ejercicios."
      ],
      "description": "Aprende desde 0 los conceptos básicos de la programación en este curso de 9 horas totalmente práctico.\nContiene:\nMaterial escrito.\n30 ejercicios resueltos por el profesor.\n95 ejercicios para que el alumno los desarrolle.\n35 preguntas teóricas para reforzar los conceptos.\nSi no sabías por donde empezar en el mundo de la programación, este curso es para ti.",
      "target_audience": [
        "Cualquiera que desee tener las bases de la programación para poder migrar fácilmente a cualquier lenguaje."
      ]
    },
    {
      "title": "跟著商管女孩一起學 Python",
      "url": "https://www.udemy.com/course/ccclub-python-for-beginners/",
      "bio": "讓 Python 成為你的第二外語",
      "objectives": [
        "可以瞭解程式設計背後的邏輯",
        "可以閱讀簡易的 Python 程式",
        "對於未來想學習資料分析或使用 Python 建網站有很大的幫助"
      ],
      "course_content": {
        "BEFORE WE START": [
          "課程目標",
          "課程介紹",
          "Python 是什麼？",
          "在 Windows 環境安裝 Python 及 Jupyter Notebook",
          "在 Mac OS 環境安裝 Python 及 Jupyter Notebook",
          "其他學習資源"
        ],
        "PYTHON BASICS": [
          "輸入及輸出",
          "作業1-1：輸出兩次",
          "作業1-2：輸出順序對調",
          "變數",
          "作業2-1：數字及字串和",
          "作業2-2：偶數",
          "字串",
          "作業3-1：字串長度",
          "作業3-2：大小寫",
          "作業3-3：重複輸出",
          "作業3-4：自己回文",
          "物件"
        ],
        "PYTHON LISTS and LOOPS": [
          "條件判斷",
          "作業4-1：密碼強度",
          "作業4-2：及格分數",
          "作業4-3：三角形",
          "作業4-4：直角三角形",
          "串列",
          "作業5-1：翻箱倒櫃",
          "迴圈",
          "作業6-1：因數",
          "作業6-2：完全平方數",
          "作業6-3：母音種類個數",
          "作業6-4：數字和",
          "更多迴圈",
          "作業7-1：長方星",
          "作業7-2：加減長方形"
        ],
        "FUNCTION and RECURSION": [
          "函式",
          "作業8-1：乘積最大值",
          "作業8-2：最長字串",
          "作業8-3：及格門檻",
          "作業8-4：最大公因數",
          "排序",
          "作業9-1：數字總和排序",
          "作業9-2：字串反轉排序",
          "遞迴",
          "作業10-1：階乘",
          "作業10-2：自訂費式數列"
        ],
        "MORE IMPORTANT THINGS IN PYTHON": [
          "字典",
          "作業11-1：平方字典",
          "作業11-2：字串字典",
          "檔案處理",
          "作業12-1：成績",
          "作業12-2：我是誰",
          "例外處理",
          "模組",
          "其他學習資源"
        ],
        "綜合練習": [
          "綜合練習1-1 [難度★★]：Three Sum",
          "綜合練習1-2 [難度★★★]：一奇多偶",
          "綜合練習1-3 [難度★★★]：字母數（ㄕㄨˇ）數（ㄕㄨˋ）",
          "綜合練習1-4 [難度★★★]：括號合法",
          "綜合練習2-1 [難度★★★]：費氏數列",
          "綜合練習2-2 [難度★★★]：字母加權排序",
          "綜合練習2-3 [難度★★★★]：計算機",
          "綜合練習2-4 [難度★★★★★]：計算機 again",
          "綜合練習2-5 [難度★★★★★]：計算機 again & again",
          "綜合練習2-6 [難度★★★★★]：合法括號窮舉",
          "綜合練習3-1 [難度★★★]：同屬一家親",
          "綜合練習3-2 [難度★★★★]：最佳攻擊手",
          "綜合練習3-3 [難度★★★★★]：輕鬆虐菜",
          "綜合練習3-4 [難度★★★★★]：全員6v6"
        ]
      },
      "requirements": [
        "國中數學以上的能力",
        "無需具備程式設計基礎"
      ],
      "description": "Python 具有簡單易學、功能強大的特色，比起其他程式語言，更適合作為初學者學習的第一個程式語言。\n此課程會用非常易懂、生活化的方式帶大家認識 Python。\n我們強調「做中學」的概念，讓同學們在實作習題的過程中學寫程式，並學習到拆解問題背後的思考模式。",
      "target_audience": [
        "想要接觸程式語言的非資工本科系的學生或上班族",
        "想要初探程式語言的高中生"
      ]
    },
    {
      "title": "Python Dilini Öğrenin: Sıfırdan İleri Düzey",
      "url": "https://www.udemy.com/course/bilgisayar-ogretmeninden-hzlandrlms-python3-kursu/",
      "bio": "Sıfırdan anlayarak Python Öğrenen !",
      "objectives": [
        "Python ile Uygulamalar Yazabilecekler.",
        "Kaliteli Kod Yazımı Üzerine Yetkinleşecekler",
        "İngilizce Kaynak Yerine Türkçe Kaynaklarla, Konuları anlayarak Öğrenecekler",
        "Python ve Veri Çekme Konusu üzerine Yetkinleşecekler",
        "Kurstan Sonra Öğrendikleri ile kendileri Projeler Oluşturabilecek.",
        "Programlamaya Sağlam Bir Giriş Yapacaklar.."
      ],
      "course_content": {
        "Giriş": [
          "Python Nedir ?",
          "Python Kurulumu",
          "Visual Studio Code Kurulumu"
        ],
        "Veri Tipleri": [
          "Matematiksel İşlemler",
          "String Veri Tipi / Sözel İfadeler",
          "String ve İnt İşlemler / Metinsel ve Sayısal işlemler birlikte",
          "Karakter Dizileri / Print() Fonksiyonu / Format() ve F Mantığı",
          "İnput() Kullanıcıdan Veri Alma",
          "Kodlama Egzersizi / Ortalama Hesaplama Uygulaması",
          "Listeler []",
          "Demetler ()"
        ],
        "Operatörler": [
          "Atama Operatörleri",
          "Karşılaştırma Operatörleri",
          "Mantıksal Operatörler"
        ],
        "Koşul Durumları": [
          "İf ve Else Koşulu",
          "Elif Koşulu",
          "Kodlama Egzersizi / Ortalama Hesaplama Uygulaması",
          "Uygulama / Korona Virüs Uygulaması"
        ],
        "Döngüler": [
          "While Döngüleri",
          "Kodlama Egzersizi / Kullanıcı Giriş Uygulaması",
          "For Döngüleri",
          "Kodlama Egzersizi / Kullanıcı Giriş Uygulaması / For Döngüleri",
          "Kodlama Egzersizi / Kelimelerin İlk Harfini Bulma"
        ],
        "Fonksiyonlar": [
          "Fonksiyonlara Giriş",
          "Fonksiyonlar Parametre Kullanımı",
          "Kodlama Egzersizi / Günlük Su Tüketim Algoritması",
          "Return Komutu",
          "Varsayılan Değerler",
          "Global ve Yerel Değişkenler"
        ],
        "Sözlükler": [
          "Sözlük oluşturma",
          "Sözlükler Devam / Get() Metodu",
          "Sözlüklere Veri Ekleme/Veri Silme",
          "Telefon Rehberi Uygulaması / 1. Bölüm",
          "Telefon Rehberi Uygulaması / 2. Bölüm"
        ],
        "Modüller": [
          "Modül Kavramı",
          "Random() Modülü",
          "Datetime() Modülü",
          "Çekiliş Uygulaması / 1. Bölüm",
          "Çekiliş Uygulaması / 2. Bölüm",
          "Uygulama / Şifre Korumalı Uygulama Yazma"
        ],
        "Hata Yakalama": [
          "Try ve Except Kavramları",
          "Finally Kavramı ve Örnek"
        ],
        "Dosya İşlemleri": [
          "Dosyalara Giriş",
          "Dosyalar Read()/Readline()/Readlines() ve Türkçe Karakter Sorununu Aşma",
          "Dosyalar R+ Veriler Üzerine Manipülasyon",
          "Kodlama Egzersizi / Dosya Not Defteri"
        ]
      },
      "requirements": [
        "Bilgisayar Kullanmayı Bilmek",
        "İnternet Bağlantısı",
        "Sabır ve Merak"
      ],
      "description": "Python dili, günümüzde çok popüler olan ve birçok alanda kullanılan bir programlama dilidir. Bu dil, yalın ve anlaşılır yapısı nedeniyle öğrenmesi kolaydır ve öğretimi de öğretici bir şekildedir.\nTuncay Erol, yazılım öğretmenliği mesleğini icra etmektedir ve bu dilde uzmanlaşmıştır. Siz de Tuncay Erol'un uzmanlığından yararlanarak Python dili ile ilgili öğrenmek istediğiniz her şeyi öğrenebilirsiniz. Kurs, yalın bir dil kullanılarak anlaşılır bir şekilde anlatılmıştır ve öğrenme sürecini kolaylaştıracak çok sayıda örnek uygulama bulunmaktadır.\nEğer Python dilini öğrenmek istiyorsanız ve bu dil ile ilgili kaliteli bir eğitim almak istiyorsanız, Tuncay Erol'un verdiği bu kurs tam size göre! Bu fırsatı kaçırmayın ve hemen kaydolun.\n\n\nKurs İçeriği\n\n\nGiriş ve Python üzerine bilgiler\nGerekli uygulamaların indirilmesi\nDerleyici seçme\nVERİ TİPLERİ\nOPERATÖRLER\nKOŞUL DURUMLARI\nDÖNGÜLER\nFONKSİYONLAR\nSÖZLÜKLER\nMODÜLLER\nHATA YAKALAMA\nDOSYA İŞLEMLERİ\nVERİ TABANI İŞLEMLERİ\nKendi veresiye defterinizi ya da basit işlemleri tutan Veritabanı sistemleri oluşturabileceksiniz\nNESNE TABANLI PROGRAMLAMA\nHTML DERSLERİ\nTemel HTML mantığını Öğreneceksiniz\nYOUTUBE'DEN VİDEO VE SES İNDİRME\nBu kısımda öğrendiğimiz konularla beraber oluşturduğumuz uygulamayı ömür boyu kullanacak ve artık Youtube üzerinden video ve ses indirirken zorluk çekmeyeceksiniz.\nWEB SİTELERİNDNE VERİ ÇEKME\nGünlük olarak web sitelerinden veriler çekeceksiniz ve bunların hepsini tek tık ile kendi kodlamalarınız ile yapacaksınız. Haberleri, borsayı, hava durumunu aklınıza gelebilecek her şeyi internet üzerinden çekeceksiniz.\nWEB SİTELERİNE OTOMATİK İŞLEMLER\nBu kısımda Selenium Modülü ile bir web sitesine otomatik giriş yapacağız.\nGerekli yerleri tıklayacağız ve akabinde ekran görüntüleri alacağız\nDilersek verileri indirip işleyebileceğiz.\n\n\nMerhabalar ben Tuncay Erol, Yönetim Bilişim Sistemleri Lisans bölümü mezunu, Marmara Üniversitesi Pedagojik Formasyon sahibi Bilişim Teknolojileri Öğretmeniyim. Uzmanlık alanlarım Java, Html, Css, Js, Wordpress ve bununla beraber bir çok web yazılım dilidir. Seo makale konusunda 5 yılı aşkınlık bir tecrübem var. Sizlere bilgi birikimimi paylaşmaktan onur duyarım. Ücretli ve Ücretsiz kurslarım için beni takip edin.",
      "target_audience": [
        "Python'a Merakı Olan Her Yaştan Öğrenciye Uygundur.",
        "Lise ve Üniversite Öğrencileri",
        "Liselerde Çalışan BÖTE(Bilişim Teknolojileri) öğretmenleri"
      ]
    },
    {
      "title": "Python Profissional: do zero ao mercado de trabalho!",
      "url": "https://www.udemy.com/course/python-profissional/",
      "bio": "Aprenda Python. Fundamentos, Intermediário, Orientação a Objetos, Programação Funcional e Banco de Dados e Arquivos",
      "objectives": [
        "Você saberá por quê é importante aprender a programar e qual a vantagem de utilizar a linguagem Python.",
        "Você saberá criar programas profissionais com a linguagem Python.",
        "Você aprenderá toda a base da linguagem Python necessária para entrar no mercado de trabalho.",
        "Com essa base, você poderá partir para temas mais avançados, como: Ciência de Dados, Inteligência Artificial, Programação de Jogos, Web e outras áreas."
      ],
      "course_content": {
        "Trilha 1: Fundamentos - Módulo 1: Apresentação": [
          "Apresentação do Curso: Python Profissional",
          "Por quê aprender programação?",
          "Por quê aprender Python?",
          "Comparação entre Python e outras Linguagens.",
          "Quem sou eu?"
        ],
        "Trilha 1: Fundamentos - Módulo 2: Preparação do Ambiente": [
          "Esclarecimentos a respeito das versões do Python e do Pycharm",
          "A Instalação do Python",
          "A Escolha de uma IDE",
          "Instalação do PyCharm no Windows, Linux e MacOS",
          "Programação em Python utilizando o Navegador",
          "Programação Python utilizando um APP (no celular)."
        ],
        "Trilha 1: Fundamentos - Módulo 3: Introdução a Linguagem Python": [
          "História da Linguagem Python",
          "Zen do Python",
          "PEP 8",
          "Funções dir() e help()",
          "Primeiros comandos em Python: print e input",
          "Resposta do primeiro desafio",
          "Identificadores e Palavras Reservadas",
          "Comentários em Linguagem Python",
          "Primeiros comandos em Linguagem Python - usando uma IDE"
        ],
        "Trilha 1: Fundamentos - Módulo 4: Variáveis e Tipos de Dados": [
          "O que é uma variável?",
          "O que é uma constante?",
          "Tipo de Dados em Python: INTEIRO",
          "Tipo de Dados em Python: FLOAT e COMPLEX",
          "Tipo de Dados em Python: BOOLEAN",
          "Tipo de Dados em Python: STRING",
          "Escopo e Conversão de Variáveis",
          "Desafio deste Módulo"
        ],
        "Trilha 1: Fundamentos - Módulo 5: Estruturas Lógicas e Condicionais": [
          "O que é uma expressão matemática?",
          "O que é uma expressão lógica?",
          "Estrutura Condicional",
          "Comando elif",
          "Aninhamento de IFs",
          "Desafio deste módulo",
          "Resposta do desafio deste módulo"
        ],
        "Trilha 1: Fundamentos - Módulo 6: Estruturas de Repetição": [
          "O que são estruturas de repetição?",
          "Estruturas de repetição: comando for",
          "Estruturas de repetição: comando while",
          "Estruturas de repetição: comandos break e continue",
          "Desafio deste módulo",
          "Resposta do desafio deste módulo"
        ],
        "Trilha 1: Fundamentos - Módulo 7: Coleções": [
          "Listas",
          "Tuplas",
          "Dicionários",
          "Conjuntos",
          "Desafio deste módulo",
          "Resposta do desafio deste módulo."
        ],
        "Trilha 1: Fundamentos - Módulo 8: Funções": [
          "O que é uma Função?",
          "Função sem retorno",
          "Função com retorno",
          "Função com parâmetro",
          "Função com parâmetro padrão",
          "Documentação de Funções: DocString",
          "Argumentos *args e **kwargs",
          "Desafio deste módulo"
        ],
        "Trilha 2: Intermediário - Módulo 1: Debugando Erros": [
          "O que são erros em Python e quais os principais?",
          "A Função raise()",
          "Bloco Try/Except",
          "Bloco Try/Except/Else/Finally",
          "Debugando com IDE e PDB (Python DeBug)",
          "Desafio deste módulo"
        ],
        "Trilha 2: Intermediário - Módulo 2: Trabalhando com Módulos e Pacotes": [
          "O que são Módulos?",
          "O módulo \"random\"",
          "Módulos Built-in",
          "Módulos e Pacotes de Terceiros",
          "Módulos Customizados",
          "Métodos __main__ e __name__"
        ]
      },
      "requirements": [
        "Não é necessário ter experiência em programação. Você aprenderá tudo que precisa aqui neste curso. Basta seguir as orientações e fazer os exercícios propostos.",
        "É recomendado que o curso seja realizado a partir de um computador pessoal (desktop ou notebook). Os vídeos podem ser vistos por qualquer dispositivo. Mas os exercícios são realizados utilizando as IDEs que rodam apenas em computadores pessoais (desktop ou notebooks).",
        "É necessário ter as versões mais atualizadas de seus sistemas operacionais (Windows, Linux ou MacOS).",
        "É necessário ter conexão com a internet para baixar os softwares necessários e o privilégio de administração da máquina para poder instalar os softwares adequadamente."
      ],
      "description": "A demanda por programadores nunca esteve tão alta. Python é hoje a linguagem mais utilizadas no mundo!\nÉ uma linguagem de programação versátil, simples de aprender e muito poderosa.\nÉ uma das poucas linguagens Full Stack (diversas atividades no desenvolvimento Web, como front-end e back-end), Multiplataforma (pode ser utilizada em múltiplos Sistemas Operacional, tais como Windows, Linux e MacOS) e Multiparadigma (Estruturado, Orientado a Objetos, Funcional e Orientado a Eventos).\nPython é a linguagem mais utilizada em aplicações de Ciência de Dados e Inteligência Artificial.\nNeste curso do projeto \"pyPRO - seja um profissional Python\", trazemos até você o que tem de mais moderno no ensino de programação e no ensino da linguagem Python, voltado para o que é realmente utilizado no mercado de trabalho. Este curso forma a base estrutural do profissional que almeja uma carreira na área de Programação de Computadores, especificamente na linguagem Python.\nSão mais de 30 horas (total de 170 aulas) de conteúdo (direto ao ponto, sem enrolação!!), do básico ao que realmente é necessário para entrar no mercado de trabalho, com explicações claras e detalhadas, passo-a-passo, na versão Python 3.10.\nDividimos este curso em 5 trilhas de aprendizagem: (1) Fundamentos, (2) Intermediário, (3) Orientação a Objetos, (4) Programação Funcional e (5) Banco de Dados e Arquivos. Em cada uma dessas trilhas, dividimos o conteúdo em módulos, estrategicamente posicionados, para que seu aprendizado seja o mais linear e amplo possível.\nAo final dos cinco últimos módulos na trilha de FUNDAMENTOS, disponibilizamos uma lista de exercícios, com suas respectivas resoluções, para que você possa reforçar os conceitos e seu aprendizado. São 70 exercícios de programação para você treinar e consolidar os conceitos básicos da linguagem Python.\nNo final, disponibilizamos um módulo adicional, com 2 projetos para que você possa resolver e disponibilizá-los em seu GIT, aumentando assim sua chance de contratação na área de programação.\nNão deixe essa oportunidade passar. Sua chance de aprender Python chegou!\n\n\nESTRUTURA COMPLETA DO CURSO...\nTRILHA 1: FUNDAMENTOS\nMódulo 01 - Apresentação\nMódulo 02 - Preparação do Ambiente\nMódulo 03 - Introdução a Linguagem Python\nMódulo 04 - Variáveis e Tipos de Dados\nMódulo 05 - Estruturas Lógicas e Condicionais\nMódulo 06 - Estruturas de Repetição\nMódulo 07 - Coleções\nMódulo 08 – Funções\nTRILHA 2: INTERMEDIÁRIO\nMódulo 01 - Debugando Erros\nMódulo 02 - Trabalhando com Módulos e Pacotes\nMódulo 03 - Comprehension em Python\nMódulo 04 - Leitura e Escrita em Arquivos\nMódulo 05 - Trabalhando com Data e Hora\nMódulo 06 - Isolamento de Ambientes\nTRILHA 3: ORIENTAÇÃO A OBJETOS\nMódulo 01 - Introdução a Orientação a Objetos\nMódulo 02 - Herança e Polimorfismo\nMódulo 03 - Orientação a Objetos Avançada (aplicada)\nTRILHA 4: PROGRAMAÇÃO FUNCIONAL\nMódulo 01 - Introdução a Programação Funcional\nMódulo 02 - Funções Integradas\nMódulo 03 - Iteradores e Geradores\nMódulo 04 - Decoradores em Python\nTRILHA 5: BANCO DE DADOS E ARQUIVOS\nMódulo 01 - Introdução a Banco de Dados\nMódulo 02 - Noções Básicas de SQL\nMódulo 03 - Banco de Dados Relacionais com Python\nMódulo 04 - Banco de Dados No-SQL com Python\nMódulo 05 - Dados em Arquivos JSON e CSV\nADICIONAL: PROJETOS\nProjeto 1 -\nProjeto 2 -",
      "target_audience": [
        "Pessoas que querem entrar no mercado de trabalho na área de programação de computadores.",
        "Pessoas de outras áreas que querem aprender os fundamentos da programação Python para aplicá-los em suas áreas específicas.",
        "Profissionais da área de programação que não conhecem ainda a linguagem Python.",
        "Profissionais da área de programação que conhecem Python mas querem se aprofundar, principalmente em relação a Programação Orientada a Objetos, Programação Funcional e acesso a Bancos de Dados Relacionais e Não-Relacionais.",
        "Profissionais que desejam ter uma base sólida em programação Python para atuar em áreas como: Ciência de Dados, Inteligência Artificial, Programação para Web, Programação de Games, IoT, Programação Mobile entre outas."
      ]
    },
    {
      "title": "正規表現講座",
      "url": "https://www.udemy.com/course/cnxxtupw/",
      "bio": "無数のプログラミング言語にまたがる共通テクニック、正規表現をゼロから学習",
      "objectives": [
        "様々なプログラミング言語で正規表現を活用できるようになる"
      ],
      "course_content": {},
      "requirements": [
        "HTML、CSS、JavaScriptの基礎知識"
      ],
      "description": "わかりづらいことで悪名高き正規表現について、ゼロから学べるコースです。\n正規表現に関しては、全くの初心者の方を対象にしています。ただし、他のプログラミング言語を習得済みの、中級者であることを前提としています。受講前に、HTML、CSS、JavaScriptの基礎知識くらいは、少なくとも備えておくことをお勧めいたします。\n正規表現は必要不可欠なテクニックではありません。ですが、使えるようになると相当便利です。一旦身につけてしまえば、ほぼ全てのプログラミング言語で活用できます。\n難しい専門用語はなるべく少なくしました。とにかく、わかりやすいコース構成を心がけました。\n初心者に加えて、過去に学習を始めてはみたものの挫折してしまった方にも推奨いたします。",
      "target_audience": [
        "正規表現を全く知らない初心者の方"
      ]
    },
    {
      "title": ".NET Core C# EF y MVC: Crea una WebApp completa desde cero",
      "url": "https://www.udemy.com/course/netcore-mvc/",
      "bio": "Desarrolla con ASP.NET Core C# MVC EF MaterializeCSS HTML5 JQUERY y crea tu propio sistema conectado a SQL Server.",
      "objectives": [
        "Instalaremos Visual Code y sus extensiones para gestionar nuestro proyecto .NET Core",
        "Aprenderás a programar EndPoints en el backend con C#",
        "Aprenderás a implementar MVC el patrón Modelo/Vista/Controlador en tus proyectos.",
        "En una sección exclusiva sobre seguridad, aprenderás que es un AntiForgery Token y como se implementa.",
        "Implementaremos Data Annotations para definir validaciones de formulario y anotaciones en propiedades.",
        "Sabrás como manipular información de nuestras tablas en SQL Server mediante LinQ",
        "Con MaterializeCSS, vamos a incorporar elementos más profesionales y modernos a nuestro proyecto, haciendo que tu diseño se destaque del resto.",
        "Aprenderás a utilizar la herramienta Migrations Tool una parte de Entity Framework, para desarrollar en modo Code First.",
        "Crearemos desde cero Modelos, Vistas y Controladores.",
        "Implementaremos un Login en nuestro sistema con HttpContext y SHA2_256"
      ],
      "course_content": {},
      "requirements": [
        "Se requieren conocimientos básicos de programación orientada a objetos, HTML y Javascript.",
        "Una PC o portátil. Manejo de Windows a nivel básico.",
        "El software es gratuito y los instalaremos juntos en el curso.",
        "Todos los recursos y herramientas están disponibles."
      ],
      "description": "Únete a nuestro emocionante curso de C# y ASP.NET Core!\nEn este curso, te convertirás en un experto en programación en C# y en la implementación del patrón Modelo/Vista/Controlador (MVC). Aprenderás a configurar una Base de Datos en SQL Server con Entity Framework (EF), a desarrollar Modelos, Vistas y Controladores desde cero y a aplicar restricciones de tipo Foreign Key. Además, dominarás el uso del Debugger en Visual Studio Code (una herramienta esencial para el desarrollo de aplicaciones) y aprenderás a otorgar un aspecto profesional a tus aplicaciones utilizando MaterializeCSS, el popular framework de diseño front-end que se basa en los principios del diseño de Material Design.\nNo nos detendremos ahí, también diseñarás una Vista de Turnos con FullCalendar, implementarás un sistema de autenticación sólido y explorarás medidas de seguridad, incluyendo el uso de AntiForgery Tokens.\nEste curso es adecuado tanto para principiantes como para aquellos con conocimientos previos. Proporcionamos soporte constante y acceso a contenido actualizado.\nTecnologías utilizadas:\nC#\nASP.NET Core (C#)\nEntity Framework\nJQuery\nHTML5\nVisual Studio Code\nMaterializeCSS\nFullCalendar\nSQL Server\nLinQ\nPrepárate para llevar tus habilidades al siguiente nivel y destacarte en el mundo del desarrollo tecnológico.\n¡Un emocionante viaje de aprendizaje te espera!",
      "target_audience": [
        "Estudiantes de sistemas o personas que quieran desarrollarse en el ámbito profesional del área de desarrollo de tecnológico..",
        "O bien personas que tengan como objetivo personal adquirir conocimientos de programación, a fin de poder desarrollar su propio sistema o aplicación Web."
      ]
    },
    {
      "title": "C#のコーディングルール：スタイルコップアナライザーを使ってチーム全員が同じコードを書く方法",
      "url": "https://www.udemy.com/course/cs_coding_rules/",
      "bio": "スタイルコップアナライザーを使ってチーム全体がコーディングルールを守ってプログラミングをする方法",
      "objectives": [
        "C#のコーディングルールがわかる",
        "チーム全員が統一したコードを書く方法がわかる",
        "スタイルコップアナライザー（StyleCopAnalyzers）の使い方がわかるようになる",
        "スタイルコップアナライザーで非表示にする警告がわかる",
        "スタイルコップアナライザーで表示するべき警告がわかる"
      ],
      "course_content": {
        "はじめに": [
          "#01_はじめに",
          "#02_名前の付け方",
          "#03_名前付けのガイドライン",
          "#04_パスカルケースとキャメルケース",
          "#05_パスカルとキャメルの内訳",
          "#06_パスカルとキャメルの実演",
          "#07_2文字の略語は大文字にする",
          "#08_名前空間のガイドライン",
          "#09_ローカルルールについて",
          "#10_private変数にアンダーバーを付ける",
          "#11_コントロールの名付け",
          "#12_クラス名とファイル名の名づけ",
          "#13_StyleCopAnalyzersについて",
          "#14_StyleCopAnalyzersのインストール",
          "#15_ネームスペースの調整",
          "#16_SA0001_プロパティのビルドのXMLでファイルを指定しておくと消える",
          "#17_CS1591_XMLコメントなし",
          "#18_SA1101_thisが付いていない",
          "#19_不要なルールを非表示にする方法",
          "#20_SA1200_usingの場所",
          "#21_SA1400_アクセス修飾子が明示的に定義されていない",
          "#22_その他不要なルールを非表示",
          "#23_コンストラクタとデストラクタを作成",
          "#24_Private変数とパラメータ変数の命名",
          "#25_中括弧の省略禁止と改行",
          "#26_コメントはスラッシュ４つ",
          "#27_プロパティのXMLコメント",
          "#28_コンストラクタやプロパティの書く順番",
          "#29_アクセスレベルを加味した書く順番",
          "#30_インタフェースのIとファイル名の不一致",
          "#31_最後に",
          "補講01_NetStandardで使う場合",
          "補講02_Public変数にアンダーバーをつけるべきか",
          "補講03_なぜコメントはスラッシュ4つにする必要があるのか",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "C#でif文が書ける程度の知識"
      ],
      "description": "この講座では，C#でチーム全員が統一したコードを書くためのコーディングルールを解説しています。\nマイクロソフトには昔からコーディングルールのガイドラインが公開されており，\nC#で提供されているライブラリー等はすべてそのガイドラインに沿ったコーディングがされています。\n\n\n我々も，マイクロソフトのコーディングルールを習得することで\nチーム全員が統一したコードが書けるようになり，\n名前の付け方や，「コンストラクタ」や「プロパティ」を書く順番が統一されます。\n\n\nさらにスタイルコップアナライザーという無料のツールを使うことで\nそれらのルールに従っていない場合に警告を出すことができ，\nチームのメンバーが，自然とルール通りにコーディングできるようになる\nツールの使い方を詳細に解説しています。\n\n\nこれにより，「コンストラクタ」と「プロパティ」はどちらを先に書くか？などのレベルは\nスタイルコップアナライザーに任せて，我々はもっと重要なコードにコードレビューの時間を充てることができます。\n\n\n目次\n#01_はじめに\n#02_名前の付け方\n#03_名前付けのガイドライン\n#04_パスカルケースとキャメルケース\n#05_パスカルとキャメルの内訳\n#06_パスカルとキャメルの実演\n#07_2文字の略語は大文字にする\n#08_名前空間のガイドライン\n#09_ローカルルールについて\n#10_private変数にアンダーバーを付ける\n#11_コントロールの名付け\n#12_クラス名とファイル名の名づけ\n#13_StyleCopAnalyzersについて\n#14_StyleCopAnalyzersのインストール\n#15_ネームスペースの調整\n#16_SA0001_プロパティのビルドのXMLでファイルを指定しておくと消える\n#17_CS1591_XMLコメントなし\n#18_SA1101_thisが付いていない\n#19_不要なルールを非表示にする方法\n#20_SA1200_usingの場所\n#21_SA1400_アクセス修飾子が明示的に定義されていない\n#22_その他不要なルールを非表示\n#23_コンストラクタとデストラクタを作成\n#24_Private変数とパラメータ変数の命名\n#25_中括弧の省略禁止と改行\n#26_コメントはスラッシュ４つ\n#27_プロパティのXMLコメント\n#28_コンストラクタやプロパティの書く順番\n#29_アクセスレベルを加味した書く順番\n#30_インタフェースのIとファイル名の不一致\n#31_最後に",
      "target_audience": [
        "C#初心者",
        "C#をチーム開発していてコードが統一されていない技術者",
        "C#のコーディングルールを学びたい人",
        "C#できちんとしたコードを書きたい人"
      ]
    },
    {
      "title": "Desenvolvimento Web Compacto e Completo",
      "url": "https://www.udemy.com/course/desenvolvimento-web-compacto-e-completo/",
      "bio": "[2025] +20 CURSOS: HTML5 CSS3 JS Bootstrap5 PHP8 MySQL APIs AJAX GIT NodeJS CodeIgniter4 Laravel10 Hospedagem Exercícios",
      "objectives": [
        "Criar páginas e aplicações WEB DO ZERO, aprendendo as principais tecnologias de desenvolvimento!",
        "É o curso ideal para quem se quer iniciar no mundo da programação web e para aqueles que querem melhorar os seus conhecimentos nesta área.",
        "Todos os conceitos e exemplos práticos explicados de forma clara, simples e objetiva. Muito fácil de entender para qualquer pessoa.",
        "Aprender a criar soluções do ZERO até ao servidor, com sólidos conhecimentos das tecnologias.",
        "HTML5, CSS3, JavaScript, PHP 8, PHP OOP, MySQL e SQL, REST APIs, GIT & GitHub, Bootstrap 5, domínios, hospedagem e gestão de servidor com CPanel e muito mais.",
        "HTML 5: Dezenas de elementos estruturais, imagens, links, formulários, validações e muito mais.",
        "CSS3: Todas propriedades básicas e avançadas, responsividade, Flexbox e CSS Grid em detalhe.",
        "Aprenda a usar o JavaScript em ambiente WEB e adquira os conhecimentos mais avançados de JavaScript para aprender as frameworks de front end e back end.",
        "Exercícios de JavaScript para testar as suas competências. Módulo sempre em crescimento.",
        "PHP 8: Do básico ao avançado. PHP procedural e Orientado a Objetos (OOP). Conexão com bases de dados, PHP no terminal e boas práticas.",
        "A usar várias bibliotecas: Composer, Monolog, PHPMailer, MPdf, PHPSpreadsheet, Datatables, ChartJS, entre muitas outras bibliotecas fundamentais.",
        "Aprenda a criar APIs REST com vários sistemas de autenticação (HTTP Basic Auth, API Keys e JSON Web Tokens -JWT)",
        "Extenso módulo sobre JavaScript AJAX, XMLHttpRequest, Fetch API, jQuery Ajax e Axios",
        "SQL: Aprenda tudo o que precisa saber para comunicar com bases de dados relacionais.",
        "GIT e GitHub fundamental para gerir o desenvolvimento dos seus projetos com as técnias usadas pelos programadores profissionais.",
        "Desenvolva um projeto completo com o padrão MVC. Vamos construir uma framework e desenvolver uma aplicação completa do ZERO.",
        "Transforme a sua vida. Se quer seguir o desafio do desenvolvimento web, este é o curso PERFEITO para você."
      ],
      "course_content": {
        "Bem-vindo ao desenvolvimento WEB": [
          "Bem-vindo ao Curso",
          "Módulos Disponíveis Atualmente",
          "Como ter Acesso aos Recursos",
          "Changelog"
        ],
        "HTML 5 & CSS 3 - Nível 1 - Introdução ao HTML 5 e CSS 3": [
          "Introdução do Módulo",
          "Preparação do Ambiente de Estudo",
          "O que é o HTML5 & Porquê o CSS3?",
          "Primeiro Contacto com o HTML5 na Prática",
          "Construção de Página HTML5 Básica - Parte 1",
          "Construção de Página HTML5 Básica - Parte 2",
          "O que já sabemos de HTML5?",
          "Vários Elementos para Conteúdo de Texto",
          "O que são Atributos nos Elementos HTML5?",
          "Exercício Prático com Atributos de HTML5",
          "Melhorar a Estrutura do HTML5 com Elementos Semânticos",
          "Construíndo o Primeiro Website só com HTML5",
          "O que é o CSS3?",
          "Três Formas de Aplicar Estilos no HTML5",
          "Explorando os Conceitos Base do CSS3",
          "Os Seletores de CSS3 na Prática - Parte 1",
          "Os Seletores de CSS3 na Prática - Parte 2",
          "Introdução às Declarações de CSS3",
          "Duas Extensões para o VSCode",
          "Definir Cores no CSS3 - Abordagem Teórica",
          "Definir Cores no CSS3 - Abordagem Prática",
          "CSS3 Box Model",
          "Box Model nas Ferramentas do Programador",
          "Explorando Margins & Paddings na Prática",
          "Pseudo-Classes & Pseudo-Elementos",
          "Transformar um Link num Botão com CSS3",
          "Hierarquia de Estilos & a Regra !Important",
          "Como Adicionar um Favicon à Minha Página",
          "Elementos Semânticos Lado a Lado com Float",
          "Introdução às Unidades no CSS3",
          "As Unidades no CSS3 na Prática Parte 1",
          "As Unidades no CSS3 na Prática Parte 2",
          "Exercício Final do Módulo - Parte 1 de 4",
          "Exercício Final do Módulo - Parte 2 de 4",
          "Exercício Final do Módulo - Parte 3 de 4",
          "Exercício Final do Módulo - Parte 4 de 4",
          "Correção de um Erro Muito Importante",
          "Fim do Módulo & Passos Seguintes"
        ],
        "HTML 5 - Nível 2 - Conceitos Intermédios e Avançados de HTML5": [
          "Introdução do Módulo",
          "Porquê o nome index.html?",
          "Hiperligações - Exemplos Mais Comuns",
          "Hiperligações - Target, Elementos Aninhados & Title",
          "Hiperligações - Download, Class & Id",
          "Hiperligações - Navegação com Bookmarks",
          "Hiperligações - Email e Chamada Telefónica",
          "Tabelas - Introdução às Tabelas em HTML",
          "Tabelas - Aplicar CSS às Tabelas",
          "Tabelas - Caption, Colspan & Rowspan",
          "Tabelas - Exercícios Práticos com Colspan & Rowspan",
          "Tabelas - Colgroup & Col",
          "Tabelas - Dimensões & Alinhamentos",
          "Dicas sobre como Escrever Código em HTML",
          "Comentários em HTML",
          "HTML Entities & Symbols",
          "Formulários - Introdução",
          "Formulários - O teu Primeiro Formulário",
          "Formulários - O Que Aconteceu no teu Primeiro Formulário?",
          "Formulários - Introdução ao Método Get & Post",
          "Formulários - Alguns Atributos do Elemento Input",
          "Formulários - Input Types - Parte 1",
          "Formulários - Input Types - Parte 2",
          "Formulários - Input Color",
          "Formulários - O Elemento Label",
          "Formulários - Input Checkbox",
          "Formulários - Input Radio",
          "Formulários - Input Range",
          "Formulários - Input Hidden",
          "Formulários - Os Problemas de Segurança",
          "Formulários - Elemento Select",
          "Formulários - Textarea",
          "Formulários - Datalist",
          "Formulários - Fieldset & Legend",
          "Formulários - Input Reset & Button",
          "Formulários - O Que Ficou Por Falar Sobre Formulários de HTML",
          "É Importante Saber Sobre Paths Relativas & Paths Absolutas",
          "Final do Módulo & Passos Seguintes"
        ],
        "CSS 3 - Nível 2 - Conceitos Intermédios e Avançados de CSS 3": [
          "Introdução do Módulo",
          "Explorando Propriedades de Texto",
          "Web Safe Fonts & Default Fonts",
          "Aplicar Sombras nas Letras",
          "Usar Outro Tipo de Letras com a Regra Font Face",
          "Utilização de Google Fonts",
          "Duas Letras Distintas com Google Fonts",
          "Alinhamento Horizontal",
          "Altura de Linha & Espaçamento entre Letras e Palavras",
          "Usando o Text-Transform para Capitalização do Texto",
          "Font-Variant para Capitalizar Letras",
          "Aplicar Estilos a Listas",
          "Usando Backgrounds nos Elementos HTML",
          "Criando Gradações de Cores",
          "Introdução aos Layouts de CSS",
          "A Propriedade Display",
          "Floats",
          "Posicionamento",
          "Z-Index, Fixed & Sticky",
          "Flexbox Introdução",
          "Flexbox Flex Container Parte 1 de 3",
          "Flexbox Flex Container Parte 2 de 3",
          "Flexbox Flex Container Parte 3 de 3",
          "Flexbox Propriedades dos Flex Items",
          "Exercício 1 de Flexbox",
          "Exercício 2 de Flexbox",
          "Exercício 3 de Flexbox",
          "CSS Grid Introdução",
          "CSS Grid Container",
          "CSS Grid Template Rows & Columns",
          "CSS Grid Template Areas",
          "CSS Grid Row & Column Start End",
          "CSS Grid Grid Template",
          "CSS Grid Espaco entre Areas com Propriedades Gap",
          "CSS Grid Justify Items & Align Items",
          "CSS Grid Justify Content Align Content & Place Content",
          "CSS Grid Outras Propriedades",
          "CSS Grid Recapitulando Propriedades dos Grid Items",
          "CSS Grid Exercicio 1",
          "CSS Grid Exercicio 2",
          "CSS Grid Exercicio 3",
          "Media Queries Introdução",
          "Media Queries Sintaxe Base",
          "Media Queries Mobile First",
          "Media Queries Screen Breaking Points",
          "Media Queries Exemplo com os Breakpoints",
          "Media Queries Outro Exemplo",
          "Media Queries Orientation",
          "Media Queries Print",
          "Media Queries Exemplo Final",
          "CSS o que Ficou por Dizer"
        ],
        "JavaScript para DOM - Nível 1 - O básico do JavaScript numa página WEB": [
          "Introdução ao Módulo",
          "Requisitos Necessários",
          "Como Adicionar JavaScript ao HTML",
          "A Sintaxe do JavaScript",
          "Comentários em JavaScript",
          "Variáveis em JavaScript",
          "Apresentando Resultados no Browser",
          "Tipos de Dados",
          "O Problema das Variáveis no JavaScript",
          "Operadores em JavaScript",
          "Strings",
          "Instrução Condicional If, Else If, Else",
          "Operadores de Comparação & Operadores Lógicos",
          "Operador Ternário",
          "Estrutura Switch Case",
          "Arrays",
          "Métodos para Operar com Arrays - Parte 1",
          "Métodos para Operar com Arrays - Parte 2",
          "Como Ordenar Arrays",
          "Ciclos, Loops, Iterações",
          "Funções",
          "Function Expressions e Arrow Functions",
          "Escopo de Variáveis",
          "Objetos",
          "O Document Object Model",
          "Introdução à Navegação no DOM",
          "Método getElementById",
          "Outros Métodos Get Elements",
          "Introdução ao querySelector & querySelectorAll",
          "Exemplos com query Selectors",
          "Aplicando Estilos Inline nos Elementos com JavaScript",
          "Adicionar & Remover Classes de CSS nos Elementos",
          "Manipular Atributos dos Elementos",
          "Adicionar Elementos ao DOM",
          "Event Handlers",
          "Introdução aos Event Listeners",
          "Exercício com Event Listener - Remover Event Listener",
          "Exercício com Event Listener - Event Propagation",
          "Exercício com Event Listener - O Mesmo Event Listener para três Elementos",
          "Exercício com Event Listener - Caixas Com Gradação de Cores",
          "Exercício com Event Listener - O Mesmo Exercício, mas Menos Código",
          "Impedir a Ação por Padrão de um Evento",
          "Introdução à Validação de Formulários",
          "Melhorar O Sistema de Validação do Vídeo Anterior",
          "Detalhes Sobre Carregamento do JavaScript no HEAD do HTML",
          "O que Dizer Acerca do Jquery",
          "O que Ficou por Dizer"
        ],
        "Exercícios de JavaScript": [
          "Introdução ao Módulo"
        ],
        "Bootstrap 5 Completo": [
          "Introdução ao Módulo",
          "Visita ao Site do Bootstrap",
          "Exemplo Muito Simples de Página com Bootstrap",
          "Adicionar o Bootstrap Via CDN",
          "Adicionar o Bootstrap Fazendo Download dos Ficheiros",
          "Solução para os Warnings dos Ficheiros Map",
          "Entendendo o que são Breakpoints",
          "Containers, Rows e Columns",
          "Columns com Sufixos",
          "Colunas Responsivas",
          "Exercício Prático",
          "Definir Número de Colunas com Row-Cols",
          "Aninhamento de Rows dentro de Cols",
          "Column Offsets",
          "Alinhamento Horizontal de Columns",
          "Alinhamento Vertical de Columns",
          "Alterar a Ordem das Columns",
          "Definir Alinhamento Vertical das Columns Individualmente",
          "Introdução às Classes de Espacamento - Margin e Padding",
          "Gutters na Grelha de Layout",
          "Sobre o CSS Grid no Bootstrap 5",
          "Tipografia e Análise da Documentação",
          "Imagens Responsivas com img-fluid",
          "Breve Referência às Cores no Bootstrap",
          "Formatação de Tabelas de HTML",
          "Alinhamento do Conteúdo Dentro de uma Tabela",
          "Introdução aos Formulários com Bootstrap",
          "Form-Control - Parte 1",
          "Form-Control - Parte 2",
          "Select",
          "Range",
          "Checkboxes, Radio Buttons e Switchs",
          "Input Groups & como usar a Documentação Corretamente",
          "Floating Labels",
          "Layout de Formulários",
          "Buttons",
          "Alerts",
          "Badges",
          "Cards",
          "Popovers",
          "Tooltips",
          "Collapse",
          "Accordion",
          "Dropdowns",
          "Carousel",
          "Toasts",
          "Modals",
          "Como Usar o Offcanvas",
          "Outros Componentes do Bootstrap",
          "Background Colors",
          "Borders",
          "Como Usar as Classes Display",
          "Flexbox no Bootstrap",
          "Sombras",
          "Outras Utilidades na Documentação do Bootstrap",
          "Como Usar Partes do Bootstrap - Bootstrap Grid",
          "Modificar Valores de Variáveis do CSS",
          "Princípios Orientadores para Criar a Nossa Versão do Bootstrap",
          "Construtor Online & Versões do Bootstrap Prontas a Usar"
        ],
        "PHP 8 Básico e Intermédio": [
          "O que é o PHP, Ainda Vale a Pena Aprender",
          "Como Funciona o PHP?",
          "Requisitos Básicos Para Aprender PHP",
          "Como Instalar o Xampp",
          "Como Instalar o Wampserver",
          "Como Instalar o Mamp",
          "Como Instalar o Laragon",
          "Como Usar o Laragon",
          "Como Adicionar o PHP8 ao Laragon",
          "Escrever Código de PHP",
          "Como Executar o PHP No Terminal",
          "Comentários em PHP",
          "Definição de Variáveis em PHP",
          "Atribuir Valores a Variáveis",
          "Constantes",
          "Data Types",
          "Booleanos",
          "Integers",
          "Floats",
          "Null",
          "Strings",
          "Arrays",
          "Arrays Multidimensionais",
          "Funções Associadas a Arrays",
          "Operadores Matemáticos",
          "Exercícios Práticos com Operadores Matemáticos",
          "Operadores de Atribuição",
          "Operadores de Strings",
          "Operadores de Comparação",
          "Operador de Controlo de Erro",
          "Operadores de Incremento & Decremento",
          "Operadores Lógicos",
          "Precedência de Operadores",
          "Instrução Condicional If ElseIf Else",
          "Exercícios Práticos com Arrays & Instruções Condicionais",
          "Instrução Condicional Switch",
          "Instrução Condicional Match",
          "Operador Ternário",
          "Ciclos While & Do While",
          "Ciclo For",
          "Ciclo Foreach",
          "Break & Continue",
          "Exercício Práticos",
          "Introdução à Criação de Funções",
          "Parâmetros de Uma Função",
          "Escopo de Variáveis",
          "Inclusão de Ficheiros com Require & Include",
          "Exemplo Prático do Uso de Inclusão de Scripts",
          "Cuidado com os Caminhos na Inclusão de Scripts",
          "Introdução às Sessões",
          "Detalhando Exercício com Sessões",
          "Configuração do Cookie da Sessão",
          "O que são e como usar Cookies No PHP",
          "Introdução à Manipulação do Filesystem com PHP",
          "Informações Sobre Ficheiros & Guardar Dados com file_put_contents",
          "Ler Dados a Partir de um Ficheiro de Texto",
          "Ler & Escrever Ficheiros CSV",
          "Copiar, Mover, Renomear & Eliminar Ficheiros",
          "Constantes Mágicas",
          "Super Globais",
          "Capturando Variáveis da URI com $_GET",
          "Tratamento de Formulários - Introdução",
          "$_GET Versus $_POST",
          "Tratamento de Diferentes Tipos de Inputs",
          "Validação de Formulários - Parte 1",
          "Validação de Formulários - Parte 2",
          "A Simples & Complexa Validação de Dados",
          "Funções Relacionadas com Erros",
          "Tratamento de Erros",
          "Exercício 1",
          "Exercício 2",
          "Exercício 3",
          "Exercício 4"
        ],
        "PHP 8 Orientado a Objetos (OOP)": [
          "PHP OOP - Introdução Ao Módulo",
          "Classes & Objetos",
          "Como Escrever uma Classe & Instanciar um Objeto",
          "Access Modifiers",
          "Constructor",
          "Destructor",
          "Hereditariedade",
          "Sobreposição De Métodos Herdados",
          "Impedir Herança de Classe ou Método",
          "Classes Abstratas",
          "Criação de Classes a Partir de Interfaces",
          "O que são Traits & como Utilizar",
          "Métodos Estáticos",
          "Propriedades Estáticas",
          "Como usar Namespaces & qual a sua Utilidade",
          "Principais Conceitos de OOP em Resumo",
          "Exercício 1",
          "Exercício 2",
          "Exercício 3",
          "Exercício 4",
          "Declaração Strict Types",
          "Propriedades Readonly",
          "Como Chamar o Construtor de uma Classe Pai",
          "Constantes Dentro de uma Classe",
          "Autoload de Classes",
          "Funções Úteis para Verificação de Classes",
          "É Importante Ter Noção"
        ],
        "MySQL e SQL Básico": [
          "Introdução ao Módulo",
          "O que é uma Base De Dados",
          "O que é o MySQL?",
          "A Structured Query Language (SQL)",
          "Conceitos & Termos Principais nas Bases de Dados Relacionais",
          "Schema de Base de Dados & Data Types",
          "Criar uma Base de Dados com HeidySQL",
          "Criação de Tabelas da Base de Dados",
          "Definição de Chaves & Relações dentro da Base de Dados",
          "Inserção de Registos na Base de Dados Via SQL",
          "Como Eliminar & Importar Bases de Dados",
          "Introdução às Instruções de SQL - Parte 1",
          "Introdução às Instruções de SQL - Parte 2",
          "Exportar & Importar Bases De Dados no HeidiSQL",
          "Criar uma Base de Dados com MySQL Workbench",
          "Criar uma Base de Dados com PhpMyAdmin",
          "SQL Puro vs Query Builder vs ORM"
        ]
      },
      "requirements": [
        "NÃO É NECESSÁRIO TER CONHECIMENTOS PRÉVIOS DE PROGRAMAÇÃO.",
        "Todos os conceitos e exercícios foram criteriosamente pensados para o aprendiz iniciante, mas com abordagem que vai permitir ao PROGRAMADOR EXPERIENTE adquirir novos conhecimentos."
      ],
      "description": "Do ZERO até PROFISSIONAL do desenvolvimento WEB em 2025.\nAprende as principais tecnologias para desenvolvimento de páginas e aplicações WEB. O curso está estruturado por módulos que podes aprender de forma sequencial ou separada.\nSão cerca de 20 cursos num só, com TUDO o que precisas saber para te transformares num desenvolvedor web!\nMuitos exercícios práticos e explicações SIMPLES e muito FÁCIL DE ENTENDER, mesmo para quem está a começar agora neste mundo do desenvolvimento. Tranforma-te num profissional do desenvolvimento WEB.\nEntre outras matérias, vais aprender:\nHTML5 completo, desde os elementos básicos, organização dos layouts e construção de formulários\nCSS3 completo do básico até FlexBox e CSS Grid\nJavaScript para o DOM e os conceitos principais da linguagem para as frameworks front e back end\nMódulo com Exercícios de JavaScript e PHP para treinares os teus conhecimentos.\nBootstrap 5 completo. Constrói os teus layouts de forma responsiva e moderna\nPHP 8 do zero a avançado, (OOP) Programação Orientada a Objetos, PDO para conexão com MySQL, PHP no terminal, etc.\nREST APIs com vários métodos de autenticação: HTTP Basic Auth, API Key e JWT. Aprende a construir a tua API\nJavaScript AJAX, Callbacks, Promises, Async & Await, XMLHttpRequest, Fetch API, jQuery Ajax, Axios.\nMySQL & SQL (Structured Query Language) - Aprende a gerir e comunicar com bases de dados relacionais\nConstrução de micro-framework de PHP MVC e criação de uma aplicação completa usando essa framework\nAprende o fundamental para qualquer profissional no uso do GIT & GitHub\nNodeJS Essencial - Os conceitos básicos essenciais para poderes usar esta tecnologia, com muitos exemplos práticos e a construção de uma API Rest.\nCodeIgniter 4 Essencial(2024) - Fica a conhecer uma das frameworks de PHP mais simples de aprender e com imenso potencial para construção de soluções profissionais e de alta escalabilidade, segurança e performance.\nLaravel 10 Essencial (2024) - Uma visão sobre as principais funcionalidades da framework mais popular do ecossistema PHP. Aprende os princípios de utilização fundamentais desta framework através do desenvolvimento de um projeto de gestão de tarefas.\nConhecer alguns sites de recursos que devem estar sempre nos nossos favoritos.\nHospedagem WEB e gestão através do cPanel: domínios, FTP, Emails, Segurança, PhpMyAdmin, CronJobs, gestão da hospedagem e todos os detalhes para criares oportunidades de negócio.\nO curso que vai MUDAR A TUA VIDA!",
      "target_audience": [
        "Aprendizes sem qualquer experiência que querem aprender a programar para a web.",
        "Programadores/Desenvolvedores que querem aprofundar o seu conhecimento no desenvolvimento de soluções web.",
        "Para quem procura no mesmo lugar TUDO o que necessita saber para ser PROFISSIONAL DO DESENVOLVIMENTO.",
        "Todos os que vêm de outras áreas profissionais e que querem MUDAR A SUA VIDA!"
      ]
    },
    {
      "title": "Python 3 : Formation complète à la programmation",
      "url": "https://www.udemy.com/course/python-formation-intensive-a-la-programmation/",
      "bio": "Apprenez le langage de la Data Science et devenez un développeur Python ! Pour débutants ou programmeurs aguéris",
      "objectives": [
        "Savoir installer un environnement de développement Python sur Windows, Mac OS X ou Linux",
        "Apprendre le langage Python de A à Z, les bases, les librairies standards, etc.",
        "Apprendre à coder Pythonesque et éviter les bugs",
        "Utiliser Python pour réaliser vos propres projets, jeux, data science, etc.",
        "Connaitre le langage Python pour automatiser des tâches",
        "Connaitre le langage Python pour développer des jeux",
        "Apprendre à programmer \"Orienté Objet\" et tirer parti de ce modèle"
      ],
      "course_content": {
        "Présentation du cours et installation": [
          "Message de Bienvenue",
          "Introduction",
          "Foire aux questions"
        ],
        "Installation de Python": [
          "Présentation de l'installation",
          "Installation de Python et des blocs-notes Jupyter",
          "Mise en route de Jupyter",
          "Installation de Anaconda sur windows",
          "Installation Linux",
          "Les blocs-notes Jupyter"
        ],
        "Python Notions de Base": [
          "Avant de commencer, le code !",
          "Les nombres",
          "Les nombres",
          "Les chaines de caractères",
          "Index et chaines de caractères",
          "Questionnaire sur les chaines de caractères",
          "Affichage et sorties écran",
          "Afficher un message simple",
          "Listes.",
          "Listes",
          "Les dictionnaires",
          "Dictionnaires",
          "Sets et Booleans",
          "Sets",
          "Les Tuples",
          "Fichiers",
          "La gestion des fichiers",
          "Gestion des fichiers et écriture",
          "Gestion des fichiers et ajout de données",
          "Section Un - Controle des connaissances",
          "Section Un Examen - Solutions du controle des connaissances"
        ],
        "Les opérateurs logiques": [
          "Avant de commencer, le code !",
          "Opérateurs de comparaison ou opérateurs logiques",
          "Opérateurs de comparaison enchaînés."
        ],
        "Python Déclarations": [
          "Avant de commencer, le code !",
          "Introduction aux déclarations Python",
          "Les instructions If, elif, et else",
          "Les boucles for",
          "Les boucles while",
          "Range()",
          "Compréhension de listes",
          "Controle des connaissances sur les déclarations Python",
          "Corrigé du controle des connaissances sur les déclarations Python"
        ],
        "Méthodes et Fonctions": [
          "Avant de commencer, le code !",
          "Fonctions",
          "Les fonctions - Exemple détaillé",
          "Méthodes",
          "Déclarations et \"Scope\"",
          "Expressions Lambda",
          "Méthodes et Fonctions Examen",
          "Méthodes et Fonctions Examen - Solutions"
        ],
        "Premier projet": [
          "Avant de commencer, le code !",
          "Présentation du projet",
          "Feuille de route du projet",
          "Démonstration du jeu de morpion",
          "La solution pas à pas, première partie",
          "La solution pas à pas, deuxième partie",
          "La solution pas à pas, troisième et dernière partie"
        ],
        "Programmation_Orientée_Objet": [
          "Avant de commencer, le code !",
          "Programmation Orientée Objet",
          "Programmation Orientée Objets - Les classes",
          "Programmation Orientée Objets - Les méthodes",
          "Programmation Orientée Objets - L'héritage",
          "Programmation Orientée Objets - Les méthodes spéciales",
          "Programmation Orientée Objet Examen",
          "Programmation Orientée Objet Examen - Solutions"
        ],
        "Modules et Paquets": [
          "Avant de commencer, le code !",
          "Modules et Paquets"
        ],
        "Erreurs et Exceptions": [
          "Avant de commencer, le code !",
          "Erreurs et exceptions, partie 1",
          "Erreurs et exceptions, partie 2",
          "Erreurs et Exceptions Examen",
          "Erreurs et Exceptions Examen - Solutions"
        ]
      },
      "requirements": [
        "Pas de pré-requis pour ce cours, il faut uniquement disposer d'un ordinateur avec un accès Internet."
      ],
      "description": "BOOSTEZ VOTRE CARRIÈRE ET DEVENEZ  DÉVELOPPEUR PYTHON !\nPython est un langage simple à apprendre qui ne sacrifie rien pour cela, c'est le langage de référence de la Data Science mais il permet aussi de réaliser des sites et des applications Web. Il permet d'écrire des application de bureau comme des jeux.\nBref, apprendre Python c'est faire un premier pas dans le monde de la programmation, et ce petit pas pourra vous emmener très loin.\nAvec 16 heures de vidéos, ce cours est à la fois COMPLET et SIMPLE pour apprendre à maitriser le langage de programmation Python\n- = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - =\nVous n'ayez jamais programmé auparavant ?\nVous connaissiez déjà la syntaxe de base, Python version 2 ?\nVous désirez en apprendre davantage sur les  fonctions avancées de Python ?\nCe cours est pour vous !\n- = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - = - =\nCe cours très complet ne laisse rien de côté, vous allez trouver :\nPlus de 100 leçons découpées en 19 chapitres et 16 heures de vidéo pendant lesquelles je vous accompagne.\nDes exercices détaillés pour rapidement pratiquer de courtes leçons.\nDes tests, des travaux ainsi que 3 projets complets pour vous permettre de créer votre portefeuille de projets Python!\nCe cours vous enseignera Python d'une manière très pratique, chaque leçon est accompagnée par une séance de code en vidéo et un bloc-notes contenant tout le code correspondant, accompagné d'explications et de commentaires ! Vous pouvez suivre le cours et apprendre de la manière qui vous convient le mieux !\nVous avez un accès à vie à plus de 100 leçons et leurs documents d'accompagnements !\nCela inclut bien entendu également les futures mises à jour qui couvriront par exemple le développement avec Flask ou encore  la création d'interface graphique!\nCe cours est disponible  avec une garantie de remboursement de 30 jours ! Si vous n'êtes pas satisfait pour quelque raison que ce soit, vous pouvez demander à être remboursé. De plus, vous garderez l'accès aux bloc-notes pur vous remercier d'avoir essayé le cours !\nN'attendez plus !\nÀ la fin de ce cours vous pourrez ajouter Python sur votre CV sans rougir. Donnez un boost à votre carrière et commencez tout de suite à apprendre  Python, tout cela d'une manière amusante et pratique!\nun dernier mot\nCe cours est l'adaptation en Français du Best seller anglais créé par José Portilla, qui compte plusieurs millions de participants et régulièrement classé numéro 1 parmi des milliers d'autres.\nC'est une chance à ne pas laisser passer !",
      "target_audience": [
        "Débutants qui n'ont jamais programmé auparavent",
        "Développeurs qui souhaitent se mettre à Python 3",
        "Développeurs qui connaissent déjà Python et qui souhaitent compléter et mettre à jour leurs compétences !"
      ]
    },
    {
      "title": "Başlangıç Seviyesinden Profesyonel Seviyeye Java Kursu",
      "url": "https://www.udemy.com/course/baslangc-seviyesinden-profesyonel-seviyeye-java-kursu2020/",
      "bio": "Android, Masaüstü, Web geliştirme, Spring gibi alanlarda kullanılan Java'yı öğrenin",
      "objectives": [
        "Veritabanında işlemler yapmayı(MySQL)",
        "Modül sistemi ve Spring Framework için gerekli temel",
        "Nesne Yönelimli Programlama'yla(OOP) projeler geliştirebilmeyi",
        "Lambda İfadeleri",
        "Eğitimde ve iş mülakatlarında sorulabilecek sorulara yönelik cevapları",
        "Swing kütüphanesini kullanarak masaüstü uygulamaları geliştirmeyi",
        "Android programlamada ileri düzey projeler geliştirmek için gerekli olan kodlama bilgisi",
        "Gelişmiş String ve Switch Yapısı",
        "Multithreading ile projeler tasarlamayı"
      ],
      "course_content": {
        "Başlarken": [
          "Sunuş",
          "(Mutlaka Okuyun-Önemli Uyarı)Teknik",
          "Java Development Kit(JDK) Kurulumu",
          "Integrated Development Environment(IDE) Tanım ve Kurulum",
          "Kaynak Dosyalarına Erişim"
        ],
        "Java'ya Genel Bakış": [
          "Java,Java'nın Çalışma Prensibi ve IDE",
          "Temel Kod Blokları(yazdırma işlemi,public vb.) ve Açıklama Satırları",
          "Java’da Önemli Kavramlar(Metod;Fonksiyon,Kütüphane,Class)",
          "Kod Yazarken Dikkat Edilmesi Gereken Hususlar",
          "Bölüm Tekrar Sınavı-1",
          "Bölüm Tekrar Sınavı-2"
        ],
        "Temel Veri Tipleri ve Değişkenler": [
          "Java Dilinde Değişken ve Veri Tiplerine Giriş-Veri Kavramı ve Temel Kavramlar",
          "Tam Sayı Veri Tipleri",
          "Reel(Gerçek) Sayı Veri Tipleri",
          "Mantıksal ve Karaktersel Veri Tipleri",
          "|Küçük Çaplı Proje|Çiftlik Projesi",
          "String Veri Tipi",
          "Kaçış(Escape) Karakterleri",
          "Veri Tiplerini Birbirine Dönüştürme-1",
          "Veri Tiplerini Birbirine Dönüştürme-2",
          "Bölüm Tekrar Sınavı-1",
          "Bölüm Tekrar Sınavı-2",
          "Bölüm Tekrar Sınavı-3"
        ],
        "Java’da Paketler": [
          "Paketler ve Adlandırma Gelenekleri",
          "Paket Oluşturma ve Detaylar",
          "JAR Dosyası",
          "JAR Dosyası Oluşturma ve Dosyayı Çağırma",
          "Bölüm Tekrar Sınavı"
        ],
        "Operatörler": [
          "Aritmetiksel Operatörler",
          "Karşılaştırma Operatörleri",
          "Mantıksal Operatörler",
          "Artırma ve Azaltma Operatörleri",
          "Java’da Matematik Sınıfı ve Önemli Metodlar",
          "Bölüm Tekrar Sınavı"
        ],
        "Kullanıcıdan Veri Alma ve Import Kavramı": [
          "Import Deyimi ve Scanner Sınıfı",
          "Veri Almada Karşılaşılabilecek Olası Hatalar",
          "|Küçük Çaplı Proje|Geometrik Alan Hesabı",
          "|Küçük Çaplı Proje|Kullanıcıdan Alınan Sayıların Analizi",
          "Bölüm Tekrar Sınavı"
        ],
        "String Sınıfı": [
          "String Sınıfı ve String Oluşturma",
          "Stringler'de null ve Boşluk Değeri",
          "String Sınıfındaki Başlıca Metodlar",
          "toString() ve trim() Özel Metodları",
          "compareTo() ve equals () Özel Metodları",
          "StringBuffer ve StringBuilder Sınıfları",
          "|Küçük Çaplı Proje|Yatırım Hesabı Uygulaması",
          "Bölüm Tekrar Sınavı"
        ],
        "Kontrol Deyimleri Ve İfadeleri": [
          "Java’da Kontrol Deyimleri ve If-Else Deyimi",
          "|Küçük Çaplı Proje|Giriş Paneli",
          "Switch-Case Deyimi",
          "|Küçük Çaplı Proje|Kahve Makinası Uygulaması"
        ],
        "Döngüler (Loops) ve Döngülerde Akış Kontrolü": [
          "Döngülere Giriş",
          "For Deyimi Ve Çoklu For Yapısı",
          "While ve Do-While Deyimleri",
          "Break,Continue ve Return Anahtar Kelimeleri",
          "|Küçük Çaplı Proje|Sayı Tahmin Oyunu-Kullanıcı Tahmini",
          "|Küçük Çaplı Proje|Sayı Tahmin Oyunu-Kullanıcı Tahmin Oranı",
          "Bölüm Tekrar Sınavı"
        ],
        "Arrays veya Diziler": [
          "Arrays(Diziler) ve Türleri",
          "Tek Boyutlu Diziler",
          "For-Each Döngüsü",
          "Dizilerde Kopyalama",
          "Çok Boyutlu Diziler",
          "Çentikli Diziler ve Dizilere Yönelik Eleştiri",
          "|Küçük Çaplı Proje|Diziye Rastgele Atanan Değerlerin Analizi",
          "Bölüm Tekrar Sınavı-1",
          "Bölüm Tekrar Sınavı-2"
        ]
      },
      "requirements": [
        "Temel düzeyde bilgisayar kullanma becerisi"
      ],
      "description": "Kurs, güncel Java kurumuyla başlangıç seviyesinden başlayacak olup kurs dahilinde profesyonel, uzmanlık seviyesinde Java eğitimi verilecektir. Bununla beraber kurs boyunca nesne yönelimli programlama ve yeni Java sürümleriyle beraber daha da öne çıkan fonksiyonel programlama yapısı temel referans kaynağı olacaktır.\nKurs ile nesne yönelimli programlama ve fonksiyonel programlama yapısına uygun olarak  Android, masaüstü gibi ortamlarda veya Spring Framework  gibi birçok alanda kapsamlı projeler geliştirmek gereken Java bilgisini ileri düzeyde öğretmek amaçlanmıştır. Ayrıca kurs boyunca kavramsal yapı tanımları üzerinde durulurken okul sınavları ve iş mülaklatlarında sorulabilecek sorular da dikkate alınmış ve kurs buna uygun olarak oluşturulmuştur. Bu doğrultuda çoktan seçmeli, çözümlü ve açıklamalı sorulara yer verilmiştir.\nZaman kaygısıyla hareket edilmiş ve bu doğrultuda en az zamanda en çok verim almak temel amaçlardan birisi oluşmuş ve videolar bu doğrultuda hazırlanmıştır.\nKurs boyunca sorular  soru-cevap kısmından veya özel mesajdan yanıtlanacaktır.\nGenel hatlarıyla Java'da ders anlatımında izlenecek yöntem baştan sona doğru üç başlık altında toplanabilir:\n1-)Kavramsal tanım ve teorik yapı\n2-)Kavramsal tanım ve teorik yapının anlatımına uygun olarak ilgili konunun örneklerle kod ortamında somutlaştırılması\n3-)Öğrenilmiş olan konunun proje veya sorularla desteklemesi\n2014 yılında yayımlanan  Java-8(JDK-8)'den günümüze kadar olan sürece kadarki dönemde Java'da meydana gelen ve daha pratik kodlama imkan tanıyan yenilikler ve değişimler üzerinde ayrıca bir bölüm üzerinde ayrıntılarıyla durulacaktır. Bu başlıklar:\nGelişmiş String Yapısı\nJava’da Zaman Kavramı ve Date-Time API’a Genel Bakış\nLocalDate Sınıfı ve Tarihsel Format\nLocalTime Sınıfı ve Saat Formatı\nLocalDateTime Sınıfı ve Zaman Formatı\nZoneld-ZonedDateTime Sınıfı ve Yerel Zaman Kavramı\nPeriod ve Duration Sınıfı\nZamanın Bağımsız İfadesi\nLambda İfadeleri ve Fonksiyonel Arayüz Kavramı\n...\nStream API Kavramı\nJShell-Shell Kavramı ve JShell Çalışma Şekli\nKomut İstemi Penceresi-IDE Ortamında JShell Kullanımı\nSnippet ID Kullanımı\nModül-Modülerlik Kavramı\n... vs. şeklindedir(Detaylı içeriğe \"Kurs İçeriği\" kısmında erişim sağlayabilirsiniz.).\n\n\n\n\nKurs içeriği ise ana başlıklarıyla:\nJava'ya genel bakış\n.\n.\n.\nMetod ve Parametre Yapısı\n.\n.\nNesne Yönelimli Programlama\nSwing Kütüphanesi\nGeliştirilmiş Java: Java 8'den Java 12'ye\nDatabase (Veritabanı)\n... vs. şeklindedir.",
      "target_audience": [
        "Java'yı başlangıç düzeyinden ileri seviyeye kadar öğrenmek isteyenler",
        "Spring Framework için gerekli Java temelini almak isteyenler",
        "Java bilgisini daha da ileriye taşımak isteyenler",
        "Android veya masaüstü uygulamaları geliştirmek isteyenler"
      ]
    },
    {
      "title": "The Kotlin Learning Guide",
      "url": "https://www.udemy.com/course/kotlin-programming-for-beginner/",
      "bio": "تعلم لغة كوتلن باللغة العربية",
      "objectives": [
        "ستتمكن من فهم لغة الكوتلن"
      ],
      "course_content": {
        "Introduction": [
          "مقدمة عن الدورة",
          "ما هي البرمجة، لماذا يجب ان اتعلم البرمجة",
          "ما هي لغة الكوتلن",
          "تحميل وتنصب الادوات المطلوبة",
          "ضبط بيئة العمل",
          "سياسة الاستخدام",
          "من هو مدرب الدورة",
          "توضيح مهم جدا بخصوص تقييم الدورة",
          "كيفية الحصول على شهادة بعد اكمال الدورة"
        ],
        "Kotlin Basics": [
          "Print, Println, Var, Val, Int, Char, Double",
          "String, Boolean",
          "Comments",
          "Type Casting",
          "Null Safety",
          "Input",
          "App 1: Get My Age",
          "If Statements",
          "When",
          "Mathematical Operation",
          "Order of Operation",
          "Logic Operation",
          "String (Dealing With Function)",
          "App 2: Degree",
          "App 2: Degree Part 2, while",
          "Nested While and Do-While Loops",
          "For Loop",
          "Control Statements",
          "Exception (Try-Catch) 1"
        ],
        "Array and Collection": [
          "Array",
          "Use For in Array",
          "Array (Dealing With Function)",
          "Array List",
          "Array List (Dealing With Function)",
          "For Each",
          "Collections Part 1",
          "Collections Part 2"
        ],
        "Function": [
          "Function Part 1",
          "Function Part 2",
          "Passing Array Through Function",
          "Recursion",
          "Built in Function",
          "Exception (Try-Catch) 2"
        ],
        "Higher Order Function and Lambda": [
          "Lambda Expression",
          "Higher Order Function 1",
          "Higher Order Function 2",
          "Higher Order Function 3",
          "HOF and Lambda with Array"
        ],
        "Object Oriented Programming": [
          "Object, Attributes and Action",
          "Class: part 1",
          "Class: part 2",
          "Constructor",
          "Overload",
          "Inheritance",
          "Super",
          "Super and Constructor",
          "Override",
          "Access Modifier",
          "Package and Import",
          "Exception (Try-Catch) 3",
          "Exception (Try-Catch) 4",
          "Polymorphism 1",
          "Polymorphism 2",
          "Abstract, Interface",
          "Multi Inheritance",
          "Object, Companion Object",
          "Anonymous Class",
          "Anonymous Class Part 2",
          "Object Type Casting",
          "Nested Class",
          "Multi Threading",
          "Multi Threading Part 2",
          "Enum Class",
          "Enum Class Part 2",
          "Generic Class"
        ],
        "Kotlin with MySql": [
          "Setup Environment",
          "Connect to Database",
          "Result Set",
          "Display All Rows",
          "Update & Insert & Delete Row",
          "Result Set Meta Data"
        ],
        "Introduction to Android Studio": [
          "التعرف على البيئة، بناء التطبيق الاول",
          "برمجة التطبيق"
        ]
      },
      "requirements": [
        "لا تحتاج لاي مؤهلات، هذا الكورس مخصص للاشخاص الذين لا يعرفون شي عن البرمجة"
      ],
      "description": "هذه الدورة المفصلة في المستوى الاول والثاني من الكوتلن حيث افترض الشخص الذي امامي لا يعرف اي شي عن عالم البرمجة ستتمكن من خلال هذه الدورة من الدخول الى عالم البرمجة وفهم اساسيات اللغات البرمجية\nلا تحتاج الى اي مؤهلات للدخول الى هذه الدورة ،تتميز هذه الدورة بأنها مفصلة ولكن ليس فيها تشعبات وتفاصيل غير اساسية\n\nKotlin remains one of the most widely used and fastest-growing programming languages in recent years. Developers across the globe prefer using Kotlin for a range of projects such as data science, server-side or cloud development, etc. The demand for Kotlin is on the rise and it will continue to grow in the years to come. In this post, let’s explore the top five reasons why Kotlin is a great programming language to learn in 2021.\n\n\n1. Modern language\nIt is a modern programming language that brings together the best of object-oriented and functional programming. Some of the most promising features of Kotlin include clean compact syntax, security, general-purpose, and more.\n\n\n2. Easy to learn\nKotlin’s syntax is easy to learn for beginners and it offers a host of powerful features. It can be a great language to upskill for experienced programmers. It has a shallow learning curve especially if you have experience in Python or Java. The programming language is also quite easy for iOS developers as it is based on familiar concepts of modern technology.\n\n\n3. Great materials\nThere are ample materials available on Kotlin that learners can leverage to have a good grasp of the programming language. There are numerous courses that a beginner can start with. Most of these courses are self-paced and offer great insights into the programming language. Also, the developer community is quite huge so if learners get stuck or have queries they can always seek solutions from the developer community.\n\n\n4. Career prospects\nMany leading brands use Kotlin for their software and Kotlin skills are highly in demand. If estimates are to be believed, job postings related to Kotlin skills are skyrocketing since 2017 by 1400%.\n\n\n5. Community support\nKotlin is an open-source language and has a strong community of developers. There are over 200 Kotlin user groups, over 37,000 Kotlinlang slack users, and thousands of other members. The community support is huge in Kotlin and it is constantly growing.",
      "target_audience": [
        "يمكن لأي شخص ان يدخل الدورة ويتعلم لغة كوتلن"
      ]
    },
    {
      "title": "파이썬 Python 3 입문 - 미국 실리콘밸리 스타일의 코드로 실전 앱 개발 준비하기",
      "url": "https://www.udemy.com/course/python-beginner-korean/",
      "bio": "실리콘밸리의 소프트웨어 엔지니어가 Python 3 의 입문, 응용, 코드스타일을 전수합니다. 본강의에서는 최근 수요가 급증하고 있는 데이터 분석과 웹 스크래핑에도 쓰이고 있는 Python 의 기초를 다질수 있습니다",
      "objectives": [
        "Python 3 의 기본을 습득할 수 있습니다.",
        "응용편의 강의도 있으니 간단한 애플리케이션 개발에 필요한 스킬도 습득할 수 있습니다.",
        "Pythonic code 의 스타일을 익힐 수 있습니다."
      ],
      "course_content": {
        "여기서부터 시작해 주세요": [
          "첫 인사",
          "Udemy 미국 본사 오피스에 가 보았습니다",
          "강의 속도를 변경하고 싶은 경우"
        ],
        "Python 환경 설정": [
          "Mac에 Python 인스톨하기",
          "Mac에 Pycharm 인스톨하기",
          "Windows에 Python 인스톨하기",
          "Windows에 Pycharm 인스톨하기"
        ],
        "Python의 기본": [
          "변수 선언",
          "print로 출력하기",
          "수치",
          "문자열",
          "문자열의 인덱스와 슬라이스",
          "문자의 메소드",
          "문자의 대입",
          "f-strings"
        ],
        "데이타 구조": [
          "리스트형",
          "리스트의 조작",
          "리스트의 메소드",
          "리스트의 복사",
          "리스트의 사용 예",
          "튜플형 (Tuple)",
          "튜플의 언패킹",
          "튜플의 사용 예",
          "사전형",
          "사전형의 메소드",
          "사전형의 복사",
          "사전형의 사용 예",
          "집합형",
          "집합형의 메소드",
          "집합형의 사용 예"
        ],
        "제어 플로와 코드 구조": [
          "주석문 (Comment)",
          "한줄이 길어질 경우",
          "if 문",
          "디버거를 써서 확인해보기",
          "논리연산자",
          "In 과 Not 의 쓰임",
          "값이 들어있지 않다는 판정을 하는 테크닉",
          "None 판정",
          "while 문, continue 문, 그리고 break 문",
          "while else문",
          "input 함수",
          "for 문, break 문, 그리고 continue 문",
          "for else 문",
          "range 함수",
          "enumerate 함수",
          "zip 함수",
          "사전을 for 문으로 처리하기",
          "함수 정의",
          "함수의 인수와 반환값의 선언",
          "위치 인수, 키워드 인수, 그리고 디폴트 인수",
          "디폴트 인수를 쓸 때 주의할 점",
          "위치 인수의 튜플화",
          "키워드 인수의 사전화",
          "Docstrings 란",
          "함수 내 함수",
          "클로저",
          "데코레이터",
          "람다",
          "제너레이터",
          "리스트 내포 표기",
          "사전 내포 표기",
          "집합 내포 표기",
          "제너레이터 내포 표기",
          "이름 공간과 스코프",
          "예외 처리",
          "독자 예외의 작성"
        ],
        "모듈과 패키지": [
          "커맨드라인 인수",
          "Import 문 과 AS",
          "절대 경로와 상대 경로의 Import",
          "애스터리스크의 import 와 __init__.py, __all__ 의 의미",
          "ImportError 의 쓰임",
          "setup.py 으로 패키지로 만들어 배부하기",
          "내장 함수",
          "표준 라이브러리",
          "서드파티의 라이브러리",
          "import 적는 방법",
          "__name__ 과 __main__"
        ],
        "객체와 클래스": [
          "클래스의 정의",
          "클래스의 초기화와 클래스 변수",
          "생성사와 소멸자",
          "클래스의 계승",
          "메소드의 오버라이드와 super 로 기반 클래스의 메소드 불러오기",
          "Property 를 사용한 속성의 설정",
          "클래스를 구조체로서 쓸 때의 주의점",
          "덕타이핑",
          "추상 클래스",
          "다중계승",
          "클래스 변수",
          "클래스 메소드와 스태틱 메소드",
          "특수 메소드"
        ],
        "파일 조작과 시스템": [
          "파일의 작성",
          "with 구문으로 파일을 open 하기",
          "파일 읽어오기",
          "seek를 써서 이동하기",
          "쓰기와 읽어오기 모드",
          "템플릿",
          "CSV 파일에 쓰고 읽어오기",
          "파일 조작",
          "tarfile 의 압축 및 풀기",
          "zipfile 의 압축 및 풀기",
          "tempfile",
          "subprocess 로 명령어 실행하기",
          "datetime"
        ],
        "입문편의 마무리 - 간단한 애플리케이션 코딩해보기": [
          "Windows 와 Mac의 명령어",
          "간단한 애플리케이션을 만들어 봅시다",
          "데모 애플리케이션의 흐름을 설명한 pdf 파일",
          "데모 애플리케이션 압축 풀기",
          "샘플 데모 애플리케이션 코드",
          "샘플 코드의 설계와 폴더 구조의 해설",
          "샘플 코드의 Views 와 템플릿의 해설",
          "샘플 코드의 models 와 controller 의 해설"
        ],
        "코드 스타일": [
          "코드 스타일을 체크하는 툴의 확인",
          "스타일 룰",
          "Python 쓰는 방법",
          "도큐먼트와 Pylint",
          "문장처럼 Python 적기"
        ]
      },
      "requirements": [
        "Mac 및 Windows 에서 프로그래밍 환경을 구축할 수 있는 스킬",
        "프로그래밍의 기초 지식",
        "Mac 의 ls 및 Windows 의 dir 등, 기초 명령어의 지식",
        "각종 3rd party 의 애플리케이션 및 라이브러리 인스톨에서 문제가 생겼을 때 스스로 해결이 가능한 능력"
      ],
      "description": "이 코스에서는 Python3의 기초를 다루고 코딩 스타일에 관해서도 언급하고 있습니다.\nPython의 코드를 그냥 써서 프로그램이 실행되면 그것으로 끝나는 것이 아니라 Pythonic 이라고 일컬어지는 만큼 Python 은 Python 답게 깔끔하고 알기 쉬운 코드로 쓰는 것이 중요합니다.\n제가 10년 이상 근무하고 있는 미국 실리콘밸리의 IT 기업에는 어떤 기업보다도 세계 각국에서 유능한 프로그래머가 모여있습니다. 덕분에 여러 문화적인 배경을 가지고 있는 사람이 코드를 읽어도 이해할 수 있도록 깔끔하게 적을 필요가 있습니다.\n일본에서는 다른 사람은 알기 어려운 코딩을 하는 사람이 대단한 프로그래머 취급을 받는 경향이 있지만, 실리콘밸리에서는 깔끔하고알기 쉬운 코딩을 하는 것이 아주 중요합니다. 미국에서는 전직을 하는 사람이 많기 때문에 팀에 새로운 멤버가 들어오더라도 그 사람이 바로 알 수 있는 프로그램이어야 할 필요가 있습니다. 다른 사람이 이해하기 힘든 코딩을 하는 프로그래머는 해고 대상이 될 수도 있습니다.\n먼저 python 의 기초를 배운 뒤 애플리케이션 개발을 할 때는 코드 스타일에 주의하셔서 pythonic 한 코드를 쓸 수 있도록 합시다.\n향후 여러분의 활약에 도움이 되는 코스가 되었으면 좋겠습니다.\n\n\n<강좌 업로드/업데이트 히스토리>\n- 입문편 (Section 1~10) 업로드, 강좌 공개: 2018년 11월 8일\n\n\n- 응용편 (Section 11~23) 공개일\nSection 11 : 2018년 12월 14일\nSection 12: 2018년 12월 21일\nSection 13: 2018년 12월 28일\nSection 14: 2019년 1월 18일\nSection 15: 2019년 2월 8일\nSection 16: 2019년 2월 15일\nSection 17: 2019년 3월 8일\nSection 18: 2019년 3월 29일\nSection 19: 2019년 4월 5일\nSection 20: 2019년 4월 19일\nSection 21: 2019년 4월 26일\nSection 22, 23: 2019년 5월 10일\n\n\n2019년 5월 10일 현재 일본어 강좌 수강 인원: 20,170 명",
      "target_audience": [
        "Python３에 흥미가 있지만 경험이 없으신 분",
        "Python 프로그래밍 환경을 스스로 준비하실 수 있는 분"
      ]
    },
    {
      "title": "Développeur C# | Formation complète 2025",
      "url": "https://www.udemy.com/course/developpeur-cs-formation-complete/",
      "bio": "Apprenez la programmation avec le langage C# de Microsoft et créez des applications web puissantes avec .NET Core",
      "objectives": [
        "Apprendre la programmation en partant de zéro",
        "Obtenir les bonnes pratiques en programmation",
        "Apprendre la programmations orientée objet",
        "Savoir utiliser les collections (tableaux, listes, dictionnaires)",
        "Apprendre les nouveautés du langage C#",
        "Maitriser le langage C# dans tous ses recoins (fonctions asynchrones, delegates...)",
        "Devenir à l'aise avec le développement d'algorithmes",
        "Créer de nombreux projets (nombre magique, jeu du pendu, générateur de mots de passe...)",
        "Apprendre rapidement le développement Web en partant de zéro : HTML / CSS",
        "Créer des applications web complètes avec .NET Core",
        "Manipuler les bases de données (SQLite et MS SQL Server)",
        "Créer une interface d'administration protégée par mot de passe (Authentification)",
        "Savoir créer une API rest (pour la connecter à une application mobile, ou autre)",
        "Publier votre application web gratuitement sur le Cloud Azure",
        "Avoir les connaissances nécessaires pour créer vos propres projets de A à Z"
      ],
      "course_content": {
        "Introduction": [
          "Installation PC",
          "Installation MAC",
          "Coder en C# en ligne",
          "Vos cadeaux de bienvenue",
          "Faisons connaissance !",
          "Rejoignez le groupe privé !"
        ],
        "[PARTIE 1 : APPRENDRE LA PROGRAMMATION EN C#]": [
          "PARTIE1 : APPRENDRE LA PROGRAMMATION AVEC LE LANGAGE C#"
        ],
        "C# : Les bases de la programmation et premier programme": [
          "Comment fonctionne la programmation ?",
          "Premier programme",
          "Résolution du problème \"Attacher\"",
          "Variable « Nom »",
          "Conseil : Comment vous organiser ?",
          "Demander des données à l’utilisateur",
          "Exercice : Quel est votre age",
          "Les commentaires",
          "Variable numérique",
          "Convertir une chaine en entier",
          "Erreurs et gestion des exceptions",
          "Conseil : Fiche récap",
          "Boucle While",
          "Améliorer notre programme : Boucle",
          "Utiliser le debugger",
          "Exercice : Empêcher d’avoir un age négatif",
          "Exercice : Forcer à rentrer un nom",
          "Améliorer notre programme : Fonction",
          "Exercice : Fonction demander le nom",
          "Paramètre de fonction",
          "Exercice : fonction afficher",
          "Condition et type « bool »",
          "Condition « else if »",
          "Exercice : Conditions",
          "Condition ET / OU",
          "Conseil : Vos remarques",
          "La boucle « for »",
          "Nombre à virgules et paramètre optionnel",
          "Les chaines formatées",
          "Synthèse et idées"
        ],
        "PROJET - Le nombre magique": [
          "Projet débutant : Le nombre magique",
          "Création du projet",
          "Exercice : Demander nombre",
          "Exercice : Limiter le nombre entre 1 et 10",
          "Exercice : Nombre magique fixe",
          "Exercice : Boucler pour trouver le nombre magique",
          "Les nombres aléatoires",
          "Exercice : Rendre le nombre magique aléatoire",
          "Limiter le nombre de vies : boucle while",
          "Limiter le nombre de vies : boucle for",
          "Parcourir le code avec le debugger (et pile d’appels)"
        ],
        "PROJET - Jeu de maths": [
          "Projet débutant : Le jeu de maths",
          "Mise en place du projet",
          "Exercice : Demander une addition",
          "Exercice : Boucler sur un nombre de questions",
          "Exercice : Calculer les points",
          "Exercice : Phrase de commentaire",
          "Opérateur aléatoire : Addition ou multiplication",
          "Nouvelle notion : Enum",
          "Nouvelle notion : Switch case"
        ],
        "PROJET - Générateur de mots de passe": [
          "Projet débutant : Générateur de mots de passe",
          "Mise en place et principe",
          "Exercice : Fonctions génériques « Demander Nombre »",
          "Creation du module « outils »",
          "Choisir une lettre aléatoire",
          "Exercice : Créer le mot de passe",
          "Enrichissement de l’alphabet",
          "Exercice : Choisir l’alphabet",
          "Exercice : Générer plusieurs mots de passe",
          "Remarques et améliorations",
          "Exercice : Correction du message d’erreur"
        ],
        "C# : Les collections": [
          "Les collections en C# : Introduction",
          "Les tableaux",
          "Exercices sur les tableaux",
          "Les Listes",
          "Exercices sur les listes",
          "ArrayList",
          "Listes de listes",
          "Le dictionnaire",
          "La boucle Foreach",
          "Tris",
          "Linq",
          "Passage par valeur ou références"
        ],
        "PROJET - Le générateur de phrases": [
          "Projet débutant : Le générateur de phrases",
          "Exercice : Element aléatoire du tableau",
          "Exercice : Construire plusieurs phrases",
          "Exercice : Phrases uniques"
        ],
        "PROJET - Le jeu du pendu": [
          "Projet intermédiaire : Le jeu du pendu",
          "Exercice : Fonction AfficherMot",
          "Exercice : Demander une lettre",
          "Exercice : Fonction DevinerMot",
          "Exercice : Cas où on a perdu",
          "Exercice : Cas où on a gagné",
          "Exercice : Afficher les lettres exclues",
          "Afficher le pendu",
          "Exercice : Doublons des lettres exclues",
          "Charger les mots depuis un fichier",
          "Gestion des exceptions",
          "Exercice : Choisir un mot aléatoire",
          "Exercice : Voulez-vous rejouer ?"
        ],
        "C# : La programmation orientée objet": [
          "Programmation orientée objet : Introduction",
          "Comprendre la programmation orientée objet",
          "Problématiques : Programmation impérative",
          "Exemple d’utilisation de la POO (Classe Personne)",
          "Exercice : Liste de personnes",
          "Les niveaux de visibilité (public, private)",
          "Variable de classe",
          "Fonction statique",
          "Récap (classe, instance, static)",
          "Exercice : Paramètres du constructeur",
          "Propriétés et accesseurs",
          "Propriétes : définir get et set",
          "Récap : Parcourir notre code avec le debugger",
          "Héritage (classe étudiant)",
          "Surcharger une méthode (Virtual et override)",
          "Exercice : Passer le paramètre infoEtudes",
          "Exercice : Refactoriser la fonction Afficher",
          "Exercice : Paramètre ProfesseurPrincipal",
          "Exercice : Variable ProfesseurPrincipal",
          "Exercice : Créer la classe Enfant",
          "Exercice : Dictionnaire pour les notes",
          "Cacher une méthode (new)",
          "Récap : Héritage, surcharge et niveaux d’accès",
          "« where » et « is »",
          "Interface « IAffichable »",
          "Bilan sur la POO"
        ]
      },
      "requirements": [
        "Aucune connaissance préalable n'est requise",
        "Vous pouvez utiliser un PC Windows ou un MAC",
        "Tous les logiciels utilisés sont gratuits",
        "Vous pouvez suivre ce cours même si vous n'avez que 2 heures de temps hebdomadaire à y consacrer",
        "Vous pourrez consulter cette formation un nombre de fois illimité et démarrer quand vous voulez",
        "Vous obtiendrez un certificat d'accomplissement de cette formation"
      ],
      "description": "Vous débutez en programmation ? ou bien vous souhaitez vous améliorer ?\n\n\nCette formation complète sur le langage C# vous permettra :\n\n\nD'apprendre la programmation en partant de 0\nD'obtenir des bases solides en programmation\nD'avoir les bonnes pratiques en programmation (prendre les bonnes habitudes et coder proprement)\nDe savoir développer des algorithmes\nD'apprendre tous les concepts de la programmation orientée objet.\nD'apprendre le langage C# dans tous ses recoins : les fonctions asynchrones (async/await), les delegates...\n\n\n\n\nEnvie d'aller encore plus loin ?\n\n\nDans cette formation (de plus de 20 heures de contenu vidéo) vous apprendrez aussi le développement WEB en partant de 0, et vous allez créer des applications web dynamiques et puissantes avec .NET Core.\nVous allez apprendre:\nLa base du développement web avec les langages HTML5 et CSS3 (aucun pré-requis nécéssaire)\nA créer des sites web avec un responsive design (qui s'adaptent à toutes tailles d'écran)\nA créer des applications web dynamiques avec .NET Core\nA utiliser les nouvelles fonctionnalités de .NET comme le \"HOT RELOAD\" pour développer plus vite.\nA manipuler des bases de données (SQLite, MS SQL Serveur)\nA créer une interface d'administration protégée par mot de passe (authentification)\nA développer une API REST, qui vous permettra de partager les données de votre serveur avec d'autres applications (notamment une application mobile iOS Android avec Xamarin)\nA publier gratuitement votre projet sur le cloud Microsoft Azure.\n\n\nEt vous verrez, grâce au framework .NET et au langage C# : tout est rapide, tout est puissant, tout est possible !\n\n\n---\n- Vous êtes totalement débutant en programmation ?\n\n\n=> Commencez la programmation en prenant les bonnes habitudes dès le départ. Le langage C#, évolue, se simplifie et se rapproche de la syntaxe du langage Python : FACILITÉ. Et grâce au framework .NET, vous pourrez créer des applications performantes : PUISSANCE.\n\n\n- Vous êtes développeur C#/Xamarin ?\n\n\n=> Approfondissez vos connaissances en C#, grâce à cette formation qui ira en profondeur sur ce langage. Et apprenez à créer la partie serveur que vous pourrez connecter à votre application mobile Xamarin / Maui. Ce qui vous permettra de savoir développer des projets complets : application mobile + serveur.\n\n\n- Vous êtes développeur d'un autre langage ?\n\n\n=> Rejoignez cette formation pour approfondir vos connaissances en programmation grâce au langage C#, et découvrir les possibilités du framework .NET. La syntaxe et les concepts du langage C# sont relativement proche du Python : vous pourrez l'apprendre rapidement.\n\n\n--\n\n\nAlors prêt à démarrer l'aventure ?\n\n\nJe vous retrouve dans cette formation.",
      "target_audience": [
        "Toute personne souhaitant débuter en programmation",
        "Développeurs souhaitant s'améliorer et développer des applications C#/.NET puissantes",
        "Développeurs Xamarin souhaitant savoir développer la partie serveur"
      ]
    },
    {
      "title": "OutSystems Reactive para Iniciantes",
      "url": "https://www.udemy.com/course/outsystems-reactive-para-iniciantes/",
      "bio": "O início da sua jornada OutSystems",
      "objectives": [
        "O que é OutSystems e a comunidade OutSystems",
        "Como criar uma aplicação web em OutSystems desde a modelação de dados até à implementação das telas",
        "Desenvolvimento de aplicações low code",
        "Como criar uma aplicação em OutSystems reactive web",
        "Como fazer debug e monitorizar as aplicações utilizando as ferramentas da plataforma"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "O que é OutSystems",
          "Criar uma Conta",
          "Como Instalar o Ambiente de Desenvolvimento",
          "O Website da OutSystems (Parte I)",
          "O Website da OutSystems (Parte II)"
        ],
        "O seu Aplicativo OutSystems": [
          "Aplicação para Transações Bancárias",
          "Como Criar um Aplicativo"
        ],
        "Modelação de Dados": [
          "Importar Entidades e Dados (Parte I)",
          "Importar Entidades e Dados (Parte II)",
          "Criar Entidades do Zero"
        ],
        "Dar Significado aos seus Dados": [
          "Consumir Elementos entre Módulos",
          "Criar telas web usando Scaffolding (Parte I)",
          "Criar telas web usando Scaffolding (Parte II)",
          "Dashboards e Graficos (Parte I)",
          "Dashboards e Graficos (Parte II)",
          "Dashboards e Graficos (Parte III)",
          "Dashboards e Graficos (Parte IV)"
        ],
        "Segurança": [
          "Usuarios e Funções (Parte I)",
          "Usuarios e Funções (Parte II)",
          "Usuarios e Funções (Parte III)",
          "Usuarios e Funções (Parte IV)",
          "Ações e Wrappers (Parte I)",
          "Ações e Wrappers (Parte II)"
        ],
        "Depuração e Monitorização": [
          "Depuração no Aplicativo (Parte I)",
          "Depuração no Aplicativo (Parte II)",
          "Depuração no Aplicativo (Parte III)",
          "Depuração no Aplicativo (Parte IV)",
          "Service Center (Parte I)",
          "Service Center (Parte II)",
          "Service Center (Parte III)",
          "Service Center (Parte IV)"
        ],
        "Wrap Up": [
          "Próximos Passos"
        ]
      },
      "requirements": [
        "São recomendados conhecimentos básicos em programação e bancos de dados relacionais."
      ],
      "description": "Saiba o que é OutSystems e como é fácil e rápido criar seu primeiro aplicativo usando a plataforma de low code mais completa do mercado. Com este curso, você criará um aplicativo simples com OutSystems Reactive Web para gerenciar suas despesas e transações bancárias, indo da definição do modelo de dados às telas do aplicativo e também aprendendo como você pode depurar e monitorar seu aplicativo usando as ferramentas da plataforma.",
      "target_audience": [
        "Desenvolvedores web que pretendem aprender o que OutSystems tem para oferecer, focando na versão reactive da plataforma."
      ]
    },
    {
      "title": "C# ve JAVA Geliştiricileri için Clean Code Yazma Sanatı",
      "url": "https://www.udemy.com/course/csharp-ve-java-clean-code/",
      "bio": "Sürdürülebilir C# veya JAVA yazılımları için okunaklı, temiz ve esnek kodlama yaparak sektörün zirvelerini yakalayın.",
      "objectives": [
        "Sürdürülebilir ve okunabilir yazılım yapmayı öğreneceksiniz.",
        "İsimlendirme kuralları nedir? Bu kurallar neden hayati seviyede önemlidir?",
        "Code Smell nedir?",
        "Refactoring nedir? Nasıl yapılır?",
        "Technical Debt (Teknik Borçlanma) nedir?",
        "Referans tipin nimetleriyle sürdürülebilir yazılım nasıl yapılır",
        "Intentional Programming nedir? Refactoring nasıl yapılır?",
        "Code Review nedir?",
        "Katmanlı yapılara refactoring nasıl yapılır?",
        "Çıplak Class kalmasın da ne demek? Nasıl uygularım?",
        "If suistimali nedir? Nasıl engellerim?",
        "IoC ile çevik sistem manipülasyonlarını nasıl yaparım?"
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "İsimlendirme Kurallarıyla Başlayalım": [
          "İsimlendirme Kuralları Neden Önemlidir?",
          "Değerlendirmeler Hakkında",
          "Class Conctructor ve Method İsimlendirmeleri",
          "Parametre Degisken Enum Property Yazım Kuralları"
        ],
        "Code Smell Nedir?": [
          "Fonksiyonlar Üzerinde Code Smell",
          "Parametrelerle Kirli Kod Örneklendirmesi ve Sonuçları"
        ],
        "Encapsulation ile Refactoring": [
          "Kötü Kodun Encapsulation ile Refactor Edilmesi"
        ],
        "Technical Debt (Teknik Borçlanma)": [
          "Basit Bir Validasyonla Teknik Borçlanmayı Anlamak",
          "Teknik Borçlanmayı Refactor Etmek 1",
          "Teknik Borçlanmayı Refactor Etmek 2"
        ],
        "İş Kuralı Yazma Sanatı": [
          "İş Kuralı ve Validasyonu Doğru Anlamak",
          "Fluent Validation ile Validasyon Kuralları Yazmak"
        ],
        "Referans Tip Bazlı Sürdürülebilir Refactoring": [
          "Referans Tip Bazlı Refactoring",
          "Değer ve Referans Tipleri Anlamak",
          "Demo - Temiz Kod İçin Referans Tipler"
        ],
        "Çıplak Class Kalmasın": [
          "Çıplak Class Kalmasın"
        ],
        "If Suistimalini Engellemek": [
          "If Suistimalini Engellemek"
        ],
        "Adaptasyon Yöntemiyle Dış Sistem Entegrasyonları": [
          "Adaptasyon Yöntemiyle Sistem Entegrasyonları"
        ]
      },
      "requirements": [
        "Herhangi bir programlama diline aşina olmak"
      ],
      "description": "Türkiye'de 10.000 öğrenciyi geçmiş \"en iyi eğitmen ortalamasına (4.7)\" sahip eğitmenden \"C# Kursu: A'dan Z'ye Profesyonel Programcılık\" öğrenin.\n\"Gerçek Hayattaki Gibi Öğret\" prensibiyle, 300+ kuruma eğitim vermiş veya danışmanlık yapmış bir eğitmen olarak sizi gerçek hayata hazırlıyorum. Aynı konuyu sürekli tekrar etmenize rağmen bir türlü öğrenemiyorsanız, farklı kaynakların içinde boğuluyorsanız, şu an kendinizi güvende hissedin.\n----------------------------------------------------------------------------------------------------\nC# ve  JAVA Geliştiricileri için Clean Code Yazma Sanatı kursu sizi sektörün zirvelerine taşıyacak bir birikimin sonucunda hazırlanmıştır.\nİster C# ister JAVA geliştirin, best practiceleri sadece kurallar seviyesinde değil, gerçek hayatta nasıl kullanılıyorsa öyle öğrenin.\nEzberci tekniklerden uzak, neyi neden yaptığınızı öğreneceğiniz, yazılım geliştirmeye olan bakışınızı değiştireceğiniz teknikleri bu kursta öğreneceksiniz.\nTemel kurs başlıkları\nİsimlendirme kuralları nedir? Bu kurallar neden hayati seviyede önemlidir?\nİsimlendirmeleri Türkçe yaparsam ne olur? İngilizce yaparsam ne olur?\nCode Smell nedir?\nRefactoring nedir? Nasıl yapılır?\nTechnical Debt (Teknik Borçlanma) nedir?\nKötü kodu Encapsulation ile nasıl refactor ederim?\nİş kuralı nedir? Validasyon nedir? Bunlara bakış açım nasıl olmalıdır?\nReferans tipin nimetleriyle sürdürülebilir yazılım nasıl yapılır?\nIntentional Programming nedir? Refactoring nasıl yapılır?\nCode Review nedir?\nKötü yazılmış bir kodu nasıl okurum(Code Review)\nKötü yazılmış bir kodu nasıl refactor ederim?\nKatmanlı yapılara refactoring nasıl yapılır?\nÇıplak Class kalmasın da ne demek? Nasıl uygularım?\nIf suistimali nedir? Nasıl engellerim?\nYorum satırlarından nasıl kurtulurum?\nIoC ile çevik sistem manipülasyonlarını nasıl yaparım?",
      "target_audience": [
        "Kendisini sürdürülebilir yazılım geliştirme konusunda geliştirmek isteyen herkes."
      ]
    },
    {
      "title": "Design Patterns com C# - Entendendo Padrões de Projetos",
      "url": "https://www.udemy.com/course/curso-design-patterns-csharp/",
      "bio": "Aprenda Padrões de Projetos GoF e Princípios de Programação SOLID em explicações práticas com exemplos reais em C#",
      "objectives": [
        "Design Pattern com C#",
        "Aprenda o conceito, que problemas os Padrões de projetos resolvem e como aplicar em seus projetos C#",
        "Aprenda os principais Padrões de Projetos GoF"
      ],
      "course_content": {
        "Introdução": [
          "Introdução - Boas Vindas",
          "O que é Design Pattern ou Padrão de Projeto?",
          "O que você aprenderá neste curso e o que não aprenderá",
          "Ambiente de Desenvolvimento: C# e Visual Studio 2019"
        ],
        "Entendendo o princípio SOLID": [
          "O que é um princípio da programação",
          "O Princípio SOLID",
          "S - Single Responsibility Principle - SRP",
          "O - Open/Closed Principle - OCP",
          "L - Liskov Substitution Principle - LSP",
          "I - Interface Segregation Principle - ISP",
          "D - Dependency Inversion Principle - DIP",
          "Resumo da Seção"
        ],
        "Design Pattern - A Origem": [
          "A Origem do Design Pattern",
          "Gangue dos Quatro - Gang of Four (GoF)"
        ],
        "Por que e como aprender Design Patterns hoje": [
          "Por que utilizar Design Pattern",
          "Padrão Criacional, Estrutural e Comportamental"
        ],
        "Cuidado ao utilizar Design Patterns": [
          "Organize melhor e comunique melhor e não o contrário"
        ],
        "Design Pattern - Criacional": [
          "Factory Method - O problema",
          "Factory Method - A solução",
          "Factory Method - Como implementar - diagrama",
          "Factory Method - Exemplo em C#",
          "Exercício Prático - Factory Method - Desafio Hcode",
          "Abstract Factory - O problema",
          "Abstract Factory - A solução",
          "Abstract Factory - Como implementar - diagrama",
          "Abstract Factory - Exemplo em C#",
          "Exercício Prático - Abstract Factory - Desafio Hcode",
          "Builder - O problema",
          "Builder - A solução",
          "Builder - Como implementar - diagrama",
          "Builder - Exemplo C#",
          "Exercício Prático - Builder - Desafio Hcode"
        ],
        "Design Pattern - Estrutural": [
          "Adapter - O problema",
          "Adapter - A solução",
          "Adapter - Como implementar - diagrama",
          "Adapter - Exemplo C#",
          "Exercício Prático - Adapter - Desafio Hcode",
          "Bridge - O problema",
          "Bridge - A solução",
          "Bridge - Como implementar - diagrama",
          "Bridge - Exemplo C#",
          "Exercício Prático - Bridge - Desafio Hcode"
        ],
        "Design Pattern - Comportamental": [
          "Chain of Responsibility - O problema",
          "Chain of Responsibility - A solução",
          "Chain of Responsibility - Como implementar",
          "Chain of Responsibility - Exemplo C#",
          "Chain of Responsibility - Criando os handlers",
          "Exercício Prático - Chain Of Responsibility - Desafio Hcode"
        ],
        "Conclusão": [
          "Conclusão - Próximo passo"
        ]
      },
      "requirements": [
        "É imprecindível que o aluno possua conhecimentos sólidos em Orientação a Objetos e linguagem C#",
        "Este curso não ensina como configurar o ambiente para C#, ou como funciona o básico da linguagem."
      ],
      "description": "Aprenda os principais Padrões de Projetos GoF em explicações práticas com exemplos em reais em C#.\nDesign Patterns ajudam a elevar a carreira de um desenvolvedor a um próximo nível. Aprenda como os padrões de projetos resolvem muitos problemas conhecidos da indústria de desenvolvimento de software.\nTorne-se um profissional pronto para analisar cenários e aplicar cada um dos padrões de projetos.\nAprenda o princípio SOLID de programação, e crie códigos mais limpos e legíveis.\nMelhore a comunicação da sua equipe, aumente produtividade e a qualidade do software que você entrega. Os padrões são divididos em três tipos, Criacionais, Estruturais e Comportamentais, aprenda como e onde utilizá-los.\nAulas conceituais, com aplicação prática e desafios para praticar cada etapa do Desenvolvimento.",
      "target_audience": [
        "Programadores que desejam aprender Padrões de Projetos",
        "Desenvolvedores C#",
        "Engenheiros de Software e estudantes do curso de Engenharia de Sistemas"
      ]
    },
    {
      "title": "300+ Ćwiczeń - Programowanie w języku Python - od A do Z",
      "url": "https://www.udemy.com/course/programowanie-w-jezyku-python-od-a-do-z-cwiczenia/",
      "bio": "Rozwijaj swoje umiejętności w języku Python: 300+ praktycznych zadań, aby stworzyć solidne fundamenty programistyczne!",
      "objectives": [
        "rozwiąż ponad 300 ćwiczeń w języku Python",
        "postaw się przed rzeczywistymi problemami występującymi w programowaniu",
        "pracuj z dokumentacją",
        "zagwarantowane wsparcie instruktora"
      ],
      "course_content": {},
      "requirements": [
        "Ukończony kurs z programowania w języku Python na tym koncie instruktorskim"
      ],
      "description": "Chcesz opanować programowanie w języku Python w praktyce, bez przegadanych teorii i nużących wykładów? Ten kurs to doskonały wybór dla Ciebie! Ten kurs to zbiór ponad 300 starannie przygotowanych zadań, które poprowadzą Cię krok po kroku przez wszystkie najważniejsze aspekty języka Python – od podstaw aż po bardziej zaawansowane tematy.\nKurs został stworzony z myślą o osobach, które uczą się poprzez działanie. Zamiast długich wykładów znajdziesz tutaj konkretne zadania do rozwiązania, dzięki którym nauczysz się programować szybciej, skuteczniej i trwalej. Każde ćwiczenie zawiera opis problemu, wskazówki oraz rozwiązanie z wyjaśnieniem.\nCzego się nauczysz?\nPodstaw składni języka Python\nOperacji na danych (listy, słowniki, krotki, zbiory)\nProgramowania funkcyjnego i obiektowego\nObsługi wyjątków\nPracy z plikami i modułami\nPisania testów\nKorzystania z bibliotek takich jak datetime, random, math, czy re\nRozwiązywania realnych problemów programistycznych\nI wiele innych\nTo kurs idealny zarówno dla początkujących, jak i średniozaawansowanych. Jeśli chcesz opanować Pythona od A do Z i nabrać pewności w rozwiązywaniu zadań technicznych – ten kurs jest dla Ciebie! Dołącz już teraz i ucz się programowania przez praktykę!\n\n\nPython – Prosty w nauce, potężny w działaniu\nPython to dynamiczny, wysokopoziomowy język programowania, ceniony za przejrzystą składnię i uniwersalność. Doskonale sprawdza się zarówno w prostych skryptach automatyzujących codzienne zadania, jak i w zaawansowanych projektach z zakresu sztucznej inteligencji, analizy danych, web developmentu czy automatyzacji. Dzięki ogromnej społeczności i bogatemu ekosystemowi bibliotek, Python jest idealnym wyborem dla początkujących i profesjonalistów.",
      "target_audience": [
        "Przyszli Python Developerzy",
        "Przyszli Analitycy Danych i Data Scientistci",
        "Testerzy oprogramowania i osoby przygotowujące się do automatyzacji testów",
        "Specjaliści IT i administratorzy systemów",
        "Osoby przygotowujące się do rozmów kwalifikacyjnych z programowania",
        "Studenci i uczniowie kierunków technicznych i ścisłych",
        "Samoucy i pasjonaci programowania"
      ]
    },
    {
      "title": "C# Curso Completo: Do Básico ao Avançado!",
      "url": "https://www.udemy.com/course/curso-c-sharp/",
      "bio": "Aprenda C# em um só curso! Algoritmo, Estrutura de Dados, Fundamentos, OO, Coleções, Lambdas, LINQ e vários recursos!",
      "objectives": [
        "Capaz de desenvolver programas com a linguagem C#",
        "Conheceram mais sobre o paradigma Orientação a Objetos",
        "Conheceram a grande maioria dos recursos da linguagem C#",
        "Utilizar Coleções, Lambdas, Generics, Dynamics, etc"
      ],
      "course_content": {},
      "requirements": [
        "Desejável conhecimento básico de algoritmo"
      ],
      "description": "Seja muito Bem Vindo C# Curso Completo: Do Básico ao Avançado!\nC# é uma linguagem moderna Orientada a Objetos que possui uma série de recursos fantásticos e é uma das melhores opções para se iniciar no mundo da programação. A linguagem C# faz parte do .NET framework desenvolvido pela Microsoft.\nSeja um poliglota na programação! A cada nova linguagem que você aprende, novos conceitos e abordagens são aprendidos e isso sem dúvida te tornará um programador melhor!\n\nE esse curso tem por objetivo apresentar a linguagem C# e os seus recursos e está dividido em 12 seções, quais sejam:\nIntrodução - Principais temas abordados são: algoritmos, estrutura de dados e introdução ao .NET framework;\nConfiguração do Ambiente - Os passos necessários para configurar o computador para executar o C#;\nFundamentos - Tem por objetivo estabelecer bases sólidas sobre a linguagem;\nEstruturas de Controle - Aqui aprenderemos a controlar o fluxo da aplicação;\nClasses & Métodos - Aqui inicia a nossa jornada pela Orientação a Objetos com conceitos essenciais que todo desenvolvedor precisa saber;\nColeções - Várias estruturas de dados clássicas serão abordadas: array, listas, filas, pilhas, dicionários e etc\nOrientação a Objetos - Os pilares das Orientação a Objetos e como aplicar na prática;\nMétodos e Funções - O C# também suporte recursos do mundo do funcional, e nessa seção vermos o poder das funções, lambdas e métodos;\nExceções - Quando os erros ocorrem entram em cenas as exceções e as técnicas de tratamento de erro;\nExplorando API - Aprenderemos a mexer com arquivos, datas e intervalos de datas;\nTópicos Avançados - Generics, LINQ, Dynamic, Nullables e etc;\nConclusão - Despedida e agradecimento;\nSe junte a nossa comunidade de mais de 380.000 alunos satisfeitos!\nBons estudos!\nEquipe Cod3r",
      "target_audience": [
        "Pessoas que desejam aprender desenvolver software com a linguagem C#",
        "Desenvolvedores de C# iniciantes",
        "Desenvolvedores que desejam aprender mais sobre Orientação a Objetos"
      ]
    },
    {
      "title": "SAP ABAP für Anfänger 1: Programmieren lernen im SAP",
      "url": "https://www.udemy.com/course/sap-abap-kompendium-teil-1/",
      "bio": "Lerne die Programmiersprache ABAP von Anfang an! Keine Programmiervorkenntnisse erforderlich!",
      "objectives": [
        "Erste ABAP Programme professionell selbst zu erstellen",
        "Einen Job im SAP Umfeld",
        "Erweitern des eigenen SAP Skillsets",
        "Erweiterte, informationshaltige und interessante Videolektionen",
        "Spaß am Programmieren mit ABAP"
      ],
      "course_content": {},
      "requirements": [
        "Am besten einen Zugang zu einem SAP System besitzen (Ideal: EhP 7, aber nicht zwingend notwendig)",
        "Falls kein Zugang zu einem SAP System besteht, ist der Kurs dennoch hervorragend dafür geeignet, die Basics von SAP ABAP zu lernen und zu verstehen",
        "Du benötigst eine Rechnung für den Kurs? Unter dem folgenden Link können sich deutsche und österreichische Teilnehmer eine Rechnungsvorlage herunterladen und ausfüllen ( https://support.udemy.com/hc/de/articles/229233307)"
      ],
      "description": "SAP ABAP ist die bekannte Enterprise-Programmiersprache, die von den größten Unternehmen zum Betrieb ihrer Business-Systeme eingesetzt wird.\nIn der Kursreihe SAP ABAP-Kompendium (Teil 1 von 5) vermittle ich dir Schritt für Schritt die Grundlagen und essenziellen Fähigkeiten, die du benötigst, um ABAP zu verstehen und anzuwenden.\nDu wirst noch während des Kurses lernen, wie du deine ersten eigenen ABAP-Programme schreiben und testen kannst.\nDer Kurs ist ideal für Einsteiger. Er setzt keine Vorkenntnisse voraus, sondern beginnt mit den absoluten Basics, damit du sicher verstehst, wie du am besten deine eigenen SAP-Programme implementieren kannst.\nWir werden uns nach und nach an die wichtigsten Schlüsselaspekte der Programmiersprache herantasten, wie zum Beispiel\n• die Bedienung der Entwicklungsumgebung,\n• die Deklaration von Variablen und\n• das Rechnen mit ABAP.\nDu wirst mir dabei zusehen können, wie ich die Befehle, die ich erkläre, selbst anwende und ich werde dich anleiten, deinen eigenen Code zu schreiben und zu modifizieren.\nDu bekommst das Wissen auf eine Art und Weise vermittelt, dass du garantiert die grundlegenden Konzepte verstehen und anwenden können wirst!\nAußerdem werden wir uns in diesem Kurs auf die Praxis fokussieren, so dass du dich nicht ewig mit Theorie herumquälen musst, sondern die Sprache in einem absolut praktikablen und leicht verständlichen Ansatz lernen wirst und mit jeder Kurseinheit tiefer in die Materie einsteigst. Schon in der 9. Lektion wirst du dein erstes eigenes ABAP-Programm schreiben können!\nEgal ob du neu in der Programmierung bist, oder nur neu im Bereich ABAP: Diese Kursreihe ist dein Weg zur schnellen, professionellen ABAP-Softwareentwicklung im Businessumfeld!\nDie meisten ABAP-Kurse kosten tausende von Euros und kratzen gerade einmal an der Oberfläche. Meist darfst du dich erst einmal durch tausende langweiliger PDF-Seiten lesen und hast dann immer noch keine praktische Erfahrung. Der Zeitaufwand kann locker über 50 Tage im Vollzeitstudium betragen! Nicht so mit diesem Kompendium! Ich bin erfahrener SAP Ausbilder, Coach und Trainer, der über 5 Jahre Erfahrung in der Beratung und Implementierung mit SAP ABAP hat. Ich vermittle dir State-of-the-art ABAP-Knowhow aus dem aktuellsten Patch von SAP!",
      "target_audience": [
        "Jeder!",
        "Vom Anfänger bis hin zu erfahrenen SAP Consultants, die ihr Wissen erweitern wollen",
        "SAP Benutzer, die ihr Wissen um technische Skills erweitern wollen",
        "SAP Projektmitarbeiter",
        "SAP Basis Consultants die ihr Wissen erweitern wollen",
        "Studenten und Schüler, die in einem Businessumfeld arbeiten wollen",
        "SAP BW Consultants"
      ]
    },
    {
      "title": "Python Completo e Profissional",
      "url": "https://www.udemy.com/course/python-completo-e-profissional/",
      "bio": "Aprenda Python do Zero ao Avançado na prática com projetos e exerícios utilizando os principais recursos da linguagem.",
      "objectives": [
        "Estruturas básicas da programação",
        "Sintaxe da linguagem Python",
        "Desenvolvimento de aplicações de Linha de Comando",
        "Desenvolvimento de Aplicações de Ambiente Gráfico (GUI)",
        "Programação Orientada a Objetos (POO)",
        "Trabalhar com bases de dados em Python",
        "Trabalhar com manipulação de arquivos e pastas em Python",
        "Machine Learning",
        "Módulos em Python",
        "Python Matplotlib",
        "Referência da Linguagem Python",
        "Referência do Módulo Python"
      ],
      "course_content": {},
      "requirements": [
        "Não é necessário ter experiência em programação, você aprenderá tudo que precisa saber.",
        "Ter um computador ou laptop com acesso à internet para baixar e instalar as ferramentas necessárias para o curso."
      ],
      "description": "Neste curso o aluno aprenderá de forma prática a desenvolver aplicações completas e profissionais utilizando os mais importantes recursos que o Python oferece, tudo isto de forma clara e objetiva.\nApós realizar este curso o aluno sera capaz de desenvolver aplicações profissionais utilizando a linguagem Python e aplicando de forma correta todos os recursos que esta poderosa linguagem de programação oferece.\nAlém do que o aluno será capacitado para ingressar de forma segura no mercado de Tecnologia da Informação (TI).\nAlguns dos Tópicos que serão abordados durante o curso:\n. Estruturas básicas da programação\n. Sintaxe da linguagem Python\n. Desenvolvimento de aplicações de Linha de Comando\n. Desenvolvimento de Aplicações de Ambiente Gráfico (GUI)\n. Programação Orientada a Objetos (POO)\n. Trabalhar com bases de dados MySQL em Python\n. Trabalhar com bases de dados MongoDB em Python\n. Trabalhar com manipulação de arquivos e pastas em Python\n. Trabalhar com Módulos Python\n. Tkinter MVC\n. Machine Learning Python\n. Referência da Linguagem Python\n. Referência do Módulo Python\n. Desenvolver a Lógica de Programação\n. Criar soluções práticas utilizando os recursos da lingaugem Python\nAssim como também o aluno aprenderá os conceitos necessários das linguagens de programação para poder continuar a desenvolver seus conhecimentos, seja com esta ou qualquer outra linguagem de programação sem qualquer dificuldade e com total segurança.",
      "target_audience": [
        "Pessoas interessadas em começar a aprender a programar utilizando a linguagem Python.",
        "Pessoas sem experiência que queiram começar a entender como funciona a programação de computadores assim como desenvolver suas primeiras aplicações na prática",
        "Pessoas interessadas em desenvolver projetos completos e profissionais utilizando Python"
      ]
    },
    {
      "title": "(25+Saat) C |Sıfırdan İleri Seviyeye Uygulamalı Programlama",
      "url": "https://www.udemy.com/course/25saat-c-sifirdan-ileri-seviyeye-uygulamali-programlama/",
      "bio": "C Programlama Diliyle Sıfırdan İleri Seviyeye Programlama Mantığı | Temelden Başlayıp Gerçek Projeler İle Öğrenin",
      "objectives": [
        "C dilinin ve Programlamanın temellerini en iyi şekilde öğreneceksiniz.",
        "Kurs boyunca çok fazla örnek program yazacağımız için, bu kursu bitirdiğiniz zaman algoritma yeteneğiniz çok fazla gelişmiş olacak.",
        "Kursta öğrendiğiniz bilgilerle gerçek hayatta karşılaştığınız problemler için programlar yazabilecekseniz.",
        "Nasıl temiz bir kod yazabiliriz bunu öğreneceksiniz."
      ],
      "course_content": {
        "Gerekli Ortamların Kurulumu": [
          "Derleyici Kurulumu",
          "Hatırlatma",
          "Kurs Kaynak Kodları Hakkında"
        ],
        "Değişkenler(Variables)": [
          "Değişken Kavramına Giriş",
          "Değişkenler Değerlendirme Testi",
          "Değişkenler Konusu Özet"
        ],
        "Temel Veri Tipleri(Basic Data Types)": [
          "Integer & Double & Float Veri Tipi Ve Detayları",
          "Printf() fonksiyonunda kullanılan özel karakterler",
          "Char veri tipi ve özel fonksiyonları",
          "Temel Veri Tipleri Değerlendirme Testi",
          "Temel Veri Tipleri Özet"
        ],
        "Operatörler(Operators)": [
          "Aritmetik Operatörler",
          "İlişkisel Operatörler(Mantıksal Operatörler)",
          "Kodlama-Girilen para miktarından banknot hesaplama",
          "Ödev Tanıtımı",
          "Ödev Çözümü:Delta hesaplama & Ders Durumu Hesaplama & Dairenin Çevresi-Alanı",
          "Operatörler Değerlendirme Testi",
          "Operatörler Özet"
        ],
        "Koşul Yapıları(Control Flow)": [
          "If-Else Yapısı",
          "Kodlama-Bankamatik Programı",
          "Switch-Case Yapısı",
          "Ödev Tanıtımı",
          "Ödev Çözümü-1:Char Hazır Fonksiyonlarını Kendimiz Yazalım & Basamak Sayısı Bulma",
          "Ödev Çözümü-2: Taksit/İndirim Hesaplama Programı & Üçgen Oluşma Şartı Kontrolü",
          "Koşul Yapıları Değerlendirme Testi",
          "Koşul Yapıları Özet"
        ],
        "Döngüler(Loops)": [
          "Döngüler-For Döngüsü",
          "Döngüler-While&Do-While Döngüsü",
          "Kodlama-1: Asal Sayı Sorgulama & EBOB-EKOK Hesaplama& Boşluk Sayısı Hesaplama",
          "Kodlama-2: Girilen Sayıyı Terse Çevirme & Girilen Sayıyı Bit Düzeyine Çevirme",
          "Ödev Tanıtımı",
          "Ödev Çözümü-1: * Karakteri İle 4 Farklı Tipte Piramit Oluşturma",
          "Ödev Çözümü-2: Girilen Şifrenin Uygunluğunu Belirleme",
          "Ödev Çözümü-3: Girilen Sayının Mükemmel Sayı Olup Olmadığını Kontrol Etme",
          "Ödev Çözümü-4: Belirli Aralıktaki Asal Sayıları Yazdırma",
          "Ödev Çözümü-5: Girilen Sayının Armstrong Sayı Olup Olmadığının Kontrolü",
          "Ödev Çözümü-6: Break ve Continue ile Mükemmel Sayı Sorgusu",
          "Döngüler Değerlendirme Testi",
          "Döngüler Özet"
        ],
        "Diziler(Arrays)": [
          "Diziler-Tek Boyutlu Diziler",
          "Diziler-İki Boyutlu Diziler",
          "Kodlama-1: Satır Ve Sütun Toplamı & Matris Toplamı & Matris Transpozu Hesaplama",
          "Kodlama-2: Doğrusal Arama & Araya Sokma & Kabarcık Sıralalama Algoritmaları",
          "Ödev Tanıtımı",
          "Ödev Çözümü-1: Matris Çarpımı & Tek Boyutlu Matrisi İki Boyutluya Çevirme",
          "Ödev Çözümü-2: Seçmeli Sıralama Algoritması & İkili Arama Algoritması",
          "Diziler Değerlendirme Testi",
          "Diziler Özet"
        ],
        "Karakter Dizileri(Character Strings)": [
          "Karakter Dizileri-Giriş",
          "Karakter Dizileri-Puts&Gets Fonksiyonları",
          "Karakter Dizileri-Özel Fonksiyonlar",
          "Kodlama-1: Hazır String Fonksiyonlarını Kendimiz Yazalım(strlen,strcmp,strcat..)",
          "Kodlama-2:Girilen Stringi Terse Çevirme & Ortalama Harf Sayısını Hesaplama",
          "Kodlama-3: Palindrom String Sorgusu & Stringteki İstenen Karakteri Değiştirme",
          "Ödev Tanıtımı",
          "Ödev Çözümü-1:Girilen Stringte Büyük-Küçük Harf Değişimi",
          "Ödev Çözümü-2: Stringte Anagram Kontrolü &Kelime Baş Harflerini Büyük Harf Yapma",
          "Karakter Dizileri Değerlendirme Testi",
          "Karakter Dizileri Özet"
        ],
        "Fonksiyonlar(Functions)": [
          "Fonksiyonlara Giriş",
          "Fonksiyonlar-Local&Global Değişkenler",
          "Özyinelemeli Fonksiyonlar(Recursive Function)",
          "Kodlama-1: Anagram Kontrol Fonksiyonu",
          "Kodlama-2:Dizideki En Büyük&Küçük N.Değeri Hesaplama& Ünlü Harf Sayısı Hesaplama",
          "Kodlama-3: Recursive Fibonacci Fonksiyonu& Recursive İkili Arama(Binary Search)",
          "Ödev Tanıtımı",
          "Ödev Çözümü-1: Stringteki Özel Karakter Sayısını Hesaplama & Recursive OBEB-OKEK",
          "Ödev Çözümü-2: Matriste Diagonal Çarpımı & Satır ve Sütun Toplamı Hesaplama",
          "Fonksiyonlar Değerlendirme Testi",
          "Fonksiyonlar Özet"
        ],
        "İşaretçiler(Pointers)": [
          "İşaretçilere Giriş",
          "İşaretçilerin Dizilerle Birlikte Kullanımı",
          "İşaretçilerin Karakter Dizileriyle Birlikte Kullanımı",
          "İşaretçilerin Fonksiyonlarla Birlikte Kullanımı",
          "Fonksiyon İşaretçileri",
          "Kodlama-1: Dizide max&min Eleman Hesabı & Ortalama ve Toplam Hesabı",
          "Kodlama-2:Kendi strcmp() Fonksiyonumuzu Yazalım & String Tersini Alma Fonksiyonu",
          "Ödev Tanıtımı",
          "Ödev Çözümü-1: Kendi strcat ve strcpy Fonksiyonlarımızı Yazalım",
          "Ödev Çözümü-2: Fonksiyon İşaretçileri Arrayi ile Aritmetik İşlem Yaptırma",
          "İşaretçiler Değerlendirme Testi",
          "İşaretçiler Özet"
        ]
      },
      "requirements": [
        "Öğrencilerin bir bilgisayara sahip olması ve başlangıç seviyesinde bilgisayar kullanmayı bilmesi yeterlidir.",
        "Öğrencilerin, herhangi bir programlama bilgisine ihtiyacı yoktur.",
        "Kurs için en önemli koşulumuz; gelecek hayalleri,öğrenme disiplini ve hırsı."
      ],
      "description": "TR\nBu kursta başlangıç seviyesinden itibaren C Programlamanın temellerini ve programlama mantığını öğreneceğiz. Eğer ki yeni başlıyorsanız ve nereden başlayacağınızı bilmiyorsanız bu kurs tam size göre.\nKurs İşlenişi\nKurs boyunca siz de bunu fark edecekseniz ki\n1.Bölümle ilgili tüm temel bilgileri derinlemesine öğreneceğiz.\n2.Bölümde öğrendiğimiz bilgilerin daha anlaşılır ve kalıcı olması için kodlama egzersizleri yapacağız.\n3.Bölümde öğrendiğimiz tüm konuları kapsayan ödev soruları ile önce sizin çözmeniz hedeflenecek sonra benim çözümlerim ile kafanızdaki tüm soru işaretleri ortadan kalkacak. Kursun sonunda ödev sorularının ve cevaplarının  çalışma dökümanlarına ulaşabileceksiniz. Bu sayede dersleri takip etmeniz daha kolay bir hale gelecek.\n4.Bölümün sonunda sizlere sunulan testler ile kendinizi test edebilecek ve yanlış yaptığınız zaman neyin eksik olduğunu soru açıklamalarıyla birlikte görebileceksiniz.\nKurs İçeriği\nKurs boyunca aşağıdaki konuları görmeye ve öğrenmeye çalışacağız.\nDeğişkenler\nTemel Veri Tipleri\nOperatörler\nKoşul Yapıları\nDöngüler\nDiziler(Arrays)\nKarakter Dizileri(String)\nFonksiyonlar\nİşaretçiler(Pointers)\nDinamik Bellek Yönetimi\nYapılar(Structs), Ortaklıklar(Unions), Numaralandırmalar(Enumerations)\nÖn İşlemciler(Preprocessor)\nDosya İşlemleri\nKursun sonunda bu öğrendiğimiz konuların hepsini içerisinde kullanabileceğimiz iki adet proje yapacağız.\nOtel Rezervasyon Sistemi Projesi\nKütüphane Projesi\nEN\nIn this course, we will learn the basics of C Programming and programming logic from the beginner level. If you're just starting out and don't know where to start, this course is for you.\nCourse Syllabus\nYou will realize this during the course,\nWe will learn all the basics  in depth.\nWe will do coding exercises to make the information we learned more understandable and permanent.\nWith the homework questions covering all the subjects we learned, it will be aimed for you to solve first, then all the question marks in your mind will disappear with my solutions. At the end of the course, you will have access to the working documents of the homework questions and answers. This will make it easier for you to follow the lessons.\nYou will be able to test yourself with the tests presented to you and see what is missing when you do it wrong, with question explanations.\n\n\nCourse Content\nThroughout the course we will try to see and learn about the following topics.\nVariables\nBasic Data Types\nOperators\nCondition Structures\nLoops\nArrays\nCharacter Arrays(String)\nFunctions\nPointers\nDynamic Memory Allocation\nStructs, Unions, Enumerations\nPreprocessors\nFile Operations\n\n\nAt the end of the course, we will make two projects in which we can use all of the subjects we learned.\nHotel Reservation System Project\nStudent Library Project",
      "target_audience": [
        "Daha önce programlamayla uğraşmamış, yeni başlamak isteyen kişiler.",
        "C dili dışında başka bir dil ile uğraşmış, C öğrenmek isteyen kişiler.",
        "C diliyle daha önce ilgilenmiş ancak bunu ileri seviyeye taşımak isteyen kişiler",
        "Yazılıma başlamak istiyorum ancak nereden başlamam gerekiyor bilmiyorum diyen kişiler.",
        "Gerçek hayatta karşılaştığı problemler için programlar yapmak isteyen kişiler."
      ]
    },
    {
      "title": "Curso Completo Ruby - Desde las Bases hasta Rails",
      "url": "https://www.udemy.com/course/curso-ruby-rails/",
      "bio": "Curso Completo de Ruby donde aprenderás: bases del lenguaje, estructuras de datos, bloques, sinatra y rails",
      "objectives": [
        "Desarrollar Aplicaciones en Ruby",
        "Desarrollar aplicaciones web sencillas con sinatra",
        "Desarrollar aplicaciones web sencillas con rails"
      ],
      "course_content": {
        "Start Here": [
          "Introduction",
          "Sobre los Controles en Udemy",
          "Cómo Contactarme",
          "Datos de Contacto"
        ],
        "Introducción a la Programación en Ruby": [
          "Introducción a la Sección",
          "Sobre Ruby",
          "Instalando Nuestras Herramientas",
          "Hola Mundo",
          "Variables",
          "Cómo Ejecutar Programas en Ruby",
          "Evalúa tus Conocimientos",
          "Interpolación de Cadenas",
          "Interpolación de Cadenas II",
          "Obteniendo Datos del Usuario",
          "Cadenas de Texto",
          "Números",
          "Números II",
          "Métodos",
          "Métodos con Parámetros",
          "Métodos con Return",
          "Métodos",
          "Operadores de Comparación",
          "Operadores de Comparación II",
          "Condiciones",
          "Condiciones II",
          "Condiciones III",
          "Operadores Lógicos",
          "Operadores Lógicos II"
        ],
        "Estructuras de Datos": [
          "Introducción a la Sección",
          "Arreglos",
          "Elementos en los Arreglos",
          "Añadiendo Elementos",
          "Removiendo Elementos",
          "Hashes",
          "Hashes II",
          "Hashes III",
          "Hashes IV"
        ],
        "Ciclos en Ruby": [
          "Introducción a la Sección",
          "Ciclo do",
          "Ciclo Until",
          "Ciclo While",
          "Ciclo Each",
          "Times"
        ],
        "Programación Orientada a Objetos en Ruby": [
          "Introducción a la Sección",
          "Inicializando Clases",
          "Variables de Instancia",
          "Attributes",
          "Readers y Writers",
          "Métodos",
          "To String",
          "Métodos Adicionales"
        ],
        "Proyecto de Lista de Compras": [
          "Introducción a la Sección",
          "El Proyecto que Desarrollaremos",
          "Creando Nuestro Proyecto",
          "La Clase Item",
          "Probando la Clase Item",
          "La Clase List",
          "La Clase List II",
          "Armando la Interfaz de Usuario",
          "Armando la Interfaz de Usuario II",
          "Armando la Interfaz de Usuario III",
          "Armando la Interfaz de Usuario IV",
          "Armando la Interfaz de Usuario V",
          "Mejorando Nuestra Aplicación",
          "Mejorando Nuestra Aplicación",
          "Mejorando Nuestra Aplicación II",
          "Mejorando Nuestra Aplicación III",
          "Recapitulando"
        ],
        "Bloques en Ruby": [
          "Bloques en Ruby",
          "LLamando a Bloques desde Métodos",
          "Bloques y Parámetros",
          "Más Formas de LLamar a Nuestros Bloques",
          "¿Nos dieron un bloque?",
          "Bloques y Ruby"
        ],
        "Sinatra": [
          "Introducción a la Sección",
          "Presentando Nuestro Proyecto",
          "Instalando Sinatra",
          "Hola Mundo en Sinatra",
          "La Web y el Protocolo HTTP",
          "Routes en Sinatra",
          "Obteniendo una Lista de Archivos",
          "Ruby Embebido",
          "Desplegando una Lista de Talleres",
          "Parámetros de la URL",
          "Mejorando Nuestro Código",
          "Leyendo Información de un Archivo",
          "Armando Nuestra Route de Peticiones",
          "Armando Nuestro Formulario",
          "Guardando Datos de Nuestro Formulario",
          "Guardando Datos de Nuestro Archivo",
          "Creando la Página de Éxito",
          "Método Delete",
          "Armando el formulario para Borrar",
          "Borrando nuestro Taller",
          "Editando Talleres",
          "Armando el Formulario para Editar",
          "Poniendo los Valores de Nuestro Taller",
          "Put Route",
          "Mejorando Nuestro Método",
          "Templates",
          "CSS"
        ],
        "Ruby On Rails!!!": [
          "Introducción a la Sección",
          "Patrón MVC",
          "Explorando el Sitio Oficial de Rails",
          "Instalando Rails",
          "Instalando NodeJS",
          "Creando Nuestra Aplicación de Rails",
          "Scaffolds",
          "Explorando Nuestro Proyecto",
          "Nuestro Controlador",
          "Nuestro Modelo",
          "Nuestra Vista",
          "La consola de Rails",
          "Obteniendo Registros",
          "Creando Registros",
          "Actualizando Registros",
          "Borrando Registros",
          "Nuestras Migraciones",
          "Descripciones en Nuestros Cursos",
          "Haciendo Nuestra Migración",
          "Añadiendo Descripciones",
          "Editando Nuestras Vistas",
          "Partials",
          "White Lists",
          "Reto de la Sección",
          "Conclusión"
        ]
      },
      "requirements": [
        "Computadora con conexión a internet",
        "Navegador Web",
        "Conocimientos Previos de Programación serian útiles pero no requeridos"
      ],
      "description": "Hola a todos!\n\nBienvenidos a este nuevo curso de programación en Ruby completamente actualizado.\n\nEste curso diseñado para todo aquel que quiera aprender en este magnifico lenguaje tan popular en el mundo.\n\nConocimientos previos en programación son útiles pero no requeridos, ya que cubriremos todo paso por paso.\n\nEn este curso aprenderemos\n\nVariables\nCiclos\nDecisiones\nArreglos\nHashes\nProgramación Orientada a Objetos\nBloques en Ruby\nDesarrollo Web con Sinatra\nDesarrollo Web con Rails\n\nY mucho más...\nEste es un curso completamente práctico y enfocado a proyectos. Lo que quiere decir que no serán un montón de diapositivas aburridas sino que aprenderemos de la mejor forma: Programando Aplicaciones.\n\nTe espero!!!",
      "target_audience": [
        "Cualquier persona que quiera programar en Ruby puede tomar este curso"
      ]
    },
    {
      "title": "Spring Boot & Spring WebFlux Programación Reactiva RESTful",
      "url": "https://www.udemy.com/course/programacion-reactiva-con-spring-webflux-reactor/",
      "bio": "Construye aplicaciones reactivas con Spring WebFlux: RESTful, Functional Endpoints, Mongo, JUnit, Microservicios, Eureka",
      "objectives": [
        "Crea flujos reactivos usando Observables Flux y Mono, y sus principlaes operadores ReactiveX",
        "Implementa contrapresión (back pressure) del lado del cliente con WebFlux",
        "Maneja tolerancia a fallos y latencia en Flujo (Stream) reactivos",
        "Construye aplicaciones reactivas, asíncronas y sin bloqueo con Spring Boot, Reactor y Spring WebFlux",
        "Aprende todo lo necesario para trabajar con Reactor y Spring WebFlux siguiendo las mejores prácticas",
        "Construye un API Restful Reactiva para CRUD usando Spring WebFlux + Spring Data Mongo",
        "Desarrolla una aplicación web para CRUD usando Thymeleaf Reactivo + Spring WebFlux + Spring Data",
        "Implementa subida de archivos con programación reactiva",
        "Integra y aprende a trabajar con MongoDB en Spring de forma reactiva",
        "Aprende todo lo necesario para escribir código con programación funcional",
        "Realiza pruebas de integración con JUnit y WebTestClient",
        "Aprende a crear y consumir servicios web RESTful con WebFlux",
        "Conecta y consume otros microservicios utilizando cliente HTTP reactivo con WebClient.",
        "Implementa el registro y el escalamiento dinámico con el servidor Eureka Spring Cloud.",
        "Implementa Balanceo de carga del lado del cliente con Spring Cloud."
      ],
      "course_content": {
        "Introducción al curso": [
          "Introducción",
          "Antes de comenzar",
          "Herramientas necesarias",
          "Instalación del Spring Tools Suite IDE"
        ],
        "Reactor API: Programación reactiva desde la base": [
          "Introducción a Reactive Streams",
          "Creando Proyecto con Reactor API",
          "Creando un Stream Flux Observable",
          "El método subscribe()",
          "El evento onComplete",
          "El operador map",
          "El operador filter",
          "Los Observables son inmutables",
          "Creando un Flux (Observable) a partir de un List o Iterable",
          "El operador flatMap",
          "Convirtiendo un Flux List a un Flux String con operador map y flatMap",
          "Convirtiendo un Observable Flux a Mono",
          "Combinando dos flujos con el operador flatMap",
          "Combinando dos flujos con el operador zipWith",
          "El operador range",
          "Intervalos de tiempo con operador interval y zipWith",
          "Intervalos infinito con interval y operador el delayElements",
          "El operador create para crear desde cero un Observable Flux",
          "Manejando la contrapresión (backpressure)",
          "Descargar Código Fuente"
        ],
        "Introducción programación reactiva con Spring WebFlux": [
          "Introducción a Spring WebFlux",
          "Creando Proyecto con Spring WebFux",
          "Instalación MongoDB",
          "Qué es Mongo y algunos ejemplos",
          "Instalando Robo 3T una herramienta GUI para MongoDB",
          "Agregando Clases del Modelo Document y Repository",
          "Importando datos de ejemplo y el operador flatMap",
          "Eliminando colección productos (drop collection)",
          "Cambiando el nombre de la base de datos y agregando la fecha createAt",
          "Creando controlador y vista reactivos",
          "Suscribiendo otro Observador y modificando el Stream reactivo",
          "Modo Reactive Data Driven para menejar la contrapresión",
          "Modo Chunked para menejar la contrapresión",
          "Modo Chunked view names",
          "API Rest en WebFlux",
          "Descargar Código Fuente"
        ],
        "CRUD con Thymeleaf Reactivo": [
          "Introducción a los repositorios del API Spring Data",
          "Creando el componente service para los productos",
          "Agregando métodos handler crear y guardar en el Controlador",
          "Añadiendo la vista form",
          "Agregando método handler editar en el Controlador",
          "Añadiendo otra froma del editar",
          "Actualización: para Spring Boot 2.3.0 o superior agregar dependencia validation",
          "Añadiendo validación en el formulario",
          "Agregando método eliminar en el Controlador",
          "Añadiendo relaciones de colecciones y nuevo documento categoria",
          "Añadiendo categorías de ejemplo y el operador thenMany",
          "Añadiendo campo select categoria en el formulario",
          "Persistiendo y asignado la categoria en el handler del controlador",
          "Upload de imagen",
          "Añadiendo vista de detalle",
          "Añadiendo ver foto",
          "Descargar Código Fuente"
        ],
        "API RESTFUL usando RestController": [
          "Creando proyecto REST",
          "Implementando handler GET para listar en RestController",
          "Implementando handler GET ver detalle en RestController",
          "Implementando handler POST para crear",
          "Implementando handler PUT para actualizar",
          "Implementando handler DELETE para eliminar",
          "Implementando handler upload de imagen",
          "Implementando segunda versión para upload",
          "No olvidar agregar la dependencia spring-boot-starter-validation en el pom.xml",
          "Validando en handler crear",
          "Validando la relación categoría",
          "Descargar Código Fuente"
        ],
        "API RESTFUL usando Functional Endpoints": [
          "Creando y configurando componentes Router Function y Handler",
          "Implementando handler GET ver detalle por id",
          "Implementando handler POST para crear",
          "Implementando handler PUT para actualizar",
          "Implementando handler DELETE para eliminar",
          "Implementando handler upload de imagen",
          "Implementando segunda versión para upload",
          "Validando en Functional Endpoints - handler crear",
          "Descargar Código Fuente"
        ],
        "Junit: Test a nuestros EndPoints usando WebTestClient": [
          "Test endpoint listar",
          "Test endpoint listar usando consumeWith",
          "Test endpoint ver detalle",
          "Test endpoint crear",
          "Test endpoint editar",
          "Test endpoint eliminar",
          "Modificando uri endpoint para probar el controlador anotado @RestController",
          "Ejecutando tests en modo Mock",
          "Descargar Código Fuente"
        ],
        "WebClient: Consumiendo Servicios RESTful": [
          "Creando nuestro microservicio cliente",
          "Creando las clases models DTO",
          "Creando el componente Service implementado con WebClient",
          "Implementando el CRUD en el Service",
          "Creando el componente Handler",
          "Implementando el CRUD en el Handler",
          "Validando en el Handler crear",
          "Añadiendo el upload en el Service",
          "Implementando el upload en el Handler",
          "Añadiendo manejo de error 404 en el Handler",
          "Optimizando el manejo de error 404 en el Handler",
          "Descargar Código Fuente"
        ],
        "Spring Cloud Eureka Server: Registrando los Microservicios": [
          "Introducción a los Microservicios",
          "Creando servidor de registro Eureka",
          "Conectando nuestros servicios como clientes Eureka",
          "Escalando más instancias y probando los Microservicios con Postman",
          "Descargar Código Fuente"
        ]
      },
      "requirements": [
        "Dominio en Java SE y programación orientada a objetos",
        "Conocimientos base de Spring Core e Inyección de Dependencia",
        "Conocimientos base sobre Spring MVC"
      ],
      "description": "Bienvenido al curso de Programación Reactiva con Spring Boot 3, Spring WebFlux y Project Reactor, aprenderás línea a línea y desde cero como construir aplicaciones reactivas sin bloqueo y asíncronas con Spring Boot, Project Reactor y Spring WebFlux, desde los conceptos más básicos hasta un completo sistema conectado a base de datos NoSQL con MongoDB para implementar un CRUD (crear, leer, actualizar y eliminar) con relaciones de tablas usando el API Spring Data Mongo, subida de archivos, manejo de errores, validación de formulario, programación funcional, API RESTful reactivas, Functional Endpoints (Router Functions), Thymeleaf reactive, pruebas unitarias con JUnit y WebTestClient, consumir servicos RESTful con el cliente HTTP WebClient, Microservicios con Spring Cloud Eureka entre otros temas más.\n¿Porqué elegir nuestros cursos?\nAcceso 7 x 24 a nuestra Plataforma e-learning.\nSoporte online con profesor Java\nAl finalizar recibes un certificado digital\nSomos pioneros en brindarte este tipo de acceso para darte la libertad que necesitas para estudiar, donde quiera que te encuentres.\nExcelente relación calidad-precio.\nConocimiento aplicable a proyectos reales del mercado laboral.\nAtención rápida y satisfactoria a las dudas por parte del profesor.\nInteractividad del curso ya que contiene foros y comunicación para resolver dudas.\nTodos los materiales del curso están en español y al finalizar recibes un diploma UDEMY digital certificando tu aprobación con validez internacional y LinkedIn.\nSi quieres dominar la programación reactiva en Java con Reactor Project, Spring Boot y Spring WebFlux y avanzar al siguiente nivel, es casi obligatorio este curso, te invito a que te inscribas, nos vemos adentro.",
      "target_audience": [
        "Personas que estudian informática y/o ingeniería que estén estudiando o han estudiado Java y spring",
        "Personas que dominan Spring y quieran introducirse en la programación reactiva en Spring",
        "Desarrolladores apasionados de las nuevas tecnologías que dominan Java",
        "Desarrolladores apasionados de las nuevas tecnologías con base en Spring",
        "Personas interesadas en el desarrollo backend con Spring WebFlux que dominan Java",
        "Personas interesadas en el desarrollo backend con Spring WebFlux que dominan Spring MVC"
      ]
    },
    {
      "title": "Programación RsLogix 5000 Plataforma Logix",
      "url": "https://www.udemy.com/course/programacion-rslogix-5000-plataforma-logix/",
      "bio": "Aprende todo lo que necesitas para programar un PLC desde cero y comenzar a desarrollar tus proyectos de Automatización",
      "objectives": [
        "Programar PLC's ControlLogix, CompactLogix 5000",
        "Utilizar 4 Diferentes tipos de Programación, Escalera, Diagrama de Bloques, Secuencial y Texto Estructurado.",
        "Crear Sus Propios Bloques de Comando y Datos.",
        "Programar Online con esta Plataforma.",
        "Emular sus Programaciones Utilizando las Herramientas que Proporcionamos con tus Bonos.",
        "Acceso a descargas e información exclusiva en nuestro sitio de membresía (Se Aplican Restricciones)"
      ],
      "course_content": {
        "Bienvenida": [
          "Presentación del Curso e Instructor",
          "Preguntas y Respuestas Curso RSLogix 5000"
        ],
        "Instalaciones y Descargas Necesarias": [
          "Descargas",
          "Descargar e Instalar Vmware (Sistema de Virtualización)",
          "Instalacion Vmware Workstation Pro",
          "Carga Máquina Virtual a Vmware Workstation Pro",
          "Copiar una Máquina Virtual a Vmware",
          "Como Instalar Emulate 5000",
          "Licenciamiento de Software con Master Key",
          "Como Emular (Usando RSEmulate 5000)",
          "Instalar EDS (Electronic Data Sheet)"
        ],
        "Fundamentos, Estructura y Creación de Programación": [
          "Crear un Nuevo Programa",
          "Creación de Tags (Variables de Proyecto) 1ra Parte",
          "Creación de Tags (Variables de Proyecto) 2da Parte",
          "Creación de Tags (Variables de Proyecto) 3ra Parte",
          "Creación de Tags (Variables de Proyecto) 4ta Parte",
          "Creación de Tags (Variables de Proyecto) 5ta Parte",
          "Creación de Tags (Variables de Proyecto) Final",
          "Exámen"
        ],
        "Rutinas Principales de Programación y Su Estructura": [
          "Rutina Principal y Comienzo de Programacion Online",
          "Creación de Nuevos Programas, Crear Rutina Principal, 1ra Parte",
          "Creación de Nuevos Programas, Crear Rutina Principal, Parte Final",
          "Crear Nuevas Subrutinas, Timer, Saltos y Contactos 1ra Parte",
          "Crear Nuevas Subrutinas, Timer, Saltos y Contactos Parte Final",
          "Nuevas Tareas: Periódicas y Por Eventos, Borrar Tareas 1ra Parte",
          "Nuevas Tareas: Periódicas y Por Eventos, Borrar Tareas 2da Parte",
          "Nuevas Tareas: Periódicas y Por Eventos, Borrar Tareas Parte Final",
          "Exámen"
        ],
        "Subrutinas y Lenguaje de Programación FBD": [
          "Creación de Subrutinas con Lenguaje FBD 1ra Parte",
          "Creación de Subrutinas con Lenguaje FBD Parte Final"
        ],
        "Subrutinas y Programación SFC (Sequential Function Chart)": [
          "Programación SFC Inicios, Fundamentos",
          "Configuración para la Ejecución de SFC"
        ]
      },
      "requirements": [
        "Tener conceptos Básicos sobre Programación en Escalera, relevadores, electricidad y/o electrónica."
      ],
      "description": "Con \"Programación RsLogix 5000 Plataforma Logix\" aprenderas todo acerca de la programación de controladores para automatización de la marca Allen Bradley, para las plataformas ControlLogix y CompactLogix, la siguiente generación de PAC's (Programmable Automation Controller), llega al siguiente Nivel de Programación.\nEste curso esta diseñado para que particulares, estudiantes, profesionistas que con algunos conocimientos en programación de PLC's y cuestiones básicas de programación en escalera.\nAlguna vez te has preguntado como funcionan las líneas de producción de una fabrica, como es posibles crear productos en masa, miles de productos ?\nEl cerebro de cualquier línea de producción de una fábbrica es un PLC (Programable Logic Controller) o PAC's (Programmable Automation Controller - Nueva Generación) por sus siglas en ingles, un elemento indispensable para llevar a cabo cientos de tareas a la vez y de manera automática para controlar procesos a nivel industrial.\nEste curso cuenta con decenas de lecciones y examenes divididos en diferentes secciones. Cada sección te lleva a un nuevo nivel de conocimientos. Comenzamos desde lo más básico que es la instalación del software y herramientas.\nHasta cubrir de una manera práctica los comandos más utilizados y necesarios para realizar practicamente cualquier tipo de secuencia, lógica y algoritmo de programación en diferentes tipos de lenguaje normalizado por la IEC (Comisión Electrotécnica Internacional).\nAl final de las secciones tienes examenes que te permitiran reafirmar los conocimientos adquiridos en las lecciones, esto es muy importante para saber si el curso esta cumpliendo con su objetivo.\nEsta plataforma es muy flexible en la cual aprenderás y podrás crear tus propios comandos y tipos de datos para que los utilices en tus proyectos de automatización y realices estos con la mayor facilidad y rápidez posibles.",
      "target_audience": [
        "Particulares, Estudiantes e Ingenieros de Carreras afines a Automatización y Control"
      ]
    },
    {
      "title": "İleri Düzey C# ile EF, Linq, OOP, Devexpress Öğrenin (1/6)",
      "url": "https://www.udemy.com/course/165-saatlik-dev-egitim-projesi-1-6/",
      "bio": "165 Saatlik Web'deki En Kapsamlı İleri Düzey C# ile Entity Framework, Linq, Katmanlı Mimari, OOP, Devexpress Kursu.",
      "objectives": [
        "Bir projenin en başından en sonuna kadar (Kullanıcı girişinden, setup projesine kadar) hangi aşamalardan geçilerek geliştirildiğini öğrenmiş olacaksınız.",
        "Bir projenin kod tekrarı yapılmadan nasıl geliştirilebileceğini öğrenmiş olacaksınız.",
        "Bir proje için yönetim modülü oluşturarak birden fazla Database'in nasıl yönetilebileceğini öğrenmiş olacaksınız.",
        "C#, Entity Framework, Linq, Katmanlı Mimari, Nesneye Yönelik Programlama, Devexpress Componentlerini ileri seviyede kullanmayı öğrenmiş olacaksınız."
      ],
      "course_content": {
        "ÖNEMLİ BİLGİLENDİRMELER": [
          "İNDİRİM KUPONLARI HAKKINDA ÖNEMLİ BİLGİLENDİRME",
          "VİDEO ÇÖZÜNÜRLÜĞÜ HAKKINDA ÖNEMLİ BİLGİLENDİRME"
        ],
        "Giriş": [
          "Giriş"
        ],
        "Proje Altyapısı.": [
          "EF Model Karşılaştırması ve Neden EF Code First?",
          "Katmanlı Mimari Nedir? Kullanılması zorunlumudur? Temel Katmanlar Nelerdir?",
          "Projede kullanılacak katmanların oluşturulması.",
          "Projede Kullanılacak BaseForm'ların Tasarım İşlemleri."
        ],
        "Projede Kullanacağımız Kendi Component (Bileşen)'lerimizin Oluşturulması.": [
          "ButtonEdit",
          "TextEdit",
          "CalcEdit",
          "CardEdit",
          "ComboboxEdit",
          "CheckedComboboxEdit",
          "DateEdit",
          "CheckEdit",
          "FilterControl",
          "IbanNoTextEdit",
          "KodTextEdit",
          "MemoEdit",
          "PictureEdit",
          "SimpleButton",
          "SpinEdit",
          "TCKimlikNoText",
          "TelefonNoTextEdit",
          "EmailTextEdit",
          "ToogleSwitch",
          "DataLayoutControl",
          "ControlNavigator",
          "GridControl",
          "BandedGridControl"
        ],
        "Form İşlemleri-1": [
          "Formlarımızı Tasarlarken ve Kodlarken Hangi Kriterlere Göre Hareket Edeceğiz.",
          "OkulEditForm Tasarımı 1.Bölüm",
          "MenuManager Nedir. Ne İşe Yarar, Sub Menu Nasıl Oluşturulur.",
          "OkulEditForm Tasarımı 2.Bölüm",
          "OkulListForm Tasarımı",
          "BaseForm Update İşlemi",
          "BaseEntity Class Nedir. Projede Kullanacağımız BaseEntity Class'ın oluşturulması",
          "Okul, İl ve ilçe entityleri oluşturularak relation (ilişki)'ların kurulması."
        ],
        "Katmanlar": [
          "Data Katmanı, Migration İşlemleri ve bu işlemler hakkında bilgi verilmesi.",
          "DAL ( Data Access Layer ) Katmanı 1.Bölüm",
          "DAL ( Data Access Layer ) Katmanı 2.Bölüm",
          "DAL ( Data Access Layer ) Katmanı 3.Bölüm",
          "DAL ( Data Access Layer ) Katmanı 4.Bölüm",
          "DAL ( Data Access Layer ) Katmanı 5.Bölüm",
          "Messages Class'ı ve Functions'ların oluşturulması",
          "DAL ( Data Access Layer ) Katmanı 6.Bölüm",
          "BLL ( Business Logic Layer ) Katmanı 1.Bölüm",
          "GeneralFunctions Class Update İşlemi",
          "BLL ( Business Logic Layer ) Katmanı 2.Bölüm",
          "Convert Class'ının oluşturularak Functions'ların eklenmesi",
          "BLL ( Business Logic Layer ) Katmanı 3.Bölüm",
          "GeneralFunctions Class Update İşlemi",
          "BLL ( Business Logic Layer ) Katmanı 4.Bölüm",
          "KartTuru Enum'ı oluşturularak Enum'lar hakkında bilgi verilmesi",
          "BLL ( Business Logic Layer ) Katmanı 5.Bölüm",
          "Messages Class Update İşlemi",
          "Enum'lara atanmış Attribute'lerin okunabilmesi için gereken functions'lar",
          "BLL ( Business Logic Layer ) Katmanı 6.Bölüm",
          "İlk BLL Class'ının ve İlk Dto'nun oluşturulması ve Dto'lar hakkında bilgi verilm"
        ],
        "Form İşlemleri-2": [
          "AnaForm oluşturulması, ConnectionString ve Database Generate işlemi.",
          "Default ayarlala yapılan generate işlemi sonucunda oluşan hataların giderilmesi.",
          "Formlardaki kodlama işlemlerinin hangi mantıkla yapılacağı hakkında bilgi verilm",
          "BaseForm class'larımızın kodlama işlemleri 1.Bölüm",
          "ShowEditForms class'ı ve içeriğindeki functions'ların oluşturulması",
          "IBaseFormShow Interface'inin oluşturulması ve class'lar tarafından imlementasyon",
          "BaseForm class'larımızın kodlama işlemleri 2.Bölüm",
          "Okul Formları Kodlama işlemi 1.Bölüm",
          "Okul Formları Kodlama işlemi 2.Bölüm",
          "ButtonEnableFunction'ın oluşturulması",
          "Okul Formları Kodlama işlemi 3.Bölüm",
          "Id Oluşturma Function'ının hazırlanması",
          "ShowListForms class'ı ve içeriğindeki functions'ların oluşturulması",
          "Okul Formları Kodlama işlemi 4.Bölüm",
          "IBaseGenelBll interface'inin oluşturulması ve implementasyon işlemleri",
          "Okul Formları Kodlama işlemi 5.Bölüm",
          "Kod Üretim Function'ı ve DAL ve BLL Katmanları Update işlemi",
          "Okul Formları Kodlama işlemi 6.Bölüm",
          "IlBll ve IlceBll Class'larımızın oluşturularak içeriklerinin doldurulması.",
          "İl Formları tasarım ve Kodlaması.",
          "İlçe Formları tasarım ve Kodlaması.",
          "SelectFunctions Class'ının oluşturularak içeriğinin doldurulması",
          "Okul Formları ve BaseFormlar Update işlemi",
          "ButtonEdit Componentine yeni event ve eventhandler eklenmesi.",
          "ButtonEdit Componenti Update İşlemi",
          "İlçe Formları ve BaseFormlar Update İşlemi",
          "RowFocus Function'unun oluşturulması, kullanılması, test edilmesi",
          "Base Formlar Update işlemi",
          "Aktif ve Pasif Kartlar arasında dolaşabilmemizi sağlayan Function'ın oluşturulma",
          "EntityDelete işlemleri için functions, event, Interface'lerin oluşturulması",
          "Gerial Function'ının yazılması, kullanılması ve test edilmesi.",
          "Cursor işlemleri, FormClosing event'inin içeriğinin doldurulması ve test edilmes",
          "Popup menü oluşturulması, menuler için function oluşturulması ve test edilmesi",
          "Button Visibility İşlemleri",
          "AnaForm, Base Formlar, İl Formlar update işlemleri ve test edilmesi",
          "Form template işlemleri",
          "Statusbar Açıklama, Kısayol ve Kısayol Açıklama işlemleri",
          "Validation İşlemleri için Function, attribute, enum, interface oluşturulması",
          "Tablo verilerinin, kullanıcıların istediği formatta dışarı aktarılması işlemleri",
          "Edit Formlarda Update İşlemi."
        ]
      },
      "requirements": [
        "Temel düzeyde C# bilgisi",
        "Visual Studio ve Devexpress kurulu bir bilgisayarınızın olması"
      ],
      "description": "165 Saatlik Eğitim Programı: Profesyonel Ticari Yazılım Geliştirme\nBu eğitim programı, 6 kapsamlı bölüm ve toplamda 165 Saatlik ders içeriğiyle, ticari yazılım geliştirme sürecinde ihtiyacınız olan tüm temel ve ileri düzey bilgileri kapsamlı bir şekilde sunmaktadır.\n\n\nBu proje kapsamında:\nAltyapı oluşturma → Ticari yazılımlarınızı sağlam bir temel üzerine inşa etmek için gereken teknikleri öğreneceksiniz.\nTasarım kalıplarını uygulama (Patterns) → Projelerinize doğru ve verimli tasarım kalıplarını nasıl entegre edebileceğinizi anlayacaksınız.\nKatmanlı Mimari (Layered Architecture) → Projelerinizi modüler hale getirerek yönetilebilirlik seviyesini yükselteceksiniz.\nYönetim Modülü Entegrasyonu → Her firma için ayrı bir Veritabanı oluşturma ve bunları tek bir yönetim panelinden kontrol etme tekniklerini öğreneceksiniz.\nEntity Framework İleri Düzey Kullanımı → Karmaşık sorgular oluşturma ve bunları kolaylaştırma yöntemlerini keşfedeceksiniz.\nİlişkisel Veritabanı Yönetimi → Entity'ler arasındaki ilişkileri nasıl oluşturacağınızı ve optimize edeceğinizi öğrenerek verimli bir veri yönetimi sağlayacaksınız.\nLINQ ile Güçlü Sorgulamalar → LINQ kullanarak veri çekme, filtreleme ve işlem yapma yöntemlerini geliştireceksiniz.\nAuto Migration → Proje değişikliklerinizi hızlı ve hatasız bir şekilde veritabanınıza entegre etmeyi öğreneceksiniz.\nNesneye Yönelik Programlama (OOP) → Esnek ve sürdürülebilir kod yazma yöntemlerini derinlemesine inceleyeceksiniz.\nKod Tekrarını Minimuma İndirme → Daha temiz ve ölçeklenebilir kodlar yazmayı öğreneceksiniz.\nÖzel Bileşenler (Custom Components) Geliştirme → Kendi kütüphanelerinizi oluşturarak yazılımınıza özel bileşenler eklemeyi öğreneceksiniz.\nKod Standartları ve Best Practices → Kodunuzu endüstri standartlarına uygun şekilde nasıl yazacağınızı öğrenerek profesyonel bir yaklaşım benimseyeceksiniz.\nTablo Verilerini Farklı Formatlara Aktarma → Verilerinizi CSV, Excel, JSON, XML gibi farklı formatlarda dışarı aktarmayı öğreneceksiniz.\nGelişmiş Raporlama Teknikleri → Rapor oluşturma, önizleme, yazdırma ve rapor tasarımını yönetme konularında uzmanlaşacaksınız.\nDevExpress ile Gelişmiş UI Kullanımı → DevExpress bileşenlerini ileri düzeyde kullanarak profesyonel arayüzler oluşturmayı keşfedeceksiniz.\n\n\nEğitim Metodu:\nBu programda, ezbere öğrenmek yerine mantığını kavrayarak ilerleyeceksiniz. Bölüm başlamadan önce, tamamlanmış bir projeyi inceleyerek o aşamada ne yapılması gerektiğini görecek, ardından kendi geliştirme sürecinizi yöneteceksiniz.\n\n\nEğitimi Tamamladığınızda:\nBu eğitim sürecini eksiksiz olarak tamamladığınızda, piyasadaki en gelişmiş ticari yazılımları kendi başınıza geliştirebilecek seviyeye ulaşabilirsiniz.\n\n\nBu eğitim, yazılım geliştirme sürecine profesyonel bir bakış açısı kazandırarak, ticari projelerinizi kusursuz bir şekilde hayata geçirmenize yardımcı olacaktır.",
      "target_audience": [
        "C#, Entity Framework, Linq, Katmanlı Mimari, Nesneye Yönelik Programlama, Devexpress Componentlerini ileri seviyede kullanarak proje geliştirmek isteyenler."
      ]
    },
    {
      "title": ".NET Core: um curso orientado para o mercado de trabalho",
      "url": "https://www.udemy.com/course/net-core-curso-orientado-para-mercado-de-trabalho/",
      "bio": "Domine .NET: das boas práticas ao Azure, do zero à publicação. Aprenda a criar APIs robustas!",
      "objectives": [
        "Domain-Drive Design",
        "SOLID",
        "Testes de unidade & Integração",
        "SonarCloud & Sonarqube",
        "SCRUM",
        "Azure DevOps",
        "Docker",
        "Chat GPT",
        "Login com Google",
        "Clean Code",
        "CI/CD",
        "Pipelines",
        "Tokens JWT & Refresh Token",
        "Mensageria",
        "Migration do Banco de Dados",
        "FluentValidation",
        "Git & GitFlow",
        "Injeção de dependência",
        "Entity Framework"
      ],
      "course_content": {
        "Introdução": [
          "O que vamos aprender?",
          "Um Guia para a estrutura do curso",
          "Swagger e sua Remoção no .NET 9"
        ],
        "Ambiente de Desenvolvimento": [
          "Instalação MySql Server",
          "Instalação SQL Server",
          "ATUALIZAÇÃO - AzureDevOps mudou regra de criação de projetos",
          "Configurar DevOps",
          "Instalando GIT/GIT Flow & Criando Repositório",
          "Solicitando Permissão à Microsoft para Executar Pipelines no Seu Projeto"
        ],
        "Regras do nosso projeto": [
          "GitFlow: Por Que e Como Utilizar Esse Modelo de Ramificação",
          "Boas Práticas para Mensagens de Commit: Estruturando para Clareza",
          "Status Codes HTTP no Desenvolvimento de APIs"
        ],
        "SCRUM": [
          "Introdução - O que é Scrum?",
          "Estruturando o Time SCRUM: Papéis e Responsabilidades",
          "Product Backlog vs. Sprint Backlog",
          "Sprint Planning",
          "Estimativas de Tarefas no SCRUM: Técnicas e Práticas",
          "Daily Scrum: Propósito e Prática",
          "Sprint Review",
          "Sprint Retrospective"
        ],
        "Domain-Driven Design": [
          "Introdução ao Domain-Driven Design",
          "Visão Geral de Projetos .NET com DDD",
          "Nosso DDD melhorado"
        ],
        "SPRINT 1": [
          "Planning no Azure DevOps",
          "Estimando as Tarefas",
          "Criando projeto no Visual Studio",
          "Criando Seu Primeiro Projeto .NET Core com Git",
          "Criando Manualmente o Schema/Database no MySQL e SQL Server",
          "Criando Tabela de Usuário Manualmente no MySQL e SQL Server",
          "Endpoint registrar usuário",
          "Configurando o Fluxo de Trabalho GitFlow e Realizando Commit",
          "Criando a Regra de Negócio para Cadastro de Usuário",
          "Validando Dados da Requisição com FluentValidation",
          "Mensagens de exceção",
          "Middleware Cultura - Alterando idioma das mensagens",
          "Verificando Suporte da Culture na Requisição na API",
          "Criando Exceções Personalizadas: Por Quê e Como",
          "Criando Filtros de Exceções: Como e Porquê",
          "Criando a Entidade Usuário no Domínio",
          "ATUALIZAÇÃO - AutoMapper",
          "Configurando o AutoMapper para Mapeamento",
          "Criptografando Senhas",
          "DbContext com Entity Framework",
          "Criando um Repositório de Usuário com Entity Framework",
          "Configurando Injeção de Dependência para o Projeto de Infraestrutura",
          "Configurando Injeção de Dependência para o Projeto de Application",
          "Testando o Registro de Usuário no MySQL e SQL Server via API",
          "Recuperando a Connection String do arquivo appsettings.json",
          "Recuperando Outros Valores e Tipos do appsettings.json",
          "Verificando se o e-mail já esta cadastrado",
          "Criando um Pull Request no Azure DevOps",
          "Aprofundando no Conceito de Pull Request no Azure DevOps",
          "Controle de Commits e Políticas na Branch develop",
          "Criando o Schema/Database via API Parte 1",
          "Criando o Schema/Database via API Parte 2",
          "Criando o Schema/Database via API Parte 3",
          "Entendendo Migrations e a Utilização do FluentMigrator",
          "Implementando a Função Up para Criar a Tabela Usuario com FluentMigrator",
          "Configurando Versionamento na API e Testando Migrações no MySQL e SQL Server",
          "Iniciando Testes de Unidade para o Validator",
          "Compreendendo a Arquitetura de Funções de Testes",
          "Utilizando o Bogus para Geração de Dados Falsos",
          "Finalizando o teste de Sucesso Utilizando Fluent Assertions",
          "Abandonando Fluent Assertions: Nova Licença e Alternativas",
          "Criando Testes de Unidade para Casos de Erro do Validator",
          "Utilizando o Theory para Testes Parametrizados",
          "Iniciando Testes de Unidade para o Use Case",
          "Criando Builders para AutoMapper e Classe de Criptografia de Senha",
          "Introdução aos Mocks e sua Aplicação Prática",
          "Conclusão do Teste de Use Case para o Caso de Sucesso",
          "Criando Mocks para Funções com Retorno de Valores",
          "Criando Testes de Use Case para Exceções",
          "Compreendendo e Implementando Testes de Integração",
          "Teste de Integração Completo para o Caso de Sucesso",
          "Configurando Banco de Dados In-Memory para Testes de Integração",
          "Testando o Caso de Sucesso com Banco de Dados In-Memory",
          "Testando Erros em Cenários de Integração",
          "Verificando Idiomas nas Mensagens de Erro da API",
          "Integrando Projeto no Azure DevOps com SonarCloud",
          "Criando um Pipeline de Integração com SonarCloud",
          "Corrigindo Security Hotspots",
          "Corrigindo Code Smells",
          "NotNullWhen no C#",
          "Ajustando a Cobertura de Testes Identificada pelo SonarCloud",
          "Reavaliação das Métricas no SonarCloud Após Correções",
          "Review da Sprint 1: Avaliando Progresso e Oportunidades de Melhoria",
          "Realizando Retrospectiva do Projeto no Azure DevOps"
        ],
        "SPRINT 2": [
          "Sprint Planning 2: Continuando Fluxo do Usuário",
          "Configurando URLs em Minúsculas por Padrão",
          "Customizando um Converter para Eliminar Espaços em Branco",
          "Função no Repositório para Login Utilizando AsNoTracking",
          "Definindo a Regra de Negócio para Login com Custom Exception",
          "Endpoint de Login e Otimizando Controllers",
          "Implementando Testes de Unidade para Regra de Negócio do Login",
          "Desenvolvendo Testes de Integração para o Processo de Login",
          "Refatorando para Eliminar Duplicação de Código nos Testes de Integração",
          "Geração de Access Token em JWT para Autenticação",
          "Testando a Geração do Access Token",
          "Refatorando Testes de Unidade para Validação da Geração do Access Token",
          "Configurando o Swagger para Incluir Tokens nas Requisições",
          "Validando Tokens JWT Recebidos na Autenticação",
          "Criando um Atributo Personalizado para Autorização",
          "Criando uma Classe para Recuperar a Entidade de Usuário a partir do Token",
          "Recuperando o Perfil do Usuário na Autenticação",
          "Criando Testes de Unidade e Integração para Recuperar Perfil de Usuário",
          "Atualizando o Perfil do Usuário",
          "Testes de Unidade para a Atualização o perfil do Usuário",
          "Pequena Refatoração no Encriptador de Senhas para Aprimoramento",
          "Fluxo Completo de Alteração de Senha do Usuário",
          "Desenvolvendo Testes de Unidade e Integração para a Alteração de Senha do Usuári",
          "Shallow Clone no SonarCloud e Compreendendo o Conceito",
          "Avaliando e Corrigindo Métricas no SonarCloud"
        ],
        "SPRINT 3": [
          "Sprint Planning 3: Fluxo de Receitas",
          "Iniciando Migration e Explorando Chaves Estrangeiras",
          "Adicionando outras tabelas e Exclusão em Cascata",
          "Testando a Nova Migration e Apresentando as Entidades da Receita",
          "Implementando Validator para Requests de Receitas",
          "Introdução aos Testes de Unidade para o Validador de Receitas",
          "Validando Listas de Informações da Receita com FluentValidation",
          "Expandindo os Testes de Unidade para o Validador de Receitas com Listas",
          "Regra de Negócio para Criação de Receitas",
          "Tipos de IDs e nossa abordagem",
          "Criptografando Id",
          "Testes de unidade Criar Receita",
          "Criando o Endpoint de Filtragem de Receitas com POST",
          "Implementando o Repositório para Filtragem de Receitas",
          "Entendendo DTOs, Records e Testando o Filtro de Receitas",
          "Testes de Unidade para Filtragem de Receitas",
          "Implementando a Regra de Negócio e o Repositório para Recuperar Receita por ID",
          "Criando e Explicando o Uso de ModelBinder",
          "Adicionando um Filtro no Swagger para Aceitar IDs como String",
          "Testes de Unidade para Recuperar Receita por ID",
          "Implementando o Fluxo para Deletar uma Receita",
          "Testes de Unidade para o Fluxo de Deletar uma Receita",
          "Implementando Funções de Atualização de Receita no Repositório",
          "Demonstrando a Atualização de Receitas em Funcionamento",
          "Testes de Unidade e Integração para Atualização de Receitas",
          "Recuperando Receitas para o Dashboard com Take",
          "Testes de Unidade e Integração para Recuperação de Receitas no Dashboard",
          "Analisando e Corrigindo Métricas com SonarCloud"
        ],
        "SPRINT 4": [
          "Sprint Planning 4: Integração com Ferramentas Externas",
          "Iniciando Geração de Receitas com ChatGPT",
          "Criando Conta na OpenAI e Compreendendo os Preços do ChatGPT",
          "Configurando ChatGPT com .NET",
          "Integração com ChatGPT e Conversão de Respostas em Instâncias de Classes",
          "Testes de Unidade e Integração para Gerar Receitas com ChatGPT",
          "Fluxo Inicial para Fazer Upload de Imagens",
          "Importância e Validação de Arquivos de Imagem",
          "Criando uma Conta no Portal do Azure",
          "Visão Geral do Portal do Azure: Subscription e Resource Group",
          "Criando Storage Account no Azure e Configurando o Projeto",
          "Implementando o Upload de Imagem",
          "Recuperando uma Receita com Imagem Associada",
          "Deletando uma Imagem Associada a uma Receita",
          "Criando uma Receita com Imagem Usando FormData",
          "Refatorando Validações de Imagens para Evitar Duplicação de Código",
          "Recuperando Lista de Receitas com Imagens",
          "Testes de Unidade e Integração para fluxo de Upload de imagem",
          "Testes de Integração para Registrar Receita com Form-Data",
          "Fluxo Inicial para processo de deletar Conta dos usuarios",
          "Configurando um Service Bus para Envio de Mensagens",
          "Criando Background Service para receber a Mensagem",
          "Implementando a Lógica para Deletar a Conta de um Usuário(a)",
          "Configurando o Portal do Google e Integração com .NET",
          "Entendendo o Fluxo de Login com Google",
          "Criando um Endpoint para Login com Google",
          "Concluindo o Fluxo de Login com Google",
          "Testes de Unidade e Integração para o Fluxo de Login com Google",
          "Fluxo de Esquecer Senha com Envio de Email"
        ],
        "SPRINT 5": [
          "Sprint Planning 5: Deploy da API em Produção no Azure",
          "Criptografia de Senha com Bcrypt",
          "Implementando Refresh Token para Autenticação",
          "Introdução à Docker",
          "Criando o Arquivo Dockerfile",
          "Criando um Container Registry no Azure",
          "Criando um Banco de Dados MySQL no Azure",
          "Criando e Armazenando com Segurança o Arquivo appsettings.Production.json",
          "Criando Pipeline de Continuous Delivery Integrado com Azure Container Registry",
          "Tasks no Pipeline para Download do Arquivo appsettings.Production.json",
          "Criando um App Service no Azure para Executar Nossa API",
          "Criando um Endpoint de HealthCheck",
          "Configurando o Continuous Deploy"
        ]
      },
      "requirements": [
        "É indicado para pessoas que já tenha uma noção básica na linguagem .NET (C#)."
      ],
      "description": "Você está pronto para APRENDER COM UM PROJETO REAL e desbloquear seu potencial como dev .NET e levar suas habilidades para o próximo nível? Já se perguntou: como funciona o pipeline de trabalho em grandes empresas? Ou teve dúvidas como: minha equipe está de fato seguindo bons princípios de desenvolvimento? Não precisa procurar mais! Este curso é para você e o transformará em um dev experiente capaz de criar APIs robustas, implantá-las no Azure e integrar recursos como Chat-GPT, Login com Google ... e tudo isso enquanto domina as ferramentas e práticas essenciais.\n\n\nDe forma prática, simples e divertida, meu objetivo neste curso é fazer com que você:\n\n\nCrie uma API do zero: vou te orientar em todas as etapas, desde a configuração do projeto até a criação de endpoints avançados, docker image e pipelines.\n\n\nPublicação no Azure: Aprenda a publicar com confiança suas APIs em um ambiente de produção usando o Microsoft Azure.\n\n\nLogin com Google: Implementa autenticação segura e fácil de usar usando o Google OAuth para seus aplicativos.\n\n\nIntegração com o Chat GPT: Saiba como integrar o Chat GPT em sua API para geração de textos.\n\n\nPipelines CI/CD: Automatize e otimize seus processos de desenvolvimento com pipelines CI/CD, garantindo entregas contínuas e de alta qualidade.\n\n\nTestes unitários & integração: Eleve a qualidade do seu código dominando as técnicas de teste de unidade para evitar falhas na suas regras de negócio.\n\n\nDomain-Driven Design (DDD): Arquitete sua API com os princípios do DDD para aumentar a escalabilidade, a capacidade de manutenção e melhorar a organização do projeto.\n\n\nScrum: Adote as práticas do Agile Scrum para agilizar seu processo de desenvolvimento, aprimorar a colaboração e fornecer resultados mais rapidamente.\n\n\nPrincípios SOLID: Domine os princípios SOLID para criar um código robusto, sustentável e dimensionável.\n\n\nSonar Cloud: Monitore e melhore a qualidade da sua base de código com o Sonar Cloud, uma ferramenta líder de análise de código.\n\n\nSeja você um iniciante que deseja entrar no mundo do .NET ou um desenvolvedor experiente que deseja aprimorar suas habilidades e integrar recursos de IA, este curso é seu recurso definitivo para o sucesso. Junte-se a mim hoje e embarque em uma jornada para se tornar um desenvolvedor .NET!\n\n\nVamos construir juntos uma API em .NET core do zero. Será 20% Teoria e 80% Prática. É uma oportunidade imperdível, não perca tempo e se matricule já!\n\n\nUm curso com todo esse conteúdo vai te poupar tempo, pois você não vai precisar errar várias vezes como eu errei, participar de vários projetos para aprender e ter experiência. Aqui você vai ter acesso vitalício às aulas e em poucas horas aprender dicas de desenvolvimento, conselhos sobre trabalho em equipe, e muito mais. Novos vídeos serão disponibilizados no futuro, sem nenhum custo adicional. Se não estiver satisfeito, pode pedir seu dinheiro de volta em até 30 dias, não se preocupe. É uma oportunidade imperdível, não perca tempo e se matricule já!",
      "target_audience": [
        "Pessoas que já tenham uma noção básica na linguagem .NET (C#);",
        "Devs que desejam aumentar os seus conhecimentos em programação .NET;",
        "Devs que desejam criar uma Web API Rest do zero em .NET até o ambiente de produção;",
        "Devs que desejam aprender boas práticas de programação e trabalho em equipe para se destacarem e até mesmo ajudar suas equipes e empresas a serem mais produtivas."
      ]
    },
    {
      "title": "【한글자막】 React 완벽 가이드 2025 with React Router & Redux",
      "url": "https://www.udemy.com/course/best-react/",
      "bio": "React.js를 기초부터 배우기! React, Hook, Redux, React 라우터, Next.js, 모범 사례 학습하기! Javascript부터 웹 어플리케이션 배포까지, React와 프론트엔드 최신기술 학습",
      "objectives": [
        "React 를 기초부터 배웁니다. 강의를 완강할 때 쯤이면 고급 React 개발자로 거듭나 있을 것입니다.",
        "NextJS 로 빌드된 풀스택 앱을 포함한 여러 고품질 데모 앱을 구축하기",
        "이 과정의 90만 명 이상의 학생과 제가 가르친 모든 과정의 300만 명 이상의 학생과 함께하세요.",
        "여러 데모 프로젝트 구축 및 실제 사례 살펴보기",
        "로컬 또는 클라우드 개발 환경에서 따라하기",
        "React Hook 과 React 컴포넌트에 대해 모두 알아보기",
        "React 의 컨텍스트 API 및 React Redux 로 복잡한 상태를 효율적으로 관리하기",
        "HTTP를 통해 독립형 React 앱 및 백엔드에 연결된 애플리케이션을 구축하세요.",
        "React 라우터로 라우팅 및 라우팅 관련 데이터 불러오기에 대해 알아보기",
        "React 앱에서 사용자 인증 구현하기",
        "NextJS 로 풀스택 React 앱 구축하기",
        "React 유닛 테스트 시작하기",
        "리액티브 웹 앱의 성능을 향상시키는 법",
        "JavaScript의 장점을 극대화하는 React 개발방법론",
        "React 심화 개념(useCallback, useMemo, useReducer etc)",
        "React hooks, 상태 관리(Redux, Context API), Next js, TypeScript",
        "네트워크, SPA, TDD",
        "프론트엔드 웹 개발 실무를 경험하기 위한 프로젝트 학습"
      ],
      "course_content": {
        "시작하기": [
          "강의에 오신 것을 환영합니다!",
          "React.js란 무엇이며, 왜 사용할까요?",
          "리액트JS 와 \"바닐라 자바스크립트\" 비교: 왜 리액트를 사용해야 할까요?",
          "첫 번째 리액트 앱 편집하기",
          "이 코스 소개 및 개요",
          "이 코스를 수강하는 두 가지 방법(경로)",
          "강의를 최대한 활용하는 방법",
          "온라인 학습 커뮤니티에 참여하세요",
          "리액트 프로젝트 생성하기",
          "별도의 프로젝트 초기 설정이 필요한 이유"
        ],
        "자바스크립트 새로고침": [
          "모듈 소개",
          "시작 프로젝트",
          "페이지에 자바스크립트 추가하기 및 리액트 프로젝트의 차이점",
          "리액트 프로젝트 구축 프로세스",
          "“import” 및 \"export\"",
          "변수와 값 다시 보기",
          "연산자 다시 보기",
          "함수와 매개변수 다시 보기",
          "연습: 함수 다루기",
          "화살표 함수",
          "화살표 함수 구문에 대해 자세히 알아보기",
          "객체와 클래스 다시 보기",
          "배열 및 배열 메소드(map()과 같은)",
          "연습: 배열 메소드",
          "디스트럭처링",
          "함수 매개변수 목록에서 디스트럭처링",
          "스프레드 연산자",
          "컨트롤 구조 다시 살펴보기",
          "리액트 없이 DOM 조작하기!",
          "함수를 값으로 사용하기",
          "함수 내부에서 함수 정의하기",
          "참조형과 기본 값 비교",
          "차세대 JavaScript - 요약",
          "JS Array functions",
          "모듈 리소스"
        ],
        "리액트 핵심 - 컴포넌트, JSX, 속성, 상태 등": [
          "모듈 소개",
          "컴포넌트의 모든 것! [핵심 개념]",
          "초기 프로젝트 구축하기",
          "JSX와 리액트 컴포넌트 [핵심 개념]",
          "첫 커스텀 컴포넌트 생성 및 활용",
          "세부 과정: 컴포넌트와 파일 확장자",
          "리액트의 컴포넌트 처리 과정 & 컴포넌트 트리 생성법 [핵심 개념]",
          "컴포넌트와 JSX",
          "동적 값 출력 및 활용 [핵심 개념]",
          "동적 HTML Attributes(속성) 설정 & 이미지 파일 로딩",
          "Prop(속성)으로 컴포넌트 재사용 [핵심 개념]",
          "Props(속성) 대체 문법",
          "더 다양한 Prop(속성) 문법",
          "동적인 값과 Prop(속성)",
          "추천 실습: 파일에 컴포넌트 저장 및 좋은 프로젝트 구조 활용",
          "컴포넌트 옆에 컴포넌트 스타일 파일 저장하기",
          "컴포넌트 구성: 특별한 “children” Prop (“자녀” 속성)",
          "이벤트 처리하기 [핵심 개념]",
          "함수를 Prop(속성)의 값으로 전달하기",
          "이벤트 함수에 커스텀 인자 전달하기",
          "추천 실습 및 이벤트 핸들링",
          "UI를 업데이트하지 않는 법 - 리액트의 뒷편 살펴보기 [핵심 개념]",
          "State(상태) 관리 & Hooks(훅) 사용법 [핵심 개념]",
          "데이터 기반 State(상태) 가져오기 및 출력",
          "State(상태)와 계산된 값",
          "조건적 콘텐츠 렌더링",
          "CSS 스타일링 및 동적 스타일링",
          "List(리스트) 데이터 동적 출력",
          "조건적 콘텐츠와 동적인 리스트",
          "모듈 요약"
        ],
        "리액트 핵심 - 심화 단계": [
          "모듈 소개",
          "JSX를 꼭 사용하지 않아도 되는 이유",
          "Fragments(프래그먼트) 사용법",
          "컴포넌트를 분리해야 할 때는 언제일까요?",
          "Feature(피처) 및 State(상태)로 컴포넌트 분리하기",
          "문제: 내부 요소에 Props(속성)이 전달되지 않을 경우",
          "감싸진 요소에 Props(속성) 전달하기",
          "여러 JSX 슬롯 활용법",
          "컴포넌트 타입 동적으로 설정하기",
          "기본 Prop(속성) 값 설정",
          "Next 프로젝트 선행 및 심화 개념",
          "모든 콘텐츠가 컴포넌트에 보관될 필요가 없는 이유",
          "세부 과정: 이미지 저장소는 public/ VS assets/",
          "새 프로젝트: 틱택토 게임 첫 단계",
          "개념 복습: 컴포넌트 분리 & 재사용 가능한 컴포넌트 구축",
          "개념 복습: State(상태) 활용법",
          "컴포넌트 인스턴스의 분리된 동작법",
          "조건적 콘텐츠 & State(상태) 업데이트를 위한 차선책",
          "추천 실습: 옛 State(상태)를 기반으로 올바르게 상태 업데이트하기",
          "사용자 입력 & 양방향 바인딩",
          "다차원 리스트 렌더링",
          "추천 실습: 불변의 객체 State(상태)로 업데이트하기",
          "State(상태) 끌어올리기 [핵심 개념]",
          "교차 State(상태) 방지하기",
          "계산된 값 권장 및 불필요한 State(상태) 관리 방지",
          "Props(속성)에서 State(상태) 파생하기",
          "컴포넌트 간의 State(상태) 공유",
          "State(상태) 관리 간소화 및 불필요한 State(상태) 분별",
          "조건적 버튼 비활성화",
          "분리된 파일로 데이터 아웃소싱",
          "계산된 값 끌어올리기",
          "계산된 값에서 새로운 계산된 값 파생하기",
          "틱택토 게임: “게임 오버” 화면 & 무승부 여부 확인",
          "불변성이 어떤 경우에서든 중요한 이유",
          "State(상태)를 끌어올리면 안 되는 경우",
          "State(상태) 끌어올리기 대안",
          "마무리 다듬기 및 컴포넌트 개선"
        ],
        "리액트 핵심 - 연습 프로젝트": [
          "모듈 소개 & 도전 과제",
          "Header(헤더) 컴포넌트 추가하기",
          "User Input(사용자 입력) 컴포넌트로 시작하기",
          "이벤트 핸들링 & 양방향 바인딩 활용",
          "State(상태) 끌어올리기",
          "값 계산하기 및 숫자 값 올바르게 다루는 방법",
          "리스트에 결과 출력하기 및 더 많은 값 파생하기",
          "조건적 콘텐츠 출력"
        ],
        "리액트 컴포넌트 스타일링": [
          "모듈 소개 & 프로젝트 시작하기",
          "CSS 코드 여러 파일에 분단하기",
          "바닐라 CSS로 리액트 앱 스타일링하기 - 장.단점",
          "바닐라 CSS 스타일이 컴포넌트에 스코핑되지 않는 이유",
          "Inline(인라인) 스타일로 리액트 앱 스타일링하기",
          "동적 및 조건적 Inline(인라인) 스타일",
          "CSS 파일과 CSS 클래스를 사용한 동적 및 조건적 스타일링",
          "연습: 동적 CSS 클래스",
          "CSS 모듈로 CSS 규칙 스코핑하기",
          "“Styled Components” 소개 (서드 파티 패키지)",
          "Styled Components로 유동적 컴포넌트 생성",
          "Styled Components로 동적 및 조건적 스타일링",
          "Styled Components: 가상 선택자, 중첩 규칙 & 미디어 쿼리",
          "재사용 가능 컴포넌트 생성 및 컴포넌트 조합",
          "리액트 앱 스타일링을 위한 테일윈드 CSS 소개",
          "리액트 프로젝트에서 테일윈드 CSS 추가 및 사용법",
          "테일윈드: 미디어 쿼리 & 가상 선택자",
          "테일윈드의 동적 및 조건적 스타일링",
          "테일윈드 CSS로 데모 앱 옮기기",
          "테일윈드 CSS: 장.단점",
          "연습: 동적 스타일"
        ],
        "리액트 앱 디버깅하기": [
          "모듈 소개",
          "초기 프로젝트",
          "리액트 오류 메시지 이해하기",
          "코드 흐름 및 경고 분석",
          "리액트의 Strict Mode(엄격모드) 이해하기",
          "리액트 DevTools 사용하기",
          "연습: 오류 수정하기"
        ],
        "Refs(참조) & Portals(포탈) 활용하기": [
          "모듈 소개 & 초기 프로젝트",
          "복습: State(상태)를 사용한 사용자 입력 관리 (양방향 바인딩)",
          "복습: Fragments (프래그먼트)",
          "Refs(참조) 소개: Refs(참조)로 HTML 요소 연결 및 접근",
          "Refs(참조)로 DOM 제어",
          "Refs(참조) VS State(상태) 값",
          "데모 프로젝트에 도전 과제 추가하기",
          "타이머 설정 & State(상태) 관리",
          "“DOM 요소 연결” 외 Refs(참조) 활용법",
          "모달 컴포넌트 추가하기",
          "커스텀 컴포넌트로 Refs(참조) 전달",
          "userImperativeHandle 훅으로 컴포넌트 API 노출",
          "추가 예시: Refs(참조)와 State(상태)를 사용해야 하는 경우",
          "컴포넌트 간의 State(상태) 공유",
          "데모 앱의 “결과 모달창” 개선",
          "모달을 ESC(Escape) 키로 닫기",
          "Portals(포탈) 소개 및 이해하기"
        ],
        "연습 프로젝트: 프로젝트 관리 앱 (컴포넌트, 상태, 참조 등 적용)": [
          "모듈 소개 & 초기 프로젝트",
          "“프로젝트 사이드바” 컴포넌트 추가하기",
          "테일윈드 CSS로 사이드바 & 버튼 스타일링하기",
          "“새 프로젝트” 컴포넌트와 재사용 가능한 “입력” 컴포넌트 추가하기",
          "테일윈드 CSS로 버튼과 입력 항목 스타일링",
          "JSX와 테일윈드 스타일을 위한 컴포넌트 분리 (재사용 가능성 향상)",
          "컴포넌트 간 교환을 위한 State(상태) 관리법",
          "Refs(참조)와 전달된 Refs(참조)로 사용자 입력 받아오기",
          "프로젝트 생성 핸들링 & UI 업데이트",
          "사용자 입력 유효성 검사 & useImperativeHandle로 에러 모달 띄우기",
          "테일윈드 CSS로 모달 스타일링",
          "선택 가능한 프로젝트 구현 및 프로젝트 정보 보기",
          "프로젝트 삭제 핸들링",
          "“프로젝트 태스크” 및 태스크 컴포넌트 추가",
          "태스크 관리 & Prop Drilling 이해하기",
          "태스크 지우기 & 사소한 버그 고치기"
        ],
        "리액트의 컨텍스트 API & useReducer - 상태 관리 심화 단계": [
          "모듈 소개",
          "Prop Drilling 이해 & 프로젝트 개요",
          "Prop Drilling: 컴포넌트 구성으로 해결하기",
          "컨텍스트 API 소개",
          "컨텍스트 소개 및 부여",
          "컨텍스트 소비하기",
          "컨텍스트와 State(상태) 연결하기",
          "컨텍스트를 소비하는 여러가지 방법",
          "컨텍스트 값이 바뀌면 생기는 일",
          "전체 데모 앱에 컨텍스트 API 적용하기",
          "컨텍스트 아웃소싱 & 분리된 제공자 컴포넌트에 State(상태) 부여",
          "useReducer 훅 소개",
          "Action 보내기 & useReducer로 State(상태) 수정하기"
        ]
      },
      "requirements": [
        "JavaScript + HTML + CSS 기초는 필수입니다.",
        "이 과정을 성공적으로 이수하기 위해 JavaScript 전문가가 아니어도 됩니다!",
        "ES6+ JavaScript 지식은 도움이 되지만 필수는 아닙니다.",
        "리액트 또는 다른 JS 프레임워크 사전 지식이 필요하지 않습니다!"
      ],
      "description": "[React 입문, <React 완벽 가이드>로 시작해야하는 이유]\n\nReact 최신 패턴과 예제를 바탕으로 한 실습 중심의 강의!\n가장 기본적이고 핵심적인 부분부터 심화 개념, 그리고 실무에서 React와 함께 사용되는 모든 기술을 한번에!\n리액트 사전 지식이 없어도 쉽게 이해할 수 있도록 구성된 단계적 커리큘럼과 친절한 설명\n이 강의는 900,000명 이상의 수강생을 ReactJS 개발자로 만들었습니다. Udemy의 다른 어떤 React 강좌보다 더 많은 수강생을 배출했습니다!\n-\n2025년 1월 업데이트:\nReact 19가 완전히 업데이트되었습니다!\n- “폼 액션을 통해 양식 관리하기” 새로운 섹션 추가 (React 19에서 도입)\n- \"React 서버 컴포넌트 (RSC) & 서버 액션 - 자세히 알아보기\" 새로운 섹션 추가 (React 19와 안정적)\n- React 19로 인한 크고 작은 변경 사항을 조정하기 위해 여러 강의를 업데이트했습니다.\n2024년 업데이트:\nNextJS 앱 라우터 섹션에 새로운 강의(~3시간 분량)가 추가되었습니다.\n새로운 “리액트 패턴 및 모범사례” 섹션 추가\n2023년 10월 대규모 강의 업데이트:\n강의 전반부 전면 업데이트(강의 재녹화, 나머지 절반은 23년 2월에 이미 업데이트됨)!\n설명방식 및 데모 프로젝트가 개선되었습니다. 이제 더 많은 핵심 개념과 모범 사례를 다룹니다.\n2023년 8월 업데이트:\nReact Query (Tanstack Query) 에 대한 새로운 섹션이 추가되었습니다.\nFramer Motion과 React 앱 애니메이션에 대한 새로운 섹션이 추가되었습니다.\n2023년 6월 업데이트:\n두 개의 새로운 연습 프로젝트 추가\n더 많은 코딩 연습 추가\n새로운 JS 복습 섹션 추가\n수많은 사소한 개선 및 수정 사항\n이 강좌는 여러분이 알아야 할 모든 핵심적인 최신 기능을 갖춘 최신 버전의 React로 완전히 업데이트되었으며 실용적인 방식으로 React를 가르칩니다!\n2023년 2월 업데이트:\n후반부 강의의 대부분을 완전히 다시 녹화했습니다. (라우팅, 인증 포함)\n\n\n바쁜 고객과 비즈니스 전문가를 위한 코스!\n이 과정은 두 가지 방식으로 수강할 수 있습니다: 1) \"컴플릿\" 방식(40시간 이상의 전체 과정을 처음부터 끝까지 모두 듣기)와 1) \"패스트트랙\" 방식(~4시간 요약 모듈만 취사 수강하기) - 여러분의 시간 여유에 맞는 가장 적합한 방식으로 선택하여 학습할 수 있습니다!\n\n\nReact.js 는 웹을 위한 최신 반응형 사용자 인터페이스를 구축하기 위해 요즘 가장 많이 사용하고 배우는 인기 1위의 JavaScript 라이브러리입니다.\n이 강좌는 모든 핵심 기본 사항을 살펴보고, 수많은 예제를 살펴보고, 고급 개념도 소개하는 등 React 를 기초부터 단계별로 심도 있게 가르칩니다.\n모든 이론, 수많은 예제와 데모, 과제와 연습, 그리고 대부분의 다른 강의들에서는 다루지 않는 중요한 지식을 얻을 수 있습니다 - (이 강의의 분량이 방대한 이유입니다!)\nReact를 왜 배워야 하는지 모르겠고 광고나 \"알고리즘\" 때문에 이 강좌를 시작하게 되었다고 해도 걱정하지 마세요: ReactJS는 웹 개발자로서 핵심 기술이며 이 강좌에서는 React 가 왜 그렇게 중요한지에 대해서도 설명할 것입니다!\n\n\n[<React 완벽 가이드>에 오신 것을 환영합니다!]\n이 과정은 필요한 모든 최신 패턴과 모범 사례를 사용하여 실습 중심의 방식으로 React.js 를 가르칩니다. 모든 핵심 기본 사항과 고급 개념 및 관련 주제를 학습하여 진정한 React.js 개발자로 거듭날 수 있습니다.\n이 강좌는 React.js 개발자가 되기 위해 알아야 하고 배워야 하는 모든 것을 다루기 때문에 정말 방대한 강좌입니다!\n여러분이 React 에 대해 전혀 모르거나 이미 기본적인 React 지식을 가지고 있더라도(필수 사항은 아니지만 문제도 아닙니다) 이 강의를 수강함으로써 유용한 정보와 지식을 많이 얻을 수 있습니다!\n이 강좌의 목표는 여러분이 React 를 자신 있게 다룰 수 있도록 하여, React 개발자 포지션에 지원하거나 자신의 프로젝트에 사용하거나 단순히 개발자로서 포트폴리오를 향상시키는 등 여러분의 목표가 무엇이든 간에 자신감을 가질 수 있도록 하는 것입니다: 이 강좌를 통해 여러분의 목표를 달성할 수 있도록 해드리겠습니다!\n\n\n저는 이 강의를 처음 런칭한 이후로 꾸준히 업데이트하여 항상 여러분 최상의 최신 방식으로 React를 학습할 수 있도록 하고 있습니다!\n\n\n[<React 완벽 가이드>에서 다루는 내용]\n\n\nReact.js 에 대한 상세한 소개 (React 란 무엇이며 왜 사용해야 할까요?)\n모든 핵심 기본 사항: React 의 작동 방식, React 로 컴포넌트 빌드하기 및 React 로 UI 구축하기\n컴포넌트, props 및 동적 데이터 바인딩\n사용자 이벤트와 상태를 이용해 대화형 애플리케이션 만들기\nReact 가 내부에서 어떻게 작동하는지 이해하기 위한 (철저한) 비하인드 스토리 살펴보기\n리스트와 조건부 콘텐츠로 작업하는 방법에 대한 자세한 설명\nReact Hook 심층분석!\n내장된 Hook 으로 작업하고 사용자 정의 Hook 을 구축하기\nReact 앱을 디버깅하는 방법\n\"스타일 컴포넌트\"와 \"CSS 모듈\"로 React 앱 스타일링하기\n\"Fragments\" 및 \"Portals\"로 작업하기\n부작용 다루기\n클래스 기반 컴포넌트와 함수형 컴포넌트\nHttp 요청 전송 및 트랜지션 상태 및 응답 처리하기\n양식 및 사용자 입력 처리하기 (유효성 검사 포함)\nRedux & Redux 툴킷\nReact 라우터로 라우팅하기\nNext.js 에 대한 심층 소개\nReact 앱 배포하기\n인증 구현하기\n유닛 테스트\nReact 와 TypeScript 결합하기\n애니메이션 추가하기\n배운 모든 것을 실제 프로젝트에 적용할 수 있는 수많은 예제와 데모 프로젝트\n이외에도, React를 더 깊고 확실하게 이해하는 데 도움이 되는 더 많은 내용들이 있습니다. 이 페이지에서 전체 커리큘럼을 확인하세요!\n\n\n이것은 정말 React 에 관한 모든 것을 담은 \"완벽 가이드\" 인 점을 약속드립니다!\n가장 큰 장점은, React 에 대한 사전 지식이 없어도 수강할 수 있다는 점이죠!\n이 강좌는 아무런 지식이 없는 상태에서 시작합니다! 기본적인 웹 개발과 자바스크립트 지식만 있으면 됩니다!\n(물론 이 과정에는 모두 같은 내용을 이해할 수 있도록 간단한 자바스크립트 복습도 포함되어 있습니다.)\n전체 커리큘럼과 무료 미리 보기 동영상을 확인하고 30일 환불 보장 정책으로 위험 부담 없이 이 멋진 강의에 참여하세요!\n\n\n\n\n[전 세계 300만 수강강사, Max가 전하는 한마디]\n\n\n한국 수강생 여러분 안녕하세요?\n저는 전 세계 300만 수강강사이자 Udemy의 TOP 강사인 Max입니다. 이 강의는 그 어떤 강의보다 이해하기 쉬운 베스트셀러 React 강의로, 최신 React 내용으로만 코스를 구성하였습니다.\n이 강의는 React를 가장 최신의 패턴과 예제를 통해 실습 중심으로 알려드립니다. 여러분이 React 개발자로 성장할 수 있도록 가장 기본적이고 핵심적인 부분부터 심화 개념, 그리고 React와 관련된 모든 주제를 배울 수 있습니다. 강의의 방대한 분량은 리액트 개발자가 되기 위한 모든 것을 담고 있습니다.\n이 강의는 리액트에 대한 사전 지식이 전혀 필요하지 않습니다. 기초적인 웹 개발 지식과 자바스크립트 기초 문법 지식만 있으면 누구나 들을 수 있습니다! (혹시 이전에 공부한 자바스크립트 내용이 기억이 나지 않는다면 걱정하지 마세요. 이 강의는 자바스크립트 기초 문법에 대한 강의도 포함하고 있습니다!)\n\n\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n\n\n한국 수강생분들과 함께 할 React 여정이 기대됩니다!\n바로 시작하시죠!\n강의에서 만나요!\n\n\n- Max",
      "target_audience": [
        "반응형 빠른 웹 앱을 구축하는 방법을 배우고 싶은 분",
        "Netflix와 같은 선도적인 기술 회사에서 사용하는 매우 인기 있는 기술을 배우고 싶은 분",
        "웹 개발 기술을 한 단계 더 발전시키고 미래 지향적인 기술을 배우고 싶은 분",
        "React 기초를 탄탄하게 다지고 싶은 분",
        "프론트엔드 웹 개발자를 꿈꾸는 분",
        "프론트엔드 웹 최신 기술에 관심이 많은 분"
      ]
    },
    {
      "title": "Python 3 para Iniciantes",
      "url": "https://www.udemy.com/course/python-iniciantes/",
      "bio": "Aprenda a programar na linguagem Python.",
      "objectives": [
        "Aprender a programar na linguagem Python.",
        "Conhecer os recursos da linguagem Python.",
        "Desenvolver lógica de programação.",
        "Criar seus próprios programas em Python."
      ],
      "course_content": {
        "Python para Iniciantes": [
          "Apresentação",
          "Instalação do Python - Windows",
          "IDLE",
          "Prompt de comandos",
          "Instalação do Python - Linux",
          "Editores",
          "Instalando o Sublime Text no Linux",
          "Primeiro arquivo de código",
          "Utilizando variáveis",
          "Tipos de dados",
          "Operadores aritméticos",
          "Operadores lógicos",
          "Operadores de comparação",
          "Entrada de dados",
          "Funções matemáticas",
          "Lendo arquivos",
          "Escrevendo arquivos",
          "Comentários",
          "Listas - Parte 1",
          "Listas - Parte 2",
          "Listas - Parte 3",
          "Tuplas",
          "Conjuntos",
          "Dicionários",
          "Manipulando strings",
          "Comando condicional",
          "Loops",
          "Criando funções",
          "Criando módulos",
          "Classes",
          "Recursão",
          "Módulo itertools",
          "Games com Python e CodeSkulptor",
          "Instalação do Tkinter no Linux",
          "Interface gráfica com Tkinter",
          "Compreensão de listas",
          "Resolvendo exercícios",
          "Gerenciador de pacotes pip"
        ],
        "Projeto final": [
          "Servidor em Python parte 01",
          "Servidor em Python parte 02",
          "Servidor em Python parte 03",
          "Finalizando servidor em Python"
        ],
        "Próximos passos": [
          "Dicas de materiais",
          "Python para Zumbis",
          "Deixe o seu review",
          "Obrigado!!"
        ]
      },
      "requirements": [
        "Não é necessário conhecimento prévio, basta ter vontade de aprender!"
      ],
      "description": "Python é uma linguagem de programação fantástica que te permite criar uma série de aplicações (games, web, aplicações científicas, plotar gráficos, aplicações de segurança etc.) de forma simples e fácil!\nA linguagem Python vem crescendo a cada dia porque é fácil de aprender e extremamente poderosa. Python possui vários recursos, baterias inclusas, é utilizada por grandes empresas e possui uma comunidade fantástica que está crescendo cada vez mais e impulsionando o desenvolvimento da linguagem.\nO que está esperando? Aprenda agora mesmo a linguagem Python através de aulas dinâmicas e didáticas. Esse curso vai direto ao ponto, sem enrolação para otimizar o seu tempo e fazer com que você aprenda a linguagem Python o mais rápido possível. Te aguardo no curso!",
      "target_audience": [
        "Esse curso é destinado a quem quer aprender a programar em Python."
      ]
    },
    {
      "already_crawled_in": "development/Mobile Development",
      "url": "https://www.udemy.com/course/programacion-android-kotlin/"
    },
    {
      "title": "Clube Full-Stack",
      "url": "https://www.udemy.com/course/clube-fullstack/",
      "bio": "Aprenda PHP e Javascript para seu dia a dia",
      "objectives": [
        "Programar com PHP e Javascript e ter soluções para seu dia a dia"
      ],
      "course_content": {},
      "requirements": [
        "HTML"
      ],
      "description": "Criei esse curso para formar programadores Full-Stack nas duas linguagens que estão nas mais pedidas atualmente, que são PHP e Javascript, além de ensinar essas duas linguagens crio também projetos para te ensinar a criar soluções para seu dia a dia usando essas duas tecnologias.\n\n\nO que preciso saber para acompanhar o curso?\nEsse é um curso grande focado em PHP e Javascript, então não precisa ter conhecimento dessas linguagens, mas um conhecimento mínimo é desejável.\nForça de vontade, persistência e prática também são muito recomendáveis.\n\n\nO que vou aprender?\nVai aprender desde o básico do PHP e Javascript até a criação de soluções para seu dia a dia.\nEsse curso é focado em ensinar as linguagens PHP e Javascript e ensinar a criar suas próprias soluções usando essas linguagens.\nNão quero que você aprenda PHP e Javascript e pronto, quero te ensinar a criar o que precisa, e para isso crio vários mini projetos, e soluções que tenho certeza que vai te ajudar a entender melhor as linguagens e claro usar essas soluções no seu dia a dia.\n\n\nO curso é muito longo, qual ordem de estudo devo seguir?\nOrdenei os módulos como a natural a ser seguida para aprender da maneira correta.\n\n\nSou um programador inexperiente, esse curso é para mim?\nEsse curso é especialmente para você, nesse curso te guio desde o básico até a criação de projetos avançados e profissionais.\nAqui você vai encontrar sua formação Full-Stack focado em PHP e Javascript.\n\n\nJá sou um programador experiente, esse curso é para mim?\nCom certeza, esse curso é para qualquer nível de programador.\nSe já for experiente esse curso vai te ajudar a lembrar de muita coisa que já pode ter sido esquecida, além de poder ter vários insights olhando como crio meus projetos.",
      "target_audience": [
        "Pessoas que queiram aprender PHP e Javascript e como criar suas próprias soluções."
      ]
    },
    {
      "title": "C++ |Sıfırdan İleri Seviyeye C++ Nesneye Yönelik Programlama",
      "url": "https://www.udemy.com/course/cpluspusprogramlama_nesneyeyonelikprogramlama/",
      "bio": "C++ programlama Eğitim Seti | C++ Nesneye Yönelik Programlama | C++ programlama Pointers| C++ programlama Dosya İşlemi",
      "objectives": [
        "Int, float, double, char, string gibi kavramları öğreneceksiniz.",
        "Inheritence, Encapsulation, Polymorphism, Overriding gibi kavramların anlamlarını mantığıyla birlikte öğreneceksiniz.",
        "Nesneye yönelik programlama mantığını bu kursu bitirdiğinizde öğrenmiş olacaksınız.",
        "Dinamik Bellek Yönetimini ve Dosya İşlemlerinin C++ ile nasıl yapıldığını mantığıyla birlikte öğreneceksiniz.",
        "UML diagramlarının ne olduğuna dair fikir sahibi olacaksınız.",
        "Stack ve Queue gibi yazılım dünyasının önemli kavramlarını öğreneceksiniz.",
        "Bubble Sort, Selection Sort ve Insertion Sort gibi önemli sıralama algoritmalarını öğreneceksiniz.",
        "Ve en önemlisi bana 7/24 ulaşabilecek ve aklınıza takılan bütün sorulara cevap bulabileceksiniz.",
        "If-else , switch-case kontrol yapılarını öğreneceksiniz.",
        "Yazılımda oldukça önemli olan Exception Handling'i mantığıyla birlikte öğreneceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "C++ programlama ne işe yarar, nasıl çalışır ?",
          "LÜTFEN OKUYUNUZ - Bu duyuru hem sizin hem de benim için oldukça önemlidir !",
          "Bir eğitim setine nasıl çalışmalıyız?",
          "Youtube Duyuru"
        ],
        "C++ programlama için gerekli araçların bilgisayara kurulması": [
          "Kuruluma başlamadan önce lütfen okuyunuz",
          "Codeblocks kurulumu - Türkçe Karakter Sorunu Çözme"
        ],
        "MUTLAKA MANTIĞININ ANLAŞILMASI GEREKEN TERİMLER": [
          "Bunların mantığını anlarsanız gerisi çok kolay ..."
        ],
        "Değişkenler - Kullanıcıya Veri Gösterme - Kullanıcıdan Veri Alma": [
          "Giriş dersi ve Konsola Yazı Yazdırma",
          "Değişkenler Giriş",
          "Değişkenler 2",
          "Kullanıcıdan veri alma işlemleri"
        ],
        "Matematiksel İşlemler": [
          "Matematiksel İşlemlere Giriş",
          "Örnek 1 - Karenin alanı ve çevresini hesaplayan program",
          "Örnek 2 - Dairenin çevresi ve alanını hesaplayan program",
          "Örnek 3 - Küpün yanal alanlarının toplamını ve hacmini hesaplayan program",
          "Örnek 4 - Denklem Çözme",
          "Örnek 5 - 6 basamaklı bir sayının sayı değerlerini toplamını bulan program"
        ],
        "String Veriler (Karakter dizileri)": [
          "String Veriler (Karakter dizileri)"
        ],
        "KONTROL YAPILARI ve ÖRNEKLER (If - Else if - Else , Switch - Case)": [
          "If - else if -else (Kontrol yapısı)",
          "Örnek 1 - Girilen sayının pozitif mi negatif mi oldugunu söyleyen program",
          "Örnek 2 - Üçgenin iç açılarına göre tipini söyleyen program",
          "Örnek 3 - Elemanların satış sayılarına göre başarılı başarısız olma durumu",
          "Örnek 4 - Hesap Makinesi Programı",
          "Switch Case (Kontrol Yapısı)",
          "Örnek 1 - Depodaki stoğa ürün ekleme ve çıkarma işlemlerini sağlayan program",
          "Örnek 2"
        ],
        "DÖNGÜLER - (While - Do While - For)": [
          "While Döngüsü",
          "Örnek 1 - Faktöriyel Hesabı Yapan Program",
          "Do-While Döngüsü",
          "Örnek 1 - 1den n'e kadar olan tek ve cift sayilarin toplamini bulan program",
          "For Döngüsü",
          "Örnek 1 - Çarpım Tablosu",
          "Döngülerde Break - Continue Deyimi ve Döngülerde Sonsuzluk Kavramı"
        ],
        "DİZİLER - ( Sayı dizileri ve String dizileri )": [
          "Int ve Float Dizileri",
          "Örnek 1 - Öğrencinin Not Ortalamasını Hesaplayan Program",
          "String Dizileri",
          "Çok Boyutlu Sayı Dizileri",
          "Örnek - Kelimenin içerisindeki harflerin alfabetik olarak sıralanması"
        ],
        "FONKSİYONLAR": [
          "Fonksiyonlar (Void)",
          "Fonksiyonlar ( Return )",
          "Overloading ( Aşırı Yükleme)",
          "Iterative (Tekrarlayan) ve Recursive (Öz Yinelemeli)",
          "Örnek1 - Fibonacci Serisi"
        ]
      },
      "requirements": [
        "Kursta herhangi bir bilgi birikimine gerek yoktur. Her şeyi yazılıma dair sıfır bilgiye sahip birinin anlayacağı şekilde anlattım. Olur da aklınıza takılan herhangi bir şey olursa her zaman bana 7/24 sorabilirsiniz.",
        "C++ programlama eğitim setimi en basitten en zor örneklere kadar sıfır bilgiye sahip birinin anlayacağı şekilde hazırladım."
      ],
      "description": "C++ Programlama dilini adım adım, mantığa dayalı bir şekilde  sıfırdan öğreten eğitim setine bir adım uzaktasınız.\nC++ PROGRAMLAMA Dilindeki size gelecek vadeden kodlamaların TAMAMI AYRINTILI BİR ŞEKİLDE ANLATILMIŞTIR.\nBu eğitim seti sayesinde;\nC++ programlama dilini öğrenirken keyif alacaksınız.\nC++ ile yazılan programlar sayesinde algoritma yeteneğinizi geliştireceksiniz.\nC++ programlamada yazılan kodların bilgisayar tarafından nasıl karşılandığını anlayacaksınız.\nİnsanın yazdığı kodların bilgisayarın diline nasıl aktarıldığını öğreneceksiniz.\nC++ programlama diline ait özellikleri kavradıktan sonra pratik yaparak kendinizi geliştireceksiniz.\nC++ programlama dilini kullanarak NESNEYE YÖNELİK PROGRAMLAMA mantığını çok iyi anlayacaksınız.\nC++ programlama dilini çok rahat bir şekilde kodlayarak diğer Yüksek Seviyeli Programlama dillerini çok kolay kodlar hale geleceksiniz.\nKonuyu öğrendikten sonra verilen örneklerle anlamanızı pekişterek C++ programlamayı zevk alarak kodlar hale geleceksiniz.\n7/24 aradığınız sorulara karşılık bulacak. Sorduğunuz soruların cevabına en kısa süre içerisinde \"ÖĞRENCİLERDEN GELEN SORULAR\" bölümünden ulaşacaksınız.\n\n\nBİR ŞEYİ BİLMEK BAŞKADIR ÖĞRETMEK BAMBAŞKADIR.\nSİZ C++ PROGRAMLAMAYI ÖĞRENENE KADAR PEŞİNİZİ BIRAKMAYACAĞIM !\nDERSLERDE VE SORU&CEVAP KISMINDA GÖRÜŞMEK DİLEĞİYLE...",
      "target_audience": [
        "C++ programlama dilini sıfırdan ileri seviyeye öğrenmek isteyenler",
        "Nesneye yönelik programlama mantığını öğrenmek isteyenler",
        "C++ programlama seviyesini ve algoritma kurabilme yeteneğini arttırmak isteyen herkes",
        "Üniversitelerde C++ programlama dili dersi gören herkes",
        "YAZILIM VE DONANIM DÜNYASINA DAİR AKLINA TAKILAN BÜTÜN SORULARA CEVAP BULMAK İSTEYEN HERKES"
      ]
    },
    {
      "title": "Visual Studio İpuçları& .NET Temelleri Eğitim Videosu Serisi",
      "url": "https://www.udemy.com/course/visual-studio-egitim-videosu-serisi/",
      "bio": "Visual Studio Geliştirme Ortamını (IDE) Tanıyoruz. [Yazılım]",
      "objectives": [
        "Visual Studio aracını etkin bir şekilde kullanabilecekler."
      ],
      "course_content": {},
      "requirements": [
        "Eğitime katılım için herhangi bir önşart bulunmamaktadır."
      ],
      "description": "Yazılımcıların gerçek hayattaki en önemli yardımcılarından ve vazgeçilmezlerinden biriside IDE (integrated development environment) geliştirme ortamlarıdır. Microsoft, Visual Studio ürün ailesini her versiyonda geliştirerek yazılımcıların .Net Framework alt yapısını en etkili şekilde kullanabilmesini sağlamaya çalışmaktadır. Bu eğitim programında hızlı yazılım geliştirme araçlarını ve web’in en ileri teknolojilerini sunan Microsoft Visual Studio temelleri verilmeye çalışılacaktır. Eğitimde göreceğimiz konu başlıklarından bazıları aşağıdaki gibidir,\n* Klavye Kısayolları,\n* Watch Penceresi,\n* Dikdörtgen Seçim Yapma,\n* Immediate Penceresi\nFaydalı olması temennesi ile.",
      "target_audience": [
        "Yazılımla uğraşan herkesin alması gereken bir eğitim."
      ]
    },
    {
      "title": "Análisis de Datos y Gráficos con Python: Panda y Matplotlib.",
      "url": "https://www.udemy.com/course/analiza-grafica-datos-python-panda-matplotlib-alvaro-chirou/",
      "bio": "Analiza tus datos como un experto con Pandas y crea gráficos increíbles con Matplotlib. Presenta tus datos como Experto.",
      "objectives": [
        "Analizar Datos con Pandas.",
        "Python desde 0.",
        "Graficar tus Datos con Matplotlib.",
        "IDE Jupyter de Python.",
        "Aprende Análisis de datos con prácticas.",
        "Gráfica con Matplotlib con casos reales."
      ],
      "course_content": {
        "Introducción": [
          "Recomendaciones para una mejor experiencia en el curso",
          "Recuerda que cuentas con nuestro asesoramiento y respuestas a tus preguntas"
        ],
        "[ Parte 1 ] Lo primero, Aprendamos Python!.": [
          "Sobre la Parte 1 del curso"
        ],
        "Entorno de Trabajo": [
          "Instalación de Jupyter",
          "Como usar jupyter y código del curso (IMPORTANTE VER ESTA CLASE)"
        ],
        "Primeros Pasos": [
          "Primer contacto con Python",
          "Cadena de Caracteres (parte 1)",
          "Cadena de caracteres con variables operaciones (parte 2)",
          "índice de cadenas.",
          "Listas",
          "Ingresamos datos por teclado"
        ],
        "Operadores relacionales, lógicos y asignacion. Expresiones Anidadas": [
          "Operadores Lógicos",
          "Operadores Racionales",
          "Expresiones anidadas y operadores de asignación"
        ],
        "Estructuras de control": [
          "If",
          "if else y elif",
          "While",
          "Práctica donde aplicamos todo lo aprendido",
          "For"
        ],
        "Tuplas, Diccionarios, Conjuntos, Pilas y Colas": [
          "Tuplas",
          "Conjuntos",
          "Diccionario",
          "Pilas",
          "Colas"
        ],
        "Entradas por Teclado y Salidas por Pantalla": [
          "Entradas por teclado",
          "Salida por pantalla"
        ],
        "Funciones": [
          "Funciones",
          "Retorno y envío de valores",
          "Funciones argumentos parte 1",
          "Funciones argumentos parte 2",
          "Funciones argumentos parte 3",
          "Funciones recursivas e integrada"
        ],
        "Errores y Excepciones": [
          "Errores",
          "Exepciones múltiples",
          "Excepciones multiples e invocación de excepciones"
        ]
      },
      "requirements": [
        "Se recomienda tener un conocimiento Básico sobre el uso de las tecnologías de la información, es decir con el nivel de usuario que navega por internet y usa su sistema operativo, es suficiente para entender en su profundidad esta formación profesional.",
        "Computadora, puede ser con Windows, Linux o Mac.",
        "Es deseable que el tamaño de la pantalla sea por lo menos de 17'' (pulgadas) para poder ver con claridad lo que se presenta en pantalla."
      ],
      "description": "Hola Amigos/as!\nEn este curso te enseñare desde 0 Python (en el caso que lo necesites). Veremos todo lo que necesitas para realizar el curso.\nPara luego avanzaremos con el Análisis de datos con la librería Pandas. Esta increíble herramienta te permite moldear los datos en base a lo que quieres analizar y así visualizarlos de una mejor manera.\nAl final del curso aprenderemos la librería Matplotlib de Python, la cual nos permite graficar a nuestro gusto y de diferentes maneras los datos que queremos analizar y representar.\nAprovecha ya mismo en aprender estas herramientas en un mercado donde el análisis de datos es cada vez más requerido.\nYo soy Álvaro Chirou, tengo más de 20 Años de experiencia trabajando en Tecnología, eh dado disertaciones en eventos internacionales como OWASP, tengo más de 500.000 estudiantes en Udemy y 100 formaciones profesionales impartidas en la misma.\nYo soy Álvaro Chirou, tengo más de 20 Años de experiencia trabajando en Tecnología, eh dado disertaciones en eventos internacionales como OWASP, tengo más de 500.000 estudiantes en Udemy y 100 formaciones profesionales impartidas en la misma.\nYo soy Álvaro Chirou, tengo más de 20 Años de experiencia trabajando en Tecnología, eh dado disertaciones en eventos internacionales como OWASP, tengo más de 500.000 estudiantes en Udemy y 100 formaciones profesionales impartidas en la misma.\nYo soy Álvaro Chirou, tengo más de 20 Años de experiencia trabajando en Tecnología, eh dado disertaciones en eventos internacionales como OWASP, tengo más de 500.000 estudiantes en Udemy y 100 formaciones profesionales impartidas en la misma.\nAnaliza y representa tu información como un experto!.\nNos vemos dentro del curso!\nTu Profesor Álvaro Chirou.",
      "target_audience": [
        "Toda persona con deseos de Aprender a usar esta herramienta de Python para Analizar y Graficar Datos."
      ]
    },
    {
      "title": "Java primeiros passos: Lógica de Programação e Algoritmos",
      "url": "https://www.udemy.com/course/java-curso-logica-de-programacao/",
      "bio": "Curso equivalente à disciplina de Lógica de Programação da faculdade, para iniciantes, usando Java como linguagem.",
      "objectives": [
        "Fundamentos básicos de programação: estrutura sequencial, estrutura condicional (if-else), estruturas repetitivas (while, for, do-while), vetores e matrizes",
        "Aplicar os conhecimentos adquiridos para solução de problemas básicos usando a linguagem Java",
        "Utilizar o Eclipse para editar, depurar e executar programas",
        "Desenvolver a habilidade de elaborar lógicas e soluções para problemas de programação"
      ],
      "course_content": {
        "Apresentação": [
          "Visão geral do curso"
        ],
        "Introdução sobre programação": [
          "Material de apoio do capítulo",
          "Algoritmo, automação e programa de computador",
          "O que é preciso para se fazer um programa de computador",
          "Linguagem de programação, léxica, sintática",
          "IDE - Ambiente Integrado de Desenvolvimento",
          "Compilação, interpretação, código fonte e objeto, máquina virtual",
          "Aviso sobre sistemas x86 (32 bits)",
          "Instalação do Java JDK e o Eclipse",
          "Primeiro programa em Java e utilização básica do Eclipse"
        ],
        "Estrutura sequencial": [
          "Visão geral do capítulo Estrutura Sequencial",
          "Material de apoio do capítulo",
          "Expressões aritméticas",
          "Variáveis e tipos básicos em Java",
          "As três operações básicas de programação",
          "Saída de dados em Java",
          "Processamento de dados em Java, Casting",
          "Entrada de dados em Java - Parte 1",
          "Entrada de dados em Java - Parte 2",
          "Funções matemáticas em Java",
          "Exercício resolvido 01",
          "Como utilizar o Debug no Eclipse",
          "Nosso primeiro exercício do URI Online Judge - URI 1001",
          "Exercícios propostos - PARTE 1",
          "Exercício resolvido 02",
          "Exercício resolvido 03",
          "Exercícios propostos - PARTE 2",
          "Exercício resolvido 04",
          "Exercícios propostos - PARTE 3"
        ],
        "Estrutura Condicional": [
          "Visão geral do capítulo Estrutura Condicional",
          "Material de apoio do capítulo",
          "Expressões comparativas",
          "Expressões lógicas",
          "Estrutura condicional",
          "Exercício resolvido 01",
          "Exercício resolvido 02",
          "Exercício resolvido 03",
          "Sintaxe opcional: operadores de atribuição cumulativa",
          "Sintaxe opcional: estrutura switch-case",
          "Exercícios propostos"
        ],
        "Estruturas Repetitivas": [
          "Visão geral do capítulo Estruturas Repetitivas",
          "Material de apoio do capítulo",
          "Estrutura repetitiva enquanto",
          "Teste de mesa com estrutura enquanto",
          "Exercícios propostos PARTE 1: testes de mesa com while",
          "Exercício resolvido 01",
          "Exercício resolvido 02",
          "Exercícios propostos PARTE 2: problemas com estrutura enquanto",
          "Estrutura repetitiva para",
          "Teste de mesa com estrutura para",
          "Exercícios propostos PARTE 3: testes de mesa com for",
          "Exercício resolvido 03 - URI 1078",
          "Exercício resolvido 04 - URI 1071",
          "Estrutura repetitiva faça-enquanto",
          "Exercícios propostos PARTE 4: exercícios com estrutura para"
        ],
        "Vetores": [
          "Visão geral do capítulo Vetores",
          "Material de apoio do capítulo",
          "Vetores",
          "Teste de mesa com vetores",
          "Exercícios propostos PARTE 1: testes de mesa com vetores",
          "Exercício resolvido 01",
          "Exercício resolvido 02",
          "Exercício resolvido 03",
          "Sintaxe opcional: estrutura \"para cada\"",
          "Exercícios propostos PARTE 2: problemas com vetores"
        ],
        "Matrizes": [
          "Visão geral do capítulo Matrizes",
          "Material de apoio do capítulo",
          "Matrizes",
          "Teste de mesa com matrizes",
          "Exercícios propostos PARTE 1: testes de mesa com matrizes",
          "Exercício resolvido 01",
          "Exercício resolvido 02",
          "Exercícios propostos PARTE 2: problemas com matrizes"
        ],
        "Seção bônus": [
          "Aula bônus: conheça nossos outros cursos"
        ]
      },
      "requirements": [
        "Nenhum conhecimento prévio de programação é necessário. Este é um curso para iniciantes."
      ],
      "description": "DESCRIÇÃO E OBJETIVO DO CURSO:\nEste curso equivale à disciplina de Lógica de Programação: disciplina inicial de programação em um curso de faculdade na área de Computação.\nAo final deste curso você será capaz de compreender e aplicar os fundamentos de Lógica de Programação, quais sejam:\nIntrodução à programação\nExpressões\nAritméticas\nComparativas\nLógicas\nEstrutura sequencial\nEntrada de dados (comando de leitura)\nProcessamento de dados (comando de atribuição)\nSaída de dados (comando de escrita)\nEstrutura condicional (if/else)\nEstruturas repetitivas (while, for)\nVetores\nMatrizes\nMÉTODO:\nCada um destes tópicos será explicado em detalhes, com ilustrações, esquemas e testes de mesa manuais, e o principal: muitos exercícios! Vamos resolver e discutir problemas como exemplo, e vamos disponibilizar muitos exercícios para você treinar e fixar o aprendizado, desde exercícios bem simples para começar, até exercícios mais instigantes como desafio.\nTodos exercícios virão ainda acompanhados de correção para você conferir. E, se você tiver alguma dúvida, nós estamos sempre na seção de Perguntas e Respostas para te atender.\nREQUISITOS E ESCLARECIMENTOS:\nPara fazer este curso, nenhum conhecimento prévio de programação é necessário.\nÉ importante ressaltar que o objetivo deste curso não é esgotar os recursos da linguagem Java. Neste curso Java é um meio e não um fim. Nós vamos sim aprender um pouco de Java, porém na medida do necessário para implementar o conteúdo do curso.\nPROFESSOR:\nO curso será ministrado pelo professor Dr. Nelio Alves, que possui mais de 17 anos de experiência como professor universitário, no ensino de Computação e na elaboração e execução de projetos de cursos superiores, técnicos e de pós-graduação.\nAGRADECIMENTO:\nObrigado pela atenção. Este curso é ideal para quem está iniciando em programação, ou deseja repassar os conteúdos do início da faculdade. Ou então, para quem está iniciando sua carreira, mas precisa treinar melhor sua lógica de programação. Se for este o seu caso, não perca mais tempo: comece já este curso.",
      "target_audience": [
        "Iniciantes que desejam aprender a programar usando Java como linguagem",
        "Interessados em cursar ou revisar a disciplina de Lógica de Programação da faculdade",
        "Quem está iniciando na carreira de programador, mas precisa treinar sua lógica de programação",
        "Quem precisa da base inicial de Lógica de Programação para depois cursar o curso \"Java COMPLETO\""
      ]
    },
    {
      "title": "Programación Java SE desde 0",
      "url": "https://www.udemy.com/course/programacion-java-se/",
      "bio": "Desde 0 al infinito con vídeos, ejercicios, test de evaluación, documentación PDF y mucho más",
      "objectives": [
        "Crear aplicaciones Java de propósito general.",
        "Se aprenderán los fundamentos de la POO (Programación Orientada a Objetos)",
        "Se aprenderá a crear aplicaciones gráficas, manejo de colecciones, excepciones, hilos, sockets, streams etc",
        "Se adquirirán los conocimientos necesarios y se plantearán ejercicios y test de entrenamiento para superar la certificación oficial \"OCP Java SE8 programmer\""
      ],
      "course_content": {
        "Presentación": [
          "Presentación"
        ],
        "Software necesario e introducción": [
          "Instalación de JRE y Eclipse",
          "Introducción"
        ],
        "Fundamentos y estructuras básicas del lenguaje": [
          "Introducción a la sección",
          "Estructuras principales I. Anatomía de un programa Java",
          "Estructuras principales II. Tipos de datos y variables",
          "Declaración de variables",
          "Test conocimientos básicos",
          "Constantes y operadores I",
          "Constantes y Operadores II",
          "Clase Math. Primer acercamiento a la API",
          "Clase String. Operaciones con cadenas",
          "Operaciones con Math y Casting",
          "Clase String. Operaciones con cadenas II",
          "Clase String. Operaciones con cadenas III",
          "Test casting, clase Math y clase String",
          "Paquetes I",
          "Paquetes II",
          "Paquetes III",
          "Entrada y Salida de datos I",
          "Entrada y Salida de datos II",
          "Entrada y Salida de datos III",
          "Entrada y Salida de datos IV",
          "Entrada y Salida de datos V",
          "Control de flujo. Condicional IF I",
          "Control de flujo. Condicional IF II",
          "Control de flujo. Condicional IF III",
          "Control de flujo. Condicional IF IV",
          "Control de flujo. Condicional IF V",
          "Control de flujo. Condicional IF VI",
          "Condicional if",
          "Control de flujo. Condicional switch I",
          "Control de flujo. Operador ternario",
          "Control de flujo. Bucle while",
          "Control de flujo. Bucle Do-While",
          "Control de flujo. Bucle For I",
          "Control de flujo. Bucle For II",
          "Control de flujo. Corrección y explicación de ejercicios previos",
          "Trabajo con bucles",
          "Arrays I",
          "Arrays II. Acceso a información con bucles",
          "Arrays III. Arrays de dos dimensiones",
          "Arrays IV. Acceso a datos en arrays bidimensionales"
        ],
        "POO. La Programación Orientada a Objetos": [
          "Introducción POO",
          "POO I. El paradigma de la programación orientada a objetos",
          "POO II. Terminología de la POO. \"Instancia\", \"Objeto\", \"Clase\", Ejemplar\"",
          "Examen 5. POO",
          "POO III. Construcción de clases y objetos",
          "POO IV. Uso del \"this\"",
          "Explicación ejercicio vídeo 42",
          "POO V. Sobrecarga de métodos",
          "POO VI. Sobrecarga de constructores",
          "POO VII. Uso de \"final\"",
          "POO VIII. Uso de \"static\"",
          "POO IX. Métodos static",
          "Ejercicio POO Creación de Colegios y Alumnos",
          "POO X. La Herencia I",
          "POO XI. La Herencia II",
          "POO XII. La Herencia III. Sobreescritura de métodos",
          "POO XIII. La Herencia IV. Clase Object. Jerarquía de herencia",
          "POO XIV. Modificadores de acceso. \"Private\", \"protected\", \"public\"",
          "POO XV. Polimorfismo y enlazado dinámico",
          "POO. Herencia",
          "Clase 54. POO XVI. Casting de objetos",
          "POO XVII. Clases y métodos final",
          "POO XVIII. Clases abstractas I",
          "POO XIX. Clases abstractas II",
          "POO XX. Clases abstractas III",
          "Casting y clases abstractas",
          "POO XXI. Interfaces I. Diferencias con clases abstractas",
          "POO XXII. Interfaces II. Ejemplo y sintaxis",
          "POO XXIII. Interfaces III. Ejemplo interfaz predefinida",
          "POO XXIV. Interfaces IV. Uso de interfaces de la API",
          "POO XXV. Interfaces V. Herencia en interfaces",
          "POO XXVI. Interfaces VI. La interfaz ActionListener",
          "POO XXVII. Interfaces VII. Interfaces vs clases internas",
          "Test Interfaces",
          "POO XXVIII. Clases Internas I. Utilidad y sintaxis",
          "POO XXIX. Clases Internas II. Clases internas locales",
          "POO XXX. Clases internas anónimas"
        ],
        "Interfaces gráficas": [
          "Interfaces gráficas. Swing vs JavaFx.",
          "Interfaces gráficas. Primer JFrame",
          "Interfaces gráficas. Diferentes formas de crear JFrame",
          "Interfaces gráficas. Métodos de JFrame",
          "Interfaces gráficas. Cambiando imagen del JFrame",
          "Interfaces gráficas. Escribiendo en el JFrame",
          "Interfaces gráficas. Colores y tipografías",
          "Interfaces gráficas. Simplificando el código",
          "Interfaces gráficas. Dibujando en el JFrame",
          "Interfaces gráficas. Java 2D.",
          "Interfaces gráficas",
          "Interfaces Gráficas. Gestión del color",
          "Interfaces gráficas. Gestión de fuentes",
          "Interfaces gráficas. Manejo de imágenes I",
          "Interfaces gráficas. Manejo de imágenes II"
        ],
        "Interfaces gráficas & Eventos": [
          "Interfaces gráficas. Eventos I",
          "Interfaces gráficas. Eventos II. Eventos en botones",
          "Interfaces gráficas. Eventos III. Cambio de oyente",
          "Interfaces gráficas. Eventos de ventana. Eventos IV",
          "Interfaces gráficas. Clases adaptadoras. Eventos V",
          "Interfaces gráficas. Cambios de estado. Vídeo 88",
          "Interfaces gráficas. Eventos de teclado",
          "Interfaces gráficas. Eventos de ratón",
          "Interfaces gráficas. Eventos de Foco I",
          "Interfaces gráficas. Eventos de foco II",
          "Interfaces gráficas. Múltiples fuentes de evento I",
          "Interfaces gráficas. Múltiples fuentes de evento II",
          "Interfaces gráficas. Múltiples fuentes de evento III",
          "Interfaces gráficas. Múltiples oyentes de eventos",
          "Eventos"
        ],
        "Layouts. Disposición de componentes": [
          "Layouts. FlowLayout",
          "Layouts. BorderLayout",
          "Layouts. GridLayout. Práctica creación calculadora Java",
          "Layouts. GridLayout. Práctica creación calculadora II",
          "Lógica de la calculadora. Práctica creación de calculadora III",
          "Lógica de la calculadora. Práctica creación de calculadora IV",
          "Lógica de la calculadora. Práctica creación de calculadora V",
          "Test Layouts"
        ],
        "Componentes Swing": [
          "Componentes Swing. JRadioButton.",
          "Componentes Swing. JTextField",
          "Componentes Swing. Eventos en JTextField.",
          "Componentes Swing. Áreas de texto con JTextArea",
          "Componentes Swing. JCheckBox. Casillas de verificación",
          "Componentes Swing. JComboBox.",
          "Componentes Swing. JSlider.",
          "Componentes Swing. JSpinner.",
          "Swing",
          "Componentes Swing. Menús.",
          "Práctica guiada. Elaboración de procesador de textos.",
          "Práctica guiada. Procesador de textos I.",
          "Práctica guiada. Procesador de Textos II.",
          "Práctica guiada. Procesador de Textos III.",
          "Práctica guiada. Procesador de textos IV.",
          "Práctica guiada. Procesador de textos V.",
          "Componentes Swing. Barras de herramientas",
          "Componentes Swing. Menús emergentes",
          "Ejercicio propuesto Swing",
          "Swing. Disposiciones avanzadas. Box",
          "Swing. Disposiciones Avanzadas. Spring",
          "Swing. Disposiciones Avanzadas. Disposición LibreI",
          "Swing. Disposiciones Avanzadas. Disposiciones Libres II"
        ],
        "JavaFx (Introducción)": [
          "JavaFx. ¿Qué es?",
          "JavaFx. Introducción. Primera aplicación gráfica sencilla"
        ],
        "Archivos JAR": [
          "Archivos JAR. Distribuir aplicaciones Java",
          "Archivos JAR. Ejecutables"
        ]
      },
      "requirements": [
        "Debes saber manejar un PC con nivel usuario",
        "No son necesarios conocimientos previos en programación",
        "Estar mentalmente preparado y motivado para afrontar un curso largo y exigente"
      ],
      "description": "Bienvenidos al curso \"Programación Java SE desde 0 al infinito\". Este curso es apto para personas que deseen aprender a programar en Java, tanto si no tienen ningún conocimiento de programación como si ya cuentan con algún conocimiento en otros lenguajes. También es un curso válido para personas que ya tengan conocimientos previos en Java y deseen ampliar estos conocimientos.\nSe hará especial hincapié en la práctica y por ello se acompañará el curso con numerosos ejercicios para practicar, ejemplos y documentos adicionales de apoyo a las lecciones en vídeo.\nSe subirán nuevos vídeos y contenidos todas las semanas hasta finalizar el curso por completo. Temario del curso:\nInstalación del software necesario\n\nFundamentos y estructuras básicas\nPOO\nInterfaces y clases internas\nAplicaciones gráficas\nEventos\nLayouts\nComponentes Swing\nDisposiciones avanzadas\nArchivos JAR\nExcepciones\nStreams\nSerialización\nManipulación de archivos\nProgramación genérica\nThreads\nColecciones\nSockets\nJavaFX\nIntrospección y recursividad\nAunque no es necesario tener conocimientos previos en programación, si es necesario tener conocimiento a nivel usuario de una computadora.",
      "target_audience": [
        "Cualquier persona que deseé aprender a programar en Java",
        "Al ser un curso que comienza desde 0, cualquier persona que deseé introducirse en el mundo de la programación"
      ]
    },
    {
      "title": "0から始めるTkinterの使い方完全マスター講座〜Python×GUIの基礎・応用〜",
      "url": "https://www.udemy.com/course/python_tkinter_master/",
      "bio": "PythonのTkinterを使ってオリジナルGUIを作成できるようになりましょう！",
      "objectives": [
        "PythonでGUIを作成する方法",
        "Tkinterの基本的な操作方法",
        "Tkinterの発展的な操作方法",
        "電卓アプリの作成方法",
        "翻訳アプリの作成方法",
        "音楽再生アプリの作成方法",
        "家計簿アプリの作成方法",
        "作成したプログラムを.exe化する方法"
      ],
      "course_content": {
        "コース概要": [
          "イントロダクション"
        ],
        "基本的な使い方": [
          "ウィンドウの作成",
          "ラベルの作成とpackについて",
          "ボタンの作成とgridについて",
          "フレームの作成",
          "エントリーの作成",
          "ラジオボタンの作成",
          "画像の取り扱い",
          "チェックボタンの作成",
          "メニューバーの作成",
          "メッセージボックスの作成"
        ],
        "【復習】挨拶アプリ": [
          "挨拶アプリの概要",
          "基本ウィジェットの作成",
          "ラジオボタンの作成",
          "関数の定義"
        ],
        "【実践】電卓アプリ": [
          "電卓アプリの概要",
          "基本ウィジェットの作成",
          "関数の作成とボタンステートの設定",
          "演算の実行",
          "プログラミングにおける数値計算について",
          "コンピュータの数値計算について"
        ],
        "【実践】翻訳アプリ": [
          "翻訳アプリの概要",
          "基本ウィジェットの作成",
          "翻訳機能の作成",
          "保存機能の作成"
        ],
        "【実践】音楽再生アプリ": [
          "音楽再生アプリの概要",
          "基本ウィジェットの作成",
          "ファイル操作機能の作成",
          "音楽再生機能の作成"
        ],
        "【実践】家計簿アプリ": [
          "家計簿アプリの概要",
          "基本ウィジェットの作成",
          "Treeviewのデザイン設定",
          "データベースの反映と削除関数の作成",
          "追加・編集サブウィンドウの作成"
        ],
        "おまけ": [
          "プログラムをexe化する方法",
          "Entryに入力規制を施す方法"
        ],
        "アウトロ": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Tkinterに関する知識は全く必要ありません",
        "Pythonの基本文法に関する理解",
        "Pythonの実行環境",
        "Windows環境で説明を行っているため、MacOSでの動作確認は行っていません。"
      ],
      "description": "PythonでオリジナルGUIを作成したい方向けにTkinterマスター講座が登場。\nTkinterの使い方を学び、オリジナルのGUIを作成できるようになりましょう。\n\n\nTkinterはPythonの標準ライブラリで簡単にGUIを作成することができます。\n\n\n【このコースの最終ゴール】\nPythonのTkinterで自分一人でオリジナルのアプリを作成できるようになる実力が身につきます。\n\n\n【コース概要】\n以下が本コースで学べる内容の概要になります。\n＜Tkinter基本操作＞\nウィンドウの作成方法\nラベルの作成方法\npack()の利用方法\nボタンの作成方法\ngrid()の利用方法\nフレームの使い方\nエントリーの作成方法\nラジオボタンの作成方法\nボタンに関数を割り当てる方法\nウィンドウに画像を配置する方法\nチェックボックスの作成方法\nメニューバーの作成方法\nメッセージボックスの作成方法\n\n\n＜Tkinter応用操作＞\nボタンの公開・非公開設定方法\nプルダウンの作成方法\n複数行入力可能なエントリーの作成方法\nリストボックスの作成方法\nスケールバーの作成方法\nスクロールバーの作成方法\nファイルダイアログを表示する方法\n情報を名前をつけて保存する方法\n表の作成方法\nウィンドウを閉じる方法\nエントリーの入力規制を設定する方法\n\n\n＜動画で作成するアプリ＞\n挨拶アプリ\n翻訳アプリ\n電卓アプリ\n音楽再生アプリ\n家計簿アプリ\n\n\n＜おまけ＞\n作成したPythonのプログラムを.exe化する方法についても簡単に触れます。\n.exe化することでワンクリックでアプリを実行できるようになります。\nまたPythonの開発環境が整っていないPCでも簡単にアプリを実行できるようになります。\n\n\n【注意】\nPython環境が整い、Tkinterをご自身のPCで使える状態の人向けです\nPythonの環境構築に関する説明はしていません",
      "target_audience": [
        "PythonでオリジナルGUIを作成したい方",
        "Tkinterの使い方が分からなくて困っている方",
        "PythonのTkinterを体系的に学べる教材を探している方"
      ]
    },
    {
      "title": "爆速で5つのPython Webアプリを開発",
      "url": "https://www.udemy.com/course/python-streamlit/",
      "bio": "プログラミング初学者必見！話題のStreamlitを用いて、最短最速でアプリケーションを公開するまでの流れをわかりやすくお伝えします。Pythonの基礎は終えたけど、Webアプリとかも作ってみたいと考えている方におすすめの講座です。",
      "objectives": [
        "PythonによるWebアプリケーションの実装方法が身につきます",
        "StreamlitによるWebアプリケーションの開発方法が身につきます",
        "Streamlitを用いたWebアプリケーションの公開方法がわかります",
        "APIが何かを理解し、APIの重要性、APIの素晴らしさがわかります",
        "公式ドキュメントを読み解く力が身につきます",
        "Webアプリケーションの開発途中で多々起こるエラーの解決方法がわかります",
        "初学者の次の一歩としてPythonを用いたスキルの幅を広げることができます",
        "Yahoo! Financeから株式情報を取得する方法がわかります",
        "Altairを用いたグラフの作成方法が身につきます",
        "Computer Vision APIを用いて、画像に写っている物体情報を取得することができます",
        "Text-to-Speech APIを用いて、テキストから音声生成を行うことができます",
        "YouTube Data APIを用いて、YouTube内の動画、チャンネル情報を取得することができます",
        "PythonでWebスクレイピングを実装する力が身につきます",
        "各API、スクレイピング機能をStreamlitに組み込む方法がわかります",
        "WebアプリケーションをHerokuにデプロイする方法がわかります",
        "Herokuで定期実行の仕組みを構築する方法がわかります"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "PythonでWebアプリを作る": [
          "Pythonで作成されたWebアプリ",
          "Webアプリを作るには",
          "Pythonの代表的なWebフレームワーク",
          "なぜStreamlitを使うのか"
        ],
        "Streamlit入門": [
          "はじめに",
          "Visual Studio Codeの準備",
          "Streamlitの準備",
          "Streamlitの基本的な使い方",
          "インタラクティブなウィジェット",
          "レイアウトを整える",
          "プレグレスバーの表示",
          "Webアプリの公開"
        ],
        "1. 株価可視化アプリの作成": [
          "セクション概要",
          "完成形の確認",
          "本セクションで使用するファイル",
          "Yahoo! Financeから株価取得（株価の取得）",
          "データ構造について",
          "Yahoo! Financeから株価取得（データの整形）",
          "複数社のデータ整形",
          "【おまけ】その他の株価周辺情報の取得",
          "グラフ化のためのデータ整形",
          "Altairでシンプルなグラフの可視化",
          "グラフのスケールを調整",
          "Streamlitへの組み込み①",
          "Streamlitへの組み込み②"
        ],
        "API入門": [
          "セクション概要",
          "APIとは",
          "Web APIとは",
          "REST APIとは",
          "API活用のメリット・デメリット",
          "知っておくべきAPIエコノミーとは",
          "企業がAPIを提供する理由",
          "APIを叩く上で必要な情報",
          "JSONを理解しよう",
          "HTTPメソッドについて"
        ],
        "2. 物体検出アプリの作成": [
          "セクション概要",
          "完成形の確認",
          "本セクションで使用するファイル",
          "Azureへ登録",
          "ComputerVisionAPIとは",
          "Computer Vision リソースを作成",
          "必要な準備",
          "画像の説明の取得",
          "画像カテゴリの取得",
          "画像タグの取得",
          "物体を検出する",
          "ローカルファイルに対応させる",
          "必要な処理を関数化（タグ情報）",
          "必要な処理を関数化（オブジェクトの位置と情報）",
          "スクリプトファイルにまとめる",
          "Streamlitでベースを作成",
          "検出した物体を矩形で囲む",
          "取得したコンテンツタグを表示"
        ],
        "3. 音声生成アプリの作成": [
          "セクション概要",
          "完成形の確認",
          "本セクションで使用するファイル",
          "Text-to-Speechとは",
          "APIの有効化と秘密鍵の取得",
          "環境変数の設定とライブラリインストール",
          "サンプルコードによる音声出力の実装",
          "日本語男性の音声出力",
          "必要な処理を関数化",
          "【おまけ】SSMLの紹介",
          "必要な処理をスクリプトファイルにまとめる",
          "アプリケーションの作成①",
          "アプリケーションの作成②"
        ],
        "4. YouTube動画分析アプリ": [
          "セクション概要",
          "完成形の確認",
          "本セクションで使用するファイル",
          "YouTube Data APIとは",
          "リソースの種類",
          "APIキーの取得",
          "サンプルコードの実装（キーワード検索）",
          "コードの詳細説明",
          "必要なパラメータの挿入",
          "動画IDとチャンネルIDをまとめる",
          "検索結果を取得する処理の関数化",
          "チャンネルIDに紐づく登録者数を抽出",
          "動画IDに紐づく動画情報の取得",
          "一連の処理を関数化",
          "必要なコードをスクリプトファイルにまとめる",
          "分析アプリの作成"
        ],
        "5. スクレイピング活用アプリ": [
          "セクション概要",
          "完成形の確認",
          "本セクションで使用するファイル",
          "HTMLを取得する",
          "データ取得（Udemy）",
          "1つのデータ取得（ECサイト情報）",
          "複数のデータ取得（ECサイト情報）",
          "必要な処理を関数化",
          "APIの有効化と秘密鍵のダウンロード",
          "認証周り",
          "スプレッドシートからデータ取得",
          "データの更新",
          "グラフを作成",
          "必要な処理をスクリプトファイル（scraping.py）にまとめる",
          "必要な処理をスクリプトファイル（app.py）にまとめる",
          "アプリケーションに落とし込む",
          "Herokuとは",
          "Herokuのデプロイに必要なファイル",
          "Herokuにデプロイ",
          "定期実行の仕組み構築"
        ],
        "Python超入門": [
          "四則演算",
          "変数",
          "比較演算子",
          "データ型",
          "リスト",
          "辞書",
          "条件分岐（if文）",
          "繰り返し処理（for文）",
          "繰り返し処理（for文 / 応用）",
          "break文とcontinue文",
          "関数",
          "クラス",
          "ライブラリ",
          "Pythonでよく起こるエラー10選",
          "【Mac】環境構築",
          "【Windows】環境構築"
        ]
      },
      "requirements": [
        "事前準備は特に必要ありません。",
        "Pythonの基本的な使い方を理解している。",
        "Pythonの環境構築が済んでいる。",
        "本コースは、macOSを使用して進めていきますが、Windowsでも同様に進めることができます。"
      ],
      "description": "＜本講座で意識している3大要素＞\n「まずは動かしてみる」「形にしてみる」\nWebアプリケーションを本格的に開発していくとなると、様々な領域の知識を習得する必要があります。見た目を作るためのHTMLやCSS、Webサーバー、アプリケーションサーバー、データベースサーバー、その他周辺スキルを知っておく必要があります。\n\n理想はこれらの知識を習得しながらアプリケーションを開発していくことではありますが、複雑な内容を詰め込んでしまうと、初学者が挫折する原因にもなります。\n\nそこで、本講座では、HTML, CSSを書くことなく、サクッと開発できてしまうStreamlitを用いて、まずは形にしてみる、アプリケーションを動かしてみる、ということにフォーカスして講座構成を練っています。\n\nプログラミング（Python）の基礎はなんとなく理解できてきたけど、「次に何を勉強すればいいのだろうか」「アプリケーションとか作ってみたいな」と思っているあなたにオススメなのが本講座です。\n\nエラー解決能力\n通常の講座はエラーが出ないキレイな形で進めていきます。\n\nしかし、実際に1人で手を動かしながら進めていく中でエラーが出ないことはあるのでしょうか？エラーが出ないことなんてありえないですし、おそらく多くの初学者はエラーでつまづいてしまいます。\n\n本講座は、初学者がつまづきやすいエラーを敢えてお見せしながら講義を進めていきます。エラーが出たときにどのように対処していくのか、どのように考えればいいのかもお伝えします。\n\nドキュメント読解力\n「公式ドキュメントちゃんと読んだ？Qiitaとかの記事じゃなくて公式ドキュメント読めば大体わかるよ」\nこれは、私がプログラミング初学者のときにメンターに言われた一言です。\n「いやいや公式ドキュメント難しいから敬遠してるんですけど...」と、何度思ったことか。\n\n公式ドキュメントが大事なのはわかると思いますが、読むのって結構億劫になりませんか？\nなんか難しいこと難しく書いてありますよね。私も初学者の頃はずっと敬遠してました。ただ、メンターの言うことも正しくて、たしかに公式ドキュメントの情報が基本的にベストなんですよね。\nそのため、本講座では極力ドキュメントを読解しながらお伝えしていきます。",
      "target_audience": [
        "Pythonの基礎を終えたので次のステップを学んでいきたい方",
        "PythonでWebアプリケーションをサクッと開発してみたい方",
        "Pythonで簡単にフロントエンドを構築できるWebフレームワークStreamlitに興味がある方",
        "業務、ビジネスにプログラミング（Python）を活用していきたい方",
        "Pythonで様々な種類のWeb APIを実装してみたい方"
      ]
    },
    {
      "title": "A-Z™ | Sıfırdan İleri Seviyeye Python Programlama",
      "url": "https://www.udemy.com/course/sifirdan-ileri-seviyeye-python-programlama/",
      "bio": "Python Programlama Diliyle Sıfırdan İleri Seviyeye Programlama Mantığı | Temelden Başlayıp Gerçek Projeler İle Öğrenin",
      "objectives": [
        "Python dilinin ve Programlamanın temellerini en iyi şekilde öğreneceksiniz.",
        "Kurs boyunca çok fazla örnek program yazacağımız için, bu kursu bitirdiğiniz zaman algoritma yeteneğiniz çok fazla gelişmiş olacak.",
        "Kursta öğrendiğiniz bilgilerle gerçek hayatta karşılaştığınız problemler için programlar yazabilecekseniz.",
        "Nasıl temiz bir kod yazabiliriz bunu öğreneceksiniz.",
        "Nesneye Yönelik Programlama konseptini öğreneceksiniz",
        "Fonksiyonel Programlama konseptini öğreneceksiniz",
        "SqLite3 kütüphanesi ile veritabanı yönetimini öğreneceksiniz.",
        "Numpy, Pandas kütüphanelerini kullanarak veri analizi yapmayı öğreneceksiniz.",
        "Seaborn, Matplotlib kütüphanelerini kullanarak veri görselleştirmeyi öğreneceksiniz.",
        "HTTP işlemlerini Python ile nasıl kolayca gerçekleştirebileceğinizi öğreneceksiniz."
      ],
      "course_content": {
        "Gerekli Ortamların Kurulumu": [
          "Anaconda ve Jupyter Notebook Kurulumu",
          "Hatırlatma!",
          "Kursun kaynak kodları hakkında"
        ],
        "Değişkenler": [
          "Değişken Kavramına Giriş",
          "Değişken Değerlendirme Testi"
        ],
        "Temel Veri Tipleri": [
          "Temel Veri Tiplerine Giriş",
          "Temel Veri Tipleri Arasındaki Dönüşümler",
          "Print Fonksiyonunda Kullanılan Özel Karakterler",
          "End ve Sep Kavramları",
          "Temel Veri Tipleri Değerlendirme Testi"
        ],
        "Operatörler": [
          "Aritmetik Operatörler",
          "Karşılaştırma İşlemlerinde Kullanılan Operatörler",
          "Mantıksal Operatörler",
          "Bit Düzeyi İşlemlerde Kullanılan Operatörler",
          "Ekstra Operatörler",
          "Alıştırma- Girilen Parayı Banknotlara Ayırma",
          "Alıştırma- Girilen 3 Basamaklı Sayıyı Tersten Yazdırma",
          "Ödev Soruları",
          "Ödev Çözümleri- Delta Değeri Hesaplama",
          "Ödev Çözümleri- Vize&Final Notu ile Ortalama Hesaplama",
          "Ödev Çözümleri- Daire'nin Alan ve Çevresini Hesaplama",
          "Operatörler Değerlendirme Testi"
        ],
        "Koşul Yapıları": [
          "If-Else-Elif Durumları",
          "Alıştırma- Hesap Makinesi Programı",
          "Alıştırma- Bankamatik Programı",
          "Ödev Soruları",
          "Ödev Çözümleri- Rastgele Bir Sayının Basamak Sayısını Hesaplama",
          "Ödev Çözümleri- Alışveriş Sepeti Fiyatı Hesaplama",
          "Ödev Çözümleri- Üçgen Oluşum Şartı Hesaplama",
          "Koşul Yapıları Değerlendirme Testi"
        ],
        "Döngüler": [
          "While Döngüsü",
          "For Döngüsü",
          "Range Fonksiyonu",
          "Kaçış İfadeleri",
          "Alıştırma - Faktöriyel Hesaplama",
          "Alıştırma- Basamak Sayısı Hesaplama",
          "Alıştırma - Asal Sayı Sorgusu",
          "Alıştırma- EBOB&EKOK Hesaplama",
          "Alıştırma- Cümledeki Boşluk Karakter Sayısını Bulma",
          "Alıştırma- Sayının Tersini Hesaplama",
          "Ödev Soruları",
          "Ödev Çözümleri - 4 Farklı Üçgen Çizimi",
          "Ödev Çözümleri - Şifre Sorgulama",
          "Ödev Çözümleri - Mükemmel Sayı Sorgusu & 1-1000 Arasındaki Mükemmel Sayılar",
          "Ödev Çözümleri - Belirli Bir Aralıktaki Tüm Asal Sayıları Yazdırma",
          "Ödev Çözümleri - Armstrong Sayı Kontrolü & 1-1000 Arasındaki Armstrong Sayılar",
          "Ödev Çözümleri - Break&Continue ile Mükemmel Sayı Sorgusu",
          "Döngüler - Değerlendirme Testi"
        ],
        "Listeler-Demetler-Sözlükler-Kümeler": [
          "Neden Listelere İhtiyacımız Var? Listeleri Nasıl Tanımlarız?",
          "Listedeki Elemanlara ve İndekslere Erişim",
          "Bir Listeyi Parçalama ve İki Listeyi Birleştirme",
          "Listeye Eleman Ekleme: append ve insert Komutları",
          "Listeden Eleman Silme: remove, del ve pop Komutları",
          "Listede Eleman Kontrolü: in, not in ve index Komutları",
          "Listeyi Sıralama: sort ve reverse Komutları",
          "Liste Üzerinde İşlemler: count, min, max, sum Komutları",
          "Liste Eleman Üretme Yöntemleri",
          "Neden Demetlere İhtiyacımız Var? Demetleri Nasıl Tanımlarız?",
          "Demetteki Elemanlara ve İndekslere Erişim",
          "Bir Demeti Parçalama",
          "Demette Eleman Kontrolü: in, not in ve index Komutları",
          "Demet Üzerinde İşlemler: min, max, sum Komutları",
          "Neden Sözlüklere İhtiyacımız Var? Sözlükleri Nasıl Tanımlar ve Erişiriz?",
          "Sözlüğe Eleman Ekleme , Eleman Değeri Değiştirme ve Eleman Silme",
          "items(),keys(),values(), len() Kavramları",
          "Sözlüğü Güncelleme,Sözlüğü Kopyalama, Sözlükteki Elemanları Silme, Sözlüğü Silme",
          "Neden Kümelere İhtiyacımız Var? Kümeleri Nasıl Tanımlarız?",
          "Kümeye Eleman Ekleme, Çıkarma ve İki Kümenin Farkı",
          "Kesişim Küme, Alt Küme, Ayrık Küme, Kapsayan Küme ve Küme Birleşimi",
          "Listeler- Demetler- Sözlükler- Kümeler Değerlendirme Testi"
        ],
        "Fonksiyonlar": [
          "Fonksiyonlara Neden İhtiyacımız Var? Nasıl Tanımlanır? Nasıl Çağırılır?",
          "Varsayılan Parametre Kavramı ve Parametre İsmi ile Fonksiyon Çağrısı",
          "Değişken Sayıda Parametre",
          "Fonksiyonların Geriye Sonuç Döndürmesi ve return Anahtar Kelimesi",
          "Özyinelemeli Fonksiyonlar",
          "Local ve Global Kavramı",
          "Alıştırma - Cümledeki İstenen Karakteri Karakter İle Değiştiren Fonksiyon",
          "Alıştırma - Cümlenin İlk Harflerini Büyük Harfe Çeviren Fonksiyon",
          "Alıştırma - Anagram Kontrol Fonksiyonu",
          "Alıştırma - Palindrom Sorgu Fonksiyonu",
          "Alıştırma - Recursive Fibonacci Serisi Yazdırma Fonksiyonu",
          "Ödev Soruları",
          "Ödev Çözümleri - Ünlü Harf Sayısı Hesaplama Fonksiyonu",
          "Ödev Çözümleri - Cümledeki Ortalama Karakter Sayısını Hesaplayan Fonksiyon",
          "Ödev Çözümleri - Cümledeki Eşsiz Karakter Sayısını Hesaplama Fonksiyonu",
          "Ödev Çözümleri - Listedeki En Büyük ve En Küçük N. Sayıyı Hesaplayan Fonksiyon",
          "Ödev Çözümleri - Recursive OBEB-OKEK Hesaplayan Fonksiyon"
        ],
        "Hazır Tanımlanmış Fonksiyonlar": [
          "Matematiksel Fonksiyonlar(Math Modulü)",
          "String Fonksiyonları"
        ],
        "Pythondaki Gömülü Fonksiyonlar": [
          "Zip Fonksiyonu",
          "Map Fonksiyonu",
          "Filter Fonksiyonu",
          "Enumerate Fonksiyonu"
        ]
      },
      "requirements": [
        "Öğrencilerin bir bilgisayara sahip olması ve başlangıç seviyesinde bilgisayar kullanmayı bilmesi yeterlidir.",
        "Öğrencilerin, herhangi bir programlama bilgisine ihtiyacı yoktur.",
        "Kurs için en önemli koşulumuz; gelecek hayalleri,öğrenme disiplini ve hırsı."
      ],
      "description": "TR\nBu kursta başlangıç seviyesinden itibaren Python Programlamanın temellerini ve programlama mantığını öğreneceğiz. Eğer ki yeni başlıyorsanız ve nereden başlayacağınızı bilmiyorsanız bu kurs tam size göre.\nKurs İşlenişi\nKurs boyunca siz de bunu fark edecekseniz ki\n1.Bölümle ilgili tüm temel bilgileri derinlemesine öğreneceğiz.\n2.Bölümde öğrendiğimiz bilgilerin daha anlaşılır ve kalıcı olması için kodlama egzersizleri yapacağız.\n3.Bölümde öğrendiğimiz tüm konuları kapsayan ödev soruları ile önce sizin çözmeniz hedeflenecek sonra benim çözümlerim ile kafanızdaki tüm soru işaretleri ortadan kalkacak. Kursun sonunda ödev sorularının ve cevaplarının  çalışma dökümanlarına ulaşabileceksiniz. Bu sayede dersleri takip etmeniz daha kolay bir hale gelecek.\n4.Bölümün sonunda sizlere sunulan testler ile kendinizi test edebilecek ve yanlış yaptığınız zaman neyin eksik olduğunu soru açıklamalarıyla birlikte görebileceksiniz.\nKurs İçeriği\nKurs boyunca aşağıdaki konuları görmeye ve öğrenmeye çalışacağız.\nDeğişkenler\nTemel Veri Tipleri\nOperatörler\nKoşul Yapıları\nDöngüler\nListeler-Demetler-Sözlükler-Kümeler\nFonksiyonlar\nHazır Tanımlı Fonksiyonlar\nPythondaki Gömülü Fonksiyonlar\nHata Yönetimi\nDosya İşlemleri\nNesneye Yönelik Programlama\nIterator ve Generator Kavramları\nModül Kavramı\nHTTP İşlemleri ve Request Modülü\nHTTP İşlemleri | Requests Modülü ve Veri Kazıma | Beautiful Soup Modülü\nVeri Tabanı Yönetimi ve SqLite3\nVeri Analizi - Numpy\nVeri Analizi - Pandas\nVeri Görselleştirme - Matplotlib\nVeri Görselleştirme - Seaborn\nVeri Analizi | Görselleştirme Projesi - Fifa 2019 Oyuncu Analizi\nMasaüstü Uygulama Geliştirme | PyQt5\nPyQt5 - Sinema Bilet Satışı Projesi\nEN\nIn this course, we will learn the basics of Python Programming and programming logic from the beginner level. If you're just starting out and don't know where to start, this course is for you.\n\n\nCourse Syllabus\nIf you will notice this during the course,\n\n\nWe will learn all the basics about Part 1 in depth.\nIn the 2nd part, we will do coding exercises to make the information we learned more understandable and permanent.\nWith the homework questions covering all the topics we learned in the 3rd chapter, it will be aimed for you to solve first, and then all the question marks in your mind will be removed with my solutions. At the end of the course, you will have access to the working documents of the homework questions and answers. This will make it easier for you to follow the lessons.\nAt the end of the 4th chapter, you will be able to test yourself with the tests presented to you and see what is missing when you make a mistake, together with the question explanations.\n\n\nCourse Content\n\n\nThroughout the course we will try to see and learn about the following topics.\n\n\nVariables\nBasic Data Types\nOperators\nCondition Structures\nLoops\nLists-Tuples-Dictionaries-Sets\nFunctions\nPredefined Functions\nError Management\nFile Operations\nObject Oriented Programming\nModule Concept\nDatabase Management and Sqlite3\nData Analysis- Numpy\nData Analysis - Pandas\nData Visualization - Matplotlib\nData Visualization - Seaborn",
      "target_audience": [
        "Daha önce programlamayla uğraşmamış, yeni başlamak isteyen kişiler.",
        "Python dili dışında başka bir dil ile uğraşmış, Python öğrenmek isteyen kişiler.",
        "Python diliyle daha önce ilgilenmiş ancak bunu ileri seviyeye taşımak isteyen kişiler",
        "Yazılıma başlamak istiyorum ancak nereden başlamam gerekiyor bilmiyorum diyen kişiler.",
        "Gerçek hayatta karşılaştığı problemler için programlar yapmak isteyen kişiler."
      ]
    },
    {
      "title": "Guida ai Linguaggi C e C++17",
      "url": "https://www.udemy.com/course/c-guida-completa-bemporad/",
      "bio": "Diventa un Systems Programmer con il mio Corso Best-Seller su C e C++17",
      "objectives": [
        "Conoscenza approfondita della sintassi e della grammatica del linguaggio C11 e C++17",
        "Utilizzo del compilatore open-source C/C++ GNU, ed un compilatore C/C++ online",
        "Architettura generale di un computer e di un compilatore",
        "Le variabili, le costanti, ed i basic data types del linguaggio C",
        "Gli operatori aritmetici",
        "Gli array (monodimensionali e multidimensionali)",
        "Le Enumerazioni, le Strutture e le Unioni",
        "Le strutture di controllo (condizionali e di iterazione)",
        "La progettazione delle funzioni",
        "L'utilizzo dei puntatori (in tutti i suoi aspetti anche più avanzati)",
        "Le classi di memorizzazione",
        "L'utilizzo delle direttive del preprocessore",
        "I Namespace e gli Alias in C++",
        "Le Classi e gli Oggetti in C++",
        "L'Ereditarietà in C++"
      ],
      "course_content": {
        "Il Paradigma Object-Oriented (SEZIONE BONUS)": [
          "Oggetti e Concetti",
          "Classificazione",
          "Incapsulamento",
          "Membri di Istanza e di Classe",
          "Generalizzazione",
          "Ereditarietà",
          "Composizione",
          "Collaborazione",
          "Gli Oggetti Software",
          "Object Modeling in Color (gli Archetipi)"
        ],
        "WELCOME TO THE MACHINE": [
          "Welcome to the Machine",
          "Elementi di un Linguaggio Scritto",
          "Il Bit",
          "Le Operazioni Logiche (NOT, AND, OR, XOR)",
          "Il Sistema di Numerazione Decimale",
          "Il Sistema di Numerazione Binario",
          "Conversione da Decimale a Binario",
          "Somma di Numeri Binari Positivi",
          "Somma di Numeri Binari con XOR e AND",
          "Numeri Binari Negativi: Il Complemento a Due",
          "La Notazione Ottale",
          "La Notazione Esadecimale"
        ],
        "Linguaggio di Programmazione C: Introduzione": [
          "La Storia del C",
          "Architettura di Von Neumann",
          "Il Compilatore C",
          "Proviamo il Compilatore C Online",
          "\"Hello, World\""
        ],
        "Basic Data Types": [
          "Data Types",
          "Le Variabili",
          "Le Costanti",
          "I Tipi Interi",
          "I Literal Interi",
          "I Tipi Floating-Point",
          "Il Tipo Character",
          "Il Tipo Boolean",
          "ESERCITAZIONE: Operatore sizeof e Data Types",
          "Le Conversioni Implicite",
          "typedef",
          "ESERCITAZIONE: typedef"
        ],
        "Gli Operatori Aritmetici": [
          "Introduzione",
          "Gli Operatori Aritmetici",
          "ESERCITAZIONE: Operatori Aritmetici",
          "Operatori di Assegnamento Composti",
          "Conversioni Esplicite (type casting)"
        ],
        "Gli Array": [
          "Array Mono-Dimensionali",
          "Stringhe di Caratteri",
          "La Funzione strcpy",
          "Accesso ad un Array Mono-Dimensionale",
          "ESERCITAZIONE: Array Monodimensionali",
          "Array Multi-Dimensionali",
          "Accesso ad un Array Multi-Dimensionale",
          "Array con Lunghezza Variabile",
          "Array e sizeof",
          "ESERCITAZIONE: Array e sizeof"
        ],
        "Enumerazioni, Strutture ed Unioni": [
          "Le Enumerazioni",
          "ESERCITAZIONE: Le Enumerazioni",
          "Le Strutture: Dichiarazione",
          "Le Strutture: Inizializzazione",
          "Array di Strutture",
          "Strutture Nidificate",
          "Strutture che Contengono Array",
          "Inizializzazione Diretta di Strutture",
          "Strutture e typedef",
          "ESERCITAZIONE: Le Strutture",
          "Le Unioni"
        ],
        "Le Strutture di Controllo": [
          "Introduzione alle Strutture di Controllo",
          "Gli Operatori Relazionali",
          "Lo Statement \"if\"",
          "Lo Statement \"switch\"",
          "L'Operatore Condizionale",
          "Gli Operatori Logici",
          "Lo Statement \"for\"",
          "Lo Statement \"break\"",
          "Lo Statement \"continue\"",
          "ESERCITAZIONE: Statement \"for\" e \"if/else\"",
          "Lo Statement \"goto\"",
          "Lo Statement \"while\"",
          "Lo Statement \"do-while\"",
          "ESERCITAZIONE: Statement \"do-while\""
        ],
        "Le Funzioni": [
          "Introduzione alle Funzioni",
          "Definizione di una Funzione",
          "Invocazione di una Funzione",
          "Prototipo di una Funzione",
          "Argomenti: Passaggio per Valore",
          "Variabili Interne",
          "Variabili Esterne",
          "Lo Scope",
          "Inner Scope, Outer Scope",
          "Array Mono-Dimensionali come Parametri",
          "Array Multi-Dimensionali come Parametri",
          "L'Istruzione \"return\"",
          "ESERCITAZIONE: Le Funzioni",
          "Le Funzioni \"inline\""
        ],
        "I Puntatori": [
          "Introduzione ai Puntatori",
          "Dichiarazione ed Assegnamento di un Puntatore",
          "Operatore di Indirezione",
          "Puntatori e Parametri delle Funzioni",
          "I Puntatori e gli Array",
          "Aritmetica dei Puntatori",
          "ESERCITAZIONE: I Puntatori",
          "Confronto tra Puntatori",
          "Puntatori e Array come Parametri",
          "Puntatori a Funzione",
          "Puntatori \"void\"",
          "Puntatori Nulli",
          "Puntatori a Puntatori",
          "Array di Puntatori",
          "Puntatori a Costante",
          "Puntatori Costanti",
          "Puntatori Costanti a Costanti",
          "Puntatori e Strutture",
          "La Funzione main()"
        ]
      },
      "requirements": [
        "Non è richiesta nessuna particolare esperienza di programmazione.",
        "E' richiesta la conoscenza nell'utilizzo base di un PC/Mac, e l'uso basilare del terminale."
      ],
      "description": "Se ti avvicini per la prima volta ad un linguaggio di programmazione, questo corso fa per te.\nAnche se però conosci già un altro linguaggio di programmazione ma vuoi imparare il C/C++, troverai comunque in questo corso tutto ciò che ti serve.\nLa prima sezione del corso, che ti offro come bonus, è una sorta di corso nel corso... Imparerai infatti in modo approfondito il Paradigma Object-Oriented in tutti i suoi aspetti principali, secondo un percorso che ho ricavato dai miei (ahimè) moltissimi anni di esperienza sul campo come object-oriented analyst e designer. Le capacità che acquisirai nelle lezioni teoriche di questa prima sezione sono valide anche per qualunque linguaggio object-oriented, come Python, C#, Swift, C++.\nIl corso è poi costituito da due parti. Nella prima parte viene spiegato il linguaggio di programmazione C, partendo da zero, in modo agevole anche per chi ha poca o nessuna esperienza di programmazione. Nella seconda parte, viene invece spiegato in dettaglio il linguaggio di programmazione C++17, come estensione rispetto al linguaggio C introdotto nella prima parte.\nAcquistando questo corso, quindi, parteciperai in effetti a due corsi di programmazione: un corso di C (versione 11) ed un corso di C++ (versione 17).\nPerché dovresti imparare a programmare in C ed in C++?\n\nPrima di tutto, il C è il linguaggio da cui sono stati derivati molti altri linguaggi di programmazione (tra i quali in particolare Java, C++, C#, Swift, Objective-C) che sono in assoluto tra i più usati al mondo: conoscere il C ti consentirà di accedere a questi linguaggi con molta più facilità - e con un livello di approfondimento che non si può ottenere in questi linguaggi senza prima conoscere realmente la sintassi del C.\nInoltre, nonostante il C sia stato introdotto sul mercato alla fine degli anni '70 (!) l'indice TIOBE (il principale indice di misurazione per la diffusione dei linguaggi di programmazione nel mondo) ha eletto proprio il C come linguaggio dell'anno 2017, in quanto è risultato il linguaggio che è cresciuto maggiormente in termine di utilizzo.\nConoscere il linguaggio C, attraverso questo corso, ti consentirà inoltre di apprendere i principali meccanismi della programmazione del software in generale. Inoltre, data la natura stessa del linguaggio, apprenderai anche come avviene la programmazione a \"basso livello\", cioè al livello in cui diventa importante essere consapevoli dell'architettura delle CPU e della memoria del computer, per ottenere codice ottimizzato ed estremamente performante.\nImparare poi a sviluppare in C++ ti porterà a conoscere e ad utilizzare anche la programmazione object-oriented, ed a padroneggiare uno dei linguaggi di programmazione più potenti al mondo.\nCosa imparerai in questo corso\nPer prima cosa: questo corso non è un lungo tutorial generico sui linguaggio C/C++: è una vera e propria guida nella quale ogni singolo elemento di entrambi i linguaggi viene preso in esame, definito, illustrato e spiegato in dettaglio. Gli argomenti stessi sono stati disposti secondo un ordine che consente di comprendere ciascuno dei due linguaggi in modo progressivo ma completo.\nAnche se questo corso è una guida approfondita al linguaggio C (nella versione 11, la più recente), ed al linguaggio C++ (nella versione 17, anche in questo caso la più recente) nulla è stato dato per scontato: ogni argomento viene introdotto tenendo presente che potresti non avere alcuna esperienza di programmazione.\nIn particolare in questo corso imparerai in modo approfondito:\nL'utilizzo del compilatore open-source C e C++ GNU, ed un compilatore C/c++ online\nL'architettura generale di un computer e di un compilatore\nLe variabili, le costanti, ed i basic data types del linguaggio C\nGli operatori aritmetici\nGli array (monodimensionali e multidimensionali)\nLe enumerazioni\nLe strutture\nLe unioni\nLe strutture di controllo (condizionali e di iterazione)\nLa progettazione delle funzioni\nL'utilizzo dei puntatori (in tutti i suoi aspetti anche più avanzati)\nLe classi di memorizzazione\nL'utilizzo delle direttive del preprocessore\nI Namespace e gli Stream in C++\nLe Classi e gli Oggetti in C++\n\n\nUna sezione molto estesa del corso è stata dedicata alla descrizione dei puntatori, uno degli argomenti più importanti - ma anche uno dei più complessi - che ci troviamo ad affrontare quando si impara il linguaggio C.\nIl tuo istruttore, Alessandro Bemporad, ha progettato e programmato personalmente per molti anni sistemi software complessi nei linguaggi C e C++ - che sono stati in effetti proprio i suoi primi linguaggi di programmazione! - e conosce quindi in modo molto approfondito l'argomento di questo corso.",
      "target_audience": [
        "Chiunque sia interessato ad imparare a programmare, utilizzando i linguaggi C e C++",
        "Chiunque abbia già esperienza di programmazione in altri linguaggi, e che desidera imparare a programmare in C ed in C++"
      ]
    },
    {
      "title": "C++ Essencial: Aprenda a Programar PASSO a PASSO!",
      "url": "https://www.udemy.com/course/cpp-essencial/",
      "bio": "Aprenda C++ e tudo que precisa pra desenvolver aplicações de forma fácil com uma das didáticas mais elogiadas do Brasil!",
      "objectives": [
        "Fundamentos da Liguagem C++",
        "Orientação a objetos",
        "Funções",
        "Array",
        "Vector",
        "Referência",
        "Ponteiro",
        "Lógica de programação",
        "Anatomia do código",
        "Entradas e saídas",
        "Tipos de Dados",
        "Operadores",
        "Estruturas de controle",
        "Classes",
        "Métodos",
        "Herança",
        "Polimorfirmo",
        "Encapsulamento"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Visão Geral de Estrutura de Dados",
          "Visão Geral de Algoritmo",
          "Usando o terminal",
          "Terminais",
          "Aviso importante aos usuários de Windows",
          "Instalação C++ (Windows)",
          "Instalação C++ (MacOS)",
          "Problema do Windows Marcar .EXE como Trojan"
        ],
        "Fundamentos": [
          "Introdução do Módulo",
          "Configurando o Projeto",
          "Primeiro Programa",
          "Anatomia de um Código C++",
          "Imprimindo no Console",
          "Variável",
          "Usando Namespace",
          "Entradas/Saídas",
          "Desafio Área da Circunferência",
          "Desafio Área da Circunferência - Resposta",
          "Tipos Primitivos #01",
          "Tipos Primitivos #02",
          "Tipo String",
          "Inferência de Tipos",
          "Operadores Aritméticos",
          "Operadores de Atribuição",
          "Operadores Relacionais",
          "Operadores Lógicos",
          "Operadores Unários",
          "Operador Ternário",
          "If #01",
          "If #02",
          "Desafio If",
          "Desafio If - Resposta",
          "If/Else",
          "If/Else If",
          "While #01",
          "While #02",
          "For #01",
          "For #02",
          "Do While",
          "Switch",
          "Break/Continue",
          "Conclusão do Módulo"
        ],
        "Memória (Referência/Ponteiro)": [
          "Introdução do Módulo",
          "Atribuição por Copia vs Referência",
          "Atribuição por Copia",
          "Referência #01",
          "Referência #02",
          "Referência #03",
          "Operador de (Des)referência",
          "Ponteiro #01",
          "Ponteiro #02",
          "Um Pouco Sobre Array",
          "Ponteiro #03",
          "Conclusão do Módulo"
        ],
        "Funções": [
          "Introdução do Módulo",
          "Básico Sobre Funções #01",
          "Básico Sobre Funções #02",
          "Básico Sobre Funções #03",
          "Parâmetro por Copia vs Referência",
          "Retorno de uma Função",
          "Recursividade",
          "Pilha de Execução & Escopo",
          "Variável Estática",
          "Função Main",
          "Typedef",
          "Função como Parâmetro",
          "Lambda",
          "Conclusão do Módulo"
        ],
        "Alguns Conceitos Importantes": [
          "Introdução do Módulo",
          "Processo de Compilação",
          "Include #01",
          "Include #02",
          "Define",
          "IFDEF",
          "Identificadores",
          "Namespace",
          "Arquivo Header (.h)",
          "Pequeno Projeto",
          "Conclusão do Módulo"
        ],
        "Array & Vector": [
          "Introdução do Módulo",
          "Básico Sobre Array #01",
          "Básico Sobre Array #02",
          "Iterando Sobre Array #01",
          "Iterando Sobre Array #02",
          "Array Multidimensional",
          "String como um Array de Caracteres",
          "Vector #01",
          "Vector #02",
          "Implementando a Função Map",
          "Conclusão do Módulo"
        ],
        "Classes & Objetos": [
          "Introdução do Módulo",
          "Primeira Classe",
          "Classe vs Objeto",
          "Primeiro Método",
          "Desafio Classe Produto",
          "Desafio Classe Produto - Resposta",
          "Usando Direct List Initialization",
          "Construtor #01",
          "Construtor #02",
          "Construtor #03",
          "Construtor #04",
          "Destrutor",
          "Atributos Privados",
          "Copy Constructor",
          "Stack vs Heap",
          "Usando a Stack",
          "Operador new #01",
          "Operador new #02",
          "Conclusão do Módulo"
        ],
        "Orientação a Objeto": [
          "Paradigmas",
          "Pilares OO #01",
          "Pilares OO #02",
          "Pilares OO #03",
          "Pilares OO #04"
        ],
        "Conclusão": [
          "Conclusão do Curso"
        ]
      },
      "requirements": [
        "Desejável conhecimento de algoritmo"
      ],
      "description": "Seja bem-vindo ao curso de C++ da Cod3r.\nNeste curso abordamos uma das linguagens mais versáteis de se programar, e aqui você aprenderá de forma definitiva os principais conceitos, tudo que é essencial, e aquilo que é necessário pra você desenvolver suas aplicações em C++.\nA Cod3r se orgulha de ser uma das escolas de tecnologia que mais crescem no Brasil, e investe alto pra que você tenha o conteúdo que fará diferença na sua carreira. Somos reconhecidos pela excelência e didática ímpar, e por isso a Udemy possui uma política de reembolso de até 30 dias após a compra se não estiver satisfeito com o curso. Se ainda não conhece os nossos métodos e os nossos cursos, te desafio a assistir as aulas gratuitas e conferir.\nRobusta e consolidada, C++ é a junção perfeita de linguagem de baixo nível e alto nível. Todo o poder de C com a versatilidade da orientação a objetos.\nLargamente utilizada em vários tipos de aplicações, está no topo das linguagens mais utilizadas mundo, e é assim que podemos perceber como C++ é poderosa, flexível e abrangente. Ela pode ser usada para programar qualquer tipo de software desde os mais simples até os mais complexos.\nAlém disso, C++ é uma linguagem que gera programas em código de máquina. Por sua capacidade de atingir o baixo nível de programação, próxima à linguagem de máquina, é amplamente utilizada em compiladores, editores, ferramentas de programação, jogos e programas de rede.\nNós aprenderemos juntos os principais conceitos que formam bons programadores como: lógica de programação, anatomia do código, entradas e saídas, tipos de dados, operadores, estruturas de controle, toda a questão de memória como referência e ponteiro e funções. Conceitos importantes da linguagem como array e vector e todos os conceitos do paradigma de orientação a objetos como: herança, polimorfismo, sobrecarga de métodos, encapsulamento, classes, métodos e etc.\nC++ tem uma comunidade largamente difundida em todo o mundo o que resulta em bastante conteúdo e códigos disponíveis na internet, você sempre conseguirá encontrar o que precisa.\nNo nosso curso você dispõe de um time de suporte ágil e qualificado pra tirar todas suas dúvidas, e ajudá-lo na compreensão dos conteúdos apresentados.\nAlém disso, você terá direito a acesso vitalício, e ao final do curso, você garante um certificado de conclusão.\nEstamos muito ansiosos pra trabalharmos juntos nesse processo de aprendizado. Conte com o nosso time e te vejo no curso.",
      "target_audience": [
        "Iniciantes na linguagem C++",
        "Qualquer pessoa que deseja aprender e desenvolver aplicações em C++",
        "Interessados em entender melhor o paradigma de orientação a objeto"
      ]
    },
    {
      "title": "Dein Einstieg in Node.js: Professionell und komplett",
      "url": "https://www.udemy.com/course/node-js-professionell-und-komplett/",
      "bio": "Erfolgreich JavaScript auf dem Server entwickeln mit Express, SQL-Datenbanken, REST-APIs und asynchroner Programmierung",
      "objectives": [
        "Komplexe Node-Anwendungen für Web oder Kommandozeile entwickeln",
        "REST-APIs mit Node erstellen",
        "APIs anfragen",
        "SQL-Datenbanken mittels Node abfragen",
        "Asynchrone Programmierung mit Callbacks, Promises und async/await",
        "Sprachstandards ES6/ES2015 und aufwärts",
        "Nützliche Programmiertools, um die Produktivität zu steigern",
        "Anwendungen mittels Umgebungsvariablen konfigurieren",
        "Das Express-Framework für Webanwendungen oder APIs nutzen",
        "Eine Anwendung in einem Cloud-Dienst laufen lassen"
      ],
      "course_content": {},
      "requirements": [
        "Du solltest mit den Grundlagen von JavaScript vertraut sein und schon einmal etwas programmiert haben.",
        "ES6-Kenntnisse werden nicht benötigt, das sie im Kurs vermittelt werden.",
        "Du hast Interesse daran, ein Problem gründlich und nicht nur schnell zu lösen."
      ],
      "description": "Dieser Kurs wurde speziell erstellt für Entwickler, die einen fundierten Einstieg in Node.js wollen und nicht die Zeit haben, sich durch Dutzende Tutorials zu wühlen. Von Grundlagen bis zu fortgeschrittenen Konzepten wird alles abgedeckt, was man für die moderne Softwareentwicklung mit Node.js braucht.\nJavaScript ist die meistgenutzte Programmiersprache der Welt. Sie läuft nicht nur in jedem Browser und auf fast jeder Website, sondern sie ist mit Node.js auch auf dem Server angekommen und wird heute für alle Arten von Applikationen eingesetzt.\nDeshalb sind gute Node-Entwickler gefragt wie nie und bekommen Gehälter angeboten, die früher eher Java- oder C#-Experten vorbehalten waren.\nDennoch fällt vielen der Einstieg oder Umstieg zu Node.js nicht leicht. Dafür gibt es Gründe:\nJavaScript unterscheidet sich von vielen anderen Programmiersprachen dadurch, dass es ereignisbasiert ist und man asynchron denken muss.\nDie JavaScript- und Node-Landschaft verändert sich in einem Tempo, das es schwer macht, auf dem laufenden zu bleiben. Jede Woche kommen neue Frameworks, npm-Pakete und Tutorials heraus. Diese sind eventuell nützlich, aber nicht immer.\nNode.js und seine Tools waren lange Zeit eher instabil und sorgten für viel Frustration nicht nur bei Einsteigern, sondern sogar bei erfahrenen Entwicklern.\nManche Entwickler denken fälschlicherweise, sie müssten bei einem Umstieg auf Node alle ihre vertrauten Tools hinter sich lassen, z.B. relationale Datenbanken wie MySQL oder Postgres.\nHier schafft dieser Kurs Klarheit:\nWir schauen uns genau an, wie sich synchrone und asynchrone Programmierung unterscheiden und lernen die Bausteine der asynchronen Programmierung - Callbacks, Promises und async/await - genau kennen.\nWir schaffen uns ein stabiles Fundament an Grundlagen von JavaScript und Node.js, so dass Absolventen dieses Kurses selber beurteilen können, welche Trends es zu verfolgen gilt und was nur vorübergehender Hype ist.\nDer Kurs erklärt Schritt für Schritt den Umgang mit unentbehrlichen Entwicklertools wie Visual Studio Code, npm, yarn, nodemon, Postman, Prettier und git.\nNach der Teilnahme an diesem Kurs weißt du, wie du fremde oder eigene APIs aufrufst und die gesendeten Daten verarbeitest.\nDu kannst sowohl Konsolen- als auch Webanwendungen und APIs entwickeln, ob mit oder ohne Framework.\nDu kannst eine mittlere oder auch große Webanwendung mit Express entwickeln und so strukturieren, dass sie übersichtlich und wartbar bleibt.\nDu weißt bescheid über moderne JavaScript-Sprachkonstrukte wie async/await, Promises, arrow functions, den Spread-Operator, Destrukturierung und viele mehr.\nDu beherrschst die Kommunikation zwischen Node.js und einer SQL-Datenbank.\nAchtung: Der Kurs deckt ausdrücklich keine NoSQL-Datenbanken wie MongoDB oder CouchDB ab, sondern zeigt die Arbeit mit einer produktionsreifen SQL-Datenbank.\n\n“Aber ich habe keinerlei Vorkenntnisse in Node!”\nDas macht nichts! Der Kurs geht nicht davon aus, dass du Node.js schon einmal benutzt hast. Er richtet sich an Node-Einsteiger und auch Fortgeschrittene, die schon einmal JavaScript geschrieben haben. Dabei musst du kein Experte in JavaScript sein, aber z.B. wissen, wie man eine Funktion schreibt oder aufruft, und die grundlegenden Datentypen kennen (Zahlen, Booleans, Strings, Arrays, Objekte).\n\n“Ich komme eher aus der PHP- / Ruby- / Python- / Java-Ecke und habe schon lange kein JavaScript mehr geschrieben.”\nKeine Sorge: So lange du die Grundzüge von JavaScript nicht völlig vergessen hast, solltest du problemlos hier einsteigen können. Es gibt sogar eine Gegenüberstellung eines JavaScript-Programms und eines PHP-Programms, die das Gleiche tun. Außerdem werden neuere Sprachbestandteile (ES2015 und aufwärts) immer ausführlich erklärt, wenn sie zum ersten Mal benutzt werden.\n\n“Es gibt viele Kurse. Wieso sollte ich diesen belegen?\"\nDieser Kurs geht sorgsam mit dem wertvollsten um, was du hast: Mit deiner Zeit. Obwohl alle Konzepte und Prinzipien fundiert erklärt werden, kommen die Lektionen immer zügig zum Punkt und blähen den Stoff nicht unnötig auf. So kannst du in kurzen Einheiten (zwischen 3 und 20 Minuten) auch mal zwischendurch lernen. Für jedes Video wird der aktuelle Stand im Code mitgeliefert, so dass du direkt mitprogrammieren kannst.\n\nBelege jetzt diesen Node.js-Kurs und gib deiner Entwicklung als Software-Profi einen entscheidenden Impuls! Dein Erfolg ist mein Ziel!",
      "target_audience": [
        "JavaScript-Entwickler und solche, die es werden wollen.",
        "Leute, die gründliche Erklärungen mögen und trotzdem keine Zeit verschwenden wollen.",
        "Einsteiger und Fortgeschrittene, die professionell arbeiten wollen und bereit sind für den nächsten Level."
      ]
    },
    {
      "title": "C# ve DevExpress ile Gelişmiş Ön Muhasebe Yazılımı (Bölüm-1)",
      "url": "https://www.udemy.com/course/on-muhasebe-yazilimi-bolum1/",
      "bio": "C# Tabanında Entity Framework ORM Aracını ve Devexpress Componentlerini Kullanarak Gelişmiş Bir Uygulama Geliştirelim.",
      "objectives": [
        "C# Winform uygulamalarına hakim olacak ve kendi masaüstü uygulamalarınızı yapabilecek",
        "Devexpress araçlarını kullanarak görsel ve kullanışlı yazılımlar yapabilecek",
        "Entity Framework teknolojisine hakim olacak",
        "LinQ ile kompleks sorgular yazabilecek"
      ],
      "course_content": {},
      "requirements": [
        "Temel düzeyde C# bilgisi",
        "Visual Studio kurulu bir bilgisayarınızın olması",
        "Azimli ve öğrenmeye açık olmak"
      ],
      "description": "Projemiz 4 bölümden oluşmaktadır.\nC# ve Devexpressin gücünü birleştirerek görsel anlamda güçlü bir ön muhasebe programı yazacağız. Bu kursta C# dilinin inceliklerine olabildiğince değinmeye çalıştım. Az kod çok iş mantığı ile yazdığımız yazılım sizlere C# dili ile neler yapabileceğiniz konusunda bir fikir verecektir. Piyasada 1500-2000 TL fiyatlara satılan ön muhasebe programlarının nasıl yapıldığını öğrenip belki de öğrendiklerinizin üstüne bir şeyler katıp çok daha gelişmiş yazılımlar geliştirebileceksiniz. Bu konuda sizden tek isteğim azim ve takıldığınız her yerde soru sormak olacak. Sizin için özenle hazırladığım kursumun sizlere faydalı olmasını diliyorum.\nNot: Projenin kaynak kodlarının paylaşımı yoktur. Projeyi en baştan en sona videolar üzerinde yapıyoruz. Yani videoları izleyerek yapılan işin mantığını görüp uygulamayı aynı şekilde yapabilirsiniz. Kursu sadece kaynak kodları için satın almak isteyen arkadaşlar lütfen almasın. Burada temel amacım eğitimdir.",
      "target_audience": [
        "C# Programlama dilini temel düzeyde bilenler",
        "Masaüstü yazılım teknolojileri üzerinde yoğunlaşmak isteyenler",
        "LinQ sorgu dilinde gelişmiş sorguların nasıl yazılacağını öğrenmek isteyenler",
        "Devexpress araçları hakkında bilgi sahibi olmak isteyenler",
        "Entity Framework teknolojisini öğrenmek istiyorum diyenler"
      ]
    },
    {
      "title": "Smart Contracts y Blockchain con Solidity de la A a la Z",
      "url": "https://www.udemy.com/course/solidity-a-z/",
      "bio": "Aprende Solidity como un experto empezando por las bases hasta programar tus propios Smart Contracts como un profesional",
      "objectives": [
        "Aprenderemos todas las herramientas para la creación de Smart Contracts y para almacenamiento de su código.",
        "Veremos las propiedades de transacciones y de bloques mediante código para relacionar los conceptos teóricos con la práctica",
        "Pasaremos por todas las variables y operaciones que son imprescindibles",
        "Veremos las estructuras de datos para almacenamiento de información en Blockchain",
        "Programaremos funciones de las más básicas hasta las más avanzadas",
        "Entenderemos como interactuar con varios contratos al mismo tiempo y realizar herencias de contratos",
        "Tendremos la posibilidad de realizar operaciones seguras con la librería SafeMath",
        "Crearemos nuestras propias librerías",
        "Veremos como crear una fábrica de Smart Contracts y conectar la red distribuida de ficheros (IPFS) con nuestros Smart Contracts",
        "Despliegue del Token ERC-20 en Binance Smart Chain (BSC) y Polygon (MATIC)"
      ],
      "course_content": {
        "Requisitos previos - Herramientas a utilizar en el curso": [
          "Google Chrome",
          "Remix",
          "Metamask",
          "IPFS",
          "Etherscan",
          "GitHub"
        ],
        "----------- BLOQUE 1: Conceptos básicos de Solidity -----------": [
          "Bienvenidos al Bloque 1 -Conceptos básicos de Solidity"
        ],
        "Tema 1 - Primeros pasos en Solidity": [
          "Introducción a Remix",
          "Almacenamiento del código",
          "Evitar el warning \"compilerMetadata is modifying...\"",
          "Versión del Smart Contract",
          "¡Cuidado con la versión y el compilador!",
          "Creación del Smart Contract",
          "Constructor",
          "Comentarios avanzados para nuestro código"
        ],
        "Tema 2 - Propiedades de transacciones y bloques": [
          "Funciones globales en Solidity sobre la Blockchain",
          "Practicando las funciones globales en Solidity sobre la Blockchain",
          "Función Keccak256",
          "Ejemplos con la función Keccak256",
          "¡Cuidado con este detalle sobre funciones!"
        ],
        "Tema 3 - Tipos de variables y operaciones": [
          "Variables enteras",
          "Variables strings, booleanas, bytes y addrress",
          "Ejemplos de variables strings, booleanas y address",
          "Enumeraciones en Solidity",
          "Ejemplos de enumeraciones en Solidity",
          "Unidades de tiempo en Solidity",
          "Practicando con las unidades de tiempo",
          "Casteo de variables",
          "Ejemplos de casteo de variables",
          "Modificador public, private y internal",
          "Ejemplos de modificadores",
          "Memory, storage y payable",
          "Comparar strings con keccak256",
          "Operadores matemáticos y booleanos",
          "Practicando con los operadores matemáticos y booleanos"
        ],
        "Tema 4 - Estructuras de datos": [
          "Estructuras en solidity",
          "Ejemplos de estructuras en solidity",
          "Mappings",
          "Ejemplos de mappings",
          "Arrays",
          "Ejemplos de arrays"
        ],
        "Tema 5 - Funciones": [
          "Declaración de una función en Solidity",
          "Ejemplos de funciones en Solidity",
          "Valores de retorno de una función",
          "Practicando los valores de retorno de una función",
          "Modificadores view, pure y payable",
          "Ejemplos de los modificadores view, pure y payable",
          "Causas benéficas",
          "Eventos",
          "Ejemplos de eventos"
        ],
        "Tema 6 - Bucles y condicionales": [
          "Sentencia if",
          "Ejemplos de la sentencia if",
          "Bucle for",
          "Ejemplos del bucle for",
          "Bucle while",
          "Ejemplos del bucle while"
        ],
        "Tema 7 - Interactuando con varios Smart Contracts": [
          "Herencia",
          "Ejemplos de herencia",
          "Importar contratos en Solidity",
          "Librerías en Solidity",
          "Ejemplos de Librerías",
          "Interfaces en Solidity"
        ],
        "Tema 8 - Funciones avanzadas": [
          "Modificadores internal y external",
          "Ejemplos de los modificadores internal y external",
          "Require",
          "Ejemplos de require",
          "Modifier",
          "Ejemplos de modifier"
        ]
      },
      "requirements": [
        "No es necesario ningún tipo de conocimiento en programación. Este curso es realmente te enseñará a programar desde cero",
        "Un ordenador con conexión a internet para poder acceder a programar Smart Contracts",
        "¡Muchas ganas de aprender!"
      ],
      "description": "¿Quieres aprender a programar en el lenguaje que permite crear Smart Contracts?\n¿Te intimidan los avances de las nuevas formas de almacenar información y quieres adaptarte a este cambio tecnológico?\n¿Eres un emprendedor que quiere transformar su negocio con el poder de la tecnología Blockchain pero no sabes cómo conseguirlo?\nSi la respuesta a alguna de estas preguntas es Sí, entonces este curso es para ti.\nBlockchain es uno de los campos tecnológicos más punteros en el que todos quieren estar. Y es que Blockchain está cambiando la vida de las personas al igual que lo hizo la electricidad hace ya 100 años. Las palabras Blockchain, Cadena de Bloques, Bitcoin, Ethereum cada vez están más presente en la vida de todos nosotros, la revolución de las criptomonedas ya es una realidad.\nEste curso es único, pues lo hemos diseñado para que aprendas a programar Smart Contracts o también conocidos como Contratos Inteligentes. Es el único curso de todo Udemy en español que cubre lo necesario para ser un experto en la programación de Smart Contracts en Ethereum con Solidity.\nEl curso ha sido diseñado para cubrir los pilares básicos de la programación en Solidity, empezando por los conceptos básicos de la programación en Solidity, siguiendo por la programación de proyectos reales con Solidity y finalizando con un proyecto real de más de 500 líneas de código para entender todo lo necesario para ser un experto en la creación de Smart Contracts.\nPor ello, vamos a ver como utilizar Remix para la programación de Contratos Inteligentes, veremos las propiedades de las transacciones mediante código, los distintos tipos de variables y operaciones, así como las estructuras de datos para almacenar la información necesario, también pasaremos viendo todo tipo de lógica de funciones y bucles con condicionales. Y por si fuera poco veremos cómo crear una fábrica de Smart Contracts y conectar ficheros almacenados en IPFS con nuestro contrato. Todo esto va a acompañarse con un sin fin de proyectos reales para poner en uso todo lo aprendido.\nEn el curso nos centraremos en varios bloques, el primero de estos consistirá en:\nAprenderemos todas las herramientas para la creación de Smart Contracts y para almacenamiento de su código\nVeremos las propiedades de transacciones y de bloques mediante código para relacionar los conceptos teóricos con la práctica\nPasaremos por todas las variables y operaciones que son imprescindibles\nVeremos las estructuras de datos para almacenamiento de información en Blockchain\nProgramaremos funciones de las más básicas hasta las más avanzadas\nEntenderemos como interactuar con varios contratos al mismo tiempo y realizar herencias de contratos\nTendremos la posibilidad de realizar operaciones seguras con la librería SafeMath\nCrearemos nuestras propias librerías\nVeremos como crear una fábrica de Smart Contracts y conectar la red distribuida de ficheros (IPFS) con nuestros Smart Contracts\nEl segundo bloque va a enfocarse en realizar proyectos reales para poner en práctica todo lo aprendido en el primer bloque, los proyectos que realizaremos serán:\nSistema de evaluaciones universitarias\nSistema de votación online con registros en Blockchain\nCreación y uso de un Token ERC-20\nDespliegue del Token ERC-20 en Binance Smart Chain (BSC) y Polygon (MATIC)\nCreación de un sistema de pagos con Tokens para DISNEY\nImplementación de un sistema de Lotería\nCreación de un sistema de gestión de un centro médico del COVID-19 mediante Blockchain\nSi con todo esto no fuera poco, vamos a finalizar con un tercer bloque donde tendremos un proyecto real con más de 500 líneas de código que va a consistir en la programación en Solidity de un Servicio de Telemedicina.\nEste curso es ideal para cualquiera que quiera obtener conocimientos acerca de la programación de Smart Contracts.\nEn particular te lo recomiendo si eres:\n- Un consultor freelance que tiene habilidades de programación y quiere transformar las empresas con el poder de la Blockchain\n- Empresarios y dueños visionarios que quieren subir sus empresas de categoría de nivel con el poder del Blockchain\n- Iniciados en Blockchain que quieren mejorar su portfolio con nuevos proyectos\n- Apasionados en la tecnología que quieren ganar experiencia con la programación en Solidity\n- Cualquier persona interesada en mejorar y adaptarse a los cambios tecnológicos presentes\nLos estudiantes ganaran con nosotros habilidad práctica sobre la programación de Smart Contracts. Y tendrás acceso a todo el material y transparencias del curso e incluso tendrás un certificado de completación del curso al final del mismo que podrás subir a LinkedIn para mostrar tus nuevas habilidades en Blockchain y Solidity.\n¡Nos vemos en clase!",
      "target_audience": [
        "Un consultor freelance que tiene habilidades de programación y quiere transformar las empresas con el poder de la Blockchain",
        "Empresarios y dueños visionarios que quieren subir sus empresas de categoría de nivel con el poder del Blockchain",
        "Iniciados en Blockchain que quieren mejorar su portfolio con nuevos proyectos",
        "Apasionados en la tecnología que quieren ganar experiencia con la programación en Solidity",
        "Cualquier persona interesada en mejorar y adaptarse a los cambios tecnológicos presentes"
      ]
    },
    {
      "title": "Especialización Arduino + Python (El curso más completo)",
      "url": "https://www.udemy.com/course/especializacion-python-arduino-el-curso-mas-completo/",
      "bio": "Curso completo de Arduino y Python, Domótica, reconocimiento facial, comunicaciones, bases de datos y muchos temas más.",
      "objectives": [
        "Programación en Arduino",
        "Curso completo de programación en Python",
        "Bases de datos con SQLite",
        "Curso completo de interfaces gráficas con Pytq",
        "Crear una interfaz para un sistema domótico",
        "Crear un sistema de acceso con reconocimiento facial",
        "Control de motores de DC",
        "Programación orientada a objetos con Python",
        "Trabajar con TinkerCAD",
        "Electrónica básica",
        "Redes de área local",
        "Multi hilos",
        "Comunicación Ethernet",
        "Comunicación serial"
      ],
      "course_content": {
        "Introducción": [
          "Comunidad de Discord",
          "Introducción",
          "Que es Arduino?",
          "Introducción a TinkerCAD",
          "Valoraciones"
        ],
        "Electrónica básica": [
          "Introducción",
          "Voltaje y corriente",
          "Ley de Ohm",
          "Circuitos en serie",
          "Circuitos en paralelo",
          "El LED",
          "Pulsadores"
        ],
        "Primeros pasos con Arduino": [
          "Los pines digitales",
          "Constantes",
          "Variables",
          "Secuencia de LEDs",
          "Ciclos",
          "Ciclo For parte 1",
          "Ciclo For parte 2",
          "Ciclo For parte 3",
          "Ciclo while parte 1",
          "Ciclo while parte 2",
          "Ciclo while parte 3",
          "Ciclo do while",
          "Introducción de tipos de datos",
          "Boolean",
          "Byte",
          "Char",
          "Word",
          "Int",
          "Unsigned long",
          "Long",
          "Float",
          "String",
          "Introduccion operadores",
          "Operadores aritméticos",
          "Operadores condicionales",
          "Operadores booleanos",
          "Operadores compuestos",
          "Sentencia IF",
          "IF ELSE",
          "Detección de flancos",
          "Secuencia de Leds",
          "Interrupción",
          "Switch Case"
        ],
        "Sensores resistivos": [
          "Introducción a sensores resistivos",
          "Principio del sensor resistivo",
          "La fotorresistencia",
          "Salida resistiva de los sensores",
          "El ADC de Arduino",
          "Lectura de potenciometro con Arduino",
          "El problema de la cisterna",
          "Cero contaco con el rostro(Proyecto uilizado en la industria)",
          "PWM",
          "Variación y bloqueo",
          "Leer fotorresistencia",
          "Variando iluminación de LED con fotorresistencia",
          "Encendido automático de luces(Domótica)",
          "Encendido automático y manual de luces(Domótica)"
        ],
        "Control de motores DC": [
          "Introducción",
          "El motor de CD",
          "Simulando el motor de CD",
          "El puente H",
          "Control del sentido de giro con L293D",
          "Control de velocidad y sentido de giro L293D",
          "El servomotor",
          "Posición angular de un servomotor",
          "Potenciometro + servomotor",
          "Sensor de flexión y servomotor",
          "Sistema de mano biónica",
          "Seguidor de luz"
        ],
        "Instalaciones de Python": [
          "Instalación de Toolbox",
          "Instalación de Python y Pycharm",
          "Guía de inicio rápido en Pycharm",
          "Valoraciones",
          "Instalar plugins en Pycharm",
          "Ajustar tamaño de la fuente",
          "Instalación De Paquetes y Modo de Ejecución de Python",
          "Atajos del teclado Parte 1",
          "Atajos del teclado Parte 2",
          "Cambiar fondo en Pycharm",
          "Tareas y Problemas pendientes (FIXME AND TODO)",
          "Cambiar color del código",
          "Live Templates",
          "File And Code Templates"
        ],
        "Python": [
          "Hola, Mundo",
          "Comentarios",
          "Indentación",
          "Tipos de datos",
          "Nomenclatura de variables",
          "Concatenación",
          "Entrada por Teclado",
          "Operaciones Básicas",
          "Operadores Relacionales",
          "Ejercicio 1",
          "Ejercicio 2",
          "Ejercicio 3",
          "Condición If",
          "IF Anidados",
          "Operadores Lógicos",
          "Ciclo For",
          "Ciclo While",
          "Cadenas",
          "Listas I",
          "Listas II",
          "Tuplas",
          "Diccionarios",
          "Funciones I",
          "Funciones II",
          "Módulos I",
          "Modulos II",
          "Excepciones",
          "Introducción POO",
          "Método Constructor I",
          "Método Constructor II",
          "Herencia",
          "Abstracción",
          "Polimorfismo",
          "Encapsulamiento",
          "Getters y Setters",
          "Curso Python - Ejercicio 1",
          "Curso Python - Ejercicio 2",
          "Curso Python - Ejercicio 3",
          "Curso Python - Ejercicio 4",
          "Curso Python - Ejercicio 5",
          "Curso Python - Ejercicio 6",
          "Curso Python - Ejercicio 7",
          "Curso Python - Ejercicio 8"
        ],
        "Arduino + Python": [
          "Introduccion",
          "Comunicación Serial con Arduino",
          "Trabajando con Arduino fisico",
          "Encender un led por Serial",
          "Variando señal PWM desde Serial",
          "Variando señal PWM desde Serial - Segundo método",
          "Crear entorno de Python e instalando pyserial",
          "Ciurcuito para el ejercicio",
          "Ejercicio Python + Arduino parte 1",
          "Ejercicio Python + Arduino parte 2",
          "Ejercicio Python + Arduino parte 3",
          "Ejercicio Python + Arduino bonus",
          "Ejercicio con PWM",
          "Lectura y escritura con Python y arduino (Multi hilos) parte 1",
          "Lectura y escritura con Python y arduino (Multi hilos) parte 2",
          "Lectura y escritura con Python y arduino (Multi hilos) parte 3",
          "Lectura y escritura con Python y arduino (Multi hilos) parte 4",
          "Lectura y escritura con Python y arduino (Multi hilos) parte 5",
          "Breve explicación sobre hilos",
          "Lectura y escritura con Python y arduino (Multi hilos) parte 6",
          "Sensor de movimiento",
          "Proyecto Comunicación Serial (Brazo robot)",
          "Material proyecto Comunicación Serial (Brazo robot)",
          "PRECAUCIÓN",
          "Diagramas proyecto Comunicación Serial (Brazo robot)",
          "Proyecto Comunicación Serial (Brazo robot) parte 1",
          "Proyecto Comunicación Serial (Brazo robot) parte 2",
          "Instalar libreria PWM SERVO DRIVER",
          "Proyecto Comunicación Serial (Brazo robot) parte 3",
          "Proyecto Comunicación Serial (Brazo robot) parte 4",
          "Puesta a cero y funcionamiento del proyecto",
          "Bonus - Memoria de posiciones en el brazo robot",
          "Intro comunicación ethernet",
          "Arquitectura cliente - servidor parte 1",
          "Arquitectura cliente servidor parte 2",
          "El ethernet shield",
          "Consola domótica (práctica) parte 1",
          "Consola domótica (práctica) parte 2",
          "Consola domotica (práctica) parte 3",
          "Consola domótica (práctica) parte 4",
          "Configurar IP de mi conputadora",
          "Servidor multi cliente en Python y Arduino parte 1",
          "Servidor multi cliente en Python y Arduino parte 2",
          "Servidor multi cliente en Python y Arduino parte 3",
          "Proyecto integrador Ethernet",
          "Proyecto integrador Ethernet parte 2",
          "Proyecto integrador Ethernet parte 3",
          "Proyecto integrador Ethernet parte 4",
          "Proyecto integrador Ethernet parte 4",
          "Proyecto integrador Ethernet parte 5",
          "Proyecto integrador Ethernet parte 6"
        ],
        "SQLite": [
          "Introducción a SQL",
          "La base de datos relacional",
          "Introducción a SQLite",
          "Instalación de SQLite",
          "Tipos de datos",
          "Mi primera base de datos",
          "Insertar y consultar datos",
          "Primer acercamiento al lenguaje SQL",
          "Introducción al lenguaje SQL",
          "Flexibilidad del lenguaje SQL",
          "CREATE TABLE",
          "Cuestionario",
          "ALTER TABLE",
          "Ejercicio",
          "INSERT INTO",
          "PRIMARY KEY",
          "Repaso SELECT",
          "DISTINCT",
          "ORDER BY",
          "Practica ORDER BY",
          "Solución ORDER BY",
          "LIMIT",
          "COUNT",
          "Ejercicio COUNT",
          "Solución ejercicio COUNT",
          "Repaso SELECT + WHERE",
          "Comparaciones 1",
          "Comparaciones 2",
          "Comparaciones 3",
          "BETWEEN",
          "IN",
          "Operadores lógicos",
          "IS NULL y NOT",
          "DELETE",
          "UPDATE",
          "JOIN y ALIAS",
          "JOIN y ALIAS 2",
          "Ejercicio JOIN ALIAS",
          "Introducción UNION",
          "UNION y UNION ALL",
          "EXCEPT",
          "Ejercicio EXCEPT",
          "SUM y CAST",
          "MIN y MAX",
          "LOWER y UPPER",
          "SUBSTR",
          "Concatenación de cadenas",
          "Reto GROUP BY",
          "Solución reto GROUP BY",
          "Reto consultas anidadas y vistas",
          "DATETIME",
          "DATETIME Formatos fraccionarios",
          "DATETIME Modificadores"
        ],
        "SQLite + Python": [
          "Python + SQLite parte 1",
          "Python + SQLite parte 2",
          "Python + SQLite parte 3"
        ]
      },
      "requirements": [
        "Ganas de aprender"
      ],
      "description": "Descripción curso Python + arduino\nDurante este curso, aprenderás desde lo más básico de la programación con Arduino, comenzando con conocer la placa, sus características, su funcionamiento, tipos de datos, estructuras y forma de programación. Además, comenzaremos con un pequeño curso de electrónica básica donde aprenderás todo lo necesario para trabajar con esta plataforma, eso no es todo, pasaremos por el tema de sensores resistivos donde aprenderemos sobre lectura analógica, habilitar las entradas y salidas digitales y realizaremos diversos ejercicios y ejemplos de gran valor para ti. Posteriormente aprenderemos el funcionamiento de los motores de corriente directa, donde estudiaremos como controlar la velocidad y sentido de giro de un motor DC, además de aprender a controlar un servomotor para su ajuste de posición. Mas adelante en el tema de Arduino + Python aprenderemos a comunicar un Arduino mediante el puerto serie para hacer uso de sus entradas y salidas, también aprenderemos sobre la comunicación mediante ethernet donde realizaremos prácticas de un alto nivel para que pongas a prueba tus conocimientos adquiridos. No conformes agregamos un completo curso de bases de datos y su implementación con Python, una vez cursados todos estos temas entraremos a la realización de los proyectos finales, en donde realizaremos una consola domótica para controlar múltiples Arduino, un sistema de reconocimiento facial que funcionará como una cerradura electrónica.\n\n\nComo bonus te dejamos también un completo curso de interfaces gráficas para que todos tus proyectos de Arduino + Python se vean muchísimo más profesionales.\n\n\n¿Qué es una interfaz gráfica de usuario?\nLa interfaz gráfica de usuario, conocida también como GUI, es un programa informático que actúa de interfaz de usuario, utilizando un conjunto de imágenes y objetos gráficos para representar la información y acciones disponibles en la interfaz\n\n\nEl estudiante aprenderá:\n· Programación en Python\n· Utilizar Pycharm\n· Variables y constantes\n· Condiciones\n· Tipos de datos\n· Ciclos\n· Funciones\n· Programación Orientada a Objetos\n· Practicarás sobre la gestión de diseños.\n· Dominaras los Widget para crear aplicaciones en PyQt\n· Hacer menús, barras de herramientas, etc.\n· Utilizar el framework de Firebase para crear un login GUI en tiempo real con Python y PyQt\n· Crear un menú desplegable utilizando animaciones\n· Manejo de Hilos\n· Manejo de eventos\n· Clases para dibujar en PyQt\n· Animaciones de widgets para tus proyectos\n· A integrar tus gráficas en GUIs utilizando PyQt5\n\n\nTodo esto de una manera muy sencilla y práctica, ya que todos los videos del curso están nivelados uno con otro, con ejercicios que se realizaran para entender de una mejor manera lo que se puede hacer con cada uno de los distintos métodos que nos proporcionan estos módulos. Durante el curso se utiliza Pycharm y Spider, los cuales también se enseñará a instalarlos y como obtener una licencia gratuita para estudiantes y docentes en el caso de Pycharm.\n\n\n¡Nos vemos en el curso!",
      "target_audience": [
        "Desarrolladores principiantes en Arduino",
        "Desarrolladores de Arduino que deseen aplicar Python a sus proyectos",
        "Desarrolladores Python que deseen agregar Arduino a sus proyectos",
        "Personas en general con deseos de aprender a programar en Arduino y Python"
      ]
    },
    {
      "title": "Visual Studio ile C# Programlama",
      "url": "https://www.udemy.com/course/visual-studio-ile-temel-ve-ileri-seviye-cnet-ogrenin/",
      "bio": "Bir yazılım uzmanı yardımıyla, kodları uygulamalara dönüştürün. Visual Studio ve C# ile programlamayı öğrenin.",
      "objectives": [
        "Bu kursta, C# .Net 'i öğreneceksiniz.",
        "Bu kursu tamamladığınızda, temel ve ileri seviye C# .Net bilgisine sahip olacaksınız.",
        "Bu kursu tamamladığınızda, C# .Net ile kolayca uygulama geliştirebileceksiniz.",
        "Bu kursu tamamladığınızda, C#.Net ile veritabanı kullanan uygulamalar geliştirebileceksiniz.",
        "Bu kursu tamamladığınızda, .NET Framework 4.0 ve 4.5 özelliklerini C# .Net ile kullanarak uygulamalar geliştirebileceksiniz.",
        "Bu kursta, Konsol uygulaması geliştirmeyi öğreneceksiniz.",
        "Bu kursta, Windows uygulaması geliştirmeyi öğreneceksiniz.",
        "Bu kursta, Veritabanı bağlantısı yapmayı ve veritabanı işlemlerini gerçekleştirmeyi öğreneceksiniz.",
        "Varolan projeleriniz ve veri tabanındaki kodları kolayca okuyup yorumlaya bileceksiniz.",
        "Karşılaşılan sorunlara algoritma mantığını oluşturarak kurumsal çözüm ürete bileceksiniz.",
        "Bu kursta, XML dosyaları ile çalışmayı öğreneceksiniz."
      ],
      "course_content": {
        "C# ve .NET'e Giriş": [
          "Giriş",
          "CLR : Common Language Runtime Nedir?",
          "IL : Intermediate Language Nedir?",
          "JIT : Just In Time Nedir?",
          "Visual Studio 2017 Community Kurulum ve Detayları",
          "Visual Studio 2017 Extensions & Updates"
        ],
        "Temel konular": [
          "Temel Bilgiler : Visual Studio Tanıma",
          "Temel Bilgiler : Console Application Nedir?",
          "Temel Bilgiler : Nasıl Kod Yazacağım?",
          "Temel Bilgiler : Değişkenler",
          "Koşul İfadeleri : If-Else",
          "Operatörler : && , | | , == , ++ , ?: , += , -=",
          "Koşul İfadeleri : Switch",
          "Tür Dönüşümü : Bilinçli - Bilinçsiz",
          "Tür Dönüşümü : Boxing ve Unboxing",
          "Tür Dönüşümü : Convert Sınıfı ile Tür Dönüşümü",
          "Döngüler : For",
          "Döngüler : Foreach",
          "Döngüler : While - Do While",
          "Break - Continue - GoTo İfadeleri",
          "Metot : Nedir? Oluşturma Yöntemi",
          "Metot : Değişken Sayıda Parametre Alan Metotlar",
          "Metot : Opsiyonel ve İsimlendirilmiş Parametreler",
          "Metot : Parametreler ve Struct Parametresi",
          "Örnek Uygulama - 4 İşlem"
        ],
        "Nesne Yönelimli Programlama - Object Oriented Programming(OOP)": [
          "Class - Sınıf Nedir? Üyeleri",
          "Properties ve Automatic Property",
          "Üye Erişim Belirleyicileri",
          "This Anahtar Sözcüğü",
          "#region ve #endregion",
          "Nesne Oluşturucu",
          "Varsayılan Nesne Oluşturucu",
          "Nesne Oluşturucu Kopyaları",
          "Static Üyeler",
          "Enumeration - Numaralandırıcılar Nedir?",
          "Encapsulation - Kapsülleme",
          "Inheritance - Miras Alma",
          "Overloading - Aşırı Yükleme",
          "Virtual - Sanal Metotlar",
          "Abstract - Soyut Sınıflar",
          "Sealed - Kapalı Sınıflar",
          "Interfaces - Arayüzler",
          "Polymorphism - Çok Biçimlilik",
          "Partial - Kısmi Sınıflar"
        ],
        "WinForm Tabanlı Uygulamalar": [
          "Windows Form Application Projesi Oluşturmak",
          "Temel ve Sık Kullanılan Kontroller",
          "Menüler",
          "Timer Kontrolü",
          "Başka Formlar ile Çalışmak",
          "Dialog Pencereleri",
          "DataTable ve DataGrid Kontrolü",
          "Örnek Uygulama"
        ],
        "Collections - Kolleksiyonlar": [
          "Diziler : Tek Boyutlu ve Çok Boyutlu",
          "Diziler : Array Sınıfı ve CreateInstance Metodu ile Tanımlama",
          "Diziler : Array Sınıfı ve Kopyalama - Sıralama - Arama",
          "Kolleksiyonlar : ArrayList",
          "Kolleksiyonlar : HashTable",
          "Kolleksiyonlar : SortedList"
        ],
        "Temel I/O ve String İşlemleri": [
          "Dosya ve Klasör Oluşturma",
          "Dosya işlemleri",
          "Klasör İşlemleri"
        ],
        "İstisnai Durum Yakalama Mekanizması": [
          "Throw Anahtar Sözcüğü",
          "Catch ve Birden Fazla Catch Kullanımı"
        ],
        "Events - Olaylar": [
          "Temsilciler",
          "Olaylar ve Nesneler Arası Mesajlaşma",
          "Add ve Remove Erişimcileri"
        ],
        "Generics - Şablon Tipler": [
          "List<T> Kolleksiyonu",
          "Dictionary<K,V> Kolleksiyonu",
          "KeyValuePair<K,V> Kullanımı"
        ],
        "ADO.NET ile Veritabanı İşlemleri": [
          "Access DB Oluşturma",
          "Access DB : Bağlanma ve Sorgu Çalıştırma",
          "Access DB : Select, Insert, Update, Delete",
          "SQL Server Exp. DB Oluşturma",
          "SQL Server Exp. DB Bağlanma ve Sorgu Çalıştırma",
          "SQL Server Exp. DB : Select, Insert, Update, Delete"
        ]
      },
      "requirements": [
        ".NET Framework 4.0",
        "Microsoft Office Access 2013",
        "Microsoft SQL Express 2012-2017",
        "Visual Studio 2013-2017 Community(ücretsiz)"
      ],
      "description": ".NET platformu, yazılım geliştirme alanında öne çıkan, güçlü ve çok yönlü bir teknoloji ekosistemidir. Bu ekosistemin kalbinde yer alan C#, özelleştirilmiş bir programlama dili olarak, yazılım dünyasında kendine sağlam bir yer edinmiştir. Yüksek performanslı, güvenli ve modern uygulamaların geliştirilmesinde tercih edilen C#, geliştiriciler arasında yüksek popülariteye sahiptir.\n\n\nBu kurs, .NET ekosisteminin resmi dili olan C# ile sizi ayrıntılı bir şekilde tanıştırır. C#, görsel programlama araçları ve etkili yazılım geliştirme teknikleri ile donatılmıştır, böylece dilin güçlü yönlerini ve zengin özelliklerini Visual Studio IDE (Yazılım Geliştirme Editörü) aracılığıyla keşfedeceksiniz.\n\n\nKurs, C# öğrenim sürecinizi temel seviyeden ileri seviyeye doğru kademeli olarak ilerletecek şekilde tasarlanmıştır. Konular, öğrenme sürecinizde size rehberlik edecek şekilde mantıklı ve anlaşılır bir sıralama ile düzenlenmiştir. Her bölüm, önceki bilgileriniz üzerine kurularak, konseptleri derinlemesine anlamanızı sağlayacak şekilde planlanmıştır.\n\n\nC# eğitimi ile, yazılım ve programlama dünyasının gelecekteki teknolojilerinde uzmanlaşma fırsatı yakalayacaksınız. Yazılım, sosyal hayatımızda giderek daha belirgin bir rol oynamaya devam edecek ve bu kurs, kendi projelerinizi hayata geçirmek veya çalıştığınız kurumun projelerini geliştirmek isteyen herkes için mükemmel bir başlangıç noktası sunuyor.\n\n\nKurs kapsamında kullanılacak materyaller arasında Visual Studio Community (ücretsiz) veya ücretli sürümleri, Microsoft Office Access ve Microsoft SQL Server Express with Tools (ücretsiz) veya üst sürümleri yer alır. Bu araçlar, öğrenim süreciniz boyunca size güçlü bir destek sağlayacak ve projelerinizi profesyonel bir düzeyde geliştirmenize olanak tanıyacaktır.\n\n\nKendi yazılım yolculuğunuzu başlatmak ve .NET platformunda C# ile uygulama geliştirme konusunda ustalaşmak için bu kursa katılın. Geleceğin yazılım geliştiricileri olarak, bu eğitim sizlere sadece teknik beceriler kazandırmayacak, aynı zamanda sektörde aranan bir uzman olmanın kapılarını aralayacak.",
      "target_audience": [
        "Bu kurs visual studio ile C#.Net yazılım dilini öğrenmek isteyen herkes içindir."
      ]
    },
    {
      "title": "Devenez développeur Java",
      "url": "https://www.udemy.com/course/cours-complet-de-programmation-java-pour-debutants/",
      "bio": "Apprendre le langage Java facilement, 45 exercices corrigés inclus",
      "objectives": [
        "Réalisez une application Java étape par étape au long du cours !",
        "Maitrisez les fondements de la programmation orientée objet à partir de Java 8",
        "Installez et utilisez la machine virtuelle Java",
        "Exploitez les fondamentaux du langage tels que les opérateurs, les variables ou les structures de contrôle",
        "Mettez en oeuvre les concepts propres à l'objet tels que l'héritage, l'interfaçage ou le polymorphisme",
        "Utilisez des concepts des versions les plus récentes comme les structures itératives foreach, les ellipses, l'auto-boxing/unboxing ou encore les types énumérés",
        "Constituez des ensemble sous forme de tableaux ou de collections de différentes natures",
        "Gérez les cas alternatifs de traitement ainsi que les erreurs d'exécution",
        "Travaillez avec un environnement de développement",
        "En bonus... Devenez incollable en astrophysique ;-)"
      ],
      "course_content": {
        "A la rencontre de Java...": [
          "Est-ce bien le cours que vous recherchez ?",
          "Quel cursus Java pour les professionnels ?",
          "Guide de survie",
          "Java, qu'est ce que c'est ?",
          "Premier programme : Hello World!",
          "Java, comment ça marche ?",
          "Quel environnement de développement choisir ?",
          "Quelle version de Java choisir ?",
          "Validez vos connaissances théoriques"
        ],
        "Travailler avec Java pour de vrai !": [
          "Ne restez pas seul : Accès au serveur discord",
          "Installer Java 11 Open JDK",
          "Installer et utiliser IntelliJ Community",
          "Hello Universe",
          "Correction avec IntelliJ Community et Open JDK 11",
          "Correction avec Oracle Netbeans 8.2 et Oracle JDK 8",
          "Compilation, bytecode et portabilité",
          "Validez vos connaissances théoriques"
        ],
        "Les variables": [
          "La notion de variable",
          "La déclaration des variables : Les types primitifs",
          "Affecter une valeur",
          "Le cas de Pluton - Première variable",
          "Correction de l'exercice : Le nombre de planètes",
          "Le mot clé var",
          "Résoudre les erreurs de codage : La pile d'exécution",
          "Les chaines de caractère, prémière approche",
          "Le cas de Pluton Version 2 - Première variable de type String",
          "Correction de l'exercice : Le cas de Pluton Version 2, version 2",
          "Validez vos connaissances théoriques"
        ],
        "Les opérateurs": [
          "Les opérateurs arithmétiques",
          "Les opérateurs arithmétiques",
          "Bureau de change",
          "Bureau de change: Suggestion de correction",
          "Les opérateurs relationnels",
          "Les opérateurs relationnels",
          "Les opérateurs logiques",
          "Les opérateurs logiques",
          "Les opérateurs d'incrémentation / décrémentation",
          "Les opérateurs d'incrémentation / décrémentation",
          "Le cas de pluton Version 3 - Incrémenter le nombre de planètes",
          "Correction de l'exercice : Le cas de pluton Version 3",
          "L'opérateur de concaténation",
          "Le cas de Pluton Version 4 - Opérateur de concaténation",
          "Correction de l'exercice : Le cas de Pluton Version 4",
          "Introduction au formattage de chaîne",
          "Validez vos connaissances théoriques"
        ],
        "Les structures de contrôle": [
          "Le bloc d'instruction",
          "La structure conditionnelle : if",
          "Affichage conditionnel - Première instruction conditionnelle",
          "Correction de l'exercice : Affichage conditionnelle",
          "Résoudre les erreurs de codage : Le déboggeur",
          "La structure conditionnelle : if - else",
          "L'opérateur ternaire",
          "Utiliser if et else",
          "Correction de l'exercice : Utiliser if et else",
          "else if et l'imbrication de blocs d'instructions",
          "Utiliser if, else if et else",
          "Correction de l'exercice : Utiliser if, else if et else",
          "La structure conditionnelle : switch - case",
          "Utiliser switch, case et default",
          "Correction de l'exercice : Utiliser switch, case et default",
          "La structure itérative : for",
          "La structure itérative avec le mot clé for",
          "Correction de l'exercice : La structure itérative avec le mot clé for",
          "La structure itérative : while",
          "La structure itérative avec le mot clé while",
          "Correction de l'exercice : Utiliser la structure itérative while",
          "Les mots clé break et continue dans les structures itératives",
          "Validez vos connaissances théoriques"
        ],
        "La classe et l'objet": [
          "Qu'est ce qu'un langage orienté \"Objet\"",
          "La classe",
          "Galilée où la réalité des planètes - Définir le concept de planète",
          "Correction de l'exercice : Galilée ou la réalité des planètes",
          "Les propriétés / attributs ou variables d'instance",
          "Galilée ou la réalité des planètes Version 2 - Les attributs / propriétés",
          "Correction de l'exercice : Galilée ou la réalité des planètes Version 2",
          "L'objet ou l'instance",
          "Modifier les attributs d'un objet",
          "Galilée ou la réalité des planètes Version 3 - Premiers Objets",
          "Correction de l'exercice : Galilée ou la réalité des planètes Version 3",
          "Le mot clé \"null\"",
          "La planète X - le mot clé null",
          "Correction de l'exercice : La planète X",
          "Les méthodes",
          "Rotation des planètes - déclarer et invoquer une méthode",
          "Correction de l'exercice : Rotation des planètes",
          "Arguments et valeur de retour d'une méthode",
          "Indiquer l'angle de rotation - ajouter des arguments et obtenir une valeur de retour",
          "Correction de l'exercice : Indiquer l'angle de rotation",
          "Egalité ou équivalence : equals et les chaines de caractères",
          "Surcharge de méthode",
          "Accueillir des engins spatiaux - Surcharge de méthode",
          "Correction de l'exercice : Accueillir des engins spatiaux",
          "Le mot clé this",
          "Des propriétés sous forme d'objet",
          "Atmosphère de la planète - Utiliser des propriétés sous forme d'objet",
          "Correction de l'exercice : Atmosphère de la planète",
          "Des méthodes qui référencent des objets",
          "La classe Vaisseau - Une méthode qui référence des objets",
          "Correction de l'exercice : La classe Vaisseau",
          "Les propriétés / attributs statiques ou variables de classe",
          "La forme des planètes - Une propriété statique",
          "Correction de l'exercice : La forme des planètes",
          "Les méthodes statiques",
          "Expansion de l'univers - Une méthode statique",
          "Correction de l'exercice : Expansion de l'univers",
          "Constructeur sans paramètre et constructeur par défaut",
          "Dénombrer les planètes découvertes - Modifier le constructeur sans paramètre",
          "Correction de l'exercice : Dénombrer les planètes découvertes",
          "Ajouter d'autres constructeurs",
          "Washington Multiplicity Catalog, le nom des planètes - Ajouter un constructeur",
          "Correction de l'exercice : Washington Multiplicity Catalog, le nom des planètes",
          "Validez vos connaissances théoriques"
        ],
        "L'héritage et les interfaces": [
          "L'héritage : le mot clé extends",
          "Nomenclature des vaisseaux - L'héritage",
          "Correction de l'exercice : Nomenclature des Vaisseaux",
          "Le transtypage (cast)",
          "Héritage et constructeurs, le mot clé super",
          "Covariance des méthodes",
          "L'interface : le mot clé implements",
          "La conquête des planètes - Les interfaces",
          "Correction de l'exercice : La conquête des planètes",
          "Le mot clé instanceof",
          "Accostage des Vaisseaux de Guerre - Le mot clé instanceof",
          "Correction de l'exercice : Accostage des Vaisseaux de Guerre",
          "Le polymorphisme (de sous-typage)",
          "La défense ou l'attaque - Le polymorphisme",
          "Correction de l'exercice : La défense ou l'attaque",
          "Méthodes et classes abstraites",
          "Planète non typées et cargaison des Vaisseaux - Classes et méthodes abstraites",
          "Correction de l'exercice : Planète non typée et cargaison des Vaisseaux",
          "Validez vos connaissances théoriques"
        ],
        "Classes et techniques utilitaires": [
          "La classe System",
          "La classe Scanner",
          "Prenez les commandes ! - La classe Scanner",
          "Correction de l'exercice : Prenez les commandes !",
          "Les classes conteneur ou wrapper (Integer, Boolean, etc...)",
          "Atmosphère aux constituants inconnus - Les types conteneurs",
          "Correction de l'exercice : Atmosphère aux constituants inconnus",
          "L'auto-boxing et auto-unboxing",
          "Les conversions de type",
          "Les types énumérés",
          "Le type de vaisseau - Un type énuméré",
          "Correction de l'exercice : Le type de vaisseau",
          "Validez vos connaissances théoriques"
        ],
        "Les structures de données": [
          "Le tableau unidimentionnel",
          "Evolution des baies d'accostage - Le tableau unidimentionnel",
          "Correction de l'exercice : Evolution des baies d'accostage",
          "Les ellipses ou varargs",
          "Accueillir plusieurs vaisseaux à la fois - Une ellipse",
          "Correction de l'exercice : Accueillir plusieurs vaisseaux à la fois",
          "La méthode main - point d'entrée d'un programme",
          "Le tableau multidimentionnel",
          "Séparer les catégories de vaisseaux dans la baie - Un tableau multidimensionnel",
          "Correction de l'exercice : Séparer les catégories de vaisseaux dans la baie",
          "Introduction sur la notion de collections",
          "List",
          "Les galaxies - Première collection",
          "Correction de l'exercice : Les galaxies",
          "Set",
          "foreach : Itérer sur une Collection",
          "Les galaxies Version 2 - Première collection de type Set",
          "Correction de l'exercice : Les galaxies Version 2",
          "Map",
          "Extension de la liste des composants de l'Atmosphère - Première collection de type Map",
          "Correction de l'exercice : Extension de la liste des composants de l'Atmosphère",
          "Collection et Collections",
          "Comparable : Trier les collection par l'ordre naturel de ses éléments",
          "Collections ordonnées de type SortedSet et SortedMap",
          "Ordonner la planètes par leur distance avec le soleil - TreeSet et Comparable",
          "Correction de l'exercice : Ordonner la planètes par leur distance avec le soleil",
          "L'équivalence d'objets : equals() et hashCode()",
          "Validez vos connaissances théoriques"
        ],
        "Organiser et gérer l'accès aux classes": [
          "La notion de package et d'import",
          "Hiérarchiser les classes : package et import",
          "Correction de l'exercice : Hiérarchiser les classes",
          "L'import statique",
          "Un accès direct aux type de vaisseaux : L'import statique",
          "Correction de l'exercice : Un accès direct aux type de vaisseaux",
          "Visibilité ou modificateur d'accès",
          "Restreindre l'accès à certaines propriétés : private et protected",
          "Correction de l'exercice : Restreindre l'accès à certaines propriétés",
          "L'encapsulation des propriétés : 1ère approche des composants réutilisables",
          "Ajout de commentaires et Javadoc",
          "Le mot clé final",
          "Les lois immuables - Le mot clé final",
          "Correction de l'exercice : Les lois immuables",
          "Validez vos connaissances théoriques"
        ]
      },
      "requirements": [
        "Ce cours est accessible à tous !",
        "Pour plus de pratique : ordinateur sous Windows, Linux ou MacOS et les droits pour installer / exécuter de nouveaux logiciels"
      ],
      "description": "Vous voulez devenir DÉVELOPPEUR JAVA et vous ne savez pas PAR QUOI COMMENCER ?\nVous êtes au bon endroit !\n\n\nApprenez à programmer avec Java avec ce cours de référence :\nSimple, rapide, ludique et pratique avec de nombreux exercices auto-corrigés\nCouvre l'ensemble des concepts indispensable pour réaliser votre première application Java\nPrésenté par un professionnel et enseignant de près de 20 ans d'expérience\n\n\nVous serez guidé pas à pas sur le chemin de la réussite grâce à une progression pédagogique efficace.\nChaque chapitre traite d'un et un seul concept : un cours clair et précis\nChaque concept fait le plus souvent l'objet d'un atelier dédié : mettez vos nouvelles connaissances en pratique immédiatement !\nInclut des tonnes de contenus additionnels !\nAnimations\nVidéos YouTube\nDocuments et pages web complémentaires...\nFondé sur Java 8, il fait cependant l'économie des concepts complexes introduits dans cette version et non indispensable pour les débutants, comme la programmation fonctionnelle par exemple. L'intégralité du cours est compatible avec les versions ultérieures de Java, incluant Java 11 et 17.\nSuivez les 45 ateliers de l'application \"fil rouge\" sur le thème de l'espace et de la conquête spatiale.\nLe cours s'inscrit dans un cursus complet de formation pour développeurs Java :\nDevenez développeur Java (ce cours)\nTravaux pratiques Java\nLibrairies Java et Intro Maven\nJava EE : Devenez développeur d'applications Web Java\nBien démarrer avec Spring et Spring Boot",
      "target_audience": [
        "Etudiants",
        "Professionnels",
        "Amateurs"
      ]
    },
    {
      "title": "Web API とスクレイピングを学びながらGoogle Apps Script でつくるLINE BOT",
      "url": "https://www.udemy.com/course/web-api-scraping-gas-linebot-tsfcm/",
      "bio": "APIとスクレイピングとLINEbot を短時間でサクッと基礎から学習｜非エンジニアでもコピペだけで動くので安心｜プログラミング等の知識ゼロでもOK｜スプレッドシートをデータベースにするので無料で作成｜面倒な環境構築など不要｜丁寧な解説付き",
      "objectives": [
        "LINE BOTの基本的な機能と開発方法",
        "Google Apps Script(GAS)",
        "JavaScript",
        "スクレイピング",
        "Web API",
        "外部サービスとの連携",
        "リッチメニューで文字を打たずにボタン操作",
        "LINEでユーザー情報を取得"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "Part.1 Messaging API と Google Apps Script の解説": [
          "Part.1-1 LINE Developers のページでプロバイダーとチャネルを作ろう",
          "Part.1-1.5 エディタの解説（新しい Apps Script エディタについて）",
          "Part.1-2 Google Apps Script で Webhook URL を発行しよう",
          "Part.1-3 デプロイ後のURLをチャネルのWebhook設定に貼り付けて、検証を成功させよう"
        ],
        "Part.2 ユーザー情報取得": [
          "Part.2-1 Push messages",
          "Part.2-2 Reply Messages",
          "Part.2-3 コード解説"
        ],
        "Part.3 リッチメニュー": [
          "Part.3-1 LINE Official Account Manager の解説",
          "Part.3-2 リッチメニューの作成",
          "Part.3-3 デモ"
        ],
        "Part.4 Web API": [
          "Part.4-1 駅すぱあとAPI のフリープラン（要申し込み）",
          "Part.4-2 デモ",
          "Part.4-3 コード解説"
        ],
        "Part.5 スクレイピング": [
          "Part.5-1 スクレイピングその① ノンプログラミング",
          "Part.5-2 スクレイピングその② プログラミング",
          "Part.5-3 スクレイピングその③ cheerioを使用"
        ],
        "Part.6 おまけ（カスタマイズ）": [
          "Part.6-1 トリガーで一日の終わりに全員退勤",
          "Part.6-2 VLOOKUP関数で登録ユーザーの名前を変更",
          "Part.6-3 ボーナスレクチャー",
          "Discordコミュニティつくりました！"
        ]
      },
      "requirements": [
        "LINEアカウント",
        "Google Chromeが開けるパソコン",
        "駅すぱあとWeb API の事前登録"
      ],
      "description": "Google Apps Script (GAS)というプログラミング言語を使って、お手元のLINEアプリだけで打刻ができる、「交通費精算付きのクラウド勤怠管理システム」を作るコースです。日本語で書くと難しく感じるかもしれませんが、とても簡単に手順通りコピペだけで作ることができるのでご安心ください。\nラインボットを作ったことが全く無い初心者から、おうむ返しくらいのボットを作ったことがある人、それからWeb API やスクレイピングの技術も動画の中で解説しながら扱っているので、そのようなWebの基礎的な技術を学んでみたい人にもおすすめです。\n全てコピペだけでのLINEのチャットボット機能を一通り学ぶことができるので、非エンジニアの最初の一歩にもなりますが、自分でコードを書くわけではないので、プログラミングを書けるエンジニアをめざす場合は、別途学習が必要です。（このコースの中で、扱っているプログラミングのコードの中身を解説はしています。）\nしかし、プログラミングを何も知らなくても動画で解説している通りにコピペすれば、たとえ中学生でも簡単に本格的なシステムを作ることができるので、是非ご受講していただけると嬉しいです。",
      "target_audience": [
        "チャットボットを作ってみたい人",
        "スクレイピングをしてみたい人",
        "Web API を使ってみたい人",
        "業務改善や自動化に挑戦してみたい人",
        "Google Apps Script を学んでみたい人",
        "LINE Bot 作ってみたけど、もっと機能を知りたい人"
      ]
    },
    {
      "title": "Programação Concorrente e Assíncrona com Python",
      "url": "https://www.udemy.com/course/programacao-concorrente-e-assincrona-com-python/",
      "bio": "Leve seus programas Python ao extremo com Threads, Multiprocessamento, AsyncIO e Cython",
      "objectives": [
        "Você irá compreender os conceitos de programação concorrente e assíncrona",
        "Você será capaz de compreender e usar threads em Python",
        "Você será capaz de compreender e usar multiprocessamento em Python",
        "Você será capaz de compreender e usar programação assíncrona em Python",
        "Você será capaz de compreender e usar Cython",
        "Você terá uma introdução ao framework FastAPI"
      ],
      "course_content": {
        "Apresentação": [
          "Sobre o curso",
          "Informações Importantes"
        ],
        "Introdução à Programação Concorrente e Assíncrona": [
          "O que vamos aprender nesta seção?",
          "Conceitos sobre concorrência e programação assíncrona",
          "Tipos de concorrência",
          "Concorrência em Python",
          "Global Interpreter Lock - GIL",
          "Exercício Prático: Performance Padrão Python",
          "Mão na massa geek!",
          "Recapitulando"
        ],
        "Threads em Python": [
          "O que vamos aprender nesta seção?",
          "Introdução às Threads",
          "Exercício Prático: Criando Threads Simples em Python",
          "Exercício Prático: Criando Threads Múltiplas em Python",
          "Entendendo o funcionamento das threads",
          "Sincronização de Threads",
          "Comunicação entre Threads usando Queues",
          "Exercício Prático: Segurança ao usar Threads - Parte 1",
          "Exercício Prático: Segurança ao usar Threads - Parte 2",
          "Exercício Prático: Performance Python Threads",
          "Recapitulando"
        ],
        "Multiprocessamento em Python": [
          "O que vamos aprender nesta seção?",
          "Introdução ao Multiprocessamento",
          "Processos vs Threads",
          "Exercício Prático: Conhecendo a API de Multiprocessamento do Python",
          "Exercício Prático: Trabalhando com Pools de Processos",
          "Exercício Prático: Comunicação entre processos",
          "Exercício Prático: Compartilhando estados entre processos",
          "Exercício Prático: Sincronização de processos",
          "Exercício Prático: Abstraindo Mecanismos de Concorrência",
          "Exercício Prático: Performance Python Multiprocessos",
          "Recapitulando"
        ],
        "Programação Assíncrona em Python": [
          "O que vamos aprender nesta seção?",
          "Introdução à programação Assíncrona",
          "Exercício Prático: Trabalhando com Assincronia em Thread Simples",
          "Exercício Prático: Eventos Multitarefas com Loop de Eventos e Corrotinas",
          "Exercício Prático: Compreendendo o Asyncio",
          "Exercício Prático: Executando Tarefas em Paralelo",
          "Exercício Prático: Bibliotecas Async IO",
          "Combinando Corrotinas com Threads e Processos",
          "Exercício Prático: Performance Python Assíncrono",
          "Recapitulando"
        ],
        "Python ao Extremo com Cython": [
          "O que vamos aprender nesta seção?",
          "Introdução ao Cython",
          "Comparando a sintaxe de Python vs Cython",
          "Exercício Prático: Seu primeiro programa com Cython",
          "Compreendendo os conceitos do Cython",
          "(Extra) Encontrando o gargalo do programa com Cprofile",
          "Exercício Prático: Seu programa Python ao extremo com Cython",
          "Recapitulando"
        ],
        "(Extra) Introdução à FastAPI: Um framework web assíncrono": [
          "O que vamos aprender nesta seção?",
          "Introdução ao FastAPI",
          "Conhecendo os recursos do FastAPI",
          "Exercício prático: Escrevendo sua primeira API com FastAPI",
          "Recapitulando"
        ],
        "Encerramento": [
          "Recapitulando todo o curso",
          "Quais os próximos passos?"
        ]
      },
      "requirements": [
        "Necessário ter feito o curso Programação para Leigos da Geek University ou ter conhecimentos equivalentes;",
        "Necessário ter feito o curso Algoritmos e Lógica de Programação da Geek University ou ter conhecimentos equivalentes;",
        "Necessário ter feito o curso Programação em Python da Geek University ou ter conhecimentos equivalentes",
        "Necessário um computador com sistema operacional atualizado nas últimas versões, ou o Windows, ou Linux (Ubuntu) ou o Mac",
        "Necessário ter conexão com a internet para baixar os softwares"
      ],
      "description": "Antigamente para melhorarmos a performance de programas bastava executá-los em hardwares mais novos e mais rápidos já que a Lei de Moore dizia que a cada 18 meses teríamos o dobro da capacidade de processamento.\nEsta lei não funciona mais, e agora as fabricantes estão adicionando mais núcleos (cores) aos processadores para aumentar o poder de processamento.\nPor padrão a linguagem Python executa seus programas em um único processador e em uma única thread.\nNeste curso você aprenderá, de forma simples, objetiva e prática, a fazer o uso correto de threads, multiprocessamento, programação assíncrona e levar seus programas Python ao extremo com Cython.\nDesta forma você poderá fazer com que seus programas sejam mais eficientes, responsivos e rápidos, pois eles serão executados em vários núcleos (cores) simultaneamente.\nEste é um curso definitivo sobre programação paralela em Python. Ele cobre os conceitos básicos altamente testados e comprovados, como threads e multiprocessamento, bem como os recursos assíncronos mais modernos baseados em Python 3.7+ com async e await.\nAlém dos conceitos básicos e APIs para programação simultânea, você aprenderá as práticas recomendadas e como escolher entre as várias APIs, bem como como usá-las juntas para obter a maior vantagem.\nVocê aprenderá:\n- Trabalhar com Threads em Python;\n- Trabalhar com Multiprocessamento em Python;\n- Trabalhar com Programação Assíncrona em Python;\n- Executar seus programas com velocidade extrema com Cython;\n- (Conteúdo adicional) Introdução ao FastAPI;\n- Aulas práticas;\n- E muito mais!",
      "target_audience": [
        "Programadores Python que desejam usar todo o poder de processamento em seus programas",
        "Profissionais da programação que desejam melhorar a performance de seus programas com os conceitos de programação concorrente e assíncrona",
        "Programadores de outras linguagens que desejam conhecer a abordagem de Python para a programação concorrente"
      ]
    },
    {
      "title": "Flutter & Dart: Sıfırdan Mobil App Geliştiriciliğine",
      "url": "https://www.udemy.com/course/flutter-dart-sifirdan-mobil-app-gelistiriciligine/",
      "bio": "3 Kullanıcı arayüzü ve 1 kapsamlı Sosyal Medya Uygulaması tamamlayarak etkili bir CV'ye sahip olacaksın.",
      "objectives": [
        "3 Kullanıcı arayüzü ve 1 kapsamlı Sosyal Medya Uygulaması tamamlayarak etkili bir CV'ye sahip olacaksınız.",
        "İş görüşmelerinde kendinize güvenerek Dart ve Flutter biliyorum diyebileceksiniz.",
        "Authentication, Firestore, Storage, Cloud Functions gibi servislerde ileri seviye deneyim kazanacaksınız.",
        "Programlama mantığını kavrayacağınız için başka bir programlama dilini öğrenmekte zorlanmayacaksınız."
      ],
      "course_content": {
        "Kemerleri Bağlayalım": [
          "Neden Buradasın",
          "Dartpad"
        ],
        "Dart : Değişkenler Ve Veri Tipleri": [
          "Dart : Değişken nedir?",
          "Kalıcı Öğrenme: Gerçekten Öğrendin Mi?",
          "Dart : Değişkenlerin İsimlendirilmesi",
          "Konu Dışı: En Az 1 Adım Kuralı",
          "Dart : Veri Tipleri",
          "Konu Dışı: Performans Takibi",
          "Dart : Değişkenlerin Metotları",
          "Dart : Değişkenlerde İşlemler",
          "Dart : Neler Öğrendik?",
          "Yardım mı lazım? Yalnız Değilsin"
        ],
        "Dart : Koleksiyonlar": [
          "Dart : Listeler",
          "Dart : Listedeki Elemanlara Ulaşmak",
          "Dart : Listelerin Metotları",
          "Dart : Listelerde Ekleme/Değiştirme/Silme",
          "Dart : Sözlükler",
          "Dart : Sözlüklerde Ekleme/Değiştirme/Silme",
          "Konu Dışı: Zihinsel Düşman"
        ],
        "Dart : Akış Kontrolleri": [
          "Dart : Akılsız Robotlar",
          "Dart : Şartlar Sağlanmıyorsa",
          "Dart : Aritmetik Ve Mantıksal Operatörler",
          "Dart : Tek Satırda Kontrol",
          "Konu Dışı: Sevdiğin İşi Yapmak"
        ],
        "Dart : Döngüler": [
          "Dart : Döngü nedir?",
          "Dart : for Döngüsü",
          "Konu Dışı: Çalışmaya Başlamak"
        ],
        "Dart : Fonksiyonlar": [
          "Dart : Görev Listeleri",
          "Dart : Fonksiyona Değer Göndermek",
          "Dart : return İle Değer Döndürmek",
          "Dart : Keyfi Parametre",
          "Dart : İsimli Parametre",
          "Dart : Şişman Oklu Fonksiyon",
          "Dart : Anonim Fonksiyonlar",
          "Dart : Senkron Ve Asenkron İşlemler",
          "Dart : Future Kavramı",
          "Dart : Future İle Çalışmak-async await",
          "Dart : Stream",
          "Konu Dışı: Mazeretler"
        ],
        "Dart : Üst Düzey Fonksiyonlar": [
          "Dart : foreach Metodu",
          "Dart : Filtreleme",
          "Dart : Mapping",
          "Konu Dışı: Deli Gibi Davran"
        ],
        "Dart : Nesne Tabanlı Programlama": [
          "Dart : Gerçekten Sanala",
          "Dart : Örneğin Nitelikleri",
          "Dart : Örneğin Niteliklerine Ulaşmak",
          "Dart : Örneğin Metotları",
          "Dart : Yapıcı",
          "Dart : this Kelimesi",
          "Dart : Yapıcı-Pratik Yöntem",
          "Dart : Ufak Bir Aydınlanma",
          "Dart : Kalıtım",
          "Dart : Overriding-Ağır Basan Metot",
          "Dart : İsimli Yapıcılar",
          "Dart : Factory Yapıcılar",
          "Dart : Başlatıcı Listeler",
          "Dart : Yönlendirici Yapıcılar",
          "Dart : Nitelikleşmiş Metot",
          "Slack: Takım Arkadaşlarına Merhaba De"
        ],
        "Flutter : Ortamı Hazırlayalım": [
          "Kurulum Bilgilendirme",
          "Flutter Sdk Kurulumu (Windows)",
          "Ortam Değişkenlerine Eklemek (Windows)",
          "Flutter Sdk Kurulumu (Mac)",
          "Path’e Eklemek (Mac)",
          "Android Studio Yükleme",
          "Emulator Oluşturmak",
          "Kod Editörü Yükleyelim - VS Code",
          "Flutter Uygulaması Oluşturalım",
          "Uygulamayı Çalıştırmak",
          "Hızlandırılmış Deneyim"
        ],
        "Flutter Dünyasına Giriyoruz": [
          "Her Şey Nesne Demiştik",
          "Burada Her Şey Widget",
          "İlk Widgetlarımız",
          "Kendi Widgetımızı Oluşturalım",
          "Stateless Widget(Sabit widget)",
          "MaterialApp ve Scaffold-İnşaatın Temelleri",
          "Stateless Widget Örneği",
          "Bir Durum Varsa Bilelim",
          "Stateful Widgeta Genel Bakış",
          "Her Sayfa Bir Widget",
          "Stateful Widget Örneği",
          "Widgettan Elemana",
          "Soyut Sınıf",
          "Stateful Widgetın Vahşi Yaşamı",
          "State Başlatıcı",
          "Dispose Metodu",
          "Widget Ağacı",
          "BuildContext nedir?",
          "ShowSnackBar Örneği",
          "Neden Çalışmadı?",
          "Ayrı Widget Ayrı Build",
          "Builder Widgetı ile Portatif Build",
          "Widgeta Anahtar Yaptırmak",
          "Konu Dışı: Çok İyi Gidiyorsun"
        ]
      },
      "requirements": [
        "Bilgisayar ve internet bağlantısına sahip olmak"
      ],
      "description": "Eğitim hayatımıza harfleri öğrenerek başladığımız gibi, programlamaya da en temelden başlayıp küçük adımlarla ve derinlemesine anlayarak ilerlicez.  Gerçek hayattan örneklerle konuların mantığını kavrayacaksınız. Her konudan sonra yapacağımız örneklerle öğrendiklerinizi kullanma becerisi kazanacak, arayüz tasarımları ve kapsamlı proje çalışmasıyla deneyimli bir Flutter programcısına dönüşeceksiniz. Ayrıca programcılar için olmazsa olmaz olan Firebase servisleri konusunda ciddi bir deneyim kazanacaksınız.",
      "target_audience": [
        "Herkes"
      ]
    },
    {
      "title": "Python avancé : aller plus loin",
      "url": "https://www.udemy.com/course/cours-python-avance/",
      "bio": "Apprenez des techniques de programmation avancées pour coder plus efficacement à l'aide de nombreux exercices pratiques.",
      "objectives": [
        "Comprendre le fonctionnement des objets Python en mémoire, afin de pouvoir optimiser son code",
        "Apprendre plusieurs fonctions qui vont vous permettre de réduire le nombre de lignes de code que vous aurez à écrire",
        "Utiliser l'introspection afin de pouvoir analyser votre code pour le déboguer et le comprendre en profondeur",
        "Bien documenter votre code grâce aux docstrings",
        "Vérifier des chaînes de caractère complexes grâce aux expressions régulières",
        "Installer et gérer les modules Python sur notre machine grâce à PIP",
        "Connaître les 10 erreurs du débutant et savoir comment les éviter et y remédier",
        "Optimiser son code et aller plus vite grâce à plusieurs astuces qui rendront vos scripts bien plus efficaces et lisibles",
        "Utiliser les sets pour faire des opérations complexes sur plusieurs listes",
        "Utiliser les args et kwargs pour rendre vos fonctions versatiles et personnalisables",
        "Créer vos propres objets itérables grâces aux itérateurs et aux générateurs"
      ],
      "course_content": {
        "Introduction": [
          "Rejoins la communauté Discord",
          "Lien d'invitation pour le serveur Discord",
          "Les sources de la formation"
        ],
        "Les objets muables et immuables": [
          "Une notion de base méconnue",
          "Les objets muables et immuables",
          "Pourquoi c'est important",
          "À vous de jouer !"
        ],
        "La fonction enumerate": [
          "La fonction enumerate : Définition et syntaxe",
          "Exemples avancés",
          "La fonction enumerate",
          "Convertir une phrase en camelCase"
        ],
        "Les fonctions anonymes": [
          "Les fonctions anonymes : Définition et syntaxe",
          "Les fonctions anonymes",
          "Exemple concrets",
          "Les fonctions lambda avec PySide",
          "Les fonctions lambda avec PySide - 02"
        ],
        "Les compréhensions de liste": [
          "Les compréhensions de liste : Définition et syntaxe",
          "Les compréhensions de liste - Quizz",
          "Les compréhensions de liste - Exemples",
          "Map et filter - l'ancienne façon de faire",
          "Compréhensions de listes"
        ],
        "Les itérateurs": [
          "Les itérateurs : Définition et syntaxe",
          "Les itérateurs - Quizz",
          "Recréer la fonction range avec un itérateur",
          "Les itérateurs - Quizz",
          "Mélanger une chaîne de caractère avec un itérateur"
        ],
        "Les générateurs": [
          "Les générateurs : Définition et syntaxe",
          "Les générateurs - Quizz",
          "Recréer la fonction range avec un générateur",
          "Mélanger une chaîne de caractère avec un générateur"
        ],
        "Les opérateurs ternaires": [
          "Les opérateurs ternaires : Définition et syntaxe",
          "Les opérateur ternaires - Quizz",
          "Avant Python 2.5",
          "Les opérateurs ternaires"
        ],
        "La fonction zip": [
          "La fonction zip : Définition et syntaxe",
          "La fonction zip - Quizz",
          "La fonction Zip"
        ],
        "L'introspection": [
          "La fonction help",
          "Le module sys",
          "La fonction dir et __doc__",
          "La fonction type",
          "La fonction id"
        ]
      },
      "requirements": [
        "Être capable de créer et exécuter des scripts Python.",
        "Savoir créer des variables, des boucles, des structures conditionnelles.",
        "Savoir utiliser les fonctions, comment leur envoyer des arguments, retourner des valeurs.",
        "Savoir utiliser les structures de données propres à Python (listes, tuples, dictionnaires...)."
      ],
      "description": "Si vous programmez déjà un peu en Python et que vous avez l'impression d'avoir fait le tour du langage mais qu'en même temps votre code vous semble complexe et peu optimisé, alors cette formation est faite pour vous.\n\nIl est possible de faire beaucoup avec des connaissances de base du langage, mais Python regorge de techniques avancées, parfois simples, parfois complexes, qui lorsque vous les connaissez, améliorent grandement la qualité de votre code.\nAu programme de cette formation :\nComprendre le fonctionnement des objets Python en mémoire, afin de pouvoir optimiser son code\nApprendre plusieurs fonctions qui vont vous permettre de réduire le nombre de lignes de code que vous aurez à écrire\nUtiliser l'introspection afin de pouvoir analyser votre code pour le déboguer et le comprendre en profondeur\nBien documenter votre code grâce aux docstrings\nVérifier des chaînes de caractère complexes grâce aux expressions régulières\nInstaller et gérer les modules Python sur notre machine grâce à PIP\nConnaître les 10 erreurs du débutant et savoir comment les éviter et y remédier\nOptimiser son code et aller plus vite grâce à plusieurs astuces qui rendront vos scripts bien plus efficaces et lisibles\nUtiliser les sets pour faire des opérations complexes sur plusieurs listes\nUtiliser les args et kwargs pour rendre vos fonctions versatiles et personnalisables\nCréer vos propres objets itérables grâces aux itérateurs et aux générateurs\nDans cette formation, je vous propose donc d'aller plus loin, de découvrir toutes ces petites astuces, ces fonctions avancées du langage et les erreurs à éviter, pour que votre code soit plus performant, plus solide et plus professionnel.",
      "target_audience": [
        "Les gens qui ont des bases de Python et qui veulent aller plus loin."
      ]
    },
    {
      "title": "GOLANG: Curso profesional de Go - De cero a Master 2025",
      "url": "https://www.udemy.com/course/curso-golang/",
      "bio": "Aprende a programar con lenguaje de Go, Desarrollo Web con Go, Manejo de HTML, CSS, API RESTful com MySQL y ORM con Go",
      "objectives": [
        "Conviértete en un programador profesional de Go",
        "Tipos de datosDominarás todos los conceptos clave de Go a partir de cero. No se requieren conocimientos previos de Go.",
        "Aprende a trabajar con variables, tipos de datos y operadores",
        "Aprende a trabajar con estructuras de control, if – else, switch, for, etc",
        "Domine todas las estructuras de datos de Go en profundidad: Array, Slicen, mapas.",
        "Aprende a trabajar con funciones a profundidad",
        "POO. Domina el uso de estructuras, interfaces, punteros, modelos.",
        "Comprende la Comcurrencia y Canales",
        "Aprende a Testing",
        "Aprende el desarrollo web con Go, Aprende a crear servidores, manejo de HTML, CSS.",
        "Aprende a crear API REST con MySQL, implementa ORM"
      ],
      "course_content": {
        "Introducción": [
          "Presentación del Curso",
          "Notas para Tomar el Curso",
          "Materiales extras para el Curso",
          "Soporte del Curso",
          "Para preguntas y respuestas",
          "Herramientas de Trabajo"
        ],
        "GO - Primeros pasos con Go": [
          "Introdución",
          "¿Qué es y por que usar Go?",
          "¿Qué necesitamos?",
          "Playground de Go",
          "Instalar y configurar Go",
          "Hola mundo con Go",
          "Paquetes de terceros",
          "Prueba de conocimiento",
          "Resumen"
        ],
        "GO - Usu de variables y datos": [
          "Introducción",
          "Declaración de variables",
          "Declaración de constantes",
          "Tipos de datos básicos",
          "Valores predeterminados",
          "Conversiones de tipos",
          "El paquete fmt",
          "Operadores aritméticos y Paquete Math",
          "Ejercicio",
          "Solución",
          "Prueba de conocimiento",
          "Resumen"
        ],
        "GO - Control de flujos": [
          "Introducción",
          "Operadores booleanos",
          "Declaración If - Else",
          "Declaración Switch",
          "Bucle For",
          "Uso de funciones",
          "Proyecto de la sección",
          "Prueba de conocimiento",
          "Resumen"
        ],
        "GO - Estructura de datos": [
          "Introducción",
          "Matrices",
          "Rebanadas",
          "Mapas",
          "Estructura",
          "Punteros y métodos",
          "Proyecto de la sección",
          "Prueba de conocimiento",
          "Resumen"
        ],
        "GO - Control de errores": [
          "Introducción",
          "Manejo de errores",
          "Uso de Defer",
          "Uso de panic y recover",
          "Registro de errores",
          "Proyecto de sección: Gestor de contactos",
          "Prueba de conocimientos",
          "Resumen"
        ],
        "GO - Crear un módulo - Proyecto": [
          "Introducción",
          "Iniciar un módulo que otros puedan utilizar",
          "Llamar a tu código desde otro módulo",
          "Devolver y manejar un error",
          "Devolver un saludo aleatorio",
          "Devolver saludos para varias personas",
          "Agregar una prueba",
          "Compilar e instalar la aplicación",
          "Desplegar a GitHub",
          "Resumen"
        ],
        "GO - POO e Interfaces": [
          "Introducción",
          "POO en Go",
          "Estructuras y métodos",
          "Encapsulamientos",
          "Composicion",
          "Polimorfismo",
          "Interfaces",
          "Prueba de conocimientos",
          "Resumen"
        ],
        "GO - Concurrencia en Go": [
          "Introducción",
          "Concurrencia en Go",
          "Uso de concurrencia",
          "Uso de canales",
          "Prueba de conocimientos",
          "Resumen"
        ],
        "GO - Funciones avanzadas": [
          "Introducción",
          "Funciones variádicas",
          "Funciones recursivas",
          "Funciones anónimas",
          "Funciones de orden superior",
          "Closures en Go",
          "Prueba de conocimientos",
          "Resumen"
        ]
      },
      "requirements": [
        "No hay prerequisitos para este curso. Todo lo que necesita es una computadora (Mac, Windows o Linux) y una conexión a Internet."
      ],
      "description": "Go es uno de los lenguajes mejor pagados según Stack Overflow\nGo, también conocido como Golang, de código abierto fue creado por Google con los desarrolladores Robert Griesemer, Rob Pike y Ken Thompson en 2009. A pesar de ser un lenguaje muy joven tiene un rendimiento similar a C pero con la sintaxis amigable parecida a Python.\n\n\nVentajas de Go\nVelocidad similar a C pero con una sintaxis amigable como Python.\nFacilita el uso de buenas prácticas en el código.\nMantiene su rendimiento con grandes volúmenes de información.\nEs uno de los lenguajes mejores pagados según la encuesta Stack Overlow\nSu curva de aprendizaje es suave en comparación con Java o C.\nEs un lenguaje multiparadigma.\nAhorras tiempo al codear. Por ejemplo, para crear ciclos solo existe la función for.\nPara manejar niveles de accesos de funciones es tan sencillo como colocar la primera letra en mayúscula o minúscula.\n\n\nConcurrencia\nUna de las principales funciones de Golang es que maneja las múltiples tareas de forma concurrente, es decir, que el procesador divide el trabajo en múltiples hilos y a cada uno le dedica un tiempo en milisegundos acelerando el tiempo de ejecución en cada tarea sin necesidad de realizar configuraciones adicionales ya que Golang lo traen en sus librerías preinstaladas.\nLa manera como Golang trabaja esto es a través de Goroutines y Canales. Puedes tener múltiples Goroutines por canal y transportar el Goroutine de un canal a otro. Un excelente uso de Goroutines es al momento de trabajar transferencia de datos en tiempo real desde un cliente a otro, como por ejemplo un chat o un sistema de ubicación en tiempo real.\n\n\n¿Por qué estudiar BackEnd en Go?\nGo con su sintaxis sencilla de entender facilita su aprendizaje y unas de sus ventajas principales es la implementación de concurrencia por defecto mediante goroutines que facilita el rendimiento de cálculos y múltiples tareas complejas con grandes cantidades de datos.\n\n\n¿Qué aprenderás en este curso?\nConocerás los fundamentos del Lenguaje\nConocerás que paradigmas soporta el lenguaje\nImplementaras la concurrencia y los canales\nAprenderás Testing con Go\nDesarrollo web con GO\nCrear API REST con base de datos MySQL\nImplementaras ORM",
      "target_audience": [
        "Cualquiera que quiera comprender las características fundamentales de Go"
      ]
    },
    {
      "title": "[2025] Java od Zera do Mastera - twórz własne apki - 87h",
      "url": "https://www.udemy.com/course/kurs-java-od-podstaw-od-zera-do-mastera-zbuduj-wlasne-aplikacje/",
      "bio": "Kurs Java od podstaw z JDBC, Hibernate, Spring Boot, aplikacjami FullStack, Maven etc",
      "objectives": [
        "Tworzenia aplikacji w Java od podstaw w kursie z 87h materiału video, poznasz czym jest środowisko programistyczne IDE, kompilator",
        "Instrukcje warunkowe, pętle, tablice, operatory, metody, rzutowanie",
        "Programowanie obiektowe: klasy w tym abstrakcyjne, interfejsy, konstruktory, polimorfizm, wyjątki",
        "Zapisywanie i odczyt danych/plików dzięki strumieniom wejścia i wyjścia, serializacja danych",
        "Obsługa sieci, pobieranie stron internetowych, danych z usług sieciowych w formacie JSON, stworzenie własnego prostego serwera",
        "Programowanie wielowątkowe, synchronizacja wątków",
        "Kolekcje, mapy",
        "Wyrażenia lambda, programowanie generyczne",
        "Tworzenie aplikacji okienkowych dzięki Swing, w tym użycie wielu kontrolek oraz zaawansowane przykłady jak wyświetlenie mapy Polski dzięki OpenStreetMap",
        "Pobranie danych cen akcji Tesli z sieci oraz ich wizualizacja na wykresie",
        "Podstawy Maven do zarządzania budową projektu oraz obsługą zewnętrznych bibliotek",
        "Wykorzystanie bazy MySql do przechowywania danych, od podstaw poznanie zapytań SQL dzięki JDBC",
        "Biblioteki Hibernate do zaawansowanego zapisu i odczytu powiązanych ze sobą danych w bazie",
        "Podstawy Spring Boot 2 do tworzenia aplikacji Java na serwerze"
      ],
      "course_content": {
        "Wstęp": [
          "Podstawy Java - historia",
          "Instalacja OpenJDK",
          "Instalacja Intellij IDEA Community",
          "Pierwszy program w Java",
          "Komentarze w Java",
          "Kilka rad o nauce programowania"
        ],
        "Typy proste i złożone": [
          "Zmienne: Typy poste",
          "Całkowite typy proste: byte, short, int, long",
          "Rzeczywiste typy proste: float i double",
          "Typy proste: boolean i char",
          "Jakie nazwy zmiennych stosować?",
          "Ćwiczenie: tworzenie i nazywanie zmiennych",
          "Typy proste i ich złożone odpowiedniki np. int - Integer",
          "Specjalny typ var",
          "Deklarowanie stałych - final",
          "Ćwiczenie - zysk z lokaty",
          "Łańcuchy znaków - String",
          "Ćwiczenie - pobieranie danych z konsoli - łańcuchy znaków",
          "Literały",
          "Tablice jednowymiarowe",
          "Tablice - ćwiczenie",
          "Tablice wielowymiarowe",
          "Typ wyliczeniowy enum"
        ],
        "BigInteger, BigDecimal - duże liczby, klasa Math, konwersje, rzutowanie": [
          "Klasa Math oraz przydatne funkcje: pierwiastek kwadratowy, potęga itd",
          "Duże liczby całkowite - BigInteger oraz rzeczywiste - BigDecimal",
          "Konwersje jawne, niejawne i rzutowanie liczb",
          "Ćwiczenie - kalkulator BMI",
          "Zaokrąglanie liczb - Math.ceil() floor() round()"
        ],
        "Operatory": [
          "Operatory przypisania i arytmetyczne",
          "Operatory inkrementacji i dekrementacji",
          "Operatory porównania",
          "Operatory - ćwiczenie",
          "Operatory porównania - ćwiczenie",
          "Operatory logiczne - koniunkcja (AND)",
          "Ćwiczenie - operatory logiczne - AND",
          "Operatory logiczne - alternatywa (OR)",
          "Ćwiczenie - operatory logiczne - OR",
          "Operatory złożone i operator konkatenacji"
        ],
        "Instrukcja if, switch, pętle": [
          "Bloki kodu",
          "Instrukcja warunkowa if, if else",
          "Ćwiczenie - if - liczba dodatnia ujemna czy zero",
          "Ćwiczenie - if - kwalifikacja do oddania krwi",
          "Ćwiczenie - if - warunki pogodowe",
          "Ćwiczenie - if - test kierowcy",
          "Operator trójargumentowy (ternary)",
          "Ćwiczenie - operator trojelementowy",
          "Switch",
          "Ćwiczenie - switch",
          "Pętla for",
          "Ćwiczenie - pętla for",
          "Pętla while",
          "Pętla do while",
          "Ćwiczenie - pętla while",
          "Instrukcja break",
          "Ćwiczenie - pętla do while",
          "Instrukcja continue",
          "Ćwiczenie - break",
          "Ćwiczenie - continue",
          "Nieskończone pętle",
          "Ćwiczenie - nieskończone pętle",
          "Pętla for each",
          "Ćwiczenie - pętla for each"
        ],
        "Program procent składany": [
          "Prosty skaner do odczytu danych z konsoli",
          "Procent składany"
        ],
        "Klasa String - praca z łańcuchami znaków": [
          "Klasa String - tworzenie łańcuchów",
          "Łączenie łańcuchów - konkatenacja",
          "Ćwiczenie - łączenie łańcuchów",
          "Niemutowalność łańcuchów",
          "Porównywanie łańcuchów znaków",
          "Metody toLowerCase toUpperCae CharAt length",
          "Puste łańcuchy znaków oraz wartość null",
          "Metody trim stripTrailing stripLeading",
          "Metoda substring - pobieranie fragmentów łańcuchów znaków",
          "Metdoy isEmpty isBlank",
          "Metoda startsWith endsWith",
          "Metoda replaceAll replaceFirst",
          "Metoda indexOf - wyszukiwanie łańcuchów w String",
          "Metoda lastIndexOf - wyszukiwania od końca łańcucha",
          "Metoda repeat, join i concat",
          "Ćwiczenie - metody w String",
          "Metody toCharArray toString split",
          "Klasa StringBuffer - praca z znacznymi łańcuchami znaków",
          "Ćwiczenie - StringBuilder",
          "Losowy żart Chucka"
        ],
        "Programowanie obiektowe": [
          "Wstęp: klasy, obiekty, metody",
          "Ćwiczenie - klasy Obiekty Metody",
          "Konstruktor",
          "Ćwiczenie - konstruktor",
          "Metody, argumenty, parametry, przekazanie danych przez wartość i referencję",
          "Ćwiczenie - metody",
          "Zwracanie wartości z metody - return",
          "Ćwiczenie - metody return zwracanie wartosci",
          "Przeciążanie metod",
          "Ćwiczenie - przeciążanie metod",
          "this, parametry jawne i niejawne",
          "final - stałe w klasie oraz argumenty",
          "Ćwiczenie - final stałe w klasie argumenty",
          "static - statyczne pola oraz metody klasy",
          "Ćwiczenie - static",
          "Wzorzec projektowy singleton - wykorzystanie obiektowości Javy",
          "Pakiety oraz instrukcja import",
          "Dziedziczenie",
          "Dziedziczenie - ćwiczenia - klasy dla sklepu komputerowego",
          "Klasy final - uniemożliwienie dziedziczenia",
          "Ćwiczenie - klasy final",
          "Brak jednoczesnego wielokrotnego dziedziczenia, obejście problemu",
          "Modyfikatory dostepu public private protected a dziedziczenie",
          "Modyfikatory dalsze ćwiczenie z private",
          "Modyfikator protected, ćwiczenie",
          "Ćwiczenie - modyfikatory",
          "Enkapsulacja - hermetyzacja, gettery i settery",
          "Brak modyfikatora, ćwiczenie",
          "Slowo kluczowe super dostep do właściwosci nadrzędnej klasy",
          "Operator instanceof",
          "Polimorfizm - wstęp",
          "Polimorfizm - rzutowanie, konwersja między typami klas",
          "Ćwiczenie - polimorfizm",
          "Klasy abstrakcyjne",
          "Ćwiczenie - klasy abstrakcyjne",
          "Interfejsy - wstęp",
          "Ćwiczenie - interfejsy",
          "Interfejsy - stale statyczne oraz domyślne metody, rozszerzanie interfejsów",
          "interfejsy - przykład wykorzystania interfejsu MaouseListener",
          "Klasa Object - przesłonięcie metody toString",
          "Exceptions - wyjątki w Java",
          "Wyjątki - zgłaszanie wyjątków oraz tworzenie własnych wyjątków",
          "Ćwiczenie - wyjątki",
          "Prywatne klasy wewnętrzne",
          "Publiczne statyczne klasy wewnętrzne"
        ],
        "Klasa Date, LocalDate, LocalTime, LocalDateTime": [
          "Klasa Date",
          "Ćwiczenie - klasa Date",
          "Formatowanie danych metodą printf",
          "Ćwiczenie - printf",
          "Ćwiczenie - timestamp i data z przyszłości",
          "Manipulowanie datą dzięki klasie Calendar",
          "Ćwiczenie - kalendarz",
          "Klasa LocalTime aktualny czas",
          "Klasa LocalDate aktualna data",
          "Klasa LocalDateTime aktualna data i czas",
          "Mierzenie czasu wykonywania programu",
          "Porównywanie dat",
          "Ćwiczenie - LocalDateTime porównywanie dat"
        ],
        "Kolekcje": [
          "Kolekcje wstęp i ArrayList",
          "Ćwiczenie ArrayList",
          "Kolekcje iteracja elementów: iterator i pętle",
          "Ćwiczenie - iteracja elementów",
          "Kolekcje przydatne metody",
          "Iterator oraz jego metody",
          "LinkedList",
          "LinkedList dodawanie usuwanie aktualizacja elementu w trakcie iteracji",
          "Ćwiczenie - LinkedList",
          "HashSet",
          "Ćwiczenie - HashSet",
          "TreeSet",
          "Ćwiczenie - TreeSet",
          "TreeSet a interfejs Comparator",
          "HashMap",
          "Ćwiczenie - HashMap",
          "PriorityQueue",
          "PriorityQueue - Comparator sortowanie rosnąco",
          "PriorityQueue - Comparator sortowanie malejąco",
          "PriorityQueue - Comparator sortowanie po długości łańcucha znaków",
          "PriorityQueue dla klasy Task - sortowanie po priorytecie - interfejs Comparable"
        ]
      },
      "requirements": [
        "Nie ma wymagań, wszystko od podstaw jest wyjaśnione w kursie, potrzebne są dobre chęci oraz komputer PC lub Mac, Linux",
        "Korzystamy z całkowicie darmowych narzędzi np środowiska IDE Intellij Community oraz darmowej Javy - AdoptOpenJDK"
      ],
      "description": "Oto dla Ciebie obszerny kurs Java od absolutnych podstaw do zagadnień zaawansowanych. Jeśli chcesz być programistą Javy to jest kurs dla Ciebie. Co więcej, ten ponad 87 godziny kurs porusza również wiele zaawansowanych tematów jak obsługa bazy danych, połączeń sieciowych czy tworzenie aplikacji serwerowych dzięki Spring Boot.\nNauczę Ciebie od podstaw programowania w Java nie tylko na slajdach, ćwiczeniach ale również na gotowych aplikacjach. Java jest obecnie jednym z najpopularniejszych języków programowania, aplikacje napisane w tym języku spotykamy wszędzie: na serwerach, komórkach czy zwykłych komputerach.\nPo kursie będziesz rozumieć takie zagadnienia jak:\nśrodowisko programistyczne IDE, kompilator, JDK, historię Javy etc.\nzmienne proste i złożone, tablice jedno i wielowymiarowe, rzutowanie typów\noperatory arytmetyczne, logiczne etc\ninstrukcje warunkowe if, else, switch, operator trójelementowy\npętle: for, while, do-while\nmetody, ich parametry, przeładowanie metod\nprogramowanie obiektowe: klasy, obiekty, konstruktory, interfejsy, wyjątki, polimorfizm\nprogramowanie generyczne\nwyrażenia lambda\nwątki oraz ich synchronizacja\ntworzenie aplikacji okienkowych\nkolekcje danych np. HashMap, HashSet, TreeSet, LinkedList, ArrayList, PriorityQueue itd.\nbudowanie i zarządzanie projektem dzięki Maven\nwykorzystanie w prosty sposób zewnętrznych bibliotek np do rysowania wykresów, odczytu danych w formacie JSON, XML\nPodstawy obsługi baz danych, wykonywania zapytań SQL do bazy MySQL dzięki JDBC oraz Hibernate\nPodstawy tworzenia aplikacji serwerowych dzięki Spring Boot\nStworzysz gotowe aplikacje FullStack jak: Lista zakupów, Skracanie linków\nGenerowanie plików pdf z tekstem i obrazkami\ni wiele więcej, poczytaj proszę pełny opis lekcji w tabelce\n\n\nKurs jest stale aktualizowany oraz rozbudowywany, ma bogactwo:\nprofesjonalnych slajdów z opisami zagadnień, przykładami, zdjęciami oraz rezultatami oczekiwanymi w przeglądarce.\nkodowania na żywo omówionych tematów co pozwala na przećwiczenie i zapamiętanie nowo poznanych zagadnień\ngotowe projekty, które stworzymy razem w celu utrwalenia całej wiedzy\nbogactwo skondensowanych informacji, bez zbędnych dygresji\nzadania do samodzielnego wykonania, gdzie w punktach określone jest co dokładnie trzeba wykonać, następnie zaprezentowane jest przykładowe rozwiązanie. Dzięki zadaniom przećwiczysz i utrwalisz samodzielnie nowo poznaną wiedzę\n\n\nPoświęciłem sporo czasu na stworzenie tego kursu, zapraszam, gdyż naprawdę warto. Przyświecał mi cel aby był kompletny i łatwiej było wkroczyć w świat programowania, tym bardziej przy tak pędzących, szybko rozwijających się technologiach. Zapraszam",
      "target_audience": [
        "Osoby chcące nauczyć się programowania w Java od podstaw do zaawansowanych zagadnień"
      ]
    },
    {
      "title": "TypeScript sin fronteras: guía definitiva",
      "url": "https://www.udemy.com/course/typescript-sin-fronteras-guia-definitiva/",
      "bio": "Todo lo que necesitas saber de TypeScript en un solo lugar",
      "objectives": [
        "Buenas bases de TypeScript",
        "Utilizar TypeScript para construir aplicaciones escalables",
        "Reducir errores comunes al programar",
        "Funcionalidades avanzadas para ahorrar código",
        "Sentirte seguro al programar en TypeScript",
        "Utilizar librerías que no utilizan TypeScript",
        "Integrar TypeScript con NodeJS",
        "Integrar TypeScript con ReactJS"
      ],
      "course_content": {
        "Introducción": [
          "Contenido de la sección",
          "Temario y requisitos",
          "Que necesitas saber",
          "Introducción",
          "Instalación en windows",
          "Instalación MacOS",
          "Primeros pasos",
          "Configurando el compilador",
          "Depurando TypeScript"
        ],
        "Tipos básicos": [
          "Contenido de la sección",
          "Tipos es TypeScript",
          "No uses el tipo any",
          "Arrays",
          "Tuplas",
          "Enums",
          "Objetos",
          "Funciones",
          "Never"
        ],
        "Tipos avanzados": [
          "Contenido de la sección",
          "Union type",
          "Intersection type",
          "Literal types",
          "Nullable types",
          "Optional chaining",
          "Nullish coalescing operator",
          "Type assertion",
          "Type narrowing",
          "Type Unknown"
        ],
        "Programación orientada a objetos con TypeScript": [
          "Contenido de la sección",
          "Introducción a la POO",
          "Clases con TypeScript",
          "Control de acceso",
          "Parámetros opcionales y de solo lectura",
          "Propiedades por parámetros",
          "Getters y setters",
          "Propiedades y métodos estáticos",
          "Herencia",
          "Method override",
          "Propiedades protegidas o protected",
          "Clases y métodos abstractos",
          "Interfaces",
          "Index signature"
        ],
        "Genéricos": [
          "Contenido de la sección",
          "Genéricos en funciones",
          "Genéricos en clases",
          "Genéricos en interfaces",
          "Restricciones en genéricos",
          "Genéricos y herencia",
          "Operador keyof",
          "Utility types"
        ],
        "Módulos": [
          "Contenido de la sección",
          "Qué son?",
          "Export nombrados y por defecto",
          "Wildcard import y re-export",
          "JavaScript y TypeScript co-existiendo"
        ],
        "Integración con NodeJS": [
          "Contenido de la sección",
          "Integración con NodeJS y ExpressJS - parte 1",
          "Integración con NodeJS y ExpressJS - parte 2"
        ],
        "Integración con ReactJS": [
          "Contenido de la sección",
          "Creación e integración con BulmaCSS",
          "Obteniendo los tipos correctos",
          "Tipos de formularios",
          "Refactorizando UserForm",
          "useState",
          "Enviando y limpiando formularios",
          "useEffect y agregando elementos"
        ],
        "Decoradores": [
          "Contenido de la sección",
          "Qué son los decoradores?",
          "Decoradores de clases",
          "Decoradores de métodos",
          "Decoradores de getters y setters",
          "Decoradores de propiedades",
          "Composición de decoradores"
        ],
        "Fin de curso": [
          "Agradecimientos"
        ]
      },
      "requirements": [
        "Nociones de programación"
      ],
      "description": "Si eres un desarrollador JavaScript y quieres mejorar tus habilidades para obtener un mejor trabajo, tienes que tener a TypeScript en tu curriculum. Derechamente te conviene y de esto mismo se trata este curso!\nTypeScript esta dentro de los lenguajes más populares en la actualidad, debido a que se utiliza para construir aplicaciones grandes y robustas. Por esta misma razón, empresas de todas partes del mundo están buscando desarrolladores qué sepan TypeScript.\nEn menos de 6 horas vamos a ver todo lo que necesitas saber sobre TypeScript, lo suficiente para convertirte en un maestro de manera rápida, con videos en cápsulas pequeñas y ejemplos fáciles de seguir. No busques más, este es el curso de TypeScript definitivo.\nDentro de las cosas que veremos en este curso:\n\n\nTipos Básicos\nTipos Avanzados\nProgramación orientada a objetos\nGenéricos\nMódulos\nIntegración con JavaScript\nIntegración con NodeJS\nIntegración con ReactJS\nAl final del curso construiremos dos aplicaciones para que podamos ver cómo se integra TypeScript al mundo actual, y así tener éxito en lo que construyamos.\nEste curso está pensado para desarrolladores de JavaScript, no es necesario que seas un experto en JavaScript, pero si debes saber algunas cosas como por ejemplo que son y como utilizar: Variables, constantes, funciones, objetos, destructuring, entre otras cosas del lenguaje.",
      "target_audience": [
        "Desarrolladores de JavaScript que desean subir sus habilidades al siguiente nivel",
        "Desarrolladores que buscan mejorar la estabilidad de sus aplicaciones",
        "Desarrolladores que buscan mejorar la velocidad de desarrollo de sus aplicaciones"
      ]
    },
    {
      "title": ".Net Core Asenkron- Multithread Programlama (TASK,TPL,PLINQ)",
      "url": "https://www.udemy.com/course/net-core-asenkron-multi-thread-programlama/",
      "bio": "TASK, TPL ve PLINQ gücünü kullanarak asenkron ve multi-thread uygulamalar inşa etmeyi öğreneceksiniz.",
      "objectives": [
        "Task temelli programlama ile asenkron kodlar yazmayı öğreneceksiniz.",
        "TPL ile multi-thread üzerinde çalışan kodlar yazmayı öğreneceksiniz.",
        "PLINQ ile multi-thread üzerinde çalışan LINQ sorguları yazmayı öğreneceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Asenkron(Asynchronous) programlama nedir ? Multi Thread Programlama nedir ?"
        ],
        "TASK": [
          "Task ( async-await)-1",
          "Task ( async-await)-2",
          "Task ( async-await)-3",
          "Task Method: ContinueWith",
          "Task Method: WhenAll(task1,task2,task3,task4,….)",
          "Task Method: WhenAny(task1,task2,task3,task4,….)",
          "Task Method: WaitAll(task1,task2,task3,task4,….)",
          "Task Method: WaitAny(task1,task2,task3,task4,….)",
          "Task Method: Delay()",
          "Task Method: Run()",
          "Task Method: StartNew()",
          "Task Method: FromResult()",
          "CancellationToken -1",
          "CancellationToken -2",
          "Task Instance Result Property",
          "Task Instance Result Property-2",
          "Task Instance Properties",
          "ValueTask nedir ?",
          "Task Akış durumu"
        ],
        "Task Parallel Library(TLP)": [
          "Task Parallel Library(TPL) Nedir ?",
          "Race Condition nedir ?",
          "Parallel.ForEach -1",
          "Parallel.ForEach -2",
          "Race Condition Örnek",
          "Parallel.For",
          "Parallel.For/ForEach Thread-Local Variables",
          "Parallel.ForEach/For CancellationToken",
          "Parallel.ForEach/For CancellationToken-2"
        ],
        "PLINQ(Parallel Language-Integrated Query)": [
          "PLINQ Nedir ?",
          "AsParallel()",
          "ForAll()",
          "AdventureWorks Database First",
          "Entity üzerinde PLINQ sorgu yazmak",
          "WithDegreeOfParalleism methodu ne işe yarar ?",
          "WithExecuteMode nedir ?",
          "AsOrdered method",
          "Exception Handle",
          "PLINQ CancellationToken"
        ]
      },
      "requirements": [
        "Temel seviyede C# bilgisi"
      ],
      "description": "Bu kursumda TASK, TPL ve PLINQ teknolojilerin gücünü kullanarak  asenkron ve multi-thread kodlar yazabileceksiniz.\nBu Kurs aşağıdaki konuları içermektedir.\nTask nedir ?\nAsync-Await nedir ?\nContinueWith methodu ne işe yarar ?\nTask.WhenAll methodu ne işe yarar ?\nTask.WhenAny methodu ne işe yarar ?\nTask.WaitAll methodu ne işe yarar ?\nTask.WaitAny methodu ne işe yarar ?\nTask.Delay methodu ne işe yarar ?\nTask.Run methodu ne işe yarar ?\nTask.StartNew methodu ne işe yarar ?\nTask.FromResult methodu ne işe yarar ?\nCancellation Token nedir ?\nTask instance Property'ler nelerdir ? ne işe yararlar ?\nValueTask nedir ?\nTask akışı nasıl gerçekleşir ?\nTask Parallel Library(TPL) nedir ?\nRace Condition nedir ?\nParallel.Foreach nedir ? nasıl kullanılır  ?\nParallel.For nedir ? nasıl kullanılır ?\nParallel.For/ForEach  Thread-Local Variables nedir ? nasıl kullanılır ?\nParallel.For/ForEach CancellationToken nedir ? nasıl kullanılır ?\nPLINQ(Parallel Language-Integrated Query) nedir ?\nArray.AsParallel methodu ne işe yarar ?\nArray.AsParallel.ForAll methodu ne işe yarar ?\nEntity üzerinde PLINQ sorgusu nasıl yazılır ?",
      "target_audience": [
        ".Net Core Projelerinde Asenkron kodlar yazmak isteyenler.",
        ".Net Core Projelerinde Multi-Thread kod yazmak isteyenler."
      ]
    },
    {
      "title": "C# Başlangıç ve İleri Düzey",
      "url": "https://www.udemy.com/course/c-baslangc-ve-ileri-duzey/",
      "bio": "C# Başlangıç ve ileri düzey",
      "objectives": [
        "C# programlama diline orta seviye bir yazılımcı kadar hakim olabilecekler",
        "SQL bilgileri ile beraber kolay bir şekilde ADO NET kısmına giriş yapabilecekler."
      ],
      "course_content": {
        "Tanıtım": [
          "Tanıtım",
          "Çalışma süresi ve düzeni hakkında"
        ],
        "Kurulumlar": [
          "Bilgilendirme",
          "Windows update son durum",
          "Visual Studio 2022 Comminity",
          "Microsoft SQL Server Kurulum",
          "Sql Managment Studio Kurulumu",
          "Genel Ayarların Yapılması"
        ],
        "C# Programlama dili hakkında": [
          "Bilgilendirme",
          "C# Nedir",
          "Nerelerde kullanılır",
          "Gerçek hayatta C# aranan bir dil midir ?"
        ],
        "Eğitime başlamandan önce": [
          "Proje Hazırlık Aşaması",
          "Yeni bir console uygulama - framework",
          "Yeni bir console uygulama - core",
          "Ekran komutları",
          "Kullanıcıdan değer alma komutu",
          "Uygulamalarımızı inceleme işlemi",
          "Yorum satırı kullanımı",
          "Bölüm sonu değerlendirme"
        ],
        "Temel Konular - Değişkenler & Tür dönüşümleri": [
          "Bilgilendirme",
          "Temel veri türleri - String - Char",
          "Temel veri türleri - Byte - Int",
          "Temel veri türleri - Double - Float - Decimal",
          "Temel veri türleri - Boolean",
          "Temel veri türleri - Tarih Saat",
          "Değişkenlerin faaliyet alanları",
          "Değişkenlerin davranışları",
          "Tür dönüşümü nedir ?",
          "Bilinçli tür dönüşümü",
          "Bilinçsiz tür dönüşümü",
          "Parse kullanımı",
          "Convert kullanımı",
          "Object tipi hakkında bilgilendirme",
          "Var anahtar kelimesi ve kullanımı",
          "Dynamic kullanımı",
          "Bölüm sonu değerlendirme"
        ],
        "Temel Konular - Operatör Kullanımı": [
          "Bilgilendirme",
          "Aritmatiksel operatörler",
          "Atama operatörleri",
          "Karşılaştırma operatörleri",
          "Mantıksal operatörler",
          "Arttırma - Azaltma operatörleri",
          "Bölüm sonu alıştırma #1",
          "Bölüm sonu alıştırma #2",
          "Bölüm sonu alıştırma #3",
          "Bölüm sonu alıştırma #4",
          "Bölüm sonu değerlendirme",
          "Bölüm sonu test"
        ],
        "Temel Konular - Koşul ifadeleri": [
          "Bilgilendirme",
          "Karar yapıları nedir ?",
          "Karar yapıları - IF kullanımı",
          "Karar yapıları - IF Else kullanımı",
          "Karar yapıları - IF ELSE IF ELSE kullanımı",
          "If kullanımı - Alistirma 1",
          "If kullanımı - Alistirma 2",
          "If kullanımı - Alistirma 3",
          "Switch Case kullanımı Genel Yapı",
          "Switch yapısı bir örnek üzerinde inceleme",
          "Switch yapısında birden fazla case kullanımı",
          "Switch case ornek uygulama",
          "Bölüm sonu değerlendirme"
        ],
        "Temel Konular - Döngüler": [
          "Bilgilendirme",
          "Döngüler Nedir",
          "For döngüsü anlatım",
          "While döngüsü anlatım",
          "Foreach döngüsü anlatım",
          "Do while döngüsü anlatım",
          "Atlama deyimleri - break",
          "Atlama deyimleri - continue",
          "Örnek kullanım - For",
          "Örnek kullanım - While",
          "Örnek kullanım Foreach",
          "Örnek kullanım Do while",
          "İç içe döngü kullanımları",
          "Bölüm sonu değerlendirme"
        ],
        "Diziler ( Arrays )": [
          "Bilgilendirme",
          "Dizi oluşturma ve başlatma",
          "Dizi elemanlarına erişim",
          "Döngü ile dizi okuma ve yazma",
          "Mini Proje",
          "Mini Proje - II",
          "IndexOutOfRangeException hatası nedir ?",
          "Yardımcı metotlar",
          "Bölüm sonu değerlendirme"
        ],
        "Koleksiyonlar ( 1/2)": [
          "Bilgilendirme",
          "Array List Nedir",
          "Array List - Ödev",
          "HashTable Nedir",
          "HashTable Ödev",
          "SortedList Nedir",
          "Stack Nedir",
          "Queue Nedir",
          "Bölüm sonu kaynak kodları"
        ]
      },
      "requirements": [
        "Temel bilgisayar bilgisi"
      ],
      "description": "C# Başlangıç ve İleri Düzey görsel eğitimini tamamladığınız zaman c# programlama dilinde orta seviye bir yazılımcı düzeyinde bilgi sahibi olacaksınız.\nÇekmiş olduğum veya çekeceğim eğitimlerimi güncel tutmaya gayret göstereceğim.\nHepinize şimdiden başarılar dilerim.\nCengiz ATİLLA",
      "target_audience": [
        "C# öğrenmek isteyen tüm katılımcılar"
      ]
    },
    {
      "title": "C# .NET od Podstaw do Tworzenia Aplikacji w WPF i XAML",
      "url": "https://www.udemy.com/course/c-net-od-podstaw-do-tworzenia-aplikacji-w-wpf-i-xaml/",
      "bio": "Nie znasz C#? Naucz się C# od zera, twórz w .NET, buduj aplikacje C# w WPF i zobacz, że programowanie ma sens.",
      "objectives": [
        "czym jest C# i .NET",
        "cała składnia c#",
        "programowanie obiektowe, pojęcia takie jak klasa, abstrakcja, interfejsy etc.",
        "korzystać z gotowych kontrolek oraz jak je edytować",
        "zmieniać szablony kontrolek oraz tworzyć własne kontrolki z własnymi szablonami",
        "ustawić kontrolki, dopasować odpowiedni panel",
        "łączyć dane na różne sposoby (binding) z kodem napisanym w C# i w XAML’u",
        "konwertować dane, aby zgadzały się w powiązaniach (converter’y)",
        "obsługiwać zdarzenia (routed events)",
        "tworzyć zasoby aplikacji i z nich korzystać",
        "tworzyć własne klasy z danymi, które mogą być obserwowane i wiązać je z XAML’em",
        "tworzyć aplikacje wielookienkowe z dialogami",
        "sprawić, aby nasze aplikacje wyglądały ładniej (style) oraz miały różne animacje (easing function)",
        "wywoływać odpowiednie akcje bez pisania kodu w c# (Triggery różnego rodzaju)",
        "jak korzystać z różnych kolekcji i przetwarzać w łatwy sposób duże ilości danych wyświetlając się w postaci sortowalnej tabeli",
        "stworzyć własny media player z progress barem",
        "tworzyć aplikację reagującą na skróty klawiaturowe, ze zdjęciami, zakładkami, menu, menu kontekstowym, statusbarem, podpowiedziami, rozwijanymi listami i wiele wiele innych."
      ],
      "course_content": {
        "Wstęp": [
          "Czym jest platforma .NET, czym jest język programowania C# ?",
          "Instalacja i stworzenie pierwszego projektu w Visual Studio",
          "Co robić, by wyciągnąć z kursu jak najwięcej korzyści?"
        ],
        "Podstawy": [
          "Podstawy",
          "Zmienne"
        ],
        "Operatory": [
          "Operatory arytmetyczne i przypisania",
          "Operatory relacyjne (porównania)",
          "Operatory logiczne",
          "Operatory bitowe (lekcja zaawansowana)"
        ],
        "Instrukcje warunkowe": [
          "Instrukcje warunkowe if, else if, else i instrukcje zagnieżdżone",
          "Instrukcja warunkowa switch",
          "Operator warunkowy"
        ],
        "Pętle": [
          "Pętle, Pętla for",
          "Pętla while oraz do while",
          "Pętle zagnieżdżone, ćwiczenia",
          "Instrukcja break i continue"
        ],
        "Tablice": [
          "Tablice jednowymiarowe",
          "Pętla foreach, zmienna typu var",
          "Tablice wielowymiarowe oraz wyszczerbione"
        ],
        "Programowanie obiektowe": [
          "Programowanie obiektowe - wstęp",
          "Konstruktory, statyczne metody, pola, właściwości",
          "Zabawy z metodami",
          "Zabawa z konstruktorami",
          "Klasy zagnieżdżone",
          "Dziedziczenie",
          "Polimorfizm, Klasa Object, operator is, as i rzutowanie",
          "Virtual i Override",
          "Klasy oraz metody abstrakcyjne",
          "Interfejsy",
          "Klasy oraz metody zapieczętowane (sealed)",
          "Typ enum",
          "Przestrzeń nazw",
          "Struktury",
          "Indeksery",
          "Klasy generyczne",
          "Metody generyczne",
          "Ograniczenia, statyczne i domyślne wartości, dziedziczenie typów generycznych",
          "Przeciążenie operatorów oraz konstruktor kopiujący",
          "Własne operatory rzutowania",
          "Wartość null dla typów wartościowych",
          "Metody rozszerzające",
          "Wyjątki i ich obsługa"
        ],
        "Tworzenie aplikacji w WPF - PODSTAWY": [
          "Co będę wiedział po tej sekcji?",
          "Ściągniecie i instalacja IDE",
          "Czym jest WPF / XAML - różnice - pierwsza aplikacja",
          "Ogólne ważne pojęcia"
        ],
        "Tworzenie aplikacji w WPF - Układ komponentów aplikacji": [
          "Layouty i Attached Property",
          "GridSplitter",
          "UniformGrid",
          "StackPanel i WrapPanel",
          "DockPanel",
          "Canvas",
          "ScrollViewer i zawijanie tekstu",
          "Expander - rozwijanie i ukrywanie treści",
          "RadioButton, GroupBox, Label"
        ],
        "Tworzenie aplikacji w WPF - ZAAWANSOWANY": [
          "Binding, Markup Extension",
          "Eventy i Delegaty",
          "DataContext oraz interfejs INotifyPropertyChanged",
          "Zasoby Aplikacji - StaticResources, DynamicResources, Source",
          "GroupBox i RadioButton",
          "Popup",
          "ToggleButton",
          "Style",
          "Triggery - wyzwalacze akcji",
          "Converter",
          "Multi Warunkowy Trigger",
          "Event Trigger i Animacje",
          "Easing Funcions",
          "Data Trigger",
          "itemsource / itemscontrol / datatemplate",
          "UserControl",
          "Custom Dependency Property",
          "Templates, ControlTemplate i ContentPresenter oraz TemplateBinding",
          "MultiDataTriger i RelativeSource",
          "ListBox i ObservableCollection",
          "ComboBox",
          "Listview",
          "ListView - sortowanie danych",
          "DataGrid",
          "TemplateSelector",
          "Menu i wbudowane komendy",
          "Custom Commands",
          "Jak otworzyć więcej niż 1 okno?",
          "MessageBox i Dialogs",
          "Context Menu i Command Parameter",
          "Tooltip i toolbar",
          "Zakładki - TabControl i ContentSource",
          "x:static",
          "StringFormat",
          "MultiBinding - StringFormat i TargetNullValue",
          "DispatcherTimer",
          "Calendar oraz DatePicker"
        ]
      },
      "requirements": [
        "Wszystko wyjaśnione jest w kursie. Nie musisz posiadać żadnych wiadomości na temat C#, aby zabrać się za ten kurs."
      ],
      "description": "W moim kursie C# nie musisz znać podstaw programowania. Nauczysz się wszystkiego od zera.\nObal mit, że programowanie jest tylko dla wybranych. Zacznij pisać własne programy! :)\nPo moim ponad 21-godzinnym kursie:\n\nbędziesz potrafił posługiwać się zaawansowanymi składnikami języka C#.\nstworzysz graficzny interfejs użytkownika, czyli możesz zacząć pracę jako front-end developer w C#,\noszczędzisz ogrom czasu, który musiałbyś poświęcić na czytanie książek. Ten kurs to miła i szybka nauka - i nie tylko bo przy okazji zyskujesz praktykę ucząc się pisać praktycznych programów.\nNa początku przeprowadzę Cię przez podstawy składni, a potem krok po kroku przejdziemy do tworzenia profesjonalnych aplikacji przy użyciu WPF i XAML.\nPo tym dziale nauczysz się:\nkorzystać z Visual Studio Express Edition,\nkorzystać z gotowych kontrolek oraz jak je edytować,\nzmieniać szablony kontrolek oraz tworzyć własne kontrolki z własnymi szablonami,\nwypozycjonować kontrolki, dopasować odpowiedni panel,\nłączyć dane na różne sposoby (binding) z kodem napisanym w C# i w XAML’u,\nkonwertować dane, aby zgadzały się w powiązaniach (converter’y),\nobsługiwać zdarzenia (routed events),\ntworzyć zasoby aplikacji i z nich korzystać,\ntworzyć własne klasy z danymi, które mogą być obserwowane i wiązać je z XAML’em,\ntworzyć aplikacje wielookienkowe z dialogami,\nsprawić, aby nasze aplikacje wyglądały ładniej (style) oraz miały różne animacje (easing function),\nwywoływać odpowiednie akcje bez pisania kodu w c# (Triggery różnego rodzaju),\njak korzystać z różnych kolekcji i przetwarzać w łatwy sposób duże ilości danych wyświetlając się w postaci sortowalnej tabeli,\nstworzyć własny media player z progress barem,\ntworzyć aplikację reagującą na skróty klawiaturowe, ze zdjęciami, zakładkami, menu, menu kontekstowym, statusbarem, podpowiedziami, rozwijanymi listami i wiele wiele innych.\n\n\nPonad 350,000 studentów na Udemy uczy się z moich kursów. Dołącz do grupy zadowolonych Użytkowników. Jeśli mój kurs Ci się nie spodoba to pamiętaj, że masz aż 30 dni na to by uzyskać pełną refundację. Gwarantuję Ci 100% satysfakcji.\n\n\nJeśli masz jakiekolwiek pytania  związane z poruszonymi tematami w C# to pisz śmiało, zawsze chętnie pomogę :)\nProszę zanim zakupisz kurs oglądnij darmowe lekcje! Nie kupuj kota w worku! Sprawdź jakość kursów przed zakupem!\nDołącz dziś i naucz się szybko C# ze mną!",
      "target_audience": [
        "Ten kurs C# jest przeznaczony dla każdego. Nie musisz wiedzieć nic na temat C#, aby się za niego zabrać. Co nie oznacza, że osoba, która pisze od dawna nie znajdzie w tym kursie nic dla siebie. Druga część kursu dotyczy WPF i XAML i przestawione są w niej zaawansowane aspekty tworzenia aplikacji."
      ]
    },
    {
      "title": "Python para el análisis de datos",
      "url": "https://www.udemy.com/course/python-analisis-de-datos/",
      "bio": "Domina el poder de la ciencia de datos en Python. El curso perfecto para principiantes sin experiencia en programación.",
      "objectives": [
        "Aprenderás a programar Python desde 0 y llegarás a un nivel en el que te sentirás seguro/a de programar como un/a profesionista.",
        "Aprender a programar en Python sin necesidad de instalar nada en tu computadora (trabajarás en línea desde tu explorador favorito).",
        "Aprenderás a manipular y analizar datos utilizando herramientas como Numpy, Pandas y Matplotlib.",
        "Aprenderás a utilizar técnicas avanzadas de aprendizaje automático (machine learning).",
        "Aprenderás sobre visualización de datos, qué tipo de gráficos utilizar para cada situación.",
        "Aprenderás a diferenciar conceptos como inteligencia artificial, aprendizaje automático, ciencia de datos, entre otros.",
        "Aprenderás la importancia de la analítica hoy en día y su relación con la industria 4.0.",
        "Aprenderás a crear tu propia página web que te servirá como portafolio."
      ],
      "course_content": {
        "INTRODUCCIÓN": [
          "¿Por qué Python? - Presentación",
          "Información de la plataforma - Presentación",
          "Obtener ayuda",
          "Ética en IA - Presentación",
          "Ética en IA - Presentación - Parte 2",
          "Instalación - Información general - Presentación",
          "Nota: Ubicación de ejercicios en Google Colab",
          "Preparar archivos en Google Colaboratory (Colab)",
          "[Opcional] Instalación local",
          "Primeros pasos - Trabajar en Google Colab - Código",
          "Sintaxis - Instrucciones - Presentación",
          "Sintaxis - Comentarios - Presentación",
          "Sintaxis - Comentarios - Código",
          "Sintaxis - Indentado (sangría) - Presentación",
          "Sintaxis - Indentado (sangría)- Código",
          "Sintaxis - Variables - Presentación",
          "Sintaxis - Variables - Código",
          "Ejercicio práctico integrador - Capítulo 01 - Introducción"
        ],
        "TIPOS DE DATOS Y OPERADORES": [
          "Introducción a los tipos de datos - Presentación",
          "Introducción a los tipos de datos - Código",
          "Tipo de datos: Cadenas de texto - Presentación",
          "Tipo de datos: Cadenas de texto - Presentación - Parte 2",
          "Tipo de datos: Cadenas de texto - Código",
          "Tipo de datos: Cadenas de texto - Código - Parte 2",
          "Tipo de datos: Cadenas de texto - Código - Parte 3",
          "[Opcional] Tipo de datos: Cadenas de texto - Código - Parte 4",
          "Tipo de datos: Numéricos - Presentación",
          "Tipo de datos: Numéricos - Código",
          "Formato de cadenas de texto - Presentación",
          "Tipo de datos: Booleano - Presentación",
          "Tipo de datos: Booleano - Código",
          "Tipo de datos: Booleano - Código - Parte 2",
          "Introducción a los operadores - Presentación",
          "Operadores aritméticos - Presentación",
          "Operadores aritméticos - Código",
          "Operadores de asignación - Presentación",
          "Operadores de asignación - Código",
          "Operadores de comparación - Presentación",
          "Operadores de comparación - Código",
          "Operadores lógicos - Presentación",
          "Operadores lógicos - Código",
          "Operadores de identidad - Presentación",
          "Operadores de identidad - Código",
          "Operadores de membresía - Presentación",
          "Operadores de membresía - Código",
          "Operadores bit a bit - Presentación",
          "Operadores bit a bit - Código",
          "Ejercicio práctico integrador - Capítulo 02 - Tipos de datos y operadores"
        ],
        "COLECCIONES": [
          "Introducción a colecciones - Presentación",
          "Introducción a colecciones - Código",
          "Listas - Presentación",
          "Listas - Presentación - Parte 2",
          "Listas - Código",
          "Tuplas - Presentación",
          "Tuplas - Código",
          "Función ZIP() - Presentación",
          "Función ZIP() - Código",
          "Conjuntos - Presentación",
          "Conjuntos - Código",
          "Diccionarios - Presentación",
          "Diccionarios - Código",
          "Ejercicio práctico integrador - Capítulo 03 - Colecciones"
        ],
        "CONTROL DE FLUJO": [
          "Introducción al control de flujo - Presentación",
          "Condicional \"IF ... ELSE\" (SI ... SI NO) - Presentación",
          "Condicional \"IF ... ELSE\" (SI ... SI NO) - Código",
          "Alternativa con \"MATCH ... CASE\" - Código",
          "Función \"INPUT()\" (ENTRADA) - Presentación",
          "Función \"INPUT()\" (ENTRADA) - Código",
          "Introducción a bucles - Presentación",
          "Bucle \"WHILE ...\" (MIENTRAS ...) - Presentación",
          "Bucle \"WHILE ...\" (MIENTRAS ...) - Código",
          "Bucle \"WHILE ...\" (MIENTRAS ...) - Código - Parte 2",
          "Bucle \"FOR ...\" (POR CADA ...) - Presentación",
          "Bucle \"FOR ...\" (POR CADA ...) - Código",
          "Bucle \"FOR ...\" (POR CADA ...) - Código - Parte 2",
          "Función \"RANGE()\" - Código",
          "Iteración sobre diccionarios - Código",
          "Comprensión de listas - Código",
          "Comprensión de tuplas y diccionarios - Código",
          "Ejercicio práctico integrador - Capítulo 04 - Control de flujo"
        ],
        "FUNCIONES Y CLASES": [
          "Funciones - Presentación",
          "Funciones - Código",
          "Funciones - Argumentos - Código",
          "Funciones - Argumentos - Código - Parte 2",
          "Funciones - Instrucción PASS - Código",
          "Funciones - Alcance de variables - Código",
          "Funciones - Documentación - Código",
          "Decoradores @ - Presentación",
          "Decoradores @ - Código",
          "Clases - Presentación",
          "Clases - Código",
          "Clases - Atributos - Código",
          "Clases - Métodos - Código",
          "Clases - Atributos - Código - Parte 2",
          "Clases - Herencia - Código",
          "Clases - Herencia - Código - Parte 2",
          "Clases - Decoradores - Código",
          "Clases - Decoradores - Código - Parte 2",
          "Ejercicio práctico integrador - Capítulo 05 - Funciones y clases"
        ],
        "ERRORES, ARCHIVOS Y LIBRERÍAS": [
          "Manejo de errores - Presentación",
          "Manejo de errores - Código",
          "Manejo de errores - Código - Parte 2",
          "Manejo de archivos - Presentación",
          "Manejo de archivos - Montar carpeta - Código",
          "Manejo de archivos - Código",
          "Manejo de archivos - Código - Part 2",
          "Manejo de archivos - Código - Part 3",
          "Introducción a librerías - Presentación",
          "Introducción a librerías - Código",
          "Ejercicio práctico integrador - Capítulo 06 - Errores, archivos y librerías"
        ],
        "LIBRERÍA NUMPY": [
          "Numpy - Presentación",
          "Numpy - Presentación - Parte 2",
          "Numpy - Crear arreglos - Presentación",
          "Numpy - Crear arreglos - Presentación - Parte 2",
          "Numpy - Crear arreglos - Presentación - Parte 3",
          "Numpy - Crear arreglos - Presentación - Parte 4",
          "Numpy - Crear arreglos - Presentación - Parte 5",
          "Numpy - Indexado y filtros - Presentación",
          "Numpy - Tipos de datos - Presentación",
          "Numpy - Atributos y métodos - Presentación",
          "Numpy - Operaciones - Presentación",
          "Numpy - Agregar datos - Presentación",
          "Numpy - Combinar y separar arreglos - Presentación",
          "Numpy - Manejo de archivos - Presentación",
          "Numpy - Listas vs Arreglos - Código",
          "Numpy - Crear arreglos - Código",
          "Numpy - Información de arreglos - Código",
          "Numpy - Acceder a arreglos - Código",
          "Numpy - Filtros en arreglos - Código",
          "Numpy - Funciones de agregación - Código",
          "Numpy - Tipos de datos - Código",
          "Numpy - Otras funciones - Código",
          "Numpy - Operaciones - Código",
          "Ejercicio práctico integrador - Capítulo 07 - Librería NumPy",
          "Nota: Avance intermedio"
        ],
        "VISUALIZACIÓN DE DATOS": [
          "Introducción a la visualización de datos - Presentación",
          "Distribución, relación, composición y comparación - Presentación",
          "Visualización de datos - Código",
          "Gráficas básicas - Código",
          "Visualización - Comparación - Código",
          "Visualización - Relación - Código",
          "Visualización - Distribución - Código",
          "Visualización - Composición - Código",
          "Ejercicio práctico integrador - Capítulo 08 - Visualización de datos"
        ],
        "LIBRERÍA PANDAS": [
          "Introducción a la librería Pandas - Presentación",
          "Pandas - Conexión a Google Drive",
          "Pandas - Introducción - Código",
          "Pandas - Entradas - Código",
          "Pandas - Datos 1D - Código",
          "Pandas - Datos 2D - Código",
          "Pandas - Múltiples dimensiones - Código",
          "Pandas - Acceder a valores - Código",
          "Pandas - Filtros - Código",
          "Pandas - Funciones de agregación - Código",
          "Pandas - Manipulación de Series y DataFrames - Código",
          "Pandas - Gráficos - Código",
          "Pandas - Métodos y atributos - Código",
          "Pandas - Reemplazo de valores - Código",
          "Pandas - Apply() - Código",
          "Pandas - Groupby() - Código",
          "Pandas - Tabla pivote - Código",
          "Pandas - Manejo de valores faltantes - Código",
          "Pandas - Manejo de valores duplicados - Código",
          "Pandas - Combinar DataFrames - Código",
          "Pandas - Combinar DataFrames - Joins - Código",
          "Pandas - Combinar DataFrames - Joins - Código - Parte 2",
          "Pandas - Reportes - Código",
          "Pandas - Salidas - Código",
          "Pandas - Conexión a bases de datos - Código",
          "Ejercicio práctico integrador - Capítulo 09 - Librería Pandas"
        ],
        "APRENDIZAJE AUTOMÁTICO": [
          "Introducción a la inteligencia artificial (IA) - Presentación",
          "Ciencia de datos - Presentación",
          "Industria 4.0 - Presentación",
          "Niveles de analítica - Presentación",
          "¿Por qué es tan relevante la analítica hoy en día? - Presentación",
          "Introducción al aprendizaje automático (machine learning) - Presentación",
          "Tipos de aprendizaje automático - Presentación",
          "Tipos de aprendizaje automático - Presentación - Parte 2",
          "Preprocesamiento - Presentación",
          "Selección de algoritmos de aprendizaje automático - Presentación",
          "Selección de algoritmos de aprendizaje automático - Presentación - Parte 2",
          "Métricas y validación cruzada - Presentación",
          "Infraajuste y sobreajuste (underfitting & overfitting) - Presentación",
          "Optimización de hiperparámetros - Presentación"
        ]
      },
      "requirements": [
        "¿Quieres aprender a programar en Python y utilizarlo en el análisis de datos? ¡Genial! ¡No necesitas experiencia previa en programación para empezar! ¡Así es, no hay requisitos para este curso! Solo necesitas una mente curiosa y ganas de aprender (bueno … también una computadora con acceso a internet y una cuenta en Gmail y GitHub, veremos de todas maneras cómo crearla por si no tienes una)"
      ],
      "description": "Muchas gracias por tu interés en el curso. Aquí te dejo más detalles:\n\n\nNo hay requisitos: Ideal para principiantes, este programa te guiará desde cero con los conceptos básicos pasando por visualización de datos hasta técnicas avanzadas de aprendizaje automático, todo sin necesidad de experiencia previa en programación. (si ya tienes experiencia previa en Python y solamente te interesa la parte de análisis de datos, puedes comenzar desde el capítulo de librería Numpy)\nTrabaja en línea: No necesitas instalar Python en tu computadora, trabaja completamente en línea desde tu explorador favorito (aunque recomendamos Google Chrome).\nHerramientas clave y análisis de datos: Domina herramientas como Numpy, Pandas, Matplotlib, Scikit-learn entre otras. Aprende a manipular y analizar datos eficientemente.\nSoporte continuo: Accede a un amplio material de apoyo, ejercicios motivadores y una comunidad activa que te ayudará en tu progreso y comprensión.\nDesarrolla tu portafolio: Crea tu propia página web personal con Django, un proyecto que no solo consolida tu aprendizaje sino que también sirve como un valioso componente de tu portafolio profesional.\nÚnete a este viaje transformador y abre las puertas a nuevas oportunidades en el mundo del análisis de datos. ¡Inscríbete hoy, te esperamos en la primera lección!\n\n\nMuchas gracias por tu preferencia.\nAtentamente,\nErick Oziel Hernández Díaz | CursoPython․com\nLinkedIn @ErickOzielHernandezDiaz\n\n\nMás información y cupones de descuento en nuestra página.\nNOTA: Basándonos en el feedback, se han agregado más ejercicios prácticos y recursos adicionales.",
      "target_audience": [
        "Estudiantes, profesionistas, emprendedores y cualquier persona que quiera aprender Python desde 0 e iniciarse en el mundo del análisis de datos."
      ]
    },
    {
      "title": "Программирование на C#: от новичка до специалиста",
      "url": "https://www.udemy.com/course/csharp-ru/",
      "bio": "Изучите C# и платформу .NET, включая .NET Core и начните практиковать объектно-ориентированное программирование (ООП).",
      "objectives": [
        "Как устроена платформа .NET и .NET Core",
        "Основные типы данных в C#",
        "Управление потоком исполнения программы: циклы, условия",
        "Массивы и коллекции: Array, List, Dictionary, Stack, Queue",
        "Классы и структуры: отличия в контексте управления памятью",
        "ООП в C#: наследование, полиморфизм, инкапсуляция",
        "ООП в С#: интерфейсы, абстрактные классы, модификатора доступа",
        "Методы: params, out, ref, static, overloading, optional parameters",
        "Основы процесса отладки",
        "Управление памятью: сборка мусора, boxing\\unboxing",
        "Перечисления",
        "Обобщения",
        "Написание простых программ и игр на C# таких как \"крестики-нолики\""
      ],
      "course_content": {
        "Введение в платформу .NET": [
          "Как задавать вопросы",
          "Скачать исходный код",
          "Основные концепции",
          "Из чего состоит приложение под .NET",
          "Основные типы",
          "Основные фреймворки",
          "Исторический экскурс. Преимущества .NET и C#",
          "Выбираем IDE (среду разработки)",
          "Инсталлируем Visual Studio Community Edition",
          "Запускаем IDE",
          "Запускаем и разворачиваем консольное приложение"
        ],
        "Основы C#": [
          "Создаём переменные",
          "Литералы",
          "Область видимости переменных",
          "Переполнение",
          "Алгебраические операции",
          "Экземплярные и статические методы",
          "Базовый API для работы со строками",
          "Пустота строк",
          "Изменение строк",
          "StringBuilder",
          "Форматирование строк",
          "Сравнение строк",
          "Работаем с консолью",
          "Приведение типов и парсинг",
          "Комментарии",
          "Класс Math",
          "Введение в массивы",
          "Знакомство с DateTime",
          "Объявление перемменных",
          "Элементарная арифметика",
          "ДЗ 1-3",
          "ДЗ 1-3 - Решение",
          "ДЗ \"Формула Герона\"",
          "ДЗ \"Формула Герона\" - Решение",
          "ДЗ \"Профиль пользователя\"",
          "ДЗ \"Профиль пользователя\" - Решение"
        ],
        "Управление потоком исполнения (Control Flow)": [
          "Условные выражения в C#",
          "ДЗ \"Нахождение максимума\"",
          "ДЗ \"Нахождение максимума\" - Решение",
          "Циклы for и foreach",
          "Вложенный цикл for",
          "Циклы while и do while",
          "Управление циклом: break и continue",
          "Условия через switch\\case",
          "Отладка: основы основ",
          "ДЗ \"Числа Фибоначчи\"",
          "ДЗ \"Числа Фибоначчи\" - Решение",
          "ДЗ \"Вычисление среднего\"",
          "ДЗ \"Вычисление среднего\" - Решение",
          "ДЗ \"Вычисление факториала\"",
          "ДЗ \"Вычисление факториала\" - Решение",
          "ДЗ \"3 попытки на аутентификацию\"",
          "ДЗ \"3 попытки на аутентификацию\" - Решение"
        ],
        "Массивы и коллекции": [
          "Класс Array",
          "Коллекция List",
          "Коллекция Dictionary",
          "Stack и Queue (стек и очередь)",
          "Многомерные массивы",
          "Зубчатые массивы",
          "Массивы с настраиваемой индексацией"
        ],
        "ООП в C#": [
          "Создаём свой первый класс",
          "Модификаторы доступа",
          "Проблемы с публичным доступом",
          "Введение в свойства",
          "Как устроены свойства. Автосвойства",
          "Перегрузка методов",
          "ДЗ \"Парсинг римских чисел\"",
          "ДЗ \"Парсинг римских чисел\" - Решение",
          "ДЗ \"перегрузка\"",
          "ДЗ \"перегрузка\" - Решение",
          "Ключевое слово params",
          "Именованные аргументы",
          "Выходные out-параметры",
          "Модификатор static",
          "Опциональные параметры",
          "Ссылочные типы и типы-значения",
          "Стек и куча",
          "Структуры, содержащие ссылочные типы",
          "Передача ссылочных типов и типов-значений как аргументов",
          "NullReferenceException и Nullable-структуры",
          "Упаковка и разупаковка (boxing \\ unboxing)",
          "Конструкторы",
          "Константы: модификаторы const и readonly",
          "Наследование",
          "Полиморфизм",
          "Stream и наследование",
          "Интерфейсы",
          "Методы-расширения (extension methods)",
          "Отношение \"is a\" при наследовании. Проблема представителя.",
          "Перечисления",
          "Пишем Stack основанный на object",
          "Делаем Stack обобщённым",
          "foreach и IEnumerable",
          "Ленивое вычисление и yield",
          "Управление памятью и сборка мусора"
        ],
        "Исключения": [
          "Обработка исключений",
          "Выбрасывание исключений"
        ],
        "Работа с файлами": [
          "Файлы и потоки",
          "Файлы, директории и папки"
        ],
        "ДЗ. Практическая секция.": [
          "ДЗ \"Комплексные числа\"",
          "ДЗ \"Комплексные числа\" - Решение",
          "ДЗ \"Угадай число\"",
          "ДЗ \"Угадай число\" - Решение",
          "ДЗ \"Крестики-Нолики\"",
          "ДЗ \"Крестики-Нолики\" - Решение",
          "ДЗ \"Виселица\"",
          "ДЗ \"Виселица\" - Решение"
        ],
        "Делегаты, события, лямбды, LINQ": [
          "Делегаты",
          "События и обобщённые делегаты Action, Func",
          "ДЗ \"Игра в палочки\"",
          "ДЗ \"Игра в палочки\" - Решение",
          "Введение в LINQ и лямбда-выражения",
          "LINQ. Парсим .csv файл",
          "LINQ. Операторы First, Last, Single",
          "LINQ. Отложенное и множественное выполнение.",
          "Анонимные методы и SQL-like LINQ синтаксис",
          "Модификация коллекции в foreach",
          "ДЗ \"Игроки в шахматы\"",
          "ДЗ \"Игроки в шахматы\" - Решение",
          "ДЗ \"Верю-не-верю\"",
          "ДЗ \"Верю-не верю\" - Решение"
        ],
        "Бонус": [
          "Бонусная лекция"
        ]
      },
      "requirements": [
        "Желательно хотя бы базовое понимание принципов работы компьютера",
        "Желание учиться и практиковаться"
      ],
      "description": "C# стабильно входит в ТОП-10 наиболее популярных языков программирования.\nЕсли вы хотите начать программировать и выбираете язык с которого начать обучение, то C# это один из лучших вариантов. C# это один из наиболее сбалансированных  языков с точки зрения типизации, не говоря уже о лаконичности синтаксиса и отсутствия тяжёлого наследственного багажа как в случае С++. Ещё несколько лет назад споры о том какой язык лучше C# или Java являлись холиварными по своей сути, но на 2019 год таких споров становится всё меньше, ибо C# стал кросс-платформенным, сильно продвинулся в возможностях по достижению высокого уровня производительности, а по типизации и синтаксическим фичам давно уделал Java. Так что если вы выбираете между Java и C#... ну вы поняли.\nКороче говоря, если вы только начинаете своё путешествие в мир программирования, C# станет отличным выбором в качестве вашего первого языка программирования. Популярность C# объясняется не только тем, что его легко изучать, но и реальными преимуществами языка в смысле его профессионального применения для решения сложных проблем автоматизации. C# - кросс-платформенный язык и написанные на нём программы работают под Windows, Linux, Mac OS. Обладает кратким и элегантным синтаксисом. Огромное количество уже готовых библиотек даёт возможность не изобретать велосипеды на каждом шагу.\nЭтот курс покрывает все основные возможности C# и даёт рекомендации по написанию грамотного, \"чистого\" кода.\nДанный курс покрывает следующие темы:\nВведение в .NET: основные понятия, как устроены приложения .NET\nОсновы C#: обзор типов данных, числа и простая математика, переменные, основы работы со строками, приведение типов, статические члены\nКоллекции и массивы в C#: Array, List, Dictionary, Stack, Queue\nООП: классы, структуры, перечисления, обобщения, интерфейсы, абстрактные классы\nРабота с файлами\nОбработка исключений\nДелегаты, события, лямбды\nLINQ\nДомашние задания с разбором решений",
      "target_audience": [
        "Абсолютные новички в программировании, желающие изучить один из лучших объектно-ориентированных языков программирования.",
        "Студенты, обладающие познаниями в одном из языков программирования и желающие изучить C#"
      ]
    },
    {
      "title": "C# Kurs: Yeni Başlayanlara Özel Projelerle Sıfırdan Öğrenin",
      "url": "https://www.udemy.com/course/csharp-kursu/",
      "bio": "C# Kursu ile Programlamayı ilk defa öğrenecek olsanız bile herkes için en sade anlatım. Projelerle C# C Sharp Öğrenme.",
      "objectives": [
        "Yeni Başlayanlara Özel Teknikler",
        "C# Form ile Windows Proje Geliştirme",
        "OOP Nesne Yönelimli Programlama Mantığı",
        "SQL Veritabanı ile Çalışma",
        "MySQL Veritabanı ile Çalışma",
        "Sıfırdan Programlama Mantığı",
        "Dosya ve Metinler İle Çalışma",
        "Otomasyon Projeleri Geliştirme",
        "Proje Geliştirme Mantığı"
      ],
      "course_content": {
        "Başladığın Gibi Kod Yaz Çekiliş Programı Yazıyoruz Ücretsiz İzle ve Karar Ver": [
          "Microsoft Visual Studio 2017 Community Kurulumu",
          "Visual Studio İlk Başlatma ve Dil Ayarları",
          "Çekiliş Programı ve İlk Form Tasarımımızı Yapalım",
          "Çekiliş Programı Temel Kodlama İşlemlerimiz",
          "Çekiliş Programı Ana Kodlamalar",
          "Çekiliş Programı Son Kodlamalar"
        ],
        "Console ile Kodlamaya İlk Adımlar": [
          "Console Giriş İlk Programımızı Yazalım Write and WriteLine",
          "Visual Studio Community Trial Lisans Kaydı",
          "Kaydedilen Projeyi Tekrar Açma",
          "Yorum Satırları da Nedir?",
          "Klavyeden Girilen Değerleri Okuyalım",
          "Ödev: Klavyeden Girilen 2 Ayrı Değeri Birleştirip Yazdıralım.",
          "Ödev : Öğrendiklerinizle Klavyeden Girilen İki Sayıyı Toplatıp Ekrana Yazdırın",
          "Olmadımı? Ödev'i Beraber Yapalım. Sayısal Değerler (Tür Dönüşümleri)",
          "Visual Studio'daki Klavye Kısayolları",
          "Console Başlığını Değiştirme ve Atama İşlemleri",
          "Formatlı Yazdırma ve Ödev",
          "Ödev Yapımı Console.Title Yazdırma",
          "Read() ve Readkey()"
        ],
        "Consol Üzerinde Değişkenler ile Çalışma": [
          "Değişken Nedir? Değişken Türlerine Genel Bakış",
          "Değişken Tanımlama Kuralları ve Değer Ataması",
          "String Değişkenler ve Ödev",
          "Ödev Yapımı Kişisel Bilgilerim",
          "Char",
          "Int Değişkenler ve Ödev",
          "Ödev Yapımı, Tür Dönüşüm Örneği ve Değişken Tipini Tespit Etme",
          "Short, Byte",
          "Double",
          "Ödev Değişkenler Genel Döviz USD Bozdurma Hesap Makinesi",
          "Ödev Yapımı Değişkenler Genel Döviz USD Bozdurma Hesap Makinesi"
        ],
        "Form Yapısına Giriş": [
          "İlk Projenin Oluşturulması",
          "Projelerimizi Nasıl Çalıştıracağız",
          "Gözle Görülenleri İnceleme (Toolbox, Properties) vb.",
          "Görsel ve Kod Tarafında Özelliklere Erişim (Visible, Text Örnekleri)",
          "İsimlendirme Kuralları ve Kısayol İpuçları",
          "Alt Özelliklerin Kullanımı Size & Location ve ÖDEV",
          "Ödev Yapımı Dört Yöne Nesneyi Hareket Ettirme",
          "Ödev Ek Ders Zemin Renginin Değiştirilmesi",
          "This Anahtar Sözcüğü",
          "MessageBox Kullanımı ve Text Box ile Çalışma ve ÖDEV",
          "ÖDEV Yapımı Dört İşlemin Görsel Formda Uygulanması",
          "Detaylı MessageBox Kullanımı ve Geri Sonuç Döndürme",
          "Tür Dönüşümleri",
          "Aritmatiksel Operatörler"
        ],
        "Koşullar": [
          "Mantıksal Operatörler",
          "If - Else Kara Yapıları",
          "&& - || Ve Veya Operatörleri",
          "ÖDEV 2 Ödev Sorusu Console ve Form Uygulamaları ile İlgili",
          "Console 4 İşlem Seçimi ve Hesaplatma Projesi",
          "Form Artan ve Eksilen Değer ve Değer Tespiti Projesi",
          "Switch Case Yapısı ve ÖDEV",
          "Ödev Yapımı Girilen Sayıya Göre Haftanın Gününü Bulma",
          "?: Koşullu İşleç"
        ],
        "Döngüsel İşlemler": [
          "For Döngüsü",
          "Dinamik Döngü Mantığı",
          "ÖDEV For Döngüsü Ödevleri 2 Adet",
          "ÖDEV Yapımı Ad ve Soyad Uzunluğu Kadar Dinamik Döngü Kurma",
          "ÖDEV Yapımı İki Sayı Aralığını Toplattırma",
          "Break Point Nasıl Kullanılır",
          "İç İçe For Döngüsü Kullanımı",
          "ÖDEV Çarpım Tablosunu Yapın",
          "ÖDEV Yapımı İç İçe Döngüyle Otomatik Çarpım Tablosu"
        ],
        "Nesnesel İşlemler Arası": [
          "Kod Tarafında Button Vb. Nesne Oluşturma",
          "ÖDEV Yapımı Döngü ile 10 Butonu Alt Alta Oluşturma",
          "Dinamik Oluşturulan Butonların Tıklamasını Yakalama",
          "ÖDEV PROJE Detaylı Şifreli Kullanıcı Giriş Kontrolü",
          "ÖDEV Yapımı Detaylı Şifreli Kullanıcı Giriş Kontrolü",
          "Derleme EXE Oluşturma"
        ],
        "Döngüsel İşlemler Devam": [
          "While Döngüsü",
          "ÖDEV Belirtilen Koşul Sağlandıkça Sayıları Toplatın",
          "ÖDEV Yapımı Belirtilen Koşul Sağlandıkça Sayıları Toplatın",
          "Do While Döngüsü"
        ],
        "Diziler": [
          "Diziler ile Çalışma ve ÖDEV",
          "ÖDEV Yapımı Dizileri Döngüyle Yazdırma",
          "Diziler ile Sayısal Veriler",
          "String Dizi Örneği ve ÖDEV",
          "ÖDEV Girilen Kelimeyi Harf Harf Alt Alta Yazdırın",
          "Foreach Döngüsü",
          "Dizi Sınıfının Ek Özellikleri"
        ],
        "Listeler": [
          "List Sınıfının Kullanımı",
          "List Sınıfının Ek Özellikleri",
          "ÖDEV Kurs İsimlerini Listeye Girip Tek Tuşla Yazdırma",
          "ÖDEV Yapımı Kurs İsimlerini Listeye Girip Tek Tuşla Yazdırma"
        ]
      },
      "requirements": [
        "Temel Bilgisayar Kullanım Bilgisi",
        "Hiç Bir Programlama Bilginiz Olmasa Dahi Kursa Kayıt Olabilirsiniz."
      ],
      "description": "Kayıt Olmadan Ücretsiz 1 Saatlik Kısmı İzleyin Öyle Karar Verin.\nKursun hemen başında Visual Studio 2017 kurulumu ve ardından C# Form ile Çekiliş Programı uygulamamızı geliştiriyoruz. Hiç bir kod bilginiz olmasa dahi öğrenme sürecinizin başında size C# ile basit bir proje geliştirme sürecinin içine dahil ediyor ve kursta elde edeceğiniz kazanımlardan örnekler sunuyorum. Hiçbir ücret ödemeden bu dersleri izleyebilir ve programlama dünyasına ilk adımlarınızı atabilirsiniz.\nBen C# ile programlamayı size öğretebilirim yeter ki siz öğrenmek isteyin...\n\n\nKurs Hakkında\nBu kurs 10.000'in üzerinde öğrencisi bulunan EDUKEY Eğitim Akademisi  Danışmanlığında Uzman Eğitmen Emrah Yüksel tarafından hazırlanmıştır.\nDiğer tüm kurslarında olduğu gibi Eğitmen Emrah Yüksel bu kursta C# öğretmeyi amaçladığı öğrencilerine her konuyu yeni başlayan bir öğrencinin anlaması için en temel seviyeden anlatmayı baz alarak kursta tüm öğrencilerin programlamanın temellerinden itibaren basit bir dille öğrenmesi için çaba göstermiştir.\nProjeli Anlatım\nKursta anlatılan konuların tamamı örnekler projeler üzerinden anlatılmıştır. Kurs içerisinden birden çok projeyi eğitmeniniz ile birlikte geliştireceksiniz.\nKursta yer Bölüm Başlıklarından Bazıları\nEğitime Giriş\nBilgisayarımın Eğitime Hazırlanması\nConsole ile Kodlamaya İlk Adımlar\nConsol Üzerinde Değişkenler ile Çalışma\nForm Yapısına Giriş\nKoşullar\nDöngüsel İşlemler\nNesnesel İşlemler Arası\nDöngüsel İşlemler Devam\nDiziler\nListeler\nRandom Sınıfı\nTimer Sınıfı\nMetotlar ve Sınıflar\nVeritabanı Mantığı ve Dosya İşlemleri\nProjelerle Anla Örnek 01 Kütüphane Kitap Kayıt Sistemi (Metot İşlemleri)\nProjelerle Anla Örnek 02 Kütüphane Kitap Kayıt Sistemi (Class Model İşlemleri)\nProjelerle Anla Örnek 03 Telefon Rehberi (Class Model İşlemleri)\nSabitler\nHata İstisna Yönetimi\nMath Sınıfı\nEnum Yapısı\nString Tipi\nTarih Saat İşlemleri\nTemel SQL Veritabanı İşlemleri\nSQL Veritabanı İşlemleri ile Kurs Kayıt Sistemi PROJELİ ANLATIM",
      "target_audience": [
        "Daha Önce Programlama Öğrenmek İsteyip Başaramayanlar.",
        "Sıfırdan Programlama Öğrenmek İsteyenler",
        "Okulda C# Dersi Olan Öğrenciler",
        "C# Dersinden Kalan Geçmek İsteyen Öğrenciler"
      ]
    },
    {
      "title": "Quantum Programlama: Sıfırdan İleri Seviyeye",
      "url": "https://www.udemy.com/course/quantum-bilgisayar/",
      "bio": "Quantum Bilgisayarların çalışma prensiplerini ve teorilerini sıfırdan öğrenin, Python ve Qiskit kullanarak programlayın.",
      "objectives": [
        "Quantum Bilişim",
        "Quantum Programlama",
        "Qiskit",
        "Python",
        "Quantum Bilgisayarlar"
      ],
      "course_content": {
        "Giriş": [
          "Hoşgeldiniz",
          "Eğitim Kullanma Kılavuzu",
          "Tüm Eğitim Slide'ları"
        ],
        "Matematik Temelleri": [
          "Matematik Giriş",
          "Klasik Bilgisayarlar Nasıl Çalışır?",
          "Olasılık",
          "İstatistik",
          "Complex Numaralar",
          "Matrisler",
          "Matris İşlemleri",
          "Özel Matrisler",
          "Lineer Transformasyon"
        ],
        "Qubit ve Fizik": [
          "Qubit Giriş",
          "Superpozisyon ve Interference",
          "Dolanıklık",
          "Qubit State",
          "Braket Gösterimi",
          "Multi Qubit"
        ],
        "Sıfırdan Python": [
          "Python Giriş",
          "Anaconda Yüklemek (Windows Kullanıcıları İçin)",
          "Anaconda Yüklemek (MAC Kullanıcıları İçin)",
          "Numaralar",
          "Değişkenler",
          "Defterleri İndirmek",
          "Python Eğitimi Tüm GitHub Linkleri",
          "String",
          "String İleri Seviye",
          "Değişken Özellikleri",
          "Listeler",
          "Listeler İleri Seviye",
          "Dictionary",
          "Setler ve Farklı Oluşturma Yöntemleri",
          "Tuples",
          "Boolean",
          "Sınav",
          "Sınav Çözümleri",
          "Mantıksal Kullanımlar",
          "If Kontrolleri",
          "If Kontrolleri Devam",
          "If Pratik Kullanımları",
          "For Döngüsü",
          "For Döngüsü Pratik Kullanımlar",
          "Break Continue Pass",
          "While Döngüsü",
          "Faydalı İşlemler",
          "Zip ve Random",
          "Liste İleri Seviye",
          "Sublime Text ile Çalışmak (Windows Kullanıcıları İçin)",
          "Komut İstemcisi (Windows Kullanıcıları İçin)",
          "Sublime Text (MAC Kullanıcıları İçin)",
          "Terminal (MAC Kullanıcıları İçin)",
          "Sınav 2",
          "Sınav 2 Çözüm",
          "Sınav 2 Çözüm Devamı",
          "Fonksiyon Nedir?",
          "Girdi Çıktı İşlemleri",
          "Fonksiyon İleri Seviye",
          "Fonksiyon Pratik Yöntemler",
          "Lambda",
          "Scope",
          "Decorator",
          "Sınav 3: Hesap Makinası",
          "Sınav 3 Çözüm",
          "Class Nedir?",
          "Methodlar",
          "Sınıflar Pratik Kullanımlar",
          "Inheritance",
          "Polymorphism",
          "Özel Methodlar",
          "Hataları Ele Almak",
          "Kütüphaneleri Kullanmak",
          "Kendi Modülümüzü Yazmak",
          "Kendi Paketlerimizi Oluşturmak",
          "Imported vs Direct"
        ],
        "Qiskit'e Giriş": [
          "Qiskit Giriş",
          "Klasik Mantık Kapıları",
          "IBM Kayıt",
          "Quantum Kapıları",
          "Entanglement",
          "Qiskit",
          "İlk Devre",
          "Simulatörde Çalıştırmak",
          "Quantum Bilgisayar Bilgilerini Almak",
          "Gerçek Quantum Bilgisayarda Çalıştırmak",
          "Toffoli",
          "GitHub Linkleri"
        ],
        "Teleportasyon": [
          "Teleportasyon Giriş",
          "Phase",
          "Phase ve Bloch Sphere",
          "Phase ve Bloch Sphere GitHub Link",
          "Superdense Coding",
          "Quantum Teleportasyon",
          "Teleportasyon Qiskit",
          "Quantum Teleportasyon GitHub Link"
        ],
        "Bernstein Vazirani": [
          "Bernstein Vazirani Giriş",
          "Neden Quantum Algoritmalar",
          "Bernstein Vazirani Algoritması",
          "Algoritmayı Geliştirmek",
          "Bernstein Vazirani GitHub Linkleri"
        ],
        "Deutsch": [
          "Deutsch Giriş",
          "Deutsch Algoritması",
          "Algoritmayı Oluşturmak",
          "Qiskit Uyarlaması",
          "Deutsch GitHub Link"
        ],
        "Grover": [
          "Grover Giriş",
          "Arama Algoritmaları Klasik Çözüm",
          "Grovers Uygulamak",
          "Grover Algoritması GitHub Link",
          "Aqua Çözümü",
          "Dinner Party GitHub Link"
        ],
        "Shor": [
          "Shor Giriş",
          "Shor Algoritması",
          "Klasik Yöntem Kodları",
          "Shor Kolay Yöntem",
          "Shor Kolay Yöntem GitHub Link",
          "Quantum Fourier Transformation",
          "Quantum Phase Estimation",
          "Ekstra Linkler"
        ]
      },
      "requirements": [
        "Lise düzeyinde matematik bilgisi",
        "En az 4GB RAM'e sahip bir bilgisayar"
      ],
      "description": "Quantum Bilişim Eğitimine Hoşgeldiniz!\nQuantum Bilgisayarların ilerleyen yıllarda hayatımıza çok büyük değişiklikler getirmesi bekleniyor. Normal bilgisayarlar üzerinde binlerce yılda çözülemeyecek problemleri Quantum Bilgisayarlar sayesinde bir kaç dakika içerisinde çözebileceğimizi biliyoruz. Eğer siz de teknolojiyi daha en başında yakalamak istiyorsanız doğru yerdesiniz!\nEğitim boyunca tamamen sıfırdan başlayarak Quantum Bilgisayarların çalışma prensiplerini, teorisini, matematiğini ve programlamasını öğreneceğiz. Eğer lise düzeyinde matematik bilgisine sahipseniz bu eğitimi alabilirsiniz.\nEğitim Udemy'de 300.000'den fazla kişiye Yazılım ve Siber Güvenlik eğitimleri veren Atıl Samancıoğlu tarafından veriliyor. Atıl Samancıoğlu Boğaziçi Üniversitesi'nde Mobil Geliştirme eğitimi vermekte, Academy Club ve Pera Games'in kurucu ortağı olarak görev almaktadır. 170 ülkeden öğrencinin değerlendirmesiyle en yüksek puanlı ve en çok satan eğitimlerin sahibidir.\nEğitim boyunca değineceğimiz konuların bazıları:\nQuantum Bilgisayar ve Klasik Bilgisayar kavramları\nOlasılık, İstatistik, Matrisler\nSuperposition\nEntanglement\nInterference\nQubit\nSuperdense Coding\nQuantum Teleportation\nBernstein Vazirani Algoritması\nDeutsch Algoritması\nShor Algoritması\nGrover Algoritması\nSıfırdan İleri Seviyeye Python Programlama\nEğitimimize tamamen sıfırdan başlayacağız ve takıldığınız noktalarda eğitmene soru cevap bölümünden ulaşabileceksiniz. Aynı zamanda eğitimde kullanılan tüm materyaller hem GitHub aracılığıyla hem de slide'lar olarak el kitabı olarak size ulaştırılacaktır. Eğitimde gerçek Quantum Bilgisayarlar üzerinden kodlama yapılacak ve IBM'in Quantum Bilgisayarları kullanılacaktır. Python programlama dili tamamen sıfırdan öğretilecek ve Qiskit framework'ü ile Quantum programlama üzerine yoğunlaşılacaktır.\nEğitim bittiğinde Quantum Bilgisayarlarda kullanılan temel prensipleri anlamış, kendi devrelerinizi kurabilen, Quantum algoritmalarını matematiksel olarak ispat edip kodlara dökebilen bir hale geleceksiniz. Sadece IBM bilgisayarları üzerinde değil, tüm quantum bilgisayarlar üzerinde işlem yapabilecek kapasite olacaksınız. Eğitim bittikten sonra kendinizi geliştirmeniz için yapmanız gerekenler ve takip etmeniz gereken kaynaklar ayrıca paylaşılacaktır.\nİyi kodlamalar!",
      "target_audience": [
        "Quantum Programlama Öğrenmek İsteyenler",
        "Python Öğrenmek İsteyenler",
        "Quantum Bilişim Meraklıları"
      ]
    },
    {
      "title": "動画でわかる Java入門講座　基本～オブジェクト編",
      "url": "https://www.udemy.com/course/manga-java/",
      "bio": "「初心者向けのプログラミング本」を読んで挫折した。そんな方向けに、プログラムの基礎からJavaのオブジェクト指向までを、懇切丁寧な動画で教える講座です。",
      "objectives": [
        "Javaの開発環境の構築。",
        "変数、条件分岐、ループ処理、配列など、プログラミングの基本の習得。",
        "Javaのオブジェクト指向についての徹底的な理解。"
      ],
      "course_content": {
        "イントロダクション": [
          "イントロダクション",
          "PDFファイルとソースコードについて",
          "ソースコードについて"
        ],
        "第1章 開発環境の準備": [
          "[章頭] 第1章 開発環境の準備",
          "はじめに",
          "開発環境とは",
          "開発環境の情報",
          "JDK",
          "[操作説明] JDK",
          "環境変数PATHを通す",
          "[操作説明] 環境変数PATHを通す",
          "[コラム] パスとURI",
          "Eclipse",
          "[操作説明] Eclipse",
          "小テスト"
        ],
        "第2章 アプリの作成": [
          "[章頭] 第2章 アプリの作成",
          "ソースコードのダウンロード",
          "プロジェクトの作成",
          "[操作説明] プロジェクトの作成",
          "プログラムの実行",
          "[操作説明] プログラムの実行",
          "CUIとGUI",
          "CUIアプリケーションの作成",
          "[操作説明] CUIアプリケーションの作成1",
          "[操作説明] CUIアプリケーションの作成2",
          "[コラム] CUIアプリの文字化け",
          "GUIアプリケーションの作成",
          "[操作説明] GUIアプリケーションの作成",
          "ワークスペース",
          "[操作説明] ワークスペース",
          "[コラム] プロジェクトのインポート",
          "[操作説明] プロジェクトのインポート",
          "小テスト"
        ],
        "第3章 プログラミングの基本": [
          "[章頭] 第3章 プログラミングの基本",
          "ソースコードのダウンロード",
          "プログラムの処理順",
          "コメント",
          "エラー",
          "[操作説明] エラー",
          "2進数",
          "16進数",
          "変数という概念",
          "[補足説明] 変数という概念",
          "小テスト"
        ],
        "第4章 数値変数と演算子": [
          "[章頭] 第4章 数値変数と演算子",
          "ソースコードのダウンロード",
          "[操作説明] 個別のサンプルコードのインポート方法",
          "変数の初期化とint",
          "byte short int long",
          "float double",
          "boolean",
          "キャスト",
          "演算子1 算術演算子",
          "[コラム] シフト演算子",
          "演算子2 比較演算子",
          "演算子3 論理演算子",
          "[コラム] ビット演算子",
          "演算子4 代入演算子",
          "java.lang.Math",
          "小テスト"
        ],
        "第5章 様々な処理": [
          "[章頭] 第5章 様々な処理",
          "ソースコードのダウンロード",
          "[補足説明] 条件分岐 if文",
          "条件分岐 if文",
          "条件分岐2 else",
          "条件分岐3 if文の入れ子",
          "[コラム] 波括弧の省略",
          "[コラム] 条件演算子",
          "[コラム] switch文",
          "[補足説明] ループ処理と配列",
          "ループ処理1 for文",
          "[コラム] while文とdo while文",
          "ループ処理2 for文の入れ子",
          "ループ処理3 break",
          "ループ処理4 continue",
          "ループ処理5 無限ループ",
          "小テスト"
        ],
        "第6章 文字列と配列": [
          "[章頭] 第6章 文字列と配列",
          "ソースコードのダウンロード",
          "[補足説明] 基本型と参照型",
          "基本型と参照型",
          "複数の参照",
          "null",
          "文字 char型",
          "[補足説明] 文字列",
          "文字列1 文字列とString型",
          "文字列2 文字列の連結",
          "配列1 配列を作る",
          "[補足説明] 配列",
          "配列2 配列を作る2",
          "配列3 ループ処理と配列",
          "[補足説明] ループ処理と配列",
          "配列4 基本型の配列と参照型の配列",
          "配列5 多次元配列",
          "配列6 多次元配列2",
          "配列7 配列の複製",
          "配列8 配列の複製2",
          "配列9 配列のダンプ",
          "小テスト"
        ],
        "第7章 クラスとオブジェクト1": [
          "[章頭] 第7章 クラスとオブジェクト1",
          "ソースコードのダウンロード",
          "オブジェクト指向とは",
          "オブジェクト指向とは2",
          "オブジェクト指向とは3",
          "クラスとフィールドとメソッド",
          "アクセス制御1 publicとprivate",
          "クラスの構造",
          "new インスタンス オブジェクト",
          "staticフィールドとstaticメソッド",
          "小テスト"
        ],
        "第8章 メソッド": [
          "[章頭] 第8章 メソッド",
          "ソースコードのダウンロード",
          "メソッドの基本",
          "void、引数なし",
          "処理途中でのreturn",
          "メソッド内のローカル変数",
          "参照型の引数",
          "メソッドのオーバーロード",
          "可変長引数",
          "コンストラクタ",
          "mainメソッド",
          "例外1 throwとthrows",
          "例外2 try catch文",
          "再帰",
          "小テスト"
        ],
        "第9章 クラスとオブジェクト2": [
          "[章頭] 第9章 クラスとオブジェクト2",
          "ソースコードのダウンロード",
          "パッケージ",
          "継承1 スーパークラスとサブクラス",
          "継承2 superとthis",
          "継承3 メソッドのオーバーライド",
          "継承4 オブジェクトのキャスト",
          "アクセス制御2 protectedと修飾子なし",
          "定数",
          "継承5 抽象クラス",
          "継承6 多重継承とインターフェース",
          "継承7 インターフェースの実装の仕方",
          "小テスト"
        ]
      },
      "requirements": [
        "事前の準備は特に必要ありません。",
        "統合開発環境のEclipseを使います。ダウンロードの仕方や導入方法、使用方法は、講座内で説明します。",
        "Windowsでの開発を、前提とした説明をしています。"
      ],
      "description": "このコースは、プログラミングの基本から始めて、Javaのオブジェクト指向を理解できるまでの知識を網羅しています。初心者が理解するのは難しいJavaのオブジェクト指向を、徹底的にかみ砕いて丁寧に解説していきます。\nこのコースを習得すれば、次のような事ができるようになります。\n- JDKとEclipseを利用した、Javaの開発環境の構築。\n- 変数、演算子、条件分岐といった、プログラミングの基本の習得。\n- Javaの参照型の使い方や、その内部的な仕組みについての理解。\n- Javaのクラスとオブジェクトについての理解。\nコースで紹介されるコードは、サンプルコードとして、全てダウンロードすることができます。\nまた、副読本として、800ページ以上のマンガが掲載された、マンガでわかる解説PDFもダウンロード可能です。こちらも利用して、さらに理解を深めることができます。\n‥‥‥‥‥‥‥‥‥‥\nこのコースは、大きく分けて以下のような構成になっています。\n\n● 開発環境の構築と、ツールの基本操作の習得\n\nJDKとEclipseを導入して、Eclipseの基本操作を習得します。\n・第1章 開発環境の準備\n・第2章 アプリの作成\n● Javaの仕様に沿った、プログラミングの基礎知識の習得\n\n変数、演算子、分岐処理、ループ処理など、プログラミングの基礎を学びながら、Javaでのプログラムの書き方を身に付けていきます。\n・第3章 プログラミングの基本\n・第4章 数値変数と演算子\n・第5章 様々な処理（条件分岐、ループ処理）\n● 参照型\n文字列、配列を学びながら、Javaの参照型の使い方や、その内部的な仕組みについて理解します。\n・第6章 文字列と配列\n\n● クラスとオブジェクト\nオブジェクト指向言語であるJavaのクラスとオブジェクトの仕組みについて、詳しく丁寧に解説していきます。\n・第7章 クラスとオブジェクト1\n・第8章 メソッド\n・第9章 クラスとオブジェクト2\n・第10章 クラスとオブジェクト3\n・第11章 Javaのシステム",
      "target_audience": [
        "プログラミング未経験者や初心者。",
        "過去にプログラミングの勉強をしたことがあるが挫折した人。",
        "Javaのオブジェクト指向について知識がない人。"
      ]
    },
    {
      "title": "ReactiveX - RxJs: De cero hasta los detalles - 2021",
      "url": "https://www.udemy.com/course/rxjs-de-cero-hasta-los-detalles/",
      "bio": "Todo lo que necesitas saber sobre observables, subscribers, operadores y programación reactiva",
      "objectives": [
        "Aprender a usar extensiones reactivas",
        "Comprender el por qué de las mismas",
        "Dominar el tipado de observables, operadores y demás",
        "Aprender a leer la documentación oficial y los diagramas de canicas",
        "Este curso te ayudará si usas RxDart, RxJava, RxJS, RxSwift o cualquier forma de extensiones reactivas"
      ],
      "course_content": {
        "Introducción": [
          "Curso Legacy",
          "Introducción",
          "¿Cómo funcionará el curso?",
          "¿Cómo realizar preguntas? y ¿Cómo crear marcadores?",
          "Instalaciones necesarias",
          "¡Únete a Nuestra Comunidad de DevTalles en Discord!"
        ],
        "Introducción a las extensiones reactivas y a la programación reactiva": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Conceptos generales",
          "¿Qué es ReactiveX? ¿Cómo funciona?",
          "¿Cómo leer los diagramas de canicas?",
          "Configuración del proyecto"
        ],
        "Observables": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Nuestro primer observable",
          "Observer y subscriber",
          "Nota: Biblioteca de ejercicios",
          "Subscription y unsubscribe",
          "Terminar observables en cadena",
          "Subject",
          "Subject - Parte 2",
          "Código fuente de la sección"
        ],
        "Funciones para crear Observables": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "of",
          "fromEvent",
          "range",
          "interval y timer",
          "timer - Configuraciones especiales",
          "asyncScheduler",
          "Más ejemplos con from y of",
          "Código fuente de la sección"
        ],
        "Operadores básicos": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "¿Qué son los operadores?",
          "map",
          "pluck",
          "mapTo",
          "filter",
          "Cadenas de operadores",
          "tap",
          "Laboratorio - ProgressBar",
          "Laboratorio - ProgressBar (segunda parte)",
          "reduce",
          "scan",
          "Código fuente de la sección"
        ],
        "Operadores no tan comunes": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "take",
          "first",
          "takeWhile",
          "takeUntil",
          "skip",
          "distinct",
          "distinctUntilChanged",
          "distinctUntilKeyChanged",
          "Código fuente de la sección"
        ],
        "Operadores que trabajan con tiempo": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "debounceTime",
          "throttleTime",
          "sampleTime",
          "sample",
          "auditTime",
          "Código fuente de la sección"
        ],
        "Ajax - Peticiones ajax usando RxJs/ajax": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Conceptos generales de una petición ajax usando Fetch",
          "Manejo de errores con el Fetch Api",
          "Petición usando ajax de RxJs - catchError",
          "getJSON",
          "Diferencias entre getJson y ajax",
          "Métodos Post, Put, Delete",
          "Código fuente de la sección"
        ],
        "Operadores de transformación": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Introducción al problema y necesidad de operadores de transformación",
          "mergeAll",
          "Tipando los operadores",
          "mergeMap",
          "Más ejemplos con mergeMap",
          "switchMap",
          "switchMap vs mergeMap",
          "concatMap",
          "exhaustMap",
          "Ejercicio de comparación entre el mergeMap, switchMap y exhaustMap",
          "Código fuente de la sección"
        ],
        "Operadores y métodos de combinación de observables": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "startWith",
          "endWith",
          "Lab - startWith",
          "concat - Función",
          "merge - Método",
          "combineLatest",
          "forkJoin",
          "forkJoin Lab - Caso de uso más común",
          "Código fuente de la sección"
        ]
      },
      "requirements": [
        "Conocimiento de JavaScript básico es recomendado",
        "Conocimiento de TypeScript es opcional, pero recomendado",
        "Tener conocimiento básico de HTML es recomendado"
      ],
      "description": "Nota Legacy:\nDespués de varios años desde el lanzamiento inicial de este curso, queremos informarte que el mismo ha pasado a ser versión legacy. Esto implica que su contenido no recibirá actualizaciones adicionales y nuestro equipo de Co-instructores no continuará proporcionando soporte a preguntas relacionadas con este curso.\nSin embargo, queremos que sigas aprendiendo con confianza. Por eso, te invitamos a unirte a nuestra comunidad en Discord, donde podrás conectar con otros estudiantes, compartir conocimientos y recibir apoyo de nuestra comunidad.\n¡Gracias por tu comprensión y por ser parte de nuestra comunidad de aprendizaje!\n\n\nEste curso de ReactiveX está orientado a enseñarte desde los fundamentos de las extensiones reactivas hasta los detalles del tema. Pueda que ya usemos las extensiones reactivas en nuestras aplicaciones, ya que muchos frameworks lo traen incluido, pero usualmente no lo aprovechamos al máximo por desconocimiento del tema.\nMi objetivo con este curso es llevarte desde lo básico hasta temas avanzado de las extensiones reactivas, mostrándote cómo leer la documentación oficial, interpretar los diagramas de canicas y demás recursos para que puedas seguir tu camino cuando quieras especializarte aún más.\nEn este curso aprenderás temas como:\nObservables\nCrear observables desde cero\nMétodos para crear observables\nGran variedad de operadores:\nmap\nswitchMap\ntap\nfilter\nsample\nsampleTime\ndistinct\ntake\nreduce\nmuchos más…\nOrden de operadores\nTipado de observables y operadores\nBuenas prácticas\nY mucho más\nAl finalizar el curso, crearás tu propia biblioteca de métodos y operadores para que puedas consultarla tantas veces que necesites para refrescar la memoria o bien para aplicar lo aprendido en tus propios programas.\nCada operador y función propia de RXJS tiene su presentación con diagramas que te ayudarán a comprenderlos mejor y de forma sencilla.\n\n\nTodo el código aquí realizado es tuyo y tiene por objetivo que te sirva de documentación bibliográfica para consultas posteriores al curso, lo que ha convertido en este curso en el más popular sobre esta tecnología.",
      "target_audience": [
        "Personas que quieran mejorar sus habilidades con las extensiones reactivas",
        "Personas que deseen saber más sobre ReactiveX y su implementaicón",
        "Personas que ya usen RxJS y quieran simplificar su código",
        "Personas que no sepan nada de programación reactiva"
      ]
    },
    {
      "title": "Criando Robôs com Python - Automatizando Processos",
      "url": "https://www.udemy.com/course/criando-robos-em-python/",
      "bio": "Python 3 Completo - Domine a Construção de Automações Web, Automações GUI e Automações Inteligentes",
      "objectives": [
        "Otimizar processos desenvolvendo automações com Python de maneira fácil e descomplicada.",
        "Dominar grandes bibliotecas do Python como Selenium, Xlwt/Xlrd (Excel) utilizando exemplos reais de nosso dia a dia.",
        "Otimizar seu tempo fazendo os robôs trabalharem por você, criando automações robustas e inteligentes que farão o serviço pesado pelo usuário.",
        "O básico do Python, aplicando em seu dia a dia, seja no trabalho, nos estudos ou nas tarefas repetitivas.",
        "Controlar navegadores de internet, manipular planilhas Excel e utilizar API’s através de scripts em Python.",
        "Enviar e-mails com anexo, HTML e templates profissionais através de scripts Python",
        "Controlar interfaces com PyAutoGui e automatizar jogos, tarefas repetitivas em qualquer sistema"
      ],
      "course_content": {
        "Boas-vindas e Visão Geral do Curso": [
          "Boas-vindas e Apresentação do Instrutor",
          "Navegação pelo Curso e Utilização da Plataforma Udemy",
          "Estrutura do Curso e Recursos Disponíveis",
          "Perguntas frequentes"
        ],
        "Configuração do Ambiente de Desenvolvimento": [
          "Linux: Instalação do Python e suas bibliotecas",
          "Windows: Instalação do Python e suas bibliotecas",
          "MacOS: Instalação do Python e suas bibliotecas"
        ],
        "Fundamentos de Python para Automação": [
          "Criando nosso primeiro programa em Python",
          "Continuação do Básico do Python"
        ],
        "Automação Web - Web Scraping com Beautiful Soup": [
          "O que é Web Scraping?",
          "HTML e a estrutura de um site",
          "Material para Download",
          "Introdução ao Beaultiful Soup",
          "Web Scraping - Conceitos Essenciais",
          "Exercício Resolvido: Tabela de alunos",
          "Exercício Resolvido: Tabela de interesse dos alunos",
          "Web Scraping em paginas da internet com Requests",
          "Desafio Web Scraping: Recuperando de todos links de uma pagina"
        ],
        "Automação Web - Introdução ao Selenium": [
          "Programando nosso primeiro robô",
          "Resultado da pesquisa do domínio",
          "Utilizando Listas em nosso código",
          "Lendo domínios de um arquivo Excel",
          "Escrevendo resultados em um arquivo de texto"
        ],
        "Automação Web - Automatizando buscas na web com Selenium": [
          "Desafio Google: Realizando buscas no Google e salvando resultados",
          "Pesquisando no Google",
          "Recuperando a quantidade de resultados encontrados",
          "Recuperando o número de páginas",
          "Navegando entre as páginas do Google",
          "Recuperando notícias e links do Google",
          "Salvando dados em um arquivo de texto",
          "Desafio Youtube: Realizando busca de vìdeos no Youtube e recuperando resultados",
          "Instalando dependências",
          "Abrindo Youtube e buscando vídeos",
          "Criando classe Youtube e controlando o Chrome",
          "Recuperando títulos dos vídeos do Youtube",
          "Percorrendo todas as páginas e finalizando a automação"
        ],
        "Automação de Interfaces Gráficas - Introdução às interfaces gráficas": [
          "Aula em Slides (Formato PDF)",
          "O que é GUI?",
          "Por quê automatizar a GUI?",
          "EXTRA: Criando uma VM na AWS Cloud (Opcional)",
          "EXTRA: Instalando e configurando o Python na VM (Opcional)"
        ],
        "Automação de Interfaces Gráficas - Automatizando ações do mouse": [
          "Controlando o Mouse com PyAutoGUI",
          "Funções do Mouse",
          "Exercício Resolvido: Controlando o Paint"
        ],
        "Automação de Interfaces Gráficas - Reconhecimento de Imagens": [
          "Conceitos avançados de Localização de imagens",
          "Localizando imagens com PyAutoGUI"
        ],
        "Automação de Interfaces Gráficas - Automatizando ações no teclado": [
          "Controlando o Teclado com PyAutoGUI"
        ]
      },
      "requirements": [
        "Noções Básicas de Informática",
        "Noções básicas de Lógica de programação"
      ],
      "description": "Bem-vindo ao Criando Robôs com Python - Automatizando Processos, o curso definitivo para aprender a codificar e automatizar tarefas com Python. Com mais de 900 avaliações e uma média de 4,1 estrelas, este é um dos cursos de Python mais bem avaliados.\nCom mais de 72 aulas, este curso oferece a experiência de aprendizado mais completa sobre automação com Python disponível online. Mesmo sem nenhuma experiência prévia em programação, você irá do iniciante ao especialista. Aqui está o porquê:\nAtualizações Constantes: Conteúdos novos, projetos e módulos são adicionados regularmente, sempre com base no feedback dos alunos - você decide!\nInstrutor Experiente: O curso é ministrado por um profissional de TI que vive e respira programação de softwares.\nPreparado para 2024: Você aprenderá as ferramentas e tecnologias mais recentes usadas por empresas como Apple, Google e Netflix.\nAulas Práticas e Projetos Reais: Aprenda com vídeos animados, exemplos do mundo real e projetos práticos, incluindo robôs para YouTube, Google, Telegram e muito mais.\nFeedback Testado: O currículo foi desenvolvido ao longo de 5 anos com testes e feedback de milhares de alunos.\nJá ensinamos mais de 4.700 alunos a codificar, muitos dos quais se tornaram desenvolvedores profissionais e criaram seus próprios projetos.\nO que você vai aprender?\nEste curso vai além da simples programação. Ele ensina você a construir programas que trabalham por você, eliminando tarefas repetitivas e liberando seu tempo para focar no que realmente importa.\nA estrutura do curso foi construída de forma modular, assim qualquer aluno pode identificar o ponto de maior interesse para resolver seu problema e pular diretamente para essa etapa, agilizando seu aprendizado! Lembrando que para a emissão do certificado, o curso todo deve ser completado.\nO curso está dividido em três pilares centrais para um aprendizado completo e focado:\nPilar 1: Automação Web\nWeb scraping\nControle de navegadores\nBuscas automatizadas\nPreenchimento de formulários web\nPilar 2: Automação de Interfaces Gráficas\nControle de mouse e teclado\nReconhecimento de imagens\nInteração com interfaces gráficas de desktop\nPilar 3: Automação Inteligente\nEnvio de e-mails automáticos\nUtilização de APIs\nIntegração com aplicações externas como Telegram\nTemas Práticos\nProgramação Python\nControle de mouse e teclado com PyAutoGUI\nReconhecimento de imagens com Python\nCriação de VMs na AWS\nAutomação de tarefas no Excel\nConversão de arquivos de texto e PDF para Excel\nCriação de gráficos 2D e 3D\nUso de fórmulas e muito mais...\nProjetos Reais\nVocê praticará com projetos reais como:\nRegistro br\nGoogle\nYouTube\nJogo do Google Chrome\nTelegram\nAPI do GitHub\n\n\nPor que se inscrever agora?\nPraticidade e Eficiência: Aulas práticas e exemplos reais.\nOtimização do Tempo: Aprenda a automatizar processos repetitivos e concentre-se nas atividades que importam para você.\nApoio Completo: Fóruns de discussão, materiais adicionais.\n\nEste curso foi projetado para quem quer otimizar o tempo usando Python, uma linguagem simples com milhares de pacotes e ampla documentação.\nNão perca tempo! Matricule-se agora e transforme a maneira como você trabalha com automação Python. Seja bem-vindo!",
      "target_audience": [
        "Desenvolvedores Python",
        "Interessados em automatizar processos",
        "Desenvolvedores de Bots",
        "Interessados na biblioteca Selenium do Python",
        "Interessados em controlar arquivos Excel com Python",
        "Interessados em enviar e-mails automáticos com Python",
        "Interessados em integrações com API's utilizando Python",
        "Interessados em controlar interfaces gráficas com PyAutoGUI",
        "Interessados em automatizar jogos e ações repetitivas"
      ]
    },
    {
      "title": "科学技術計算のためのPython入門",
      "url": "https://www.udemy.com/course/science_by_python/",
      "bio": "Pythonの初歩的な文法からデバッグ、可視化、計算高速化までトータルスキルを学ぼう",
      "objectives": [
        "Pythonで科学技術計算や数値計算を行う上で必要なプログラミングの知識",
        "数値計算で使用頻度の高いNumpy, Scipy, Numba, Cupyといった数値計算ライブラリの使い方",
        "計算の前後で必要となってくるファイル入出力を様々な形式(json, hdf, xlsx)で行える",
        "科学技術計算コード開発で必要となってくるPyCharmの基本の使い方やデバッグの方法、VCSとの連携方法"
      ],
      "course_content": {
        "はじめに": [
          "コースの概要説明"
        ],
        "環境構築": [
          "Anacondaとは",
          "Anacondaインストール",
          "仮想環境の作成",
          "Jupyter Notebook / Google Colabとは",
          "Jupyter Notbookの使い方",
          "Google Colabの使い方",
          "講座で使用するファイル等"
        ],
        "Pythonの基本的な文法": [
          "四則演算",
          "変数・予約語・変数の型",
          "リスト・タプル・辞書・集合",
          "リストの結合 extend 内包表記",
          "forループ",
          "if文",
          "while文",
          "ライブラリのimport",
          "datetime, OS, pathlib",
          "関数",
          "args kwargs lambda",
          "ファイル入出力",
          "print関数",
          "オブジェクト指向",
          "クラスの基本",
          "クラスの継承"
        ],
        "Numpyの基礎": [
          "Numpy Array",
          "統計量",
          "行列",
          "copy",
          "フィルタリング Nanの取り扱い",
          "ソート",
          "ブールインデックス where",
          "Arrayを結合 concatenate",
          "ユニバーサル関数化"
        ],
        "可視化 matplotlib seabornの基礎": [
          "scatter, plot, hist contour, heatmap",
          "スタイルの設定",
          "グラフの塗りつぶし 複数グラフの描画"
        ],
        "Numpy Scipyの応用": [
          "補間とは",
          "補間",
          "数値微分とは",
          "数値微分",
          "数値積分とは",
          "数値積分",
          "畳み込みとは",
          "畳み込み"
        ],
        "Pandasの基礎": [
          "Series DataFrameの生成",
          "Pandasにおけるファイル入出力",
          "DataFrameの取り扱い",
          "GroupBy"
        ],
        "PyCharm": [
          "PyCharmとは",
          "PyCharmのインストール",
          "PyCharmの使い方(前半)",
          "PyCharmの使い方(後半)",
          "PyCharmによるデバッグ",
          "Gitとは",
          "Gitのインストール【Windowsユーザー向け】",
          "Githubのアカウント作成",
          "PyCharmとGithubとの連携"
        ],
        "ファイル入出力": [
          "ファイル入出力 json",
          "HDFとは",
          "ファイル入出力 HDF",
          "ファイル入出力 エクセル",
          "glob",
          "tqdm"
        ],
        "ParaViewによる可視化": [
          "ParaViewとは",
          "VTKフォーマット",
          "ParaViewのインストール",
          "ParaViewの使い方"
        ]
      },
      "requirements": [
        "必須：パソコンの基礎的な知識(コマンドプロンプト ターミナルの使い方)",
        "必須：高校レベルの数学(微分、積分とは何か)",
        "ベター：C言語やFortranなどプログラミングの経験"
      ],
      "description": "【このコースは誰に向けたものか？】\n本コースは、Pythonで科学技術計算や数値シミュレーションに取り組みたいという方に向けたPythonの入門講座です。\n科学技術計算や数値シミュレーションといえば、今でもよく使われていますが、Ｃ言語やFortranというコンパイル型の言語がメインでした。\nしかしながら、今後のプログラミング言語としてのポテンシャルを考えると、今後は5 ~ 10年という中長期的な視点で、科学技術計算でもＣ言語やFortranの代わりにPythonを使うという機会が増えてくる事は間違いないでしょう。\n\n\nこの為、\nこれから大学の研究室に配属されて数値計算のコードを書く学生さん\n今までC言語・Fortranで数値計算コードを書かれていた若手の研究者・エンジニア\n企業で内製ソルバーの開発担当を任された研究者・技術者の方\nこの講座はそういった方々に向けて作られた講座です。\n\n\n【人事の方/マネージャークラスの方へ】\n本コースは次のような使い方が可能です。\n・製造業などで市販のソフトウェアを使っているが、今後、社内でソフトウェアの内製化を検討しており、ソフトウェア人材を育成したい\n・大学の研究室で数値計算に取り組んでおり、今までFortran / C言語を使っていたが機械学習などとの相性も考え、研究室全体の方針としてPythonに乗り換えたい\n\n\n【Pythonで数値計算なんて大丈夫か？】\n結論から申し上げますと大丈夫です。\nPythonはインタプリタ型の言語だから計算速度が要求される科学技術計算には向かない、やっぱりコンパイル型の言語であるC言語やFortranの方が望ましい、そう考える人もいるかもしれません。\nしかしながら、Pythonは数値計算を高速化するライブラリが数多くあります。例えば、代表的なライブラリがNumpyです。\nNumpyの演算は基本的にC言語と同じくらいの速度が出ると考えていただいても、そんなに大きな間違いではありません。\nまたNumpyの他にScipy, NumbaといったCPUベースの高速化ライブラリもありますし、CupyというGPUによる演算をサポートしたライブラリもあります。これらのライブラリのおかげで、Pythonの最大の欠点である計算が遅いという欠点はほぼ克服されていると考えてOKです。\n\n\n【Python x 数値計算の組み合わせ】\nPythonは数値計算のライブラリだけでなく、ファイル入出力や可視化のライブラリも充実しています。\nこの為、計算結果を読みだしたり、吐き出したりするのにいちいち自分でゼロからプログラムを書く必要はありません。\nつまり、Pythonを使うことで科学技術計算をトータル的にカバー可能です。\nライブラリのお陰で短く、そして強力な機能を実装できます。\nコードをたくさん書く必要がないおかげでバグも少ないし、成果(計算結果)が出始めるまでも早いという、いいことづくめだと思います。\n私は日本で科学技術計算向けのコードをPythonで書くということがもっと普及したらいいなと思っています。\nこういうモチベーションで、この講座を作成しました。Python x 科学技術計算という組み合わせの教材はまだそこまで多くありません。\n\n\n【何が学べる？】\n科学技術計算や数値計算で必要となってくるプログラミングの知識全般です。\n具体的にはコースの概要を見ていただきたいですが、以下にも挙げておきます\n・数値計算で必要となってくるPythonの基礎知識(四則演算 ~ オブジェクト指向まで)\n・シミュレーションコード開発時に使う統合開発環境(PyCharm)の使い方とデバッグの基礎\n・Gitによるコードの管理\n・数値計算で非常によく使うNumpy, Scipy, Matplotlibの基礎知識\n・前処理、後処理などで使うことになる種々のファイル入出力\n・数値計算を高速化するためのNumba, Cupyの基礎\n・可視化ツールとして使う可能性の高いParaViewの使い方\nなど",
      "target_audience": [
        "研究室に配属されて数値計算コードを開発することになった学生",
        "科学技術計算に興味のある大学の研究者や企業の研究者",
        "昔はC言語やFortranでコードを書いていたが、Pythonでの科学技術計算コードの開発に興味のある数値計算エンジニア"
      ]
    },
    {
      "title": "Domina la Programación C# con Visual Studio DESDE CERO",
      "url": "https://www.udemy.com/course/aprende-programacion-con-c-sharp-y-visual-studio-desde-cero/",
      "bio": "Aprende una sólida base de programación con Visual Studio, C# y el Framework .NET. y programa a nivel profesional",
      "objectives": [
        "Programación DESDE CERO con C# utilizando Visual Studio 2017.",
        "Conocerás en profundidad como se crean programas y proyectos con C# y Visual Studio",
        "Aprenderás una sólida base de C# y podrás aplicarla a todos tus proyectos.",
        "Empezar a trabajar a nivel profesional en el sector de programación con C# .NET y Visual Studio",
        "Aprenderás Variables. Estructuras de Control, Sintaxis, Funciones y Bucles.",
        "Obtendrás una sólida base para acceder niveles de conocimiento mas altos en C#"
      ],
      "course_content": {
        "Presentación del curso y Herramientas": [
          "Que vas a aprender en este curso",
          "Instructor Mariano Rivas",
          "Únete a la comunidad de Discord de Master Devs",
          "Uso de la plataforma Udemy"
        ],
        "Introducción a C# y .NET": [
          "Instalando Visual Studio Community 2017",
          "Introducción a Visual Studio 2015",
          "Introducción e historia de C#",
          "El Framework .NET, CLR y FCL",
          "Escribiendo HolaMundo.cs",
          "ACTUALIZACIÓN",
          "Compilando y ejecutando en consola HolaMundo.cs",
          "Escribiendo Hola Mundo en Visual Studio",
          "Creando App Saludo con Strings[] args",
          "Tipos de errores en C#",
          "Herramientas de Debuggin y Breakpoints",
          "Creando una Aplicación : Eres Mayor de edad?"
        ],
        "Clases y Objetos. Creando una App de Valoraciones": [
          "Creando el proyecto \"El libro de valoraciones\"",
          "Creando una Lista para almacenar las valoraciones",
          "Introducción a clases y Objetos",
          "Clase Lista y creación de un objeto",
          "Constructores",
          "Variables de clase como tipos de referencia",
          "Modificadores de acceso public private y static",
          "Definiendo Funcionalidades de la App Valoraciones",
          "Creación de Clase Cálculo para App Valoraciones",
          "Conectando Clases y Métodos App Valoraciones",
          "Calculando el promedio de valoración",
          "Calculando Valoración Mínima y Máxima"
        ],
        "Assemblies y Referencias.": [
          "Que son los Assemblies",
          "Como crear un Assemblies DLL de App Valoraciones",
          "Explorando Assemblies del proyecto App Valoraciones",
          "Importando un Assemblie externo",
          "Creando proyecto Assemblie de Test Unitario",
          "Referenciando Proyecto Test Unitario con App Valoraciones",
          "Testeando Métodos y números decimales"
        ],
        "Variables. Tipo Valor y Tipo Referencia": [
          "Variables Tipo Referencia",
          "Variables Tipo Valor",
          "Variable Tipo Valor struct",
          "Variable Tipo Valor enum",
          "Inmutabilidad",
          "Arrays"
        ],
        "Métodos, campos y propiedades": [
          "Estructura básica de un Método",
          "Escribiendo métodos en App Valoraciones",
          "Campos y propiedades GET - SET"
        ],
        "Estructuras de control": [
          "Estados",
          "Variables",
          "Operadores y expresiones",
          "Condicionales If Then Else",
          "Aplicando condicionales a Libro de Valoraciones",
          "Switch Case",
          "Bucles",
          "Saltando de los bucles",
          "Recursos externos"
        ]
      },
      "requirements": [
        "NO se requiere conocimientos previos de programación, empezamos desde cero.",
        "Todas las herramientas utilizadas en el curso son gratuitas y los materiales están incluidos.",
        "Necesitarás un PC con Windows o un Mac Osx y Tener un control básico a nivel usuario."
      ],
      "description": "Con este curso aprenderás desde cero y paso a paso todo lo necesario para que domines el lenguaje de programación C#  con Visual Studio desarrollando aplicaciones de consola y entendiendo todos los conceptos básicos y principales.\nEmpezaremos con la interface de Visual Studio y la programación desde cero.\nAprenderás el uso de Variables, estructuras de control, bucles, funciones condicionales y funciones.\nAprenderemos Visual Studio a nivel básico medio.\nDesarrollaremos aplicaciones de consola durante todo el curso.\nNo necesitarás conocimientos previos de programación.\nCon el lenguaje C# y usando Visual Studio podrás afrontar cualquier desarrollo interactivo que te propongas.\nCuando acabes el curso tendrás una base sólida y profesional de programación.\nC# es un lenguaje profesional que nos va permitir programar aplicaciones de escritorio, móviles , tabletas, smartphones, paginas web, videojuegos y VR.\nEl curso se podrá hacer desde cualquier sistema operativo tanto Mac Osx como Win PC.\nEs un curso pensado para principiantes que quieran entender desde cero todo el entorno de programación con C# y Visual Studio.\n\nCualquier duda me puedes contactar por mensaje privado y estaré encantado de poder ayudarte en tu desición.\n\nPuedes revisar los videos previos y si no estás conforme con la compra recuerda que tienes garantía de 30 días de devolución.",
      "target_audience": [
        "Para todos los que estén interesados en aprender a programar desde cero con C# y Visual Studio.",
        "Para todos los que quieran entender como funciona el Framework .NET de Microsoft.",
        "Para todos los que quieran aprender conceptos profesionales de C# en profundidad."
      ]
    },
    {
      "title": "Corso Rapido di Programmazione Java",
      "url": "https://www.udemy.com/course/corso-rapido-di-programmazione-java/",
      "bio": "Parti da zero e impara a sviluppare un applicazione completa in Java in sole 2 settimane!",
      "objectives": [
        "La sintassi di Java con tutti i costrutti e i paradigmi fondamentali",
        "Utilizzare Netbeans come IDE Avanzato per scrivere il tuo codice",
        "Sviluppare le tue app utilizzando la programmazione ad oggetti",
        "Realizzare in modo semplice e rapido le interfacce grafiche per le tue App",
        "Dare vita da subito alle tue prime applicazioni complete e distribuirle"
      ],
      "course_content": {
        "Introduzione": [
          "Introduzione",
          "Conosciamo meglio Java",
          "Perchè imparare Java?",
          "Scarica qui le versioni di Java JDK e NetBeans",
          "Procuriamoci l'occorrente",
          "Settaggio delle variabili di ambiente",
          "La nostra prima applicazione",
          "Come utilizzare NetBeans",
          "Come e Perchè utilizzare i commenti"
        ],
        "SINTASSI, CONVENZIONI E COSTRUTTI DI BASE": [
          "Gli Identificatori",
          "Le convenzioni",
          "Le Variabili",
          "Approfondimento sui tipi di dati",
          "Utilizzo delle variabili tipizzate-Parte 1",
          "Utilizzo delle variabili tipizzate-Parte 2",
          "Utilizzo delle variabili tipizzate-Parte 3",
          "Utilizzo delle variabili tipizzate-Parte 4",
          "Operatori in Java",
          "Il Costrutto IF",
          "Il Costrutto Switch",
          "Approfondimento:I Costrutti IF e Switch",
          "Il Ciclo FOR",
          "Il Ciclo while"
        ],
        "LA PROGRAMMAZIONE AD OGGETTI": [
          "La Programmazione ad Oggetti (OOP)",
          "Gli Oggetti",
          "Le Classi",
          "Costruzione di un oggetto",
          "I Metodi-Parte 1",
          "I Metodi-Parte 2",
          "Organizzazione delle classi- I Package- Parte 1",
          "Organizzazione delle classi-I Package- Parte 2",
          "Ereditarietà –Parte 1",
          "Ereditarietà –Parte 2",
          "Ereditarietà –Parte 3",
          "Gerarchia delle classi",
          "Polimorfismo",
          "Approfondimento: Polimorfismo",
          "I Modificatori di accesso",
          "Incapsulamento",
          "I Metodi Get e Set"
        ],
        "LIBRERIE DI SISTEMA": [
          "Le Librerie di Sistema",
          "Approfondimento:Le librerie standard",
          "La libreria scanner e l’input da tastiera"
        ],
        "INTERFACCE GRAFICHE": [
          "Interfacce Grafiche-La libreria swing-Parte 1",
          "Interfacce Grafiche-La libreria swing-Parte 2",
          "Le Interfacce Grafiche Da Editor Netbeans",
          "Applicazione di esempio-Parte 1",
          "Applicazione di esempio-Parte 2",
          "Il Debug del codice"
        ],
        "GESTIONE DELLE ECCEZIONI E DISTRIBUZIONE DELLE APPLICAZIONI": [
          "Il Costrutto Try-Catch",
          "Approfondimento:Gestire le eccezioni con Try-Catch",
          "La distribuzione delle applicazioni"
        ]
      },
      "requirements": [
        "Utilizzo basico del pc"
      ],
      "description": "Il Corso rapido di “Programmazione Java” è stato realizzato con l’obiettivo di insegnarti a diventare un\nprogrammatore Java in tempi brevissimi e nel modo più semplice e lineare\npossibile. Non hai mai programmato prima? Nessun problema! Si parte da zero, quindi dalle basi della programmazione, e in sole 2 settimane, con un po' di costanza potrai imparare tutta la sintassi principale del linguaggio ed essere in grado di distribuire le tue prime applicazioni complete! A breve saranno disponibili nuove sezioni che esploreranno le caratteristiche aggiornate della nuova versione di java e in più sono previsti esercizi alla fine di ogni sezione.\n\nJava è attualmente il linguaggio di programmazione più richiesto in assoluto dalle aziende operanti nel settore Information Technology (IT). Inoltre Java è alla base di un insieme di tecnologie molto utilizzate in diversi ambiti tra cui la realizzazione di App per Smartphone. Di conseguenza Imparare a programmare con questo linguaggio può davvero fare la differenza in questo particolare momento di crisi occupazionale.\nI programmatori Java che si occupano della parte di sviluppo applicativo sono sempre richiesti e ben retribuiti dalle aziende, proprio perché hanno un ruolo fondamentale nell’innovazione tecnologica che è in continuo evolversi. Un curriculum che comprende lo skill di “Java Developer” è in pratica un passaporto sicuro per lavorare in qualsiasi parte del mondo, fortunatamente anche qui in Italia ;).\nCon questo corso, anche se non hai mai programmato prima, imparerai in modo semplice e graduale tutti i concetti fondamentali di questo linguaggio, quindi la sintassi completa, la programmazione orientata agli oggetti, la creazione d’interfacce grafiche utente (GUI), la gestione delle eccezioni ecc .\nArriverai a fine corso a realizzare un applicazione completa e pronta da distribuire!\n\nSe hai già familiarità con i concetti della programmazione object-oriented, potrai imparare in un modo più semplice a convertire le tue conoscenze nello sviluppo di applicazioni Java.\nIl corso è stato comunque concepito per essere rivolto a studenti che non hanno alcuna esperienza di programmazione, niente quindi è dato per scontato.\nDopo aver completato questo corso, potrai, con un po’ di pratica e un minimo di approfondimento teorico, diventare un professionista esperto in grado di candidarti per la figura aziendale di programmatore java, oppure offrire consulenza e servizi pratici alle migliaia di aziende che ovunque utilizzano questo linguaggio.\nInoltre Java è il passaggio obbligato che ti consente di acquisire le competenze necessarie per affrontare il successivo studio della programmazione Android, altro linguaggio in continua crescita esponenziale, che ti assicura lavoro certo e ben retribuito!",
      "target_audience": [
        "Chiunque desideri imparare a programmare",
        "Programmatori provenienti da altri linguaggi che desiderano imparare Java",
        "Sviluppatori Java"
      ]
    },
    {
      "title": "Python基礎課程和網路爬蟲入門實戰",
      "url": "https://www.udemy.com/course/codegym-python/",
      "bio": "這堂課程已經為4700 多位程式創作者帶來實質的幫助，是一堂適合Python程式語言初學者的課程，課程主要是教同學從完全不會寫程式，到能夠撰寫出抓取網路資料的爬蟲程式，並將資料儲存至資料庫，搭配課程中的專題，實際應用Python",
      "objectives": [
        "這堂課程共有43 個課程單元，教你從完全不會寫程式，到能夠撰寫出抓取網路資料的爬蟲程式，並將資料儲存至資料庫，搭配課程中的專題，實際應用Python 程式技巧",
        "課程將會贈送你一本高達200 個章節，700多頁的電子書，當你透過Code Gym 的課程打下紮實的基礎之後，還能夠繼續不斷成長，自我學習，這才是這一堂課程帶給你最重要的價值",
        "Python 課程架構主要分成四個部分，Python基礎課程、網路爬蟲程式、資料庫基礎教學、專題實作，每個章節架構明確，細節清楚",
        "適合初學者，課程單元將從基礎課程開始教起，變數與資料型態、For迴圈、While迴圈、IF判斷、運算子、異常控制try-except、函式、物件導向、檔案輸入與輸出",
        "網路爬蟲程式教學，網路上有許多豐富的資訊，我們可以透過Python 抓取網頁資料工具撰寫爬蟲程式自動化蒐集每天最新資料",
        "資料庫基礎教學，抓取下來的數據要能夠有效的被使用，必須將數據儲存在資料庫當中，課程單元將會教同學如何使用資料庫技術和SQL 語法，並且有效使用這些數據資料",
        "專題實作課程，除了基礎教學，會搭配專題實作練習，透過抓取知名網路社群平台資料PTT文章、台鐵網路時刻表和NBA官網數據，教同學實作Python實際應用的技巧",
        "這堂課程已經為6200 多位軟體開發人員和創作者帶來實質的幫助",
        "Code Gym 官網有提供更多豐富的課程介紹，歡迎您前往瀏覽課程細節！！"
      ],
      "course_content": {
        "課程大綱與教學介紹": [
          "課程介紹",
          "【免費贈送電子書】專業人士必備的Python 教學筆記"
        ],
        "開發環境與設定": [
          "安裝Python學習環境 for Mac",
          "安裝PyCharm (for Mac)",
          "線上編輯程式服務Repl.it",
          "安裝Python學習環境 for Windows",
          "安裝PyCharm (for Windows)"
        ],
        "Python基礎課程": [
          "第一隻Python程式",
          "變數和輸入文字",
          "內建型態與轉型的方式",
          "異常控制 try-except",
          "運算子和判斷條件",
          "函式",
          "List和Tuple",
          "字典 Dictionary",
          "集合 Set",
          "for迴圈和while迴圈",
          "作業練習 - 問題說明",
          "作業練習 - 解答教學",
          "作業練習 - 問題說明",
          "作業練習 - 解答教學",
          "物件導向1",
          "物件導向2",
          "作業練習 - 問題說明",
          "作業練習 - 解答教學",
          "模組使用方式",
          "Lambda",
          "自動化測試撰寫好的程式",
          "檔案輸入與輸出",
          "作業練習 - 問題說明",
          "作業練習 - 解答教學"
        ],
        "爬蟲程式": [
          "網頁爬蟲程式基本介紹與安裝",
          "Beautiful Soup 功能教學(1)",
          "Beautiful Soup 功能教學(2)",
          "爬蟲程式實戰：PTT",
          "爬蟲程式實戰：台鐵時刻表(1)",
          "爬蟲程式實戰：台鐵時刻表(2)",
          "Selenium安裝與功能教學",
          "爬蟲程式實戰範例：ESPN球員數據",
          "爬蟲程式實戰範例：NBA官網數據(1)",
          "爬蟲程式實戰範例：NBA官網數據(2)"
        ],
        "資料庫": [
          "資料庫與SQL基礎語法",
          "Python存取資料庫資料",
          "NBA數據分析 - 爬蟲資料與資料庫整合實作(1)",
          "NBA數據分析 - 爬蟲資料與資料庫整合實作(2)"
        ],
        "AI 人工智慧": [
          "AI 資料分析-輔助你找出資料中潛在的意義"
        ]
      },
      "requirements": [
        "準備一台Mac或Windows電腦即可"
      ],
      "description": "這是一堂適合Python程式語言初學者的課程，課程主要是教同學從完全不會寫程式，到能夠撰寫出抓取網路資料的爬蟲程式，課程中示範抓取PTT文章和台鐵時刻表的時間，透過教同學如何抓取網路資料，熟練Python程式語言技巧。最後課程的整合實戰練習，會抓取NBA官網和ESPN提供的數據資料，並且匯入資料庫取得分析後的結果。\n\n\nCode Gym 官網有提供更多豐富的課程介紹和官網優惠，歡迎您前往瀏覽課程細節！！\n\n\n課程架構主要分成四個部分，分別是Python基礎課程、網路爬蟲程式、資料庫基礎教學和專題實作，以下針對這四個部分做詳細介紹。\nPython基礎課程\n課程適合初學者，課程單元將從基礎課程開始教，內容包含：\n* 變數與資料型態(List, Tuple, Set, Dictionary)\n* For迴圈、While迴圈\n* IF判斷、運算子\n* 異常控制try-except\n* 模組\n* 函式\n\n較為進階的課程內容包含：\n* Lambda\n* 物件導向\n* 單元測試\n* 檔案輸入與輸出\n教學中也附有練習題目讓同學熟悉課程中的技巧。\n\n網路爬蟲程式\n網路上有許多豐富的資訊，我們可以透過Python抓取網頁資料工具BeautifulSoup和Selenium，撰寫爬蟲程式自動化蒐集每天最新資料，課程中提供多種抓取資料的方式和技巧，讓同學可以抓取自己想要的網頁資料和數據。\n資料庫基礎教學\n抓取下來的數據要能夠有效的被使用，必須將數據儲存在資料庫當中，課程單元將會教同學如何使用資料庫技術和SQL語法，並且有效使用這些數據資料，Ryan目前在Hahow也有開設一堂資料庫設計課程，課程中同學給予很多正面的評價，而我仍然會用同樣的教學品質授課。\n專題實作\n課程除了基礎教學，會搭配專題實作練習，透過抓取知名網路社群平台資料PTT文章和台鐵網路時刻表，實作抓取網路資料和數據的結果。因為NBA官網有豐富的球賽數據，最後會示範如何抓取NBA官網，並存放到資料庫當中分析數據結果，讓同學理解用Python程式語言抓取資料和實際應用的技巧。\nAI 人工智慧\n新增課程單元，利用AI 輔助資料分析，用最簡單的自然語言，輕鬆的找出資料中潛在的意義\n【 免費贈送電子書 】\n課程中將會贈送一本專業人士必備 Python教學筆記，200多章課程單元，篇幅高達700頁，將Python所有功能鉅細彌遺收錄在這本筆記中，同學搭配課程一同學習，課程結束後還能夠繼續深入研究，精進Python 的技巧。\n\n\n講師Ryan\n華碩高級工程師，多年軟體開發經驗\nCode Gym 創辦人\n目前在Hahow有開設Java和資料庫設計課程\n課程品質保證\n後製剪輯，沒有贅詞，確保優質學習過程\n有字幕，邊看邊學更容易理解\n程式一行一行說明帶著你一起學，讓你聽得清楚又明白\n適合對象\n想學習Python程式語言基礎課程的初學者\n對於網路爬蟲技術感興趣的Python初級開發人員\n適合學習數據分析基礎的朋友\n\n\n從實作專案來學習，已經被證明是學習技能的最有效的方法，對程式設計更是如此！\n如果你正在尋找透過實作來學習 Python 程式語言的課程，那這堂課程就是你最好的選擇\n\n\nCode Gym 官網有提供更多豐富的課程介紹和官網優惠，歡迎您前往瀏覽課程細節！！",
      "target_audience": [
        "對Python程式語言有興趣的初學者",
        "有程式語言基礎但想學習網路爬蟲技術的開發人員",
        "對NBA數據分析感興趣的朋友"
      ]
    },
    {
      "title": "C# Programlama Dili : Temel, Orta, İleri Seviye",
      "url": "https://www.udemy.com/course/csharp-programlama-dili/",
      "bio": "Profesyonel yazılım eğitmeninden C# programlama dilini ve çevre teknolojilerini öğrenin.",
      "objectives": [
        "C# ile gelişmiş masaüstü yazılım uygulamaları geliştirebileceksiniz",
        "C# ile gelişmiş veritabanı programlama işlemleri öğreneceksiniz",
        "Temel seviyeden başlayarak orta ve ileri seviyeye kadar C# programlama dilini öğrenmiş olacaksınız",
        "Programlamanın temel kültürünü öğrenmiş olacaksınız",
        "Ezber değil, anlayarak yazılım geliştirebileceksiniz",
        "C# içerisindeki LINQ sorgulama yapısını öğreneceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "Tanıtım",
          "Programlama Dillerine Genel Bakış",
          "Nasıl Çalışmalıyız?",
          "Eğitim, Kurslar ve Kitaplar Üzerine...",
          "Bir Hata ile Karşılaştım!"
        ],
        "C# ve .NET Framework'e Giriş": [
          "C# Nedir?",
          "Derleyici Nedir?",
          "Neden C#?",
          "C# Versiyonları",
          "Framework Nedir?",
          "DOT.NET Framework Versiyonları",
          "İlk Program : Komut Satırı ve Derleyici ile..."
        ],
        "Geliştirme Ortamı": [
          "Makale Önerisi : Visual Studio 2019 Ortam Kurulumu",
          "Geliştirme Ortamı",
          "Editör Nedir?"
        ],
        "Visual Studio 2017 ile Çalışmak": [
          "Visual Studio Editörüne Genel Bakış - 1",
          "Visual Studio Editörüne Genel Bakış - 2",
          "Yeni Proje Oluşturmak : Konsol Uygulaması",
          "Yeni Proje Oluşturmak : Windows Form Uygulaması",
          "Yeni Proje Oluşturmak : WPF Uygulaması",
          "Proje Uygulama Ayarları : İleri Seviye Detaylar"
        ],
        "Değişken, Kapsam, Tipler ve Daha Fazlası": [
          "Degisken Tanımlama ve Kullanımı - 1",
          "Degisken Tanımlama ve Kullanımı - 2",
          "Kapsam",
          "Veri Tipleri",
          "Sabitler",
          "Tür Dönüşümü - 1",
          "Tür Dönüşümü - 2",
          "Nullable Types",
          "var Kullanımı",
          "object Vs. var",
          "ref ve out Parametreleri",
          "Enum Kullanımı",
          "Enum Kullanımı - Gelişmiş"
        ],
        "Operatörler": [
          "Aritmetik Operatörler",
          "İlişkisel Operatörler",
          "Mantıksal Operatörler",
          "Atama Operatörleri",
          "Diğer Operatörler"
        ],
        "Akış Kontrol": [
          "IF",
          "Switch"
        ],
        "Diziler": [
          "Diziler",
          "İki Boyutlu Diziler",
          "Üç Boyutlu Diziler",
          "Düzensiz Diziler"
        ],
        "Koleksiyonlar": [
          "Jenerik Olmayan Koleksiyonlar",
          "Jenerik Koleksiyonlar"
        ],
        "Döngüler": [
          "For",
          "While",
          "Do While",
          "Continue ve Break Komutları",
          "Foreach"
        ]
      },
      "requirements": [
        "Başlangıç seviyesinde bilgisayar kullanıyor olmalısınız!",
        "Bu kurs için herhangi bir programlama dili bilgisine sahip olmak zorunda değilsiniz!"
      ],
      "description": "\"Birisine bir şey öğretemezsiniz, ancak kendisinin onu keşfetmesine yardım edebilirsiniz.\" {Galileo Galilei}\n\nBu kurs C# programlama dilini öğretmeyi ve C# ile yazılım geliştirmeyi öğretmeyi hedeflemektedir.\nBu kurs C# Programlama dilini anlatmaktadır. Diğer gördüğünüz tüm başlıklar eğitmen tarafından öğrencilerinin daha çeşitli çevre teknolojileri hakkında bilgi sahibi olması için eklenmiştir. Örneğin, WPF, XAML, ADONET ve ASP.NET, ASP.NET Web API, Silverlight başlıklarının tamamı eğitmen tarafından öğrencilere HEDİYE amacıyla kursa eklenmiştir. Bu başlıklar ayrı kurs olacak kadar detaylı ve geniş konulardır. Bu nedenle, hediye olan kimi başlıklar detaylı, kimisi de bir ya da bir kaç videodan oluşabilir. Eğitmen ya bu konular için anlatımların yeterli olduğunu düşünmüş ya da farklı bir kurs olarak daha detaylı anlatmayı planlamış olabilir.\n\nBu kurs ile birlikte öğreneceğiniz konular aşağıdaki gibidir;\n- Programlama Dillerine Genel Bakış\n- Programlama Terminolojisine Genel Bakış\n- Derleyici, Editör ve Framework Kavramları\n- C# ve .NET Framework'e Genel Bakış\n- Değişkenler, Türler, Kapsam, Enum vb.\n- Operatörler\n- Akış Kontrol Mekanizmaları\n- Diziler (Çok Boyutlu ve Düzensiz Diziler Dahil)\n- Koleksiyonlar (Generic ve NonGeneric)\n- Döngüler\n- Nesne Yönelimli Programlama ve İleri Seviye Sınıf Kullanımı\n- İleri Seviye C# Yapıları\n- İleri Seviye .NET Framework Yapıları\n- Reflection ve Eklenti Tabanlı Programlama\n- Windows Form Programlama\n- WPF ve XAML ile Uygulama Geliştirme\n- ASP.NET ile Web Programlama : HTML ve JavaScript\n- ASP.NET ile Web Programlama : Standart Kontroller\n- ASP.NET ile Web Programlama : Validasyon\n- ASP.NET ile Web Programlama : Veritabanı Operasyonları\n- ASP.NET ile Web Programlama : Veri Kontrolleri\n- ASP.NET Web API ile Uygulama Geliştirme\n- ASP.NET Web API ile Geliştirilen API İçin Masaüstü Uygulama Geliştirme\n- Silverlight ile Uygulama Geliştirme\n- LINQ (Language Integrated Query)\n- ADONET\n- Algoritmalar\n\n\nKURS GÜNCELLEME POLİTİKASI :\nYayınladığım kursların içeriklerini belirli aralıklar ile güncelliyorum. İzlediğim politika ise aşağıdaki gibidir :\nMevcut yazılım projelerim haricinde bilgi paylaşımı sağlamak için kurslar üretiyorum... Bunların sayısı bu yıl içerisinde ciddi oranda artacak... Zaman ve emek yönetimi açısından artık \"beğeni kadar güncelle\" yöntemini uyguluyorum. Yani eğer kurslara puanlama yaparsanız, bu kursların takipçilerinin daha fazla eğitim istediğini düşünerek belirli aralıklarla bu kursları güncelleyeceğim. Eğer beğeni sayısı az ya da yeteri kadar olmazsa, bu kurslar herhangi bir güncelleme olmadan mevcut içeriklerle yayınlanmaya devam edecektir. Eğer satın aldığınız kursun güncellenerek size daha fazla değer katmasını isterseniz, bu isteğinizi bana ileteceğiniz en doğru yol puanlama sistemidir.\nBAŞARI HİKAYELERİ\n- T.C. Savunma Sanayii Başkanlığının hazırladığı \"Vizyoner Genç\" projesindeki tek yerli programlama eğitimi.\n- Milli Eğitim Bakanlığı'nın oluşturduğu FATIH projesinde binlerce öğretmen tarafından on binlerce dakika izlenme.\n- Yusuf Saha - Bilgisayar Bölümü, C# Sınavı, Fakülte Birinciliği\n- Savunma Sanayii'nde Uzay ve Endüstriyel Alanda Çalışan Öğrenciler (Bunların isimlerini veremiyorum)\n- Şuan birçok akademide karşılaşacağınız ve zamanında tarafımdan yazılım eğitimi verilen onlarca danışman ve eğitmen.\nBaşarı hikayelerini yazmaya yeni başladım. Buraya adınızın eklenmesini ve diğerlerine motivasyon kaynağı olmak isterseniz bu eğitimi aldıktan sonra neler yaptığınızı bana mesaj yoluyla iletebilirsiniz.",
      "target_audience": [
        "Yazılım uzmanı olmak isteyen herkes",
        "C# programlama dilini öğrenmek ve uzmanlaşmak isteyen herkes",
        "Masaüstü, Web, Mobil uygulama geliştirmek ve bunları tek bir programlama diliyle yapabilmek isteyen herkes"
      ]
    },
    {
      "title": "Desenvolvimento de Aplicativos Android usando Kotlin",
      "url": "https://www.udemy.com/course/curso-desenvolvedor-kotlin/",
      "bio": "Adquira sólidos conhecimentos em Kotlin para a criação de aplicativos Android!",
      "objectives": [
        "Conceitos sólidos da linguagem Kotlin",
        "Funcionamento na JVM e interoperabilidade com Java",
        "Declaração de variáveis",
        "Funções",
        "Controle de fluxo",
        "Orientação a Objetos",
        "Herança e classes abstratas",
        "Interfaces",
        "Coleções",
        "Conceitos sólidos de Android",
        "LinerLayout, RelativeLayout e ConstratinLayout",
        "Banco de dados e ROOM",
        "API e Retrofit",
        "Arquitetura MVVM",
        "DataStore e Coroutines"
      ],
      "course_content": {
        "O que você precisa saber antes de iniciar o curso": [
          "Metodologia, materiais extras e organização das seções",
          "Problemas, perguntas, sugestões e contato"
        ],
        "Lógica e algoritimos": [
          "Introdução à lógica e algoritmos",
          "Lógica de programação e controle de fluxo"
        ],
        "Kotlin - História e conceitos": [
          "Surgimento e conceitos",
          "Máquina virtual"
        ],
        "Instalação Java - Windows e Linux": [
          "Instalação Java - Windows",
          "Instalação Java - Linux"
        ],
        "Instalação IntelliJ - Windows e Linux": [
          "Instalação IntelliJ - Windows",
          "Instalação IntelliJ - Linux",
          "Atualização IntelliJ"
        ],
        "Kotlin - Conceitos iniciais": [
          "Criação do primeiro projeto",
          "Comentários",
          "Declaração de variáveis",
          "Primeiros erros",
          "Separação de arquivos",
          "Tipos de dados",
          "Variáveis mutáveis e imutáveis",
          "Formatação de strings",
          "Operadores aritméticos",
          "Operadores incremento e decremento",
          "Prioridade de operadores",
          "Reforce seu aprendizado - Conceitos iniciais",
          "Resolução - Variáveis, tipos de dado e operadores",
          "Simulado - Conceitos iniciais"
        ],
        "Kotlin - Funções": [
          "Introdução",
          "Criação de funções",
          "Conversão de tipos",
          "Funções em uma única linha",
          "Funções de String",
          "Formatação de Strings - Placeholder",
          "Obtendo informações do usuário",
          "Reforce seu aprendizado - Funções",
          "Resolução - Funções"
        ],
        "Kotlin - Controle de fluxo": [
          "Introdução e controle de fluxo if",
          "Operadores para controle de fluxo",
          "Controle de fluxo if else",
          "Controle de fluxo usando operadores lógicos",
          "Prática if/else",
          "Reforce seu aprendizado - If/else",
          "Resolução - If/else",
          "Controle de fluxo - when",
          "Controle de fluxo - for",
          "Controle de fluxo - while",
          "Controle de fluxo - do while",
          "Reforce seu aprendizado - for & while",
          "Resolução - for",
          "Resolução - while",
          "Resolução - Desafio"
        ],
        "Kotlin - Exceções e Null safety": [
          "Null safety",
          "Exceções",
          "Lançar exceções",
          "Operador Elvis",
          "Incrementando programas antigos",
          "let",
          "Questionário - Exception"
        ],
        "Utilidades - IntelliJ": [
          "Debug",
          "Análise estática"
        ]
      },
      "requirements": [
        "Qualquer conhecimento em programação seria útil, mas não é obrigatório",
        "Um computador com conexão à internet (Windows, Mac, Linux)",
        "Vontade de aprender!"
      ],
      "description": "Seja muito bem-vindo e muito bem-vinda ao curso Desenvolvimento de Aplicativos Android usando Kotlin oferecido pela DevMasterTeam!\n\nHoje a linguagem Kotlin é sugerida e recomendada como um padrão para o desenvolvimento Android. Aqui dentro você encontra um material incrível e atualizado sobre Kotlin que foi preparado para te levar a excelência.\n\nComo funciona este curso?\n\nSabemos que a melhor maneira de aprendermos a programar em alguma linguagem, não é ficar lendo conceitos durante dias sem nenhuma prática, por isto, este e todos os outros cursos oferecidos pela DMT, são totalmente práticos! Todos os conceitos da linguagem, são demonstrados com exemplos e o curso conta com repositórios contendo todos os códigos desenvolvidos!\n\nA grade do curso foi pensada para que exista uma evolução linear no aprendizado. Vamos desde os fundamentos da linguagem para assuntos mais complexos. O objetivo deste curso é que você entenda cada etapa de um programa Kotlin e domine os conceitos, assim quando chegar o momento de criar a sua aplicação, você saberá como começar e principalmente, como evoluir sem a necessidade de copiar projetos prontos.\n\nO que irei aprender com este curso?\n\nNeste curso nós partimos desde o básico da linguagem, configuração e conceitos iniciais, criação do primeiro programa Kotlin, como funciona na JVM, declaração de variáveis, funções, controle de fluxo, e vamos nos aprofundando, orientação a objetos, herança, classes abstratas, interfaces, coleções e muito mais! Este curso possui um conteúdo muito abrangente!\nMas não paramos aqui:\nA medida que for obtendo conhecimento sobre a linguagem, vamos criando alguns projetos para praticar o que aprendemos! Começaremos a partir de apps Android simples, porém você já poderá praticar o que aprendeu. E iremos avançando até chegarmos na criação de um app complexo que utiliza vários conceitos existentes nos apps mais modernos e conhecidos do mercado, conceitos como: Banco de dados ROOM, API e uso de Retrofit, ConstraintLayout, SharedPreferences, MVVM e mais!\n\n\nA melhor maneira de ter certeza do que aprenderá com o curso e sua qualidade é dando uma olhada em sua grade curricular. Experimente as aulas gratuitas, conheça a dinâmica e didática do curso e veja a qualidade que te espera!\n\n\nUdemy dinheiro de volta garantido!\nAo se inscrever neste curso, sua satisfação é garantida ou seu dinheiro de volta.\nA Udemy possui uma política de devolução de dinheiro se requisitado em até 30 dias a partir da data de compra. Então, não há pelo que esperar, se inscreva e vamos aprender sobre Kotlin!\n\n\nNos vemos nas aulas!",
      "target_audience": [
        "Qualquer pessoa interessada em aprender programação usando a linguagem Kotlin"
      ]
    },
    {
      "title": "De 0 a Programador: Aprende Python desde 0",
      "url": "https://www.udemy.com/course/de-0-a-programador-en-python/",
      "bio": "Curso de Python para principiantes. Aprende a programar en Python desde 0.",
      "objectives": [
        "Pensamiento Lógico y estructurado.",
        "Secretos para pensar como un profesional.",
        "Buenas prácticas de programación.",
        "Artificios de Programación.",
        "Pseudocódigo aplicado en Python.",
        "Escribir Código Limpio.",
        "Estilo WCODE."
      ],
      "course_content": {
        "Introducción": [
          "Principales áreas de la programación",
          "Habilidades de un programador",
          "¿Por qué aprender Python?",
          "GitHub: Repositorio de Trabajo",
          "Conoce al Instructor: Ing.WilmerPlanchez",
          "Comunidad y Grupo de TELEGRAM",
          "Recomendaciones para el curso"
        ],
        "(NUEVO) Entorno de Trabajo": [
          "Instalación de Python 3",
          "Prueba de Python IDE",
          "Herramienta Google Colab",
          "Anotaciones en GoogleColab",
          "Descargar Archivos de Google Colab",
          "Descarga e Instalación de Anaconda",
          "Uso de Jupyter Notebook",
          "Ruta por defecto de Jupyter Notebook",
          "Abrir Archivos de Google Colab en Jupyter"
        ],
        "(NUEVO) Vista Rápida de Python": [
          "Primer Programa en Python",
          "Identificadores de Variables",
          "Declaración de Variables",
          "Resumen: Declaración de Variables",
          "Declaración de Variables: Estilo WCODE",
          "Estructura Condicional: if",
          "Estructura Condicional: if-else",
          "Estructura Condicional: elif",
          "Bucle while",
          "Bucle for-in",
          "Bucle for-in-range"
        ],
        "Versiones de Python": [
          "Elegir una versión de Python (2.7 ó 3.x)",
          "Versión de Python a Instalar",
          "Instalación de Python 2.7",
          "Función print(): Python 2.7 y Python 3.x"
        ],
        "Datos y Variables": [
          "Inicialización de variables",
          "Estilo para crear Variables",
          "Operador de Formato: %"
        ],
        "Solicitud de Datos al Usuario": [
          "Funciones raw_input() / input(): Python 2.7 y Python 3.x",
          "Datos introducidos por el usuario"
        ],
        "Manejo de Operadores": [
          "Operadores aritméticos y su uso",
          "Jerarquía de operadores aritméticos",
          "Operadores Condicionales",
          "Operadores Lógicos"
        ],
        "Solución de Ejercicios Propuestos": [
          "Solución: Área de un Cuadrado",
          "Solución: Área del Triángulo",
          "Solución: Área del Círculo",
          "Solución: Conversión de Farenheit a Celcius",
          "Pasos a Paso: Ejercicio de Desafío con operadores Aritméticos",
          "Solución: Suma de Tramas"
        ],
        "Listas": [
          "Manejo de Listas",
          "Acceder a los Elementos de Una Lista",
          "Formateo de elementos en una lista",
          "Los Números Mágicos",
          "Particionado de Listas",
          "Particionado Por Defecto de Listas"
        ],
        "Métodos para el manejo de Listas": [
          "Métodos para el manejo de Listas",
          "Agregar Elementos a una Lista",
          "Tamaño de una Lista",
          "Eliminar Elementos de Una Lista",
          "Índice de un elemento en una Lista",
          "Elemento repetido en una Lista",
          "Invertir los Elementos de una Lista"
        ]
      },
      "requirements": [
        "Conexión a Internet.",
        "PC o Laptop.",
        "Ganas de Aprender."
      ],
      "description": "En este curso De 0 a Programador: Python desde 0 aprenderás  los secretos para pensar como un programador profesional además de aprender a  escribir Código Limpio. Si no sabes por dónde empezar o aún te cuesta avanzar en tus proyectos. Este curso es perfecto para ti.\nAprenderás a pensar de manera lógica y estructurada en tiempo record, gracias a prácticas de pseudocódigo aplicadas en Python, uno de los lenguajes más poderosos que existen en la actualidad.\nEste curso te dará las bases teóricas y prácticas para enfrentarte a situaciones reales gracias a una metodología bien estudiada que comprende los siguientes temas:\nDatos y tipos de datos.\nVariables y tipos de variables.\nUso avanzado de operadores aritméticos.\nJerarquía de operadores aritméticos.\nColecciones: Listas, tuplas y diccionarios.\nMétodos avanzados para presentar información.\nEstructuras condicionales.\nEstructuras repetitivas.\nEstructuras anidadas.\nArtificios de Programación.\nBanderas de Estado.\nContadores y acumuladores.\nVariables auxiliares.\nValidación de datos.\nTratamiento de excepciones.\nCómo escribir Código Limpio\nEjercicios Resueltos.\nAprender un lenguaje no es suficiente si no va acompañado de buenas prácticas y técnicas de programación eficientes para programar como un profesional y este curso incluye todo lo anterior en un solo lugar.\nLa práctica hace al maestro por eso es muy importante poner en práctica lo aprendido en cada lección y a finalizar este curso podrás programar como lo hacen los profesionales en las empresas, gracias al estilo WCODE, que recopila años de experiencia y buenas prácticas de programación.",
      "target_audience": [
        "Estudiantes.",
        "Autodidactas.",
        "Profesores.",
        "Profesionales.",
        "Cualquiera con ganas de aprender."
      ]
    },
    {
      "title": "一週間で身につくC/C++言語",
      "url": "https://www.udemy.com/course/cc-lubmn/",
      "bio": "IoTなどの普及によりC言語やC ++言語が再度脚光を浴びています。UnrealEngine等のゲーム開発やビジネスの場面で役立つC ++、C言語をこのコースでマスターしましょう。",
      "objectives": [
        "C/C++言語でのプログラミングの能力が身につく",
        "プログラミングの基本が身につく",
        "JavaやC#など、C/C++言語発祥のほかの言語も容易に学習できるようになる",
        "IoTや組み込み、OSプログラミングなどに必要なプログラミングの基礎がみにつく",
        "高度なゲームプログラミングに必要なC言語・C++言語のスキルが身につく"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "VisualStudio2022の使い方": [
          "①ダウンロードとインストール",
          "②プロジェクトの作成",
          "③プログラムの入力と実行",
          "④補足"
        ],
        "C言語入門①　はじめの一歩": [
          "HelloWorld",
          "printf関数の様々な使い方",
          "まとめ"
        ],
        "C言語入門②　演算と変数": [
          "演算の基本",
          "変数の基本",
          "データ型とキャスト",
          "まとめ",
          "代入演算子"
        ],
        "Ｃ言語入門③　条件分岐": [
          "if文",
          "if～else",
          "if～else if～else",
          "複雑な条件分岐",
          "switch文",
          "まとめ"
        ],
        "C言語入門④　繰り返し処理": [
          "for文",
          "forの二重ループ",
          "whileループ",
          "do～whileループ",
          "for,while,do～whileの違い",
          "無限ループ",
          "まとめ"
        ],
        "C言語入門⑤　配列変数": [
          "配列の基本",
          "配列の初期化",
          "文字列と配列",
          "多重配列",
          "まとめ"
        ],
        "Ｃ言語入門⑥　関数の作り方": [
          "関数の作り方",
          "プロトタイプ宣言",
          "様々な関数",
          "グローバル変数とローカル変数",
          "まとめ"
        ],
        "C言語入門⑦　ファイル分割": [
          "ファイル分割の基本",
          "グローバル変数とファイル分割",
          "まとめ"
        ],
        "C言語応用①　数値の扱い": [
          "乱数の発生",
          "数学関連の関数の利用①",
          "数学関連の関数の利用②",
          "ビット演算",
          "まとめ"
        ]
      },
      "requirements": [
        "Windowsパソコン(7 or 10) Corei3以上のＣＰＵが望ましい",
        "Visual Studio2019(Community Editionで可）",
        "初歩的なPCの操作技術",
        "基礎的なコンピュータの構造の知識（CPU、メモリなどの概念がわかる）"
      ],
      "description": "①コースの概要\n\nこのコースは初心者がC言語・C ++言語を学ぶためのプログラミングを開始するコースです。\nC言語は、1972年に開発された現在のプログラミング言語で最も古いプログラミング言語の1つです。\nまた、C ++は、C言語に基づくオブジェクト指向プログラミングの概念を導入した上位互換言語です。\n現在、新しい言語が次々と開発されており、これらの言語のシェアは低下していますが、その重要性は依然として衰えていません。\n逆に、近年、IoTなどの普及により、組み込みプログラミングに用いられるC言語やC ++言語に対する需要が高まっています。\nゲームなどの分野でも、UnityやC＃やJavaなどの言語が普及しているにもかかわらず、「最後にC ++が必要」という認識があります。\n更にC言語は依然として、コンピュータの基礎を形成するOSおよびプログラミング言語の開発のために依然として使用されています。\nこの古い言語ですが、なぜこのように人気があるのか、というようなことを含めて、\nこのコースではC言語とC ++言語のプログラミングを学ぶことができます。\n初心者が特にポインタのような挫折感を強く感じる内容については、徹底的に説明します。\n②目標\n最初に説明したように、このコースは初心者プログラマーを対象としたコースです。具体的には\nプログラミング学習を始めた大学生および大学院生\n専門学校の学生\n他の様々な学校の学生\n小学校から高校までの教員\n今からプログラミングを始める新しい新入社員\nといった方々に最適です。\nそれだけでなく、JavaやPHPなどのプログラミング言語を習得してから、C言語やC ++言語を取得したいプログラマーにもおすすめです。\nまた、C言語を学んだこともありますが、挫折した経験のある人も大歓迎です。\n③内容\nコンテンツは、以下の内容で構成されています。\n講義映像\nソースコード\n練習問題と答え\n開発環境として、Windowsは統合開発環境であるVisualStuido 2017 Community Editionを使用すると想定されています。 VisualStuido 2017 Community Editionはインターネットで無料で入手できます。\nただし、このコースで導入されたC言語/ C ++言語のソースコードは、異なるIDE、OSでも使用できます。\n他の環境で勉強している人は、各自自分の環境に対応させて試してみてください。",
      "target_audience": [
        "これからプログラミングを始めてみたいが経験が無い",
        "本格的なゲームプログラミングを始めてみたいプログラマー",
        "IoTや組み込みプログラムのためにC/C++の必要性を感じているプログラマー",
        "なんでもいいからプログラムを開始してみたい好奇心が旺盛な人"
      ]
    },
    {
      "title": "Masterclass: Domina las Expresiones Lambda y Streams en Java",
      "url": "https://www.udemy.com/course/programacion-funcional-expresiones-lambda-y-streams-en-java/",
      "bio": "Masterclass completa: expresiones lambda y streams en Java, desde su inicio en Java 8 hasta las novedades en Java 21",
      "objectives": [
        "Entender a detalle que es la programación funcional y como aplica a las expresiones lambda",
        "Aprender a utlizar las expresiones lambda para dar soliciones de manera efectiva y elegante",
        "Utillizar el API Stream de manera profesional hasta el mas minimo detalle (pipelines sencillos y complejos)",
        "Conocer el paquete java util function a profundidad"
      ],
      "course_content": {
        "Introducción": [
          "Instalar Intellij Idea Community",
          "Descargando EL proyecto",
          "Explicación del proyecto"
        ],
        "Fundamentos": [
          "¿Qué son las intrfaces?",
          "¿Qué es la progrmación genérica?",
          "¿Qué son las clases anónimas?",
          "Cuestionario"
        ],
        "Expresiones lambda": [
          "Introducción a las expresiones lambda (Interfaces funcionales)",
          "Creando una expresión lambda",
          "Creando una expresión lambda genérica",
          "Ciclo For con expresiones lambdas",
          "El scope de las variables en una expresión lambda",
          "Cuestionario"
        ],
        "Referencia a métodos": [
          "Introducción a los métodos referenciados",
          "Referencia por objeto",
          "Referencia a métodos estáticos",
          "Referencia por constructor",
          "Referencia arbitraria",
          "Cuestionario"
        ],
        "El paquete java.util.function": [
          "Introducción al paquete java.util.function",
          "Implementando la interface Function",
          "Implementando la interface Function 2",
          "Implementando la interface BiFunction",
          "Implementando la interface Predicat",
          "Implementando la interface BiPredicate",
          "Implementando la interface Consumer y BiConsumer",
          "Implementando la interface Supplier",
          "Implementando la interface UnaryOperator",
          "mplementando la interface BinaryOperator",
          "Cuestionario"
        ],
        "Aplicaciones reales de las expresiones lambda": [
          "Leyendo un archivo con lambdas",
          "Trabajando con concurrencia(hilos) y lambdas",
          "Implementando un patrón Strategy con lambdas 1",
          "Implementando un patrón Strategy con lambdas 2",
          "Ordenando una Lista con lambdas"
        ],
        "Streams": [
          "Introducción a los Streams",
          "Creando un Stream (Constructores)",
          "Métodos count y forEach",
          "Métodos para hacer match",
          "Búsquedas en un Stream",
          "Acomuladores",
          "Obtener el mínimo y el máximo de un Stream",
          "Métodos distinct y limit",
          "Método filter",
          "Método map",
          "Método flatMap",
          "Diferencias entre map y flatMap",
          "Método peek",
          "Cómo ordenar un Stream",
          "Métodos takeWhile y dropWhile",
          "Explicación del ejercicio de Streams",
          "Cómo usar el debugger de intellij idea para debuggear Streams"
        ],
        "Collectors": [
          "Introducción a los Collectors",
          "Convertir Stream a List, Set y Map con la clase Collectors",
          "Solución al ejercicio de Streams",
          "Como debuggear Streams con Intellij idea",
          "Particiones",
          "Agrupación simple",
          "Agrupación con acomulador",
          "Acomuladores en Collectors (summarizing, average y join)",
          "Explicación del ejercicio de Collectors",
          "Solución al ejercicio de Collectors"
        ],
        "Parallel Strams": [
          "Creando un Stream paralelo",
          "Comparando el rendimiento de un Stream vs un ParallelStream"
        ],
        "Optional con lambdas": [
          "Introduccion a la clase Optional",
          "Operador Map en optionals",
          "operador flatmap en optionals"
        ]
      },
      "requirements": [
        "Conocimiento basico en Java"
      ],
      "description": "¡Bienvenido/a al curso más completo sobre Expresiones Lambda, Programación Funcional y Streams en Java!\nEste curso te llevará paso a paso por todo lo que necesitas saber para dominar la programación funcional en Java y las poderosas expresiones lambda. Nos enfocaremos en cómo aplicar estos conceptos de forma profesional, abordando desde lo más básico hasta ejemplos avanzados, ¡todo con un enfoque práctico y orientado a la resolución de problemas reales!\n¿Qué aprenderás?\nFundamentos de la Programación Funcional y Expresiones Lambda: Explora de dónde proviene este paradigma y cómo aplicarlo para resolver problemas de manera eficiente.\nSoluciones prácticas: A través de ejemplos profesionales, aprenderás cómo las lambdas y el enfoque funcional pueden mejorar el diseño de tus aplicaciones.\nStreams en Java: Domina el uso de Streams para realizar operaciones complejas como filtros, transformaciones, búsquedas, ordenamientos, entre otras, de una manera clara y eficiente.\nPatrones de diseño con lambdas: Implementaremos patrones de diseño utilizando lambdas para resolver problemas estructurales, como el patrón Strategy.\nInterfaz java.util.function completa: Conocerás cada una de las interfaces funcionales del paquete, entendiendo su propósito y cómo utilizarlas de forma efectiva.\nReferencias a métodos: Entiende a fondo las referencias a métodos en Java y estudia los 4 tipos principales de referencias.\nConcurrente y paralelismo: Aprende cómo aprovechar la concurrencia utilizando expresiones lambda y streams para mejorar el rendimiento de tus aplicaciones.\nManejo avanzado de colecciones con Collectors: Utiliza Collectors para realizar agrupamientos, particiones y transformar colecciones de datos a estructuras mutables e inmutables de forma eficiente.\nSiempre actualizado: El curso está al día con las últimas novedades del JDK (¡actualizado hasta Java 18!), por lo que tendrás acceso a las mejores prácticas y herramientas más recientes.\nExtras:\nUso de librerías como Lombok y Jackson Databind, que son esenciales en frameworks empresariales como Spring.\nIntroducción a programación genérica, ampliando tus habilidades más allá del paradigma funcional.\nEste curso es perfecto para quienes buscan dominar el poder de las expresiones lambda y la programación funcional en Java. ¡No esperes más y lleva tus habilidades a un nivel completamente nuevo!\n¡Vamos al código!",
      "target_audience": [
        "A estudiantes y profesionales que quieran profundizar y volverse expertos en Lambdas y Streams :)"
      ]
    },
    {
      "title": "Totalny VBA - Programowanie VBA od podstaw",
      "url": "https://www.udemy.com/course/totalny-vba/",
      "bio": "Kiedy czujesz, że Excel to za mało",
      "objectives": [
        "Wykorzystanie rejestratora makr",
        "Stosowanie zmiennych różnego typu",
        "Testowanie programu",
        "Wykorzystanie funkcji tekstowych i dat",
        "Adresowanie zakresów komórek",
        "Wykorzystanie instrukcji warunkowych",
        "Stosowanie różnego rodzaju pętli",
        "Tworzenie inteligentnych plików dzięki okienkom MsgBox i InputBox",
        "Wykorzystanie metod i własności komórek, arkuszy i skoroszytów",
        "Działania na plikach i folderach",
        "Wykorzystanie zmiennych tablicowych",
        "Tworzenie własnych funkcji",
        "Stosowanie zdarzeń",
        "Budowa formularza użytkownika"
      ],
      "course_content": {
        "Wprowadzenie do języka VBA": [
          "Czym są makra i ich zastosowanie",
          "Co to jest VBA?",
          "Rozszerzenia skoroszytów przechowujących makra",
          "Test wiedzy"
        ],
        "Wykorzystanie rejestratora do tworzenia użytecznych makr": [
          "Zakładka Deweloper i jej funkcje",
          "Bezpieczeństwo związane z wykorzystywaniem makr",
          "Rejestrator makr",
          "Zastosowanie odwołań względnych i bezwzględnych",
          "Rejestracja importu pliku txt",
          "Metody uruchamiania makr",
          "Test wiedzy"
        ],
        "Zarządzanie makrami z poziomu Edytora VBA": [
          "Budowa edytora VBA i wykorzystanie jego elementów",
          "Tworzenie skoroszytu makr osobistych",
          "Test wiedzy"
        ],
        "Zmienne i stałe w VBA": [
          "Typy zmiennych",
          "Deklaracja zmiennych",
          "Zmienne statyczne",
          "Deklaracja stałych",
          "Zasięg zmiennych",
          "Wymuszanie deklaracji zmiennych",
          "Test wiedzy"
        ],
        "Operatory": [
          "Operatory arytmetyczne, porównania i logiczne",
          "Ważność operatorów logicznych",
          "Test wiedzy"
        ],
        "Testowanie programu": [
          "Uruchamianie krokowe i punkt przystankowy"
        ],
        "Funkcje": [
          "Podstawowe funkcje tekstowe",
          "Przykłady wykorzystania funkcji tekstowych",
          "Podstawowe funkcje dat",
          "Test wiedzy"
        ],
        "Odwołania do zakresów w arkuszu Excel": [
          "Adresowanie komórek przez Range i Cells",
          "Offset, czyli przesunięcie",
          "Test wiedzy"
        ],
        "Instrukcje warunkowe": [
          "Instrukcja IF…Then",
          "Instrukcja Select Case",
          "Test wiedzy"
        ],
        "Pętle": [
          "Pętla For… Next",
          "Dynamiczna granica pętli",
          "Pętla For Each",
          "Pętla Do Loop",
          "Pętla While Wend",
          "Przerwanie pętli"
        ]
      },
      "requirements": [
        "Chęć do nauki"
      ],
      "description": "Arkusz kalkulacyjny jest podstawowym narzędziem pracy wszędzie tam, gdzie istnieją jakieś dane. Posiada wiele niesamowitych funkcjonalności, które pozwalają wykonywać skomplikowane analizy. Często jest to jedyne tak skuteczne narzędzie w firmie, ponieważ jego obsługa jest intuicyjna, a dostępność naprawdę duża.\nWięc po co Ci to programowanie VBA? Makra w Excelu są potrzebne wszędzie tam, gdzie potrzebna jest automatyzacja pracy. Czy samodzielnie obrabiasz dane w arkuszach i zajmuje Ci to dużo czasu? Przecież czas jest cenny i nie da się go odzyskać. A co powiesz na to, aby Excel sam pracował? Sam generował raporty, tworzył nowe skoroszyty, wykonywał obliczenia...\nMożesz to uzyskać podejmując naukę programowania w języku Visual Basic for Applications i pisząc własne makra na swoje potrzeby, a także potrzeby całej firmy.\nVBA to bardzo prosty język programowania, którego bardzo łatwo się nauczyć. Jego polecenia są po angielsku, ale są to intuicyjne i proste słowa takie jak SELECT, DELETE, COPY itd. Wystarczy miesiąc czasu, aby opanować podstawowe konstrukcje i polecenia, dzięki czemu będziesz tworzyć użyteczne makra. Dalej to już tylko rozwój umiejętności o bardziej zaawansowane rozwiązania.\nUcząc się Visual Basic for Applications będziesz w stanie przekonać się, czy nauka programowania w jakimkolwiek języku jest dla Ciebie.\nMam nadzieję, że zachęciłem Cię do zgłębienia tej wiedzy. Życzę Ci powodzenia.",
      "target_audience": [
        "Osoby dużo pracujące w Excelu",
        "Analitycy danych",
        "Osoby tworzące raporty"
      ]
    },
    {
      "title": "Das Java - Bootcamp: Lerne Java für Hobby, Beruf & Studium",
      "url": "https://www.udemy.com/course/java-kurs/",
      "bio": "Die perfekte Grundlage für deinen Einstieg in die Programmierung. Lerne jetzt Java, mit vielen, anschaulichen Beispielen",
      "objectives": [
        "Eigene, kleine Programme in Java entwickeln",
        "Sich anschließend mit der Entwicklung von Android-Apps beschäftigen",
        "Weitere Programmiersprachen sehr viel schneller verstehen",
        "Als Student wird dir die nächste Klausur / nächstes Praktikum zum Thema Java sehr viel leichter fallen"
      ],
      "course_content": {
        "Hier starten": [
          "Einführung",
          "Was tun bei Problemen?"
        ],
        "Erste Schritte": [
          "Hinweis: Installation von Java & Editor [Links]",
          "Installation von Java & Editor",
          "Hallo Welt - Programm",
          "Hinweis zu Programmierübungen",
          "Test: Hallo Welt",
          "Variablen",
          "Primitive Datentypen",
          "Hinweise zur Installation",
          "Primitive Datentypen (2)",
          "Ganzzahlen",
          "Kommazahlen",
          "Buchstaben",
          "Aufpassen bei doubles!",
          "Booleans",
          "Definition von Variablen",
          "Musterlösung: Definition von Variablen"
        ],
        "Grundlegende Funktionen": [
          "Arbeiten mit Zeichenketten (Strings)",
          "Eingaben einlesen",
          "Einlesen von Eingaben mit Hilfe der Scanner-Klasse",
          "Musterlösung: Einlesen von Eingaben mit Hilfe der Scanner-Klasse",
          "Mathematische Funktionen",
          "Kurzschreibweise: Mathematische Funktionen",
          "Mathematische Grundrechenoperationen",
          "Musterlösung: Mathematische Grundrechenoperationen"
        ],
        "Verzweigungen": [
          "If und else",
          "Verschachtelung von If-Abfragen",
          "If, Else, Else if",
          "Musterlösung: If, Else, Else if",
          "Switch",
          "Switch - Befehl",
          "Musterlösung: Switch-Befehl",
          "Strings vergleichen (.equals)",
          "Strings",
          "Musterlösung: Strings",
          "Gerade oder ungerade?",
          "Musterlösung: Gerade oder ungerade"
        ],
        "Schleifen": [
          "Die while-Schleife",
          "Die for-Schleife",
          "FizzBuzz!",
          "Musterlösung: FizzBuzz!",
          "Break & continue",
          "While - Schleife / For-Schleife",
          "Musterlösung: While - Schleife / For - Schleife",
          "Wann while, wann for?",
          "Der Continue - Befehl",
          "Musterlösung: Der Continue - Befehl",
          "Aufpassen bei Endlosschleifen!",
          "Bitte beachten: Hinweise zur nächsten Lektion",
          "Projekt: Wie oft kommt das Wort \"du\" bzw. \"ich\" im Faust (Goethe) vor?"
        ],
        "Arrays": [
          "Arrays: Einführung",
          "Arrays: Grundlegende Funktionen",
          "Arrays: Weitere Funktionen",
          "Arrays: for-Schleife",
          "Maximum berechnen",
          "Musterlösung: Maximum berechnen"
        ],
        "Arrays (2)": [
          "Arrays: Mehrdimensionale Arrays",
          "Projekt Arrays: TicTacToe validieren",
          "Summen...",
          "Musterlösung: Programmierübung Summen",
          "Magic Array (mehrdimensionale Arrays)",
          "Musterlösung: Magic Array"
        ],
        "Objektorientierung": [
          "Objektorientierung: Einführung",
          "Methoden",
          "Constructor",
          "public / private",
          "Getter / Setter",
          "Rückgabewerte von Funktionen",
          "Der Wert \"null\"",
          "Hinweis: Return beendet eine Funktion"
        ],
        "Objektorientierung (2)": [
          "Objektorientierung: this",
          "Überladen von Methoden",
          "Statische Methoden",
          "Statische Variablen",
          "Private Methoden",
          "Das Singleton-Pattern",
          "Packages in Java"
        ],
        "Projekt: Wetter API abfragen (XML)": [
          "Einführung: Projekt Wetter-API",
          "Wichtiger Hinweis: Wetter-API",
          "Wetter-API",
          "XML-API abfragen",
          "Anzeigen der Ergebnisse",
          "Code überarbeiten / aufräumen",
          "Projekt fertigstellen"
        ]
      },
      "requirements": [
        "Programmierkenntnisse sind nicht erforderlich",
        "Ihr benötigt einen Mac oder einen PC",
        "Den verwendeten Editor (Eclipse) werden wir am Anfang des Kurses gemeinsam installieren"
      ],
      "description": "Neu: Mit vielen Übungen und Beispielen!\n\nLerne jetzt Java - für Hobby, Beruf & Studium!\nNach Abschluss dieses Kurses kannst du eigene, kleinere Programme in Java schreiben. Zudem hast du die perfekte Grundlage gelegt, wenn du dich anschließend mit der Entwicklung von Programmen für Android - Smartphones beschäftigen möchtest. Du bist noch Student und musst während deines Studiums Programme in Java programmieren? Auch dann bereitet dich dieser Kurs darauf richtig schnell vor.\nWas lernst du alles hier im Kurs?\nPrimitive Datentypen (float, double, int, long, char, boolean, ...)\nStrings (Strings ausgeben, einlesen, etc.)\nArrays\nObjektorientierung\nVererbung\nInterfaces\nComparable\nGetter, Setter\nCollections (Listen, Maps, Sets)\nXML einlesen und verarbeiten\nViele Beispiele & Übungen!",
      "target_audience": [
        "Dieser Kurs richtet sich an Anfänger, die Java lernen möchten",
        "Du legst damit eine solide Basis, insbesondere wenn du später lernen möchtest, Android Apps zu programmieren",
        "Perfekt für Studenten, z.B. als Vorbereitung auf die nächste Klausur oder das nächste Praktikum",
        "Wenn du schon viel programmiert hast, eignet sich dieser Kurs eher nicht, es ist ein Anfängerkurs"
      ]
    },
    {
      "title": "SAP ABAP für Anfänger 3: Kontrollstrukturen, Modularisierung",
      "url": "https://www.udemy.com/course/sap-abap-kompendium-teil-3/",
      "bio": "Teil 3 der Kursreihe zum lernen von ABAP von Anfang an. Lernen Sie weitere wichtige Aspekte der Sprache in der Praxis!",
      "objectives": [
        "Erste ABAP Programme professionell selbst zu erstellen",
        "Erweitern des eigenen SAP Skillsets",
        "Einen Job im SAP Umfeld",
        "Erweiterte, informationshaltige und interessante Videolektionen",
        "Spaß am Programmieren mit ABAP"
      ],
      "course_content": {
        "Einleitung": [
          "Begrüßung und Einleitende Worte",
          "Inhaltsübersicht ABAP für Anfänger Teil 3",
          "Wie erhalte ich das Zertifikat dieses Kurses?"
        ],
        "Kontrollstrukturen und logische Ausdrücke": [
          "Parameter und Selektionsbildschirme",
          "Grundlagen der Kontrollstrukturen und logischen Ausdrücke",
          "IF",
          "Verknüpfung logischer Ausdrücke",
          "Case",
          "Do",
          "While",
          "Continue",
          "Check",
          "Exit",
          "Abschnittstest - Kontrollstrukturen und logische Ausdrücke"
        ],
        "Modularisierung in ABAP": [
          "Modularisierung in ABAP - Überblick",
          "Includes",
          "Unterprogramme in ABAP - Module",
          "Funktionsgruppen",
          "Funktionsbausteine",
          "Praxisübung ABAP Grundkurs Teil 1 - 3",
          "Praxisübung ABAP Grundkurs Teil 1 - 3 (Musterlösung)",
          "Abschnittstest - Modularisierung"
        ],
        "Abschluss": [
          "Übersicht der gelernten Inhalte",
          "Ausblick - ABAP für Anfänger Teil 4 - Was wirst du lernen?"
        ]
      },
      "requirements": [
        "Für komplette Neulinge: Durcharbeiten der ersten beiden Teile der Kursreihe, die Inhalte von dort werden als bekannt vorausgesetzt",
        "Am besten einen Zugang zu einem SAP System besitzen (Ideal: EhP 7, aber nicht zwingend notwendig)",
        "Falls kein Zugang zu einem SAP System besteht, ist der Kurs dennoch hervorragend dafür geeignet, die Basics von SAP ABAP zu lernen und zu verstehen",
        "Sie benötigen eine Rechnung für Ihren Kurs? Unter dem folgenden Link können sich deutsche und österreichische Teilnehmer eine Rechnungsvorlage herunterladen und ausfüllen (https://support.udemy.com/hc/de/articles/229233307)"
      ],
      "description": "SAP ABAP ist die bekannte Enterprise-Programmiersprache, die von den größten Unternehmen zum  Betrieb ihrer Business-Systeme eingesetzt wird.\nIn diesem dritten Teil der Kursreihe des SAP ABAP-Kompendiums vermittle ich dir Schritt für Schritt die Grundlagen und essentiellen Fähigkeiten, die du  benötigst, um ABAP zu verstehen und anzuwenden.\nAuch während dieses Kurses kannst du erneut deine eigenen ABAP-Programme schreiben und testen.\nDer Kurs ist ideal für Einsteiger. Er basiert auf den Inhalten des ersten und zweiten Teils und führt diese konsequent weiter in die Tiefe, damit du  sicher  verstehst, wie du am besten deine eigenen SAP-Programme implementieren  kannst.\nDie in Teil 1 und 2 vermittelten Inhalte setze ich in diesem Kurs als bekannt voraus. Wir werden uns nach und nach an weitere wichtige Schlüsselaspekte der Programmiersprache herantasten, wie zum Beispiel:\nKontrollstrukturen und Schleifen\nLogische Ausdrücke\nModularisierung von Prozeduralen Programmen in ABAP\nPraktische Implementierung einer weiteren komplexen Anforderung\nDu wirst mir dabei zusehen können, wie ich die Befehle, die ich erkläre, selbst anwende und ich werde dich anleiten, deinen eigenen Code  zu schreiben und zu modifizieren.  Du bekommst das Wissen auf  eine Art und Weise vermittelt, dass du garantiert die grundlegenden  Konzepte verstehen und anwenden können wirst! Außerdem werden wir uns  in diesem Kurs auf die Praxis fokussieren, so dass du dich nicht ewig  mit Theorie herumquälen musst, sondern die Sprache in einem absolut  praktikablen und leicht verständlichen Ansatz lernen wirst und mit jeder  Kurseinheit tiefer in die Materie einsteigst.\nEgal ob du neu in der Programmierung bist, oder nur neu im Bereich ABAP: Diese Kursreihe ist dein Weg zur schnellen, professionellen  ABAP-Softwareentwicklung im Businessumfeld!\nDie meisten ABAP-Kurse kosten tausende von Euros und kratzen gerade einmal an der Oberfläche. Meist darfst du dich erst einmal durch  tausende langweiliger PDF-Seiten lesen und hast dann immer noch keine  praktische Erfahrung. Der Zeitaufwand kann locker über 50 Tage im  Vollzeitstudium betragen! Nicht so mit diesem Kompendium! Ich bin  erfahrener SAP Ausbilder, Coach und Trainer, der über 5 Jahre Erfahrung  in der Beratung und Implementierung mit SAP ABAP hat. Ich vermittle dir  State-of-the-art ABAP-Knowhow aus dem aktuellsten Patch von SAP!",
      "target_audience": [
        "Teilnehmer von Teil 1 und 2 der Kursreihe",
        "Leute die speziell an den Themen dieses Kurses interessiert sind",
        "SAP Basis Consultants die ihr Wissen erweitern wollen",
        "SAP Benutzer, die ihr Wissen um technische Skills erweitern wollen",
        "SAP BW Consultants",
        "Jeder!"
      ]
    },
    {
      "title": "(35+Saat) Python | Sıfırdan Zirveye Programlama (2024)",
      "url": "https://www.udemy.com/course/python-baslangictan-ileri-seviye-yazilim-dersleri/",
      "bio": "Python Kütüphaneleri Olan Kivy, PyGame, Flask, PyQt5, Selenium, NumPy ve Pandas'la Yazılıma Güçlü Bir Giriş Yapın!",
      "objectives": [
        "Bu kursun temel amacı sıfırdan ileri seviyeye yazılım eğitimi vermektir. Kurs buna göre hazırlanmış olup aşağıda detaylarını okuyacağınız şekilde yazılım konusunun hemen hemen her alanına giriş mahiyeti taşımaktadır.",
        "Udemy'deki en güçlü eğitmen desteklerinden birisini sunuyoruz. Siz de bu destekten faydalanın.",
        "Python'ın ve yazılımın temellerini iyi bir şekilde kavramış olacaksınız.",
        "Python'ı gönül rahatlığıyla CV'nize ekleyeceksiniz.",
        "Udemy'deki en kapsamlı Python kurslarından birisine sahip olacaksınız.",
        "Python'ın temellerini öğrendikten sonra 8 kütüphane/frameworkle daha çalışarak Python becerinizi geliştireceksiniz: Flask, Kivy, PyQt5, Folium, PyGame, Selenium, NumPy ve Pandas.",
        "Flask frameworküyle bir blog sitesini sıfırdan yaparak web geliştirmenin temellerini öğreneceksiniz.",
        "Folium kütüphanesiyle pandemi döneminde haber sitesi ve kanallarında sıkça gördüğümüz Koronavirüs Dünya Haritası yapacaksınız.",
        "Kivy frameworküyle bir mobil uygulama yaparak mobil uygulama geliştirmenin temellerini öğreneceksiniz.",
        "PyGame kütüphanesiyle Space Invaders(Uzaylı İstilacılar) adlı oyunu geliştirerek oyun geliştiriciliğinin temellerini öğreneceksiniz.",
        "PyQt5 kütüphanesiyle bilgisayarınızda kullanabileceğiniz gerçek bir NotePad projesi yaparak yazdığınız programlara arayüz eklemeyi öğreneceksiniz.",
        "Selenium kütüphanesiyle Instagram botu yazarak tarayıcı botlarının nasıl yazılacağını öğreneceksiniz.",
        "Pandas ve NumPy kütüphanelerinin temellerini öğrenerek Veri Bilimine giriş yapacaksınız."
      ],
      "course_content": {
        "Kursun Genel Tanıtımı": [
          "Kursun Genel Tanıtımı",
          "Sorularımıza Nasıl Daha Hızlı Cevap Alabiliriz?"
        ],
        "Gerekli Ortamların Kurulması (Windows)": [
          "Anaconda'nın Kurulumu (Windows)",
          "Duyuru!",
          "Activation Hatası",
          "Path Hatası",
          "Anaconda ve Jupyter Notebook Kullanımı (Windows)",
          "PyCharm Kurulumu ve Kullanımı (Windows)",
          "PyCharm Interpreter Hatası",
          "Sistemi 32 bit Olanlar İçin IDE Tavsiyesi"
        ],
        "Gerekli Ortamların Kurulması (MacOS)": [
          "Anaconda'nın Kurulumu ve Kullanımı(MacOS)",
          "Jupyter Notebook'un Kullanımı (MacOS)",
          "PyCharm Kurulumu ve Kullanımı (MacOS)"
        ],
        "Temel Veri Tipleri": [
          "Bölümde Kullanılan Dosyalar",
          "Bu Python Komutlarını Neden Öğreniyoruz?",
          "Python IDLE",
          "Programlama ya da Yazılım Nedir?",
          "Sayılar ve Temel Matematik Operatörleri",
          "Değişkenler Konusu",
          "Diğer Matematik Operatörleri",
          "Stringlere Giriş",
          "Veri Tipi Dönüşümleri ve Print Fonksiyonu",
          "Bazı Faydalı Bilgiler",
          "Kullanıcıdan Veri Alma",
          "Eval Fonksiyonu",
          "Programlama Neden Önemli?",
          "Kodlama Egzersizleri - Temel Veri Tipleri"
        ],
        "İleri Seviye Veri Tipleri": [
          "Bölümde Kullanılan Dosyalar",
          "Listelere Giriş - 1",
          "Listelere Giriş - 2",
          "Tuple (Demet) Konusu",
          "Dictionary (Sözlük) - 1",
          "Dictionary (Sözlük) - 2",
          "PayPal'ın Kuruluşu",
          "Kodlama Egzersizleri - İleri Seviye Veri Tipleri"
        ],
        "Koşullu Durumlar": [
          "Bölümde Kullanılan Dosyalar",
          "Bool Veri Tipi ve Karşılaştırma Operatörleri",
          "None Değeri ve Mantıksal Bağlaçlar",
          "in ve is İşleçleri",
          "Koşullu Durumlar - 1",
          "Koşullu Durumlar - 2",
          "Matrix'i Anlamak",
          "Kodlama Egzersizleri - Koşullu Durumlar"
        ],
        "Döngüler": [
          "Bölümde Kullanılan Dosyalar",
          "While Döngüsü",
          "For Döngüsü - 1",
          "For Döngüsü - 2",
          "For Döngüsü - 3",
          "range() Fonksiyonu",
          "Break ve Continue İfadeleri",
          "List Comprehension Yöntemi",
          "Yazılım Treni"
        ],
        "Kodlama Egzersizleri - Döngüler": [
          "Bölümde Kullanılan Dosyalar",
          "Parola Kontrolü",
          "İki Listenin Farkını Bulma",
          "Harf Sayacı",
          "Asal Sayı Bulma",
          "Faktöriyel",
          "Udemy'nin Kurucusunun Bir Türk Olduğunu Biliyor Muydunuz?"
        ],
        "Fonksiyonlar": [
          "Bölümde Kullanılan Dosyalar",
          "Fonksiyonlar - 1",
          "Fonksiyonlar - 2",
          "print() ve return İfadelerinin Arasındaki Fark",
          "Fonksiyon Parametreleri",
          "Global ve Yerel Değişkenler",
          "Lambda Gösterimi",
          "Yapay Zeka Nedir?"
        ],
        "Kodlama Egzersizleri - Fonksiyonlar": [
          "Bölümde Kullanılan Dosyalar",
          "Çevre ve Alan Hesaplayıcı - 1",
          "Çevre ve Alan Hesaplayıcı - 2",
          "Çevre ve Alan Hesaplayıcı - 3",
          "Ebob Bulma",
          "Ekok Bulma"
        ]
      },
      "requirements": [
        "Bilgisayar kullanabilmek dışında hiçbir gereksinim ya da ön koşul bulunmamaktadır.",
        "Kurs boyunca, projelerin geliştirilmesi için gerekli bilgiler derslerin içeriğine eklenmiştir."
      ],
      "description": "\"Herkesin kodlama öğrenmesi gerekir. Çünkü kodlama size nasıl düşüneceğinizi öğretir.\"\nSteve Jobs\n\n\nBaşlangıçtan İleri Seviye Python kursumuza hoş geldiniz!\nYazılım hakkında hiçbir fikriniz yoksa ya da bir şekilde başlayıp daha sonra yarım bıraktıysanız bu kurs tam size göre! İster web geliştirme öğrenmek isteyin, ister oyun geliştirme isterse de mobil uygulama; bu kursta aradığınız her şeyi bulacaksınız.\n\n\nBu kursa neden kaydolmalısınız;\nUdemy'deki en hızlı eğitmen desteklerinden birini sunuyoruz. Her türlü sorunuza en hızlı şekilde cevap bulacaksınız.\nBu kurs yazılım alanına giriş yapabilmeniz için özel olarak tasarlandı.\nYazılımın ne olduğu ve kodlamanın nasıl yapıldığıyla alakalı çok net ve temel seviye bilgiler edinmiş olacaksınız.\nDünyada en hızlı büyüyen sektörlerden birisine giriş yapabilme şansı elde edeceksiniz.\nAlgoritma kurma mantığı becerisi elde edeceksiniz. Bununla birlikte günlük hayatta karşılaştığınız problemleri çözebilme yeteneği de elde edeceksiniz.\nDünyadaki en popüler yazılım dillerinden birisini CV'nize ekleyebileceksiniz.\nVe son olarak kodlamanın ne kadar zevkli bir şey olduğunu keşfedeceksiniz :)\n\n\nÖğrencilerimiz Soru-Cevap bölümü yanında, kurduğumuz WhatsApp Destek Hattı aracılığıyla da sorularına daha efektif bir şekilde cevap alabilecekler.\n\n\nKurs boyunca aşağıdaki konuları birlikte öğreneceğiz:\nPython Temelleri (Veri Tipleri, Fonksiyonlar, Modüller, Koşullu Durumlar vb.)\nFlask ile Web Geliştirme\nPyGame ile Oyun Geliştirme\nKivy ile Mobil Uygulama Geliştirme\nNesne Tabanlı Programlama(OOP)\nFolium ile İnteraktif Koronavirüs Dünya Haritası\nPyQt5 ile NotePad Masaüstü Bilgisayar Programı\nPandas ve NumPy ile Veri Bilimine Giriş\nSelenium ile Instagram Botu\nAkıllı Sözlük\n\n\nHazırsanız hemen başlayalım!",
      "target_audience": [
        "Yazılım dünyasına adım atmak isteyenler",
        "Başka bir bilgisayar dili bilip de Python dünyasını keşfetmek isteyenler",
        "Web geliştirme, oyun geliştirme, mobil uygulama geliştirme ya da veri bilimi konularına giriş yapmak isteyenler",
        "Python'ı temel seviyede bilip kendisini Python konusunda ileri seviyeye taşımak isteyenler"
      ]
    },
    {
      "title": "Java SE (Standard Edition)",
      "url": "https://www.udemy.com/course/java-se-standard-edition/",
      "bio": "Temel Java'yı bu eğitimle keşfedeceksiniz!",
      "objectives": [
        "Javaya yeni başlayan herkes bu kursa katılabilir.",
        "Java teknolojileri üzerine kariyer yapmak isteyenlere yardımcı olmak.",
        "Üniversitede Java dersi alan kişilere yardımcı olmak.",
        "Java'yı merak eden herkese yardımcı olmak."
      ],
      "course_content": {
        "Setups - Geliştirme ortamının hazırlanması": [
          "001-Java SE Programlama için kurulumlar 1",
          "002-Java SE Programlama için kurulumlar 2"
        ],
        "Java Basics - Java SE temelleri sunumu": [
          "003-Java SE Programlama Dilinin Tanıtımı 1",
          "004-Java SE Programlama Dilinin Tanıtımı 2"
        ],
        "Working With Java Data Types - Veri Tipleri ile Değişkenler": [
          "005-Selam JavaSE",
          "006- Sayısal Tipler - Karakter Tipi",
          "007-DegiskenTipleri-BooleanTipi",
          "008-DegiskenlerinDeklereEdilmesi",
          "009-DinamikilkDegerAtamasi",
          "010-KapsamAlanlariVeDegiskenlerinYasamSureleri",
          "011-TipDonusumleri"
        ],
        "Creating and Using Arrays - Diziler": [
          "012-TekBoyutluDiziler",
          "013-IkiBoyutluDiziler",
          "014-DegiskenBoyutluDiziler",
          "015-IkiBoyutluDizilerdeDegerlerinAtanmasi",
          "016-UcBoyutluDiziler",
          "017-DiziDeklarasyonlari"
        ],
        "Operators - Operatörer": [
          "018-AritmetikOperatorler",
          "019-ModAlmaOperatoru",
          "020-BilesikAtamaOperatorleri",
          "021-ArttirmaVeEksiltmeOperatorleri",
          "022-IliskiselOperatorler",
          "023-AtamaOperatorleri"
        ],
        "Literals": [
          "IntegerLiterals",
          "FloatingPointLiterals",
          "Character_StringLiterals"
        ],
        "Decision Constructs - Karar Kontrol Yapıları": [
          "if",
          "Nested_if",
          "IfElse",
          "IfElseIf",
          "IfElseIf_BirdenFazlaSartli",
          "Switch",
          "SwitchCase",
          "SwitchBreak",
          "Switch_Ile_ArtikYilBulma",
          "SwitchDongusundeStringKullanimi",
          "NestedSwitch"
        ],
        "Using Loop Constructs - Döngüler": [
          "While",
          "While_BirdenFazlaSartli",
          "DoWhile",
          "For",
          "For_Ile_SusluParantezlerArttirimAzaltimlar",
          "For_Ile_TekVeyaCiftSayilarinYazdirilmasi",
          "For_Ile_AsalSayilariBulma",
          "ForEach",
          "Break",
          "Break Label",
          "Continue",
          "Continue Label",
          "Return",
          "For Switch Birlikte Kullanimi 1",
          "For Switch Birlikte Kullanimi 2",
          "Klavyeden Deger Alma Karar Kontrol Yapilari Ve Döngüler"
        ],
        "Objects-Classes (Nesneler-Sınıflar)": [
          "Bir Sinif - Bir Nesneli",
          "Iki Sinif Icice - Bir Nesneli",
          "Iki Sinif - Bir nesneli",
          "Iki Sinif - Iki Nesneli",
          "Iki Sinif - Iki Nesne ve Birbirine Atanmalari"
        ],
        "Methods-Metotlar": [
          "Parametresiz void metod tanimlama - Bir Nesneli",
          "Parametresiz void metod tanimlama - Iki Nesneli",
          "parametresiz_double_metod_return_iki_sinif_icice_iki_nesneli",
          "parametresiz_ve_parametreli_metodlar_iki_sinif_icice_iki_nesneli",
          "parametresiz_ve_parametreli_metodlar_iki_sinif_iki_nesneli",
          "hazirlayici_metodlar_iki_sinif_iki_nesneli",
          "This Anahtar Sozcugu",
          "Overloading Metodlar",
          "Overloading ve Constructors",
          "parametre olarak nesnelerin kullanilmasi",
          "Argumentlerin Gecirilmesi",
          "metod_icinde_nesne_olusturulmasi",
          "recursion özyinelemeli metodlar",
          "access modifiers - erisim belirtecleri",
          "static anahtar sözcüğü",
          "final anahtar sözcüğü"
        ]
      },
      "requirements": [
        "Javaya ilgi duymanız bu işe başlamanız için yeterlidir."
      ],
      "description": "Java yazılım diline yeni başlayan herkes bu kursa katılabilir. Java programlama ve algoritma bilgilerini pratiğe dökmekte zorlanan kişiler bu kursa katılabilir. Java teknolojileri uzerine kariyer yapmak isteyen herkes bu kursa katılabilir. Bu eğitim Java teknolojileri üzerine kariyer yapmak isteyenlere yardımcı olacaktır. Eğitim boyunca derslerde her şeyi adım adım anlatmaya çalıştık. Java teknolojileri uzerine kariyer yapmak isteyen herkes bu kursa katılabilir.\nJava yazılım diline yeni başlayan herkes bu kursa katılabilir. Java programlama ve algoritma bilgilerini pratiğe dökmekte zorlanan kişiler bu kursa katılabilir. Java teknolojileri uzerine kariyer yapmak isteyen herkes bu kursa katılabilir. Bu eğitim Java teknolojileri üzerine kariyer yapmak isteyenlere yardımcı olacaktır. Eğitim boyunca derslerde her şeyi adım adım anlatmaya çalıştık. Java teknolojileri uzerine kariyer yapmak isteyen herkes bu kursa katılabilir.\nJava yazılım diline yeni başlayan herkes bu kursa katılabilir. Java programlama ve algoritma bilgilerini pratiğe dökmekte zorlanan kişiler bu kursa katılabilir. Java teknolojileri uzerine kariyer yapmak isteyen herkes bu kursa katılabilir. Bu eğitim Java teknolojileri üzerine kariyer yapmak isteyenlere yardımcı olacaktır. Eğitim boyunca derslerde her şeyi adım adım anlatmaya çalıştık. Java teknolojileri uzerine kariyer yapmak isteyen herkes bu kursa katılabilir.\nJava yazılım diline yeni başlayan herkes bu kursa katılabilir. Java programlama ve algoritma bilgilerini pratiğe dökmekte zorlanan kişiler bu kursa katılabilir. Java teknolojileri uzerine kariyer yapmak isteyen herkes bu kursa katılabilir. Bu eğitim Java teknolojileri üzerine kariyer yapmak isteyenlere yardımcı olacaktır. Eğitim boyunca derslerde her şeyi adım adım anlatmaya çalıştık. Java teknolojileri uzerine kariyer yapmak isteyen herkes bu kursa katılabilir.",
      "target_audience": [
        "Javaya yeni başlayan herkes bu kursa katılabilir.",
        "Java teknolojileri üzerine kariyer yapmak isteyenler bu kursa katılabilir.",
        "Üniversitede Java dersi alan kişilere de derslerinde olumlu katkılar sağlayacaktır."
      ]
    },
    {
      "title": "Scala desde Cero",
      "url": "https://www.udemy.com/course/scala-desde-cero/",
      "bio": "Aprende a desarrollar programas con el lenguaje Scala desde cero hasta conceptos avanzados",
      "objectives": [
        "Aprenderás a desarrollar programas con el lenguaje de programación Scala",
        "Conocerás los conceptos básicos de Scala",
        "Aprenderás a manejar la orientación a Objetos en Scala, manejando Clases y Traits",
        "Estudiarás los conceptos de la programación Funcional en Scala"
      ],
      "course_content": {
        "Introducción": [
          "Contenido del curso",
          "notas sobre valoraciones",
          "Nota sobre preguntas y respuestas"
        ],
        "Introducción a Scala. Instalación": [
          "Introducción al lenguaje Scala",
          "Diferencias básicas con Java",
          "Un recorrido por la página Web de Scala",
          "Tipos de descarga del software de Scala",
          "Instalación manual",
          "Instalación de IntelliJ Idea",
          "Ejemplo. Crear un proyecto en IntelliJ Idea"
        ],
        "Empezar a conocer Scala": [
          "Introducción a REPL. Herramienta en modo comando",
          "Tipos de Datos",
          "VAR y VAL. Variables",
          "Crear variable en modo Lazy",
          "Práctica Variables y constantes",
          "Comentarios",
          "Bloques",
          "Operadores",
          "Condiciones. Comando IF",
          "Bucles",
          "Rangos",
          "Inicializar variables por defecto",
          "Pattern Matching Parte 1",
          "Pattern Matching Parte 2",
          "Trabajar con Strings",
          "String Interpolation",
          "Trabajar con Números"
        ],
        "Colecciones": [
          "Introducción a las colecciones",
          "List",
          "Operaciones con List",
          "Más operaciones con List",
          "ListBuffer",
          "Array",
          "ArrayBuffer",
          "Set",
          "Map"
        ],
        "Funciones/Métodos": [
          "Funciones",
          "Procedimientos. Funciones que no devuelven valor",
          "Funciones con parámetros",
          "Parámetros con nombre",
          "Parámetros por defecto",
          "Número variablede parámetros"
        ],
        "Crear aplicaciones con IntelliJ Idea": [
          "Un breve repaso de IDEA",
          "Mi primera aplicacion Scala",
          "Crear una aplicación con el metodo \"main\"",
          "compilar con scalac"
        ],
        "Clases y Objetos": [
          "Clases Parte 1",
          "Clases Parte 2",
          "Herencia",
          "Traits- Parte1",
          "Traits- Parte 2",
          "Traits Múltiples",
          "Modificadores de Acceso: private, public, protected",
          "Constructores",
          "Constructores Auxiliares",
          "Constructores múltiples",
          "Singleton Objects",
          "Companion Objects",
          "Crear Instancias sin NEW",
          "Case Class",
          "clases Abstractas"
        ],
        "Programación funcional": [
          "High Order Functions",
          "Funciones anónimas. Functions Literals",
          "Funciones como parametros",
          "Funciones como variables",
          "Devolver una función",
          "Partially Applied Functions",
          "Currying Functions",
          "Closures"
        ],
        "Otras caracteristicas": [
          "Options",
          "Exceptions. Try Catch",
          "Exceptions. finally",
          "Exceptions. Throw",
          "Sobrecarga. Overloading"
        ],
        "Ficheros": [
          "Leer Ficheros de texto",
          "Escribir ficheros de texto",
          "Escribir y leer ficheros binarios"
        ]
      },
      "requirements": [
        "Conocimientos de programación",
        "Conocimientos de Orientación a objetos",
        "Disponer de un Pc y conexión a Internet"
      ],
      "description": "Hola, ¡¡¡Bienvenido al curso de Scala desde Cero!!!\nEn este curso aprenderás como desarrollar programas y aplicaciones con uno de los lenguajes más utilizados en el mundo profesional y laboral : Scala\nScala es uno de los lenguajes de programación  más demandados en el perfil profesional que buscan las empresas en la actualidad.\nEs un lenguaje que combina tanto la Orientación a Objetos como la Programación Funcional, de forma concisa y sencilla. Esto lo ha convertido en un lenguaje que se utiliza en distintos entornos como Spark, Analítica de Datos, Big Data, programación distribuida, etc....\nDurante este curso vas a aprender todos los conceptos y características de este lenguaje, conocerás las herramientas de desarrollo que puedes utilizar y estudiaremos todos los conceptos más importantes.\nSiempre mantengo mis cursos actualizados, con lo que iré añadiendo más puntos según vayan surgiendo.\nLos puntos básicos que veremos  en la formación son:\nIntroducción\nInstalación\nComandos y conceptos básicos del lenguaje\nOrientación a Objetos en scala\nFunciones/Métodos\nProgramación Funcional\nOptions\nTraits\nY muchos más conceptos\nSi tienes cualquier duda o pregunta, ponte en contacto conmigo. Estaré encantado de contestarte\nEspero verte pronto y que disfrutes del curso!!!!\nSergio de Apasoft Training",
      "target_audience": [
        "Profesionales que deben desarrollar aplicaciones en un entorno Scala",
        "Personas que quieran ampliar conocimientos de programación",
        "Profesionales que quieran tener un curriculum más amplio para su trayectoria profesional"
      ]
    },
    {
      "title": "C#でテスト駆動開発【TDD】をする方法",
      "url": "https://www.udemy.com/course/cs-tdd01/",
      "bio": "テストファーストでC#プログラミングをする方法",
      "objectives": [
        "C#でテストコードを書きながら実装をする方法",
        "Moqを使ってデータベース等の外部接触部分のテストをする方法",
        "Chaining Assertionを使ってMSTestを簡単に書く方法",
        "カバレッジツールを使ってMSTestで無料でカバレッジを採る方法",
        "カバレッジの意味が分かる",
        "テストファーストで実装する意味が分かる",
        "ViewとViewModelに分ける意味が分かる"
      ],
      "course_content": {
        "C#でテスト駆動開発をする方法": [
          "はじめに",
          "#02 テストコードの基本的な書き方",
          "#03 テスト駆動でテストを書く",
          "#04 コンパイルエラーを取り除く",
          "#05 レッドバーを取り除く",
          "#06 ここまでのまとめと次回の内容",
          "#07 画面のテスト方法",
          "#08 ViewとViewModel",
          "#09 ViewModelへのテストの書き方",
          "#10 計算結果表示のテストをする",
          "#11 データバインド",
          "#12 IPropertyChanged",
          "#13 ViewModelBase",
          "#14 データベースがらみのテスト方法予告",
          "#15 データベース部分のテストの方法",
          "#16 インタフェースを使ったテストの実装",
          "#17 Moqの使い方",
          "#18 データベース部分のテスト方法まとめ",
          "#19 Chaining Assertionの使い方",
          "#20 カバレッジの意味と採り方",
          "#21_VisualStudio2019で使えるカバレッジツール",
          "#22_データベースのデータ取得のテスト方法",
          "#23_データベースの更新系のテスト方法",
          "ラジオボタンのデータバインディングに関しての回答",
          "補講01_PropertyChangedEventHandlerとは何ですか？",
          "補講02_.NETCore以降のテストプロジェクト",
          "補講03_ViewModelBaseに関して",
          "補講04_画面遷移のテストコードに関して",
          "補講05B_FineCodeCoverageのカバレッジが.NETFrameworkだと動作しない問題の解決方法",
          "ソースコード（参考）",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "VisualStudio2017（無料でダウンロードできます）"
      ],
      "description": "この動画では「C#でテスト駆動開発をする方法」を解説しています。\n\n\nこんな悩みはありませんか？\nバグのないプログラミングをしたい\nバグが混入してもすぐに気付きたい\nバグのあるプログラムをリリースしたくない\nバグのないアプリケーションを開発し、クレーム対応に終われない日々を送りたい\n後輩に自信をもって教えることのできるプログラミング知識を付けたい\nチーム全体がオブジェクト指向でプログラミングをするチームにしたい\nテストを自動化して作業効率を上げたい\n\n\nこの動画を観ると次のようなことができるようになります。\nC#でのテストコードの書き方がわかる\n画面部分をViewとViewModelに分けてテストコードを書く方法がわかる\nデータベース部分をMoqを使ってテストコードを書く方法がわかる\nChainingAssertionを使って例外のテストコードを簡単に書く方法がわかる\nテストコードのカバレッジの意味と計測する方法がわかる\n\n\nテストコードやViewModelなど，\n聞きなれない方は難しそうで不安になったかも知れません。\nですが，講義の内容はすべて動画で，\n私がプログラミングをしながら一緒に学んでいくスタイルになっているので，\n初心者の方にも理解できる内容になっています。\n\n\n#01 はじめに\n#02 テストコードの基本的な書き方\n#03 テスト駆動でテストを書く\n#04 コンパイルエラーを取り除く\n#05 レッドバーを取り除く\n#06 ここまでのまとめと次回の内容\n#07 画面のテスト方法\n#08 ViewとViewModel\n#09 ViewModelへのテストの書き方\n#10 計算結果表示のテストをする\n#11 データバインド\n#12 IPropertyChanged\n#13 ViewModelBase\n#14 データベースがらみのテスト方法予告\n#15 データベース部分のテストの方法\n#16 インタフェースを使ったテストの実装\n#17 Moqの使い方\n#18 データベース部分のテスト方法まとめ\n#19 Chaining Assertionの使い方\n#20 カバレッジの意味と採り方\n#21_VisualStudio2019で使えるカバレッジツール",
      "target_audience": [
        "C#プログラマー",
        "これからC#を学びたいと思っている人"
      ]
    },
    {
      "title": "【Laravel】マルチログイン機能を構築し本格的なECサイトをつくってみよう【Breeze/tailwindcss】",
      "url": "https://www.udemy.com/course/laravel-multi-ec/",
      "bio": "Laravelが搭載している認証機能を活用し、管理者、オーナー、ユーザーと3つのログイン情報を持たせ、本格的なECサイトをつくってみよう。 Bladeコンポーネント, Stripe決済, 画像アップロードなど実戦形式でたっぷり解説してます。",
      "objectives": [
        "BladeComponentを活用したView画面作成方法",
        "LaravelBreezeを活用した認証機能",
        "Laravelでのマルチログイン環境構築",
        "Tailwindcssを使ったモダンな画面作成方法",
        "画像アップロード, リレーションなど",
        "ダミーデータ設定、stripeを使った決済方法",
        "MicromodalJsやSwiperJsなどのJSライブラリの設定"
      ],
      "course_content": {
        "紹介": [
          "コース紹介",
          "講座の進め方、資料の場所など",
          "講座で扱っている資料・サンプルコード",
          "講座の内容, Laravelの概要",
          "追記: windowsでのインストールコマンド",
          "Laravelのインストール",
          "DB設定、マイグレート",
          "Git/GitHubの設定",
          "初期設定"
        ],
        "Laravel Breeze + Blade Component": [
          "追加動画の補足(Vite)",
          "追加動画: Laravel9.18以降 Vite",
          "Laravel Breezeの紹介",
          "追加動画: 表示がおかしくなったら",
          "Laravel Breezeのインストール",
          "表示の流れ、ルーティング",
          "ルート->コントローラ->ビュー",
          "日本語化対応",
          "tailwindcssの紹介",
          "追加: tailwindcss ver3変更にあたって",
          "Blade コンポーネントの紹介",
          "準備 (ルート->コントローラ->ビュー)",
          "$slot (スロット)",
          "x-slot (名前付きスロット)",
          "データの受け渡し方法 (属性)",
          "データの受け渡し方法 (変数)",
          "初期値の設定方法 (@props)",
          "属性バッグ($attribute)",
          "クラスベースのコンポーネント",
          "クラスベースで属性・初期値を設定する",
          "コンポーネントを読んでみる",
          "Alpine.jsの紹介"
        ],
        "ライフサイクル": [
          "ライフサイクル その1",
          "サービスコンテナ その1",
          "サービスコンテナ その2",
          "ライフサイクル その2",
          "サービスプロバイダ その1",
          "サービスプロバイダ その2"
        ],
        "マルチログイン対応": [
          "Laravel11以降の対応について",
          "モデルとマイグレーション",
          "マイグレーション(パスワードリセット)",
          "ルート設定",
          "RouteServiceProvider",
          "Guard設定 config/auth.php",
          "Middleware/Authenticate",
          "Middleware/RedirectIfAuthenticated",
          "リクエストクラス",
          "コントローラ追加修正その1",
          "コントローラ追加修正その2",
          "ビューの追加修正",
          "ビュー(レイアウト)の追加修正"
        ],
        "管理者側": [
          "設計資料の紹介",
          "アプリ名、ロゴ設定",
          "リソースコントローラ",
          "シーダー (ダミーデータ)",
          "データを扱う方法の比較",
          "Carbon 日付ライブラリ その1",
          "Carbon その2",
          "一覧画面 (tailblocks利用)",
          "Create 新規作成",
          "Store 保存の解説",
          "保存(簡易バリデーション)",
          "フラッシュメッセージ",
          "Edit 編集",
          "Update 更新",
          "ソフトデリート View側",
          "ソフトデリート 処理",
          "ソフトデリート利用例(期限切れオーナー)",
          "ページネーション(tailwindcss)",
          "その他 (route修正、レスポンシブ修正など)"
        ],
        "オーナー側": [
          "不具合対策について",
          "オーナーの概要",
          "Shop 外部キー制約",
          "Shop リレーション 1対1",
          "Shop 作成 その1 (トランザクション・例外・エラー)",
          "Shop 作成 その2",
          "Shop Delete (カスケード)",
          "Shop Index (ルート, コントローラ, ビュー)",
          "Shop コントローラミドルウェア",
          "カスタムエラーページ",
          "Shop Index画面",
          "Shop 画像アップロード",
          "Intervention Image (画像リサイズ)",
          "補足: GDライブラリがないと言われたら",
          "フォームリクエスト(カスタムリクエスト)",
          "サービスへの切り離し",
          "Shop Editの残り",
          "Shop Updateの残り",
          "Image 雛形作成",
          "Image Index",
          "Image Create (画像複数アップロード) とバリデーション",
          "Image Store",
          "Image Edit, Update",
          "Image destroy",
          "Image ダミーデータ",
          "Category モデル, マイグレーション",
          "Category ダミーデータ",
          "Product の雛形作成",
          "Product マイグレーション・シーダー",
          "Product リレーション",
          "Product Index",
          "Eager Loading",
          "Stock",
          "Product Create(カテゴリー)",
          "追記: Micromodel追加に対する app.cssについて",
          "Micromodal.js (画像選択)",
          "Micromodal.js その2",
          "Micromodal.js 補足(暫定策)",
          "Product Createの残り",
          "Product Store",
          "Product Edit その1",
          "Product Edit その2",
          "Product Update その1 (Editの補足, フォームリクエスト)",
          "Product Update その2 (楽観的ロックみたいに)",
          "Product Update その3 (更新処理)",
          "定数 (クラスで対応)",
          "Product Destroy",
          "Image削除時の補足",
          "その他 (routeなど)",
          "追加: ログアウト時のリダイレクト"
        ],
        "ユーザー側 その1": [
          "ユーザーの概要",
          "商品一覧の準備",
          "商品一覧 ビュー側の調整",
          "大量のダミーデータ(faker & factory)",
          "View側の調整",
          "商品一覧のクエリ その1",
          "商品一覧のクエリ その2",
          "商品の詳細 準備",
          "商品の詳細 View調整",
          "Swipe.jsのお知らせ(バージョン指定)",
          "Swiper.js (カルーセル) その1",
          "Swiper.js その2",
          "Shop情報 その1",
          "Shop情報 その2 Micromodal.js",
          "商品の詳細 数量",
          "Cart (カート) 多対多",
          "Cart 商品を追加",
          "Cart 保存処理",
          "Cart indexメソッド",
          "Cart Viewを作成",
          "Cart 商品を削除",
          "Stripe 概要・登録",
          "Stripe ライブラリ〜コントローラその1",
          "Stripe コントローラ その2",
          "Stripe前の在庫処理",
          "checkoutへのボタン追加",
          "追記: Stripe API更新に関して",
          "Stripe Checkout・決済処理",
          "Stripe 決済成功時の処理",
          "Stripeキャンセル時の処理",
          "Git pull request, readme.md 追記"
        ],
        "ユーザー側 その2": [
          "商品一覧 ローカルスコープ",
          "商品詳細 コンストラクタの修正",
          "表示順 その1",
          "表示順 その2",
          "表示件数",
          "pagination 一部修正",
          "検索フォーム ビュー側調整",
          "検索フォーム カテゴリー",
          "検索フォーム キーワード",
          "mailtrap.io",
          "メールの設定・解説",
          "テストメールの送信",
          "非同期処理 (キュー&ジョブ)",
          "非同期処理 その2",
          "CartServiceの作成",
          "カート情報から新しく配列をつくる",
          "ユーザー向け商品購入メール",
          "オーナー向け商品販売メール",
          "その他、git pull、 README.md追記"
        ],
        "追加動画：不具合対策など": [
          "デバッグ (adminログイン後ownerログインした場合)",
          "対策1 セッション・クッキー",
          "対策2: Layouts/app.blade.php の修正"
        ],
        "補足1 VS Code / Git, GitHub": [
          "VS Codeのインストール 1",
          "VSCodeインストール方法 その2",
          "VS Code 拡張機能",
          "Gitのインストール(mac)",
          "Gitのインストール(win)",
          "GitHubの登録",
          "gitのconfig設定",
          "SSHキーの設定 (mac)",
          "SSHキーの設定 (win)",
          "gitHubにpushしてみる (init, add, commit, push)",
          "初回の補足と2度目のpush",
          "ブランチとプルリク",
          "講座コードのダウンロード&インストール方法"
        ]
      },
      "requirements": [
        "インターネット接続可能なパソコン",
        "わからない事があったら遠慮なく質問する主体性",
        "第1弾PHP/Laravel講座で扱ったくらいのPHP/Laravelの知識"
      ],
      "description": "2020年2月に第1弾『PHP/Laravel講座』をリリースしまして、\nおかげさまでたくさんの方にご利用いただく事ができました。\n\n\nリリース後、これまでに頂いたご意見と、\n約1年間、他の複数の講座を作成した経験も踏まえ、\nようやく第2弾『Laravel講座』をリリースする事ができました。\n\n\nこの講座では実際のWebサービスでよく見かける、\n管理者、オーナー、ユーザーとそれぞれ別ログイン画面を持つ『マルチログイン機能』を構築し、\n本格的なECサイトを構築しながら、\n『Laravel』の様々な機能を取得していく内容になっています。\n\n\n「説明書を読むよりまず動かしてみる」というスタンスな事もあり、\nまずは動かしてみて、\n必要に応じて必要な知識を覚えていくというスタイルで講座を構成しております。\n(必要に応じて学習していく事を【遅延評価勉強法】というそうです。)\n\n\n■更新情報\n2022/9/26 日本語対応のレクチャーを一部編集しました。\n2022/7 Viteについて追加しました。\n\n\n講座の内容\nセクション1・・講座の説明\nセクション2・・LaravelBreeze + Bladeコンポーネント\nセクション3・・ライフサイクル\n(サービスコンテナ/サービスプロバイダ/ミドルウェア)\n\n\nセクション4・・マルチログイン機能の構築\nセクション5・・管理側\n(リソースコントローラ、ダミーデータ、CRUD操作、TailBlocksを使ったビュー画面、ソフトデリートなど)\n\n\nセクション6・・オーナー側\n(画像アップロード、画像リサイズ(Intervention Image)、リレーション(1対1, 1対多)、トランザクション、外部キー制約、イ―ガ―ローディング、Micromodal.js など)\n\n\nセクション7・・ユーザー側その1\n(リレーション(多対多)、Swiper.js、Stripe決済、Factoryなど)\n\n\nセクション8・・ユーザー側その2 (追加中)\nローカルスコープ、表示順、表示件数、検索フォーム、メール送信、キュー・ジョブ・ワーカーなど\n\n\n大量のコードを書いていく構成上、\nノーミスで全て収録するというのが難しい事もあり、\n今回の講座ではセーブポイントのように後戻りできるよう、\n『Git』を使って講座を進めています。\n(ミスがあり次第セーブポイントに戻り、再収録しつつコードにも反映、\nという事を何度か実施しています。)\n\n\n\n\nもし『Git』を使ったことがなく、講座同様に扱ってみたいという場合は、\n事前に補足のセクションをご参照いただいて、\n『Git』の雰囲気もつかみつつ、講座をご利用いただければと思います。\n\n\n■動作環境\nPHP 7.4～8.0\nLaravel 8.x\nTailwindcss 2.x\n\n\n■扱っている事\nMVC/ライフサイクル/サービスコンテナ/サービスプロバイダ/ミドルウェア/LaravelBreeze/Bladeコンポーネント/RestFul/ソフトデリート/トランザクション/リレーション/外部キー制約/エラー処理/画像アップロード/Eager Loading/stripe決済/ ローカルスコープ/表示順/表示件数/検索フォーム/メール/キュー・ジョブ・ワーカーなどなど。\n\n\nおまけ・・Tailwindcss, TailBlocks, Intervention Image, Micromodal.js, Swiper.js, Stripe, Mailtrap, Node.js/npm, Git/GitHub",
      "target_audience": [
        "Laravelを使って本格的なECサイトを作成したい方",
        "マルチログイン機能を構築してみたい方",
        "本やネットで独学してもなかなか使いこなせないと思っている方"
      ]
    },
    {
      "title": "The Java Learning Guide",
      "url": "https://www.udemy.com/course/jczsnxta/",
      "bio": "Java with MySQL in Arabic",
      "objectives": [
        "ستتمكن من فهم لغة جافا"
      ],
      "course_content": {
        "Introduction": [
          "Setup the Environment",
          "Terms of use",
          "About the Instructor",
          "Rating the Course",
          "How to get the Certificate"
        ],
        "Java Basics": [
          "Output, Comments",
          "Variables",
          "Type Casting",
          "Input",
          "Age Calculator",
          "Operations",
          "If Statements",
          "Switch",
          "Loops",
          "Nested Loops",
          "Degree Calculator",
          "Control Statements",
          "Exception"
        ],
        "Arrays and Functions": [
          "Arrays",
          "Array of 2D",
          "Array part 2",
          "ArrayList",
          "String Methods",
          "Functions",
          "Passing Array through Functions",
          "Recursion",
          "Math Library",
          "Max Value"
        ],
        "Object Oriented Programming": [
          "Introduction",
          "Class and Objects",
          "Constructors",
          "Inheritance",
          "Super Constructor",
          "Override",
          "Access Modifier",
          "Nested Class",
          "Exceptions",
          "Polymorphism",
          "Abstract",
          "Multi Inheritance",
          "Anonymous",
          "Lambda",
          "Multi Threading",
          "Generic",
          "Enum",
          "Objects"
        ],
        "Java with MySQL": [
          "Setup Environment",
          "Connect to Database",
          "Result Set",
          "Display All Rows",
          "Update & Insert & Delete Row",
          "Result Set Meta Data"
        ]
      },
      "requirements": [
        "لا تحتاج لاي مؤهلات، هذا الكورس مخصص للاشخاص الذين لا يعرفون شي عن البرمجة"
      ],
      "description": "هذه الدورة المفصلة في المستوى الاول والثاني من الجافا حيث افترض الشخص الذي امامي لا يعرف اي شي عن عالم البرمجة ستتمكن من خلال هذه الدورة من الدخول الى عالم البرمجة وفهم اساسيات اللغات البرمجية\nلا تحتاج الى اي مؤهلات للدخول الى هذه الدورة ،تتميز هذه الدورة بأنها مفصلة ولكن ليس فيها تشعبات وتفاصيل غير اساسية\n\n\nMoving down, you will find the top 10 reasons that will elaborate on why to learn Java?\n1. Java’s Popularity and High Salary:\nJava is one of the most popular languages in the world. It is used by some 9 million developers and it runs on around 7 billion devices worldwide according to Oracle blogs. Because of the high demand for Java, Java developers are also quite sought after and they hold some of the most high-paying jobs in the industry. The average salary of a Java Developer lies between $47,169 to $106,610 per year.\n2. Java is Easy to Learn:\nJava is quite easy to learn and can be understood in a short span of time as it has a syntax similar to English. You can also learn from GeeksforGeeks Java Tutorials. This will guide you on how to get started with Java and make yourself proficient in it.\n3. Java has a Large Community:\nThere is a large online community of Java users ranging from beginner, advanced, and even expert levels that are particularly helpful in case any support is required. Some of the online communities for learning purposes are StackOverflow, Java Forums, etc. Also, there is a lot of resources like GeeksforGeeks etc. available on the internet regarding Java.\n4. Java has an abundant API:\nJava has an abundant Application Programming Interface (API) that includes many Java classes, packages, interfaces, etc. This is useful for constructing applications without necessarily knowing their inside implementations.\nJava has mainly three types of API i.e. Official Java core API’s, Optional official Java API’s and Unofficial API’s. These API’s overall are used for almost everything including networking, I/O, databases, media, XML parsing, speech synthesis, etc.\n5. Java has multiple Open Source Libraries:\nOpen-source libraries have resources that can be copied, studied, changed, shared, etc. There are multiple open-source libraries in Java such as JHipster, Maven, Google Guava, Apache Commons, etc. that can be used to make Java development easier, cheaper and faster.\n6. Java has Powerful Development Tools:\nThere are many Integrated development environments (IDE’s) in Java that provide various facilities for software development to programmers. Powerful Java IDE’s such as Eclipse, NetBeans, IntelliJ IDEA, etc. play a big role in the success of Java.\nThese IDE’s provide many facilities such as debugging, syntax highlighting, code completion, language support, automated refactoring, etc. that make coding in Java easier and faster.\nJava has created a base for the Android operating system and opted around 90% of fortune 500 companies to developing a lot of back-end applications. Also, it plays a great role in Apache Hadoop data processing, Amazon Web Services, and Windows Azure, etc.\n7. Java is Free of Cost:\nOne of the reasons Java is very popular among individual programmers is that it is available under the Oracle Binary Code License (BCL) free of charge. This means that Java is free for development and test environments, but for commercial purposes, a small fee is required.\n8. Java is Platform Independent:\nJava is platform-independent as the Java source code is converted to byte code by the compiler which can then be executed on any platform using the Java Virtual Machine. Java is also known as a WORA (write once, run anywhere) language because it is platform-independent.\nAlso, the development of most Java applications occurs in a Windows environment while they are run on a UNIX platform because of the platform-independent nature of Java.\n9. Java has great Documentation Support:\nThe documentation support for Java is excellent using Javadoc which is the documentation generator for Java. It uses the Java source code to generate the API documentation in HTML format. So, Javadoc provides a great reference while coding in Java so that understanding the code is quite simple.\n10. Java is Versatile:\nJava is very versatile as it is used for programming applications on the web, mobile, desktop, etc. using different platforms. Also, Java has many features such as dynamic coding, multiple security features, platform-independent characteristics, network-centric designing, etc. that make it quite versatile.\nIf you want to learn Java from scratch without any prior experience in programming then you should go for Java Foundation Course. This course has especially been designed for absolute beginners who want to build their programming foundation via the Java coding language. It doesn’t matter if you are in high school or are in the first year of your college, if you have the curiosity to learn to code, then this course is for you.",
      "target_audience": [
        "يمكن لأي شخص ان يدخل الدورة ويتعلم لغة جافا"
      ]
    },
    {
      "title": "リーダブルコード：C#で読みやすいコードを書く50の方法",
      "url": "https://www.udemy.com/course/readable_code/",
      "bio": "オブジェクト指向の知識がなくてもすぐに実行できるコードが読みやすくなるシンプルな方法を解説しています。",
      "objectives": [
        "C#での読みやすいコードの書き方",
        "IF文でのリーダブルコード",
        "名前の付け方",
        "変数のリーダブルコード",
        "メソッドのリーダブルコード",
        "クラスのリーダブルコード",
        "コメントの書き方"
      ],
      "course_content": {
        "リーダブルコード": [
          "はじめに",
          "02_プロジェクトの作成",
          "03_右に長いコードを書かない_隣のとなりまでしか訪ねない",
          "04_隣のとなりまで_右スクロールより縦スクロールの方がいい",
          "05_IFとELSEがある時は肯定系をIF否定形をELSEにする",
          "06_比較する時は変数を左_定数を右にする",
          "07_複数の比較を1回のif文でやらない",
          "08_boolの比較でTrueやFalseを書かない",
          "09_否定の否定はしない",
          "10_型チェックはasを使う",
          "11_メソッドはできるだけ早く抜ける_返却する値を無駄に変数に入れない",
          "12_対象外の時はすぐに抜ける",
          "13_都合が悪いケースはガードする",
          "14_必ずやりたい処理はfinallyを使う",
          "15_比較演算子はできるだけクラスにさせる",
          "16_ifの中括弧の省略はしない",
          "17_if文のリーダブルコードまとめ",
          "18_名前の付け方",
          "19_意図が明確な名前を付ける",
          "20_名前は素直に付ける_連想ゲーム的な名前を付けない",
          "21_1つの事しかしていなければ短い名前でも理解できる",
          "22_長いクラス名の扱い方",
          "23_単数形と複数形で表現する",
          "24_対になる言葉の組み合わせを決めておく",
          "25_業務で使う名前は統一する",
          "26_名前を統一するための辞書ツール作成",
          "27_メンバー変数にアンダーバーを付ける",
          "28_ハンガリアン記法を使わない",
          "29_メソッド内の変数をメソッド最初に全部宣言しない",
          "30_メソッド内の変数は直前に宣言する",
          "31_ループの変数はループ内で宣言する",
          "32_変数を使いまわさない",
          "33_boolの戻り値はどちらがTrueかをわかるようにする",
          "34_解放が必要なオブジェクトにはusingを使う",
          "35_varを推奨する場合",
          "36_メソッド名の付け方",
          "37_voidとFunctionを意識する",
          "38_インテリセンスを意識した名前にする",
          "39_生成メソッドはCreate_型変換はToを使う",
          "40_無駄に変数に入れて返却しない",
          "41_重複をなくす",
          "42_リージョンで区切らない",
          "43_アクセス修飾子とsealedを付ける",
          "44_クラス名はソリューションエクスプローラーで並べることを意識する",
          "45_クラス名は名詞か名詞句で命名する",
          "46_クラス名で継承元や特性を表現する",
          "47_メソッド内にコメントを書かない",
          "48_分かりづらい部分はメソッド化をしてメソッド名で想いを伝える",
          "49_コードを読んだ人が「えっ？」と思うことが予想される場所にだけコメントを付ける",
          "50_コメントで悪いコードを取り繕うことはできない",
          "リーダブルコード総評",
          "ソースコード",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "C#が動作する環境"
      ],
      "description": "どうもこんにちは，ピーコックアンダーソンです。\n今回のコースはリーダブルコードということで，\n読みやすいプログラムコードの書き方のコースになります。\n\n\nより良いコードを書くには色々な知識が必要ですが，\n今回は，オブジェクト指向，テスト駆動開発，デザインパターンを含まない\nジャンルで構成しています。\n\n\n要するにオブジェクト指向を理解していなくても\n即効性のある，シンプルに，どう書いたら読みやすいか？\nという観点での解説になっています。\n\n\nプログラムコードの書き方を\nGOOD（良い），\nNOTBAD（悪くはない），\nBADコード（悪い）\nの3種類に分類しながらサンプルコードを作成するので，\n最終的に完成するプログラムコードは，チーム全員で使える\nノウハウ的な使い方ができます。\n\n\nさらにレクチャー中に辞書ツールを作成するので，\nチーム全体で同じ変数名などに統一するツールも使うことができるようになります。\n\n\nより良いコードを書きたい方は，一度ご覧になってみてください。\n\n\n#01_はじめに\n#02_プロジェクトの作成\n#03_右に長いコードを書かない_隣のとなりまでしか訪ねない\n#04_隣のとなりまで_右スクロールより縦スクロールの方がいい\n#05_IFとELSEがある時は肯定系をIF否定形をELSEにする\n#06_比較する時は変数を左_定数を右にする\n#07_複数の比較を1回のif文でやらない\n#08_booの比較でTrueやFalseを書かない\n#09_否定の否定はしない\n#10_型チェックはasを使う\n#11_メソッドはできるだけ早く抜ける_返却する値を無駄に変数に入れない\n#12_対象外の時はすぐに抜ける\n#13_都合が悪いケースはガードする\n#14_必ずやりたい処理はfinallyを使う\n#15_比較演算子はできるだけクラスにさせる\n#16_ifの中括弧の省略はしない\n#17_if文のリーダブルコードまとめ\n#18_名前の付け方\n#19_意図が明確な名前を付ける\n#20_名前は素直に付ける_連想ゲーム的な名前を付けない\n#21_1つの事しかしていなければ短い名前でも理解できる\n#22_長いクラス名の扱い方\n#23_単数形と複数形で表現する\n#24_対になる言葉の組み合わせを決めておく\n#25_業務で使う名前は統一する\n#26_名前を統一するための辞書ツール作成\n#27_メンバー変数にアンダーバーを付ける\n#28_ハンガリアン記法を使わない\n#29_メソッド内の変数をメソッド最初に全部宣言しない\n#30_メソッド内の変数は直前に宣言する\n#31_ループの変数はループ内で宣言する\n#32_変数を使いまわさない\n#33_boolの戻り値はどちらがTrueかをわかるようにする\n#34_解放が必要なオブジェクトにはusingを使う\n#35_varを推奨する場合\n#36_メソッド名の付け方\n#37_voidとFunctionを意識する\n#38_インテリセンスを意識した名前にする\n#39_生成メソッドはCreate_型変換はToを使う\n#40_無駄に変数に入れて返却しない\n#41_重複をなくす\n#42_リージョンで区切らない\n#43_アクセス修飾子とsealedを付ける\n#44_クラス名はソリューションエクスプローラーで並べることを意識する\n#45_クラス名は名詞か名詞句で命名する\n#46_クラス名で継承元や特性を表現する\n#47_メソッド内にコメントを書かない\n#48_分かりづらい部分はメソッド化をしてメソッド名で想いを伝える\n#49_コードを読んだ人が「えっ？」と思うことが予想される場所にだけコメントを付ける\n#50_コメントで悪いコードを取り繕うことはできない\nリーダブルコード総評",
      "target_audience": [
        "C#でより良いコードを書きたい方"
      ]
    },
    {
      "title": ".NET 技術講座：打造堅固耐用的 C# 程式碼",
      "url": "https://www.udemy.com/course/solid-csharp/",
      "bio": "認識 SOLID 物件導向程式設計原則",
      "objectives": [
        "認識 SOLID 物件導向程式設計原則",
        "了解物件導向程式設計可帶來的效益"
      ],
      "course_content": {
        "Undefined": [
          "課程相關附件"
        ],
        "SOLID 設計原則": [
          "OOP 的四個特性",
          "內聚力與耦合力",
          "介紹 SOLID 物件導向設計原則",
          "單一責任原則 SRP",
          "開放封閉原則 OCP",
          "里氏替換原則 LSP",
          "介面隔離原則 ISP",
          "相依反轉原則 DIP"
        ]
      },
      "requirements": [
        "至少必須了解 C# 的 interface 與 class 基礎語法"
      ],
      "description": "對許多 .NET / C# 開發人員來說，物件導向程式設計有許多抽象的概念，即便你認真看了書，即便程式也寫了好幾年，就是無法深刻體會這些抽象概念背後的意義。\n本課程將包含這些 SOLID 設計原則的詳細解說，搭配 C# 程式碼範例，幫助大家更清楚的理解這些設計原則背後真正想解決的問題，逐一釐清各種不同抽象概念所代表的意思。",
      "target_audience": [
        "軟體架構師 / 系統分析師 / 系統設計師",
        "C# 開發人員 (本課程將以 C# 為主要開發語言)"
      ]
    },
    {
      "title": "C#でドメイン駆動開発パート１【C#でドメイン駆動開発とテスト駆動開発を使って保守性の高いプログラミングをする方法】",
      "url": "https://www.udemy.com/course/domain-1/",
      "bio": "ドメイン駆動開発のデザインパターンであるRepository，Entity，ValueObjectの実装方法とMoqを使ったテスト駆動開発を一緒にプログラミングをしながら解説していき，一つのアプリケーションを作成します。",
      "objectives": [
        "C#でドメイン駆動開発をする方法を理解できる",
        "ドメイン駆動開発のデザインパターンである，Repository，Entity，ValueObjectの実装ができるようになる",
        "複雑なプログラムをわかりやすい綺麗なプログラムに変更できるようになる",
        "全編テスト駆動開発での実装を行うためテスト駆動開発の知識が習得できる",
        "Moqを使ったテストコードの書き方がわかるようになる",
        "1行ずつ記述しながらの解説なので一緒に手を動かしながら理解できる"
      ],
      "course_content": {
        "C#でドメイン駆動開発とテスト駆動開発を使って保守性の高いプログラミングをする方法": [
          "#01_はじめに",
          "#01-2_開発環境とデータベース設計",
          "#02_SQLite",
          "#03_ドメイン駆動開発とテスト駆動開発",
          "#04-1_良いコードと悪いコード",
          "#04-2_データベースの準備",
          "#05_BADコード実装１",
          "#06-1_小数点以下を2桁で統一する",
          "#06-2_ここまでのBADコード振り返り",
          "#07-1_BADコード解説",
          "#07-2_BADの悪いところ",
          "#08_BADコード改善",
          "#09_BADコード改善２",
          "#10_潜在的なBADポイント",
          "#11_潜在的なBADポイント2",
          "#12_テストコードの書き方",
          "#13_テストのしやすさを検討",
          "#14_BADコードの振り返り",
          "#15_アーキテクチャー",
          "#16_プロジェクト構成",
          "#17-1_Testsプロジェクトの修正",
          "#17-2_最初のテスト",
          "#18_Mockを使ったテスト",
          "#19_Entity",
          "#20_Entityの実装",
          "#21-1_ValueObject",
          "#21-2_基本の型とValueObjectの違い",
          "#22-1_ValueObject実装",
          "#22-2_ValueObjectを値として扱う",
          "#22-3_ValueObjectの基底クラス実装",
          "#22-4_ValueObjectをアプリケーションに適応する",
          "#23-1_クラスの整理",
          "#23-2_拡張メソッドの適応",
          "#24-1_区分のValueObject",
          "#24-2_区分のValueObjectの適応",
          "#25_インフラストラクチャー",
          "#26-1_データバインディング",
          "#26-2_ViewModelBaseの作成",
          "#27_Moqの使い方",
          "#28_Chaining Assertionの使い方",
          "#30-1_コンボボックスへの変更",
          "#30-2_コンボボックスへの変更",
          "#30-3_コンボボックスへの変更",
          "#30-4_コンボボックスへの変更",
          "#31-1_SQLiteHlperで共通化",
          "#31-2_SQLiteHlperで共通化",
          "#32_一覧画面の仕様",
          "#33-1_一覧画面実装",
          "#33-2_一覧画面実装",
          "#33-3_一覧画面実装",
          "#33-4_一覧画面実装",
          "#34-1_Save画面の仕様",
          "#34-2_Save画面の実装",
          "#34-3_Save画面の実装初期値",
          "#34-4_Save画面の実装初期値_コンボボックス",
          "#35-1_Save画面の実装_保存処理",
          "#35-2_Guardクラスの追加",
          "#35-3_Save画面の入力チェック",
          "#35-4Save画面の実装_保存処理のテスト",
          "#36_Save画面のデータバインディング",
          "#37_Save画面のSQLite実装",
          "#37_2_DateTimePickerのFormat変更",
          "#38_おわりに",
          "サンプルコード",
          "39_.NET6対応版ソースコードの解説",
          "SQLServerでやりたい方へ",
          "補講01_ValueObjectのGetHashCodeに関して",
          "補講02_GetHashCodeの問題点",
          "補講03_ValueObjectクラスの修正",
          "補講04_2つ以上の値のGetHashCodeの作り方",
          "補講05_なぜWindowsFormsでやっているのか_デスクトップアプリとUWPの選定基準は？",
          "補講06_ValueObjectのEqualsについて",
          "補講07_ValueObjectの＜T＞とwhereの意味",
          "補講08_ValueObjectのoperatorについて",
          "補講08_02_ValueObjectのoperatorについて",
          "補講09_ValueObjectのotherがAreaIdになる理由",
          "補講10_インピーダンスミスマッチについて",
          "補講11_VisualStudio2010でデータバインドする場合",
          "補足12_VisualStudio2010でMoqとChainingAssertionは使えるか",
          "補講13_データグリッドのデータを更新する方法",
          "補講14_DisplayValueはプレゼンテーション層に入れるべきでは？",
          "補講15_なぜRepositoryと呼ぶのか",
          "補講16_Saveを非同期にしたらテストコードがNGになる",
          "補講17_ValueObjectの比較をValueObject＜T＞にしている理由",
          "補講18_DataGridViewで独自クラスのリストをバインドする場合のComboboxの実装",
          "補講19_2つのデータベースにつなぐとき",
          "補講20_Value Objectが多い場合の管理方法について",
          "補講21_ファイルに保存する場合はどうすればいいですか？",
          "補講21B_ファイルに保存する場合はどうすればいいですか？",
          "補講22A_SQLiteでトランザクションをかける方法",
          "補講22B_インタフェースにトランザクションを追加する",
          "補講22C_Executeを変更してトランザクションをかける",
          "補講22D_トランザクション関係のインタフェースと実装",
          "補講22E_トランザクション処理の仕上げ",
          "補講23_ValueObjectの==をvo1.Equals(vo2)にしたらエラーになる",
          "MVVMデータバインド注意点",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "C#の基礎文法レベルは必要です"
      ],
      "description": "ドメイン駆動開発のデザインパターンであるRepository，Entity，ValueObjectの実装方法とMoqを使ったテスト駆動開発を一緒にプログラミングをしながら解説していき，一つのアプリケーションを作成します。\n1行ずつ記述しながらの解説なので一緒に手を動かしながら理解できる\n1日1時間学べば1週間で知識の習得ができる\n5000円から10000円くらいの分厚い本を何冊も読んで数年間の商品開発の現場で実践し、\n改良に改良を加えた最終形を1週間で学べる\n実装はドメイン駆動開発とテスト駆動開発に集中できるように、\n画面はWindowsFormで作成します\nテストコードはMoqなどのツールを使いテストしづらいデータベース周りのテスト方法を解説\n全編テスト駆動開発での実装を行うためテスト駆動開発の知識が習得できる\nドメイン駆動開発のRepository、Entity、ValueObjectの考え方を使って\nどこにどんなクラスがあるかがキレイに整理されます\n動画はデータ表示、一覧表表示、保存画面と、現場で即実践できる内容で講義を構成しています\nVisualStudio2017とSQLiteを用いた実装のため、C#以外にもデータベースプログラミングの学習もできます。\nC#の文法が分からない方は，他のコースを受講して\nIF分など，一般的な文法やインタフェースの書き方程度は理解してから本コースを受講してください。\n\n\n01.はじめに\n02.SQLite\n03.ドメイン駆動開発とテスト駆動開発\n04.良いコードと悪いコード\n05.BADコード実装１\n06.BADコード実装２\n07.BADコード解説\n08.BADコード改善\n09.BADコード改善２\n10.潜在的なBADポイント１\n11.潜在的なBADポイント２\n12.テストコードの書き方\n13.テストのしやすさを検討\n14.BADコードの振り返り\n15.アーキテクチャー\n16.プロジェクト構成\n17.最初のテスト\n18.Mockを使ったテスト\n19.Entity\n20.Entityの実装\n21.ValueObject\n22.ValueObject実装\n23.クラスの整理\n24.区分のValueObject\n25.インフラストラクチャー\n26.データバインディング\n27.Moqの使い方\n28.ChainingAssertion\n30.コンボボックスへの変更\n31.SQLiteHlperで共通化\n32.一覧画面の仕様\n33.一覧画面実装\n34.Save画面の実装　初期値\n35.Save画面の実装　保存処理\n36.Save画面の実装　データバインディング\n37.Save画面の実装　SQLite実装\n38.おわりに\n\n\n\n\n私は、プログラマーとして成長するためには自己投資が鉄則だと思い、\n5000円から10000円くらいのドメイン駆動やテスト駆動の本などを何冊も読み漁りました。\n\n\nそのおかげで、現在、保守性の高いプログラミングができるようになり、\n仕事はやりやすくなりましたが、それまでの道のりは結構回り道をしてしまいました。\n\n\nなぜなら、偉人の書いた本はすばらしく、天才的な内容なのですが、\n読む量は膨大で、しかも理解することが難しいです。\n\n\n今回の動画は、その偉人たちの知識量に比べては\n得られる知識量は少ないかも知れません。\n偉人の本のほうが、情報量は膨大だと思います。\n\n\nただ私の動画は、現場で使えるものに凝縮し、\n実際に私が現場で使って、本当に効果のあった方法を\n順番に動画でプログラミングして行きますので、\n非常に大変理解しやすくなっています。\n\n\n偉人の本のように、途中で離脱する恐れはないと思います。\nしかも、この技術は一度身につけてしまえば\nプログラマーやIT技術者としては、一生使える技術になります。\nオブジェクト指向が生まれたのは1980年代ですから30年以上の歴史があります。\nそのころからまったく色あせていません。\n今後も数十年は使える技術ですし、新しい技術が埋まれても\nそれに追従する力もつくでしょう。\n\nこのような動画なのですが、\n市場の大手のセミナーなどでは2日で10万円や20万円くらいしますし、\nWeb版でも5万円以上はします。\n大手セミナーの内容は教科書的なものに比べて、\n私の講義は実践的なので、それ以上の価値があるようにも思います。\n\n\nそれらを踏まえて公正な目で客観的に見ても、\nネット上で販売されてる他のコンテンツと比較しても、3万円ぐらいが妥当です。\nしかし、勉強のための投資は大事ですが、\nオブジェクト指向学びたての方には数万円支払うのは少し抵抗があるかもしれません。\n\n\nそこで、今回はこの価格で提供させていただくことに決めました。",
      "target_audience": [
        "C#のプログラミングの整理の仕方がわからない",
        "オブジェクト指向が理解できていない",
        "C#のより良いコードを模索している",
        "正しいコードの書き方がわからない"
      ]
    },
    {
      "title": "Curso completo programación C# en .Net y muchísimo más",
      "url": "https://www.udemy.com/course/master-programacion-netnet-core-c-con-visual-studio/",
      "bio": "C#, .NET, .NET Core y .Net6, Visual Studio, EF Core, Azure, API Rest, Devops, Open Api, Minimal APIs",
      "objectives": [
        "Historia y evolución de .Net",
        "Instalación y uso de Visual Studio 2017/19/22 Community",
        "Programación a todos los niveles de C#",
        "Iniciación a .Net Core y Net6",
        "Inicialización a SQL Server",
        "Iniciación a Entity Framework Core",
        "Clean Code",
        "Iniciación a Azure",
        "Principios SOLID",
        "Principios API REST",
        "Conceptos de Inyección Dependencias en .Net Core",
        "Creación de API de .Net Core desde cero",
        "OpenApi / Swagger en proyectos de API de .Net Core",
        "HttpClientFactory en Net Core 2.1+"
      ],
      "course_content": {
        "Introducción al curso": [
          "Introducción al curso",
          "Como seguir el curso"
        ],
        "Introducción a .Net historia y Evolución": [
          "Introducción al modulo de \"Introducción a .Net\"",
          "Comprendiendo .NET y CLR (Common Language Runtime)",
          "Evolución de .NET Framework desde su aparición hasta su versión 4.5+",
          "Que tipo de aplicaciones se pueden desarrollar con .NET",
          "Diferencias entre .NET Framework .NET Core y .Net 5/6/7/X",
          "¿Que es .NET Standard?",
          "Crear librerias en .NET Standard y como usararlas en diferentes runtimes",
          "Novedades ASP.Net Core 3.0",
          "Novedades .Net 5",
          "Novedades .Net 6",
          "Novedades .Net 7",
          "Repaso"
        ],
        "Primeros pasos con Visual Studio 2017/2019/2022 Community": [
          "Introducción al modulo \"Primeros pasos con VS\"",
          "¿Que versión de Visual Studio necesito?",
          "[Visual Studio 2017] - Instalación de Visual Studio 2017 Community",
          "[Visual Studio 2017] - Introducción a Visual Studio 2017 Community",
          "[Visual Studio 2017] - Como crear nuestra primera aplicación",
          "[Visual Studio 2017] - Compilar y ejecutar nuestra primera aplicación",
          "[Visual Studio 2017] - Consumiendo aplicaciones de terceros",
          "[Visual Studio 2019] -Instalación de Visual Studio 2019 Community",
          "[Visual Studio 2019] - Introducción a Visual Studio 2019 Community",
          "[Visual Studio 2019] - Como crear nuestra primera aplicación ejecución y depurar",
          "[Visual Studio 2019] - Clonar ejemplos del curso",
          "[Visual Studio 2019] - Consumiendo librerías de terceros",
          "[Visual Studio 2022] -Instalación de Visual Studio 2022 Community",
          "[Visual Studio 2022] - Introducción a Visual Studio 2022 Community",
          "[Visual Studio 2022] - Crear Proyecto, compilar y ejecutar y usar librerias de 3",
          "[Visual Studio 2022] -Clonar repositorio de ejemplos VS 2022",
          "[Visual Studio 2022] -Novedad VS 2022: Hot Reload",
          "Como depurar con Visual Studio",
          "Intellitrace",
          "[Todas las versiones de Visual Studio] - Actualizar Visual Studio",
          "[Visual Studio Code] - Que es Visual Studio Code, caracteristicas e instalación",
          "[Visual Studio Code] - Crear proyecto .Net usando VS Code",
          "[Visual Studio Code] - Importando los ejemplos del curso en VS Code",
          "Test sobre lo visto en el modulo",
          "Ejercicios Primeros Pasos con Visual Studio",
          "Solución ejercicios 4 y 5"
        ],
        "Introducción a C#": [
          "Introducción al modulo \"Introducción a C#\"",
          "Gramática en C#",
          "Tipos",
          "Palabras reservadas",
          "Variables",
          "Inferir el tipo en una variable",
          "Nomenclaturas",
          "Constantes",
          "Instrucciones de selección If-Else",
          "Instrucciones de selección Switch",
          "Instrucción de iteración Do-While",
          "Instrucción de iteración While",
          "Instrucción de iteración For",
          "Intrucción de iteración Foreach",
          "Operadores",
          "Documento Operadores",
          "Simplifación en Console",
          "Leyendo argumentos",
          "Arrays o Matrices",
          "Conversiones de tipo o Castings",
          "Recolector de basura en .NET",
          "File-scope namespaces [C# 10 .Net 6 o superior]",
          "Test sobre lo visto en el modulo",
          "Ejercicios Introducción a C#"
        ],
        "Metodos y Funciones": [
          "Introducción al modulo \"Metodos y funciones\"",
          "Metodos",
          "Introducción a procedimientos y funciones",
          "Funciones",
          "Tipos de funciones",
          "Paso por valor y por referencia a una función",
          "Funciones locales",
          "Ejemplo de uso de funciones",
          "Test sobre lo visto en el modulo",
          "Ejercicios Metodos y Funciones"
        ],
        "Cadenas": [
          "Introducción al modulo de \"Cadenas\"",
          "Introducción a cadenas",
          "Formatea las fechas",
          "Concatenar cadenas",
          "StringBuilder",
          "Operaciones con cadenas",
          "Operaciones con cadenas (ejemplos)",
          "Test sobre lo visto en el modulo",
          "Ejercicios Operaciones con Cadenas"
        ],
        "Colecciones": [
          "Introducción al modulo de \"Colecciones\"",
          "Introducción a colecciones",
          "ArrayLists",
          "Nota sobre ArrayLists",
          "Pilas o Stacks",
          "Colas o Queues",
          "HasTables",
          "Ejercicios Colecciones"
        ],
        "Programación Orientada a Objetos": [
          "Introducción al modulo de \"Programación Orientada a Objetos\"",
          "Introducción a POO (programación Orientada a Objetos)",
          "Clases y Objetos",
          "Abstracción",
          "Tipos de datos abstractos",
          "Encapsulación",
          "Herencia",
          "Polimorfismo",
          "Poliformismo ejemplo"
        ],
        "Clases": [
          "Introducción del modulo de \"Clases\"",
          "Diferencias entre clases y estructuras",
          "Declarar clase y datos",
          "Cuerpo de la clase",
          "Constantes",
          "Creación de propiedades",
          "Accediendo a las propiedades",
          "Los métodos",
          "Niveles de accesibilidad",
          "Clases abstractas y virtuales",
          "Clases sealed (selladas)",
          "Clases estáticas",
          "Métodos de extensión",
          "Expresión bodied members",
          "Constructores",
          "Destructores",
          "Sobrecarga de operadores",
          "Ejercicios Clases"
        ],
        "Interfaces": [
          "Introducción al modulo de \"Interfaces\"",
          "Que son las Interfaces",
          "Interfaz IDisposable",
          "Diferencias entre clases abstractas e Interfaces",
          "Ejercicios Interfaces"
        ]
      },
      "requirements": [
        "No hacen falta conocimientos previos, se empieza de 0",
        "Es necesario un ordenador para poder seguir las practicas",
        "Una cuenta de Azure para poder completar el modulo de Azure (totalmente opcional)"
      ],
      "description": "POR FAVOR LEER TODA LA DESCRIPCIÓN DEL CURSO PARA SABER QUE VÁS A ENCONTRARAS EN EL!!!\n\n\n------  Nota del instructor a Octubre de 2022 (importante leer)  ------\nEl propósito de este curso es enseñarte a programar desde cero usando lenguaje C#, este lenguaje, sufre pequeñas modificaciones conforme avanzan las versiones, que voy actualizando en el curso. No hay que mezclar los Frameworks ni la versión de Visual Studio que se usa para adquirir este conocimiento y poder ponerlo en practica en cualquier versión tanto de .Net como de Visual Studio.\n\n\nComo añadido en este curso, se ven otros muchísimos temas que un desarrollador puede encontrar interesantes para complementar su formación, como puede ser principios SOLID, Azure, Open API, Devops (listado completo más abajo),  es importante entender que actualizar el temario del curso con las ultimas versiones de todos estas herramientas/librerías, puede ser muy complicado!  normalmente encontrarías todo eso en cursos separados y no en uno que englobe tantas temáticas, espero comprensión por tu parte si te decides a cursar este curso (me comprometo a intentar tenerlo lo mas actualizado posible) y no ves los videos codificados en la ultima versión de Visual Studio, de NO ser así, entonces NO te recomiendo adquirir este curso.\nEstoy realizando una actualización muy importante del curso, que en breve (principios de noviembre del 2022) espero poder ir subiendo, con lo que el curso quedara bastante actualizado a versiones actuales.\nPara finalizar, si lo que quieres es aprender C# desde cero, y acabar sabiendo utilizar las herramientas y librerías mas importantes junto a buenas practicas en las codificaciones de soluciones , entonces te aseguro que no vas a encontrar un curso más completo que este, te recuerdo que de no ser lo que estas buscando, tienes un mes para poder pedir un reembolso, con lo que no tienes nada que perder!.\n-------------- Fin de la nota del instructor a Octubre de 2022 --------------------\n¿Quieres aprender a programar? ¿Te llama la atención la tecnología que te ofrece Microsoft ? Si es así, este es tu curso!!\nEn este Curso abordaremos desde un nivel básico todos los conceptos relacionados con .Net y C#, poniendo ejemplos de cada lección. Abordaremos las nuevas características de .Net Core y .Net 6  haciendo ejemplos prácticos.\nTienes delante posiblemente el curso MÁS COMPLETO realizado nunca en español sobre .Net y C# ya que abarcamos todo tipo de temas que te resultaran muy útiles, como los Principios SOLID, Entity Framework Core ,  una introducción al cloud de Microsoft , Azure y la cultura Devops con Azure Devops\nSe realizaran ejemplos en código de todo lo que se haga, que podrás descargar para revisarlo.\nEn algunos módulos se propondrán unos ejercicios, para que puedas practicar lo aprendido, que vendrán resueltos, para que puedas entenderlos si te quedas bloqueado.\nAl finalizar el curso, te propondré 2 ejercicios, que podrás mandarme para que te lo revise y te de feedback de como esta realizado.\nCuando acabes este curso, serás capaz de realizar aplicaciones en .Net , .Net Core y .Net6 y lo más importante, entendiendo lo que haces en todo momento.\nSe verán los siguientes conceptos:\nIntroducción a .Net , .Net Core , .Net 5  .Net 6 y .Net 7 su historia y evolución\nVeremos como descargar e instalar Visual Studio (2017, 2019 y 2022), para poder realizar todo el curso sin problema\nVeremos los conceptos básicos de C# (gramática de C#, bucles, variables, constantes,  etc) **Actualizado a C# 10**\nVeremos como usar métodos y funciones con C#\nVeremos todo sobre el uso de cadenas en C#, (Strings y StringBuilders)\nVeremos todo sobre colecciones y como usarlas. (Hash tables, Colas, ArrayList, Pilas)\nVeremos los conceptos de la Programación Orientada a Objetos (POO)\nVeremos todo lo relacionado a las Clases\nVeremos como usar Interfaces\nVeremos los conceptos avanzados de C# (Delegados, Eventos, Enumerados, Métodos Anónimos etc..)\nVeremos el uso de Generics\nUsaremos y pondremos ejemplos de Diccionarios y Tuplas\nVeremos como podemos depurar aplicaciones con Visual Studio\nVeremos como podemos tratar excepciones y crear excepciones custom\nTrabajaremos con Streams y Archivos\nVeremos los conceptos de la Programación Asíncrona y Tasks\nVeremos en detalle LINQ.\nVeremos una breve introducción a Azure, crearemos un SQL Server y un App service en el cloud de Microsoft.\nVeremos Entity Framework Core, y crearemos un proyecto de ejemplo, usando localDB\nVeremos lo que son los principios SOLID, con ejemplos de cada principio (Añadido Julio 2019)\nVeremos los principios API REST y la pirámide de madurez de Richardson (Añadido Julio 2019)\nVeremos lo que es la inyección de dependencias y como usarla con el inyector por defecto de .Net Core (Añadido Agosto 2019)\nCrearemos una API desde cero en .Net Core, para que sepas crear tus propias APIS sin ayuda, aplicando los conceptos vistos anteriormente (Añadido Agosto 2019)\nVeremos que es OpenAPI 3.0 / Swagger y haremos ejemplos prácticos , configurando y documentando una proyecto de API de .Net Core 2.2 (Añadido Agosto 2019)\nVeremos la nueva característica disponible desde la versión 2.1 de Net core HttpClientFactory, con ejemplos de uso. (Añadido Septiembre 2019)\nNovedades Asp.Net Core 3.0 (Añadido Noviembre 2019)\nNovedades .Net 5\nPatrones de diseño\nSingleton (Añadido Octubre 2021)\nActualización de ejercicios a .Net 6 (Añadido Agosto 2022)\nNovedades Visual Studio 2022 (Añadido Agosto 2022)\nInstalación, características y creación de proyectos con Visual Studio Code\nIntroducción a Devops (Octubre 2022)\nQue es Devops\nQue es Azure Devops (Diciembre 2022)\nCrear cuenta en Azure Devops (Diciembre 2022)\nUn paseo por Azure Devops (Diciembre 2022)\nMinimal APIs (.Net 6) (Junio 2023)\nConocimientos necesarios:\nNinguno, se vera todo desde un nivel básico, para aprender a programar.\nConocimientos recomendados:\nHaber visto algún lenguaje de programación, conceptos básicos sobre la programación orientada a objetos.\nRequerimientos:\nManejo de Windows a nivel de usuario.\nInstalar Visual Studio (en el curso se dirá como).\nMuchas ganas de aprender.\nTodas las herramientas que veremos en el curso son gratuitas.",
      "target_audience": [
        "Todo aquel que quiera adentrarse en el mundo de la programación de la mano de Microsoft"
      ]
    },
    {
      "title": "[2025] Programowanie w JavaScript od Zera do Mastera - 70h",
      "url": "https://www.udemy.com/course/kurs-programowanie-w-javascript-od-zera-do-mastera/",
      "bio": "FullStack Javascript od Podstaw + 100 omówionych pyt. rekrut., 24 projekty! Jedyny kurs, który potrzebujesz, ponad 70h!",
      "objectives": [
        "Tworzenie skryptów, aplikacji fullstack w JavaScript od podstaw do tematów zawansowanych w najbardziej rozbudowanum kursie w pl - 70h!",
        "Poznasz: zmienne, tablice, pętle, funkcje, klasy, programowaie obiektowe, zdarzenia, event loop, instrukcje warunkowe, DOM, localStorage i wiele innych",
        "Ponad 100 przykładowych pytań rekrutacyjnych od najprostrzych do zaawansowanych z JavaScript wraz z dokładnym omówieniem odpowiedzi i rozwiązań",
        "Aplikacje w JavaScript od od podstaw: pogodową na bazie geolokalizacji, quiz, kursy walut, kalkulator, lista książek, Tic Tac Toe etc.",
        "Dynamicznie zmieniać oraz dodawać treści do witryny oraz zmieniać jej wygląd",
        "Programowania po stronie serwera dzięki NodeJs, czyli JavaScript na backendzie generujący kod html, odczytujący formularze, serwujący pliki etc",
        "Frameworka ExpressJs dla NodeJs przyśpieszającego tworzenie aplikacji serwerowych",
        "Wzorce Projektowe w JavaScript jak: Singleton, Fasada, Adapter, Observer, Fabryke, Builder i wiele innych",
        "Wykorzystanie technologii Ajax, formatu JSON oraz XML do dynamicznej komunikacji między przeglądarką a serwerem",
        "Projekty jak dynamiczny kalkulator czy listę książek z dynamiczną walidacją itd.",
        "Programwoanie w ES5 oraz ES6"
      ],
      "course_content": {
        "Podstawy JavaScript": [
          "Podstawy JavaScript",
          "Visual Studio Code",
          "Materiały",
          "Kilka rad o nauce programowania",
          "Konsola JavaScript i komentarze",
          "Tworzenie zmiennych z let oraz stałych z const",
          "Identyfikatory - jak prawidłowo nazywać zmienne w JS",
          "Identyfikatory - zadanie",
          "Prymityw number - liczba",
          "Prymityw number - liczba - zadanie",
          "Prymityw string - łańcuch znaków",
          "Prymityw string - łańcuch znaków - zadanie",
          "Prymityw string - literały szablonu",
          "Prymityw string - literały szablonu - zadanie",
          "Prymityw boolean - wartość logiczna",
          "Prymityw bigint",
          "Prymityw undefined",
          "Prymityw null",
          "Prymitywy w JavaScript - podsumowanie",
          "Object literal - objekt jako złożony typ wartości w JavaScript",
          "Object literal - zadanie",
          "Tablice - specjalny obiekt przechowujący dane",
          "Tablice - specjalny obiekt przechowujący dane - zadanie",
          "NaN - not a number",
          "Dynamiczne typowanie w JS",
          "Instrukcja if - sterowanie działaniem programu",
          "Instrukcja if - zadanie",
          "Instrukcja if else",
          "Instrukcja if else if",
          "Instrukcja if else if - zadanie",
          "Instrukcja switch",
          "Instrukcja switch - zadanie",
          "Pętla while",
          "Pętla while - zadanie",
          "Pętla while - zadanie 2",
          "Pętla for",
          "Pętla for - zadanie",
          "var - stary sposób na tworzenie zmiennych w JS",
          "Polecenia i wyrażenia w JavaScript - kod na czynniki pierwsze"
        ],
        "Operatory": [
          "Operatory matematyczne",
          "Operatory przypisania",
          "Operator modulo",
          "Modulo - test",
          "Operatory inkrementacji i dekrementacji",
          "Operator ternary - trójelementowy",
          "Operator ternary - zadanie",
          "Operatory porównania",
          "Operatory porównania - zadanie",
          "Operatory porównania oraz obiekty",
          "Ścisłe operatory porównania",
          "Operator przecinka",
          "Operator logiczny and",
          "Operator logiczny and - zadanie",
          "Operator logiczny or",
          "Operator logiczny or - zadanie",
          "Operator not",
          "Operator not - zadanie",
          "Operatory jednoargumentowe - unary operators",
          "Operatory relacyjne",
          "Operator typeof",
          "Podwójna negacja"
        ],
        "Funkcje w JavaScript": [
          "Coertion - koercja czyli automatyczna konwersja typów wartości w JS",
          "Falsy values - fałszywe wartości",
          "Zmienne niezdefiniowane i niezadeklarowane",
          "Lokalne i globalne zmienne w JS",
          "Lokalne i globalne zmienne w JS - zadanie",
          "Lokalne i globalne zmienne w kontekście var",
          "Własne funkcje w JavaScript",
          "Własne funkcje w JavaScript - zadanie",
          "return do zwracania wartości i przerwania działania funkcji",
          "Tworzenie funkcji - zadanie",
          "Zwracanie obiektu z funkcji",
          "Zwracanie obiektu z funkcji - zadanie",
          "function expression - wyrażenie funkcyjne",
          "function expression - wyrażenie funkcyjne - zadanie",
          "callback",
          "callback - test",
          "Obiekt arguments w funkcji",
          "Przekazanie danych do funkcji przez wartość i przez referencję",
          "Przekazanie danych do funkcji przez wartość i przez referencję - zadanie",
          "Funkcje zagneżdżone",
          "Domyślne argumenty funkcji",
          "Rest operator",
          "Spread operator",
          "Spread operator - zadanie",
          "Funkcja z typeof - zadanie"
        ],
        "Zaawansowany JavaScript": [
          "Metody obiektu",
          "Przykład rozbudowanego obiektu z metodami",
          "Obiekt z metodami - zadanie",
          "Funkcja strzałkowa",
          "IIFE - funkcja natychmiastowa",
          "Objekty tworzone z funkcją konstruującą",
          "Objekty tworzone z funkcją konstruującą - zadanie",
          "Funkcja konstruująca wywołana bez new",
          "Przeglądanie właściwości obiektów",
          "Objekty oraz gettery i settery",
          "Objekty oraz gettery i settery - zadanie",
          "window object alert setTimeout setInterval prompt parseInt parseFloat",
          "Obsługa zdarzeń obiektu window - event handlers i addEventListener",
          "Scope w JavaScript czyli zakres widoczności zmiennych",
          "hoisting w JavaScript",
          "Temporal Dead Zone",
          "Wrappery prymitywów w postaci obiektów jak Number String itd",
          "Mutowalność i niemutowalność w JavaScript",
          "Number - metody i właściwości",
          "String - metody i właściwości",
          "Array - tablice - metody i właściwości",
          "Array - tablice - metody i właściwości - część 2",
          "Array - tablice - metody map filter reduce every",
          "Object - metoda assign",
          "Object - enumeracja kluczy i wartości",
          "Object - serializacja danych",
          "Object - defineProperty",
          "call apply bind",
          "Closures - domknięcia",
          "Closures - currying",
          "Closures - prywatne dane dzięki domknięciom",
          "Closures z zmiennymi var let i const"
        ],
        "DOM - manipulowanie elementami Html w przeglądarce": [
          "Drzewo DOM - document.getElementById",
          "Drzewo DOM - document.querySelectorAll",
          "Drzewo DOM - document.getElementsByTagName",
          "Drzewo DOM - document.createElement",
          "Drzewo DOM - zdarzenie klik w oknie przeglądarki",
          "Drzewo DOM - zdarzenie input",
          "Drzewo DOM - zdarzenia myszy",
          "Format JSON",
          "Funkcja fetch do pobrania danych z internetowego api",
          "Losowy żart z serwera",
          "Event loop - pętla zdarzeń w JavaScript"
        ],
        "ESNext - omówienie specyfikacji ECMAScript od ES6 do najnowszych": [
          "ES6 deklaracja zmiennych z let oraz stałych z const",
          "ES6 funkcje strzałkowe",
          "ES6 parametr rest",
          "ES6 spread operator",
          "ES6 Przypisanie destrukturyzujące",
          "ES6 Pętla for",
          "ES6 Pętla for of kontra for in",
          "ES6 Map - przechowywanie danych jako klucz wartość",
          "ES6 Set - przechowywanie unikalnych prymitywów i referencji do obiektów",
          "ES6 Klasy wprowadzenie",
          "ES6 Klasy - rozszerzanie klas z extends i super",
          "ES6 Promise",
          "ES6 Symbol - primityw",
          "ES6 Domyślne parametry funkcji",
          "ES6 Literały szablonu i tagi oraz nowości w String",
          "ES6 Array - nowe metody",
          "ES6 Math - nowe metody",
          "ES6 Moduły",
          "ES6 Funkcje tablicowe forEach filter reduce map every itd",
          "ES7 EcmaScript 2016 includes i operator potęgowania",
          "ES8 EcmaScript 2017",
          "ES9 EcmaScript 2018",
          "ES6 generatory",
          "ES6 Reflext api",
          "ES6 Proxy api",
          "ES10 EcmaScript 2019",
          "ES11 EcmaScript 2020",
          "ES12 EcmaScript 2021",
          "ES13 EcmaScript 2022"
        ],
        "Projekt 1: Losowy użytkownik z serwera": [
          "Losowy user z randomuser.me"
        ],
        "Projekt 2: Statystyki tekstu": [
          "Statystyki tekstu"
        ],
        "Projekt 3: Aplikacja pogodowa": [
          "Szablon Html aplikacji i kod CSS",
          "Kod js: geolokalizacja - pobranie pozycji użytkownika i pobranie danych z REST"
        ],
        "Prototypy": [
          "Podstawy prototypów",
          "Współdzielenie właściwości i metod pomiędzy instancjami obiektów",
          "Prototypy - współdzielenie właściwości i metod pomiędzy instancjami obiektów",
          "Mechanizm automatycznego wyszukiwania właściwości i metod w prototypie",
          "Prototypy - przesłanianie pól prototype właściwościami obiektu",
          "Prototypy - listowanie właściwości i metod",
          "Prototypy - zmiana prototypu na własny obiekt",
          "Prototypy - tworzenie własnego łańcucha prototypów dla dziedziczenia",
          "Prototypy - dziedziczenie dzięki pożyczeniu konstruktora",
          "Prototypy - Object.create()"
        ]
      },
      "requirements": [
        "Wymagane są dobre chęci, czas oraz komputer PC lub Mac, korzystamy z darmowych nardzędzi jak Visual Studio Code",
        "Pewne podstawy html i css przydadzą się, ale wiele tych elementów jest omówione w trakcie kursu"
      ],
      "description": "Oto dla Ciebie obszerny kurs JavaScript od absolutnych podstaw do zagadnień zaawansowanych. Jeśli chcesz być programistą JavaScript i nauczyć się od zera materiału potrzebnego na Juniora to jest kurs dla Ciebie. Co więcej, ten 70 godzinny kurs porusza wiele również zaawansowanych tematów. Jakby tego było mało poświeciłem dużo czasu aby opracować ponad  100 odpowiedzi na najczęstsze zadawane pytania podczas procesu rekrutacyjnego i nie ważne czy uczysz się do własnych projektów czy do aplikacji na stanowisko, z tą wiedzą przede wszystkim zrozumiesz język JavaScript.\nNauczę Ciebie od zera programowania w JavaScript nie tylko na slajdach, ćwiczeniach ale również na gotowych aplikacjach w przeglądarce i na serwerze w NodeJs pisanych od podstaw.\nJavaScript jest obecnie jednym z najpopularniejszych języków programowania, aplikacje napisane w tym języku spotykamy wszędzie: w przeglądarkach, urządzeniach jak telefony czy telewizory i wielu innych. Jego przenośność, łatwość w nauce oraz powszechna akceptacja dała ogromną szansę wielu programistom nie tylko na uczestnictwo w wielu ciekawych projektach, ale przede wszystkim na godziwe zarobki. W Polsce początkujący programiści JavaScript mogą liczyć średnio na kilka tyś zł na start, a później zarobki szybko rosną w zależności od wiedzy i doświadczenia. Jest to bardzo pożądany język na rynku pracy.\nPoniżej kilka aplikacji, które stworzysz w trakcie kursu:\n- Kursy walut względem złotówki na podstawie danych z serwera\n- Aktualna pogoda w miejscu Twojego zamieszkania wraz z automatycznym odczytem geolokalizacji z przeglądarki\n- Gra w kółko i krzyżyk (Tic Tac Toe)\n- Kalkulator wynagrodzenie netto - brutto\n- Autouzupełnianie tickerów firm z giełdy amerykańskiej z serwera\n- Quiz z dowolną ilością pytań oraz prezentacją wyników\n- Kalkulator matematyczny\n- Gra Snake znana z telefonów komórkowych\n- Generowanie obrazów z sztuczną inteligencją!\n- Captcha czyli obrazek blokujący dostęp\n- Pole autocomplete w formularzu\n- Accordion\n- Tłumaczenie tekstu na inny język\n- Edytor Pixel Art\n- Wyszukiwarka stron Wiki\n- Lista książek do przeczytania i wiele innych...\n\n\nKurs jest stale aktualizowany oraz rozbudowywany, ma bogactwo:\nprofesjonalnych slajdów z opisami zagadnień, przykładami, zdjęciami oraz rezultatami oczekiwanymi w przeglądarce.\nkodowania na żywo omówionych tematów co pozwala na przećwiczenie i zapamiętanie nowo poznanych zagadnień\ngotowe projekty, które stworzymy razem w celu utrwalenia całej wiedzy\nbogactwo skondensowanych informacji, bez zbędnych dygresji\nzadania do samodzielnego wykonania, gdzie w punktach określone jest co dokładnie trzeba wykonać, następnie zaprezentowane jest przykładowe rozwiązanie. Dzięki zadaniom przećwiczysz i utrwalisz samodzielnie nowo poznaną wiedzę\n\n\nPoznasz zaawansowane tematy z JavaScript jak np:\n- prototypy co większość kursów pomija, dzięki czemu jak naprawdę działa JS\n- specyfikacje ECMAScript - przejdziemy rok po roku kolejne wersje i najważniejsze dodatki do języka JS\n- tworzenie programów na serwerze w JavaScript z Node.js i frameworku Express czyli aplikacji FullStack\n- programowanie bazy danych MongoDB\n- wzorce projektowe które ułatwią Twoją pracę w większych projektach\ni wiele innych...\n\n\nPoświęciłem sporo czasu na stworzenie tego kursu. Jest to obecnie najbardziej rozbudowany polski kurs o JavaScript, ma ponad 60 godzin, zapraszam, gdyż naprawdę warto. Przyświecał mi cel aby był kompletny, żeby było łatwiej wkroczyć w świat programowania, tym bardziej przy tak pędzących, szybko rozwijających się technologiach. Zapraszam",
      "target_audience": [
        "Osoby, które od podstaw chą się nauczyć programowania w JavaScript od podstaw do tematów zaawansowanych. Nie jest wymagane wcześniejsze doświadczenie w programowaniu w JS."
      ]
    },
    {
      "title": "Blockchain: Comprende Bitcoin y desarrolla tu Criptomoneda",
      "url": "https://www.udemy.com/course/aprende-blockchain/",
      "bio": "Construye tu propia Blockchain y Criptomoneda. ¡Descubre las ideas de ingeniería detrás de tecnologías como Bitcoin!",
      "objectives": [
        "Comprender los principios técnicos de Blockchain",
        "Crear tu propia implementación de Blockchain",
        "Desarrollar una criptomoneda con tu Blockchain",
        "Crear un servicio HTTP para utilizar tu Blockchain",
        "Crear una red P2P con multiples nodos",
        "Implementar el algoritmo Proof-of-Work",
        "Crear un sistema de transacciones para tu criptomoneda.",
        "Crear un sistema de mineria para tu criptomoneda"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de programación"
      ],
      "description": "Desde su introducción práctica en el 2009, la tecnología Blockchain ha alterado industrias enteras. La tecnología Blockchain ha sido ampliamente aceptada como un medio revolucionario para reducir costos, mejorar la velocidad y mostrar transparencia en todas las transacciones. Se espera que el gasto mundial en tecnología Blockchain alcance los $11.7 mil millones en 2022. Por lo tanto, es vital que comiences a desarrollar tu conocimiento sobre esta tecnología. Explorar sus diversas aplicaciones como por ejemplo en ciberseguridad, los servicios gubernamentales, el entretenimiento y el sector financiero.\nSi todavía estás cementado en tu cubículo editando códigos Java o simplemente no has aprendido nada nuevo en los últimos años, probablemente estés viviendo en el pasado, donde cada vez hay menos empleos para ti. Las cosas han cambiado ahora. Da un paso adelante y camina con las tecnologías revolucionarias donde Blockchain es uno de los líderes. Sé uno de los primeros en aprender esta tecnologí\nCon este curso obtendrás las habilidades adecuadas para trabajar en el mundo de Blockchain. Adaptándote a esta ola de tendencias, podrás nadar en un mar de empleos y disfrutar del poder de esta tecnología revolucionaria.",
      "target_audience": [
        "Desarrolladores con ganas de aprender la tecnologia Blockchain.",
        "Cualquier persona que quiera conocer técnicamente Blockchain.",
        "Desarrolladores de JavaScript que quieren extender sus conocimientos."
      ]
    },
    {
      "title": "Java a profundidad",
      "url": "https://www.udemy.com/course/java-a-profundidad-devs4j/",
      "bio": "Aprende Java a profundidad desde cero, sin presentaciones aburridas pero con todos los conceptos explicados a detalle.",
      "objectives": [
        "Java",
        "Programación orientada a objetos",
        "Control de flujo",
        "Manejo de excepciones",
        "Uso de arreglos",
        "Colecciones",
        "Hilos",
        "Manejo de archivos y flujos",
        "Uso de sockets",
        "Streams",
        "Manejo de archivos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Material del curso"
        ],
        "Instalación": [
          "Descarga de Java",
          "Instalación de Java",
          "Configuración de las variables de entorno",
          "Probando la instalación",
          "Instalación del IDE de desarrollo",
          "HolaMundo desde el IDE",
          "Instalación de editor de textos Sublime"
        ],
        "Primeros pasos": [
          "Creación de archivos y clases",
          "Uso de comentarios",
          "Definición de variables",
          "Definición de constantes",
          "Uso de identificadores",
          "Tipos de datos",
          "Operadores aritméticos",
          "Pre incremento, pre decremento y atajos del IDE",
          "Operadores de comparación",
          "Ejercicios de la sección"
        ],
        "Estructuras de control de flujo": [
          "Introducción",
          "Uso del if",
          "Uso de If else",
          "Uso de while",
          "Uso de do while",
          "Ejemplo básico de switch",
          "Switch sin breaks",
          "Agrupación de casos en un switch",
          "Uso de switch con Strings",
          "Uso del ciclo for",
          "Uso de break y continue",
          "Uso de ciclos anidados",
          "Uso de tags en ciclos anidados",
          "Ejercicios de la sección"
        ],
        "POO - Clases, objetos y constructores": [
          "Introducción",
          "Uso de clases",
          "Uso de clases",
          "Introducción a objetos",
          "Uso de objetos",
          "Uso de parámetros",
          "Uso de constructores",
          "Antes de continuar (Migración al IDE)",
          "Haciendo debugging",
          "Uso de Step into durante el debugging",
          "El constructor por defecto",
          "Palabra reservada this",
          "Invocación de constructores",
          "Ejercicios de la sección"
        ],
        "POO - Uso de herencia": [
          "Introducción a herencia",
          "Uso básico de herencia",
          "Operador instanceof",
          "Creación de paquetes",
          "Ejemplo de herencia, clase padre",
          "Ejemplo de herencia, clases hijas y pruebas",
          "Uso de la palabra reservada super",
          "Constructores y herencia (Debugging)",
          "Creación de constructores utilizando el IDE",
          "Sobre escritura de métodos",
          "Uso de super para invocar métodos en la clase padre",
          "Reglas para utilizar sobre escritura",
          "Objetos y clases finales",
          "Ejercicios de la sección"
        ],
        "Convenciones de nombres y modificadores de acceso": [
          "Nombrado de paquetes",
          "Nombrado de clases",
          "Nombrado de métodos",
          "Nombrado de variables",
          "Nombrado de constantes",
          "Introducción a los modificadores",
          "Uso de private",
          "Uso de default",
          "Uso de protected",
          "Uso de public"
        ],
        "POO - Encapsulamiento y polimorfismo": [
          "Introducción al encapsulamiento",
          "Ejemplo práctico de encapsulamiento",
          "Abstracción y encapsulamiento",
          "Alta cohesión y bajo acoplamiento",
          "Conceptos básicos de polimorfismo",
          "Ejemplo práctico de polimorfismo",
          "Probando ejemplo práctico",
          "Consideraciones al utilizar polimorfismo",
          "Clases abstractas",
          "Reglas al utilizar clases abstractas",
          "Interfaces",
          "Programando ejemplo de interfaces",
          "Interfaces y polimorfismo",
          "Ejercicios de la sección"
        ],
        "Temas generales": [
          "Uso de variables static",
          "Uso de métodos static",
          "Uso de static en clases de Java",
          "Static y polimorfismo",
          "Bloques static",
          "Bloques anónimos",
          "Uso de paquetes y static imports"
        ],
        "Uso de arreglos y enumeraciones": [
          "Arreglos unidimensionales",
          "Iterando sobre arreglos",
          "Arreglos multidimensionales",
          "Arreglos irregulares",
          "Arreglos y sus formas de inicialización",
          "Arreglos de objetos",
          "Inicialización implícita de arreglos de objetos",
          "Uso de enumeraciones",
          "Ejercicios de la sección"
        ]
      },
      "requirements": [
        "Logica de programación"
      ],
      "description": "Java a profundidad\n\n\nMi nombre es Alejandro Agapito Bautista @raidentrance y en mi curso aprenderás a detalle el lenguaje Java a través de ejemplos enfocados en los detalles del lenguaje. Así mismo analizarás como están hechas algunas de las clases importantes de Java, todo a través de ejemplos prácticos y material de estudio resumido.\n\n\nEl curso es desde la perspectiva de un instructor que se dedica a la programación en su día a día y no desde la perspectiva de un académico.\n\n\nSe crearán ejemplos prácticos en la parte final del curso como editores de texto, comandos de windows, sincronización de hilos entre otros.\n\n\nEntre los temas que se cubren en el curso se encuentran:\n\n\n- Instalación y configuración\n-Conceptos básicos\n-Estructuras de control de flujo\n-Modificadores / Niveles de acceso\n-Programación orientada a objetos\n- Clases\n- Objetos\n- Herencia\n- Polimorfismo\n- Encapsulamiento\n- Cohesión y acoplamiento\n-Uso de static y bloques de Java\n-Uso de arreglos y enumeraciones\n-Wrapper classes y colecciones\n- Uso de genéricos\n-Manejo de errores\n-Clases internas\n-Uso de hilos\n-Manejo de archivos y flujos\n-Programación con Sockets\n\n\nDurante el curso podrás hacer preguntas relacionadas con el curso, además que se irá actualizando agregando nuevos temas o puntos nuevos importantes.\nEl curso tiene hojas de referencia las cuales sirven a los estudiantes como formularios para poder acceder a la información de una forma muy simple y rápida.",
      "target_audience": [
        "Desarrolladores que deseen aprender Java a profundidad"
      ]
    },
    {
      "title": "Máster en Java , 0 a experto, Universidad, GS, DAM, DAW",
      "url": "https://www.udemy.com/course/dumisnetwork-master-en-java-0-a-experto/",
      "bio": "El curso más detallado y mejor explicado de Java para aprender a dominar las bases de Java y convertirte en un experto.",
      "objectives": [
        "Aprender las bases de Java",
        "Aprenderás programación orientada a objetos (POO) y todo lo relacionado a ello.",
        "Aprobar examenes",
        "Conseguir tu primer empleo",
        "Preparar certificación java",
        "Aprenderás a manejar java con bases de datos JDBC, archivos y más.",
        "Aprenderás programación funcional con Expresiones Lambda y Stream API",
        "Aprenderás programación multihilo.",
        "Aprenderás a usar la POO con colecciones, excepciones etc.",
        "Aprenderás que son las clases, como usarlas, métodos, constructores etc.",
        "Aprenderás el tema de la herencia y su jerarquía en java",
        "Aprenderás comunicación entre objetos en java"
      ],
      "course_content": {},
      "requirements": [
        "No es necesario ningún conocimiento previo sobre programación, todo se explica desde el principio.",
        "Dominio básico del ordenador",
        "Sistema operativo de 64 bits",
        "Todo el software necesario para realizar el curso se indica en el mismo"
      ],
      "description": "El curso más detallado y mejor explicado de Java para aprender a dominar las bases de Java y convertirte en un experto.\nCuenta con un motón de ejercicios adaptados a todos los niveles de curso para poner en práctica lo aprendido.\nEste curso es está enfocado al aprendizaje del lenguaje de programación java.\nEmpezando desde lo más básico a lo más avanzado del lenguaje.\nAl terminar el curso serás capaz de dominar java de una manera profesional. Podrás crear tus propios programas a un nivel superior.\nAprenderás desde lo más básico, como crear variables y manejaras, hasta crear programas complejos como almacenamiento en archivos, bases de datos, interfaces gráficas etc.\nTambién aprenderás diseños tanto gráficos como funcionales.\n\n\nEl curso está explicado detalladamente para personas que no tienen ningún conocimiento sobre el tema. Va desde lo más básico a temarios más avanzados.\nEl curso está organizado de una manera excelente para que sepas en todo momento que estás haciendo.\nCabe destacar que los videos se componen de una parte teórica y una parte práctica para cada video. Una breve explicación de lo que se hará y la parte práctica para reforzar la explicación.\n\n\nNivel básico\n· Variables y tipos de datos\n· Operadores y tipos de operadores\n· Conversiones y tipos de conversiones\n· Entrada de datos desde teclado\n· Estructuras de control (condicionales)\n· Estructuras de control (bucles)\n\n\n\n\nNivel Intermedio\n· Introducción a la POO\n· Introducción a las clases\n· Metodos\n· Constructores\n· Alcance de variables\n· Metodos mas vanzados\n· Paquetes\n· Matrices\n· Herencia\n· Clases abstractas\n· Interfaces\n· Clases Wrapper\n· Argumentos variables (varargs java)\n· Enumeraciones\n· Uso de static\n· Encapsulación\n· Poliformismo\n· Instance of\n· Casting de objetos\n· Clase Math\n· Clase String\n· Clase Date\n· Clase Calendar\n· API de Time\n· Clase Object\n\n\nNivel avanzado\n· Recursividad\n· Programación mediante bloques de códigos\n· Manejo de excepciones\n· Manejo de Colecciones (listas)\n· Uso de Genéricos en java\n· Uso de interfaces graficas SWING\n· Threads\n· Manejo de archivos\n· Clase System\n· SQL\n· Manejo de bases de datos\n· Manejo de transacciones\n· Manejo de pool de conexiones\n· Java 8+ Programación funcional\n· Java 8+ Expresiones Lambda\n· Java 8+ API Stream\n· Java 8+ Optional",
      "target_audience": [
        "Personas que se quieran iniciar en la programación.",
        "Alumnos de escuelas, universidades etc.",
        "Personas que vienen de otros lenguajes de programación .",
        "Persona que quieran aprender POO (programación orientada a objetos)",
        "Programadores y Desarrolladores que necesitan aprender Java",
        "Personas interesadas en el desarrollo backend que necesitan aprender Java"
      ]
    },
    {
      "title": "Les bases indispensables de la programmation : Algorithmique",
      "url": "https://www.udemy.com/course/les-bases-indispensables-de-la-programmation-informatique/",
      "bio": "Maîtriser l'algorithmique en pseudo-code dans ce cours axé sur la pratique et contenant des dizaines d'algorithmes",
      "objectives": [
        "Les bases de la programmation informatique",
        "L'algorithmique",
        "Le pseudo-code",
        "Créer ses premiers programmes"
      ],
      "course_content": {
        "Introduction": [
          "Présentation du cours",
          "Qui suis-je ?",
          "Le parcours de formation",
          "Conseils pour suivre la formation",
          "L'informatique, qu'est ce que c'est ?",
          "L'informatique de gestion (ou du logiciel) c'est quoi ?",
          "Un algorithme, qu'est ce que c'est ?",
          "4 exercices d'algorithmique",
          "Le pseudo code"
        ],
        "Les Variables": [
          "La partie \"cours\"",
          "La partie \"exercices\"",
          "Le quizz"
        ],
        "Les types": [
          "La partie \"cours\"",
          "La partie \"exercices\"",
          "Le quizz"
        ],
        "Les tests": [
          "La partie \"cours\"",
          "3 exemples",
          "2 exercices",
          "les opérateurs logiques ET et OU",
          "2 exercices",
          "Le quizz"
        ],
        "L'instruction selon": [
          "La partie \"cours\"",
          "La partie \"exercices\"",
          "Le quizz"
        ],
        "Les boucles": [
          "L'explication générale",
          "Boucle POUR : le cours",
          "Boucle POUR : la partie \"exercices\"",
          "Boucle TANT QUE : la partie \"cours\"",
          "Boucle TANT QUE : Exercices et boucle FAIRE TANT QUE",
          "Le quizz"
        ],
        "10 exercices pour confirmer les acquis": [
          "Exercice 1",
          "Exercice 2",
          "Exercice 3",
          "Exercice 4",
          "Exercice 5",
          "Exercice 6",
          "Exercice 7",
          "Exercice 8",
          "Exercice 9",
          "Exercice 10"
        ],
        "Les fonctions": [
          "Les bases",
          "Un premier exercice",
          "Les paramètres de fonction",
          "Deux exercices",
          "Plusieurs paramètres",
          "Deux exercices",
          "Retour de fonction et deux exercices",
          "Exercice final",
          "Le quizz"
        ],
        "Les tableaux": [
          "La partie \"cours\""
        ],
        "10 exercices sur les tableaux et les fonctions": [
          "Exercice 1",
          "Exercice 2",
          "Exercice 3",
          "Exercice 4",
          "Exercice 5",
          "Exercice 6",
          "Exercice 7",
          "Exercice 8",
          "Exercice 9",
          "Exercice 10",
          "Le quizz"
        ]
      },
      "requirements": [
        "Aucun, c'est le cours initial pour débuter en programmation informatique"
      ],
      "description": "Un pack d'exercices supplémentaires et optionnel est désormais disponible sur Udemy, nommé \"51 exercices d'algorithmique (avec Milo)\".\n\n\nMaîtriser l'algorithmique en pseudo-code dans ce cours axé sur la pratique et contenant des dizaines d'algorithmes différents\nDans ce cours, vous apprendrez les bases de la programmation informatique au travers du sujet fondamental enseigné dans toutes les écoles supérieures d'informatique : l'algorithmique.\nC'est l'étape initiale, de votre apprentissage pour devenir informaticien (de programmation)\n\n\nUne introduction large...\nDans un premier temps nous verrons une introduction large sur l'informatique de programmation, et nous expliquerons ce que sont les algorithmes.\n\n\nParler l'informaticien...\nEnsuite, vous apprendrez le langage des informaticiens en étudiant le \"pseudo-code\", et vous apprendrez tous les concepts de l'informatique au travers d'une multitude d'exercices pratiques.\nLes sujets abordés sont très vastes et complets :\n- variables,\n- types\n- tests\n- instruction \"selon\"\n- boucle (Pour / Tant que / Faire - Tant que)\n- fonctions\n- tableaux\n- structuration\n- récursivité\n- algorithme de tri\n- recherche dichotomique\n- ...\n\n\nVos premiers programmes ...\nEnfin, vous commencerez à programmer en créant plusieurs algorithmes dans un langage de programmation spécifique (ici, le JavaScript).\nCes algorithmes sont applicables dans tous les langages de programmation.\n\n\nL'objectif...\nAvec plus de 6 heures d'enregistrements, des quizz, et une évaluation, vous disposerez du nécessaire pour continuer votre apprentissage de l'informatique de la programmation et avancer vers votre futur métier.\n\n\nMerci et à très vite !\nMatthieu de H2PROG.",
      "target_audience": [
        "Débutant en programmation",
        "Reconversion professionnelle",
        "Etudiants ou futurs étudiants en informatique"
      ]
    },
    {
      "title": "Hacking Éthique : Apprendre à programmer en Python",
      "url": "https://www.udemy.com/course/hacking-ethique-apprendre-a-programmer-en-python/",
      "bio": "Créez des outils de Sécurité Informatique en Python en partant de zéro",
      "objectives": [
        "Programmer divers outils en langage Python à partir de zéro.",
        "Connaître les bases fondamentales de Python, et les appliquer dans les domaines de vos choix.",
        "Comment la programmation s'articule autour du hacking éthique.",
        "Comment installer un environnement de travail sain, et comment programmer étape par étape.",
        "Appliquer les grands domaines du hacking éthique à la programmation (réseau, forensique, web, système, etc...).",
        "Comment programmer de façon rapide, simple, souple et en utilisant un débogueur",
        "Comment utiliser vos connaissances pour améliorer le monde numérique",
        "Comment les outils et failles informatiques populaires fonctionnent",
        "Apprendre à programmer en Python sous (Kali) Linux"
      ],
      "course_content": {
        "INTRODUCTION ET FONDAMENTAUX DE LINUX": [
          "Ce que vous saurez faire à l'issue de ce cours",
          "Installation de Virtualbox",
          "Installation de Kali en tant que machine virtuelle",
          "Installation de Kali en tant que machine virtuelle sous Mac",
          "CHECK LIST ANTI ERREURS",
          "Agrandir la taille de fenêtre (Additions invité)",
          "Résolution de bugs avec Kali et Virtualbox",
          "Configuration de Kali Linux",
          "AU SUJET DES VERSIONS DE KALI",
          "Fonctionnement du système de fichiers Linux",
          "Les commandes fondamentales de Linux (partie 1)",
          "Les commandes fondamentales de Linux (partie 2)",
          "Les commandes fondamentales de Linux (partie 3)",
          "Installation de Metasploitable en tant que machine virtuelle",
          "Installation et Configuration de l'Environnement de développement Pycharm",
          "Quiz 1 : Fondamentaux de Linux"
        ],
        "LES BASES DE PYTHON": [
          "Bases de Python : Les types de variables",
          "Bases de Python : Listes, Tuples, Imports...",
          "Bases de Python : Dictionnaires, Fonctions, et Flux de code",
          "Bases de Python : Conditions et Boucles",
          "Bases de Python : Votre première Fonction Complète",
          "Bases de Python : Les Bonnes Pratiques PEP8",
          "Des bugs dans dans le code !",
          "Avant de continuer... [et d'apprendre à programmer en Python]",
          "Quiz 2 : Les bases de Python"
        ],
        "PROGRAMMER UN CASSEUR DE MOTS DE PASSE": [
          "Casseur de mots de passe : Lire un Fichier de mots-clés et hachage",
          "Casseur de mots de passe : Créer des Arguments en ligne de commande",
          "Casseur de mots de passe : Fonction Récursive de Génération de mots de passe",
          "Casseur de mots de passe : Communiquer avec Internet pour la Recherche de Hashs",
          "Casseur de mots de passe : Commentaires et Création de Modules",
          "Casseur de mots de passe : Programmation Orientée Objet",
          "Casseur de mots de passe : Parallélisme pour accélérer la recherche",
          "Casseur de mots de passe : Débogage de code",
          "Casseur de mots de passe : Création d'une fonction intelligente par RegEx",
          "Exercice pratique 2",
          "Quiz 3 : Casseur de mots de passe"
        ],
        "PROGRAMMER UN OUTIL DE FORENSIQUE EN PYTHON": [
          "Outil de Forensique : Découvrir des Métadonnées PDF",
          "Outil de Forensique : Découvrir du Texte Caché dans des Programmes",
          "Outil de Forensique : Découvrir des Métadonnées EXIF dans des Images",
          "Outil de Forensique : Découvrir des coordonnées GPS et affichage sur une carte",
          "Outil de Forensique : Découvrir des Artefacts dans Firefox (sites visités)",
          "Outil de Forensique : Export de données en HTML",
          "Outil de Forensique : Récupérer les Cookies de Firefox",
          "Quiz 4 : Outil de Forensique"
        ],
        "PROGRAMMER UN DNS + ARP SPOOFER EN PYTHON": [
          "Créer un renifleur Réseau en Python",
          "Renifleur et Récupération de Mots de passe visibles en clair",
          "Fonctionnement du DNS Spoofing (usurpation DNS)",
          "DNS Spoofing en Local : Interception de traffic (Scapy + iptables)",
          "DNS Spoofing en Local : Modification de pages web à la volée",
          "DNS Spoofing à Distance : Homme du milieu et modification de pages web",
          "Fonctionnement de l'ARP Spoofing",
          "ARP Spoofing : Votre Propre Script Python",
          "ARP Spoofing : Restaurer la table ARP",
          "Quiz 5 : Spoofing"
        ],
        "PROGRAMMER UN SCANNER DE VULNÉRABILITÉS WEB EN PYTHON": [
          "Web Scanner : Le module mechanize pour simuler une connexion web",
          "Web Scanner : Beautiful Soup pour lire le contenu des pages web",
          "Web Scanner : Création du Crawler (robot d’indexation)",
          "Web Scanner : Introduction à Tkinter pour les interfaces graphiques",
          "Web Scanner : Utiliser PAGE pour accélérer la création d’interfaces graphiques",
          "Web Scanner : Création de l’interface graphique de notre programme",
          "Web Scanner : Lier le code à l’interface",
          "Web Scanner : Comprendre et Détecter l’Injection SQL",
          "Web Scanner : Recherche Automatisée SQL",
          "Web Scanner : Mettre en place un système de Session",
          "Web Scanner : Comprendre et Détecter la Faille XSS",
          "Web Scanner : Afficher les Résultats du Scan dans l’interface",
          "Web Scanner : Ajout du système de connexion dans l’interface",
          "Web Scanner : Mise en place de l’export du Rapport HTML",
          "Quiz 6 : Scanner web"
        ],
        "CONCLUSION ET PERSPECTIVES": [
          "Conclusion de ce cours",
          "Faites-vous certifier en Cybersécurité !"
        ]
      },
      "requirements": [
        "De la passion pour la programmation Python et pour la cybersécurité",
        "Une machine Windows avec 6Go de RAM minimum"
      ],
      "description": "Bienvenue dans ce cours dédié à l'apprentissage du langage Python à partir de zéro, avec une orientation hacking éthique.\nVous allez découvrir comment créer de véritables programmes utilisés par les hackers :\nun casseur de mots de passe avec plusieurs modes de cassage (dictionnaire, incrémental, en ligne, et intelligent)\nun outil de forensique pour récupérer des métadonnées cachées dans des fichiers PDF, Image, ou dans n'importe quel programme\nun outil d'usurpation réseau permettant de vous placer dans le cas de l'homme du milieu dans le réseau local (modification de pages web à la volée)\nun scanner de vulnérabilités web en interface graphique pour découvrir des failles XSS et SQL dans vos sites web, le tout avec les bons standards de programmation, du parallélisme, la gestion d'erreurs, etc...\nMISE À JOUR : + de 100 000 étudiants suivent mes cours ! Merci d'être si nombreux !\nLe cours se veut à la fois pratique et interactif, vous aurez de quoi vous entraîner sur vos systèmes sans rien casser et vous pourrez poser vos questions à tout moment si vous en avez.\nL'idée de ce cours est de vous faire passer du stade de \"j'ai entendu parler de Python\" au stade de pouvoir développer vos propres programmes tout en aiguisant vos connaissances en sécurité informatique.\nJ'ai conçu ce cours comme si j'étais assis à côté de vous en train de programmer et de vous enseigner en même temps mes conseils, les erreurs à éviter, etc...\nVous aurez également accès à des quiz, des exercices et diverses ressources additionnelles pour devenir véritable polyvalent en langage python afin de continuer dans la voie de votre choix ! En somme, vous aurez tout ce qu'il vous faut pour apprendre à programmer en Python de la meilleure de façons.\n\n\nNote : Ce cours de cybersécurité ne vise pas les grands débutants n'ayant jamais touché à l'informatique ou au code. Il vise un profil de débutant à connaisseur dans le hacking et la programmation. Le support est limité à ce qui est humainement possible avec des dizaines de milliers d'étudiants aussi bien en termes de délai que de précision. Pour un accompagnement plus complet et personnalisé, il est recommandé de se rapprocher de Cyberini.\n\n\nÀ propos :\nCyberini est un centre de formation spécialisé en cybersécurité créé en 2017 et certifié Qualiopi.\n\n\nMichel KARTNER est le fondateur de Cyberini.\nFormateur cybersécurité indépendant depuis 2013, il détient un Master en réseaux informatiques et systèmes embarqués.\nIl a été consultant cybersécurité junior dans une grande entreprise internationale où il travaillait à la fois sur des projets clients et des projets internes.\nFortes de + de 100 000 inscriptions, les formations Cyberini sont appréciées pour leur côté pratique et directement utilisable au quotidien et/ou dans le cadre professionnel. Le support technique est inclut par défaut, sans frais supplémentaires, ainsi que toutes les mises à jour.\n\n\n“Michel n’est pas un pirate, c’est un hacker éthique qui aide les internautes à se protéger.”\n— Complément d’enquête émission dédiée aux écoutes téléphoniques – FRANCE 2\n\n\n\n\nNOTES IMPORTANTES:\n- Les systèmes, méthodologies et programmes cités dans ce cours sont utilisés à but éducatif et préventif uniquement, et dans le cadre d'une utilisation à titre privé. Toutes les autorisations ont été reçues au préalable et toutes les précautions nécessaires ont été mises en place pour assurer un apprentissage légal et sans risque pour autrui. Cependant, Il VOUS incombe de vérifier toutes les lois applicables à votre situation et toutes les règles ou contrats en vigueur, notamment avec des prestataires/hébergeurs utilisés. En rejoignant ce cours, vous vous déclarez ainsi seul(e) responsable de vos actions, et aucune responsabilité de la part de l'instructeur ne sera engagée quant à la mauvaise utilisation du contenu enseigné.\nEn d'autres termes, ce cours n'est pas destiné aux apprentis PIRATES informatiques, qui n'auront pas ce qu'ils cherchent et qui seront écartés du cours s'ils contreviennent à cette ligne de conduite.\n- Ce cours n'est affilié à aucun autre cours sur le Hacking dont je ne suis pas l'auteur (Cyberini/Michel Kartner). Attention au contenu recopié ou très similaire dont je ne pourrai fournir aucune approbation ni support.\n\n\nUn cours par Cyberini (Michel Kartner).",
      "target_audience": [
        "Toutes personnes intéressées par la programmation Python (particuliers ou dans le monde professionnel)",
        "Toutes personnes intéressées par le hacking éthique",
        "Toutes personnes souhaitant étendre sa liste de compétences",
        "Toutes personnes curieuses de savoir \"comment les outils des pirates sont créés\""
      ]
    },
    {
      "title": "【実践】ビジネスケースとつなげてPythonで出来ること5つを学べる3日間集中コース",
      "url": "https://www.udemy.com/course/python-can/",
      "bio": "Pythonでできることがギュッと詰まった短期間集中コース！アニメーションで概要を理解してコーディングで実践していこう！",
      "objectives": [
        "Pythonでできることを複数学ぶ",
        "Pythonでデータ加工・集計・描画",
        "Pythonで機械学習モデル構築",
        "PythonでWebスクレイピング",
        "PythonでAPI利用",
        "PythonでWebアプリケーション開発"
      ],
      "course_content": {
        "イントロダクション": [
          "Pythonでできることと本コースの紹介"
        ],
        "Pythonの基礎構文": [
          "Pythonの基礎構文を学ぼう！",
          "Pythonの環境構築：Google Colab",
          "Google Colabの使い方",
          "演算子の種類を学ぼう！",
          "Pythonの変数と型を学ぼう！",
          "list型(リスト)を学ぼう！",
          "dict型(辞書)を学ぼう！",
          "print関数を学ぼう！",
          "文字列の操作方法を学ぼう！",
          "条件分岐のif文を学ぼう！",
          "繰り返し処理のfor文を学ぼう！",
          "関数の作り方と使い方を学ぼう！",
          "Python構文の復習"
        ],
        "Pythonでデータ集計・加工・描画": [
          "データ集計・加工・描画とは？",
          "Pandasの使い方を学ぼう！",
          "Numpyの使い方を学ぼう！",
          "Matplotlibの使い方を学ぼう！",
          "Seabornの使い方を学ぼう！",
          "Pythonの環境構築：Jupyte lab",
          "KaggleのWalmartの小売りデータ",
          "Jupyter labの使い方",
          "Walmartのデータでデータ集計・加工・描画",
          "【次の動画で発生するコードエラーの注意点】",
          "Walmartのデータでデータ集計・加工・描画2",
          "Walmartのデータでデータ集計・加工・描画3",
          "データ集計・加工・描画の復習"
        ],
        "Pythonで機械学習を使ったモデル構築": [
          "機械学習とは",
          "機械学習を実装するためのデータ分析のステップ",
          "モデル構築のフェーズ",
          "機械学習モデル構築1",
          "機械学習モデル構築2",
          "機械学習モデル構築3",
          "Light gbmの注意点",
          "機械学習モデル構築4",
          "機械学習モデル構築5",
          "Kaggleにサブミット",
          "機械学習モデル構築の復習"
        ],
        "Pythonを使ったWEBスクレイピング": [
          "WEBスクレイピングとは？",
          "Seleniumの準備",
          "【注意】Seleniumを使う際の注意点",
          "Webスクレイピング1",
          "Webスクレイピング2",
          "Webスクレイピング3",
          "Webスクレイピング4",
          "Webスクレピングの復習"
        ],
        "Pythonを使ったAPIの利用": [
          "APIとは？",
          "Slack APIを利用する準備",
          "Slack API利用",
          "APIの復習"
        ],
        "Pythonを使ったWebアプリケーションの作成": [
          "Webアプリケーションとは？",
          "Webアプリケーション作成の完成形を確認",
          "Webアプリケーション作成1：Flaskを使ってみよう",
          "Webアプリケーション作成2：HTMLの基本とJquery",
          "Webアプリケーション作成3：Bootstrap",
          "Webアプリケーション作成4：Bootstrap",
          "Webアプリケーション作成5：Ajaxで非同期処理",
          "Webアプリケーション作成6：実装",
          "Webアプリケーション作成7：処理の復習",
          "Webアプリケーション作成の復習"
        ],
        "まとめ": [
          "本コースのまとめ",
          "【確認テスト】コースの理解度をチェックしよう",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Pythonに対する興味",
        "プログラミングに対する嫌悪感がないこと",
        "やる気があること",
        "Mac推奨ですが、Windowsでも受講可能です"
      ],
      "description": "Pythonって最近よく聞くけど何ができるのか分からない・・・\nPythonを勉強したいけど時間がない・・・\nという方にオススメなのがこのコース！\n\n\n本コースではPythonでできること5つをギュッと詰め込んで学べます。\nPythonの勉強を継続するためにはPythonを通じて何をしたいのか目的を明確にすることが重要です。\nまずはPythonでできることをこのコースを通じて理解しましょう！\n\n\n本コースでは以下の5つのセクションに分けてPythonでできることを学びます。\n・データ集計・加工・描画\n・機械学習を使ったモデル構築\n・Webスクレイピング\n・APIの利用\n・Webアプリケーション開発\n\n\nそれぞれのセクションはアニメーションを使った概要編とハンズオン形式で進む実践編に分かれており概要を理解した後に手を動かしてコーディングしていきます。\n\n\nデータ集計・加工・描画と機械学習モデル構築に関してはKaggleというデータ分析コンペティションのWalmartの小売データを扱いながら学んでいきます。\nWebスクレイピングとAPI利用とWebアプリケーション開発に関しては、楽天の在庫情報を取得してSlackに自動で通知するWebアプリケーションを作成して学んでいきます。\n※後半は若干レベルが上がります\n\n\nどちらも実務に横展開しやすい題材で選んでいますので、ぜひこのコースを修了した後はご自身の業務に活用してみてください！",
      "target_audience": [
        "Pythonについて興味はあるけど何から勉強してよいか分からない",
        "Pythonでどんなことができるのか分からない",
        "プログラミングは経験したことがあるけどPythonで何ができるのか知ってみたい",
        "時間がないから短期間でザッとPythonでできることを知りたい"
      ]
    },
    {
      "title": "[2025] Kurs Python 3 od Podstaw do Mastera - 72h!",
      "url": "https://www.udemy.com/course/kurs-python-od-podstaw-dla-poczatkujacych-od-zera-do-mastera/",
      "bio": "Naucz się Pythona nawet jeśli nic nie wiesz o programowaniu. 15 projektów OOP Wątki, Tkinter, PostgreSQL, 300 pyt.rekr",
      "objectives": [
        "Poznasz jeden z najpopularniejszych języków programowania od absolutnych podstaw do również średnio zaawansowanych zagadnień",
        "Nauczysz się czym są zmienne jak łańcuchy znaków, typy liczbowe, listy, słowniki, krotki, zbiory oraz operacje na nich za pomocą funkcji i konwersji",
        "Wykorzystasz operatory do operacji na zmiennych, instrukcje warunkowe do sterowania programem, pętle oraz własne funkcje, poznasz różne wzorce projektowe",
        "Zastosujesz wyrażenia Lambda w swoich programach, poznasz od podstaw PostgreSQL, ORM SQLAlchemy, wyrażenia regularne, testowanie kodu z unittest, moduł requests",
        "Obsługi plików, odczytu i zapisu plików tekstowych, binarnych, serializacji i deserializaji obiektów",
        "Programowania obiektowego: klas, obiektów, konstruktory, destruktory, metody, atrybuty, statyczne zmienne, DocString, dziedziczenia, getterów, setterów",
        "Importowanie pakietów w tym zewnętrznych z wykorzystaniem narzędzia pip, stworzysz też własne pakiety",
        "Programowanie wielowątkowe z klasą _thread, threading oraz synchronizacji wątków",
        "Turtle: programowanie z żółwiem szczególnie dla młodszych czy początkujących programistów, obsługi podstaw interfejsu użytkownika",
        "Tkinter: interfejs użytkownika z widgetami jak pola tekstowe, radio, checkbutton, spinner, menu, scale, frame i sposobach ich lokalizacji z grid, place i pack",
        "Projekty od podstaw: gra snake, kalkulator crypto, dane finansowe spółek giełdowych z serwera, quiz itd, aplikacje FullStack z frameworkiem Flask",
        "Omówienie 300 przykładowych pytań rekrutacyjnych wraz z wyjaśnieniem"
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp",
          "Instalacja Pythona i Visual Studio Code - środowisko pracy",
          "Pierwszy program w Python",
          "Materiały do kursu",
          "Kilka rad jak szybko nauczyć się programowania"
        ],
        "Praca z typami danych: proste, słowniki, krotki, listy, zbiory etc": [
          "Zmienne podstawy - prawdłowa nazwa identyfikatorów",
          "Zmienne podstawy - ćwiczenia",
          "Zmienne - zadanie",
          "Komentarze",
          "Typy danych oraz liczby całkowite zmienoprzecinkowe zespolone",
          "Typy danych - zadanie 1",
          "Typy danych - zadanie 2",
          "Typ łańcuch znaków - String",
          "Typ łańcuch znaków - String - ćwiczenie",
          "String - zadanie",
          "Typ Boolean - wartość logiczna",
          "Boolean - zadanie",
          "Typ List - listy kolekcja przechowująca wiele elementów",
          "Typ List - listy - ćwiczenie",
          "List - zadanie",
          "Typ Krotki Tuples",
          "Tuples - zadanie 1",
          "Tuples - zadanie 2",
          "Typ Dict - słownik",
          "Dict - zadanie",
          "Typ Set i Frozenset - zbiór",
          "Set - zadanie",
          "Konwersje typów funkcje int float str",
          "Konwersje typów - ćwiczenie",
          "Konwersje typów funkcje int float str - zadanie",
          "Konwersje typów funkcje tuple list dict set frozenset",
          "type conversion tuple list dict set frozenset - zadanie do wykonania",
          "Konwersje typów bool",
          "Typ None",
          "Mutowalność kontra niemutowalność",
          "mutowalność vs niemutowalność - zadanie"
        ],
        "Operatory": [
          "Operatory arytmetyczne",
          "Operatory arytmetyczne - rezultat inwestycji wobec inflacji - zadanie",
          "Operatory przypisania",
          "Operatory przypiania - zadanie",
          "Operatory porównania",
          "Operatory porównania - zadanie",
          "Operatory logiczne",
          "Operatory logiczne - ćwiczenia",
          "Operatory - kolejka górska - zadanie",
          "Operatory logiczne - kolejne zadanie",
          "Operatory przynależnośći is oraz not in",
          "Operatory przynależnośći is oraz not in - zadanie",
          "Operatory tożsamości is oraz is not",
          "Operatory tożsamości is oraz is not - zadanie",
          "Operator konkatenacji",
          "Operator konkatenacji - zadanie"
        ],
        "Instrukcja warunkowa if oraz pętle": [
          "Instrukcja if elif else i wcięcia",
          "Instrukcja if elif else - ćwiczenia",
          "Instrukcja if elif else i wcięcia - zadanie",
          "Instrukcja if elif else - kwalifikacja pobrania krwi - zadanie",
          "Instrukcja if - rekrutacja - zadanie",
          "Instrukcja if elif else - wiek psa - zadanie",
          "Instrukcja if różne sposoby na porównanie z boolean",
          "Instrukcja if - zadanie z temperaturą",
          "Pętla while",
          "Pętla while - zadanie 1",
          "Pętla while -zadanie 2",
          "Pętla while - zadanie 3",
          "Pętla for",
          "Pętla for - zadanie",
          "for oraz instrukcja if - odd, even - zadanie",
          "Operatory - parzyste liczby - zadanie",
          "Pętla for z range",
          "Pętla for z range - zadanie",
          "Pętla for z range - zadanie",
          "Pętla for z range - zadanie 3",
          "Zagnieżdżone petle",
          "Pętla zagnieżdżone petle - zadanie",
          "Kontrola działania programu instrukcja break continue pass",
          "Kontrola działania progamu instrukcja break continue pass - zadanie"
        ],
        "Projekt nr. 1: Kalkulator w terminalu": [
          "Program kalkulator w terminalu"
        ],
        "Funkcje": [
          "Definiowanie funkcji",
          "Zwracanie wartości z funkcji return",
          "Zwracanie wartości - zadanie",
          "return - zwracanie słownika - zadanie 3",
          "return - zadanie",
          "return - zadanie 2",
          "return - konwersja temperatury - zadanie 3",
          "return - zadanie",
          "return - zadanie",
          "Informacje przekazywane do funkcji parametry czy argumenty",
          "Przekazanie mutowalnych i niemutowalnych wartości do funkcji",
          "Niemutowalne argumenty - zadanie 1",
          "Niemutowalne argumenty - zadanie 2",
          "Niemutowalne argumenty - zadanie 3",
          "Mutowalne argumenty - zadanie 1",
          "Mutowalne argumenty - zadanie 2",
          "Domyślne argumenty funkcji",
          "Domyślne argumenty funkcji - zadanie",
          "Nazwane argumenty funkcji",
          "Nazwane argumenty - zadanie",
          "Określenie dopuszczalnych sposobów przekazywania danych do funkcji dzięki / i *",
          "Kolejność argumentów - zadanie",
          "Scope zasięg zmiennych",
          "Scope zasięg zmiennych - ćwiczenia",
          "Scope - zadanie",
          "Scope - kolejne zadanie",
          "Wyrażenia Lambda",
          "Lambda - zadanie",
          "Wyrażenia Lambda - zadanie",
          "Wyrażenia Lambda - zadanie"
        ],
        "Przydatne funkcje do pracy z Stringami, krotkami, słownikami, listami, datam itd": [
          "Przydatne funkcje do operacji matematycznych",
          "Przydatne funkcje do operacji matematycznych - zadanie",
          "Przydatne funkcje do operacji na łańcuchach znaków",
          "Łańcuchy znaków - walidacja maila - zadanie",
          "Łańcuchy znaków - czyszczenie tekstu - zadanie 2",
          "Łańcuchy znaków - informacje o użytkowniku - zadanie 3",
          "Łańcuchy znaków - konwersje z str - zadanie 4",
          "Łańcuchy znaków - części maila - zadanie 5",
          "Przydatne funkcje do operacji na listach",
          "Przydatne funkcje do operacji na listach - zadanie",
          "Przydatne funkcje do operacji na krotkach",
          "Przydatne funkcje do operacji na krotkach - zadanie",
          "Przydatne funkcje do operacji na słownikach",
          "Przydatne funkcje do operacji na słownikach - zadanie",
          "Przydatne funkcje do operacji na datach",
          "Przydatne funkcje do operacji na datach - zadanie",
          "f string"
        ],
        "Projekt nr. 2 Kursy walut w formacie JSON": [
          "Projekt nr. 2 Kursy walut w formacie JSON"
        ],
        "Programowanie obiektowe": [
          "Wstęp do programowania obiektowego - definicja klasy Car",
          "Klasa SimCard - zadanie",
          "Klasy - zadanie 2",
          "Definicja klasy na podstawie której powstają obiekty",
          "Konstruktor klasy",
          "Konstruktor wewnątrz klasy - zadanie",
          "Metody klasy",
          "Atrybuty klasy",
          "Destruktor klasy",
          "Statyczna zmienna wspólna dla wszystkich obiektów",
          "DocString oraz inne przydatne metody i atrybuty w klasie",
          "Dziedziczenie oraz nadpisywanie metod i atrybutów",
          "Dziedziczenie a konstruktory",
          "Hermetyzacja - enkapsulacja danych w klasie",
          "Hermetyzacja - enkapsulacja gettery i settery",
          "Moduły instrukcja import oraz from import",
          "__name__ i funkcja reload",
          "Tworzenie pakietów"
        ],
        "Projekt nr. 3: Koszyk zakupów": [
          "Ćwiczenie: koszyk zakupów z klasami, wykorzystanie super() oraz isinstance()"
        ]
      },
      "requirements": [
        "Wymagane są jedynie dobre chęci oraz komputer :)"
      ],
      "description": "Python jest jednym z najprostszych i najprzyjemniejszych języków do nauki oraz codziennego programowania. Wiele potężnych firm nie może się mylić jak Google - YouTube, Facebook, Yahoo, Dropbox etc korzystając z niego w wielu projektach. Dołożyłem wszelkich starań aby ten kurs nauczył Ciebie Pythona w szybki i prosty sposób na slajdach, praktycznych przykładach oraz gotowych mini projektach.\nNauczysz się jak:\nkorzystać z zmiennych liczbowych, łańcuchów znaków, wartości logicznych, list, słowników, zbiorów oraz dokonywać konwersji między nimi\noperatorów arytmetycznych, przypisania, porównania, logicznych, przynależności, tożsamości, konkatenacji\nsterować programem instrukcją if, elif, else\nkorzystać z pętli for i while do wielokrotnego wywołania kodu oraz continue i break do przerywania ich działania\ntworzyć własne funkcje, zwracać wartość z funkcji za pomocą return , przekazywać argumenty do funkcji, wykorzystywać scope - zasięg zmiennych oraz funkcje lambda\nwykorzystywać funkcje do pracy z łańcuchami znaków, operacji na listach, słownikach, krotkach, datach i liczbach\nprogramować obiektowo - OOP z wykorzystaniem klas, obiektów, metod, atrybutów, konstruktorów, destruktorów, statycznych zmiennych, dziedziczenia, hermetyzacji/enkapsulacji danych - getterów i setterów\nimportowania modułów z instrukcją import, również zewnętrznych pakietów za pomocą narzędzie pip\ntworzenia własnych pakietów\npracy z plikami: zapis i odczyt plików tekstowych, binarnych, serializacji i deserializacji obiektów\nprogramowania wielowątkowego na bazie _thread, threading i rozszerzając klasę Thread, synchronizację wątków\nmodułu Turtle malowania kształtów, wypełniania obiektów kolorem, obsługi ekranu i klawiatury\ntworzenia interfejsu użytkownika z modułem Tkinter z użyciem widgetów jak: przycisków, labelów, pól tekstowych, checkbutonów, list, menu, suwaka, pól radio, spinbox oraz rozmieszczenia ich w oknie z metodami grid, place i pack\ntesty kodu z wykorzystaniem unittest\nkorzystanie z bazy danych PostgreSQL w Python i PgAdmin\nnauczysz się używać ORM SQLAlchemy który przyśpiesza pracę z bazami danych\nwyrażenia regulane\nwzorce projektowe\ntworzenie interfejsu użytkownika z PySide i wxPython\nkorzystanie  z bazy danych SqlLite 3 która jest preinstalowana wraz z Python\nscraping stron z Beautifulsoup\nFlask - framework serwerowy w Python do tworzenia stron www\nstworzysz aplikacje FullStack z Flask i frontendem do skracania linków i ranking piosenek\nomówienie zaawansowanych wzorców projektowych jak: repository, dto, dao, eav itd wraz z bazami danych\n300 omówionych pytań rekrutacyjnych\n\n\nTo nie koniec! Kurs składa się z wielu praktycznych ćwiczeń oraz projektów tworzonych od zera pokazujących praktyczne wykorzystanie Pythona jak:\nprogram do pobierania aktualnych kursów walut z serwera w formacie JSON oraz ich prezentacja w terminalu\nkalkulator w terminalu do wykonywania obliczeń na liczbach\npseudo kantor crypto z aktualnymi cenami z api serwera oraz przeliczeniem wartości z złotówek\nprosty koszyk zakupów\nquiz z pytaniami z api serwera oraz podliczeniem wyniku prawidłowych odpowiedzi\nprogram pobierający strony html z serwera do pliku\nwielowątkowe sprawdzanie dostępności do stron internetowych - statusy HTTP wraz z raportem do pliku\ngra Snake - wąż z wykorzystaniem Turtle\nkalkulator z interfejsem użytkownika dzięki Tkinter\nprezentacja danych wybranych spółek giełdowych wraz z historią wyceny akcji na podstawie wybranego Tickera jak TSLA, AAPL itd\n\n\nKurs jest stale aktualizowany oraz rozbudowywany, ma bogactwo:\nprofesjonalnych slajdów z opisami zagadnień, przykładami, zdjęciami oraz rezultatami oczekiwanymi w przeglądarce.\nkodowania na żywo omówionych tematów co pozwala na przećwiczenie i zapamiętanie nowo poznanych zagadnień\ngotowe projekty, które stworzymy razem w celu utrwalenia całej wiedzy\nbogactwo skondensowanych informacji, bez zbędnych dygresji\nzadania do samodzielnego wykonania, gdzie w punktach określone jest co dokładnie trzeba wykonać, następnie zaprezentowane jest przykładowe rozwiązanie. Dzięki zadaniom przećwiczysz i utrwalisz samodzielnie nowo poznaną wiedzę",
      "target_audience": [
        "Osoby które chcą rozpocząć przygodę z programowaniem oraz te które znają już inne języki"
      ]
    },
    {
      "title": "【4日間でチャレンジ】Python 3・ PyTorch によるディープラーニング・AIアプリ開発入門",
      "url": "https://www.udemy.com/course/pytorch-deeplearning/",
      "bio": "2018年大注目の高速ディープラーニングライブラリ・PyTorchを使い、深層学習 による分類・推定や、時系列データ処理等を学びましょう。Jupyter Notebook上で基礎を学び、最終的にアプリ化にチャレンジします。",
      "objectives": [
        "ディープラーニングの代表的なアルゴリズムを一通り体験できます。",
        "高速でシンプルに学習・推定ができるPyTorchの使い方をコードを書いて学べます。",
        "NumPyを置換するPyTorchでのテンソル（多次元行列）の扱いについて学べます。"
      ],
      "course_content": {
        "第1日目：イントロと用語の整理": [
          "コースの概要",
          "機械学習とは？",
          "パーセプトロンからニューラルネットワークへ"
        ],
        "第1日目：　環境構築（共通）Anaconda3のインストール": [
          "Anaconda 3 のダウンロード・インストール"
        ],
        "第1日目：環境構築": [
          "PyTorchのインストール"
        ],
        "環境構築セクションの課題": [
          "練習課題：　torchvisionのインポートを確認してみよう",
          "実行例： torchvisionパッケージのインポート"
        ],
        "第2日目：Torchテンソルを使ってみよう！": [
          "PyTorchのチュートリアルページを開いてみよう",
          "PyTorchでテンソルを生成してみよう（その１）",
          "PyTorchでテンソルを生成してみよう（その２）",
          "_likeやnew_でテンソルを生成しよう",
          "テンソルの要素を足してみよう",
          "NumPy配列とTorchテンソルの連携"
        ],
        "第2日目：ニューラルネットワークと自動微分計算": [
          "自動微分のイントロ",
          "ノートブックでgrad_fnを確認してみよう",
          "requires_gradのセットと反転",
          "偏微分値を求めてみよう"
        ],
        "第3日目：ニューラルネットワークによるワインの分類": [
          "セクションの概要",
          "ノートブックの追加とパッケージのインポート",
          "データの読み込みと分割",
          "PyTorchのテンソルに変換しよう",
          "モデルを定義しよう",
          "トレーニングを実行しよう",
          "精度を計算しよう",
          "セクションで使用したノートブック",
          "練習課題：　隠れ層のノード数を変更して精度の違いを確認してみよう",
          "課題実行サンプル：　精度向上にチャレンジ！",
          "練習課題2：　トレーニング回数を増やしてみよう(Over-fitting）",
          "課題の実行例ノートブック"
        ],
        "第3日目：ワインの分類。多層化して精度を向上させよう": [
          "セクションの概要：　層を深くしてみよう",
          "隠れ層をディープにしてみよう！",
          "練習課題：　レイヤーを追加して精度向上を実現しよう",
          "実行サンプルのノートブック"
        ],
        "第4日目：時系列データ処理と異常検知": [
          "セクションの概要：　時系列データ処理",
          "気温のオープンデータのダウンロード",
          "PandasでCSVファイルを読み込もう",
          "シーケンスデータを生成しよう",
          "モデルを定義しよう",
          "トレーニングを実行してみよう",
          "入力値と出力値をプロットしてみよう",
          "テストデータの出力を計算しよう",
          "誤差のスコアを計算し、異常値を検出しよう",
          "練習課題：　オートエンコーダを実装してみよう"
        ]
      },
      "requirements": [
        "PCのフォルダー作成やソフトウェアのダウンロード作業ができること",
        "インターネット接続が使用できること（ソフトウェアのインストールに必要です）",
        "機械学習や深層学習に関心があり、コードを書いて仕組みを理解したい方"
      ],
      "description": "【どうして今PyTorchを学ぶべきか？】\nこのコースでは、Facebook AI Researchグループなどで開発されているPyTorchという深層学習ライブラリの基礎的知識と、典型的なディープラーニングモデルの実装、Webアプリ化にチャレンジします。\nPyTorchはTensorFlowと双璧をなす、ディープラーニングライブラリで、2018年夏にはCaffeと統合され、さらなる普及が予測されます。\n最新のAI研究成果で発表されたアルゴリズムはいち早くPyTorchで実装されていて、最新のAI研究成果を学ぶのにとても役立ちます。\n【更新情報】\n2018/7/6 オートエンコーダ（自動符号化器）による時系列データ（気温データ）の解析、異常値検出を行うセクションを追加しました。\n【コースの構成】\n1日目：　PyTorchと機械学習、環境構築\n2日目：　PyTorchによるテンソル（多次元行列）表現と自動微分計算\n3日目：　ニューラルネットワーク（3層パーセプトロン）でワインを分類してみよう（3層）\nディープラーニング（多層パーセプトロン）でワインを分類してみよう（多層）\n4日目：　オートエンコーダ（自動符号化器）を使った時系列データの異常検知（2018/7/6　追加）\n\n\n＊リクエストに応じて、チュートリアルを追加収録していきます。\n\n\n【PyTorchの特徴】\nPyTorchは、以下のような特徴があります。\n・NumPyより高速なテンソル（多次元行列）計算ライブラリ\n・Define by Run：　モデルを動的に定義し、柔軟な学習が可能\nTensorFlowはDefine & Run（あらかじめモデルを定義し、トレーニング時にはモデルは固定）\n・研究者コミュニティで爆発的に普及\nなどの特徴があり、今後も成長が期待されます。\nTensorFlowよりシンプルにモデルを定義することができるのと、GPUのパワーを最大限に活かすことができるのがメリットです。\n\n\nぜひこの機会にPyTorchによる高速・柔軟な開発をマスターしましょう！",
      "target_audience": [
        "ディープラーニングの代表的なアルゴリズムを短期間に俯瞰したい方",
        "TensorFlowの計算グラフとセッションによる学習手順が複雑だと感じた方",
        "研究者コミュニティで急速に普及しているPyTorchによるディープラーニング実装を学びたい方",
        "ビデオによる学習が苦痛でない方（書籍の方が学びやすい方にはお勧めしません）"
      ]
    },
    {
      "title": "SAP ABAP : Temel Seviye ABAP Eğitim Seti",
      "url": "https://www.udemy.com/course/temel-seviye-sap-abap-egitim-seti/",
      "bio": "SAP ABAP eğitiminde uygulamalı anlatım ile ABAP diline kolayca öğrenin! ABAP Developer Edition hediye edilmektedir.",
      "objectives": [
        "SAP ABAP Developer Edition kurulmuş SAP sistemine ücretsiz olarak sahip olacaksınız.",
        "Sınırsız bir şekilde kendi SAP sisteminizde geliştirme yapma imkanına sahip olacaksınız.",
        "SAP ABAP programlama dilinde kendi geliştirmelerinizi yapabileceksiniz.",
        "SAP ABAP programlama dilinde raporlarınızı yapabileceksiniz.",
        "Diğer eğitimlerden farklı olarak örnek case üzerinden uçtan uça süreç tasarlamayı öğreneceksiniz.",
        "SAP ERP hakkında bilgi sahibi olacaksınız.",
        "SAP ERP ekranlarını detaylı olarak öğreneceksiniz.",
        "ABAP editör ekranında sizlere kolaylıklar sağlayacak önemli bilgiler edineceksiniz.",
        "ABAP programlama dili hakkında önemli bilgiler öğreneceksiniz.",
        "Kurumsal bir şirkette SAP departmanında iş birimlerinin taleplerini karşılamaya başlayabileceksiniz."
      ],
      "course_content": {
        "SAP ERP ye Giriş": [
          "SAP ABAP Eğitim Seti Tanıtım Videosu",
          "7zip Uygulaması ile SAP ABAP Developer Edition 7.52 SP4 Klasörünün Çıkartılması",
          "SAP ABAP Developer Edition 7.52 SP4 Sisteminin Download Edilip Kurulması",
          "ASE Lisansının Yüklenmesi",
          "SAP ABAP Developer Edition Lisans Yenileme",
          "SAP Ekranlarının Öğrenilmesi",
          "Sizlerden Gelen Sorular"
        ],
        "SAP de Uygulamalı Anlatım": [
          "SAP de Program Yaratılması",
          "Değişken tanımlama",
          "Tablo ve strcuture tanımlama",
          "Internal tabloya değer atama",
          "Internal tablodan kayıt okuma",
          "Internal tablodan kayıt güncelleme",
          "Internal tablodan kayıt silme",
          "Internal tabloda kayıt sıralama",
          "Internal tabloda döngü",
          "Structure değer atama",
          "Structure değer silme",
          "Structure güncelleme",
          "Koşul komutlarının gösterilmesi",
          "Karakterler için kullanılan komutlar"
        ],
        "Ekran tasarımı": [
          "Selection screen yaratılması",
          "Parametre yaratılması",
          "Select-options yaratılması",
          "Text element tanımlama",
          "Varyant tanımlama",
          "ZSD_URUN_STOK Tablosunun Yaratılması",
          "Select komutları",
          "ALV Grid Display fonksiyonu kullanımı"
        ],
        "Programın Debuglanması": [
          "Örnek bir programın debuglanması",
          "Sistem değişkenleri kontrol",
          "Breakpoint ile analiz",
          "Watchpoints ile analiz",
          "Debug mode sonlandırma"
        ],
        "Database Tablosuna kodlama ile yapılan işlemler": [
          "Kayıt eklemek",
          "Kayıt güncellemek",
          "Kayıt silmek",
          "Key değerlerin güncellenmesi"
        ],
        "Data Dictionary": [
          "Tablo yaratılması",
          "View yaratılması",
          "Data type yaratılması",
          "Type group yaratılması",
          "Domain yaratılması",
          "Structure yaratılması",
          "Data element yaratılması",
          "Search help yaratılması",
          "Lock object yaratılması"
        ],
        "Database Tablosu İşlemleri": [
          "Database tablosuna alan eklemek",
          "Database tablosundan alan çıkarmak",
          "Database tablosunda key field belirleme",
          "Database tablosuna append structure ekleme",
          "Database tablosuna include structure ekleme",
          "Database tablosunun kayıtlarının silinmesi",
          "Database tablosunun kopyalanması",
          "Database tablosunun SAP den silinmesi"
        ],
        "Programın Modüler Bir Yapıya Dönüştürülmesi": [
          "Include kullanımı",
          "Subroutine kullanımı",
          "Fonksiyon yaratılması"
        ],
        "Örnek bir case üzerinden uygulamanın tasarlanması": [
          "Uçtan uca bir sürecin tasarlanması"
        ],
        "Kapanış - İleri seviye SAP ABAP Eğitimi Bilgilendirme": [
          "İleri seviye ABAP programlama"
        ]
      },
      "requirements": [
        "Hayır yok."
      ],
      "description": "SAP dünyasına adım atmak ve ABAP programlama dilinde uzmanlaşmak isteyenler için özel olarak tasarlanmış olan \"SAP ABAP: Temel Seviye ABAP Eğitim Seti\" kursumuza hoş geldiniz! Bu kapsamlı eğitim video seti, SAP ERP ürünleri hakkında sıfırdan bilgi edinmenizi sağlayacak ve kurs sonunda ABAP programlama diliyle bağımsız olarak geliştirme yapabilecek yetkinliğe ulaşmanızı hedeflemektedir.\nEğitim sürecimiz boyunca, teorik bilgileri pratik uygulamalarla birleştirerek öğrenme deneyiminizi zenginleştireceğiz. Katılımcılarımızın uygulamalı içerikleri anında hayata geçirebilmeleri için, özel olarak SAP ABAP Developer Edition ürününü ücretsiz olarak sunmaktayız. Bu sayede, öğrendiklerinizi kendi bilgisayarınızda deneyimleme fırsatı bulacak ve pratik becerilerinizi pekiştireceksiniz.\nEğitim içeriğimiz iki ana bölümden oluşmaktadır:\nSAP ERP Sistemine Giriş ve Ekran Kullanımı: SAP ERP ürününün temel modüllerini, ana ekranlarını ve işlevselliklerini detaylı bir şekilde keşfedeceğiz. Bir SAP uzmanının günlük iş akışında ihtiyaç duyacağı tüm kritik ekranların kullanımı hakkında kapsamlı bilgiler sunarak, sistemin genel yapısını ve navigasyonunu eksiksiz bir şekilde anlamanızı sağlayacağız.\nABAP Programlama Dili ile Geliştirme: Temel ABAP sözdiziminden başlayarak, veri tanımlama, kontrol yapıları, iç tablolar, raporlama, modül havuzları ve fonksiyon modülleri gibi ileri düzey konulara kadar ABAP programlamanın inceliklerini öğreneceksiniz. Gerçek dünya senaryolarına yönelik uygulamalarla, SAP sistemlerinde özelleştirmeler yapma ve iş süreçlerini ABAP ile geliştirme yeteneğinizi inşa edeceksiniz.\nBu eğitim seti sonunda elde edeceğiniz bilgi ve becerilerle, SAP Danışmanlık şirketlerinde veya kurumsal firmaların bünyesinde SAP Uzmanı ya da SAP Danışmanı olarak kariyerinize güçlü bir başlangıç yapabilirsiniz. SAP ekosistemindeki talep gören pozisyonlar için gerekli temelleri sağlam bir şekilde atmanızı garanti ediyoruz.\nSAP ABAP dünyasına yolculuğunuza hemen başlayın ve geleceğinize yatırım yapın!",
      "target_audience": [
        "SAP alanında uzmanlaşmak isteyen kişiler",
        "ABAP programlama dilini öğrenmek isteyen kişiler",
        "Üniversite öğrencileri",
        "Üniversiteden yeni mezun kişiler",
        "Kurumsal yada SAP Danışmanlık şirketlerinde çalışmak isteyen kişiler",
        "Yazılım alanında çalışmak isteyen kişiler"
      ]
    },
    {
      "title": "101 Exercices et Algorithmes Python Corrigés",
      "url": "https://www.udemy.com/course/python-exercices/",
      "bio": "Montez en compétence sur des dizaines de notions d'algorithmique avec ces 101 exercices Python concrets.",
      "objectives": [
        "Développer un esprit de résolution de problèmes",
        "Apprendre des fonctions et techniques méconnues",
        "Découvrir des moyens d'optimiser son code",
        "Comprendre le fonctionnement d'un algorithme",
        "Résoudre des dizaines d'exercices allant de débutant à avancé",
        "Mesurer son niveau en Python en fonction du taux de réussite aux exercices"
      ],
      "course_content": {
        "Introduction": [
          "Rejoins la communauté Discord",
          "Lien d'invitation pour le serveur Discord",
          "Un petit mot sur la difficulté",
          "Comment utiliser les outils de code sur Udemy"
        ],
        "Installation de l'environnement de travail": [
          "Installation de Python 3 sur Windows",
          "Installation de Python 3 sur Mac",
          "Installation de Python 3 sur Linux",
          "La version de Python utilisée."
        ],
        "Débutant": [
          "Exercices débutants - Introduction",
          "001 - Déclarer des variables",
          "001 - Déclarer des variables - Solution",
          "002 - Erreur déclaration variable",
          "002 - Erreur déclaration variable - Solution",
          "003 - Convertir une variable d'un type à un autre",
          "003 - Convertir une variable d'un type à un autre - Solution",
          "004 - Trouver la valeur d'une variable",
          "004 - Trouver la valeur d'une variable - Solution",
          "005 - Ajouter un séparateur dans la fonction print",
          "005 - Ajouter un séparateur dans le print - Solution",
          "006 - Erreur dans la déclaration d'une variable",
          "006 - Erreur dans la déclaration d'une variable - Solution",
          "007 - Vérifier si une variable est d'un certain type",
          "007 - Vérifier si une variable est d'un certain type - Solution",
          "008 - Remplacer un mot par un autre",
          "008 - Remplacer un mot par un autre - Solution",
          "009 - Ordonner une chaîne de caractère",
          "009 - Ordonner une chaîne de caractère - Solution",
          "010 - Calculer le volume d'une sphère",
          "010 - Calculer le volume d'une sphère - Solution",
          "011 - Tester si un nombre est plus grand que 10",
          "011 - Tester si un nombre est plus grand que 10 - Solution",
          "012 - Créer une liste de nombres de 5 à 15",
          "012 - Créer une liste de nombres de 5 à 15 - Solution",
          "013 - Créer une liste de nombres pairs de 1 à 100",
          "013 - Créer une liste de nombres pairs de 1 à 100 - Solution",
          "014 - Créer un générateur de lancer de dés",
          "014 - Créer un générateur de lancer de dés - Solution",
          "015 - Compter le nombre d'occurrences d'une lettre dans une phrase",
          "015 - Compter le nombre d'occurrences d'une lettre dans une phrase - Solution",
          "016 - Récupérer un élément dans une liste",
          "016 - Récupérer un élément dans une liste - Solution",
          "017 - Récupérer des éléments dans une liste",
          "017 - Récupérer des éléments dans une liste - Solution",
          "018 - Récupérer un élément sur deux dans une liste",
          "018 - Récupérer un élément sur deux dans une liste - Solution",
          "019 - Ajouter plusieurs éléments à une liste",
          "019 - Ajouter plusieurs éléments à une liste - Solution",
          "020 - Récupérer les éléments communs à deux listes",
          "020 - Récupérer les éléments communs à deux listes - Solution",
          "021 - Trier une liste de tuples",
          "021 - Trier une liste de tuples - Solution",
          "022 - Récupérer une valeur dans un dictionnaire",
          "022 - Récupérer une valeur dans un dictionnaire - Solution",
          "023 - Additionner les valeurs d'un dictionnaire",
          "023 - Additionner les valeurs d'un dictionnaire - Solution",
          "024 - Trouver l'erreur de module",
          "024 - Trouver l'erreur de module - Solution",
          "025 - Trouver l'erreur de syntaxe",
          "025 - Trouver l'erreur de syntaxe - Solution",
          "026 - Importer une variable d'un autre module",
          "026 - Importer une variable d'un autre module - Solution",
          "027 - Afficher le chemin du script Python en cours",
          "027 - Afficher le chemin du script Python en cours - Solution",
          "028 - Récupérer l'extension d'un fichier",
          "028 - Récupérer l'extension d'un fichier - Solution",
          "029 - Accéder à une variable d'environnement",
          "029 - Accéder à une variable d'environnement - Solution",
          "029 - Accéder à une variable d'environnement - Code",
          "030 - Calculer le temps d'exécution d'un script",
          "030 - Calculer le temps d'exécution d'un script - Solution",
          "030 - Calculer le temps d'exécution d'un script - Code",
          "031 - Trouver l'erreur : variable égale à 0",
          "031 - Trouver l'erreur : variable égale à 0 - Solution",
          "032 - Formater une chaîne de caractères",
          "032 - Formater une chaîne de caractères - Solution",
          "033 - Inverser les lettres d'un mot",
          "033 - Inverser les lettres d'un mot - Solution",
          "034 - Mélanger les lettres d'un mot",
          "034 - Mélanger les lettres d'un mot - Solution",
          "035 - Tronquer le nombre de décimales",
          "035 - Tronquer le nombre de décimales - Solution",
          "036 - Tester une condition sur une seule ligne",
          "036 - Tester une condition sur une ligne - Solution",
          "037 - Calculer l'âge d'un chien - Énoncé",
          "037 - Calculer l'âge d'un chien - Solution",
          "037 - Calculer l'âge d'un chien - Code",
          "038 - Trier trois nombres sans condition",
          "038 - Trier trois nombres sans conditions - Solution",
          "039 - Sortir d'une boucle infinie",
          "039 - Sortir d'une boucle infinie - Solution",
          "040 - Trouver l'erreur dans une boucle for",
          "040 - Trouver l'erreur dans une boucle for - Solution",
          "041 - Trouver l'erreur dans la fonction",
          "041 - Trouver l'erreur dans la fonction - Solution",
          "042 - Trouver l'erreur dans la fonction",
          "042 - Trouver l'erreur dans la fonction - 2 - Solution",
          "043 - Afficher la table de multiplication d'un nombre",
          "043 - Afficher la table de multiplication d'un nombre - Solution",
          "044 - Récupérer l'indice de l'itération dans une boucle",
          "044 - Récupérer l'indice de l'itération dans une boucle - Solution",
          "045 - Récupérer seulement les éléments pairs d'une liste",
          "045 - Récupérer seulement les éléments pairs d'une liste - Solution",
          "046 - Récupérer seulement les éléments pairs d'une liste avec une compréhension de liste",
          "046 - Récupérer seulement les éléments pairs d'une liste - 2 - Solution"
        ],
        "Intermédiaire": [
          "Exercices intermédiaires - Introduction",
          "047 - Additionner les chiffres d'un nombre",
          "047 - Additionner les chiffres d'un nombre - Solution",
          "048 - Remplacer un élément dans une liste",
          "048 - Remplacer un élément dans une liste - Solution",
          "049 - Enlever les doublons d'une liste",
          "049 - Enlever les doublons d'une liste - Solution",
          "050 - Printer une phrase tant que l'utilisateur le demande",
          "050 - Printer une phrase tant que l'utilisateur le demande - Solution",
          "050 - Printer une phrase tant que l'utilisateur le demande - Code",
          "051 - Ajouter des éléments à un dictionnaire",
          "051 - Ajouter des éléments à un dictionnaire - Solution",
          "052 - Créer un dictionnaire avec les lettres de l'alphabet",
          "052 - Créer un dictionnaire avec les lettres de l'alphabet - Solution",
          "053 - Recréer la fonction len",
          "053 - Recréer la fonction len - Solution",
          "054 - Créer un motif avec des print",
          "054 - Créer un motif avec des print - Solution",
          "055 - Créer une pyramide de symboles",
          "055 - Créer une pyramide de symboles - Solution",
          "056 - Formater un texte avec la méthode format",
          "056 - Formater un texte avec la fonction format - Solution",
          "057 - Ajouter un séparateur de milliers à un nombre",
          "057 - Ajouter un séparateur de milliers à un nombre - Solution",
          "058 - Calculer l'année de naissance à partir d'un âge donné",
          "058 - Calculer l'année de naissance à partir d'un âge donné - Solution",
          "059 - Calculer la somme des nombres entre deux nombres",
          "059 - Calculer la somme des nombres entre deux nombres - Solution",
          "060 - Trier une liste d'employés - Énoncé",
          "060 - Trier une liste d'employés - Solution",
          "060 - Trier une liste d'employés - Code",
          "060 - Trier une liste d'employés - Solution avancée",
          "061 - Créer une fonction pour remonter dans une structure de dossiers",
          "061 - Créer une fonction pour remonter dans une structure de dossiers - Solution",
          "062 - Transformer un chemin relatif en absolu",
          "062 - Transformer un chemin relatif en absolu - Solution",
          "062 - Transformer un chemin relatif en absolu - Code",
          "063 - Écrire dans un fichier",
          "063 - Écrire dans un fichier - Solution",
          "063 - Écrire dans un fichier - Code",
          "064 - Fixer erreur de variable dans un fichier - Énoncé",
          "064 - Fixer erreur de variable dans un fichier - Solution",
          "064 - Fixer erreur de variable dans un fichier - Code",
          "065 - Trouvez tous les diviseurs d'un nombre",
          "065 - Trouver tous les diviseurs d'un nombre - Solution",
          "066 - Trouver les nombres divisibles par 7 mais qui ne sont pas des multiples de 3",
          "066 - Trouver les nombres divisibles par 7 mais pas multiples de 3 - Solution",
          "067 - Calculer la factorielle d'un nombre",
          "067 - Calculer la factorielle d'un nombre - Solution",
          "068 - Trouver un fichier à l'intérieur d'un dossier - Énoncé",
          "068 - Trouver un fichier à l'intérieur d'un dossier - Solution",
          "068 - Trouver un fichier à l'intérieur d'un dossier - Code",
          "069 - Créer un programme pour surveiller un dossier - Énoncé",
          "069 - Créer un programme pour surveiller un dossier - Solution",
          "069 - Créer un programme pour surveiller un dossier - Code",
          "070 - Vérifier le nombre de fichiers et dossiers dans un dossier - Énoncé",
          "070 - Vérifier le nombre de fichiers et dossiers dans un dossier - Solution",
          "070 - Vérifier le nombre de fichiers et dossiers dans un dossier - Code",
          "071 - Générer un octet aléatoire",
          "071 - Générer un octet aléatoire - Solution",
          "072 - Calculer le nombre de jours entre deux dates",
          "072 - Calculer le nombre de jours entre deux dates - Solution",
          "073 - Créer un générateur de mot de passe",
          "073 - Créer un générateur de mot de passe - Solution",
          "074 - Vérifier un mot de passe - Énoncé",
          "074 - Vérifier un mot de passe - Solution",
          "074 - Vérifier un mot de passe - Code",
          "075 - Compter le nombre d'occurrence d'un mot dans un texte",
          "075 - Compter le nombre d'occurrence d'un mot dans un texte - Solution",
          "076 - Convertir une chaîne de caractère en camelCase",
          "076 - Convertir une chaîne de caractère en camelCase - Solution",
          "077 - Inverser l'ordre des mots dans une phrase",
          "077 - Inverser l'ordre des mots dans une phrase - Solution",
          "078 - Vérifier si une phrase est un palindrome",
          "078 - Vérifier si une phrase est un palindrome - Solution",
          "079 - Vérifier si une phrase est un pangramme",
          "079 - Vérifier si une phrase est un pangramme - Solution",
          "080 - Vérificateur de code Python - Énoncé",
          "080 - Vérificateur de code Python - Solution",
          "080 - Vérificateur de code Python - Code",
          "081 - Compter le nombre de phrases dans un texte",
          "081 - Compter le nombre de phrases dans un texte - Solution",
          "082 - Compter le nombre d'occurrence de chaque lettre de l'alphabet dans un texte",
          "082 - Compter le nombre d'occurrence de chaque lettre de l'alphabet - Solution"
        ],
        "Avancé": [
          "Exercices avancés - Introduction",
          "083 - Recréer la méthode isdigit",
          "083 - Recréer la méthode isdigit - Solution",
          "084 - Recréer la méthode join",
          "084 - Recréer la méthode join - Solution",
          "085 - Créer un dossier pour chaque lettre de l'alphabet - Énoncé",
          "085 - Créer un dossier pour chaque lettre de l'alphabet - Solution",
          "085 - Créer un dossier pour chaque lettre de l'alphabet - Code",
          "086 - Chercher un mot dans des fichiers - Énoncé",
          "086 - Chercher un mot dans des fichiers - Solution",
          "086 - Chercher un mot dans des fichiers - Code",
          "087 - Réimplémenter la méthode __add__",
          "087 - Réimplémenter la méthode __add__ : indice",
          "087 - Réimplémenter la méthode __add__ - Solution",
          "087 - Réimplémenter la méthode __add__ - Code",
          "088 - Faire un script de tri à bulles - Énoncé",
          "088 - Faire un script de tri à bulles - Solution",
          "088 - Faire un script de tri à bulles - Code",
          "089 - Récupérer un élément dans une liste sans causer d'erreur",
          "089 - Récupérer un élément dans une liste sans générer d'erreur - Solution",
          "090 - Recréer la méthode replace - Énoncé",
          "090 - Recréer la méthode replace - Solution",
          "090 - Recréer la méthode replace - Code",
          "091 - Créer une classe personnalisée pour une chaîne de caractère",
          "091 - Créer une classe personnalisée pour une chaîne de caractère - Solution",
          "092 - Créer une fonction pour récupérer la valeur d'un dictionnaire - Énoncé",
          "092 - Créer une fonction pour récupérer la valeur d'un dictionnaire - Solution",
          "092 - Créer une fonction pour récupérer la valeur d'un dictionnaire - Code",
          "093 - Créer une classe personnalisée pour une liste - Énoncé",
          "093 - Créer une classe personnalisée pour une liste - Solution",
          "093 - Créer une classe personnalisée pour une liste - Code",
          "094 - Recréer la méthode split",
          "094 - Recréer la méthode split - Solution",
          "095 - Créer une classe pour gérer des voitures",
          "095 - Créer une classe pour gérer des voitures - Solution",
          "096 - Modifier la représentation d'une classe",
          "096 - Modifier la représentation d'une classe - Solution",
          "097 - Créer des classes de base avec les classmethod",
          "097 - Créer des classes de base avec les classmethod - Solution",
          "098 - Ajouter une propriété à la classe Voiture",
          "098 - Ajouter une propriété à la classe Voiture - Solution",
          "099 - Erreur d'héritage entre deux classes",
          "099 - Erreur d'héritage entre deux classes - Solution",
          "100 - Créer une classe qui hérite d'une autre",
          "100 - Créer une classe qui hérite d'une autre - Solution",
          "101 - Créer une classe pour manipuler des chemins",
          "101 - Créer une classe pour manipuler des chemins - Solution"
        ],
        "À la prochaine": [
          "Le mot de la fin",
          "Bonus : Aller plus loin"
        ]
      },
      "requirements": [
        "Connaître les bases du langage de programmation Python.",
        "Savoir comment exécuter un script Python."
      ],
      "description": "Dans cette formation, vous allez devoir résoudre 101 exercices Python.\nChaque exercice dispose d'une solution sous forme de code, avec une explication détaillée du processus derrière le code et des points importants à retenir.\nORGANISATION DU COURS\nLes exercices sont classés en trois catégories par ordre de difficulté : débutant, intermédiaire et avancé.\nChaque exercice contient un énoncé qui vous permettra de vous lancer dans la résolution du problème.\nCette formation tire avantage de la plateforme Udemy en vous permettant de tester votre code directement sur le site afin de vérifier s'il fonctionne où non. À la manière des sites tels que CodeCademy, CodeWars ou CodeCombat, cette formation vous permettra donc de tester vos connaissances et vos acquis en Python à travers une multitude d'exercices directement dans la formation.\nLES EXERCICES\nLes exercices proposés couvrent un large éventail des fonctionnalités de Python et se trouvent sous différentes formes.\nDes exercices de base pour s'assurer que vous maîtrisez le langage (déclarer des variables, créer des structures conditionnelles, utiliser des boucles).\nDes exercices pour découvrir des fonctionnalités avancés.\nDu code qui contient des bugs que vous devrez trouver et corriger.\nDes exercices dans lesquels vous devrez mettre en place des algorithmes.\nLES PRÉREQUIS\nIl est préférable pour vous d'avoir déjà un minimum de connaissances de base en Python pour pouvoir résoudre les exercices.\nCependant, vous n'êtes pas obligé d'avoir un niveau avancé pour suivre la formation.\nEn effet, en regardant la solution et les explications vous pourrez aussi bien apprendre de nouvelles techniques que si vous suiviez un cours théorique.\nAprès tout, on n'apprends jamais mieux qu'avec un exemple, qui sont en nombre dans cette formation.\nPOURQUOI UN COURS UNIQUEMENT COMPOSÉ D'EXERCICES ?\nPour expliquer l'intérêt d'un cours uniquement pratique, je vais utiliser une analogie avec le passage du permis de conduire :\nDans les premiers cours de conduite, vous êtes guidés par l'instructeur et vous vous concentrez sur le maniement de la voiture et les différentes commandes à votre disposition. C'est l'équivalent d'un cours théorique sur les bases de Python.\nPuis vient un moment où l'instructeur vous 'lâche dans la nature' et vous devenez alors responsable de prendre toutes les décisions. C'est souvent un choc car jusqu'à présent vous étiez habitué à vous faire guider et vous n'aviez pas à réfléchir par vous-même.\nC'est ce que ce cours cherche à vous faire apprendre. Vous avez les commandes du véhicules et c'est à vous de passer à l'action afin d'avancer vers la prochaine étape.\nSi vous avez l'impression de bien connaître Python mais ne vous sentez pas encore prêt à en faire votre métier ce cours vous aidera à mettre la main à la pâte et vous pourrez ainsi mieux mesurer votre niveau d'autonomie par rapport au langage.",
      "target_audience": [
        "Les développeurs Python débutants qui veulent tester et approfondir leurs connaissances.",
        "Les développeurs qui ont suivi beaucoup de cours théoriques et qui veulent s'assurer de la solidité de leur acquis.",
        "Les développeurs Python intermédiaires qui souhaitent s'entraîner et découvrir de nouveaux modules et façons de résoudre un problème."
      ]
    },
    {
      "title": "Linguagem de programação C# - Básico",
      "url": "https://www.udemy.com/course/linguagem-de-programacao-c-basico/",
      "bio": "Inicie seu aprendizado de C# da maneira certa",
      "objectives": [
        "Criar programas simples utilizando o C#",
        "Entender os fundamentos da linguagem C#",
        "Trabalhar com os tipos primitivos",
        "Controlar os fluxos dos programas com Estruturas Condicionais e de Repetição",
        "Trabalhar com texto",
        "Usar Arrays e Listas",
        "Trabalhar com tipos não primitivos (Class)"
      ],
      "course_content": {
        "Introdução ao Curso": [
          "Bem vindo ao Curso!",
          "Dúvidas? Então pergunte",
          "A Plataforma .NET",
          "Instalação do Visual Studio.",
          "(NOVO) Teste de Fixação - Seção 01 - Plataforma .NET"
        ],
        "Estudo sobre variáveis": [
          "Introdução a seção 2.",
          "O que é uma variável?",
          "Tipos primitivos - Byte e SByte.",
          "Tipos primitivos - Short, Int e Long.",
          "Tipos primitivos - UShort, UInt e ULong.",
          "Tipos primitivos - Float,Double e Decimal.",
          "Tipos primitivos - Char e String.",
          "Tipos primitivos - Boolean e Object.",
          "Tipos primitivos - Constante.",
          "Tipos primitivos - Numéricos - Conceito.",
          "Conversão - Texto para números.",
          "Conversão - Entre tipos numéricos.",
          "Introdução ao Array.",
          "[ARTIGO] Entrada de dados e saída de dados",
          "Entrada e Saída de dados - Classe - Console",
          "Exercício de Fixação - Entrada e Saída de Dados"
        ],
        "POO - Básico.": [
          "Introdução a seção 3.",
          "Conceito de POO.",
          "Criação de Classe.",
          "Criando Propriedades.",
          "Criando Métodos.",
          "Criando um objeto - Parte 1.",
          "Criando um objeto - Parte 2.",
          "Namespace e Using.",
          "Estático."
        ],
        "Gerenciamento de Fluxo.": [
          "Introdução a seção 4.",
          "Estrutura Condicional - IF.",
          "Estrutura Condicional - Else.",
          "Estrutura Condicional - ELSE IF.",
          "Estrutura Condicional - Switch.",
          "Estrutura de Repetição - While.",
          "Estrutura de Repetição - Do While.",
          "Estrutura de Repetição - For.",
          "Estrutura de Repetição - Foreach.",
          "Comandos Break e Continue.",
          "Escopo da variável.",
          "Exercício de Fixação - POO e Estrutura de Repetição",
          "Correção - Matemática - Exponênciação"
        ],
        "Arrays, Listas e Dicionários.": [
          "Introdução a seção 5.",
          "Array.",
          "Múltiplos Arrays.",
          "Lista.",
          "Dicionário."
        ],
        "Exceções e Tratamentos.": [
          "Introdução a seção 6.",
          "Modo Debug e Release.",
          "Exception e como tratá-las."
        ],
        "POO - Herança e Polimorfismo.": [
          "Introdução a seção 7.",
          "Conceito - Herança.",
          "Pratica - Herança.",
          "Sobrescrita - Parte 1",
          "Sobrescrita - Parte 2",
          "Sobrecarga de Método.",
          "Polimorfismo.",
          "Construtor."
        ],
        "Comentários": [
          "Introdução a seção 8.",
          "Comentário de linha simples",
          "Comentário de múltiplas linhas",
          "Comentário de Documentação",
          "Comentário para Tarefas"
        ],
        "Operadores": [
          "Introdução a seção 9.",
          "Operadores aritméticos",
          "Operadores de atribuição",
          "Operadores relacionais",
          "Operadores lógicos"
        ],
        "Dicas - Trabalhando com Texto": [
          "Introdução a seção 10.",
          "Localizando um determinado Texto",
          "Substituir o texto",
          "Verificar existencia de um texto na String",
          "Formatando sua string",
          "Mudando o texto para Maiúscula ou Minúscula",
          "Remover espaço em branco do texto",
          "Como separar o texto",
          "Obter um subtexto"
        ]
      },
      "requirements": [
        "Lógica de programação",
        "Visual Studio 2015 - Grátis"
      ],
      "description": "Aprenda a programar em uma das linguagens mais usadas no mundo, o C#.\nC# é uma linguagem de programação multiplataforma que pode ser utilizada para construir uma variedade muito grande de programas. Com C#, você pode construir aplicativos móveis (para Windows, Android e iOS), jogos, sites e sistemas web e programas de computador.\nDepois de dominar os fundamentos da linguagem C# e a plataforma .NET Framework, você terá muitas opções pela frente. Você pode escolher construir aplicativos se preferi, ou trabalhar na construção de sites. Contanto que você conheça os fundamentos da linguagem C#, trocar de área fica muito fácil.",
      "target_audience": [
        "Estudantes de programação",
        "Desenvolvedores, Programadores que desejem aprender C#"
      ]
    },
    {
      "title": "はじめての Kotlin【Java 知らなくてOK！丁寧な解説で Android に必要な Kotlin の基本を学習】",
      "url": "https://www.udemy.com/course/kotlin-beginner/",
      "bio": "今学ぶべき言語、Kotlin！元塾講師プログラマーが教える、Kotlin 基礎講座！Java 知らなくても大丈夫！Android だけじゃない、将来性バツグンの言語 Kotlin を「丁寧な」解説で「わかりやすく」「効率的に」学びましょう。",
      "objectives": [
        "Kotlin の基本的な文法や特徴について学びます。",
        "Android 開発に取り組むために必要なKotlin の基本の知識が身に付きます。",
        "Java の前提知識不要でKotlin の学習ができます。",
        "ラムダ式やオブジェクト宣言など、Kotlin が持つ簡潔な表現方法を学ぶことができます。"
      ],
      "course_content": {
        "はじめに": [
          "講座の概要",
          "Kotlinの主な特徴",
          "演習サイトと実行環境",
          "Kotlin Playgroundが文字化けする場合",
          "コースの活用方法",
          "資料のダウンロード",
          "質問をする前に必ず読んでください"
        ],
        "基本的な構文": [
          "変数の宣言",
          "リテラル表現（数値）",
          "リテラル表現（文字列）",
          "リテラル表現（まとめ）",
          "nullとnull許容型",
          "型変換",
          "配列とコレクション",
          "定数"
        ],
        "演算子・制御構文": [
          "演算子",
          "if式",
          "when式",
          "forループ",
          "レクチャー17「forループについて」",
          "while/do-whileループ",
          "演算子・制御構文のまとめ"
        ],
        "関数とラムダ式": [
          "関数の基本",
          "引数の表現方法",
          "可変長引数",
          "複数の戻り値を持つ関数",
          "高階関数とラムダ式",
          "ラムダ式とラベル構文",
          "関数のまとめ"
        ],
        "オブジェクト指向構文": [
          "クラスの基本",
          "プロパティ",
          "プライマリコンストラクタ",
          "セカンダリコンストラクタ",
          "オブジェクト指向構文のまとめ"
        ],
        "継承とインターフェース": [
          "継承と抽象クラス",
          "インターフェース",
          "クラスの型変換",
          "継承とインターフェースのまとめ"
        ],
        "特殊なクラス・オブジェクト": [
          "データクラス",
          "オブジェクト式",
          "オブジェクト宣言",
          "コンパニオンオブジェクト",
          "変数初期化のタイミングとコンパイル時定数",
          "ジェネリック型",
          "ジェネリック関数",
          "ネストクラス"
        ],
        "その他Kotlinの便利機能": [
          "拡張関数",
          "演算子のオーバーロード"
        ],
        "ボーナス": [
          "さらなる上達のための学習コンテンツ"
        ]
      },
      "requirements": [
        "講座「Python から飛び込むプログラミングの世界【丁寧な解説+小さなシステム開発ゼミで、知識「ゼロ」から「使える」知識に】」レベルのプログラミングの知識",
        "講座「Python でわかる オブジェクト指向 とはなにか？【Python オブジェクト指向 の「なぜ？」を「徹底的に」解説】」レベルのオブジェクト指向の知識"
      ],
      "description": "この講座は、プログラミング初学者のためのKotlin基礎講座です。\nKotlinは2011年7月に初期バージョンがリリースされたとても新しい言語で、文法も今までのプログラミング言語のノウハウが盛り込まれた、とてもモダンなものになっています。\nまた、KotlinはJavaと100%の互換性を持っています。\nこれにより、今まで長年積み上げられてきたJavaの資産が使える上、Javaよりも書きやすい・安全という理由から、Java採用企業やAndroid開発者が続々とJavaからKotlinへ乗り換えています。\nそしてついに2017年5月には、GoogleがKotlinをAndroid開発の推奨言語に指定しました。\nそういった背景から、今大注目・将来性バツグンのプログラミング言語、それがKotlinです。\n\n\n\n\n講座の特徴：Javaの知識不要・Kotlinの文法と特徴にフォーカス\nこの講座ではKotlinの基礎的な文法を丁寧に解説していきます。\nKotlinに触れたことがないプログラミング初学者が、\n講座受講後に、Android開発に取り組み始めるのに必要なレベルの文法知識を一通り理解した状態を目指します。\n\n\n他のKotlinの学習教材のほとんどはJavaの知識を前提としていますが、この講座ではJavaの前提知識一切不要です。\nKotlinを理解するのに必要なJavaの知識はその都度補って説明していきます。\nまた、Kotlinの文法や特徴の学習にフォーカスするために、プログラミングの基本的な内容については扱いません。\nプログラミング・オブジェクト指向の基本については別講座にて学習の上、本講座を受講するようにしてください。\n\n\n※Pythonでプログラミング・オブジェクト指向の基本の講座を用意しております（以下参照）。PythonもKotlinと並んで将来性の高い言語なのでこの機会にぜひ体験してみてください！\n・Python から飛び込むプログラミングの世界【丁寧な解説+小さなシステム開発ゼミで、知識「ゼロ」から「使える」知識に】\n・Python でわかる オブジェクト指向 とはなにか？【Python オブジェクト指向 の「なぜ？」を「徹底的に」解説】\n\n\n扱う内容・扱わない内容\nこの講座は、Kotlin未経験者がKotlinの基本的な文法をしっかりと理解するための講座です。\nAndroidに関する内容や、Kotlinの上級者がさらにレベルアップするための情報は扱っていません。\nですので、おすすめできる方とおすすめできない方はそれぞれ以下のような方かと思います。\n・おすすめできる方\nプログラミングの基本は学んだがKotlinは初めてという方。\nJavaの知識がない方。\nKotlin公式ドキュメントでは説明不足に感じる方。\n基本的な文法は学んだので、Kotlinの基礎文法や特徴の理解にフォーカスしたい方。\n将来性バツグンのプログラミング言語を学びたい方。\n・おすすめできない方\nKotlin公式ドキュメントを読むだけで理解できる方。\nAndroid開発やAndroid Studioについての知識を得たい方。\nKotlinに限らないプログラミング・オブジェクト指向の基本的な内容を学びたい方。\nKotlinプログラマーがさらにレベルアップする方法を知りたい方。",
      "target_audience": [
        "Kotlin の基本文法や特徴について学習したい方。",
        "Kotlin 公式ドキュメントが説明不足に感じる方。",
        "Android 開発に取り組みたい方。",
        "Java の知識がないけれども Kotlin を学びたい方。",
        "他言語でプログラミングの基本を学んだ経験がある方。"
      ]
    },
    {
      "title": "【한글자막】 JavaScript 알고리즘 & 자료구조 마스터클래스",
      "url": "https://www.udemy.com/course/best-javascript-data-structures/",
      "bio": "정렬, 리스트, 힙 스택을 포함한 12개의 알고리즘과 10개 이상 자료구조 학습으로 기술 면접 완벽하게 대비!",
      "objectives": [
        "Big O 표기법을 기반으로한 알고리즘 성능 평가법",
        "재귀(Recursion)",
        "정렬알고리즘(버블, 선택, 삽입, 병합, 퀵, 지수, 검색 등)",
        "자료구조(리스트, 스택, 힙, 트리, 그래프, dijkstra 등)",
        "무에서부터 10개 이상의 자료구조를 직접 구현",
        "까다로운 기술 면접을 통과하는데 필요한 모든 것"
      ],
      "course_content": {
        "소개": [
          "커리큘럼 소개",
          "커뮤니티에 조인하세요!",
          "어떤 순서로 수강해야 할까요?",
          "코드를 어떻게 실행하나요?"
        ],
        "빅오 표기법 (Big O Notation)": [
          "빅오 (Big O) 소개",
          "코드 시간 재기",
          "연산 갯수 세기",
          "시간 복잡도 시각화하기",
          "빅오에 대한 공식 소개",
          "빅오 표현식의 단순화하기",
          "빅오 (BIG O) 시간 복잡도 퀴즈",
          "빅오 시간 복잡도 퀴즈 2",
          "공간 복잡도",
          "빅오 공간 복잡도 퀴즈",
          "로그와 섹션 요약"
        ],
        "배열과 오브젝트의 성능 평가": [
          "선수 학습",
          "섹션 소개",
          "객체의 빅오 (Big O)",
          "오브젝트 연산 퀴즈",
          "배열 안의 데이터에 접근이 느린 이유",
          "빅오 배열 메소드",
          "배열 연산 퀴즈"
        ],
        "문제 해결 접근법": [
          "선수 학습",
          "문제 해결법 소개",
          "1단계 : 문제의 이해",
          "2단계 구체적 예제들",
          "3 단계 : 세부 분석",
          "4단계 : 해결 또는 단순화",
          "5단계 : 되돌아 보기와 리팩터(Refactor)",
          "복습과 인터뷰 전략"
        ],
        "문제 해결 패턴": [
          "선수 학습",
          "문제 해결 패턴 소개",
          "빈도수 세기 패턴",
          "빈도수 세기 : 애너그램 도전 과제",
          "빈도수 세기- validAnagram",
          "애너그램 도전 과제 솔루션",
          "다중 포인터 패턴",
          "다중 포인터 : 고유값을 세는 도전 과제",
          "다중 포인터 - countUniqueValues",
          "고유값 세기 솔루션",
          "기준점 간 이동 배열 패턴",
          "분할과 정복 패턴"
        ],
        "100% 선택적 도전 과제": [
          "중요한 정보!",
          "빈도수 세기 - sameFrequency",
          "빈도수 세기 / 다중 포인터 - areThereDuplicates",
          "솔루션 1부",
          "다중 포인터 - averagePair",
          "다중 포인터 - isSubsequence",
          "솔루션 2부",
          "Sliding Window - maxSubarraySum",
          "Sliding Window - minSubArrayLen",
          "Sliding Window - findLongestSubstring",
          "솔루션 3부"
        ],
        "재귀 (Recursion)": [
          "선수 학습",
          "스토리 타임 : 마틴과 드래곤",
          "재귀 함수를 사용하는 이유",
          "스택 호출하기",
          "첫번째 재귀 함수",
          "재귀 퀴즈",
          "두번째 재귀 함수",
          "반복문으로 팩토리얼 구현하기",
          "재귀 호출로 팩토리얼 구현하기",
          "통상적인 재귀의 잠재적 위험",
          "Helper 메소드 재귀",
          "순수 재귀"
        ],
        "재귀 문제 집합": [
          "여기서 시작하세요!",
          "power",
          "factorial",
          "productOfArray",
          "recursiveRange",
          "fib",
          "이 섹션에 대한 솔루션"
        ],
        "보너스 도전 재귀 문제": [
          "섹션 노트",
          "reverse",
          "isPalindrome",
          "someRecursive",
          "flatten",
          "솔루션 1부",
          "capitalizeFirst",
          "nestedEvenSum",
          "capitalizeWords",
          "stringifyNumbers",
          "collectStrings",
          "솔루션 2부"
        ],
        "검색 알고리즘": [
          "선수 학습",
          "검색 소개",
          "선형 검색 소개",
          "Linear Search 연습",
          "선형 검색 솔루션",
          "선형 검색 빅오 (Big O)",
          "이진 검색 소개",
          "이진 검색 의사코드",
          "Binary Search 연습",
          "이진 검색 솔루션",
          "이진 검색 빅오 (Big O)",
          "나이브 문자열 검색",
          "나이브 문자열 검색 구현"
        ]
      },
      "requirements": [
        "기본적인 자바스크립트 문법 지식"
      ],
      "description": "국내에서 찾아보기 힘들었던 JavaScript 기반 알고리즘 & 자료구조 강의!\n컴퓨터 과학에서 가장 핵심적인 12개의 알고리즘, 10개의 자료구조를 직접 내 손으로 구현하며 학습!\n85개의 문제를 직접 풀어보며 코딩 테스트, 기술 면접 완벽 준비\n\n\n———\n\n\n[전세계 상위 1% 개발자들이 인정한 알고리즘 & 자료구조 강의]\n이 강의는 강사님이 해외 유명 코딩 부트캠프에서 가르쳤던 내용을 중심으로 구성되었습니다. 실제 이 강의를 들은 학생들 중 다수가 우리가 알만한 IT 기업(구글, 아마존, 페이스북 등 )의 기술 면접을 통과하였고 6개 중요 개발자 직업에 취업하였습니다.\n\n\n\n\n[<JavaScript 알고리즘 & 자료구조 마스터클래스> 만의 특별한 학습 방법]\n이 강의는 온라인 수강에도 높은 학습 효과를 낼 수 있도록 특별한 학습 방법을 마련했습니다.\n\n\n쌍방향 강의 – 해결책을 제공하기 전에 먼저, 스스로 문제를 풀어볼 기회를 제공합니다.\n모든 문제는 완벽한 솔루션을 설명한 파일과 동영상을 포함하고 있습니다\n도움이 될만한 비법과 요령도 포함되지만, 어떤 문제에도 접근 가능한 방법을 개발하는데 집중합니다.\n이 강의는 이해를 돕기 위한 애니메이션과 멋진 다이어그램이 포함되어 있습니다!\n\n\nJavaScript 알고리즘 & 자료구조 학습,\n더이상 미루지 말고 이 강의로 시작하세요!\n\n\n\n\n[전 세계 100만 수강 강사, Colt의 한마디]\n이 코스는 몇 개월의 컴퓨터 과학과 인터뷰 준비 자료를 바탕으로 제작되었습니다.\n\n\n먼저, 이 강의는 빅오 표기법을 사용해 코드의 시간과 공간 복잡도를 분석하는 방법으로 시작합니다.\n그 다음, 재귀의 입력과 출력을 살펴보고, 어려운 코딩 문제를 풀기 위한 5단계 접근법을 배울 것입니다.\n또한, 일반적인 프로그래밍 패턴을 배우고 인기있는 검색 알고리즘을 구현해 볼 것입니다.\n6개의 다른 정렬 알고리즘인 버블, 선택, 삽입, 퀵, 합병, 기수 정렬을 작성해 보고 백지 상태에서부터 연결 목록, 트리, 힙, 해시 테이블, 그래프 등을 포함하는 우리만의 자료 구조를 구현할 것입니다.\n트리와 그래프 순회를 배우고 다익스트라의 최단 경로 알고리즘을 살펴볼 것입니다.\n이 코스는 또한 동적 프로그래밍에 대해서도 다루고 있습니다.\n\n\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n개발자 스킬을 레벨업시키고 싶나요? 바로 오늘 등록하세요!\n강의에서 만나요,\n- Colt",
      "target_audience": [
        "개발자 기술 면접을 준비하고 있는 사람",
        "실무 문제 해결 능력을 향상시키고 싶은 사람",
        "더 나은 개발자가 되고 싶은 누구나"
      ]
    },
    {
      "title": "Entity Framework Core el Curso Completo",
      "url": "https://www.udemy.com/course/curso-entity-framework-core/",
      "bio": "Domina Entity Framework Core en .NET, Code First, Database First, Relaciones, API Fluente, Vistas y Procedimientos SQL",
      "objectives": [
        "Qué es un ORM y que es Entity Framework Core (EF CORE)",
        "Como trabajar con Entity Framework Core",
        "Creación de modelos con Entity Framework Core",
        "Metodología de trabajo Code First",
        "Metodología de trabajo Database First",
        "Trabajo con Migraciones",
        "Ingeniería inversa Database First",
        ".NET 6 (.Net Core)",
        "Data Annotation (Anotaciones de datos)",
        "Validaciones, llave primaria, campo requerido, longitud de caracteres, rango, expresiones regulares, fecha, email. tipo de dato",
        "Relacionando tablas en Entity Framework Core, Llave foránea, relación Uno a Uno, relación Uno a Mucho y relación Muchos a Muchos",
        "Trabajar con Datos: Leer, Crear, Actualizar, Borrar, Operaciones Masivas(Bulk Operations), paginar, ordenar, agrupar, consultar tablas relacionadas",
        "Trabajo con Controladores y Vistas Razor",
        "Explicit Loading",
        "Eager Loading",
        "La API FLUENTE (Fluent Api): relaciones, campo requerido, llave foránea, llave compuesta, no mapeado",
        "Ejecución diferida (Deferred Execution)",
        "IEnumerable",
        "IQueryable",
        "Attach",
        "Trabajo con Entity Framework Core y SQL: Vistas y Procedimientos Almacenados",
        "Entity Framework Core y Mysql"
      ],
      "course_content": {
        "Introducción": [
          "Qué es un ORM",
          "Qué es Entity Framework Core",
          "Instalación de herramientas para el curso",
          "Qué es Code First",
          "Qué es Database First",
          "Code First o Database First?",
          "Creación del proyecto",
          "Revisión de archivos y carpetas",
          "Instalación de extensiones necesarias",
          "Cadena de conexión",
          "Archivo de contexto"
        ],
        "Trabajo con la Metodología Code First": [
          "Qué son los modelos y migraciones",
          "Primer modelo para categoría",
          "Práctica Creación de Modelo",
          "Primera migración",
          "Revisión de la migración",
          "Ejecutar migración en la base de datos",
          "Cuando crear y/o modificar migraciones",
          "Crear modelo y migración usuario"
        ],
        "Trabajo con la Metodología Database First": [
          "Introducción",
          "Importar y revisar la base de datos",
          "Ingeniería inversa",
          "Convertir a code first",
          "Modificar modelo",
          "Archivos fuente de esta sección y Code First"
        ],
        "Data Annotations": [
          "Introducción",
          "Nombre de tabla y columna",
          "Llave primaria",
          "Longitud máxima",
          "No mapeado",
          "Nombre a mostrar",
          "Rango",
          "Requerido",
          "Expresiones regulares",
          "Fecha",
          "Email",
          "Longitud de caracteres y mensaje",
          "Convertir string a nulo",
          "Tipo de dato",
          "Opciones generadas en la base de datos"
        ],
        "Relacionando Tablas": [
          "Introducción",
          "Agregar llave foránea",
          "Relación uno a uno",
          "Relación uno a muchos",
          "Relación muchos a muchos"
        ],
        "Trabajo con Datos - Realizando Operaciones CRUD": [
          "Introducción",
          "Leyendo registros",
          "Insertando registros",
          "Insertando registros en masa",
          "Insertando registros en masa desde formulario",
          "Leer y actualizar un registro",
          "Borrar registro",
          "Borrar registros en masa",
          "Filtrar registros",
          "Ordenando registros",
          "Seleccionando columnas",
          "Agrupando registros",
          "Paginando registros",
          "Consultas sql convensionales",
          "Interpolación de string",
          "Siembra de datos",
          "Tarea Operaciones CRUD Articulo",
          "Leer articulos",
          "Vista crear artículo (Datos relacionados)",
          "Insertar artículo",
          "Editar artículo (Datos relacionados)",
          "Borrar artículos (Datos relacionados)",
          "Carga Explícita (Explicit loading)",
          "Carga Diligente (Eager Loading)",
          "Tarea Operaciones CRUD Usuario y Detalle de usuario",
          "Leer Usuarios",
          "Vista e insertar usuarios",
          "Vista y editar usuario",
          "Borrar usuario",
          "Detalle de usuario relación uno a uno",
          "Tarea Operaciones CRUD Etiqueta",
          "Leer etiquetas",
          "Insertar etiqueta",
          "Editar etiqueta",
          "Borrar etiqueta"
        ],
        "Implementar Relación Muchos a Muchos": [
          "Ajustes iniciales DbSet y Boton Administrar Etiquetas",
          "Crear ViewModel",
          "Método y vista para Administrar Etiquetas",
          "Método para asignar etiquetas a artículo",
          "Método para eliminar etiquetas",
          "Descarga los archivos fuente de esta sección"
        ],
        "La API Fluente (Fluent API)": [
          "Qué es la API Fluente",
          "Backup de la aplicación y reorganización de modelos",
          "Llave primaria y restricciones usando la API Fluente",
          "Relación uno a uno",
          "Relación uno a muchos",
          "Relación muchos a muchos",
          "Probando operaciones CRUD",
          "Descarga los archivos fuente de esta sección"
        ],
        "Más Funciones de Entity Framework Core": [
          "Ejecución diferida - Deferred Execution",
          "IEnumerable",
          "IQueryable",
          "Update",
          "Attach",
          "Descarga los archivos fuente de esta sección"
        ],
        "Vistas SQL y Procedimientos Almacenados": [
          "Introducción",
          "Creando una vista SQL",
          "Mapear la vista en un modelo",
          "Agregar al contexto y anular llave primaria",
          "Método en controlador y vista",
          "Probar vista sql en EF Core",
          "Crear procedimiento almacenado",
          "Consultas con FromSqlRaw y FromSqlInterpolated",
          "Llamar procedimiento almacenado",
          "Descarga los archivos fuente de esta sección"
        ]
      },
      "requirements": [
        "Conocimientos básicos en C#",
        "Manejo básico de Visual Studio 2019",
        "Conocimientos básicos en Sql Server y Management Studio"
      ],
      "description": "En este curso aprenderás a trabajar con Entity Framework Core en su última versión de NET 6. Te enseñaré la instalación de herramientas necesarias para el desarrollo del curso, revisión de la estructura de carpetas y archivos en un proyecto de .NET 6 (Recuerda que NET Core es ahora NET 6)\nEl curso va desde las fundamentos explicandote que es un ORM(Object Relational Management), Entity Framework Core también es un ORM así que veremos como instalarlo y usarlo, cuales son sus ventajas.\nCode First: Aprenderás la metodología de trabaja de código primero: conexión a base de datos, creación de modelos, migraciones, replicación en base de datos, archivo de contexto y DbContext.\nDatabase First: Que pasa si quieres trabajar .NET 6 y Entity Framework y con una base de datos ya existente, en esta sección te voy a enseñar como trabajar con Database First para estos escenarios, como es el proceso de Ingeniería Inversa con el que vas a ver como pasar esa base de datos a modelos, migraciones, contextos de manera ordenada y con un solo comando en la consola y de ahí en adelante te enseñaré la configuración para sigas trabajando con la metodología Code First\nQué son las Anotaciones de Datos: [Data Annotations]\nCon las Data Annotation, podremos dotar a nuestros modelos y propiedades (campos) de más personlización como indicar que sean campos obligatorios, con una longitud de caracteres, de tipo email, fecha, entre muchas otras validaciones.\n\n\nRelaciones entre Tablas\nLas RELACIONES ENTRE TABLAS son una parte fundamental de todo el desarrollo de una aplicación con base de datos, aquí te enseñaré como podemos configurar todos los tipos de relación conocidos directamente desde los modelos:\nAgregar llave foránea\nRelación UNO a UNO (One to one relation)\nRelación UNO a MUCHOS (One to Many relation)\nRelación MUCHOS a MUCHOS (Many to many relation)\nTrabajando con Datos\nUna vez terminada la parte de configuración de modelos, migraciones y relaciones es hora de usar el poder de .NET 6 MVC, crear controladores y vistas para trabajar con datos y poner a prueba lo hecho hasta este momento usando EF CORE:\n\n\nLeer registros\nInsertar registros\nInsertar registros en masa (Bulk Insert)\nActualizar registros\nBorrar registros\nBorrar registros en masa (Bulk Delete)\nPaginación de registros\nFiltrado\nSelección de columnas\nOrdenando registros\nAgrupación\nInterpolación de string\nSiembra de datos (Data seeding)\nConsultas SQL convencionales\nCreación de Controladores y vistas Razor con Bootstrap\nCarga Explícita (Explicit loading)\nCarga Diligente (Eager Loading)\nObtener e insertar datos de tablas relacionadas\nRelaciones Uno a Muchos en una sección a parte con el controlador y las vistas para que se pueda ver de manera implementada\nCreación de ViewModels\nLa Api Fluente(Fluent API)\nUna sección muy importante donde te enseñaré a trabajar con la API Fluente una herramienta muy poderosa donde podremos realizar todas las configuraciones del modelo que vimos con las Data Annotation pero muchas mas, con más opciones y control, escribiendo código muy simple. Con la API FLUENTE podremos hacer mucho más pero la recomendación es usar la combinación de ambos métodos: Data Annotation y Api Fluente.\n\n\nOtras Funcionalidades de Entity Framework Core\nEjecución diferida (Deferred Execution)\nIEnumerable\nIQueryable\nUpdate\nAttach\nVistas SQL y Procedimientos Almacenados\nEn EF CORE es posible también trabajar con las clásicas vistas y procedimientos almacenados así como consultas SQL convencionales, en esta sección te enseñaré:\nCreación y mapeo de vistas SQL\nCreación y configuración de controladores y vistas para la vista SQL.\nCreación y uso de un procedimiento almacenado SQL\nFromSqlRaw\nFromSqlInterpolated\nContenido Extra\nTe dejo un capítulo adicional de regalo donde te explico como realizar un CRUD con .NET 6, EF Core y MYSQL para que veamos que podemos usar prácticamente todos los proveedores de bases de datos más reconocidos y te dejo también el proyecto con el código fuente para que los puedas descargar y usar en tus proyectos\nEs el curso más completo de Entity Framework Core. He dado mi mejor esfuerzo para traerte un curso completo, desde cero y bien explicado con una aprendizaje lógico y secuencial.\n¡QUÉ ESPERAS, INSCRÍBETE EN EL CURSO!",
      "target_audience": [
        "Desarrolladores web que quieran aprender .NET 6 (.Net Core) y Entity Framework Core",
        "Programadores que quieran aprender Entity Framework Core",
        "Interesados en desarrollo web, backend con .NET y Entity Framework Core",
        "Programadores y desarrolladores en dominar el ORM Entity Framework Core",
        "Desarrolladores principiantes que quieran aprender a crea apliaciones con .NET 6 MVC",
        "Desarrollador principiante o avanzado de .NET que quiera actualizarse y estar al día con Entity Framework Core."
      ]
    },
    {
      "title": "Python for Beginners - Learn Python Programming in Hindi",
      "url": "https://www.udemy.com/course/python-for-beginners-in-hindi/",
      "bio": "Head into the world of Python Programming, easy and detailed. Build your own applications, right from the basics!",
      "objectives": [
        "Introduce Python with yourself!",
        "Learn the magic of programming efficiently",
        "In depth discussion about every topic of programming in Python, in your native language, HINDI!",
        "Hands on coding on an IDE live with explanations",
        "Learn from the basics, build complete understanding and practical knowledge",
        "Be able to write your own Python programs efficiently, including games!",
        "Live Projects to clear each and every concept learnt so far",
        "Learn some intermediate topics like regular expressions, socket programming, command line arguments, and many more",
        "Be thorough with modern real world object oriented programming",
        "Be able to create your own modules and packages in python"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Python",
          "Module 1 Quiz"
        ],
        "Installation and Setup": [
          "Installing Python and PyCharm Setup",
          "First Program in Python",
          "Module 2 Quiz"
        ],
        "Introduction to Data Types": [
          "Data Types in Python",
          "Module 3 Quiz"
        ],
        "Variables, Integers and Floating Point Numbers": [
          "Variable Assignments - Integer Data Type",
          "Floating Point Numbers",
          "Module 4 Quiz"
        ],
        "Introduction to Strings": [
          "String data type",
          "String Indexing",
          "String Slicing",
          "String methods",
          "Module 5 Quiz"
        ],
        "Print formatting and Precision": [
          "Print formatting and Precision",
          "Module 6 Quiz"
        ],
        "Introduction to Lists": [
          "Lists in Python",
          "List methods",
          "Module 7 Quiz"
        ],
        "Introduction to Tuples": [
          "Tuples in Python",
          "Module 8 Quiz"
        ],
        "Introduction to Dictionaries": [
          "Dictionaries in Python",
          "Module 9 Quiz"
        ],
        "Introduction to Sets": [
          "Sets in Python",
          "Module 10 Quiz"
        ]
      },
      "requirements": [
        "No strict requirements just some basics of Computer Systems and some programming background knowledge. Basics of C would be helpful.",
        "A decent computer which can run Python IDE (PyCharm). 4GB RAM is sufficient."
      ],
      "description": "Learn Python which is the most demanded programming languages of 2019!\nBecome a Python Programmer in the easiest way possible. The content is purely in Hindi, for those who find English challenging and can learn in a native environment in their own language! The concepts are very clearly and concisely explained with hands on parallel examples on screen.\nThis course has over 50 lectures and approximately 9 hours of video content. Here is a brief listing of what all you will acquire from the course content:\nStart from the very basics (Introduction, history and present of Python)\nLearn Python in a practical manner. This whole course is a screencast of parallel coding with detailed explanations of everything being done.\nLearn how to use Integrated Development Environment (IDE) for programming, specifically PyCharm.\nInstallation and setup walkthrough guide in Windows to become familiar with Python first.\nSource codes will be provided at the end of every lecture for every module. Additional resources including websites to learn more about the topics of a section will be provided at the end of every module/section.\nLearn to code with three Live Projects including one game, one script, and one intermediate level project of networking in Python. Get the gist of the whole in the Projects and be able to develop your own!\nAdditional Resources at the end of the course including links to books for Python, topics, practice projects, beginner, intermediate and advanced level\nThe following major topics have been covered in the course:\nIntroduction\nInstallation and Setup Python and PyCharm\nData Types\nNumbers, Integers, Floating Point Numbers\nStrings\nLists\nTuples\nDictionaries\nSets\nPrint Formatting\nBooleans and None type\nComparison and Logical Operators\nConditional Statement (if, elif, else)\nLoops (for and while)\nSome useful functions and operators (range(), zip(), enumerate(), etc.)\nrandom Module\nList Comprehensions\nFunctions\nlambda expressions\nObject Oriented Programming\nClasses and Objects\nInheritance, Polymorphism, Privacy\nFile Handling\nException Handling\nModules and Packages\npip and PyPi\nRegular Expressions\nProjects\nThere is much more than this in the course! You will get lifetime access to over 50 lectures along with source codes and additional resources!\nNot satisfied with the course? Don't worry, your money is safe. There is a 30 day money back guarantee! You can get a refund.",
      "target_audience": [
        "IT Students new to programming",
        "People having C/C++/JAVA knowledge looking to learn Python",
        "Beginner Python programmers who want to level up their skills!",
        "Those who want to learn in Hindi!"
      ]
    },
    {
      "title": "Java y BlueJ | Introducción a las Bases de la Programación",
      "url": "https://www.udemy.com/course/programacion/",
      "bio": "Curso Básico introductorio del lenguaje Java para personas que no saben programar aún.",
      "objectives": [
        "En este curso aprenderás las bases de la programación con el lenguaje Java y el IDE BlueJ"
      ],
      "course_content": {},
      "requirements": [
        "Solo requieres de una PC con Windows o una Mac con macOS"
      ],
      "description": "Si eres un experto en Java NO te recomiendo que te suscribas.\nEste curso esta especialmente diseñado para personas que nunca han programado o para estudiantes de programación novatos.\nLas lecciones de este curso fueron realizadas tomando en cuenta a todas las personas que al igual que yo (Instructor Juan Villalvazo) batallan para entender coceptos de programación, pero aun así no se dan por vencidos ya que en verdad quieren aprender a programar.\nCaracterísticas de este curso:\n3 horas de video en Alta Definición, grabadas y editadas para que aprendas en el menor tiempo posible las bases de la programación con el lenguaje Java.\nAprenderás de la manera más eficaz y sencilla temas como: El IDE Bluej , Constantes y variables , tipos de datos , funciones y métodos , estructuras de control if - else y switch , ciclos for - while y do while , La programación orientada a objetos ( Clases, métodos, variables de instancia, creación y uso de objetos ).\nAtención de primera, si tienes cualquier duda de los temas vistos en el curso con gusto te ayudare.\nTodo esto dentro de una comunidad que se apoya mutuamente.\nAsí que si crees que este curso puede ser de tu ayuda, te invito a que formes parte de nosotros. Recuerda que este curso cuenta con garantía de 30 días, si piensas que el curso no fue de tu ayuda, se te devolverá lo invertido en el.\nMuchas gracias : )",
      "target_audience": [
        "Este curso esta diseñado para estudiantes de programación novatos y personas con cero conocimientos de programación."
      ]
    },
    {
      "title": "ちゃんと学ぶ、PHP 7/8入門講座",
      "url": "https://www.udemy.com/course/php-master/",
      "bio": "PHPでのプログラミングを、基本からじっくり学ぼう",
      "objectives": [
        "PHPを利用したプログラミング開発手法",
        "PHP 7以降の新しい言語仕様",
        "MAMPを利用したウェブサーバーでの PHP開発手法",
        "データベース（MySQL/MariaDB）との連携方法"
      ],
      "course_content": {},
      "requirements": [
        "PCの基本的な操作",
        "コマンドラインの利用"
      ],
      "description": "PHPは、WordPressや EC-CUBEなど人気の CMSで採用されているプログラミング言語で、また近年 PHP8の登場などにより改めて注目されているサーバーサイド言語です。\n本講座では、同種の講座『PHP+MySQL（MariaDB） Webサーバーサイドプログラミング入門』よりも、もっと踏み込んで PHPの言語についてじっくりと解説しています。\n作るサンプルなどは地味なものばかりですが、その分解説をしっかり行なって1つ1つ理解しながら進められるように工夫しました。これからプログラミングを始めたい方はもちろん、すでに PHPの Laravel等を使って開発をしている方や、WordPressのテーマ開発などをされている方が、じっくり腰を据えて PHPを理解したいときなどにご活用頂けると幸いです。",
      "target_audience": [
        "PHPで開発をしっかりやっていきたい中級者",
        "WordPressのテーマ開発などをしっかりやっていきたい方"
      ]
    },
    {
      "title": "C++ Dersleri : Sıfırdan Uzmanlığa Nesne Tabanlı Programlama",
      "url": "https://www.udemy.com/course/cpp_programlama/",
      "bio": "C++ Programlama | C++ Kodlama | C++ Eğitimi | C++ Fonksiyonlar | C++ Diziler | C++ Pointer | C++ OOP | C++ Sınıf Nesne",
      "objectives": [
        "En güçlü programlama dillerinden biri olan C++ ile programlamayı ASELSAN vb. savunma sanayi şirketlerinde 20+ yıl çalışmış tecrübeli eğitmenden öğreneceksiniz",
        "Diğer kursların çoğunun öğrettiği eski bir C++ sürümü yerine Microsoft Visual Studio 2022 ile C++ eğitimi alacaksınız",
        "C++ ile Çok sayıda Sınav ve Mülakat soruları, programlama örnekleri ve coding exercises içermektedir",
        "Kalıtım, Encapsulation ve Polymorphism gibi temelden ileri düzeye kadar Nesne Yönelimli Programlama konseptlerini C++ ile koda dönüştürmeyi öğreneceksiniz",
        "Teknik Üniversitelerin Mühendislik dersleri C++ Sınavlarına hazırlık için örnek Midterm ve Final Sınavları Soru ve Çözümleri çözerek sınavlara hazırlanacaksınız",
        "C++ ile hem Algoritma geliştirmeyi hem de örnek bir OOP projesi sıfırdan geliştirmeyi öğreneceksiniz",
        "C++ dilini iş hayatınızda veya üniversitede bizden öğrenmenin ayrıcalığını yaşayacaksınız, teori ve pratiği birlikte göreceksiniz.",
        "C++ temelleri , nesne tabanlı programlama , veri yapıları ,stack ve heap, algoritmalar ve projelerle C++ öğrenin Kodlama kariyerinize güçlü bir başlangıç yapın!",
        "Profesyonel Yazılımcı Serimizin ilk adımı olan C++ Programlama kursumuzu tamamlayarak hedefinize bir adım daha yaklaşmış olacaksınız"
      ],
      "course_content": {
        "C++ Kurulum ve Ek Kaynaklar": [
          "Visual Studio 2022 C++ Kurulumu"
        ],
        "C++ Programlamaya Giriş": [
          "C++ ile Programlamaya Giriş - Main Metodu ve Compile (Derleme) İşlemi",
          "C++ Yorum Satırları",
          "Değişkenler - Detaylı Anlatım",
          "Değişkenlerde Dikkat Edilmesi Gereken Hususlar",
          "Veri Tipleri - Giriş",
          "String, Integer, Float ve Double Veri Tipleri",
          "Boolean ve Char Veri Tipleri",
          "C++ Aritmetik İşlemler",
          "C++'da Ondalık sayı Gösterimi için setprecision & fixed Kullanımı",
          "C++ Quiz : Ondalık Gösterim",
          "C++ Quiz Soru Çözümü",
          "C++’da Prefix ve Postfix Operatörleri ++x ve x++ Kullanımı Detaylı Anlatım",
          "C++ Programlama Sınav Soru #1",
          "C++ Programlama Sınav Soru #1 Çözüm - Detaylı Anlatım",
          "C++ Programlama Sınav Soru #2",
          "C++ Programlama Sınav Soru #2 Çözüm - Detaylı Anlatım",
          "C++ Programlama Sınav Soru #3",
          "C++ Programlama Sınav Soru #3 Çözüm - Detaylı Anlatım"
        ],
        "Ücretsiz Mobil Uygulama ile C++ Pratiği": [
          "Mobil Uygulama (Android) ile C++ Bilgini Test Et: C++ Quiz Pro",
          "C++ Quiz Pro Uygulamasıyla Kendini Sına (Ücretsiz)"
        ],
        "Kullanıcıdan Veri Alma ve Kütüphane Kullanımı": [
          "Kullanıcıdan Input alma cin kullanımı",
          "C++ Kütüphane (Library) Kullanımı",
          "Öğrendiklerimizi Kapsayıcı Örnek C++ Programlama Soru ve Çözümü"
        ],
        "C++ ile Algoritmaya Giriş": [
          "if else Koşulları Programlama ve Algoritma Oluşturma",
          "if else Koşullu İfadeler - Örnek Kod",
          "if else Kullanımı Detay Örnekler",
          "Mantıksal Operatörler",
          "Operatörler Kodlama Örnekleri",
          "Örnek Programlama Sınav Sorusu",
          "Örnek C++ Sınav / Mülakat Sınav Sorusu ve Çözümü",
          "Switch Case",
          "Örnek C++ sınav / Mülakat Sınav Sorusu ve Çözümü",
          "C++ Konsol Output Ekranında Türkçe Karakterlerin Kullanımı"
        ],
        "C++ Döngüler": [
          "While Döngüsü",
          "Örnek While Döngüsü",
          "Do While Döngüsü",
          "For Döngüsü (For Loop)",
          "C++ Programlama Sınav Sorusu ve Çözümü",
          "Döngülerden Çıkmak : break ve continue",
          "Debugger ve Breakpoint Kullanımı",
          "C++ Programlama Örnek Uygulama Sorusu ve Çözümü (İç içe döngüler)"
        ],
        "C++ Fonksiyonlar": [
          "C++ Fonksiyonları ve return",
          "Fonksiyonlar Konu Pekiştirme",
          "Fonksiyon Overloading - Fonksiyonların Aşırı Yüklenmesi",
          "Fonksiyonlar Test Soru 1",
          "Fonksiyonlar Test Soru 1 Çözümü - Açıklamalı Anlatım",
          "Fonksiyonlar Test Soru 2",
          "Fonksiyonlar Test Soru 2 Çözümü - Açıklamalı Anlatım",
          "Fonksiyonlar Test Soru 3",
          "Fonksiyonlar Test Soru 3 Çözümü - Açıklamalı Anlatım"
        ],
        "C++ Random Sayı Üretme : rand() Fonksiyonu": [
          "rand() Fonksiyonu",
          "C++ Random (Rastgele) Sayı Üretme Örnek Sınav Sorusu ve Çözümü"
        ],
        "C++ Diziler | C++ Arrays": [
          "Tek Boyutlu Diziler",
          "C++ Diziler Konu Pekiştirme",
          "C++ Diziler Örnek #1",
          "C++'ta Arrays Best Practice",
          "Diziler Örnek #2",
          "Çok Boyutlu Diziler",
          "Programlama Sınav Sorusu : 2 Boyutlu Dizilerde Toplama",
          "Programlama Sınav Sorusu Çözümü : 2 Boyutlu Dizilerde Toplama",
          "Kod Refactoring Kavramı ve İlk Kod Refactoring İşlemimizi Yapıyoruz"
        ],
        "C++ Diziler - Detaylı Anlatım": [
          "Dizilerin Fonskiyonlarda Parametre Olarak Kullanılması",
          "Örnek Kodlama Soru ve Çözümü - Diziler ve Döngüler",
          "Diziler Test Sorusu",
          "C++'da Diziler Test Sorusu Çözümü - Açıklamalı Anlatım"
        ]
      },
      "requirements": [
        "Azimli ve istekli olmak"
      ],
      "description": "Neden C++ çok popüler?\nSpace X'in Falcon 9 roketinin uçuş kontrol yazılımlarından evlerimizde kullandığımız akıllı cihazlara ve cep telefonlarına kadar birçok kompleks sistem C++ ile geliştirilmiştir. Falcon 9'un dikey iniş sisteminin C++ yazılımları sayesinde bugün dikey iniş yapabilen tek roket sistemidir.  Günümüzün modern dünyasında evimizdeki ve elimizdeki küçük elektronik cihazlardan, savunma sanayiindeki uçak, roket ve silah sistemlerine kadar bütün elektronik sistemlerin çalışması C++ yazılımları ile gerçekleştirilmektedir. ROS (Robot Operating System) isimli güncel robotik sistemlerin geliştirme platformu,  Windows, Linux ve MacOS gibi işletim sistemlerinin hepsi C / C++ dilinde yazılmıştır. Donanıma hızlı erişim, pointer lar ile bellek yönetimi ve diğer bir çok özellik bugün hala diğer hiç bir dilde (Java, Python, C#, ..vb.) mevcut değildir. Bu kadar kritik olmasının bir yan etkisi olarak bu dillere göre öğrenmesi ve kullanması zor olan C++ programlama dilini bu kurs sayesinde savunma sanayii ve teknoloji şirketlerinde uzun yıllar çalışanmış bir eğitmenden öğrenebilirsiniz. Pointer 'lar gibi zor bir konuyu basit ve herkesin anlayacağı şekilde güzel bir anlatım ile bol sınav soruları ve çözüm örnekleri ile açıklayan eğitim müfredatımız ve en güncel yazılım geliştirme platformu olan Visual Studio C++ ile sizler de eski IDE'leri ve eski metodolojileri bir kenara bırakıp güncel olan ile yolunuza devam edin !\nNeden C++ öğrenmelisiniz?\nHangi programlama dili yazılım geliştiriciler arasında bir onur nişanı olarak görülür? C++\nHangi programlama dilini öğrenerek CV’nize eklediğinizde genellikle iş görüşmesine çağrılma şansınızı artırırsınız? C++\nHangi programlama dili popülerlik açısından rutin olarak en iyi 5 programlama dili arasında yer alır ve neredeyse 20 yıldır sürekli ilk 10’da? C++\nBugün yazılan yazılımların büyük bir kısmı, hatta çoğu hâlâ C++ ile yazılmaktadır ve bu durum uzun yıllardır değişmemiştir.\nC++ yalnızca popüler bir dil değil, aynı zamanda son derece güncel bir dildir. GitHub’a girdiğinizde çok sayıda aktif C++ deposu olduğunu ve Stack Overflow’da C++ ile ilgili soruların oldukça fazla olduğunu görebilirsiniz.\nPhotoshop ve Adobe gibi ürünlerinin yanı sıra MySQL ve MongoDB veritabanı motorları da C++ kullanılarak geliştirilmiştir.\nAmazon, Apple, Microsoft, PayPal, Google, Facebook, Oracle gibi önde gelen teknoloji şirketleri, ürünlerinde ve Ar-Ge çalışmalarında C++’ı yoğun bir şekilde kullanmaktadır.\nC++ öğrenmenin kariyer fırsatlarınızı nasıl artırabileceğini görebiliyor musunuz?\nDaha fazla profesyonel şirket C++ kullanıyorsa, C++ programcılarına olan talebin de artacağını söylemek mantıklıdır.\nAncak, C++ öğrenmenin belki de en önemli nedeni onun inanılmaz derecede güçlü bir dil olmasıdır.\nPeki, \"güçlü\" derken ne demek istiyorum?\nC++, süper hızlı ve hem prosedürel hem de nesne yönelimli programlamayı destekleyen genel amaçlı bir programlama dilidir, bu da onu son derece esnek kılar. C++, diğer dillerin yapamayacağı birçok şeyi yapabilir. Bu yüzden neredeyse her büyük programlama dili, C++ ile yazılmış kodlarla etkileşim kurmanın bir yolunu içerir. C++ bu kadar çok dili etkilediği için, C++’ı bildiğinizde yeni öğreneceğiniz dillerde C++’tan izler göreceksiniz.\nBir Başlangıç Seviyesi Öğrencisi C++ 'ı Nasıl Öğrenebilir?\nİyi bir eğitmen tarafından hazırlanmış bir kurs bulmak kritik öneme sahiptir. Eğitmenin hem C++ konusunda uzun yıllara dayanan deneyimi olmalı hem de bu dili size etkili bir şekilde öğretebilme becerisine sahip olması gerekir. Bu nedenle C++ programlama dilini uzun süredir kullanan ve hem endüstride çalışmış hem de Akademik tecrübesi olan bir mühendisten öğrenmeniz en doğrusu olacaktır!\nBu kursu tamamladığınızda C++'ı doğru bir şekilde ve mümkün olan en kısa sürede öğrenmiş olacağınızı bilerek kendinize güvenebilirsiniz. C++ programlama dilini güncel bir IDE olan Microsoft Visual Studio 2022 ile öğreneceğiz bu kursta.\nC++ Öğrenmek Zor Mu?\nC++’ın sahip olduğu güç ve esneklik, aynı zamanda karmaşıklık anlamına gelir. Ancak doğru bir eğitmen ve eğitimle C++’ı hızlıca öğrenebilirsiniz. Bu kursun amacı da tam olarak budur.\nBu Kursta Neler Öğreneceksiniz?\nHiç programlama deneyiminiz olmasa bile bu kursun sonunda kendi C++ programlarınızı yazacak becerilere sahip olacaksınız. İşte kursun ana başlıkları:\nC++ Koşullu durumlar\nC++ Döngüler: while, do while, for, döngüleri\nC++ programlama syntax\nC++ Fonksiyonlar\nC++ Diziler\nC++ Pointer ve C++ Reference\nC++ Templates\nC++ ile Sınıflar ve nesneler yani nesne tabanlı programlama ( OOP - Object Oriented Programming )\nKendi C++ sınıflarınızı oluşturma\nStandart Şablon Kütüphanesi ( C++ STL ) sınıflarını kullanma ( C++ Vector , List , Map )\nYapıcılar ve Yıkıcılar ( Constructors , Destructors )\nKalıtım - Inheritance\nOperatörlerin aşırı yüklenmesi\nC++ Polimorfizm ( Polymorphism )\nC++ Dinamik Bellek Yönetimi\nStack ve Heap Bellek\nC++ Struct : C tipi Structs ve C'de olmayan C++'a özgü Sınıf gibi davranan ileri seviye C++ struct yapıları\nGiriş / Çıkış işlemleri\nSTL Kütüphanesine Giriş\nC++ ile İstisna yönetimi ( Try Catch )\nC++ ve STL Kütüphanelerinin birlikte kullanıldığı örnek projeler\nC++ Sorular : Çok sayıda örnek C++ Kodlama sınav sorusu ve çözümü\nBu C++ Kursu ile:\nC++ ile Algoritma ve Programlamaya giriş yapın : Bu eğitim, C++ programlama öğrenirken eğlenceli ve adım adım uzmanlığa giden bir süreç sunar.\nAlgoritma Becerilerinizi Geliştirin: C++ ile programlar geliştirerek algoritma becerilerinizi artırın ve kodların bilgisayarlar tarafından nasıl işlendiğini keşfedin.\nTemel Özellikleri Kavrayın: C++ programlama dilinin temel özelliklerini öğrendikten sonra, pratik yaparak kendinizi geliştirin.\nC++ Nesne Tabanlı Programlamayı Anlayın: Nesneye yönelik programlama OOP kavramını Microsoft Visual C++ kullanarak tam olarak kavrayın.\nDiğer Dillere Geçiş Yapın: C++ programlama dilindeki ustalığınız arttıkça, diğer Yüksek Seviyeli Programlama dillerine geçiş yapmak çok daha kolay olacak.\nC++ Örneklerle Pekiştirin: Öğrendiklerinizi pekiştirmek için verilen örneklerle C++ programlamayı zevkle kodlayın.\nEn güncel ve modern IDE kullanın: Microsoft Visual Studio 2022 ile C++ Programlama keyfi ve kolaylığından yararlanın\nModern C++ ile algoritmalar, veri yapıları ve performans odaklı kodlama tekniklerinde ustalaşarak yazılım geliştirme kariyerinize güç katın.\nC++ Öğrenmenin Faydaları Neler?\nDaha fazla kariyer seçeneği! C++, oyun geliştirmeden gömülü sistemlere kadar birçok alanda kullanılmaktadır. C++ öğrenmek, size daha fazla ödeme, daha fazla fırsat ve daha fazla eğlence sunar!\nODTÜ Elektrik-Elektronik Mezunu Savunma Sanayi Deneyimli Yazılım Mühendisinden C++ Programlama Öğrenme Fırsatını kaçırmayın, yazılımı doğru kaynaktan öğrenin!\nHadi, hemen başlayın ve bu fırsatı kaçırmayın, kursa katılmak için hemen kayıt olun!",
      "target_audience": [
        "Sıfırdan C++ programlamayı öğrenmek ve bolca örnek yaparak kendi projelerinizi geliştirmek istiyorsanız bu kurs tam size göre.",
        "Tüm Mühendislik Öğrencileri (Bilgisayar Mühendisliği, Elektrik - Elektronik Mühendisliği, Yazılım Mühendisliği, Makine Mühendisliği, Endüstri Mühendisliği, Mekatronik Mühendisliği Öğrencileri)",
        "Matematik, İstatistik, Fizik, Kimya, Bilişim Teknolojileri, Bilgisayar Programcılığı Öğrencileri",
        "Savunma Sanayi ve Ar-Ge alanında en çok talep gören programlama dillerinden birini öğrenerek kariyer seçeneklerini artırmak isteyen herkes.",
        "C++ ile Object Oriented Programming (OOP) mantığını derinlemesine anlamak isteyenler için kapsamlı bir rehber sunuyorum"
      ]
    },
    {
      "title": "COBOL curso completo: Empieza a programar ¡Ya!",
      "url": "https://www.udemy.com/course/lenguaje-de-programacion-cobol/",
      "bio": "Se ha recopilado todo lo necesario para que empieces a programar en COBOL lo más pronto posible.",
      "objectives": [
        "Conocerás a profundidad cada una de las 4 divisiones del COBOL",
        "Desarrollarás programas COBOL que van de baja a mediana complejidad",
        "Utilizarás herramientas similares a las que se usan en el Mainframe de IBM",
        "Compilarás y ejecutarás tus programas COBOL directamente en una Página Web o mediante el uso de un compilador en ambiente PC-Windows",
        "Realizarás programas que utilizan archivos tanto Secuenciales como Indexados",
        "Incrustarás sentencias de SQL en tus Programas COBOL",
        "Desarrollarás tus programas con la técnica de Programación Estructurada",
        "Realizarás programas que emiten Reportes",
        "Aprenderás a usar tablas internas en tus programas",
        "Conocerás todas las modalidades de la sentencia SORT"
      ],
      "course_content": {},
      "requirements": [
        "Conocer algún Lenguaje de Programación",
        "Tener experiencia en SQL, si es que se utilizará COBOL con acceso a tablas de SQL",
        "De preferencia, conocimientos en programación estructurada."
      ],
      "description": "¿Sabías que según análisis de Compuware, actualmente se utiliza más de 220 mil millones de líneas de código COBOL a las que se suman anualmente 5,000 millones?\n\n¿Deseas aprender COBOL de una manera fácil y guiada?\n\n¡¡Bienvenido al Curso Lenguaje de Programación COBOL!!\nEn este Curso aprenderás a programar, paso a paso, en este poderoso lenguaje de programación.\nTodo programa COBOL se compone de 4 Divisiones, veremos al máximo detalle cada una de éstas.\nRealizaremos programas donde utilicemos: Archivos Secuenciales, Archivos Indexados, Tablas y sentencias de SQL, Reportes, Uso de Tablas internas, Uso del SORT, etc.\nVeremos todo una sección relativa a la Programación Estructurada y con esta técnica desarrollaremos nuestros programas\nNos enfocaremos al COBOL que se usa en el Mainframe de IBM, sin embargo podrás realizar tus programas en cualquier otro equipo.\nUtilizaremos en PC el mismo editor que se usa en el Mainframe de IBM.\nTendremos la opción de compilar y ejecutar en línea (en una Pagina Web) nuestros programas COBOL.\nTe diré como descargar el Software gratuito para compilar y ejecutar tus programas COBOL en ambiente PC-Windows\n\n\nTe recomiendo que respetes la secuencia que tiene el Programa del Curso y de esta forma lo aproveches al máximo.\n¿Porque estoy compartiendo este Curso contigo?\n\nLos especialistas actuales que conocen COBOL tienen entre 50 y 65 años, por lo que están a punto de jubilarse. Ahora los jóvenes profesionales tendrán que dar continuidad al trabajo que venían desempeñando todos aquellos especialistas COBOL. Sin embargo, la generación más joven tiende a tener poca o ninguna experiencia con los equipos Mainframe ya que se ha centrado más en la información distribuida, la Web y las tecnologías móviles. Existe un riesgo de tener una pérdida de capital intelectual y una falta de experiencia para los equipos de TI en las muchas empresas que aun manejan esta tecnología.\nDeseo que este Curso sea de gran utilidad para los jóvenes profesionales que están conscientes del gran mercado que aun existe en el uso de los Mainframes y que con su talento contribuyan al crecimientos de las áreas de TI.",
      "target_audience": [
        "Programadores de computadoras",
        "Analistas y Diseñadores de Sistemas",
        "Líderes de Proyectos Mainframe de IBM."
      ]
    },
    {
      "title": "【徹底的に解説！】Djangoの基礎をマスターして、3つのアプリを作ろう！（Django2版 / 3版を同時公開中です）",
      "url": "https://www.udemy.com/course/django-3app/",
      "bio": "Djangoの概要から学び、3つのアプリを作る中でフレームワークに対する理解を深めることができます。最後はVPSを使ってウェブサイトを公開していきましょう！Djangoだけではなく、フレームワークをこれから学びたい方にもおススメです。",
      "objectives": [
        "Djangoを使って作成したウェブサイトを作ることができるようになります。",
        "Djangoの基礎的なコードの書き方を学ぶことができます。",
        "Djangoで作ったサイトを公開することができるようになります。",
        "フレームワークやデータベースの概念を知ることができます。"
      ],
      "course_content": {},
      "requirements": [
        "Pythonの基礎的な文法を学んでいると、より理解を深めることができます。",
        "フレームワークやDjangoの知識は必要ありません。",
        "Pythonは3、Djangoは2/3のバージョンを前提としています。",
        "使われるマシンにもよりますが、Linuxの基本的なコマンド（ls、mkdir、touch、cd）を理解しているとスムーズに進めることができるかと思います。"
      ],
      "description": "注【Django3.1対応の動画を作成・順次追加中です。両者の内容はほとんど同じですが、現在受講頂いている方の混乱を避けるため、2つのバージョンが並列して存在していること、ご了承の程宜しくお願い致します。】\n\n\nDjangoのチュートリアルを見たけど全く意味が分からない！そもそもフレームワークが何か良く分からない！Djangoに興味はあるけど、何から勉強したら良いか良くわからない。\nこの講座は、このような方に向けて作りました。\n\n\nかく言う私も、Djangoを学ぶのにはかなり苦労しました。\nこれからDjangoを勉強する方には、私のような苦労をしてほしくない。これが、今回この講座を作った大きな理由です。\n\n\nこれからウェブサイトを作っていこうと考えている人にとって、Djangoのようなフレームワークを学ぶことは非常に有意義だと考えています。なぜなら、Djangoを学ぶことで、ウェブサイトを作る上での効率が非常に上がるからです。\n\n\nただ、フレームワークはどこから何を学べばよいか分からないことも多いですよね。だからこそ、この講座では、具体例をとにかく沢山のせて、イメージを膨らませながら学ぶことができるよう工夫しています。\n\n\nさらに、Djangoを理解する上で必要な多くの用語についても、すべてしっかりと解説をしています。\nこれから始めてフレームワークを学ぼう！と考えている方を常にイメージしながらこの講座を作成しました。\n\n\nもちろん、30日以内であればいつでもキャンセルすることが可能です。\nあなたの貴重な時間を貰っている訳ですので、その責任をしっかりと感じ、内容にもとにかくこだわっています。\n\n\nぜひこの講座を受講して、Djangoやフレームワークに対する理解を深めていただければと思います。",
      "target_audience": [
        "フレームワークについてこれから学ぼうと考えている方",
        "Djangoの基礎的な内容を学びたい方"
      ]
    },
    {
      "title": "أساسيات البرمجة بلغة بايثون coding basics with python",
      "url": "https://www.udemy.com/course/coding-basics-with-python/",
      "bio": "كورس تعلم اساسيات البرمجة بلغة بايثون هو كورس مخصص للمبتدئيين الذين يريدون دخول عالم البرمجة و البدأ في تعلم هذا المجال",
      "objectives": [
        "ستتعلم أساسيات البرمجة بالكامل",
        "ستكون قادر على كتابة اكواد برمجية بلغة بايثون بسهولة",
        "ستتعلم التفكير المنطقي و الطريقة الصحيحة للبرمجة",
        "سوف تكون قادر على دخول اي مجال برمجي تطبيقي له علاقة بلغة بايثون",
        "ستكون قادر على تعلم اي لغة برمجية ثانية بسهولة",
        "سيصبح بإمكانك الاعتماد على نفسك في كل مايخص البرمجة"
      ],
      "course_content": {},
      "requirements": [
        "لا حاجة لأي معرفة برمجية سابقة ستتعلم كل ما تحتاجه من الصفر"
      ],
      "description": "ماذا ستتعلمون في هذه الدورة\nستتعلم أساسيات البرمجة بالكامل\nستكون قادر على كتابة اكواد برمجية بلغة بايثون بسهولة\nستتعلم التفكير المنطقي و الطريقة الصحيحة للبرمجة\nسوف تكون قادر على دخول اي مجال برمجي تطبيقي له علاقة بلغة بايثون\nستكون قادر على تعلم اي لغة برمجية ثانية بسهولة\nسيصبح بإمكانك الاعتماد على نفسك في كل مايخص البرمجة\nماهي الاشياء التي تحتاجونها قبل البداية في هذا الكورس\nلا حاجة لأي معرفة برمجية سابقة ستتعلم كل ما تحتاجه من الصفر\nلمن هو موجه هذا الكورس\nكورس مخصص لكل من هو مهتم بدخول عالم البرمجة\nكورس مخصص للمبتدئيين و حتى الذين لديهم بعض الخبرة في البرمجة\nكورس مخصص لكل من يريد تعلم و إحتراف لغة بايثون\nكورس مفيد جدا لمن يريدون التخصص في الذكاء الاصطناعي و علوم الحاسوب مستقبلا\n\nماذا قدمنا في هذا الكورس\nفي هذا الكورس ستتعلمون اولا ماهو مفهوم البرمجة و اين تستخدم و ماهي فائدتها اصلا\nبعدها سنقوم بتجهيز بيئة العمل لنتمكن من العمل على لغة بايثون\nبعدها بدأنا في تعلم جميع الاساسيات البرمجية التي ستحتاج لمعرفتها مع العديد من التمارين التطبيقية لفهم افضل\nبعدها دخلنا مرحلة تقوية الفهم البرمجية و تقوية مهارة حل المشاكل البرمجية و ذلك من خلال ترتيب افكارنا و معالجة كل ما نواجهه بطريقة احترافية\nو اخيرا سنقوم بعمل مشروع كامل مع بعضنا البعض لنتمكن من ترسيخ كل ما تعلمناه من اساسيات و نطبقه في مشروع واحد نهائي",
      "target_audience": [
        "كورس مخصص لكل من هو مهتم بدخول عالم البرمجة",
        "كورس مخصص للمبتدئيين و حتى الذين لديهم بعض الخبرة في البرمجة",
        "كورس مخصص لكل من يريد تعلم و إحتراف لغة بايثون",
        "كورس مفيد جدا لمن يريدون التخصص في الذكاء الاصطناعي و علوم الحاسوب مستقبلا"
      ]
    },
    {
      "title": "Introdução à Programação para Bioinformática com Python",
      "url": "https://www.udemy.com/course/python_para_bioinformatica/",
      "bio": "Aprenda programação com a linguagem Python para manipulação de dados biológicos e pesquisas científicas",
      "objectives": [
        "Compreender conceitos de Bioinformática",
        "Manipular sequências de DNA e proteína",
        "Construir o primeiro programa de computador",
        "Desenvolver scripts na linguagem de programação Python",
        "Alinhar sequências usando BLAST",
        "Modelar proteínas",
        "Biblioteca Biopython"
      ],
      "course_content": {},
      "requirements": [
        "Não é necessário nenhum conhecimento básico"
      ],
      "description": "Bem-vindos ao curso \"Introdução à Programação para Bioinformática com Python\". Neste curso aprenderemos os básicos da programação para construção de programas para bioinformática. Aprenderemos também a criação de pipelines usando Python. Esse curso é ideal para alunos que estão começando na área da bioinformática e que não tenham um prévio conhecimento de programação.",
      "target_audience": [
        "Qualquer aluno que deseja aprender sobre programação para bioinformática"
      ]
    },
    {
      "title": "Java 17 Object-Oriented Programming",
      "url": "https://www.udemy.com/course/object-oriented-programming-con-java/",
      "bio": "Impara il linguaggio Java 17 e la programmazione Object-Oriented, con la guida di un Senior Software Engineer",
      "objectives": [
        "Conoscere in profondità la grammatica e la sintassi del linguaggio di programmazione Java 17",
        "Conoscere ed utilizzare il paradigma object-oriented",
        "Conoscere la struttura generale della Java Virtual Machine e del Bytecode",
        "Conoscere il significato di \"Oggetto\" e di \"Concetto\"",
        "Comprendere le fasi della compilazione di un programma Java",
        "Conoscere ed utilizzare i Tipi Primitivi, le Variabili e le Costanti",
        "Conoscere ed utilizzare gli Operatori Aritmetici, di Incremento/Decremento, gli Operatori Logici e Relazionali",
        "Conoscere ed utilizzare le Conversioni di Tipo",
        "Conoscere ed utilizzare il Control Flow (if/else, switch, while, do/while, for loops, break e continue)",
        "Conoscere ed utilizzare le Classi, le Interface, le Enumeration",
        "Conoscere ed utilizzare i membri di una classe (Attributi, Metodi, Costruttori)",
        "Conoscere ed utilizzare l'Overload, l'Override ed il Polimorfismo",
        "Conoscere ed utilizzare gli array (monodimensionali e multidimensionali) e le Stringhe",
        "Conoscere ed utilizzare l'Ereditarietà, le Classi Astratte ed i Metodi Astratti",
        "Conoscere ed utilizzare i Package",
        "Conoscere ed utilizzare le Lambda Expression ed i Method Reference",
        "Conoscere ed utilizzare i Java Modules",
        "Conoscere ed utilizzare i Record",
        "Conoscere ed utilizzare le Sealed Class e le Sealed Interface"
      ],
      "course_content": {},
      "requirements": [
        "Conoscenza base del sistema operativo (Mac, Linux, Windows) e utilizzo del terminale",
        "La conoscenza di base di un linguaggio di programmazione può aiutare ma non è richiesta."
      ],
      "description": "Questo corso è una vera guida rapida, teorica e pratica, che ti condurrà passo dopo passo a conoscere in profondità il linguaggio di programmazione JAVA SE 17 ed il Paradigma Object-Oriented.\n\nLa prima sezione del corso, che ti offro come bonus, è una sorta di corso nel corso... Imparerai infatti in modo approfondito il Paradigma Object-Oriented in tutti i suoi aspetti principali, secondo un percorso che ho ricavato dai miei (ahimè) moltissimi anni di esperienza sul campo come object-oriented analyst e designer. Le capacità che acquisirai nelle lezioni teoriche di questa prima sezione sono valide anche per qualunque altro linguaggio object-oriented, come Python, C#, Swift, C++.\nAttraverso un percorso guidato, poi, impareremo cosa sono la Java Virtual Machine ed il Bytecode, ed eseguiremo subito una esercitazione guidata per scrivere un primo programma in Java.\nImpareremo poi ad utilizzare i Primitive Types, le Espressioni e gli Operatori.\nImpareremo a dichiarare le Variabili e le Costanti\nPasseremo poi in rassegna tutti gli elementi del Control Flow (i test condizionali, i loop, i salti incondizionati).\nImpareremo poi, nella sezione centrale del corso, tutti gli aspetti legati alla Programmazione Object-Oriented in Java:\nLe Classi\nLa definizione dei Metodi e degli Attributi\nI Membri di Istanza e di Classe\nI Membri Pubblici e Privati\nLa differenza tra Primitive Type e Reference Type\nI Costruttori\nIl meccanismo dell'Overload (la prima forma di Polimorfismo)\nLe Inner Classes e gli \"static blocks\"\nGli Array Monodimensionali, Multidimensionali, e la classe String\nLa gestione dell'Ereditarietà\nLa gestione dei Record\nLa gestione delle Sealed Class e delle Sealed Interface\nIl meccanismo dell'Override (la seconda forma di Polimorfismo)\nI Metodi e le Classi Astratte\nLa classe Object\nLe Interface, assieme ai metodi di default, privati ed alle costanti\nLe Annotations\nLe Enumerations\nSuccessivamente, impareremo assieme a strutturare i programmi Java in Package, ed a gestire le Exceptions. Comprenderemo poi i Type Wrappers, l'Autoboxing e l'Auto-Unboxing.\nAffronteremo poi i Generics, le Lambda Expressions, ed i Method References.\nEd infine, impareremo a strutturare ulteriormente i Package all'interno dei Java Modules.",
      "target_audience": [
        "Sviluppatori principianti che desiderano imparare a programmare attraverso il linguaggio di programmazione Java",
        "Sviluppatori, principianti o esperti, che desiderano apprendere i principi della programmazione Object-Oriented",
        "Sviluppatori che desiderano imparare il linguaggio di programmazione Java SE 17"
      ]
    },
    {
      "title": "Makro(VBA) İnternet İşlemleri | Veri Çekme/Gönderme-Selenium",
      "url": "https://www.udemy.com/course/makro-ile-internetten-veri-cekmek/",
      "bio": "Makrolar Sayesinde , Kurum İçi ya da Global Tüm İnternet Ortamından Veri Alın/Veri Gönderin, Selenium Basic Öğrenin",
      "objectives": [
        "Makro yazarak, Chrome aracılığı ile İnternet'ten veri çekmeyi öğreneceksiniz.",
        "Excel sayfası içindeki verileri Makro yazarak Chrome üzerinden İnternet'e gönderebileceksiniz.",
        "İnternet'ten otomatik ve zamanlı bilgiler alabileceksiniz.",
        "Selenium Basic kodlarını anlayacaksınız.",
        "HTML ve CSS yöntemlerine ait temel etiketleri ve bilgileri edineceksiniz.",
        "Kurum içi ya da Global tüm Web sayfalarına otomatik giriş(login) yapabileceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Bir diğer kursum olan \"Excel VBA(Makro) Eğitim Seti - Sıfırdan Zirveye\" isimli eğitimimi tamamlamış olmalısınız.",
        "Ya da orta düzey ve üzerinde Makro bilgisine sahip olmalısınız.",
        "Kullandığınız bilgisayara program kurma yetkisine sahip olmalısınız."
      ],
      "description": "Bu eğitim canlı ve interaktif bir eğitimdir. Sizden gelen sorular için video çekiyorum ve bunu sizlerle paylaşıyorum.\nSelenium Web driver yöntemi sadece Javascript, PHP, Python gibi yazılım dilleri için yaygındı. Bu kütüphane Excel VBA ile de kullanılabiliyor ancak kaynaklar yok denecek kadar az. Bu yöntemleri ve kütüphaneyi kullanmak isteyen Excel VBA kullanıcıları için, bu eğitimi hazırlamak artık büyük bir ihtiyaç haline gelmişti. Ayrıca İnternet Explorer artık güncelliğini yitirdi ve bizlere cevap veremez hale geldi. Chrome kullanarak İnternet Otomasyonu yapmak, bu eğitimden sonra Excel VBA kullanıcıları için çok kolay olacak.\nAyrıca ben sadece bir eğitmen değilim. İlgili sektörlerde çalışanların nelere ihtiyacı olduğunu biliyorum. Bu eğitimi izlerken aklınıza bir soru geldiği anda hemen cevabını alacaksınız. Çünkü sizlerle aynı perspektife sahibim. Eğitim bittiğinde ise şimdiye kadar merak ettiğiniz tüm sorulara cevap bulacak ve kazanmış olduğunuz yetkinliğe inanamayacaksınız.\nBu eğitimde gereksiz bilgi yok. Zaman kaybı yok. Eğitimin her saniyesi önemli bilgilerle ve kimsenin kolay kolay sizlerle paylaşmayacağı detaylarla dolu.\nHerkes size Excel öğretebilir. Bense, onunla neler yapabileceğinizi...\n\n\nKursa yapılan bazı yorumlar;\nÇok faydalandım. Teşekkür ederim.\nGerçekten de arayıpta bulamıyacağımız bir eğitim olmuş. Çok Teşekkürler.\nLafı uzatmadan direkt olarak öğretiyor. Ben çok beğendim. Emekleriniz için teşekkürler\nMustafa hocanın eğitimleri gerçekten çok iyi ve akıcı, Anlayarak ilerliyorsunuz.\nAldığım her bir şeyleri gerçekten öğrendiğimi hissediyorum ve eğitimin uygulama kısmıyla bunların gerçek hayatta bir sonuç doğurduğunu bizzat kendim deneyimleyebiliyorum.\nGayet sade ve anlaşılır bir eğitim. Muhammet Mustafa Bolat Farkı.\nMustafa hocamın içeriklerinin bir çoğunu takip eden birisi olarak tam aradığım kursu nasıl bu zamana kadar fark edemedim ona üzülüyorum.\nHTML anlatımları çok güzel ve anlaşılır. Hiç bigim olmamasına rağmen ilk derste bayağı şeyler öğrendim",
      "target_audience": [
        "İnternet'ten Makro ile veri çekmek isteyenler,",
        "İnternet'e Makro ile veri göndermek isteyenler,",
        "Otomatik ve zamanlı kod yazmak isteyenler,",
        "Raporlama ile uğraşan ve bunu üst seviyeye çıkarmayı arzulayanlar,",
        "Rutin işleri otomatize ederek, zamandan kazanmak isteyenler,",
        "Bankacılar, Muhasebeciler, Öğretmenler, Pazarlamacılar, Satışçılar, Sağlık Sektörü Çalışanları ve Diğer Tüm Meslek Grupları"
      ]
    },
    {
      "title": "Curso completo del lenguaje Rust",
      "url": "https://www.udemy.com/course/curso-completo-rust/",
      "bio": "Aprende los conceptos fundamentales, y cómo programar aplicaciones en Rust desde cero.",
      "objectives": [
        "Beneficios de Rust",
        "Fundamentos del lenguaje de programación Rust",
        "Como escribir, compilar y ejecutar programas Rust",
        "Buenas practicas de Rust"
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso",
          "¿Qué es Rust? ¿Quiénes usan Rust? ¿Por qué usar Rust?"
        ],
        "Instalación": [
          "Instalar Rust, chequear instalación y updates."
        ],
        "Tu primer Hello World!": [
          "Escribiendo y ejecutando un simple Hello World!",
          "Explicación de tu primer Hello World"
        ],
        "Cargo: gestor de paquetes y build system de Rust": [
          "¿Qué es Cargo? Hello World con Cargo",
          "Build de proyectos con Cargo",
          "Crates.io",
          "Cargo add: otra forma de agregar dependencias"
        ],
        "Selección del IDE": [
          "¿Qué IDE usar?",
          "Debug con Visual Studio Code"
        ],
        "Conceptos fundamentales": [
          "Variables, inmutabilidad, y constantes",
          "Tipos de datos",
          "Funciones",
          "Structs",
          "Enums",
          "Option: un Enum especial y muy útil",
          "Generics: tipos genéricos, el famoso T",
          "Traits",
          "Trait Debug y el atributo Derive",
          "Trait Display",
          "Trait Default y Enum default",
          "Iterators",
          "Closures",
          "Prelude"
        ],
        "Flujos de control": [
          "If-else, loop, while, for.",
          "if-let y while-let",
          "let-else",
          "Bloques etiquetados: Labeled blocks"
        ],
        "Collections": [
          "Vector",
          "String y string slice",
          "Hashset",
          "Hashmaps"
        ],
        "Concepto de Ownership en Rust": [
          "Entendiendo \"Ownership y Borrowing\" con ejemplos prácticos.",
          "Lifetime: Tiempo de vida de las referencias"
        ],
        "Smart pointers: mucho más que referencias": [
          "Smart pointers y Box<T>",
          "¿Cómo funciona el trait Deref?",
          "¿Cómo funciona el trait Drop?",
          "Reference Counted Smart Pointer: muchos dueños para el mismo valor"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación"
      ],
      "description": "Rust ha sido elegido como el lenguaje más querido por los desarrolladores por 7 años consecutivos en la encuesta de Stackoverflow. De a poco las grandes empresas como Facebook, Google, Amazon, Microsoft, están usando Rust en sus sistemas internos. Algunos dicen que es el sucesor de C y C++. En este curso te contaré por que éste lenguaje está acaparando tanta atención del mundo de la informática, y te enseñaré a programar en él.\nAprenderás los conceptos fundamentales de Rust.\nAprenderás mediante ejemplos el concepto más revolucionario de Rust: Ownership y Borrowing.\nVamos a desarrollar distintas aplicaciones de principio a fin. Te mostraré todo el código, y podrás descargarlo para modificarlo o ejecutarlo tu mismo.\nHe diseñado éste curso para que sea la mejor relación entre calidad y tiempo, nuestro tiempo es muy valioso, así que la idea es que saques el mayor provecho en el menor tiempo posible.\nEl curso a grandes rasgos consiste en:\nInstalar Rust y dejar tu equipo listo para programar, incluida la selección del IDE.\nAprender sobre el gestor de paquetes de Rust llamado Cargo\nConocer los conceptos fundamentales del lenguaje\nEntenderemos Ownership y Borrowing, aplicando el concepto en varias clases y distintos ángulos.\nAprender a manejar los errores de nuestras aplicaciones.\nConstruiremos aplicaciones de principio a fin.\nPodrás revisar algunos tópicos avanzados sobre el lenguaje.\nY sabrás como buscar información por tu cuenta y seguir tu aprendizaje.\nEste curso es para ti si:\nEres un estudiante que quiere empezar su carrera con algo totalmente nuevo.\nEres un profesional que esta buscando un cambio en su carrera, o ¿por qué no? optar a un mejor salario con problemas más desafiantes.\nEres un desarrollador senior que quiere saltar al siguiente nivel desde C o C++, seguir programando a bajo nivel pero con un lenguaje que se siente de alto nivel.\nEres un programador curioso que quiere saber por que todos están hablando de Rust.\nEs el mejor momento para empezar a aprender Rust.\nTe espero en el curso.",
      "target_audience": [
        "Programadores que quieran agregar otro lenguaje a su portafolio.",
        "Diseñadores de sistemas que quieren conocer los beneficios de Rust para implementarlo en sus trabajos.",
        "Estudiantes de programación que quieren conocer uno de los lenguajes más mencionados del último tiempo.",
        "Programadores que quieren ampliar su carrera profesional y optar a nuevos e interesantes trabajos."
      ]
    },
    {
      "title": "はじめてのPythonプログラミング入門",
      "url": "https://www.udemy.com/course/python-programming-for-beginners-jp/",
      "bio": "生成AI，機械学習、データサイエンス、ウェブ制作に役立つプログラミングの基礎知識を習得しよう",
      "objectives": [
        "Pythonプログラミングの基本を習得できます",
        "なぜPythonを学ぶと良いのか理解できます",
        "学習環境Google Colaboratoryの基本的な使い方を習得できます",
        "プログラムのエラーを自力で取り除く基本的な方法を習得できます"
      ],
      "course_content": {
        "コースイントロダクション": [
          "コース紹介",
          "Pythonとは？",
          "受講オリエンテーション（Udemyのご利用が初めての方向け）"
        ],
        "はじめてのPythonプログラミングをしよう": [
          "Google Colaboratoryのウェブサイトを表示しよう",
          "はじめてのPythonプログラムを実行しよう",
          "Colaboratoryの使い方を知ろう",
          "演習: 文字列を出力してみよう",
          "コンテンツリクエスト募集中！"
        ],
        "Pythonプログラミングの基本を知ろう": [
          "イントロダクション",
          "そもそもプログラミングとは？",
          "サンプルコードについて",
          "コメントを使おう",
          "数値を表示しよう",
          "数値の演算をしよう",
          "演算子の優先順位を知ろう",
          "エラーを自力で取り除けるようになろう",
          "文字列を表示しよう",
          "エスケープシーケンスを利用しよう",
          "文字列の操作をしよう",
          "変数を使おう",
          "変数名のルールを知ろう",
          "複合代入演算子を使おう",
          "変数のデータ型について知ろう",
          "キーボードから値を入力しよう",
          "データ型を変換しよう",
          "演習：キーボードから値を入力して、BMIを求めてみよう",
          "文字列中に値を埋め込もう - f文字列",
          "演習：f文字列を使って、文字列中に値を埋め埋め込もう"
        ],
        "コレクションを使おう① - リスト": [
          "イントロダクション",
          "リストの基本的な使い方を知ろう①",
          "リストの基本的な使い方を知ろう②",
          "リストを操作しよう",
          "配列を使っておみくじプログラムを作成しよう",
          "演習：配列を使ってサイコロを作成しよう"
        ],
        "条件分岐をしよう": [
          "イントロダクション",
          "ifで条件分岐をしよう",
          "条件式が成り立たない場合の処理を書こう if else",
          "条件を追加しよう elif",
          "成績判定プログラムの仕上げをしよう",
          "真偽値とは何か知ろう",
          "比較演算子の種類を知ろう",
          "論理演算子を使おう",
          "in演算子を使おう",
          "演習：if elif else を使って、体格を出力しよう"
        ],
        "繰り返し処理をしよう": [
          "イントロダクション - 繰り返し処理をしよう",
          "forで繰り返し処理をしよう",
          "リストをforで扱おう",
          "forの入れ子を使おう",
          "break, continueを使おう",
          "whileで繰り返し処理をしよう",
          "whileの無限ループについて知ろう",
          "演習： 繰り返し処理を使って、 テストの点数の合計値、平均値を求めよう"
        ],
        "関数を使おう": [
          "イントロダクション",
          "関数を使おう",
          "関数の引数を使おう",
          "関数の戻り値を使おう",
          "演習： 三角形の面積を求める関数を作成しよう"
        ],
        "コレクションを使おう②": [
          "イントロダクション - コレクションを使おう②",
          "ディクショナリを使おう",
          "タプルを使おう",
          "演習：ディクショナリを作成して各値を取り出して出力しよう"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "パソコンの基本的な操作に関する知識",
        "パソコン（macOSまたはWindows）が必要です",
        "ウェブブラウザGoogle Chromeが必要です"
      ],
      "description": "本コースはプログラミング言語「Python（パイソン）」未経験の方が、中級者を目指すために設計された、初級レベルコースです。\nプログラミングに興味がありますか？\n人気上昇中のPythonを学びたいですか？\n機械学習で役立つPythonの基礎知識を学びたいですか？\nデータサイエンスで役立つPythonの基礎知識を学びたいですか？\nウェブ制作で役立つPythonの基礎知識を学びたいですか？\n\n\nあなたの答えが１つ以上YESなら、これはまさにあなたが探しているコースです！\n今すぐ、コース紹介動画やプレビュー動画を視聴して、カリキュラム内容をご確認ください！！\n\n\n私は、ウェブ開発入門完全攻略コースなど、ウェブ開発者を目指す方向けのプログラミング入門コースを複数公開していますが、それよりも、さらに入門者向けに、Pythonを使ったプログラミングを入門できるビジネスパーソン向けのコースを制作しました。\n\n\n学習に必要なもの\nパソコン（macOS または Windows）\nウェブブラウザ Google Chrome （無料）\nGoogle アカウント（無料）\n\n\n学習環境について\nGoogle Colaboratory というクラウドを利用した学習環境を利用します（無料プラン利用）\nレクチャーの動画収録ではmacOSを利用します。Windows特有の操作については、適宜補足説明します。\n\n\nPythonのバージョンについて\nバージョン3系を利用します。\n\n\nこのコースを学ぶメリット\nインターネットとPCがあれば、いつでも自分のペースで学ぶ事ができます。\n\n\nQ＆Aコーナーのご利用について\n本コースの内容を超えるご質問にはお答えできませんので、あらかじめご了承ください。\nコース内で紹介する動作確認済みのサンプルコード以外の動作については、サポート対象外とさせていただいております。\nご意見・ご要望や、コンテンツのリクエストは、コース内で紹介する専用のフォームにてお知らせいただけると幸いです。\n\n\nノーリスク\n30日以内返金保証付きで安心です（Udemyウェブサイトよりご購入の場合）。\n\n\nそれでは、皆さんとコースの中でお会いできることを楽しみにしています！\n\n\n更新履歴\n2022/11/10 演習問題を追加",
      "target_audience": [
        "Pythonプログラミングを習得したいビジネスパーソン",
        "これからITエンジニアを目指す方",
        "新入社員"
      ]
    },
    {
      "title": "Yeni Başlayanlar İçin C# ve SQL 101 Eğitimi",
      "url": "https://www.udemy.com/course/yeni-baslayanlar-icin-csharp-ve-sql-101-egitimi/",
      "bio": "Sıfırdan Yazılım Dünyasına İlk Adımı Atmak İsteyenler İçin Uygulamalı Bir Eğitim",
      "objectives": [
        "Kodlama dünyasına merhaba diyeeceksiniz.",
        "C# programlama dili ile sıfırdan orta seviyeye uygulamalar geliştirebileceksiniz",
        "SQL veri tabanı dili SQL'de kolayca sorgular yazabileceksiniz.",
        "Uygulamalı Örnekler ile Projeler Geliştirebileceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "Visual Studio Kurulumu",
          "SQL Kurulumu"
        ],
        "Temel Yazdırma Komutları ve Değişkenler": [
          "Giriş",
          "Console Ekranına Genel Bakış",
          "Console Write ve Writeline Komutları",
          "String Değişkenler",
          "Int değişkenler",
          "Klavyeden Veri Girişleri",
          "Klavyeden Sayısal Veri Girişleri",
          "Double Değişkenler",
          "Char Değişkenler"
        ],
        "Karar Yapıları": [
          "Karar Yapıları",
          "Operatörler",
          "Karar Yapıları Örnekleri",
          "Switch Case"
        ],
        "Döngüler": [
          "For Döngüsü",
          "Döngülerde Karar Yapısı Kullanımı",
          "While Döngüsü"
        ],
        "Diziler": [
          "Diziler",
          "Foreach Döngüsü"
        ],
        "Metotlar": [
          "Metotlar",
          "Metotlarda Parametre Kullanımı",
          "Geriye Değer Döndüren Metotlar"
        ],
        "Sınıf Yapısı": [
          "Sınıflar",
          "Sınıflar ve Metotlar"
        ],
        "SQL Veri Tabanı": [
          "Veri tabanı ve tablolar",
          "SQL Veri Türleri",
          "Select Sorguları",
          "Insert Sorgusu",
          "Delete ve Update Sorguları",
          "SQL'de İlişkiler",
          "Count Avg Sum Komutları",
          "Alt Sorgular"
        ],
        "C# ile SQL İşlemleri": [
          "C# ile SQL İşlemleri Giriş",
          "Verilerin Listelenmesi",
          "C# ile SQL'e Veri Ekleme",
          "Silme ve Güncelleme İşlemleri",
          "Ekleme İşleminde Parametre Kullanımı",
          "Arama İşlemi",
          "İstatistikleri Console'da gösterme",
          "Gruplandırma",
          "inner join kullanımı",
          "inner join 2",
          "Prosedürler"
        ],
        "Entity Framework": [
          "Entity Framework DbFirst",
          "Entity Framework ile Listeleme",
          "Entity Framework ile Ekleme",
          "Update Model From Database",
          "Entity Framework Silme",
          "Entity Framework Update",
          "Entity Framework Where",
          "Count Avg Sum",
          "Alt Sorgu"
        ]
      },
      "requirements": [
        "Programlama deneyimine ihtiyacınız yok, her şeyi sıfırdan öğreneceksiniz"
      ],
      "description": "Uzun süredir yayınlamayı planladığım bir kursu daha canlıya aldım. Bu kursta amacım hiçbir programlama dili hakkında bilgisi olmayan birinin sıfırdan orta seviye konuları öğrenecek seviyeye ulaşabilmesidir. Müfredatı tamamen C# console üzerinden anlattım. Değişkenler, karar yapıları, döngüler, diziler gibi temel syntax konularıyla başlayıp bu konular bittikten sonra SQL veri tabanıyla çalışmaya başladık. SQL veri tabanında ekleme, silme, güncelleme ve listeleme işlemlerinden sonra ilişkili tablolar, birleştirme işlemleri, prosedürler gibi konulara yer verdik. Yaklaşık 100++ dersten oluşan ve 10 saatlik bir içeriğe sahip müfredatımızı tamamladığınız zaman ciddi bir temel atmış olacaksınız.\nMüfredat boyunca sorularınız olursa bir mesaj uzakta olduğumu unutmayın. Atılan mesajlara 24 saat içinde 2 kez dönüyoruz. Umarım sizler için faydalı bir seri olur. İstikrarlı bir çalışma ile çok güzel işler yapacağınızı aklınızdan çıkarmayın.\nÖzellikle yaz aylarında günde en az 4 saatinizi kendinizi geliştirmeye ayırın, zaten günde 4 saat zaman ayırıp bu 4 saatlik kısımda 1-1.5 saatlik video izleyip uygularsanız müfredatı 1 hafta gibi kısa bir sürede kolaylıkla tamamlayacağınıza şüphem yok. Şimdiden başarılar diliyorum :)\nKonu başlıklarını sıralayacak olursak;\nYazdırma komutları\nDeğişkenler\nKarar Yapıları\nOperatörler\nDöngüler\nDiziler\nMetotlar\nSınıflar\nKalıtım\nKapsülleme\nN Katmanlı Mimari\nEntity Framework\nDbFirst\nCode First\nSQL\nVeri tabanı ve Tablolar\nVeri Türleri\nİlişkiler\nBirleştirmeler\nŞartlı Sorgulamalar\nAlt Sorgular\nProsedürler\nN Katmanlı Proje Örneği\nFluent Validation\nRandom\nMetin Belgesi İşlemleri\nAritmetik Fonskiyonlar\nAlfabetik Fonskiyonlar\nXml İle Webden Veri Çekme\nÖrnek Proje\nKonularımızı bu şekilde sıralayabilirim. Sizlerden gelecek talebe göre müfredata eklemeler yapacağım. Derste görüşmek dileğiyle :)",
      "target_audience": [
        "Öğrenmek isteyen herkes"
      ]
    },
    {
      "title": "Modern R Programlama Eğitimi",
      "url": "https://www.udemy.com/course/r-programlama/",
      "bio": "R programlama dilini veri bilimi, makine öğrenmesi ve istatistik için profesyonel olarak öğrenin!",
      "objectives": [
        "Modern yaklaşımlar ile R konusundaki en güncel ve geniş bilgiye sahibi olacaksınız.",
        "Büyük veri ile R'ın nasıl birlikte kullanılacağını öğreneceksiniz.",
        "Fonksiyonel programlama konusunda bilgi sahibi olacaksınız.",
        "R ile interaktif web uygulamaları geliştirebileceksiniz.",
        "R ile kitap ya da blog yazabileceksiniz.",
        "R'da notebook'lar ile çalışabilecek ve sunum dosyaları oluşturabileceksiniz.",
        "Veri manipülasyonu ve veri görselleştirme konularında balık tutmayı öğreneceksiniz.",
        "Bu yazının bir pipo olmadığını göreceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Öğrenme konusunda istekli olmak",
        "Programlama konusuna meraklı olmak"
      ],
      "description": "Büyük veri, makine öğrenmesi, istatistik ve veri bilimi alanında alet çantanızda bulunması gereken en önemli araçlardan birisi olan R'ı en yeni teknolojiler ve yaklaşımlar ile öğreneceksiniz.\nKurs sıfırdan ileri seviyeye gelebilecek şekilde konumlandırılmıştır. Kurs süresince ilgili konular çok basit ve anlaşılır bir dil ile anlatılmış olup her bir yaklaşım nedenleri ile ele alınmıştır.\nKurs kapsamında klasik R programlama yaklaşımlarını öğrendikten sonra veri tipleri, bilimsel raporlama, fonksiyonel programlama, metin işleme, tarih değişkenleri ile başa çıkma, veri manipülasyonu ve veri görselleştirme konularında bilgi sahibi olacaksınız. Bunlarla birlikte doğru kod yazım stili rehberi ile kod yazma konusunda dünya standartlarında işler çıkarabileceksiniz. Blogdown ile blog oluşturma ve Shiny ile interaktif web uygulamları geliştirebilmek için gerekli olan teknik bilgiyi edineceksiniz. Veri tabanları ile nasıl çalışabileceğinizi ve büyük veri ortamları ile R'ı nasıl birlikte kullanabileceğinizi öğreneceksiniz.\n\n\nKurs ile ilgili bazı kullanıcı yorumlar:\n\n\nDidem Sübar Özdemir:\nBen hayatında ilk defa R kullanmaya başlayan ve okul geçmişinde matematik olmayan bir kullanıcı olarak bu kurs ile R nedir, neler yapabilir, hangi veri tabanlari ile konusur gibi bir çok konuda artık bilgim sahibi oldum. Kurs sıfırdan başlayanlar için dahi son derece anlaşılır ve kolay. Derslerin süresi ve içeriği çok uygun. Bundan sonraki eğitimleri de alarak ilerlemeyi planlıyorum. Teşekkürler.\n\n\nBuğra Polat:\nÖncelikle kursun müfredatı çok başarılı. Diğer kursları da almış biri olarak bu platformdaki en iyi ve planlı Türkçe kaynak olduğunu düşünüyorum. R üzerindeki popüler kütüphaneler ile uygulama yapmak yerine en yeni yaklaşımları,veri tiplerini, karşılaşılacak problemleri çözebileceğimiz yapıyı gayet anlaşılır uygulamalarla anlatmayı tercih etmiş. Yani Vahit hocam oluşturacağı yapıya çok sağlam bir temel hazırlamış resmen .Keşifçi Veri Analizi eğitimini merakla bekliyorum.Veri görselleştirme bölümünde kategorik ve sürekli değişken ayrımına değinmesi nokta atış olmuş.Enerjisi yüksek insanı sıkmıyor. Kendisine pek çok şey danıştım gayet içten birisi.\n\n\nSinan Uçmaz:\nBir insan bir konuda anca, bu kadar tecrübeli ve bilgili olabilir.Öğretirken bizimle tekrar öğreniyormuş gibi bir anlatıma sahip,eğlenceli ders anlatımı mükemmel bir eğitmen kendisi.Eğer yazılımdan nefret ediyorsanız. M.V.Keskin hocayla tanışmamışsınız demektir.\n\n\nFurkan Tokaç:\nGerek anlatımı, gerek derin bilgisi ile beni kendisine hayran bırakan bir eğitmen. Bu değerli eğitim altın niteliğinde! Konuların ayrıntılı anlatımı ile herhangi bir alanda veri analizi gereksinimi duyan herkesin ihtiyacını karşılamanın çok üstünde bir donanım kazandıracak bir ders serisi olmuş. Emeğine sağlık güzel insan.\n\n\nA.Faruk Kılıç:\nUdemy'deki en ayrıntılı R eğitimi diyebilirim. Özellikle R Markdown, bookdown gibi paketlerin anlatılması çok çok iyi diğer R eğitimlerinde bu kısımlar biraz eksik kalıyor. Ayrıca kod yazım stili rehberini anlatan bir eğitici daha önce görmedim kendi adıma. Ben beğendim, ayrıntılı, akıcı ve bilgilendirici bir eğitim. Pişman olmayacağınızı düşünüyorum, R'da kendini geliştirmek isteyenler için mutlaka alınmalı.",
      "target_audience": [
        "Sıfırdan orta-ileri düzeye gelecek şekilde R programlamayı öğrenmek isteyenler.",
        "R programını modern yaklaşımlar ile öğrenmek isteyenler.",
        "Özellikle büyük veri, makine öğrenmesi ve veri bilimi alanlarına ilgi duyan herkes."
      ]
    },
    {
      "title": "SAP ABAP für Anfänger 4: Das Data Dictionary",
      "url": "https://www.udemy.com/course/sap-abap-kompendium-teil-4/",
      "bio": "Teil 4 der Kursreihe zum lernen von ABAP von Anfang an. Lernen Sie weitere wichtige Aspekte der Sprache in der Praxis!",
      "objectives": [
        "Erste ABAP Programme professionell selbst erstellen",
        "Erweitern des eigenen SAP Skillsets",
        "Einen Job im SAP Umfeld bekommen",
        "Erweiterte, informationshaltige und interessante Videolektionen",
        "Spaß am Programmieren mit ABAP haben"
      ],
      "course_content": {},
      "requirements": [
        "Für Neulinge der Serie: Durcharbeiten der ersten drei Teile der Kursreihe, die Inhalte von dort werden als bekannt vorausgesetzt",
        "Am besten einen Zugang zu einem SAP System besitzen (Ideal: EhP 7, aber nicht zwingend notwendig)",
        "Falls kein Zugang zu einem SAP System besteht, ist der Kurs dennoch hervorragend dafür geeignet, die Basics von SAP ABAP zu lernen und zu verstehen",
        "Sie benötigen eine Rechnung für Ihren Kurs? Unter dem folgenden Link können sich deutsche und österreichische Teilnehmer eine Rechnungsvorlage herunterladen und ausfüllen (https://support.udemy.com/hc/de/articles/229233307)"
      ],
      "description": "SAP ABAP ist die bekannte Enterprise-Programmiersprache, die von den größten Unternehmen zum  Betrieb ihrer Business-Systeme eingesetzt wird.\nIn diesem vierten Teil der Kursreihe des SAP ABAP-Kompendiums vermittle ich dir Schritt für Schritt die Grundlagen und essentiellen Fähigkeiten, die du  benötigst, um ABAP zu verstehen und anzuwenden.\nAuch während dieses Kurses kannst du erneut deine eigenen ABAP-Programme schreiben und testen.\nDer Kurs ist ideal für Einsteiger. Er basiert auf den Inhalten des ersten, zweiten und dritten Teils und führt diese konsequent weiter in die Tiefe, damit du  sicher  verstehst, wie du am besten deine eigenen SAP-Programme implementieren  kannst.\nDie in Teil 1, 2 und 3 vermittelten Inhalte setze ich in diesem Kurs als bekannt voraus. Wir werden uns nach und nach an weitere wichtige Schlüsselaspekte der Programmiersprache herantasten, wie zum Beispiel:\nDas DATA Dictionary\nGlobale Elemente des DDIC\nDatenbanktabellen in SAP\nOPEN SQL - Die Sprache zum auslesen und manipulieren von Datenbanktabellen\nDu wirst mir dabei zusehen können, wie ich die Befehle, die ich erkläre, selbst anwende und ich werde dich anleiten, deinen eigenen Code  zu schreiben und zu modifizieren.  Du bekommst das Wissen auf  eine Art und Weise vermittelt, dass du garantiert die grundlegenden  Konzepte verstehen und anwenden können wirst! Außerdem werden wir uns  in diesem Kurs auf die Praxis fokussieren, so dass du dich nicht ewig  mit Theorie herumquälen musst, sondern die Sprache in einem absolut  praktikablen und leicht verständlichen Ansatz lernen wirst und mit jeder  Kurseinheit tiefer in die Materie einsteigst.\nEgal ob du neu in der Programmierung bist, oder nur neu im Bereich ABAP: Diese Kursreihe ist dein Weg zur schnellen, professionellen  ABAP-Softwareentwicklung im Businessumfeld!\nDie meisten ABAP-Kurse kosten tausende von Euros und kratzen gerade einmal an der Oberfläche. Meist darfst du dich erst einmal durch  tausende langweiliger PDF-Seiten lesen und hast dann immer noch keine  praktische Erfahrung. Der Zeitaufwand kann locker über 50 Tage im  Vollzeitstudium betragen! Nicht so mit diesem Kompendium! Ich bin  erfahrener SAP Ausbilder, Coach und Trainer, der über 5 Jahre Erfahrung  in der Beratung und Implementierung mit SAP ABAP hat. Ich vermittle dir  State-of-the-art ABAP-Knowhow aus dem aktuellsten Patch von SAP!",
      "target_audience": [
        "Teilnehmer von Teil 1-3 der Kursreihe",
        "Leute die speziell an den Themen dieses Kurses interessiert sind",
        "SAP Basis Consultants die ihr Wissen erweitern wollen",
        "SAP Benutzer, die ihr Wissen um technische Skills erweitern wollen",
        "SAP BW Consultants",
        "Jeder der etwas dazulernen möchte!"
      ]
    },
    {
      "title": "Python e MySQL para Iniciantes e Estudantes",
      "url": "https://www.udemy.com/course/mysql-para-iniciantes/",
      "bio": "Aprenda linguagem de programação Python e banco de dados MySQL do zero e desenvolva seus primeiros softwares.",
      "objectives": [
        "Linguagem de Programação Python para Iniciantes",
        "Linguagem SQL para Desenvolvimento de Bancos de Dados - Iniciantes",
        "Criar um sistema completo de CRUD - Criação, Leitura, Atualização e Remoção de Dados",
        "Criar o seu primeiro Software com Python e Gerenciamento de Dados com MySQL na Prática",
        "Desenvolver Interface Gráfica, Base de Dados MySQL e Programação Python do Zero ao Primeiro Software"
      ],
      "course_content": {
        "Python Para Iniciantes": [
          "Instalando Recursos",
          "Utilizando Print em Python (Impressão em Tela)",
          "Variáveis em Python",
          "Variáveis e Concatenação na Prática",
          "Primeiros Cálculos em Python",
          "Como Resolver Dízimas",
          "Captura de Teclado - Input em Python",
          "Exemplo Completo - Programando com Python na Prática",
          "Estrutura IF/ELSE",
          "Estrutura IF/ELSE com And e Or",
          "Estrutura de Repetição",
          "Criando Exemplo Prático de Repetição While",
          "Questionário"
        ],
        "Interface Gráfica de Usuário": [
          "Como Instalar Recursos Para Interface Gráfica",
          "Design de Interface na Prática",
          "Identificando Campos na Interface Gráfica",
          "Vinculando Interface Gráfica ao Código",
          "Funções em Python",
          "Calculando Resultados do Programa",
          "Exibindo Resultados do Programa Python",
          "Adicionando Recursos de Respostas ao Software",
          "Adicionando Resultados na Interface Gráfica"
        ],
        "MySQL - Desenvolvimento de Banco de Dados": [
          "Sobre Bancos de Dados",
          "Estrutura Básica de um Banco de Dados",
          "Tipos de Dados Utilizados em SQL",
          "Linguagem SQL na Prática",
          "Utilizando Insert Into",
          "DDL e DML",
          "Update",
          "Atualizando o Insert Into",
          "Atualizando Dados com Update",
          "Select com a Cláusula Where",
          "Utilizando o Delete para Remoção de Dados",
          "Considerações finais de SQL"
        ],
        "Projeto Final - Desenvolvendo Software com Python e MySQL na Prática": [
          "Sobre o Projeto Final",
          "Objetivo do Software",
          "Interface Gráfica - Formulario",
          "Interface Gráfica - Relatório",
          "Interface Gráfica - Editar",
          "Interface Gráfica - Botões",
          "Cores na Interface",
          "Nomeando Botões",
          "Exibindo a Tela Formulário em Python",
          "Criando Base de Dados",
          "Conectando Banco de Dados SQL no Python",
          "Captura de Informações do Formulário",
          "Cursor e Commit em Python",
          "Finalizando a Inserção de Dados",
          "Frase de Confirmação",
          "Criando Função de Navegação entre Telas",
          "Leitura de Dados",
          "Leitura de Linhas e Colunas",
          "Inserindo Dados na Tabela com Laço For",
          "Update no Software",
          "Identificando Dados na Tabela",
          "Exibindo a Tela de Edição",
          "Arrays",
          "Utilizando Variavel Global",
          "Finalizando o Update",
          "Ajustes Finais no Update",
          "Delete",
          "Criando o Executável do Programa Python"
        ]
      },
      "requirements": [
        "Computador Capaz de Suportar a Instalação de Python, VsCode e Workbench"
      ],
      "description": "Programação Python e Banco de Dados MySQL\n\n\nAprenda neste curso completo como desenvolver programas de computador com as tecnologias Python e MySQL em linguagem simples e didática, tudo explicado do zero.\n\n\nNeste curso você terá além dos conceitos básicos das linguagens, exemplos reais e de fato aplicáveis na área de desenvolvimento de softwares.\n\n\nSe você é um(a) estudante da área de Tecnologia este curso é ideal para você pois vamos abordar o desenvolvimento do software com base em um CRUD.\nCRUD - Criação, Leitura, Alteração e Remoção de dados, utilizado em praticamente todo projeto de software.\n\n\nLinguagem simples e de fácil entendimento neste curso pensado totalmente para iniciantes e estudantes de Python para o desenvolvimento de Software desktop.\n\n\nMySQL - Desenvolvimento de Bancos de Dados com Base na Linguagem SQL para Iniciantes e Estudantes.\n\n\nO desenvolvimento de bancos de dados é um dos principais pontos hoje na área de tecnologia.\n\n\nNeste curso te apresento o MySQL que é uma plataforma gratuita para desenvolvimento em SQL  que por sua vez é a linguagem padrão utilizada no desenvolvimento de bancos de dados.\n\n\nSua integração é possível com diversos tipos de linguagens de programação e neste curso será integrado ao Python, atualmente a linguagem mais utilizada e requisitada do mercado de desenvolvimento.\n\n\nUtilizamos aqui exemplos simples e práticos que levarão o aluno ao desenvolvimento de seu primeiro banco de dados e ao entendimento inicial e básico da linguagem SQL e logo após teremos o desenvolvimento de um Software completo (como dito antes) integrando o Banco MySQL local ao software Python.\n\n\nConteúdo Programático:\n\n\nPython - Conceitos Básicos da Linguagem\nInterface Gráfica de Usuário - Aprenda como desenvolver as telas para seu software e como integrá-las a linguagem Python\nMySQL - Como iniciar o desenvolvimento de um banco de dados\nCRUD - Aprenda como criar, consultar, alterar e apagar dados de um banco MySQL\nDesenvolvimento de Software - Aprenda como desenvolver um software completo em Python com Banco de Dados MySQL e dê o primeiro passo em sua carreira de desenvolvedor(a) de softwares\n\n\nNeste curso vamos desenvolver um software completo que poderá fazer parte de seu currículo/portfólio e ser apresentado em futuras vagas de trabalho.\n\n\nSe você é um estudante ou um iniciante na área de tecnologia, não perca mais tempo e inscreva - se agora mesmo neste curso completo de desenvolvimento!\n\n\nTe vejo no curso, um forte abraço e até lá.",
      "target_audience": [
        "Estudantes de TI (Cursos Técnicos ou Superiores) que Desejam Aprimorar seu Aprendizado",
        "Iniciantes na área de Programação de Computadores e Desenvolvimento de Bancos de Dados",
        "Curiosos e Entusiastas na área de Informática Queiram Conhecer Bancos de Dados",
        "Estudantes das Áreas de Tecnologia que Desejam Desenvolver um Software Completo",
        "Pessoas que Desejam Aprender o Desenvolvimento de Interface Gráfica, Bancos de Dados MySQL e Programação Python do Zero"
      ]
    },
    {
      "title": "C# İle Sıfırdan Barkodlu Satış Programı Yapımı",
      "url": "https://www.udemy.com/course/c-ile-sifirdan-barkodlu-satis-program-yapimi/",
      "bio": "Visual Studio C#, SqlLocalDb, EntityFramework, Database First, Rdlc Report ile Satışa Hazır Barkodlu Satış Programı",
      "objectives": [
        "C# İle Sıfırdan Barkodlu Satış Programı geliştirme",
        "Visual Studio'da Nesneleri Etkin Kullanma",
        "C#'da Form Tasarımı",
        "C# Özel Nesneler Oluşturma (textbox, button, label vb.)",
        "C# Private - Public Metod Kullanımı",
        "C# Class Kullanımı",
        "Entity Framework",
        "SqlLocalDb Veritabanı Oluşturma/Kullanma",
        "DateBase First Yöntemi İle Model Oluşturma",
        "Veritabanı İçin Tablolar Oluşturma/Kullanma",
        "Lambda Fonksiyonlarını Kullanma (Veritabanı tablo işlemleri için)",
        "Veritabanı Backup/Restore",
        "Rldc Report Kullanımı",
        "C# Termal Yazıcıdan Çıktı Alma (Bilgi Fişi)",
        "C# İle Temel-Orta ve İleri Düzey Kodlama",
        "Projenin Setup Haline Getirilmesi",
        "Toplu Ürün Scripti Oluşturma",
        "Local Ağda Çok Bilgisayarda Kullanma",
        "Lisanslama İşlemi (Demo ve Yıllık Kullanım)"
      ],
      "course_content": {
        "Barkodlu Satış Programı Uygulaması": [
          "Proje Oluşturma - Satış Formu Tasarım 1",
          "Satış From Tasarım 2 - Veritabanı ve Model Oluşturma",
          "Barkod Etiketi Nedir?",
          "Kayıtlı Ürünü Listeye Getirme İşlemleri",
          "Hızlı Ürün Ekleme İşlemleri 1",
          "Hızlı Ürün Ekleme İşlemleri 2",
          "Numaratör Bölümü İşlemleri",
          "Barkodsuz Ürün - İade - Temizle İşlemleri",
          "Satış İşlemi (Nakit ve Kart)",
          "Satış İşlemi (Nakit-Kart) ve Numeric Text Kutuları",
          "İşlem Bekletme Fonksiyonu",
          "Özel Nesne Oluşturma (Button, Textbox, Label vb)",
          "Ürün Giriş Form Tasarımı",
          "Ürün Giriş Ekleme - Güncelleme İşlemleri",
          "Ürün Grubu ve Barkod Oluşturma İşlemleri",
          "Ürün Grubu Silme - Ürün Silme İşlemleri",
          "Stok Formu Tasarımı",
          "Stok Formu Kodlama İşlemleri - 1",
          "Stok Formu Kodlama İşlemleri - 2",
          "Rapor Formu Tasarımı",
          "Rapor Formu Kodlama İşlemleri",
          "Rapor Formu Kodlama - Filtreleme İşlemleri",
          "Rapor Formu Gelir-Gider İşlemleri",
          "Rapor Formu - Detay Gösterme İşlemleri",
          "Gramajlı Ürün Ekleme İşlemleri",
          "Genel Rapor İçin Rdlc Report Tasarım",
          "Genel Rapor İçin Rdlc Report Kullanma",
          "Stok Raporu İçin Rdlc Report",
          "Stok Hareket İzleme İçin Rdlc Report",
          "Başlangıç Formu Yapımı",
          "Fiyat Güncelleme Fonksiyonu",
          "Kullanıcı Formu İşlemleri",
          "Termal Yazıcı Aktif-Pasif Yapma",
          "Kart Komisyon ve Terazi Ön Ek Fonksiyonu",
          "İşyeri Bilgi Formu İşlemleri",
          "Termal Yazıcı İşlemleri 1",
          "Termal Yazıcı 2 ve Veritabanı Backup İşlemleri",
          "Veritabanı Restore (Yedekten Geri Yükleme) İşlemi",
          "Login Formu Tasarım/Kodlama",
          "Toplu Ürün Ekleme İşlemleri 1",
          "Toplu Ürün Ekleme İşlemleri 2",
          "Projenin Setup Haline Getirilmesi",
          "Local Ağ İçinde Birden Fazla Bilgisayarda Kullanım 1",
          "Local Ağ İçinde Birden Fazla Bilgisayarda Kullanım 2",
          "Local Ağ İçinde Birden Fazla Bilgisayarda Kullanım 3",
          "Local Ağ İçinde Birden Fazla Bilgisayarda Kullanım 4"
        ],
        "Lisanslama (Demo-Yıllık Kullanım)": [
          "Lisans Ders 1",
          "Lisans Ders 2",
          "Lisans Ders 3",
          "Lisans Ders 4",
          "Lisans Ders 5",
          "Lisans Ders 6",
          "Lisans Ders 7",
          "Lisans Ders 8",
          "Lisans Ders 9"
        ],
        "Hatalar / Düzeltmeler": [
          "Kdv Tutarı Hesap Hatası"
        ]
      },
      "requirements": [
        "C# Temel Seviyede Bilgi"
      ],
      "description": "C# ile temel düzeyde bilgi sahibi olduğunuzu düşünüyor ve ne yapmanız gerektiğine karar veremiyorsanız bu kurs tam size göre.\nHangi programlama dili olursa olsun belirli bir altyapı sonrası eğer proje üretmiyorsanız, o alanda ilerlemeniz mümkün değildir.\nProje çalışmanızı yaparak hem kendinizi geliştireceksiniz, hem de para kazanmanın kapılarını aralayacaksınız. Bu proje belki de sizin sektörde para kazanacağınız  ilk işiniz olacak, başka alanlar için program yazma yeteneğiniz gelişecek.\nKursumuzda sıfırdan başlayarak gerçek piyasada kullanılabilecek pratik, etkili ve geliştirilmeye açık bir proje yapacağız.\nHiç bir adımı atlamadan adım adım ilerleyeceğiz. Hatalarla karşılaşacağız hataları düzelteceğiz, sonucu elde etmek için en mantıklı yöntemleri deneyeceğiz.\nŞunu da söylemeden edemeyeceğim, siz bir projeyi 2 defa yaparsanız 2. yapışınızda daha az ve daha performanslı kod yazarsınız. Dolayısıyla mümkün olduğu kadar proje üretmenizi tavsiye ederim. Her seferinde farklı mantık, algoritma, yaklaşım...\nNeler yapacağız?\nVisual Studio'da Nesneleri Etkin Kullanma\nC#'da Form Tasarımı\nC# Özel Nesneler Oluşturma (textbox, button, label vb.)\nC# Private - Public Metod Kullanımı\nC# Class Oluşturma/Kullanma\nEntity Framework\nSqlLocalDb Veritabanı Oluşturma/Kullanma\nDateBase First Yönetemi İle Model Oluşturma\nVeritabanı İçin Tablolar Oluşturma/Kullanma\nLambda Fonksiyonlarını Kullanma (Veritabanı tablo işlemleri için)\nVeritabanı Backup/Restore\nRldc Report Kullanımı\nC# Termal Yazıcıdan Çıktı Alma (Bilgi Fişi)\nC# İle Temel-Orta ve İleri Düzey Kodlama\nToplu Ürün Ekleme Sql Scripti Oluşturma\nLokal Ağda Birden Fazla Bilgisayarda Programın Çalıştırılması (Sql Server Üzerinden)\nLisanslama (Demo-Yıllık Kullanım) İşlemleri\nProjenin Setup Haline Getirilmesi\nHadi kolay gelsin hepinize",
      "target_audience": [
        "Masaüstü proje hazırlamak isteyen başlangıç düzeyindeki C# geliştiricileri"
      ]
    },
    {
      "title": "Python 3 - Curso Completo do Básico ao Avançado",
      "url": "https://www.udemy.com/course/curso-python-3-completo/",
      "bio": "Aprenda Python - Algoritmos, estruturas de dados, fundamentos, orientação a objeto, programação funcional e muito mais",
      "objectives": [
        "Criação programas em Python",
        "Uso de Python como linguagem para criação de scripts",
        "Programação orientada a objetos",
        "Programação funcional em Python",
        "A ser um Desenvolvedor Completo em Python"
      ],
      "course_content": {
        "Conhecendo o Curso de Python": [
          "Visão Geral do Curso de Python",
          "Apostila do Curso Python",
          "Os Instrutores do Curso de Python",
          "Links: Github e Apostila",
          "Usando o terminal",
          "Terminais"
        ],
        "Introdução Python": [
          "O que é Python",
          "Filosofia da Linguagem ( Zen of Python )",
          "Guia de Estilo de Código (PEP 8)",
          "Suporte via Fórum",
          "Algoritmo",
          "Estruturas de Dados"
        ],
        "Configuração do Ambiente Python": [
          "Python 2 vs Python 3",
          "Aviso importante aos usuários de Windows",
          "Aviso sobre a Instalação Python Preview",
          "Aviso sobre criação de caderno Python no Jupyter Notebook",
          "Windows: Instalação Python",
          "Windows: Instalação Anaconda",
          "Linux: Instalação do Python",
          "Linux: Instalação Anaconda",
          "MacOS: Instalação do Python",
          "MacOS: Instalação Anaconda"
        ],
        "Executando Código Python": [
          "Executando Código no Interpretador",
          "Executando Código no Jupyter",
          "Executando Código no VSCode"
        ],
        "Fundamentos Python": [
          "Primeiro Programa",
          "Tipos Básicos",
          "Variáveis",
          "Comentários",
          "Operadores Aritméticos",
          "Desafio Operadores Aritméticos",
          "Desafio Operadores Aritméticos (Resp)",
          "Operadores Relacionais",
          "Operadores de Atribuição",
          "Operadores Lógicos",
          "Desafio Operadores Lógicos",
          "Desafio Operadores Lógicos (Resp)",
          "Operadores Unários",
          "Operadores Ternários",
          "Mais Operadores (Membro/Identidade)",
          "Builtins",
          "Conversão de Tipos",
          "Coerção Automática",
          "Números #01",
          "Números #02",
          "Strings #01",
          "Strings #02",
          "Strings #03",
          "Strings #04",
          "Listas #01",
          "Listas #02",
          "Listas #03",
          "Tuplas",
          "Dicionários #01",
          "Dicionários #02",
          "Conjuntos",
          "Interpolação"
        ],
        "Primeiro Projeto em Python": [
          "Desafio Versão Inicial",
          "Desafio Versão Inicial (Resp)",
          "Encoding",
          "Shebang no Ambiente Windows",
          "Executar código Python no terminal",
          "Shebang",
          "Importando Módulo Math",
          "Obtendo Dados do Usuário",
          "Um Pouco Sobre Módulo",
          "Testando Se é o Módulo Principal",
          "Criando Uma Função Sem Retorno",
          "Adicionando Retorno à Função",
          "Obtendo Argumento Via Terminal",
          "Validando Existência do Argumento",
          "Desafio Nome do Script (Resp)",
          "Melhorando o Help",
          "Saindo com Erro",
          "Validando Argumento Numérico",
          "Melhorando a Mensagem de Erro"
        ],
        "Estruturas de Controle": [
          "Desafio IF ELSE #01",
          "Desafio IF ELSE #01 (Resp)",
          "Desafio IF ELSE #02",
          "WHILE #01",
          "FOR #01",
          "FOR #02",
          "FOR #03",
          "Break/Continue",
          "FOR #04",
          "Simulando SWITCH #01",
          "Simulando SWITCH #02",
          "Estrutura Match - Case",
          "FOR Sem ELSE",
          "FOR Com ELSE",
          "Desafio Usando SET"
        ],
        "Segundo Projeto em Python": [
          "Usando While Infinito",
          "Adicionando Limite Para While",
          "Usando Packing Para Trocar Variáveis",
          "Substituindo Variáveis Por Lista",
          "Desafio Sum",
          "Desafio Sum (Resp)",
          "While Com Break",
          "Substituindo While Por For",
          "Recursividade",
          "Versão Recursiva #01",
          "Versão Recursiva #02"
        ],
        "Manipulação de Arquivos": [
          "Criando Arquivo CSV",
          "Leitura Básica",
          "Leitura Stream #01",
          "Leitura Stream #02",
          "Usando Try Finally",
          "Leitura com Bloco WITH",
          "Escrevendo Arquivo",
          "Leitura com Módulo CSV",
          "Material de Apoio para Desafio CSV do IBGE",
          "Desafio CSV do IBGE",
          "Desafio CSV do IBGE (Resp)"
        ],
        "Comprehension": [
          "List Comprehension #01",
          "List Comprehension #02",
          "Generators",
          "Generators com FOR",
          "Dict Comprehension",
          "Simulando SWITCH #03"
        ]
      },
      "requirements": [
        "Noções de lógica de programação"
      ],
      "description": "Python é uma das linguagens que mais cresce atualmente, seu enfoque na clareza do código, sua simplicidade, a programação mais dinâmica desde seus alicerces, suporte a diversos paradigmas de programação e uma enorme biblioteca padrão, tudo isso permite que no geral os seus objetivos sejam alcançados mais rapidamente e de uma maneira mais fácil de manter.\nDevido a sua simplicidade, Python tem sido uma das linguagens mais utilizados em universidades mundo afora (infelizmente temos poucos casos no Brasil), Python também é muito utilizado em startups e por cientistas em geral, já que não exige uma formação mais abrangente em tecnologia da informação dos mesmos. Apesar de não haver estatísticas oficiais, Python parece ser a linguagem mais utilizado no mundo por não-programadores, o que não quer dizer que programadores profissionais não podem colher inúmeros benefícios também.\nE apesar de não ficar claro inicialmente, Python também tem bastante humor, o prazer em programar sempre é levado em conta. O nome teve a sua origem no grupo humorístico britânico Monty Python , criador do programa Monty Python’s Flying Circus, embora muitas pessoas façam associação com o réptil do mesmo nome, em toda a sua documentação há referências as esquetes deste grupo. Posteriormente a cobra começou a ser adotada como logo da linguagem.\nTe vejo no curso de Python !",
      "target_audience": [
        "Desenvolvedores em geral, mesmo iniciantes",
        "Desenvolvedores experientes em linguagens estáticas como Java ou C#, que queiram se aventurar por linguagens dinâmicas",
        "Cientistas buscando alguma automação no seus experimentos, Python tem uma curva de aprendizagem ideal para quem não vive de TI"
      ]
    },
    {
      "title": "Curso de Python",
      "url": "https://www.udemy.com/course/curso-de-python/",
      "bio": "Programando com Python",
      "objectives": [
        "O aluno saberá programar nessa excelente linguagem"
      ],
      "course_content": {
        "Iniciar aqui": [
          "Aula 01 - Introdução ao Curso",
          "Aula 02 - Instalando o Python",
          "Aula 03 - Iniciando com os primeiros comandos",
          "Aula 04 - Separadores e Concatenadores",
          "Aula 05 - Comentários e Anotações",
          "Aula 06 - Iniciando com variaveis",
          "Aula 07 - Cálculos com variaveis",
          "Aula 08 - Trabalhando com Input",
          "Aula 09 - Convertendo resultado em inteiro",
          "Aula 10 - Sistemas de cálculos",
          "Aula 11 - Comparadores e testes condicionais",
          "Aula 12 - Condicionais if e else",
          "Aula 13 - IF Composto",
          "Aula 14 - Trabalhando com Elif",
          "Aula 15 - Laços de Repetição",
          "Aula 16 - Laços de Repetição For",
          "Aula 17 - Comparadores End e Or",
          "Aula 18 - Variaveis do tipo float",
          "Aula 19 - Importando Módulos",
          "Aula 20 - Importando modulo randomico",
          "Aula 21 - Trabalhando com listas e Arrays",
          "Aula 22 - Arrays Multiplos",
          "Aula 23 - Desenvolvendo com Listas",
          "Aula 24 - Commando append para adicionar listas",
          "Aula 25 - Praticando listas e arrays",
          "Aula 26 - Praticando listas e arrays",
          "Aula 27 - Programa de Notas",
          "Aula 28 - Removendo itens da lista",
          "Aula 29 - Removendo itens da lista",
          "Aula 30 - Criando funções",
          "Aula 31 - Função com multiplos retornos",
          "Aula 32 - Função com multiplos argumentos",
          "Aula 33 - Variavel do tipo global",
          "Aula 34 - Sistema bancário",
          "Aula 35 - Sistema bancário",
          "Aula 36 - Sistema bancário",
          "Aula 37 - Sistema Bancário",
          "Aula 38 - Sistema bancário",
          "Aula 39 - Funções com Lambda",
          "Aula 40 - Break e Continue",
          "Aula 41 - Break e Continue",
          "Aula 42 - Parametro End nas Strings",
          "Aula 43 - Conversão para minusculas e comparadores",
          "Aula 44 - Comparando tamanho da chave",
          "Aula 45 - Verificando se existe caracteres especiais",
          "Aula 46 - Verificando minusculas e maiusculas",
          "Aula 47 - Finalizando o sistema",
          "Aula 48 - Testando o sistema",
          "Aula 49 - Abrindo e fechando arquivos",
          "Aula 50 - Criando arquivo de texto",
          "Aula 51 - Jogo da Forca",
          "Aula 52 - Jogo da forca - Verificando dados",
          "Aula 53 - Usando método StartWitch",
          "Aula 54 - Preparando os palpites das letras",
          "Aula 55 - Preparando os palpites das letras",
          "Aula 56 - Verificando se o usuário ganhou",
          "Aula 57 - Limitando os palpites",
          "Aula 58 - Finalizando programação do jogo",
          "Aula 59 - Fazendo ajustes no jogo",
          "Aula 60 - Testando o Jogo"
        ]
      },
      "requirements": [
        "Nenhum conhecimento prévio, todos os alunos poderão participar do curso"
      ],
      "description": "O curso de Python possui 60 aulas,\nneste curso o aluno aprenderá a linguagem Python.\nNele é mostrado como desenvolver usando os comandos e a sintaxe Python atualizada seguindo a documentação estipulada pelos criadores da linguagem.\nEsta é uma das linguagens que mais crescem no mundo, pois com Python é possível\ndesenvolver sistemas, jogos, aplicativos mobile e muito mais.\nAdquira já nosso curso e ingresse nessa nova linguagem.\nTorne-se um grande programador, acompanhe nossos cursos e comece já a desenvolver!!",
      "target_audience": [
        "Todos os alunos, pois nosso curso explica o passo a passo de como usar a linguagem Python, mostrando para o alunos como desenvolver com Python"
      ]
    },
    {
      "title": "C# TOTAL - Programador Experto en 28 días",
      "url": "https://www.udemy.com/course/masterclass-completa-de-c/",
      "bio": "Entrenamiento Profesional Avanzado de 4 semanas. Proyectos REALES. Desarrolla Juegos con Unity.",
      "objectives": [
        "Aprende los fundamentos de programación con C#.",
        "Aprende a usar variables, métodos, loops, condiciones",
        "Comprende completamente cómo funciona la OOP (Programación orientada a objetos) y cómo usarla.",
        "Crea hermosas GUI (interfaces gráficas de usuario) con WPF (Windows Presentation Foundation)",
        "Crea video juegos usando C# y Unity 3D Aprende a usar Bases de Datos con MS SQL Server y Linq",
        "Aprende a manejar y evitar errores de programación",
        "Trabaja con archivos de texto",
        "Aprende a utilizar Expresiones Lambda únicas"
      ],
      "course_content": {
        "DÍA 1 - Introducción a C# y VISUAL STUDIO": [
          "Introducción al Día 1",
          "Una Experiencia Genial",
          "¿Qué es lo Que Quieres Lograr?",
          "Instalación Visual Studio para Mac",
          "Instalando Visual Studio Community",
          "¡Nota Importante!",
          "Hola Mundo - Primer Programa",
          "Hola Mundo en una Mac",
          "Interfaz de Visual Studio",
          "Qué Hacer Si te Atascas",
          "Novedades de Visual Studio 2019",
          "Que Aprendiste en la Introducción",
          "Fin del Día 1"
        ],
        "DÍA 2 - TIPOS DE DATOS y VARIABLES": [
          "Introducción al Día 2",
          "Consejo Rápido",
          "Introducción a Variables",
          "Variables",
          "Resumen de Tipos de Datos",
          "Tipos de Datos",
          "Otros Tipos de Datos",
          "Tipos de Datos: Int, Float y Double",
          "Prácticas: Tipos de Datos Int",
          "Prácticas: Tipos de Datos Double",
          "Tipo de Datos String y Algunos de sus Métodos",
          "Prácticas: Tipos de Datos String 1",
          "Prácticas: Tipos de Datos String 2",
          "Tipos de Datos y Variables",
          "Estándares de Programación",
          "Estándares de Programación",
          "Tipos de Valor vs Tipos de Referencia",
          "Tipos de Valor vs Tipos de Referencia",
          "Clase Console y Algunos de sus Métodos",
          "Console",
          "Cambiar los Colores de la Consola",
          "Prácticas: Console y sus métodos 1",
          "Prácticas: Console y sus métodos 2",
          "Convenciones para Nombres y Estándares de Programación",
          "Prácticas: Convenciones y Estándares 1",
          "Prácticas: Convenciones y Estándares 2",
          "Conversiones Explícitas e Implícitas",
          "Prácticas: Conversiones 1",
          "Prácticas: Conversiones 2",
          "Hacer Parsing de String a Integer",
          "Prácticas: Parsing 1",
          "Prácticas: Parsing 2",
          "Algunos Métodos de String",
          "Métodos de String",
          "Desafío: String y sus Métodos 1",
          "Solución al Desafío \"String y sus Métodos 1\"",
          "Desafío: String y sus Métodos 2",
          "Solución al Desafío \"String y sus Métodos 2\"",
          "Desafío - Tipos de Datos y Variables",
          "Solución para el Desafío \"Tipos de Datos y Variables\"",
          "Constantes",
          "Prácticas: Constantes 1",
          "Prácticas: Constantes 2",
          "Tipos de Datos y Variables - Parte 2",
          "Hojas de Resumen de C#",
          "Soluciones a los Ejercicios Prácticos del Día 2",
          "Fin del Día 2"
        ],
        "DÍA 3 - MÉTODOS": [
          "Introducción al Día 3",
          "Métodos - Teoría",
          "Métodos - Teoría",
          "Métodos Void",
          "Prácticas: Métodos Void 1",
          "Prácticas: Métodos Void 2",
          "Métodos con Valores de Retorno y Parámetros",
          "Prácticas: Métodos con Valores de Retorno y Parámetros 1",
          "Prácticas: Métodos con Valores de Retorno y Parámetros 2",
          "Métodos",
          "Desafío - Métodos",
          "Solución para el Desafío \"Métodos\"",
          "Ingresos del Usuario",
          "Ingresos del Usuario",
          "Manejo de Errores con Try, Catch y Finally",
          "Prácticas: Manejo de Errores 1",
          "Prácticas: Manejo de Errores 2",
          "Operadores",
          "Prácticas: Operadores 1",
          "Prácticas: Operadores 2",
          "Operadores",
          "Soluciones a los Ejercicios Prácticos del Día 3",
          "Fin del Día 3"
        ],
        "DÍA 4 - TOMA DE DECISIONES": [
          "Introducción al Día 4",
          "Introducción a Toma de Decisiones en C#",
          "Prácticas: Toma de Decisiones 1",
          "Prácticas: Toma de Decisiones 2",
          "Introducción a TryParse",
          "TryParse",
          "If + Else If + Try Parse",
          "Prácticas: Else If y TryParse 1",
          "Prácticas: Else If y TryParse 2",
          "If Anidados",
          "Prácticas: If Anidados 1",
          "Prácticas: If Anidados 2",
          "Desafío - Declaraciones If",
          "Solución al Desafío \"Declaraciones If\"",
          "Declaración Switch",
          "Prácticas: Switch 1",
          "Prácticas: Switch 2",
          "Desafío - Declaraciones If 2",
          "Solución para el Desafío Declaraciones If 2",
          "Declaración If Mejorada - Operador Ternario",
          "Prácticas: If Mejorado 1",
          "Prácticas: If Mejorado 2",
          "Declaración If Mejorada - Desafío de Operador Ternario",
          "Declaración If Mejorada - Desafío de Operador Ternario - Solución",
          "Declaraciones If",
          "Soluciones a los Ejercicios Prácticos del Día 4",
          "Fin del Día 4"
        ],
        "DÍA 5 - LOOPS": [
          "Introducción al Día 5",
          "Lo Básico sobre Loops",
          "Loops",
          "Loop For",
          "Prácticas: Loop For 1",
          "Prácticas: Loop For 2",
          "Loop Do While",
          "Prácticas: Loop Do While 1",
          "Prácticas: Loop Do While 2",
          "Loop While",
          "Prácticas: Loop While 1",
          "Prácticas: Loop While 2",
          "Break y Continue",
          "Prácticas: Break y Continue 1",
          "Prácticas: Break y Continue 2",
          "Desafío - Loop Promedio",
          "Solución al Desafío Loop Promedio",
          "Loops",
          "Soluciones a los Ejercicios Prácticos del Día 5",
          "Fin del Día 5",
          "Hagamos que el Curso SIEMPRE Mejore"
        ],
        "DÍA 6 - OBJETOS": [
          "Introducción al Día 6",
          "Introducción a Clases y Objetos",
          "Clases y Objetos",
          "Nuestra Primera Clase Propia",
          "Prácticas: Clases 1",
          "Clases 2",
          "Usando Constructores",
          "Prácticas: Constructores 1",
          "Constructores 2",
          "Usando Múltiples Constructores",
          "Prácticas: Múltiples Constructores 1",
          "Prácticas: Múltiples Constructores 2",
          "Modificadores de Acceso",
          "Constructores y Miembros-Variables",
          "Propiedades",
          "Prácticas: Propiedades 1",
          "Prácticas: Propiedades 2",
          "Desafío - Propiedades",
          "Miembros y Finalizador/Destructor",
          "Miembros y Finalizador/Destructor",
          "Soluciones a los Ejercicios Prácticos del Día 6",
          "Fin del Día 6"
        ],
        "DÍA 7 - ARRAYS (parte I)": [
          "Introducción al Día 7",
          "Lo Básico de Arrays",
          "Lo Básico de Arrays",
          "Declarar e Inicializar Arrays - la Propiedad Length",
          "Prácticas: Arrays 1",
          "Prácticas: Arrays 2",
          "Loop Foreach",
          "Prácticas: Loops con Arrays 1",
          "Prácticas: Loops con Arrays 2",
          "Arrays Multi-Dimensionales",
          "Prácticas: Arrays Multi-Dimensionales 1",
          "Prácticas: Arrays Multi-Dimensionales 2",
          "Arrays",
          "Desafío - Ta Te Tí",
          "Soluciones a los Ejercicios Prácticos del Día 7",
          "Fin del Día 7"
        ],
        "DÍA 8 - ARRAYS (parte II)": [
          "Introducción al Día 8",
          "Arrays Irregulares",
          "Prácticas: Arrays Irregulares 1",
          "Prácticas: Arrays Irregulares 2",
          "Desafío - Arrays Irregulares",
          "Usando Arrays como Parámetros",
          "Prácticas: Arrays como parámetros 1",
          "Prácticas: Arrays como parámetros 2",
          "Por Qué puedes Cambiar un Array pasándolo como Variable",
          "ArrayLists",
          "Prácticas: ArrayLists 1",
          "Prácticas: ArrayLists 2",
          "Listas",
          "Listas",
          "Arraylists vs Listas vs Arrays",
          "Prácticas: Listas 1",
          "Prácticas: Listas 2",
          "Soluciones a los Ejercicios Prácticos del Día 8",
          "Fin del Día 8"
        ],
        "DÍA 9 - DEPURACIÓN": [
          "Introducción al Día 9",
          "Lo Básico sobre Depuración",
          "Depuración",
          "Variables Locales y Automáticos",
          "Variables y Depuración",
          "Depurar: Copiar Listas, y Resolver Errores",
          "Objetivos de Depurar",
          "Depurar: Pila de Llamadas Tirar Errores y Programación Defensiva",
          "Programación Defensiva y Pila de Llamadas",
          "Fin del Día 9"
        ],
        "DÍA 10 - HERENCIA": [
          "Introducción al Día 10",
          "Introducción a Herencia",
          "Introducción a Herencia",
          "Demostración de Herencia",
          "Prácticas: Herencia 1",
          "Prácticas: Herencia 2",
          "Desafío de Herencia 1 - Bonus: Timer",
          "Desafío de Herencia 2 - Empleados, Jefes y Pasantes",
          "Desafío de Herencia 2 - Empleados, Jefes y Pasantes (Solución)",
          "Interfaces",
          "Prácticas: Interfaces 1",
          "Prácticas: Interfaces 2",
          "Soluciones a los Ejercicios Prácticos del Día 10",
          "Fin del Día 10"
        ]
      },
      "requirements": [
        "Tener descargado Visual Studio Community Edition (GRATUITO - Te enseñaremos a descargarlo y configurarlo)",
        "Tener un ordenador con sistema operativo Windows instalado"
      ],
      "description": "Este NO es otro curso más de programación en C#\nEs un ENTRENAMIENTO PROFESIONAL INTENSIVO en PROGRAMACIÓN de C# para que te conviertas en un PROGRAMADOR EXPERTO en 28 días.\n\n\n¿De qué se trata el programa de 28 días?\nEs un entrenamiento que comienzas hoy y que seguirás durante 28 días seguidos.\nTodos los días recibirás entre 1 y 2 horas de lecciones teóricas y prácticas.\nDespués de las lecciones en video, realizarás tus prácticas individuales.\nTodos los días verás un tema diferente.\nCada día crearás un proyecto diferente.\nIrás desde Cero a Avanzado.\n\n\n¿Con esta formación aprenderé a crear JUEGOS REALES y otras aplicaciones?\nDefinitivamente SÍ. De hecho, a lo largo del entrenamiento crearemos juntos 3 juegos robustos de principio a fin utilizando el motor UNITY.\n\n\nAl finalizar la formación, ¿podré trabajar como desarrollador profesional?\nDefinitivamente SÍ. En esta formación intensiva no solo aprenderás todo lo necesario para programar en C# sino que también aprenderás a leer la documentación oficial y resolver cualquier situación nueva que se presente en tu vida como programador. La idea es que no solo sepas seguir lecciones y tutoriales, sino que vivas el mundo real de un programador que trabaja en sus propios proyectos o en grandes empresas de desarrollo.\n\n\n¿Los otros cursos no enseñan lo mismo?\nDefinitivamente NO. Obsérvalo tu mismo. Los otros cursos solo acumulan horas y horas de contenido para que los veas en cualquier orden y cantidad. No lo organizan según la cantidad adecuada por día, no verás la cara de ninguna persona que se encargue de guiarte paso a paso. La mayoría de los estudiantes abandonan los cursos largos por falta de una secuencia de estudio clara, o de orientación y guía. Esta formación es tan larga como las demás, pero te proporcionamos una secuencia de estudio diaria, razonable para que la integres a tu vida cotidiana, con tiempos sugeridos, siempre sabrás el tiempo que necesitas por día, y verás a tu instructor en pantalla todo el tiempo. Por eso decimos que este no es simplemente un curso. Este es un ENTRENAMIENTO, con la dosis correcta de información teórica y ejercicios prácticos por día, con tu instructor siempre presente, acompañando cada día de estudio no solo presentando el contenido sino también transmitiendo consejos y observaciones de la vida real del mundo de la programación.\n\n\nEntonces, si quieres convertirte en un DESARROLLADOR DE C# DE VERDAD y ganar dinero a través de una de las habilidades más codiciadas del mercado... estás en el lugar correcto.\n\n\nC# es uno de los pocos lenguajes de programación que te permite crear aplicaciones móviles multiplataforma increíbles, juegos, y programas de PC.\nDar vida a una idea es uno de los mejores sentimientos que uno puede tener, pero el camino para llegar a menudo está lleno de desafíos. ¡Por eso hemos creado un entrenamiento que hace que este camino sea lo más fácil posible para ti, para ayudarte a que te conviertas en un desarrollador experto de C#!\n\n\nComienza aprendiendo lo básico de C# y los conceptos de programación de C# en general\nvariables\nmétodos\narrays\ndeclaraciones if\nloops\n\n\nLuego aprende los tres pilares de la Programación Orientada a Objetos (OOP)\nClases y Objetos\nHerencia\nPolimorfismo\nCuando los hayas dominado aprenderás temas avanzados de C#, como Databases y LINQ.\nPara llegar a ser realmente bueno en la programación de C#, debes programarte a ti mismo, por lo que he creado un montón de ejercicios (y cuestionarios) para que practiques tu mismo la programación de C# y también para que aprendas a pensar como un programador, y no solamente a copiar código. Por supuesto, en el camino aprenderás las mejores prácticas de programación.\nEquipado con esas habilidades, crearás interesantes interfaces de usuario con WPF: un framework que hace que crear GUI (Graphical User Interfaces) sea pan comido. A partir de ese momento, puedes crear tus propios programas complejos.\n\n\nPero lo que viene a continuación es aún mejor.\nAprende Desarrollo de Juegos con Unity y C # - Crea 3 juegos increíbles\nYa que C# se puede usar para múltiples áreas diferentes de programación, he decidido cubrir las más importantes. Así que he agregado un montón de capítulos diseñados específicamente para un desarrollador de C# y un desarrollador de juegos de Unity, posiblemente el mejor motor de juegos del mundo. En esos capítulos descubrirás cómo crear tus propios videojuegos construyendo Pong, la madre de los videojuegos, el Zigzag, un increíble y exitoso juego de plataforma sin fin, y el aclamado y adictivo Fruit Ninja.\n\n\nVivimos en un mundo donde el conocimiento y el trabajo se comparten más que nunca, por lo que usar los activos proporcionados por otros será un gran impulso para tu progreso. Aprenderás a usar recursos 3D para hacer una plataforma sin fin. Luego usarás animaciones, reiniciarás el juego, usarás sistemas de partículas y finalmente crearás un mapa de manera procedural. Con lo que aquí tenemos algo bastante avanzado aquí.\nSé que aprender a codificar a veces puede ser difícil, y a veces te quedarás atascado. Pero no te preocupes, estamos a tu disposición. Respondemos a cada pregunta lo más rápido posible y nos aseguramos de que logres tu objetivo de convertirte en desarrollador.\n\n\n¿PARA QUIÉN ES ESTE ENTRENAMIENTO?\nEl entrenamiento es para cualquier persona que quiera aprender C# y quiera ser profesionalmente bueno en la programación de C#. No se requiere experiencia alguna. Está diseñado para que cualquiera que pueda manejar un mouse y un teclado lo termine exitosamente. El único requisito real es el deseo de aprender.\n\n\nGARANTÍA DE DEVOLUCIÓN COMPLETA DEL DINERO EN 30 DÍAS\nEste entrenamiento viene con una garantía de devolución completa en 30 días. Inscríbete, mira los primeros días de entrenamiento, haz los ejercicios, y si crees que este entrenamiento no es para ti, solicita un reembolso completo dentro de los 30 días. Te devolvemos todo tu dinero, sin hacer preguntas.\nNota importante: Este curso enseña a usar C# en un entorno operativo Windows. Si dispones de otro SO podrás seguir gran parte del curso, pero probablemente muchas de las funcionalidades mencionadas no estarán disponibles para ti.\nACERCA DE TU INSTRUCTOR\nMi nombre es Federico Garay, y quizás ya conozcas mis cursos más exitosos, como Análisis de Datos con Pandas y Python, o la Masterclass Best-Seller en Excel y Programación Macro con VBA. Hoy, junto con Denis Panjuta, traemos este entrenamiento de C# completo y \"todo en uno\" para principiantes. Denis, en sus cursos ha enseñado a codificar a más de 80.000 alumnos. Tiene una licenciatura en ingeniería de la Universidad de Ciencias Aplicadas de Constanza, Alemania. A los dos nos encanta enseñar y crear cursos de alta calidad. ¡Nuestra misión es enseñar programación a más de 100.000 personas!\n\n\nComo puede ver, este es el único entrenamiento de C# que necesitarás.\n¡Aprenderás todos los fundamentos de C#, todos lo básico de C#, te llevaremos hasta lo más avanzado, y recibirás todo lo que necesitas saber para tener éxito en la programación de C# y crear tus propios y geniales videojuegos!\nAsí que no pierdas más tiempo y comienza a hacer realidad tus sueños e ideas tomando este entrenamiento... ¡AHORA!",
      "target_audience": [
        "Todo el que quiera aprender C#",
        "Todo el quiera desarrollar video juegos de consola multiplataforma con Unity 3D",
        "Todo el que quiera crear programas para PC con atractivas Interfaces de Usuario usando WPF"
      ]
    },
    {
      "title": "【Java-オブジェクト指向（基本編）】考え方からプログラミングまで～初級者向けブラッシュアップ講座～",
      "url": "https://www.udemy.com/course/java-obj-basic/",
      "bio": "『新たにJava学習を始めたかた』『転職のためのプログラミング習得したいかた』『新入社員が業務で使うJavaの基礎を学びたいかた』のため、「創造性」と「可能性」を広げる『Javaオブジェクト指向』の魅力を楽しめるコース",
      "objectives": [
        "Java初級者がつまずきやすい「オブジェクト指向」の考え方を理解できる。",
        "Javaオブジェクト指向の利点を理解できる。",
        "eclipseの実行環境を構築できる。",
        "eclipse上でのプログラミング～実行までの流れを行える。",
        "Javaでのオブジェクト指向の基本的なプログラミングができる。"
      ],
      "course_content": {
        "【eclipseを使おう】": [
          "「本コース資料」と「サンプルプログラム」",
          "【１】開発環境",
          "Java環境構築（※他コースと共通）",
          "eclipseの初期設定（※他コースと共通）",
          "eclipseのデバッグ機能（※他コースと共通）",
          "【３】実行までの３ステップ",
          "【まとめ】セクション １",
          "【演習問題】と【解答例】セクション １",
          "【演習問題解説】セクション １"
        ],
        "【オブジェクト指向の考え方】": [
          "【１】手続き型",
          "【２】オブジェクト指向",
          "【３】こんな例では…",
          "【４】利点",
          "【５】３大要素",
          "【６】コースの範囲",
          "【まとめ】セクション ２"
        ],
        "【クラスの定義】": [
          "【１】クラス",
          "【２】クラスの構成要素",
          "【３】フィールド",
          "【４】メソッド",
          "【５】クラス図",
          "（サンプル３－１）",
          "【まとめ】セクション ３",
          "【演習問題】と【解答例】セクション ３",
          "【演習問題解説】セクション ３"
        ],
        "【インスタンス】": [
          "【１】実行用クラス",
          "【２】インスタンス",
          "【３】内部データ",
          "【４】メンバへのアクセス",
          "（サンプル４－１）",
          "【５】クラス図",
          "【まとめ】セクション ４",
          "【演習問題】と【解答例】セクション ４",
          "【演習問題解説】セクション ４"
        ],
        "【コンストラクタ】": [
          "【１】コンストラクタ",
          "【２】コンストラクタ定義",
          "【３】this",
          "【４】インスタンス化",
          "（サンプル５－１）",
          "【まとめ】セクション ５",
          "【演習問題】と【解答例】セクション ５",
          "【演習問題解説】セクション ５"
        ],
        "【static】": [
          "【１】クラスフィールド",
          "【２】クラスメソッド",
          "【３】static修飾子",
          "（サンプル６－１）",
          "【４】クラス図の表現",
          "【まとめ】セクション 6",
          "【演習問題】と【解答例】セクション ６",
          "【演習問題解説】セクション ６"
        ],
        "【オーバーロード】": [
          "【１】オーバーロード",
          "【２】メソッド",
          "（サンプル７－１）",
          "【３】コンストラクタ",
          "【４】this()",
          "（サンプル７－２）",
          "【まとめ】セクション 7",
          "【演習問題】と【解答例】セクション 7",
          "【演習問題解説】セクション 7"
        ],
        "【参照型の配列】": [
          "【１】配列イメージ",
          "【２】クラス型の配列宣言",
          "【３】配列要素の設定",
          "【４】メンバアクセス",
          "（サンプル８－１）",
          "【まとめ】セクション ８",
          "【演習問題】と【解答例】セクション ８",
          "【演習問題解説】セクション ８"
        ],
        "最後に…": [
          "最後に…"
        ]
      },
      "requirements": [
        "パソコンを持っていて、プログラミングしながら学習できること。（解説はWindowsで行っています）",
        "Javaの基本文法・制御構造・実行方法を知っている。"
      ],
      "description": "このコースは、Javaのオブジェクト指向プログラミングの基本を学ぶコースです。\n\n\nオブジェクト指向プログラミングは、Javaの特徴の１つです。\n\n\nシステム化対象をオブジェクト（人・モノ・概念）単位で捉えて\nそのオブジェクトごとの関連をプログラムとして表現します。\n\n\nシステム化したい「現実世界」寄りの考え方と言えますね。\n\n\nそして、オブジェクト指向はプログラムを分割した単位（オブジェクト）を\n組み上げて構築していきます。\n\n\nですので 小さい部品が独立していて、作りやすくて 後から見やすく\nそして「部品の再利用」や「部品の拡張」も容易に行える事となります。\n\n\nこのように、メリットが多い Javaオブジェクト指向プログラミングですが\nプログラミング初心者にとっては、つまずきやすい部分である事も確かです。\n\n\nですので…\n\n\nこのコースでは、プログラミング初心者のかたが 苦戦しそうな部分を\n特に丁寧に解説しています。\n\n\n考え方を 分かりやすく解説して「例題」や「演習問題」を一緒に動かすことで\nJavaオブジェクト指向プログラミングの基本をマスターすることができます。\n\n\n『マンネリの毎日の中でプログラミングを新たに学びたい』\nというかたも…\n\n\n『転職のためのプログラミングを学びたい』\nというかたも…\n\n\n『新入社員で、業務で使うJavaの基礎を学びたい』\nというかたも…\n\n\nJavaの基本文法・制御構造・実行方法・メソッドを学んだ後には\nオブジェクト指向プログラミングを学びましょう。\n\n\nそのことで、大きなメリットを受けて\n活躍するプログラマーになるきっかけになります。\n\n\nーーーーーーーーーーーーーーーー\n\n\nなお、本コースは\n\n\n【Java-オブジェクト指向（基本編）】\n\n\nとなっています。です。オブジェクトを中心とした考え方と\n基本的なプログラミングを習得します。\nその過程で、eclipse開発環境でのプログラミングを学びます。\n\n\n具体的には、以下のような内容を学びます。\n\n\n＊＊本コースの主な内容＊＊\n\n\n・eclipse\n・オブジェクト指向の考え方\n・クラス\n・インスタンス\n・コンストラクタ\n・static\n・オーバーロード\n・参照型の配列\n\n\nーーーーーーーーーーーーーーーー\n\n\nこのコースは、Javaのオブジェクト指向プログラミングの基本を学ぶコースです。\n\n\nプログラミング初心者のかたが 苦戦しそうな部分を\n特に丁寧に解説しています。\n\n\n考え方を 分かりやすく説明して「例題」や「演習問題」を一緒に動かすことで\nJavaオブジェクト指向プログラミングの基本をマスターすることができます。\n\n\n\n\n▼ このコースの特徴 ▼\n\n\n★このコースでは、プログラミング初心者が『オブジェクト指向プログラミング』で\nつまずきやすいポイントを 分かりやすく丁寧に解説していきます。★\n\n\n\n\n▼ このコースで学ぶと ▼\n\n\n★『マンネリの毎日の中でプログラミングを新たに学びたい』かたは…\n\n\n「オブジェクト指向プログラミング」の考え方を知って\n現実世界のオブジェクトに即したプログラミングの楽しさを体感できます。\n\n\n★『転職のためのプログラミングを学びたい』かたは…\n\n\n実際の開発現場で多く使われている eclipse環境でプログラミングを学んで\n転職に向けた実践感覚を身につけることができます。\n\n\nまた「オブジェクト指向プログラミング」の基本を学ぶことで\n転職に有利な知識・スキルを習得することもできます。\n\n\n★『新入社員で、業務で使うJavaの基礎を学びたい』かたは…\n\n\n新入社員研修の現役講師から、実務で活きるプログラミングの基礎を\n学ぶことで、実際の研修の予習復習や 実務の準備ができます。\n\n\neclipse環境で「オブジェクト指向プログラミング」を学ぶことで\n業務にスムーズに入っていける、基礎力を養うことができます。\n\n\n\n\n▼ はじめましょう ▼\n\n\n新たなスキルを身につけることは、自己成長とキャリアの発展につながります。\n\n\nJavaの『オブジェクト指向プログラミング』を学ぶことで\n実践的なプログラミングを学ぶことができ\n\n\nさらに高度なアプリケーションの開発に挑戦することができます。\n\n\nこの講座では、Javaの『オブジェクト指向プログラミング』の基本を\n分かりやすい解説を聞いて習得することができます。\n\n\nまた「例題」や「演習問題」を一緒に動かすことで\nJavaオブジェクト指向プログラミングの実践の感覚を身につけることもできます。\n\n\nそして何より、プログラミングしながら成長していくことができます。\n\n\nこの講座は、皆さんの成長と成功を応援する場です。\n皆さんが本当に輝けるよう、全力でサポートします！\n\n\nさあ『Javaオブジェクト指向プログラミング』に挑戦しましょう！\n\n\n一緒に学び、成長し、素晴らしい\nアプリケーションを開発する土台を身につけましょう。\n\n\n一緒にJavaの世界を探求し、自身の成長とキャリアの可能性を広げましょう！\n\n\n未来への第一歩を踏み出す準備はできていますか？\nそれでは、講座のスタートです！",
      "target_audience": [
        "新入社員で研修でJavaを使うので予習をしておきたいかた。",
        "転職のためにプログラミングを学びたいかた。",
        "新たにJavaプログラミングに挑戦しはじめたかた。",
        "Javaの基本を学んだ後に「オブジェクト指向」についての理解を深めたいかた。",
        "「オブジェクト指向」プログラミングに挑戦したいかた。"
      ]
    },
    {
      "title": "ビジネスパーソンに贈る業務効率化大全 〜Google Apps Scriptによる業務の自動化〜",
      "url": "https://www.udemy.com/course/gas_for_operational_efficiency/",
      "bio": "Google Apps Scriptを用いてG Suite（Googleフォーム、Googleスプレッドシート、Gmail等）の連携を行い、様々な業務を自動化してみよう。",
      "objectives": [
        "プログラミングがどういったものであるかを理解し、実装することができる",
        "基本的なプログラミング力を身につけることで、プログラミングによる業務効率化のイメージが湧いてくる",
        "Google Apps Script（GAS）の基礎的な文法を理解することができる",
        "GASを用いた各種サービス（Googleスプレッドシート、Googleフォーム、Gmail等）の連携方法を学ぶことができる",
        "自らのタスクを効率良くしていくための方法を学ぶことができる",
        "業務効率を実際に行いながら講座を進めていくことで、様々な業務効率化アイディアが浮かんでくる"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "Google Apps Script 基礎": [
          "Google Apps Script とは",
          "Google Apps Script の基本的な使い方"
        ],
        "Google Apps Script 基礎文法": [
          "四則演算",
          "変数・定数",
          "データ型",
          "配列",
          "オブジェクト",
          "制御構文（if文による条件分岐）",
          "制御構文（for文による繰り返し）",
          "制御構文（for...in文）",
          "関数",
          "制御構文（forEach文）",
          "組み込みオブジェクト"
        ],
        "業務効率①：フォーム入力からメールを自動送信する": [
          "問題設定とワークフロー・必要な知識",
          "メールを送信する",
          "フォームに記入された情報を取得する",
          "フォームに記入されたメールアドレス宛にメールを送信する",
          "フォーム記入内容を元に文章を作成する"
        ],
        "業務効率②：フォーム入力からLINEに通知を送る": [
          "問題設定とワークフロー・必要な知識",
          "APIとは",
          "LINE Messaging APIとは",
          "LINE Messaging APIの準備",
          "GASからLINEに通知を送る",
          "フォーム情報を元にLINEに通知を送る"
        ],
        "業務効率③：カレンダー情報をSlackに通知する": [
          "問題設定とワークフロー・必要な知識",
          "Webhook とは",
          "Slack Webhook の設定",
          "GASからSlackに通知を送る",
          "Calendarサービスについて",
          "カレンダーの情報を取得する",
          "休みかどうかの判定をする",
          "休暇メンバーをSlackに通知する"
        ],
        "業務効率④：リマインドメールを送る": [
          "問題設定とワークフロー・必要な知識",
          "1つの予定（イベント）から詳細等を取得する",
          "イベントURLを取得する",
          "1人にリマインドメールを送る",
          "全てのイベントに対してリマインドメールを送る"
        ],
        "業務効率⑤：シフト管理表をGoogleカレンダーに反映する": [
          "問題設定とワークフロー・必要な知識",
          "Spreadsheetサービスについて",
          "シートから情報を取得する",
          "メンバーのオブジェクトを作成する",
          "シフト規則のオブジェクトを作成する",
          "イベント（予定）を作成する",
          "シフトをカレンダーに反映させる①",
          "シフトをカレンダーに反映させる②",
          "シフトをカレンダーに反映させる③"
        ],
        "業務効率⑥：Gmailをスプレッドシートに抽出する": [
          "問題設定とワークフロー・必要な知識",
          "Gmailサービスについて",
          "メールを取得する",
          "メールの必要な情報を取得する",
          "1つのメールをシートに書き込む",
          "全てのメールをシートに書き込む"
        ],
        "業務効率⑦：議事録を事前準備にする": [
          "ワークフローの説明",
          "イベント情報を抽出する",
          "特定のイベントのみを抽出する",
          "Googleドキュメントを作成する",
          "Googleドキュメントにテキストを挿入してみる①",
          "Googleドキュメントにテキストを挿入してみる②",
          "カレンダー内容をもとに議事録を作成する①",
          "カレンダー内容をもとに議事録を作成する②",
          "カレンダー内容をもとに議事録を作成する③"
        ]
      },
      "requirements": [
        "Googleアカウントを持っていること"
      ],
      "description": "受講生23,000名を超えるキカガクの講師による業務効率化大全が登場。\nGoogle Apps Scriptによる業務効率化方法を学び、様々なルーティーン業務を自動化していきましょう。\n\n\nGoogle Apps Scriptとは、Google社が提供するJavaScriptベースのプログラミング言語になります。\nGoogleスプレッドシートやGoogleフォーム、Googleカレンダー、Gmail等のGoogleが提供するサービス（G Suite）を様々な形で連携できる非常に便利な言語となります。\n\n\n【開講背景】\n私自身、エンジニアとして働いた経験は学生時代のインターン3ヶ月のみです。つまり、ほとんどの時間をビジネスサイドの人間として仕事に取り組んできました。ビジネスサイドではあるものの、プログラミングを用いた業務効率化は2年以上行っています。特にGoogle Apps Scipt（GAS）に関しては学生時代から使い続けています。はじめはインターン先の上司からの小さな依頼から始まりましたが、今ではGASの魅力に引き込まれ日常のルーティン業務等をGASで自動化することも少なくないです。私自身、ビジネスサイドとしてGASを駆使し、便利さを痛感している人間だからこそ、本講座は多くのビジネスサイドの方にも取り組んでもらいたいと考えています。\n\n\n【コース概要】\n以下、本コースで扱う大枠の内容となっております。\n＜Google Apps Script 基礎文法＞\n本講座では、Google Apps Scriptの基礎文法をプログラミング初学者の方でもわかりやすいようにお伝えしております。\n四則演算\n変数・定数\nデータ型\n配列\nオブジェクト\n制御構文（if文による条件分岐）\n制御構文（for文による繰り返し）\n制御構文（for…in文）\n関数\n制御構文（forEach文）\n組み込みオブジェクト\n\n\n＜業務効率化＞\n業務効率タスクを実際に行いながら必要な知識やスキル学んでいきます。\nフォーム入力からメールを自動送信する\nフォーム入力からLINEに通知を送る\nカレンダー情報をSlackに通知する\nリマインドメールを送る\nシフト管理表をGoogleカレンダーに反映する\n議事録事前準備\nGmailをスプレッドシートに抽出する\n申込・見積・メール送付を自動化する\nWeb情報を可視化する（Webスクレイピング）\n\n\n【注意】\n本講座はGoogle Apps Script（GAS）初学者向けであり、GASの基礎をしっかりと身につけていただきたいので高度な内容は抑えております。\nしっかりとカリキュラムをご覧になった上でご受講いただけますと幸いです。\n何かしらのプログラミング言語経験があると講座をスムーズに進めることができますが、本講座はプログラミング初学者でも受講可能な講座設計となっております。",
      "target_audience": [
        "プログラミングを始めてみたい方",
        "普段G Suite製品（Googleスプレッドシート、Googleフォーム、Gmail等）を使っている方",
        "Google Apps Scriptに興味がある方",
        "Google Apps Scriptを使用した業務効率化を行ってみたい方",
        "プログラミングを用いて業務の自動化を行おうと考えている方",
        "プログラミングを様々なことに有効活用しようとしているビジネスサイドの方"
      ]
    },
    {
      "title": "Aprenda Lógica de Programação - direto ao ponto",
      "url": "https://www.udemy.com/course/aprenda-logica-de-programacao-direto-ao-ponto/",
      "bio": "Lógica de Programação e fundamentos de algoritmos do zero de forma simples, leve e didática",
      "objectives": [
        "Você vai aprender a aplicar os principais conceitos de algoritmos e lógica de programação .",
        "Variáveis e tipos de dados",
        "Elaboração de fluxogramas",
        "Entrada e saída de dados",
        "Operadores",
        "Estruturas de decisão simples",
        "Estruturas de decisão encadeadas",
        "Estruturas de repetição",
        "Vetores",
        "Subrotinas ou funções",
        "Elaboração e testes de algoritmos"
      ],
      "course_content": {
        "Conceitos básicos e ambiente de trabalho": [
          "Definições importantes",
          "Instalação do Flowgorithm",
          "Detalhando o Ambiente de Trabalho",
          "Tipos de dados, inteiro, real e caracter - entrada e saída",
          "Pseudocódigo",
          "Material em pdf"
        ],
        "Operações básicas": [
          "Algoritmo para a soma de dois números Inteiros",
          "Operações Matemáticas Básicas - operadores matemáticos",
          "Calculo de média com variável do tipo Real",
          "Exibindo o nome do aluno e a média",
          "Exercício Resolvido: Calcular salário de funcionário horista",
          "Fluxogramas Seção 1 e 2",
          "Exercício proposto 01",
          "Resposta do Exercício Proposto 01",
          "Exercício proposto 02",
          "Resposta do Exercício Proposto 02"
        ],
        "Estruturas de decisão": [
          "Estrutura de decisão - Se..senão (if..else)",
          "Operador % - Exemplo: par ou ímpar",
          "Estruturas de decisão encadeadas",
          "Exercício Proposto 03",
          "Resposta Exercício Proposto 03",
          "Exercício Proposto 04",
          "Resposta Exercício Proposto 04",
          "Tabela da Verdade - Operador lógico &&",
          "Operador && - Aplicação prática",
          "Tabela da verdade - Operador lógico ||",
          "Operador lógico ||- Aplicação prática",
          "Exercício Proposto 05",
          "Resposta do Exercício Proposto 05",
          "DESAFIO - EXERCÍCIO - CALCULAR IMC",
          "RESOLUÇÃO DO DESAFIO: Exercício : IMC",
          "Fluxogramas Seção 3"
        ],
        "Estruturas de repetição": [
          "Estrutura de repetição Para",
          "Exemplo de repetição Para - Calcular tabuada",
          "Contador",
          "Acumulador",
          "Exercício Proposto 06",
          "Resposta Exercício Proposto 06",
          "Exercício proposto 07",
          "Resposta Ex Proposto 07",
          "Repetição Fazer",
          "Repetição Fazer - parte 02",
          "Exercício Proposto 08",
          "Resposta - Exercício Proposto 08",
          "Estrutura de repetição : Enquanto",
          "Diferenças entre as estruturas de repetição",
          "DESAFIO - Exercício Seleção de Candidatos",
          "Fluxogramas Seção 4"
        ],
        "Arranjos - Vetores": [
          "Conceito de arranjo (vetor)",
          "Vetores - entrada de dados",
          "Exercício Resolvido: Soma de vetores",
          "Exercício Resolvido: Pesquisando o maior valor em um vetor",
          "Fluxogramas Seção 5",
          "Exercício Proposto 09",
          "Resposta Exercício Proposto 09",
          "Exercício Proposto 10",
          "Resposta - Exercício Proposto 10",
          "Exercício Proposto 11",
          "Resposta Exercício Proposto 11"
        ],
        "Subprogramas (subrotinas ou funções)": [
          "Apresentando subprogramas",
          "Criando um subprograma",
          "Exercício Proposto 12",
          "Resposta - Exercício Proposto 12",
          "DESAFIO - Subprograma",
          "Resolução - Desafio - Subprograma",
          "Fluxogramas Seção 6",
          "Exercício Proposto 13",
          "Exercício Proposto 14",
          "Exercício Proposto 15",
          "Exercício Proposto 16",
          "Exercício Proposto 17",
          "Exercício Proposto 18",
          "Exercício Proposto 19",
          "Exercício Proposto 20"
        ],
        "Bônus": [
          "Bônus"
        ]
      },
      "requirements": [
        "Pessoas interessadas em aprender programação de computadores, como este curso é para iniciantes não há pré-requisitos"
      ],
      "description": "O curso de Lógica de Programação utiliza algoritmos e fluxogramas para  propiciar ao aluno iniciante o aprendizado dos conceitos programação concentrando-se na lógica, sem ter que lidar com os detalhes de uma linguagem específica. Você vai aprender a programar utilizando elementos gráficos e testando seu algoritmo usando um software simples e divertido. Uma vez aprendida a lógica fica fácil aprender qualquer linguagem de programação.",
      "target_audience": [
        "Estudantes em geral, profissionais das áreas de informática, engenharia, eletrônica e demais pessoas que desejam aprender algoritmos e lógica de programação"
      ]
    },
    {
      "title": "ChatGPT para PYTHON + Projetos Reais com ChatGPT IA",
      "url": "https://www.udemy.com/course/chatgpt-para-python/",
      "bio": "Aprenda a integrar a tecnologia ChatGPT IA com Python e desenvolva habilidades práticas em inteligência artificial.",
      "objectives": [
        "Integrar o ChatGPT4 com o Python para criar chatbots personalizados.",
        "Trabalhar com API e suas aplicações.",
        "Utilizar o DALL-E com Python para gerar imagens a partir de texto.",
        "Interagir com a Whisper API para aprimorar ainda mais as capacidades de IA.",
        "Desenvolver habilidades práticas em aprendizado de máquina e IA.",
        "Completar 7 projetos do mundo real para aplicar conhecimentos e adquirir experiência."
      ],
      "course_content": {
        "Iniciando": [
          "Boas Vindas",
          "Escolhendo a sua IDE",
          "Instalando o Python",
          "Testando o VSCode e Python",
          "Realizando seu registro na OpenAI",
          "Valores da API",
          "Instalando a OpenAI Library"
        ],
        "OpenAI": [
          "O que é o ChatGPT",
          "Os diferentes modelos",
          "O que é um modelo de linguagem (LLM) ?",
          "O que é uma API"
        ],
        "Projeto 1": [
          "Projeto 1 - Criando o meu ChatGPT",
          "Integrando o ChatGPT com Python",
          "Testando a interação"
        ],
        "Projeto 2": [
          "Projeto 2 - Gerando imagens com ChatGPT?",
          "Sobre a DALL-E e API",
          "Integrando DALL-E com Python"
        ],
        "Projeto 3": [
          "Projeto 3 - Monitorando um website",
          "Coletando e Armazendo valores da Amazon"
        ],
        "Projeto 4": [
          "Projeto 4 - Falando com o ChatGPT",
          "Conhecendo o Whisper",
          "Testando o Whisper com Python"
        ],
        "Projeto 5": [
          "Projeto 5 - Agrupando arquivos com Python",
          "Criando o programa com a ajuda do ChatGPT"
        ],
        "Projeto 6": [
          "Projeto 6 - Este código não funciona",
          "Corrigindo o código"
        ],
        "Projeto 7": [
          "Projeto 7 - Me ajude com a documentação",
          "Criando a documentação"
        ],
        "Finalizando": [
          "Agradecimento dos instrutores",
          "Bonus"
        ]
      },
      "requirements": [
        "Conhecimentos básicos em Python e programação em geral."
      ],
      "description": "Curso ChatGPT para Python + 7 Projetos Reais\nO curso de ChatGPT4 para Python é uma excelente oportunidade para aqueles que desejam se aprofundar no mundo da inteligência artificial e aprender a integrar a tecnologia ChatGPT4 com Python.\nEsse vai além do ensino teórico e oferece aos alunos a oportunidade de trabalhar em 7 (sete) projetos reais.\nEsses projetos são cuidadosamente selecionados para ajudar os alunos a aplicar seus conhecimentos na prática e ganhar experiência em diversas áreas, incluindo chatbots, reconhecimento de fala e imagens, análise de sentimento e muito mais.\nAlém disso, os projetos oferecem uma oportunidade para os alunos trabalharem em equipe e colaborarem em projetos do mundo real, o que os ajuda a desenvolver habilidades de comunicação e a se preparar para o ambiente de trabalho.\nNeste curso, os alunos terão a oportunidade de aprender os conceitos fundamentais sobre o ChatGPT4, API, Python e outras tecnologias relacionadas.\nO ChatGPT4 é um modelo de linguagem natural baseado em IA que utiliza uma grande quantidade de dados para gerar respostas inteligentes e realistas em conversas.\nJá API, ou Application Programming Interface, é uma interface que permite que diferentes softwares se comuniquem e compartilhem dados uns com os outros.\nOs alunos irão aprender a interagir com o ChatGPT4 utilizando a linguagem de programação Python, que é amplamente utilizada no mundo da inteligência artificial.\nAtravés dessa integração, os alunos poderão criar chatbots personalizados e interativos para seus próprios sites, tornando a comunicação com os usuários muito mais eficiente.\nAlém disso, o curso aborda a integração da tecnologia DALL-E com Python, que permite ao ChatGPT4 gerar imagens realistas a partir de descrições de texto, oferecendo ainda mais possibilidades de interação.\nE por fim, o curso também apresenta a integração da Whisper API, uma ferramenta de inteligência artificial que permite que os alunos expandam ainda mais suas habilidades em programação e tecnologias relacionadas à IA.\nChatGPT4 para Python\" é altamente recomendado para desenvolvedores e programadores que desejam aprimorar suas habilidades em inteligência artificial, machine learning e linguagem de programação Python. O curso também é ideal para estudantes e profissionais de TI que desejam aprender a integrar o ChatGPT4 em seus projetos e aplicações.\nAlém disso, o curso é recomendado para empreendedores e empresários que desejam utilizar a tecnologia de chatbots para melhorar a comunicação com seus clientes e aprimorar a experiência do usuário em seus sites.\nNão é necessário ter experiência prévia em inteligência artificial ou programação, mas é recomendável ter conhecimentos básicos em Python. Os projetos incluídos no curso também são ideais para quem busca adquirir habilidades práticas em programação e solução de problemas.\nEsse curso é recomendado para aqueles que desejam se aprofundar em tecnologias de inteligência artificial e aprender a integrar o ChatGPT4 em seus projetos e aplicações, independentemente do nível de experiência em programação.\n\n\nVamos aprender ChatGPT4 para Python?\nNos vemos na primeira aula :)",
      "target_audience": [
        "Desenvolvedores e programadores que desejam aprimorar suas habilidades em inteligência artificial e aprendizado de máquina, bem como aprender a integrar o ChatGPT4 em seus projetos.",
        "Estudantes e profissionais de TI que desejam adquirir conhecimentos em inteligência artificial e programação com foco em Python.",
        "Empreendedores e empresários que desejam implementar soluções inovadoras em seus negócios utilizando a tecnologia de chatbots.",
        "Profissionais em áreas como marketing e vendas, que buscam entender como a tecnologia de chatbots pode melhorar a comunicação com os clientes.",
        "Pesquisadores e acadêmicos que desejam aprender sobre as aplicações práticas do ChatGPT4 e sua integração com Python.",
        "Qualquer pessoa interessada em aprender sobre inteligência artificial e suas aplicações práticas em projetos do mundo real."
      ]
    },
    {
      "title": "Java od Podstaw do Eksperta - twórz własne aplikacje",
      "url": "https://www.udemy.com/course/java-od-podstaw-do-eksperta-tworz-wasne-aplikacje/",
      "bio": "Stworzony z myślą o osobach, które nie wiedzą nic na temat programowania w Java. Stań się ekspertem w Javie już dziś!",
      "objectives": [
        "Jak używać Javy w akcji. Zrozumiesz perfekcyjnie składnię Javy :-)",
        "Dowiesz się, czym jest kompilator, IDE, zmienne i ich typy, operatory itd.",
        "Jak tworzyć aplikacje w Javie",
        "instrukcje warunkowe if/else/else if",
        "operatory arytmetyczne, przypisania, relacyjne, bitowe, logiczne",
        "tablice / tablice wielowymiarowe",
        "pętle for / while / do while",
        "metody, przeładowywanie/nadpisywanie metod, przekazywanie zmiennych to metod etc.",
        "programowanie obiektowe",
        "zmienne referencyjne",
        "konstruktory",
        "interfejsy",
        "wyjątki",
        "pakunki",
        "polimorfizm",
        "rzutowanie",
        "wyrażenia lambda",
        "klasy/klasy abstrakcyjne/interfejsy",
        "strumienie wejścia/wyjścia",
        "tokenizacja danych i serializacja obiektów",
        "ZIP/GZIP",
        "synchronizacja i wątki",
        "kolekcje i mapy",
        "podstawy Android Studio",
        "pakiet Swing (do tworzenia aplikacji okienkowych)"
      ],
      "course_content": {},
      "requirements": [
        "Wszystko wyjaśnione jest w kursie. Nie musisz posiadać żadnych wiadomości na temat Javy, aby zabrać się za ten kurs."
      ],
      "description": "W moim kursie Javy nie musisz znać podstaw programowania.\nNauczysz się wszystkiego od zera.\nObal mit, że programowanie jest dla nielicznych.\nPisz własne programy! :)\nJava jest językiem zorientowanym obiektowo. Jego główną zaletą jest to, że może być odpalony wszędzie na Windowsie, Linuksie, Uniksie, Macintoshu, smartfonie itd.\nJava jest jednym z najbardziej pożądanych języków przez pracodawców - poznając Jave na pewno łatwo znajdziesz pracę.\nW Javie możesz tworzyć aplikacje mobilne na Androida, gry komputerowe (Minecraft), aplikacje pulpitowe i wiele innych.\nPo kursie będziesz potrafił tworzyć różnego rodzaju aplikacje od zera.\nDowiesz się jak używać większości komponentów, które udostępnia pakiet Swing. Podczas poznawania Javy, tworzymy wiele naprawdę bardzo ciekawych programów.\nUWAGA! W kursie piszemy zamiast zwykłego prostego wszędzie powtarzającego się notatnika swoją własną aplikację ZIPPER, która potrafi skompresować pliki, katalogi oraz ich podkatalogi wraz ze wszystkimi plikami w środku. Co więcej robimy to kompletnie od zera! Poprowadzę Cię krok po kroku jak tworzy się profesjonalną aplikację.\nPo kursie będziesz znał i rozumiał zagadnienia takie jak:\nkompilator, JVM etc.\nklasy i obiekty\nzmienne/typy zmiennych\noperatory arytmeczyne, relacyjne, bitowe, logiczne\nwyrażenia warunkowe if / else / switch\ntablice jedno/wielowymiarowe\npętle - for / while / do-while\nmetody, przeładowanie/nadpisywanie metod, przekazywanie zmiennych do metod\nprogramowanie zorientowanie obiektowo\nzmienne referencyjne\nkonstruktory\ninterfejsy\nwyjątki\npakunki i modyfikatory dostępu private, public, protected\npolimorfizm\nrzutowanie\nwyrażenia lambda (Java 8)\nklasy abstrakyjne\nczym są strumienie wejścia/wyjścia\ntokenizacja danych i serializacja obiektów\nczym jest ZIP i GZIP, czym się różnią\nczym jest synchronizacja oraz wątki\nw jaki sposób synchronizować wątki, przez co Twoje programy będą działały dużo szybciej\nw jaki sposób rysować na panelach\nw jaki sposób napisać aplikację z animacją odbijających się kulek\npoznasz zaawansowane możliwości pisania klas oraz metod generycznych.\ndowiedz się czym są kolekcje, mapy\ndowiesz się w jaki sposób działają różnego rodzaju struktury np. HashMap, HashSet, LinkedList, ArrayList itp.\nI wiele wiele innych... (zapraszam do opisu lekcji niżej)\nUwaga! Dodałem do kursu GRATIS 12 lekcji trwających 2,5h o podstawach tworzenia aplikacji mobilnych w Android Studio. Dowiedz się jak tworzyć aplikacje mobilne :)\n\n\nGWARANCJA SATYSFAKCJI\nPonad 350,000 studentów na Udemy uczy się z moich kursów. Dołącz do grupy zadowolonych Użytkowników. Jeśli mój kurs Ci się nie spodoba, to pamiętaj, że masz aż 30 dni na to, by uzyskać pełną refundację. Gwarantuję Ci 100% satysfakcji.\n\n\nPOMOC INSTRUKTORA\nJeśli masz jakiekolwiek pytania, związane z poruszonymi tematami w Java to pisz śmiało, zawsze chętnie pomogę :)\n\n\nPEWNY ZAKUP\nSprawdź jakość kursu - oglądaj darmowe lekcje\nProszę, zanim zakupisz kurs, oglądnij darmowe lekcje! Nie kupuj kota w worku! Sprawdź jakość kursów przed zakupem!\nDołącz dziś i naucz się szybko i bezproblemowo Java ze mną!",
      "target_audience": [
        "Ten kurs Javy jest przeznaczony dla każdego. Nie musisz wiedzieć nic na temat Javy, aby się za niego zabrać."
      ]
    },
    {
      "title": ".NET Core 3.0 & C# 7 Backend Frontend Geliştirici Kursu - 1",
      "url": "https://www.udemy.com/course/net-core-c-sharp-kursu/",
      "bio": "Kurumsal mimaride etkin bir backend geliştirici olacağınız serinin 1. bölümü. C# 7.0, ASP.NET, JWT, Autofac ve fazlası.",
      "objectives": [
        "Kurumsal mimari altyapısını öğreneceksiniz.",
        "Dependency Injection ve Autofac İmplementasyonu",
        "Nesnel, temiz kod teknikleri",
        "C# 7.0 ile gelen bazı kullanım örnekleri",
        ".NET Core 3.0 ile gelen bazı yenilikler",
        "Magic String'den kurtulma teknikleri",
        "Framework katmanı implementasyonları",
        "Error & Success Result Yönetimi",
        "Repository Pattern İmplementasyonları",
        "Workshop çalışmaları",
        "Etkili Rol yönetimi sistemi altyapısı",
        "Etkili JWT konfigurasyonu",
        "Extension yazma"
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Kurulumlar": [
          "Projenin ve Katmanların Oluşturulması",
          "Değerlendirmeler Hakkında",
          "Veritabanının Kurulması"
        ],
        "Entity Katmanını Kodlamak": [
          "Entity Katmanını Kodlamaya Başlamak"
        ],
        "Veri Erişim Katmanını Kodlamak": [
          "Repository Desenini Anlamak ve Kodlamak",
          "Context Nesnesinin Kodlanması",
          "Repository Base Nesnesinin Yazılması"
        ],
        "İş Katmanını Kodlamak": [
          "İş Katmanını Kodlamaya Başlamak",
          "Dependency Injection Altyapısına Giriş"
        ],
        "İşlem Başarı ve Hata Sisteminin Oluşturulması": [
          "İşlem Başarı ve Hata Sisteminin Oluşturulması",
          "SuccessDataResult Altyapısını Kurmak",
          "Error Data Result Altyapısının Kurulması"
        ],
        "Refactoring Çalışmaları Yapmak": [
          "İş Katmanının Refactor Edilmesi",
          "Magic Stringden Kurtulmak"
        ],
        "API Katmanında Çalışmak": [
          "Api Tarafını Kodlamaya Başlamak"
        ],
        "Autofac İle Çalışmak": [
          "Autofac Kurulumu ve İlk Module Yapılandırması",
          "Autofac WebApi Konfigurasyonu"
        ],
        "Postman İle Çalışmak": [
          "Ürün Operasyonlarının Postman ile Test Edilmesi"
        ]
      },
      "requirements": [
        "Temel C# ve teknolojileri bilgisi"
      ],
      "description": "Bu seri daha önce klasik .NET Framework ile yayınladığım \"C# ile Backend Geliştirici Olun\" serisinin .NET Core ile yazılmış ve geliştirilmiş versiyonudur.\n.NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır.\nBu kursta kullanılan mimari eğitim ve danışmanlık yaptığım 300+ kurumda veya firmada kullandırdığım şekliyle birebir yansıtılmıştır. Sektörün önde gelen bir çok firmasında da kullanılmaktadır. Profilimden bu firmaların bazılarını inceleyebilirsiniz.\nSerinin bu bölümünü keyifle hazırladım.\nKurumsal mimariye giriş ve konfigurasyonu\nDependency Injection ve Autofac İmplementasyonu\nBusiness, DataAccess, API konfigurasyonu\nNesnel, temiz kod teknikleri\nC# 7.0 ile gelen bazı kullanım örnekleri\n.NET Core 3.0 ile gelen bazı yenilikler\nMagic String'den kurtulma teknikleri\nFramework katmanı implementasyonları\nError & Success Result Yönetimi\nRepository Pattern İmplementasyonları\nWorkshop çalışmaları\nEtkili Rol yönetimi sistemi altyapısı\nEtkili JWT konfigurasyonu\nExtension yazma\nve daha fazlası...\nEğer kurumsal bir kariyer hedefiniz varsa, bu kurs sizin için başladığınız gibi heyecanla bitireceğiniz bir kurs olacaktır. Şimdiden başarılar dilerim.",
      "target_audience": [
        ".NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır."
      ]
    },
    {
      "title": "Lập trình Hướng đối tượng với C++ cơ bản đến nâng cao",
      "url": "https://www.udemy.com/course/lap-trinh-huong-doi-tuong-c-co-ban-den-nang-cao/",
      "bio": "Hiểu rõ phương pháp lập trình hướng đối tượng với C++",
      "objectives": [
        "Khóa học hướng dẫn lập trình hướng đối tượng từ cơ bản đến nâng cao",
        "Áp dụng và hiểu rõ lập trình hướng đối tượng trên C++"
      ],
      "course_content": {
        "Giới thiệu": [
          "Hướng dẫn học tập trên Udemy",
          "Hướng dẫn cài đặt Visual Studio",
          "Giới thiệu tổng quan về Visual Studio"
        ],
        "Ôn tập C++": [
          "Ôn tập Vector"
        ],
        "Khái niệm chính về lập trình hướng đối tượng": [
          "Đối tượng và class là gì",
          "Trừu tượng (Abstraction) là gì?",
          "Đóng gói (Encapsulation ) là gì?",
          "Kế thừa (Inheritance) là gì?",
          "Đa hình (Polymorphism) là gì?"
        ],
        "Cài đặt class. Các phương thức khởi tạo": [
          "Khai báo class trong C++",
          "Định nghĩa phương thức của class",
          "Định nghĩa phương thức bằng cách chia file",
          "Con trỏ this là gì?",
          "Phương thức có đối tượng là tham số truyền vào",
          "Hàm khởi tạo mặc định (Default Constructor)",
          "Phương thức khởi tạo có tham số truyền vào phần 1",
          "Phương thức khởi tạo có tham số truyền vào 2 + Bài tập",
          "Tham chiếu là gì?",
          "Phương thức khởi tạo sao chép",
          "Sửa bài tập Constructor",
          "Hàm phá hủy – Destructor",
          "Thành viên tĩnh - Static data member",
          "Thành viên tĩnh - Static member functions",
          "Bài tập cộng trừ nhân chia phân số phần 1",
          "Bài tập cộng trừ nhân chia phân số phần 2",
          "Bài tập làm thêm"
        ],
        "Nạp chồng toán tử": [
          "Hàm bạn - lớp bạn phần 1",
          "Hàm bạn - lớp bạn phần 2",
          "Giới thiệu nạp chồng toán tử",
          "Toán tử số đối dùng member function",
          "Getter - Setter là gì?",
          "Toán tử số đối dùng non-member function",
          "Toán tử + dùng member và non-member function",
          "Toán tử + dùng hàm bạn",
          "Toán tử nhập xuất dùng member function",
          "Toán tử nhập xuất dùng hàm bạn",
          "Toán tử tiền tố",
          "Toán tử hậu tố",
          "Toán tử so sánh",
          "Lưu ý toán tử so sánh",
          "Ôn tập toán tử + Bài tập làm thêm"
        ],
        "Kế Thừa": [
          "Đặc tính cơ bản của kế thừa đơn",
          "Cài đặt kế thừa phần 1",
          "Cài đặt kế thừa phần 2",
          "Lưu ý cài đặt kế thừa",
          "Phạm vi truy xuất",
          "Kiểu kế thừa là gì?",
          "Kiểu kế thừa public",
          "Kiểu kế thừa private",
          "Kiểu kế thừa protected"
        ],
        "Bài tập kế thừa": [
          "Giới thiệu",
          "Giới thiệu công cụ để vẽ sơ đồ UML",
          "Phân tích bài toán và vẽ sơ đồ UML",
          "Đề bài + Sơ đồ UML",
          "Class Nhân Viên",
          "Class nhân viên văn phòng",
          "Class nhân viên sản xuất",
          "Tính lương từng nhân viên",
          "Nhập xuất thông tin các nhân viên",
          "Chức năng tính tổng lương của công ty",
          "Tìm nhân viên theo họ tên"
        ],
        "Đa Hình": [
          "Cách clone 1 project",
          "Vùng chọn kiểu phần 1",
          "Vùng chọn kiểu phần 2",
          "Vùng chọn kiểu phần 3",
          "Vùng chọn kiểu phần 4",
          "Giới thiệu",
          "Phương thức ảo",
          "Phương thức thuần ảo. Lớp trừu tượng",
          "Phương thức hủy bỏ ảo",
          "Bài tập đa hình: Nhập xuất nhân viên",
          "Bài tập đa hình: Tính tổng lương",
          "Bài tập đa hình: Tìm nhân viên theo tên",
          "Bài tập làm thêm"
        ],
        "Lập trình tổng quan": [
          "Giới thiệu lập trình tổng quan",
          "Khuôn mẫu hàm (Function template)",
          "Khuôn mẫu lớp (Khuôn mẫu lớp)",
          "Đa dữ liệu trong khuôn mẫu hàm",
          "Đa dữ liệu trong khuôn mẫu lớp",
          "Bài tập làm thêm"
        ],
        "Thuật toán tổng quan": [
          "Giới thiệu sơ lược",
          "Copy dữ liệu từ array sang vector",
          "Fill",
          "Replace",
          "Insert",
          "front_insert ?",
          "Iterator là gì?"
        ]
      },
      "requirements": [
        "Tinh thần tự học",
        "Hoàn thành bài tập",
        "Đặt câu hỏi và thảo luận với các bạn học viên khác"
      ],
      "description": "Cập nhật ngày 19/03/2017\nBạn sẽ không phí tiền vô ích!\nBạn hoàn toàn yên tâm chất lượng của khóa học, nếu bạn không hài lòng vì bất kỳ lý do nào, bạn có thể yêu cầu hoàn trả 100% học phí bởi vì Udemy có chính sách đảm bảo 30 ngày.\nLập trình Hướng đối tượng với C++ cơ bản đến nâng cao\n\nVề khóa học:\nLập trình Hướng đối tượng là một trong những phương pháp lập trình mà mọi lập trình viên đều phải biết và sử dụng thành thạo.\nKhóa học này sẽ hướng dẫn bạn tất cả các khái niệm từ cơ bản đến về lập trình hướng đối tượng với C++. Mỗi bài học được trình bày với lý thuyết và ví dụ minh họa dễ hiểu.\nKhóa học thích hợp với những bạn muốn hiểu rõ về phương pháp lập trình hướng đối tượng.\nPhần 1: Giới thiệu tổng quan Phần 2: Các khái niệm chính của phương pháp lập trình hướng đối tượng\nPhần 3: Các hàm khởi tạo\nPhần 4: Nạp chồng Toán tử\nPhần 5: Kế thừa\nPhần 6: Đa hình\nPhần 7: Genetic Programming\nPhần 8: Exception Handling (Xử lý ngoại lệ)\nPhần 9: Generic Algorithms\nKhóa học hiện tại nhận được rất nhiều phản hồi tích cực từ các bạn tham gia: Thông Đoàn (5 sao) : Hay va de hieu\nPhan Thế Anh (5 sao): dạy rất hay ạ, tuy nói hơi chậm\nNhat Khanh (5 sao): Chỉ mới là khóa đầu tiên trên Udemy nhưng bạn làm rất tốt, chỉ cần chỉnh lại âm thanh cho to một chút nữa là quá ổn, hi vọng vào các khóa sau của bạn.\nLe Tuan (5 sao): Bài học cụ thể và chi tiết , de hieu. Mong chờ các bài học tiếp của anh\nYêu cầu cần có:\n·       Máy tính có thể cài đặt được Visual Studio 2008 trở lên\n·       Có căn bản lập trình ở bất kì ngôn ngữ nào ( biến, hàm, loop )\n·       Tinh thần tự học, làm bài tập và thảo luận bài học\nTại sao nên học khóa này:\nMình biết chắc rằng những ai đang đọc những dòng chữ này là những người khao khát tìm kiếm tri thức nhất. Trước khi học một gì đó, chúng ta nên tự hỏi tại sao phải học điều đó, nó sẽ giúp ích gì cho chúng ta. Với khóa học này, bạn sẽ được nắm rõ 100% cách thức lập trình hướng đối tượng.  Hoặc bạn bị hỏng kiến thức về lập trình hướng đối tượng, học trên trường không hiểu, còn chần chờ gì nữa, hãy bắt đầu khóa học này!",
      "target_audience": [
        "Các bạn tham gia nên có căn bản về lập trình ở bất kì ngôn ngữ nào."
      ]
    },
    {
      "title": "2025 Python全攻略",
      "url": "https://www.udemy.com/course/python-master/",
      "bio": "超過40小時的內容，學習Python語法、程式邏輯、識別Python資料類別與使用時機，用正規表示式處理資料、處理文件系統、運用Python網路爬蟲、連結SQL資料庫、處理Excel和csv，寄送email，一步步實作成為Python達人！",
      "objectives": [
        "超過40小時的課程，學習所有必要的Python程式知識！！",
        "學會基本Python語法、培養程式邏輯以及程式語言觀念",
        "識別基本與進階Python資料類別與使用時機",
        "使用Python做文件管理與檔案整合",
        "學會Pythonic的程式寫法，寫出具有高維護性以及可讀性的程式碼",
        "使用正規表示式 (Regular expression)來處理資料與大型文件",
        "學會使用Python網路爬蟲技巧以及操作實際專案",
        "使用Python做自動化管理，包含電子郵件處理寄送以及SQLite資料庫操作",
        "學會使用Python的進階開發環境Jython做圖形處理",
        "使用基本的Python套件Flask來製作網頁伺服器",
        "運用Tkinter製作基本桌機應用程式",
        "學習Python 3語法、比較與Python 2語法的不同"
      ],
      "course_content": {},
      "requirements": [
        "準備好學習Python課程",
        "不用擔心學不會，也不需要有任何程式語言背景或是知識",
        "有一台電腦就可以直接上手"
      ],
      "description": "這堂 2025 Python 全攻略課程會一步一步帶者你走，讓你能夠從頭開始學習程式語言的基本語法、邏輯架構、思考路線，以及開發流程。不需要有任何的程式設計經驗，也不需要有相關的背景知識。此課程包含現在主流以及實用的 Python 實作，包含\n\n\nPython 基本與進階資料類型，涵蓋(int, string, float, boolean, dict, set, list, and tuples)\nPython 運算、控制流程與 Pythonic 語法\nI/O 文件處理\n物件導向語法、繼承\n解析模組(Module)和套件(Package)的概念\n實做 Error Handling\n使用正規表示式(regular expressoin)處理大型資料的接收與分析\n使用requests以及beautiful soup模組製作網路爬蟲\n製作Python TypedList\n使用Pylint以及Unittest\n透過sqlalchemy連結資料庫\n透過smtplib接收以及寄送電子郵件\n使用Jython處理圖片\n學習Flask框架製作網頁伺服器\n學習基礎Tkinter語法，製作初階桌面應用程式\n\n\n此課程包含 Python3 由淺至深的內容，帶你學習全面的Python基本與實作必要知識。超過40小時的課程，包含基本語法、程式架構、邏輯思路、問題處理、Debug技巧，建立扎實與全面的Python必備知識! Udemy上面有許多課程，但此課程是適合所有層級學習者的全面課程！\n耗時5個月的構思與準備，加上設計與影片製作，這堂課包含所有你需要的工具與知識，來成為一位Python開發者，製作出任何實用的商業與便捷功能，連結資料庫，寫出精美、維護性以及功能性高的程式碼。此課程會不斷更新以提供新的內容，根據學生的狀況與全球網頁開發趨勢，不斷更新讓知識保持新鮮且豐富。\n本課程講解各種現代開發工具以及應用原則，讓你不論身在何處都可以隨時隨地的學習最新知識。詳細的解說，讓你從初學者到大師! 所有project皆提供原始碼與教學，讓你輕鬆動手寫程式! 不用花大錢，即可由簡入深學習到許多開發技巧和debug觀念!",
      "target_audience": [
        "對學習Python或程式語言有興趣的初學者",
        "對資料科學、數據分析、資料視覺化、機器學習、深度學習有興趣的有經驗者",
        "大學資工系、資管系主修或副修學生",
        "想要轉職成為工程師的在職者",
        "想要考資工研究所的學生"
      ]
    },
    {
      "title": "Impara a programmare in C++ e realizza i tuoi progetti",
      "url": "https://www.udemy.com/course/cppperituoiprogetti/",
      "bio": "Un corso pratico e completo che ti insegnerà a scrivere programmi da solo per realizzare ciò che vuoi.",
      "objectives": [
        "Sarai in grado di utilizzare i costrutti che stanno alla base di ogni linguaggio di programmazione.",
        "Saprai come utilizzare vettori e matrici per salvare dati più complessi ed elaborarli con più facilità, inoltre saprai gestire la memoria dinamicamente.",
        "Saprai leggere e scrivere dati su file di testo, per salvare il risultato di un'elaborazione o leggere una grande mole di dati senza scriverli ogni volta.",
        "Potrai creare le tue librerie di funzioni e classi da utilizzare in tutti i tuoi programmi."
      ],
      "course_content": {
        "Introduzione": [
          "Introduzione al corso",
          "Compilazione di un programma",
          "Installazione IDE - CodeBlocks (Windows)",
          "Alternative a CodeBlocks per MacOS",
          "Hello World!"
        ],
        "Le basi": [
          "Le basi : introduzione",
          "Struttura di un programma: Direttive",
          "Struttura di un programma: Funzione main",
          "Variabili",
          "Stampa variabili su schermo",
          "Lettura variabili da tastiera",
          "Operatori aritmetici",
          "[Esercizio svolto] Somma tra due numeri inseriti da tastiera",
          "[Bonus] Lettura e scrittura dati in C",
          "Quiz di fine sezione",
          "Ora sai le basi!",
          "Esercizi di riepilogo"
        ],
        "Costrutti selettivi": [
          "Costrutti selettivi: Introduzione",
          "Gli operatori logici",
          "Gli operatori Booleani",
          "Il costrutto if...else",
          "Il costrutto if...else if...else",
          "Il costrutto switch",
          "[Esercizio svolto] Calcolatrice",
          "Quiz di fine sezione",
          "Ora sai usare if e switch!",
          "Esercizi di riepilogo"
        ],
        "Costrutti iterativi": [
          "Costrutti iterativi: Introduzione",
          "Il ciclo while",
          "Il ciclo do...while",
          "[Esercizio svolto] Sommatoria di una serie indeterminata di numeri",
          "Il ciclo for",
          "[Esercizio svolto] Moltiplicazione come serie di somme",
          "Quiz di fine sezione",
          "Ora sai usare for e while!",
          "Esercizi di riepilogo"
        ],
        "I dati strutturati": [
          "I dati strutturati: Introduzione",
          "I vettori",
          "Usare il ciclo for con i vettori",
          "[Esercizio svolto] Trovare il massimo di un vettore",
          "Le matrici",
          "Usare il ciclo for con le matrici",
          "[Esercizio svolto] Riga di una matrice con somma degli elementi massima",
          "Typedef",
          "Le struct",
          "Inserire vettori all'interno di una struct",
          "Struct innestate",
          "Quiz di fine sezione",
          "Ora sai utilizzare i dati strutturati!",
          "Esercizi di riepilogo"
        ],
        "Puntatori e memoria dinamica": [
          "Puntatori e memoria dinamica: Introduzione",
          "I puntatori",
          "L'operatore indirizzo di memoria",
          "L'operatore new",
          "Allocare un vettore dinamicamente",
          "Allocare una matrice dinamicamente",
          "L'operatore delete",
          "[Esercizio svolto] Massimo di un vettore di dimensione non nota",
          "[Esercizio svolto] Riga con somma massima di matrice di dimensioni non note",
          "[Bonus] Memoria dinamica in C",
          "Quiz di fine sezione",
          "Ora sai usare la memoria dinamica!",
          "Esercizi di riepilogo"
        ],
        "Funzioni e procedure": [
          "Funzioni e procedure: Introduzione",
          "Cosa sono le funzioni?",
          "La funzione helloWorld()",
          "[Esempio] f(x)",
          "Funzioni e procedure",
          "Passaggio dei parametri per valore o per riferimento",
          "[Esempio] procedura addizione",
          "Passare un vettore a una funzione",
          "[Esercizio svolto] Funzione media di un vettore",
          "Passare una matrice a una funzione",
          "[Esercizio svolto] Funzione determinante",
          "La ricorsione",
          "[Esercizio svolto] Calcolo del fattoriale",
          "Quiz di fine sezione",
          "Ora sai usare le funzioni!",
          "Esercizi di riepilogo"
        ],
        "Progetti e librerie": [
          "Progetti e librerie: Introduzione",
          "Come creare la propria libreria",
          "[Progetto svolto] calcolatrice",
          "[Progetto svolto] somma di due vettori",
          "Quiz di fine sezione",
          "Ora sai creare le tue librerie"
        ],
        "Lettura e scrittura su file": [
          "Lettura e scrittura su file: Introduzione",
          "Scrivere \"Hello world\" su un file",
          "fstream",
          "apertura di di un file",
          "Stampa di una scritta su un file",
          "Lettura di un vettore da un file",
          "Lettura di una matrice quadrata da un file",
          "Lettura di una matrice NxM da un file",
          "Quiz di fine sezione",
          "Ora sai leggere e scrivere dati su un file",
          "Esercizi di riepilogo"
        ],
        "Programmazione orientata agli oggetti": [
          "Programmazione orientata agli oggetti: Introduzione",
          "Classe e oggetto",
          "la classe HelloWorld",
          "Variabili membro",
          "Costruttori di una classe",
          "Gli operatori punto e freccia",
          "[Progetto 10.1] La classe punteggio",
          "Le funzioni di una classe",
          "[Progetto 10.2] La classe punteggio con le funzioni",
          "Overloading degli operatori",
          "Overloading degli operatori di input e output",
          "[Progetto 10.3] La classe punteggio con gli operatori",
          "[Esercizio svolto] La classe punteggio del basket - Parte 1",
          "[Esercizio svolto] La classe punteggio del basket - Parte 2",
          "Quiz di fine sezione",
          "Ora conosci le basi della programmazione orientata agli oggetti",
          "Esercizi di riepilogo"
        ]
      },
      "requirements": [
        "Il corso parte da zero, dando allo studente le conoscenze base di cui ha bisogno per realizzare i suoi obiettivi di studio e/o carriera."
      ],
      "description": "Un corso completo sulla programmazione in C/C++ che ti permetterà di avere le basi per realizzare ciò che vuoi!\nImparerai quali sono i costrutti che stanno alla base di un qualsiasi linguaggio di programmazione, come e quando utilizzarli.\nVedrai come utilizzare vettori e matrici (anche dinamicamente) per salvare una grande mole di dati e fare elaborazioni complesse con molta più facilità.\nSaprai come leggere e scrivere dati su file di testo. Questo ti permette di salvare lo stato del tuo programma per poi riprendere l'elaborazione una volta riavviato, senza ricominciare da capo ogni volta. Vedrai come salvare il risultato di un'elaborazione in modo permanente e come leggere una grande quantità di dati senza dover andare ogni volta a scriverli uno per uno da tastiera.\nImparerai la base della programmazione orientata agli oggetti che ti permetterà di creare le tue classi, da inserire nelle tue librerie per poterle poi utilizzare ogni volta che ne hai bisogno senza doverle riscrivere da capo.\nIl corso parte dai concetti base di programma, algoritmo e processo per poi arrivare ai concetti più avanzati come la programmazione orientata agli oggetti.",
      "target_audience": [
        "Il corso parte dalle basi, e si rivolge a chiunque voglia imparare a programmare, ma non sa da dove iniziare. Imparare il C++ non solo ti porta a poter creare videogiochi, programmi o a programmare schede elettroniche (Come Arduino), ma ti permette anche di imparare altri linguaggi di programmazione con grande facilità (ad esempio Java per creare applicazioni Android o Swift per creare applicazioni iOS), data la similitudine che c'è tra la maggior parte dei concetti."
      ]
    },
    {
      "title": "教え方が本当に丁寧な【Excel VBAラボ】Level1「マクロ記録・VBA基本編」",
      "url": "https://www.udemy.com/course/excel-labo-vba-labo-level-one/",
      "bio": "１つ１つ完全に理解して進みたい人のための丁寧なExcel VBA講座。初めての人が絶対に躓かないよう、VBAの基本となる『マクロ記録』をマスターすることにフォーカスした講座。その後のVBAプログラミング力の飛躍的成長に繋がります。",
      "objectives": [
        "「マクロ記録」からマクロを作る方法を学びたい方。",
        "Excel VBAプログラミングの基本ショートカット",
        "体系的に１つずつステップを踏んでExcel VBAの本質をきちんと学習していきたい方。"
      ],
      "course_content": {
        "講師紹介": [
          "はじめに",
          "講師紹介"
        ],
        "本編": [
          "講座コンセプトと講義ファイル【ダウンロード】",
          "ノートPCの設定とFnキー問題",
          "マクロ有効ブック（.xlsm）",
          "ショートカットキーとアクセスキー",
          "開発タブ",
          "Visual Basic Editor",
          "マクロ記録とVBE①",
          "マクロ記録とVBE②",
          "マクロ記録トレーニング①",
          "マクロ記録トレーニング②",
          "マクロ記録トレーニング③",
          "Moduleが増えるタイミング",
          "Rangeプロパティの記述",
          "自分でSubからコード記述",
          "Range・ActiveCell・Selection",
          "FormulaR1C1をValueプロパティに置換",
          "SmallScrollとLargeScrollは不要",
          "プロシージャ名のルール",
          "デバッグボタンとリセット",
          "マクロ記録と色",
          "With・EndWithは反復省略",
          "Selectionの1行マクロ",
          "選択と指定の違い",
          "不要なRange.Select",
          "【総合演習】マクロ記録とコード修正",
          "疑問に思ったらマクロ記録",
          "【補講】VBAショートカットLevel1",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Excelの関数や機能については中級程度、習熟していること。",
        "Excelのショートカットを日頃から多数使っていること。",
        "基本的な英単語の入力ができる方。"
      ],
      "description": "『Excel VBA ラボ』は、Excel を実務で利用している人で、初めてプログラミングやVBA（マクロ）を学ぶ人に向けて設計された講座。\n『Level1』→『Level2』→『Level3』・・と続く連続構成となっているため、必ず『VBA ラボLevel1』からご参加ください。Excel VBA は基本としておさえるべきノウハウや知識が多いため、プログラマーでない方は、徐々にステップアップしながらプログラミング的なノウハウに慣れつつ堅実に学習していく必要があります。\nLevel1では、現代のExcel VBA 教育で比較的軽視されてしまっている「マクロ記録」を全編を通して使っていくことで、マクロ作成時の「つまづき」を低減すると共に、VBA のショートカットや記述・修正のコツを学び、幅広い機能を備えたマクロを作成できるための基礎能力を養います。",
      "target_audience": [
        "Excelを普段使用していて、Excel VBA（マクロ）の学習を本格レベルで始めたい方。",
        "「マクロ」「VBA」というものがどんなものか気になっていて初めて勉強をしたい方。",
        "実務ですぐ役立つよりも、疑問なくゆっくり1つずつ完全に基本を固める解説が聞きたい方。"
      ]
    },
    {
      "title": "Aprender a programar con Java. De cero hasta hacer sistemas",
      "url": "https://www.udemy.com/course/aprender-a-programar-con-java-de-cero-hasta-avanzado/",
      "bio": "¡Ahora con JavaFX! Aprende conceptos básicos de programación hasta el desarrollo de un sistema completo con Java.",
      "objectives": [
        "Comprenderás los conceptos clave de la programación en general.",
        "Comprenderás los conceptos clave de la programación orientada a objetos.",
        "Serás capaz de utilizar la lógica de programación para resolver problemas.",
        "Podrás crear y leer archivos desde tus programas Java.",
        "Sabrás crear interfaces gráficas de usuario mediante Swing.",
        "Aprenderás a manejar los errores de tus programas y darles un tratamiento adecuado.",
        "Podrás hacer consultas, inserciones y actualizaciones en una base de datos desde Java.",
        "Aprenderás a utilizar el gestor de base de datos Postgresql.",
        "Con lo que aquí aprendas, podrás crear tus propios programas de punto de venta, inventarios y más.",
        "Ahora también, este curso te permitirá crear interfaces gráficas grandiosas con JavaFX."
      ],
      "course_content": {
        "Introducción a Java": [
          "Presentación sección 1",
          "Generalidades y preparacion del entorno de trabajo",
          "El IDE de desarrollo",
          "Instalación de JDK y Netbeans en MAC usando Homebrew",
          "El compilador y la maquina virtual",
          "Tómalo con calma :)",
          "Nuestro primer programa en Java",
          "El compilador de Java.",
          "Quiz: Introducción a Java"
        ],
        "Variables": [
          "Presentación sección 2",
          "La memoria RAM y las variables de Java.",
          "Tipos de datos en Java.",
          "Reglas y convenciones para el nombramiento de variables.",
          "Recibiendo datos desde el teclado.",
          "Operaciones con variables numéricas.",
          "Operadores relacionales",
          "Operadores booleanos.",
          "Operadores bitwise",
          "Precedencia de operadores.",
          "Variables y operadores"
        ],
        "Cadenas de caracteres": [
          "Cadenas de caracteres.",
          "Operaciones con Strings + concatenar Strings",
          "Operaciones length, substring y equals en los Strings",
          "Operaciones indexOf, chartAt, contains, startsWith, endsWith e isEmpty",
          "Operaciones replace, strip, toLowerCase, toUpperCase y valueOf"
        ],
        "La programación orientada a objetos. Conceptos básicos.": [
          "Presentación sección 3",
          "Explicación del concepto de Programación Orientada a Objetos.",
          "Creación de clases y objetos.",
          "Métodos: Concepto y creación.",
          "Reglas y convenciones para el nombramiento de clases, objetos y métodos.",
          "Métodos: Argumentos y parámetros",
          "Métodos: Retorno de valores",
          "Métodos: constructores.",
          "Modificadores de acceso.",
          "Encapsulamiento en Java.",
          "Sobrecarga de métodos.",
          "Atributos y métodos de clase.",
          "GUI y gráficos: Uso de cuadros de diálogo.",
          "Aplicación de conceptos aprendidos: Calculadora gráfica.",
          "Quiz: Conceptos iniciales de programación orientada a objetos."
        ],
        "Instrucciones de control": [
          "Presentación sección 4",
          "Explicación del concepto de estructuras de control.",
          "Estructuras de decision: if",
          "Estructuras de decisión: switch-case.",
          "Determinar la edad y género.",
          "Estructuras repetitivas: while.",
          "Estructuras repetitivas: do-while.",
          "Estructuras repetitivas: for",
          "Operadores especiales: Operadores de asignación compuestos.",
          "Operadores especiales: Operadores de incremento y decremento.",
          "Sentencia Break",
          "Sentencia continue.",
          "Dibujo de Rectángulos y Óvalos parte 1",
          "Dibujo de Rectángulos y Óvalos parte 2",
          "Test estructuras de control."
        ],
        "Uso de clases externas y del API de Java": [
          "Presentación sección 5",
          "Concepto y uso de paquetes en Java.",
          "Importación de clases",
          "¿Qué es el API de Java?"
        ],
        "Arreglos.": [
          "Presentación sección 6",
          "Creación de arreglos.",
          "Acceso a los miembros de un arreglo.",
          "Uso de la instrucción foreach.",
          "Los ArrayList.",
          "Introducción al manejo de excepciones en arreglos. 1a parte.",
          "Introducción al manejo de excepciones en arreglos. 2da parte.",
          "Dibujo en Java. Creación de un arco iris.",
          "Test sobre arreglos"
        ],
        "Introducción a la conversión de tipos.": [
          "Presentación sección 7",
          "Conversión entre tipos primitivos.",
          "Las clases envoltorio.",
          "Conversión entre números y Strings"
        ],
        "Conceptos avanzados de programación orientada a objetos.": [
          "Presentación sección 8",
          "La herencia: subclases y superclases.",
          "Miembros-protected.",
          "Casting en objetos. Conversión hacia arriba o upcasting",
          "Casting en objetos. Conversión hacia abajo o downcasting.",
          "Sobreescritura de miembros.",
          "Invocar constructores y métodos de superclase.",
          "Polimorfismo en Java.",
          "Proyecto Plantas vs Zombies y polimorfismo. Primer parte.",
          "Proyecto Plantas vs Zombies y polimorfismo. Segunda parte.",
          "Clases y métodos abstractos.",
          "Sistema de nómina utilizando polimorfismo. Primera parte.",
          "Sistema de nómina utilizando polimorfismo. Segunda parte.",
          "Sistema de nómina utilizando polimorfismo. Tercera parte.",
          "Métodos y clases final.",
          "Creación y uso de Interfaces en Java.",
          "Relación tiene-un entre objetos de distintas clases.",
          "Uso de this"
        ],
        "Manejo de excepciones.": [
          "Presentación sección 9",
          "Explicación del concepto de excepciones.",
          "Ejemplo del manejo de excepciones.",
          "Excepciones verificadas y excepciones no verificadas.",
          "Ejemplos de excepciones no verificadas",
          "Declaración de las excepciones de un método",
          "Lanzar más de una excepción en un método.",
          "Atrapar excepciones. Bloque try-catch",
          "Excepciones personalizadas y uso de la palabra throw"
        ]
      },
      "requirements": [
        "Deberán tener un conocimiento general del manejo de una computadora.",
        "Conocer la forma de utilizar el sistema de directorios de windows u otro sistema operativo.",
        "Será favorable (no indispensable) tener algún conocimiento a nivel técnico de windows.",
        "Se recomienda estar familiarizado con los conceptos generales de bases de datos para las partes finales del curso."
      ],
      "description": "¿No sabes programar y te gustaría mucho aprender desde cero, de manera sencilla y práctica?\nEste curso parte de los aspectos básicos de la programación en general, tomando como referencia el lenguaje de programación Java. El contenido del curso se mueve hasta aspectos intermedio-avanzados y finalmente conjunta y amplia los conocimientos mostrando de manera práctica el desarrollo de un proyecto de sistemas con interfaces gráficas e interacción con bases de datos postgresql.\n\nAdemás, se ha añadido nuevo material para que aprendas a crear interfaces gráficas con JavaFX.\nEl curso consta de mucho material en video para mostrar de manera práctica y dinámica los conceptos de programación, haciendo un énfasis fuerte en la parte práctica pero sin olvidarnos del fundamento teórico que es necesario. En menor medida también constará de documentos que servirán para repasar los conceptos más teóricos y servirán como material de consulta rápida para los estudiantes.\nEl curso está estructurado tomando en cuenta un conocimiento nulo en programación, por lo que es perfecto para usuarios principiantes, sin embargo, es adecuado a los usuarios con conocimientos previos de programación para dar un paso adelante en el desarrollo de sistemas de información.\n\nSe recomienda que los estudiantes tengan al menos un conocimiento general del manejo de la computadora.",
      "target_audience": [
        "Aquellos que deseen aprender programación desde cero.",
        "Quienes estén interesados en el lenguaje Java.",
        "Los que deseen iniciarse en el negocio del desarrollo de sistemas de información.",
        "Quienes deseen profundizar sus conocimientos en el lenguaje Java.",
        "Quienes deseen perfeccionar sus conocimientos en desarrollo de software."
      ]
    },
    {
      "title": "Laravel 5.8 Completo - O mais poderoso Framework PHP",
      "url": "https://www.udemy.com/course/laravelcompleto/",
      "bio": "Eloquent ORM, relacionamentos, integração com Angular, autenticação, filas de emails, cache com Redis e muito mais",
      "objectives": [
        "Criar aplicações complexas com agilidade",
        "Ter experiência de como trabalhar com arquiteturas complexas orientadas a objeto",
        "Construir rapidamente interfaces de acesso a base de dados",
        "Entender a divisão da aplicação em modelos, visões e controladores",
        "Dominar os principais recursos do Laravel"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Instalação Windows": [
          "Instalação XAMPP, Composer, NPM",
          "Criação do Projeto",
          "Configuração do VirtualHost no Apache",
          "Instalação do Redis"
        ],
        "Instalação Linux": [
          "Instalação do PHP, MySQL e Apache",
          "Instalação do NPM",
          "Instalação do Redis"
        ],
        "Editores e IDEs": [
          "Visual Studio Code e Extensions"
        ],
        "O projeto Laravel": [
          "Pastas"
        ],
        "Rotas": [
          "Introdução",
          "Parâmetros das rotas",
          "Parâmetros opcionais",
          "Parâmetros com regras",
          "Agrupamento de rotas",
          "Nomeando rotas",
          "Redirecionando requisições",
          "Métodos HTTP"
        ],
        "Controladores": [
          "Introdução",
          "Criando o controlador",
          "Requisições HTTP",
          "Associando rotas ao controlador",
          "Método Index",
          "Métodos Create e Store",
          "Armazenando em sessão",
          "Método Show",
          "Métodos Edit e Update",
          "Método Destroy",
          "Correção do Index"
        ],
        "Views": [
          "Introdução",
          "Passagem de parâmetros",
          "if / else",
          "Templates - parte 1",
          "Templates - parte 2",
          "Declarando estilos",
          "Rotas ativas",
          "Loops",
          "Passagem de parâmetros para layouts",
          "Componentes",
          "Passagem de parâmetros para componentes",
          "Criando um alias para um componente",
          "Switch / Case",
          "Utilizando o Bootstrap 4",
          "Utilizando Bootstrap 4 no Laravel 6"
        ],
        "Migrações": [
          "Criação de um database em Windows",
          "Criação de um database em Linux",
          "Introdução a migrações",
          "Criando migrations",
          "Criando tabela Marcas",
          "Adicionando um campo a uma tabela",
          "Relacionamento muitos para muitos",
          "Atributo nullable",
          "Outros comandos",
          "Baixe aqui o conteúdo da seção"
        ],
        "Modelos / Eloquent ORM (Mapeameto objeto-relacional)": [
          "Criando Modelos",
          "Inserindo registros",
          "Consultas",
          "Utilizando o Like",
          "Encadeamento de queries",
          "Agrupando queries",
          "Ordenando",
          "Trabalhando com Collections",
          "Atualizando registros",
          "Apagando registros",
          "Soft Delete"
        ]
      },
      "requirements": [
        "É desejável para seu maior aproveitamento do curso, que tenha um conhecimento básico da linguagem PHP, mas não é essencial",
        "Conhecimento básico de HTML"
      ],
      "description": "O Laravel consiste em um framework back-end robusto que lhe oferece um time-to-market reduzido e também uma arquitetura de código muito organizada, o que facilita a manutenção de seu sistema e também o trabalho em equipe.\nAtualmente, o Laravel é considerado o maior Framework PHP existente. Esse status se dá devido à agilidade de programação de sistemas complexos envolvendo grande quantidade de recursos, tais como segurança, acesso a dados e arquitetura da aplicação. Todas essas características, que são básicas a qualquer sistema web, são fornecidas nativamente pelo Laravel de modo simples e intuitivo.\nVocê tem a possibilidade de construir aplicações com autenticação e cadastros em questão de minutos. Sem contar que não precisa dominar técnicas de autenticação e muito menos saber SQL para realizar tal tarefa.\nNeste curso abordaremos os recursos que o Laravel oferece e você estará apto a agilizar o desenvolvimento de seus sistemas.\nPreparamos os seguintes conteúdos pra você:\nDivisão de seu sistema em modelos, visões e controladores.\nConceitos avançados de criações de layouts utilizando a sintaxe Blade do Laravel.\nConceito de migrations, que facilita e agiliza a manutenção de sua base de dados.\nEloquent ORM: O poderoso mapeamento de sua base de dados em objetos que o Laravel oferece. Você acessa tabelas e relacionamentos de modo simples e sem precisar digitar nenhum código SQL.\nAprenda a trabalhar com os métodos PUT, GET, POST, PATCH e DELETE e como linkar seus formulários com seu código PHP.\nAprenda a interceptar as requisições e respostas HTTP por meio de middlewares.\nForneça uma API HTTP e comunique-se com ela através de javascript.\nAprenda em detalhes a como realizar autenticação em seu sistema.\nCaso tenha alguma dúvida a respeito do curso, envie-nos uma mensagem que teremos o prazer de responder.",
      "target_audience": [
        "Desenvolvedores PHP iniciantes a avançados",
        "Analistas desenvolvedores",
        "Arquitetos de Software"
      ]
    },
    {
      "title": "Sıfırdan C++ ve Programlama Öğrenin!",
      "url": "https://www.udemy.com/course/c-ve-programlama-kursu/",
      "bio": "Etik hackerlık, oyun geliştirme ve çoğu yazılım için kullanılan C++'ı uygulamalar ve çözümlü sorularla öğrenin.",
      "objectives": [
        "Program yazabileceksiniz.",
        "Kendi uygulamalarınızı geliştirebileceksiniz.",
        "C++ programlama dilini öğreneceksiniz.",
        "C++ programlama dilinin temel özelliklerini kavrayacaksınız.",
        "Not: Bu kurs, nesne yönelimli programlama veya veri yapıları kursu değildir. Temel anlamda C++ girişi yapılması hedeflenmiştir."
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Bu Eğitimdeki Derslere Nasıl Çalışmalı?"
        ],
        "Kodlama Ortamı": [
          "Windows Ortamında Codelite Kurulumu (Opsiyonel)",
          "CodeLite'nin Kurulumu ve Çalıştırılması"
        ],
        "Merhaba Dünya ve Yorumlar": [
          "C++ ile Merhaba Dünya kodunun yazdırılması",
          "C++ Dilinde Yorum Yazılması",
          "Merhaba Dünya"
        ],
        "Dilin Temelleri": [
          "Değişkenler (Variables) ve Tanımlama",
          "Değişken İsimleri ve Belirleyiciler (Identifiers)",
          "Değişken Tipleri",
          "Tip Dönüşümleri",
          "İşlemler / Operatörler",
          "Bitwise Operatörler (İkilik Tabanda İşlemler)",
          "Temel Giriş Çıkış İşlemleri (I/O) ve Standart Girdi ve Çıktı",
          "Değişken Değerini Bastıran Kod"
        ],
        "Koşullar (Conditions)": [
          "if, else ve else if Yapıları",
          "Örnek Soru Çözümü",
          "switch-case Yapısı",
          "Ödev 3: Koşullar",
          "Ödev 4: Koşullar: Sayı Aralığı",
          "Ödev 5: Koşullar: 3 Sayıdan En Küçük ve En Büyük",
          "Ödev: İşçi Probemleri + Basit Hesaplamalar"
        ],
        "Döngüler (Loops)": [
          "While Döngü Yapısı",
          "For Döngü Yapısı",
          "do/while Döngü Yapısı",
          "Örnek Soru Çözümü - 1",
          "Örnek Soru Çözümü - 2",
          "Örnek Soru Çözümü - 3",
          "Örnek Soru Çözümü - 4",
          "break ve continue Komutları",
          "Ödev 6: Döngüler",
          "Ödev 7: Fibonacci Serisi",
          "Örnek: Girilen Pozitif, Negatif ve Sıfırların Dağılımı"
        ],
        "İç İçe Döngüler (Nested Loops)": [
          "İç İçe Birden Fazla Döngünün Çalışması",
          "Örnek Soru Çözümü - 1",
          "Örnek Soru Çözümü - 2",
          "Ödev 8: İç İçe Döngüler: Matrisler",
          "Ödev: Yıldızlardan Üçgen ve Ters Dik Üçgen Bastırmak",
          "Ödev: Yıldızlrla Eşkenar Dörtgen Basan Kod",
          "Ödev: Harf Piramidi Oluşturmak"
        ],
        "Fonksiyonlar (Functions)": [
          "Basit Fonksiyon Yapıları ve Prosedürler",
          "Fonksiyonların Değer Döndürmesi ve Çağrılması",
          "Örnek Soru Çözümü",
          "Özyineli Fonksiyonlar (Recursive Functions)",
          "Ödev : Fonksiyonlar ile ilk 20 Mersanne Sayısı ve ilk 20 asal sayıyı basan kod",
          "Örnek: Özyineli Çarpım Fonksiyonu",
          "Rasgele Sayı Üretmek (Random Number Generation)"
        ],
        "Diziler (Arrays)": [
          "Diziler ve İndisler",
          "Örnek Soru Çözümü",
          "Ödev: Fonksiyonlar Asal Mersenne ve n. asal veren fonksiyon",
          "Ödev: Dizideki en büyük 3 sayının toplamını bulan kod",
          "Dizideki sayıların Aritmetik ve Geometrik ortalamaları EB EK ortalaması",
          "Kullanıcıdan Gelen sayılarla oluşan Diziyi Toplama",
          "Toplama Oyunu",
          "Çok Boyutlu Diziler",
          "Ödev: Dizileri Karşılaştırıp Alt Dizi olup olmadığını bulan kod",
          "Zar Oyunu",
          "Ödev Çözüm: Matrisin Transpozunu alan kod",
          "Örnek: Matrislerin Toplamı"
        ],
        "Göstericiler (Pointers)": [
          "Gösterici Kavramına Giriş",
          "Dizilerin Göstericilerle Kullanılması",
          "Fonksiyonların Göstericilerle Kullanımı ve Referans/Değer ile Çağırma",
          "Dinamik Hafıza ve Malloc",
          "Gösterici Aritmetiği (Pointer Arithmetic) ve Kullanıcıdan Sayı okuma",
          "Fonksiyonların Dizileri Parametre Alması",
          "Ödev: Fonksiyon ile Bir Dizideki En Büyük ve En Küçük değerin farkını döndürmek"
        ]
      },
      "requirements": [
        "Güçlü bir öğrenme arzusu",
        "Temel bilgisayar bilgisi olan herkese açıktır.",
        "Bu dersi anlamak için daha önceden hiçbir programlama dili tecrübesine sahip olmanıza gerek yoktur."
      ],
      "description": "Bu kurs kapsamında hiç bilmeyenlere hitap ederek \"Merhaba Dünya\" ile başlayarak C++ programlama dilinin temellerini anlatıp, bilgisayarın hafızasına düşük seviyeli müdahaleler yapabilecek seviyeye kadar katılımcıları getireceğiz.\nC++ eğitim setimiz:\nHiç bilmeyen ve ilk kez programlamaya başlayan,\nÜniversitede programlamaya giriş dersi alan ve bu derse takviye amacıyla kaynak arayan,\nProgramlamayı hobi olarak amaçlayan ve bir yerlerden başlamak isteyen,\nVeya, bildiklerini pekiştirmek ve formal bir şekilde bir programlama dilini öğrenme adımlarının üzerinden geçmek isteyen herkese açık bir kurstur.\nKursun özelliği, konu anlatımının yanında, anlatılan konuların tamamının uygulamalı olarak gösterilmesi ve aynı zamanda verilen soru, ödev ve antremanlarla katılımcıların kodlama dünyasına ellerini bulaştırmasıdır.",
      "target_audience": [
        "Programlama dünyasına yeni adım atan herkes için ideal bir eğitim."
      ]
    },
    {
      "title": "Tia Portal ile Siemens S7 1200 PLC ,Panel ve WinCC SCADA-1",
      "url": "https://www.udemy.com/course/siemens-s7-1200-plc-ve-siemens-panel-dersleri/",
      "bio": "TIA PORTAL Eğitimi, STEP7,WINCC,HMI",
      "objectives": [
        "Donanım konusuna hakim olacak",
        "Proje geliştirebilecek",
        "HMI Panel Projelerini yapabilecek",
        "SCADA Projelerini yapabilecek.",
        "Temel kumanda ve PLC programlama mantığını kavrayacak."
      ],
      "course_content": {
        "PLC Yapısı ve Temel Kavramlar, Sayı Sistemleri, Adres Alanları": [
          "İHTİYACINIZ OLAN BÜTÜN KURSLAR",
          "PLC ve Otomasyon Genel Kavramlar",
          "S7 1200 Genel Yapısı",
          "Sayı Sistemleri",
          "PLC'de Adres Alanları",
          "TIA PORTAL İletişim ve Donanım Ayarları",
          "TIA PORTAL Blok Ekleme ve Genel Ekran Ayarları",
          "TIA PORTAL İçerisinde Yanlış Eklenen PLC Modelinin Değiştirme",
          "PLC Bağlantıları",
          "PLC Resetleme İşlemi"
        ],
        "MANTIK FONKSİYONLARI": [
          "\"VE\" Mantığı ile \"220 Volt\" Lamba Kontrolü",
          "\"VEYA\" Mantığı ile \"220 V\" Lamba Kontrolü",
          "\"ÖZEL VEYA\" Mantığı ile \"12 Volt\" DC Motor Kontrolü",
          "\"DEĞİL\" Fonksiyonu ile \"220 Volt\" Lamba Kontrolü"
        ],
        "BUTON,RÖLE,KONTAKTÖR BAĞLANTILARI ve UYGULAMASI": [
          "\"NORMALDE KAPALI\" Butonun PLC'ye Bağlanması ve Kullanımı",
          "PLC Çıkışına Kontaktör Bağlanması",
          "Kontaktör Nedir? Kullanımı ve Uygulaması",
          "UYGULAMA: İki Adet Motor Kontrolü, Kumanda Devresi ve PLC Programı",
          "UYGULAMA:2 Adet Buton ile 3 Adet Motor Kontrolü, Kumanda Devresi ve PLC Programı",
          "3 Adet Buton ile 4 Adet Motor Kontrolü,Kumanda Devresi ve PLC Programı"
        ],
        "HAFIZA FONKSİYONLARI": [
          "Hafıza Fonksiyonları Kullanımı",
          "SET_BF,RESET_BF, SR VE RS Blokları",
          "PLC'de Kalıcı (RETAIN) Alanlar",
          "Asenkron Motorlar Yapısı ve Yön Kontrolü",
          "Yardımcı Kontak (MERKER) ile SET-RESET İşlemi"
        ],
        "UYGULAMALAR": [
          "Asenkron Motorun Kesik ve Sürekli Çalıştırılması",
          "Yardımcı Röle Uygulaması-1",
          "Yardımcı Röle Uygulaması-2",
          "SET-RESET Uygulaması",
          "SR Uygulaması"
        ],
        "KENAR TETİKLEMELERİ": [
          "Kenar Tetiklemeleri-1",
          "Kenar Tetiklemeleri-2",
          "UYGULAMA:Tek Buton ile AÇ/KAPA Yapma",
          "UYGULAMA:Tek Adet Buton ile 4 Adet Cihaz Kontrolü",
          "Negatif Kenar Uygulaması",
          "TP Tipi Zaman Rölesi"
        ],
        "ZAMAN RÖLELERİ": [
          "TON-Düz Zaman Rölesi",
          "TOF ve TONR- Ters Zaman Rölesi ve Kaydetmeli Zaman Rölesi",
          "Röle Tipi Zamanlayıcılar ve RT-PT Fonksiyonları",
          "UYGULAMA:TON ve TP",
          "UYGULAMA:TON Zaman Rölesi",
          "UYGULAMA: Periyodik Çalışma-TON Zaman Rölesi",
          "Asenkron Motorlara Yıldız-Üçgen Yol Verme ve Kumanda Devresi",
          "YILDIZ/ÜÇGEN Yol Verme PLC Programı",
          "İki Yönlü Çalışan Asenkron Motora YILDIZ/ÜÇGEN Yol Verme",
          "Termik Aşırı Akım Rölesi Nedir?",
          "UYGULAMA: TON Zaman Rölesi ve Aşırı Akım Kullanımı",
          "UYGULAMA:TON Zaman Rölesi ve Kenar Tetiklemeleri",
          "UYGULAMA: TON Zaman Rölesi- 3 Adet Motor Kontrolü",
          "UYGULAMA: TON Zaman Rölesi ve Aşırı Akım",
          "UYGULAMA: TON Zamanlayıcıya Saniye ve Milisaniye Değer Girme",
          "UYGULAMA: TOF-Ters Zaman Rölesi"
        ],
        "S7 1200'DE SAYICILAR ve KARŞILAŞTIRMA KOMUTLARI ve CLOCK MEMORY Bitleri": [
          "Sayıcı Çeşitleri ve Kullanımı",
          "Karşılaştırma Komutları",
          "CLOCK MEMORY Bitleri",
          "Zamanlayıcıların Sayıcı Olarak Kullanılması",
          "UYGULAMA: Periyodik Çalışmalarda Sayıcı Kullanımı",
          "UYGULAMA: CTU Sayıcı Kullanımı",
          "UYGULAMA:Sayıcı ile Motor Çalıştırme ve Durdurma",
          "UYGULAMA:CTU Sayıcı ile Motoru i Kesik ve Sürekli Çalıştırma",
          "UYGULAMA:CTU VE TON Uygulaması",
          "UYGULAMA:CTU ve TP Zaman Rölesi",
          "UYGULAMA: Otopark Projesi",
          "UYGULAMA:CTU ve Röle Tipi TP Zamanlayıcı"
        ],
        "S7 1200 İLE SİMÜLASYON KULLANIMI": [
          "Fiziksel Giriş Çıkışların İzlenmesi",
          "Simülatör Tablosu Kullanımı",
          "Veri Değişim Tablosu Kullanımı (SQUENCE)",
          "TIA PORTAL V18 ile Simülasyon (PLCSIM) Projesi Oluşturma",
          "Uygulama-1",
          "Uygulama-2",
          "Simülasyon ile Zamanlayıcı ve Sayıcı Kullanımı",
          "Analog İşlemler-NORM_X ve SCALA_X",
          "İki PLC'nin Haberleşmesi (TSEND_C VE TRCV_C)",
          "UYGULAMA- PLC ve SCADA - Giyotin Makas Uygulaması",
          "UYGULAMA-PLC ve SCADA- Trafik Işığı Tasarımı"
        ],
        "SAYISAL OPERASYONLAR": [
          "MOVE Komutu",
          "Lojik VE-VEYA İşlemleri",
          "XOR ve INVERT İşlemleri",
          "Kodlayıcı (ENCO) ve Kod Çözücü (DECO) İşlemleri",
          "İki Girişten İstenileni Seçme (SEL Fonksiyonu)",
          "Çoklu Girişten İstenileni Seçme (MUX Fonksiyonu)",
          "DEMUX Fonksiyonu"
        ]
      },
      "requirements": [
        "Temel Seviyede Elektrik ve Kumanda bilgisi.",
        "Bilgisayar ve PLC Eğitim seti veya PLCSIM programı."
      ],
      "description": "Profilimden daha kapsamlı ve güncel S7 1200 PLC ve SCADA kursuna ulaşabilirsiniz. Bu kursta SIEMENS firmasının piyasaya sürmüş olduğu S7 1200 serisi PLC cihazlarının kumandası Temel ve İleri seviye olarak tüm detayları ile anlatılmakta olup tüm örnekler gerçek PLC üzerinde denenerek yapılmıştır. Kurs sanayi çalışanlarının yanı sıra Mühendislik Fakülteleri, Meslek Yüksek Okulları, Endüstri Meslek Liseleri gibi yerlerde okuyan öğrenci ve öğretmen arkadaşlara da faydalı olacaktır. Kursun tüm öğrenci, öğretmen ve teknik elemanlara faydalı olmasını umuyor, başarılar diliyorum.\nPLC PROGRAMLAMA KURSU NEDİR?\nPLC (Programmable Logic Controller)aritmetik , mantıksal denetleyicidir. Fabrikalardaki üretim bölümlerinde veya makinelerin kontrolü gibi işlemlerin denetiminde kullanılan otomasyon cihazıdır. PLC’nin, birçok giriş ve çıkışı vardır. Bilgisayar üzerinden programlandıktan sonra elektrik devresine bağlanır. PLC’nin en büyük artılarından biri, , sıcaklık farklarına, toz, manyetik gürültü ve mekanik darbelere karşı dayanıklı olarak tasarlanmış olmasıdır.\nGeleceğin makineleşme sürecinde endüstri 4.0 teknolojisinin temelini oluşturur\nNEDEN PLC PROGRAMLAMA EĞİTİMİ?\nHazırlanmış fonksiyonları direkt olarak kullanabiliriz.\nAz yer tutarlar, daha az kablo bağlantısı vardır.\nDayanıklıdır, çevre koşullarından kolay etkilenmezler.\nGiriş ve çıkışların durumlarını izleyebiliriz.\nAz arıza yapalar, güvenilirdir, bakımları kolaydır.\nPLC’LERİN GENEL KULLANIM ALANLARI\nSıra Kontrol: paketlemede, asansör endüstrisinde kullanılmaktadır. Hareket Kontrol: kauçuk, film ve kartezyen robot endüstrilerinde kullanılır. Süreç Denetimi: Makineler çalışır durumda olduğunda makinelerin hız ayarlarını, ağırlıklarını, debini, basıncını, sıcaklığını kontrol eder. Veri Yönetimi: havalandırma ( klima), çimento, tekstil, robot vb. sanayilerde kullanılır.\nNOT: EĞİTİMLER SİEMENS  PLC-PANELLER İLE YAPILACAKTIR\nAMAÇ :SANAYİNİN İHTİYAÇ DUYDUĞU HAYAL EDEBİLEN ENDÜSTRİ 4.0 HAZIR BİREYLERİ YETİŞTİRMEKTİR.\n\n\nTIA Portal Basic projelendirme yazılımı, S7-1200 mikro PLC ve SIMATIC HMI Basic panellerin basit ve hızlı programlaması, haberleştirilmesi ve devreye alınmasını sağlar. Mikro PLC'nin merkezi ünitesine esnek genişleme opsiyonları sağlayacak şekilde farklı tipte I/O ve haberleşme modülleri takılabilir. Sistem; projelendirme yazılımı, kontrolörler ve HMI üniteleri arasında kolay bağlantı ve haberleşme için PROFINET portuna sahiptir.\n\n\n\n\nSIMATIC S7-1200 PLC sisteminde, makine ihtiyaçlarınızı tam olarak karşılayacak şekilde genişletebilir 5 farklı CPU tipi mevcuttur. Bunlar; CPU 1211C, CPU 1212C, CPU 1214C, 1215C and 1217C\n\n\n\n\nCPU'ların üzerine takılabilen I/O genişletme kartı, kontrol sisteminin pano montaj ebatlarını değiştirmeden sistemin dijital veya analog I/O sayısının artırılmasına olanak tanır. CPU'nun dijital veya analog giriş çıkış kapasitesini artırmak için giriş çıkış modülleri CPU'nun sağ tarafına takılabilir. CPU 1212C'ye 2, CPU1214C, CPU 1215C ve CPU 1217C ye 8 modül bağlanabilir.\n\n\n\n\nAyrıca tüm S7-1200 CPU'ların sol tarafına seri haberleşme için 3 adet haberleşme modülü takılabilir.",
      "target_audience": [
        "Elektrik,elektronik,Otomasyon,Bilişim mezunları. PLC Öğrenmek isteyen herkes.",
        "Kumanda öğrenmek isteyen herkes."
      ]
    },
    {
      "title": "JPA Avanzado: Uso profesional de JPA con Hibernate",
      "url": "https://www.udemy.com/course/jpa-avanzado/",
      "bio": "Aspectos avanzados de JPA: transacciones anidadas, rendimiento, estabilidad. Incluye introducción a Spring Boot.",
      "objectives": [
        "Configurar aplicaciones JPA usando técnicas diferentes a las explicadas en los cursos convencionales",
        "Uso avanzado de las transacciones (más allá de los casos de uso típicos de los cursos habituales)",
        "Multiplicar el rendimiento en casos de uso que gestionan decenas de miles de entidades",
        "Evitar los errores típicos en la implementación de las entidades",
        "Aprender a crear aplicaciones sencillas con Spring Boot",
        "Entender y solucionar situaciones donde el uso ineficiente de las conexiones puede comprometer toda la aplicación"
      ],
      "course_content": {
        "Preparación del entorno": [
          "Preparación del entorno"
        ],
        "Aplicación main": [
          "Como actuar en caso de errores en la importación",
          "Hello world",
          "Migración a EclipseLink",
          "Dependencias",
          "Duda: ¿Y si hay dos providers?",
          "Elemento provider",
          "Service Provider Interface (SPI)",
          "Trabajando sin persistence.xml",
          "Usando el SPI: Main sin persistence.xml",
          "Resumen sección",
          "Repaso sección"
        ],
        "Entities (1) : Proxies": [
          "La clase Entity y el lazy loading",
          "Proxies y lazy loading",
          "Clase final y uso de proxy",
          "Proxy y error en lazy loading"
        ],
        "Entities (2) : equals / hashCode": [
          "Consideraciones generales",
          "Uso instanceof",
          "client view",
          "equals y hashCode con eclipseLink",
          "Propiedad sintética",
          "Elegir propiedad",
          "Propiedad natural",
          "Problemas con propiedad natural"
        ],
        "Entities (3) : Relaciones": [
          "Introducción a las relaciones",
          "Relaciones bidireccionales: ¿que extremo se usa para las modificaciones?",
          "Demo",
          "Propagación de cargas: lazy / eager loading",
          "Demostración: relaciones recursivas e eager loading",
          "Propagación de modificaciones: cascade",
          "Solución problema cascade"
        ],
        "Persistence Context": [
          "Modificación de managed entity",
          "Modificación de managed entity sin transacción",
          "Cambios con transacción posterior",
          "Flush explícito sin transacción",
          "Orden de las operaciones SQL en el flush",
          "Flush anterior a queries",
          "Orden operaciones y errores de integridad"
        ],
        "Introducción \"express\" a Spring Boot": [
          "Creación de un proyecto Spring Boot",
          "Componente web: @Controller",
          "Componente con la lógica de negocio: @Service",
          "JPA",
          "Gestión transaccional: @Transactional"
        ],
        "Container Managed Application Contexts y Transacciones": [
          "Application Managed vs. Container Managed Persistence Context",
          "¿Que usa Spring Boot?",
          "Análisis de los logs: open-in-view",
          "Análisis de los logs: open-in-transaction",
          "Invocaciones secuenciales: open-in-view",
          "Invocaciones secuenciales: open-in-transaction",
          "Transactional read-only"
        ],
        "Transacciones anidadas": [
          "Propagación de transacciones",
          "Transacciones anidadas: caso OK",
          "Transacciones anidadas: caso KO",
          "REQUIRES_NEW",
          "Transacciones anidadas y persistence context: problema",
          "Transacciones anidadas y persistence context: solución"
        ],
        "Casos de estudio": [
          "Problema de rendimiento",
          "Problema de rendimiento: la solución",
          "Problema de ocupación de conexiones",
          "Problema de ocupación de conexiones: la causa",
          "Problema de ocupación de conexiones: Solución"
        ]
      },
      "requirements": [
        "Se requiere tener instalado Java 1.8 y Spring Tool Suite",
        "Conocimientos de Java",
        "Se aprovechará mejor el curso con conocimientos, al menos introductorios, de JPA"
      ],
      "description": "¿Otro curso de JPA?\nSí, pero éste es diferente.\nEn este curso re-aprenderás los conceptos fundamentales de JPA con vocación de hacer un uso profesional de ellos.\nSeguro que conoces la existencia del persistence context, pero: ¿sabes que implicaciones tiene gestionar centenares de miles de entidades en una sola transacción?\nSeguro que has usado transacciones en tus aplicaciones, pero: ¿sabrías determinar las implicaciones en el uso del persistence context, y por tanto en el rendimiento, de operaciones realizadas en una misma transacción?\nTambién es muy probable que hayas usado transacciones aisladas en un mismo caso de uso, pero ¿Sabrías decir que sucede cuando una misma entidad se modifica en las dos transacciones?\n¿Conoces siempre por que motivo se actualizan, o no se actualizan, en base de datos entidades que has modificado en la aplicación? ¿Sabrías reconocer para cada situación cuando se ejecutar un flush y cuando no?\nComo ves, la dinámica en el curso es constante: analizar un aspecto básico (entity manager, persistence context, transacción) y exprimirlo al máximo para entenderlo desde su fundamento.\nNo son en absoluto casos sencillos. Representamos situaciones reales donde programadores expertos comenten errores con graves implicaciones (bajo rendimiento o incluso dejar la aplicación sin conexiones a base de datos!).\nPara hacerlo más interesante, el curso está construido en forma de desafío constante para el alumno. Te recomiendo no verlo sin más, un video detrás de otro. Los videos plantean las preguntas que después se irán resolviendo. Detén los vídeos en los momentos donde se realizan las preguntas y acepta el desafío: ¿Cual crees que será la respuesta? ¿Que te indica la experiencia previa que tienes? ¿Crees que podrías resolverlo por tu mismo antes de seguir con el video?\nComo hemos dicho, los temas tratados en el curso son los fundamentales a JPA. Esto permite hacer el curso accesible a alumnos con distintos bagajes en la tecnología: cada uno de ellos obtendrá un beneficio diferente según su nivel:\nSi estás realizando un curso introductorio puedes usar este curso como complemento. ¿Te interesa ver como se usa a nivel avanzado los conceptos que estás aprendiendo? Quizás no lo entiendas, al menos en una primera visualización, en un 100%, pero tendrás una visión más completa de lo que estás aprendiendo.\nSi ya lleva usando un tiempo la tecnología, estoy seguro que te sentirás identificado en muchos de los problemas que se tratan. ¡Este es tu curso para salvarte de horas de frustración intentando resolver los casos que se muestran!\n¿Eres ya experto en el tema? ¡Acepta pues el desafío! Mira como resolverías los problemas planteados y cuestiona lo que has hecho hasta ahora.\nPor último, y especialmente dedicados a vosotros, los que pensáis ir a entrevistas de trabajo relacionadas con JPA. Si trabajáis bien el curso, seréis capaces de demostrar un nivel de conocimiento de la tecnología fuera de lo común.",
      "target_audience": [
        "El alumno que está realizando o ha terminado algún otro curso de JPA",
        "El profesional que se prepara para algún puesto de trabajo que requiera JPA",
        "El programador de JPA que quiera mejorar su nivel y entender los aspectos más avanzados de la tecnología"
      ]
    },
    {
      "title": "Curso de Programação Lua",
      "url": "https://www.udemy.com/course/cursos-ttech-lua/",
      "bio": "O Curso de Lua mais Completo e Avançado! Roblox Studio, Love2D, Computação, Software e Mercado de Trabalho",
      "objectives": [
        "Compreensão aprofundada de Lua",
        "Compreensão aprofundada de programação",
        "Pensamento lógico e estruturado",
        "Criação de projetos práticos",
        "Desenvolvimento de jogos digitais",
        "Resolução de problemas com código",
        "Fundamentos sólidos de computação",
        "Estruturação e organização de código",
        "Desenvolvimento de raciocínio algorítmico",
        "Programação orientada a objetos",
        "Criação de jogos no Roblox Studio",
        "Desenvolvimento de jogos 2D no Love2D",
        "Preparação para o mercado de programação",
        "Exploração de técnicas de monetização",
        "Aplicação prática de conceitos",
        "Fundamentos para seguir em áreas mais avançadas da computação"
      ],
      "course_content": {
        "Introdução ao Curso": [
          "Introdução ao Curso",
          "Informações Importantes",
          "Técnicas de Estudo, Foco e Dedicação",
          "Informações Adicionais",
          "Registo de Auditoria"
        ],
        "Introdução à Programação": [
          "Introdução à Programação",
          "Lógica, Instruções e Sequencialidade",
          "Conceitos de Programação",
          "Interface de Linha de Comandos",
          "Configuração do Ambiente",
          "Instalação e Configuração do Visual Studio Code"
        ],
        "Fundamentos de Lua": [
          "Introdução ao Módulo",
          "Introdução a Lua",
          "Programar e Executar Arquivos",
          "Introdução ao Visual Studio Code",
          "Variáveis e Tipos de Dados",
          "Leitura Sequencial",
          "Operadores Aritméticos",
          "Conversão de Variaveis",
          "Biblioteca Math",
          "Entradas do Usuário",
          "Manipulação de Strings #1",
          "Manipulação de Strings #2",
          "Conjunto de Exercicios",
          "Prova I - Fundamentos de Lua"
        ],
        "Estrutas de Controle": [
          "Introdução ao Módulo",
          "Introdução às Estruturas de Controle",
          "Operadores Relacionais",
          "Operadores Lógicos",
          "Estruturas Condicionais #1 - If",
          "Estruturas Condicionais #2 - Else e Elseif",
          "Estruturas Condicionais #3 - Compostas",
          "Estruturas Condicionais #4 - Abreviações",
          "Goto - Redirécionamento de Código",
          "Biblioteca IO - Manipulação de Arquivos",
          "Biblioteca OS - Sistema Operativo",
          "Introdução às Estruturas de Repetição",
          "Loop While",
          "Loop Repeat",
          "Caracteristicas Fundamentais de um Loop",
          "Loop For",
          "Conjunto de exercicios #1",
          "Conjunto de exercicios #2",
          "Prova II - Estruturas de Controle"
        ],
        "Estruturas Compostas": [
          "Introdução ao Módulo",
          "Introdução às Estruturas Compostas",
          "Tabelas #1 - Arrays e Dicionários",
          "Tabelas #2 - Matrizes e Sets",
          "Biblioteca Table",
          "Pairs() e iPairs()",
          "Loop For Genérico",
          "Funções",
          "Parametros",
          "Funções Variádicas",
          "Escopo e Retorno",
          "Closures",
          "Funções Recursivas",
          "Funções como Valores e Funções Lambda",
          "Tabelas #3 - Filas e Pilhas",
          "Tabelas #4 - Árvores e Grafos",
          "Biblioteca Coroutine #1",
          "Biblioteca Coroutine #2",
          "Dofile e Require",
          "Módulos",
          "Análise e Tratamento de erros",
          "Biblioteca Debug",
          "Conjunto de Exercicios",
          "Prova III - Estruturas Compostas"
        ],
        "POO - Programação Orientada a Objetos": [
          "Introdução ao Módulo",
          "Paradigmas de Programação",
          "Programação Orientada a Objetos",
          "Objetos - Definição",
          "Objetos - Comportamentos",
          "Metatables - Introdução",
          "Metatables - Metamétodos",
          "Metatables e Objetos",
          "Classes #1",
          "Classes #2",
          "Propriedades Públicas, Privadas e Estáticas",
          "Encapsulamento e Controlo de Acesso",
          "Herança #1",
          "Herança #2",
          "Sobrescrição de Métodos",
          "Métodos Abstratos",
          "Memoization",
          "Garbage Collector",
          "Weak Tables",
          "Conjunto de Exercicios #1",
          "Conjunto de Exercicios #2",
          "Prova IV - POO"
        ],
        "[PROJETO]: Terminal Bancário": [
          "Prévia do Projeto",
          "Fases de Desenvolvimento",
          "Definição de Requisitos",
          "Diagrama de Funcionamento",
          "Desenvolvimento da Conta Bancária #1",
          "Desenvolvimento da Conta Bancária #2",
          "Desenvolvimento do Banco #1",
          "Desenvolvimento do Banco #2",
          "Desenvolvimento da Página Inicial",
          "Testes Unitários"
        ],
        "Fundamentos de Computação": [
          "Introdução ao Módulo",
          "O que é Computação?",
          "O Sistema Digital",
          "Bases Numéricas",
          "Base Binária",
          "Conversão: Binário - Decimal",
          "Conversão: Decimal - Binário",
          "Unidades de Grandeza",
          "Números Binários em Lua",
          "Operações Bitwise em Lua",
          "ASCII e Unicode",
          "Linguagens de Programação",
          "Programas, Entradas e Saídas",
          "Compiladores e Interpretadores",
          "Memória",
          "CPU e Processamento",
          "Níveis de Abstração",
          "Resumo - Fundamentos de Computação"
        ],
        "Love2D: Fundamentos": [
          "O que é o Love2D?",
          "Gerenciamento de um Projeto - Cargos e Equipas",
          "Instalação do Love2D + Configuração VSCode",
          "Estrutura de um Projeto",
          "Introdução - Funções Primárias",
          "Módulos do Love2D",
          "Sistema de Coordenadas",
          "Trabalhando com Valores",
          "Criação de Objetos - Formas",
          "Padrão de Cores RGB",
          "Movimentação de Objetos",
          "Exclusão de Objetos",
          "Inputs de Teclado",
          "Inputs do Cursor",
          "DeltaTime",
          "Arquivo de Configurações"
        ],
        "Roblox Studio: Fundamentos": [
          "Introdução ao Módulo",
          "Introdução ao Roblox Studio",
          "Interface do Roblox Studio",
          "Objetos e Propriedades",
          "Serviços Básicos",
          "Execução de Código",
          "Manipulação de Objetos",
          "Eventos - Colisões",
          "Eventos - Cliques",
          "Eventos - ProximityPrompt",
          "Debounce",
          "Criar, Clonar e Destruir Objetos",
          "FindFirstChild() e WaitForChild()",
          "GetChildren() e GetDescendents()",
          "Atributos",
          "Organização e Estruturação de Código",
          "Exercício #1",
          "Exercício #2",
          "Exercício #3",
          "Exercício #4",
          "Exercício #5",
          "Prova V - Roblox Studio: Fundamentos"
        ]
      },
      "requirements": [
        "Determinação , Foco e Empenho"
      ],
      "description": "Introdução:\nO curso de Programação Lua é projetado para ensinar de forma aprofundada a linguagem de programação Lua desde os seus fundamentos até aos conceitos mais avançados incluindo as suas principais implementações.\nO currículo aborda desde os fundamentos da programação, passando aos fundamentos da linguagem, prosseguindo num desenvolvimento de aprendizagens de forma progressiva onde são abordados todos os conceitos da linguagem Lua. São ainda abordados conceitos essenciais à programação como a programação orientada a objetos e os fundamentos da computação. As implementações de Lua abordadas são o Roblox Studio para desenvolvimento de Jogos 3D e o Love2D para desenvolvimento de jogos 2D.\n\n\nMotivação:\nO principal objetivo do curso é guiar os estudantes por um estudo aprofundado da linguagem Lua com um foco no funcionamento da linguagem e no seu uso nas suas principais implementações.\nO curso não só tenciona ensinar os conceitos teóricos e práticos como também prover habilidades ao estudante de se tornar autodidata e conseguir compreender as suas principais áreas de interesse, ter capacidade de raciocínio, ser autónomo e capaz de evoluir futuramente sozinho.\n\n\nRequisitos:\nO curso não dispõe de qualquer requisito uma vez que todos os conceitos são ensinados do absoluto zero. Caso seja do seu interesse realizar algum módulo de forma independente sem a conclusão dos anteriores tenha em conta que poderá não entender os conteúdos. Todos os conteúdos podem ser analisados na grade curricular completa na pagina inicial do curso e em algumas prévias sobre os módulos.\n\n\nSobre as Aulas:\nAs aulas são ministradas utilizando como recurso slides explicativos que possuem teoria e logo depois uma componente prática. A quantidade de teoria e prática de cada aula varia conforme o necessário. (O curso tende a atingir uma forte componente prática)\nTodos os slides exibidos nas aulas estão disponíveis para download assim como outros recursos de apoio ao aprendizado.\nAs aulas estão também organizadas em módulos que possuem uma estrutura muito definida de forma a que a sua realização sequencial possa ir incrementando novos conceitos e aprofundando conhecimentos ao longo da sua realização. No fim de alguns módulos existe uma prova sobre os assuntos abordados e aulas de resolução de exercícios.\n\n\nSuporte e Diversos:\nQualquer dúvida pode ser tirada numa sessão própria da Udemy onde você terá contacto direto com o instrutor. Caso queira comunicar melhor e com outros alunos no perfil do instrutor o botão website possui um link para um servidor de Discord com uma área exclusiva para alunos.\nO curso possui um certificado final com o nome do curso, duração e nome do aluno que pode ser utilizado como prova de conclusão e certificação de competências.\nO curso também disponibiliza um prazo de reembolso de 30 dias. (Caso seja concluído uma grande quantidade de aulas não será possível emitir um reembolso, tenha em consideração que o processo de reembolso é gerido totalmente pela plataforma e suporte da Udemy)\n\n\nA quem se destina o curso:\nO curso foi feito para todos que tenham interesse em programação e queiram iniciar de forma definitiva numa linguagem simples como Lua conseguindo dominar essa mesma linguagem.\nÉ essencial assistir às previas de cada módulo para entender quais os conteúdos abordados e os resultados da aprendizagem dos mesmos.\n\n\nPerguntas Frequentes:\nEste curso é desde o básico ao avançado?\nSim, você vai iniciar no absoluto zero até conceitos avançados, sem necessidade de conhecimentos prévios\nAs aulas de Roblox Studio são avançadas? Vou poder desenvolver qualquer jogo?\nVocê conseguirá desenvolver diversos tipos de jogos. O curso pode ser iniciado a partir do primeiro módulo de Roblox Studio. Os dois módulos de Roblox Studio do curso abordam conceitos pré-avançados. São abordados apenas conceitos de programação excluindo por exemplo: animações, modelagem, sound desgin, etc.\nMais informações na primeira aula gratuita do módulo 'Roblox Studio: Fundamentos'\nPosso tirar as minhas dúvidas com garantia de resposta?\nSim, o prazo de resposta é de um dia. Você também irá ter contacto direto comigo (Instrutor) via Udemy ou se preferir Discord.",
      "target_audience": [
        "Para iniciantes que querem aprender programação do zero",
        "Para quem deseja entrar no mundo da criação de jogos",
        "Para quem quer começar na programação de maneira simples, eficaz e definitiva",
        "Para estudantes que buscam complementar os estudos de computação",
        "Para quem quer dominar a linguagem Lua"
      ]
    },
    {
      "title": "C programlama ve C++ programlama ile Yazılım Geliştirme",
      "url": "https://www.udemy.com/course/c-programlama-c_programlama-c-programlama_c-programlama-c_programlama/",
      "bio": "C programlama & C++ programlama |C programlama & C++ programlama |C programlama & C++ programlama | ***TEK KURS 2 DİL***",
      "objectives": [
        "C programlama dilinden yola çıkarak YAZILIM DÜNYASINA DAİR AKLINIZA TAKILAN BÜTÜN SORULARA CEVAP BULACAKSINIZ",
        "C programlamadan başlayarak BÜYÜK BİR YAZILIMCI OLMAYA HAZIRSANIZ, BU KURS TAM SİZE GÖRE . KAYDOLUN VE BAŞARIN ! İŞTE BU KADAR BASİT !",
        "C programlamaya dair BANA 7/24 ULAŞABİLECEK VE AKLINIZA TAKILAN BÜTÜN SORULARA CEVAP BULABİLECEKSİNİZ.",
        "C programlama ve C++ programlama dillerinin mantığını kavrayacaksınız.",
        "C programlama dilini sıfırdan ileri seviyeye kusursuzca öğreneceksiniz.",
        "C programlama ile Yazılım dünyasına büyük bir adım atmış olacaksınız.",
        "C programlama dili ve C++ programlama dillerinin nerelerde kullanıldığını öğreneceksiniz.",
        "C programlama ve C++ programlama dillerinin nasıl kodlandığını öğrenecek ve bunu örneklerle pekiştireceksiniz."
      ],
      "course_content": {
        "C Programlama ile tanışıyoruz... Nedir bu C programlama, neden öğreniyoruz ?": [
          "C programlama ne işe yarar, nasıl çalışır ?",
          "LÜTFEN OKUYUNUZ - Bu duyuru hem sizin hem de benim için oldukça önemlidir !",
          "Bir eğitim setine nasıl çalışmalıyız?",
          "Youtube Duyuru",
          "C programlamaya başladan önce bilinmesi gerekenler QUIZ"
        ],
        "C programlama için gerekli araçların bilgisayara kurulması": [
          "Kuruluma başlamadan önce lütfen okuyunuz",
          "CodeBlocks kurulumu",
          "CodeBlocks Türkçe karakter problemini çözüyoruz",
          "Macbook için XCode Kurulumu",
          "Codeblocks kapatıp açıldığında Türkçe karakterler bozuk gösteriliyorsa...",
          "Türkçe karakter sorununuz hala varsa...",
          "Printf ile Türkçe Karakter Kullanımı QUIZ"
        ],
        "C programlama Giriş": [
          "Programlamada kullandığımız genel terimlerin tanıtılması"
        ],
        "Değişkenler": [
          "Değişkenler ve Karakter Dizisi Mantığı (Detaylı Anlatım)",
          "Kullanıcıdan veri alma işlemleri",
          "C programlamada Değişkenler ve Verilerin Depolanma Mantığı QUIZ",
          "Kullanıcıdan veri alma işlemleri QUIZ"
        ],
        "Değişkenlerin Kullanıldığı ÖRNEKLER": [
          "Matematiksel İşlemler",
          "Örnek1: Kare ve dikdörtgenin alanını hesaplama",
          "Örnek2: Dairenin alanı, dairenin çevresi ve küpün hacmini hesaplama",
          "Örnek3: Matematiksel denklem çözme ve Tip (int,float,double) dönüşümleri",
          "Örnek4: 5 basamaklı bir sayının sayı değerlerini buluyoruz",
          "Matematiksel İşlemler QUIZ"
        ],
        "Kontrol Yapıları ve ÖRNEKLER (If - Else if - Else , Switch - Case)": [
          "If - else if -else (Kontrol yapıları)",
          "Örnek 1: Cinsiyet ve boy uzunluğuna göre mülakatı geçme durumu örneği",
          "Örnek 2: Toptan satış programı yazıyoruz",
          "Örnek 3: Bir sayının diğer sayının katı olup olmadığını sorguluyoruz",
          "Örnek 4: Girilen 3 sayının toplami, çarpım ve ortalama değerlerini bulan program",
          "Örnek 5: Girilen sayının Tek mi Çift mi olduğunu söyleyen program",
          "Örnek 6: Girilen harfin Büyük ya da Küçük olduğun söyleyen program (ASCII tablo)",
          "Switch - Case Kontrol Yapıları",
          "Örnek 1 - Input (girdi) alıp hangi ay ve mevsime ait olduğunu söyleyen program",
          "Örnek 2 - Sonsuz defa hesap yapabilen Hesap Makinesi programı",
          "Örnek 3 - Restoran Menüsü Programı",
          "Kontrol yapılarını birbirine dönüştürme"
        ],
        "Döngüler - (While - Do While - For)": [
          "While Döngüsü",
          "Örnek1 - 1-10 arası sayıların çarpım tablosu",
          "Örnek2 - 1den n'e kadar olan sayıların toplamını bulan program",
          "2 sayı arasındaki sayıları toplayan program",
          "Bir sayının faktöriyelini kontrollü bir şekilde hesaplayan program",
          "Do-While Döngüsü",
          "Örnek1- Kullanıcının girdiği sayıyı bir önceki sayıyla karşılaştıran program",
          "Örnek2 - Kullanıcının girdiği sayının sayı değerlerinin toplamını bulan",
          "Örnek3 - Kullanıcının girdiği 2 tam sayının EBOB'unu bulan program",
          "For döngüsü",
          "Örnek1 - If kullanmadan Tek-Çift sayı bastırma",
          "Örnek2 - Bilet Satın Alma Programı",
          "Örnek3 - Fibonacci Serisi ve ufak bir karekök örneği",
          "Örnek 4 - İç içe for döngüsü - Çarpım Tablosu",
          "Örnek5 - For Döngüsü ile yıldızlardan şekil oluşturma",
          "Döngü Dönüşümleri ( Döngüler Özet)"
        ],
        "Yıldız ile desenler oluşturma ( Konu : Döngüler)": [
          "Bölüm Tanıtımı"
        ],
        "Diziler - ( Sayı dizileri ve Karakter dizileri )": [
          "Int ve float dizileri",
          "Karakter Dizileri",
          "Örnek 1 - 10 Açık Kapı Algoritması (int dizisi örneği)",
          "Örnek2 - Sayısal Loto Programı",
          "Örnek 3 - Parola Doğrulamasını Sağlayan Program",
          "Örnek 4 - Girilen sayıların toplamını ve ortalaması bulan program",
          "Çok Boyutlu Diziler",
          "Örnek1 - 2 matrisin toplamını bulan program",
          "Örnek2 - Farklı sınıftaki öğrencilerin listesini tutan program"
        ],
        "Fonksiyonlar": [
          "Fonksiyonlara giriş",
          "Macro (Makro) Kullanımı",
          "Enumeration - Enums Kullanımı",
          "Örnek1 - Elemanları doğal sayı olan bir dizideki en büyük sayıyı bulan fonksiyon",
          "Örnek2 - Çok boyutlu bir işçi listesini yazdıran fonksiyon",
          "Örnek 3 - Sayının tek mi çift mi olduğunu kontrol eden fonksiyon",
          "Örnek 4 - Celcius ve Fahrenheit değerlerini hesaplayan fonksiyonlar",
          "Örnek5 - 1-1000 arasındaki asal (asal sayı bulan fonksiyon)",
          "Örnek 6 - 1 - 10000 arasındaki mükemmel sayılar (mükemmel sayı fonksiyonu)",
          "Örnek 7 - Not ortalamasına göre 4'lük sistemdeki karşılığını gösteren program",
          "Örnek 8 - Bir sayının tersini bulan fonksiyon ve program"
        ]
      },
      "requirements": [
        "Kursta herhangi bir bilgi birikimine gerek yoktur. Her şeyi yazılıma dair sıfır bilgiye sahip birinin anlayacağı şekilde anlattım.",
        "C programlama eğitim setimi en basitten en zor örneklere kadar sıfır bilgiye sahip birinin anlayacağı şekilde hazırladım."
      ],
      "description": "C Programlama Dilini ve C++ Programlama dilini adım adım, mantığa dayalı bir şekilde öğreten eğitim setine bir adım uzaktasınız.\nTEK KURS 2 PROGRAMLAMA DİLİ  ( C PROGRAMLAMA VE C++ PROGRAMLAMA)\nC PROGRAMLAMA DİLİ VE C++ PROGRAMLAMA DİLİ AYRINTILI BİR ŞEKİLDE ANLATILMIŞTIR.\nBu eğitim seti sayesinde;\nC programlama ve C++ programlama dilini öğrenirken keyif alacaksınız.\nC programları sayesinde algoritma yeteneğinizi geliştireceksiniz.\nC programlamada yazılan kodların bilgisayar tarafından nasıl karşılandığını anlayacaksınız.\nİnsanın yazdığı kodların bilgisayarın diline nasıl aktarıldığını öğreneceksiniz.\nC programlama diline ait özellikleri kavradıktan sonra pratik yaparak kendinizi geliştireceksiniz.\nC++ programlama dilini kullanarak NESNEYE YÖNELİK PROGRAMLAMA mantığını çok iyi anlayacaksınız.\nC++ programlama dilini çok rahat bir şekilde kodlayarak diğer Yüksek Seviyeli Programlama dillerini çok kolay kodlar hale geleceksiniz.\nKonuyu öğrendikten sonra verilen örneklerle anlamanızı pekişterek C programlamayı ve C++ programlamayı zevk alarak kodlar hale geleceksiniz.\n7/24 aradığınız sorulara karşılık bulacak. Sorduğunuz soruların cevabına en kısa süre içerisinde \"ÖĞRENCİLERDEN GELEN SORULAR\" bölümünden ulaşacaksınız.\n\n\nBİR ŞEYİ BİLMEK BAŞKADIR ÖĞRETMEK BAMBAŞKADIR.\nSİZ C PROGRAMLAMAYI VE C++ PROGRAMLAMAYI ÖĞRENENE KADAR PEŞİNİZİ BIRAKMAYACAĞIM !\nDERSLERDE VE  SORU&CEVAP KISMINDA GÖRÜŞMEK DİLEĞİYLE...",
      "target_audience": [
        "C programla dilini sıfırdan ileri seviyeye öğrenmek isteyenler",
        "Üniversitelerde C ve C++ programlama dilleri için \"Bu diller ne kadar zormuş be, bu dilleri öğrenmek saçmalık\" diyen herkes aslında bu dilin ne kadar kolay olduğunu görecekler",
        "C ve C++ programlama dilindeki seviyesini ve algoritma kurabilme yeteneğini arttırmak isteyen herkes",
        "YAZILIM VE DONANIM DÜNYASINA DAİR AKLINA TAKILAN BÜTÜN SORULARA CEVAP BULMAK İSTEYEN HERKES"
      ]
    },
    {
      "title": "Programlama Giriş Seviye |Akış Şeması&Python İle|250+ Örnek|",
      "url": "https://www.udemy.com/course/flowchart-algoritma-python/",
      "bio": "Yazılım Kursu * Algoritma & Akış Şeması & Python * Tek Kursta. Python Sertifika Sınavlarına PCEP-PCAP Mentörlük",
      "objectives": [
        "Kurs sonunda sizde kendinizi programlama dünyasında, sektöre hazır hissedeceksiniz.",
        "Sertifikalı olarak adınızı duyurmak için gereken ilk adımı kurs sonunda atacaksınız.",
        "Python Institute, kodları PCEP-PCAP olan uluslararası onaylı sertifika sınavlarına girebileceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Temel seviye hazırlık eğitimi ile başlayan kursumuz için yazılım bilgisine ihtiyaç duymadan öğreneceğiniz, sıfırdan yazılım öğrenip sertifika sınavına kendinizi hazır hissedeceğiniz bir kurs. İhtiyaç duyulan tek şey temel bilgisayar bilgisidir."
      ],
      "description": "Sade Ama Eksiksiz.  Sloganı ile yola çıktık. Çok sade, örnekler sade, anlatım sade. Zihinlerinizi hiç yormadan ilerleyeceksiniz.\nÜç kurs tek çatıda; Algoritma & Akış Şeması & Python. Böyle bir içerik Udemy'de TEK.\nUdemy' nin en güncel ve en detaylı Programlama'ya İlk Adım Kursuna katılarak, Baştan Sona Algoritma & Akış Şeması & Python Programlama Dili Öğrenmenin Tadına Varın...\nProgramlamaya Giriş | Algoritma & Akış Şeması & Python | 250+ Örnek, kursunda kodlamaya hazırlık, karar yapıları, döngüler, fonksiyonlar, Python programlama dili ile kod yazma, nesne tabanlı mimari, modüler programlama, hata yakalama, dosya sistemleri gibi daha bir çok konuyu tamamı uygulamalı şekilde öğreneceksiniz.\nKursumuzda önce algoritma & akış şeması sonra Python programlama dili olacak. Neden mi Python? Çünkü Python' ın popülerliği tartışılmaz bir gerçektir. Gelin \"Python öğrenmeye\" beraber başlayalım.\nKursa katılmak için her hangi bir programlama geçmişinizin olması gerekmiyor çünkü kursumuz size sıfırdan algoritma & akış şeması ile başlayacak ve yine sıfırdan orta seviyeye python programlamayı adım adım bol bol uygulama yaptırarak öğretecektir.\nKurs boyunca,\nHer konunun kalıcılığını sağlamak için bir çok uygulama yapacağız.\nBölüm sonlarında konuların hepsini kapsayan ödevlerimizi yapacağız.\nKurs boyunca en gerekli konuları en gerektiği kadar detaylıca ve uygulayarak öğreneceğiz.\nKurs İçeriği,\nTanıtım\nKurulum\nKodlamaya Hazırlık\nKarar Yapıları - If\nDöngüler - Loop\nFonksiyonlar - Functions\nPython Giriş\nPythonda Koşul İfadeleri\nPythonda Döngüler\nPythonda Fonksiyonlar\nPythonda Nesne Tabanlı Programlama\nPythonda Modüller\nPythonda Hatalar & Hata Yönetimi\nPythonda Dosya Yönetimi\nKapanış - EBook",
      "target_audience": [
        "Algoritma & Akış şeması ile programlama dünyasına adım atmak isteyenler",
        "Başlangıç-Orta Seviye Python yazılım dilini öğrenmek isteyenler",
        "PCEP-PCAP kodlu, python enstitisünün onayladığı uluslar arası sınavlara girmek isteyenler"
      ]
    },
    {
      "title": "Çekirdekten Uzmanlığa Egzersiz ve Projelerle Komple JAVA",
      "url": "https://www.udemy.com/course/cekirdekten-uzmanlga-komple-java/",
      "bio": "Java Öğrenerek Piyasada En Çok Talep Edilen Yazılımcı Haline Gelin.",
      "objectives": [
        "Java web platformunun(Servlet,Hibernate,Spring. v.s) kapıları ardına kadar açılacaktır.",
        "Android platformunun kapıları ardına kadar açılacaktır."
      ],
      "course_content": {
        "Giriş Ve Neden Java ?": [
          "Giriş",
          "Neden Java?"
        ],
        "Ortam Kurulumları ve Java Nasıl Çalışır?": [
          "Windows Kurulumu",
          "Mac Kurulum",
          "Java Nasıl Çalışır?"
        ],
        "Değişkenler, Veri Tipleri ve Operatörler": [
          "Değişken Tanımlama Giriş",
          "Veri Tipleri - İlkel Tam Sayılar",
          "Veri Tipleri - İlkel Kesirli Sayılar",
          "Aritmetik ve Mantıksal Operatörler Giriş",
          "Veri Tipleri - İlkel Mantıksal ve Karakter",
          "Referans veri tipi ve Casting'e giriş",
          "Aritmetik Operatörler",
          "Mantıksal Operatörler"
        ],
        "Klavyeden Değer Alma": [
          "Klavyeden Değer Alma Giriş",
          "Klavyeden Değer Alma",
          "Klavyeden Değer Alma Egzersiz"
        ],
        "Kontrol Yapıları, Metot, İfadeler ve Cümlecikler": [
          "İf else Giriş",
          "İf Else - 1",
          "İf Else - 2",
          "if else Egzersiz",
          "Metot Giriş",
          "Metot - 1",
          "Metot - 2",
          "Metot - 3",
          "Metot Egzersiz",
          "Switch Case Giriş",
          "Switch Case",
          "Switch Case Egzersiz"
        ],
        "Döngüler": [
          "Döngülere Giriş",
          "For Döngüsü",
          "For Döngüsü Egzersiz",
          "While Döngüsü",
          "While Döngüsü Egzersiz",
          "Do While Döngüsü Giriş",
          "Do While Döngüsü",
          "Do While Döngüsü Egzersiz"
        ],
        "OOP - Sınıf, Oluşturucu, Kalıtım, Getter ve Setter": [
          "Sınıf ve Nesne Giriş",
          "Sınıf ve Nesne",
          "Oluşturucu Giriş",
          "Oluşturucu",
          "Getter ve Setter",
          "Kalıtım",
          "Egzersiz - Tek-Çift Sayı Bulma"
        ],
        "Kompozisyon, Çokbiçimlilik": [
          "Komposizyon",
          "Çokbiçimlilik",
          "Egzersiz - 5 ve 11'e tam bölünebilme"
        ],
        "Püf Noktalar": [
          "Oluşturucu Detayları",
          "Kodların Çalışma Sıralaması",
          "Tek Satırda Değişkenler Tanımlama",
          "İlkel ve Referans veri Tipleri Arasındaki Farklar",
          "Lokal ve Nesne Değişkenleri Arasındaki Farklar",
          "Statik anahtar kelimesi",
          "İç içe Sınıflar",
          "This",
          "Super",
          "Bir sayfada birden çok sınıf tanımlaması"
        ],
        "Proje - Hesap Makinası": [
          "Proje - Hesap Makinası"
        ]
      },
      "requirements": [
        "İnternet bağlantısı olan bir bilgisayar.",
        "Herhangi bir yazılım bilgisi veya tecrübesi gerekli değildir.",
        "Öğrenmeye açık ve kendini geliştirmeye yönelmiş öğrenci profili."
      ],
      "description": "Neden Bu Kursu Almalısınız ve Bu Kursu Özel Yapan Nedir?\n\nBu eğitim seti java  programlama dilini en ayrıntılı şekilde öğrenmek isteyenler için hazırlanmıştır. Türkiye'de yazılım alanında kaliteli kaynağa erişimde yaşanılan sıkıntılardan dolayı bir başyapıt olarak hazırlanmıştır. Öncü bir kurs olması amaçlanmaktadır.Bu eğitim seti kavramları temelinde ve özünde çok iyi bir şekilde kavracağınız şekilde hazırlanmıştır.\nNeden Java Öğrenmeliyim?\nJava dünyanın en popüler ve en çok iş sahası olan yazılım dillerindendir. Java kodu bir kere yazarsınız ve her platformda(Android,Linux,Windows,Mac v.s) çalışır. Genelde en çok kazandıran yazılım dilidir. Java ile web ve mobil dahil olmak üzere bir çok platforma uygulama geliştirilebilmektedir.",
      "target_audience": [
        "Sıfırdan ileri seviyeye java öğrenmek isteyenler.",
        "Java programlama diline tam anlamıyla hakim olmak isteyenler.",
        "Çekirdekten ve detayları ile öğrenmek isteyenler.",
        "Kaliteli bir yazılımcı olup, yazdığı kodun ne anlama geldiğini anlamak isteyenler.",
        "Yazılım alanında istihdam etmek isteyenler.",
        "Başka yazılım dillerinden javaya geçenler.",
        "Copy-paste yazılımcılıktan kurtulmak isteyenler."
      ]
    },
    {
      "title": "Python & MySQL",
      "url": "https://www.udemy.com/course/python-mysql/",
      "bio": "Aprenda com especialistas a construir programas de computador com a linguagem Python e banco de dados MySQL",
      "objectives": [
        "Construir programas em Python",
        "Criar bancos de dados com MySQL",
        "Criar visualizações de dados usando Python e a biblioteca Pyplot",
        "Compreender comandos SQL",
        "Interligar Python a bases de dados MySQL"
      ],
      "course_content": {
        "Introdução": [
          "O que você aprenderá neste curso",
          "Mensagem de boas-vindas",
          "Apresentação",
          "Conheça os professores",
          "Python & MySQL",
          "Introdução à programação de computadores",
          "Instalando Python 3 e Sublime text",
          "Instalando Python",
          "Resolvendo problemas na instalação do Python",
          "Google Colab (ambiente para desenvolvimento alternativo)",
          "Programação"
        ],
        "Python básico": [
          "O que você aprenderá nesta seção?",
          "Introdução ao Python",
          "Meu primeiro programa",
          "Comentários",
          "Operações matemáticas",
          "Soma simples",
          "Variáveis",
          "Exercícios variáveis",
          "Operadores",
          "Operadores relacionais",
          "Estruturas condicionais",
          "Comando else",
          "Comando elif",
          "Estruturas de repetição (while)",
          "Comando for",
          "Comando range",
          "Comando input",
          "Strings parte 1",
          "Strings parte 2",
          "Estruturas de controle"
        ],
        "Listas de exercícios - Python básico": [
          "Lista 1",
          "Respostas da Lista 1",
          "Idade",
          "AVISO",
          "Explicação do exercício 1.1",
          "Média",
          "Explicação do exercício 1.2",
          "Explicação do exercício 1.3",
          "Explicação do exercício 1.4",
          "Explicação do exercício 1.5"
        ],
        "Python intermediário": [
          "Objetos",
          "Listas parte 1",
          "Listas parte 2",
          "Dicionários",
          "Exercícios listas e dicionários",
          "Arquivos",
          "Funções",
          "Números aleatórios",
          "Tratamento de exceções"
        ],
        "Lista de exercícios - Python intermediário": [
          "Estudo de caso: sequências de proteínas",
          "Lista 2",
          "Explicação do exercício 2.1",
          "Explicação do exercício 2.2",
          "Explicação do exercício 2.3",
          "Explicação do exercício 2.4",
          "Explicação do exercício 2.5"
        ],
        "Python avançado": [
          "Introdução Python Avançado",
          "List comprehension",
          "Enumerate",
          "Filter",
          "Reduce",
          "Zip",
          "Map",
          "Lambda",
          "Python avançado"
        ],
        "MySQL": [
          "O que são bancos de dados?",
          "Sobre o MySQL",
          "MySQL",
          "Instalando o MySQL e Workbench",
          "Conhecendo o Workbench",
          "Estudo de caso: Escola de cursos",
          "Criando bases de dados",
          "Tipos de dados",
          "Criando tabelas",
          "Bases de dados, tabelas e tipos de campos",
          "Alterando tabelas",
          "Apagando tabelas",
          "Inserindo dados em uma tabela",
          "Alterar dados em uma tabela",
          "Deletando dados de uma tabela",
          "Fazendo buscas",
          "Operadores lógicos e relacionais",
          "Consultas",
          "Cardinalidade",
          "Criando as chaves estrangeiras",
          "Joins",
          "Criando novos usuários",
          "Exercícios SQL"
        ],
        "Python & MySQL": [
          "Biblioteca para conectar Python ao MySQL",
          "Criando um CRUD (select)",
          "Criando um CRUD (insert)",
          "Criando um CRUD (update)",
          "Criando um CRUD (delete)",
          "Python + MySQL"
        ],
        "Visualização de dados": [
          "Visualização de dados com Python",
          "Gráfico de linhas",
          "Gráfico de linhas",
          "Inserindo legendas em gráficos",
          "Legendas",
          "Gráfico de barras",
          "Gráfico de barras",
          "Comparando gráficos de barras",
          "Scatterplot",
          "Scatterplot",
          "Marcadores, cores e tipos de linha",
          "Matplotlib - documentação",
          "Marcadores, cores e tipos de linha",
          "Código fonte",
          "Inserindo pontos nos gráficos de linha",
          "Salvando figuras",
          "Salvando figuras",
          "Estudo de caso: crescimento da população brasileira",
          "Estudo de caso: crescimento da população brasileira",
          "Estudo de caso: crescimento da população brasileira",
          "Boxplot",
          "Boxplot",
          "Boxplot",
          "Estudo de caso: Bioinformática - comparando genomas",
          "Estudo de caso: Bioinformática - comparando genomas parte 1",
          "Estudo de caso: Bioinformática - comparando genomas parte 2",
          "Estudo de caso: Bioinformática - comparando genomas parte 3",
          "Estudo de caso: Bioinformática - comparando genomas parte 4",
          "Código fonte",
          "Visualização de dados"
        ],
        "Prova final": [
          "Revisão",
          "Teste final"
        ]
      },
      "requirements": [
        "Nenhum conhecimento básico é requerido"
      ],
      "description": "Python é uma linguagem de programação de alto nível que vem sendo adota em todas as grandes universidades do mundo todo. MySQL é o sistema de gerenciamento de bancos de dados gratuito mais popular da atualidade. Neste curso você aprenderá conceitos básicos da linguagem Python e a construir programas conectados a bases de dados MySQL. Tudo isso apresentado com uma metodologia simples, direta e sem enrolação. Matricule-se já neste curso e comece a aprender.",
      "target_audience": [
        "Desenvolvedores Python iniciantes",
        "Interessados em bancos de dados",
        "Entusiastas da computação",
        "Cientistas de dados (Data Science)",
        "Bioinformatas"
      ]
    },
    {
      "title": "デザインパターン１：デザインパターンを学ぶ準備とクラス図とファサードパターン【C#】",
      "url": "https://www.udemy.com/course/design01/",
      "bio": "デザインパターンシリーズの第1弾としてオブジェクト指向の必要性とUMLのクラス図の書き方を解説後にデザインパターンの本編としてファサードパターンをC#を使って実装しながら解説しています",
      "objectives": [
        "デザインパターンの必要性を理解できる",
        "手続き型プログラミングとオブジェクト指向型プログラミングの違いを理解できる",
        "UMLのクラス図の書き方を理解できる",
        "Facadeパターンを理解できる"
      ],
      "course_content": {
        "デザインパターンとは": [
          "デザインパターンとは"
        ],
        "手続き型とオブジェクト指向型の違い": [
          "01_手続き型プログラミングとオブジェクト指向プログラミングの違い",
          "02_マリオとルイージを動かすプログラム仕様",
          "03_手続き型で実装_描画",
          "04_手続き型で実装_右ボタンで移動",
          "05_手続き型で実装_Aボタンで返事",
          "06_オブジェクト指向で実装_描画",
          "07_オブジェクト指向で実装_右ボタンで移動",
          "08_オブジェクト指向で実装_Aボタンで返事",
          "09_手続き型とオブジェクト指向の比較_手続き型の場合",
          "10_手続き型とオブジェクト指向の比較_オブジェクト指向の場合",
          "11_サブクラスの考察",
          "12_カプセル化するということ",
          "13_振る舞いをカプセル化するということ",
          "14_再利用可能ということ"
        ],
        "UML:クラス図の書き方": [
          "#01_クラス図の概要",
          "#02_クラスの書き方",
          "#02B_抽象クラスと抽象メソッドは斜体にする",
          "#02C_静的メンバーと静的メソッドは下線を引く",
          "#03_型の書き方",
          "#04_アクセスレベルの書き方",
          "#05_is-a_継承",
          "#06_is-a_インタフェースと実装",
          "#07_has-a_集約",
          "#08_has-a_コンポジション",
          "#09_use-a_依存",
          "#10_クラス図まとめ"
        ],
        "Facadeパターン": [
          "#01_Facadeパターンの定義",
          "#01B_ファサードが無い時_ファサードがある時",
          "#02_複雑なサブシステムに対して実装する",
          "#03_staticなファサードを導入する",
          "#04_フォルダー構成を工夫する",
          "#05_クラスをカプセル化するということ",
          "#06_サブシステム内のクラスの公開非公開",
          "#07_一連の手順があるロジックをファサードで吸収する",
          "#08_XMLコメントを書くことでファサードがAPIの仕様書になる",
          "#09_インタフェースを使ったファサードの実装方法",
          "#09B_ダミーファサードを作成して本番コードと差し替える",
          "#10_staticスタイルかinterfaceスタイルのどちらを採用するべきか",
          "#11_一部をファサード化する",
          "#12_ファサードを使うとどんないい事があったのか",
          "#13_ファサードの有効活用",
          "#14_ファサードの注意事項",
          "#15_ファサードまとめ"
        ],
        "補講": [
          "質問01_外注する場合にIMachineFacadeはどこに置けばいいのか"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "カプセル化、インタフェース、継承についてある程度理解していること",
        "サンプルコードはC#を使用しているため，ある程度C#コードが理解できること（javaなどのオブジェクト指向言語がわかれば理解できるとは思います）"
      ],
      "description": "どうもこんにちは，ピーコックアンダーソンです。\n\n\n今回はデザインパターンのコースの第1弾として，\nデザインパターンを学ぶ上で必要な，\nオブジェクト指向の必要性の理解と，UML:クラス図の解説をして，\nデザインパターンの本編として，ファサードパターンを解説しています。\n\n\nデザインパターン関連の本を改めて読み返し，\n深堀した内容を，C#のコードを実装しながら解説しています。\n\n\nデザインパターンを学ぶための準備に時間を割いている関係上，\n今回は本編のデザインパターンが1パターンになりましたが，\n次回以降は複数のパターンを収録しようと思っています。\n具体的に何パターン収録するというよりは，\nある程度のボリュームになったらリリースする感じで，\nシリーズの連載をしていきます。\n\n\nどうぞお楽しみにしていてください。\n\n\n■デザインパターンとは\nデザインパターンとは\n\n\n■手続き型とオブジェクト指向型の違い\n#01_手続き型プログラミングとオブジェクト指向プログラミングの違い\n#02_マリオとルイージを動かすプログラム仕様\n#03_手続き型で実装_描画\n#04_手続き型で実装_右ボタンで移動\n#05_手続き型で実装_Aボタンで返事\n#06_オブジェクト指向で実装_描画\n#07_オブジェクト指向で実装_右ボタンで移動\n#08_オブジェクト指向で実装_Aボタンで返事\n#09_手続き型とオブジェクト指向の比較_手続き型の場合\n#10_手続き型とオブジェクト指向の比較_オブジェクト指向の場合\n#11_サブクラスの考察\n#12_カプセル化するということ\n#13_振る舞いをカプセル化するということ\n#14_再利用可能ということ\n\n\n■UML:クラス図の書き方\n#01_クラス図の概要\n#02_クラスの書き方\n#02B_抽象クラスと抽象メソッドは斜体にする.tscproj\n#02C_静的メンバーと静的メソッドは下線を引く\n#03_型の書き方\n#04_アクセスレベルの書き方\n#05_is-a_継承\n#06_is-a_インタフェースと実装\n#07_has-a_集約\n#08_has-a_コンポジション\n#09_use-a_依存\n#10_クラス図まとめ\n\n\n■ファサードパターン\n#01_Facadeパターンの定義\n#01B_ファサードが無い時_ファサードがある時\n#02_複雑なサブシステムに対して実装する\n#03_staticなファサードを導入する\n#04_フォルダー構成を工夫する\n#05_クラスをカプセル化するということ\n#06_サブシステム内のクラスの公開非公開\n#07_一連の手順があるロジックをファサードで吸収する\n#08_XMLコメントを書くことでファサードがAPIの仕様書になる\n#09_インタフェースを使ったファサードの実装方法\n#09B_ダミーファサードを作成して本番コードと差し替える\n#10_staticスタイルかinterfaceスタイルのどちらを採用するべきか\n#11_一部をファサード化する\n#12_ファサードを使うとどんないい事があったのか\n#13_ファサードの有効活用\n#14_ファサードの注意事項\n#15_ファサードまとめ",
      "target_audience": [
        "デザインパターンを習得したい方"
      ]
    },
    {
      "title": "Java 8 EE Developer - La guida completa",
      "url": "https://www.udemy.com/course/java-developer-la-guida-completa/",
      "bio": "L'unico corso in italiano che ti insegnerà Java 8 e Java Enterprise Edition per scrivere applicazioni web complesse!",
      "objectives": [
        "JRE - JDK - Ambiente di sviluppo Eclipse",
        "Variabili, tipi di dato, metodi, operatori e modificatori",
        "Sintassi, Naming e Code conventions, Packages, Commenti e JavaDoc",
        "Control Flow Statements: if-else, switch-case, while, do-while, for",
        "Programmazione ad oggetti: Classe, Oggetto, Incapsulamento, Ereditarietà, Polimorfismo",
        "Relazioni tra classi - Composizione, Associazione, Aggregazione",
        "Gestione errori ed eccezioni: try-catch-finally, throws, throw",
        "Array, Liste e Collection, classi wrapper, Autoboxing e Unboxing",
        "Interfacce, Classi astratte, Classi inner",
        "Input/Output e gestione dei file",
        "Thread, Multi-threading e gestione della concorrenza",
        "Espressioni Lambda",
        "Regular Expression",
        "Gestione delle Date: Timestamp, Date, Calendar, LocalDate, LocalTime, LocalDateTime, Period, Duration, SimpleDateFormat",
        "Unit test con JUnit",
        "Database: Eseguire query su un database MySQL - INSERT, SELECT, UPDATE, DELETE",
        "Interfacciarsi con i database in Java - JDBC: come eseguire le operazioni di CRUD con Java JDBC",
        "Java GUI - creare applicazioni con interfaccia grafica grazie a WindowBuilder",
        "HTML 5 e CSS3",
        "Cos'è Java Enterprise Edition (JEE) e cosa sono i pattern MVC, Dependency Injenction e Presentation-Business-Data",
        "Sviluppare applicazioni Web complesse con JEE",
        "JEE - Presentation Layer: Servlet, JSP, Tag Library, JSF, PrimeFaces",
        "JEE - Business Layer: EJB, EJB Interceptors, Web Services, RESTful Services",
        "JEE - Data Layer: ORM e Java Persistence Api (JPA) per interfacciarsi con i database"
      ],
      "course_content": {
        "Introduzione": [
          "IMPORTANTE: Prima di iniziare sappi che...",
          "Software utilizzato nel corso",
          "Introduzione a Java",
          "JRE - JDK - Ambienti di sviluppo",
          "Come installare il JDK su Windows",
          "UPDATE (17-04-2020) - Configurazione JDK",
          "Come installare Eclipse su Windows",
          "Come installare il JDK ed Eclipse su Mac OSX",
          "Panoramica su Eclipse - Parte I",
          "Panoramica su Eclipse - Parte II",
          "Il primo programma Java: il calcolatore",
          "Materiale utile - sorgenti del software creato, slide delle lezioni, ecc...",
          "Cos’è il software e quali sono le metodologie di sviluppo: Waterfall vs Agile",
          "Mettiti alla prova"
        ],
        "I primi passi": [
          "Il tuo programma Java",
          "Compilazione ed Esecuzione del programma",
          "Debug del software con Eclipse",
          "Organizzazione del codice",
          "Java Keywords ed espressioni",
          "Mettiti alla prova"
        ],
        "Variabili, tipi di dato, metodi, operatori e modificatori": [
          "Cosa sono le variabili e i tipi di dato",
          "I tipi di dato primitivi: byte, short, int, long, float, double, char, boolean",
          "La classe String",
          "Gli operatori",
          "Cosa sono i metodi e come utilizzare i varargs",
          "I modificatori: public, private, protected, default, final, static",
          "Mettiti alla prova"
        ],
        "Sintassi, Naming e Code conventions, Packages, Commenti e JavaDoc": [
          "Sintassi",
          "I packages",
          "Naming e Code convention",
          "Come commentare il codice sorgente",
          "Creare la documentazione con JavaDoc",
          "Mettiti alla prova"
        ],
        "Control Flow Statements": [
          "I comandi condizionali: if-else, switch-case",
          "Il comando di ritorno di valori: return",
          "I comandi di ciclo: while, do - while, for",
          "I comandi di interruzione di ciclo: break, continue",
          "Mettiti alla prova"
        ],
        "OOP Parte I - Classi, Costruttori e principi dell'OOP": [
          "Cos'è la Programmazione ad oggetti e quali sono i concetti alla base",
          "Cosa succede a livello hardware",
          "Java ed il Garbage collector",
          "Concetto di classe ed oggetto",
          "Attributi e metodi di una classe",
          "I costruttori di una classe",
          "Accesso agli attributi di una classe",
          "La keyword \"instanceof\"",
          "La classe Object - Introduzione",
          "La classe Object - Il metodo getClass()",
          "La classe Object - I metodi toString() e equals(Object o)",
          "Mettiti alla prova"
        ],
        "OOP Parte II - Incapsulamento, Ereditarietà, Polimorfismo": [
          "L'ereditarietà",
          "L'incapsulamento",
          "Il polimorfismo",
          "Applicazione pratica dei concetti di Ereditarietà, Incapsulamento e Polimorfismo",
          "Utility Eclipse per implementare la programmazione ad oggetti",
          "L'operatore \"super\"",
          "Mettiti alla prova"
        ],
        "Relazioni tra classi - Associazione, Aggregazione, Composizione": [
          "Cosa sono le relazioni tra classi",
          "Associazione",
          "Aggregazione",
          "Composizione",
          "Mettiti alla prova"
        ],
        "Gestione errori ed eccezioni": [
          "Cosa sono le eccezioni",
          "I meccanismi di gestione delle eccezioni",
          "try - catch - finally",
          "throw",
          "throws",
          "Mettiti alla prova"
        ],
        "Interfacce, Classi astratte, Classi inner": [
          "Interfacce",
          "Classi astratte",
          "Classi inner, classi locali e classi anonime",
          "Approfondimento sulla classe Inner",
          "Mettiti alla prova"
        ]
      },
      "requirements": [
        "Non sono richieste conoscenze di programmazione",
        "Per poter seguire il corso è necessario avere a disposizione un PC"
      ],
      "description": "Ciao e benvenuto al corso Java EE - La guida completa.\nQuesto corso ti insegnerà a programmare in Java partendo da zero, pertanto puoi seguirlo anche se non hai conoscenze pregresse nel campo della programmazione.\n\n\nConoscere Java è fondamentale per poter realizzare applicazioni web o App Android ed entrare rapidamente nel mondo del lavoro!\nNelle lezioni vengono affrontati tutti gli aspetti del linguaggio:\nsintassi, variabili, tipi di dato\ncontrol flow statement, iterazioni\nprogrammazione ad oggetti\narray e liste\ngestione dei file\nlambda expressions\naccesso ed interazione con il database MySQL\ninterfacce grafiche (SWT, Swing, AWT)\neseguire unit test con JUnit\nHTML5\nCSS3\nJava Enterprise Edition: Servlet, Tag Library, JSF, Primefaces, EJB, JPA, Web Services, RESTful Services\ne molto altro ancora!\n\n\nOgni argomento viene trattato in maniera approfondita, con esempi pratici che ti consentiranno di comprendere tutti i concetti, anche quelli più complessi.\nPer la realizzazione degli esempi, nel corso utilizzo l’ambiente di sviluppo Eclipse, che è uno dei principali tool di sviluppo!\n\nAl termine del corso è possibile scaricare il Certificato di fine corso.\n\nConoscere bene il linguaggio Java è fondamentale se vuoi lavorare nel settore dello sviluppo software: oltre 3 miliardi di dispositivi utilizzano Java.\n\n\nEcco cosa dicono alcuni studenti sul corso:\nDaniele: Ottimo corso, ben spiegato, chiaro e ricco di esempi pratici. (5 stelle)\nGiuseppe: Il miglior corso completo su Java in Italiano! Un must have! (5 stelle)\nDario: Anche se sono appena agli inizi del corso, Paolo si è subito dimostrato pratico nella spiegazione, affidabile e chiaro. Sicuro che la continuazione sarà ancora meglio :). Consigliatissimo\nValeria: Spiegazioni dettagliate e docente molto disponibile.\nRaffaele: Lezioni chiare e semplici da comprendere, argomenti interessanti e utili per estendere le conoscenze già da me possedute su Java.\nGiosuè: Corso ben fatto in italiano, ricco di esempi pratici. Adatto anche a chi ha poche conoscenze di programmazione.\nAnita: Questo corso l'ho scelto per implementarlo ad un altro corso Java che sto attualmente frequentando ma di scarso livello per incompetenza del docente. Con questo corso sono finalmente riuscita a capire molte più cose. Lo consiglio assolutamente. Parte da concetti davvero base adatti a tutti e poi li approfondisce man mano, spiega ogni cosa in maniera davvero chiara. Ottimo davvero!\nAntonio: Niente. Corso perfetto!\n\n\nAllora cosa aspetti, inizia a programmare in Java ora!",
      "target_audience": [
        "Il corso è rivolto a tutti quelli che desiderano imparare a programmare in Java."
      ]
    },
    {
      "title": "Programación funcional en Java con Lambdas y Streams",
      "url": "https://www.udemy.com/course/lambda-java-8/",
      "bio": "Aprende a utilizar los recursos de la programación funcional con Java 8.",
      "objectives": [
        "Utilizar lambda expressions para mejorar la expresividad del código.",
        "Escribir código más compacto y reusable con los Stream y las nuevas interfaces funcionales",
        "Construir interfaces que ofrezcan una API más práctica con los métodos default y static",
        "Aprovechar las novedades introducidas en las API de Collection, Comparator y otros"
      ],
      "course_content": {
        "Introducción": [
          "Instrucciones para los ejercicios",
          "Introducción",
          "Solución primer ejercicio"
        ],
        "Interfaces": [
          "Default methods",
          "static methods",
          "@FunctionalInterface",
          "Repaso sección"
        ],
        "Lambdas": [
          "Tipos Lambda",
          "Lambda expressions",
          "Solución ejercicio lambda expression",
          "Repaso sección"
        ],
        "Functional interfaces": [
          "java.util.function",
          "Method references",
          "Optional",
          "Repaso sección"
        ],
        "Streams": [
          "Que son los streams",
          "Stream pipeline",
          "Lazyness",
          "Reducciones \"mutables\"",
          "Collectors",
          "Parallel Streams",
          "Repaso sección"
        ],
        "Adaptaciones del API": [
          "Collection",
          "Comparator",
          "Repaso sección"
        ],
        "Conclusiones": [
          "Conclusiones",
          "Referencias"
        ],
        "Extras": [
          "Clase extra: Otros cursos"
        ]
      },
      "requirements": [
        "Es necesario disponer del IDE Eclipse",
        "JDK en la version 1.8"
      ],
      "description": "Este curso introduce las novedades de Java 8, principalmente las nuevas interfaces funcionales y las lambda expression.\nEl curso está compuesto de lecciones cortas y centradas en un tema concreto. ¡Ya es bastante complejo asimilar todas las novedades de Java 8 como para aprender cinco cosas al mismo tiempo!\nCada tema, pues, introducirá un nuevo concepto, usando lo aprendido anteriormente y ofreciendo ejercicios para asimilar el contenido.\nY hablando de ejercicios .... Por favor, ¡hazlos!\nLos ejercicios son muy prácticos: importa el proyecto en el Eclipse y el mismo editor te indicará cuando los has realizado correctamente o no. ¡Imposible más comodidad!\nRecuerda: La teoría sirve para poder hacer los ejercicios. Solo en la práctica es cuando se produce el nuevo conocimiento.\nAsí pues: empieza con los videos y después de cada tema, súbete las mangas y ¡empieza a trabajar con las lambda expressions!\n\nRecuerda:\nCon la compra, tienes 30 días para probar el curso. Si no cumple tus expectativas puedes cancelarlo sin dar ninguna explicación. Se devuelve el 100% del importe.\nEl pago incluye el acceso a todas las lecciones de por vida. También a actualizaciones que se vayan realizando",
      "target_audience": [
        "Programadores familiarizados con el lenguaje Java en una versión anterior a Java 8.",
        "NO es un curso de introducción a Java. Si buscas un curso para aprender desde 0 el lenguaje, este curso NO es para ti."
      ]
    },
    {
      "title": "Einstieg in C# - Software programmieren wie ein Profi",
      "url": "https://www.udemy.com/course/einstieg-in-csharp-software-programmieren-wie-ein-profi/",
      "bio": "Egal ob Spiele, Web-, Mobile- oder Desktop-Apps - Du brauchst Methodik und die Grundlagen von C#. Beides lernst du hier.",
      "objectives": [
        "Die Fähigkeit professionell Software zu entwickeln. Vom Aufnehmen der Anforderung bis zum Erstellen einer Installationsroutine.",
        "Du hast die Grundlagen um mit Spieleframeworks wie Unity, XNA, MonoGame und anderen zu starten.",
        "Du hast die Grundlagen um Web- und Mobile-Apps im .NET Kontext zu entwickeln.",
        "Selbstständig die Entwicklung einer eigenen C#-Anwendung zu starten und in kleinen Iterationen voranzutreiben.",
        "C# Quellcode mit Klassen und Methoden zu strukturieren.",
        "C# Quellcode zu analysieren und zu verändern.",
        "C# Syntax und Bibliotheken verwenden zu können.",
        "C# Anwendungen testen zu können.",
        "Sich in einem Softwareentwicklungsprojekt zurecht zu finden.",
        "Eigenständig in einem Softwareentwicklungsprojekt Fehler beheben und Änderungen machen.",
        "Du hast einen Überblick über die Kernaktivitäten in einem Softwareentwicklungsprojekt und kannst dich dann in DEINEM Thema spezialisieren.",
        "Schnell und nachhaltig mehr C#-Syntax lernen.",
        "Praktische Erfahrung in der professionellen Softwareentwicklung mit C# durch viele Übungen und Beispiele die wir gemeinsam machen.",
        "Die Möglichkeit den Inhalt des Kurses mit zu bestimmen, weil er kontinuierlich weiter entwickelt wird."
      ],
      "course_content": {
        "Wie du das meiste für dich aus dem Kurs heraus holst": [
          "Starte den Kurs mit deinem Ziel vor Augen!",
          "Systematisch Lernen (mit diesem Kurs ;)",
          "Quellcode - Im Kurs und auf GitHub",
          "Softwareentwicklung braucht viel Praxis!"
        ],
        "Visual Studio 2019 - Erstelle deine erste C# Anwendung": [
          "Welches Visual Studio (2015, 2017 oder 2019)?",
          "Visual Studio 2019 Community (kostenlos) installieren",
          "Wie du dein erstes Projekt in VisualStudio (2019) erstellst",
          "Visual Studio 2019 kennenlernen",
          "Visual Studio 2019 = Syntax, Werkzeuge & Bibliotheken",
          "Deinen ersten Quellcode schreiben",
          "Kompilieren - Vom Quellcode zur Anwendung",
          "Ausführen & Testen - Tut es was es soll?",
          "Arbeite in kleinen Schritten",
          "Übung - Jetzt bist du dran",
          "Kennst du die Basics?",
          "Zusammenfassung - Quellcode schreiben, kompilieren und ausführen"
        ],
        "Übung für Anfänger - Habe keine Angst!": [
          "Jetzt bist du dran",
          "Wie du Fehlversuche (Visual Studio Projekte) löschen kannst",
          "Was wenn es nicht klappt?",
          "Wie ich die Aufgabe gelöst habe"
        ],
        "Intermezzo - Softwareentwicklung ist mehr als nur Programmieren": [
          "Warum Programmieren alleine dich nicht weiter bringt",
          "Wie du mit diesem Kurs ganz einfach Softwareentwicklung UND C# lernst",
          "Die 5 wichtigsten Aktivitäten in der Softwareentwicklung",
          "Individuelle Betreuung - hier im Kurs!"
        ],
        "Iteration #1 - Ein Taschenrechner der nur Addieren kann": [
          "Grundlagen: Anforderungen - Die Basis eines Softwareentwicklungsprojektes.",
          "Was soll der Taschenrechner können? - In 10 Minuten zu den ersten User Stories.",
          "C# Syntax: Kommentare - User Story im Quellcode",
          "C# Bibliothek: Console - Erst die Ausgabe, dann die Eingabe",
          "C# Syntax: Variablen - Merke dir den ersten Summanden",
          "C# Syntax: Datentypen - Text ist nicht gleich Zahl",
          "C# Bibliothek: Convert - Text in Ganzzahl wandeln",
          "Die User Story fertig stellen und testen",
          "Versionskontrolle (Git) - Das Sicherheitsnetz für deinen Taschenrechner",
          "Wenn du nicht weiter kommst - Beispielquellcode in Visual Studio importieren",
          "Zusammenfassung - Definiere Anforderungen, dann kannst du sie auch testen"
        ],
        "Übung - Addiere Zahlen mit unterschiedlichen Datentypen": [
          "Datentypen float, double und decimal - Auf die Position des Kommas kommt es an",
          "Jetzt bist du dran - Addieren mit Gleitkommazahlen",
          "Übung Gleitkommazahlen - Was ich heraus gefunden habe"
        ],
        "Intermezzo - Kontrolle über Versionen und Änderungen": [
          "Versionskontrolle - Das Sicherheitsnetz für die tägliche Arbeit",
          "Ältere Version wiederherstellen - Fehler korrigieren ganz einfach!",
          "Die Versionshistorie anschauen mit Visual Studio & Git",
          "Inhalt - JA zu Dokumenten und Quellcode, aber NEIN zu Binaries",
          "Verwende keine Versionsbezeichnung im Namen",
          "AssemblyInfo - Versionsinformationen in den Meta-Daten",
          "Tag - unser erstes Mini-Release",
          "Versionsverwaltung - Abschlussplädoyer ;-)"
        ],
        "Iteration #2 - Taschenrechner mit allen Grundrechenarten": [
          "Was ist eigentlich Softwaredesign?",
          "Anforderungen für diese Iteration",
          "Feinentwurf - Achtung! Wir drehen uns im Kreis.",
          "Einführung in Methoden - Wir haben schon welche erstellt und verwendet",
          "Single Level of Abstraction - Eine separate Methode für das Addieren.",
          "Zwischenfrage - Benutzt du noch die Versionsverwaltung?",
          "Erstellen einer Methode - Wir verlagern die Eingabe",
          "Verwenden einer Methode - Wir benutzen die neue Methode",
          "Methoden ausführen - Lerne den Debugger kennen",
          "Zwischenschritt - \"Softwarestruktur\" User Story abschließen",
          "Mini-Übung - Erstelle eine Methode die zwei Zahlen subtrahiert",
          "Benutzerinteraktion - eine Methode für alles",
          "Mini-Übung - Verwende eine Methode um den Operator einzulesen",
          "If-Anweisung - Der Taschenrechner lernt Minus",
          "Vergleichsoperatoren und der Datentyp bool (Boolean)",
          "Switch-Case-Anweisung - Eine Alternative zur if-Anweisung",
          "Zusammenfassung - Softwaredesign erstellen mit Methode(n)"
        ],
        "Übung - Vervollständige die Grundrechenarten": [
          "Jetzt bist du dran - Multiplizieren und Dividieren",
          "Zusatzaufgabe: Aufräumen in Main - Berechnung bekommt eine eigene Methode",
          "Übung Methoden & Kontrollfluss - Was ich heraus gefunden habe"
        ],
        "Intermezzo - Objektorientierung und UML ein Weg für das Softwaredesign": [
          "Warum Objektorientierung? - Evolvierbarkeit als Hauptziele von Softwaredesign",
          "Objektorientierung in der Theorie - Von Klassen und Objekten",
          "Objektorientierung in der Praxis - Klassen definieren",
          "Objektorientierung in der Praxis - Objekt anlegen und verändern",
          "Mini-Übung - Erweitere die Klasse Auto",
          "Meine Lösung zur Übung",
          "Datenkapselung - Verstecke Attribute für eine höhere Evolvierbarkeit",
          "Konstruktor - Wie Objekte erzeugt werden",
          "Eigenschaften - Kein direkter Zugriff auf Attribute bitte!",
          "UML Klassendiagramm - Eine Klasse zeichnen",
          "UML Klassendiagramm - Beziehungen visualisieren",
          "Model View Controller - Design nach Mustern"
        ]
      },
      "requirements": [
        "Du solltest einen Computer mit Microsoft Windows besitzen und bedienen können: Im Dateisystem navigieren können, ...",
        "Du brauchst KEINE Programmierkenntnisse!",
        "Du solltest die kostenlose Visual Studio 2019 Community Edition verwenden. In den ersten Lektionen erfährst du, wo du sie bekommst und wie du sie installierst."
      ],
      "description": "Mache diesen Kurs und du hast in einer Stunde deine erste C#-Anwendung entwickelt. Viel wichtiger ist jedoch, dass du nicht nur Programmieren lernst, sondern die Arbeitsweise, die professionelle Softwareentwickler verwenden um herausragende Anwendungen zu entwickeln.\n\nWas du lernst\n\nDieser Kurs vermittelt dir NICHT alle Details der Programmiersprache C#. Er gibt dir einen Einstieg und Überblick der wichtigsten Konzepte, Arbeitsweisen und befähigt dich mehr Details alleine schnell zu lernen.\nDamit bist du in der Lage sowohl deine eigenen Softwareprojekte zu starten, wie auch schnell in einem bestehendem Softwareentwicklungsprojekt mitarbeiten zu können. Du hast eine nervige Aufgabe, die sich immer wiederholt? Dann erstelle dir eine Anwendung, die dir die Aufgabe abnimmt oder dich dabei unterstützt sie schneller zu erledigen. Alles was du dafür brauchst, lernst du in diesem Kurs. Die benötigten Werkzeuge und viele weitere Informationen gibt es kostenlos im Internet. Ich zeige dir wo und begleite dich Schritt-für-Schritt bei der Installation, Verwendung und natürlich, wenn du Probleme hast.\nDu willst zukünftig Web- oder Mobile-Apps vielleicht sogar für verschiedene Plattformen entwickeln? Dann ist .NET und insbesondere C# eine gute Wahl. Microsoft öffnet .NET immer mehr und es stehen bereits jetzt viele beeindruckende Hilfsmittel und Projekte zur Verfügung um auch unter Linux und OS X mit C# zu entwickeln. Sobald du die Grundlagen verstanden hast, kannst du in das für dich relevante Gebiet eintauchen.\nAuch im Bereich der Spieleentwicklung wird C# seit vielen Jahren erfolgreich eingesetzt. Die Entwicklung von Spielen ist NICHT Gegenstand dieses Kurses. Allerdings bringt jedes Spiel ein übliches Problem in der Softwareentwicklung mit sich: Komplexität. Gerade weil du bei der Entwicklung von Spielen dich mit sehr vielen verschiedenen Aspekten beschäftigen musst, hilft dir eine strukturierte Arbeitsweise sehr. Hast du also schon ein Grundverständnis von C# und wie du ein Projekt umsetzen kannst, kannst du dich im nächsten Schritt voll auf deine Idee und Frameworks wie Unity, XNA oder MonoGame konzentrieren.\nWie du mit diesem Kurs lernst ...\n\n... als absoluter Einsteiger: Gerade zu Anfang des Kurses zeige ich dir Alles. Während ich dir im Video zeige wo du die Entwicklungsumgebung Visual Studio 2019 bekommst, wie du sie installierst und das erste mal startest, was du machen musst um dein erstes Projekt zu erstellen und wie du deinen ersten Quellcode schreibst, kannst du diese Schritte direkt nachvollziehen. Zusätzlich gibt es zu jedem Abschnitt eine Übung bei der ich dir eine Aufgabe stelle und dann zeige wie ich sie lösen würde.\n... als Umsteiger: Du brauchst nicht mehr soviel Details wie ein absoluter Einsteiger. Daher gibt es zu allen Lektionen eine kurze schriftliche Zusammenfassung. So kannst du die ersten Abschnitte schnell durcharbeiten und hast in Kürze eine produktive Arbeitsumgebung. Anhand der Übungen und Musterlösungen kannst du feststellen welche Bereich du bereits verstanden hast und wo du tiefer eintauchen solltest.\n\nDir zu vermitteln was professionelle Softwareentwicklung ist und welche genialen Möglichkeiten dir die .NET-Plattform bietet ist mein Ziel. Häufig ist es jedoch so, dass man während der Softwareentwicklung und insbesondere während des Lernens alleine nicht weiter kommt. Die fehlende Interaktion mit dem Dozent hat mich bisher bei Videotutorials immer gestört. Bei diesem Kurs hast du die Möglichkeit deine Probleme und Fragen direkt im Diskussionsforum zu diesem Kurs zu stellen. Dann bekommst du schnell Unterstützung von mir oder einem deiner Mitstudenten.\n\nDa du diesen Kurs zusätzlich zu vielen anderen Aufgaben erledigen wirst, ist er so aufgebaut, dass du nicht mehr als 15-20 Minuten am Tag machen musst. Aus eigener Erfahrung weiß ich, wie anstrengend es ist neben dem Beruf auch noch eine oder gar mehrere Stunden am Tag für Weiterbildung aufzubringen. Häufig ist das der Anfang vom Ende, weil du nach wenigen Tagen einfach keine Motivation mehr hast (egal wie spannend das Thema und der Kurs ist). Du entscheidest natürlich selbst, aber ich empfehle dir jeden Tag wenige Lektionen anzuschauen und etwas zu üben. So wirst du innerhalb weniger Wochen beeindruckende Resultate sehen.\nUm diesen Kurs noch individueller auf deine Bedürfnisse anzupassen, beantworte ich jede Woche eine Frage eines Kursteilnehmers mit einem neuen Video. So kann ich dir \"fast\" ganz persönlich bei deinen Herausforderungen helfen.\nZum Schluss\n\nIch bin beeindruckt, dass du bis hier gelesen hast. Du hast auf jeden Fall die Veranlagung ein professioneller Softwareentwickler zu werden. Einer der wichtigsten Aspekte dafür ist der Wille kontinuierlich zu lernen und die Neugierde was es noch alles gibt.\nViel Spaß beim Lernen und dem Kurs\nJan",
      "target_audience": [
        "Einsteiger, die noch keinerlei Erfahrung im Programmieren haben.",
        "Umsteiger, die bereits etwas Erfahrung in einer anderen Programmiersprache haben, aber die .NET-Platform noch nicht kennen.",
        "C#-Programmierer, die sich eine professionelle Arbeitsweise aneignen wollen.",
        "Fach- und Führungskräfte, die ein Grundverständnis für Softwareentwicklung erlangen wollen."
      ]
    },
    {
      "title": "Formation Python - Débutant à Expert",
      "url": "https://www.udemy.com/course/formation-python-debutant-a-expert/",
      "bio": "Apprenez Python par la pratique et devenez un Expert en Programmation Python: Interfaces Graphiques, Jeux, Site Web ...",
      "objectives": [
        "Apprendre la programmation Python",
        "Maîtriser le développement d'applications avec Python",
        "Apprendre les concèptes fondamentaux et avancés",
        "Créer des applications à partir de Zéro",
        "Travailler sur des projets concrets pour améliorer vos connaissances",
        "Devenir un Expert en Programmation Python",
        "Apprendre le Développement d'Interfaces Graphiques",
        "Apprendre le Développement de Jeux",
        "Apprendre le Développement Web"
      ],
      "course_content": {
        "Apprendre Python": [
          "Bienvenue",
          "Pourquoi apprendre Python?",
          "Exemple de code Python & Exercice Guidé",
          "Programme de la formation",
          "Code sources Github"
        ],
        "### [ PARTIE 1: Les bases ]": [
          "Introduction"
        ],
        "Installation & Configuration": [
          "Editeur en ligne: Repl.it",
          "Installation de Python - Windows",
          "Installation de Python - MAC OS",
          "Les éditeurs de code Python",
          "Installation: Visual Studio Code",
          "Installation: PyCharm"
        ],
        "Apprentissage Interactif": [
          "Introduction",
          "L’interpréteur Python",
          "Ce que nous allons réaliser",
          "Afficher une tortue à l'écran",
          "Déplacer la tortue",
          "Faire tourner la tortue",
          "Effacer & Réinitialiser la tortue",
          "Déssiner un carré",
          "Exercice: Déssiner un rectangle",
          "Solution: Déssiner un rectangle",
          "Exercice: Déssiner un triangle",
          "Solution: Déssiner un triangle"
        ],
        "Variables & Nombres": [
          "Introduction",
          "C'est quoi une variable?",
          "Utiliser des variables",
          "Ajouter des commentaires au code",
          "Nomenclature des variables",
          "Conventions de nomenclature (CamelCase, SnakeCase, ...)",
          "Les types de données Python",
          "Les nombres",
          "Aparté sur les nombres (int & float)",
          "Opérations mathématique",
          "[ EXERCICE: Convertisseur d'angles ]",
          "[ SOLUTION: Convertisseur d'angles ]",
          "Priorité des opérateurs mathématique",
          "Opérateurs: Notation abrégée",
          "[ EXERCICE: La monnaie ]",
          "[ SOLUTION: La monnaie ]",
          "Gestion des erreurs de programmation",
          "Les booléens",
          "Opérations de comparaison",
          "Générer des nombres aléatoires",
          "Le module mathématique"
        ],
        "[ PROJET: Calculatrice v1 ]": [
          "Challenge",
          "Solution"
        ],
        "Les chaînes de caractères": [
          "Introduction",
          "Les chaînes de caractères",
          "Quand utiliser \" ou ' ?",
          "Chaînes de caractères multilignes",
          "Récupérer le nombre de caractères",
          "La concaténation",
          "Conversion de type str, int, float",
          "Le formatage f-string",
          "Récupérer les entrées utilisateur",
          "[ EXERCICE: La calculatrice ]",
          "[ SOLUTION: La calculatrice ]",
          "L'indexage",
          "Le tranchâge",
          "Méthodes de chaînes de caractères",
          "La méthode replace()",
          "La méthode split()",
          "[ EXERCICE: Initiales d'un nom ]",
          "[ SOLUTION: Initiales d'un nom ]"
        ],
        "[ PROJET: Déboguer le code ]": [
          "Challenge",
          "Solution"
        ],
        "[ PROJET: IMC ]": [
          "Challenge",
          "Solution"
        ],
        "### [ PARTIE 2: Niveau intermédiaire ]": [
          "Introduction"
        ]
      },
      "requirements": [
        "Aucune connaissance préalable n'est requise",
        "Un ordinateur et une connection internet",
        "Un peu de motivation et un désir d'apprendre"
      ],
      "description": "Souhaitez vous Apprendre Python, mais ne savez pas par où commencer?\nCette formation va vous permettre de maîtriser tous les concèptes requis pour faire de vous un Expert  en Programmation Python. Vous allez acquérir toutes les connaissances nécéssaires pour développer des applications à partir de Zéro.\nQue vous soyez débutant en programmation ou déjà initié, vous allez  apprendre pas à pas tout ce qu'il faut savoir pour faire de vous un développeur Python confirmé.\n\n\nPourquoi apprendre Python ?\n\n\nPython est sans aucun doute le langage de programmation le plus populaire au monde. Les chiffres ne mentent pas, plusieurs sondages effectués le provent, que ce soit le PYPL (Popularity of Programming Languages) ou Stack Overflow, leurs sondages montrent que les développeurs aiment utiliser Python pour leurs projets.\nVous connaissez surement des entreprises comme Google, DropBox, Netflix ou Facebook.  Vous allez être surpris de savoir que Python est l'un des langages de programmation principaux utilisé pour le développement de leur produits. De nos jours, peu importe votre industrie, Python vous permettra de simplifier le développement de vos applications.\nDes centaines de milliers de développeurs ont déjà adopté ce langage de programmation. Tout ce qu'il vous faut pour débuter est un ordinateur avec une connection internet et les connaissances que vous allez acquérir dans cette formation.\n\n\nPython est aussi très versatile, facile à apprendre, très recherché dans le domaine de l'emploi, et la liste des avantages est encore très longue.\n\n\nLes avantages de la formation\n\n\nVous allez apprendre les bases, mais aussi les concèptes intermédiaires, avancés et expert qui vous permettront de développer des applications très facilement.\nVous serez capable de créer vos propres projets et tout au long de la formation apprendre tout ce qu'il faut pour maîtriser la programmation Python sur le bout des doigts.\nLa meilleure manière d'apprendre est par la pratique! Vous allez trouver dans cette formation plusieurs exercices pratiques et challenges pour complémenter votre apprentissage.\nCette formation est complète et vous aurez accès à +50h de vidéos HD, 200+ code sources sur chaque concèpte courvert dans la formation. 40+ projets concrets fonctionnels qui vous permettront de découvrir les bonnes pratiques de développement d'applications.\n\n\nCe que vous allez apprendre\n\n\nLa programmation Python\nVariables & Nombres\nChaînes de caractères\nBoucles\nListes, Tuples, Ensembles & Dictionaires\nFonctions\nClasses\nFichiers\nModules & Packages\nBases de données\nDéveloppement d'Interfaces Graphiques\nDéveloppement de Jeux\nDéveloppement Web\nEt bien d'autres choses\n\n\nCes concepts vous seront présentés de manière simple, concise et détaillée. Vous deviendrez ainsi autonome et pourrez travailler sur vos propres projets de manière éfficace.\nInscrivez-vous aujourdhui et rejoignez moi dans cette formation pour faire de vous un Expert en Programmation Python.",
      "target_audience": [
        "Débutants en programmation",
        "Développeurs souhaitant apprendre Python",
        "Toute personne souhaitant se perfectionner en Programmation Python"
      ]
    },
    {
      "title": "オブジェクト指向の原則１：単一責務の原則とオープンクローズドの原則",
      "url": "https://www.udemy.com/course/objectfive1/",
      "bio": "オブジェクト指向5大原則SOLIDの「単一責務の原則」と「オープンクローズドの原則」について解説しています。サンプルコードはC#を使って解説しています。",
      "objectives": [
        "単一責務の原則",
        "クラスの分割方法",
        "単一責務の原則のアンダーソン式の定義",
        "オープンクローズドの原則",
        "オープンクローズドの原則の活用方法"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "単一責務の原則": [
          "S_01_単一責務の原則とは",
          "S_02_原則違反の例",
          "S_03_変更理由単位でクラスを分ける",
          "S_04_3層構造の例",
          "S_05_修正箇所を最小にできる",
          "S_06_修正する場所が明確になる",
          "S_07_ 共通化しましょうという話ではない",
          "S_08_少々悪いコードでも問題視しない理由",
          "S_09_探しやすいコード",
          "S_10_クラスは機能ごとに小さく作る",
          "S_11_小さなクラスがそれぞれに協調して目的を達成させる",
          "S_12_多数の部品群のなかから摘まんで作る",
          "S_13_クラスはどこまで小さくすればいいのか",
          "S_14_アンダーソン式単一責務の原則",
          "S_15_最小カプセルの検証_監視タイマークラス",
          "S_16_最小カプセルの検証_受注画面クラス",
          "S_17_最小カプセルの検証_ユーザークラス",
          "S_18_最小カプセルの検証_商品マスターデータアクセス",
          "S_19_登場人物に合わせたモデリングの四角と線",
          "S_20_登場人物に合わせたモデリングの四角と線を最小カプセル化する",
          "S_21_アンダーソン式手順",
          "S_22_パターンを見つけ出す",
          "S_23_プログラミングの自問とまとめ"
        ],
        "オープンクローズドの原則": [
          "O_01_オープンクローズドの原則の概要",
          "O_02_オープンクローズドの原則違反の例",
          "O_03_オープンクローズドの原則の実装方法",
          "O_04_カード読み込み画面の作成",
          "O_05_ポイント画面の作成",
          "O_06_オープンクローズドの原則違反_クライアントコードのみ",
          "O_07_オープンクローズドの原則違反_ポイントクラスを分けても解決しない例",
          "O_08_オープンクローズドの原則違反_ポイントクラスのメソッドが増える例",
          "O_09_オープンクローズドの原則違反_private変数にしても解決しない例",
          "O_10_オープンクローズドの原則を適応する",
          "O_11_オープンクローズドの原則を適応後にAnaポイントを拡張してみる",
          "O_12_オープンクローズドの原則を適合後にファクトリーパターンを導入する",
          "O_13_拡張メソッドを抽象クラスで実装する方法",
          "O_14_拡張ポイントを仮想メソッドで実装する方法",
          "O_14B_拡張ポイントを仮想メソッドで実装する方法の訂正",
          "O_15_早まった抽象をしないことも抽象をするくらい大事",
          "O_16_予想されるバリエーション",
          "O_17_この原則を生んだ偉人の思いと受け継ぐ我々"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "カプセル化、インタフェース、継承についてある程度理解していること",
        "サンプルコードはC#を使用しているため，ある程度C#コードが理解できること（javaなどのオブジェクト指向言語がわかれば理解できるとは思います）"
      ],
      "description": "どうもこんにちは，ピーコックアンダーソンです。\n今回は「オブジェクト指向の5大原則」の中から，\n「単一責務の原則」と「オープン・クロースドの原則」に関して解説しています。\n\n\nオブジェクト指向の5大原則は，\n単一責務の原則（Single Responsibility Principle）\nオープン・クロースドの原則（Open/closed principle）\nリスコフの置換原則（Liskov substitution principle）\nインターフェース分離の原則（Interface segregation principle）\n依存関係逆転の原則（Dependency inversion principle）\nの５つで構成されており，それぞれの頭文字をとって「SOLID」と呼ばれています。\n\n\n今回解説している「単一責務の原則」は，\n簡単に言うと，「クラスは1つの責務だけをするようにつくろう」という感じで，\n「オープン・クロースドの原則」の原則は，\n「機能拡張するときは追加型で追加し，\n既存のコードに影響が出ないように，機能拡張をしよう」\nといった内容ですが，これらの内容に関する書籍を改めて読み返し，\n私なりに整理し，独自の視点を取り入れて，新人教育にも使えるレベルで\nかみ砕いて解説してみました。そのため，２つの原則だけで，\n結構なボリュームなってしまったので，2原則でリリースします。\n\n\n正直，ドメイン駆動開発の元になっている考え方で，\n非常に重要なエッセンスが詰め込まれたコースになっています。\nドメイン駆動開発を受講した方は，ドメイン駆動のルーツがわかり，ドメイン駆動をより理解できる内容で，\n未受講者にとっては，これを事前に学んでおくことで，今後，ドメイン駆動を学ぶ際に，\nドメイン駆動のパターンが，すんなり理解できるのではないかと思います。\n\n\nといっても，「インタフェースってなに？」「カプセル化ってなに？」という方には，\n少々難しい内容になっているので，事前に「Ｃ＃でオブジェクト指向をする方法」を\n受講していただくことをお勧めします。\n\n\n【単一責務の原則】\nS_01_単一責務の原則とは\nS_02_原則違反の例\nS_03_変更理由単位でクラスを分ける\nS_04_3層構造の例\nS_05_修正箇所を最小にできる\nS_06_修正する場所が明確になる\nS_07_ 共通化しましょうという話ではない\nS_08_少々悪いコードでも問題視しない理由\nS_09_探しやすいコード\nS_10_クラスは機能ごとに小さく作る\nS_11_小さなクラスがそれぞれに協調して目的を達成させる\nS_12_多数の部品群のなかから摘まんで作る\nS_13_クラスはどこまで小さくすればいいのか\nS_14_アンダーソン式単一責務の原則\nS_15_最小カプセルの検証_監視タイマークラス\nS_16_最小カプセルの検証_受注画面クラス\nS_17_最小カプセルの検証_ユーザークラス\nS_18_最小カプセルの検証_商品マスターデータアクセス\nS_19_登場人物に合わせたモデリングの四角と線\nS_20_登場人物に合わせたモデリングの四角と線を最小カプセル化する\nS_21_アンダーソン式手順\nS_22_パターンを見つけ出す\nS_23_プログラミングの自問\n\n\n【オープンクローズドの原則】\nO_01_オープンクローズドの原則の概要\nO_02_オープンクローズドの原則違反の例\nO_03_オープンクローズドの原則の実装方法\nO_04_カード読み込み画面の作成\nO_05_ポイント画面の作成\nO_06_オープンクローズドの原則違反_クライアントコードのみ\nO_07_オープンクローズドの原則違反_ポイントクラスを分けても解決しない例\nO_08_オープンクローズドの原則違反_ポイントクラスのメソッドが増える例\nO_09_オープンクローズドの原則違反_private変数にしても解決しない例\nO_10_オープンクローズドの原則を適応する\nO_11_オープンクローズドの原則を適応後にAnaポイントを拡張してみる\nO_12_オープンクローズドの原則を適合後にファクトリーパターンを導入する\nO_13_拡張メソッドを抽象クラスで実装する方法\nO_14_拡張ポイントを仮想メソッドで実装する方法\nO_15_早まった抽象をしないことも抽象をするくらい大事\nO_16_予想されるバリエーション\nO_17_この原則を生んだ偉人の思いと受け継ぐ我々",
      "target_audience": [
        "単一責務の原則について学びたい方",
        "オープンクローズドの原則について学びたい方"
      ]
    },
    {
      "title": "Curso Completo de Programación con Kotlin Desde Cero",
      "url": "https://www.udemy.com/course/introduccion-programacion-kotlin/",
      "bio": "Domina el lenguaje de programación Kotlin, desarrolla tu lógica y ¡transforma tu futuro como desarrollador ahora mismo!",
      "objectives": [
        "Principales características del lenguaje de programación Kotlin.",
        "Todas las bases necesarias para comenzar a programar.",
        "Descargar, instalar y configurar las herramientas necesarias para programar con Kotlin.",
        "Manera de resolver problemas mediante el análisis y la creación de algoritmos.",
        "Manipulación de texto, números y operaciones matemáticas en programación.",
        "Uso de funciones con parámetros y argumentos para dividir los problemas en tareas más simples y tener bloques de código reutilizables.",
        "Uso de estructuras de control, condiciones, operadores y ciclos para controlar el flujo de ejecución de los programas.",
        "Arreglos para manipular conjuntos de datos.",
        "Null Safety, manejo de excepciones y depuración para controlar la calidad del desarrollo.",
        "Programación orientada a objetos (POO) de manera teórica y práctica.",
        "Consejos y contenido extra para tener las mejores herramientas para desarrollar software."
      ],
      "course_content": {
        "Introducción": [
          "Presentación del curso",
          "Introducción a Kotlin",
          "Estructura y manera de seguir el curso"
        ],
        "Configurar el entorno de desarrollo": [
          "Herramientas de desarrollo y entorno de desarrollo integrado (IDE)",
          "Instalación de Java SE Development Kit (JDK)",
          "Instalación de IntelliJ IDEA"
        ],
        "Fundamentos de programación": [
          "Importancia de la programación y algoritmos",
          "Hola mundo, palabras reservadas y estructura de un proyecto en Kotlin",
          "Spell checking (corrección ortográfica) en IntelliJ IDEA",
          "Conociendo IntelliJ IDEA",
          "Variables y tipos de datos básicos",
          "Entrada de datos, concatenación, String Template y Raw String",
          "Operadores matemáticos, conversión de tipos de datos y redondeo de números",
          "Funciones",
          "Caso de estudio",
          "Ejercicios - Fundamentos de programación"
        ],
        "Estructuras, arreglos y ciclos": [
          "Estructuras de control, condición if-else y operadores",
          "Expresión when",
          "Arreglos y ciclo for",
          "ArrayList y forEach",
          "Ciclos while y do-while",
          "Ejercicios - Estructuras, arreglos y ciclos"
        ],
        "Excepciones, seguridad contra nulos y depuración": [
          "Excepciones: try, catch, finally",
          "Nulo, vacío y Null Safety",
          "Depuración (debugging) para detectar y corregir errores",
          "Ejercicios - Excepciones, seguridad contra nulos y depuración"
        ],
        "Programación orientada a objetos (POO)": [
          "Introducción",
          "Clases, propiedades o atributos, objetos e instancias",
          "Constructores y modificadores de acceso",
          "Métodos y sobrecarga de métodos",
          "Companion object y constantes",
          "Herencia",
          "Clases abstractas e interfaces",
          "Clases de datos (Data Classes)",
          "Clases Enum",
          "Ejercicios - Programación orientada a objetos"
        ],
        "Extras y consejos": [
          "Introducción",
          "Stack Overflow y búsquedas",
          "Herramientas de inteligencia artificial",
          "Control de versiones",
          "Despedida del curso"
        ]
      },
      "requirements": [
        "Una computadora con Windows, Mac o Linux.",
        "Sobre todo, y lo más importante, muchas ganas de aprender a programar con Kotlin."
      ],
      "description": "¡Bienvenido al curso definitivo de Kotlin, tu puerta de entrada al fascinante mundo de la programación! Si estás ansioso por aprender a programar y aspiras a convertirte en un desarrollador profesional de software, ¡has llegado al lugar indicado!\nEn este curso, nos sumergiremos en el universo de Kotlin, un lenguaje de programación moderno equipado con características y herramientas que agilizan el desarrollo, haciéndolo más eficiente y conciso. ¿La mejor parte? Logramos los mismos resultados que en otros lenguajes, como Java, ¡pero con un 40% menos de líneas de código! Imagina reducir de 100 a solo 60 líneas o incluso menos para una funcionalidad comparable; esto es simplemente asombroso.\nKotlin ha experimentado un auge significativo en los últimos años, siendo adoptado por un creciente número de desarrolladores. Este lenguaje no solo permite la creación de aplicaciones multiplataforma para diversos sistemas operativos, sino que también es la elección preferida de Google para el desarrollo en Android, donde ha dejado su huella como lenguaje oficial.\nEste curso ha sido meticulosamente diseñado para ofrecerte la mejor experiencia de aprendizaje. Desde ejercicios hasta prácticas, abordaremos cada tema desde lo más básico, avanzando gradualmente para que comprendas completamente cada concepto.\nDetrás de este curso se encuentra un instructor con más de 12 años de experiencia en programación y más de 2 años trabajando profesionalmente con Kotlin. Con aplicaciones publicadas en Google Play, descargadas por millones en todo el mundo, puedes estar seguro de que estás participando en un curso serio y profesional. ¡Prepárate para ser guiado por el camino hacia el éxito como desarrollador! ¿Estás listo para transformar tu futuro? ¡Inscríbete a este curso y comencemos este emocionante viaje juntos!",
      "target_audience": [
        "Personas interesadas en aprender a programar desde cero.",
        "Personas interesadas en aprender el lenguaje de programación Kotlin.",
        "Programadores de otro lenguaje que quieran repasar los fundamentos de la programación y aprender Kotlin."
      ]
    },
    {
      "title": "PHPからLaravelまで サーバーサイドをとことんやってみよう【初心者から脱初心者へ】【わかりやすさ最重視】",
      "url": "https://www.udemy.com/course/phpbeginnertolaravel/",
      "bio": "PHP初歩からLaravelまでをつなぐように知識を網羅しています。連想配列や関数からフォーム(HTTP)/セキュリティ/PDO/クラスなど。composer/名前空間などを使った現代的な開発方法を体験することができます。",
      "objectives": [
        "PHPを基礎からわかりやすく",
        "セキュリティ対策を実施したフォームの作成方法",
        "PDOを使ったデータベース接続",
        "composerを使ったモダンPHPの理解",
        "Laravel入門",
        "LaravelでRESTfulの実装"
      ],
      "course_content": {
        "PHPの基礎": [
          "Udemyの簡単な説明",
          "講座で扱っている資料・サンプルコード",
          "本講座の概要",
          "PHPやLaravelでできる事",
          "PHPの環境説明",
          "PHPの書き方 その1",
          "PHPの書き方 その2",
          "PHPの変数 その1",
          "PHPの変数 その2",
          "PHPの定数",
          "PHPの配列",
          "PHPの連想配列 その1",
          "PHPの連想配列 その2",
          "PHPの連想配列 その3",
          "PHPの演算子",
          "PHPのif文 その1",
          "PHPのif文 その2",
          "PHPのif文 その3",
          "PHPのforeach",
          "PHPのfor, while",
          "PHPのswitch",
          "PHP ユーザー定義関数その1",
          "PHP ユーザー定義関数その2",
          "PHP 組み込み関数、phpマニュアル",
          "PHP 文字列関数 strlen, mb_strlen, str_replace",
          "PHP 文字列関数 explode, preg_match, substr",
          "PHP 配列の関数 array_push",
          "PHP 関数を自作してみる",
          "PHP 変数のスコープ",
          "PHP ファイルの読み込み"
        ],
        "お問い合わせフォーム": [
          "PHP フォームの解説 HTTP",
          "PHP設定ファイル(php.ini)",
          "PHP 処理を止める exit",
          "PHP フォーム GET, POST",
          "PHP フォーム 入力、確認、完了",
          "PHP 戻るボタン",
          "PHP フォームセキュリティ XSS",
          "PHP フォームセキュリティ CSRF",
          "PHP バリデーションの準備1",
          "PHP バリデーションの準備2",
          "PHP バリデーション1",
          "PHP バリデーション2",
          "PHP Bootstrap4 その1",
          "PHP Bootstrap4 その2",
          "PHP ベーシック認証",
          "PHP ファイル操作 その1",
          "PHP ファイル操作 その2"
        ],
        "データベース接続": [
          "PHP データベースの解説",
          "phpMyAdmin",
          "PHP CRUD",
          "PHP PDOの解説",
          "PHP PDOでデータベースと接続",
          "PHP PDO プリペアードステートメント プレースホルダ",
          "PHP PDO トランザクション",
          "PHP フォーム値をDBに保存 その1",
          "PHP フォーム値をDBに保存 その2"
        ],
        "セッションや高度な関数": [
          "PHP クッキーとセッション その1",
          "PHP クッキーとセッション その2",
          "PHP 少し高度な関数 タイプヒンティングなど",
          "PHP 少し高度な関数 コールバック関数など"
        ],
        "オブジェクト指向やモダンPHP": [
          "PHP オブジェクト指向の解説",
          "PHP クラスとインスタンス",
          "PHP 継承",
          "PHP 抽象クラスとインターフェース",
          "PHP トレイト",
          "モダンPHPの解説",
          "PHP composerの実行",
          "PHP composer 名前空間、オートロード",
          "PHP composer ライブラリ Carbon"
        ],
        "Laravel9 入門": [
          "追記: windowsでのインストールコマンド",
          "Laravelのインストール",
          "Laravelの初期設定",
          "Laravel キャッシュのクリア方法",
          "Laravel データベース設定・接続確認",
          "Laravelの概要 (MVCモデル + ルーティング)",
          "Laravel ルート、ビュー",
          "Laravel Artisan コマンド (list)",
          "Laravel モデル",
          "Laravel マイグレーション",
          "Laravel tinker",
          "Laravel コントローラ",
          "Laravel MVCモデルの記述方法 1",
          "Laravel MVCモデルの記述方法 2",
          "Laravel ヘルパ関数",
          "Laravel エロクアントとコレクション型",
          "Laravel クエリビルダ",
          "Laravel ファサード",
          "Laravel 起動処理 DIとサービスコンテナ",
          "Laravel ブレード（Blade)",
          "Laravel フロントエンド",
          "Laravel 認証 ( Vite と Laravel Breeze)",
          "Laravel 追加されたルーティング情報を確認してみる",
          "Laravel エラーメッセージの日本語化対応"
        ],
        "Laravel9 簡易Webアプリ(CRUD/RESTful)": [
          "Laravel 概要 モデル・マイグレーション",
          "Laravel マイグレーション・追加とロールバック",
          "Laravel 以前書いていたコードの復元 (routes/web.php)",
          "Laravel RestFulなコントローラー",
          "Laravel ルーティング(グループ・認証)",
          "Laravel Bladeコンポーネントについて (login.blade.php)",
          "Laravel スロット、名前付きスロット など",
          "Laravel フォーム、多言語、tailwindcss",
          "Laravel app.blade.php と navigation.blade.php",
          "Laravel Create 新規登録 レイアウト調整",
          "Laravel Createフォーム",
          "Laravel Store Requestクラス",
          "Laravel Store 保存",
          "Laravel index 画面、ナビゲーション追加",
          "Laravel show 詳細表示画面 その1",
          "Laravel show 詳細表示画面 その2",
          "Laravel edit 編集画面",
          "Laravel update 更新画面",
          "Laravel destroy 削除機能",
          "Laravel サービスへの切り離し(ファットコントーラー防止)",
          "Laravel バリデーション(フォームリクエスト)",
          "Laravel oldへルパ関数",
          "Laravel ダミーデータ(シーダー)",
          "Laravel ダミーデータ(Factory & Faker)",
          "Laravel ページネーション",
          "Laravel 検索フォーム その1",
          "Laravel 検索フォーム2 (クエリのローカルスコープ)"
        ],
        "Laravel9 Webアプリを開発するために": [
          "Laravel 要件定義と基本設計 (Laravel6と同じ動画です)",
          "Laravel リレーション(1対多) その1",
          "Laravel リレーション(1対多) その2",
          "Laravel リレーション 外部キー制約",
          "Laravel リレーション(多対多)",
          "おまけ：GitHubにファイルアップロード",
          "おまけ：GitHubからファイルダウンロード"
        ],
        "Laravel6 入門": [
          "追加：PHPパス変更方法(mac, bash)",
          "追加: PHPパス変更方法 ( mac, zsh)",
          "2022年6月追記: Laravelバージョンについて",
          "Laravelのインストール",
          "Laravelの初期設定",
          "Laravel キャッシュのクリア方法",
          "Laravel データベース設定",
          "Laravel データベース接続確認",
          "Laravelの概要",
          "Laravel ルート、ビュー",
          "Laravel Artisanコマンド",
          "Laravel モデル",
          "Laravel マイグレーション",
          "Laravel tinker",
          "Laravel コントローラ",
          "Laravel MVCモデルの記述方法 1",
          "Laravel MVCモデルの記述方法 2",
          "ヘルパ関数",
          "コレクション型",
          "クエリビルダ",
          "ファサード",
          "起動処理 DIとサービスコンテナ",
          "ブレード（Blade)",
          "フロントエンド",
          "追加動画(Vite)の補足",
          "追加動画: Laravel9.18以降 Vite",
          "Laravel-uiと認証",
          "追加動画： npm run watch",
          "エラーメッセージの日本語化・マルチログインの補足"
        ],
        "Laravel6 簡易Webアプリ(CRUD/RESTful)": [
          "概要 モデル・マイグレーション",
          "マイグレーション・追加とロールバック",
          "RestFulなコントローラー",
          "ルーティング(グループ・認証)",
          "layout.blade.phpを読んでみる",
          "login.blade.phpを読んでみる",
          "Create 新規登録",
          "StoreとRequest 保存の前に",
          "Store 保存",
          "DBに保存されているデータの取得",
          "show 表示画面",
          "edit 編集画面",
          "update 更新画面",
          "destroy 削除機能",
          "サービスへの切り離し(ファットコントーラー防止)",
          "バリデーション(フォームリクエスト)",
          "ダミーデータ(シーダー)",
          "ダミーデータ(Factory & Faker)",
          "ページネーション",
          "検索フォーム"
        ]
      },
      "requirements": [
        "インターネット接続可能なパソコン",
        "わからない事があったら遠慮なく質問する主体性"
      ],
      "description": "今や世界中で使われ、大活躍しているプログラミング言語が『PHP』です。\n\n\n『PHP』の初歩の初歩から解説し、\n\n\nホームページには必要不可欠なお問い合わせフォームを例題に、\n\n\nセキュリティも気にしながら、データベースと接続して\n\n\n情報をやりとりする方法を解説しています。\n\n\nまた、モダンPHPとも呼ばれますが、\n\n\nオブジェクト指向、名前空間、オートロード、composerなども\n\n\nできるだけわかりやすく解説しつつ、\n\n\nPHPフレームワーク『Laravel』もセットで解説しています。\n\n\n初心者の頃に詰まった事、知っておきたかった事など、\n\n\n過去の自分に向けるように、\n\n\nとにかくわかりやすさ重視で解説しています。\n\n\n※※ 追記 ※※\nわかりやすさをモットーに解説しておりますが、\nまったくのプログラミング初心者の場合は少し内容が難しいかもしれません。\n\n\n全くの初心者の場合はプロゲートやドットインストールなどで\nプログラミングってこんなもの、と体験いただいてからご受講いただいた方がいいかもしれません。\n\n\nまた、いくつかコメントいただいていますが、\n\n\n動かしながら覚えていくというスタンスで解説しているため、\n\n\n特にLaravelは「どうやって動いているか」という詳細は解説していません。\n\n\nLaravelはなぜ動いているかというのを解説しだすと、\nサービスコンテナ/サービスプロパイダ/DI/Facade/Middleware/autoload/boostrap\nあたりの解説が必要になってくるのですが、\n最初からそれを解説するとそこで挫折する人が多いという判断で順番を変えております。\n(僕なら挫折する)\n\n\n図や絵を使ってやや抽象的に解説しているのですが\n\n\n人によっては「適当な説明」と受け止める方もいらっしゃるので、\n\n\n無料配信している映像をご確認いただいてから購入をお願いいたします。\n\n\n※もし合わないと感じたら30日以内であれば返金の仕組みがございますので\n\n\n遠慮なくご返金をお願いいたします。\n\n\n※※ 追記ここまで ※※\n\n\n■更新情報\n2022/9/21 Laravel9に対応しました。\n\n\n■動作環境\n\n\nPHP 7.2～7.3\n(Laravel 9.x セクションは PHP8.0)\n\n\nLaravel 9.x\nLaravel 6.0.x\n\n\n■扱っている事\n\n\nPHPパート・・環境構築(XAMPP/MAMP)/変数/関数/セキュリティ/データベース接続(PDO)/オブジェクト指向(クラス・抽象クラス・インターフェース・トレイト/名前空間/オートロード/composer/\n\n\nLaravelパート・・MVC/起動の仕組み/コレクション/ファサード/マイグレーション/Vite/RESTful/シーダー/ファクトリー/リレーション などなど。\n\n\nおまけ・・Bootstrap, Node.js/npm, GitHub\n\n\n追加動画も検討していますのでぜひお気軽にご連絡くださいませ。",
      "target_audience": [
        "プログラミングに少しでも興味がある方",
        "ホームページにPHPも含めたいと思っている方",
        "Laravelから入ったためPHPを復習したい方",
        "本やネットで独学してもなかなか使いこなせないと思っている方"
      ]
    },
    {
      "title": "Sıfırdan Sona Java 2019 Köhnə (Azərbaycan dilində)",
      "url": "https://www.udemy.com/course/java-azerbaycan-dilinde/",
      "bio": "6 aylıq tam kurs",
      "objectives": [
        "Java Standart Edition",
        "Java Swing (Desktop Programlaşdırma)",
        "Java Enterprise Edition (Servlet, JSP, JAX-RS, JAX-WS)",
        "Spring Framework",
        "Spring Data",
        "Spring MVC",
        "Spring Security",
        "Spring Boot",
        "JPA (Hibernate, Eclipselink)",
        "Restful API",
        "Soap API",
        "Multithreading",
        "TCP",
        "Design Patternlər",
        "Linux-a giriş və Java ilə bağlı məqamlar"
      ],
      "course_content": {
        "Giriş (Mütləq izləyin)": [
          "DİQQƏT! HANSI KURSU ALMALIYAM?!",
          "Kurs haqqında, kurs nələri əhatə edir",
          "Proqramlaşdırma ilə bağlı sizdən gələn sualları cavablayıram",
          "Suallarınız üçün Telegram qrupumuza qoşulun",
          "Dərs planı"
        ],
        "1-ci ay təlimi": [
          "Uğur qazana bilmək üçün dərslərə necə baxmalı",
          "JDK və Netbeans Yüklənilməsi",
          "Java necə işləyir, kod nədir və necə yazılır?",
          "Java necə işləyir, kod nədir və necə yazılır? (2-ci hissə)",
          "Dövr və Methodlar",
          "String və Massivlər",
          "JDK əslində nədir? Öz kitabxananızı necə düzəldə bilərsiniz?",
          "Obyekt və Class nədir?",
          "Obyektlər",
          "Sual Cavab",
          "Constructorlar",
          "Wrapper Type nədir?",
          "(Öncə buna baxın) İlk ay üçün kiçik tapşırıqlar",
          "(Sonra misalları həll edin) İlk ay üçün kiçik tapşırıqlar",
          "(Öncə özünüz etməyə çalışın) Öyrəndiklərini yoxlama üçün imtahan sualları",
          "(Sonra videoya baxın) Aylıq sualların həlləri",
          "Praktika (1-ci hissə)"
        ],
        "2-ci ay təlimi": [
          "Praktika (2-ci hissə)",
          "Inheritance və Polimorfizm (1-ci hissə)",
          "Inheritance və Polimorfizm (2-ci hissə)",
          "Inheritance və Polimorfizm (3-cü hissə)",
          "Exceptionlar (1-ci hissə)",
          "Exceptionlar (2-ci hissə)",
          "Abstraction",
          "Interface (1-ci hissə)",
          "Interface (2-ci hissə)",
          "Design Patternlər (1-ci hissə)",
          "Design Patternlər (2-ci hissə)",
          "File (1-ci hissə)",
          "File (2-ci hissə)",
          "Debug Rejimində İşləmək",
          "Praktika (1-ci hissə)",
          "Praktika (2-ci hissə)",
          "Öyrəndiklərinizi möhkəmləndirmək üçün imtahan sualları"
        ],
        "3-cü ay təlimi": [
          "Annotation (1-ci hissə)",
          "Annotation (2-ci hissə)",
          "Annotation Processor, Build Tools (Ant,Maven,Grad), Git-ə giriş",
          "Git (1-ci hissə)",
          "Git (2-ci hissə)",
          "TCP (1-ci hissə)",
          "TCP (2-ci hissə)",
          "Threadlər (1-ci hissə)",
          "Threadlər (2-ci hissə)",
          "Generics",
          "Collectionlar (1-ci hissə)",
          "Collectionlar (2-ci hissə)",
          "Collectionlar (3-cü hissə)",
          "Collectionlar (4-cü hissə)",
          "Java 8 - Streams və Lambda expressionlar",
          "Öyrəndiklərinizi möhkəmləndirmək üçün imtahan sualları"
        ],
        "4-cü ay təlimi": [
          "MySQL nədir?",
          "MySQL yüklənməsi",
          "MySQL-də querylərin yazılması",
          "MySQL-də querylərin yazılması (2-ci hissə)",
          "MySQL-in Javada istifadəsi - JDBC (1-ci hissə)",
          "MySQL-in Javada istifadəsi - JDBC (2-ci hissə)",
          "Desktop Proqramlaşdırma - Swing (1-ci hissə)",
          "Desktop Proqramlaşdırma - Swing (2-ci hissə)",
          "Öyrəndiklərinizi möhkəmləndirmək üçün imtahan sualları"
        ],
        "5-ci ay təlimi": [
          "Servlet",
          "JSP (1-ci hissə)",
          "JSP (2-ci hissə)",
          "JSP (3-cü hissə)",
          "JSP (4-cü hissə)",
          "JPA (1-ci hissə)",
          "JSP (5-ci hissə)",
          "JSP (6-cı hissə)",
          "JPA (2-ci hissə)",
          "Spring Core XML (1-ci hissə)",
          "Spring Core XML (2-ci hissə)",
          "Spring Core Annotation"
        ],
        "6-cı ay təlimi": [
          "JPA (3-cü hissə)",
          "Spring Boot Data (1-ci hissə)",
          "Spring Boot Data (2-ci hissə)",
          "Spring Boot MVC (1-ci hissə)",
          "Spring Boot MVC (2-ci hissə)",
          "Spring Boot MVC (3-cü hissə)",
          "Spring Boot Restful API (1-ci hissə)",
          "Spring Boot Restful API (2-ci hissə)",
          "Spring Boot AOP (Aspect Oriented Programming)",
          "Spring Boot OpenID",
          "Testing",
          "SOAP Servicelər",
          "Linux və Javanın Linuxda tətbiqi"
        ]
      },
      "requirements": [
        "Heç bir programlaşdırma biliyiniz olmadan başlaya bilərsiniz"
      ],
      "description": "(Mühim Qeyd: bu kurs 2019-a aid olan kursdur və bəzi mövzular köhnədir. Məsələn Netbeans istifadə edilir, Spring security köhnədir, Web-ə aid bəzi dərslərdə dəyişikliklər var və s. Bu kursun tələbələrinin dərs əsnasında verdiyi suallar və araşdırmalarımız mənim üçün 2019 kursunu əvəzedilməz edir. Lakin yeni methodika, alətlər və texnologiyalarla öyrənmək istəyirəm deyirsinizsə bu zaman 2024 kursunu satın alın, Udemy profilimə daxil olun, görəcəksiniz.\n\nMən hansını məsləhət görürəm deyirsinizsə yeniliklər və daha səliqəli methodikayla izah etdiyim üçün 2024 kursunu məsləhət görürəm. Uğurlar!\n\n\nBu kurs, qrupuma keçdiyim 6 aylıq kursun video qeydləridir. Kurs Sıfırdan Sona kimi Desktop Proqramlaşdırma və Web Proqramlaşdırma da daxil olmaqla bütün mövzuları əhatə edir. Desktop Proqramlaşdırma, Web Proqramlaşdırma üzrə real layihələr edilir, Design Patternlər, Best Practicelər keçilir, ilk 4 ay hər ayın sonunda imtahan sualları var, bu sualları cavablayaraq öyrəndiklərinizi möhkəmləndirə bilərsiniz. Sualların həllərini isə videoda izah edirəm, baxıb öz həllinizlə müqayisə edə və ya bilmədiyiniz sualın həllinə baxa bilərsiniz.\nMəqsəd sizi iş mühitinə tam hazırlamaqdır. Qrupun tələbələrinin hər biri fərqli şirkətlərdə proqramçı olaraq çalışırlar. Siz də bacara bilərsiniz. Sadəcə diqqətlə videolara baxın və suallarınız olduqca soruşun.\nKurs əhatə edir:\nOOP,\nSoftware Architecture,\nDesign Patterns,\nClean code,\nStandart Edition,\nDesktop Programlaşdırma, Enterprise Edition,\nSpring Framework,\nSpring Data,\nSpring Boot,\nSpring MVC,\nSpring Security,\nJPA,\nHibernate,\nRestful API,\nSoap API,\nMultithreading,\nTCP\nUğurlar hər birinizə!",
      "target_audience": [
        "Programlaşdırmaya və Java dilinə marağı olan hərkəs"
      ]
    },
    {
      "title": "Curso Django y Django rest framework de básico a profesional",
      "url": "https://www.udemy.com/course/curso-profesional-de-programacion-web-con-python-y-django/",
      "bio": "Curso de Django 3 y Django rest framewrok - Proyectos en cada sección",
      "objectives": [
        "Al culminar el curso, podrán ser capaces de desarrollar aplicaciones web profesionales con Django y Django Rest FRamework",
        "Bases de datos con Django",
        "Diseño de Templates HTML en Django",
        "Servicios Rest Con Django",
        "Administración de usuarios",
        "Subir tu proyecto Django a un servidor",
        "Programación y desarrollo web"
      ],
      "course_content": {},
      "requirements": [
        "Conocer Conceptos básicos de programación, y conceptos básicos de HTML.",
        "El curso empieza desde cero, pero sera mas rápido para quienes ya vengan de programar.",
        "Es importante por lo menos saber conceptos teóricos de Bases de Datos Relacionales."
      ],
      "description": "Hola, Bienvenido a este curso profesional de Django y Django rest framework. Seguro que antes de invertir en el curso necesitas saber si es este el curso que realmente deseas.\nEl curso parte desde un nivel muy básico, sin duda si eres programador te será muy sencillo comprender los conceptos, pero también si no lo eres; ya que en cada clase intentó explicar los conceptos siempre pensando en que el curso no solo lo cursarán programadores. A medida que avances cada sección del curso ni siquiera te darás cuenta en qué momento es que pasas a un nivel avanzado, ya que se diseñó el curso de una forma sencilla y práctica, para cuando hayas completado el curso o tan solo la primera mitad del curso verás que ya puedes desarrollar aplicaciones web de buen nivel por tu cuenta.\nOtra tema que deseo recalcar en esta presentación es que, cada nuevo tema no está vinculadas al desarrollo de un proyecto, es decir no será necesario que hayas completado todo un proyecto para poder probar un nuevo concepto, ya que trato de explicar cada nuevo concepto de forma independiente, si ya tenías una bases en django, puedes ir directamente a un nuevo tema y comprenderlo con facilidad, ya que no está sujeta a como se haya estado desarrollado un proyecto; esto no quiere decir que no se hará proyectos en el curso.\n\n\nEn el desarrollo del curso se aprenderán siempre nuevos temas de forma independiente a un proyecto, pero luego como parte práctica y de afianzamiento se aplicara estos nuevos conocimientos obtenidos en los proyectos del curso. El curso cuenta con dos proyectos, uno de nivel básico-intermedio y otro de nivel profesional.\n\n\nEl alcance del curso llegará hasta desarrollar servicios rest que consumiremos con vue.js debo aclarar que la parte de vue.js será bastante simple, ya que lo importante es construir los servicios con Django rest framework (DRF).\n\n\nSi lo que te interesa es saber si existe deploy(subir el proyecto a un servidor), pues si existe y será incluso desde el primer proyecto. Haremos clases donde estamos subiendo al servidor cada proyecto. Como dije antes incluso en la primera mitad del curso ya habrás visto muchos temas de Django e incluso seguro que ya te animas a desarrollar tus proyectos.\n\n\nNo se diga más y te animo a que inviertas en conocimiento y te aseguro que no te arrepentirás comprando este curso.\n\n\nNOTA: si deseas alguna clase de descuento tal vez puedas conseguirlo en siguiéndome en mis redes sociales, con frecuencia regalaré cupones y descuentos. Youtube: Neunapp",
      "target_audience": [
        "Des arrolladores de aplicaciones web",
        "Estudiantes interesados en la programación web",
        "Interesados en ser programadores Backend",
        "Estudiantes de Python"
      ]
    },
    {
      "title": "Aprenda a criar um sistema em delphi do início ao fim",
      "url": "https://www.udemy.com/course/aprenda-delphi/",
      "bio": "Você irá concluir este curso com um sistema feito em delphi e pronto para utilizar",
      "objectives": [
        "Criar um sistema de vendas básico do início ao fim"
      ],
      "course_content": {
        "Delphi básico na prática": [
          "Apresentação do curso",
          "Um requisito importante para este curso",
          "Baixando e instalando o Delphi",
          "Primeiros passos",
          "Apenas um detalhe sobre salvar preferências da IDE",
          "Entendendo os arquivos gerados pelo Delphi",
          "Entendendo o projeto criado em Delphi",
          "Entendendo conceitos de componentes",
          "Baixando e instalando o Firebird",
          "Ajuda com o download do IBExpert",
          "Instalando IBExpert, configurando e criando tabelas",
          "Criando tabelas e conhecendo a linguagem SQL",
          "Conectando Firebird utilizando o FireDac",
          "Criando projeto inicial",
          "Criando projeto inicial - Continuação",
          "Criando projeto inicial - Continuação",
          "Criando projeto inicial - Continuação",
          "Arquivo de inicialização",
          "Arquivo de inicialização - Continuação",
          "Arquivo de inicialização - Continuação",
          "Arquivo de inicialização - Continuação",
          "Arquivo de inicialização - Continuação",
          "Arquivo de inicialização - Continuação",
          "Configurando o banco pelo sistema, usando biblioteca e arquivo INI",
          "Configurando o banco pelo sistema, usando biblioteca e arquivo INI - Continuação",
          "ATENÇÃO! OBSERVAÇÕES SOBRE A AULA A SEGUIR",
          "Configurando o banco pelo sistema, usando biblioteca e arquivo INI - Continuação",
          "Herança de telas",
          "Herança de telas - Continuação",
          "Herança de telas - Continuação",
          "Criando cadastro de clientes e trabalhando com FDQuery",
          "Criando cadastro de clientes e trabalhando com FDQuery - Continuação",
          "Criando cadastro de clientes e trabalhando com FDQuery - Continuação",
          "Criando novas telas com herança e entendendo FK",
          "Criando novas telas com herança e entendendo FK - Continuação",
          "Criando novas telas com herança e entendendo FK - Continuação",
          "Instalando componentes",
          "CORREÇÃO DO LINK PARA DOWNLOAD DO COMPONENTE TMS TRIAL (ABRA O PDF)",
          "Baixando e instalando componente TMS para menu do sistema",
          "AdvToolBarPager do TMS",
          "Filtro pai e criação de telas em tempo de execução",
          "Criando formulário de cliente usando herança e filtro SQL",
          "Criando formulário de cliente usando herança e filtro SQL - Continuação",
          "Criando formulário de cliente usando herança e filtro SQL - Continuação",
          "Melhorando filtro de clientes",
          "Melhorando filtro de clientes - Continuação",
          "Melhorando filtro de clientes - Continuação",
          "Criando o cadastro de fornecedor usando herança",
          "Filtro de fornecedores usando herança de formulários",
          "Criando cadastro de produtos + LEFT JOIN para produtos e fornecedores",
          "Criando cadastro de produtos + LEFT JOIN para produtos e fornecedores - Continua",
          "Criando cadastro de produtos + LEFT JOIN para produtos e fornecedores - Continua",
          "Cadastro de produtos",
          "Cadastro de produtos - Continuação",
          "Cadastro de produtos - Continuação",
          "Criando tela de vendas",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando tela de vendas - Continuação",
          "Criando metodos para abrir telas",
          "Instalando Fast Report e criando relatório de Venda",
          "Criando relatório de Venda - Continuação",
          "Criando relatório de Venda - Continuação",
          "Variavel [Cliente] do relatorio de vendas",
          "Criando Filtro de Vendas com SQL e Herança de Form",
          "Criando Filtro de Vendas com SQL e Herança de Form - Continuação",
          "Criando Filtro de Vendas com SQL e Herança de Form - Continuação",
          "Relatório mestre detalhe em Fast Report para pedido de venda",
          "Relatório mestre detalhe em Fast Report para pedido de venda - Continuação",
          "Relatório mestre detalhe em Fast Report para pedido de venda - Continuação",
          "Manutenção avançada usando herança e nova navegação dos dados",
          "Manutenção avançada usando herança e nova navegação dos dados - Continuação",
          "Manutenção avançada usando herança e nova navegação dos dados - Continuação",
          "Manutenção avançada usando herança e nova navegação dos dados - Continuação",
          "Manutenção avançada usando herança e nova navegação dos dados - Continuação",
          "Manutenção avançada usando herança e nova navegação dos dados - Continuação",
          "Manutenção avançada usando herança e nova navegação dos dados - Continuação",
          "Criando tabela de usuário para acesso restrito ao sistema",
          "Criando tela de filtro de usuário",
          "Criando cadastro de usuário",
          "Criando cadastro de usuário - Continuação",
          "Criando cadastro de usuário - Continuação",
          "Criando campo DT_EXCLUIDO em todas as tabelas",
          "Finalizando com a tela de login",
          "Finalizando com a tela de login - Conclusão"
        ],
        "Testes e alguns ajustes no software": [
          "Alguns ajustes e correções",
          "Personalizando as mensagens do software"
        ],
        "Instalação em REDE - Client/Server": [
          "Preparando o software",
          "Preparando o software - continuação",
          "Preparando o software - continuação",
          "Configurações Client/Server",
          "Configurações Client/Server",
          "Finalizando instalação em rede",
          "Finalizando instalação em rede - Continuação",
          "Finalizando instalação em rede - Conclusão"
        ]
      },
      "requirements": [
        "Ter noções básicas de logica de programação ou já programar em outra linguagem será um diferencial"
      ],
      "description": "O que o aluno irá aprender?\nNeste curso você irá aprender a criar um projeto do zero em Delphi, utilizando conexão com banco de dados Firebird através do componente FireDac que já vem com o Delphi, utilizando componentes de terceiros, fazendo inclusive relatórios dinâmicos para o seu projeto.\n\n\nAprenda de forma fácil, com uma didática totalmente diferente, colocando em prática os conhecimentos adquiridos no curso.\n\n\nEste curso te prepara para o mercado de trabalho como programador em Delphi.\n\n\nVeja alguns dos depoimentos dos meus videos postados no Youtube sobre este curso:\nJosué agradeço muito suas aulas, estou estagiando em uma empresa e seus videos ajudaram muito.\n\n\nPARABÉNS!!! Que maneira de ensinar excelente\n\n\nExcelente... Sensacional... Parabéns e muito obrigado pela ajuda. Grande profissional.  Abraço.\n\n\nAprendo muito com suas aulas de Delphi, bastante detalhadas valeuuu\n\n\nSuas aulas estão dentro do padrão de um sistema q estou tentando desenvolver há muito tempo usando o DELPHI 7...\n\n\nO curso está excelente!! Muito obrigado mesmo...\n\n\nMuito bem explicado. Boa didática.\n\n\nAprendo muito com suas aulas de Delphi, bastante detalhadas valeuuu\n\n\nBom dia Josué, funcionou perfeitamente, parabéns.\n\n\nvc vale ouro meu amigo,,, parabéns pela inteligencia e sua simplicidade para ensinar! Deus te Abençoe!\n\n\nExcelente didática. Parabéns\n\n\nexcelente conteúdo sua didática é fantástica!!! Parabéns!!!\n\n\nSHOW ME AJUDOU MUITO PARABENS\n\n\nMeu amigo, você é muito bom. Sua simplicidade e conhecimento impressiona mesmo. Agradeço muito seu trabalho em postar os vídeos nos ensinando e dando dicas. Deus o abençoe sempre.\n\n\nÓtima forma de ensinar, parabéns.\n\n\nVo  dar like em todos os videos esse cara merece as aulas tão ótimas\n\n\nMeus parabéns por suas aulas Josué!\n\n\nExcelente! Obrigado! Ajudou muito!\n\n\nValeu meu amigo, muito obrigado e parabéns pela iniciativa\n\n\nMuito bom .. Meu ajutou muito\n\n\ncomo gosto de suas aulas, sempre venho aqui revisar para mim que estou aprendendo muito bom, espero mais videos, rs.\n\n\nMuito boa suas video aulas , vc está de parabéns\n\n\nE por aí vai... Apenas copiei e colei aqui pra vocês.\n\n\nNão consigo postar todas aqui porque são muitas rs.\n\n\nEspero que você também se beneficie com este conteúdo.\n\n\nHá! Pode contar comigo quando precisar de ajuda com o conteúdo blz.",
      "target_audience": [
        "Desenvolvedores iniciantes em Delphi ou de outras linguagens",
        "Curiosos sobre programação"
      ]
    },
    {
      "title": "Spring Boot从入门到高级实战课程",
      "url": "https://www.udemy.com/course/spring-boot-u/",
      "bio": "Spring Boot框架入门、Spring Boot框架进阶、Spring Boot框架之JPA的实战课程",
      "objectives": [
        "学会从零构建基于 Spring Boot 的开发框架",
        "学会使用 Spring Boot 框架开发web应用的必备套路",
        "学会在 Spring Boot 框架中使用jpa进行数据操作",
        "学会在 Spring Boot 框架中使用 tymleaf 模板渲染数据",
        "学会 Spring Boot 框架中日志、异常等框架级别设置"
      ],
      "course_content": {
        "一、Spring Boot实战入门": [
          "【第01节】课程介绍",
          "【第02节】快速开始-spring boot介绍",
          "【第03节】快速开始-IDEA工具的下载",
          "【第04节】快速开始-srping boot项目构建和启动",
          "【第05节】快速开始-hello world",
          "【第06节】URL路由-RESTful URL",
          "【第07节】URL路由-注解",
          "【第08节】参数处理-pathvariable",
          "【第09节】参数处理-RequestParam",
          "【第10节】自定义配置-配置文件",
          "【第11节】自定义配置-自定义属性配置",
          "【第12节】自定义配置-多环境配置",
          "【第13节】jpa-配置",
          "【第14节】jpa-基本操作",
          "【第15节】jpa-复杂查询",
          "【第16节】jpa-自定义查询",
          "【第17节】jpa-自定义更新",
          "【第18节】jpa-事务",
          "【第19节】thymeleaf-使用thymeleaf3",
          "【第20节】thymeleaf-取值",
          "【第21节】thymeleaf-静态资源处理",
          "【第22节】thymeleaf-判断",
          "【第23节】thymeleaf-迭代",
          "【第24节】thymeleaf-URL",
          "【第25节】表单处理-post请求与redirect",
          "【第26节】表单处理-表单初始化数据",
          "【第27节】表单处理-flash attribute",
          "【第28节】分页处理-分页查询方法",
          "【第29节】分页处理-controller分页查询",
          "【第30节】分页处理-自定绑定page参数",
          "【第31节】开发者工具-自动重启和自动刷新"
        ],
        "二、Spring Boot实战进阶": [
          "【第01节】表单验证-实例构建",
          "【第02节】表单验证-数据传输",
          "【第03节】表单验证-数据验证",
          "【第04节】表单验证-错误处理",
          "【第05节】异常处理-定义错误页面",
          "【第06节】异常处理-使用HTTP状态码",
          "【第07节】异常处理-在Controller处理异常",
          "第08节】异常处理-全局统一异常处理",
          "【第09节】异常处理-REST服务实例（1）",
          "【第10节】异常处理-REST服务实例（2）",
          "【第11节】异常处理-验证请求数据",
          "【第12节】异常处理-REST统一异常处理",
          "【第13节】日志和AOP-控制台输出",
          "【第14节】日志和AOP-日志级别配置",
          "【第15节】日志和AOP-文件输出日志",
          "【第16节】日志和AOP-自定义配置日志（1）",
          "【第17节】日志和AOP-自定义配置日志（2）",
          "【第18节】日志和AOP-自定义配置日志（3）",
          "【第19节】日志和AOP-AOP简单使用",
          "【第20节】日志和AOP-AOP统一记录日志",
          "【第21节】拦截器-拦截器介绍",
          "【第22节】拦截器-登录实例"
        ],
        "三、Spring Boot 之 JPA 实战": [
          "【第01节】Spring Boot和JPA",
          "【第02节】JPA的基本使用步骤（1）",
          "【第03节】JPA的基本使用步骤（2）",
          "【第04节】定义实体类",
          "【第05节】Repository接口",
          "【第06节】方法名创建查询",
          "【第07节】JPQL语句",
          "【第08节】分页与排序和事务处理",
          "【第09节】实体一对一关系",
          "【第10节】一对多和多对一实体关系（1）",
          "【第11节】一对多和多对一实体关系（2）",
          "【第12节】多对多实体关系（1）",
          "【第13节】多对多实体关系（2）"
        ],
        "配套资料下载": [
          "课程配套源码下载"
        ]
      },
      "requirements": [
        "您应该具备 Java 基础知识",
        "您应该具备HTML和CSS的初步基础"
      ],
      "description": "课程从实战使用的角度开始讲解Spring Boot框架入门使用套路、Spring Boot框架进阶设置与封装的套路、Spring Boot框架中使用JPA的套路。\nSpring Boot入门部分：教你从零开始入门Spring Boot框架，get到Spring Boot开发web应用的必备技巧。\nSpring Boot进阶部分：教你封装和配置Spring Boot的框架的常用模块，构建更健壮的Spring Boot开发框架。\nSpring Boot之JPA部分：教你在 Spring Boot框架中处理各种实体对象关系，轻松应对实战中的各种数据对象关系。",
      "target_audience": [
        "学习使用 Java Spring Boot 框架的任何人"
      ]
    },
    {
      "title": "一週間で身につくC#言語",
      "url": "https://www.udemy.com/course/c-nmavhi/",
      "bio": "Unity・ASP.ENT・Windowsアプリ開発のために必要な基礎プログラミングスキルを身に着けるコース",
      "objectives": [
        "C#言語でのプログラミング能力",
        "オブジェクト指向の考え方",
        "Unityでのゲーム開発やWebアプリなどに必要なプログラミングの基礎力",
        "Windowsネイティブアプリを作る際に必要となる基礎プログラミング能力",
        "豊富な練習問題を通してのプログラミングスキル"
      ],
      "course_content": {
        "０日目（C#とは）": [
          "プログラミング言語とは何か",
          "C#言語とはどんな言語か",
          "VisualStudioのダウンロードから起動まで"
        ],
        "1日目（はじめの一歩）": [
          "HelloWorld",
          "様々なコンソールへの出力処理",
          "エラーの処理方法",
          "基本編１日目まとめ",
          "例題①",
          "例題②",
          "例題③"
        ],
        "基本編２日目（演算と変数）": [
          "C#での演算処理",
          "変数",
          "代入演算子",
          "キャストとデータの型変換",
          "文字列の変数",
          "定数",
          "基本編２日目まとめ（前半）",
          "基本編２日目まとめ（後半）",
          "例題①",
          "例題②",
          "例題③"
        ],
        "基本編３日目（条件分岐）": [
          "if文",
          "if～else文",
          "else if",
          "複雑なif文",
          "switch文",
          "複数の条件のcase",
          "基本編３日目まとめ（前半）",
          "基本編３日目まとめ（後半）",
          "例題①",
          "例題②",
          "例題③"
        ],
        "基本編４日目（繰り返し処理）": [
          "for文",
          "forの二重ループ",
          "while文",
          "do～while",
          "do～whileとwhileの違い",
          "無限ループ",
          "基本編４日目まとめ",
          "補足",
          "例題①",
          "例題②",
          "例題③"
        ],
        "基本編５日目（配列変数）": [
          "配列変数①",
          "配列変数②",
          "配列の初期化",
          "foreachループ",
          "多次元配列",
          "ジャグ配列",
          "基本編5日目まとめ",
          "例題①",
          "例題②",
          "例題③",
          "例題④"
        ],
        "基本編６日目（クラスとオブジェクト）": [
          "オブジェクト指向とは何か",
          "クラスとオブジェクト",
          "オーバーロード",
          "基本編6日目復習",
          "例題"
        ],
        "基本編7日目（アクセス指定子とプロパティ）": [
          "アクセス指定子とプロパティ",
          "読み込み専門・書き込み専門のプロパティ",
          "自動実装プロパティ",
          "基本編7日目復習",
          "例題"
        ],
        "応用編1日目（コンストラクタほか）": [
          "コンストラクタ",
          "ガーベージコレクション",
          "デストラクタ",
          "応用編１日目復習",
          "応用編１日目例題"
        ],
        "応用編２日目（静的メンバ）": [
          "静的メンバ",
          "Mainメソッド",
          "応用編２日目復習",
          "応用編２日目例題①",
          "応用編２日目例題②",
          "応用編２日目例題③"
        ]
      },
      "requirements": [
        "最低限のコンピュータの操作スキルと知識",
        "インターネットへの接続環境をもつパソコン"
      ],
      "description": "① コースの概要\n\nC#言語はWindowsアプリ、Webアプリの開発やゲームエンジンUnityとセットで用いることによりゲーム開発でもたいへんよく使用されているプログラミング言語です。\nそのほかにも、Android,iPhoneといったスマートフォン・タブレットのアプリケーションを開発できたり、\n近年ではIoTやクラウドコンピューティングの分野で大変注目を浴びています。\nC#を学ぶメリットは、これらのアプリなどが開発できることばかりではありません。\nスタンダードな言語仕様と汎用性の高い文法を持つことから、C#言語さえしっかりマスターすれば、\nここから更にJavaやRubyなど他の言語を学ぶのが大変楽になります。\n\n\nこのコースを学ぶと、単なるC#言語の文法のみならずサンプルや練習問題を通して、\n応用範囲の広いプログラミングの基礎体力も身につけることが出来ます。\nそのため実用目的だけではなくプログラミング教育の参考資料としても最適です。\n\n\n② 目標\n最初に説明したように、このコースは初心者プログラマーを対象としたコースです。具体的には以下のような方が対象です。\nプログラミング学習を始めた大学生および大学院生\nゲーム・情報系の専門学校の学生\n他の様々な学校の学生\nプログラミング教育に備える必要がある小学校から高校までの教員\n今からプログラミングを始める新しい新入社員\nWindows上で利用可能なWindowsアプリを開発したいプログラマー\nUnityでゲームを開発したいゲーム開発者\nAndroid・iPhoneでスマートフォンアプリを開発したいプログラマー\nASP.NETといったWebフレームワークでの開発をするためにC#言語を学びたいと思っているプログラマー\nかつてC#言語を学んだこともありますが、挫折した経験のある人\n\n\n③ 内容\nコンテンツは、以下の内容で構成されています。\n講義映像\nソースコード\n練習問題と回答\n開発環境として統合開発環境であるVisualStudioをWindows上で使用すると想定されています。\nVisalStudioはインターネットで無料で入手できます。(VisaulStudioはMac OS上でも利用可能です。)\nただし、このコースで導入されたC#言語のソースコードはMac OS、Linuxでも使用できます。\n他の環境で勉強している人は、各自自分の環境に対応させて学習を進めてください。",
      "target_audience": [
        "これからプログラミングを始めてみたい学生・社会人",
        "C#言語に興味があり、始めてみたいプログラミング初心者",
        "他のプログラミング言語をすでに学んでおりC#言語に興味がある",
        "AndroidやiPhoneなどのスマートフォンのソフトウェアを開発するためにC#のプログラミングをマスターしたいプログラマー",
        "ASPなどといったWebフレームワークでアプリを作るためにC#言語を学びたいプログラマー",
        "Unityでゲームを開発したいゲーム開発者",
        "Windowsアプリの開発を目指しているがC#言語の知識がないプログラマー",
        "一度C#言語を学んだことがあるが挫折したことがある人",
        "プログラミング教育のためにプログラミングを身に着けてみたい小学校・中学校などの教員"
      ]
    },
    {
      "title": ".NET Core 3.0 & C# 7 Backend Frontend Geliştirici Kursu - 2",
      "url": "https://www.udemy.com/course/net-core-c-sharp-kursu-2/",
      "bio": "Kurumsal mimaride etkin bir backend geliştirici olacağınız serinin 2. bölümü. C# 7 , AOP, Validation, Cache, Transaction",
      "objectives": [
        "Kurumsal mimari altyapısını öğreneceksiniz.",
        "AOP ve Cross Cutting Altyapılarını Anlayacaksınız",
        "Validation Kuralları yazacaksınız",
        "Fluent Validation İmplementasyonu Yapacaksınız",
        "Dynamic Proxy İle Çalışacaksınız",
        "Interceptor İmplementasyonu yapacaksınız",
        "AOP - Validation yazabileceksiniz.",
        "AOP - Transaction yazabileceksiniz.",
        "AOP - Caching yazabileceksiniz.",
        "Service Collection Extension yazabileceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Validation AOP Cross Cutting Concerns Kavramlarını Doğru Anlamak": [
          "Validation AOP Cross Cutting Concerns Kavramlarını Doğru Anlamak",
          "Değerlendirmeler Hakkında"
        ],
        "Fluent Validation İle Çalışmak": [
          "Fluent Validation Kuralları Yazmak",
          "Validation Tool Yazmak ve Refactoring"
        ],
        "Interception Altyapısının Kurulması": [
          "Method Interception Altyapısının Kurulması",
          "Validation Aspectinin Yazılması",
          "Dynamic Proxy Configurasyonu",
          "Aspect Interceptor Selector Yazılması",
          "Validation Testinin Yapılması"
        ],
        "AOP -Transaction": [
          "Transaction Scope Aspect Yazılması",
          "TransactionScopeAspect Testi"
        ],
        "ServiceCollection Extension Çalışmaları": [
          "ServiceTool Yazmak",
          "Framework Seviyesinde Core Module Yazmak",
          "Core Module İmplementasyonu",
          "Service Collection Extension Yazmak",
          "Extension İmplementasyonu"
        ],
        "AOP-Caching": [
          "ICacheManager İnterface Yazımı",
          "MemoryCache İmplementasyonu",
          "RemoveByPattern İmplementasyonu",
          "CacheInterceptionAspect Yazmak",
          "CacheAspectinin Test Edilmesi",
          "CacheRemoveAspect Yazılması ve Test Edilmesi"
        ],
        "Bonus": [
          "Bonus Ders"
        ]
      },
      "requirements": [
        "Temel C# ve teknolojileri bilgisi"
      ],
      "description": "Bu seri daha önce klasik .NET Framework ile yayınladığım \"C# ile Backend Geliştirici Olun\" serisinin .NET Core ile yazılmış ve geliştirilmiş versiyonudur.\n.NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır.\nBu kursta kullanılan mimari eğitim ve danışmanlık yaptığım 300+ kurumda veya firmada kullandırdığım şekliyle birebir yansıtılmıştır. Sektörün önde gelen bir çok firmasında da kullanılmaktadır. Profilimden bu firmaların bazılarını inceleyebilirsiniz.\nSerinin ikinci bölümünü keyifle hazırladım.\nAOP ve Cross Cutting Altyapılarını Anlamak\nValidation Kuralları yazmak\nFluent Validation İmplementasyonu\nDynamic Proxy İle Çalışmak\nInterceptor İmplementasyonu\nAOP - Validation\nAOP - Transaction\nAOP - Caching\nService Collection Extension yazmak\nve daha fazlası...\nBu seri daha önce klasik .NET Framework ile yayınladığım \"C# ile Backend Geliştirici Olun\" serisinin .NET Core ile yazılmış ve geliştirilmiş versiyonudur.\n.NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır.\nBu kursta kullanılan mimari eğitim ve danışmanlık yaptığım 300+ kurumda veya firmada kullandırdığım şekliyle birebir yansıtılmıştır. Sektörün önde gelen bir çok firmasında da kullanılmaktadır. Profilimden bu firmaların bazılarını inceleyebilirsiniz.\nEğer kurumsal bir kariyer hedefiniz varsa, bu kurs sizin için başladığınız gibi heyecanla bitireceğiniz bir kurs olacaktır. Şimdiden başarılar dilerim.",
      "target_audience": [
        ".NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır."
      ]
    },
    {
      "title": "Python ile Programlama Kampı | 2025",
      "url": "https://www.udemy.com/course/python-ile-sifirdan-ileri-seviye-programlama/",
      "bio": "Zengin eğitim içeriğinin yanında etkili güncel örnekler ve quizlerle python'ı bütünlemesine öğrenin!",
      "objectives": [
        "Hiçbir programlama bilgisine sahip olmasanız dahi bu kursa rahatlıkla başlayabileceksiniz.",
        "Python ile programlamanın ve algoritmanın temellerini en iyi şekilde öğrenmiş olacaksınız.",
        "Programlamanın iskeleti olan konuları öğrenerek programlamanın en önemli temelini atmış olacaksınız",
        "Nesne Tabanlı Programlamayı öğrenerek bunu hem Python hem de diğer programlama dillerinde rahatlıkla kullanabileceksiniz."
      ],
      "course_content": {
        "Kursa Giriş": [
          "Giriş",
          "Kurstan En İyi Şekilde Nasıl Yararlanılır"
        ],
        "Kurulumlar (Windows)": [
          "Anaconda Yüklemek (Windows)",
          "Anaconda Yüklemek (MacOS)",
          "Jupyter NoteBook'u Tanıyalım"
        ],
        "Değişkenler": [
          "Değişkenler",
          "Değişken Oluşturma Kuralları"
        ],
        "Veri Türleri": [
          "Numaralar",
          "Int & Float",
          "Sayısal Operatörler",
          "Strings",
          "String Metodları"
        ],
        "Indexler ve Koleksiyonlar": [
          "Index Nedir?",
          "Slicing Nedir?"
        ],
        "Listeler": [
          "Liste Nedir?",
          "Liste Metodları",
          "Veri Tipleri Dönüştürme",
          "Listelerde İleri Seviye"
        ],
        "Sözlükler": [
          "Sözlük Nedir?",
          "Sözlüklerde İleri Seviye",
          "Sets",
          "Tuples",
          "Boolean Veri"
        ],
        "Kontroller ve Döngülere Giriş": [
          "Karşılaştırma Operatörleri",
          "If Kontrolleri",
          "If - Elif - Else",
          "Döngülere Giriş",
          "For Döngüsü",
          "Continue - Break - Pass"
        ],
        "Döngüler": [
          "While Döngüsü",
          "Range Metodu",
          "Enumerate Metodu",
          "Random",
          "Zip Metodu",
          "List Comprehension"
        ],
        "Fonksiyonlar": [
          "Fonksiyon Tanımlama",
          "Fonksiyonlarda Parametre Girişi",
          "Fonksiyonlarda Varsayılan Parametre",
          "Fonksiyonlarda Return",
          "Args & Kwargs",
          "Map Fonksiyonu",
          "Filter Fonksiyonu",
          "Lambda Fonksiyonu",
          "Fonksiyonlarda Kapsam (Scope)"
        ]
      },
      "requirements": [
        "Kursiyerlerin temel bilgisayar kullanma bilgisine sahip olmaları yeterlidir.",
        "Öğrencilerin programlama ve algoritma bilgisine sahip olmaları gerekli değildir."
      ],
      "description": "Kursumuzda Python programlamayı baştan sona sıfırdan öğreneceğimiz için herhangi bir programlama bilgisine gerek yoktur. Python'ın günden güne popülerliğini artırdığı ve daha da artıracağı tartışılmaz bir gerçektir. Bu nedenle bu kursun önemi oldukça fazladır.\nBu kursun sonunda programlamaya ve Python'a güzel bir başlangıç yapmakla kalmayıp kendinizi uzman seviyesinde bulacaksınız. Tüm bu söylemlerin sizi heyecanlandırdığına eminim. O nedenle haydi gelin kursumuza başlayalım.\n\n\n- Bu kursla sıfırdan ileri seviyeye Python ve Programlama öğrenmenin tadını çıkaracaksınız.\n- Bu kursu alanında profesyonel, pedagojik formasyon eğitimi almış, 2007 yılından beri binlerce öğrenciye yüz yüze eğitim vermiş bir eğitimciden alacağınızı unutmayın.\n\n\nGereksinimler\nBu kurs için herhangi bir programlama ve algoritma bilgisine sahip olmanıza gerek yoktur.\nİnternete bağlı olan ve ortalama bir performans gösteren bir bilgisayar yeterlidir.\n\n\nKursun İşleyişi:\nKonu anlatımları esnasında özenle seçilmiş uygulama örnekleriyle konuları rahatlıkla öğrenebileceksiniz.\nÜnite sonlarındaki örnek proje uygulamaları ile öğrenmelerinizi kalıcı hale getireceksiniz.\nKursun zengin konu anlatımı, gerçek hayattan seçilmiş örnekleri ile konuları rahatlıkla anlayabileceksiniz.\nKursta bulunan quizlerle konuların ardından öğrendiklerinizi pekiştirebileceksiniz.\n\n\n\n\nGereksinimler\nBu kurs için herhangi bir programlama ve algoritma bilgisine sahip olmanıza gerek yoktur.\nİnternete bağlı olan ve ortalama bir performans gösteren bir bilgisayar yeterlidir.\nKursun İşleyişi:\nKonu anlatımları esnasında özenle seçilmiş uygulama örnekleriyle konuları rahatlıkla öğrenebileceksiniz.\nÜnite sonlarındaki örnek proje uygulamaları ile öğrenmelerinizi kalıcı hale getireceksiniz.\nKursun zengin konu anlatımı, gerçek hayattan seçilmiş örnekleri ile konuları rahatlıkla anlayabileceksiniz.\nKursta bulunan quizlerle konuların ardından öğrendiklerinizi pekiştirebileceksiniz.",
      "target_audience": [
        "Programlamaya henüz başlayamamış olan, sıfırdan programlama öğrenmek isteyenler",
        "Programlamaya giriş yapmış ama kendini daha da geliştirmek isteyenler",
        "Başka bir programlama dilini öğrenmiş ya da yarıda bırakıp Python öğrenmek isteyenler"
      ]
    },
    {
      "title": "Dominando TypeScript",
      "url": "https://www.udemy.com/course/curso-online-typescript/",
      "bio": "Domine o Type Script e leve seu JavaScript a um outro nível, aprenda TypeScript e utilize os principais Frameworks JS",
      "objectives": [
        "Entenda o que é o TypeScript e como usá-lo no dia a dia",
        "Escrever código JavaScript utilizando o Superset TypeScript, escrevendo numa linguagem fortemente tipada e estará preparado para aprender Angular 2",
        "Conheça as boas práticas de programação ao utilizar TypeScript"
      ],
      "course_content": {
        "Introdução": [
          "Boas Vindas",
          "O que você vai aprender neste curso, e o que não vai",
          "A História do TypeScript"
        ],
        "Configurando Ambiente": [
          "Instalando o Visual Studio Code",
          "Conhecendo extensões úteis do Visual Studio Code",
          "Instalando o Node.js",
          "Instalando o Git",
          "Instalando o TypeScript e criando primeiro código",
          "Compilando o TypeScript para Versões Diferentes do EcmaScript",
          "Entendendo o compilador TypeScript"
        ],
        "Conhecendo os Tipos": [
          "Conhecendo os Tipos do TypeScript",
          "Dedução de Tipo (Type Inference)",
          "String",
          "Number",
          "Union Types",
          "Boolean",
          "Array",
          "Tuple",
          "Object",
          "Enum",
          "Null and Undefined",
          "Any",
          "Unknown",
          "Void",
          "Never",
          "Afirmações de Tipos"
        ],
        "Funções com TypeScript": [
          "Tipagem nos parâmetros e retorno de funções",
          "Parâmetros com valor padrão ou opcional",
          "Rest Parameters"
        ],
        "Interfaces": [
          "O que é uma interface e como criá-la",
          "Propriedades opcionais",
          "Propriedades readonly",
          "Funções em interfaces",
          "Arrays em interfaces",
          "Estendendo interfaces"
        ],
        "Orientação a Objetos": [
          "O que é a POO (Programação Orientada a Objetos)",
          "Criando primeira classe",
          "Criando métodos",
          "Herança",
          "Encapsulamento - public",
          "Encapsulamento - protected",
          "Encapsulamento - private",
          "Encapsulamento - Private no TypeScript x ECMAScript",
          "Private x Readonly",
          "Simplificando método construtor",
          "Métodos getters e setters",
          "Propriedades e métodos estáticos",
          "Polimorfismo",
          "Classes abstratas",
          "Implementando interface em uma classe"
        ],
        "Módulos": [
          "O que é um módulo",
          "Exportando e importando módulos",
          "Realizando export com valor padrão (export default)"
        ],
        "Namespaces": [
          "O que é namespace",
          "Criando namespaces"
        ],
        "Mixins": [
          "Criando um mixin"
        ],
        "Generics": [
          "O que são Generics",
          "Tipos Genéricos",
          "Interfaces Genéricas",
          "Classes Genéricas",
          "Restrições Genéricas"
        ]
      },
      "requirements": [
        "Ter realizado nosso Curso Completo de JavaScript ou ter conhecimentos equivalentes."
      ],
      "description": "Junte o melhor de uma linguagem fortemente tipada e orientada a objetos, com o poder do JavaScript e você terá um Superset, ou seja uma forma robusta e moderna de escrever scripts JavaScript no padrão que mais conhecemos na maioria das linguagens de programação.\nAprenda a escrever JavaScript de uma maneira polida e tipada com o poderoso TypeScript criado pela Microsoft que permite utilizar um padrão para construir seus códigos.\nAngular, React e VueJS utilizam o TypeScript, bem como o NodeJS, assim aumente seu conhecimento nesta que é sem dúvida uma ferramenta indispensável para o desenvolvedor web profissional.\nSeja bem vindo ao curso de TypeScript da Hcode em Português. Neste curso abordaremos desde o início, instalando, configurando o ambiente até a criação de exemplos e dicas que aplicam o TypeScript de uma forma prática para você usar no dia a dia.\nEleve o seu nível como desenvolvedor, e esteja preparado para os novos desafios do mercado. Aprenda hoje mesmo TypeScript e torne-se um profissional especializado nesta que é uma das mais modernas tecnologias da Web.\nNeste curso usaremos o TypeScript e mostraremos o que há de mais novo, indo a fundo nos conceitos da linguagem e mostrando como você pode usar:\nTipos Básicos\nTipos Avançados\nFunções\ne mais...\nE lembre-se que esse curso é base para aprender a utilizar melhor os principais frameworks JavaScript do Mercado!",
      "target_audience": [
        "Quem já aprendeu JavaScript e deseja continuar aprimorando seus conhecimentos nesta área.",
        "Desenvolvedores Web, Desenvolvedores em Angular que desejam migrar para Angular 2+, Entusiasta de Tecnologias Web, Estudantes de cursos de Tecnologia da Informação que desejam se tornar desenvolvedores.",
        "Quem deseja trabalhar com React, NodeJS, VueJS, Angular, DenoJS ou outros frameworks que utilizam TypeScript."
      ]
    },
    {
      "title": "Data Science: Analiza danych w Python i PANDAS",
      "url": "https://www.udemy.com/course/analiza-danych-w-python-i-pandas/",
      "bio": "Otwórz sobie drzwi do Data Science! Przenieś się na wyższy poziom i pracuj jak profesjonalny analityk danych!",
      "objectives": [
        "Samodzielnie zainstalujesz Anacode i Jupyter Notebook",
        "Dasz radę rozwiązywać problemy dot. instalacji np. za pomocą linii komend i conda",
        "Dowiesz się czym jest PANDAS",
        "Będziesz bardzo dobrze znać obiekty PANDAS takie jak: Data Series, Data Frame",
        "Będziesz umieć pracować z danymi i wykonywać na nich najważniejsze operacje",
        "Będziesz importować i eksportować dane - również do EXCELA",
        "Będziesz prezentować dane na wykresach",
        "Dane będziesz indeksować, filtrować, wybierać, modyfikować...",
        "Zbudujesz grupowania, agregacje i tabele przestawne",
        "Będziesz przekształcać dane, modyfikować zawartość całych kolumn, będziesz łączyć dane z wielu kolumn"
      ],
      "course_content": {},
      "requirements": [
        "Podstawowa znajomość Python (zobacz kurs \"Python dla początkujących\")",
        "Doświadczenie w analizie danych w innym narzędziu np. Excel lub Google Sheets",
        "Komputer z zainstalowanym środowiskiem (kurs zawiera opis instalacji na Windows)",
        "Chęć wkroczenia w świat Data Science!",
        "Znajomość baz danych - mile widziana, ale niekonieczna"
      ],
      "description": "Ten kurs wchodzi w skład serii kursów o Pythonie. Wybierz właściwy, zależnie od stopnia znajomości Pythona i zainteresowań.\nDlaczego ten kurs?\nBo podstawą do stosowania Pythona w Data Science jest właśnie moduł PANDAS. W pierwszym lepszym przykładzie Machine Learning znajdziesz obiekty, które są omawiane tu na tym kursie\nBo dane, które wczytujesz i chcesz analizować trzeba najpierw oczyścić i przetworzyć i  w tym również wykorzystuje się PANDAS\nBo każda lekcja ma quiz i praktyczne zadania do samodzielnego rozwiązania - zdaniem autora samo patrzenie nie wystarcza żeby się nauczyć - praktyka jest konieczna\nBo kurs jest dość szczegółowy - ma ponad 13 godzin nagrań a i tak porusza tylko te najważniejsze aspekty pracy z danymi\nBo do kursu masz dołączone materiały do wykonywania ćwiczeń - specjalnie dobrane zbiory pozwalają praktycznie stosować możliwości poznawanych poleceń\nBo tylko na takim praktycznym kursie masz szansę rzeczywiście czegoś się nauczyć - a sądzę, że to właśnie Twój cel!\nNaukę możesz kontynuować na innych kursach tego samego autora\nTo nie jest kurs dla zupełnie początkujących. Wśród wymogów znajdziesz przynajmniej podstawową znajomość Pythona oraz chociaż ogólną wiedzę o analizie danych. Ale bez obaw!\nJeśli chodzi o wiedzę z zakresu programowania w Pythonie – możesz ją zdobyć na kursie „Python dla początkujących”. Jeśli już używasz Pythona, możesz przejrzeć sam spis treści tego kursu i zweryfikować, czy znasz te tematy.\nJeśli chodzi o podstawową znajomość analizy danych, mam na myśli typowe czynności, jakie wykonujemy np. w Excelu. Tam też dane się importuje, przetwarza i analizuje. W tym kursie generalnie robimy to samo, ale w zupełnie inny sposób. Dlatego znajomość np. Excela będzie bardzo mile widziana.\nPo tym kursie możesz kontynuować naukę na kursie tego samego autora \"Python dla średnio zaawansowanych\"\nKurs dość dokładnie omawia wszystkie tematy i właściwie nie ma w nim teorii. Praktycznie tylko video, quizy i zadania do samodzielnego rozwiązania.\nKurs jest dość intensywny. Każde nagranie skupia się na innym temacie i nie tracimy czasu. Główna zaleta kursu online jest taka, że jeśli chcesz aby Ci coś powtórzyć, to nie musisz o to specjalnie prosić… wystarczy skorzystać z przycisku „cofnij 15 sekund wstecz”. Z kolei jeśli materiał już znasz i chcesz go tylko przesłuchać, możesz zwiększyć lub zmniejszyć jego prędkość. O ile tylko nie denerwuje Cię zmiana głosu na bardziej piskliwy, to… czemu nie – korzystaj!\nZaczynamy od skonfigurowania środowiska. Tutaj jest to zrobione w oparciu o system Windows. Jeżeli korzystasz z Linux lub MacOS, to kroki do wykonania są podobne, ale w materiałach ich nie znajdziesz. Jeśli masz już zainstalowane środowisko u siebie to oczywiście ten blok możesz przerobić pobieżnie. Chcę żeby pracowało Ci się wygodnie, dlatego nie tylko instalujemy Jupyter Notebook, ale jeszcze dodatkowo omawiamy jak pracować z nim wydajnie. Jak go konfigurować, dodawać do niego pakiety, jak korzystać ze skrótów klawiaturowych itp. Wiem, że kiedy „palisz się” do analizy danych ten wstęp może Ci się wydawać przydługawy. Możesz w takim przypadku przeskoczyć część tematów i kontynuować lekcje poświęcone PANDAS, a tu wrócisz później. Zdecydowałem się dodać te lekcje po to, żeby ułatwić Ci pracę z PANDAS na własną rękę. Zwłaszcza te kilka lekcji poświęcone tematyce zaawansowanej konfiguracji  środowiska z linii komend przydadzą się, kiedy napotkasz jakieś problemy, a znajdowane na forach odpowiedzi będą mówiły o instalacji pakietu przez conda…\nŻeby dane analizować, trzeba je mieć. Wszystkie pliki prezentowane na kursie jak i potrzebne do rozwiązywania zadań są dołączone do kursu. W większości przypadków podaję też skąd te materiały pochodzą i moim zdaniem ich dystrybucja nie jest zabroniona – korzystaj do woli, albo szukaj innych na własną rękę. W Internecie jest naprawdę mnóstwo ciekawych i darmowych zbiorów.\nPotem właściwie zaczynamy najważniejszą część kursu opowiadającą o PANDAS. Pełna nazwa PANDAS to Python and data analysis i logo tego pakietu to kilka wykresików, ale… sam powiedz z czym się graficznie kojarzy nazwa PANDAS…\nKluczowa w PANDAS i analizie danych jest kolumna danych – tutaj zwana Data Series. Ten obiekt trzeba bardzo dobrze poznać, bo inne obiekty i polecenia bardzo mocno go wykorzystują. Kiedy sam uczyłem się PANDAS bardzo mnie to denerwowało, że tyle czasu uczyłem się tylko o przetwarzaniu pojedynczej kolumny, ale uwierz mi – to nie będzie stracony czas.\nPotem przechodzimy do zbioru kolumn, co w PANDAS nazywa się Data Frame. Tu będzie już ciekawiej, bo da się obserwować na raz więcej kolumn a więc i więcej danych. Na tym etapie możesz już pomyśleć o budowaniu analiz własnych zbiorów danych.\nDalej opowiemy o modyfikacji danych. Można by myśleć, że przy analizie danych, nie trzeba ich modyfikować i ogólnie chyba rzeczywiście tak jest. Ale warto wiedzieć jak dodać wiersz, kolumnę, przebudować indeks, bo to też metody na przygotowanie danych do analizy.\nW następnym etapie jesteśmy gotowi do pierwszych analiz. Indeksy będą mogły już składać się z wielu poziomów, będziemy je przerzucać z wierszy do kolumn i odwrotnie, zbudujemy tabele przestawne, albo właśnie przekształcimy dane z postaci tabeli danych do normalnej tabeli.\nKolejny krok to grupowanie danych i agregacja danych. Posiadając zagregowane dane możesz analizować je w mniejszych fragmentach, a dzięki temu możesz wykrywać zależności w tych danych i ich charakterystyczne dane. Bez tego wszystkie wyniki byłyby uśrednione na cały zbiór danych i przez to najprawdopodobniej zupełnie bez wartości, a tak możesz zobaczyć charakterystyczne cechy  zakupów w poszczególnych regionach czy inne zainteresowania w zależności od wieku i płci itp.\nRzadko kiedy wszystko to, co jest potrzebne jest w jednym miejscu, często jedna sytuacja jest opisywana przez kilka zbiorów danych. Dlatego właśnie mamy specjalną sekcję dotyczącą łączenia danych z różnych źródeł. Myśl o tym jak o łączeniu tabel w bazie danych lub łączeniu arkuszy w skoroszycie.\nKolejny temat to wykresy. Przedstawiamy tu kilka różnych rodzajów wykresów i zmieniamy ich wygląd modyfikując ich mniej i bardziej zaawansowane parametry, ale nie ma co ukrywać – za wykresy w PANDAS odpowiadają funkcje z matplotlib. Informacje z tego kursu będą wystarczające do samodzielnego zbudowania wykresów i zaprezentowania na nich analizowanych danych, ale moduł matplotlib nie jest tutaj omawiany – to duży temat na osobny kurs.\nNaukę kończymy dodatkowymi materiałami dotyczącymi pobierania i zapisywania danych na zewnątrz PANDAS, włączając w to dane pobierane z Internetu lub wczytywane i zapisywane w plikach excel.\nZapraszam do nauki. Otwórz sobie drzwi do Data Science!",
      "target_audience": [
        "Analitycy danych, którzy analizy przeprowadzają w innych narzędziach niż Python i PANDAS",
        "Chętni do poważnego zajęcia się Data Science",
        "Rozpoczynający naukę Machine Learning i sztucznej inteligencji"
      ]
    },
    {
      "title": "Curso JavaScript Ninja",
      "url": "https://www.udemy.com/course/curso-javascript-ninja/",
      "bio": "O curso para aprender JavaScript DE VERDADE!",
      "objectives": [
        "Deixar sites e aplicações web mais dinâmicas e interativas",
        "entenderão como os frameworks e bibliotecas JavaScript funcionam por baixo dos panos",
        "saberão usar corretamente a linguagem JavaScript em sua totalidade."
      ],
      "course_content": {
        "Aula #01": [
          "Introdução",
          "Variáveis e tipos de dados",
          "Operadores aritméticos",
          "Operadores de igualdade e relacionais",
          "Funções",
          "Sobre o envio dos desafios",
          "Desafio da semana #01"
        ],
        "Aula #02": [
          "Revisão Desafio da semana #01",
          "Operadores Lógicos",
          "Operadores Unários",
          "Estrutura Léxica",
          "Instruções condicionais - IF",
          "Desafio da semana #02"
        ],
        "Aula #03": [
          "Revisão do desafio da semana 02 - Parte 1",
          "Revisão do desafio da semana 02 - Parte 2",
          "Revisão do desafio da semana 02 - Parte 3",
          "Tipos de dados e objetos",
          "Métodos de objeto",
          "Métodos de objeto (continuação) e desafio da semana #03"
        ],
        "Aula #04": [
          "Revisão do desafio da semana 03 - Parte 1",
          "Revisão do desafio da semana 03 - Parte 2",
          "Truthy e Falsy",
          "Condicional Ternário",
          "Escopo de variáveis e funções",
          "Desafio da semana #04"
        ],
        "Aula #05": [
          "Revisão do desafio da semana #04 - Parte 1",
          "Revisão do desafio da semana #04 - Parte 2",
          "Revisão do desafio da semana #04 - Parte 3",
          "Retorno de funções com arrays e objetos",
          "Parâmetros de Funções como arrays e objetos",
          "Desafio da semana #05"
        ],
        "Aula #06": [
          "Revisão Desafio da semana #05 - Parte 1",
          "Revisão Desafio da semana #05 - parte 2",
          "Revisão Desafio da semana #05 - parte 3",
          "Revisão Desafio da semana #05 - parte 4",
          "Operador virgula e estrutura condicional switch",
          "Estrutura de repetição While e desafio da semana #06"
        ],
        "Aula #07": [
          "Revisão do desafio da semana #06 - Parte 1",
          "Revisão do desafio da semana #06 - Parte 2",
          "O operador módulo",
          "Arrays - a propriedade length",
          "Arrays - método \"push()\" e Loop \"for\"",
          "Desafio da semana #07"
        ],
        "Aula #08": [
          "Revisão Desafio semana #07",
          "A importância de nomear funções",
          "Introdução à Functional Programming",
          "Functional Programming - parte 2",
          "Functional Programming - parte 3",
          "Desafio da semana #08"
        ],
        "Aula #09": [
          "Revisão desafio semana #08 - Parte 1",
          "Revisão desafio semana #08 - Parte 2",
          "Escopo de funções",
          "hoisting",
          "IIFE - Immediately-Invoked Function Expression",
          "Desafio semana #09"
        ],
        "Aula #10": [
          "Revisão desafio da semana #09 - Parte 1",
          "Revisão desafio da semana #09 - Parte 2",
          "Revisão desafio da semana #09 - Parte 3",
          "Wrapper Objects",
          "typeof",
          "Desafio da semana #10"
        ]
      },
      "requirements": [
        "Você deve ter uma noção básica de HTML e CSS."
      ],
      "description": "O objetivo desse curso é ensinar JavaScript DE VERDADE! Se você já está há muito tempo tentando estudar por si só, mas não consegue compreender essa linda linguagem, esse curso é para VOCÊ! A ideia principal do curso é dar um Treinamento Ninja, para que a pessoa saia com todo o conhecimento necessário para se virar por conta própria com a linguagem, sem depender de bibliotecas ou frameworks.\n\n\nO mercado de trabalho precisa de pessoas desenvolvedoras que saibam o que estão fazendo! Hoje em dia você pode encontrar vagas para trabalhar com JavaScript de forma muito fácil! Mas você precisa ter capacitação para suportar esse desafio :D\n\n\nO foco do curso é apresentar a base da linguagem, conhecida como a versão ES5. Desde 2015, a cada ano a linguagem tem evoluído um pouco mais, e novas funcionalidades são adicionadas para deixar a linguagem ainda melhor! A versão ES6 foi lançada em 2015, a ES7 em 2016, e assim por diante, sempre uma nova versão por ano.\n\n\nMas isso não invalida o aprendizado de ES5, muito pelo contrário: ES5 é e sempre será a base do JavaScript, já que nada é removido da linguagem. E esse é o objetivo desse curso: te dar toda a base necessária, para que você consiga facilmente aprender as novidades que são lançadas a cada ano :D",
      "target_audience": [
        "Desenvolvedores ou futuros desenvolvedores que queiram aprender a linguagem JavaScript de verdade"
      ]
    },
    {
      "title": "Python 3. Curso de python con 150 ejemplos y 10 proyectos",
      "url": "https://www.udemy.com/course/curso-python/",
      "bio": "Aprende Python 3 desde cero. Curso de Python 3 muy práctico, con más de 100 ejemplo, 50 ejercicios y 10 proyectos",
      "objectives": [
        "Aprenderás a programar en Python mediante ejemplos sencillos y prácticos",
        "Aprenderás a ejecutar programas en Python desde tu ordenador y también online si lo prefieres",
        "Aprenderás a utilizar las colecciones de datos típicas de Python como listas, tuplas, conjuntos y diccionarios",
        "Aprenderás a construir bucles for y while para realizar tareas repetitivas",
        "Aprenderás la programación orientada a objetos con Python creando clases y objetos",
        "Aprenderás a manejar ficheros de texto y binarios en Python",
        "Aprenderás a tratar los errores en tus programas con Python",
        "Aprenderás expresiones regulares, manejar estructuras JSON, y procesar la fecha y la hora",
        "Aprenderás cómo acceder a una base de datos desde Python para crear tablas y añadir nuevos registros",
        "Aprenderás a realizar pruebas automáticas y generar documentación automáticamente",
        "Aprenderás funciones avanzadas como las funciones generadoras, filter y map",
        "Aprenderás a manejar el módulo numpy para el manejo de arrays de datos",
        "Aprenderás el módulo pandas para manejar Series y DataFrames, que son las estructuras de datos más utilizadas en Python",
        "Aprenderás a crear y leer ficheros HTML y EXCEL desde Python",
        "Aprenderás los módulos seaborn y matplotlib para realizar gráficos con tus datos, como histogramas, gráficos de caja y mapas de calor",
        "Aprenderás a construir una calculadora utilizando el módulo Tkinter para el diseño gráfico de tu aplicación Python"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Ejecutar un programa en Python": [
          "Instalar y ejecutar python desde una Terminal de comandos",
          "Ejecutar Python desde Sublime Text y desde la terminal de comandos",
          "Ejecutar Python desde Jupyter Notebook online",
          "Ejecutar Python con Jupyter Notebook desde nuestro ordenador"
        ],
        "Variables y números": [
          "Variables",
          "Números",
          "Conversiones entre distintos tipos de datos",
          "Ejercicio 1",
          "Solución al ejercicio 1",
          "Ejercicio 2",
          "Solución al ejercicio 2"
        ],
        "Cadenas de texto": [
          "Cadenas de texto",
          "Funciones de las cadenas",
          "Imprimir variables de cadenas de texto",
          "Entrada de texto por teclado",
          "Ejercicio 1",
          "Solución al ejercicio 1",
          "Ejercicio 2",
          "Solución al ejercicio 2",
          "Ejercicio 3",
          "Solución al ejercicio 3",
          "Ejercicio 4",
          "Solución al ejercicio 4"
        ],
        "Operadores": [
          "Operadores aritméticos",
          "Operadores de asignación",
          "Operadores de comparación",
          "Operadores lógicos",
          "Operadores de identidad",
          "Operadores de pertenencia",
          "Ejercicio 1",
          "Solución del ejercicio 1",
          "Ejercicio 2",
          "Solución al ejercicio 2",
          "Ejercicio 3",
          "Solución al ejercicio 3"
        ],
        "Colecciones de datos": [
          "Listas",
          "Tuplas",
          "Conjuntos",
          "Diccionarios",
          "Ejercicio 1",
          "Solución al ejercicio 1",
          "Ejercicio 2",
          "Solución al ejercicio 2",
          "Ejercicio 3",
          "Solución al ejercicio 3",
          "Ejercicio 4",
          "Solución al ejercicio 4"
        ],
        "Bucles y condiciones": [
          "Condiciones if .. else",
          "Bucle for",
          "Bucle while",
          "Ejercicio 1",
          "Solución al ejercicio 1",
          "Ejercicio 2",
          "Solución al ejercicio 2",
          "Ejercicio 3",
          "Solución al ejercicio 3"
        ],
        "Clases, objetos y funciones": [
          "Clases y objetos",
          "Funciones",
          "Funciones lambda",
          "Ejercicio 1",
          "Solución al ejercicio 1",
          "Ejercicio 2",
          "Solución al ejercicio 2"
        ],
        "Ejercicios de codificación": [
          "Nombre completo",
          "Validar suma",
          "Números distintos",
          "Conversor de temperaturas",
          "Suma de elementos",
          "Películas",
          "Suma de números primos"
        ],
        "Módulos": [
          "Módulos",
          "Instalar un módulo nuevo: pip",
          "Ejercicio 1",
          "Solución al ejercicio 1"
        ]
      },
      "requirements": [
        "No, no hay ningún requisito para el curso"
      ],
      "description": "Python\nEn este curso aprenderás Python de forma práctica y sencilla, con videos cortos y con más de 100 ejemplos, 50 ejercicios y 11 proyectos reales para practicar.\nMás de 76.000 alumnos ya se han matriculado en este curso.\nEste curso es completamente práctico, donde todas las lecciones están explicadas mediante ejemplos, para que se puedan entender fácilmente y además podrás practicar con los ejercicios propuestos en cada tema.\nEste curso contiene 11 proyectos reales en Python para que puedas practicar.\nSe han incluido 23 ejercicios de codificación, para que puedas programar y validar tu propia solución, con pistas para ayudarte y la solución a los ejercicios en caso de que lo necesites.\nEsta es una gran forma de mejorar tu nivel de programación y prepararte futuras entrevistas de trabajo.\nEstos son los temas principales que se tratan en este curso de Python.\n\n\nFormas de ejecutar un programa en Python\nVariables, números y conversiones de datos\nCadenas de texto (funciones de cadenas y formatos de impresión)\nEntrada de texto por teclado\nOperadores aritméticos (suma, resta, multiplicación, división, …)\nOperadores de asignación (igual, distinto, mayor que, menor que, …)\nOperadores lógicos (and, or, not)\nOtros operadores (in, is, …)\nColecciones de datos (listas, tuplas, conjuntos y diccionarios)\nBucles (for, while) y árboles de decisión (if .. elif .. else)\nProgramación orientada a objetos (clases, objetos, funciones, …)\nFunciones lambda\nCrear módulos e instalar nuevos módulos (pip)\nEjercicios de codificación (nombres, sumas, números distintos, conversor de temperaturas, elementos, películas)\nFicheros de texto (crear, leer, actualizar, borrar, …)\nFicheros binarios (pickle)\nGestión de errores (if, except, else, finally)\nExpresiones regulares\nManejar estructuras JSON\nFormatos de fecha y hora\nBases de datos (crear, consultar, insertar, modificar, borrar, …)\nInterfaz gráfica con el módulo tkinter\nGenerar documentación automáticamente\nPruebas automáticas (doctest, unittest)\nFunciones avanzadas (funciones generadoras, filter y map)\nMódulo numpy (tratamiento de arrays)\nMódulo pandas (Series y DataFrames para el análisis de datos)\nRecoger datos de una pagina web HTML y de una hoja de cálculo EXCEL.\nTratamiento de datos (unión, concatenación, filtro, agrupación, agregación)\nMódulos seaborn y matplotlib (histogramas, distribuciones, regresiones, mapas de calor)\nProyecto 1 : Calculadora gráfica con el módulo Tkinter\nProyecto 2 : Análisis de datos con ficheros y SQLite\nProyecto 3 : Calculadora de propinas\nProyecto 4 : Juego de preguntas y respuestas\nProyecto 5 : Juego de piedra-papel-tijera\nProyecto 6 : Generador de contraseñas\nProyecto 7: Cálculo matemático\nProyecto 8 : Gestionar una subasta\nProyecto 9 : Aplicación gráfica de gestión de libros con Tkinter y SQLite\nProyecto 10 : Juego de cartas Blackjack\nProyecto 11 : Agenda digital\n\n\nEste curso tiene una garantía de reembolso de 30 días.\nAnímate y aprende Python ya !!\nNos vemos en el curso\nUn saludo\nEquipo de Redait Media",
      "target_audience": [
        "Personas que estén interesadas en conocer el lenguaje de programación Python.",
        "Personas que quieran cambiar su vida y convertirse en programadores Python, una de las habilidades técnicas más demandadas en la actualidad."
      ]
    },
    {
      "title": "Testy jednostkowe - JUnit 5, Mockito 2, TDD",
      "url": "https://www.udemy.com/course/testy-jednostkowe/",
      "bio": "Poznaj od podstaw jak tworzyć dobre testy jednostkowe w języku Java i metodyce Test Driven Development",
      "objectives": [
        "Jak tworzyć dobre testy jednostkowe.",
        "Jak korzystać z asercji i pracować z frameworkiem JUnit 5.",
        "Jak korzystać z mocków i pracować z frameworkiem Mockito 2.",
        "Jak stosować zasady FIRST oraz CORRECT.",
        "Jak pracować w metodyce Test Driven Development.",
        "Jak używać metryki Code Coverage."
      ],
      "course_content": {
        "Wstęp i utworzenie projektu": [
          "Wstęp",
          "Jak korzystać z kursu?",
          "Instalacja narzędzi",
          "Utworzenie projektu"
        ],
        "Wprowadzenie do testów jednostkowych": [
          "Wstęp",
          "Czym są testy jednostkowe?",
          "Rodzaje testów",
          "Framework JUnit",
          "Pierwszy test",
          "Uruchamianie testów",
          "Struktura testu",
          "Nazywanie metod testowych"
        ],
        "JUnit 5": [
          "Wstęp do JUnita 5",
          "Testowanie równości wartości i obiektów",
          "Testowanie wartości null",
          "Matchery - Hamcrest i assertJ",
          "Testowanie kolekcji",
          "Testowanie wyjątków",
          "Adnotacje @BeforeEach i @AfterEach",
          "Adnotacje @BeforeAll i @AfterAll",
          "Testowanie wydajności - timeout",
          "Adnotacje @Disabled i @DisplayName",
          "Matchery do łączenia asercji",
          "Assumptions i adnotacja @RepeatedTest",
          "Testy parametryzowane",
          "Extension Model",
          "Testy dynamiczne",
          "Oznaczanie testów - adnotacja @Tag",
          "Migracja z JUnita 4 i podsumowanie",
          "Zadanie praktyczne"
        ],
        "Dobre praktyki oraz konwencje tworzenia testów": [
          "Jak pisać dobre testy?",
          "Zasady FIRST",
          "Zasady CORRECT",
          "Test Coverage",
          "Antywzorce testowe"
        ],
        "Mockito 2": [
          "Czym jest Mockito?",
          "Stuby - definicja i zastosowanie",
          "Mocki - definicja i zastosowanie",
          "Weryfikacja wywołań metod",
          "ArgumentMatchers i wyjątki",
          "ArgumentCaptor",
          "Specjalistyczne metody",
          "Adnotacje i ustawienia restrykcyjności",
          "Obiekty typu Spy",
          "Migracja z Mockito 1 i podsumowanie",
          "Zadanie praktyczne"
        ],
        "Test Driven Development": [
          "Zasady Test Driven Development",
          "TDD w praktyce - część 1",
          "TDD w praktyce - część 2",
          "TDD w praktyce - część 3",
          "TDD - podsumowanie",
          "Zadanie praktyczne"
        ],
        "Podsumowanie": [
          "Podsumowanie"
        ]
      },
      "requirements": [
        "Podstawowa znajomość języka Java.",
        "Podstawowa znajomość programowania obiektowego."
      ],
      "description": "Testy jednostkowe są jedną z najważniejszych technik, które powinien znać każdy programista, niezależnie od języka w którym tworzy.\nKurs zaczynamy od wytłumaczenia czym są testy jednostkowe i dlaczego są takie ważne.\nNastępnie przedstawiamy szczegółowo dwa najważniejsze i najpopularniejsze frameworki Javowe używane w tworzeniu testów jednostkowych:\nJUnit 5 - bardzo znany i popularny framework do uruchamiania testów oraz tworzenia asercji,\nMockito 2 - równie popularny framework, służący głównie do tworzenia mocków - obiektów imitujących zachowanie zewnętrznych zależności testowanych klas.\nCentralną częścią kursu jest dokładne przedstawienie poszczególnych właściwości oraz funkcjonalności JUnita 5 oraz Mockito 2.\nPrzy okazji przedstawiania danej funkcjonalności, omawiamy również różnice w implementacji danego rozwiązania między poprzednimi i aktualnymi wersjami tych frameworków.\nBardzo ważnym działem jest wprowadzenie do tematyki TDD - Test Driven Development - czyli techniki tworzenia kodu, w której zaczyna się od napisania testów jednostkowych, a dopiero potem przechodzi do implementacji danej funkcjonalności w kodzie.\nZ pomocą tego kursu poznasz także zestaw konwencji oraz dobrych praktyk programistycznych: dowiesz się jak tworzyć dobre testy jednostkowe korzystając z akronimów FIRST oraz CORRECT i skonfigurujesz bibliotekę JaCoCo, by tworzyć raport pokrycia kodu testami jednostkowymi przy każdym uruchomieniu testów.\nWszystkie zagadnienia są dokładnie omawiane na praktycznym przykładzie aplikacji rozwijanej w trakcie trwania kursu.\nPonadto czekają na Ciebie zadania, które pomogą ci ugruntować nowo zdobytą wiedzę, a kod do każdego wykładu oraz zadania będzie umieszczony na platformie GitHub.",
      "target_audience": [
        "Jeśli chcesz dowiedzieć się:",
        "Jak tworzyć dobre testy jednostkowe,",
        "Jak korzystać z frameworka JUnit 5 i Mockito 2,",
        "Jak tworzyć testy jednostkowe w metodyce Test Driven Development,",
        "Jak tworzyć testy zgodnie z najlepszymi praktykami i konwencjami,",
        "Na czym polegają zasady FIRST oraz CORRECT,",
        "Czym jest Code Coverage,",
        "Jak korzystać z biblioteki JaCoCo,",
        "... to ten kurs jest właśnie dla CIEBIE!"
      ]
    },
    {
      "title": "Python Programming for Beginners | Full Course in Hindi",
      "url": "https://www.udemy.com/course/python-for-beginners-full-course-in-hindi/",
      "bio": "This course will help you learn the Python programming language and its core concepts in hindi",
      "objectives": [
        "An in-depth discussion about every topic of programming in Python",
        "Be able to write your own Python programs efficiently",
        "Program fluently in Python",
        "Learn Proper Python Syntax"
      ],
      "course_content": {
        "Python Introduction": [
          "Intro to Python Programming"
        ],
        "Python Print Statement and Comments": [
          "\"Hello World\" in python",
          "QUIZ: Python Print Statement and Comments",
          "Python Comments"
        ],
        "Python Variables and Intro To Data Types": [
          "Python Variables",
          "Rules and Naming Convention for Variables",
          "Python Data Types",
          "QUIZ: Python Variables and Intro To Data Types"
        ],
        "Python Type Conversion & Input Function": [
          "Python Type Conversion",
          "Python Input()",
          "QUIZ: Python Type Conversion & Input Function"
        ],
        "Python Operator": [
          "Python Operator",
          "Python Operator: Arithmetic Operator",
          "Python Operator: Comparison Operator",
          "Python Operator: Logical Operator",
          "Python Operator: Assignment Operator",
          "QUIZ: Python Operator"
        ],
        "Python If/Else": [
          "Python if/else statement",
          "Python Program to Check if a number is Odd or Even (IF/ELSE)",
          "QUIZ: Python If/Else"
        ],
        "For Loop and While Loop in Python": [
          "Python for loop",
          "Python while loop",
          "QUIZ: For Loop and While Loop in Python"
        ],
        "Python Break and Continue Statements": [
          "Python Break & Continue Statement",
          "QUIZ: Python Break & Continue Statement"
        ],
        "Python Numbers": [
          "Python Numbers",
          "QUIZ: Python Numbers"
        ],
        "Python List": [
          "Python List",
          "Python List Methods",
          "QUIZ: Python List"
        ]
      },
      "requirements": [
        "No requirement Needed"
      ],
      "description": "Python is a general-purpose coding language and one of the best programming languages for beginners. The syntax of python is easy to learn as compare to other programming languages (C, C++, Java, etc). Python is used in various fields such as Machine Learning, Automation, Web Development, Game Development, Graphical User Interface, etc.\nIn this course, you will learn in-depth every topic of Python and its core concepts with examples. This course is for beginners who are new to a programming language or in python. I also design quizzes for each section of this course to enable you to assess your progress. I will ensure timely updates for this course and include additional topics and projects as well.\nHere are the topics we cover in this course are:-\n1. Python Print Statement\n2. Python Comments\n3. Python Variables\n4. Python Type Conversion\n5. Python Input Function\n6. Python Operator\n7. Python IF/ELSE\n8. Python For Loop\n9. Python While Loop\n10. Python Break and Continue Statement\n11. Python Numbers\n12. Python List\n13. Python Tuple\n14. Python String\n15. Python Set\n16. Python Dictionary\n17. Python Functions\n18. Python Lambda Functions\n19. Python Global and Local Variables\n\n\nWhat you'll learn in this course\n1) An in-depth discussion about every topic of programming in Python\n2) Be able to write your own Python programs efficiently",
      "target_audience": [
        "Beginner Python Developer"
      ]
    },
    {
      "title": "Python Pro - La Guida Completa, da Zero a Professionista",
      "url": "https://www.udemy.com/course/python3guidacompleta/",
      "bio": "Il corso di Python 3.13 (2025) più venduto in Italia.",
      "objectives": [
        "Comprendere in modo approfondito il paradigma object-oriented (la prima sezione del corso riguarda proprio l'esposizione del paradigma object-oriented)",
        "Comprendere l'architettura e la sintassi del linguaggio di programmazione Python 3.13.",
        "Sviluppare applicazioni Python in modalità procedurale (funzioni, moduli, package)",
        "Sviluppare applicazioni Python in modalità object-oriented (classi, ereditarietà, override)",
        "Comprendere ed utilizzare gli \"atomi\" di Python: gli oggetti, i nomi, i tipi e gli attributi",
        "Conoscere ed utilizzare i basic data types: interi, floating-point, boolean e string",
        "Conoscere ed utilizzare le strutture dati: liste, tuple, dizionari e set",
        "Conoscere ed utilizzare gli operatori e le espressioni",
        "Conoscere ed utilizzare il control flow: if, while, for...in",
        "Comprendere ed utilizzare le list comprehension, le dict comprehension e le set comprehension",
        "Comprendere, utilizzare e definire le funzioni, e le espressioni lambda",
        "Comprendere i namespace e lo scope",
        "Comprendere ed utilizzare i function decorator ed i class decorator",
        "Comprendere e definire gli attributi di classe e di istanza, i class methods e gli static methods",
        "Progettare ed Implementare una Applicazione Distribuita con un Message Broker: RabbitMQ",
        "Comprendere anche gli argomenti avanzati del linguaggio.",
        "Comprendere le Type Annotations, e le Data Classes di Python 3.7",
        "Comprendere le Assignment Expressions e i Positional-Only Arguments di Python 3.8",
        "Comprendere gli Union Operator ed i metodi removeprefix()/removesuffix() di Python 3.9",
        "Comprendere il Pattern Matching di Python 3.10",
        "Comprendere ed utilizzare l'accesso da codice ai file di testo ed ai file binari",
        "Comprendere i fondamenti della programmazione delle API di ChatGPT",
        "Comprendere i Virtual Environment"
      ],
      "course_content": {},
      "requirements": [
        "Il corso prevede la conoscenza di base del terminale di un sistema operativo (Mac, Windows, o Linux).",
        "La conoscenza almeno a livello principiante in un qualunque linguaggio di programmazione non è obbligatoria, ma consigliata."
      ],
      "description": "- AGOSTO 2025: Nuova Lezione - Aggiornata la lezione per l'installazione di Python 3.13 e dell'editor Visual Studio Code\n- FEBBRAIO 2024: Nuova Sezione \"Welcome to the Machine\" - Una nuova sezione dedicata ai fondamenti della computazione, dai numeri binari, ottali ed esadecimali agli operatori logici, ed altri argomenti di base necessari per imparare un linguaggio di programmazione.\n- FEBBRAIO 2024: Aggiornamento della Sezione \"Introduzione alle API di ChatGPT in Python\" - le lezioni sono state riviste e nuovamente registrate, per adattarle alla versione 1.x delle API di OpenAI.\n- GENNAIO 2024: NUOVA SEZIONE: Le Enumerazioni in Python\nHo appena aggiornato il mio corso \"Python Pro\" con una nuova sezione, contenente un insieme di lezioni dedicate all'utilizzo delle \"Enumerazioni\" (Enum) in Python.\n- OTTOBRE 2023: NUOVA SEZIONE: Esercizi (dallo Spazio Profondo)\nInizia oggi una nuova sezione del corso dedicata agli esercizi, che verrà arricchita nel tempo. Lo scopo di questa sezione è proporre una serie crescente di esercizi pratici, ambientati a bordo di una astronave in viaggio nello spazio profondo, che consentiranno di verificare il livello di apprendimento. Contemporaneamente, questa serie di esercizi offre l'opportunità di offrire ulteriori elementi di apprendimento, introducendo argomenti come i design patterns e le data structures.\n- OTTOBRE 2023: AGGIORNATO ALLA VERSIONE 3.12 DI PYTHON\nUna lezione dedicata alla nuova gestione delle f-string introdotta in Python 3.12\n- SETTEMBRE 2023: NUOVA SEZIONE: I Virtual Environment in Python\nUna serie di lezioni molto utili, per iniziare ad utilizzare gli ambienti virtuali nei propri progetti Python.\n- GIUGNO 2023: NUOVA SEZIONE: Introduzione alle API di ChatGPT in Python\nNelle lezioni di questa nuova sezione impareremo come accedere dai nostri programmi Python alle API di OpenAI, per  implementare una completa conversazione con ChatGPT interamente nel nostro codice.\n- AGGIORNATO ALLA VERSIONE 3.11\nQuesto corso, che non è un semplice tutorial ma una vera guida completa, teorica e pratica, ti condurrà passo dopo passo a conoscere in profondità il linguaggio di programmazione Python - aggiornato alla VERSIONE 3.11 di Ottobre 2022 - ed il Paradigma Object-Oriented.\n\n\nNOTA: Il corso si evolve nel tempo aggiornandosi ogni anno alle versioni successive del linguaggio. Può quindi essere seguito senza problemi in modo sequenziale, dall'inizio alla fine.\n\nLa prima sezione del corso è una sorta di corso nel corso... Imparerai infatti in modo approfondito il Paradigma Object-Oriented in tutti i suoi aspetti principali, secondo un percorso che ho ricavato dai miei (ahimè) moltissimi anni di esperienza sul campo come object-oriented analyst e designer. Le capacità che acquisirai nelle lezioni teoriche di questa prima sezione sono valide anche per qualunque altro linguaggio object-oriented, come Java, C#, Swift, C++.\nAttraverso un percorso guidato, imparerai poi tutti i differenti livelli di organizzazione del codice Python, partendo dagli atomi del linguaggio (gli oggetti, i nomi, i tipi e gli attributi), per poi proseguire con i basic data types (i numeri, le stringhe ed i boolean), poi con le strutture dati (le liste, le tuple, i dizionari ed i set), poi con le strutture di codice (il control flow, le funzioni, le list comprehension, le espressioni lambda ed i decorator), poi con le strutture object-oriented (le classi, l'ereditarietà, l'override, i costruttori, le proprietà, gli attributi di istanza e di classe, i metodi statici, la gestione delle eccezioni), ed infine con le strutture dei programmi stessi (moduli e package).\nIl corso è corredato di esercitazioni pratiche e di quiz, per verificare passo dopo passo il tuo apprendimento.\n\nE' presente una sezione contenente argomenti avanzati del linguaggio, che viene incrementata con sempre nuove lezioni. Tra gli argomenti avanzati troviamo la multiple inheritance, l'MRO, le classi object e type, il costruttore __new__, gli oggetti iterabili e gli iteratori, ed anche i generatori (generator functions e generator expressions).\n\n\nE' presente una sezione interamente dedicata alla gestione dei file in Python, nella quale vengono spiegati i metodi per leggere, scrivere, accodare, e posizionarsi nei file di testo e nei file binari, con una serie di esercizi pratici.\n\n\nE' presente anche una esercitazione completa, nella quale impareremo assieme come scrivere una applicazione Python che utilizza RabbitMQ, un message broker che consente di implementare software distribuito e massivamente scalabile.\n\nE' presente anche una esercitazione completa nella quale impareremo assieme cos'è e come si utilizza in Python MongoDB, uno dei più importanti database NOSQL disponibili sul mercato.\n\n\nE' presente anche una sezione dedicata alla comprensione delle API OpenAI per la programmazione di ChatGPT da Python.",
      "target_audience": [
        "Un programmatore principiante che desidera migliorare la propria competenza generale nello sviluppo di applicazioni.",
        "Un programmatore con una conoscenza introduttiva di Python, che desidera apprendere in modo più approfondito questo linguaggio di programmazione.",
        "Un programmatore che sviluppa già applicazioni in altri linguaggi di programmazione, che desidera aggiungere Python al proprio curriculum, acquisendone una conoscenza approfondita.",
        "Chiunque abbia desiderio di imparare a conoscere il paradigma object-oriented, che potrà poi utilizzare anche in altri linguaggi di programmazione"
      ]
    },
    {
      "title": "Introducción a la Programación",
      "url": "https://www.udemy.com/course/introduccion-a-la-programacion/",
      "bio": "Aprender a programar, fundamentos de programación, Diagramas de Flujo y Pseudocodigos, Lógica de Programación desde cero",
      "objectives": [
        "Aprender las bases de la programación.",
        "Comprender los fundamentos básicos de la programación.",
        "Dominar los conceptos básicos de programación.",
        "Desarrollar la lógica de programación para resolver problemas.",
        "Crear diagramas de flujos.",
        "Crear Pseudocodigos"
      ],
      "course_content": {
        "Introducción a la Programación": [
          "Introducción",
          "Sobre El Instructor",
          "Soporte a Estudiantes",
          "Listos para un nuevo conocimiento",
          "¿Qué es la Programación?",
          "¿Qué es un Algoritmo?",
          "¿Qué es un Pseudocodigo ?",
          "Descargando e Instalando PseInt",
          "Conociendo la Interfaz de PSeInt",
          "Asignando valores a Variables",
          "¿Qué es un Diagrama de Flujo de datos?",
          "Descargar DFD",
          "Conociendo la Interfaz del programa DFD",
          "Conclusiones",
          "Finalizando esta sección."
        ],
        "Fundamentos de la Programación": [
          "Objetivos a cumplir en este módulo",
          "Temas de la sección",
          "Tipos de datos",
          "Variables y Constantes",
          "Trabajando con Variables",
          "Operadores",
          "Operador de Asignación",
          "Operadores Aritméticos",
          "Operadores Relacionales",
          "Operadores Lógicos",
          "Ejercicio: Área y Perímetro de un Rectángulo",
          "DFD: Área y Perímetro de un Rectángulo",
          "Conclusiones"
        ],
        "Estructuras algorítmicas Selectivas": [
          "Introducción: ¿Que aprenderás en esta sección?",
          "Temas puntuales de la sección",
          "¿Qué es una estructura Selectiva?",
          "Estructura selectiva simple",
          "Trabajando con diagramas de Flujo en PSeInt",
          "Estructura selectiva doble",
          "Ejercicio: Obtener descuento según compras.",
          "Análisis ejercicio Descuento según Compra",
          "Estructura Selectiva Multiple",
          "Estructura selectiva en Cascada",
          "Ejemplo: DFD, Estructura Selectiva en Cascada",
          "Ejercicio - Practiquemos lo aprendido",
          "Ejemplo: DFD, Cantidad de Monedas",
          "Tarea - Ejercicios Estructuras selectivas",
          "Ejercicios Propuestos Sobre Estructuras Selectivas",
          "Ya evaluaste el curso"
        ],
        "Estructuras Algorítmicas Repetitivas": [
          "Introducción: Lo que aprenderás en esta Sección sobre Estructuras Repetitivas",
          "Temas de la sección",
          "¿Qué es una estructura Repetitiva?",
          "Contador y Acumulador",
          "Estructura Repetitiva Mientras",
          "Ejemplo: DFD, Estructura Repetitiva Mientras",
          "Estructura Repetitiva Hacer Mientras",
          "Análisis : Ejercicio, Estructura repetitiva Hacer Mientras",
          "Estructura Repetitiva Para",
          "Análisis : Ejercicio, Estructura repetitiva PARA",
          "Ejemplo: DFD, Estructura Repetitiva Para",
          "Ejemplo: Explicación de la Estructura Mientras",
          "Ejemplo : Mostrar el numero mayor de N números ingresados.",
          "Ejemplo DFD : Mostrar el numero mayor de N números ingresados.",
          "Ejemplo: Numero Natural a numero Binario"
        ],
        "Arreglos": [
          "Introducción",
          "Temas de la sección",
          "¿Qué es un arreglo?",
          "Tipos de Arreglos",
          "Uso de Arreglos en PseInt - Sintaxis",
          "Ejemplo en PseInt: Obtener el numero mayor en un arreglo.",
          "Ejemplo en PseInt: Suma de N elementos en un arreglo.",
          "Ejemplo Arreglos Bidimensionales: Suma de Matrices",
          "Ejercicio Propuesto, Sobre Arreglos Bidimencionales"
        ],
        "Funciones": [
          "Introducción a las Funciones",
          "Temas de la sección",
          "Primer Función sin parámetros",
          "Función con Parámetros",
          "Función - Encontrar el mayor de tres números",
          "Factorial de un Numero"
        ],
        "Solución A Ejercicios Propuestos": [
          "Ejercicio 1: Estructuras Algorítmicas Selectivas",
          "Ejercicio 2: Estructuras Algorítmicas Selectivas",
          "Ejercicio 3: Estructuras Algorítmicas Selectivas",
          "Ejercicio 4: Mostrar el Mayor y Menor de N Números ingresados",
          "Solución Ejercicio 4: Mostrar el Mayor y Menor de N Números ingresados",
          "Ejercicio 5: Descuento Según Salarios",
          "Ejercicio 6: Descuento Según Salarios (Segunda Forma)",
          "Ejercicio 7: Horas Extras Trabajador",
          "Ejercicio 8: Formula General o Cuadratica"
        ],
        "Aprendamos Juntos": [
          "Objetivos de esta sección",
          "Determinar si un numero es PAR o IMPAR"
        ],
        "Preguntas y Respuestas": [
          "Explicación - Ejercicio Aumento de Sueldo a Empleado - Uso de Variables",
          "Uso de caracteres en Estructura selectiva según"
        ],
        "Clase Extra": [
          "Contenido Extra"
        ]
      },
      "requirements": [
        "Deseos de aprender",
        "Saber instalar programas en la computadora",
        "Instalar el programa PseInt (Hay una lección e la cual se explica como realizarlo)",
        "Instalar el programa DFD para crear los diagramas de flujo (Hay una lección especial que te explica como realizarlo)",
        "Computadora para realizar todas las practicas."
      ],
      "description": "Desarrollar la lógica de Programación con Diagramas de Flujo y Pseudocodigos,  aprende los fundamentos de programación con este curso introductorio desde cero para quienes desean aprender desde cero los conceptos fundamentales de programación y llevarlos a la práctica.\nEn este curso de Introducción a la programación  conocerás los Fundamentos de Programación aprenderás a crear Diagrama de Flujos y Pseudocodigos desde cero de una forma básica y muy completa.\n\n\n¡Hora de sumergirte en el emocionante mundo de la programación!\n¿Estás listo para desbloquear tu potencial y dominar los fundamentos de la codificación desde cero?\n¡Este curso introductorio es tu boleto de entrada al universo digital!\n\n\nEn el curso de  \"Introducción a la Programación\", te embarcarás en un viaje fascinante donde aprenderás los conceptos esenciales de la programación y los aplicarás en la práctica. Desde la creación de diagramas de flujo hasta la escritura de pseudocódigos, te sumergirás en un aprendizaje completo.\n\n\n¿Por qué deberías unirte?\nPorque este curso te proporcionará las bases sólidas que necesitas para comprender cualquier lenguaje de programación que desees explorar en el futuro. ¡Las posibilidades son infinitas!\nNo te preocupes si eres nuevo en esto, ¡estamos aquí para guiarte en cada paso del camino! Con ejercicios prácticos en pseudocódigo y diagramas de flujo, te aseguramos una experiencia de aprendizaje dinámica y envolvente.\n¿Qué te espera?\n¡Secciones dedicadas a los conceptos fundamentales de programación, estructuras algorítmicas selectivas, repeticiones, arreglos y matrices! Y eso no es todo, ¡se añadirán más secciones constantemente para enriquecer tu aprendizaje!\n\n\n¿La mejor parte? ¡Garantizamos tu satisfacción o te devolvemos tu dinero! Así que no esperes más, ¡es hora de transformar tu futuro y hacer realidad tus sueños digitales! ¡Inscríbete ahora y comienza tu viaje hacia la maestría en programación!\n\n\nConocerás todos los conceptos básicos, para aprender a programar,  Con los conocimientos que adquieras en este curso tendrás las bases necesarias para entender cualquier lenguaje de programación que tu desees.\nDurante el desarrollo del curso se irán desarrollando ejercicios en Pseudocodigo y diagrama de Flujo.\nEl curso está dividido en varias Secciones :\n\nConceptos de programación\nFundamentos de programación\nEstructuras algorítmicas Selectivas\nEstructuras Algorítmicas Repetitivas\nArreglos y Matrices",
      "target_audience": [
        "Todas las personas que deseen aprender a programar",
        "Estudiantes que estan comenzando en el mundo de la programación",
        "Estudiantes de Ingeniería en Sistemas",
        "Estudiantes que deseen aprender desde lo mas básico hasta poder dominar conceptualizaciones de programación."
      ]
    },
    {
      "title": "Swift & iOS 12 - Der umfassende App Entwickler Kurs A-Z",
      "url": "https://www.udemy.com/course/apps-entwicklen-mit-swift-4-und-ios-11-fur-einsteiger/",
      "bio": "Swift, iOS 12, viele Praktische Apps wie eine Instagram Klone App. Themen wie CoreData, TableView, und vieles mehr...",
      "objectives": [
        "Du wirst deine eigenen Apps erstellen können",
        "Du erstellst ein Portfolio von Apps, um sich für Junior-Entwicklerjobs zu bewerben",
        "Du wirst verstehen was Objektorientierte Programmierung ist",
        "Verstehe was Datenstrukturen sind",
        "Arbeiten mit Datenbanken wie Core Data oder Firebase",
        "Die Sprache Swift verstehen und anwenden",
        "Xcode und iOS 12 verstehen und anwenden",
        "Das MVC Pattern verstehen und anwenden",
        "Apps wie Instagram, WhatsApp erstellen"
      ],
      "course_content": {},
      "requirements": [
        "Keine Vorkenntnisse nötig. Du lernst alles was du brauchst im Kurs.",
        "Einen Mac besitzen"
      ],
      "description": "Du willst endlich deine App Ideen umsetzten? Oder du hast genug von Kursen, bei denen alles nur durchgeklickt, aber nicht wirklich erklärt wird?\nIn diesem Kurs zeige ich dir nicht nur wie du deine Traum-Apps entwickelst, sondern du lernst auch die Hintergründe der App-Entwicklung. Das wieso, weshalb und warum, dass so oft nicht erklärt wird.\nDer Kurs bietet einen sehr hohen Praxisanteil, da die Theorie gleich in praktischen Apps umgesetzt wird. Die Apps, die du in diesem Kurs erstellst, können alle auf deinem iPhone genutzt werden.\n\n\n_____\nJetzt NEU!\nDu erhältst meinen umfangreichen Instagram Klone App Kurs zum kleinen Preis. Dieser Kurs ist über 30h lang!\nIm Kurs lernst du, die Instagram App zu programmieren.\n_____\n\n\nWichtig: Der Kurs hat zwei Teile einen iOS 11 Teil und einen neuen iOS 12 Teil. Als kleines Extra erhaltet Ihr somit einen Kurs umsonst dazu. So könnt ihr euer Wissen noch erweitern – die Änderungen von iOS 11 zu iOS 12 sind zu vernachlässigen.\n\n\nDer Kurs ist so aufgebaut, dass er nie langweilig wird, da in jedem Abschnitt etwas Neues dazu kommt. So eignest du dir Abschnitt für Abschnitt mehr Wissen an.\nJe weiter du im Kurs bist, desto schwieriger werden die Apps und du wirst sehen, welche Geheimnisse sich hinter erfolgreichen Apps verbergen.\nIn diesem Kurs werden nicht einfach irgendwelche sinnlosen Apps entwickeln, sondern jede App, die du erstellst, kannst du im echten Leben nutzen.\nSei es der Trinkgeld-Rechner, mit dem man mal eben schnell im Restaurant ausrechnen kann, wieviel du der Bedienung geben solltest. Oder ein SSV-/ WSS-Verkaufs-Rechner, damit du schon im Geschäft ausrechnen kannst, wie viel günstiger das Sofa durch den Schlussverkauf ist.\nOder planst du dein eigenes Start Up und willst dafür deine eigene Social Media App erstellen?\n\n\nAn dieser Stelle möchte ich dir noch ein wenig über mich und meinen Werdegang erzählen: Als ich mit der App Entwicklung begonnen habe, gab es natürlich auch YouTube Tutorials und Programmier-Kurse, aber ich hatte nie das Gefühl zu verstehen, was ich da eigentlich mache bzw. lerne. Jeder hat nur erzählt: Hier klicken, dann bitte dort etwas einfügen. Aber das “Warum“ hat niemand erklärt. Doch dieses “Warum“ entscheidet am Ende, ob man selbständig in der Lage ist, seine Ideen umzusetzen.\nWie ich dir schon am Anfang versprochen habe: In meinen Kursen werden wir nicht nur monoton durch das Programm klicken, hier lernst du das Fundament der App Entwicklung!\nDu erhältst in diesem Kurs also:\nDie Sprache Swift. Variablen, Konstanten, Kontrollstrukturen wie if / else, Schleifen wie for / while etc. + deren Logik verstehen\nDas Konzept der Objekt Orientierung Programmierung verstehen. Klassen, Objekt, Protokolle, Vererbung und vieles mehr.\nWie heute Apps erstellt werden mit dem MVC design pattern\nDatenbanken wie Core Data oder Firebase nutzen\nSpiele entwickeln mit SpriteKit wie Flappy Bird oder Mario Run\nMehrere Apps, die du sofort im täglichen Leben nutzen kannst, wie einen Trinkgeld-Rechner oder eine Wetter App, eine Quiz App und viele weitere\nWissen um Klone wie Instagram, Tinder oder eine Chat App erstellen\nAußerdem zeige ich dir, wie du Hardware oder Sensoren deine iPhones für deine Programme nutzen kannst",
      "target_audience": [
        "Alle, die gerne eigene Apps für das iPhone und iPad entwicklen möchten und noch keine Erfahrung haben",
        "Alle, die ihre App Ideen endlich umsetzen möchten",
        "Falls du schon Erfahrung mit Swift hast, dann schau dir die umfangreichen Beispiel Apps an, wie z.B. die Instagram Klone App",
        "Alle, die nicht nur Swift und Xcode anwenden sondern die Hintergründe auch verstehen möchten"
      ]
    },
    {
      "title": "Comienza a programar: Python desde 0",
      "url": "https://www.udemy.com/course/comienza-a-programar-python-desde-0/",
      "bio": "¡Únete al curso del lenguaje más popular y demandado de la actualidad!",
      "objectives": [
        "Aprenderás Python desde lo más básico hasta el diseño de programas más complejos.",
        "Diseñarás y crearás programas en Python desde 0.",
        "Aprenderás la teoría básica de la programación para fundamentar los principios de esta.",
        "Aprenderás tipos y estructuras de datos aplicadas a Python.",
        "Aprenderás el funcionamiento de las estructuras de control",
        "Aprenderás a optimizar la programación mediante el uso de funciones",
        "Aprenderás el paradigma de la programación orientada a objetos",
        "Aprenderás conceptos de herencia y su uso en Python"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Contenido del curso",
          "¿Qué es la programación?",
          "Análisis del problema",
          "Fundamentos del lenguaje",
          "¿Por qué Python?"
        ],
        "Tipos de datos y operadores": [
          "Introducción",
          "Tipos de variables",
          "Operaciones con variables",
          "Strings",
          "Booleanos",
          "Operadores lógicos",
          "Lecturas por teclado",
          "Ejercicios primer bloque",
          "Ejercicios primer bloque resueltos",
          "Cuestionario primer bloque"
        ],
        "Estructuras de datos": [
          "Introducción",
          "Listas",
          "Tuplas",
          "Conjuntos de datos",
          "Diccionarios",
          "Cuestionario segundo bloque"
        ],
        "Estructuras de control": [
          "Introducción",
          "Condicionales",
          "Bucle For",
          "Bucle While",
          "Conclusiones",
          "Ejercicios bloques 2 y 3 parte I",
          "Ejercicios bloques 2 y 3 parte I solucionados",
          "Ejercicios bloques 2 y 3 parte II",
          "Ejercicios bloques 2 y 3 parte II solucionados",
          "Cuestionario tercer bloque"
        ],
        "Funciones": [
          "Introducción",
          "Funciones I",
          "Funciones II",
          "Funciones III",
          "Ejercicios bloque 4",
          "Ejercicios bloque 4 solucionados",
          "Cuestionario cuarto bloque"
        ],
        "Programación orientada a objetos": [
          "POO I",
          "POO II",
          "POO III",
          "Ejercicio bloque 5",
          "Ejercicio bloque 5 solucionado",
          "Cuestionario quinto bloque"
        ],
        "Herencia": [
          "Herencia",
          "Ejercicio bloque 7",
          "Ejercicio bloque 7 resuelto",
          "Cuestionario sexto bloque"
        ],
        "Métodos útiles": [
          "Strings",
          "Listas",
          "Conjuntos de datos",
          "Diccionarios"
        ],
        "Fin del curso": [
          "Gracias a todos"
        ]
      },
      "requirements": [
        "No se requiere experiencia en programación previa. El curso empieza desde el principio.",
        "Se requieren ganas de aprender y de aprovechar todos los contenidos del curso."
      ],
      "description": "Python es el lenguaje de programación más demandado en la actualidad y uno de los más usados en la industria a nivel mundial.\nTiene una curva de aprendizaje muy leve y es el adecuado para iniciarse en la programación.\n\n\nSi quieres aprender a programar o quieres reorientar tu carrera laboral hacia la programación en Python, en este\ncurso aprenderás lo necesario para poder lograr tu objetivo.\n\n\nMuchos cursos rellenan sus lecciones con mucha teoría, o enseñan mucho contenido que no es útil en el día a día.\nNuestro objetivo es que las lecciones no sean muy largas, que sean concisas y vayan a lo realmente importante, con el fin de poder ganar mucho conocimiento en poco tiempo\n\n\nEn este caso, hemos estructurado el curso en lecciones dependientes unas de otras, de manera que el aprendizaje es creciente y ligado conforme se progresa.\n\n\nComenzaremos explicando los fundamentos de la programación, ideal para personas que nunca han programado o aquellas que no tienen una base sólida. De esta manera nos aseguramos de poder entender el propósito de la programación.\nUna vez asimilado, abordaremos Python desde los tipos más básicos, hasta dominar el paradigma de la programación orientada a objetos y la herencia.\n\n\nEl curso cuenta con el siguiente guión:\n\n\n1. Fundamentos de la programación\n2. Tipos de datos\n3. Estructuras de datos\n4. Estructuras de control\n5. Funciones\n6. Programación orientada a objetos\n7. Herencia\n\n\nCada tema cuenta con varios cuestionarios para reforzar a nivel teórico lo visto, y ejercicios que resolveremos paso a paso para ponerlo en práctica.\nLo más difícil de la programación es pensar y diseñar la solución al problema, por lo que vamos a hacer hincapié en cómo hacerlo para formar nuestro pensamiento en la programación.\n\n\nEl curso cuenta con los archivos Python usados durante las lecciones para apoyaros en el aprendizaje, y me comprometo a responder todas las dudas que vayan surgiendo para que vuestra experiencia sea plena.\n\n\n¡Aventúrate y da el paso hacia el conocimiento de Python!\nPuede que tu nueva vocación esté más cerca de lo que piensas.",
      "target_audience": [
        "Personas que quieran reorientar su carrera profesional hacia la programación en Python",
        "Estudiantes de informática que quieran aprender y ampliar los conceptos vistos en clase de una manera más cercana.",
        "Programadores de otros lenguajes que quieran iniciarse en Python"
      ]
    },
    {
      "title": "Python 3 od Podstaw do Eksperta",
      "url": "https://www.udemy.com/course/python-od-podstaw-dla-poczatkujacych/",
      "bio": "Stworzony z myślą o osobach, które nie wiedzą nic na temat programowania w Python. Naucz się Pythona od zera!",
      "objectives": [
        "Dowiesz się co to jest Python i język programowania",
        "Pokażę Ci jak importować i używać biblioteki w Python",
        "Zobaczysz, czym są funkcje i jak z nich korzystać",
        "Poznasz operatory arytmetyczne, logiczne, relacyjne",
        "Dowiesz się jak operować na Stringach :-)",
        "Pokażę Ci jak tworzyć warunki z pomocą instrukcji warunkowych",
        "Nauczę Cię czym są i kiedy korzystać z listy, zbiory, krotki, słowników",
        "Zaawansowane wyrażenia generujące listowe, słownikowe, zbioru i generatory nie będą dla Ciebie stanowić problemu",
        "Transformowanie danych zapisanych w pamięci stanie się łatwe",
        "Pętle będą dla Ciebie prostym elementem składni języka Python",
        "Obsługa plików",
        "Zdarzenia losowe",
        "JSON",
        "Praktyczne przykłady obsługi API",
        "Instalacja zewnętrznych pakunków z PyPi",
        "Obsługa Visual Studio Code"
      ],
      "course_content": {
        "Podstawy Python": [
          "Co robić, by wyciągnąć z kursu jak najwięcej korzyści?",
          "Czym jest Python? Pierwsze uruchomienie",
          "Zmienne, pierwszy skrypt oraz zmiana stanu powłoki",
          "Komentarze",
          "Typy zmiennych oraz nazewnictwo",
          "Operatory arytmetyczne (Matematyka w Pythonie)",
          "Cwiczenie z VAT'em",
          "Czym jest średnik i ENTER dla interpretera? Przypisywanie kilku wartości naraz",
          "Operatory przypisania",
          "Zabawa ze Stringami",
          "Quiz | Podstawy"
        ],
        "Skróty klawiaturowe – pracuj szybciej jak profesjonalista": [
          "Najczęściej używane skróty klawiaturowe przez programistów",
          "Skróty klawiaturowe w formie tekstowej do wydrukowania"
        ],
        "Biblioteki i funkcje – solidne podstawy Python": [
          "Importowanie bibliotek - czym są funkcje?",
          "UWAGA! Oglądnij tę lekcję by uniknąć błędów z wywoływaniem funkcji",
          "Pobieranie i formatowanie danych od użytkownika oraz rzutowanie",
          "ĆWICZENIE: Pobieranie i formatowanie danych wprowadzonych przez użytkownika",
          "QUIZ | Biblioteki i funkcje - podstawy"
        ],
        "Instrukcje warunkowe – podejmowanie decyzji w kodzie": [
          "Operatory porównania",
          "Instrukcja warunkowa If oraz WCIĘCIA | UWAGA! | Python inaczej odbiera wcięcia",
          "ĆWICZENIE: Wartość bezwzględna z liczby",
          "Wartości różne od 0",
          "Operatory Logiczne",
          "QUIZ | Instrukcje warunkowe"
        ],
        "Pętle w Python – automatyzacja zadań i przetwarzanie danych": [
          "Pętla while",
          "ĆW. pętli: Suma kolejnych liczb",
          "Dokładna analiza krok po kroku ćwiczenia powyżej (debugowanie)",
          "Pętla for",
          "break i continue",
          "Dodawanie liczb parzystych podanych przez użytkownika",
          "ĆW. Zgadnij liczbę",
          "QUIZ | Pętle"
        ],
        "Listy w Python – przechowywanie i przetwarzanie danych": [
          "Czym jest lista? Podstawowe operacje na listach",
          "Lista \"in\" i \"not in\"",
          "ĆWICZENIE - Przekaż dostęp do sekcji kodu tylko uprawnionym osobom",
          "Operacje i funkcje na listach",
          "QUIZ | Listy"
        ],
        "Krotki, słowniki, zbiory – zaawansowane typy danych": [
          "Krotki",
          "Słownik",
          "Sets (zbiory) & Operacje na zbiorach",
          "Zagnieżdżone typy danych",
          "Pętle, a typy zagnieżdżone - przetwarzanie danych",
          "Słownik w liście, słownik w słowniku",
          "Wypisywanie zawartości słownika zagnieżdżonego w liście/słowniku",
          "ĆWICZENIE: Dynamiczny Słownik z Definicjami"
        ],
        "Transformacje danych": [
          "Wyrażenia (formuły) listowe | Transformacja listy",
          "Wyrażenia generujące",
          "Wyrażenia (formuły) słownikowe | Transformacja Słownika",
          "Wyrażenie zbioru",
          "ĆWICZENIE: Wyszukanie liczb podzielnych przez 7, ale niepodzielnych przez 5"
        ],
        "Funkcje - podstawy": [
          "Czym są funkcje? Tworzenie własnych funkcji, po co je tworzyć?",
          "Funkcje z wieloma parametrami",
          "Zwracanie wartości funkcji (return)",
          "\"wywołać\" i \"zwrócić\"",
          "QUIZ | Funkcje",
          "ĆWICZENIE: Program liczący powierzchnie figur",
          "ĆWICZENIE: Sumowanie liczb dodatnich w liście",
          "ĆWICZENIE: Dodaj funkcje do istniejącego kodu",
          "Kalkulator BMI",
          "Czas na test Twojej wiedzy w Python"
        ],
        "Funkcje - zaawansowane aspekty": [
          "Aplikacja wielomodułowa | Jak zaimportować Twój własny moduł?",
          "Enum - co to jest i po co to używać? Ulepszamy program z poprzedniej lekcji",
          "ĆWICZENIE: Suma wszystkich liczb do podanej wartości | UWAGA bazujemy na tym ćw.",
          "MODUŁ time | Mierzenie wydajności kodu",
          "Funkcja jako argument innej funkcji - przekazywanie funkcji do funkcji",
          "Domyślne wartości argumentów",
          "Argumenty kluczowe i pozycyjne - kolejność przesyłanych argumentów",
          "ĆWICZENIE: Sprawdzenie, czy istnieje element wewnątrz zbioru vs listy",
          "Argument wielowartościowy (Variable-length Arguments)",
          "ĆWICZENIE: Liczenie sumy wszystkich argumentów",
          "Zasięg globalny vs zasięg lokalny",
          "Mutable vs immutable - przesyłanie obiektów do funkcji",
          "Kopiowanie płytkie vs głębokie",
          "Funkcje anonimowe | Funkcje lambda",
          "ĆWICZENIE: Użyj funkcji any(), aby określić, czy lista zawiera liczby parzyste",
          "ĆW: Użyj funkcji all(), aby określić, czy użytkownicy spełniają kryteria",
          "ĆW: Ponumeruj zadania i pokaż je użytkownikowi | enumerate()"
        ]
      },
      "requirements": [
        "Wszystko wyjaśnione jest w kursie. Nie musisz posiadać żadnych wiadomości na temat języka Python, aby zabrać się za ten kurs."
      ],
      "description": "W moim kursie Python nie musisz znać podstaw programowania. Nauczysz się wszystkiego od zera. Obal mit, że programowanie jest dla nielicznych. Pisz własne programy! :)\nOszczędź swój cenny czas kupując ten kurs.\nNauczysz się programować w Python w szybki i prosty sposób.\nJeśli chcesz nauczyć się języka programowania, który może być używany w każdych okolicznościach od tworzenia prostych skryptów, gier po tworzenie stron internetowych i zarabiać dobre pieniądze to jesteś w dobrym miejscu.\nPython jest:\nłatwy do nauczenia\nszybki\nuniwersalny (jest masa dostępnych bibliotek rozwiązujących Twoje problemy)\nZ Pythona korzystają potężne firmy:\nGoogle (Youtube)\nFacebook\nDropbox\nYahoo\nNASA\nIBM\nMozilla\nReddit\nPo kursie będziesz wiedział:\njak importować i używać biblioteki Python\nczym są funkcje i jak z nich korzystać\njak działają operatory arytmetyczne, logiczne, relacyjne\njak operować na Stringach :-)\njak tworzyć warunki z pomocą instrukcji warunkowych\nczym są i kiedy korzystać z list, zbiorów, krotek, słowników\njak tworzyć zaawansowane wyrażenia generujące, listowe, słownikowe, zbioru.\njak działają pętle - będą dla Ciebie prostym elementem składni języka Python\njak obsługiwać pliki\njak tworzyć zdarzenia losowe na mini grze.\njak obsługiwać format JSON na praktycznym przykładzie łączenia się z serwerami API\njak instalować zewnętrzne pakunki z PyPi\njak obsługiwać Visual Studio Code\njak programować korzystając z programowania obiektowego?\nTo nie koniec!\nW kursie Python znajduje się masa praktycznych ćwiczeń.\nCo więcej, do lekcji w zasobach znajdziesz notatki, które możesz wydrukować, aby móc powtórzyć sobie w dowolnym momencie poznane wiadomości!\n\n\nPonad 350,000 studentów na Udemy uczy się z moich kursów. Dołącz do grupy zadowolonych Użytkowników. Jeśli mój kurs Ci się nie spodoba, to pamiętaj, że masz aż 30 dni na to, by uzyskać pełną refundację. Gwarantuję Ci 100% satysfakcji.\n\n\nJeśli masz jakiekolwiek pytania, związane z poruszonymi tematami w Python to pisz śmiało, zawsze chętnie pomogę :)\nUżywam prostego języka, przystępnego dla każdego. Nie chwalę się wiedzą. Chcę Ci pomóc!\nProszę, zanim zakupisz kurs oglądnij darmowe lekcje! Nie kupuj kota w worku! Sprawdź jakość kursów przed zakupem!\nDołącz dziś i naucz się szybko języka Python ze mną!",
      "target_audience": [
        "Ten kurs języka Python jest przeznaczony dla każdego. Nie musisz wiedzieć nic na temat Pythona, aby się za niego zabrać."
      ]
    },
    {
      "title": "Node.js 入門 ー演習しながら学ぶ基本クラスの使い方ー",
      "url": "https://www.udemy.com/course/introductory-nodejs/",
      "bio": "Node.jsの根幹にかかわる機能の使い方だけでなく動作原理まで学習することで基礎力をつけることを目指します！",
      "objectives": [
        "Nodeを使った開発をするために必要な環境整備方法が身に付く",
        "Nodeコアモジュールの動作を理解することで応用力が身に付く",
        "Nodeを使ったファイル読み書きの実装をどのように行うのか学べる",
        "Nodeを使ったHTTP通信の実装をどのように行うのか学べる",
        "Nodeを使ったマルチスレッド処理をどのように行うのか学べる"
      ],
      "course_content": {},
      "requirements": [
        "基本的なPC操作",
        "入門レベルのJavaScript知識"
      ],
      "description": "Node.js をこれから学ぼうとしている人、学びなおそうとしている人を対象に応用力の効く実装ができるようになることを目指した講座です。\nNode.jsを使った開発を行うための環境準備から簡単な実装を行っていきます。本講座では知識の詰め込みだけでなく、演習を通して実装を一緒に行っていくことで「Node.jsを使えるようになる」ことを目指します。\n学習内容はNode.jsのCoreモジュールの中でも重要度が高いものを中心にその動作原理や利用方法などを詳しく学習していきます。これらの学習を通じて基礎力をつけることで、幅広く開発ができるようになります。\n\n\n【利用環境】\nNode.js 10\n\n\n【更新履歴】\n2021/05/10　v1.0.1　「パス文字列」の不備修正\n2019/05/02　v1.0.0　初版リリース",
      "target_audience": [
        "これからNodeを使った開発に携わる新入社員、若手社員",
        "Nodeを使った講座を受けたがもう少し詳しく学びたい若手社員、中堅社員",
        "一歩踏み込んだ技術習得をすることで他のエンジニアと差をつけたい技術者"
      ]
    },
    {
      "title": "Estrutura de Dados e Algoritmos em Python: O Guia Completo",
      "url": "https://www.udemy.com/course/estrutura-de-dados-e-algoritmos-python-guia-completo/",
      "bio": "Grafos, árvores, listas encadeadas, ordenação, pilhas, filas, deques e mais! Tudo o que você precisa saber!",
      "objectives": [
        "Aprenda o básico da programação em Python",
        "Entenda a notação Big-O para análise e comparativo entre algoritmos",
        "Crie vetores não ordenados e vetores ordenados",
        "Construa pilhas, filas e deques",
        "Implemente listas encadeadas simples e listas duplamente encadeadas do zero, bem como todas as suas operações",
        "Entenda e implemente os conceitos de recursão",
        "Implemente passo a passo os principais algoritmos de ordenação: bubble sort, selection sort, insertion sort, shell sort, merge sort e quick sort",
        "Analise e compare o desempenho entre algoritmos de ordenação e vetores ordenados",
        "Implemente passo a passo árvores binárias de busca e suas operações: inserção, pesquisa e exclusão",
        "Crie funções recursivas para travessia de árvores: travessia em pré-ordem, em ordem e pós-ordem",
        "Construa grafos utilizando orientação a objetos e matrizes de adjacência",
        "Implemente algoritmos para percorrimento de grafos, como a busca em profundidade e a busca em largura",
        "Faça a busca de menores rotas em grafos utilizando os seguintes algoritmos de Inteligência Artificial: busca gulosa e busca A Estrela (A*)",
        "Implemente o algoritmo de Dijkstra para encontrar menores rotas",
        "Implemente todos os algoritmos do zero sem o uso de bibliotecas"
      ],
      "course_content": {},
      "requirements": [
        "Lógica de programação, principalmente estruturas condicionais e estrutura de repetição"
      ],
      "description": "Estrutura de Dados é uma área da Ciência da Computação que estuda as técnicas computacionais para a organização e manipulação eficiente de quaisquer quantidade de informações. Em outras palavras, quando você desenvolver um sistema deve pensar em quais estruturas de dados devem ser utilizadas; sendo que a escolha de determinada estrutura de dados influenciará no desempenho do software. Em outras palavras, entender sobre estrutura de dados é essencial para garantir que os algoritmos sejam eficientes, tanto em tempo de execução quanto em métricas de avaliação de desempenho.\nBaseado nisso, nesse curso você vai aprender a teoria e implementará passo a passo as principais estruturas de dados existentes! Um dos diferenciais deste curso é que não usaremos bibliotecas prontas, ou seja, todas as implementações serão feitas do zero utilizando a linguagem de programação Python. Desta forma, além de entender a teoria você também terá um forte embasamento técnico sobre como implementar cada uma delas. E não há problema caso você seja novo(a) na linguagem Python, pois no início do curso você pode assistir mais de 2 (duas) horas de conteúdo com o básico dessa linguagem! Veja abaixo o que você vai aprender:\nNotação Big-O para análise de algoritmos\nVetores ordenados e não ordenados\nPilhas, filas e deques\nListas encadeadas simples, listas encadeadas com extremidade dupla e listas duplamente encadeadas\nRecursão\nAlgoritmos de ordenação: bubble sort, selection sort, insertion sort, shell sort, merge sort e quick sort\nÁrvores binárias de busca\nGrafos\nAlgoritmos de busca em grafos, como busca gulosa e busca A Estrela (A*) da área de Inteligência Artificial e o clássico algoritmo de Dijkstra\nTodos os exemplos serão desenvolvidos passo a passo e sem pressa, para que você consiga entender perfeitamente cada implementação. Além disso, faremos debug passo a passo nos códigos para que você entenda exatamente o que cada algoritmo faz! Ao final de cada módulo você pode responder questionários teóricos para revisar a teoria, bem como exercícios práticos com soluções. Este é o curso on-line mais fácil e didático, que você aprenderá tudo o que precisa saber sobre estrutura de dados e algoritmos em Python!",
      "target_audience": [
        "Alunos de graduação cursando disciplinas de Estrutura de Dados ou Programação",
        "Pessoas interessadas em como o armazenamento nos computadores funciona",
        "Pessoas interessadas em linguagens de programação",
        "Pessoas que desejam aprender como representar problemas computacionais utilizando estrutura de dados",
        "Profissionais que desejam um emprego na área da computação e farão entrevistas na área"
      ]
    },
    {
      "title": "Programação CLP e IHM Siemens Atualizado 2022",
      "url": "https://www.udemy.com/course/programacao-clp-e-ihm-siemens-atualizado-2020/",
      "bio": "Programação de CLPs e IHMs Siemens utilizando o Siemens TIA Portal V15.1 Atualizado 2022",
      "objectives": [
        "Entenda como um Controlador Lógico Programável funciona.",
        "Compreenda diagramas escritos na Linguagem Ladder.",
        "Crie lógicas de programação para CLP.",
        "Faça projetos de Automação Residencial com CLP.",
        "Faça projetos de Automação Industrial com CLP.",
        "Familiarizar-se com a ferramenta da Siemens TIA Portal."
      ],
      "course_content": {
        "Introdução": [
          "Apresentação do Curso",
          "Apresentação do Instrutor",
          "O Conteúdo do curso",
          "Como utilizar a Plataforma da Udemy",
          "Dúvidas sobre a instalação do Software",
          "Perguntas Frequentes **** IMPORTANTE **** LEIA"
        ],
        "Apresentação dos Equipamentos Siemens": [
          "Introdução",
          "Os CLPs e Módulos (Parte I)",
          "Os CLPs e Módulos (Parte II)",
          "Sistemas Distribuídos",
          "Sistemas Embarcados"
        ],
        "Introdução ao TIA Portal": [
          "Apresentação",
          "Como está dividido o Software",
          "BÔNUS - Baixando o TIA Portal",
          "BÔNUS - Baixando o TIA Portal (Descritivo)",
          "BÔNUS - Instalando o TIA Portal",
          "BÔNUS - Instalando o TIA Portal (Descritivo)",
          "BÔNUS - Instalando o PLC SIM (Descritivo)",
          "Abrindo o TIA Portal pela primeira vez",
          "O Portal View e o Project View",
          "TIA Portal Settings",
          "Como funciona o sistema de Janelas",
          "A Arvore do projeto",
          "Os Task Cards"
        ],
        "Projeto Máquina de Garrafas na Prática": [
          "Apresentação do Projeto",
          "Configurando o Hardware",
          "Tags Globais e Locais",
          "Data Tyes e Constantes",
          "Sobre Endereçamento Simbólico e Absoluto",
          "Tipos de Blocos",
          "As Networks",
          "Chamando um Bloco",
          "Fazendo Download e Monitorando",
          "Arquivando seu projeto"
        ],
        "Operações Binárias e Digitais": [
          "Apresentação",
          "Operação Série e Paralelo (AND e OR)",
          "Bobinas SET e RESET e Operação de Negação (NOT)",
          "Memórias de Clocks da CPU",
          "Contadores",
          "Temporizadores TON",
          "Funções Matemáticas (ADD)",
          "Comparações",
          "A Instrução MOVE",
          "Fazendo o FC Automático (Parte 1)",
          "Fazendo o FC Automático (Parte 2)",
          "Atualizando o FC Saídas",
          "Fazendo um FC Reutilizável (FC_Linearizador)",
          "Testando e Simulando o Projeto"
        ],
        "A Interface Homem Máquina (IHM)": [
          "Apresentação",
          "Adicionando IHM ao Porjeto",
          "A Interface do WinCC",
          "Os Controles",
          "Os Indicadores",
          "Simulando o Projeto"
        ],
        "Considerações finais": [
          "Agradecimento e considerações finais"
        ]
      },
      "requirements": [
        "Ter um computador com Windows."
      ],
      "description": "Neste curso o aluno aprenderá desde o básico da programação de CLPs e IHMs Siemens utilizando o TIA Portal da Siemens.\nSerão abordados os mesmos tópicos que são vistos no treinamento Oficial da Siemens o TIA PRO I\nAlém de conhecer os produtos que fazem parte do eco sistema da siemens, você aprendera como a siemens integrou seus sistemas de autmação de forma a deixar muito mais rápido o desenvolvimento de software.\nVamos desenvolver lógicas utilizando a linguagem Ladder, que é uma das linguagens mais utilizadas para a programação de CLP. Criar projetos e soluções para problemas reais, demandas que existem hoje no mercado. Vamos trabalhar todas as etapas de criação de um projeto, desde a descrição do problema, descrição de um passo-a-passo do programa até a simulação das lógicas no ambiente de desenvolvimento e o desenvolvimento de telas IHM para ser uma interface entre o operador e a máquina.\n\nA área de automação é uma área que está em grande crescimento e espero que este curso sirva de ponta pé inicial para sua entrada no mercado de trabalho servindo como um diferencial.\nAo concluir este curso você saberá entre outras coisas:\nConhecer os produtos da Siemens\nConhecer o ambiente de desenvolvimento o TIA Portal V15.1\nCriar Funções e Data Blocks\nCriar telas de IHMs\nInterpretar programas feitos na linguagem Ladder\nDesenvolver projetos de software clp de pequeno e médio porte\nDesenvolver e simular programas no TIA Portal V15.1\n\n*************** AVISO IMPORTANTE  1   ************\n\n\nEste curso é do básico ao intermediário, porém eu não considero ele um curso de quem está iniciando do ZERO ABSOLUTO.\nSe você está iniciando do ZERO ABSOLUTO, inicie com o meu outro curso que tem esta finalidade antes.\n\n\n**************************\n\n*************** AVISO IMPORTANTE  2 ************\n\n\nSó para lembrá-lo de que os softwares da siemens podem ter incompatibilidades difíceis de resolver, são softwares pagos e bem caros.\nIdeal é que você já tenha acesso na sua faculdade ou trabalho à computadores que já possua o software instalado.\nMas igual, como um bônus, no curso há aulas onde explico como baixar e instalar passo a passo, bem como resolver alguns problemas de incompatibilidade.\nMas o curso foi projetado para você aprender passo a passo mesmo sem o software deixando você preparado para quando tiver a chance de utilizar um ou em uma entrevista de emprego.\n\n\n**************************",
      "target_audience": [
        "Este curso de \"Programação TIA Portal com CLP Siemens (TIA PROI)\" destina-se a pessoas que já entendem o básico de como um PLC funciona e o básico de programação."
      ]
    },
    {
      "title": "Python dla początkujących",
      "url": "https://www.udemy.com/course/python-dla-poczatkujacych/",
      "bio": "Kurs z zadaniami praktycznymi od podstaw! Pierwszy kurs o Pythonie po polsku na platformie!",
      "objectives": [
        "Jak zainstalować Pythona",
        "Jakimi narzędzimi można pracować w Pythonie",
        "Podstawowe informacje o korzystaniu z Pythona interaktywnie i przez skrypt",
        "Podstawowe i zaawansowane typy danych",
        "Funkcje dostępne dla poszczególnych typów danych",
        "Wyświetlanie komunikatów i formatowanie napisów",
        "Instrukcja warunkowa IF",
        "Pętla WHILE i FOR",
        "Instrukcje break i continue",
        "Rozwiązywanie zadań z wykorzystaniem if, while i for po pythonowemu",
        "Moduły math, random, time, calendar, datetime, string",
        "Funkcje z parametrami i bez",
        "Wartości domyślne parametrów funkcji",
        "Zwracanie wartości z funkcji i korzystanie z funkcji",
        "Budowanie i korzystanie z własnych modułów",
        "Obsługa błędów i debuggowanie",
        "Wprowadzanie danych przez użytkownika i kontrola tych danych",
        "Czytanie i zapisywanie pliku",
        "Zadania do każdego tematu"
      ],
      "course_content": {
        "O kursie...": [
          "O kursie...",
          "Uwaga techniczna o kursie"
        ],
        "Wprowadzenie - pierwsze kroki": [
          "Python - pierwsze spotkanie - Jupyter Notebook Online - VIDEO",
          "Jupyter Notebook - LAB",
          "Jupyter Notebook - ODPOWIEDZI"
        ],
        "Instalacja Pythona i narzędzi": [
          "Instalacja i weryfikacja instalacji Pythona na Windows - VIDEO",
          "Instalacja i weryfikacja instalacji Pythona na Windows - LAB",
          "Instalacja i weryfikacja instalacji Pythona na Windows - ODPOWIEDZI",
          "Pierwszy skrypt w języku Python -VIDEO",
          "Pierwszy skrypt w języku Python - LAB",
          "Pierwszy skrypt w języku Python - ODPOWIEDZI",
          "Lokalna instalacja Jupyter Notebook - Uwaga techniczna",
          "Lokalna instalacja Jupyter Notebook -VIDEO",
          "Lokalna instalacja Jupyter Notebook - LAB",
          "Lokalna instalacja Jupyter Notebook - ODPOWIEDZI",
          "Edytor skryptów IDLE -VIDEO",
          "Python & IDLE - LAB",
          "Python & IDLE - ODPOWIEDZI",
          "Wielkie i małe litery, komentarze - VIDEO",
          "Wielkie i małe litery, komentarze - LAB",
          "Wielkie i małe litery, komentarze - ODPOWIEDZI",
          "IDLE - tips & tricks - VIDEO",
          "IDLE Tips&Tricks - LAB",
          "IDLE Tips&Tricks - ODPOWIEDZI",
          "Jupyter Notebook - tips & tricks - VIDEO",
          "Jupyter Notebook - tips & tricks - LAB",
          "Jupyter Notebook - tips & tricks - ODPOWIEDZI",
          "A może Spyder? - VIDEO",
          "Wprowadzenie do skryptowania - LAB",
          "Wprowadzenie do skryptowania - ODPOWIEDZI"
        ],
        "Podstawy wiedzy o języku": [
          "Funkcja print()",
          "Instrukcja print - LAB",
          "Instukcja print - ODPOWIEDZI",
          "Typ string cz.1 - VIDEO",
          "Typ string cz.1 - LAB",
          "Typ string cz.1 - ODPOWIEDZI",
          "Typ string cz.2 - VIDEO",
          "Typ string cz.2 - LAB",
          "Typ string cz.2 - ODPOWIEDZI",
          "Typ string cz.3 - VIDEO",
          "Typ string cz.3 - LAB",
          "Typ string cz.3 - ODPOWIEDZI",
          "Formatowanie napisów - VIDEO",
          "Formatowanie napisów - LAB",
          "Formatowanie napisów - ODPOWIEDZI",
          "Typy numeryczne - int i float - VIDEO",
          "Formatowanie napisów i typy numeryczne - LAB",
          "Formatowanie napisów i typy numeryczne - ODPOWIEDZI",
          "Typ i operatory logiczne - VIDEO",
          "Typ i operatory logiczne - LAB",
          "Typ i operatory logiczne - ODPOWIEDZI",
          "Zmienne Tips & Tricks. Kolejność działań - VIDEO",
          "Zmienne Tips & Tricks. Kolejność działań - LAB",
          "Zmienne Tips & Tricks. Kolejność działań - ODPOWIEDZI",
          "Napis jako tablica znaków - VIDEO",
          "Napis jako tablica znaków - LAB",
          "Napis jako tablica znaków - ODPOWIEDZI",
          "Dodatek: Kolejność działań i wyrażenia logiczne - LAB",
          "Dodatek: Kolejność działań i wyrażenia logiczne - ODPOWIEDZI"
        ],
        "Typy zaawansowane": [
          "Listy - VIDEO",
          "Listy - LAB",
          "Listy - ODPOWIEDZI",
          "Tuple (krotka) - VIDEO",
          "Listy, tuplets - LAB",
          "Listy, tuples - ODPOWIEDZI",
          "Dictionary",
          "Dictionary - LAB",
          "Dictionary - ODPOWIEDZI"
        ],
        "Sterowanie programem": [
          "Instrukcja warunkowa if - VIDEO",
          "Instrukcja warunkowa IF - LAB",
          "Instrukcja warunkowa IF - ODPOWIEDZI",
          "Instrukcja if / elif - VIDEO",
          "Instrukcja if / elif - LAB",
          "Instrukcja if/elif - ODPOWIEDZI",
          "Ternary operator - VIDEO",
          "IF - LAB",
          "IF - ODPOWIEDZI"
        ],
        "Pętle w Pythonie": [
          "Pętla while (while/else) - VIDEO",
          "Pętla while - LAB",
          "Pętla while - ODPOWIEDZI",
          "If w while - przykład: wyszukiwanie wzorca w ciągu liczb - VIDEO",
          "If w while - przykład: wyszukiwanie wzorca - LAB",
          "If w while - przykład: wyszukiwanie wzorca - ODPOWIEDZI",
          "Pętla while - przykład: ładowanie paczek do kontenera - VIDEO",
          "Pętla while - przykłady - LAB",
          "Pętla while - przykłady - ODPOWIEDZI",
          "Debuggowanie skryptu -VIDEO",
          "Debuggowanie skryptu -LAB",
          "Debuggowanie skryptu -ODPOWIEDZI",
          "Pętla for - VIDEO",
          "FOR - LAB",
          "FOR - ODPOWIEDZI",
          "Pętla for wykonywana zadaną ilość razy - range - VIDEO",
          "Pętla wykonywana określoną ilość razy - LAB",
          "Pętla wykonywana określoną ilość razy - ODPOWIEDZI",
          "Zagnieżdżona pętla for - VIDEO",
          "Zagnieżdżona pętla for - LAB",
          "Zagnieżdżona pętla for - ODPOWIEDZI",
          "Instrukcja break - VIDEO",
          "Instrukcja break - LAB",
          "Instrukcja break - ODPOWIEDZI",
          "Instrukcja continue - VIDEO",
          "Instrukcja continue - LAB",
          "Instrukcja continue - ODPOWIEDZI",
          "Dodatek: WHILE - LAB",
          "Dodatek: WHILE - ODPOWIEDZI",
          "Dodatek: FOR - LAB",
          "Dodatek: FOR - ODPOWIEDZI"
        ],
        "Typy - informacje zaawansowane": [
          "Trochę matematyki w Pythonie - VIDEO",
          "Trochę matematyki w Pythonie - LAB",
          "Trochę matematyki w Pythonie - ODPOWIEDZI",
          "Korzystanie z modułów - VIDEO",
          "Korzystanie z modułów - LAB",
          "Korzystanie z modułów - ODPOWIEDZI",
          "Moduł math - VIDEO",
          "Moduł math - LAB",
          "Moduł math - ODPOWIEDZI",
          "Moduł random - VIDEO",
          "Moduł random - LAB",
          "Moduł random - ODPOWIEDZI",
          "Moduły - przykład: generowanie hasła - VIDEO",
          "Moduły - przykład - LAB",
          "Moduły -przykład - ODPOWIEDZI",
          "Funkcje pracujące na tekstach - VIDEO",
          "Funkcje pracujące na tekstach - interpretacja wiersza - LAB",
          "Funkcje pracujące na tekstach - interpretacja wiersza - ODPOWIEDZI",
          "Moduł time i calendar - uwaga techniczna",
          "Moduł time i calendar - VIDEO",
          "Moduł time i calendar - LAB",
          "Moduł time i calendar - ODPOWIEDZI",
          "Typy timedelta, date i datetime - VIDEO",
          "Moduły - LAB",
          "Moduły - ODPOWIEDZI",
          "Moduł random - przykład: LOTTO - VIDEO",
          "Moduł random - przykład: KARTY - LAB",
          "Moduł random - przykład: KARTY - ODPOWIEDZI",
          "Pętle - przykład: Trójkąt Pascala cz.1 - VIDEO",
          "Funkcje tekstowe - przykład: Trójkąt Pascala cz.2 - VIDEO",
          "Pętle - gra w wojnę - LAB",
          "Pętle - gra w wojnę - ODPOWIEDZI",
          "Pętle - gra w wojnę cz.2 - LAB",
          "Pętle - gra w wojnę cz.2 - ODPOWIEDZI"
        ],
        "Funkcje": [
          "Funkcje - wprowadzenie - VIDEO",
          "Funkcje wprowadzenie - LAB",
          "Funkcje wprowadzenie - ODPOWIEDZI",
          "Funkcje - przykład: najbliższy dzień roboczy - VIDEO",
          "Funkcje - przykład - ile dni do końca roku - LAB",
          "Funkcje - przykład - ile dni do końca roku - ODPOWIEDZI",
          "Parametry funkcji - VIDEO",
          "Parametry funkcji - LAB",
          "Parametry funkcji - ODPOWIEDZI",
          "Parametry domyślne funkcji - VIDEO",
          "Parametry domyślne funkcji - LAB",
          "Parametry domyślne funkcji - ODPOWIEDZI",
          "Zwracanie wartości w funkcji - VIDEO",
          "Zwracanie wartości z funkcji - LAB",
          "Zwracanie wartości z funkcji - ODPOWIEDZI",
          "Funkcje - zmienna ilość parametrów - VIDEO",
          "Funkcje - zmienna ilość parametrów - LAB",
          "Funkcje - zmienna ilość parametrów - ODPOWIEDZI",
          "Funkcje - własna implementacja SWITCH - VIDEO",
          "Funkcje - LAB",
          "Funkcje - ODPOWIEDZI"
        ],
        "Operacje wejścia i wyjścia": [
          "Wprowadzanie danych przez użytkownika - VIDEO",
          "Wprowadzanie danych przez użytkownika - LAB",
          "Wprowadzanie danych przez użytkownika - ODPOWIEDZI",
          "Moduł os - VIDEO",
          "Moduł os - LAB",
          "Moduł os - ODPOWIEDZI",
          "Kontrola ścieżki do plliku - VIDEO",
          "Kontrola ścieżki do pliku - LAB",
          "Kontrola ścieżki do pliku - ODPOWIEDZI",
          "Odczyt z pliku - VIDEO",
          "Odczyt danych z pliku - LAB",
          "Odczyt danych z pliku - ODPOWIEDZI",
          "Zapis do pliku - VIDEO",
          "Wejście-wyjście - LAB",
          "Wejście - wyjście - ODPOWIEDZI"
        ]
      },
      "requirements": [
        "Zainteresowania informatyczne i programistyczne",
        "Podstawowa wiedza o programowaniu",
        "Dobra znajomość matematyki i logiki (jeżeli, warunki logiczne)",
        "Ścisły umysł",
        "Komputer z systemem Windows lub innym (ale kurs bazuje na Windows)"
      ],
      "description": "Kurs online, czy praktyczne zadania? Tutaj znajdziesz jedno i drugie! Do każdej lekcji otrzymujesz zestaw zadań i ich rozwiązania. Zaraz po obejrzeniu lekcji możesz utrwalić wiadomości rozwiązując te zadania. Niektóre są proste, a inne wymagają przemyślenia. W obu przypadkach możesz zajrzeć do rozwiązań i porównać je ze swoimi pomysłami.  8 godzin kursu, to tylko czas samego materiału VIDEO. Jeśli zdecydujesz się wykonywać zadania, spędzisz na nim więcej czasu. Myśl raczej w kategoriach dni niż godzin. Od samego patrzenia nie nauczysz się programowania, ale jeśli się spieszysz i chcesz tylko odświeżyć wiedzę o Pythonie, to owe 8 godzin wystarczy.\nTen kurs wchodzi w skład serii kursów o Pythonie. Wybierz właściwy, zależnie od stopnia znajomości Pythona i zainteresowań. Kontynuuj naukę na kolejnych kursach - z jednym autorem możesz nie tylko zacząć naukę, ale również rozwinąć się w zakresie algorytmiki, data science, machine learning, aplikacji webowych itd.\nJeśli dopiero się uczysz programować lub znasz już inny język programowania, ale nie Pythona, to ten kurs jest dla Ciebie. Dołącz do ponad 23.000 (!) studentów tego kursu!\nNie wiesz, czy Python to dobry język na start? Zapewniam, że jest. Nie bez powodu Python jest wykorzystywany w NASA,  nie bez powodu wsparcie dla Pythona jest implementowane w systemach w bazach danych, i nie bez powodu YouTube jest w dużej mierze zbudowany na Pythonie. Wielu programistów już korzysta z Pytona - może więc teraz kolej na ciebie?\nPo pierwsze jest to kurs dla początkujących. Zakładam, że to Twoje pierwsze kroki w Pythonie i nie wiesz o nim nic. Dlatego założyłem, że muszę pokazać wszystko. Od tego jak pobrać i zainstalować Pythona, jak wybrać narzędzia z których będziesz korzystać i jak napisać tradycyjny Hello World.\nPythona będziesz poznawać krok po kroku.\nNajpierw kilka podstawowych instrukcji,\npotem zmienne i typy zmiennych: napisy (string), typy numeryczne, operatory logiczne, listy, słowniki\npotem instrukcja warunkowa IF,\npętle FOR i WHILE,\nzobaczysz, jak szukać błędów w programie (debug)\npoznasz też wbudowane i dołaczane z innych modułów funkcje, nauczysz się jak pracować\nna zakończenie nauczysz się pisania własnych funkcji, przekazywania parametrów, pracy z plikami i obsługi błędów.\nWszystko zobaczysz w praktyce, nie ma tu slajdów, są za to ładne animacje. Nie ograniczam się tylko do pokazania jak coś tam działa. Staram się, żeby na kursie było dużo i szczegółowo wyjaśnionych przykładów. Stąd właśnie na kursie masz kilka lekcji które nie prezentują nowego elementu języka ale uczą myślenia jak Python. Będziesz na przykład zastanawiać się jak optymalnie załadować paczki na ciężarówkę, jak zaimplementować prostą grę, jak rozwiązać problemy matematyczne lub biznesowe ale zawsze po \"pytonowemu\". Będzie to świetny wstęp do algorytmiki niezbędnej w pracy programisty.\nKończąc ten kurs będziesz w stanie rozumieć Pythona i samodzielnie tworzyć programy rozwiązujące problemy natury informatycznej z wykorzystaniem tego języka. Pozwoli to rozpocząć naukę bardziej zaawansowanych tematów jak np.  przetwarzanie danych, implementowanie algorytmów, budowanie aplikacji webowych czy data science i machine learning.\nPamiętaj, że jako student Udemy możesz korzystać z klasowego forum i wsparcia trenera w zakresie kursu. Dostępne masz też całe repozytorium pytań zadanych wcześniej przez innych studentów z udzielonymi już odpowiedziami. Całkiem, jakbyśmy uczyli się w klasie :)\nTrzymam kciuki za twój sukces!\n\n\nISBN: 978-83-945846-5-8",
      "target_audience": [
        "Początkujący programiści, studenci, uczniowie",
        "Programiści innych języków programowania, zainteresowani poznaniem Pythona",
        "Osoby zainteresowane analizą danych i potrzebujące wiedzy o Python"
      ]
    },
    {
      "title": "Curso profesional en C#: Aprende de cero a avanzado",
      "url": "https://www.udemy.com/course/aprende-c-sharp-y-crea-aplicaciones-multiplataforma/",
      "bio": "POO, WebServices, HTML, CSS, ASP.NET, CRUD, ejercicios de codificación y dos proyectos (Sistema POS y Videojuegoconsola)",
      "objectives": [
        "Aprenderás la sintaxis de C# de principiante a avanzado",
        "Practica mientras aprendes con más de 50 ejercicios de codificación",
        "Aprenderás a desarrollar aplicaciones de escritorio",
        "Podrás desarrollar software para empresas",
        "Tendrás las bases necesarias en programación para desarrollar app nativas para Android e IOS",
        "Tendrás las bases necesarias en programación para desarrollar videojuegos junto a Unity",
        "Aprenderás programación orientada a objetos",
        "Desarrollarás una aplicación que podrás monetizar (Sistema punto de venta)",
        "Aprenderás las bases en HTML, CSS para trabajar con ASP .NET"
      ],
      "course_content": {
        "Introducción": [
          "Presentación",
          "Temario",
          "Instalación de Visual Studio 1",
          "Instalación de Visual Studio 2",
          "Instalación de Visual Studio 3",
          "Primeros pasos con C# 1",
          "Primeros pasos con C# 2",
          "Uso de recursos"
        ],
        "Sintaxis básica": [
          "Variables 1 (Clase teórica 1)",
          "Variables 1 (Clase teórica 2)",
          "Variables 2.1",
          "Variables 2.2",
          "Variables 3.1",
          "Variables 3.2",
          "Operadores aritméticos 1",
          "Operadores aritméticos 2",
          "Datos de entrada 1",
          "Datos de entrada 2",
          "Operadores relacionales",
          "Estructura selectiva If",
          "Estructura Selectiva If 2",
          "Estructura Selectiva If 3",
          "Ejercicio de programación",
          "Ejercicio resuelto"
        ],
        "Ejercicios de codificación Sintáxis básica": [
          "Impresión por consola",
          "Ejercicio de Variables 1",
          "Ejercicio de operaciones aritméticas básico",
          "Ejercicio múltiple de operaciones aritméticas",
          "Conversión de temperaturas",
          "Ejercicio de datos de entrada básico",
          "Ejercicio de datos de entrada básico 2",
          "Calcular promedio - Ejercicio de datos de entrada básico 3",
          "Área de un triángulo",
          "Ejercicio para calcular edad",
          "Ejercicio estructura if 1: Mayoría de edad",
          "Ejercicio estructura if 2: Número positivo o negativo",
          "Ejercicio estructura if 3: Validación de contraseña:"
        ],
        "Expresiones lógicas": [
          "Expresiones lógicas 1",
          "Expresiones lógicas 2",
          "Expresiones lógicas 3",
          "Estructura de control Switch",
          "Try Catch"
        ],
        "Ejercicios de estructuras lógicas, switch y Try Catch": [
          "Ejercicio de rango",
          "Ejercicio de evaluación de condiciones combinadas",
          "Ejercicio de conjunción: Boletos de entrada",
          "Ejercicio de disyunción: Descuento en compras",
          "Ejercicio de conjunción: Calificación y asistencia",
          "Ejercicio integrado (Conjunción y Disyunción): Validación de usuario VIP",
          "Ejercicio Switch 1: Días de la semana",
          "Ejercicio Switch 2: Calculadora",
          "Ejercicio Switch 3: Notas estudiante",
          "Ejercicio Try Catch 1: División de números",
          "Ejercicio Try Catch y Switch Case (Unificados): Conversión de cadena a número"
        ],
        "Ciclos": [
          "Ciclo for 1",
          "Ciclo for 2",
          "Foreach",
          "Ciclo While",
          "Ciclo Do While",
          "Break, Continue, Go to",
          "Ejercicio",
          "Ejercicio resuelto ciclos"
        ],
        "Ejercicios Ciclos": [
          "Ejercicio ciclo for 1: Suma de números pares",
          "Ejercicio ciclo for 2: Tabla de multiplicar",
          "Ejercicio ciclo for 3: Cuenta regresiva",
          "Ejercicio foreach 1: Recorrer cadena de texto",
          "Ejercicio foreach 2: Suma de dígitos en un número",
          "Ejercicio While 1: Conteo regresivo con While",
          "Ejercicio While 2: Suma de números hasta un límite",
          "Ejercicio Do While 1: Suma de números constante",
          "Ejercicio Do While 2: Ingreso de contraseña hasta la correcta",
          "Ejercicio Break: Recorrido de números",
          "Ejercicio Continue: Recorrido y omitir número",
          "Ejercicio Goto: Reemplazo de número por binario"
        ],
        "Métodos": [
          "Métodos 1 (Clase teórica)",
          "Métodos 2",
          "Métodos 3",
          "Ejercicio métodos (subprogramas)"
        ],
        "Ejercicios Métodos": [
          "Ejercicio 1: Calculadora básica",
          "Ejercicio 2: Calcular factorial",
          "Ejercicio 3: Potencia"
        ],
        "Arrays (Arreglos o Matrices)": [
          "Arrays 1 Unidimensionales",
          "Arrays 1.1 (Continuación) Unidimensionales",
          "Arrays 2 Bidimensionales",
          "Array Bidimensional ejemplo prático",
          "Arrays 3 Jagged I",
          "Arrays 3 Jagged II",
          "Arrays 4 Como parámetros a métodos"
        ]
      },
      "requirements": [
        "No necesitas tener conocimientos de programación. Aprenderás desde cero!"
      ],
      "description": "¡Conviértete en un experto en C#! Este curso abarca desde programación orientada a objetos hasta ASP.NET CORE, pasando por web services y capas de aplicación. Aprende a crear aplicaciones CRUD y ponte a prueba con desafiantes ejercicios de programación. Además, desarrollarás dos emocionantes proyectos: un sistema de punto de venta (POS) y un juego de consola.\n¡Domina C# y potencia tus habilidades de desarrollo!\nEn este curso el estudiante aprenderá lo necesario para programar sus propias aplicaciones y lo encaminará en lo que desee especializarse.\nC# es un lenguaje poderoso para construir aplicaciones de escritorio, apps móviles para Android e IOS, videojuegos y mucho más. Este curso esta dirigido a personas sin ningún conocimiento previo sobre programación. Es un curso de 0 a 100 en el cual se aprenderá desde lo más básico hasta temas muy avanzados. Luego desarrollaremos un sistema punto de venta que podrás perfeccionar y ofrecerlo a diferentes tipos de clientes.\nEstamos en la nueva actualización 2025 en la cual aprenderás conceptos nuevos para tu crecimiento profesional como el modelo de programación en capas en el que el objetivo primordial es la separación de la lógica de negocios de la lógica de diseño; un ejemplo básico de esto consiste en separar la capa de datos de la capa de presentación al usuario. La ventaja principal de este estilo es que el desarrollo se puede llevar a cabo en varios niveles y, en caso de que sobrevenga algún cambio, sólo se ataca al nivel requerido sin tener que revisar código entremezclado.",
      "target_audience": [
        "Todos aquellos que deseen aprender o mejorar sus habilidades en programación",
        "Estudiantes de ultimo año de preparatoria, universitarios, profesionales, estudiantes autodidactas"
      ]
    },
    {
      "title": "Python 3 COMPLETO",
      "url": "https://www.udemy.com/course/python-3-completo/",
      "bio": "Guia DEFINITIVO da linguagem de programação mais usada por analistas de dados e Machine Learning do momento!",
      "objectives": [
        "Aprender a usar o Python 3 profissionalmente.",
        "Criar jogos com Python, como jogo da velha e Blackjack!",
        "Aprender recursos avançados do Python, como o módulo de coleções e como trabalhar com timestamps!",
        "Aprender a usar programação orientada a objetos com classes!",
        "Compreender temas complexos, como decoradores.",
        "Compreender como usar o Jupyter Notebook e criar arquivos .py",
        "Obter uma compreensão de como criar GUIs iterativas no sistema Jupyter Notebook!",
        "Ter uma compreensão completa do Python desde o início!"
      ],
      "course_content": {
        "Sobre o curso": [
          "Review do curso",
          "Divulgação: Asimov Academy",
          "Divulgação: Dashboards Interativos com Python e Plotly",
          "Como abordar este curso",
          "Download Apostilas Jupyter (Notebooks)"
        ],
        "Configuração Python": [
          "Instalação do Python e Jupyter",
          "Problemas com Jupyter e Anaconda",
          "Seleção de IDEs",
          "Jupyter (iPython) Notebooks",
          "Recusos Adicionais",
          "Git and Github (Opcional)"
        ],
        "Conceitos básicos de estrutura de dados e objetos em Python": [
          "Números",
          "Quiz sobre Números",
          "Strings e Indexação",
          "FAQ - Strings",
          "Strings Quiz",
          "Formatação de impressão",
          "FAQ - Formatação de impressão",
          "Listas",
          "FAQ - Listas",
          "Quiz Listas",
          "Dictionaries",
          "FAQ - Dicionários",
          "Quiz dicionários",
          "Tuples",
          "Quiz Tuplas",
          "Arquivos",
          "Sets (conjuntos) e Booleanos",
          "Quiz Sets e Booleanos",
          "Recursos extras para mais prática básica",
          "Teste - Objetos e Estruturas básicas de dados",
          "Soluções - Teste - Objetos e Estruturas básicas de dados"
        ],
        "Operadores de comparação em Python": [
          "Operadores de comparação",
          "Operadores de comparação em cadeia",
          "Quiz Operadores de comparação"
        ],
        "Declarações em Python": [
          "Introdução às declaração em Python",
          "If, elif, e else",
          "For",
          "While",
          "Range()",
          "Compreensão em listas",
          "Testes sobre declarações",
          "Soluções sobe declarações"
        ],
        "Métodos e Funções": [
          "Funções",
          "Métodos",
          "Expressões Lambda",
          "Declarações aninhadas e escopo",
          "Tema de casa - Métodos e Funções",
          "Dicas: Métodos e Funções",
          "Tema de casa - Métodos e Funções - Soluções"
        ],
        "Primeiro Projeto": [
          "Primeiro projeto - Seção 1",
          "Primeiro Projeto - Revisão",
          "Primeiro Projeto - Ajuda",
          "Primeiro Projeto - Solução - pt. 1",
          "Primeiro Projeto - Solução - pt. 2"
        ],
        "Programação Orientada à Objetos - POO": [
          "POO - Parte 1 - Objetos",
          "POO - Parte 2 - Classes",
          "POO - Parte 3 - Métodos",
          "POO - Parte 4 - Herança",
          "OOP - Part 5 - Special Methods",
          "POO - Trabalho de casa",
          "POO - Trabalho de casa - Solução"
        ],
        "Lidando com erros e excessões": [
          "Erros e Excessões",
          "Lidando com excessões: try, except, finally",
          "Tema de casa - Erros e Excessões",
          "Tema de casa - Erros e Excessões - Solução"
        ],
        "Projeto 2": [
          "Revisão do Projeto 2",
          "Solução do projeto 2 - Parte 1",
          "Solução do projeto 2 - Parte 2",
          "Solução do projeto 2 - Parte 3"
        ]
      },
      "requirements": [
        "Acesse um computador com conexão à internet."
      ],
      "description": "Este curso foi publicado em 2018 e já não conta mais com atualizações.\n_____________\n\n\nTorne-se um Programador Python e aprenda uma das habilidades mais requisitadas nas áreas de ciência de dados e desenvolvimento Web!\n\nEste é o curso mais abrangente, porém direto, para a linguagem de programação Python da Udemy! Se você nunca programou antes, já conhece a sintaxe básica ou quer aprender sobre os recursos avançados do Python, este curso é para você!\nCom mais de 100 palestras e mais de 10 horas de vídeo, este curso vai ser seu guia definitivo para apreder de vez a linguagem! Ele inclui testes, trabalhos de casa, exercícios resolvidos, além de três grandes projetos para criar um portfólio de projetos em Python!\nEste curso lhe ensinará Python de maneira prática: cada palestra vem um screencast de codificação completo e uma apostila de códigos correspondente! São dezenas de apostilas por escrito! Aprenda da maneira que for melhor para você!\nE o melhor: você terá acesso vitalício à todo este conteúdo! E este curso também vem com uma garantia de reembolso de 30 dias. Se você não estiver satisfeito de alguma forma, receberá seu dinheiro de volta. Além disso, você terá acesso aos Notebooks como um agradecimento por experimentar o curso!\n\n\nEntão, o que você está esperando? Aprenda Python de uma vez, progrida em sua carreira e aumente seus conhecimentos, tudo de maneira prática e divertida!",
      "target_audience": [
        "Iniciantes que nunca programaram antes.",
        "Programadores que estão interessados em migrar para o Python.",
        "Programadores intermediários de Python que desejam nivelar suas habilidades."
      ]
    },
    {
      "title": "Go (Golang): Explorando a Linguagem do Google",
      "url": "https://www.udemy.com/course/curso-go/",
      "bio": "Go (Golang) é uma linguagem moderna, legível, concorrente e é extremamente rápida. Perfeita para aplicações Web!",
      "objectives": [
        "Aprender os fundamentos da linguagem",
        "Conhecer as estrutura de controles, operadores, funções, ponteiros, struct, interface, polimorfismo...",
        "Boas práticas de programação",
        "Usar banco de dados com Go (Criar tabela, transação, inserir, alterar, excluir e consultar)",
        "Criar um Webservice básico com Go"
      ],
      "course_content": {
        "Introdução": [
          "Visão Geral do Curso",
          "Baixando a Apostila",
          "Links: Apostila & Repositório",
          "Go: História e Características",
          "Usando o terminal",
          "Terminais"
        ],
        "Configuração do Ambiente": [
          "Aviso importante aos usuários de Windows",
          "Windows e Mac",
          "Linux"
        ],
        "Fundamentos": [
          "Ambiente GO: GOROOT & GOPATH",
          "Atualização da execução do GO",
          "Primeiro Programa em Go",
          "Explorando os Comandos do Terminal",
          "Constantes e Variáveis",
          "Imprimindo Valores no Console",
          "Tipos Básicos",
          "Tipos Básicos: Os Zeros",
          "Conversão entre Tipos Básicos",
          "Funções Básicas",
          "Operadores Aritméticos",
          "Operadores de Atribuição",
          "Operadores Relacionais",
          "Operadores Lógicos",
          "Operadores Unários",
          "Operador Ternário???",
          "Ponteiros em Go"
        ],
        "Estruturas de Controle": [
          "If/Else",
          "If/Else If",
          "If com Init",
          "Laço For",
          "Switch #01",
          "Switch #02",
          "Resposta do Desafio Switch",
          "Switch #03"
        ],
        "Array/Slices/Map": [
          "Trabalhando com Arrays",
          "Percorrendo Arrays com For (Range)",
          "Conhecendo o Slice",
          "Construindo Slices com Make",
          "Usando Mesmo Array Interno",
          "Slice: Usando Append e Copy",
          "Trabalhando com Maps #01",
          "Trabalhando com Maps #02",
          "Maps Aninhados"
        ],
        "Funções": [
          "Funções Básicas",
          "Pilha de Funções",
          "Retorno Nomeado",
          "Armazenar Funções em Variáveis",
          "Passar Função como Parâmetro",
          "Funções Variáticas #01",
          "Funções Variáticas #02",
          "Closure",
          "Recursividade",
          "Recursividade (Simples)",
          "Defer",
          "Passando Ponteiro para Função",
          "Função Init"
        ],
        "Sistema de Tipos": [
          "Usando Struct",
          "Struct Aninhada",
          "Métodos em Structs",
          "Pseudo-Herança em Structs",
          "Tipo Personalizado",
          "Usando Interfaces #01",
          "Usando Interfaces #02",
          "Composição de Interfaces",
          "Tipo Interface",
          "Convertendo uma Struct em JSON"
        ],
        "Pacotes": [
          "Executando Múltiplos Arquivos no Windows",
          "Atualização do Go",
          "Pacotes & Visibilidade",
          "Criando um Pacote Reutilizável",
          "Criando & Instalando um Pacote do Github"
        ],
        "Concorrência": [
          "Concorrência vs Paralelismo",
          "Curiosidade: Número de CPUs",
          "Conhecendo a Goroutine",
          "Conhecendo o Channel (Canal)",
          "Usando Goroutine e Channel",
          "Cuidado com os Deadlocks",
          "Channel com Buffer",
          "Channel: Usando Range e Close",
          "Padrão de Concorrência: Generators",
          "Criando um Pacote Reutilizável",
          "Padrão de Concorrência: Multiplexador",
          "Estrutura de Controle: Select",
          "Multiplexador com Select"
        ],
        "Testes": [
          "Teste Unitário Básico",
          "Criando Dataset para os Testes",
          "Tipo de Arquitetura e os Testes",
          "Gerando Relatório de Cobertura de Testes"
        ]
      },
      "requirements": [
        "Ter noção básica de como usar um PC",
        "Ter conhecimento básico de lógica de programação"
      ],
      "description": "Go é a linguagem desenvolvida pelo Google para resolver problemas da escala que a gigante da tecnologia tem e, sem dúvida, essa linguagem também vai ajudar a turbinar as suas aplicações.\nEle é uma das poucas linguagens que surgiu depois dos processadores com múltiplos núcleos e isso fez com que a linguagem tenha mecanismo de concorrência no cerne da linguagem, o que a torna ideal para aplicações na qual são exigidos um alto grau de desempenho.\nGo é uma linguagem enxuta, moderna, compilada (muito rápida), que tem vários recursos que irão te ajudar nos desafios de desenvolver uma aplicação escalável!\nNão perca tempo e se matricule para aprender essa linguagem fantástica!",
      "target_audience": [
        "Alunos que desejam aumentar os seus conhecimentos em programação",
        "Programadores que desejam aprender a linguagem GO",
        "Programadores Web que desejam criar aplicações escaláveis"
      ]
    },
    {
      "title": "Programando em ADVPL - Aprenda do Zero",
      "url": "https://www.udemy.com/course/programando-em-advpl-aprenda-do-zero/",
      "bio": "Aprenda a programar do jeito certo na linguagem de programação do Protheus",
      "objectives": [
        "O que é uma linguagem de programação",
        "Instalar e configurar o VSCode e o TDS",
        "Lógica de Programação",
        "Comandos e funções em ADVPL",
        "Pontos de entrada padrões do sistema",
        "Debug em um código ADVPL",
        "Manipular bases de dados com ADVPL"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "A linguagem ADVPL",
          "Sobre o ADVPL",
          "Para ler: Uma breve história do ADVPL"
        ],
        "Instalação e Configuração do TDS": [
          "Introdução ao TDS",
          "Instalando o TDS passo a passo",
          "Configurando o Servidor",
          "Perspectivas e Includes",
          "Preferências no TDS",
          "Utilizando o TDS para criar o Olá Mundo!"
        ],
        "Instalação e Configuração do VSCode": [
          "Introdução ao VSCode",
          "Instalação e configuração do VSCode",
          "TOTVS Developer Studio para VSCode",
          "Utilizando o VSCode para criar o Olá Mundo"
        ],
        "Lógica de Programação ADVPL": [
          "Lógica de Programação",
          "Tipos e escopos de funções",
          "Tipos de dados",
          "Contexto de variáveis",
          "Contexto de variáveis parte 2",
          "Operadores matemáticos",
          "Operadores relacionais e de atribuição",
          "Estrutura de decisão - IF",
          "Estrutura de decisão - CASE",
          "Estrutura de repetição - FOR",
          "Estrutura de repetição - WHILE"
        ],
        "Arrays e Bloco de Códigos": [
          "Utilizando Arrays",
          "Manipulação de Arrays",
          "Utilizando Bloco de código"
        ],
        "Jogo de adivinhar número em ADVPL": [
          "Jogo de adivinhação - Introdução",
          "Criando nosso jogo em ADVPL",
          "Incrementando mais recursos ao jogo e finalizando"
        ],
        "Acesso a Banco de dados": [
          "Acessando tabelas do banco de dados",
          "Índices",
          "Consultas SQL com ADVPL",
          "Manipulando dados com Reclock",
          "Manipulando dados com MSExecAuto"
        ],
        "Programa de atualização": [
          "Criando um programa de atualização de dados",
          "Utilizando MBrowse",
          "Utilizando FilBrowse",
          "Criando Funções",
          "Utilizando BrwLegenda"
        ],
        "Desenvolvendo Customizações": [
          "Desenvolvendo customizações no Protheus",
          "Programando um ponto de entrada",
          "Debug",
          "Códigos desenvolvidos no curso",
          "Driblando a rotina Formulas! (Executando nossos fontes)"
        ],
        "Orientação a Objetos com ADVPL": [
          "Introdução a Orientação a Objetos",
          "Fundamentos de Orientação a Objetos",
          "Estrutura Orientada a Objetos",
          "Objeto em Programação",
          "Criando a Classe no ADVPL",
          "Métodos Construtores",
          "Testando o fonte com Orientação a Objetos"
        ]
      },
      "requirements": [
        "Ter realizado o curso: Prothes 12 - Arquitetura e instalação na prática",
        "Conhecimento em informática",
        "Vontade de aprender"
      ],
      "description": "O sistema ERP Protheus da TOTVS está presente em inúmeras empresas de vários segmentos pelo Brasil. Aprender ADVPL se torna uma tarefa um tanto difícil para quem nunca teve contato com a linguagem, pensando nisso, a RCTI resolveu dar continuidade no curso de Arquitetura e instalação do Protheus 12 com um curso completo de ADVPL do Zero!\nNo curso você vai iniciar instalando a IDE TOTVS Developer Studio, utilizada para desenvolver os programas em ADVPL e também vai instalar e configurar a IDE Microsoft Visual Studio Code, caso prefira utiliza-la. Depois vamos aprender como utilizar as perspectivas da ferramenta, até criarmos o nosso primeiro programa em ADVPL, o famoso \"OLÁ MUNDO\". A partir daí teremos aulas práticas para você fixar de maneira fácil cada conteúdo passado no curso.\n\nCaso você não tenha muita familiaridade com estes assuntos ou com os nomes ditos aqui, não se preocupe, você vai aprender tudo o que precisa para continuar seus estudos sobre o Protheus e se tornar um profissional altamente qualificado no mercado de trabalho.\nEste curso é avaliado em um alto valor, mas agora você poderá aprender com um valor totalmente simbólico.\nO que você está esperando? Inscreva-se no curso e aproveite tamanha oportunidade e qualquer duvida, estarei a disposição.\nInstagram: RCTItreinamentos\n* Protheus, ADVPL e TOTVS são produtos e marcas registradas de  propriedade da TOTVS S.A. Logotipos TOTVS e Microsiga são de propriedade  da TOTVS S.A. *",
      "target_audience": [
        "Universitários da área de tecnologia",
        "Gestores de TI",
        "Programadores que queiram aprender outra linguagem",
        "Iniciantes em programação"
      ]
    },
    {
      "title": "JAVA: Empieza desde cero con IntelliJ",
      "url": "https://www.udemy.com/course/java-empieza-desde-cero-con-intellij/",
      "bio": "Aprende fácil y divertido todo lo necesario para dominar Java.",
      "objectives": [
        "Aprende fácil y divertido todo lo necesario para dominar Java.",
        "Aprenderás a instalar los programas necesarios para codificar en Java.",
        "Sabrás utilizar todos los Tipos de Datos que hay en Java.",
        "Sabrás utilizar todas las Variables que hay en Java.",
        "Crearás código utilizando todas las Estructuras de Control de Java.",
        "Aprenderás a definir funciones.",
        "Aprenderás a utilizar todas las clases de Java."
      ],
      "course_content": {
        "Introducción": [
          "Bienvenido a Numpi",
          "Instalación SDK",
          "Instalación IntelliJ DEA",
          "Creando nuestra primera aplicación",
          "Ejemplo Hola Mundo en Java"
        ],
        "Variables": [
          "Introducción a las variables",
          "Ejemplos de variables",
          "Reglas para definir una variable",
          "Introducción a los primitivos",
          "Primitivos numéricos enteros",
          "Primitivos numéricos de punto flotante",
          "Primitivo char o caracter",
          "Char y caracteres especiales",
          "Primitivo boolean o lógico binario",
          "Sistemas númericos: decimal, binario, octal y hexadecimal",
          "Sistemas númericos y entradas de datos desde ventana de dialogo",
          "Sistemas númericos y entradas de datos desde el terminal",
          "Conversión de cadenas a primitivos",
          "Conversiones de tipo primitivos a cadenas",
          "Conversiones entre tipos primitivos"
        ],
        "Strings": [
          "Introducción a los String",
          "Creando objeto String en la literal vs operador new",
          "Concatenando String",
          "Inmutabilidad",
          "Métodos importantes del Objeto String 1",
          "Métodos importantes del Objeto String 2",
          "Obtener la extensión de un archivo"
        ],
        "Operadores": [
          "Introducción a los operadores",
          "Operadores Aritméticos",
          "Operadores de Asignación",
          "Operadores Unarios",
          "Operadores de Incremento y Decremento",
          "Operadores Relacionales",
          "Operadores Lógicos",
          "Precedencia en los operadores lógicos",
          "Ejemplo Login y uso de operadores lógicos",
          "Operador Ternario",
          "Operador Ternario Número mayor",
          "Operador Instanceof (Tipo de)",
          "Operador Instanceof con tipos abstractos",
          "Precedencia de los operadores",
          "Modo depuración paso a paso"
        ],
        "Terminaste": [
          "Nos vemos en clase",
          "Clase extra"
        ]
      },
      "requirements": [
        "No se necesitan requisitos previos, el curso esta diseñado para aprender desde cero.",
        "Muchas ganas de aprender."
      ],
      "description": "¡Empieza siendo un programando en JAVA!\n\n\nSi eres un estudiante o profesionista que quiere potenciar su carrera profesional te tengo una buena noticia:\n¡Encontraste el curso indicado!\n\n\n¿Sientes que tu carrera profesional esta estancada?\n¿Tu perfil no destaca entre el de los demás?\n¿Sientes que en la escuela no aprendiste nada útil para el mundo laboral?\n¿Crees que Excel es la única herramienta para analizar datos y hacer gráficas?\n\n\nNo tener las habilidades correctas para esta nueva era tecnológica es la raíz de todos estos males.\n\n\nActualmente el mundo está lleno de computadoras y es fundamental saber como hablar con ellas y darles instrucciones. Esta es una habilidad que los empleadores valoran cada día más.\n\n\nSi utilizas Java para programar aplicaciones o sitios web serás una persona invaluable para cualquier empresa.\n\n\nYo sé que se de lo difícil que es crecer profesionalmente. También sé lo frustrante que es ver que todos ascienden menos tú.\n\n\nPara tu fortuna este curso de Java desde cero te enseñará a programar en JAVA como un experto de una manera fácil y te dará una habilidad para destacar entre los demás.\n\n\nSoy Abraham, tengo 7 años de experiencia programando en el JAVA y esta habilidad fue la que me permitió catapultar mi carrera profesional hacia el éxito.\n\n\nEl programar con Java me ayudó a conseguir trabajos mejor pagados.\n¿Qué crees?\nEl 89% de los estudiantes del curso también ha mejorado su situación laboral.\n\n\n¡Inscríbete ahora y desarrolla esa habilidad que te hace falta!\n\n\nTe garantizo que este curso es todo lo que necesitas para aprender a programar en Java. Estos son los pasos del éxito:\n\n\n1. Tomar todas las lecciones del curso.\n2. Realizar los ejercicios prácticos.\n3. Estarás listo para programar en JAVA en cualquier caso de la vida real.\n\n\n\n\nPreguntas frecuentes:\n1. ¿Necesito un software especializado o de pago para poder tomar el curso?\nR: No.\n2. ¿Dónde obtengo la paquetería de JAVA?\nR: En el curso te enseñamos de donde descargarla y como instalarla.\n3. ¿Necesito algún conocimiento previo para tomar el curso?\nR: No, el curso esta diseñado para empezar desde cero y llevarte de la mano por cada uno de los temas.\n4. ¿Qué podré hacer después del curso?\nR: Programar en JAVA como un experto.\n\n\n\n\nDeja de perder las oportunidades laborales por no tener mas habilidades.\nAñádete las habilidades que te harán brillar aprendiendo a programar en JAVA.\n\n\n\n\nEn cuanto el mercado laboral reconozca que eres un experto JAVA tu carrera profesional comenzará a despegar.\nSuena a \"truco de magia\" pero la realidad es que tendrás una habilidad que es altamente demandada por las empresas de software. Un programador Jr. en JAVA gana $70,000 USD al año en promedio.\n\n\n\n\nDespués de tomar este curso tu carrera profesional cambiará totalmente porque tendrás las herramientas necesarias para hacer propuestas de alto impacto basadas en datos. Serás del club de los profesionistas que tienen buenos ingresos.\n\n\n¡INSCRÍBETE AHORA y empieza a potenciar tu carrera!",
      "target_audience": [
        "Profesionistas que quieran aprender a programar en Java.",
        "Desarrolladores que quieran aprender Java de una manera ágil, completa y sencilla.",
        "Profesionistas que requieran desarrollar en Java."
      ]
    },
    {
      "title": "Fundamentos de Programação",
      "url": "https://www.udemy.com/course/programacaodozero/",
      "bio": "Aprenda os fundamentos básicos e lógica de programação",
      "objectives": [
        "Dominar o básico da programação para estabelecer as fundações nas quais você irá crescer e desenvolver a sua carreira.",
        "Aprender a programar utilizando a linguagem de programação C#.",
        "Abordar o conteúdo na prática e aplicá-lo na resolução de problemas reais.",
        "Desenvolver lógica de programação e algoritmos",
        "Desenvolver curiosidade natural sobre a sua área de atuação e realizar pesquisas por conta própria, para acompanhar o mercado e estar sempre atualizado."
      ],
      "course_content": {
        "Primeiros passos": [
          "Introdução ao Módulo 1",
          "Avaliação",
          "Como tirar dúvidas",
          "O que é programação?",
          "Lógica de programação",
          "Algoritmos",
          "Por que vamos usar C#?",
          "Instalando o Visual Studio",
          "Instalando dot.net",
          "Como funciona o C# e o dot.net",
          "Finalização do Módulo 1"
        ],
        "Escrevendo os seus primeiros códigos": [
          "Introdução ao Módulo 2",
          "Terminal (Básico)",
          "Hello World - Brian Kernighan",
          "Instalando plugins - Visual Studio Code",
          "Console.WriteLine e Console.ReadLine",
          "WriteLine / ReadLine",
          "Comentários",
          "Optimização de criação de variáveis superficialmente",
          "IF e else, comparando os números superficialmente",
          "For",
          "Exercício - 01",
          "Correção do Exercício - 01",
          "Exercício - 02",
          "Correção do Exercício - 02",
          "Exercício - 03",
          "Correção do Exercício - 03",
          "Exercício - 04",
          "Correção do Exercício - 04",
          "Finalização do Módulo 2"
        ],
        "Tipos de dados e operadores": [
          "Introdução ao Módulo 3",
          "Tipo de dados e valores",
          "Casting",
          "Variáveis e Constantes",
          "Regras na criação de variáveis",
          "Tipo referencia e tipo valor memoria Heap e Stack (Teoria)",
          "Tipo referencia e tipo valor memoria Heap e Stack (Prática)",
          "Enumeradores",
          "Operadores",
          "Saída de dados - Concatenação e chaves",
          "Entrada de dados",
          "Conversões",
          "Exercício - 01",
          "Correção do Exercício - 01",
          "Exercício - 02",
          "Correção do Exercício - 02",
          "Exercício - 03",
          "Correção do Exercício - 03",
          "Exercício - 04",
          "Correção do Exercício - 04",
          "Finalização do Módulo 3"
        ],
        "Instrução de decisão e Repetição": [
          "Introdução ao Módulo 4",
          "Decisão binária",
          "Switch...case",
          "For",
          "While",
          "Do While",
          "Break e Continua",
          "Exercício - 01",
          "Correção do Exercício - 01",
          "Exercício - 02",
          "Correção do Exercício - 02",
          "Exercício - 03",
          "Correção do Exercício - 03",
          "Exercício - 04",
          "Correção do Exercício - 04",
          "Finalização do Módulo 4"
        ],
        "Funções/Métodos": [
          "Introdução ao Módulo 5",
          "Esclarecendo uma função/método",
          "Um pouco mais sobre parâmetros e argumentos",
          "Passagem por referência",
          "Valores por omissão",
          "Recursividade",
          "Esclarecendo a usabilidade dos métodos",
          "Exercício",
          "Correção do Exercício",
          "Finalização do Módulo 5"
        ],
        "Vetores e Matrizes": [
          "Introdução ao Módulo 6",
          "Vetores (Teoria)",
          "Vetores (Prática)",
          "Acessando e alterando dados de um vetor",
          "Trabalhando com For e Vetores",
          "Copiando um vetor",
          "Foreach",
          "Matrizes",
          "Redimencionamento de vetores",
          "Algoritmo ordenação de vetores (Parte 1)",
          "Algoritmo ordenação de vetores (Parte 2)",
          "A importância da matemática na programação e busca binária",
          "Exercício - 01",
          "Correção do Exercício - 01",
          "Exercício - 02",
          "Correção do Exercício - 02",
          "Exercício - 03",
          "Correção do Exercício - 03",
          "Exercício - 04",
          "Correção do Exercício - 04",
          "Exercício - 05",
          "Correção do Exercício - 05",
          "Finalização do Módulo 6"
        ],
        "Strings/Textos e Alias": [
          "Introdução ao Módulo 7",
          "Compondo textos usando Char e For",
          "O que são ALIAS?",
          "Strings são imutáveis",
          "Comparação de strings",
          "Manipulação de String",
          "Classe String",
          "StringBuilder",
          "Exercício - 01",
          "Correção do Exercício - 01",
          "Exercício - 02",
          "Correção do Exercício - 02",
          "Finalização do Módulo 7"
        ],
        "Tratamentos de erros com Exceções Try Catch e Finally": [
          "Introdução ao Módulo 8",
          "2. Exceções padrões",
          "Exceções personalizadas",
          "Exercício",
          "Correção do Exercício",
          "Finalização do Módulo 8"
        ],
        "Programas com interface gráfica GUI": [
          "Introdução ao Módulo 9",
          "Instalando IDE Visual Studio",
          "Criando um projeto do zero",
          "Primeiros controles",
          "Capturando o nome digitado",
          "Entendendo o arquivo Design.cs",
          "Calculadora simples",
          "Melhorando a calculadora",
          "RadioButton",
          "Eventos do RadioButton",
          "Validando campos vazios",
          "Validando caracteres especiais",
          "Conectando os 2 métodos",
          "Criando uma lista de compras",
          "Lista encadeada e revisando vetor",
          "Exercício - 01",
          "Correção do Exercício - 01",
          "Exercício - 02",
          "Correção do Exercício - 02"
        ],
        "Bônus": [
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Não é necessário ter experiência com programação. Neste curso, você aprenderá a programar do zero, tendo uma base sólida teórica e prática para ser um desenvolvedor de sucesso!",
        "Necessário ter conhecimento básico em matemática (Soma, Adição, Subtração, Multiplicação)"
      ],
      "description": "Domine uma das linguagens de programação mais populares do mercado de trabalho e aprenda a escrever códigos absolutamente do zero. Use as melhores práticas do mercado e comece a pensar como um programador de sucesso.\nAqui você irá encontrar o melhor e mais didático curso sobre Programação. Se você está iniciando nesta área, você irá aprender os fundamentos básicos da progamação, além de elaborar vários projetos reais que irão te auxiliar na criação de seu portfólio para conseguir aquele emprego ou promoção que você tanto sonha ou precisa. Caso você esteja na faculdade este curso será como um reforço aos seus estudos, para você aprimorar sua lógica e raciocínio e impulsionar sua carreira de programador. No entanto, se você já sabe programar e codificar sites, desenvolver interfaces, entre outros. Este curso será ótimo para que você possa relembrar elementos básicos da programação e essenciais para aperfeiçoar seu conhecimento e te auxiliar na criação de seus projetos.\nMinha maior satisfação é poder colaborar na jornada daqueles que desejam melhorar suas vidas por meio da educação e busca pelo conhecimento. Ficarei muito feliz se eu puder fazer parte e colaborar também com sua jornada, oferecendo este curso nesta fantástica área de conhecimento que é a Computação e o desenvolvimento de software.",
      "target_audience": [
        "Desenvolvedores iniciantes. Este curso é especialmente indicado para quem deseja adquirir uma base sólida, tanto teórica quanto prática de desenvolvedor, utilizando a linguagem C#. O curso também é super indicado para quem precisa de reforço aos conteúdos da faculdade ou para quem deseja aprimorar seus conhecimentos na área de atuação."
      ]
    },
    {
      "title": "Master en C# de Cero (Windows Form - Xamarin - APP Consola )",
      "url": "https://www.udemy.com/course/c-la-guia-definitiva-aprende-a-programar-de-cero/",
      "bio": "Aprende con nosotros a programar y a conocer todo el ecosistema de C# crea App de Escritorio , Web y Movil",
      "objectives": [
        "Estructuras básicas de control y a resolver problemas.",
        "Conoceremos las clases para manejar directorios",
        "Aprenderemos a hacer una interfaz gráfica de usuario (GUI)",
        "Los controles básicos de C#",
        "Conocer propiedades y eventos de los controles",
        "Aplicar las estructuras de control y de datos en los controles de C#",
        "Realizar operaciones desde nuestra aplicación C# con SQL Server"
      ],
      "course_content": {
        "Variables , Tipos de Datos y Estructuras Secuenciales": [
          "Grupo de Facebook para resolver las consultas de los Estudiantes del Curso",
          "Instalación",
          "¿Como crear un proyecto en Visual Studio 2017?",
          "Como crear un proyecto en Visual Studio 2015",
          "Variables y Tipos de Datos Enteros",
          "Tipos de datos que soportan decimales",
          "Operaciones básicas con números",
          "Operaciones básicas con cadena",
          "Convertir de un tipo de dato a otro",
          "Ejercicio Suma",
          "Ejercicio Área de un Triángulo",
          "Ejercicio Comercial",
          "Tarea 1 : Estructuras Secuenciales"
        ],
        "Estructuras Selectivas": [
          "Teoría de Estructuras Selectivas",
          "Ejercicio Edad",
          "Ejercicio Comercial",
          "Ejercicio es Par o Impar",
          "If - else anidado",
          "Estructura Switch",
          "Ejercicio con la estructura Switch",
          "Ejercicio Switch",
          "Tarea 2"
        ],
        "Estructuras Repetitivas": [
          "Acumuladores Contadores",
          "While",
          "Ejercicio While 1",
          "Ejercicio While 2",
          "Ejercicio While 3 (Uso del break)",
          "Do While",
          "Estructura For",
          "Tabla de Multiplicar",
          "Ejercicio Listado de Números pares entre rango",
          "Tarea 3"
        ],
        "Array": [
          "Introducción a los Array",
          "Teoría de los Array",
          "Formas de imprimir los elementos de un array",
          "Formas de definir un Array y Matrices (Array de Array)",
          "Llenar un array dinamicamente",
          "Ejercicio Array",
          "Ejercicio Array con contadores",
          "Ejercicio Array usando acumuladores y contadores",
          "Ejercicio Array dígitos",
          "Tarea 4 Array"
        ],
        "Propiedades y métodos de los tipos de datos": [
          "Propiedad Length , metodo Trim , TrimStart y TrimEnd (string)",
          "Propiedad ToLower y ToUpper (string)",
          "ToCharArray , Substring , Remove y StartsWith (string)",
          "EndWidth , Contains y Split (string)",
          "Propiedades Numeros (short , int y long)",
          "Clase Math",
          "IndexOf , Find y FindAll (Array)",
          "FindexIndex , FindLast",
          "TimeSpan y propiedades",
          "Time Span metodos"
        ],
        "Métodos y Funciones": [
          "¿Como crear una función?",
          "Ejercicio Calculadora Función",
          "Ejercicio Sueldo con Funciones",
          "Métodos",
          "Imprimir valores de un Array con un Método",
          "Ejercicio imprimir un rango de numero con un Método",
          "Tarea 5"
        ],
        "Programación Orientada a Objetos": [
          "Introducción Programación Orientada a Objetos",
          "Clases y Propiedades",
          "Métodos de una clase.",
          "Método Estático",
          "Sobrecarga de Métodos",
          "Teoria Constructores",
          "Constructor",
          "Teoría Encapsulamiento",
          "Metodos get y set",
          "Ejercicio01 POO",
          "Ejercicio02 POO",
          "Ejercicio03 POO",
          "Herencia",
          "Herencia Practica",
          "SobreEscritura de Métodos",
          "SobreEscritura Practica",
          "Métodos y clases Abstractas",
          "Práctica clases Abstractas",
          "Polimorfismo",
          "Ejercicio 01 Herencia Parte 1",
          "Ejercicio 01 Pruebas y explicación del modificador ReadOnly"
        ],
        "Colecciones y Excepciones": [
          "Introducción a las listas",
          "Aplicación de las listas",
          "Listas vs Array",
          "Listas Propiedades y Métodos",
          "ArrayList",
          "Pilas",
          "Diccionarios",
          "Busquedas y Eliminacion en Listas",
          "Introducción a las excepciones",
          "IndexOf , LastIndexOf (string)",
          "Exception y Finally"
        ],
        "Manejo de Directorios y Archivos": [
          "Propiedades y métodos principales de los directorios",
          "Clase File",
          "Listar y mover directorios",
          "Metodo Move , ReadAllBytes y WriteAllBytes",
          "WriteAllText , ReadAlltext y FileInfo"
        ],
        "Propiedades de los Controles": [
          "Propiedades de un Formulario",
          "¿Como crear un Proyecto?",
          "Colores a un Formulario",
          "Control Label",
          "Propiedades Label",
          "Control TextBox",
          "Propiedades TextBox",
          "Control NumericUpDown y ComboBox",
          "Control DateTimePicker",
          "Tarea Numero 1"
        ]
      },
      "requirements": [
        "Ninguno , muchas ganas de aprender"
      ],
      "description": "Bienvenido al curso mas completo de C# en español donde empezaremos absolutamente de CERO sin necesidad de tener ningún conocimiento de programación. Desde como instalar el Visual Studio , la lógica de programación , condicionales , métodos , funciones , etc. Hasta conocer la interfaz de Windows Form y crear aplicaciones web visuales. Para llevar este curso no es necesario tener ningún conocimiento debido a que empezamos de cero entendiendo los conceptos básicos de la programación. Este curso te llevara poco a poco paso a paso a entender el lenguaje de programación C# y su utilidad para crear aplicaciones de escritorio , Web y Móviles , Te veo en el curso para aprender con nosotros sobre este maravilloso mundo de la programación. Ya mas de 50 000 alumnos satisfechas indicando una calificación superior a 4.5 estrellas.\nPosteriormente te enseñare como instalar , trabajar y conectarte a una base de datos SQL Server desde nuestra aplicación C# para poder realizar operaciones de Insertar , Actualizar y Eliminar de una manera bastante fácil y sencilla. Si deseas aprender realmente C# de cero sin necesidad de tener conocimiento alguno de programación , te veo en el curso mas completo que encontraras en español y al cual mas personas se han escrito y lo están llevando actualmente.",
      "target_audience": [
        "Personas que recién están iniciando en la programación"
      ]
    },
    {
      "title": "【Pythonで学ぶ 】CUDA プログラミング入門",
      "url": "https://www.udemy.com/course/python-cuda/",
      "bio": "Google Colab で始める PyCUDA プログラミング",
      "objectives": [
        "Pythonを用いたCUDAプログラミング",
        "HPCやGPUプログラミングを始めるための基礎知識",
        "Google Colabを使ったGPUでのプログラムの実行方法"
      ],
      "course_content": {
        "はじめに": [
          "コースの概要"
        ],
        "GPUの基礎知識": [
          "ハードウェアの基礎(GPU以外)",
          "ハードウェアの基礎(GPU)"
        ],
        "CUDAの基礎知識": [
          "CUDAの基礎知識(1)",
          "CUDAの基礎知識(2)",
          "C言語ミニマム"
        ],
        "PyCUDAプログラミング(1) 基礎的なプログラミング": [
          "Google Colabについて",
          "必要なファイルのダウンロード",
          "CUDAでのHello World(スライド)",
          "CUDAでのHello World(プログラミング)",
          "これ以降の前提条件",
          "SourceModule(スライド)",
          "インデックスの計算方法についての補足",
          "SourceModule(プログラミング)",
          "外部ファイルの取込(スライド)",
          "外部ファイルの取込(プログラミング)",
          "CPU vs GPU(スライド)",
          "CPU vs GPU(プログラミング)",
          "CPU vs GPUについての補足",
          "2次元配列の四則演算(スライド)",
          "2次元配列の四則演算(プログラミング)",
          "多次元配列の四則演算(スライド)",
          "多次元配列の四則演算(プログラミング)",
          "多次元配列の四則演算についての補足",
          "演習：マンデルブロ集合(スライド)",
          "演習：マンデルブロ集合(プログラミング)",
          "【課題】マンデルブロ集合のCPUとGPUの実行時間比較",
          "【解答例】マンデルブロ集合のCPUとGPUの実行時間比較",
          "大規模計算の時に気を付けるポイント"
        ],
        "PyCUDAプログラミング(2) 各種メモリ ライブラリの利用": [
          "シェアードメモリ(スライド)",
          "シェアードメモリ(プログラミング)",
          "テクスチャメモリ(スライド)",
          "1次元テクスチャメモリ（プログラミング)",
          "2次元テクスチャメモリ(プログラミング)",
          "3次元テクスチャメモリ(プログラミング)",
          "ライブラリの利用(スライド)",
          "総和(スライド)",
          "総和: Scan kernelを使う方法(プログラミング)",
          "総和: Atomic演算を使う方法(プログラミング)",
          "内積(スライド)",
          "内積(プログラミング)",
          "最大値・最小値(スライド)",
          "最大値・最小値: Scan Kernel(プログラミング)",
          "最大値・最小値の位置: cuBLAS(プログラミング)",
          "並び替え(スライド)",
          "並び替え(プログラミング)",
          "テンプレート(スライド)",
          "テンプレート(プログラミング)",
          "ダイナミックパラレル(スライド)",
          "ダイナミックパラレル(プログラミング)"
        ],
        "オマケ：デスクトップPCへの環境構築": [
          "背景",
          "ハードウェアの環境構築",
          "ソフトウェアの環境構築(Visual Studio)",
          "ソフトウェアの環境構築(CUDA Toolkit)",
          "ソフトウェアの環境構築(Anaconda)",
          "講義で使用したスライドpdf & ソースコード"
        ]
      },
      "requirements": [
        "Pythonの基本的な文法知識",
        "数値計算の経験(*必須ではない)"
      ],
      "description": "背景\n最近、GPU(Graphics Processing Unit)やHPC(High Performance Computing)といったキーワードをよく耳にしませんか？\n実はこのGPUやHPCを支えている１つのキーテクノロジーがCUDA(Compute Unified Device Architecture)です。\nCUDAとはNVIDIAが提供しているGPGPUのプログラミング開発環境です。\nCUDAを使う事で、通常の計算にGPU並列処理を行う事が可能になり、CPU1コアで行う逐次処理に比べて10~100倍程度の高速化を見込めます。つまり、一昔前のスーパーコンピューターのような環境をGPUを使えば誰でも手軽に用意することが出来ます。\n\n\nCUDAはC言語を拡張したCUDA Cを使うのが一般的ですが、CUDA CではC言語でのメモリ管理をする必要があるため、プログラミングの手間がかかります。\nそこで、CUDA CのラッパーライブラリであるPyCUDAを使う事でPythonからCUDAを取り扱うことが出来ます。\nPythonからCUDAを使えるとCUDA Cで面倒なメモリ管理が楽になるだけでなく、ファイル入出力や可視化もPythonのライブラリが利用できるので非常に多くのメリットを持ちます。\n\n\n本コースとは\n本コースは、PyCUDAを使ったGPU並列計算の入門講座です。\nCUDAを取り扱うには、CUDAだけの知識ではなく、ハードウェアやソフトウェアの両方の知識を持っていた方が望ましいです。\nこの為、本コースではまずGPUとは何か？から始め、GPU周辺のハードウェアの知識(マザーボード/メモリ/GPUの性能指標)やCUDAの基礎的な用語(thread / block / grid / warpなど)で基礎を固めます。\nそして、Google Colabを使った開発環境で実際のPyCUDAでのGPUプログラミングの基礎を学習していきます。\nGoogle ColabはGoogleの提供する無料のPythonインタラクティブ環境ですが、実はGPUでの計算も対応しています。\nこの為、本コースはGPUをお持ちでない受講生の方も受講する事が可能になっています。\n\n\n受講要件\n本コースの受講要件は\n・Pythonのプログラミングスキル\n・数値計算の知識(*こちらは必須ではありません)\nの2つです。このうち、最低限必要なのはPythonのプログラミングスキルのみです。\n\n\nPyCUDAプログラミングを身に付けて、皆さんの計算を劇的に高速化しませんか？\nまずはコースの概要だけでも見ていっていただければ幸いです。",
      "target_audience": [
        "GPUを用いた並列計算に興味のある研究者・技術者",
        "CUDAプログラミングをしてみたいPythonプログラマー"
      ]
    },
    {
      "title": "【1日で習得】技術者のためのPythonデータ分析",
      "url": "https://www.udemy.com/course/1day_course_of_python_data_analysis_for_engineers/",
      "bio": "環境構築から始めて、実際のデータ分析の演習まで包括的に学習するPythonデータ分析のコース",
      "objectives": [
        "環境構築",
        "プログラミングの前提知識：コマンドプロンプト、エディタ",
        "Pythonの主要なプログラミング文法",
        "Pythonを用いたデータ分析（研究・開発の業務を想定した演習）"
      ],
      "course_content": {
        "はじめに": [
          "イントロダクション",
          "コース概要説明"
        ],
        "環境構築/前提知識": [
          "*仮想環境構築における注意点",
          "Anacondaの導入",
          "*Anaconda有償化に伴う代替案",
          "パスとは",
          "コマンドプロンプトとは",
          "コマンドプロンプトの基礎",
          "エディタとは",
          "Spyderの使い方",
          "Jupyter notebookとは",
          "Jupyter notebookの使い方",
          "講義で使うファイルのダウンロード"
        ],
        "Pythonの基礎１【変数/リスト】": [
          "四則演算",
          "変数とは/予約語",
          "変数の型",
          "変数の型の変換",
          "リストとは",
          "リストのインデックス/スライス",
          "文字列",
          "リストの操作【追加/削除/演算】",
          "リストの操作【文字列の操作】",
          "タプルとは",
          "ディクショナリとは"
        ],
        "Python基礎２【繰り返し/条件分岐】": [
          "コメントとは",
          "print関数の使い方",
          "print関数の使い方(実践編)*",
          "input関数の使い方",
          "条件分岐とは",
          "比較演算子/論理演算子",
          "if文",
          "繰り返し(for ループ)",
          "enumerate",
          "continue / break *",
          "while文の使い方 *"
        ],
        "Pythonの基礎３【ファイル入出力/関数/応用】": [
          "ファイルの読込",
          "ファイルの出力",
          "with",
          "関数とは",
          "関数の定義",
          "変数のスコープ",
          "デフォルト引数 *",
          "無名関数(ラムダ式)",
          "map, filter*",
          "モジュールとは",
          "モジュールのimport",
          "OSモジュール",
          "リスト内包表記",
          "正規表現とは *",
          "正規表現(基礎編) *",
          "正規表現(実践編)*"
        ],
        "numpy": [
          "numpyとは",
          "行列の生成・演算",
          "行列のスライス・ブールインデックス参照",
          "ユニバーサル関数",
          "行列のファイル入出力*",
          "行列の評価・操作"
        ],
        "pandas": [
          "pandasとは",
          "Seriesの作成",
          "DataFrameの作成",
          "txt,csv,Excelファイルからの入出力",
          "DataFrameの操作【取得】",
          "DataFrameの操作【インデックス】",
          "DataFrameの操作【変更】",
          "マルチインデックス*",
          "データのマージ",
          "ビニング",
          "GroupBy"
        ],
        "Matplotlib": [
          "Matplotlibとは",
          "グラフの書き方(基礎編)~scatter, plot, bar~",
          "グラフの書き方（基礎編2）~subplot~",
          "グラフの書き方(応用編)~3次元プロット~ *",
          "グラフの書き方(応用編2)~インタラクティブ~",
          "グラフの設定",
          "グラフの保存"
        ],
        "scipy": [
          "scipyとは",
          "多項式近似・非線形近似",
          "数値積分"
        ],
        "データ分析演習": [
          "データ分析演習の概要",
          "演習１：実験データの回帰直線",
          "演習2：スペクトルのフィッティング、積分",
          "演習３：テキストデータの取り扱い、線形近似、非線形近似",
          "演習４：実験、SIMデータの比較・決定係数の算出(前編)",
          "演習４：実験、SIMデータの比較・決定係数の算出(後編)"
        ]
      },
      "requirements": [
        "初歩的なPC操作(コマンドプロンプト・プログラミング等の知識は知らなくてもよい)",
        "対象OS:Windows",
        "大学初年度程度の数学が分かるとより講義が理解しやすいかもしれません"
      ],
      "description": "\"研究開発のシーンで具体的にどう使っていくか\"に重きを置いたPythonのデータ分析コースです。\n\n\n【人事の方/マネージャークラスの方へ】\n本コースは次のような使い方が可能です。\n・製造業などにおいてDX・デジタル人材を育成する為のプログラミング入門コース\n・実験結果のデータ分析をエクセルではなく、Pythonで行う事でより高度な分析を行える人材を育成する\n\n\n本コースの演習は特に製造業でPythonを使用することを意図した演習になっています。\n例1. ESR(電子スピン共鳴装置)などで得られたスペクトルデータをGauss型の関数系でフィッティングする事でノイズを除去\n例2. センサーのデータをUSBメモリに抽出し、PCに接続後、Pythonに読み込んできて実験結果をデータ分析する\n例3.実験結果を通常の線形回帰ではなく、多項式でフィッティングし、高度な分析を行う\nなど実用を想定した演習となっています。\n\n\nまた普段は実験をしているという方を想定しているため、プログラミングなどのIT知識は一切仮定していません。\n\n\n本コースを修了すると\n\"プログラミングを全く知らない/環境構築ができない\"状態から始めて\n\"Pythonを導入して業務効率化を図れる・より高度なデータ分析を行える\"という状態になります。\n\n\n~講義の概要~\n①環境の構築、前提知識の獲得\n・コマンドプロンプトの使い方\n・エディタの使い方(Spyder, Jupyter notebook)\n②Pythonの基礎\n・変数とは\n・リストとは、リストの取り扱い\n・繰り返し、条件分岐\n・ファイルの入出力\n・関数\n・リスト内包表記、正規表現\n・numpy, pandas, matplotlib, scipyの各モジュールの使い方\n③データ分析演習（実際の研究開発で使いそうなファイルを用いた演習）\n・Excelの実験データを読み込み、回帰直線の算出・グラフの作成。\n\n・スペクトルのフィッティングや数値積分\n・センサーなどが出力するtxtファイルからのデータの抽出、データ分析\n・実験データとSIMデータの比較。SIMデータの決定係数算出\n✳︎受講を検討されている方は、コースのプレビューを約50分用意しておりますので、コースの進め方を一度是非ご覧になってはいかがでしょうか。",
      "target_audience": [
        "研究開発に携わっているが、プログラミングはこれまで経験してこなかった技術者",
        "就活に向けて”Pythonデータ分析”を身に付けたい学生",
        "Pythonは未経験だが最近流行りだから触れてみたいという方"
      ]
    },
    {
      "title": "Sistema de ventas en 3 capas en C# & MySQL y SQL full stack",
      "url": "https://www.udemy.com/course/como-crear-un-sistema-punto-de-ventas-en-c-sharp/",
      "bio": "Curso de c# orientado a objetos sistema punto de ventas desde cero a profesional en tres capas con MySQL y SQL Server",
      "objectives": [
        "Desarrollaremos el sistema de ventas desde cero con su interfaz y funcionamiento",
        "Se creara el proyecto usando la estructura de programacion en tres capas en C#",
        "Aprenderás a crear un sistema punto de ventas utilizando el lenguaje de programacion en C#",
        "Tendras los conocimientos básicos para poder desarrollar tu propio sistema punto de venta",
        "Aprenderás a realizar mantenimientos de datos de los gestores de base de datos de MySQL y SQL Server",
        "Se utilizara la librería linq2db para conectarnos a los servidor y poder crear transacciones para administras los datos en las tablas de base de datos"
      ],
      "course_content": {
        "Introducción": [
          "La ID Visual Studio y los entornos de desarrollo que se utilizan",
          "Creando el proyecto del sistema en el visual Studio",
          "Instalación del sql server",
          "Preparando el motor de base de datos de sql server",
          "Instalando el servidor de datos de MySQL",
          "Creando la estructura del proyecto y del sistema"
        ],
        "Clientes: registros de clientes": [
          "Interfaz registros de clientes",
          "Creando la interfaz clientes del sistema",
          "Agregando los controles para ingresar la información del cliente",
          "Creando el procedimiento para cargar una imagen que se asignara al cliente",
          "Creando los eventos para validar los campos de textos",
          "Validando los campos que solo se puedan ingresar datos numéricos o alfabéticos",
          "Creando los procedimientos para obtener la información del los controles",
          "Instalando los paquetes para realizar las conexione a los gestores de db",
          "Creando las clase de modelo para las tablas TClientes y TReportes clientes",
          "Creando los procedimientos para registra los clientes",
          "Creando el procedimiento para dimensionar la imagen cargada",
          "Creando los procedimientos para insertar los datos del cliente en las tablas",
          "Creando las bases de de datos en los servidores de base de datos",
          "Registrando clientes en las tablas ya relacionadas"
        ],
        "Clientes: Listar clientes registrados": [
          "Obteniendo los clientes registrados en la vista cliente",
          "Obteniendo la información del cliente seleccionado",
          "Agregando los controles para paginar los registros en la vista cliente",
          "Creando el paginador para paginar los registros del sistema",
          "Implementando el paginador para paginar la lista de clientes"
        ],
        "Clientes: Actualizar clientes": [
          "Creando el procedimiento para actual;izar la información del cliente",
          "Actualizando la información del cliente"
        ],
        "Clientes: Pagos y reportes": [
          "Interfaz de pagos de deudas",
          "Creando los procedimientos para obtener los registros de las tablas relacionadas",
          "Obteniendo la lista de clientes en la sección pagos y reportes",
          "Mostrando la información de la deuda del cliente en reportes y pagos",
          "Creando la tabla TConfiguration para almacenar las configuraciones del sistema",
          "Creando procedimientos para asignar el tipo de moneda que trata el en sistema",
          "Estableciendo el tipo de moneda que tratara el sistema",
          "Modificando y agregando controles al panel de pagos y reportes",
          "Creando la tabla reportes intereses cliente las base de datos",
          "Insertando datos en la tabla reportes intereses clientes",
          "Creando el procedimiento para obtener registros de tres tablas relacionadas",
          "Obteniendo la información del cliente de las tablas relacionadas",
          "Creando la tabla intereses clientes en las base de datos",
          "Obteniendo datos de la tabla intereses cliente",
          "Creando los procedimientos para tratar los pagos del cliente",
          "Validando el campo pago que acepte valor numéricos con punto decimal",
          "Creando los procedimientos para realizar pagos de intereses del cliente",
          "Verificando los procedimientos de intereses de pagos por mora",
          "Creando los procedimientos para realizar pagos de deudas del cliente",
          "Probando los procedimientos de pagos de deudas",
          "Creando los procedimientos para realizar los pagos del cliente",
          "Creando los procedimientos para diseñar ticket #1",
          "Creando los procedimientos para diseñar ticket #2",
          "Creando los procedimientos para diseñar ticket #3",
          "Generando el ticket de pagos de deudas del cliente",
          "Creando la tabla pagos clientes en las base de datos",
          "Guardando la información del pago del cliente en las base de datos",
          "Creando los procedimientos para realizar pagos de intereses de mora",
          "Creando los procedimientos para guardar los datos de los pagos de intereses",
          "Creando la tabla pagos reportes intereses cliente en las base de datos",
          "Guardando la información del pago de los intereses en las base de datos"
        ],
        "Clientes: Reportes de mora de pagos": [
          "Interfaz de reportes de mora de pago",
          "Diseñando la interfaz reportes de mora de pagos",
          "Creando procedimiento para obtener lista de clientes de acuerdo a fecha limite",
          "Obteniendo los cliente en que están próximo a realizar el pago al sistema",
          "Obteniendo cliente que esta próximo a realizar el pago o con mora de pago",
          "Creando el procedimiento para extender la fecha limite al cliente",
          "Extendiendo la fecha limite de pago de la deuda del cliente"
        ],
        "Clientes: Registros de intereses": [
          "Creando la sección registrar intereses en configuraciones",
          "Obteniendo los controles de la sección intereses en la clase configuraciones",
          "Agregando la columna intereses en la tabla configuraciones",
          "Registrando intereses por defecto para el sistema",
          "Automatizando el procedimiento de genera intereses de los clientes #1",
          "Automatizando el procedimiento de genera intereses de los clientes #2",
          "Automatizando el procedimiento de genera intereses de los clientes #3"
        ],
        "Interfaz login": [
          "Interfaz login",
          "Diseñando la interfaz login del sistema",
          "Creando los procedimientos para iniciar sesión",
          "Creando las tablas usuarios y ordenadores en la base de dato de sql server",
          "Creando las tablas usuarios y ordenadores en la base de dato de mysql",
          "Obteniendo la información del ordenador",
          "Iniciando sesión en el sistema",
          "Creando los procedimientos para cerrar sesión en el sistema",
          "Cerrando sesión en el sistema",
          "Obteniendo la información del usuario que ha iniciado sesión"
        ],
        "Usuarios: registros de usuarios": [
          "Interfaz registros de usuarios",
          "Creando la interfaz registro de usuarios",
          "Diseñando la interfaz registrar usuarios",
          "Creando los procedimientos para obtener los datos de los controles",
          "Verificando si el email que esta ingresando el usuario ya esta registrado",
          "Creando los procedimientos para encriptar y desencriptar la contraseña",
          "Creando la tabla de roles en las bases de datos de tipo mysql y sql server",
          "Registrando usuarios en el sistema"
        ],
        "Usuarios: listar usuarios": [
          "Listando los usuarios que están registrados en el sistema",
          "Implementando el paginador para poder página los registros"
        ]
      },
      "requirements": [
        "Debe tener instalado Visual Studio el mas actual",
        "Debe tener conocimiento básico en el lenguaje de programacion en C#",
        "Debe tener instalado los gestores de base de datos MySQL o SQL Sever"
      ],
      "description": "En este curso aprenderás a crear un Sistema punto de ventas en tres capas desde cero a profesional, utilizando el lenguaje de programacion en C# donde empezaremos a desarrollar el sistema desde lo mas básico asta implementar las buenas practicas con C# POO utilizando como gestores de besase de dato a MySQL y una base de datos de tipo SQL Server, dependiendo a tu preferencia y los datos de la base de datos se van a obtener usando la librería Linq2db para gestionar de forma eficiente muy eficaz la información que vamos a obtener de cada tabla que estará en la base de datos, y la información se va a obtener como una colección de objetos y de esta forma podremos manipular de forma eficiente esa información en nuestro Sistema punto de ventas\nEl sistema contara con las siguientes secciones\nRegistros de clientes\nRegistros de proveedores\nCreación del login\nDepartamentos & Categorías\nCompra de productos\nRegistros de productos\nRegistros de cajas\nVentas de productos\nInventario de productos\nReportes de productos\nY el curso siempre se estará actualizando con las sugerencias que me brinden los alumnos para el mejoramiento del sistema y poder ir desarrollando un buen Sistema punto de ventas profesional en C#, y al final de este curso tendrá los conocimientos para poder desarrollar Sistema punto de ventas de forma profesional",
      "target_audience": [
        "Programadores en sistemas",
        "Estudiantes en sistemas",
        "Y toda persona que le guste la programacion y tenga interés de aprender a desarrollar un sistema"
      ]
    },
    {
      "title": "Python разработка - с нуля до профессионала. Python 3",
      "url": "https://www.udemy.com/course/python-python-3/",
      "bio": "Доступно и просто для новичков. Начните с основ и пройдите весь путь до создания собственных приложений!",
      "objectives": [
        "Получите фундаментальное понимание языка программирования Python",
        "Получите навыки Python по объектно-ориентированному программированию (ООП) в свое резюме",
        "Поймёте сложные темы, как декораторы, timestamp и др.",
        "Приобретёте необходимые навыки Python, чтобы перейти в конкретные отрасли - machine learning, data science и т. д.",
        "Типы данных",
        "Indexing & Slicing",
        "Форматирование строк",
        "Lists, Dictionaries, Tuples, Sets",
        "List, Dictionary and Set Comprehension",
        "Вложенные циклы",
        "*args. **kwargs.",
        "Лямбда выражения",
        "Множественное наследование",
        "Method Resolution Order (MRO)",
        "Модули и пакеты",
        "Файловый ввод/вывод",
        "Модуль pickle",
        "Модуль shelve",
        "Обработка ошибок",
        "Итераторы и генераторы",
        "Декораторы",
        "Higher order functions",
        "@wraps",
        "Тестирование",
        "Test Driven Development (TDD)",
        "HTTP & API",
        "Web Scraping (Парсинг сайтов)",
        "BeautifulSoup",
        "Работа с CSV файлами",
        "Работа с базой данных",
        "Модуль collections",
        "Модуль time",
        "Модуль datetime",
        "pytz package",
        "Модуль Tkinter для создания интерфейсов приложений",
        "Основы Django",
        "Основы Flask",
        "Основы Data Science и Machine Learning на Python 3",
        "Основы GUI на PyQt5"
      ],
      "course_content": {
        "Введение": [
          "Введение",
          "ВАЖНО! ЧАВО - ЧАсто задаваемые ВОпросы",
          "Заметка к заданиям"
        ],
        "Установка инструментов. Windows": [
          "Установка Python",
          "Задание к лекции \"Установка IntelliJ IDEA\" для Windows",
          "Установка IntelliJ IDEA"
        ],
        "Установка инструментов. Mac OS X": [
          "Установка Python",
          "Задание к лекции \"Установка IntelliJ IDEA\" для Mac OS X",
          "Установка IntelliJ IDEA"
        ],
        "Основы Python": [
          "Hello world!",
          "Вывод текста на экран",
          "Типы данных",
          "Числа. int & float",
          "Вычисление арифметических выражений",
          "Переменные",
          "Создание переменных",
          "Строки",
          "Работа со строками",
          "Строки. Indexing & Slicing",
          "Indexing & Slicing",
          "Свойства строк. Методы",
          "Свойства строк. Методы",
          "Форматирование строк",
          "Форматирование строк",
          "Lists",
          "Lists",
          "Dictionaries",
          "Dictionaries",
          "Tuples",
          "Tuples",
          "Sets",
          "Sets",
          "Заметка к лекции \"Booleans. Операторы сравнения\"",
          "Booleans. Операторы сравнения",
          "Booleans. Операторы сравнения",
          "Логические операторы",
          "Условный оператор if elif else",
          "Условный оператор if elif else",
          "Цикл for",
          "Цикл for",
          "Цикл while",
          "Некоторые часто используемые функции и операторы",
          "List Comprehension",
          "List Comprehension",
          "Dictionary and Set Comprehension",
          "Вложенные циклы",
          "Вложенные списки"
        ],
        "Функции": [
          "Функции. Введение",
          "Создание функций",
          "Создание функций",
          "*args. **kwargs",
          "*args. **kwargs.",
          "Лямбда выражения",
          "Область видимости переменных"
        ],
        "Объектно-ориентированное программирование (ООП)": [
          "Объектно-ориентированное программирование (ООП). Введение",
          "Атрибуты",
          "Атрибуты",
          "Методы",
          "Методы",
          "Методы класса",
          "Наследование. Полиморфизм",
          "Наследование. Полиморфизм",
          "Множественное наследование",
          "Method Resolution Order (MRO)",
          "Специальные (магические) методы",
          "Специальные (магические) методы"
        ],
        "Модули и пакеты": [
          "Встроенные модули",
          "Встроенные модули",
          "Создание своих модулей",
          "Создание своих модулей",
          "Внешние модули",
          "__name__ and '__main__'"
        ],
        "Файловый ввод/вывод": [
          "Чтение текстовых файлов",
          "Запись текстовых файлов",
          "Двоичная система счисления",
          "Запись двоичных файлов",
          "Модуль pickle",
          "Модуль shelve",
          "Работа с данными при помощи модуля shelve",
          "Обновление данных при помощи модуля shelve",
          "Конвертация словаря в объект shelve"
        ],
        "Обработка ошибок": [
          "Типы ошибок",
          "Вызов ошибок",
          "try except",
          "else finally"
        ],
        "Итераторы и генераторы": [
          "Iterable & iterator",
          "Custom iterable",
          "Generator functions",
          "Генератор дня недели",
          "Чет-нечет",
          "Бесконечные генераторы",
          "Бесконечный генератор квадратов чисел",
          "Generator expressions"
        ]
      },
      "requirements": [
        "Доступ к компьютеру с подключением к интернету и желание учиться"
      ],
      "description": "Станьте программистом Python и изучите один из самых востребованных навыков современной разработки!\nЭто полный, но простой курс по языку программирования Python на Udemy! Если вы никогда не программировали раньше, если вы уже знаете базовый синтаксис или если хотите узнать о расширенных возможностях Python - в любом случае этот курс для вас! В этом курсе мы будем изучать программирование на Python 3.\n\n\nМатериалы курса\nУстановка Python\nЗапуск кода Python\nСтроки\nСписки\nСловари\nКоллекции\nТипы числовых данных\nФорматирование печати\nФункции\nВстроенные функции\nОтладка и обработка ошибок\nМодули\nВнешние Модули\nОбъектно-ориентированное программирование\nНаследование\nПолиморфизм\nФайловый ввод / вывод\nПродвинутые Методы\nМодульные тесты\nИ многое другое!\nВы получите пожизненный доступ к более чем 100 лекциям!\nЭтот курс поставляется с 30-дневной гарантией возврата денег! Если вы не удовлетворены каким-либо образом, вы вернете свои деньги.\n\nДля кого предназначен этот курс:\n- новички, которые никогда не программировали раньше\n- программисты, желающие перейти на Python\n- начинающие программисты Python, которые хотят повысить свои навыки.\n\n\nХотите ли вы:\n- приобрести навыки, необходимые для получения первой работы по программированию на Python\n- перейти на более высокую должность разработчика программного обеспечения\n- начать работать с машинным обучением, наукой о данных, Django или другими популярными областями, на которых специализируется Python\n- или просто изучите Python, чтобы иметь возможность быстро создавать свои собственные приложения Python\n… Тогда вам нужен прочный фундамент в программировании на Python. И этот курс предназначен, чтобы дать вам эти основные навыки.\n\n\nЭтот курс предназначен для начинающих, которые никогда раньше не программировали, а также для программистов, которые хотят расширить свои карьерные возможности, изучая Python.\nДело в том, что Python является одним из самых популярных языков программирования в мире - огромные компании, такие как Google, используют его в критически важных приложениях, таких как Google Search.\nPython - это язык номер один для машинного обучения, науки о данных и искусственного интеллекта. Чтобы получить эту высокооплачиваемую работу, вам нужны экспертные знания Python, и это то, что вы получите от этого курса.\n\n\nС навыками, которые вы изучите в этом курсе, вы сможете стать работоспособным и ценным в глазах будущих работодателей.\nГотовы начать?\nТогда регистрируйтесь сейчас и начните свой путь к творческому, продвинутому блеску Python!\nДо встречи на курсе!",
      "target_audience": [
        "Новички, не имеющие опыта программирования, которые стремятся получить навыки, чтобы получить свою первую работу в качестве разработчика",
        "Любой желающий приобрести минимальные навыки программирования на Python, необходимые в качестве предпосылки для перехода к машинному обучению(machine learning), науке о данных и искусственному интеллекту",
        "Программисты, которые хотят улучшить свои карьерные возможности, изучая язык программирования Python"
      ]
    },
    {
      "title": "C# İle 25 Derste 25 Uygulamalı Proje",
      "url": "https://www.udemy.com/course/25derste25proje/",
      "bio": "C# Pratiğini modüler bir müfredat aracılığıyla sıfırdan projeler geliştirerek arttır!",
      "objectives": [
        "Nesne Tabanlı Programlama'nın (Object Oriented Programming) inceliklerini",
        "Veri tabanı kayıt uygulamaları kontrol edebilmeyi",
        "2D oyun altyapılarına adım atmayı",
        "Otomasyon uygulamaları geliştirebilmeyi",
        "Stok takip sistemleri algoritması kurabilmeyi",
        "SQL tabanında prosedür, join, trigger sorguları oluşturabilmeyi",
        "Raporlama, grafiksel analiz gibi işlemleri gerçekleştirmeyi",
        "Veri tabanı kayıt uygulamaları kontrol edebilmeyi ve daha fazlası..."
      ],
      "course_content": {
        "25 Derste 25 Proje": [
          "Öğrenci Sınav Not Kayıt Sistemi",
          "Seçim İstatistik ve Grafik Sistemi",
          "Passaparola Oyunu",
          "XML Kullanımı ve Döviz Ofisi Uygulaması",
          "Masa Üstü Kişisel Film Arşiv ve İzleme Sistemi",
          "İlişkili Veri Tabanı Hareket Tablo ve Sorgulama Uygulaması",
          "Kelime Öğren! Access Kelime İngilizce Kelime Öğrenme Uygulaması",
          "İki Boyutlu Nesneleri Form Üzerinde Koordinat ve Hareketleri",
          "Veri Tabanı ile Mail ve Telefon Rehber Kayıt Modülü",
          "İlişikli Tablolar ile Birleştirme Uygulamaları",
          "Kullanıcılar Arası Veri Tabanı Bağlantısı ile Mesajlaşma Sistemi",
          "Form Üzerinde SQL Sorguları Çalıştırma Uygulaması (Mini SQL Derleyicisi)",
          "Veri Tabanı Verilerini Şifreleme ve Şifreli Verileri Çözme Uygulaması",
          "Bankamatik Simülasyonu",
          "Öğrenci Etüt & Ders Kayıt Sistemi",
          "Trigger Kullanarak Veri Tabanı Yedek Tablosu Oluşturma",
          "Veri Tabanı ile Yolcu Bilet Rezervasyon & Kayıt Sistemi",
          "Petrol & Akaryakıt Stok Takip Sistemi",
          "Dosya İşlemleri ile Resim Üzerine Yazı Yazma Uygulaması",
          "Excel Veri Tabanı ile Temel Kayıt İşlemleri (Ekle, Listele, Sil)",
          "Pastahane Ürün Maliyetlendirme Sistemi",
          "RSS ile İnternetten Haber Başlıkları Çekme",
          "List Yapısı ve List ile Öğrenci Bilgileri Kaydetme Uygulaması",
          "Sınıf Üzerinden Veri Tabanı İşlemleri (OOP+ Database)",
          "Final"
        ]
      },
      "requirements": [
        "Güçlü bir öğrenme arzusu",
        "Kurulu Visual Studio Professional 2017",
        "Temel seviyede C# programlama dili bilgisi"
      ],
      "description": "Pek çok kişi yazılım dünyasına ilk adımı atmak ister ancak nereden başlayacağını bilemez. Bu kapsamlı C# dersim ile sizleri Sıfırdan İleri Seviyeye çıkarmayı hedefleyerek, yazılım serüveninizde Türkçe hazırlanmış eğitimler ile size bir parça da olsun katkıda bulunmak en büyük arzum.\n---------\nPeki C# Nedir?\nC# Microsoft'un geliştirmiş olduğu yeni nesil bir programlama dilidir ve yine Microsoft tarafından geliştirilmiş olan .Net teknolojisi için geliştirilmiş dillerden biridir. C# ile mobil uygulamalar (iOS, Android, Windows), oyunlar, websiteler ve masaüstü uygulamaları geliştirebilirsiniz!\n---------\nDünya üzerinde yazılım dillerinin popülerlik sıralamasında ilk 5 içinde yer alan “C#” programlama dili ile otomasyon projeleri, veri tabanı kayıt uygulamaları, akıllı sistemler, stok takip ve kontrol uygulamaları, 2D oyunlar ve .Net proje temelleri gibi çeşitli başlıklarda projeler kodlayarak ister hayalinizdeki projeleri gerçeğe dönüştürebilir ister freelancer olarak çalışarak para kazanmaya başlayabilirsiniz.\n---------\nBu derste üzerinden detaylarıyla geçerek öğreneceklerinizi ise şu şekilde sıralayabilirim:\nForm üzerinde projeler oluşturacak,\nTemel syntax konuları olan \"değişkenler, karar yapıları, döngüler, diziler\" kavramlarına hakim olacak,\nOOP tabanında \"metot, sınıf, nesne\" gibi kavramları uygulamalarla öğrenecek,\nOOP tabanında veri tabanı uygulaması geliştirebilecek,\nSQL veri tabanında pratik bir projeyle DML komutlarını (Select, Insert, Update, Delete) öğrenecek,\nVeri tabanında filtreleme işlemleri yapacak,\nDosya klasör işlemlerini oluşturup yazabilecek,\nVeri tabanı bilgilerini şifreleyebilecek,\nSQL'de tablo ve veri tabanını en optimal veri tipleri ile oluşturabilecek,\nGrafik, raporlama, dinamik araç oluşturma, enum, point gibi ekstra daha pek çok yapı hakkında bilgi sahibi olacak\n25 derslik bir gerçek dünya projesi ile uygulama geliştirip akabinde kendi projelerinizi geliştirebileceksiniz!\nTakıldığınız en ufak konularda bile bana 7/24 ulaşarak, sorularınıza en kısa sürede bilgi alışverişi yoluyla cevaplar bulabileceksiniz.",
      "target_audience": [
        "Kod yazarak uygulama geliştirmek isteyenler",
        "C#'ı gerçek dünya problemleri üzerinden öğrenmeyi arzulayanlar",
        "Programlama bilgisini tazeleyip uygulama geliştirmek isteyenler",
        "Nesne tabanlı programlama bilgisini tazelemeyi amaçlayan herkes"
      ]
    },
    {
      "title": "Escuela de Python: Domina Python 3.9+ desde Cero hasta Nivel",
      "url": "https://www.udemy.com/course/curso-python-desde-cero/",
      "bio": "Aprende Python desde cero hasta crear tus propias aplicaciones con Tkinter y desarrollo web con Flask",
      "objectives": [
        "Python",
        "Funciones",
        "POO",
        "Python con SQLite y MySQL",
        "HTML y CSS",
        "Microframework Flask",
        "Aplicaciones Web con Flask",
        "Construit APIs rest con Flask",
        "Framework Django",
        "Desarrollo Web Backend con Django",
        "Despliega tus Aplicaciones Web",
        "Web Scraping con Python usando (Requests, beautifulsoup, Selenium y Scrapy)",
        "Ciencia de Datos con Pandas y NumPy"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "¿Qué Aprenderas en este Curso?",
          "Como Tomar el Curso",
          "Materiales estras para el Curso",
          "Ayuda y Soporte Online",
          "Preguntas y Respuestas"
        ],
        "Primeros pasos con Python": [
          "Introducción",
          "Instalación de Python",
          "Instalar Visual Studio Code",
          "Creación de la primera aplicación",
          "Códifica tu Hola Mundo",
          "Consola interactiva de Python",
          "Prueba de conocimientos",
          "Resumen"
        ],
        "Variables y datos": [
          "Introducción",
          "Variables",
          "Tipos de datos",
          "Salida de datos",
          "Entrada de datos",
          "Conversión de tipos",
          "Proyectos de sección: Calcular el Precio de Venta",
          "Prueba de conocimientos",
          "Resumen"
        ],
        "Operadores lógicos y condicionales": [
          "Introducción",
          "Operadores relacionales",
          "Condicionales (if, else)",
          "Condiciones anidadas",
          "Operadores lógicos",
          "Proyecto de sección: Sistema de Descuentos en un Restaurante",
          "Resumen"
        ],
        "Uso de cadenas en Python": [
          "Introducción",
          "Aspectos básicos de las cadenas",
          "Estructura de una cadena",
          "Métodos de cadenas",
          "Formato de cadena",
          "Proyecto de sección: Verificación de Palíndromos",
          "Resumen"
        ],
        "Uso de listas y tuplas": [
          "Introducción",
          "Creación de una lista",
          "Manipulación de datos de la lista",
          "Trabajo con números en listas",
          "Métodos de listas",
          "Creación de una tupla",
          "Pilas y colas en python",
          "Resumen"
        ],
        "Uso de bucles en python": [
          "Introducción",
          "Operadores de asignación",
          "Acerca de los bucles \"while\"",
          "Uso de bucles \"for\"",
          "Uso de rango y enumerate",
          "Uso de break y continue",
          "Proyecto de sección: Crea un juego - Adivina el número",
          "Resumen"
        ],
        "Administración de datos con diccionarios": [
          "Introducción",
          "Creación y acceso a diccionarios",
          "Operaciones Básicas",
          "Iteración sobre Diccionarios",
          "Proyecto de sección: Sistema de Registro de Estudiantes",
          "Resumen"
        ],
        "PYTHON: Funciones": [
          "Introducción",
          "Definición y uso de funciones",
          "Alcance de variables (scope)",
          "Argumentos indefinidos",
          "Anotaciones de tipos",
          "Proyecto de sección: Módulo de Saludos Aleatorios",
          "Resumen"
        ],
        "PYTHON: Modularidad": [
          "Presentación Modularización",
          "Aplicaciones de la Sección",
          "Crear Módulo",
          "Formas de importas Módulos",
          "Entrada desde Script",
          "Formateo de Información",
          "Función DIR",
          "Módulo Math",
          "Módulo Datetime",
          "Paquetes en Python",
          "Codigo fuente de la Sección"
        ]
      },
      "requirements": [
        "Tener conexion a interner y saber usar PC"
      ],
      "description": "Este curso está diseñado para que aprendas Python desde cero, sin necesidad de conocimientos previos. A lo largo del curso, adquirirás habilidades esenciales en programación con Python y explorarás su aplicación en el desarrollo web con Flask y Django, dos de los frameworks más utilizados en la industria.\nAdemás, aprenderás a trabajar con bases de datos, dominarás los fundamentos de HTML y CSS para el desarrollo web y crearás APIs REST con Flask.\nLo que aprenderás en este curso\nFundamentos de Python\nIntroducción a Python\nTipos de datos y variables\nOperadores en Python\nEstructuras de control\nColecciones de datos\nFunciones y modularidad\nProgramación orientada a objetos (POO)\nClases y objetos\nHerencia, encapsulamiento, polimorfismo y abstracción\nManejo de errores y archivos\nBases de Datos con Python\nConceptos fundamentales de bases de datos\nLenguaje SQL y uso de MySQL\nCreación y consulta de bases de datos\nIntegración de Python con SQLite y MySQL\nDesarrollo Web con Python\nIntroducción al desarrollo web\nHTML y CSS para la creación de interfaces\nFlask:\n¿Qué es Flask y cómo funciona?\nCreación de aplicaciones web con Flask\nDesarrollo de APIs REST\nDespliegue de aplicaciones web\nEste curso te brindará los conocimientos y habilidades necesarias para convertirte en un desarrollador Python con una base sólida en programación, bases de datos y desarrollo web. Al finalizar, serás capaz de crear aplicaciones completas y escalables con Python.",
      "target_audience": [
        "Para todos los nuevos en programación",
        "Para todo los nuevos en Python"
      ]
    },
    {
      "title": "Java - ambitny start. Zbuduj aplikację webową!",
      "url": "https://www.udemy.com/course/java-ambitny-start/",
      "bio": "Java, Maven, Jetty, Spring, SQL, Hibernate, Flyway, HTTP, Servlety, REST, CRUD, front-end, JUnit, testy jednostkowe",
      "objectives": [
        "Poznasz narzędzia używane na co dzień z Javą: Maven, Jetty",
        "Zrozumiesz na czym polega HTTP, REST, CRUD",
        "Wykorzystasz bazy danych SQL oraz narzędzie ORM - Hibernate",
        "Zrozumiesz o co chodzi w architekturze warstwowej",
        "Napiszesz testy jednostkowe korzystając z JUnit",
        "Poznasz podstawy front-endu",
        "Poznasz podstawy frameworka Spring"
      ],
      "course_content": {
        "Wprowadzenie": [
          "Wstęp",
          "Demo aplikacji",
          "Highlight"
        ],
        "Start, Maven": [
          "Wprowadzenie",
          "OpenJDK",
          "IDE - IntelliJ",
          "Skróty klawiszowe",
          "Skąd brać biblioteki?",
          "Apache Maven",
          "Maven - instalacja",
          "Projekt mavenowy",
          "Maven w IntelliJ",
          "Maven Wrapper",
          "mvn test",
          "mvn clean",
          "mvn package, pom.xm",
          "Maven - cykl życia",
          "Zależności",
          "mvn install",
          "Logowanie do konsoli - SLF4J",
          "Podsumowanie"
        ],
        "HTTP": [
          "Wprowadzenie",
          "Klient-serwer",
          "Query parametry",
          "Servlet w Javie",
          "Jetty",
          "Jetty - plugin",
          "Jetty - embeded - zależności",
          "Jetty - embedded",
          "Parametry żądania",
          "Podsumowanie"
        ],
        "Warstwy, testy jednostkowe": [
          "Wprowadzenie",
          "SOLID",
          "Architektura wielowarstwowa",
          "Klasa Service",
          "Service - testy jednostkowe",
          "Model danych?",
          "POJO",
          "Nowa warstwa",
          "Repozytorium",
          "Połączenie: serwis-repozytorium",
          "Połączenie: serwis-servlet",
          "Więcej testów",
          "Skrajny przypadek",
          "Naprawa błędu z wykorzystaniem TDD",
          "Dodatkowy test",
          "Podsumowanie"
        ],
        "Baza danych, ORM": [
          "Wprowadzenie",
          "Baza danych H2",
          "H2 - Maven",
          "Flyway",
          "Flyway - Maven, pierwszy SQL",
          "Konsola H2",
          "SQL - insert",
          "Mapowanie pola \"id\"",
          "ORM (Hibernate)",
          "Hibernate - start",
          "Hibernate i Jetty",
          "Dostosowanie modelu do Hibernate'a",
          "Użycie Hibrenate'a w repozytorium",
          "Kolejny język",
          "Podsumowanie"
        ],
        "REST, front-end": [
          "Wprowadzenie",
          "index.html",
          "Ogarnięcie CSS",
          "Formularz w HTML",
          "Procesowanie formularza - JavaScript",
          "JS - fetch",
          "Request i response - więcej informacji",
          "REST, CRUD",
          "REST front-end",
          "Repozytorium: findAll",
          "Zwrócenie JSON-a z Servletu",
          "Refactoring",
          "Data Transfer Object",
          "Docelowy index.html",
          "Podsumowanie"
        ],
        "Praktyka, praktyka, praktyka": [
          "Wprowadzenie",
          "Nowy model",
          "Odczyt zadań \"To Do\"",
          "Poprawki przed doPut",
          "doPut",
          "Tworzenie nowego \"To Do\"",
          "Podsumowanie"
        ],
        "Spring": [
          "Wprowadzenie",
          "Spring",
          "Spring Boot",
          "Przegląd wygenerowanej aplikacji",
          "Przeniesienie migracji, propertiesy Springa",
          "Webapp",
          "Przeniesienie domeny języków",
          "Spring Data Repository",
          "Przeniesienie klasy Service",
          "Inversion of Control, Dependency Injection",
          "RestController",
          "Chwila przerwy",
          "Przeniesienie domeny hello",
          "RestController \"To Do\" - odczyt",
          "RestController \"To Do\" - pozostałe operacje",
          "Podsumowanie"
        ],
        "Zakończenie": [
          "Udało się!",
          "Wykład bonusowy: kursy, materiały dodatkowe"
        ]
      },
      "requirements": [
        "Programowanie obiektowe",
        "Składnia języka Java"
      ],
      "description": "Kolejny kurs uczący słów kluczowych w Javie oraz podstaw programowania obiektowego? W żadnym wypadku! Zakładam, że znasz składnię Javy, dlatego od razu pokazuję Ci, jak zbudować prawdziwą aplikację zarządzającą listą zadań do zrobienia.\nKurs wypełnia lukę między kursami o samej Javie, kursami, w których buduje się aplikacje desktopowe (rynek nie potrzebuje aplikacji desktopowych), a kursami skoncentrowanymi na konkretnych frameworkach (np. Spring). Warto przerobić go przed zaawansowanymi kursami na temat Springa albo architektury.\nPrzekazuję wiedzę, której brakowało mi na początku mojej kariery programistycznej - jak konfigurować aplikację, jak dociągać zewnętrzne biblioteki, jak to wszystko uruchamiać. Pokazuję narzędzia Maven oraz Maven Central Repository, Jetty, HttpServlet, Spring oraz Hibernate.\nPamiętam, jak ciężko było mi się połapać w prawdziwym, dużym projekcie. Z tego powodu opowiadam sporo o architekturze wielowarstowej, architekturze REST oraz o systemach CRUD. Przemycam dobre praktyki i skróty, które powinny być znane każdemu programiście, np. SOLID.\nDobrze wiem, że sama Java nie zawsze wystarczy, dlatego w kursie dotykam też SQL oraz front-endu.\nKurs stawia na praktykę. Omawiam jakieś zagadnienie (np. HTTP), a potem od razu pokazuję jak to się ma do kodu (np. HttpServlet). W każdej z pierwszych sekcji znajduje się ćwiczenie utrwalające i tak powstaje prosta aplikacja, \"szkielet\". W sekcji \"Praktyka, praktyka, praktyka\" znajduje się jednak więcej ćwiczeń i tam faktycznie dodajemy obsługę zadań do zrobienia, sprawdzając swoją wiedzę z poprzednich wykładów. Dopiero później pojawia się Spring i przepisujemy całą aplikację z użyciem tego frameworka. Dzięki temu można dokładnie zaobserwować \"co ten Spring ułatwia\" i jak apka springowa ma się do klasycznej aplikacji webowej.\nUczestnicy kursu zadali już prawie 400 pytań, na które osobiście odpowiedziałem. Każdy kursant ma do nich dostęp, jest to ogromna baza wiedzy i dodatkowych porad.",
      "target_audience": [
        "Javowcy, znający podstawy języka",
        "Chętni do stworzenia swojej pierwszej aplikacji",
        "Javowcy, szukający zrozumienia \"po co to wszystko\""
      ]
    },
    {
      "title": "Linguagem de programação C# - Avançado",
      "url": "https://www.udemy.com/course/linguagem-de-programacao-c-avancado/",
      "bio": "Evolua seu C# da maneira certa",
      "objectives": [
        "Conhecer profundamente a linguagem C#",
        "Aumentar sua eficiência na construção de código C#"
      ],
      "course_content": {
        "Sobre o curso": [
          "Bem vindo ao Curso"
        ],
        "Serialização": [
          "Bem vindo a Seção 02",
          "Serializar no formato XML",
          "Deserializar no formato XML",
          "Serializar no formato JSON",
          "Deserializar no formato JSON"
        ],
        "Tópicos avançados": [
          "Bem vindo a Seção 03",
          "Generics - Parte 1",
          "Generics - Parte 2",
          "Generics - Parte 3",
          "Palavras Chave - Var e Dynamic",
          "Extension Methods",
          "Nullable"
        ],
        "LINQ e LAMBDA": [
          "Bem vindo a Seção 04",
          "Introdução ao LINQ",
          "Sintaxe alternativa LINQ",
          "LINQ com Objeto",
          "LINQ - Join - Parte 1",
          "LINQ - Join - Parte 2",
          "LINQ - Group"
        ],
        "Delegate e Eventos": [
          "Bem vindo a Seção 05",
          "Delegate - Parte 1",
          "Delegate - Parte 2",
          "Delegate - Parte 3",
          "Evento - Parte 1",
          "Evento - Parte 2",
          "Evento - Parte 3",
          "Delegate - Métodos Anomimos",
          "Delegate - Entendendo e Aplicando - Parte 1",
          "Delegate - Entendendo e Aplicando - Parte 2",
          "Delegate - Entendendo e Aplicando - Parte 3"
        ],
        "Thread - Execução em Paralelo": [
          "Bem vindo a Seção 06",
          "Introdução a Thread - Conceito",
          "Thread - Primeiros passos",
          "Thread - Multi Thread",
          "Thread - Em Background",
          "Thread - Recursos compartilhados - Thread Safe",
          "Thread - Identificador único",
          "Thread - Sleep e Join",
          "Thread - AutoResetEvent e ManualResetEvent"
        ],
        "Task": [
          "Bem vindo a Seção 07",
          "Task",
          "Task - Executar métodos",
          "Task - Execuções multiplas"
        ],
        "Attributos e Reflections": [
          "Bem vindo a Seção 08",
          "Atributos",
          "Validacao - Data Annotation - Parte 1",
          "Validacao - Data Annotation - Parte 2",
          "Reflection - Parte 1",
          "Reflection - Parte 2"
        ],
        "Nuget - Crie seu pacote": [
          "Nuget - Instalando ferramentas",
          "Nuget - Criando o projeto",
          "Nuget - Criando o pacote Nuget",
          "Nuget - Publicando o pacote"
        ],
        "Downloads": [
          "Código-Fonte - Download"
        ]
      },
      "requirements": [
        "Lógica de Programação",
        "Linguagem C# - Básica"
      ],
      "description": "Neste curso você irá aprender tópicos avançados da linguagem de programação C#, uma das mais utilizadas do mundo para desenvolvimento de software, apps e games.\nC# é uma linguagem de programação multiplataforma que pode ser utilizada para construir uma variedade muito grande de programas. Com C#, você pode construir aplicativos móveis (para Windows, Android e iOS), jogos, sites e sistemas web e programas de computador.\nDepois de dominar os fundamentos da linguagem C# e a plataforma .NET Framework, você terá muitas opções pela frente. Você pode escolher construir aplicativos se preferi, ou trabalhar na construção de sites. Contanto que você conheça os fundamentos da linguagem C#, trocar de área fica muito fácil.",
      "target_audience": [
        "Estudantes",
        "Profissionais de TI"
      ]
    },
    {
      "title": "Curso Completo de Linguagem C , C++ e Orientação a Objetos",
      "url": "https://www.udemy.com/course/curso-completo-de-linguagem-c-iniciante-ao-avancado/",
      "bio": "Curso Completo que irá te ensinar do ZERO, Estruturas de Dados e Programação Orientada a Objetos com Exercícios e Jogos",
      "objectives": [
        "Como desenvolver programas utilizando a Linguagem C e C++",
        "Criar seus próprios programas usando o Code::Blocks",
        "Utilizar diferentes tipos de variáveis (Int, Float, Char, Boolean)",
        "Fazer operações matemáticas",
        "Trabalhar com Condicionais Simples ou Compostas (IF, Switch Case)",
        "Utilizar Conectivos Lógicos (AND, OR, NOT)",
        "Criar laços de repetição (While, For)",
        "Desenvolver Menus",
        "Definir Constantes",
        "Definir, Percorrer e Acessar Vetores",
        "Definir, Percorrer e Acessar Matrizes",
        "Como usar Ponteiros",
        "Como limpar a tela",
        "Usar funções sem retorno",
        "Usar funções com retorno (Inteiras, Caractere, Booleanas)",
        "Usar funções com envio de parâmetros simples e múltiplos",
        "Usar funções com envio de parâmetros com ponteiros",
        "Fazer alocação dinâmica de Vetores e Matrizes",
        "Construir estruturas (Structs)",
        "Leitura e Escrita em Arquivos Externos",
        "Busca Simples",
        "Busca Binária",
        "Inserir, Remover Elementos em Pilhas",
        "Inserir, Remover Elementos em Filas",
        "Ordenar Vetores com Bubble Sort",
        "Ordenar Vetores com Insertion Sort",
        "Ordenar Vetores com Selection Sort",
        "Ordenar Vetores com Quick Sort",
        "Ordenar Vetores com Shell Sort",
        "Ordenar Vetores com Merge Sort",
        "Criação de Tabuleiros",
        "Posicionamento Aleatório",
        "Criação de Máscaras",
        "Mensagens de Feedback",
        "Modificar a Cor no Terminal",
        "Jogar em Dupla"
      ],
      "course_content": {
        "Introdução e Fundamentos Teóricos": [
          "Introdução",
          "Introdução a Computação",
          "Origem do C",
          "Alto e Baixo Nível",
          "Material Teórico Das Seguintes Aulas",
          "Instalando Codeblocks"
        ],
        "Exercícios Recomendados (FAÇA AS AULAS E DEPOIS VENHA AQUI CASO QUEIRA PRATICAR)": [
          "MEU CÓDIGO NÃO COMPILA/RODA (ERROS MAIS COMUNS)",
          "Exercícios Recomendados (FAÇA AS AULAS E DEPOIS VENHA AQUI CASO QUEIRA PRATICAR)"
        ],
        "DOWNLOAD ARQUIVOS DO CURSO": [
          "Download Arquivos"
        ],
        "Tipos de Variáveis": [
          "Tipos De Variáveis",
          "Código - Tipos de Variáveis",
          "Variáveis Inteiras",
          "Código - Variáveis Inteiras",
          "Operações Matemáticas",
          "Código - Operações Matemáticas",
          "DESCONTÃO PARA OUTROS CURSOS",
          "LINKS DE DESCONTOS PARA ALUNOS ATUAIS",
          "Exercício de Fixação 1 - Média Entre Dois Valores",
          "Código - Exercício de Fixação 1 - Média Entre Dois Valores",
          "Exercício de Fixação 2 - Valor Absoluto da Diferença entre Duas Notas",
          "Código - Exercício de Fixação 2 - Valor Absoluto da Diferença entre Duas Notas",
          "Exercício de Fixação 3 - Ler 3 Valores na mesma linha e Multiplicar",
          "Código - Exercício de Fixação 3 - Ler 3 Valores na mesma linha e Multiplicar",
          "Preciso que você entenda a Avaliação da Udemy"
        ],
        "Condicionais": [
          "Condicionais",
          "Condicionais - EX1",
          "Condicionais - EX2",
          "Condicionais - EX3",
          "Conectivos Lógicos",
          "Conectivos Lógicos E - EX1",
          "Conectivos Lógicos E - EX2",
          "Conectivos Lógicos OU",
          "Conectivos Lógicos OU - EX1",
          "Conectivos Lógicos E e OU Juntos",
          "Condicional Switch Case",
          "Condicional Switch Case - EX1",
          "Gerar Aleatório",
          "Gerar Aleatório - EX1"
        ],
        "Laços de Repetição": [
          "Laço de Repetição Enquanto - While",
          "Laço de Repetição Enquanto - While - Parte 2",
          "While - Exercício de Fixação 1 - 50 a 0 de 6 em 6",
          "While - Exercício de Fixação 2",
          "While - Exercício de Fixação 3",
          "Laço de Repetição Para - For",
          "Laço de Repetição Para - For - EX1",
          "Laço de Repetição Para - For - EX 2",
          "Laço de Repetição Para - For - EX 3",
          "Código - Criar Constantes com DEFINE",
          "Criar Constantes com DEFINE",
          "Exercício de Fixação 1 - Contagem Regressiva",
          "Código - Exercício de Fixação 1 - Contagem Regressiva",
          "Exercício de Fixação 2 - Número Pares de 10 a 20",
          "Código - Exercício de Fixação 2 - Número Pares de 10 a 20",
          "Exercício de Fixação 3 - Conferir se Número é Primo",
          "Código - Exercício de Fixação 3 - Conferir se Número é Primo"
        ],
        "Vetores, Strings e Matrizes": [
          "Constantes",
          "Vetores",
          "Código de Exemplo - Definir , Acessar , Percorrer e Ler Vetores",
          "Exercício de Fixação - Média de Um Vetor",
          "Código - Exercício de Fixação - Média de Um Vetor",
          "Strings (Vetores de Char)",
          "Código de Exemplo - Como Criar e Acessar Strings",
          "Matrizes",
          "Código de Exemplo - Definir , Acessar , Percorrer e Ler Matrizes",
          "Exercício de Fixação - Inverter as Linhas da Matriz",
          "Código - Exercício de Fixação - Inverter as Linhas da Matriz",
          "Revisão de Conceitos"
        ],
        "Revisão e Introdução ao C++": [
          "Revisão e Introdução",
          "Código - Revisão e Introdução",
          "Correção Parte do Char",
          "Revisão e Introdução (Parte 2)",
          "Código - Revisão e Introdução (Parte 2)"
        ],
        "Ponteiros, Funções e Seus Tipos": [
          "Ponteiros",
          "Código - Ponteiros",
          "Funções Sem Retorno (Void)",
          "Código - Funções Sem Retorno (Void)",
          "Funções Inteiras (int)",
          "Código - Funções Inteiras (int)",
          "Funções Caractere (char)",
          "Código - Funções Caractere (char)",
          "Funções Booleanas (bool)",
          "Código - Funções Booleanas (bool)",
          "Limpar a Tela",
          "Código - Limpar a Tela"
        ],
        "Funções com Parâmetros": [
          "Funções com Parâmetro Único",
          "Código - Funções com Parâmetro Único",
          "Funções com Mais de Um Parâmetro",
          "Código - Funções com Mais de Um Parâmetro",
          "Funções com Ponteiro e Referência Como Parâmetro",
          "Código - Funções com Ponteiro e Referência Como Parâmetro",
          "Funções com Vetor Como Parâmetro",
          "Código - Funções com Vetor Como Parâmetro"
        ]
      },
      "requirements": [
        "Computador com Code::Blocks (Ensinarei a Instalar durante o curso)",
        "Não é preciso ter conhecimentos prévios com programação"
      ],
      "description": "Um curso para quem sempre sonhou em se tornar um programador, mas nunca programou uma linha sequer.\nA Linguagem C é uma ótima linguagem para se aprender, pois a maior parte das linguagens de alto nível utilizadas hoje foram feitas baseadas no C, ou seja, ao aprender C você terá muita facilidade para aprender qualquer outra linguagem!\nNesse curso você aprenderá a criar programas com  os recursos:\nRevisão do Curso \"Aprenda C e C++ - Fundamentos Para Lógica de Programação\"\nEntender a diferença entre Alto Nível X Baixo Nível\nEntender a diferença entre Programação X Codificação\nDefinir, Percorrer e Acessar Matrizes\nDefinir, Percorrer e Acessar Vetores\nDefinir Constantes\nDesenvolver Menus\nCriar laços de repetição (While, For)\nUtilizar Conectivos Lógicos (AND, OR, NOT)\nTrabalhar com Condicionais Simples ou Compostas (IF, Switch Case)\nFazer operações matemáticas\nUtilizar diferentes tipos de variáveis (Int, Float, Char, Boolean)\nParte Nova\nESSENCIAL\nRevisão sobre Definição e Impressão de Variáveis\nRevisão sobre Vetores, Matrizes e Laços de Repetição\nComo usar Ponteiros\nComo limpar a tela\nUsar funções sem retorno\nUsar funções com retorno (Inteiras, Caractere, Booleanas)\nUsar funções com envio de parâmetros simples e múltiplos\nUsar funções com envio de parâmetros  com ponteiros\nFazer alocação dinâmica de Vetores e Matrizes\nConstruir estruturas (Structs)\nLeitura e Escrita em Arquivos Externos\nCRIAÇÃO DE JOGOS\nCriação de um Jogo da Velha, Batalha Naval e Jogo da Forca\nCriação de Tabuleiros\nPosicionamento Aleatório\nCriação de Máscaras\nMensagens de Feedback\nModificar a Cor no Terminal\nJogar em Dupla\nESTRUTURAS DE DADOS\nBusca Simples\nBusca Binária\nOperações com Filas\nOperações com Pilha\nBubble Sort\nInsertion Sort\nSelection Sort\nQuick Sort\nShell Sort\nMerge Sort\nORIENTAÇÃO A OBJETOS\nClasses e Objetos\nEncapsulamento\nConstrutores\nGetters e Setters\nHerança\nDiagramas UML\nPolimorfismo\nClasses Abstratas\nCURSO EXTRA\nAo final você ainda poderá fazer um curso extra de Gestão Ágil de Projetos com Scrum, para poder trabalhar com projetos maiores, gerenciar equipes e se destacar no mercado de trabalho!\nAlém disso você terá suporte individual para tirar suas dúvidas e responderá a questionários para reforçar os seus conhecimentos.\nAo finalizar o curso você receberá um Certificado.\nEsse curso é para iniciantes, mesmo que NUNCA TENHAM PROGRAMADO NA VIDA.\nMuito obrigado e te vejo lá",
      "target_audience": [
        "Pessoas que queiram aprender a programar em C com as facilidades do C++",
        "Estudantes universitários que estão com dificuldade em aprender lógica de programação"
      ]
    },
    {
      "title": "C#でオブジェクト指向をする方法",
      "url": "https://www.udemy.com/course/object-1/",
      "bio": "カプセル化，インタフェース，継承の使いどころが解るようになります",
      "objectives": [
        "C#でオブジェクト指向を適応する方法",
        "カプセル化のやり方がわかるようになる",
        "インタフェースの使いどころが解るようになる",
        "インタフェースと抽象クラスの使い分けができるようになる",
        "継承の使いどころが解るようになる"
      ],
      "course_content": {
        "C#でオブジェクト指向をする方法": [
          "#01_なぜオブジェクト指向できないのか",
          "#02_カプセル化",
          "#03-1_インタフェース解説",
          "#03-2_インタフェース実演",
          "#04_インタフェースの実演2",
          "#05-1_Factoryパターン解説",
          "#05-2_Factoryパターン実装",
          "#06-1_継承_解説",
          "#06-2_抽象クラス",
          "#07_継承の書き方",
          "#08_継承させない方法",
          "#09_コントロールの継承",
          "#10_画面の継承",
          "#11_おわりに",
          "補講01_ポリモーフィズムに関して",
          "ソースコード",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "C#の基礎文法"
      ],
      "description": "C#の文法を学んだだけではオブジェクト指向プログラミングはできません。\nインタフェースの実装方法を勉強しても，使いどころは理解できていないはずです。\n\n\n私も最初はそうでした。\nしかし，オブジェクト指向やテスト駆動開発，ドメイン駆動開発を学ぶにつれ，\nどのようにプログラミングをすればよいのかがわかるようなりました。\n\n\nその中でも，このオブジェクト指向は，すべてのより良いプログラミングの基礎であり，\nここを理解できていないと，この先には進めません。\n\n\n今回は，カプセル化，インタフェース，継承に限って，\n集中的に，オブジェクト指向プログラミングができるように\nC＃を使ってレクチャーしています。",
      "target_audience": [
        "C#開発者",
        "オブジェクト指向が理解できていない方",
        "オブジェクト指向の適応方法がわからない方"
      ]
    },
    {
      "title": "Aprende a Programar desde Cero: Fundamentos de la Web",
      "url": "https://www.udemy.com/course/curso-de-python3-2019/",
      "bio": "En este curso aprenderás a programar desde cero con algoritmos y Pseudocodigo con JavaScript, HTML y CSS",
      "objectives": [
        "Fundamentos de Programación",
        "Programación desde Cero",
        "Programación",
        "Lengueje de Programación",
        "Tipos de Datos",
        "Variables",
        "Operadores",
        "Condicionales",
        "Bucles",
        "Array"
      ],
      "course_content": {
        "Introducción al Curso": [
          "Introducción",
          "Para Preguntas y Respuestas"
        ],
        "Introducción a la programación": [
          "Programación y lenguajes de programación",
          "Tus primeras instrucciones",
          "Instalación de VSCode",
          "Tu primer sitio web",
          "Tegnologias principales de la web"
        ],
        "Introducción a HTML": [
          "Estructura base de HTML",
          "¿Qué es un atributo?",
          "Imágenes",
          "Etiquetas de texto",
          "Vínculos",
          "Etiquetas de Listas"
        ],
        "Introducción a CSS": [
          "Primeros estilos",
          "Selectores de elementos",
          "Estilos de texto",
          "Estilos de vinculos",
          "Modelo de caja",
          "Tipos de elementos"
        ],
        "Fundamentos de programación con JavaScript": [
          "Algoritmos",
          "Tipos de datos",
          "Variables",
          "Conversión de datos",
          "Operadores lógicos",
          "Condicionales",
          "Bucles",
          "Funciones",
          "Comentarios",
          "Añadir un cambiador de imagen",
          "Añadir un mensaje de bienvenida personalizado",
          "Guardar datos en el navegador",
          "Un nombre de usuario nulo"
        ]
      },
      "requirements": [
        "Para comenzar con este curso solo hace falta las ganas de aprender algo nuevo",
        "Terne conexión a Internet y saber usar un PC"
      ],
      "description": "Curso de Programación desde Cero: Algoritmos y Pseudocódigo con JavaScript, HTML y CSS\nEste curso está diseñado para quienes desean aprender programación desde cero, sin necesidad de experiencia previa. Comenzaremos con los conceptos básicos de algoritmos y pseudocódigo, fundamentales para desarrollar el pensamiento lógico y estructurado en la programación.\nA medida que avances, aplicarás estos conceptos utilizando JavaScript, HTML y CSS, explorando cómo funcionan los lenguajes esenciales del desarrollo web y creando tus primeras páginas interactivas.\nLo que aprenderás en este curso\nFundamentos de Programación y Algoritmos\n¿Qué es la programación y cómo funciona?\nIntroducción a los algoritmos y el pensamiento lógico\nEscritura y análisis de pseudocódigo\nVariables, tipos de datos y operadores\nEstructuras de control: condicionales y bucles\nIntroducción a funciones\nIntroducción a JavaScript\nConceptos básicos de JavaScript\nVariables y operadores en JavaScript\nUso de condicionales y bucles en JavaScript\nFunciones básicas y su aplicación\nIntroducción a HTML y CSS\nEstructura básica de una página web con HTML\nEtiquetas y elementos esenciales\nIntroducción a CSS y sus propiedades básicas\nAplicación de estilos simples en una página web\nEjercicios Prácticos y Aplicaciones Básicas\nCreación de algoritmos simples en pseudocódigo\nResolución de problemas básicos con JavaScript\nDesarrollo de una página web con HTML y CSS\nPrimeros pasos en la interacción con JavaScript\nEste curso es ideal para quienes desean dar sus primeros pasos en la programación de manera clara y progresiva, estableciendo una base sólida para continuar con su aprendizaje en el desarrollo web y otros lenguajes de programación.",
      "target_audience": [
        "Si te interesa la programación, este curso es para ti..."
      ]
    },
    {
      "title": "はじめてのC++！完全入門【HelloWorld~オブジェクト指向まで完全攻略！】",
      "url": "https://www.udemy.com/course/toba_c_plus_plus/",
      "bio": "C++を11時間以上の動画で完全マスター！HelloWorld~オブジェクト指向の応用的な手法まで徹底解説。豊富な図解＆丁寧なハンズオンで、難解と呼ばれるC++をゼロから使いこなせるようになりましょう！",
      "objectives": [
        "C++の基本的なコードの書き方",
        "クラス・オブジェクト指向の仕組み",
        "継承・カプセル化・多態性を使ったコードの書き方",
        "ポインタ・メモリIC・アドレスの仕組み",
        "STL・エラー処理などの応用的な手法"
      ],
      "course_content": {
        "イントロ": [
          "イントロ"
        ],
        "C++の基本的な構文": [
          "セクション２で学ぶこと",
          "最小単位：関数",
          "#include <iostream>とは？",
          "ストリームと関数",
          "int main ()とは？（関数の作り方）",
          "名前空間について",
          "std::endlと\\nの違い",
          "ターミナルへの出力"
        ],
        "文字列・数値": [
          "文字列と数値の違い",
          "文字・数字の出力",
          "数値の出力",
          "文字列と数値の組み合わせ",
          "数値を使った計算",
          "小数を扱う方法"
        ],
        "変数": [
          "変数とは何か？",
          "メモリICの物理的な仕組み",
          "メモリICとビルディング",
          "変数の宣言・値の代入",
          "データ型",
          "型変換（キャスト）",
          "複合代入演算子",
          "インクリメント、デクリメント",
          "const定数",
          "キーボードからの入力（cin）"
        ],
        "if文": [
          "分岐処理について",
          "if文の基本",
          "等値演算子",
          "関係演算子",
          "論理演算子",
          "ブロック文",
          "if else文",
          "３つの条件の比較",
          "switch case"
        ],
        "for・while文": [
          "繰り返し処理",
          "for文の構文",
          "for文の基本的な使い方",
          "for文：二重ループ",
          "while文",
          "do while"
        ],
        "関数": [
          "関数とは？そのメリット",
          "引数・戻り値",
          "関数の作成〜呼び出し",
          "プロトタイプ宣言",
          "引数の渡し方",
          "複数の引数",
          "戻り値",
          "戻り値を使ったプログラム"
        ],
        "配列": [
          "配列について",
          "配列の仕組み",
          "配列の宣言・代入",
          "配列の初期化",
          "要素数の省略",
          "配列とfor文（出力）",
          "外部から数値を入力",
          "配列を引数として渡す"
        ],
        "ポインタ": [
          "ポインタとは？",
          "メモリICの物理的な仕組み",
          "メモリICの論理的な仕組み",
          "宣言と数値の代入",
          "別の関数から値を操作",
          "複数の戻り値を返す",
          "ポインタと構造体"
        ],
        "構造体": [
          "データ型〜構造体まで",
          "構造体の作り方",
          "構造体への値の代入",
          "構造体の引数",
          "構造体で配列を扱う",
          "構造体とtypedef宣言"
        ]
      },
      "requirements": [
        "特に必要な知識はありません",
        "WindowsやMacなどのPC環境"
      ],
      "description": "■本講義はC++の基礎〜応用を完全マスターするコースです。\nHelloWorld〜クラス・オブジェクト指向までを10時間以上の動画で学んでいきます。\n環境構築、基本的な構文、ポインタ、クラス、継承・カプセル化、多態性、コンストラクタ、STL、エラー処理など、C++の基礎をこの動画１本で学ぶことができます。\n\n\n■なぜこのコースを作ったか？\nC++が全てのプログラミング言語の基礎とも呼べる言語だからです。\nメモリ管理のような低レイヤの部分〜オブジェクト指向を使った大規模開発まで、C++を使えばほとんどのことはできます。Webアプリ、ゲーム開発、自動運転、組み込み開発、ネットワークシステム、機械学習、競技プログラミングなど、ありとあらゆる場面でC++は使われています。\nとはいえ、C++は数あるプログラミング言語の中でも最も難解と呼ばれています。C++では開発を効率的に行うため、たくさんの機能が新たに登場しています。\n・基礎的な構文の仕組みが難しい\n・学ぶべきことが多すぎて、どれを使ったら良いのかわからない\n・クラス、オブジェクト指向で挫折してしまった\nという悩みもよく聞きます。\nこの動画ではそんな難解と呼ばれるC++を完全攻略していきます。C++を学ぶことで活躍の幅を広げ、レベルアップを目指していきましょう。\n\n\n■本講義の特徴\n１、クラス・オブジェクト指向に力を入れて解説\n２、そもそもなぜ？という疑問を大切にしている\n特に力を入れて解説したのが、クラス・オブジェクト指向についてです。大規模開発をする上で必須の概念となっていますが、このあたりで挫折してしまう方も多いのではないでしょうか。というのも、継承・多態性・コンストラクタ・エラー処理など難しい仕組みがたくさん出てきます。\n・基礎的な構文はわかるけど、オブジェクト指向で挫折してしまった\n・カプセル化、継承、多態性の使い所がわからない\n・学ぶべきことが多すぎて、理解が追いつかない\n私自身、クラス・オブジェクト指向でかなり苦労をしてきました。そんな初学者の方に向けて、オブジェクト指向の仕組みを徹底解説しています。全てのトピックを必ず目の前で一緒にコードを書きながら解説していきます。ゼロから一緒にコードを書くスタイルを取ることで、挫折させない講義を目指しました。\n\n\nまた本講義は『そもそもなぜ？』という疑問を大切にしています。\n・スライドで話をするだけ\n・名前と機能をひたらすら列挙\n・いきなり技術の説明に入る\nといった内容は避けました。それだとたくさんのことを学んだは良いモノの、何がポイントか分からなくなってしまいます。\nそこで、なぜ必要なのか？なぜ生まれたのか？という疑問を大切にします。技術が生まれた背景・理由が分かっていなければ、応用力が身につかないからです。\n例えばクラスを説明するのにも、データ型という根本から学んでいきます。少し遠回りかもしれませんが、１つ１つ知識を抑えてステップアップしていきます。\n\n■最後に..\n私自身、C++の学習にはとても苦労をしてきました。特にクラス・オブジェクト指向は難しくて、本当に何度も挫折しました。\n・なんでこの技術は必要なんだろう？\n・なぜこういうコードの書き方をするんだろう？\n・このコードサラッと書かれてるけど、どんな仕組みなんだろ？\nという疑問に何回も悩まされてきました。技術書・ネット記事・動画などを調べながら、苦労をして学んできた経験があります。\nそんな初心者の頃の私が『こんな講義があったら良いな..』と思えるコースを目指しました。みなさんの勉強のお役に立てれば幸いです。最後までお読み下さり、ありがとうございました。\n\n\n※）セクション９：ポインタ、セクション10：構造体については、C言語を使って解説をしております。基本的な仕組みはC++と同じですがご注意下さい。",
      "target_audience": [
        "これからプログラミングを始める方",
        "継承・カプセル化・多態性をマスターしたい方",
        "クラス・オブジェクト指向をゼロから学びたい方",
        "ポインタを使ったコードの書き方を学びたい方",
        "C++の基礎〜応用までマスターしたい方",
        "Java・C#などのプログラミングに悩んでいる方",
        "プログラミングのスキルをさらに高めたい方"
      ]
    },
    {
      "title": "経験ゼロからC#プログラミングがある程度出来るようになる方法【Windows Forms編】",
      "url": "https://www.udemy.com/course/winforminit/",
      "bio": "C#を使ったWindowsプログラミングの基礎を分かりやすく解説",
      "objectives": [
        "C#プログラミングの基礎文法",
        "C#プログラミングの画面コントロールの使い方が分かる",
        "C#プログラミングのイベントの使い方が分かる",
        "C#プログラミングの画面の作り方がわかる"
      ],
      "course_content": {
        "経験ゼロからC#プログラミングがある程度出来るようになる方法【Windows Forms編】": [
          "はじめに",
          "01B_VisualStudioのインストールについて",
          "01C_VisualStudio2022のダウンロードとインストール",
          "01D_サインインを求められたら",
          "002_プロジェクトの作成",
          "003_プログラムの起動",
          "004_画面の名前を変更する",
          "005_ラベルとテキストボックス",
          "006_チェックボックス",
          "007_グループボックスとラジオボタン",
          "008_コンボボックス",
          "009_パネルとボタンとドッキング",
          "010_ボタンとメッセージボックス",
          "011_メッセージボックスの応答を制御する",
          "012_ステータスバーにメッセージを表示する",
          "013_閉じるボタンを実装する",
          "014_ファイルに文字を書く方法",
          "015_画面のデータをファイルに書く",
          "016_CSV形式で保存する方法",
          "017_入力チェックをする方法",
          "018_メニュー画面の作成",
          "019_起動画面の切り替え",
          "020_CSVファイルを読み込む方法",
          "021_カンマ区切りで分解する方法",
          "022_カスタムクラスに値を入れてDataGridに表示する方法",
          "023_Existsでファイルの存在チェックをする方法",
          "024_グリッドに自由な列名を付ける方法",
          "025_おわりに",
          "#26_画面遷移ShowDialog",
          "#27_画面遷移Show",
          "#28_画面遷移ShowとShowDialogの違い",
          "#29_ShowDialogが閉じた後の処理",
          "#30_Showが閉じた後の処理の書き方",
          "#31_画面間の値の渡し方",
          "#31B_画面間の値の渡し方の補足",
          "#32_画面間の値の戻し方",
          "ソースコード",
          "補講01_statusStripの動作がおかしい",
          "補講02_デザイナークラスでコンパイルエラーになるときの対処",
          "補講03_ボタンの名前が変わらない",
          "補講04_コントロールの配置がうまくいかない",
          "補講05_DialogResultについて",
          "補講06_Visual Studio2022で一度作成したのテンプレート確認方法",
          "補講07B_ウォッチリストで変数の値が見れないときの対処方法【エラーCS0103】",
          "補講08_ツールボックスの中身が表示されない",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "VisualStudio（マイクロソフトのサイトから無料でダウンロードできます）"
      ],
      "description": "この動画講義は次の方を対象にしています。\n・C#に興味があるがやったことがない\n・C#を始めようと思っている\n・C#がある程度できるようになりたいと思っている\n・仕事でC#を使っているがあまり自身がない\n次のような人には向きません\n・C#に自信がある\n・WPF，UWP，Xamarinを学びたい\n・コアな知識が欲しい\n・ベテランプログラマー\nこの動画講義はこれからC#を始めるかたや，始めたての方で，あまりプログラミングに自信のない方を対象にしています。\n堅苦しい解説よりも，現場で使う大事な2割の知識を詰め込み，8割の仕事ができるC#プログラマーになってもらえるように，解説しました。\n40代の私が，20代のときからC#を使い，現場で仕事をしてきて，最初の先輩に「こんなことを教えておいてもらえたらよかったのになー」と思うことを1つのプログラムを作りながら解説していきます。",
      "target_audience": [
        "C#を使ったWindowsプログラムの作成をゼロから丁寧におしえます",
        "C#に興味があるがやったことがないがC#を始めようと思っている",
        "C#がある程度できるようになりたいと思っている",
        "仕事でC#を使っているがあまり自信がない"
      ]
    },
    {
      "title": "Curso de Base de Datos MySQL Server",
      "url": "https://www.udemy.com/course/curso-de-base-de-datos-mysql-server/",
      "bio": "Base de Datos MySQL Server",
      "objectives": [
        "Conocimiento y Manejo de Base de Datos",
        "Se realizará 100% práctico el aprendizaje de este curso.",
        "ejemplos claros al momento de nuestro proceso de desarrollo.",
        "Será nuestra formación base para dominar base de datos"
      ],
      "course_content": {
        "Introducción": [
          "00 - Intro al curso de MySQL Server"
        ],
        "Descarga e Instalación de MySQL Server": [
          "01 - Descarga e Instalación de MySQL Server"
        ],
        "Desarrollo del Entorno de trabajo en MySQL Worbench": [
          "02 - Usar MySQL WorkBench",
          "03 - Explorar la Administración de MySQL",
          "04 - Crear una Conexión en Workbench",
          "05 - Crear Usuario en MySQL"
        ],
        "Desarrollo de nuestra Base de Datos, Tablas, Vistas, Procedimientos Almacenados": [
          "06 - Crear Schema o Database en MySQL",
          "07 - En Uso y Eliminar Schema o Database en MySQL",
          "08 - Crear tablas en MySQL - parte 1",
          "09 - Crear tablas en MySQL - parte 2",
          "10 - Concepto de Llaves foráneas en tablas de datos",
          "11 - Creamos las llaves foráneas a las tablas de datos",
          "12 - Validación de las llaves foráneas con datos",
          "13 - Eliminar tablas de datos",
          "14 - Haciendo uso del Diagramador de datos Workbench",
          "15 - Exportar el Contenido del Modelo de datos"
        ],
        "Mantenimiento de datos a las tablas de MySQL": [
          "16 - Explorar el Ide de HeidiSQL",
          "17 - Insertar Registro en Tabla - parte 1",
          "18 - Insertar Registro en Tabla - parte 2",
          "19 - Insertar Registro en Tabla - parte 3",
          "20 - Actualizar Registro en Tabla",
          "21 - Eliminar Registro de la Tabla",
          "22 - Eliminar Registro de la Tabla - parte 2",
          "23 - Consulta de datos a Tabla"
        ],
        "Operadores y Funciones": [
          "24 - Operadores Aritméticos",
          "25 - Operadores de Comparación",
          "26 - Operadores Lógicos",
          "27 - Funciones strings o de cadenas",
          "28 - Funciones Numéricas",
          "29 - Funciones Fechas",
          "30 - Funciones Adicionales o Avanzadas"
        ],
        "Creación de Vistas": [
          "31 - Creación de Vistas"
        ],
        "Trabajaremos con mayor detalle la Sentencia SQL SELECT": [
          "32 - SELECT DISTINCT de MySQL",
          "33 - SELECT cláusula WHERE de MySQL",
          "34 - SELECT Los operadores MySQL AND, OR y NOT",
          "35 - SELECT ORDER BY Keyword",
          "36 - SELECT INNER JOIN",
          "37 - SELECT INNER JOIN- PARTE 2",
          "38 - SELECT LEFT JOIN",
          "39 - SELECT RIGHT JOIN",
          "40 - UNION SELECT DE MYSQL",
          "41 - SELECT GROUP BY",
          "42 - SELECT IF( ) - CASE END"
        ],
        "Procedimientoa Almacenados": [
          "43 - CREATE PROCEDURE",
          "44 - Consultas a tablas dentro de un Procedimiento Almacenado",
          "45 - CREATE PROCEDURE - PARÁMETRO IN",
          "46 - CREATE PROCEDURE - PARÁMETRO IN (Parte 2)",
          "47 - CREATE PROCEDURE - PARÁMETRO OUT",
          "48 - CREATE PROCEDURE - PARÁMETRO INOUT",
          "49 - Procedimiento Almacenado - Condicional IF",
          "50 - Procedimiento Almacenado - Condicional IF ELSE",
          "51 - Procedimiento Almacenado - Condicional IF ELSEIF ELSE END IF",
          "52 - Procedimiento Almacenado - Condicional IF - Caso práctico"
        ],
        "Funciones": [
          "53 - CREATE FUNCTION"
        ]
      },
      "requirements": [
        "Sistema operativo Windows 7, 8, 10 o 11"
      ],
      "description": "Curso de Base de Datos MySQL Server\n\n\nMySQL Server:\nMySQL es un sistema de gestión de bases de datos relacional desarrollado bajo licencia dual: Licencia pública general/Licencia comercial por Oracle Corporation y está considerada como la base de datos de código abierto más popular del mundo, y una de las más populares en general junto a Oracle y Microsoft SQL Server, todo para entornos de desarrollo web.\n\n\n.:. ¿Quieres aprender a manejar tu información de negocios y/o Empresa en un Servidor de Datos Externo - MySQL Server? .:.\nCon esta alternativa de entrenamiento de Base de Datos MySQL Server podrás darle mayor seguridad, estabilidad y performance a tus sistemas o proyectos.\nBase de Datos MySQL Server\n<<Aprenderás:>>\n* Descarga e Instalación de la Base de datos.\n* Uso del Interface MySQL Workbench.\n* Creación de Base de Datos, Tablas, Columnas de información, Tipos de datos.\n* Insertar, Actualizar, Eliminar y Consultar registros.\n* Manejo y Uso de la Sentencia SQL.\n* Funciones Strings, Numéricas, Fechas y Avanzadas de MySQL Server.\n* Creación de tablas temporales\n* Creaciones de Vistas.\n* Consultas Estructuradas con SQL\n* Creaciones de Procedimientos Almacenados - Nivel Básico.\n* Creaciones de Procedimientos Almacenados - Nivel Intermedio.\n* Creaciones de Procedimientos Almacenados - Nivel Avanzado.\n\n\nInstructor | Programador | Diseñador\nHola que tal amigos, buen día.\nMi nombre es Víctor Ramos, soy de Perú.\nme dedico a:\n* Asistencia Técnica de Cómputo y Desarrollo de Aplicaciones para Pequeñas y Medianas Empresas.\n* Entrenador en programación de Visual FoxPro 9, VB NET, C#, MySQL Server, Maria DB, PostgreSQL, Oracle database y Microsoft SQL Server.",
      "target_audience": [
        "Estudiantes, Programadores, Desarrolladores de Sistemas"
      ]
    },
    {
      "title": "Aplicações web na prática com Javascript e Node.js",
      "url": "https://www.udemy.com/course/aplicacoes-web-na-pratica-javascript-nodejs/",
      "bio": "Aprenda a desenvolver aplicações web completas em poucas horas, utilizando Javascript ES6, Node.js e Mysql",
      "objectives": [
        "Desenvolver servidores RESTful utilizando Nodejs e MySQL",
        "Criar Single Page Applications para efetuar as operações de acesso a um servidor REST Nodejs",
        "Entender conceitos de manipulação de DOM com Vanilla Javascript ES6",
        "Aprender a configurar e utilizar o framework de rotas Restify",
        "Realizar chamadas Ajax utilizando a biblioteca Axios"
      ],
      "course_content": {
        "Introdução": [
          "O que eu devo esperar deste curso?",
          "O que eu não devo esperar deste curso?",
          "Porque Javascript?",
          "Dicas para acompanhar melhor o curso"
        ],
        "Curso 1 - Uma aplicação muito CRUD!": [
          "Back-end? Pra que eu preciso disso?",
          "Configurando o ambiente de desenvolvimento",
          "Iniciando um servidor com Node.js",
          "Nodemon - Monitorando alterações no servidor",
          "Fique REST com Restify",
          "Acesso ao MySQL com Knex",
          "Operação de consulta - teste com Postman",
          "Inserindo dados em nossa aplicação",
          "Consultando dados por ID",
          "Atualizando dados da aplicação",
          "Excluindo dados da aplicação",
          "Interface, tudo se resume a interface!",
          "Configurando e iniciando meu servidor REST",
          "Criando o ponto de entrada da aplicação",
          "Definindo nossas funções e consultando dados no servidor",
          "Cadastrando dados na SPA",
          "Refatorar faz parte!",
          "Exclusão de dados na SPA",
          "Edição de dados na SPA",
          "Atualização de dados na SPA",
          "O resumo da ópera"
        ],
        "Curso 2 - Geolocalização em aplicações Web": [
          "O que esperar desta aplicação?",
          "Configuração inicial do serviço back-end",
          "Configurações da API do Google para serviços de geolocalização",
          "Acessando a API do Google a partir do back-end",
          "Reverse Geocode? É de vestir?",
          "Criando imagens de Mapa a partir de geolocation",
          "Salvando em banco os dados de geolocalização",
          "Configurações do Front-End",
          "Componentes da página com Material Design",
          "Apresentando cards de localização",
          "Salvando novos dados de localização",
          "Toques finais com o componente spinner"
        ],
        "Curso 3 - Jogo da velha tunado": [
          "O que vou aprender desta aplicação",
          "Configurações do projeto",
          "Definindo elementos e estilo da página",
          "Classe de controle da aplicação",
          "Dando vida ao tabuleiro",
          "Separação dos turnos",
          "Separando estado e render",
          "Salvando com local storage",
          "Carregando jogo do a partir do local storage",
          "Excluindo dados de jogo salvos",
          "Verificando vitória - a teoria!",
          "Verificando vitória na prática - Parte 1",
          "Verificando vitória na prática - Parte 2",
          "Verificando vitória na prática - Parte 3",
          "Apresentando mensagens",
          "Mensagens animadas - bônus UX",
          "Salvando no servidor - Parte 1",
          "Salvando no servidor - Parte 2",
          "Visualizar jogos salvos no servidor"
        ],
        "Curso 4 - Gráficos na Web": [
          "Iniciando com Express",
          "Conhecendo o Pug - Template Engine",
          "Acessando nosso banco de dados MySQL com Express",
          "Inserção de dados no servidor Express",
          "Refatorando com Módulos no Express",
          "Juntando Bootstrap, Express e Pug",
          "Configurações da Página Web",
          "Desenvolvimento do Cadastro de Clientes",
          "Gráfico de Barras - Parte I",
          "Gráfico de Barras - Parte II",
          "Gráfico de Barras - Parte Final",
          "Gráfico de Linhas",
          "Finalizando com botão Refresh"
        ],
        "Finalizando nosso curso!": [
          "E agora? Pra onde devo ir?"
        ]
      },
      "requirements": [
        "Você precisa conhecer HTML e o básico de CSS",
        "Você deve conhecer o básico de Javascript como uso de funções e variáveis",
        "É desejável que você já tenha visto o comando npm",
        "Você deve conhecer um pouco sobre banco de dados relacionais, como o MySQL",
        "É desejável que o aluno entenda o que significa uma chamada Ajax"
      ],
      "description": "Neste curso, você aprenderá como desenvolver aplicações web completas, utilizando Javascript ES6 para criar o lado cliente da aplicação e Node.js para o lado servidor.\n\nNossas aplicações tem o formato de SPAs (Single Page Applications), pois permitem realizar todas as operações de acesso ao servidor a partir de uma única página. Desta forma, você terá contato com diversas técnicas importantes de manipulação do DOM, sem a necessidade de utilizar nenhum framework para isso!\nA ideia de apresentar Vanilla Javascript como nossa ferramenta de desenvolvimento front-end, é mostrar que existe uma gama diversa de projetos que não necessitam de nenhum framework Javascript para serem bem desenvolvidos. Além disso, você verá também alguns conceitos importantes da linguagem, que vão te ajudar e muito caso você adote ou já utilize um framework!\nAdotamos também Node.js para o desenvolvimento do back-end, para mostrar como é simples desenvolver um servidor com acesso ao banco de dados. Sem precisar de alguma experiência no back-end, você será capaz de entender os conceitos aqui apresentados enquanto desenvolve aplicações completas!\nO nosso objetivo principal é que, ao termino do curso, você se sinta mais a vontade em experimentar as tecnologias do mundo Javascript. Por isso criamos aplicações que exploram muitos conceitos de desenvolvimento full-stack.\n\n\n\nDetalhes das aplicações desenvolvidas durante o curso:\n\n\nCurso 1 - Uma aplicação muito CRUD: Nesta seção você vai desenvolver uma aplicação que apresenta as quatro operações de manipulação de dados - Create, Read, Update e Delete. Você vai desenvolver um servidor RESTful e uma página Web, utilizando as seguintes tecnologias\nRestify framework e plugins - criação do sistema de rotas REST\nKnex - ORM para acesso ao MySQL\nNode.js - tecnologia para criação de servidores web\nNodemon - para manter o servidor ativo e atualizado enquanto desenvolvemos\nPostman - cliente de acesso http para realizar o teste das rotas\nJavascript ES6 - para desenvolver a lógica da aplicação\nAxios - para permitir chamadas Ajax baseadas em Promises.\nFont Awesome - para importar alguns ícones\nBootstrap framework v4 - Para estilizar nossa página\n\n\nCurso 2 - Geolocalização em aplicações Web: Nesta seção, você vai aprender a manipular dados de Geolocalização, desenvolvendo uma aplicação full-stack, utilizando as seguintes tecnologias\nRestify framework e plugins - criação do sistema de rotas REST\nNode.js - tecnologia para criação de servidores web\nKnex - ORM para acesso ao MySQL\nGoogle Maps API - para trabalhar com dados de geolocalização\nJavascript ES6 - para desenvolver a lógica da aplicação\nAxios - para permitir chamadas Ajax baseadas em Promises.\nMaterial Design Lite - Para estilizar nossa página\nNodemon - para manter o servidor ativo e atualizado enquanto desenvolvemos\nPostman - cliente de acesso http para realizar o teste das rotas\n\n\nCurso 3 - Jogo da velha tunado: Nesta seção, você desenvolve um jogo da velha com recursos sofisticados, tais como salvamento local (local storage), salvamento remoto (acesso a API), geração de imagens à partir do DOM e manipulação de animações com JS+CSS. Para isso, você vai utilizar as tecnologias\n\nRestify - framework e plugins - criação do sistema de rotas REST\nNode.js - tecnologia para criação de servidores web\nKnex - ORM para acesso ao MySQL\nJavascript ES6 - para desenvolver a lógica da aplicação\nAxios - para permitir chamadas Ajax baseadas em Promises.\nDom2Image - biblioteca que cria imagens dinâmicas a partir de elementos do DOM\nFont Awesome - para importar alguns ícones\nBootstrap framework v4 - Para estilizar nossa página\nNodemon - para manter o servidor ativo e atualizado enquanto desenvolvemos\nPostman - cliente de acesso http para realizar o teste das rotas\n\n\nCurso 4 - Gráficos na Web: Nesta seção, você desenvolve um cadastro de clientes que apresenta gráficos dinâmicos. Com os gráficos, é possível identificar quantos clientes do sexo masculino e feminino já foram cadastrados, além de visualizar o total de clientes cadastrados por dia\n\nExpress.js - framework e plugins - criação do sistema de rotas REST\nNode.js - tecnologia para criação de servidores web\nKnex - ORM para acesso ao MySQL\nJavascript ES6 - para desenvolver a lógica da aplicação\nPug.js - template engine para Node.js\nAxios - para permitir chamadas Ajax baseadas em Promises.\nChart.js- biblioteca para criação de gráficos dinâmicos com Javascript\nBootstrap framework v4 - Para estilizar nossa página\nNodemon - para manter o servidor ativo e atualizado enquanto desenvolvemos\nPostman - cliente de acesso http para realizar o teste das rotas\n\n\nSerá que eu deveria fazer este curso? Se você se identificar com alguns dos critérios a seguir, eu diria que sim!\n\nAlunos que desejam ingressar no mercado de desenvolvimento de sistemas\nEstudantes de programação que querem conhecer melhor Javascript\nProgramadores de diversas linguagens que tem interesse em Node.js\nCuriosos pelas novas tendências tecnológicas do mundo de desenvolvimento web.",
      "target_audience": [
        "Iniciantes no desenvolvimento de aplicações web com Javascript",
        "Iniciantes no desenvolvimento back-end com Nodejs",
        "Interessados em explorar mais conceitos de Javascript e chamadas Ajax",
        "Estudantes de aplicações web do tipo SPA (Single Page Application)",
        "Desenvolvedores interessados em desenvolvimento full-stack"
      ]
    },
    {
      "title": "Yazılım Temel Başlangıç Eğitimi",
      "url": "https://www.udemy.com/course/yazilim-temel-baslangic-egitimi/",
      "bio": "Python, Java, SQL, HTML, CSS, Pandas, Numpy, Tkinter, Swing Temel Eğitimi",
      "objectives": [
        "Python Programlama",
        "Java Programlama",
        "HTML,CSS ile Web Tasarımın Temelleri",
        "SQL",
        "Tkinter GUI Programlama (Arayüz Tasarımı)",
        "Swing GUI Programlama (Arayüz Tasarımı)",
        "Numpy",
        "Pandas"
      ],
      "course_content": {
        "Giriş": [
          "Tanıtım"
        ],
        "HTML Dersleri": [
          "Visual Studio Code Kurulumu",
          "Giriş",
          "Element, Etiket",
          "Nitelikler",
          "Headings, Paragraphs, Pre",
          "Style",
          "Formatting Elements",
          "Comments",
          "Colors",
          "RGB, HEX, HSL",
          "CSS",
          "Link",
          "Bookmarks",
          "Images",
          "Background-Images",
          "Table",
          "List",
          "Block & Inline",
          "Class",
          "Id",
          "Javascript",
          "Form ve Input Types",
          "Input Attributes",
          "Video-Audio"
        ],
        "CSS": [
          "Adding CSS",
          "Simple Selector",
          "Combinator Selector",
          "Pseuda Class Selector",
          "Colors",
          "Background Color",
          "Display",
          "Position",
          "Border",
          "Margin",
          "Padding",
          "Width-Height"
        ],
        "HTML-CSS Uygulamaları": [
          "Basit Web Sitesi Arayüzü"
        ],
        "Javascript Temel Bilgileri": [
          "Ders Ortamının Hazırlanması ve Extension Kurulumu",
          "Javascript Kodlarını Nereye Yazacaz",
          "Çıktı Alma Yöntemleri",
          "Değişkenler",
          "Let",
          "Const",
          "Operatörler",
          "Veri Tipleri",
          "Fonksiyonlar",
          "Örnek Uygulama",
          "Return",
          "Object",
          "Event"
        ],
        "Sqlite Veri Tabanı İşlemleri": [
          "DB Browser Kurulumu, Veri Tabanı ve Tablo Oluşturma",
          "Select ve Distinct Sorguları",
          "Where Sorgusu",
          "AND, OR, NOT Operatörleri",
          "Order By Sorgusu",
          "Insert Into",
          "Null Veriler",
          "Update",
          "Delete From",
          "MIN-MAX",
          "Count, Avg, Sum",
          "Like",
          "In, Between"
        ],
        "Python Programlama": [
          "Kurulum",
          "Değişkenler",
          "Veri Tipleri",
          "String",
          "String Metodları",
          "Format Metodu ve Kaçış Dizileri",
          "Listeler",
          "Liste Metodları",
          "input",
          "if-elif-else",
          "if-elif-else kısa",
          "For Döngüsü",
          "While Döngüsü",
          "Fonksiyonlar 1",
          "Fonksiyonlar 2",
          "Return Deyimi",
          "Global Deyimi",
          "Hata Yakalama",
          "Tupple-Set-Dictionary",
          "Temel Dosya İşlemleri",
          "map-filter-reduce",
          "Lambda fonksiyonu",
          "Gömülü Fonksiyonlar",
          "Recursive Fonksiyonlar",
          "Modüllerin Çağrılması",
          "Modül Oluşturma",
          "name niteliği",
          "Random Modulü",
          "DateTime Modulü"
        ],
        "Python ile Veri Tabanı İşlemleri": [
          "Sqlite Veri Tabanı Kurulumu",
          "Sqlite Tablo ve Değer Eklemek",
          "Sqlite-Select Where Order By",
          "Sqlite-Update Delete"
        ],
        "Python Nesne Tabanlı Programlama": [
          "Nesne Tabanlı Programlama 1",
          "Nesne Tabanlı Programlama 2",
          "Nesne Tabanlı Programlama 3",
          "str Metodu"
        ],
        "Tkinter İle GUI Programlama": [
          "Pencere Oluşturma",
          "Etiket Oluşturma",
          "Düğme Oluşturma",
          "Resim Ekleme",
          "Entry ile Kullanıcı Girişi Oluşturma",
          "MessageBox Oluşturma",
          "ListBox Oluşturma",
          "Frame ve ScrollBar Oluşturma",
          "Menu Oluşturma",
          "ProgressBar Oluşturma",
          "Scale Oluşturma",
          "Event-Mouse Kontrolü",
          "Treeview Kullanımı",
          "Treeview Ağaç Yapısı"
        ]
      },
      "requirements": [
        "Yazılım Dünyasına İlgi",
        "Çalışma İsteği",
        "Başarma Azmi"
      ],
      "description": "Yazılım dünyasına giriş yapmayı düşünen, Algoritma yeteneklerini geliştirmek ve bu büyük dünyada kendine yer bulmaya çalışan herkes için temel bir başlangıç paketi olarak hazırlanan bu eğitim seti sizlere kurs başlığında belirttiğimiz konularda sağlam ve doyurucu bilgiler sağlayacaktır. Bu eğitim setini bitirmeniz halinde hatırı sayılır bir bilgi birikimine sahip olacaksınız. Yazılım dünyasının hangi alanında kendinizi geliştirmek istediğinize karar veremediyseniz, veya farklı dallarda bilgi sahibi olmak isterseniz bu eğitim seti tam da size göre. Bu Eğitim seti size tek bir programlama dilinin detaylarında boğulmadan kolay ve anlaşılır bir şekilde birden fazla alanda birikim sahibi olma imkanı veriyor.\nÇalışmanın ve öğrenmenin verdiği mutluluğu paylaşmak dileğiyle...",
      "target_audience": [
        "Kariyerine Yazılımcı Olarak Devam Etmek İsteyenler",
        "Python Programlama Öğrenmek İsteyenler",
        "Java Programlama Dilini Öğrenmek İsteyenler",
        "Grafik Arayüz Tasarımı Öğrenmek İsteyenler",
        "Veri Bilimine Meraklı Python Geliştiricileri",
        "Web Tasarımın Temellerini Öğrenmek İsteyenler",
        "Veri Tabanı Programlama Konusunda Bilgi Sahibi Olmakİsteyenler"
      ]
    },
    {
      "title": "Lógica de Programação e Estruturas de Dados com Javascript",
      "url": "https://www.udemy.com/course/logica-de-programacao-com-javascript-iniciando-no-frontend/",
      "bio": "Aprenda a programar resolvendo problemas reais e crie seus primeiros códigos Javascript, seja para frontend ou não.",
      "objectives": [
        "Terão a base para escrever seus primeiros programas"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Interaja com outros alunos",
          "ANTES DE COMEÇAR ...",
          "Introdução e pré-requisitos",
          "O que é algoritmo",
          "Instalação das ferramentas necessárias"
        ],
        "variáveis e tipos de valores": [
          "O que é uma variável?",
          "detalhes sobre a sintaxe do JS",
          "tipos de valores",
          "curiosidades",
          "desafio - operadores aritméticos",
          "resolução de desafio",
          "exercicio mostrar a media",
          "precedência de operadores",
          "operadores de atribuição",
          "operadores de incremento e decremento",
          "desafio - operadores aritméticos e atribuição",
          "resolução de desafio",
          "null e undefined, NaN",
          "BaNaNa"
        ],
        "operadores de comparação e lógicos": [
          "introdução",
          "resolução de desafio",
          "operadores lógicos",
          "desafio",
          "ERRATA no enunciado do Desafio",
          "resolução de desafio",
          "ERRATA: erro de sintaxe no último slide",
          "negação para transformar em booleano"
        ],
        "Controles de decisão": [
          "if else",
          "resolução de desafio",
          "desafio",
          "resolução de desafio",
          "desafio resolução do desafio",
          "desafio",
          "resolução de desafio",
          "switch case",
          "resolução de desafio"
        ],
        "Laços de repetições": [
          "loop while",
          "desafio",
          "resolução de desafio",
          "loop for e loop do... while",
          "loop for versus loop while",
          "for versus while - parte 2",
          "resolução de desafio",
          "resolução de desafio",
          "break",
          "cuidado com continue em loop while",
          "exercício -jogar os dados",
          "exercício - jogar dados 2",
          "resolução de desafio",
          "resolução de desafio - anos bissextos"
        ],
        "Arrays e Objetos": [
          "introdução à arrays",
          "como adicionar um elemento no fim da array",
          "como duplicar uma array",
          "desafio - dias da semana",
          "resolução do desafio",
          "desafio soma dos números de uma array",
          "resolução do desafio",
          "resolução do desafio",
          "Esse aluno mandou bem demais",
          "resolução do desafio",
          "resolução do desafio",
          "resolução do desafio",
          "resolução do desafio",
          "O que é um objeto?",
          "problema - mostrar consumo de gasolina",
          "resolução de desafio",
          "um objeto dentro de outro",
          "acessar propriedade de objeto dentro de outro",
          "loop for in",
          "desafio",
          "resolução do desafio"
        ],
        "Introdução ao DOM": [
          "introdução",
          "obter valor de input",
          "onde inserir javascript",
          "textContent vs innerHTML",
          "adicionar conteúdo sem substituí-lo"
        ],
        "estruturas complexas": [
          "arrays com objetos",
          "arrays com objetos - parte 2",
          "objetos com arrays",
          "arrays com objetos com arrays",
          "desafio",
          "resolução"
        ],
        "Funções": [
          "Introdução",
          "mostrar tabuada no click",
          "resolução desafio - limpar tabuada",
          "calcular área de triangulo",
          "desafio - área da circunferência",
          "resolução desafio - área da circunferência",
          "funções que aceitam parâmetros",
          "funções que aceitam parâmetros - parte 2",
          "funções que retornam valores",
          "funções que retornam valores - parte 2",
          "funções que retornam valores - parte 3",
          "desafio somar()",
          "resolução desafio somar()",
          "resolução desafio calcular()",
          "resolução desafio ehPar()",
          "resolução desafio ehBissexto()"
        ],
        "Tratamento de exceções": [
          "Introdução ao tratamento de exceções",
          "porque try / catch ?",
          "larçar Erro com throw Error",
          "resolução de desafio"
        ]
      },
      "requirements": [
        "Conhecimentos de sistema operacional.",
        "Desejável, mas não obrigatório, conhecimentos básicos de HTML"
      ],
      "description": "Este curso de Lógica de programação, Estrutura de Dados e algoritmos utilizando Javascript é uma excelente introdução para aqueles que desejam dar seus primeiros passos no desenvolvimento web. A didática é focada em problemas reais e à medida que o(a) aluno(a) avança nos exercícios propostos, novos conhecimentos são adquiridos para formar uma base sólida de conhecimento que pode ser utilizada tanto por aspirantes à programador frontend, que utilizam Javascript, quanto para qualquer outra linguagem.\nDurante o curso, você irá desenvolver códigos com base em exemplos práticos, onde o foco é desenvolver suas habilidades em lógica de programação. A abordagem prática é o grande diferencial deste treinamento, já que antes de cada assunto será apresentado um problema real para que o aluno possa aplicar os conhecimentos aprendidos.\nEste curso é ideal para aqueles que desejam iniciar uma carreira como desenvolvedor e não possuem conhecimentos prévios em lógica de programação e algoritmos. Com uma abordagem prática e didática, você estará pronto para desenvolver suas habilidades e aplicá-las em projetos reais.\nCom uma base sólida em lógica de programação e algoritmos, você estará preparado para desenvolver soluções eficazes para problemas reais em qualquer linguagem de programação. Se você deseja iniciar sua carreira como desenvolvedor web, este treinamento é o ponto de partida perfeito para você. Não perca a oportunidade de adquirir os conhecimentos necessários para iniciar sua jornada rumo ao sucesso como desenvolvedor.",
      "target_audience": [
        "Iniciantes na área de programação",
        "Aspirantes a desenvolvedores web",
        "Pessoas que querem dar o passo inicial rumo à area de programação"
      ]
    },
    {
      "title": "Git/GitHub ちゃんと入門。コマンドが苦手な人がSourceTreeで学べる講座（コマンドにも対応）",
      "url": "https://www.udemy.com/course/git-beginning/",
      "bio": "ファイルのバージョン管理システムGitを、無料で使えるクライアントソフトSourceTreeを使って学びます。",
      "objectives": [
        "Gitを利用したバージョン管理が行えるようになる",
        "GitHubを利用して、ソフトウェア開発などでのチーム開発が行えるようになる",
        "GitHub Flowを利用したブランチの運用ルールを学ぶことができる",
        "コマンドラインでの操作方法"
      ],
      "course_content": {
        "はじめに": [
          "Udemyでの受講について"
        ],
        "[Windows] Gitの環境を作ろう": [
          "macOSの方へ",
          "SourceTreeをセットアップしよう",
          "リポジトリを作成しよう",
          "ファイルをコミットしよう",
          "ステージングでコミットを調整しよう",
          "行単位でコミットしよう",
          "リセットで変更を元に戻そう",
          "タグ機能でコミットログに印をつけよう",
          "Gitが無視するファイルを指定しよう",
          "コミット後のファイルを削除しよう"
        ],
        "[Windows] ブランチで作業を分けて開発しよう": [
          "ブランチで作業の履歴を分けよう",
          "マージでブランチを合流しよう",
          "ブランチの削除と名前の変更",
          "ファストフォワードとは",
          "コンフリクトを解決しよう"
        ],
        "[Windows] リモートリポジトリにファイルを同期しよう": [
          "GitHubのアカウントを作ろう",
          "リモートリポジトリを追加しよう",
          "プッシュができない場合について",
          "プッシュでリモートリポジトリに送信しよう",
          "[補足] プッシュができないときの対処法について",
          "リモートリポジトリからクローンしよう",
          "リモートリポジトリからプルで変更を取り込もう",
          "プルの時にコンフリクト（衝突）が起こった時の対処法",
          "revertでコミットを取り消そう",
          "プルリクエスト機能で安全にマージしよう",
          "ブランチ運用ワークフローとGitHub Flow",
          "ブランチの削除と名前の変更"
        ],
        "[Windows] Gitのその他の機能": [
          "スタッシュで作業を一時退避させよう",
          "アメンドコミットでコミットを加工しよう",
          "リベースでマージしよう",
          "チェリーピックで特定のコミットを取り込もう",
          "パッチを作成して特定のコミットを配布しよう"
        ],
        "[macOS] Gitの環境を作ろう": [
          "Windowsで学習されている方へ",
          "SourceTreeをセットアップしよう",
          "リポジトリを作成しよう",
          "ファイルをコミットしよう",
          "ステージングでコミットを調整しよう",
          "行単位でコミットしよう",
          "リセットで変更を元に戻そう",
          "タグ機能でコミットログに印をつけよう",
          "Gitが無視するファイルを指定しよう",
          "コミット後のファイルを削除しよう"
        ],
        "[macOS] ブランチで作業を分けて開発しよう": [
          "ブランチで作業の履歴を分けよう",
          "マージでブランチを合流しよう",
          "ブランチの削除と名前の変更",
          "ファストフォワードとは",
          "コンフリクトを解決しよう"
        ],
        "[macOS] リモートリポジトリにファイルを同期しよう": [
          "GitHubのアカウントを作ろう",
          "リモートリポジトリを追加しよう",
          "プッシュでリモートリポジトリに送信しよう",
          "リモートリポジトリからクローンしよう",
          "リモートリポジトリからプルで変更を取り込もう",
          "プルの時にコンフリクト（衝突）が起こった時の対処法",
          "revertでコミットを取り消そう",
          "プルリクエスト機能で安全にマージしよう",
          "ブランチ運用ワークフローとGitHub Flow",
          "ブランチの削除と名前の変更"
        ],
        "[macOS] Gitのその他の機能": [
          "スタッシュで作業を一時退避させよう",
          "アメンドコミットでコミットを加工しよう",
          "リベースでマージしよう",
          "チェリーピックで特定のコミットを取り込もう",
          "パッチを作成して特定のコミットを配布しよう"
        ],
        "[共通] GitHubの各種機能を利用しよう": [
          "GitHubの各機能を利用しよう",
          "イシューで課題を管理しよう",
          "ラベルでイシューを分類しよう",
          "マイルストーンで締切を設定しよう",
          "その他のイシューの機能",
          "GitHub Projectsでプロジェクトを管理しよう①",
          "GitHub Projectsでプロジェクトを管理しよう②",
          "GitHub Projectsでプロジェクトを管理しよう③",
          "GitHub Pagesでウェブサイトを公開しよう①",
          "GitHub Pagesでウェブサイトを公開しよう②",
          "GitHub ActionsでCI/CDツールを利用しよう",
          "GitHub Gistでスニペットを共有しよう",
          "GitHub Desktopを使ってみよう"
        ]
      },
      "requirements": [
        "PCの基本的な操作、エディターの操作",
        "英語版サービスを利用するため、英語に対する抵抗感の払拭"
      ],
      "description": "Gitは、ファイルのバージョンを管理して、間違えた操作をやり直したり複数のメンバーで開発をしているソースコードを、同期や統合するためのシステムです。\n本来は、コマンドラインで操作をして作業していきますが、現在ではクライアントソフトが多数登場して、非常に使いやすくなっています。この講座では、中でも無償で使える「SourceTree」を利用して、Gitの使い方をはじめから分かりやすく解説します。\nSourceTreeは、Windows/macOS版で提供されていますが、操作方法が若干違うため、本講座では両方の環境で同じ解説を2回行っているため、どちらをご利用の方でも自分に合った環境で学習して頂けます。\nまた、講座の後半ではGitHubの各機能である、Issues、Projects、Gists、Actionsなども紹介しています。ぜひ、本講座でGitを使いはじめてみましょう。",
      "target_audience": [
        "プログラミングを学習中で、合わせて Gitについても学んでおきたい方",
        "Gitを学習したことがあるが、コマンドラインでの操作が難しく感じた方",
        "Gitをチュートリアル等で学習したことがある方"
      ]
    },
    {
      "title": "Aprenda JAVA em 7 Dias com Projetos Reais",
      "url": "https://www.udemy.com/course/aprenda-java-em-7-dias-projetos-reais/",
      "bio": "Linguagem de Programação JAVA para Iniciantes. Com muitos Projetos do Mundo Real. Aulas 100% hands on!",
      "objectives": [
        "Compreender os conceitos básicos da programação orientada a objetos e da linguagem Java.",
        "Aprender a escrever código Java efetivo, incluindo variáveis, fluxo de controle, classes e objetos.",
        "Desenvolver habilidades na criação de aplicativos Java, incluindo aplicativos desktop, web e mobile.",
        "Entender como integrar Java com bancos de dados e APIs.",
        "Desenvolver habilidades na solução de problemas e na implementação de soluções complexas em Java.",
        "Adquirir uma compreensão geral da plataforma Java e dos recursos disponíveis para os programadores Java, incluindo as bibliotecas e frameworks."
      ],
      "course_content": {
        "Iniciando": [
          "Boas Vindas",
          "Download do JAVA SE",
          "Download da IDE",
          "Criando o seu primeiro programa",
          "Help! Somos uma comunidade"
        ],
        "Dia 1": [
          "Iniciando o dia 1",
          "Edições do Java",
          "Qual versão de Java devo utilizar",
          "Como JAVA funciona?",
          "Como funcionam as Variáveis",
          "Tipos primitivos de variáveis",
          "Tipos de referência de variáveis",
          "Atalhos e formatação",
          "Adicionando o Input",
          "Dia 1 - Projeto",
          "Dia 1 - Solução",
          "Dia 1 - Desafio",
          "Finalizando o dia 1"
        ],
        "Dia 2": [
          "Iniciando o dia 2",
          "Criando uma Int Array",
          "Criando uma String Array",
          "Arrays Multidimensionais",
          "Aplicando constantes",
          "Operadores",
          "Ordem dos Operadores",
          "Convertendo String em Integers",
          "A classe MATH",
          "Dia 2 - Projeto",
          "Dia 2 - Solução",
          "Finalizando o dia 2"
        ],
        "Dia 3": [
          "Iniciando o dia 3",
          "Formatando números em Java",
          "Operador de comparação",
          "Operador lógico AND",
          "Operador lógico OR",
          "IF e ELSE",
          "Operador ternário",
          "Dia 3 - Projeto",
          "Dia 3 - Solução",
          "Finalizando o dia 3"
        ],
        "Dia 4": [
          "Iniciando o dia 4",
          "Utilizando o Switch",
          "Criando um For Loop",
          "For Loops com Arrays",
          "Nested Loops",
          "While Loops",
          "Dia 4 - Desafio A",
          "Dia 4 - Solução 1A",
          "Dia 4 - Solução 2A",
          "Dia 4 - Desafio B",
          "Dia 4 - Solução B",
          "Finalizando o dia 4"
        ],
        "Dia 5": [
          "Iniciando o dia 5",
          "Organizando o codigo",
          "Criando métodos",
          "Corrigindo erros no codigo",
          "Utilizando o Debug",
          "Extraindo a sua aplicação",
          "Finalizando o dia 5"
        ],
        "Dia 6": [
          "Iniciando o dia 6",
          "Conceito de Classes",
          "Criando uma Classe",
          "Criando um Constructor",
          "O conceito de Encapsulation",
          "Criando um getter",
          "Criando um setter",
          "Dia 6 - Desafio",
          "Dia 6 - Solução",
          "Finalizando o dia 6"
        ],
        "Dia 7": [
          "Iniciando o dia 7",
          "Desafio 1",
          "Solução 1",
          "Desafio 2",
          "Solução 2",
          "Desafio 3",
          "Solução 3",
          "Finalizando o dia 7"
        ],
        "Finalizando": [
          "Bonus"
        ]
      },
      "requirements": [
        "Um PC e força de vontade :)"
      ],
      "description": "Aprenda Java do Zero ao Prático em Apenas 7 Dias – Desenvolva Projetos Reais e entre no mercado de programação\nJava é uma das linguagens de programação mais utilizadas e valorizadas no mundo.\nEmpresas como Google, Amazon, Netflix, LinkedIn e muitas outras usam Java para desenvolver aplicativos, sistemas corporativos e soluções de alto desempenho.\nSe você quer entrar no mundo da programação e conquistar oportunidades em tecnologia, este curso é o seu ponto de partida.\nAqui você vai aprender Java do zero, mesmo sem experiência anterior, e colocar tudo em prática com projetos reais desde o início.\n\n\nO que você vai aprender\n\n\nConceitos fundamentais de Java (variáveis, tipos de dados, operadores, loops e condicionais)\nProgramação Orientada a Objetos (POO) de forma simples e aplicada\nCriação e manipulação de métodos e classes\nUso de arrays, listas e estruturas de dados\nManipulação de arquivos e entrada/saída de dados\nProjetos práticos para fixar o aprendizado\nBoas práticas de programação e código limpo\nPreparação para desafios e entrevistas técnicas\n\n\nPor que este curso é diferente\n\n\nAprendizado acelerado: metodologia para aprender de forma intensiva em apenas 7 dias\n100% prático: teoria aplicada diretamente em exemplos e projetos reais\nProjetos úteis: crie aplicações que podem entrar no seu portfólio\nLinguagem simples: explicações claras, sem termos complicados\nAcesso vitalício: estude no seu ritmo e revise sempre que quiser\n\n\nPara quem é este curso\n\n\nIniciantes que querem aprender programação do zero\nEstudantes e autodidatas que querem dominar Java rapidamente\nProfissionais que desejam atualizar suas habilidades\nQuem quer criar projetos próprios ou buscar oportunidades no mercado de tecnologia\n\n\nAo final do curso, você estará pronto para criar suas próprias aplicações em Java, resolver problemas de programação com eficiência e dar o próximo passo para se tornar um desenvolvedor profissional.\n\n\nInscreva-se agora e comece sua jornada para dominar Java em apenas 7 dias com projetos reais.",
      "target_audience": [
        "Iniciantes na programação: Este curso é ideal para aqueles que nunca programaram antes e desejam aprender a desenvolver aplicativos usando Java.",
        "Programadores que desejam aprender Java: Se você já tem alguma experiência em programação, mas ainda não trabalhou com Java, esse curso é para você.",
        "Desenvolvedores de aplicativos: Se você deseja aprimorar suas habilidades em desenvolvimento de aplicativos, este curso é uma ótima opção para aprender a desenvolver aplicativos usando Java.",
        "Profissionais em busca de novas oportunidades de carreira: Se você está procurando uma carreira em desenvolvimento de software e deseja adicionar Java a sua lista de habilidades, esse curso é para você.",
        "Profissionais de TI que desejam aprimorar suas habilidades: Se você trabalha na área de TI e deseja adicionar Java à sua lista de habilidades, este curso é uma ótima opção.",
        "Estudantes de computação ou tecnologia da informação: Se você está estudando computação ou tecnologia da informação e deseja aprender Java, este curso é uma ótima opção para aprimorar seus conhecimentos e habilidades."
      ]
    },
    {
      "title": "알고리즘 코딩 테스트 입문부터 합격까지 (Feat. 컴공선배 알고리즘캠프)",
      "url": "https://www.udemy.com/course/comgong_codingtest/",
      "bio": "컴공선배와 함께하는 알고리즘 코딩 테스트 대비 전략",
      "objectives": [
        "기본적인 Python 문법 사용에 익숙해지고 알고리즘 문제를 Python으로 풀 수 있게 됩니다.",
        "알고리즘 문제를 풀기 위한 배경지식, 문제해결력, 구현력 등을 기르게 됩니다.",
        "몇 가지 자료구조(배열, 연결 리스트, 스택, 큐, 우선순위 큐, 맵, 집합), 알고리즘(완전탐색, 탐욕법, DFS, BFS, 백트래킹, 이분 탐색, 동적 계획법)을 학습합니다.",
        "채용 과정에서 치뤄지는 알고리즘 코딩 테스트들의 합격권까지 알고리즘 기본 실력을 기릅니다."
      ],
      "course_content": {
        "Part 0. 소개": [
          "강사 및 강의 소개"
        ],
        "Part 1. 코딩 테스트 준비 어떻게 해야 하나요?": [
          "코딩테스트란?",
          "코딩 테스트 출제 경향",
          "코딩 테스트 채점 기준",
          "문제 해결 시작하기"
        ],
        "PART 2. 알고리즘 유형 분석 - 자료구조": [
          "Chapter1. 자료구조 - 배열, 벡터, 연결리스트",
          "Chapter1. 자료구조 - 스택, 큐",
          "Chapter1. 자료구조 - 우선순위 큐",
          "Chapter1. 자료구조 - 맵, 집합",
          "Chapter1. 자료구조 - 예제문제 (1)",
          "Chapter1. 자료구조 - 예제문제 (2)",
          "Chapter1. 자료구조 - 예제문제 (3)",
          "Chapter1. 자료구조 - 예제문제 (4)",
          "Chapter1. 자료구조 - 정리"
        ],
        "PART 2. 알고리즘 유형 분석 - 완전탐색": [
          "Chapter 2. 완전 탐색 - 브루트포스",
          "Chapter 2. 완전 탐색 - 예제문제 (1)",
          "Chapter 2. 완전 탐색 - 예제문제 (2)",
          "Chapter 2. 완전 탐색 - 예제문제 (3)",
          "Chapter 2. 완전 탐색 - 정리"
        ],
        "PART 2. 알고리즘 유형 분석 - 탐욕법 Greedy Algorithm": [
          "Chapter 3. 탐욕법",
          "Chapter 3. 탐욕법 - 예제문제 (1)",
          "Chapter 3. 탐욕법 - 예제문제 (2)",
          "Chapter 3. 탐욕법 - 예제문제 (3)",
          "Chapter 3. 탐욕법 - 정리"
        ],
        "PART 2. 알고리즘 유형 분석 - DFS, BFS, 백트래킹": [
          "Chapter 4. DFS, BFS, 백트래킹 - 그래프 자료구조",
          "Chapter 4. DFS, BFS, 백트래킹 - 트리 자료구조",
          "Chapter 4. DFS, BFS, 백트래킹 - 코드로 그래프를 나타내는 방법",
          "Chapter 4. DFS, BFS, 백트래킹 - DFS",
          "Chapter 4. DFS, BFS, 백트래킹 - BFS",
          "Chapter 4. DFS, BFS, 백트래킹 - DFS vs BFS",
          "Chapter 4. DFS, BFS, 백트래킹 - 시간복잡도",
          "Chapter 4. DFS, BFS, 백트래킹 - 예제문제 (1)",
          "Chapter 4. DFS, BFS, 백트래킹 - 백트래킹",
          "Chapter 4. DFS, BFS, 백트래킹 - 예제 문제 (2)",
          "Chapter 4. DFS, BFS, 백트래킹 - 예제문제 (3)",
          "Chapter 4. DFS, BFS, 백트래킹 - 정리"
        ],
        "PART 2. 알고리즘 유형 분석 - 이분 탐색 Binary Search": [
          "Chapter 5. 이분 탐색 Binary Search",
          "Chapter 5. 이분 탐색 Binary Search - 라이브러리",
          "Chapter 5. 이분 탐색 Binary Search - 파라메트릭 서치",
          "Chapter 5. 이분 탐색 Binary Search - 예제문제 (1)",
          "Chapter 5. 이분 탐색 Binary Search - 예제문제 (2)",
          "Chapter 5. 이분 탐색 Binary Search - 정리"
        ],
        "PART 2. 알고리즘 유형 분석 - 동적 계획법 Dynamic Programming": [
          "Chapter 6. 동적 계획법 Dynamic Programming - 동적계획법 소개",
          "Chapter 6. 동적 계획법 Dynamic Programming - 메모이제이션, 타뷸레이션",
          "Chapter 6. 동적 계획법 Dynamic Programming - 피보나치 수열",
          "Chapter 6. 동적 계획법 Dynamic Programming - 이항계수",
          "Chapter 6. 동적 계획법 Dynamic Programming - DP 구현 2가지",
          "Chapter 6. 동적 계획법 Dynamic Programming - 예제문제 (1)",
          "Chapter 6. 동적 계획법 Dynamic Programming - 예제문제 (2)",
          "Chapter 6. 동적 계획법 Dynamic Programming - 정리"
        ],
        "PART 3. 알고리즘 핵심문제": [
          "핵심문제 (1)",
          "핵심문제 (2)",
          "핵심문제 (3)",
          "핵심문제 (4)",
          "핵심문제 (5)",
          "핵심문제 (6)",
          "핵심문제 (7)",
          "핵심문제 (8)"
        ]
      },
      "requirements": [
        "Python 기본 문법 (변수, 배열, 문자열, 함수, 반복문, 조건문) 을 알고 있습니다."
      ],
      "description": "최근 몇 년 간 많은 기업들, 코딩 부트캠프 프로그램 등에서 채용 과정에 알고리즘 코딩 테스트를 도입했습니다.\n이제는 IT직군에서 좋은 곳에 가고싶다면 코딩 테스트를 대비하지 않을 수 없게 되었습니다.\n이 강의는 간단한 프로그래밍 정도는 가능하지만 코딩 테스트를 대비해서 알고리즘 문제를 풀어본 경험이 거의 없는 분들을 위한 입문 강의입니다.\n보통 알고리즘 '대회'는 상당한 실력자들이 참가해 굉장히 어려운 수준의 문제가 나오는 편입니다.\n하지만, 기업들이 채용 목적으로 시행하는 코딩 테스트들은 대회 정도의 너무 어려운 문제는 내지 않습니다.\n프로그래머로서 기본적인 자료구조 및 알고리즘들을 알고 있고 사용할 줄 아는지, 최소한의 문제해결력을 갖추고 있는지 검증하는게 목적이기 때문입니다.\n이 강의를 통해 그러한 코딩 테스트들의 합격권까지 필요한 과정을 학습할 수 있습니다.\n강의는 Python 위주로 진행되며 가끔 C++에 대해서도 언급할 수 있습니다.\nPython 코딩을 위한 환경 세팅이나 기본 문법들 설명은 생략하며 기초적인 코딩은 가능하다는 것을 전제로 진행합니다.\n(초보적인 수준만 되어도 들으실 수 있습니다)\n\n본 강의는 컴공선배에서 진행하는 코딩테스트 교육, 알고리즘 캠프의 내용을 일부 압축하여 다루고 있습니다.\n\n강의 목차\n\nPART 1. 코딩 테스트 준비 어떻게 해야 하나요?\nChapter 1. 코딩 테스트란\nChapter 2. 코딩 테스트 출제 경향\nChapter 3. 코딩 테스트 채점 기준\nChapter 4. 문제 해결 시작하기\nPART 2. 알고리즘 유형 분석\nChapter 1. 자료구조\nChapter 2. 완전 탐색\nChapter 3. 탐욕법 Greedy Algorithm\nChapter 4. DFS, BFS, 백트래킹\nChapter 5. 이분 탐색 Binary Search\nChapter 6. 동적 계획법 Dynamic Programming\n\nPART 3. 알고리즘 핵심문제\nPART 4. 삼성·카카오 기출 문제\n\n[총 10~15시간 분량의 강의가 업로드 될 예정이며, 순차적으로 공개될 예정입니다. 최종 콘텐츠 공개 후에는 코스 판매 금액이 소액 인상될 수 있습니다]",
      "target_audience": [
        "알고리즘 코딩 테스트를 대비하기 시작하는 컴퓨터공학 전공자 및 비전공자"
      ]
    },
    {
      "title": "Lambdas y Streams en Java. Aprende programación funcional.",
      "url": "https://www.udemy.com/course/aprende-programacion-funcional-con-java-8/",
      "bio": "Aprende a usar Streams, lambdas, interfaces funcionales y más.",
      "objectives": [
        "Crear código expresivo y fácil de leer mediante las expresiones Lambda.",
        "Crear y utilizar las interfaces funcionales personalizadas.",
        "Utilizar las interfaces funcionales predefinidas de Java.",
        "Escribir código mucho más compacto y limpio.",
        "Utilizar los Streams para el manejo eficiente y funcional de conjuntos de datos. Tu aplicación va a volar",
        "Tener ideas concretas de en qué situaciones puedes hacer uso de la programación funcional.",
        "Crear aplicaciones increíblemente eficientes en el manejo de datos."
      ],
      "course_content": {
        "Introducción": [
          "Novedades de Java 8",
          "¿Qué es la programación funcional?"
        ],
        "Uso de las expresiones lambda": [
          "Código fuente de la clase",
          "¿Qué es una expresión lambda?",
          "¿Qué es una interfaz funcional?",
          "Sintaxis de una expresión lambda",
          "Sintaxis de expresión lambda",
          "Inferencia de tipo en la expresión lambda",
          "Cuestionario sobre la inferencia de tipos",
          "Expresiones lambda sin parámetros",
          "Expresiones lambda",
          "Expresiones lambda con parámetros",
          "Expresiones lambda con devolución",
          "Ambiguedad de tipo en expresiones lambda",
          "Expresión lambda como retorno de métodos",
          "Usos de expresiones lambda",
          "Scopes de las expresiones lambda",
          "Expresiones Lambda"
        ],
        "Las interfaces funcionales": [
          "Introducción a las interfaces funcionales",
          "Interfaces funcionales",
          "La interfaz Function - parte1",
          "La interfaz Function - parte2",
          "La interfaz Function",
          "La interfaz BiFunction",
          "La interfaz Predicate",
          "Combinación Predicate + BiFunction ¡Mucho poder!",
          "Más sobre interfaces funcionales",
          "La interfaz BiPredicate",
          "La interfaz Consumer",
          "La interfaz BiConsumer",
          "La interfaz Supplier",
          "La interfaz UnaryOperator",
          "La interfaz BinaryOperator",
          "Interfaces funcionales con especializaciones",
          "Interfaces funcionales especializadas",
          "Comparator: Otra interfaz funcional",
          "Interfaces funcionales."
        ],
        "Los métodos referenciados": [
          "Introducción a los métodos referenciados",
          "Método referenciado de una instancia",
          "Método referenciado de una instancia de un tipo arbitrario",
          "Método referenciado de un constructor",
          "Métodos referenciados"
        ],
        "Introducción a los streams de Java": [
          "Generalidades sobre los streams de Java 8",
          "El paquete java.util.stream",
          "Introducción a los Streams",
          "Iteración interna vs iteración externa",
          "Stream pipeline",
          "Stream pipeline y tipos de iteraciones",
          "ejercicio introductorio con streams"
        ],
        "Diferentes maneras de crear streams": [
          "Crear streams desde valores",
          "Creación de streams desde funciones",
          "Creación de streams desde colecciones y arreglos",
          "Creación de streams desde Strings",
          "Creación de streams desde archivos.",
          "Creación de Streams"
        ],
        "Operaciones intermedias": [
          "Operación filter. Parte 1",
          "Operaciones filter. Parte 2",
          "Operación map",
          "Operación sorted"
        ],
        "Operaciones de reducción en los streams": [
          "Operaciones de suma, cuenta, máximo, mínimo y promedio",
          "Operación reduce",
          "Operación de resúmen de resultados"
        ],
        "Operaciones de reducción mutable.": [
          "Uso de collect. Parte 1",
          "Uso de Collect. Parte 2",
          "Reducción de un stream a un Map",
          "Operaciones de partición"
        ],
        "La clase Optional": [
          "¿Qué es Java Optional?",
          "Explicación del proyecto que desarrollaremos en esta sección",
          "Retornando Optional en un servicio Java",
          "Métodos ifPresent, ifPresentOrElse y orElse de los Optional",
          "Métodos or y orElseThrow",
          "Métodos filter y map"
        ]
      },
      "requirements": [
        "Computadora PC, Mac o Linux.",
        "Tener instalado como mínimo la versión 8 del JDK de Java.",
        "Tener conocimientos previos del lenguaje Java. Clases, métodos, variables, objetos.",
        "Será recomendable (pero no indispensable) tener conocimiento sobre las colecciones en Java.",
        "Será recomendable (pero no indispensable) tener conocimiento sobre genéricos en Java.",
        "El curso puede realizarse con cualquier IDE o editor de código."
      ],
      "description": "Cada vez más las empresas están demandando que sus programadores conozcan los lambdas y streams de Java, pero si no conoces la programación funcional y nunca has utilizado los streams, las interfaces funcionales y las expresiones lambda, es posible que te estés perdiendo la oportunidad de hacer código mucho más rápido, más eficiente y más ordenado, sin contar que puedes estarte perdiendo de más y mejores puestos de trabajo.\nAunque la versión 8 de Java ha salido hace un tiempo ya, lo cierto es que la programación funcional no es muy bien conocida y aún menos entendida por la mayoría de los programadores de Java. Sin duda, aunque no es la más nueva, la versión 8  es una de las más revolucionarias de todos los tiempos y ¡no debes quedarte atrás!\nUn curso de  +6 horas en donde te llevo paso a paso y con muchos ejemplos para que comiences de inmediato a utilizar los streams, la interfaces  funcionales y las expresiones lambda en tus propios proyectos.\nAl terminar este curso podrás:\nCrear código mucho más rápido.\nCrear código mucho más elegante y fácil de entender por sí solo.\nManejar los datos de tus aplicaciones con mucha facilidad y eficiencia.\nPonerte en una mejor condición competitiva con respecto a otros programadores de Java.\n¿Qué aprenderás en este curso?\nAprenderás los fundamentos de la programación funcional.\nAprenderás a utilizar las expresiones lambda (n1, n2) -> n1.getHeight() y verás todo el tiempo que te ahorras con ellas.\nTe llevaré a través de toda la API de interfaces funcionales de Java 8.\nAprenderás a utilizar funciones, predicados, consumidores, proveedores, operadores y sus derivados.\nAprenderás las facilidades que en la versión 8 tiene la interfaz Comparator.\nPor si no fuera ya bueno y rápido utilizar expresiones lambda, también aprenderás a utilizar los métodos referenciados y ahorrarás una barbaridad de tiempo y esfuerzo.\nEntenderás los fundamentos de los Streams de Java 8.\nAprenderás a crear streams a partir de  valores, funciones, colecciones, Strings y hasta desde archivos. No importa tu fuente de datos, desde ahora podrás manipular tus datos fácil y rápidamente.\nAprenderás a filtrar fácilmente todos tus datos, a ordenarlos como tú quieras y a mapearlos.\nAprenderás a obtener sumatorias, cuentas, número máximo, mínimo de todos tus datos y de manera super sencilla.\n¿Aún tienes excusas para inscribirte a este curso?\nLa versión 8 de Java ha sido sin duda una de las versiones que más impacto ha causado en la comunidad de programadores de Java.\nHasta las versiones anteriores hubo varios cambios y mejorías, pero en general, muchas cosas permanecieron similares en cuanto a su concepto base.¡No así con la versión 8 de Java!\nNo encuentro ninguna razón por la cual no debas aprender este paradigma y en este curso te  facilitaré el camino para que puedas aprenderlo rápida y eficientemente.  Aunque el código creado es sumamente legible de entender y fácil de  usar e implementar, también es cierto que cuesta entenderlo al principio.  Por esa razón he creado este curso que te permitirá aprenderlo sin  sufrir demasiado en el proceso y como siempre, estaré disponible para  responder todas tus preguntas.\nSi no quieres quedarte atrás como programador Java tienes que aprender sí o sí estas novedades.\n¡Imagina la ventaja competitiva que te dará respecto a otros desarrolladores!\n¡No esperes más, inscríbete ahora mismo!",
      "target_audience": [
        "Todos los desarrolladores Java desde principiantes hasta expertos necesitan conocer este paradigma.",
        "Todos los programadores que hacer código más rápidamente.",
        "Si quieres manejar los datos de tus aplicaciones de manera sencilla, directa y rápida.",
        "Todos los que necesiten aprender a utilizar las expresiones lambda.",
        "Todos los que estén migrando sus aplicaciones de viejas versiones a nuevas versiones de Java."
      ]
    },
    {
      "title": "Python - 輕鬆學會寫程式",
      "url": "https://www.udemy.com/course/python-learn/",
      "bio": "用最輕鬆、最直覺、最好理解的方式，學會寫程式的核心基礎",
      "objectives": [
        "學會寫程式的關鍵基礎",
        "學會良好的程式寫法",
        "了解寫程式的整個大概念與如何開發自己的程式",
        "學會使用GitHub成為你的程式履歷表"
      ],
      "course_content": {},
      "requirements": [
        "無需任何程式語言的經驗"
      ],
      "description": "▌此課程為舊版課程，新版課程已推出！\n2024 全新重製版 Python 基礎課程: 《Python 輕鬆學會寫程式｜AI 輔助 + ITS 證照》\n由於新版課程上架於其他平台，同學可由 Google 搜尋課名，或由 LINE 加入官方 AI 小編帳號: @learntocode\n---\n課程為Udemy平台評分最高的Python課程，受邀上架於多個線上課程平台。 (課程無參加Udemy低價優惠銷售。)\n《Python進階課程》已推出，購買此課程的學員可於線上討論區找到《Python進階課程》的優惠連結。\n\n\n▌課程簡介\n教學最熱門的程式語言: Python\n適合所有小四以上的無程式經驗者\n透過實作程式學好寫程式的關鍵基礎\n平時可以透過線上討論區發問，不用擔心無法問問題\n▌課程特色\n輕鬆學會寫程式\n口語化的解說，貼近生活的範例，複習式的教學，讓你以最輕鬆的方式學習寫程式。\n清晰解說程式碼\n站在初學者容易遇到的問題與理解困難點出發，詳細解釋程式碼，不漏掉任何標點符號。\n啟發性的課程範例\n課程中的範例除了教學寫法以外，更重要的是讓同學見識到寫程式的無限可能。\n17小時的紮實內容\n完整系統化的內容，幫你規劃五天即可上手Python的教學內容。\n▌前言\n在當今數位世界中，寫程式是一項至關重要的技能，而Python作為一門易學且功能強大的程式語言，成為了無數專業人士和初學者的首選。然而，傳統的教學方式和教材過度專注於專有名詞及語法，往往讓學習者感到乏味和吃力，導致最後基礎不穩、半途而廢。\n本課程顛覆死板的市售教材，結合美國頂尖大學教材與以往實體班教學經驗，重新設計教學的順序、內容的呈現方式，以及生活化的範例，致力於建立最輕鬆、最直覺、最好理解的教學課程。\n同時，透過實作與應用，除了幫助同學打穩程式基礎、熟悉程式思維，更重要的是建立「把問題化為程式碼解決」的能力，見識到寫程式的無限可能。\n▌課程內容\n寫程式的核心：\n數據型態(Data Types)，條件式邏輯(Conditional Statements)，迴圈(Loops)，函式(Functions)，函式庫(Libraries)的使用，檔案讀寫，資料處理。\n相關延伸學習：\nClass (物件)，使用GitHub做版本控管，如何使用別人寫好的套件，如何寫自己的程式，Line 聊天機器人等等。\n▌關於程式語言 Python\nPython 是目前最熱門的程式語言，更是人工智慧主要的開發語言。 在程式語言的排行中，各項統計 (包括使用度統計，搜尋比例統計等等)，Python都拿下目前最熱門的冠軍。Python 的中心思想是簡潔、直覺，因此相當容易學習。因此，想要學習寫程式，Python 是最佳的選擇。",
      "target_audience": [
        "所有想學習寫程式的人 (建議小四以上)",
        "所有想學習Python的人"
      ]
    },
    {
      "title": "The C++ Learning Guide",
      "url": "https://www.udemy.com/course/vcojcteq/",
      "bio": "تعليم السي بلس بلس من اول برنامج الى نهاية البرمجة الكائنية",
      "objectives": [
        "ستتمكن من الدخول الى عالم البرمجة وفهم اساسيات اللغات البرمجية",
        "1- Structural Programming.",
        "2- Object Oriented Programming.",
        "3- Standard Template Library (STL)"
      ],
      "course_content": {
        "Introduction": [
          "Setup Environment",
          "Terms of Use",
          "Rating the Course",
          "How to get the Certificate",
          "About the Instructor"
        ],
        "C++ Basics": [
          "Output & Comments",
          "Variables",
          "Type Casting",
          "Input",
          "Operation",
          "Assignment Operators",
          "If Statements",
          "Switch Statement",
          "Loops",
          "Nested Loops",
          "Degree App",
          "Control Statements"
        ],
        "Arrays & Pointer & Function": [
          "Array of One Dimension",
          "Array of Two Dimensions",
          "Pointer",
          "Alias, Const, Local and Global",
          "Functions",
          "Recursion",
          "Call by Reference & Default Argument & Inline Function",
          "String",
          "Math Library",
          "Max Function",
          "Passing Array Through Function",
          "Exception",
          "Lambda Expression",
          "Higher-Order Functions"
        ],
        "Object-Oriented Programming": [
          "Introduction",
          "Class & Object",
          "Constructor",
          "Inheritance",
          "Access Modifier",
          "Super Constructors",
          "Override & Abstract",
          "Polymorphism",
          "Const & Static",
          "Struct",
          "Nested Classes",
          "Destructor",
          "Operator Overloading Part 1",
          "Operator Overloading Part 2",
          "Generic Class (Templates)",
          "File System",
          "Additional Notes"
        ],
        "Standard Templates Library (STL)": [
          "Vector",
          "Deque",
          "List",
          "Forward-list",
          "Set",
          "Map",
          "Stack Queue"
        ]
      },
      "requirements": [
        "لا تحتاج لأي مؤهلات ، هذه الدورة مخصصة للاشخاص الذين لا يعرفون شيء عن البرمجة"
      ],
      "description": "هذه الدورة من السي بلس بلس حيث افترض الشخص الذي امامي لا يعرف اي شي عن عالم البرمجة ستتمكن من خلال هذه الدورة من الدخول الى عالم البرمجة وفهم اساسيات اللغات البرمجية\nلا تحتاج الى اي مؤهلات للدخول الى هذه الدورة ،تتميز هذه الدورة بأنها مختصرة وليس فيها تشعبات وتفاصيل غير اساسية\nC++ is a general purpose programming language that supports various computer programming models such as object-oriented programming and generic programming.Its main purpose was to make writing good programs easier and more pleasant for the individual programmer.\nBy learning C++, you can create applications that will run on a wide variety of hardware platforms such as personal computers running Windows, Linux, UNIX, and Mac OS X.\nThe main target of this course is to help the students who are still under graduation and want to understand C++ programming and teach them how to solve exam problems.\n\n\nWhy you should learn C++\nMuch, if not most of the software written today is still written in C++ and this has been the case for many, many years.\nNot only is C++ popular, but it is also a very relevant language. If you go to GitHub you will see that there are a huge number of active C++ repositories and C++ is also extremely active on stack overflow.\nThere are many, many leading software titles written entirely or partly in C++. These include the Windows, Linux, and Mac OSX operating systems!\nMany of the Adobe products such as Photoshop and Illustrator, the MySQL and MongoDB database engines, and many many more are written in C++.\nLeading tech companies use C++ for many of their products and internal research and development. These include Amazon, Apple, Microsoft, PayPal, Google, Facebook, Oracle, and many more.",
      "target_audience": [
        "لأي شخص يريد الدخول لعالم البرمجة"
      ]
    },
    {
      "title": "Uzman MATLAB Programcısı Olun",
      "url": "https://www.udemy.com/course/uzman-matlab-programcisi-olun/",
      "bio": "Temel Matlab Programlama Konusunda Uzman MATLAB Programcısı olun!",
      "objectives": [
        "Algoritma Prototipi Oluşturabilecek ve Bunu Geliştirebileceksiniz.",
        "Programlama ve Uygulama Geliştirebileceksiniz.",
        "Grafikler Üzerinde Analizler Yapıp Anlamlar Çıkartabileceksiniz.",
        "Matrisler İle Yapılabilecek Neredeyse Tüm İşlemleri Yapabileceksiniz.",
        "Yüksek Matematik Bilgisi İsteyen Sayısal Problemleri Bir Kaç Saniyede Çözebilecek",
        "Bilgisayardan Veri Alıp Bunu İşleyip Tekrar Kaydedebileceksiniz.",
        "Tüm Bu Konular İle Alakalı Bol Bol Örnek Uygulama Çalışması Yapacaksınız."
      ],
      "course_content": {
        "Giriş": [
          "MATLAB Nedir? Kullanım Alanları Nelerdir?",
          "MATLAB'ın Avantajları ve Dezavantajları",
          "Kursumuzda Neler Yapacağız?",
          "MATLAB Çalışma Ortamını Tanıyalım"
        ],
        "Matematiksel ve Mantıksal Operatörler": [
          "Matematiksel İşlem Operatörleri",
          "Matematiksel Karşılaştırma Operatörleri",
          "Matematiksel Karşılaştırma Fonksiyonları",
          "Mantıksal Operatörler",
          "Çalışma Soruları"
        ],
        "Değişkenler ve Sabitler": [
          "Değişken Tanımlama",
          "Sabitler",
          "Ondalıklı Sayıların Duyarlılıkları (Formats)",
          "Help ve Doc Kullanımı"
        ],
        "Algoritma Geliştirme": [
          "Problem Çözüm Aşamaları",
          "Algoritma Tanımı ve Algoritma Geliştirme",
          "Akış Diyagramları",
          "Akış Diyagramları Örnek - 1",
          "Akış Diyagramları Örnek - 2",
          "Çalışma Soruları"
        ],
        "Matematiksel İşlemler": [
          "Matematiksel Fonksiyonlar",
          "Kompleks Sayılar",
          "Trigonometrik Fonksiyonlar",
          "Logaritmik ve Üstel Fonksiyonlar",
          "Polinomlar"
        ],
        "Diziler ve Matrisler": [
          "Matris Tanımlama",
          "Matrislerde İşlemler - 1",
          "Matrislerde İşlemler - 2",
          "Matrislerde İşlemler - 3",
          "Karakter Dizileri ve Stringler",
          "Çalışma Soruları"
        ],
        "M-File Editör - Kullanıcı İle Veri Alışverişi": [
          "M-File Oluşturma ve Input Komutu Kullanımı",
          "Kullanıcıya Bilgi Gösterme (disp ve fprintf komutu)",
          "Örnekler - 1",
          "Örnekler - 2"
        ],
        "Şartlı Yapıların Kullanımı": [
          "if-else Yapısının Kullanımı",
          "if-else Örnek - 1",
          "if-else Örnek - 2",
          "Switch-Case Yapısının Kullanımı",
          "Switch-Case Örnek - 1",
          "Switch-Case Örnek - 2",
          "try-catch Yapısının Kullanımı",
          "Genel Örnekler - 1",
          "Genel Örnekler - 2",
          "Çalışma Soruları"
        ],
        "Döngüler": [
          "While Yapısının Kullanımı ve Örnek",
          "While Örnek -1",
          "for Yapısının Kullanımı ve Örnek",
          "for Örnek - 1",
          "İç İçe For Döngüsü",
          "Sonsuz Döngüler ve break-continue Deyimi",
          "Genel Örnekler - 1",
          "Genel Örnekler - 2",
          "Genel Örnekler - 3",
          "Genel Örnekler - 4",
          "Bonus Ders: Dik Üçgen Çizimi",
          "Çalışma Soruları"
        ],
        "Hata Tipleri ve Fonksiyon Tanımlama": [
          "Söz Dizimi Hataları",
          "error Fonksiyonu",
          "lasterr Fonksiyonu",
          "Run-Time and Logic Errors",
          "Hataları Ayıklamak, Breakpoint İşlemi ve Debug",
          "Fonksiyon Tanımlama ve Örnek Çalışması",
          "Rekürsif Fonksiyonlar ve Örnek Çalışması",
          "Örnekler - 1",
          "Çalışma Soruları"
        ]
      },
      "requirements": [
        "Sıradan Bilgisayar Kullanımına Sahip Olmak",
        "MATLAB Programı Kurulu Olmak",
        "Lise Düzeyinde Matematik Bilgisi",
        "Herhangi kodlama-algoritma bilginiz olmasına GEREK YOKTUR."
      ],
      "description": "Bu kurs sizi ileri seviye genel MATLAB programcısı yapacaktır. Dersler, hem yeni başlayanlar hem de MATLAB ile deneyime sahip olanlar için uygun bir şekilde düzenlenmişti., herkes için oldukça fazla bilgi vardır. MATLAB nedir sorusu ile başlayıp ileri seviye Matlab uygulamaları ile sona erecek bu eğitimi sizler için hazırladım.\nMATLAB Neden Tercih Edilmelidir?\nMatlab Programlama, bugün en önemli teknik programlama dilleri ve becerilerinden biridir. Bu derste, Matlab'ı başlangıç seviyesinden öğrenmeye başlayacağız ve yavaşça daha teknik konulara yönelmeyi kolaylaştıracağız. Bu ders genel Matlab Programlamadır ve bu, tüm bölümlerin bu dersten faydalanabileceği anlamına gelir. Matlab Programlama kolay ve anlaşılabilir bir programlama dilidir ve Java, Python, C ve C ++ gibi diğer programlama dillerine başlamadan önce öğrenim için mükemmel bir seçimdir.\nGünümüzde her şey matrisler ile ifade edilmektedir. Mesela bir hastanın kalp atışlarını kaydettiğiniz zaman bunu matrisler ile yapabilirsiniz. Ya da bir fotoğrafı matris şeklinde okuyabilir ve RGB (Red Green Blue) - parlaklık seviyelerini görüntü işleme yöntemleri ile düzenleyebilirsiniz. Farklı bir örnek ile ifade etmek gerekirse 3 boyutlu bir ortamı modellerken üç boyutlu matrisler kullanabilirsiniz. Tüm bu işlemlere zaman boyutunu da ekleyebilirsiniz. Kısacası hayatta yapılan her işlemi ister tek ister çok boyutlu matrisler ile düzenleyebiliyoruz.\nMatrisler ile çalışmanın en kolay yolu MATLAB programlama dilidir. MATLAB; MATtix LABoratory kelimelerinin kısaltması şeklinde oluşmuştur. Yani matrisler üzerinde işlemleri yapabilmek için tasarlanmış bir programlama dilidir. Temel programlama teknikleri ile (döngüler, şartlı yapılar vb) matrisler üzerinde işlemler yapabilir, istekleriniz doğrultusunda çalışmalar ortaya çıkarabilirsiniz.\nMATLAB, sayısal deneyleri ve yöntemleri kolayca uygulamanıza olanak tanıyan, algoritmaları tasarlamanıza, verileri analiz etmenize ve bu verileri çok güçlü bir şekilde görselleştirmenize olanak veren, yüksek düzeyde ve etkileşimli bir programlama dilidir.\nNeler Öğreneceğiz?\nİlk olarak sözel dersler ile başlayacağız. Bu derslerimizde sözel olarak MATLAB'ı tanıyacağız. Olumlu yanlarını ve olumsuz yanlarını öğreneceğiz. Böylece neler yapabileceğimizi kafamızda oturtmuş olacağız.\nSonrasında kursumuz matematiksel ve mantıksal işlemler ile devam edecek. Kağıt üzerinde dakikalarca hatta saatlerce süren yüksek matematik gerektiren problemleri dahi MATLAB ortamında bir kaç saniyede çözümleyeceğiz.\nDeğişken kavramını öğrenip nasıl değişken tanımlanır nasıl tanımlanmaz bunları göreceğiz. MATLAB'ı içinde hazır olarak bulunan ve değiştirilmesi mümkün olmayan sabit ifadeleri tanıyacağız.\nAlgoritma ile tanışacaksınız. Karşımıza bir problem çıktığı zaman bunun çözümü için hangi adımlar hangi sıra ile atılmalıdır bunu öğreneceksiniz. Tüm bunları akış diyagramları ile görsel şekilde görmüş olacaksınız.\nMatematiksel işlemlerin daha çok içine gireceğiz. MATLAB'ın içinde bulunan hazır matematiksel fonksiyonları ve kullanımlarını göreceğiz. Sonrasında kompleks sayı işlemleri, polinom işlemleri, trigonometrik işlemler, üstel ve logaritmik işlemler göreceğiz. Bol örnek ile anlayıp çalışma soruları ile pekiştirme fırsatı bulacaksınız.\nMATLAB'ın temel yapısını oluşturan matrisler ile tanışacaksınız. Matrisler, diziler, vektörler nedir, hangi işlemler nasıl yapılır bunları öğreneceksiniz.\nTüm bunları öğrendikten sonra şartlı yapılar, döngüler, grafik çalışmaları gibi ileri programlama konularına değineceğiz.\nVE EN ÖNEMLİSİ GENEL ALGORİTMA ve PROGRAMLAMA YETENEĞİNİZİ GELİŞTİRMİŞ OLACAKSINIZ.",
      "target_audience": [
        "Genel Algoritma ve Programlama Mantığını Oluşturup Geliştirmek İsteyen Herkes",
        "MATLAB Programlamalarını Kariyerlerinde Kullanmak İsteyen Akademisyenler, Araştırmacılar, Mühendisler, Öğrenciler",
        "MATLAB programlama dilini sıfırdan ileri seviyeye öğrenmek isteyen herkes"
      ]
    },
    {
      "title": "Lógica de Programação e Algoritmos com VisualG",
      "url": "https://www.udemy.com/course/logica-de-programacao-e-algoritmos-com-visualg/",
      "bio": "Aprenda a criar algoritmos com a linguagem VISUALG, uma forma simples e fácil de representar os códigos de programação.",
      "objectives": [
        "Com o curso, os alunos estarão aptos a estruturar problemas e construir programas em linguagem de computador. Estarão aptos também a aprender novas linguagens",
        "Aprenderão a estruturar problemas na forma de algoritmos e utilizar LINGUAGEM de interpretação algoritmos chamada VISUALG em português e de fácil compreensão.",
        "Aprenderão também a converter algoritmos em Português (VISUALG) em outras linguagens.",
        "Resolver problemas com o uso do computador e das linguagens de programação."
      ],
      "course_content": {
        "INTRODUÇÃO": [
          "INTRODUÇÃO - Seja bem vindo, Objetivos, vantagens",
          "Alguns conceitos - Parte 1",
          "Alguns Conceitos - Parte 2",
          "Operadores e Palavras Reservadas",
          "Atividades Conceituais"
        ],
        "CONCEITOS INICIAIS": [
          "Algoritmos de Programação",
          "Algoritmos de Programação - Parte 2",
          "Estrutura de Algoritmo de Programação",
          "Sintaxe da Linguagem - Erro de Sintaxe e Erro de Lógica",
          "Qual a melhor linguagem de Programação?",
          "Quizz 2 - Seção 2"
        ],
        "VISUALG": [
          "VISUALG - Instalando",
          "Recursos e Menus",
          "Entrada e Saída de dados",
          "Estruturas Sequenciais ou Simples",
          "Formatação de Números e Textos",
          "Exercícios sequenciais simples"
        ],
        "ESTRUTURAS DE REPETIÇÃO": [
          "Estrutura de Repetição do tipo PARA-FAÇA",
          "Estruturas de Repetição do tipo ENQUANTO-FAÇA",
          "Estrutura REPITA ---- FAÇA",
          "Quando utilizar cada caso de Repetição?",
          "Exercicios"
        ],
        "ESTRUTURAS DE SELEÇÃO": [
          "Estrutura de Seleção do tipo SE --- FIMSE",
          "Estrutura do tipo SE --- SENAO ---- FIMSE",
          "Maior e Menor Valor",
          "Estrutura do tipo ESCOLHA ---- CASO ---- FIMESCOLHA",
          "Exercicios"
        ],
        "VETORES": [
          "O que são Vetores? Como utilizá-los",
          "Matrizes - Como e quando utilizar?",
          "Funções",
          "Procedimentos",
          "Exercicios"
        ],
        "TESTES e CONVERSÃO DE ALGORITMOS": [
          "Testando os programas no VISUALG",
          "O que é Teste de Mesa. Como fazer?"
        ],
        "CONCLUSÃO": [
          "Perguntas e Respostas",
          "Deixe seu Review",
          "Parabéns!",
          "Próximos Passos"
        ]
      },
      "requirements": [
        "Os únicos conhecimentos necessários são boa vontade e curiosidade em aprender a lógica dos computadores e a lógica racional para começar a escrever os primeiros programas. É preciso saber usar o Windows somente."
      ],
      "description": "Neste curso o aluno aprenderá os seguintes tópicos:\nConceitos Iniciais para a área de programação (operadores, algoritmos, linguagens, etc);\nConhecerá a linguagem de programação e/ou representação de algoritmos VISUALG;\nAprenderá a representar qualquer tipo de programa de computador por meio de algoritmos utilizando as estruturas existentes em todas as linguagens de programação;\nEstruturas de Seleção\nEstruturas de Repetição\nVetores\nMatrizes\nTestes de software\nCriar Funções\nConverter algoritmos em outras linguagens\nDiferenciar Erro lógico de Erro de Sintaxe\nResolver problemas por meio de algoritmos",
      "target_audience": [
        "Iniciantes que queiram aprender a programar em qualquer linguagem de programação, pois a lógica é a base e o software VisuALG é o software para ver a sua lógica sendo executada, assim como acontece nas linguagens de mais alto nível."
      ]
    },
    {
      "title": "Java - Spring Framework",
      "url": "https://www.udemy.com/course/spring-pl/",
      "bio": "Spring 5, Spring Boot 2, Data, Web, Dependency Injection, AOP, Security, Hibernate, JUnit, Mockito, AssertJ, Maven",
      "objectives": [
        "Zrozumiesz jak budować aplikacje webowe ze Springiem",
        "Zobaczysz jak wstrzykiwać zależności",
        "Ułatwisz sobie pracę, wykorzystując Spring Boota",
        "Poznasz narzędzia wspomagające testowanie aplikacji",
        "Zgłębisz temat łączenia się z relacyjnymi bazami danych",
        "Poznasz zaawansowane zaganienia, jak Aspect Oriented Programming, zdarzenia"
      ],
      "course_content": {
        "Spring Boot": [
          "Wprowadzenie",
          "Budujemy aplikację! - założenia",
          "Spring Boot",
          "Skonfigurowany Maven",
          "Maven Wrapper",
          "Struktura projektu, istniejący kod",
          "java -jar",
          "Dociąganie kolejnych zależności",
          "JPA",
          "Encja",
          "@RepositoryRestResource",
          "Postman - start",
          "Poprawki w kodzie, ustawienia IntelliJ",
          "AUTO -> IDENTITY",
          "Postman - pozostałe operacje",
          "Walidacja z javax.validation",
          "Testy w Postmanie",
          "Więcej testów",
          "Podsumowanie, miniprojekt"
        ],
        "Trochę teorii": [
          "Spring Servlet Stack",
          "Spring Reactive Stack",
          "Spring Cloud",
          "Co jeszcze w Springu?"
        ],
        "Spring - przegląd": [
          "Wprowadzenie",
          "HATEOAS",
          "Opcje adnotacji",
          "@RestResource",
          "Spring Data findBy",
          "@RepositoryRestController",
          "@RequestMapping",
          "Co z HATEOAS?",
          "?page ?size ?sort",
          "Pageable",
          "Page",
          "@RestController",
          "Czyszczenie z Rest Repositories",
          "Ukrywanie Spring Data",
          "HTTP PUT mapping",
          "Poprawiony HTTP PUT",
          "GET task, POST tasks",
          "Zadanie na 6",
          "Podsumowanie, miniprojekt"
        ],
        "Konfiguracja, properties, profile Springa": [
          "Wprowadzenie",
          "Jak konfigurować Spring Boota?",
          "Properties",
          "Properties - H2",
          "Yaml",
          "@Value",
          "@Autowired",
          "@ConfigurationProperties",
          "Własne konfiguracje w działaniu",
          "Wyłączenie logotypu",
          "Zagnieżdżanie właściwości",
          "Profile",
          "Aktywny profil",
          "Kolejność konfiguracji",
          "bootstrap.yml",
          "Podsumowanie, miniprojekt"
        ],
        "SQL, JDBC": [
          "Wprowadzenie",
          "Baza danych H2",
          "Flyway",
          "Flyway - Spring Boot",
          "H2 - IntelliJ",
          "Migracja SQL",
          "Migracja Java",
          "Natywne SQL w Spring Data",
          "Podsumowanie"
        ],
        "ORM, Hibernate, Spring Data": [
          "Wprowadzenie",
          "Spring JPA",
          "@Transactional",
          "@Column",
          "DDL Validate",
          "@PESEL, @Transient",
          "@PrePersist, @PreUpdate",
          "@PrePersist w działaniu",
          "Dziedziczenie",
          "@Embeddable",
          "Relacje - klucz obcy",
          "Kolejna encja",
          "@ManyToOne, @JoinColumn",
          "@OneToMany",
          "Jednostronna relacja",
          "Zadanie na 6",
          "Spring Data: @ManyToOne",
          "n+1 selectów",
          "HQL (JPQL)",
          "I jeszcze jedna encja",
          "Doprecyzowanie: join fetch",
          "Podsumowanie"
        ],
        "DTO, @Service": [
          "Wprowadzenie",
          "Data Transfer Object, projekcje",
          "Task DTO",
          "Group DTO",
          "Project DTO",
          "@Service",
          "Serwis grup - toggle",
          "@Scope",
          "Project Service",
          "Podsumowanie"
        ],
        "Testy jednostkowe": [
          "Wprowadzenie",
          "Testy jednostkowe",
          "JUnit",
          "Mockito",
          "AssertJ",
          "Upraszczanie testów",
          "if - testy",
          "Poprawki dzięki testom",
          "Implementacje \"in memory\"",
          "Użycie repozytorium \"in memory\"",
          "Testy - koniec",
          "Mock w mocku?",
          "Testy drugiego serwisu",
          "Podsumowanie"
        ],
        "Dependency Injection": [
          "Wprowadzenie",
          "@ComponentScan",
          "Wstrzykiwanie krok po kroku",
          "IoC, @Component vs. @Bean",
          "Konflikty beanów, konfiguracja dla testów",
          "@Qualifier, @Primary, @ConditionalOn",
          "XML",
          "Proxy",
          "@Lazy",
          "@Bean",
          "Ziarna kawy",
          "Podsumowanie"
        ],
        "Testy integracyjne, end-to-end": [
          "Wprowadzenie",
          "E2E: @SpringBootTest, @LocalServerPort",
          "E2E: TestRestTemplate, repozytorium",
          "DataSource dla testów (baza danych)",
          "Test integracyjny: @AutoConfigureMockMvc",
          "Test integracyjny: MockMvc",
          "@WebMvcTest, @MockBean",
          "@TestPropertySource",
          "Poprawki w modelu i serwisie",
          "Poprawki w testach",
          "Kolejny test",
          "Podsumowanie"
        ]
      },
      "requirements": [
        "Znajomość języka Java",
        "Podstawowe rozumienie aplikacji webowych, klient-serwer",
        "Podstawowe rozumienie protokołu HTTP",
        "Podstawowe rozumienie aplikacji wielowarstwowych"
      ],
      "description": "Kurs koncentruje się na części servletowej frameworka Spring. Nie tłumaczę tutaj protokołu HTTP albo architektury wielowarstwowej. Zakładam, że uczestnik ma tego typu podstawy (np. przerobił inne kursy, może nawet moje).\nStawiamy projekt od zera, korzystając ze startera aplikacji Spring Boot - szybki start, żeby pokazać jak szybko \"coś już działa\"\nPrzechodzimy przez pierwszą, działającą wersję (Rest Repositories) - większe zrozumienie tego, co mamy\nPrzerabiamy na \"klasyczne\" klasy @RestController\nKonfigurujemy, korzystamy z plików properties, YAML oraz różnych profilów - początek dokładnego omawiania Springa, kawałek po kawałku\nŁączymy się z relacyjną bazą danych, wykorzystujemy bazodanowe migracje\nOmawiamy mapowanie obiektowo-relacyjne (ORM), korzystamy z frameworka Hibernate oraz Spring Data\nZgłębiamy springowe wstrzykiwanie zależności - kluczowa rzecz w Springu\nKorzystamy z narzędzi do pisania testów: JUnit 5, Mockito, AssertJ, MockMvc\nPatrzymy na wykorzystanie narzędzi Filter, Interceptor oraz CompletableFuture w kontrolerach\nTworzymy szablony, korzystając z silnika Thymeleaf, patrzymy o co chodzi w Spring MVC\nAdresujemy wymagania niefunkcjonalne - metryki i logowanie - przy pomocy AOP (Aspect-Oriented Programming)\nRozszerzamy możliwości naszego systemu w oparciu o obsługę zdarzeń\nZabezpieczamy system korzystając z Keycloaka (Identity Provider, OpenID, OAuth 2.0, RBAC) i Spring Security\nNa początku kursu chodzi o szybkie \"wyklikanie\" aplikacji, która jakoś działa (sam REST). Z czasem, w następnych sekcjach wszystko jest rozkładane na czynniki pierwsze i tłumaczone - warstwa po warstwie (konfiguracja, bazy danych, ORM, DI, testy, kontrolery, szablony, AOP, zdarzenia, security). Docelowo powstaje aplikacja z interfejsem graficznym, logowaniem użytkownika, korzystająca z bazy danych.\nW kursie znajduje się już ponad 350 pytań uczestników. Na wszystkie udzieliłem odpowiedzi osobiście.",
      "target_audience": [
        "Dla nieznających Springa, chcących się go nauczyć",
        "Dla znających Springa, ale np. pobieżnie, chcących zgłębić temat",
        "Dla zainteresowanych wstrzykiwaniem zależności i odwróceniem kontroli",
        "Dla szukających informacji np. o programowaniu zorientowanym aspektowo"
      ]
    },
    {
      "title": "SAP ABAP completo en Español",
      "url": "https://www.udemy.com/course/sap-abap-completo-en-espanol/",
      "bio": "Conviértete en experto de la mano de un experto aprendido SAP ABAP.",
      "objectives": [
        "Tener un conocimiento completo y avanzado sobre el SAP ABAP.",
        "Poder administrar el sistema de SAP ABAP",
        "Poder dar una solución integral a los problemas de SAP ABAP",
        "Saber a dónde acudir al tener algún problema a resolver"
      ],
      "course_content": {
        "Presentación": [
          "Presentación"
        ],
        "Instalar el MiniSAP": [
          "Instalando el MiniSAP"
        ],
        "Conociendo el SAP Logon": [
          "Conociendo el SAP Logon / SAP Gui Parte 1.",
          "Conociendo el SAP Logon / SAP Gui Parte 2"
        ],
        "Diccionario de Datos": [
          "Crear un Dominio",
          "Crear un Elemento de Datos",
          "Crear una Estructura",
          "Crear include en una Estructura",
          "Crear un tipo tabla",
          "Crear una tabla transparente",
          "Utilizando una tabla de chequeo",
          "Conociendo las tablas Pool y Cluster",
          "Crear tabla texto",
          "Crear una estructura Append",
          "Crear una ayuda de busqueda simple",
          "Crear una ayuda de busqueda compuesta",
          "Crear una Vista de Base de Datos",
          "Crear una vista de Supresión",
          "Crear una vista de actualización o mantenimiento con eventos",
          "Crear una vista de ayuda",
          "Crear Grupos de Tipos",
          "Crear objetos de Bloqueos"
        ],
        "Editor ABAP": [
          "Conociendo el Entorno ABAP"
        ],
        "Lenguaje ABAP": [
          "Creando mi Primer Programa ABAP",
          "Crear comentarios en mi programa",
          "Organizando nuestro Programa",
          "Estructura de un Programa",
          "Tipos de Datos",
          "Declarando Variables",
          "Declarando Estructuras",
          "Declarando Constantes",
          "Declarando Rangos",
          "Declarando Tablas Internas",
          "Creando PARAMETERS",
          "Creando CHECKBOX",
          "Creando RADIOBUTTON",
          "Creando LISTBOX",
          "Utilizando MOD ID",
          "Creando SELECT-OPTIONS",
          "Operaciones aritméticas simples.",
          "Operaciones aritméticas avanzadas.",
          "Trabajar con cadenas de caracteres 'CONCATENATE'",
          "Trabajar con cadenas de caracteres REMPLACE",
          "Trabajar con cadenas de caracteres 'CONDENSE'",
          "Trabajar con cadenas de caracteres 'FIND'",
          "Trabajar con cadenas de caracteres 'SHIFT'",
          "Trabajar con cadenas de caracteres 'SPLIT'",
          "Trabajar con cadenas de caracteres 'STRLEN'",
          "Trabajar con condicionales IF",
          "Trabajar con condicionales CASE",
          "Trabajar con bucle DO",
          "Trabajar con bucle WHILE",
          "Tablas internas LOOP AT",
          "Tablas Internas APPEND",
          "Tablas Internas MODIFY",
          "Tablas Internas DELETE",
          "Tablas Internas COLLECT",
          "Tablas internas - Eventos de Control",
          "Tablas internas - SORT",
          "Tablas internas - READ TABLE",
          "Intrucción de control CHECK",
          "Intrucción de control STOP",
          "Intrucción de control EXIT",
          "Intrucción de control CONTINUE",
          "Open SQL SELECT Parte 1",
          "Open SQL SELECT Parte 2",
          "Open SQL SELECT Parte 3",
          "Open SQL INSERT",
          "Open SQL UPDATE",
          "Open SQL DELETE",
          "Open SQL ROLLBACK WORK",
          "Open SQL COMMIT WORK",
          "Open SQL INNER JOIN",
          "Open SQL UP TO ROWS",
          "Open SQL IN",
          "Open SQL DISTINCT",
          "Open SQL COUNT",
          "Sub-Rutinas - PERFORM Parte 1",
          "Sub-Rutinas - PERFORM Parte 2",
          "Llamar a otro programa – SUBMIT",
          "Llamar a otro programa – CALL TRANSACTION",
          "Debugger",
          "Debugger parte 2",
          "Crear una trasacción a un programa",
          "Crear transacciones a un programa parte 2",
          "Crear una transacción a una vista de mantenimiento",
          "Memoria ABAP",
          "Memoria SAP"
        ],
        "Bilioteca de Funciones": [
          "Creando un grupo de función",
          "Creando un modulo de función",
          "Implementando Modulo de Funciones",
          "Rutina de conversión",
          "Ayuda de busqueda con EXIT"
        ],
        "Ampliaciones": [
          "Enhancement parte 1",
          "Enhancement parte 2",
          "Eliminar Enhancement",
          "4 Formas de buscar USER-EXIT",
          "SMOD",
          "CMOD"
        ],
        "Clase de Mensajes": [
          "Crear una clase de mensaje",
          "Clase de Mensaje parte 2"
        ],
        "ALV": [
          "Preparandonos para la creación del ALV",
          "Creando un ALV con funciones parte 2",
          "Creando un ALV con funciones parte 3",
          "Creando un ALV con Objeto."
        ]
      },
      "requirements": [
        "Conocimientos básicos en computación.",
        "Contar con una computadora y acceso a internet.",
        "Tener el MiniSAP que se proporcionará en el curso para realizar las practicas ABAP."
      ],
      "description": "El curso contiene un contenido completo que abarca todos los temas mas importantes para que te conviertas en un consultor SAP ABAP, esta diseñado muy detalladamente y estructurado para que de manera fácil puedas aprender los conocimientos necesarios para trabajar con el ERP mas grande del mundo como lo es SAP.\nLo aprendido en este curso te abrirá muchas puertas para comenzar a buscar un trabajo en unos de los lenguajes de programación mejor pagados a nivel mundial y/o a mejorar tus conocimientos en ABAP de ser el caso.\nDe la mano del instructor Freddy Valderrama te guiara en los videos paso a paso para que aprendas el diccionario de datos, el editor ABAP, lenguaje ABAP, modularización, debugger, biblioteca de funciones,  entre otros temas.\nEste curso esta creado tomando la experiencia de mas de 10años en diferentes implementaciones de SAP que ha realizado el instructor a lo largo de los años.\nEl curso esta enfocado en enseñar lo que realmente se necesita saber para entregar los requerimientos solicitados por el cliente en el tiempo solicitado.\nDomina ABAP con nuestro curso práctico. Estrategias comprobadas para incrementar tus ingresos. ¡Inscríbete ya! y cambiate a una de las profesiones mejores pagadas del mercado.",
      "target_audience": [
        "Todas las personas que estén interesados en convertirse en un consultor en el mundo de SAP ABAP.",
        "Personas con conocimientos de programación ( No indispensable, lo aprenderemos aquí )."
      ]
    },
    {
      "title": "C# programmieren lernen - der ultimative C Sharp Kurs",
      "url": "https://www.udemy.com/course/c-sharp-programmieren-tutorial/",
      "bio": "Lerne mit Leichtigkeit die Programmierung in C# mit hochwertigen Videos und vielen Beispielen und Übungsaufgaben",
      "objectives": [
        "Über 8 Stunden mit hochqualitativem Inhalt",
        "Du wirst in der Lage sein Deine eigenen Programme zu entwickeln",
        "30 Tage Rückgaberecht!",
        "Du bekommst die Grundlagen die Du brauchst um Spiele mit Unity zu entwickeln",
        "Du lernst die perfekte Grundlage um andere Programmiersprachen sehr leicht zu lernen."
      ],
      "course_content": {
        "So holst du das Meiste aus dem Kurs": [
          "Vorstellung und Einleitung",
          "WICHTIG - Wie du das meiste aus dem Kurs holst",
          "Was möchtest du erreichen?",
          "Hier findest Du die Texte und Übungen zum Kurs",
          "Was tun wenn nichts geht",
          "Wichtiger Hinweis!"
        ],
        "Deine erste C# Anwendung und Übersicht zu Visual Studio": [
          "Visual Studio Community installieren und registrieren (kostenlos)",
          "Visual Studio 15 Download",
          "Dein erstes C# Projekt in Visual Studio - Hallo Welt"
        ],
        "Datentypen und Variablen": [
          "Einführung in Datentypen und was du in diesem Kapitel lernst",
          "Namensgebung von Variablen",
          "Convert - Text in Ganzzahl umwandeln",
          "Übungsaufgabe - Variablen anlegen und Werte zuordnen",
          "Lösung zur Übungsaufgabe - Variablen Anlegen und Werte zuordnen"
        ],
        "Funktionen / Methoden und wie sie einem das Leben vereinfachen": [
          "Einleitung zu Funktionen / Methoden",
          "Methoden mit Rückgabe und mit mehreren Parametern",
          "Übungsaufgabe - Methoden erstellen und Freunde grüßen",
          "Lösung zur Übungsaufgabe - Methoden erstellen und Freunde grüßen",
          "Benutzereingabe vom Nutzer abfragen"
        ],
        "Entscheidungen treffen": [
          "Einführung in Entscheidungen",
          "Relative und logische Operatoren",
          "If Abfrage (falls)",
          "Verschachtelte if - else aussagen",
          "Das Switch Statement",
          "Globale und Lokale Variablen",
          "Übungsaufgabe zu If Abfragen treffen - Highscore",
          "Lösung zur Übungsaufgabe zu If Abfragen treffen - Highscore"
        ],
        "Schleifen (Loops) und wie man etwas mit kaum Aufwand zigfach wiederholt": [
          "Einführung in Schleifen",
          "While Schleife",
          "Do While Schleife",
          "For Schleife",
          "break und continue",
          "Übungsaufgabe - Durchschnittsnote berechnen",
          "Lösung zur Übungsaufgabe - Durchschnittsnote berechnen"
        ],
        "Objektorientierte Programmierung (OOP) und Klassen": [
          "Einführung in Klassen und Objekte",
          "Unsere erste eigene Klasse",
          "Verwendung von Konstruktoren",
          "Mehrere Konstruktoren",
          "Zugriffsmodifizierer public, private, protected, default etc.",
          "Setter und Getter",
          "Die Math Klasse",
          "Zufallsgenerator Random",
          "Verwendung von this",
          "Übungsaufgabe zu Klassen und Objekten - Autos und Objekte",
          "Lösung zur Übungsaufgabe zu Klassen und Objekten - Autos und Objekte"
        ],
        "Arrays / Felder": [
          "Einen Array anlegen und auf die Elemente zugreifen",
          "Foreach Schleife",
          "Arrays als Parameter verwenden",
          "Mehrdimensionale Arrays",
          "Übungsaufgabe zu Arrays - Durchschnittsumsatz pro Kunde",
          "Lösung zu Übungsaufgabe zu Arrays - Durchschnittsumsatz pro Kunde"
        ],
        "ArrayListen": [
          "Einführung in Arraylisten",
          "Arraylisten durchsuchen",
          "Arraylisten sortieren",
          "Übungsaufgabe zu Arraylisten",
          "Lösung Übungaufgabe zu Arraylisten"
        ],
        "Vererbung / Inheritance und noch mehr zu OOP": [
          "Einführung in Vererbung",
          "Funktionen und Eigenschaften von Superklassen überschreiben",
          "Übungsaufgabe zu Vererbung",
          "Lösung zur Übungsaufgabe zu Vererbung"
        ]
      },
      "requirements": [
        "PC oder Mac",
        "Generelles Verständnis vom Umgang mit dem Computer"
      ],
      "description": "Der Ultimative C# Kurs – Hier wirst Du zum CSharp Pro.\nDu möchtest Programmieren lernen? Am besten sofort und schnell?\nDer beste CSharp Kurs für blutige Anfänger, die programmieren lernen wollen oder Umsteiger welche zu ihren Repertoire hinzufügen möchten. Genau das Richtige für Leute die Programmieren können wollen, jedoch bisher entweder keinen guten Kurs gefunden haben, oder einfach nicht wussten wo sie starten sollen.\nIch habe gute Neuigkeiten für Dich. Wenn Du tippen, ein Programm installieren und ein wenig mit einem PC umgehen kannst, bist du bereit durchzustarten und zum CSharp Pro zu werden. Kein Witz! Viel mehr musst Du nicht wissen um anzufangen und Dein Ziel zu erreichen. Du kannst hier CSharp lernen, eine der am schnellsten wachsenden Programmiersprachen.\nDu kannst in wenigen Wochen CSharp lernen und ein erfolgreicher CSharp Entwickler werden. All das mit diesem super Kurs „Der Ultimative CSharp Entwickler Kurs“.\nWas ist C# überhaupt?\nCSharp (ßiescharp gesprochen) ist eine Programmiersprache die von Microsoft entwickelt wurde und sehr beliebt ist. Sie wird für die Entwicklung Von komplexen Programmen und Videospielen verwendet. Letzteres vor allem mit dem Tool Unity.\nWarum genau dieser Kurs?\nIch habe bereits einige Kurse erstellt und aus dem Feedback meiner Teilnehmer immer mehr gelernt. Daher weiß ich genau wie man einen Programmierkurs erstellt, den jeder verstehen kann und der jedem Spaß macht.\nDu lernst hier zuerst einmal das Coden, dazu die notwendige Syntax und die nötigen Konzepte. Diese festigst Du durch Übungsaufgaben und Quizze.\nWenn Du programmieren lernen willst, musst Du lernen Code zu schreiben Und um das zu tun, musst du coden, viel coden. Genau das tust du hier. Dieser Kurs ist praxisorientiert. Du folgst also Schritt für Schritt den Anweisungen, und wendest dann das gelernte in den Übungsaufgaben alleine an. Dadurch bestätigst Du für Dich selbst, dass Du es drauf hast.\nDu beginnst dabei die Grundlagen von Datentypen zu erlernen. Dann lernst du wie du Code automatisierst, Dir viel Schreibarbeit sparst, indem Du Funktionen schreibst. Du lernst wie man Objekt Orientiert Programmiert, damit bist Du ideal ausgerüstet um in einem Team zu arbeiten.\nDas hast Du vom Programmieren lernen von C#, einer der besten Programmiersprachen\nC# ist eine gefragte Programmiersprache auf dem Arbeitsmarkt, Du eröffnest Dir dadurch also komplett neue Möglichkeiten\nC# wird von Microsoft einem der größten Unternehmen der Welt gepflegt und weiterentwickelt.\nC# kann man in Visual Studio entwickeln. Viele sagen, dass es sich dabei um die beste Programmierumgebung handelt, die mit fünf Sternen bewertet wird! Warum also nicht gleich mit dem besten Werkzeug Arbeiten? Ein guter Bauarbeiter arbeitet doch auch nur mit dem besten Werkzeug, damit erreicht er nicht nur die besten Resultate, sondern hat am Ende des Tages auch am meisten Energie übrig.\nC# ist die primäre Programmiersprache für die Spieleentwicklung in Unity, dem weit verbreiteten und erfolgreichen Spieleprogrammiertool. Es ist liefert nicht nur super Resultate, sondern ist auch noch extrem einfach zu erlernen und zu beherrschen. Mehr und mehr Entwicklerstudios gehen von ihren alten Tools über zu Unity.\nSchnell. Da es eine eine statisch typisierte Sprache ist, sind in CSharp die Datentypen von Variablen immer festgelegt, was dazu führt, dass die Programmiersprache schneller ist als dynamisch typisierte Programmiersprachen.\nCommunity CSharp hat eine große Community. Warum ist das wichtig? Na weil es dadurch im Falle, dass du Probleme hast, viele hilfsbereite Entwickler gibt, die dir aushelfen können, oder das Problem das du zu lösen versuchst bereits von anderen Entwicklern behoben wurde und sie die Fehlerlösung bereitwillig auf Webseiten wie Stackoverflow geteilt haben. Das ist vorallem auf StackOverflow sehr hilfreich. Dort hat CSharp die viertgrößte Community. Das ist wirklich extrem nützlich",
      "target_audience": [
        "Jeder der Programmieren lernen will",
        "Jeder der mit der C# Programmierung anfangen will",
        "Jeder der die nötigen Grundlagen für die Spieleentwicklung mit Unity braucht"
      ]
    },
    {
      "title": "Uygulamalarla MATLAB Eğitim Seti 2024",
      "url": "https://www.udemy.com/course/uygulamalarla-matlab-egitim-seti/",
      "bio": "MATLAB'ı temelden ileri seviye uygulamalara kadar öğreneceksiniz",
      "objectives": [
        "Matlab üzerinde görüntü işleme uygulamaları geliştirebilecek",
        "Bir çok mühendislik problemini çözebilecek"
      ],
      "course_content": {
        "Giriş": [
          "Matlab Çalışma Ortamı Tanıtımı"
        ],
        "Değişkenler": [
          "1-Değişken Nedir",
          "2-Numerik Tipler",
          "3-String Değişkenler",
          "4-Yorum Satırları",
          "5-Matris ve Vektör Tanımlama",
          "6-Matrislerde Elemanlara Erişim Kuralları",
          "7-String ve Karakter Matrislerinde Erişim Yöntemi ve Mantığı",
          "8-Çok Boyutlu Matrisler",
          "9-Cell Veri Tipi",
          "10-Table Veri Tipi",
          "11-Değişkenlerle İlgili İşe Yarar Fonksiyonlar",
          "12-Map Veri Tipi"
        ],
        "Operatörler": [
          "1-Matematiksel İşlemler ve Operatörlerin Kullanımı",
          "2-Matematiksel Operatörlerde İşlem Öncelikleri",
          "3-Denklem Çözümü Örnekler",
          "Matrislerde Toplama ve Çıkarma İşlemi",
          "Matrislerde Çarpma İşlemi",
          "6-Cell Toplama İşlemi",
          "7-Excel Verilerini Matlab Ortamına Dahil Etme"
        ],
        "MATLAB İpuçları": [
          "Komut Penceresi, Workspace ve Script Alanlarının Birbirleriyle İlişkisi",
          "help,clc,clear ve clearvars Metodları Kullanmı",
          "Matris ve String Değişkenlerin Elemanlarına Erişme Kuralları",
          "Kullanıcıdan Veri Almak",
          "Kullanıcıya Veri Göstermek"
        ],
        "Koşul İfadeleri": [
          "Boolean Veri Tipi",
          "If Giriş",
          "İf Koşul İfadesi ve Mantıksal Operatörler",
          "İf-Else Yapısı",
          "if-elseif-else Yapısı",
          "if-elseif-else Ornek",
          "if Koşul İfadelerinde AND ve OR",
          "Tekli | - & operatörüyle Çift || - && arasındaki Fark",
          "Karşılaştırma ve Mantıksal Operatörlerin Matrislerle Kullanımı",
          "Categorical Veri Tipi"
        ],
        "#Koşul İfadeleri Çalışma Soruları": [
          "Örnek Çalışma 1. Bölüm",
          "Örnek Çalışma 2. Bölüm",
          "Örnek Çalışma 3. Bölüm",
          "Örnek Çalışma 4. Bölüm",
          "Örnek Çalışma 5. Bölüm"
        ],
        "Döngüler": [
          "For Döngüsü Giriş",
          "For Döngüsü Devam",
          "For Döngüsü Alıştırma",
          "Break ve Continue Deyimleri",
          "For Döngüsü Alıştırme ve Break",
          "While Döngüsü",
          "Switch Case"
        ],
        "#Döngü Çalışma Soruları": [
          "Örnek Çalışma 1. Bölüm",
          "Örnek Çalışma 2. Bölüm",
          "Örnek Çalışma 3. Bölüm",
          "Örnek Çalışma 4. Bölüm",
          "Örnek Çalışma 5. Bölüm"
        ],
        "Fonksiyonlar": [
          "1-Fonksiyonlara Giriş",
          "2-Fonksiyonlara Parametre Gönderme",
          "3-Fonksiyonlardan Değer Döndürme",
          "4-Recursive (Özyineli) Fonksiyonlar",
          "5-Parametrelere Varsayılan Değer Atama",
          "6-Sınırsız Parametre Gönderme ve Döndürme",
          "7-Function Handle ve Anonymous Functions"
        ],
        "Hata Oluşturma ve Yakalama": [
          "1-Error ve Assert Fonksiyonlarıyla Hata Oluşturma",
          "2-Uyarı Verme",
          "3-Try-Catch ile Hata Yakalama",
          "4-Hata Yakalama Örnek-1"
        ]
      },
      "requirements": [
        "Bilgisayar",
        "MATLAB Uygulaması",
        "Herhangi Bir Programlama Geçmişi Olmasına Gerek Yoktur!"
      ],
      "description": "Bu kapsamlı MATLAB eğitim seti, sıfırdan ileri seviyeye kadar MATLAB'ı öğrenmek isteyenler için tasarlanmıştır. Kurs, hem teorik hem de pratik uygulamalarla desteklenmiş 200'den fazla ders içerir ve farklı seviyelerde kullanıcıların ihtiyaçlarını karşılamak için detaylı bir şekilde yapılandırılmıştır.\nKursa temel bilgilerle giriş yapılarak, MATLAB çalışma ortamının tanıtımıyla başlanır. Ardından değişkenler, operatörler ve matris işlemleri gibi temel konular ele alınır. Değişken tanımlama, veri tipleri, matris ve vektör manipülasyonları gibi konularla MATLAB'ın temelleri sağlam bir şekilde öğretilir. Koşul ifadeleri ve döngüler ile algoritma geliştirme becerilerinizi güçlendirebilir, gerçek hayat problemlerine çözüm üretebilirsiniz.\nKursun ilerleyen bölümlerinde, fonksiyon oluşturma, hata yönetimi, dosya işlemleri gibi daha ileri seviye konular işlenir. Ayrıca, MATLAB'ın güçlü grafik çizim yetenekleri sayesinde verilerinizi etkili bir şekilde görselleştirmeyi öğrenebilirsiniz. Grafik işlemlerine yönelik detaylı dersler sayesinde, plot, scatter, histogram gibi çeşitli grafik türlerini kullanarak görsel analiz yapabileceksiniz.\nÖzellikle mühendislik ve veri bilimi projelerinde sıklıkla kullanılan görüntü işleme ve yapay sinir ağları gibi ileri seviye konular da bu kursta yer almaktadır. Görüntü işleme projeleri ile nesne tanıma, kırık parçaların tespiti, çember tahmini gibi uygulamalar gerçekleştirebilir; yapay sinir ağları dersleri ile pattern recognition ve clustering gibi teknikleri öğrenebilirsiniz.\nSon bölümde ise bilgisayar görüşü (Computer Vision) projeleri ve sembolik matematik konuları detaylandırılır. Özellikle denklem çözme, türev ve integral hesaplama gibi sembolik işlemler, mühendislik ve bilimsel araştırmalar için son derece faydalıdır.\nBu kurs, MATLAB'da ustalaşmak isteyen mühendisler, araştırmacılar, öğrenciler ve profesyoneller için eksiksiz bir rehber niteliğindedir. Teorik bilgilerin yanında pratik projelerle becerilerinizi pekiştirerek, gerçek dünyada karşılaşacağınız problemlere çözüm üretebilirsiniz.",
      "target_audience": [
        "MATLAB Öğrenmek İsteyen Herkes",
        "Görüntü İşleme (Image Processing) uygulamaları yapmak isteyenler",
        "Yapay Sinir Ağları (Artificial Neural Network) ile uygulamalar yapmak isteyenler",
        "Computer Vision (Bilgisayar Görüsü) hakkında bilgi sahibi olmak isteyenler",
        "Deep Learning ile uygulama geliştirmek isteyenler"
      ]
    },
    {
      "title": "Curso Completo Python 3 - Desde las Bases hasta Django",
      "url": "https://www.udemy.com/course/python-curso-completo/",
      "bio": "Django,Flask,Bases del lenguaje, Programación Orientada a Objetos, Lectura y Escritura de Archivos y Bases de Datos",
      "objectives": [
        "Desarrollar aplicaciones utilizando el lenguaje Python",
        "Conectarse a bases de datos usando Python",
        "Trabajar con archivos y expresiones regulares en Python",
        "Trabajar con fechas y horas en Python",
        "Descargar y utilizar librerías externas usando Python"
      ],
      "course_content": {
        "Sobre tu nuevo curso": [
          "Introducción al Curso",
          "Sobre los retos"
        ],
        "Introducción a Python": [
          "Sobre tu Curso",
          "Cómo Contactarme",
          "Introducción a Python",
          "¿Qué es Python?",
          "Descargando Python",
          "Nota importante",
          "Hola Mundo",
          "Configurando to IDLE",
          "Instalando Python en la Consola de Windows",
          "Instalando pip en la Consola de Windows",
          "Números y Operadores Aritméticos",
          "Variables",
          "Variables II",
          "Cadenas",
          "Instalando Pycharm",
          "Creando Nuestro Proyecto en PyCharm",
          "Usando Atom",
          "Ejecutar un Script en la Consola de Windows",
          "Condiciones I",
          "Condiciones II",
          "Funciones I",
          "Objetos en Python",
          "Listas I",
          "Split and Join",
          "Indices",
          "del",
          "In",
          "Ciclos I",
          "Reto Ciclos",
          "Día del mes",
          "Excepciones",
          "Calculadora",
          "Calculadora II",
          "Calculadora III"
        ],
        "Estructuras de Datos en Python": [
          "Introducción a Estructuras de Datos en Python",
          "Slices - Inicio y Fin",
          "Slices - Steps",
          "Slices - Reemplazar y Borrar",
          "Diccionarios - Introducción",
          "Diccionarios - Agregar, Borrar y Actualizar",
          "Diccionarios - Iteración",
          "Tuplas",
          "Sobre Repl.It",
          "Lista de Compras",
          "Lista de Compras II",
          "Agenda Telefónica I",
          "Agenda Telefónica II",
          "Agenda Telefónica III",
          "Agenda Telefónica IV",
          "Agenda Telefónica V",
          "Mejorando la Agenda",
          "Adivina el numero I",
          "Adivina el Número II",
          "Adivina el Número III",
          "Adivina el Número IV",
          "Adivina el Número - Reto",
          "Conjuntos",
          "Conjuntos I",
          "Conjuntos II",
          "Conjuntos III",
          "Conjuntos IV",
          "Conjuntos V",
          "Conjuntos VI"
        ],
        "Programación Orientada a Objetos en Python": [
          "Introducción POO",
          "Clases",
          "Instancias de Clases",
          "Métodos",
          "El método init",
          "Reto POO",
          "Diccionarios y Clases",
          "Introducción Herencia",
          "Herencia I",
          "Herencia II",
          "__str__",
          "Obteniendo un Nombre de Usuario",
          "Herencia y Sobreescribiendo Métodos",
          "Reto POO"
        ],
        "Fechas y Horas en Python": [
          "Introducción Fechas y Horas",
          "Fechas y Horas",
          "DeltaTime",
          "Today y Now",
          "Formateando Fechas",
          "Zonas Horarias",
          "Reloj del Mundo I",
          "Reloj del Mundo II",
          "Reloj del Mundo III",
          "Reloj del Mundo IV",
          "Reloj del Mundo V",
          "Reto de la Sección"
        ],
        "Archivos en Python": [
          "Introducción a la Sección de Archivos",
          "Cómo Leer Archivos en Python",
          "Match y Search",
          "Character Clases",
          "Cuantificadores",
          "Conjuntos",
          "Conclusión Expresiones Regulares",
          "Escribiendo Archivos en Python",
          "Reto de la Sección"
        ],
        "Bases de Datos en Python": [
          "Introducción de Sección",
          "Instalando Peewee",
          "Revisando la Documentación de Peewee",
          "Creando Nuestro Proyecto de Peewee",
          "Creando Nuestro Primer Modelo",
          "Creando nuestra Base de Datos",
          "Llaves Foraneas",
          "Guardando Registros",
          "LLaves Foráneas",
          "Actualizando Registros",
          "Obteniendo Registros",
          "Obteniendo Registros II",
          "Cómo Borrar Registros",
          "Recapitulando CRUD",
          "Creando Nuestro Diario",
          "Docstrings",
          "name == main",
          "Creando Nuestro Modelo",
          "OrderedDict",
          "Presentando Nuestro Menu",
          "__doc__",
          "Cómo Agregar Registros en el Diario",
          "Cómo Ver los Registros",
          "Buscando una Entrada en Nuestro Diario",
          "Borrando una Entrada",
          "Mejorando Nuestro Código",
          "Reto de la Sección"
        ],
        "Mejorando Nuestro Código de Python": [
          "Introducción a la Sección",
          "PEP 8",
          "Mejorando el código del diario",
          "4 - Mejorando Código Agenda",
          "5 - El Zen de Python"
        ],
        "Introducción a Flask": [
          "Introducción a la Sección",
          "Instalando Flask",
          "Hola Mundo",
          "Routes",
          "Query String",
          "Route Parameters",
          "Limpiando Nuestras URLs",
          "Desplegando HTML",
          "Templates I",
          "Templates II",
          "Templates y Herencia",
          "Static",
          "Reto de la Sección",
          "Formularios",
          "Armando Nuestro Formulario",
          "Pasando Información",
          "Cookies",
          "Obteniendo información de las cookies"
        ],
        "Introducción a Django": [
          "Introducción a la Sección",
          "Explorando el Sitio de Django",
          "Instalando Django",
          "El Proyecto que Desarrollaremos",
          "Creando Nuestro Proyecto",
          "Iniciando Nuestro Servidor",
          "Migraciones Iniciales",
          "Hola Mundo",
          "Urls",
          "Django Apps",
          "Creando Nuestro Primer Modelo",
          "Creando Instancias de Nuestro Modelo",
          "Sobreescribiendo str",
          "View de los Cursos",
          "Url de los Cursos",
          "Join",
          "Admin Portal",
          "Registrando Modelos",
          "Introducción a los templates",
          "Más Sobre Templates",
          "Herencia y Templates",
          "Fin de la Sección",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Deben tener una conexión a internet para descargar las herramientas",
        "Deben tener un navegador de internet instalado",
        "Conocimientos básicos de programación son útiles pero no requeridos"
      ],
      "description": "¡Hola a todos!\n\nBienvenidos a este nuevo curso completo de Python donde les enseñare todo lo que necesitan saber para convertirse en unos expertos desarrolladores de este magnífico lenguaje.\nTanto si eres un principiante en el mundo de la programación como si ya tienes experiencia este es un lenguaje que te encantará aprender debido a su sintaxis fácil e intuitiva.\n\nLos temas que cubrimos actualmente en el curso son:\n\n\nIntroducción a Python\nInstalaremos nuestras herramientas\nVariables\nCiclos\nCondiciones\nErrores\nEstructuras de Datos en Python\nDiccionarios\nTuplas\nConjuntos\nListas\nProgramación Orientada a Objetos\nClases\nHerencia\nSobreescritura de métodos\nFechas y Horas en Python\nObtener la hora en Python\nFormatos de Fecha y Hora\nZonas Horarias\nArchivos en Python\nLectura de Archivos\nEscritura de Archivos\nExpresiones Regulares\nBases de Datos\nConexión a Bases de Datos\nAgregar, Actualizar y Borrar Registros\nUso de librerías externas\nLo mejor de todo es que este curso esta completamente enfocado a proyectos, donde desarrollaremos aplicaciones como:\nUna calculadora\nLista de Compras\nAgenda Telefónica\nJuego de Hangman\nCalculadora de Conjuntos\n\nAplicación de Diario con Bases de Datos\nNo lo pienses más e inscribete.\n\n¡Saludos!",
      "target_audience": [
        "Este curso es para aquel estudiante que desee aprender a programar en Python",
        "Este curso es para desarrolladores que necesiten aprender las bases de Python",
        "Este curso es para aquel que quiera aprender a programar en un lenguaje sencillo e intuitivo"
      ]
    },
    {
      "title": "Python Programlamaya Giriş İçin Temel Kurs (2022)",
      "url": "https://www.udemy.com/course/temel-python-kursu/",
      "bio": "PYTHON, JAVA, C# gibi tüm programlama dilleri için temel programlama mantığını anlaşılır örneklerle öğrenin.",
      "objectives": [
        "Programlama için temel konuları öğreneceksiniz.",
        "Nereden başlayacağınızı bilmiyorsanız, sizin için doğru bir yol haritası çizeceğiz.",
        "Basitten zora algoritmalar öğreneceksiniz.",
        "Atölye çalışmaları (workshop) yapacaksınız."
      ],
      "course_content": {
        "Programlamaya Giriş": [
          "Bölüm Tanıtımı",
          "Temel Kurulumlar",
          "Değerlendirmeler Hakkında"
        ],
        "Temel Bilgiler": [
          "Yazılım Nedir?",
          "Programlama Nedir?"
        ],
        "Programlama Mantığını Anlamak": [
          "Programlama Mantığını Anlamak"
        ],
        "Değişkenler ve Veri Tiplerini Anlamak": [
          "Temel Değişken Yapısını Anlamak",
          "Temel Kuralları Öğrenelim"
        ],
        "Şart Bloklarıyla Algoritma Mantığını Anlamak": [
          "Şart Bloklarını Anlayalım",
          "else ve elif Bloklarını Kavrayalım",
          "Bölüm Ödevi 1",
          "Bölüm Ödevi 2",
          "Bölüm Ödevi 3"
        ],
        "Dizi Temelli Yapıları Gerçek Hayatla İlişkilendirelim": [
          "Dizi Temelli Yapıları Gerçek Hayatla İlişkilendirelim",
          "Bölüm Ödevi 1",
          "Bölüm Ödevi 2"
        ],
        "Döngüleri Gerçek Hayatla İlişkilendirip Öğrenelim": [
          "Döngüleri Gerçek Hayatla İlişkilendirip Öğrenelim"
        ],
        "Fonksiyonları Anlayalım": [
          "Fonksiyonları Anlayalım"
        ],
        "Bonus": [
          "Bonus Ders"
        ]
      },
      "requirements": [
        "Hiç bir ön koşul yoktur."
      ],
      "description": "Bu kurs size programlama mantığını anlatmak için tasarlanmıştır.\nBir çok programcılık adayı, programlama öğrenme serüveninin hemen başında pes etmektedir.\nBunun nedeni genellikle aşağıdakilerden biridir;\nNereden başlayacağını bilmemek.\nProgramlama dilleri arasında dönüp dolaşmak\nDoğru kaynaktan öğrenmemek\nDaha önce 200.000'den fazla kişiye online eğitim, 400'den fazla kuruma/şirkete kurumsal eğitim/danışmanlık vermenin tecrübesiyle hazırladığım bu ücretsiz eğitimde, programlamaya temeli sağlam bir giriş yapacaksınız.\nPYTHON, JAVA, C# gibi  tüm programlama dilleri için temel programlama mantığını anlaşılır örneklerle öğreneceksiniz.\nKursumuz son Python versiyonu ve popüler Visual Studio Code editörü üzerinden devam etmektedir.\nProgram boyunca etkin bir öğretme tekniğiyle gerçek hayatla ilişkilendirilmiş örnekler üzerinden kodlama altyapısını öğreneceksiniz.\nAşağıdaki konuları öğreneceksiniz.\nKodlama mantığı\nDeğişkenler\nŞart blokları\nDöngüler\nAlgoritmalar\nMetotlar\nBu kurs size programlama mantığını anlatmak için tasarlanmıştır.\nBir çok programcılık adayı, programlama öğrenme serüveninin hemen başında pes etmektedir.\nBunun nedeni genellikle aşağıdakilerden biridir;\nNereden başlayacağını bilmemek.\nProgramlama dilleri arasında dönüp dolaşmak\nDoğru kaynaktan öğrenmemek\nDaha önce 200.000'den fazla kişiye online eğitim, 400'den fazla kuruma/şirkete kurumsal eğitim/danışmanlık vermenin tecrübesiyle hazırladığım bu ücretsiz eğitimde, programlamaya temeli sağlam bir giriş yapacaksınız.\nPYTHON, JAVA, C# gibi  tüm programlama dilleri için temel programlama mantığını anlaşılır örneklerle öğreneceksiniz.\nKursumuz son Python versiyonu ve popüler Visual Studio Code editörü üzerinden devam etmektedir.\nProgram boyunca etkin bir öğretme tekniğiyle gerçek hayatla ilişkilendirilmiş örnekler üzerinden kodlama altyapısını öğreneceksiniz.\nKeyifli eğitimler dilerim.",
      "target_audience": [
        "Programlamaya başlamak isteyenler"
      ]
    },
    {
      "title": "Rustプログラミング入門 (最高峰・最難解言語)",
      "url": "https://www.udemy.com/course/rust-os-system/",
      "bio": "開発者がもっとも好きなプログラミング言語 1 位 (8年連続) \"Stack overflow developer survey\"",
      "objectives": [
        "Rustの言語仕様",
        "所有権・借用・ライフタイム",
        "Generics・Traits・構造体・列挙型・ユーザー定義型",
        "Unit test"
      ],
      "course_content": {
        "はじめに": [
          "Rustとは？",
          "The Book (The Rust Programming Language)",
          "Rust setup と Package・Crate・Module",
          "Rust インストール (Windows)",
          "本コースのSource code"
        ],
        "Rust 言語仕様": [
          "システムのメモリ構造(ポインタ)",
          "Mutable・Immutable",
          "文字列スライスとString型",
          "所有権と二重解放エラー",
          "Stack overflow・Vector型",
          "Box pointer",
          "所有権・参照・借用",
          "Life time + Dangling pointer",
          "Generics",
          "Generic lifetime annotation",
          "Struct + Enum + Pattern matching",
          "Traits",
          "Error handling",
          "Unit test",
          "Library crate"
        ],
        "ボーナスレクチャー": [
          "Debug tool",
          "ボーナスレクチャー(他コースのクーポンコード)"
        ]
      },
      "requirements": [
        "mac OS (推奨) *WindowsでもRustのインストール方法が違うだけで問題無く進められます。",
        "基本情報技術者(FE)レベルのコンピュータサイエンス知識"
      ],
      "description": "本コースでは、コンピュータ言語の最高峰・最難関言語であるRustの言語仕様について学習します。\n開発者が最も好きな(Most loved)プログラミング言語 8年連続１位 *Stack Overflow Developer Survey\n\n\n***Rustは近年のプログラミング言語で最も難解な言語であり、特に日本国内においては第一線で活躍するエンジニアやベテランエンジニアでもRustを完全に理解している人はほとんどいない為、部分的にでも理解できるとかなりのスキルの差別化になると思います。***\n\n\nRustは、C/C++レベルの自由度/高速処理性能を備えつつ強力なメモリ安全性を保証してくれる素晴らしい言語です。Mozilla社によって開発されてきましたが、2021年2月にRust Foundationが設立され(メンバー : Google, Microsoft, Facebook, Mozilla, AWSなど)各社がRust言語が将来に渡り非常に重要な言語であると位置付けていることが分かります。\n具体的な使用例としては、Webアプリケーションでは Golangの代替、組み込み機器におけるC/C++の代替、Web Assembly(WASM) 、またRustはシステムプログラミング言語でありOSを開発することも可能です。GoogleもAndroid OS開発にRustを採用することを2021年4月に発表し、Microsoftは既にWindows 10から一部のOSの機能をRustで置き換えています。AWS Lambdaとの相性も非常に良いです、AWS Lambdaは実行処理時間と割り当てメモリに応じて課金されるため、実行処理時間が短くメモリが最適化されたRustにより最小コストでAWS Lambdaを運用出来ます。\n\n\n＊＊学習のポイント＊＊\nシステムのメモリ構造とポインタ\nイミュータブルとミュータブル\nシャドーウィング\nスタックとヒープ\n文字列スライスとString型\n所有権と二重解放エラー\nStack overflow\nVector型とBoxポインタ型\n所有権・参照・借用\nライフタイム (Non-Lexical Lifetime)\nダングリングポインタ\nRAII (Resource Acquisition Is Initialization)\nGenerics\nGeneric lifetime annotation\n構造体と列挙型\nマッチングパターン\nトレイトとトレイト境界\nユニットテスト\n外部ライブラリとカスタムライブラリ",
      "target_audience": [
        "Rustをはじめて勉強する人",
        "システムプログラミング言語に興味のある人",
        "Golangより高速なWebバックエンド開発を目指す人"
      ]
    },
    {
      "title": "Spring Boot 3. Aplicaciones web y REST APIs con Spring MVC",
      "url": "https://www.udemy.com/course/spring-framework-desarrollo-web-spring-mvc/",
      "bio": "Aprende desarrollo web con Spring Boot 3, Spring Framework, Spring Data JPA y MySQL (actualizado con Spring Boot 3.3.4)",
      "objectives": [
        "Configurar un servidor Linux en la nube con Ubuntu Server 24.04 LTS, Java 21 y MySQL 8 para hacer el deployment de tus aplicaciones Spring Boot 3",
        "Desarrollar aplicaciones web con Spring Boot 3, Thymeleaf, Spring Data JPA (Hibernate & MySQL 8) y Spring Security.",
        "Desarrollar aplicaciones web con Spring MVC, JSP, Spring Data JPA (Hibernate & MySQL) y Spring Security.",
        "Desarrollar RestFul Web Services con Spring Boot 3, Spring Security y Spring Data JPA (Hibernate & MySQL)",
        "Aprenderás a desarrollar una aplicación web con Spring 6 en Windows, sin embargo el deployment de tu aplicación web en un servidor Linux en la nube.",
        "Spring MVC: Configuration, DispatcherServlet, Controllers, Data Binding, Form Tag Library, File Upload, Root ApplicationContext, etc.",
        "Spring Data JPA: Configuration, CrudRepository, JpaRepository, Query Methods, etc.",
        "Spring Security: Implementar seguridad basada en usuarios y roles en tus aplicaciones web.",
        "Desarrollar la capa de servicio con interfaces y la anotación @Service.",
        "Implementar el API de JPA con Hibernate en conjunto con Spring Data JPA.",
        "Aplicar una arquitectura de 3 capas (presentación, negocio y datos) a tus aplicaciones web.",
        "Aplicar el patrón de diseño MVC en tus aplicaciones web.",
        "Integrar plantillas HTML basadas en Bootstrap en tus aplicaciones web.",
        "Configurar el administrador de aplicaciones de Apache Tomcat para publicar tus aplicaciones web.",
        "Comprar y configurar un servidor Linux VPS (Virtual Private Server) con el proveedor de hosting Linode.",
        "Comprar un dominio real en Godaddy y configurarlo con la dirección IP pública de tu VPS.",
        "Configurar Spring Security para leer los usuarios desde una base de datos MySQL.",
        "Encriptar passwords con el algoritmo BCrypt."
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de Java y MySQL 8.",
        "Conocimientos básicos de desarrollo web (HTML5, CSS3 y Javascript).",
        "Computadora Windows/Linux/Mac con Java 21 y MySQL 8.0 instalados."
      ],
      "description": "ACTUALIZACIÓN DE CONTENIDO/CODIGO FUENTE (OCTUBRE 2024)\nSE HA ACTUALIZADO TODO EL CONTENIDO, CODIGO FUENTE DE LOS PROYECTOS DESARROLLADOS Y LOS VIDEOS PARA TRABAJAR CON LA VERSION DE SPRING BOOT 3.3.4\nACTUALIZACIÓN DE VERSIONES\nTODO EL CÓDIGO FUENTE Y LA DOCUMENTACIÓN DEL CURSO HAN SIDO PROBADAS CON LAS SIGUIENTES VERSIONES (OCTUBRE 2024):\n\n\nJDK 21 LTS\nSpring Boot 3.3.4\nSpring Framework 6.1.13\nSpring Data JPA 3.3.4\nSpring Security 6.3.3\nMySQL 8.4.5\nDeployment en Ubuntu 24.04 LTS\nACTUALIZACIÓN DE CONTENIDO\nSe agregó nuevo contenido al curso (21 nuevas lecciones). El deployment de aplicaciones Spring Boot en un servidor Linux es uno de los contenidos mas solicitados por los alumnos y por tal motivo se agregó una nueva sección donde el alumno aprenderá a configurar un servidor Linux en la nube con el sistema operativo Ubuntu Server 20.04 LTS y además dejará instalada la aplicación de empleos lista para ser usada desde Internet.\n\n\nALUMNOS SATISFECHOS DE ESTE CURSO:\nGuillermo Ivan Tabera Bazan\nEl curso es muy completo, yo no sabía nada de spring, gracias a que está bien explicado, le dedique tiempo y mucha práctica aprendi sin dolor.\nEn mi caso logré obtener un empleo para desarrollar en spring con mejores ingresos.\nDanielo De León\nExcelente curso, y excelente profesor, todo muy bien explicado, los videos muy didácticos tanto desde el punto de vista práctico como teórico, las clases se me hicieron muy amenas y en todo momento a lo largo del curso me sentí muy motivado para continuar hasta finalizarlo.\nEn la parte de spring boot, si bien ya tenía algunos conocimientos me sirvió tanto para reforzar como para aprender cosas nuevas y la parte de spring mvc con xml se me hizo muy amigable comparado con otro curso que había hecho hace un tiempo en que me parecía todo muy complicado y tedioso.\nMuchas gracias por el curso, y un fuerte abrazo desde Uruguay!!\nAlex Leiva\nDebo decir que este curso supero mis expectativas, secciones bien organizadas y el profesor contribuyo con su profesionalidad a que siguiera avanzando cada lección del curso. Había tomado unos tutoriales anteriormente de spring pero me parecía muy complejo y termine frustrado. Ahora comprendí el flujo que usa el framework y como funciona, estoy muy feliz, nada mas que decir, gracias Profesor Ivan :).\nCarlos Alberto Pérez Vallés\nEs un curso muy completo y muy bien explicado por parte del profesor.\nEl ejemplo de la aplicación del cine, a lo largo de los capítulos, ayuda muchísimo a comprender los conceptos fundamentales de spring y las necesidades que se pueden presentar en un proyecto real.\nSe explican muchísimos detalles a nivel de Spring, Servlet API, Tomcat, Linux. Incluso a nivel de VPS para publicar la aplicación y que esté accesible en Internet.\nMi más sincera enhorabuena al profesor, por su forma de explicar los temas y su disponibilidad a resolver todas las dudas. Muchas gracias.\nJonathan Robles\nExcelente Curso\nA travez de los años he trabajado en Java SE y he utilizando algunos de los frameworks mas utilizados de spring, struts y demas, puedo decir que este es sin duda el mejor curso que he llevado en relacion a spring mvc, jpa.\nEstoy mas que satisfecho con la parte de spring security asi como poder publicar la pagina web en un servidor de aplicaciones real.\nEl profesor muestra conocimiento de los temas ademas de que realmente resuelve las dudas que se van generando.\nArturo Ramirez Camino\nExcelente curso, muy bien estructurado y ha cumplido todas mis expectativas hasta el punto de haber desarrollado sin problemas una aplicación paralela a la explicada por el profesor. Lo recomiendo sin duda.\nFaiber Juanias\nEstoy muy interesado también en aprender más de Linux, y este curso me dio también lo necesario para publicar mis aplicaciones creadas con Spring MVC. Definitivamente excelente curso, y muchas gracias!\nMarcos\nBuenas, muy buen curso, se entiende todo a la perfección.\nMétodo de aprendizaje excelente, aplicando todos los conocimientos sobre un mismo proyecto, el cual al final del curso será una aplicación completamente funcional. De esta forma se entiende todo mucho mejor y se tiene una visión clara de la utilidad de cada cosa.\nMuchas gracias por el curso !\nUn saludo desde España\nIgnacio Jimenez Barco\nCurso muy completo y maravillosamente bien explicado. Impecable pedagogía y conocimientos los del formador, pues se nota el cuidado que poner en explicar y dejar bien claros los conceptos.\nEl enfoque práctico, lo hacen aún más atractivo y cómodo para afianzar y comprender la materia.\nAdemás la velocidad de respuesta es muy alta, prácticamente en el día, lo cual es de agradecer.\nEn resumen: un curso muy recomendable para tener contacto con Spring.\nArturo Castro\nEs mi primer curso en Udemy y por el precio que he pagado por este contenido supera mis expectativas, contenido muy abundante con nuevas tecnologías\nJonny Lozano\nEl curso es muy bueno, el profesor tiene basta experiencia en el tema, ha actualizado el curso con contenido que ni siquiera estaba planeado y además lo que no se ve en el curso, en las respuestas que da en las preguntas de los usuarios, hay información que aunque no aplica al curso, aún así responde y dan aún más conocimiento.\nPablo Arcones\nMuy buen curso para iniciarse y aprender en profundidad el desarrollo de aplicaciones web con spring. Aprendes de todo, tanto a nivel teorico como práctico. Supera las espectativas que tenia con creces!!\nDavid Ruiz\nExcelente, muy didáctico, recomendado a todos aquellos profesionales que se estén iniciando en el maravilloso mundo de Spring Framework\nLeo Bollini\nExcelente curso para empezar de 0, todo el tiempo desde q estoy veo que el instructor actualiza el material, y la vez que tuve que consultarlo no solo atendió la consulta, sino que ademas la resolvió y me explico el motivo en el cual fallaba en el mismo día de la consulta.\nAlvaro Bayon\nExcelente curso. El instructor es muy didáctico, los contenidos están actualizados. Los videos son breves y claros. Es fácil aprender Spring con este curso.\nINTRODUCCIÓN\nEn este curso vas aprender a desarrollar Aplicaciones Web Profesionales y RestFul Web Services utilizando el framework más popular de Java Spring Boot 2. Aprenderás a usar Spring MVC para la funcionalidad de tu Aplicación Web, para el desarrollo de la capa de datos aprenderás a utilizar el módulo Spring Data JPA. Te enseñaré a integrar el framework más popular de persistencia de datos Hibernate para implementar el API de JPA. Finalmente, aprenderás Spring Security para implementar la seguridad de tus aplicaciones web.\nBENEFICIOS DE TOMAR ESTE CURSO\nAl terminar este curso tendrás en tu Curriculm Vitae el manejo de Spring Framework 5 & Spring Boot 2 y te ayudará a encontrar un empleo fácilmente o mejorar tu posición actual. Casi para cualquier trabajo relacionado con desarrollo web con Java, es necesario tener estas habilidades. Este curso te ayudará a aprender estas dos tecnologías de una forma muy rápida porque vamos a desarrollar un proyecto real para aplicar todos los conceptos que veremos a lo largo del curso.\nHABILIDADES Y CONOCIMIENTOS QUE APRENDERÁS A LO LARGO DEL CURSO\nSpring Boot\nCrear proyectos Spring Boot con Spring Initializr & Spring Tools 4.\nDesarrollar Aplicaciones Web con Spring Boot.\nDesarrollar RestFul Web Services con Spring Boot.\nConocer la estructura de un proyecto Spring Boot.\nConfigurar parámetros de Spring Boot.\nSpring MVC\nComprender la arquitectura de Spring MVC.\nComprender el ciclo de vida de las peticiones HTTP en Spring MVC.\nAplicar Spring MVC en aplicaciones web. Para esto utilizaremos clases JavaBeans como componentes de Modelo, Thymeleaf para la Vista y finalmente los Controladores.\nAplicar una arquitectura de 3 capas (presentación, negocio, persistencia) en tus aplicaciones web.\nDesarrollar la capa de negocio con clases de servicio y la anotación @Service. Aprenderás a diseñar tus clases de servicio con INTERFACES para que tus clases de servicio tengan bajo aclopamiento y sean fáciles de mantener.\nComprender la Inyección de Dependencias (@Autowired).\nCrear controladores con @Controller.\nManejo de Peticiones HTTP GET & HTTP POST: @RequestMapping, @GetMapping, @PostMapping.\nDefinir URI dinámicas con @PathVariable.\nComprender el Data Binding entre clases de modelo y formularios HTML.\nRecibir datos de formularios HTML con @RequestParam.\nSubida de archivos al servidor (Upload Files).\nIntegrar las vistas con Thymeleaf.\nManejo de errores en formularios HTML (BindingResult).\nDeclarar redirecciones y definir Redirect Attributes.\nFormularios HTML de búsqueda.\n\n\nThymeleaf\nIntegrar Thymeleaf en proyectos Spring Boot para las vistas.\nIteraciones con th:each.\nCondicionales th:if, th:unless, Elvis Operator (?:)\nConfiguración de recursos estáticos (Javascript, CSS, Images).\nIntegración del framework Front-End Bootstrap.\nIntegración de plantillas HTML.\nThymeleaf Page Layouts & Fragments.\n\n\nSpring Data JPA\nIntegrar Spring Data JPA con Spring Boot.\nConfigurar el Datasource de conexión a MySQL 5.7 & 8.0\nConfiguración de clases Entity (@Entity, @Table, @Id, @Column).\nConfiguración de Relaciones (@OneToOne @OneToMany, @ManyToOne).\nDefinición de Repositorios con las interfaces (@CrudRepository, @JpaRepository).\nDeclaración de Query Methods con @Query.\nCreación de consultas Query By Example (QBE).\nDesarrollar la capa de persistencia utilizando Spring Data JPA.\nInyectar los repositorios en las clases de servicio (@Autowired).\nSpring Security\nIntegrar Spring Security con Spring Boot.\nConfigurar Spring Security para leer los datos de los usuarios y roles de MySQL.\nDefinir seguridad por patrones de URLs.\nAplicar seguridad a tus aplicaciones web con Spring Security.\nDesarrollar un formulario de Login personalizado.\nRestFul Web Services\nCrear controladores con @RestController.\nAnotación @ResponseBody\nAnotación @RequestBody.\nManejo del cliente REST Postman.\nA LO LARGO DE ESTE CURSO VAS A DESARROLLAR 2 APLICACIONES WEB REALES QUE TE SERVIRÁN COMO BASE PARA TUS PROPIOS PROYECTOS.\n\n\nPROYECTO 1 (EmpleosApp)\n¿Cual es la funcionalidad de la aplicación EmpleosApp?\nEl proyecto que vamos a desarrollar es una aplicación web para publicar ofertas de trabajo en Internet. Esta aplicación esta estructurada en dos secciones principales:\nFront-End: Esta es la parte pública de la aplicación y estará abierta al público en general. En la página principal se mostrarán las ofertas de trabajo mas destacadas que han sido publicadas por un administrador. En la página principal también se encuentrá un formulario para buscar ofertas de trabajo por Descripción y por Categorías. Al hacer clic en una oferta de trabajo se mostrarán los detalles de esta vacante. Estos detalles son por ejemplo: fecha de publicación, salario ofrecido, detalles de la vacante (requisitos, requerimientos, prestaciones ofrecidas, datos de contacto, etc. En la página de los detalles de una vacante existirá un botón para que el usuario, siempre y cuando haya iniciado sesión pueda enviar si Curriculm Vitae para aplicar para la Vacante. Finalmente, en la página principal de la aplicación también existirá un botón para que los usuarios puedan registrarse en la aplicación.\nBack-End: Esta es la parte privada de la aplicación y únicamente tendrán acceso los administradores. En esta sección los administradores podrán administrar la aplicación. Básicamente existirán 3 tipos de usuarios o roles: SUPERVISOR, ADMINISTRADOR y USUARIO. El SUPERVISOR tendrá acceso al catálogo de vacantes, categorías y solicitudes enviadas. El ADMINISTRADOR tendrá acceso al catálogo de vacantes, categorías, solicitudes enviadas y el catálogo de usuarios registrados. El USUARIO solo tendra permisos para Aplicar (enviar Curriculum Vitae) para una determinada Vacante.\nPROYECTO 2 (CineApp)\n¿Cual es la funcionalidad de la aplicación CineApp?\nEl proyecto que vamos a desarrollar es una aplicación web para llevar la administración de un CINEMA. Esta aplicación esta estructurada en dos secciones principales:\nFront-End: Esta es la parte pública de la aplicación y estará abierta al público en general. En la página principal se mostrará la cartelera de películas que están en exhibición para la fecha actual. En la página principal también se encuentrá un formulario para buscar películas para otras fechas. Al hacer clic en una película se mostrarán los detalles de esta película. Estos detalles son  los horarios (hora, sala, precio) disponibles para la fecha  seleccionada y los datos generales de la película (imagen, título, actores, duracion, género, el video del trailer, la sinopsis, etc). Finalmente, en la página principal de la aplicación también se mostrará un pequeño blog con noticias relacionadas con el cine.\nBack-End: Esta es la parte privada de la aplicación y únicamente tendrán acceso los administradores. En esta sección los administradores podrán administrar la aplicación. Básicamente existirán dos tipos de administradores o roles: EDITOR y GERENTE. El EDITOR tendrá acceso al catálogo de películas, catálogo de horarios y el catálogo de noticias (BLOG). El GERENTE tendrá los mismos accesos que los editores, pero tendrá acceso también para modificar el banner de la página principal.\nComo puedes ver las 2 aplicaciónes están muy completas, por lo tanto vas a aprender muchas técnicas y conocimientos que podrás aplicar para tus propios proyectos.",
      "target_audience": [
        "Curso dirigido a estudiantes, profesionales o programadores en general que quieren aplicar Java para desarrollar aplicaciones web con Spring Framework."
      ]
    },
    {
      "title": "Продвинутая Java",
      "url": "https://www.udemy.com/course/javarussia/",
      "bio": "Изучите Java на профессиональном уровне",
      "objectives": [
        "Java Collections (Коллекции)",
        "Java Multithreading (Многопоточность)",
        "Регулярные выражения (Regular expressions)",
        "Лямбда-выражения (Lambda expressions)",
        "Maven",
        "Тестирование (JUnit)",
        "Аннотации в Java",
        "Рефлексия (Java Reflection API)"
      ],
      "course_content": {
        "Введение": [
          "Привет!"
        ],
        "Java Collections Framework (Коллекции)": [
          "Динамический массив (ArrayList) - Введение",
          "Динамический массив (ArrayList) - Как устроен?",
          "Связный список (LinkedList) - Введение",
          "Связный список (LinkedList) - Как устроен?",
          "HashMap - Введение",
          "LinkedHashMap и TreeMap",
          "Множества (Set)",
          "Методы hashcode() и equals()",
          "Контракт hashcode() и equals()",
          "HashMap - Как устроен?",
          "Интерфейс Comparator",
          "Интерфейс Comparable",
          "Очередь (Queue)",
          "Стек (Stack)",
          "Интерфейс Iterable"
        ],
        "Java Multithreading (Многопоточность)": [
          "Введение в многопоточность в Java",
          "Ключевое слово volatile",
          "Ключевое слово synchronized (I часть)",
          "Ключевое слово synchronized (II часть)",
          "Пул потоков (Thread pool)",
          "Паттерн producer - consumer (I часть)",
          "Методы wait() и notify()",
          "Паттерн producer - consumer (II часть)",
          "Класс CountDownLatch",
          "Класс ReentrantLock",
          "Семафор (Semaphore)",
          "Взаимная блокировка (Deadlock)",
          "Прерывание потоков",
          "Callable и Future"
        ],
        "Регулярные выражения (Regexp)": [
          "Регулярные выражения (часть I)",
          "Регулярные выражения (часть II)",
          "Классы Pattern и Matcher"
        ],
        "Лямбда - выражения (Lambda expressions)": [
          "Лямбда - выражения (часть I)",
          "Лямбда - выражения (часть II)"
        ],
        "Maven": [
          "Maven (часть I)",
          "Maven (часть II)"
        ],
        "Тестирование (JUnit)": [
          "Введение в тестирование",
          "JUnit (часть I)",
          "JUnit (часть II)"
        ],
        "Другие темы": [
          "Аннотации. Основы.",
          "Аннотации. Создание своих аннотаций.",
          "Рефлексия (Java Reflection API). Часть I.",
          "Рефлексия (Java Reflection API). Часть II."
        ]
      },
      "requirements": [
        "Знать Java на базовом уровне"
      ],
      "description": "Курс ориентирован на тех людей, кто уже знаком с языком программирования Java и хотел бы углубить свои знания и изучить продвинутые темы этого языка программирования. В курсе детально и подробно объясняются важнейшие темы Java и программирования в целом, которые необходимы для работы в индустрии. После прохождения этого курса вы узнаете много нового о Java и о компьютерных науках в целом.",
      "target_audience": [
        "Все, кто хочет знать Java на продвинутом уровне."
      ]
    },
    {
      "title": "【NumPy・Python3で】ゼロから作るニューラルネットワーク",
      "url": "https://www.udemy.com/course/neuralnet/",
      "bio": "Python 3とNumPyで単層・多層ニューラルネットワークを自作して、機械学習の仕組みを理解しよう。バックプロパゲーションの仕組みをスクラッチで理解することで、ディープラーニングのライブラリを使いこなせるようになります。",
      "objectives": [
        "パーセプトロンによる学習について手動計算をして仕組みを理解できます。",
        "勾配降下法の仕組みを数式解説を見たり、コードを書いて理解できます",
        "ゼロからニューラルネットワークを書いて仕組みを理解できます",
        "逆伝播（バックプロパゲーション）が機能する仕組みをデータの流れを確認して理解できます",
        "TensorFlowやScikit-learn, chainer, Caffe 2などでブラックボックス化されている仕組みを理解し、より効果的な設計や最適化ができるようになります。"
      ],
      "course_content": {
        "イントロ（狙いと概要）": [
          "このコースの概要と狙い",
          "機械学習のいろいろなパターン"
        ],
        "第１日：機械学習を体験してみよう": [
          "Anaconda最新版のインストール",
          "はじめての機械学習体験（線形回帰とグラフのプロット）改変中",
          "データのダウンロードURL",
          "GitHubからのパラメーターファイルのダウンロード方法",
          "練習課題：線形回帰を実行してみよう",
          "notebookを保存して終了しよう",
          "練習課題：Notebookの保存と再読み込み",
          "線形回帰（その２　Bostonデータ）",
          "線形回帰２（データの読み込み）",
          "線形回帰を実行する（部屋数と価格の関係）",
          "線形回帰の結果をグラフにしてみよう",
          "練習課題：　部屋数から価格の推定をしてみよう",
          "練習課題：　他の変数と住宅価格の関係性を調べよう",
          "ディープラーニングを体験してみよう（1/2）",
          "ディープラーニングを体験してみよう（2/2）",
          "moviepyでエラーが出る場合の対処方法",
          "補足：チェックポイントファイルの保存手順",
          "練習課題： スタイルトランスファーを実行してみよう",
          "イントロのまとめ"
        ],
        "第２日：Pythonによるデータの扱い": [
          "さまざまなデータ形式とテンソル",
          "確認テスト",
          "行列の扱い（NumPy）",
          "ベクトルデータ",
          "練習課題：　ベクトルデータの生成と掛け算",
          "行列の扱い",
          "練習課題：　2次元行列をNumPyで扱ってみよう",
          "レクチャーノート"
        ],
        "第3日：パーセプトロン": [
          "形式ニューロン",
          "練習課題：形式ニューロン",
          "単層パーセプトロン",
          "練習課題：AND回路",
          "解答例： AND回路",
          "練習課題：NAND回路",
          "練習課題： OR回路",
          "練習課題： XOR回路を考えてみよう",
          "ニューラルネットワークへ"
        ],
        "第4日：ニューラルネットワークによる出力計算": [
          "活性化関数",
          "GeoGebraをインストールしてグラフを描こう",
          "GeoGebraについての注意",
          "（オプション）指数対数の復習",
          "練習課題：指数関数と対数関数のグラフを描いてみよう",
          "練習課題：　シグモイド関数をPythonで描いてみよう",
          "解答例：　シグモイド関数をプロットする",
          "練習課題：　ReLU関数をPythonで描いてみよう",
          "解答例：　ReLU関数のグラフを描いてみよう",
          "シンプルなニューラルネットワークによる出力計算",
          "練習課題：　アウトプットを計算してみよう",
          "解答例：　アウトプットの計算",
          "練習課題：行列の積として書き直す",
          "解答例：　行列のドット積として計算",
          "レクチャーノート"
        ],
        "第5日：勾配降下法による重みの逆伝播": [
          "このセクションの概要",
          "誤差関数の導入",
          "微分と学習率の導入",
          "連鎖律（チェインルール）その１",
          "連鎖律による微分（その２）",
          "シグモイド関数の微分",
          "練習課題：　勾配から新しい重みを計算してみよう",
          "解答例：　単層NNにおける逆伝播による重みの更新",
          "サンプルコード",
          "発展課題：　重みの更新を繰り返して推定値の変化を確認しよう",
          "レクチャーノート"
        ],
        "第６日：多層ニューラルネットワーク（＊追加中＊）": [
          "隠れ層の導入（非線形分離問題を解く）",
          "隠れ層の出力を計算してみよう",
          "練習課題：　出力を計算してみよう",
          "解答例：　多層NNの出力",
          "重みの更新手順のレビュー",
          "多層ネットワークにおけるバックプロパゲーション",
          "練習課題：バックプロパゲーションの計算",
          "このセクションのレクチャーノート（更新中）",
          "最終プロジェクト：　ニューラルネットワークを自作",
          "レンタルバイク問題のコードサンプル"
        ]
      },
      "requirements": [
        "Windows, macOS, Linuxの動作するPC",
        "手計算をしたり、コードを入力して考えることを嫌がらないこと",
        "数学アレルギーでないこと（基礎から解説しますが、微分や指数対数などが出てきます。）",
        "折れない心"
      ],
      "description": "＊2017/8/14 最終課題のサンプルコード（Jupyter Notebook形式）を掲載しました。\n＊2017/6/2 バックプロパゲーションのレクチャーを追加しました。\n＊2017/5/17 多層ニューラルネットワークでの出力計算を掲載しました。\nニューラルネットワークを多層化したディープラーニングは、画期的な精度向上を実現し、大変注目を集めています。そして、TensorFlow, Chainer, Caffe 2などさまざまなライブラリが登場して、以前より手軽にディープラーニングを実装できるようになりました。\nしかし、こうしたライブラリを使いこなすためにも、ブラックボックス化されている最適化の手法を理解しておくと、学習の精度を向上させるためのパラメーター最適化などに役立ちます。\nこの講座では、上記のような各種ライブラリを使用せず、NumPyやPandasなど行列計算やデータ入出力ライブラリだけを使用してニューラルネットワークを作成し、誤差の逆伝播（バックプロパゲーション）による重みの最適化や、勾配降下法の原理についての理解を目指します。\nこれにより学習率や隠し層の数などのパラメーターを変化させると、結果にどのような影響があるのか、を体験を通じて理解できます。\nレクチャーでは数学的な処理についても逐一解説をしていきます。中学レベルの数学的知識があれば理解できるように指数対数や、微分、合成関数の微分（チェインルール）などについて解説をしますので、高校数学に自信がない方でもチャレンジできます。\n数学的な解説・理解が不要な方、映像による学習は好きではない方には受講をお勧めしませんので、十分ご注意ください。\n\nそれでは一緒に学びましょう！",
      "target_audience": [
        "TensorFlowやScikit-learnなどのライブラリを使わず、機械学習の処理の仕組みをちゃんと理解したい方",
        "ニューラルネットワークの誤差逆伝播によるエラー最小化の仕組みを理解したい方",
        "NumPyやPandas, Matplotlibなどを使えるようになりたい方",
        "指数対数や連鎖律（合成関数微分）など機械学習に必要な数学をきちんと理解したい方"
      ]
    },
    {
      "title": "C#文法：C#で非同期プログラミングをする方法",
      "url": "https://www.udemy.com/course/cs-asyncawait-1/",
      "bio": "Thread，ThreadPoolからTask，async awaitまでを分かりやすく解説",
      "objectives": [
        "非同期プログラミングとは何かが分かる",
        "Threadクラスを使った実装方法が分かる",
        "ThreadPoolを使った実装方法が分かる",
        "Taskを使った実装方法が分かる",
        "async，awaitを使った実装方法が分かる"
      ],
      "course_content": {
        "C#で非同期プログラミングをする方法": [
          "はじめに",
          "同期的なプログラミング",
          "非同期プログラミングのイメージ",
          "Threadクラス編",
          "ThreadPool編",
          "Task編",
          "async await編",
          "キャンセルする方法：フラグ編【非推奨】",
          "キャンセルをフラグで管理するデメリット",
          "例外とキャンセルトークンを使ってキャンセルする方法【推奨】",
          "最後に",
          "サンプルソース",
          "補講01_非同期処理 の中で発生した例外を対処したいときについて",
          "ボーナストラック"
        ]
      },
      "requirements": [
        "VisualStudio2017が必要です。マイクロソフトより無料でダウンロードできます。"
      ],
      "description": "C#の非同期プログラミングは.NETFramework4.5以降はTaskとasync&awaitを使ったプログラミングを主流です。非同期プログラミングになじみのない人には非同期処理事態がわからないと思うのでそのあたりをじっくり解説した上で，C#でできる非同期プログラミングの具体的な実装方法を解説して行きます。\n非同期ってはじめて聞く人には何のことかよくわからないと思いますが，簡単に言うと，例えばデータの検索画面があったとして，検索を実行してから検索が完了するまでに10秒くらいかかるとします。その10秒の待ち時間の間，次のどちらの処理がいいでしょうか？\n（A）まったく画面操作ができなくて，画面が固まっていて，動いているのか止まっているのかも分からない。\n（B)画面操作ができたり，プログレスバーがくるくる動作して「処理中です...」って感じで進捗状況を出してくれて，処理中を示してくれる。\n間違いなく後者のほうがいいですよね？\nこの場合（A)が同期プログラミング，（B)が非同期プログラミングと呼びます。\n（A)は一度にひとつの処理しかできないプログラミング手法なので，検索処理を行っている間は，画面操作が一切できなくなります。\n（B)は時間のかかる処理をバックグラウンドで処理させながら，画面操作はそのままできるような実装方法になります。\nただ，プログラミング手法といっても，（B)だけを行うということではなく，通常は（A)のプログラミングを行いながら，バックグラウンドで処理させたいときのみ（B)のプログラミングを実施するという形になるので，通常の（A)の実装に加えて，（B)のプログラミングをマスターする必要があります。",
      "target_audience": [
        "C#プログラミング自体の初心者",
        "C#での非同期プログラミング初心者"
      ]
    },
    {
      "title": "Introdução à programação de computadores",
      "url": "https://www.udemy.com/course/introducao-a-programacao-de-computadores/",
      "bio": "Aprenda a construir programas de computador de maneira fácil e rápida",
      "objectives": [
        "Construir um primeiro programa de computador",
        "Aprender o básico da linguagem Python",
        "Desenvolver o raciocínio lógico",
        "Aprender conceitos de computação"
      ],
      "course_content": {
        "Introdução": [
          "Seja bem-vindo(a)",
          "Abertura",
          "Por que programar?",
          "Exemplos do uso de programação",
          "Por que programar?",
          "Introdução à programação de computadores",
          "Hardware x software",
          "Instalando Python",
          "Instalando Python (prática)",
          "Resolvendo problemas na instalação do Python",
          "Google Colab (ambiente para desenvolvimento alternativo)",
          "Linguagem de programação Python",
          "Meu primeiro programa",
          "Comentários",
          "Comentários",
          "Operações matemáticas",
          "Soma simples",
          "Variáveis",
          "Variáveis",
          "Operadores relacionais",
          "Operadores",
          "Operador de módulo",
          "Operadores lógicos",
          "Operadores lógicos",
          "Comandos condicionais",
          "Comando if",
          "Comando else",
          "Comando else",
          "Comando elif",
          "Idade",
          "Estruturas de repetição",
          "Laço for",
          "Laços",
          "Números ímpares",
          "Comando \"for\" e a função \"range\"",
          "Range",
          "Entrada de dados",
          "Construindo uma calculadora",
          "Exponencial",
          "Inserindo operações na calculadora",
          "Aperfeiçoando a calculadora",
          "Construa uma calculadora",
          "Listas e orientação à objetos",
          "Listas",
          "Encerramento",
          "Certificado"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de como instalar programar"
      ],
      "description": "Você sabe o que são programas de computador? Programas de computador são construídos a partir de linguagens de programação. Aprender programação auxilia no raciocínio lógico e é um ótimo passatempo. Além disso, o mercado de trabalho está sempre a procura de profissionais com conhecimentos nesta área. Neste curso você aprenderá a construir seu primeiro programa de computador usando a linguagem Python.",
      "target_audience": [
        "Pessoas com interesse em aprender programação de computadores",
        "Pessoas interessadas na linguagem Python",
        "Público jovem que está iniciando a estudar programação"
      ]
    },
    {
      "title": "【完全初心者向け】絶対に挫折させないPython入門講座",
      "url": "https://www.udemy.com/course/starting-programming-with-python/",
      "bio": "Pythonの基礎をゼロから学んで簡単なアプリ開発ができるようになるまでの基礎的な力を最短最速で身に付けましょう！",
      "objectives": [
        "プログラミング言語とは何か、といった初歩的な内容から学ぶことができます。",
        "Python3の必要最低限の基本的な文法が習得できます。",
        "クラスの概念とともに、オブジェクト指向型プログラミングの考え方を学びます。",
        "Pythonらしいコードスタイルが身に付きます。",
        "簡単なGUIアプリ開発の実装方法や考え方を学びます。"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "プログラミング言語Pythonとは？": [
          "プログラミング言語とは",
          "Pythonの特徴について"
        ],
        "Pythonの環境構築": [
          "Pythonのインストール(Windows)",
          "テキストエディタのインストール(Windows)",
          "Python、テキストエディタのインストール(Mac)",
          "シェルの操作、ファイルの作成"
        ],
        "プログラムの基本": [
          "データ型の説明",
          "printを使った基本動作",
          "数値型",
          "文字列型",
          "比較演算子",
          "変数と代入について"
        ],
        "データの構造について": [
          "リストとその操作",
          "タプルとその操作",
          "辞書とその操作",
          "集合型とその操作"
        ],
        "文の説明": [
          "if文",
          "for文",
          "while文"
        ],
        "プログラムの構造について": [
          "関数とは",
          "メソッドとは",
          "モジュールとは",
          "便利な関数(enumerate, zip)",
          "リスト内包表記",
          "map, filter関数について",
          "lambda式について",
          "reduce関数について"
        ],
        "クラスとオブジェクト": [
          "オブジェクトとは",
          "クラスとは",
          "クラスの初期化",
          "クラス変数とメソッド",
          "継承とは",
          "オーバーライドとsuperの使い方"
        ],
        "じゃんけんアプリの開発": [
          "アプリ開発の概要",
          "GUIの利用について(1)",
          "GUIの利用について(2)",
          "手と勝敗を定義する",
          "自分の手と相手の手を決める",
          "CLIでじゃんけんアプリを開発する",
          "GUIでじゃんけんアプリを開発する(1)",
          "GUIでじゃんけんアプリを開発する(2)",
          "GUIでじゃんけんアプリを開発する(3)",
          "(参考)pillowを使ってみる"
        ],
        "ファイル操作": [
          "open関数の基本的な使い方",
          "open関数(読み書き両用モード)",
          "csvファイルの取り扱い",
          "openpyxlとpython-docxの利用",
          "os, pathlibモジュールの利用",
          "glob, shutilモジュールの利用",
          "tarfile, zipfileを使った圧縮と解凍"
        ]
      },
      "requirements": [
        "本講義ではPython3の学習を目的とします。",
        "本コースではWindowsを使用していますが、macOSの方も同様に進めていくことができます。",
        "キーボード操作などPCの基本的な操作が可能であることを前提としています。"
      ],
      "description": "プログラミング言語の中でもメジャーなPythonについて学んでいきます。\n基礎的な知識を、スライドを使いつつ実際にコードを動かしながら説明します。皆さんも実際にお手元にパソコンを用意して、適宜一時停止やスロー再生等しながら、実際に手を動かしながら学んでみてください。\n\n\n前半はPythonの基礎についての説明が中心ですが、後半は実際にコードを書きながら、ライブコーディング形式で解説を行いながらじゃんけんアプリの開発を行っていきます。実際に完成するアプリは簡易的なものですが、Pythonを使った開発における重要な知識や考え方が十分詰まっています。\n\n\nこの講義ではPythonの入門部分についてのみ取り扱っていますが、しっかり丁寧に解説を行うことに重点を置いています。初学者向けに学習内容を最低限に絞っているので、すでにPythonを学ばれている方にとっては易しいと感じる内容かもしれません。ですので、この講義を終えたら応用的な内容についてもぜひ学んでみてください。\n\n\n講義の内容は随時追加されます。\nお客様の声を反映させながら動画を追加したり改定しておりますので、わかりづらいところは遠慮なくコメントください。\n実際にこの講義は初回の販売時から4時間分以上の講義が追加されております。\nまたわかりづらいとお声をいただいた講義に関しては動画の追加や差し替えも行いました。\n現時点で完成品とは思っておらず、皆様と一緒にこの講義シリーズを完成させたいと考えておりますので、ぜひご協力ください。\n(未完成の章が公開されていることは何卒ご容赦ください)",
      "target_audience": [
        "プログラミング(Python)の初級者が対象です。"
      ]
    },
    {
      "title": "Comienza con R desde cero: Curso de R para Principiantes",
      "url": "https://www.udemy.com/course/comienza-con-r-curso-de-r/",
      "bio": "¡Aprende a programar con R hoy mismo!",
      "objectives": [
        "Te iniciaras en el mundo de R y aprenderás a programar con R",
        "Aprenderás la diferencia entre R y RStudio",
        "Aprenderás los diferentes tipos de Datos y Objetos que hay en R",
        "Aprenderás lo que son los paquetes en R y a crear tus propias funciones",
        "Aprenderás los diferentes tipos de bucles(loops) que puedes utilizar en R",
        "Aprenderás a crear gráficos en R",
        "Aprenderás a publicar tus resultados con R Markdown"
      ],
      "course_content": {
        "Introducción a R y al Curso": [
          "Que es R?",
          "Recursos y Plataforma de Udemy",
          "Instalando R",
          "¿R o RStudio?",
          "R Básico - Hoja de Referencia"
        ],
        "R Básico": [
          "Configuración",
          "Aritmética Básica y Objetos",
          "Operadores Comparativos",
          "Operadores Lógicos",
          "Resumen de Operadores",
          "Scripts en R",
          "Importar datos en CSV - read.csv()",
          "Paquetes (Packages) en R",
          "Paquetes (Packages) en R",
          "Importar datos XLSX (Excel) - read.xlsx()",
          "Importar datos XML",
          "Importar datos JSON - fromJSON()",
          "Funciones Básicas - mean() y sum()",
          "Investigando los datos - table(), str() y summary()",
          "Añadir una columna a nuestros datos",
          "Exportar los datos - read.table()",
          "Tipos de Datos - Logical, Character, Integer y Numeric",
          "Repaso - Tipos de Datos - Logical, Character, Integer y Numeric"
        ],
        "Tipos de Objetos": [
          "Tipos de Objetos - Vectores",
          "¿Que tipo de vector es este?",
          "Tipos de Objetos - Matrizes",
          "Tipos de Objetos - Listas",
          "Tipos de Objetos - Data Frame",
          "Repaso - Tipos de Objetos - Vectores, Matrizes, Listas y Data Frame",
          "Tipos de Objetos - Vectores, Matrizes, Listas y Data Frame",
          "Conversión de Objetos"
        ],
        "Seleccionando datos": [
          "Seleccionando datos con [ ] y subset()",
          "Seleccionando datos con [ ] y subset() 2",
          "Seleccionando datos con [ ] y subset() 3"
        ],
        "Funciones": [
          "Funciones 1 - Tu primera función",
          "Funciones 2 - Tu segunda función",
          "Prueba - Creo tu propia función",
          "Solución - Crea tu propia función",
          "Solución - Crea tu propia función"
        ],
        "Bucles (Loops) y Programación con R": [
          "Bucles (Loops) - for(), while() y repeat()",
          "Diagramas de Loops",
          "Ejercicio: Crea un while() loop",
          "Solución: Crea un while() loop",
          "Ejercicio: Crea un for() loop",
          "Solución: Crea un for() loop",
          "For() loop: Otra forma de hacerlo"
        ],
        "Gráficos": [
          "Gráficos Básicos - plot()",
          "Gráficos Básicos - barplot(), hist() y pie()",
          "Gráficos Avanzados - ggplot2",
          "Gráficos Avanzados - ggplot2",
          "Grafico de Lineas - ggplot2 - geom_line()",
          "Grafico de Barras - ggplot2 - geom_bar()",
          "Histograma y densidad - ggplot2 - geom_historgram() y geom_density()",
          "Boxplot- ggplot2 - geom_boxplot()",
          "ggplot2 - Guía Rápida"
        ],
        "Publicación de resultados con R Markdown": [
          "Publica tus resultados - Con R Markdown",
          "R Markdown - Hoja de Referencia",
          "Prueba - Crea tu propio Markdown!",
          "Solución - Crea tu propio Markdown!",
          "Ya has terminado este curso!"
        ]
      },
      "requirements": [
        "No hay ningún requisito",
        "No hace falta ninguna experiencia de programación",
        "El software que usaremos, R y RStudio son gratis!"
      ],
      "description": "* Este curso es parte del Data Scientist Bootcamp de Datademia. Visita nuestra web para más información.\n\n\nR es el lenguaje de programación del momento. R es el lenguaje de programación líder en el análisis de datos y esta también ganando terreno como el lenguaje de programación usado para el aprendizaje automático o machine learning.\nR puedes ser bastante difícil de entender para la persona que recién comienza, pero con este curso te llevare paso a paso desde cero para que te sientas cómodo escribiendo código en R. Empezaremos por lo básico y aprenderás los bloques necesarios para entender como funciona R. He intentado simplificarlo todo para que entiendas lo básico y que te sirva para seguir aprendiendo y mejorando. Espero que con este curso te sea fácil y rápido empezar este reto.\nSolo necesitas un ordenador ya que R es abierto libre y gratis. Hecha un vistazo a algunas de las clases gratis y apuntaté si estas listo para empezar a aprender R.\nMi nombre es Sebastian y he trabajado durante muchos años en diferentes empresas tecnológicas con el Big Data en Barcelona. He trabajado siempre con datos, desde la extracción y manipulación de datos hasta la creación de dashboards y programación de modelos de aprendizaje automático.\nTe invito a que veas la presentación completa del curso y las lecciones gratuitas.\nCualquier duda que tengas me puedes contactar por mensaje privado dentro de la plataforma.\nTe espero en el curso, un saludo y muchas gracias!",
      "target_audience": [
        "Alguien sin experiencia previa con R y que quiera a aprender a programar con R"
      ]
    },
    {
      "title": "Microservicios Spring Boot, Spring Cloud Netflix Eureka 2025",
      "url": "https://www.udemy.com/course/microservicios-con-spring-boot-y-spring-cloud/",
      "bio": "Construye Microservicios Spring Boot 3, Eureka, Gateway, LoadBalancer, Resilience4J, Rest, OAuth 2.1, Docker, AWS EC2",
      "objectives": [
        "Construye, implementa y escala microservicios con Spring Boot 3 y Spring Cloud",
        "Aprende a crear y consumir servicios web RESTful con Spring Boot",
        "Conecta y consume otros microservicios utilizando cliente HTTP con Feign y WebClient",
        "Implementa Balanceo de carga del lado del cliente con Spring Cloud LoadBalancer",
        "Implementa el registro y el escalamiento dinámico con el servidor Eureka, Spring Cloud Gateway como puerta de enlace, el API Gateway",
        "Maneja la tolerancia a fallos y latencia con Resilience4J",
        "Centraliza las configuraciones de los microservicios con Spring Cloud Config Server",
        "Implementa Autenticación y Autorización con Spring Cloud Security (OAuth2 y JWT)",
        "Aprende a implementar rastreo distribuido en microservicios con Micrometer Tracing y Zipkin",
        "Aprende Docker desde cero, automatiza, escala y despliega los microservicios en contenedores",
        "Aprende sobre las redes de contenedores con Docker Networks",
        "Despliegues en producción contenedores Docker en AWS, EC2 (Elastic Computing Cloud)"
      ],
      "course_content": {
        "Introducción al curso": [
          "Introducción curso",
          "Antes de comenzar",
          "Obtener JDK",
          "Instalación JDK MacOS",
          "Instalación JDK Windows",
          "Instalación IDE y Spring Tools",
          "Introducción a los microservicios"
        ],
        "Comenzando con los Microservicios": [
          "Creando nuestro microservicio products",
          "Añadiendo la clase Entity JPA",
          "Introducción a los repositorios (CrudRepository de Spring Data JPA)",
          "Creando el Repository JPA con Spring Data JPA",
          "Creando el Service para logica de negocio",
          "Creando el controlador Rest",
          "Configurando en el application.properties conexión MySQL",
          "Instalando Base de Datos MySQL MacOS",
          "Instalando Base de Datos MySQL Windows",
          "Copiar inserts into con datos de ejemplo para la siguiente clase",
          "Probando la conexión a MySQL y creando la BBDD y tabla",
          "Probando nuestra API products en Postman",
          "Creando microservicio items",
          "Creando Clase Model Product e Item",
          "Implementando Client Http con OpenFeign",
          "Implementando Service con Feign Client Http",
          "Creando controlador en items",
          "Probando nuestra API items (cliente) con Postman",
          "Configurando puertos en Msvc Products para balanceo de carga",
          "Balanceo de carga del lado del cliente con Cloud LoadBalancer",
          "Configurando WebClient para consumir nuestra API products",
          "Implementando componente service con cliente Http WebClient",
          "Usando @Primary y @Qualifier y probando balanceo de carga WebClient en Postman",
          "Configurando BaseUrl Endpoint",
          "Descargar Código Fuente"
        ],
        "Eureka Server registrando microservicios": [
          "Introducción a Eureka",
          "Creando servidor de registro Eureka",
          "Conectando nuestros servicios como clientes Eureka",
          "Profundizando un poco mas los conceptos vistos con ChatGPT",
          "Organizando estructura de Microservicios en VS Code",
          "Escalar microservcios con puerto dinámico",
          "Descargar Código Fuente"
        ],
        "Spring Cloud Gateway": [
          "Introducción a Spring Cloud Gateway",
          "Creando servicio Spring Cloud Gateway",
          "Configuración de rutas usando applications.yml",
          "Configuración de rutas usando application.properties y applications.yml",
          "Implementando filtros globales pre y post",
          "Modificando el response en el filtro post",
          "Modificando el request en el filtro pre",
          "Implementando Gateway Filter Factory",
          "Gateway Filter Factory Modificando Response HTTP",
          "Configurando y probando nuestro Gateway Filter Factory personalizado",
          "Filtros Gateway Factory que vienen de fábrica",
          "Request Predicates Factory que vienen de fábrica",
          "Request Predicates Factory que vienen de fábrica parte 2",
          "Descargar Código Fuente"
        ],
        "Resilience4J (Resiliencia y tolerancia a fallos)": [
          "Introducción a Circuit Breaker (Cortocircuito)",
          "Configurando microservicio items con Resilience4J",
          "Probando Resilience con los criterios por defecto",
          "Perzonalizando parámetro del Circuit Breaker",
          "Probando en Postman parámetro Customizados del Circuit Breaker",
          "Timeout",
          "Llamadas lentas",
          "Configurando Resilience4j en el application.yml",
          "Configurando Timeout y Llamadas lentas en el application.yml",
          "Configuración Resilience4j usando application.properties y applications.yml",
          "La anotación @CircuitBreaker",
          "La anotación @TimeLimiter",
          "Combinando ambas anotaciones @CircuitBreaker y @TimeLimiter",
          "Spring Cloud Gateway con Resilience4J",
          "Descargar Código Fuente"
        ],
        "Spring Cloud Config Server - centralizando la configuración": [
          "Creando el servidor de configuración",
          "Instalando Git",
          "Creando el repositorio local y Realizando Commit",
          "Conectando servicio items al Servidor de Configuración",
          "Leer configuración desde controlador utilizando anotación @Value",
          "Configurando los ambientes en el repositorio Git",
          "Configurando profiles en servicio items",
          "Actualizando cambios en configuraciones con @RefreshScope y Actuator",
          "Creando repositorio remoto GitHub y push",
          "Realizando push GitHub desde Visual Code",
          "Descargar Código Fuente"
        ],
        "CRUD consumiendo nuestras APIs con Feign y WebClient": [
          "Implementando CRUD en Service y POST, PUT y DELETE en controlador products",
          "Probando CRUD en Postman",
          "Consumiendo API Rest con WebClient desde servicio items",
          "Implementando handler CRUD en controlador de servicio items",
          "Probando operaciones CRUD en servicio items con postman",
          "Consumiendo API Rest con cliente Feign",
          "Descargar Código Fuente"
        ],
        "Servicio commons reutilizando librerías": [
          "Creando librería commons y generando jar usando maven",
          "Modificando servicio productos para agregar dependencia commons",
          "Descargar Código Fuente"
        ],
        "Microservicio Users con ChatGPT": [
          "Creando microservicio users",
          "Creando entity Usuario y repositorio JPA con ChatGPT Inteligencia Artificial",
          "Implementando componente service usando ChatGPT Inteligencia Artificial",
          "Implementando controller rest con ChatGPT",
          "Configurando la conexión MySQL y creando la tabla users",
          "Configurando password encoder BCryptPasswordEncoder",
          "Creando entity Role y su relación de muchos a muchos con User",
          "Creando las tablas roles y users_roles en MySQL",
          "Asignando Role User",
          "Optimizando Service con Logica de Negocio",
          "Asignando Role Admin",
          "Probando en Postman",
          "Optimizando Controller Clean Code",
          "Configurando microservicio users en API Gateway",
          "Descargar Código Fuente"
        ],
        "Spring Authorization Server (OAuth 2.1)": [
          "Introducción a JSON Web Token (JWT)",
          "Algo más sobre los JWT",
          "Introducción a OAuth2",
          "Creando microservicio Spring Authorization Server (OAuth 2.1 )",
          "Configurando el Servidor de Autorización",
          "Implementando Endpoint Authorized Gateway",
          "Configurando Resource Server y Client OAuth2 en YML",
          "Configurando clase Resource Server Security Endpoint",
          "La clase SecurityConfig para Spring MVC (Servlet)",
          "Probando en Postman",
          "Scope read y write",
          "Registrando los Claims Roles en el token JWT",
          "Probando en Postman",
          "Configurando Password Encoder y WebClient",
          "Implementado UsersDetailsService para Login con microservicios users",
          "Probando en Postman",
          "Configurar el tiempo de expiración del Token",
          "Migrando Gateway con Spring Web MVC (API Servlet)",
          "Descargar Código Fuente"
        ]
      },
      "requirements": [
        "Buen dominio de Java SE y programación orientada a objetos",
        "Conocimientos de Spring Framework y Spring Boot",
        "Conocimientos de Bases de Datos y SQL"
      ],
      "description": "Bienvenido al curso de Microservicios, aprenderás línea a línea y desde cero como construir un arquitectura de microservicios con Spring Boot 3 y Spring Cloud, desde los conceptos más básicos hasta un completo ecosistema de servicios interconectados mediante el registro y escalamiento dinámico con Eureka (servidor de nombre), Spring Cloud Gateway (puerta de enlace), implementando balanceo de carga con Spring Cloud LoadBalancer, tolerancia a fallos con Resilience4J. Automatiza, escala y despliega en producción los microservicios en contenedores Docker y en Amazon AWS EC2.\nTambién aprenderás a dar seguridad en Gateway y proteger nuestros endpoints de los diferentes microservicios con Spring Cloud Security (OAuth2.1 y JWT). Además aprenderás a centraliza toda la configuración de los microservicios utilizando Spring Cloud Config Server y trazabilidad distribuida con Micrometer Tracing y Zipkin.\nDurante el curso también trabajaremos con varios componentes del ecosistema de Spring como IoC, Spring MVC, RestController, clientes HTTP para consumir Servicios Web RESTful con WebClient y Feing.\nSpring Data JPA e Hibernate para la persistencia y CRUD (crear, leer, actualizar y eliminar), usaremos bases de datos MySQL 8, entre otros temas más.\nResumiendo aprenderás a establecer la comunicación entre microservicios, habilitar balanceo de carga, tolerancia a fallos, escalar hacia arriba y hacia abajo instancias de los microservicios, seguridad oauth2, despliegues en contenedores Docker, Amazon AWS y mucho más.\n¿Qué son los microservicios?\nSon un enfoque de arquitectura y organización para el desarrollo de aplicaciones compuestas por pequeños servicios autónomos que se comunican a través de API RESTful, en otras palabras, nos permiten dividir nuestro gran sistema en una serie de componentes más pequeños e independientes que colaboran entre si.\nLa arquitectura de microservicios hace que las aplicaciones sean más simples de escalar, más rápidas de desarrollar y más fácil de reutilizar. Donde cada servicio está diseñado para un conjunto de funciones y se enfoca en resolver un problema específico, por ejemplo un servicio desarrollado para una determinada función se puede usar como un componente básico en otro microservicio.\n¿Porqué elegir nuestros cursos?\nAcceso 7 x 24 a nuestra Plataforma e-learning.\nSoporte online con profesor Java\nAl finalizar recibes un certificado digital\nSomos pioneros en brindarte este tipo de acceso para darte la libertad que necesitas para estudiar, donde quiera que te encuentres.\nExcelente relación calidad-precio.\nConocimiento aplicable a proyectos reales del mercado laboral.\nAtención rápida y satisfactoria a las dudas por parte del profesor.\nInteractividad del curso ya que contiene foros y comunicación para resolver dudas.\nTodos los materiales del curso están en español y al finalizar recibes un diploma UDEMY digital certificando tu aprobación con validez internacional y LinkedIn.\nSi quieres ser un desarrollador de arquitecturas de microservicios con Spring Boot 2 y Spring Cloud y avanzar al siguiente nivel, es casi obligatorio este curso, te invito a que te inscribas, nos vemos adentro.",
      "target_audience": [
        "Personas que estudian informática y/o ingeniería que estén estudiando o han estudiado Java y spring",
        "Personas que dominan Spring y quieran introducirse en la arquitectura de microservicios",
        "Desarrolladores apasionados de las nuevas tecnologías que dominan Java",
        "Desarrolladores apasionados de las nuevas tecnologías con base en Spring",
        "Personas interesadas en el desarrollo backend que dominan Java"
      ]
    },
    {
      "title": "正規表現入門　作業効率アップに役立つ38個の方法",
      "url": "https://www.udemy.com/course/38-bgtqc/",
      "bio": "日常の開発作業を題材にして、正規表現を実践的に学んでいきます",
      "objectives": [
        "正規表現とは何か",
        "日常の開発作業において、正規表現を使いこなす方法、考え方",
        "サクラエディタ×正規表現の組み合わせで、作業効率を最大化させる方法"
      ],
      "course_content": {
        "はじめに": [
          "はじめに",
          "正規表現とは"
        ],
        "環境構築": [
          "サクラエディタのインストール",
          "サクラエディタの設定（検索、色）",
          "サクラエディタのショートカット紹介"
        ],
        "正規表現検索～①選択": [
          "２つの内どちらかわからない場合の検索（または検索、バーティカルバー）",
          "３つの内どれかわからない場合の検索①（丸カッコ）",
          "３つの内どれかわからない場合の検索②（文字クラス）",
          "文字クラス補足",
          "３つ以上でどちらかわからない場合の検索",
          "選択のセクションで学んだ内容を復習しましょう"
        ],
        "正規表現検索～②繰り返し": [
          "指定回数繰り返し",
          "範囲回数繰り返し",
          "無限回数繰り返し",
          "記号による繰り返し",
          "まとめて繰り返す",
          "繰り返しのセクションで学んだ内容を復習しましょう"
        ],
        "正規表現検索～③位置": [
          "前方一致検索",
          "後方一致検索",
          "～を含む行を検索する"
        ],
        "正規表現検索～④応用編": [
          "改行の正規表現",
          "タブの正規表現",
          "空白の正規表現",
          "数字の正規表現",
          "【補足】数字の正規表現",
          "特殊文字自体を検索する方法",
          "パスワードの正規表現（肯定先読み）",
          "否定の文字クラス",
          "否定先読み",
          "最短一致検索",
          "Grep検索"
        ],
        "正規表現置換": [
          "正規表現置換",
          "キャプチャ",
          "日付フォーマットを変更する",
          "名前のマスキング",
          "大文字と小文字を変換する",
          "囲みなしCSVを囲みありに変更する",
          "数字3ケタおきにカンマを挿入する",
          "Grep置換"
        ],
        "マクロの作成": [
          "サクラエディタのソート機能",
          "サクラエディタのマクロ機能",
          "キャメルケースをスネークケースを置換する",
          "JavaのEntityクラスを作成する"
        ],
        "まとめ": [
          "Windowsの便利ショートカット紹介",
          "各プログラミング言語での正規表現の使い方(Java, C#, JavaScript, Bash, Go, Python)",
          "本講座のまとめ"
        ]
      },
      "requirements": [
        "ありません"
      ],
      "description": "正規表現は概念がわかりにくく、習得にも時間がかかります。\nしかし、普段の仕事中などで、繰り返し使っていると段々と身につくようになります。\nそうなると、テキストエディタでの文字列操作などを驚異的なレベルで効率化することができます。\n仕事ができるエンジニアの中で、正規表現が全くわからないという方はいません。\n\n\nこの講座では、開発業務におけるテキストエディタでの作業効率アップに役立つ\n正規表現を数多くお伝えしていきます。\n\n\n本講座で身につけた知識はプログラミングにも活用することができます。\n正規表現置換、正規表現検索はほぼ全てのプログラミング言語で使用できるからです。\n\n\n一流エンジニアになるための登竜門、「正規表現」。\nぜひ、一緒に勉強していきましょう！",
      "target_audience": [
        "プログラミングの勉強を始めて半年程度の方",
        "プログラミングの勉強は一段落ついているが、正規表現まで学習が回っていない方",
        "開発現場で呪文のような正規表現に出会い、面喰ってしまった方",
        "作業効率アップをアップさせたい方",
        "手作業や目視確認が苦手な方",
        "ツールやマクロを自分で作れるようになりたい方"
      ]
    },
    {
      "title": "基礎から学ぶRustプログラミング入門",
      "url": "https://www.udemy.com/course/rust-basic-course/",
      "bio": "Rustは7年連続で「開発者に最も愛されている言語」に選ばれた非常に人気の高い言語です。そんなRustを基礎文法から学び始め、最終的にはCLIアプリケーションの開発まで行えるレベルまでステップバイステップで学習できるコースです。",
      "objectives": [
        "Rust言語の基本文法",
        "所有権など、Rust特有の機能",
        "Rustでのテストの方法",
        "演習をによるアプリケーション開発"
      ],
      "course_content": {
        "イントロダクション": [
          "コースの紹介"
        ],
        "環境構築": [
          "Rust Playground",
          "MacへのRustインストール",
          "WindowsへのRustインストール",
          "VisualStudioCodeのセットアップ",
          "Rustプロジェクトの作成"
        ],
        "Rustの基本": [
          "文字出力とコメント",
          "変数宣言",
          "定数",
          "数値型と論理型",
          "タプル",
          "配列",
          "ベクタ",
          "文字型と文字列型",
          "関数"
        ],
        "フロー制御": [
          "式と文",
          "ブロック",
          "if",
          "match",
          "ループ"
        ],
        "【演習】 FizzBuzz問題": [
          "イントロダクション",
          "演習1：新規プロジェクトの作成",
          "演習2：whileとifを使用した実装",
          "演習3：forとmatchを使用した実装",
          "演習4：matchのパターンをタプルに置き換え"
        ],
        "所有権と参照": [
          "スタックとヒープ",
          "所有権",
          "所有権の移動 Part1",
          "所有権の移動 Part2",
          "参照",
          "ライフタイム",
          "スマートポインタ"
        ],
        "構造体と列挙型": [
          "構造体",
          "構造体のメソッド定義",
          "型関連関数",
          "列挙型",
          "Option型",
          "マッチガード"
        ],
        "クレートとモジュール": [
          "クレート",
          "モジュール",
          "モジュールの複数ファイルへの分割",
          "構造体の可視性",
          "バイナリとライブラリ",
          "ドキュメント",
          "ビルドプロファイル"
        ],
        "トレイトとジェネリクス": [
          "トレイトの定義",
          "トレイトの実装",
          "デフォルトメソッド",
          "引数の型としてのトレイト",
          "Derive属性による継承",
          "ジェネリクス",
          "ジェネリックな列挙型や構造体"
        ],
        "エラー処理": [
          "パニック",
          "Result型",
          "エラーハンドリング",
          "エラーの委譲"
        ]
      },
      "requirements": [
        "何らかのプログラミング言語でプログラミングの基礎を学んだことがある方",
        "Rustの知識・経験は不要です",
        "Macを推奨（Windowsでも可能です）"
      ],
      "description": "RustはStack Overflowが毎年行なっている調査で、7年連続で「開発者に最も愛されている言語」に選ばれています。\nRustをマスターしたエンジニアには非常に満足度が高い一方、「難しい言語」としても認知されており、学習を敬遠したり、学習し始めたものの挫折してしまったという話もよく聞きます。\n\n\nしかしRustは処理速度、安全性、汎用性の高さから、非常に優れた言語であり、AmazonやGoogle、Microsoftなど、世界的テクノロジーリーダー企業も採用を進めています。\n\n\n本コースでは、そんなRustについて全く経験がない方でもスムーズに学習を進められるようなコースとなっています。\n基本的にはコードベースで解説を行い、抽象度が高く難しい内容に関しては適宜スライドも使いながら丁寧に解説します。\nそしてただ文法を学ぶだけではなく、最終的には演習としてCLIアプリケーションを作成し学習内容の定着を図ります。\n\n\n本コースを終了した後には、システムプログラミング、Webアプリケーション、WebAssembly、GUIアプリケーション、組み込みシステムなど、環境や興味に合わせて、応用学習へとステップアップしていただければ幸いです。\n\n\n■本コース学習する内容\n基礎文法\nフロー制御\n所有権と参照\n構造体と列挙型\nクレートとモジュール\nトレイトとジェネリクス\nエラー処理\nクロージャとイテレータ\nコレクション\nテスト\nファイル操作とシステム",
      "target_audience": [
        "Rustに興味があるが一歩踏み出せていない方",
        "Rustに挑戦してみたものの、難しく挫折してしまった方",
        "モダンな言語を学んで周りのエンジニアと差別化をはかりたい方",
        "動画を見ながら手を動かして学ぶのが好きな方"
      ]
    },
    {
      "title": "Programowanie w Visual Basic (VBA) w Excelu",
      "url": "https://www.udemy.com/course/programowanie-w-visual-basic-vba-w-excelu/",
      "bio": "Środowisko programistyczne (IDE) Visual Basic w Excelu. Proste, wdzięczne i niesłychanie funkcjonalne",
      "objectives": [
        "Programować w Visual Basic w środowisku Excela"
      ],
      "course_content": {
        "Pierwsze kroki": [
          "Konfiguracja Excela",
          "Pierwsze makro - Rejestracja i analiza wygenerowanego kodu kodu",
          "Makra Rejestrowane c.d. i ingerencja w kod VBA",
          "Nowe proste instrukcje - zmienna i zamiana wartości komórek",
          "Proste instrukcje wejścia/wyjścia w VBA - powitanie",
          "Wejćie/Wyjście - poitanie c.d.",
          "Własna funkcja - formuła w Excelu za pomocą VBA",
          "Pętle - cz1- pętla FOR",
          "Pętle - cz2 - pętla WHILE",
          "Pętla w pętli",
          "Funkcja Losująca",
          "Pętla WHILE w pętli WGILE"
        ],
        "Makra Globalne - programy globalne i projektowanie okien": [
          "Stworzenia pliku makr globslnych - PERSONAL",
          "Deklaracje zmiennych",
          "Deklaracje zmiennych c.d.",
          "Nakra Globalbe VBA c.d.",
          "Budowanie okienka Winowsowego w Excelu",
          "Projektowanie okienka - pole tekstowe i przycisk polecenia.",
          "Pole tekstowe w okienku c.d.",
          "Projektowanie okienka -pole wyboru - Combo",
          "Projektowanie okienka - pola jednokrotnego wyboru - opcje",
          "Projektowanie okienka - pole listy i przełącznik",
          "Projektowanie okienka - pole ramka - FRAME i pole MULTIPAGE",
          "Projektowanie okienka - pole TabStrip",
          "Projektowanie okienka - pola ScrollBar i SpinButton",
          "Projektowanie okienka - pole wielokrotnego wyboru -CheckBox (ptaszki)",
          "Projektowanie okienka - pole odnośnika - RefEdit I pole obrazka- IMAGE",
          "Projektowanie okienek - kosmetyka",
          "Projektowanie okienka „kosmetyka” P.S. o „myszce”",
          "Uwagi końcowe o okienkach - zamykanie i ukrywanie"
        ],
        "Kontrolki ActiveX w bieżącym skoroszycie": [
          "Wprowadzenie do kontrolek ActiveX",
          "Kontrolki ActiveX Pole tekstowe i Przycisk polecenia ale i funkcja rekurencyjna",
          "Kontrolki ActiveX Pole Kombi czyli ComboBox - pole wyboru - menu",
          "Kontrolki ActiveX Pole Etykiety (Label) i Pole listy (ListBox)",
          "Kontrolki ActiveX Pole jednokrotnego wyboru Przycisk opcji (OptionButton)",
          "Kontrolki ActiveX Pole wielokrotnego wyboru (CheckBox) i Przycisk przełącznika",
          "Kontrolki ActiveX Pasek przewijania (ScrollBar) i Przycisk pokrętła (SpinButton",
          "Kontrolki ActiveX Pole Obrazek (Image) i podsumowanie"
        ],
        "Programowanie c.d. inne instrukcje i funkcje": [
          "Programowanie Operacje – funkcje na napisach - stringach",
          "Programowanie. Operacje – funkcje na napisach - Pierwszy przykład zastosowania",
          "Programowanie Operacje – funkcje na napisach Ciąg dalszy",
          "Programowanie - przykładowy programik Liczenie największego wspólnego dzielnika",
          "Programowanie Jeszcze o uaktywnianiu makr I o „aktywnych klawiszach” w Excelu,",
          "Programowanie O „aktywnych klawiszach” w Excelu, Ciąg dalszy",
          "Programowanie - Działania na wielu arkuszach w skoroszycie i wielu skoroszytach",
          "Programowanie Zapisywanie plików i jeszcze o napisach. Szukanie kawałka napisu",
          "Programowanie Poprawianie błędów – analiza programu. Debugger",
          "Programowanie Wykresy – o ich kodzie VBA",
          "Programowanie Obsługa błędów instrukcji VBA – On Error i o skoku GoTo"
        ],
        "Zakończenie. Przykładowy program - mała gra zręcznościowa": [
          "Przykładowy program – gra cz. 1. Hasła – proste metody",
          "Przykładowy program – gra cz. 2 Hasło – własne rozwiązanie",
          "Przykładowy program – gra cz. 3 Zmienne globalne w grze",
          "Przykładowy program – gra cz. 4 Animacja obiektu – instrukcja „czasowa” Applica",
          "Przykładowy program – gra cz. 5 Gra z limitem czasu",
          "Zakończenie - podsumowanie"
        ]
      },
      "requirements": [
        "Elementarna znajomość Excela.",
        "Podstawowa umiejętność programowania jest mile widziana, ale nie jest konieczna. Zagadnienia programistyczne będą omówione od podstaw."
      ],
      "description": "Kurs uczy programowania w Visual Basic (VBA) zanurzonym w Excelu.  Visual Basic jest integralną częścią arkusza Excel – warto z niego korzystać. To naprawdę proste.\nKurs jest przeznaczony i dla początkujących programistów i dla tych, którzy już mają doświadczenie w programowaniu.\nŚrodowisko programistyczne tzw. IDE Visual Basic w Excelu jest bardzo proste i wdzięczne.  Programy tu pisane mogą operować na danych w arkuszach-skoroszytach. Można  też pisać programy, które wcale się do arkuszy excelowych nie odnoszą!  Wbudowany  debugger znacznie ułatwia poprawianie błędów i analizę naszego programu – pokażę jak z niego korzystać.\nZaletą programów w VBA w Excelu jest fakt, że w jednym pliku Excela  mamy zarówno program (działający) jak i dane do niego (parametry, bazy danych itd.). To świetne uniwersalne narzędzie do pisania prostych użytkowych programów.\nPokażę  też krok po kroku, jak skonstruowałem program – prostą  grę w Excelu. Analiza tego nieco dłuższego programu pozwala na przykładzie prześledzić sposób tworzenia działającego kodu..",
      "target_audience": [
        "Każdy kto chciałby nauczyć się programowania w Visual Basic w Excelu."
      ]
    },
    {
      "title": "Criando um Controle de Vendas Desktop com Java e MySQL",
      "url": "https://www.udemy.com/course/controle-de-vendas-java/",
      "bio": "Aprenda a criar um controle de vendas em Java Desktop",
      "objectives": [
        "Criar aplicações com conexão a banco de dados MYSQL com a linguagem java",
        "Entender na prática o padrão de Model, View, Controller na prática.",
        "Utilizar um WebService para preenchimento automático de Endereço",
        "Criar Sistema de Autenticação (Login) com Nível de Acesso (Ex. Usuário e Administrador)"
      ],
      "course_content": {
        "Introdução": [
          "Instalando as Ferramentas",
          "Explicação e criação do Banco de Dados",
          "Criando o Projeto e os Pacotes",
          "Explicação do Padrão Desenvolvimento- DAO"
        ],
        "Módulo Clientes": [
          "Criando a tela de Clientes",
          "Criando o Modelo de Clientes",
          "Criando a conexão com banco de dados",
          "Testando a Conexao com o banco de dados",
          "Criando o método Cadastrar Cliente na classe ClienteDAO",
          "Implementando o método Cadastrar Cliente",
          "Criando o método listarClientes na classe ClienteDAO",
          "Implementando o método listarClientes na tela de Clientes",
          "Criando os métodos Alterar e Excluir na classe ClienteDAO",
          "Implementando os métodos Alterar e Excluir na tela de Clientes",
          "Criando e Implementando o método BuscarPorNome na tela de Clientes",
          "Criando e Implementando o método LimparTela e método que retorna um Clientes",
          "Implementando o método que returna um Cliente na tela de Clientes",
          "Consulta e Preenchimento Automático de Endereços com WebServices"
        ],
        "Módulo Funcionários": [
          "Introdução ao Módulo Funcionário",
          "Criando a tela de Funcionários",
          "Criando o Modelo de Funcionários",
          "Criando o método Cadastrar Funcionário na classe FuncionarioDAO",
          "Implementando o método Cadastrar Funcionários",
          "Criando o método listarFuncionarios na classe FuncionariosDAO",
          "Implementando o método listarFuncionarios na tela de Funcionários",
          "Criando os métodos Alterar e Excluir na classe FuncionarioDAO",
          "Implementando os métodos Alterar e Excluir na tela de Funcionários",
          "Criando e Implementando os métodos consultaPorNome",
          "Criando a Tela de Login",
          "Criando e Implementando Login Simples",
          "Criando Menus e Submenus no FrmPrincipal e adicionando ícones",
          "Colocando Imagem de Fundo do FrmMenu com JDesktopPane",
          "Colocando nome do Usuário logado na barra de status"
        ],
        "Módulo Fornecedores": [
          "Criando a tela de Cadastro de Fornecedores",
          "Criando, Implementando a classe Modelo e o método Cadastrar na classe Fornecedor",
          "Criando os métodos Alterar e Excluir na classe FornecedoresDAO",
          "Criando os métodos ListarFornecedores, ListarFornecedoresPornome e ConsultaPorNo",
          "Implementando os métodos de Listagem, Alterar e Excluir na tela de Fornce."
        ],
        "Módulo Produtos": [
          "Criado a tela de Cadastro de Produtos",
          "Criando a classe Modelo de Produtos",
          "Listando os Fornecedores do Banco de dados no combobox na tela de Produtos",
          "Criando o método Cadastrar Produto na classe ProdutoDAO",
          "Implementando o método Cadastrar Produto na tela de Produtos",
          "Criando e Implementando o método ListarProdutos com InnerJoin",
          "Implementando o método Alterar Produtos na tela de Produtos",
          "Implementando o método Excluir Produtos na tela de Produtos",
          "Criando e Implementando o método Listar Produtos por Nome na tela de Produtos",
          "Criando e Implementando o método Consultar Produto por Nome na tela de Produtos"
        ],
        "Módulo Vendas": [
          "Criando a tela de Vendas",
          "Finalizando o layout da tela de Vendas",
          "Criando a Tela de Pagamentos",
          "Capturando a Data atual do sistema na tela de vendas",
          "Criando e implementando a busca de cliente e produtos na tela de Vendas",
          "Adicionando os produtos no carrinho de Compras",
          "Calculando o Troco da tela de Pagamentos",
          "Criando as classes Modelos de Vendas e ItensVenda",
          "Criando a classe VendasDAO com os Métodos CadastrarVenda e RetornaUltimaVenda",
          "Explicação da Regra de Négocio para registrar uma venda",
          "Cadastrando uma Venda no banco de dados",
          "Retornando o Id da ultima venda e enviando o carrinho para a tela de Pagamentos",
          "Criando a classe ItemVendaDAO e o método CadastrarItem",
          "Cadastrando os Items da tabela Item Vendas e Finalizando o Pagamento",
          "Criando os métodos BaixaEstoque e RetornaEstoqueAtual",
          "Implementando os métodos BaixaEstoque e RetornaEstoqueAtual na tela de Pagament",
          "Criando a tela de Histórico de Vendas",
          "Criando o método listarVendasPorPeriodo na classe VendasDAO",
          "Implementando o método listarVendasPorPeriodo na Tela de Historico",
          "Formatando a data da Venda com DateFormat na tela de Historico de Vendas",
          "Formatando a data da Venda com DateFormat na tela de Historico de Vendas",
          "Implementando a tela Detalhes de Venda com os dados da Venda",
          "Criando o método ListarItems de uma Venda na classe ItemVendaDAO",
          "Implementando o método ListarItems de uma Venda na tela Detalhes da Venda",
          "Implementando a tela Total de Vendas por data",
          "Implementando Nivel de Acesso na Tela de Login",
          "Implementando Trocar de Usuário e Sair do Sistema",
          "Abrindo as Telas a partir do Menu Principal",
          "Criando a tela de Controle de Estoque",
          "Implementando a tela de Controle de Estoque",
          "Criando o Executável do Projeto.avi"
        ]
      },
      "requirements": [
        "Lógica de Programação",
        "Conhecimento Básico em Programação Orientada a Objetos",
        "Conhecimento Básico com a Linguagem Java",
        "Conhecimento Básico em Banco de Dados e SQL"
      ],
      "description": "Olá aluno tudo bem? Espero que sim!\nEntão que tal aprender a desenvolver do zero um sistema desktop para controle de estoque, vendas com gerenciamento de funcionários, clientes, produtos, fornecedores, histórico de vendas, baixa em estoque e permissões de acesso e muito mais!\nAlém de aprender muita coisa legal, esse sistema é ótimo para que você possa utilizar em seu TCC da faculdade.\nNeste curso vamos utilizar a linguagem Java para desenvolvimento e o banco de dados MySQL.\nTodo o desenvolvimento segue os padrões da nossa querida e amada Programação Orientada a Objeto. Você também irá aprender a como utilizar na prática um WebService para consulta e preenchimento de endereço por CEP.\n\n\nPara quem é este curso:\n-> Este curso tem como publico alvo os programadores e entusiastas que já possuem conhecimentos básicos na linguagem java, sql e orientação a objetos.",
      "target_audience": [
        "Estudantes de cursos de computação e desenvolvimento de sistemas",
        "Profissionais que desejam adquirir conhecimento nas técnicas e ferramentas propostas no curso"
      ]
    },
    {
      "title": "Python3 の基礎 － 超入門・再入門 －",
      "url": "https://www.udemy.com/course/python3-t/",
      "bio": "省かず，端折らず，確実に基礎を学ぶPythonの学習コース．文法，インストール方法からモジュール作成まで一通り学べます．",
      "objectives": [
        "Python3の最も基礎的な内容（文法事項）の習得",
        "Python処理系，基本的なツールの扱い方の習得",
        "モジュールの取り扱い方法の習得（独自のモジュールの作成も含む）",
        "プログラミングに関する基本的な概念（制御構造，データ構造，Ｉ／Ｏ，オブジェクト指向プログラミング）を学ぶことができ，他の言語（Ｃ++，Ｊａｖａ）の学習をはじめるにあたっての基礎力も得られます．"
      ],
      "course_content": {},
      "requirements": [
        "中学校卒業以上の基礎学力",
        "パソコンの基本的な操作に関する知識と技能",
        "Excel の VBA や，JavaScript などによるスクリプティングの体験（忘れていても大丈夫です）",
        "あとは学習を継続できる「精神的な持久力」"
      ],
      "description": "このコースではPython3の最も基礎的な内容について学びます．\n特に，多くの書籍や教育コースでは指導・解説を省略する部分を徹底的に実習しながら身につけます．\nまた，Pythonの文を逐一入力して実行する形の実習を基本としているめ，Pythonの文法を明確に認識して確実に理解することができます．\n与えられたサンプルコードやノートブックなどをそのまま実行するだけでは得られない深さと明確さで，Pythonを理解できます．\n基礎的な内容にフォーカスする関係上，GUI構築やデータ処理，人工知能に関する内容は扱いません．ただし，以下のような基礎的な項目全般を，体験しながら確実に学んでいただきます．\n・データタイプとデータ構造\n・繰り返し／条件分岐の構文\n・端末入出力\n・ファイル入出力\n・関数定義\n・日付・時刻情報の取り扱い\n・正規表現の考え方\n・オブジェクト指向\n・分割プログラミング（モジュール作成）\nビデオ教材の再生時間の合計は11時間です．このコースの内容を学んだ後は，GUI構築，データ処理，人工知能関連の各種ライブラリを自力で取り扱い，現実的なレベルでアプリケーション構築に進むことができます．\n本コースでは実際のコーディングの画面を提示しますので，できるだけ大きなディスプレイで受講してください．（スマホなどの小さな画面は受講に適しておりません）\n本コースは大学や専門学校で実施する実習授業のスタイルに準じていますので，各レクチャーの時間がかなり長いです．各レクチャーの受講においては，適宜休憩を入れたり，複数の日に分割して受講するなど工夫して，精神的な負担にならないように心がけてください．\n【コース更新】2020年05月\n演習課題の要望をたくさんいただきましたので，各要所に演習問題のPDFを追加しました．\n生成AIがプログラムのソースコードを作る時代になってきましたが，生成AIと十分な対話をする上でもプログラミング言語の基礎知識を持っていることが前提となります．\n生成AIに十分な指示を与えるにも，あるいは生成AIの回答を十分に理解するにも，プログラミング言語の基礎知識が必須となりますので，どうぞ本コースで学んでくださいませ．",
      "target_audience": [
        "Pythonを使ってこれからプログラミングを学ぶ方",
        "Pythonに関する書籍や教育コースを購入したが，学びに挫折を経験した方",
        "人文科学系大学を卒業した方（あるいは在籍中の方）で，データ処理のためにPythonを学ぶ方（高校生でも情報処理関連分野を得意とする方は大丈夫です）"
      ]
    },
    {
      "title": "Learn JavaScript Programming In Hindi",
      "url": "https://www.udemy.com/course/learn-javascript-step-by-step-in-hindi/",
      "bio": "Learn Javascript Programming Language easily In Hindi. Every Topic is explained in simple way using हिन्दी language.",
      "objectives": [
        "Javascript Programming",
        "Fundamentals of Programming",
        "Problem Solving Skills",
        "How to think like a programmer"
      ],
      "course_content": {},
      "requirements": [
        "No Coding Knowledge Required",
        "Basic Computer Skills",
        "Little bit of HTML will be helpful"
      ],
      "description": "नमस्कार दोस्तों!\n\n\nजावास्क्रिप्ट(Javascript) वह भाषा है जिसे आधुनिक डेवलपर्स को जानना, और अच्छी तरह से जानना होगा। वास्तव में जावास्क्रिप्ट जानने से आपको नौकरी मिल जाएगी, और आप quality web application का निर्माण करने में सक्षम होंगे।\nइस पाठ्यक्रम में, आप जावास्क्रिप्ट के मूल सिद्धांतों को सीखेंगे, variables, constants, conditionals, loop, function जैसे बुनियादी निर्णय प्रोग्रामिंग अवधारणाओं को सीखेंगे। आप इस भाषा की सुंदरता और शक्ति को सीखेंगे जो आज आधुनिक सॉफ्टवेयर विकास में सबसे आगे है।\n\nप्रोग्रामिंग में 6 साल के अनुभव के साथ, मैं अपना ज्ञान आपके साथ साझा करता हूं। इस कोर्स में, मैं आपको निम्नलिखित अवधारणाएं सिखाऊंगा।\n1. Downloading Code Editor and Browser\n2. First line of code: Hello World\n3. Preferences\n4. Comments\n5. Variables\n6. Constant\n7. Variable\n8. Naming Rules\n9. Data Types\n10. String\n11. Arithmetic Operator\n12. Array\n13. Object Literal\n14. Array Of Object Literal\n15.If Else\n16. Comparison Operators (Part 1 + Part 2)\n17. Else If\n18. Logical Operator\n19. Switch\n20. For Loop\n21. While Loop\n22. For Of Loop\n23. Functions\n24. Return Type Functions\n25. Arrow Functions\nइस कोर्स में, हम 10 कोडिंग चालान भी हल करेंगे जो आपको अपने संदेह को दूर करने और अपनी सीख को लागू करने में मदद करेंगे।\nअगर आपके लिए यह सही कोर्स है तो \"Buy\" बटन पर क्लिक करके इस पाठ्यक्रम में शामिल होकर आज ही पाठ्यक्रम शुरू करें|",
      "target_audience": [
        "Anyone who wants to learn to code.",
        "Anyone who wants to learn Javascript.",
        "Anyone who want a carrier in software development.",
        "Beginners who want to clear their concepts."
      ]
    },
    {
      "title": "Oracle SQL, Sıfırdan İleri Düzeye, Programlama ve Referans",
      "url": "https://www.udemy.com/course/oracle-sql-sfrdan-ileri-duzeye-programlama-ve-referans/",
      "bio": "SQL Öğren, Veritabanlarına Hükmet. (Learn SQL, Manage All Databases)",
      "objectives": [
        "İlk dersten itibaren kod yazmaya başlayacaksınız.",
        "SQL Developer, Sqlplus, Sql*Plus8.0 araçlarını etkin kullanabileceksiniz.",
        "SEN (You) + SQL > SELECT Count(All DataBases) FROM DUAL; :-))",
        "Detaylarda boğulmadan doğrudan SQL'in içine gireceksiniz.",
        "Özgün bir şekilde yazmış olduğum ders notlarına (kitap formatında 160 sayfa pdf) sahip olacaksınız. (Turkçe& English)",
        "*** \"Öğrenciyim\", \"Yeni Mezunum\", \"Maddi Durumum İyi Değil\" diyorsanız bana mail yazınız. Gereği Yapılır ***",
        "Sql*Plus8.0 ile anlattıklarımı Sql*Plus ve Sql Developer ile de yapabilirsiniz."
      ],
      "course_content": {
        "Oracle Database 12c Nasıl Download Edilebilir?": [
          "Oracle Database 12c Nasıl Download Edilir?"
        ],
        "Oracle DB User (Create | Grant | Connect) (SQL Developer| Sqlplus|Sql*Plus 8.0)": [
          "Veri Tabanı Kullanıcısı (Creating, Granting a DB User)"
        ],
        "Oracle SQL Veri Tipleri ile Tanışalım (Meet SQL DataTypes)": [
          "Oracle SQL Veri Tipleri (SQL DataTypes)",
          "Çalışma Tabloları|Script Hazırlamak (Work Tables | Script Preparation)",
          "Script 2 (Run - (Start - @) )"
        ],
        "Verileri Filtrelemek | WHERE (Logical Filtering)": [
          "Mantıksal Filtreleme 1| WHERE (Logical Filtering 1)",
          "Mantıksal Filtreleme 2| WHERE (Logical Filtering 2)"
        ],
        "Çıktıları Formatlamak (Formating Outputs)": [
          "Çıktıları Formatlamak|(SQL*PLUS 8.0) (Formating Outputs)"
        ],
        "Küme Operatörleri (Set Operators)": [
          "UNION | UNION ALL | INTERSECT | MINUS"
        ],
        "Çıktıları Sıralamak | ORDER BY | (Sorting Query Results)": [
          "Çıktıları Sıralamak | ORDER BY - ASC - DESC | (Sorting Query Results)"
        ],
        "Sayısal (Matematiksel) Fonksiyonlar (Number (Math) Functions)": [
          "ABS | ACOS | CEIL | FLOOR | MOD | POWER| EXP",
          "LN | LOG | ROUND | TRUNC | SQRT",
          "Mat. Mantık ve Taban Aritmetiği |BITAND | (Math Logic+ Base Aritmetic Function)"
        ],
        "Karakter Fonksiyonlar (Character Functions)": [
          "UPPER | LOWER | INITCAP | LENGTH | SUBSTR | INSTR",
          "REPLACE | TRANSLATE",
          "LPAD | RPAD | RTRIM | LTRIM | TRIM | CONCAT"
        ],
        "Çift Karakterli Fonksiyonlar (Miscellaneous Functions)": [
          "Tanımları (Definitions)",
          "COALESCE | DECODE | GREATEST | LEAST | NVL | NVL2",
          "NULLIF | UID | USER | SYS_CONTEXT"
        ]
      },
      "requirements": [
        "Programlamaya sevdalı olmak SQL öğrenmek için gerek ve yeter şarttır. (Being passionate about programming is necessary and sufficient to learn SQL.)"
      ],
      "description": "*** \"Öğrenciyim\", \"Yeni Mezunum\", \"Maddi Durumum İyi Değil\" diyorsanız bana mail yazınız. Gereği Yapılır ***\n*\nBurada yayınladığım SQL ve PL/SQL derslerini bir dersaneye kayıt olarak almak istediğinizde 3500 -6000 TL arasında para ödemeniz gerekir.\nÜstelik o kurslarda burada öğrenecekleriniz kadar da öğrenemezsiniz.\n**\nYüzme öğrenmek için suya girmek lazım. Kenarında dolaşarak yüzme öğrenilmez. İşin özü bu aslında…\nDerslerimde çoğunlukla Oracle’ın demo tablolarını (EMP, DEPT…) kullandım. Çünkü Oracle Sertifika sınavlarında çoğunlukla bu tablolar üzerinden sorular sorulmaktadır.\nSQL veri tabanlarının ortak dilidir. “SQL bilirseniz yazılım dünyasında her şeyi biliyor olmazsınız” ama “SQL bilmiyorsanız yazılım dünyasında hiçbir şey bilmiyorsunuz” demektir.\n**\nYaşadığım tecrübeleri harmanlayıp “bir konu nasıl öğrenilmelidir” sosuyla da lezzet katarak sizlere sunuyorum. Dersleri gereksiz kodlamalarla şişirmedim. \"Vay be, helal olsun 20 saat ders hazırlamış hoca\" desinler diye bi SELECT'i 25 dakika ben de anlatabilirdim ama öyle yapmadım. Altı üstü bi SELECT arkadaş, gidecek bi tablodan iki satır bilgi getirecek, ne diye şişirip de arkamdan laf ettireceğim. Ne, ne kadar, nasıl anlatılması gerekiyorsa o kadar anlattım.\nYalın ve sade. Yani ne öğrenilmesi ve nasıl öğrenilmesi gerekiyorsa öyle anlattım. Bu ders SQL dersidir ve ben de SQL anlattım.\nDersime katılanlar 170 sayfa SQL Developer Guide ve Reference kitabımı da PDF olarak indirip kullanabilir. Dersi Türkçe anlattım ama kitapta tüm açıklamalar Türkçe ve İngilizcedir.\n**\nEğer SQL’in muhteşem dünyasında siz de yer almak istiyorsanız bence bu kursuma katılın…\n***\nDeğerli arkadaşlarım,\nMail aracılığıyla çokça soru gelmektedir. Bazı sorular gözümden kaçmakta ve cevap vermekte gecikmekteyim. O yüzden bir Face Grubu oluşturdum. Bu gruba üye olup sorularınızı buradan sorarsanız sizlere daha çabuk cevap verebilirim. Anlayışınıza teşekkür ederim.\nFacebook'da CELEBIHOCA grubuna bekliyorum tüm öğrencilerimi...",
      "target_audience": [
        "SQL öğrenmek isteyen herkes bu kursa katılabilir."
      ]
    },
    {
      "title": "JavaScript Funcional e Reativo - PENSE como um Dev JS",
      "url": "https://www.udemy.com/course/javascript-funcional/",
      "bio": "Aprenda a PENSAR como um programador JavaScript e DOMINE o paradigma FUNCIONAL e a programação REATIVA com RxJS!",
      "objectives": [
        "Criar códigos de forma funcional com a mentalidade correta",
        "Escrever código Javascript com a mentalidade de um programador Javascript",
        "Dominar o uso de funções em JavaScript",
        "Aprender os princípios do Paradigma Funcional com JavaScript",
        "Aprender a usar Callbacks, Promises, Async/Await",
        "Higher-Order Functions, First-Class Functions, Currying, Functors, Composição de Funções, Imutabilidade, Lambda Calculus...",
        "Programação reativa com RxJS! Observables, Operadores, Subject, Scheduler..."
      ],
      "course_content": {
        "Introdução": [
          "Introdução do Curso",
          "Boas Práticas do Suporte",
          "Paradigmas de Programação",
          "Declarativo vs Imperativo",
          "Paradigma Funcional",
          "Código da Próxima Aula",
          "Como o JavaScript Funciona?",
          "Repositório do Projeto",
          "Usando o terminal",
          "Terminais"
        ],
        "Funções": [
          "Introdução do Módulo",
          "Aviso importante aos usuários de Windows",
          "Configuração do Ambiente",
          "Alterando Nome Projeto",
          "Básico sobre Função #01",
          "Básico sobre Função #02",
          "Desafio #01",
          "Básico sobre Função #03",
          "Função Callback #01",
          "Função Callback #02",
          "Função Map #01",
          "Função Map #02",
          "Função Map #03",
          "Função Map #04",
          "Função Filter #01",
          "Função Filter #02",
          "Função Filter #03",
          "Função Reduce #01",
          "Função Reduce #02",
          "Desafio Map, Reduce e Filter",
          "Desafio Map, Reduce e Filter - Resposta",
          "Função Reduce #03",
          "Promise #01",
          "Promise #02",
          "Promise #03",
          "Desafio Promise",
          "Desafio Promise - Resposta",
          "Promise #04",
          "Promise #05",
          "Async/Await #01",
          "Async/Await #02",
          "OO #01",
          "OO #02",
          "OO #03",
          "Conclusão do Módulo"
        ],
        "Projeto #01 - Palavras Mais Usadas": [
          "Introdução do Módulo",
          "Explicando Projeto #01",
          "Legendas para Download",
          "Dica Nome das Aulas",
          "Lendo Arquivos do Diretório",
          "Usando Promise",
          "Filtrando Arquivos por Extensão",
          "Lendo Conteúdo dos Arquivos",
          "Separando Linhas",
          "Remover Linhas Vazias",
          "Remover Linhas com Tempos",
          "Remover Linhas com Números",
          "Refatoração #01",
          "Remover Símbolos",
          "Separando Palavras",
          "Agrupando Palavras #01",
          "Agrupando Palavras #02",
          "Ordenando Palavras",
          "Refatoração #02",
          "Conclusão do Módulo"
        ],
        "Princípios da Programação Funcional": [
          "Introdução do Módulo",
          "Função Pura #01",
          "Função Pura #02",
          "Função Pura #03",
          "Higher-Order Function",
          "First-Class Function",
          "Imutabilidade #01",
          "Imutabilidade #02",
          "Imutabilidade #03",
          "Closure",
          "Currying",
          "Curiosidade Sobre Currying",
          "Lazy Evaluation",
          "Composição de Funções #01",
          "Composição de Funções #02",
          "Composição de Funções #03",
          "Desafio Composição",
          "Desafio Composição - Resposta",
          "Functors",
          "FlatMap",
          "Conclusão do Módulo"
        ],
        "Programação Reativa com RxJS": [
          "Introdução do Módulo",
          "Padrão Observer #01",
          "Padrão Observer #02",
          "RxJS Observable",
          "Stream de Dados #01",
          "Stream de Dados #02",
          "Instalação do RxJS",
          "Stream de Dados #03",
          "Observable #01",
          "Observable #02",
          "Desafio Observable",
          "Desafio Observable - Resposta",
          "Documentação do RxJS",
          "Comunicação Pull vs Push",
          "Operadores #01",
          "Operadores #02",
          "Scheduler",
          "Operadores #03",
          "Operadores #04",
          "Desafio Operadores #01 - Resposta",
          "Desafio Operadores #02",
          "Desafio Operadores #02 - Resposta",
          "Desafio Operadores #03",
          "Desafio Operadores #03 - Resposta #01",
          "Desafio Operadores #03 - Resposta #02",
          "Desafio Operadores #03 - Resposta #03",
          "Observable vs Subject",
          "Desafio Subscription",
          "Desafio Subscription - Resposta",
          "Conclusão do Módulo"
        ],
        "Projeto #02 - Migrando Código para RxJS": [
          "Introdução do Módulo",
          "Ler Diretório",
          "Filtrando Arquivos por Extensão",
          "Ler Arquivo",
          "Separando Linhas",
          "Remover Linhas Vazias",
          "Remover Linhas com Números",
          "Remover Símbolos",
          "Agrupando Palavras #01",
          "Ordenando Palavras",
          "Operador MergeMap",
          "Agrupando Palavras #02",
          "Conclusão do Módulo"
        ],
        "Lambda Calculus": [
          "Introdução do Módulo",
          "História e Características do Lambda Calculus",
          "Sintaxe Lambda Calculus #01",
          "β-Reduction",
          "Sintaxe Lambda Calculus #02",
          "Dica Plugin VSCode - Quokka",
          "Primeiras Funções",
          "Função Troca (FLIP)",
          "Funções Verdadeiro e Falso",
          "Função Negação Lógica (NOT)",
          "Função E Lógico (AND)",
          "Função OU Lógico (OR)",
          "Desafio Função Igualdade Lógica",
          "Desafio Função Igualdade Lógica - Resposta",
          "Função OU Exclusivo (XOR)",
          "Organizando Exemplos",
          "Conclusão do Módulo"
        ],
        "Conclusão": [
          "Conclusão do Curso",
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Conhecer o básico de JavaScript"
      ],
      "description": "Seja bem vindo ao curso de JavaScript Funcional e Reativo! Neste curso você aprenderá a pensar como um programador JavaScript, mas para que isso aconteça é ESSENCIAL que você domine o uso de funções e conheça o paradigma funcional!\nFoi pensando nisso que eu criei um curso COMPLETAMENTE focado no PARADIGMA FUNCIONAL e PROGRAMAÇÃO REATIVA pra que você possa aprender um dos principais paradigmas da atualidade e que se torna cada dia mais relevante.\nNos últimos anos várias linguagens acrescentaram aspectos de Programação Funcional, então esse curso é um oportunidade de aprender o Paradigma Funcional e ainda tornar um programador JavaScript muito melhor! Por esse motivo, compreender o paradigma funcional é importante mesmo que você use linguagens Orientadas a Objeto, e garantido que você se tornará um programador melhor e mais completo!\nDentre vários assuntos abordados, abaixo seguem os principais temas trabalhados no curso:\nO básico sobre Funções\nFunções Callback\nPromises\nAsync/Await\nMap/Reduce/Filter\nComposição de Funções\nFunções Puras\nHigher-Order Functions\nFirst-Class Functions\nImutabilidade\nClosure\nCurrying\nLazy Evaluation\nFunctors\nFlatMap\nProgramação Reativa\nRxJS\nStream de Dados\nObservables\nOperadores do RxJS\nScheduler\nSubject\nEste curso te levará ao um outro nível como programador, então vamos estudar juntos?\nEste curso ainda conta com um time de suporte preparado a responder todas as suas dúvidas relativas a ele. E se vocÊ não ficar satisfeito com até 30 dias após a compra do curso você pode pedir o seu dinheiro de volta. Satisfação Garantida.\nTe vejo nas aulas!\nEquipe Cod3r",
      "target_audience": [
        "Desenvolvedores que desejam dominar o Paradigma Funcional em JavaScript",
        "Desenvolvedores que desejam dominar o uso de funções em JavaScript",
        "Desenvolvedores que desejam aprender Programação Reativa com RxJS"
      ]
    },
    {
      "title": "Programación en C de Cero a Experto con Estructuras de Datos",
      "url": "https://www.udemy.com/course/programacion_en_c_desde_cero_a_experto/",
      "bio": "Lenguaje C con Algoritmos, Estructuras de Datos como Listas, Pilas, Colas. Arboles, Grafos Manejo de Archivos.",
      "objectives": [
        "Elementos Básicos",
        "Operaciones y Expresiones",
        "Estructuras de Selección",
        "Estructuras de Control con Bucles",
        "La libreria string.h",
        "Funciones",
        "Arreglos con Listas y Tablas",
        "Estructuras",
        "Apuntadores",
        "Manejo de Archivos",
        "Cadenas",
        "Headers",
        "Proyecto (Contabilizar gastos)",
        "Memoria Estática vs Memoria Dinámica",
        "Asignación Dinámica de memoria",
        "Algoritmos de Ordenamiento",
        "Algoritmos de Búsqueda",
        "CLion",
        "Refuerzo Antes de Estructura de datos",
        "Introducción a las Estructuras de datos",
        "Estructuras de datos Dinámicas Lineales",
        "Implementación de la Pila (usando Arreglos)",
        "Implementación de la Cola (usando Arreglos)",
        "Teoría de Listas",
        "Lista Simplemente Enlazada",
        "Repaso Listas Ligadas",
        "Lista Ligada Simplemente Enlazada",
        "Lista Ligada Circular",
        "Lista Ligada Doble",
        "Lista Ligada Circular Doble",
        "Pilas",
        "Colas",
        "Arboles",
        "Grafos",
        "Libros recomendados para fortalecer lo aprendido",
        "Curso Gratis"
      ],
      "course_content": {
        "Introducción": [
          "Importante",
          "Antes de Empezar el Curso",
          "¿Cómo Calificar el Curso?",
          "Introducción al Lenguaje C"
        ],
        "Elementos Básicos": [
          "Descargar Dev C++ o CodeBlocks",
          "Estructura General de un Programa",
          "Introducción a los tipos de Datos en la computación parte 1",
          "Introducción a los tipos de Datos en la computación parte 2",
          "Introducción a los tipos de Datos en la computación parte 3",
          "Directivas del Pre Procesador y Variables",
          "Tipos de Datos en C",
          "Entradas y Salidas",
          "Elementos Básicos"
        ],
        "Operaciones y Expresiones": [
          "Operadores Básicos",
          "Operador de Asignación",
          "Variables Locales y Variables Globales",
          "Examen de la Sección Operadores y Expresiones"
        ],
        "Ejercicios Operadores y Expresiones": [
          "Operaciones Aritméticas",
          "Área de Figuras en C",
          "Aumento de Salario",
          "Conversión de Años",
          "Área de un Trapecio",
          "Calcular Salario",
          "Calificaciones Alumno",
          "Conversión a Segundos",
          "Conversión Grados Celsius a Fahrenheit",
          "Descuento Tienda",
          "Longitud de Circunferencia",
          "Media Aritmética",
          "Nuevo Salario",
          "Hacer Operaciones con Números",
          "Calcular Hipotenusa con 2 Catetos"
        ],
        "Estructuras de Selección": [
          "Sentencia IF",
          "Sentencia IF - ELSE",
          "Sentencia SWITCH",
          "Operador \"?\" INTERROGACIÓN",
          "PostIncrementar o Preincrementar",
          "Estructuras de Selección"
        ],
        "Ejercicios Estructuras de Selección": [
          "Pasar de Año",
          "Saldos de Celulares",
          "Menor de Dos Números",
          "Calificaciones Alumno",
          "Números Enteros a Números Romanos",
          "Proyecto Tienda",
          "Alumno Calificaciones Aprobar",
          "Aries",
          "Borrar Pantalla",
          "Cajero Automático",
          "Examen Calificación",
          "Fin Año",
          "Mayor de Dos Números",
          "Meses del Año",
          "Conversión de Números Enteros a Romanos",
          "Número Par o Número Impar",
          "Número Positivo o Número Negativo",
          "Precio VehÍculo",
          "Programa Menú",
          "Raíz Cuadrada",
          "Sexos",
          "Tarifa de Luz"
        ],
        "Estructuras de Control con Bucles": [
          "WHILE",
          "Bucle FOR",
          "Do -While",
          "Break & Continue",
          "Estructuras de Control y Bucles"
        ],
        "Ejercicios Estructuras de Control - Bucles": [
          "Suma de Números",
          "Múltiplos de 5",
          "Suma Positivo/Negativo",
          "Números Primos",
          "Suma de Números Pares",
          "Letras del Alfabeto",
          "Factorial de un Número",
          "Hacer Árbol de Asteriscos",
          "Escribir Abecedario y Uso de ASCII",
          "Multiplos de Números",
          "Números Primos",
          "Uso de If",
          "Serie de Fibonacci",
          "Suma de Factoriales",
          "Suma de N Números",
          "Suma de N Números Pares",
          "Suma Impares Resta Pares",
          "Suma Pares e Impares de N hasta M"
        ],
        "La Biblioteca String.h": [
          "Strcpy",
          "Strcat",
          "Strcmp",
          "Strlen",
          "Strlwr",
          "Strupr",
          "Strrchr",
          "Strrev",
          "Extra ¿Cuántas Veces Aparece una Palabra en un Archivo?",
          "Biblioteca String.h"
        ],
        "Funciones": [
          "Funciones sin Retorno de Valor",
          "Funciones con Retorno de Valor",
          "Funciones Matemáticas",
          "Funciones Trigonométricas",
          "Función Aleatoria",
          "Funciones Recursivas",
          "Función Recursiva Segundo Ejemplo",
          "Si no Entendiste Recursividad",
          "Cuestionario Funciones"
        ]
      },
      "requirements": [
        "Contar con una computadora de cualquier sistema operativo, de preferencia Linux, Mac OS o Windows",
        "No se requieren conocimientos previos de programación",
        "Tener muchas ganas de aprender"
      ],
      "description": "Si lo que te interesa es practicar con ejercicios estas en el lugar correcto. Al pasar a los ejercicios aprenderemos buenas practicas y tips para programar de una manera mas eficiente que te servirán para cualquier lenguaje de programación posterior con la ayuda de Visual Studio Code Y CLion.\n¿Qué es C?\nC es el lenguaje de programación de propósito general asociado, de modo universal, al sistema operativo UNIX. Sin embargo, la popularidad, eficacia y potencia de C, se ha producido porque este lenguaje no está prácticamente asociado a ningún sistema operativo, ni a ninguna máquina, en especial. Ésta es la razón fundamental, por la cual C, es conocido como el lenguaje de programación de sistemas, por excelencia.\nVentajas de C:\nEl lenguaje C es poderoso y flexible, con órdenes, operaciones y funciones de biblioteca que se pueden utilizar para escribir la mayoría de los programas que corren en la computadora.\nC se utiliza por programadores profesionales para desarrollar software en la mayoría de los modernos sistemas de computadora.\nSe puede utilizar C para desarrollar sistemas operativos, compiladores, sistemas de tiempo real y aplicaciones de comunicaciones.\nUn programa C puede ser escrito para un tipo de computadora y trasladarse a otra computadora con pocas o ninguna modificación\n\n\nEn este curso Aprenderás:\nElementos Básicos\nOperaciones y Expresiones\nEstructuras de Selección\nEstructuras de Control con Bucles\nLa librería String.h\nFunciones\nArreglos con Listas y Tablas\nEstructuras\nApuntadores\nManejo de Archivos\nCadenas\nHeaders\nProyecto (Contabilizar gastos)\nMemoria Estática vs Memoria Dinámica\nAsignación Dinámica de memoria\nAlgoritmos de Ordenamiento\nAlgoritmos de Búsqueda\nCLion\nRefuerzo Antes de Estructura de datos\nIntroducción a las Estructuras de datos\nEstructuras de datos dinámicas Lineales\nImplementación de la Pila (usando Arreglos)\nImplementación de la Cola (usando Arreglos)\nTeoría de Listas\nRepaso Listas Ligadas\nLista Simplemente Enlazada\nLista Ligada Simplemente Enlazada\nLista Ligada Circular\nLista Ligada Doble\nLista Ligada Circular Doble\nPilas\nColas\nArboles\nGrafos\nLibros recomendados para fortalecer lo Aprendido",
      "target_audience": [
        "Estudiantes de Ingenieria",
        "Aficionados por la programación"
      ]
    },
    {
      "title": "Kompletny kurs programowanie w JavaScript [2025] Od A do Z",
      "url": "https://www.udemy.com/course/kurs-programowanie-w-javascript/",
      "bio": "Kurs który zrobi z Ciebie programistę JavaScript. Od podstaw do eksperta!. Mnóstwo projektów + OOP + asynchroniczność.",
      "objectives": [
        "Znajomość JavaScript w stopniu zaawansowanym",
        "Umiejętność programowania proceduralnego w JavaScript",
        "Umiejętność programowania zorientowanego obiektowo (Object-Oriented Programming)",
        "Mocny fundament do rozpoczęcia nauki bibliotek/frameworków JavaScript (np. React, Angular, Vue) czy programowania po stronie serwera (Node)",
        "Programowanie asynchroniczne",
        "Rozwiązywanie problemów porgramistycznych",
        "Najważniejsze koncepcje i mechanizmy programistyczne w JavaScript"
      ],
      "course_content": {
        "Wstęp": [
          "Powitanie w kursie",
          "Jak zostać dobrym programistą",
          "O kursie i jak będziesz się uczyć",
          "Perspektywy dla programisty JavaScript",
          "Wielka aktualizacja!",
          "Dyskusje na discord",
          "Wprowadzenie do programowania",
          "Kurs jako krok w projekcie \"Od podstaw do pierwszej pracy front-end developera\"",
          "Wprowadzenie do JavaScript",
          "Przygotowanie środowiska pracy - edytor kodu Visual Studio Code, rozszerzenia",
          "Konfiguracja Visual Studio Code do pracy w JS - formatowanie kodu",
          "Korzystanie z konsoli w przeglądarce"
        ],
        "Teoria JavaScript": [
          "Wstęp: dodawanie pliku JS do HTML, instrukcje, komentarze, podstawy składni JS",
          "Typy danych – proste i typ referencyjny (obiekt)",
          "Zmienne - definicja, deklaracja, przypisanie wartości, const, let i var",
          "Operatory - czym są i jak działają. Operatory algorytmiczne i logiczne.",
          "Literały oraz właściwości i metody typów prostych",
          "Zadania do zrobienia - zmienne",
          "Aktualizacja - Moduły, Node.js + co nowego w typach i operatorach + test",
          "Vademecum o typie number",
          "Vademecum o typie string",
          "Vademecum o typie boolean",
          "Instrukcja warunkowa - cz. 1: if",
          "Instrukcja warunkowa - cz. 2: switch i operator warunkowy (trójargumentowy)",
          "Aktualizacja - string, number, boolean",
          "Wprowadzenie do tablic [Array]",
          "Metody wykonywane na tablicach - cz. 1: push, unshift, pop, shift, concat",
          "Metody na tablicach cz. 2: slice, splice, sort, indexOf, includes, join, reverse",
          "Zadania do zrobienia - instrukcje warunkowe i tablice",
          "Pętle - cz. 1: for, while i do... while",
          "Pętle - cz. 2: pętla w pętli, pętla na tablicy i pętla for... of (ES6)",
          "Zadania do zrobienia - pętle",
          "Funkcje - cz. 1: definicja, tworzenie, wywoływanie, zwracanie wartości z funkcji",
          "Funkcje - cz. 2: wartości domyślne w funkcji, callback, obiekt arguments",
          "Funkcje - cz. 3: operator res i różnice między metodami a funkcjami",
          "Zadania do zrobienia - funkcje",
          "Hoisting",
          "Zakres (scope) - cz. 1: wprowadzenie, zakres globalny",
          "Zakres (scope) - cz. 2: zakres lokalny (funkcja)",
          "Zakres (scope) - cz. 3: zakres lokalny (blok)",
          "Wprowadzenie do obiektów w JavaScript",
          "Literał szablonu (template string)",
          "Document Object Model (DOM) - cz. 1: pobieranie elementów",
          "DOM - cz. 2: modyfikacja elementów",
          "DOM - cz. 3: zdarzenia i akcje; nasłuchiwanie",
          "Obiekt window i obiekt document",
          "Aktualizacja - metoda .at i nowe wersje ECMAScript"
        ],
        "Programuj (koduj) ładnie i zgodnie z konwencjami!": [
          "Konfiguracja projektu i ESLint",
          "Prettier - coś więcej niż ładne formatowanie"
        ],
        "Projekt 1: Dodawanie elementów po kliknięciu": [
          "Zadanie 1a: ponumerowane kwadraty dodawane po kliknięciu przycisku",
          "Zadanie 1b: kwadraty dodawane po kliknięciu przycisku - co piąty div okręgiem",
          "Zadanie 2 - dla Ciebie: dodawanie elementów listy przyciskiem"
        ],
        "Projekt 2: zmiana wielkości elementu przy skrolowaniu strony": [
          "Zadanie 1: kwadrat zmieniający rozmiar przy skrolowaniu strony",
          "Zadanie 2 - dla Ciebie: pasek zmieniający grubość i kolor przy skrolowaniu"
        ],
        "Projekt 3: Trening pętli for i metody forEach": [
          "Zadanie 1: pojawienie się elementu i powiększanie go przez kliknięcie przycisku",
          "Zadanie 1 - rozwiązanie",
          "Zadanie 2: tworzenie listy i dodawanie kolejnych elementów przez kliknięcie",
          "Zadanie 2 - rozwiązanie"
        ],
        "Projekt 4: Wykrywanie i obsługa eventów": [
          "Zadanie 1a: wykrycie i wyświetlenie pozycji myszki",
          "Zadanie 1b: zmiana koloru tła przy ruchu myszką",
          "Zadanie 1c: optymalizacja projektu",
          "Zadanie 2 - dla Ciebie: zmiana koloru tła przy kliknięciu zależnie od pozycji",
          "Zadanie 2 - rozwiązanie",
          "Zadanie 3: łapanie i upuszczanie kwadratu ze zmianą jego koloru",
          "Zadanie 4 - dla Ciebie: rozjaśnianie i przyciemnianie tła przy pomocy klawiszy",
          "Zadanie 4 - rozwiązanie"
        ],
        "Projekt 5: Password - Message": [
          "Zadanie 1 - Podaj hasło odkryj wiadomość - wersja 1",
          "Zadanie 1 - funkcja strzałkowa i this",
          "Zadanie 1 - wiele haseł i wiadomości - wersja 2 projektu",
          "Zadanie dla Ciebie - wprowadzenie",
          "Zadanie dla Ciebie - rozwiązanie - możliwość 1",
          "Metoda forEach do zmiany tablicy - rozwiązanie 2",
          "Metoda map (nowa tablica) i pętla for do sprawdzenia warunku - rozwiązanie 3"
        ],
        "Projekt 6: losowanie": [
          "Zadanie 1: losowanie imienia dla dziecka",
          "Zadanie 2: generator kodów",
          "Zadanie 3: dodawanie elementu do tablicy",
          "Zadanie 4 - dla Ciebie: losowa rada od komputera",
          "Zadanie 4 - rozwiązanie",
          "Bonus: losowanie liczby z dowolnego przedziału"
        ],
        "Projekt 7: gra papier kamień nożyczki": [
          "Cz. 1 - wprowadzenie",
          "Cz. 2 - wybór gracza",
          "Cz. 3 - wybór komputera (AI)",
          "Cz. 4 - określenie strony wygranej",
          "Cz. 5 - publikacja wyniku gry",
          "Cz. 6 - reset wyboru gracza i podsumowanie projektu"
        ]
      },
      "requirements": [
        "Znajomość HTML i CSS w stopniu podstawowym"
      ],
      "description": "Ten kurs to prawdziwy olbrzym! Biorąc w nim udział nie tylko poznasz JavaScript, ale przede wszystkim nauczysz się programować. Ileż to jest kursów, które oferują Ci przegląd podstaw, ale tak naprawdę nie dają Ci żadnych umiejętności. Ten kurs nie jest taki! Ten kurs da Ci potężne umiejętności. Ten kurs pozwoli Ci w przyszłości stać się prawdziwym JavaScript Developerem i sprawi, że późniejsze wejście w świat takich technologii jak React, Vue, Svelte, Angular czy Node.js będzie samą przyjemnością. Ten kurs otworzy przed Tobą oceany możliwości.\n\n\nW tym kursie będziemy pracować z JavaScript zgodnym z najnowszymi standardami. Poznasz JavaScript w jego obecnej formie oraz przygotujesz się na przyszłość, która nadejdzie.\nKurs rozpoczyna się częścią teoretyczną, w której poznasz podstawy niezbędne do zrozumienia języka JavaScript i swobodnego korzystania z niego. Jest to idealne miejsce dla osób początkujących, jak i tych, którzy mieli kiedyś kontakt z programowaniem, ale potrzebują odświeżenia wiedzy. W tej części omówię kluczowe zagadnienia, takie jak typy danych, zmienne, instrukcje warunkowe, funkcje, tablice, obiekty, zakresy, operatory, hoisting, pętle, scope, closure oraz pracę z DOM. Jeśli masz już podstawową wiedzę z JavaScript, będzie to okazja do jej usystematyzowania. Dla osób zaczynających od zera przygotowałem dokładne i przystępne wyjaśnienia, a kluczowe tematy przedstawiam na kilka sposobów, aby jak najlepiej je zrozumieć.\n\n\nPo zakończeniu części teoretycznej przejdziemy do praktyki. W trakcie kursu zrealizujemy kilkadziesiąt projektów, które pomogą Ci utrwalić wiedzę i nabrać wprawy w programowaniu. Stworzymy między innymi zegar z funkcją czasomierza i odliczania, baner sterowany klikiem i klawiszami, proste gry takie jak papier-nożyce-kamień czy jednoręki bandyta, a także listę zadań z możliwością dodawania i przeszukiwania. A to oczywiście nie wszystko. Spójrz na spis treści kursi i zobacz jakie projekty stworzymy!\n\n\nW trzeciej części kursu zajmiemy się programowaniem zorientowanym obiektowo (Object-Oriented Programming). Jest to technika odmienna od proceduralnego podejścia, które poznasz wcześniej, ale kluczowa, jeśli chcesz tworzyć większe, bardziej zaawansowane projekty. Wyjaśnię Ci teorię OOP, a następnie wspólnie zrealizujemy praktyczny projekt, który pokaże, jak stosować tę technikę w realnych aplikacjach. Chociaż OOP może wydawać się trudne, zobaczysz, że jest to niesamowite narzędzie pozwalające budować rozbudowane oprogramowanie.\n\n\nKurs jest kompletną całością, która nie wymaga wcześniejszej nauki. Jednak jeśli dążysz do zostania front-end developerem, ten kurs to trzeci etap w projekcie \"Od podstaw do front-end developer\". W poprzednich etapach zajmowaliśmy się tworzeniem stron internetowych, więc jeśli chcesz dowiedzieć się więcej, zajrzyj na stronę Websamuraj.\n\nUkończenie tego kursu zajmie Ci trochę czasu, ale efekty są tego warte. Po przerobieniu wszystkich materiałów zdobędziesz wiedzę i umiejętności, które uczynią Cię prawdziwym magikiem kodu. Jeśli chcesz nauczyć się JavaScript od podstaw do poziomu eksperta, ten kurs jest dla Ciebie. Nawet jeśli masz już doświadczenie w JavaScript i chcesz uzupełnić swoją wiedzę, znajdziesz tutaj odpowiednie materiały. Zapraszam Cię do wspólnej nauki – razem odkryjemy pełnię możliwości JavaScript!",
      "target_audience": [
        "Dla osób, które chcą świetnie poznać JavaScript.",
        "Dla osób, które chcą programować na wysokim poziomie.",
        "Dla osób, które CSS/HTML znają z innych źródeł, a chcą nauczyć się JavaScript a w przyszłości frameworków jak React, Vue, Svelte",
        "Dla osób, które chcą zostań w przyszłości fullstack developerami albo backend developerami.",
        "Dla osób, które znają podstawy JavaScript, ale chcą rozwinąć umiejętności programowania i pogłębić swoją wiedzę w tym języku."
      ]
    },
    {
      "title": "Pemrograman Java : Pemula sampai Mahir",
      "url": "https://www.udemy.com/course/pemrograman-java-pemula-sampai-mahir/",
      "bio": "Belajar pemrograman Java dari pemula sampai mahir disertai studi kasus. Materi akan selalu di-update secara berkala",
      "objectives": [
        "Java Dasar",
        "Java Object Oriented Programming",
        "Java Database",
        "Java MySQL",
        "Java Collection",
        "Java Stream",
        "Java Lambda",
        "Java Internationalization",
        "Java Date & Time API",
        "Apache Maven",
        "Java Unit Test",
        "Java Logging",
        "Java Lombok",
        "Java Multi Thread & Concurrency",
        "Java Validation",
        "Java Reflection",
        "Java Web",
        "Java Servlet",
        "Java Persistence API",
        "Java Sequenced Collection"
      ],
      "course_content": {
        "Java Dasar": [
          "Pendahuluan",
          "Discord Group",
          "Pengenalan Java",
          "Menginstall Java",
          "Program Hello World",
          "Tipe Data Number",
          "Tipe Data Character",
          "Tipe Data Boolean",
          "Tipe Data String",
          "Variable",
          "Tipe data Bukan Primitif",
          "Tipe Data Array",
          "Operasi Matematika",
          "Operasi Perbandingan",
          "Operasi Boolean",
          "Expression, Statement dan Block",
          "If Statement",
          "Switch Statement",
          "Ternary Operator",
          "For Loop",
          "While Loop",
          "Do While Loop",
          "Break dan Continue",
          "For Each",
          "Method",
          "Method Parameter",
          "Method Return Value",
          "Method Variable Argument",
          "Method Overloading",
          "Recursive Method",
          "Scope",
          "Komentar",
          "Materi Selanjutnya"
        ],
        "Studi Kasus Java Dasar : Aplikasi Todolist": [
          "Pendahuluan",
          "Prototype Aplikasi Todolist",
          "Membuat Project",
          "Membuat Main Class",
          "Membuat Model",
          "Menentukan Business Logic",
          "Menentukan View",
          "Menampilkan Todolist",
          "Test Menampilkan Todolist",
          "Menambah Todolist",
          "Test Menambah Todolist",
          "Menghapus Todolist",
          "Test menghapus Todolist",
          "Input Data",
          "View Menampilkan Todolist",
          "Test View Menampilkan Todolist",
          "View Menambah Todolist",
          "Test View Menambah Todolist",
          "View Menghapus Todolist",
          "Test View Menghapus Todolist",
          "Test Seluruh Aplikasi",
          "Materi Selanjutnya"
        ],
        "Java Object Oriented Programming": [
          "Pendahuluan",
          "Pengenalan Object Oriented Programming",
          "Class",
          "Object",
          "Field",
          "Method",
          "Constructor",
          "Constructor Overloading",
          "Variable Shadowing",
          "this Keyword",
          "Inheritance",
          "Method Overriding",
          "super Keyword",
          "Super Constructor",
          "Object Class",
          "Polymorphism",
          "Type Check dan Casts",
          "Variable Hiding",
          "Package",
          "Access Modifier",
          "Import",
          "Abstract Class",
          "Abstract Method",
          "Getter dan Setter",
          "Interface",
          "Interface Inheritance",
          "Default Method",
          "toString() Method",
          "equals() Method",
          "hashCode() Method",
          "Final Class",
          "Final Method",
          "Inner Class",
          "Anonymous Class",
          "static Keyword",
          "Record Class",
          "Enum Class",
          "Exception",
          "Runtime Exception",
          "Error",
          "StackTraceElement Class",
          "Try with Resource",
          "Annotation",
          "Reflection",
          "Materi Selanjutnya"
        ],
        "Java Standard Classes": [
          "Pendahuluan",
          "String Class",
          "StringBuffer dan StringBuilder Class",
          "StringJoiner Class",
          "StringTokenizer Class",
          "Number Class",
          "Math Class",
          "BigNumber Class",
          "Scanner Class",
          "Date dan Calendar Class",
          "System Class",
          "Runtime Class",
          "UUID Class",
          "Base64 Class",
          "Objects Class",
          "Random Class",
          "Properties Class",
          "Arrays Class",
          "Regular Expression",
          "Materi Selanjutnya"
        ],
        "Studi Kasus Java OOP : Aplikasi Todolist": [
          "Pendahuluan",
          "Clean Architecture",
          "Membuat Entity",
          "Membuat Repository",
          "Membuat Service",
          "Repository & Service : Menampilkan Todolist",
          "Test Repository & Service : Menampilkan Todolist",
          "Repository & Service : Menambah Todolist",
          "Test Repository & Service : Menambah Todolist",
          "Repository & Service : Menghapus Todolist",
          "Test Repository & Service : Menghapus Todolist",
          "View : Menampilkan Todolist",
          "Test View : Menampilkan Todolist",
          "View : Menambah Todolist",
          "Test View : Menambah Todolist",
          "View : Menghapus Todolist",
          "Test View : Menghapus Todolist",
          "Test : Seluruh Aplikasi",
          "Materi Selanjutnya"
        ],
        "Java Generic": [
          "Pendahuluan",
          "Pengenalan Generic",
          "Generic Class",
          "Generic Method",
          "Invariant",
          "Covariant",
          "Contravariant",
          "Bounded Type Parameter",
          "Wildcard",
          "Type Erasure",
          "Comparable Interface",
          "Comparator Interface",
          "Materi Selanjutnya"
        ],
        "Java Collection": [
          "Pendahuluan",
          "Pengenalan Collection",
          "Iterable dan Iterator",
          "Collection",
          "List",
          "Immutable List",
          "Set",
          "Immutable Set",
          "SortedSet",
          "NavigableSet",
          "Queue",
          "Deque",
          "Map",
          "Immutable Map",
          "SortedMap",
          "NavigableMap",
          "Entry Map",
          "Legacy Collection",
          "Sorting",
          "Binary Search",
          "Collections Class",
          "Abstract Collection",
          "Default Method",
          "Spliterator",
          "Konversi ke Array",
          "Materi Selanjutnya"
        ],
        "Java Lambda": [
          "Pendahuluan",
          "Pengenalan Lambda",
          "Membuat Lambda",
          "Package java.util.function",
          "Method Reference",
          "Lambda di Collection",
          "Lambda Sebagai Lazy Parameter",
          "Lambda di Optional Class",
          "Materi Selanjutnya"
        ],
        "Apache Maven": [
          "Pendahuluan",
          "Pengenalan Build Automation",
          "Menginstall Apache Maven",
          "Membuat Project",
          "Struktur Project",
          "Maven Lifecycle",
          "Build Project",
          "Dependency",
          "Maven Properties",
          "Membuat Distribution File",
          "Multi Module Project",
          "Dependency Management",
          "Materi Selanjutnya"
        ],
        "Java Unit Test": [
          "Pendahuluan",
          "Pengenalan Software Testing",
          "Pengenalan JUnit",
          "Membuat Test",
          "Menggunakan Assertions",
          "Mengubah Nama Test",
          "Menonaktifkan Test",
          "Sebelum dan Setelah Test",
          "Membatalkan Test",
          "Menggunakan Assumptions",
          "Test Berdasarkan Kondisi",
          "Menggunakan Tag",
          "Urutan Eksekusi Test",
          "Siklus Hidup Test",
          "Test di dalam Test",
          "Informasi Test",
          "Dependency Injection di Test",
          "Pewarisan di Test",
          "Test Berulang",
          "Test dengan Parameter",
          "Timeout di Test",
          "Eksekusi Test Secara Parallel",
          "Pengenalan Mocking",
          "Mocking di Test",
          "Verifikasi di Mocking",
          "Materi Selanjutnya"
        ]
      },
      "requirements": [
        "Dapat Mengoperasikan Komputer"
      ],
      "description": "Selamat datang di course Pemrograman Java dari Pemula sampai Mahir. Disini kita akan belajar Pemrograman Java dari tingkat dasar sampai tingkat mahir, disertai dengan studi kasus. Akan banyak materi yang akan dibahas di course ini seperti :\nJava Dasar, membahas dasar-dasar pemrograman Java, membahas tipe data, percabagan, perulangan, membuat function, parameter dan lain-lain\nJava Object Oriented Programming, membahas pemrograman berorientasi object di Java, membahas cara membuat class, membuat object, membuat interface, melakukan pewarisan dan polimorfisme, error handling, cara menangkap error, dan lain-lain\nJava Standard Classes, membahas class-class yang menjadi standard library di Java, membahas class String, Date, Calendar, dan class-class lainnya\nJava Generic, membahas tentang generic programming di Java. Membahas cara membuat generic class, membuat generic method, dan lain-lain\nJava Collection, membahas struktur data dan collection di Java. Membuat struktur data List, Set, Map, Queue, Stack, dan lain-lain\nApache Maven, membahas build tool yang paling populer di Java. Cara membuat membuat project menggunakan apache maven, cara download dependency, multi module project dan cara membuat distribution file Java menggunakan maven\nJava Unit Test, belajar membuat unit test menggunakan Java dan JUnit 5. Membuat mock menggunakan framework mockito, dan lain-lain\nJava Stream, membahas tentang fitur Stream di Java, perbedaa dengan Java Collection. Bagaimana menggunakan operasi di Java Stream, dan lain-lain\nJava Internalitionalization, membahas tentang bagaimana cara membuat aplikasi Java yang mendukung multi bahasa, multi format angka dan tanggal\ndan lain-lain. Materi akan selalu diupdate\nMateri akan selalu di update secara berkala, dan ketika materi di update, harga course pun akan diupdate dengan harga baru. Jadi pastikan untuk secepatnya membeli course ini, makin cepat, makin murah harga pembelian course ini.",
      "target_audience": [
        "Programmer Pemula yang Ingin Belajar Bahasa Pemrograman Java",
        "Programmer yang ingin membuat Web menggunakan Java",
        "Programmer yang ingin membuat API menggunakan Java"
      ]
    },
    {
      "title": "Sistema de ventas profesional Java & MySQL y SQL full stack",
      "url": "https://www.udemy.com/course/como-crear-un-sistema-punto-de-ventas-en-java/",
      "bio": "Curso de Java orientado a objetos sistema punto de ventas profesional desde cero con MySQL y SQL Server",
      "objectives": [
        "Desarrollaremos el sistema de ventas desde cero con su interfaz y funcionamiento",
        "Aprenderás a crear un sistema punto de ventas utilizando el lenguaje de programacion en Java",
        "Tendras los conocimientos básicos para poder desarrollar tu propio sistema punto de venta",
        "Aprenderás a realizar mantenimientos de datos de los gestores de base de datos de MySQL y SQL Server",
        "Se implementara la expresión lambda en Java para realizar las consultas a la base de datos con colecciones de datos",
        "Usaremos la programacion orientada a objecto para crear la lógica del sistema"
      ],
      "course_content": {
        "Introducción": [
          "Instalando el Apache NetBeans IDE",
          "Personalizando el editor de Apache NetBeans",
          "Instalación del sql server",
          "Preparando el motor de base de datos de sql server",
          "Instalando el servidor de datos de MySQL",
          "Creando la estructura del proyecto y del sistema"
        ],
        "Clientes: registros de clientes": [
          "Interfaz registros de clientes",
          "Creando la interfaz clientes del sistema #1",
          "Creando la interfaz clientes del sistema #2",
          "Agregando los controles para ingresar la información del cliente",
          "Creando el procedimiento para cargar una imagen que se asignara al cliente",
          "Obteniendo la imagen o foto y creando los eventos de los campos de texto",
          "Creando los eventos para validar los campos de textos",
          "Validando los campos que solo se puedan ingresar datos numéricos o alfabéticos",
          "Validando el email y creando la clase Conexión",
          "Proporcionado al proyecto los archivar jar de conexión para los servidores",
          "Creando las bases de de datos en los servidores de base de datos",
          "Creando el procedimiento para consulta a la tabla TClientes",
          "Creando los procedimientos para insertar los datos del cliente en las tablas",
          "Creando la clase de modelo para la tabla TReportes clientes",
          "Registrando clientes en las tablas ya relacionadas",
          "Insertando la imagen correctamente en la tabla"
        ],
        "Clientes: Listar clientes registrados": [
          "Agregando los controles para listar los clientes registrados",
          "Creando los procedimiento para obtener la lista de clientes",
          "Obteniendo los clientes registrados en la vista cliente",
          "Creando las clases Render_CheckBox y Paginador",
          "Creando el paginador para paginar los registros del sistema",
          "Implementando el paginador para paginar la lista de clientes",
          "Creando los procedimiento para obtener la información de clientes seleccionado"
        ],
        "Clientes: Actualizar clientes": [
          "Creando el procedimiento para actual;izar la información del cliente",
          "Actualizando la información del cliente"
        ],
        "Clientes: Pagos y reportes": [
          "Interfaz de pagos de deudas",
          "Agregando los controles en la sección pagos y reportes",
          "Creando los procedimientos para obtener los registros de las tablas relacionadas",
          "Obteniendo la lista de clientes en la sección pagos y reportes",
          "Implementando el paginador en la sección pagos y reportes",
          "Mostrando la información de la deuda del cliente en reportes y pagos",
          "Creando la sección de tipo de monedas que trata el sistema",
          "Creando procedimientos para asignar el tipo de moneda que trata el en sistema",
          "Estableciendo el tipo de moneda que tratara el sistema",
          "Modificando el procedimientos para establecer el tipo de moneda",
          "Modificando y agregando controles al panel de pagos y reportes",
          "Modificando y agregando controles al panel de pagos y reportes #2",
          "Creando la tabla reportes intereses cliente las base de datos",
          "Creando el procedimiento para obtener registros de tres tablas relacionadas",
          "Obteniendo la información del cliente de las tablas relacionadas",
          "Creando la tabla intereses clientes en las base de datos",
          "Creando los procedimientos para consulta a la tabla intereses clientes",
          "Creando los procedimientos para tratar los pagos del cliente",
          "Creando los procedimientos para realizar pagos de intereses del cliente",
          "Verificando los procedimientos de intereses de pagos por mora",
          "Creando los procedimientos para realizar los pagos del cliente",
          "Probando los procedimientos de pagos de deudas",
          "Creando los procedimientos para diseñar ticket #1",
          "Creando los procedimientos para diseñar ticket #2",
          "Creando los procedimientos para diseñar ticket #3",
          "Creando los procedimientos para diseñar ticket #4",
          "Generando el ticket de pagos de deudas del cliente",
          "Creando la tabla pagos clientes en las base de datos",
          "Guardando la información del pago del cliente en las base de datos",
          "Creando los procedimientos para realizar pagos de intereses de mora",
          "Creando la tabla pagos reportes intereses cliente en las base de datos",
          "Generando el ticket de pagos de intereses del cliente",
          "Creando los procedimientos para guardar los datos de los pagos de intereses",
          "Guardando la información del pago de los intereses en las base de datos"
        ],
        "Reportes de mora de pagos": [
          "Interfaz de reportes de mora de pago",
          "Diseñando la interfaz reportes de mora de pagos",
          "Agregando el control JDateChooser en la ID de NetBeans",
          "Creando el procedimiento para obtener los datos de las tablas relacionadas",
          "Obteniendo los datos de las tablas relacionadas clientes y reportes",
          "Obteniendo los cliente en que están próximo a realizar el pago al sistema",
          "Creando el procedimiento para extender la fecha limite al cliente #1",
          "Creando el procedimiento para extender la fecha limite al cliente #2",
          "Extendiendo la fecha limite de pago de la deuda del cliente"
        ],
        "Registros de intereses": [
          "Creando la sección registrar intereses en configuraciones",
          "Agregando la columna intereses en la tabla configuraciones",
          "Registrando intereses por defecto para el sistema",
          "Automatizando el procedimiento de genera intereses de los clientes #1",
          "Automatizando el procedimiento de genera intereses de los clientes #2"
        ],
        "Interfaz login": [
          "Diseñando la interfaz login del sistema",
          "Creando los procedimientos para iniciar sesión",
          "Creando las tablas usuarios y ordenadores en la base de dato de mysql",
          "Creando las tablas usuarios y ordenadores en la base de dato de sql",
          "Creando las clases de modelos de las tablas usuarios y ordenadores",
          "Desarrollando procedimiento para obtener información del ordenador",
          "Creando el procedimiento para registrar el ordenador en el sistema",
          "Iniciando sesión en el sistema",
          "Procedimiento para que verificar si un usuario ha iniciado sesión en el sistema",
          "Cerrando sesión en el sistema",
          "Obteniendo la información del usuario que ha iniciado sesión",
          "Obteniendo la información del usuario en la clase de clientes"
        ],
        "Usuarios: registros de usuarios": [
          "Creando la interfaz registro de usuarios",
          "Diseñando la interfaz registrar usuarios #1",
          "Diseñando la interfaz registrar usuarios #2",
          "Creando los procedimientos para obtener los datos de los controles",
          "Creando la tabla de roles en las bases de datos de tipo mysql y sql server",
          "Desplegando la colección de roles en la interfaz registro de usuarios",
          "Creando los procedimientos para encriptar y desencriptar la contraseña",
          "Registrando usuarios en el sistema",
          "Modificando la columna OutFecha de la tabla tordenadores"
        ],
        "Usuarios: listar usuarios": [
          "Listando los usuarios que están registrados en el sistema",
          "Obteniendo la información del usuario seleccionado de la colección de usuarios",
          "Implementando el paginador para poder página los registros"
        ]
      },
      "requirements": [
        "Debe tener instalado NetBeans",
        "Debe tener conocimiento básico en el lenguaje de programacion en Java",
        "Debe tener instalado los gestores de base de datos MySQL o SQL Sever"
      ],
      "description": "En este curso aprenderás a crear un Sistema punto de ventas en tres capas desde cero a profesional, utilizando el lenguaje de programacion en Java donde empezaremos a desarrollar el sistema desde lo mas básico asta implementar las buenas practicas con Java POO utilizando como gestores de besase de dato a MySQL y una base de datos de tipo SQL Server, dependiendo a tu preferencia y los datos de la base de datos se van a obtener usando la librería Linq2db para gestionar de forma eficiente muy eficaz la información que vamos a obtener de cada tabla que estará en la base de datos, y la información se va a obtener como una colección de objetos y de esta forma podremos manipular de forma eficiente esa información en nuestro Sistema punto de ventas\nEl sistema contara con las siguientes secciones\nRegistros de clientes\nRegistros de proveedores\nCreación del login\nDepartamentos & Categorías\nCompra de productos\nRegistros de productos\nRegistros de cajas\nVentas de productos\nInventario de productos\nReportes de productos\nY el curso siempre se estará actualizando con las sugerencias que me brinden los alumnos para el mejoramiento del sistema y poder ir desarrollando un buen Sistema punto de ventas profesional en Java, y al final de este curso tendrá los conocimientos para poder desarrollar Sistema punto de ventas de forma profesional",
      "target_audience": [
        "Programadores en sistemas",
        "Estudiantes en sistemas",
        "Y toda persona que le guste la programacion y tenga interés de aprender a desarrollar un sistema"
      ]
    },
    {
      "title": "Python から飛び込むプログラミングの世界【丁寧な解説+小さなシステム開発ゼミで、知識「ゼロ」から「使える」知識に】",
      "url": "https://www.udemy.com/course/python-try/",
      "bio": "ついに動画化！日本最大級スキルシェアサービス「ストアカ」の大人気講座！元塾講師プログラマーが教える、知識「ゼロ」からの Python 基礎！小さなシステムの開発ゼミを通じて、 Python プログラミングの基本を「短時間で」習得しましょう。",
      "objectives": [
        "未経験者が本当に理解すべき項目だけ厳選して、Pythonの基礎的な文法を少しづつ学んでいきます。",
        "Pythonを使用したプログラミングによって、簡単なシステムを作る経験を得られます。",
        "プログラミング、プログラミング言語とは？という初歩的な内容からプログラミングを学びます。",
        "今大注目のプログラミング言語であるPythonの特徴、なぜ注目されているのか？が分かります。",
        "プログラミングの基本的な概念を理解し、もっとプログラミングについて知りたい！というマインドになっている状態を目指します。"
      ],
      "course_content": {
        "はじめに": [
          "Python・プログラミングとは？",
          "事前準備",
          "資料にアクセスできない場合",
          "質問する前に必ず読んでください",
          "講座の進め方",
          "Google Colaboratoryの使い方",
          "【補足】コードは合っているはずなのにエラーが消えない場合"
        ],
        "前編": [
          "制作物の確認",
          "print()関数",
          "自分でやってみようの説明",
          "【解答】print()関数",
          "演習の解答について",
          "演算子",
          "【解答】演算子",
          "データ型",
          "変数",
          "【解答】変数",
          "input()関数",
          "【解答】input()関数",
          "リスト",
          "【解答】リスト",
          "辞書",
          "【解答】辞書",
          "2次元リスト",
          "【解答】2次元リスト",
          "知識をまとめる（検索システム）",
          "【解答】知識をまとめる（検索システム）"
        ],
        "後編": [
          "事前準備",
          "制作物の確認",
          "条件分岐",
          "複合文",
          "複数の条件分岐",
          "【解答】複数の条件分岐",
          "ループ処理（for文）",
          "【解答】ループ処理（for文）",
          "ループ処理（while文）",
          "【解答】ループ処理（while文）",
          "関数",
          "【解答】関数",
          "スコープ",
          "知識をまとめる（注文システム）",
          "【解答】知識をまとめる（注文システム）"
        ],
        "ボーナス": [
          "さらなる上達のための学習コンテンツ"
        ]
      },
      "requirements": [
        "基本的なキーボード入力・PC操作はできる必要があります",
        "Googleアカウントが必要です",
        "インターネットにつながるPCが必要です"
      ],
      "description": "この講座の特徴\nこの講座は、プログラミングの未経験者・超初心者に向けて、対面で開催している講座を動画教材として再編集したものになります。\n講座参加者のうち、6割が全くの未経験の方、3割が一度学んだが挫折した方、残り1割が第二言語としてPythonを学びたい方です。\nそういった参加者の方が、講座の最後に小さなシステムを自力で作れるようになる講座を目指し、開催を続けてきました。\nそして開催のたびに、参加した方々の反応を見て、理解できてなさそうなところはより詳細に解説をしたり、質問が出たところは内容に追加したり、演習問題の難易度を調整して演習の効果を最大化できるように調整したり、講座終了後のアンケートの意見を反映したり、数多くの改善を重ねてきました。\nなので、プログラミング未経験者のつまづきやすいポイントが押さえられた、かゆいところに手が届く講座になっているかと思います。\n\n\nこの講座が目指す達成状態\nPythonによる演習を通じて、プログラミング未経験者が講座終了後に、\nプログラミングの概念や考え方を理解している状態を目指します。\nそして、いままではよくわからないものだったプログラミングの楽しさに気づき、\n「もっと上達したい！」「もっといろいろなことを知りたい！」というマインドになっている状態を目指します。\n\n\n扱う内容・扱わない内容\nプログラミングの考え方の本質的なところにしぼって解説していきます。\nプログラミング初学者が概念を理解するためには、本当に必要な知識はそれほど多くないものです。\nコツやテクニック的な紹介は最小限にとどめ、文法や考え方の理解を最優先にお伝えします。\nですので、おすすめできる方とおすすめできない方はそれぞれ以下のような方かと思います。\n・おすすめできる方\nプログラミング学習の最初の一歩として、まずは全体感の理解・把握にのみ集中したい方\nPython文法の必要最小限の内容の理解をまず達成したい方\n・おすすめできない方\nPythonの文法知識やコツ、テクニックを網羅的に得たいと考えている方\n論理的思考力に自信があり、難解な内容も扱ってほしいという方\n\n\n講座の進み方\n基本的には、文法事項の説明と理解度を確認する小問の演習を繰り返す形で進んでいきます。\nそして複数の文法知識をつなげて解決する必要のある問題にも取り組んでいただきます。\n応用力の試される少し難しい問題にも取り組むことで、理解度の向上・知識の定着を図ります。\nGoogle ColaboratoryというGoogleが提供するブラウザ上のPython実行環境を用いて学習を進めます。\nつまづきやすい環境構築が不要なので、Pythonの学習に集中できます。",
      "target_audience": [
        "今までまったくプログラミングというものに触れたことのない方",
        "他のPython・プログラミング学習教材に取り組んだが途中で挫折してしまった方",
        "プログラミングはできないけれどPythonやデータサイエンス、人工知能という言葉には興味がある方"
      ]
    },
    {
      "title": "Ce que vous devez savoir AVANT d'apprendre la PROGRAMMATION",
      "url": "https://www.udemy.com/course/ce-que-vous-devez-savoir-avant-d-apprendre-la-programmation/",
      "bio": "Apprendre les notions de base nécessaires à tout programmeur. Bien commencer en réseau, web, système, algorithmique...",
      "objectives": [
        "Vous allez apprendre les bases indispensables à tout programmeur peu importe son domaine (web, réseau, système, mobile)",
        "Vous allez apprendre les fondamentaux de l'informatique, dont ceux que l'on enseigne en école d'informatique",
        "Vous allez élargir vos connaissances et votre vision sur la programmation afin de commencer de la meilleure des manières",
        "Vous allez acquérir des informations utiles à vie, et utilisées quotidiennement en informatique",
        "Vous allez savoir quel langage de programmation est le plus adapté à votre profil",
        "Vous allez comprendre les technologies actuelles et savoir faire les bons choix dans le futur"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Pourquoi vous devez absolument apprendre à PROGRAMMER",
          "Faut-il vraiment TOUT apprendre sur la Programmation ?",
          "\"Informatique\", \"IT\", \"TIC\", \"Codeur\", \"Programmeur\" : les Bonnes Définitions",
          "Faites le Test : Quel informaticien êtes-vous ?",
          "Passez à l'action ! Téléchargez les outils dont vous avez besoin",
          "Téléchargez votre guide GRATUIT \"6 Qualités indispensables pour devenir PROG...\""
        ],
        "Comment fonctionne un Ordinateur": [
          "Qu'est-ce qu'un Ordinateur ?",
          "Qu'est-ce qu'un CPU ?",
          "Qu'est-ce que la mémoire RAM ?",
          "Les autres composants de l'ordinateur",
          "Exercez-vous ! Les tables de vérité",
          "[QUIZ] Êtes-vous au point avec les définitions ?"
        ],
        "Les systèmes d'exploitation": [
          "Système d'exploitation, API et bibliothèques de code",
          "Architecture Windows et Linux, et les différents types d'OS",
          "Windows, Mac ou Linux ? la fameuse question !",
          "[QUIZ] Testez vos connaissances en systèmes d'exploitation !"
        ],
        "Le langage machine": [
          "Bits, octets et langage binaire",
          "Convertir de binaire à décimal (et inversement)",
          "Encodages et normalisations",
          "Langage haut niveau ou bas niveau ?",
          "Le langage assembleur",
          "Activité : convertissez ces codes"
        ],
        "Comment fonctionne Internet": [
          "LAN, WAN ou MAN ?",
          "Le modèle OSI et TCP/IP",
          "Le fonctionnement de DNS",
          "Fonctionnement du World Wide Web",
          "[QUIZ] Êtes-vous prêt à concevoir l'Internet de demain ?"
        ],
        "L'algorithmique": [
          "La recette du bon gâteau",
          "Introduction à la Complexité",
          "Les algorithmes les plus Importants qui façonnent l'informatique d'aujourd'hui",
          "[QUIZ] Testez vos connaissances en algorithmique !"
        ],
        "Bien apprendre la programmation": [
          "Les différents paradigmes de programmation",
          "Par quel langage commencer ?",
          "Comment bien apprendre la programmation",
          "Choisir sa voie (web, réseau, système ? + quel langage concrètement)",
          "Back end, Front end, full stack ?",
          "[QUIZ] Les bases de la programmation"
        ],
        "Commencer rapidement avec le langage de votre choix": [
          "Programmer pour le web : HTML",
          "Programmer pour le web : CSS",
          "Programmer pour le web : Javascript",
          "Programmer pour le web : PHP",
          "Le langage Java",
          "Le langage C#",
          "Le langage Python",
          "Le langage C",
          "[QUIZ] Les langages de programmation populaires"
        ],
        "Frameworks, Bibliothèques et CMS populaires": [
          "Frameworks, Bibliothèques et CMS, les définitions",
          "Wordpress pour créer un site web",
          "Le Framework .NET sous Windows",
          "jQuery (bilbiothèque Javascript)",
          "SDL (programmation de jeux en C)",
          "Bien choisir son Framework",
          "[QUIZ] Framework, API ou Bilbliothèques"
        ],
        "Les concepts fondamentaux de la Programmation": [
          "La syntaxe",
          "Les instructions",
          "Les variables (et constantes)",
          "Les types de données",
          "Les tableaux",
          "Les structures de contrôle",
          "Les fonctions",
          "[QUIZ] Les concepts fondamentaux de la programmation"
        ]
      },
      "requirements": [
        "Vous devez avoir un ordinateur (Windows, Mac, Linux, autre) connecté à Internet.",
        "Vous devez avoir envie d'apprendre et de programmer dans un futur proche (peu importe le domaine)."
      ],
      "description": "\"Dans 15 ans, on enseignera la programmation comme la lecture et l'écriture...et on se demandera pourquoi ne pas l'avoir fait plus tôt...\"\n- Mark Zuckerberg - Facebook\n\n\"Tout le monde devrait apprendre à programmer, car cela apprend à penser\"\n- Steve Jobs - Apple\n\n\"Les programmeurs de demain sont les magiciens du futur.\"\n- Gabe Newell - Valve\n\n\n\"74% des français pensent que le code est la compétence de demain.\"\n- Kantar TNS pour Orange\n\n\n\nBienvenue dans ce cours vidéo sur les connaissances et compétences à acquérir avant de commencer la programmation !\nCe cours se focalise entièrement sur les bases de l'informatique et de la programmation. À l'issue de celui-ci, vous serez prêt(e) à programmer dans le langage de votre choix et dans le domaine de votre choix : web, mobile, système ou encore réseau.\nCe cours se veut être une base commune à tous les programmeurs qui vous permet de mettre à plat les fondamentaux avant de commencer. Il est particulièrement adapté à toutes les personnes prêtes à se lancer dans l'apprentissage d'un langage de programmation.\nNon seulement vous mettrez vos connaissances à jour, mais vous découvrirez également les bons choix à faire, les bonnes méthodes et outils à employer, les changements entre technologies du passé et du futur, et bien d'autres...\n\nLe cours, bien que théorique par essence, sera agrémenté d'exercices pratiques pour vous aider à bien mémoriser les différents concepts. Nous n'allons pas parler d'un seul langage de programmation spécifique, mais nous en citerons quelques uns tout au long du cours, notamment pour les comparer.\nLe cours est divisé en 11 sections :\n\n\n1. Introduction\nVous découvrirez ce que vous allez apprendre dans ce cours et ce que vous saurez faire à l'issue de celui-ci. Mais aussi pourquoi vous devriez apprendre la programmation et comment BIEN le faire.\n\n\n2. Comment fonctionne un Ordinateur\nVous apprendrez le fonctionnement de base d'un système et des différents composants d'un ordinateur (RAM, CPU, etc...). Ainsi que leur relation avec la programmation.\n\n\n3. Le systèmes d'exploitation\nNous parlerons des divers systèmes d'exploitation (Mac, Windows, Linux) et la fameuse question concernant le système à choisir.\n\n\n4. Le langage machine\nVient le moment où nous allons nous placer à la toute base de la programmation : le langage binaire. Nous parlerons également d'encodage et de normalisations, de conversion entre binaire et décimal, du langage assembleur et des langages haut et bas niveau.\n\n\n5. Comment fonctionne Internet\nConnaître le fonctionnement d'un ordinateur est bien, mais nous passerons à présent à Internet : comment fonctionne WWW, DNS et le web de manière générale. Nous ferons également un point sur le réseau et le modèle OSI et TCP/IP.\n\n\n6. L'algorithmique\n\"Trouvez d'abord la solution, puis écrivez le code\" disait John Johnson, développeur Microsoft. Savoir taper du code est utile, mais pas assez s'il s'agit de résoudre des problèmes. Nous verrons l'algorithmique dans cette partie qui est à connaître par tous les programmeurs.\n\n7. Bien apprendre la programmation\nCette partie se veut être un endroit pour poser vos questions et surtout obtenir les bonnes réponses.  Nous parlerons des paradigmes de programmation, du langage par lequel vous devez commencer et de la voie que vous devriez suivre. Vous aurez également divers conseils pour bien débuter et comprendre ce que l'on cherche ensuite dans les offres d'emploi.\n\n\n8. Commencer rapidement avec le langage de votre choix\nDans cette partie pratique, nous verrons ensemble commencer taper nos premières lignes de code en Java, C#, Python, C, HTML, CSS, Javascript et PHP. Le tout sans aucune installation au préalable via des services en ligne dédiés. Cela vous donnera un aperçu sur le code en question, sur l'utilité du langage et sur ce que vous aurez à faire au quotidien.\n\n\n9. Frameworks, Bibliothèques et CMS populaires\nSavoir écrire un programme est une excellente chose maintenant que vous avez choisi votre langage de programmation. Mais un bon programmeur ne réinvente pas la roue. Nous parlerons de Frameworks, bibliothèques et autres CMS qui permettent de devenir beaucoup plus rapide et productif au quotidien !\n\n\n10. Les concepts fondamentaux de la programmation\nNous passerons en revue les concepts fondamentaux communs à la plupart des langages de programmation : syntaxe, variables, structures de contrôle, types de données, fonctions...etc.\n\n\n11. Tendances, technologies futures, et comment bien préparer votre carrière\nPour terminer, nous allons parler de l'Internet des Objets, des SAAS, IAAS et PAAS ainsi que des cycles de développement et des architectures logicielles. De quoi vous donner un maximum de connaissances sur les technologies du présent et du futur pour bien débuter votre carrière !\n\n\nLe cours s'adresse aux débutants et initiés en priorité. Vous aurez un quiz de fin de section et diverses ressources additionnelles pour compléter les vidéos.\n\n\nCe que vous saurez faire à la fin de ce cours :\n• Vous allez apprendre les bases indispensables à tout programmeur peu importe son domaine (web, réseau, système, mobile)\n• Vous allez apprendre les fondamentaux de l'informatique, dont ceux que l'on enseigne en école d'informatique.\n• Vous allez élargir vos connaissances et votre vision sur la programmation afin de commencer de la meilleure des manières.\n• Vous allez acquérir des informations utiles à vie, et utilisées quotidiennement en informatique.\n• Vous allez savoir quel langage de programmation est le plus adapté à votre profil.\n• Et bien d'autres...\n\n\nNote : Ce cours de programmation ne vise pas les grands débutants n'ayant jamais touché à l'informatique. Il vise un profil de débutant à connaisseur souhaitant évoluer professionnellement dans le domaine. Le support est limité à ce qui est humainement possible avec des dizaines de milliers d'étudiants aussi bien en termes de délai que de précision. Pour un accompagnement plus complet et personnalisé, il est recommandé de se rapprocher de Cyberini.\n\n\nÀ propos :\nCyberini est un centre de formation spécialisé en cybersécurité créé en 2017 et certifié Qualiopi.\n\n\nMichel KARTNER est le fondateur de Cyberini.\nFormateur cybersécurité indépendant depuis 2013, il détient un Master en réseaux informatiques et systèmes embarqués.\nIl a été consultant cybersécurité junior dans une grande entreprise internationale où il travaillait à la fois sur des projets clients et des projets internes.\nFortes de + de 100 000 inscriptions, les formations Cyberini sont appréciées pour leur côté pratique et directement utilisable au quotidien et/ou dans le cadre professionnel. Le support technique est inclut par défaut, sans frais supplémentaires, ainsi que toutes les mises à jour.\n\n\n“Michel n’est pas un pirate, c’est un hacker éthique qui aide les internautes à se protéger.”\n— Complément d’enquête émission dédiée aux écoutes téléphoniques – FRANCE 2\n\n\nUn cours par Cyberini (Michel Kartner).",
      "target_audience": [
        "Les développeurs débutants (salariés, indépendants ou étudiants).",
        "Étudiants en informatique ou en programmation, ainsi que les amateurs ou passionés.",
        "Les personnes ayant envie de revoir (ou d'apprendre concrètement) les bases de l'informatique et de la programmation.",
        "Les personnes qui ont peur de ne pas savoir par où commencer ni quelles étapes suivre pas à pas."
      ]
    },
    {
      "title": "Паттерны проектирования C# и .NET",
      "url": "https://www.udemy.com/course/designpatternsru/",
      "bio": "Современные подходы в проектировании ООП систем на платформе .NET",
      "objectives": [
        "Находить и применять паттерны проектирования",
        "Рефакторить решения к использованию паттернов",
        "Оценивать применимость и полезность паттернов",
        "Повысить навыки програмирования и дизайна архитектуры"
      ],
      "course_content": {
        "Введение в курс": [
          "Введение в курс"
        ],
        "Принципы проектирования SOLID": [
          "Введение",
          "Принцип единственной обязанности",
          "Принцип открыт/закрыт",
          "Принцип подстановки Лисков",
          "Принцип разделения интерфейсов",
          "Принцип инверсии зависимостей",
          "Заключение"
        ],
        "Строитель (Builder)": [
          "Введение",
          "Жизнь без строителя",
          "Строитель",
          "Строитель с fluent-интерфейсом",
          "Многогранный строитель",
          "Наследование строителей с помощью рекурсивных дженериков",
          "Функциональный строитель",
          "Строитель-параметр",
          "Задача по программированию",
          "Заключение"
        ],
        "Фабрики (Factories)": [
          "Введение",
          "Пример с точкой",
          "Фабричный метод",
          "Фабрика",
          "Вложенная фабрика",
          "Асинхронные фабрики",
          "Абстрактная фабрика",
          "Задача по программированию",
          "Заключение"
        ],
        "Прототип (Prototype)": [
          "Введение",
          "ICloneable — плохой интерфейс",
          "Копирующий конструктор",
          "Копирование через сериализацию",
          "Фабрика прототипов",
          "Задача по программированию",
          "Заключение"
        ],
        "Синглтон (Singleton)": [
          "Введение",
          "Реализуем синглтон",
          "Проблемы с тестированием",
          "Синглтон и внедрение зависимостей",
          "Мультитон",
          "Monostate",
          "Задача по программированию",
          "Заключение"
        ],
        "Адаптер (Adapter)": [
          "Введение",
          "Сценарий векторной/растровой растеризации",
          "Кэширование в адаптере",
          "Суррогатное свойство",
          "Адаптер в контексте Dependency Injection",
          "Адаптер для литералов в дженериках",
          "Задача по программированию",
          "Заключение"
        ],
        "Мост (Bridge)": [
          "Введение",
          "Мост",
          "Задача по программированию",
          "Заключение"
        ],
        "Компоновщик (Composite)": [
          "Введение",
          "Геометрические формы",
          "Нейросети",
          "Композитная спецификация",
          "Задача по программированию",
          "Заключение"
        ],
        "Декоратор (Decorator)": [
          "Введение",
          "Кастомный StringBuilder",
          "Динамическая композиция декораторов",
          "Статическая композиция декораторов",
          "Множественное наследование с интерфейсами",
          "Адаптер-декоратор",
          "Задача по программированию",
          "Заключение"
        ]
      },
      "requirements": [
        "Хорошее знание языка C#",
        "Знакомство с самыми свежими фичами языка",
        "Хорошее понимание принципов ООП",
        "Наличие компилятора и среды разработки"
      ],
      "description": "Обзор курса\nЭтот курс предоставляет слушателю наиболее полный обзор Паттернов проектирования C# и .NET через чисто практический подход. В частности, на этом курсе вы увидите:\nПоследние версии языка C# экосистемы .NET\nСовременные подходы к проектированию: dependency injection, реактивное программирование, и т.п.\nИспользование современного инструментария разработки (Rider)\nОбсуждение вариаций и альтернативных реализаций паттернов\nЭтот курс покрывает все паттерна Банды Четырех (GoF) а также современные вариации и изменения. Также мы обсудим наличие паттернов встроенных в сам язык или фреймворки .NET (например BCL).\nЧто еще за Паттерны Проектирования?\nПаттерны проектирования — это готовые к использованию решения часто встречающихся задач проектирования. Паттерны были популяризованы в книге 1994 года Design Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma, John Vlissides, Ralph Johnson and Richard Helm (авторов иногда называют Бандой Четырех — Gang of Four — оттуда сокращение GoF).\nОригинальный труд был написан с помощью языков C++ и Smalltalk, но с тех времен утекло много воды, и паттерны успешно адаптировали под все современные языки, такие как C#, Java, PHP, и даже под не-ООП языки, такие как JavaScript.\nПрименимость паттернов проектирования универсальна: мы встречаем их в библиотеках, некоторые из них встроены прямо в язык, и вы наверняка сами используете их в вашем коде, даже не подозревая что они там есть.\nКакие паттерны покрыты в курсе?\nВ этом курсе вы узнаете про все паттерны Банды Четырех. Вот что вы узнаете из курса:\nПринципы проектирования SOLID: Принцип Единственной Обязанности, Принцип Открыт/Закрыт, Принцип Подстановки Лисков, Принцип Разделения Интерфейсов и Принцип Инверсии Зависимостей\nПорождающие паттерны: Строитель, Фабрики (Фабричный Метод, Абстрактная Фабрика), Прототип, Синглтон\nСтруктурные паттерны: Адаптер, Мост, Компоновщик, Декоратор, Фасад, Приспособленец, Заместитель\nПоведенческие паттерны: Цепочка обязанностей, Команда, Интерпретатор, Итератор, Посредник, Хранитель, Null Object, Наблюдатель, Состояние, Стратегия, Шаблонный Метод, Посетитель\nДля кого этот курс?\nЭтот курс создан для .NET/C# разработчиков которые хотят видеть не только типовые примеры паттернов, но также различные вариации и трюки языка которые можно использовать чтобы писать паттерны в \"современном\" стиле. Например, с использованием DLR и ImpromptuInterface, мы можем сделать DynamicObject который реализует любой нужный нам интерфейс. Это дает возможность динамического программирования и позволяет делать интересные реализации некоторых паттернов.\nВ курсе используются достаточно сложные аспекты C#, такие как dynamic, рекурсивные дженерики и т.п.. Также, очень сильно задействованы сторонние библиотеки и фреймворки: Autofac (dependency injection), TPL и async/await для многопоточности, LINQ, Reactive Extensions, и другие.\nСтиль преподавания\nВесь курс представлен как набор лайв-кодинг сессий, в нем минимум теории и максимум практики! Видео представлены с помощью моей собственной системы Kinetica, которая отбрасывает весь визуальный шум от IDE и позволяет сфокусировать на одном — на коде.\nПомимо лекций, в конце каждого раздела есть задача по программированию: нужно реализовать паттерн. Эти задачи помогают закрепить пройденный материал.",
      "target_audience": [
        "Начинающие и опытные разработчики",
        "Архитекторы приложений и систем",
        "Все кого интересуют паттерны проектирования!"
      ]
    },
    {
      "title": "Python dla średnio zaawansowanych",
      "url": "https://www.udemy.com/course/python-dla-srednio-zaawansowanych/",
      "bio": "Programuj sprytnie i używaj mocy Pythona! Krok w stronę profesjonalnego wykorzystania Pythona",
      "objectives": [
        "Korzystanie z zaawansowanych mechanizmów języka",
        "Programowanie \"pythoniczne\"",
        "Budowanie funkcji",
        "Korzystanie z dekoratorów",
        "Optymalizacja kodu",
        "Korzystanie z klas, dziedziczenia,",
        "Budowanie własnych dekoratorów",
        "Korzystanie i budowanie iteratorów, generatorów, context manager-a"
      ],
      "course_content": {},
      "requirements": [
        "Znajomość Pythona na poziomie podstawowym",
        "Zalecane ukończenie kursu \"Python dla początkujących\"",
        "Komputer z zainstalowanym środowiskiem Python",
        "Czas i chęci do nauki"
      ],
      "description": "Ten kurs wchodzi w skład serii kursów o Pythonie. Wybierz właściwy, zależnie od stopnia znajomości Pythona i zainteresowań.\nKurs online i zadania z rozwiązaniami - all inclusive! Quiz po każdej lekcji pozwalający na samodzielne sprawdzenie stopnia zrozumienia materiału.\nW moim zamiarze ten kurs, to drugi etap nauki programowania w Pythonie. Jeśli ukończyłeś już mój kurs dla początkujących – to tak, ten kurs jest dla Ciebie. Jeśli Pythona znasz z innych źródeł i po prostu chcesz się nauczyć czegoś więcej, to jak sądzę też dobrze trafiłeś. Właściwie łatwiej mi powiedzieć dla kogo ten kurs nie jest. Jeśli nie znasz podstaw zacznij od kursu dla początkujących. Jeśli Pythona znasz już perfekcyjnie - to zapraszam na moje inne kursy wyspecjalizowane w konkretnych zastosowaniach Pythona.\nTutaj nie omawiam już podstaw -te musisz znać. Pętle, zmienne, typy, listy, funkcje, wyjątki, sama instalacja Pythona – tego tu nie ma. To co jest? Znaczne poszerzenie tych wiadomości. Odkrycie drugiego dna:\nKlasy i obiektowość\nFunkcje i ich mniej lub bardziej oczywiste zastosowania\nTypy i  konwersje typów\nSztuczki i zastosowania tych sztuczek\nWyjątki i ich obsługa\nIteratory, generatory\nContext manager\nCel jaki sobie stawiam, to poruszane tu zagadnienia omówić w miarę możliwości od A-Z, tak aby już do nich w przyszłości nie trzeba było wracać.\nZobaczysz różnego rodzaju funkcje i właściwości obiektów i elementów języka Python. Nie ograniczam się jednak do powiedzenia „jest taka funkcja”. Przy każdej z nich zobaczysz praktyczny przykład jak i kiedy z tej funkcji można skorzystać.\nSamo obejrzenie filmu raczej zbyt wiele nie nauczy. Dlatego właśnie po każdej lekcji masz quiz, a zaraz potem zadanie do samodzielnego rozwiązania. Praktyka czyni mistrza, więc namawiam do rozwiązywania tych zadań. Zejdzie Ci na tym pewnie dużo czasu, ale uwierz mi – to nie będzie czas stracony. Gdyby zadanie było za trudne albo niezrozumiałe, to masz do dyspozycji propozycję rozwiązań. Czuj się, jakbyś był na normalnym klasowym kursie, tyle tylko że stworzonym dla Ciebie.\nKończąc ten kurs będziesz już – jakby nie patrzeć na poziomie zaawansowanym. Dasz radę samodzielnie stosować zaprezentowane tu techniki, jak również ze zrozumieniem czytać kod napisany przez innych. Będziesz gotowy/a do specjalizacji w kierunku, w jakim Ty u siebie Pythona chcesz zastosować.\nZachęcam do przejrzenia spisu treści kursu. Nie będę go tutaj po raz przytaczał, bo to około 180 jednostek. Zajrzyj do przykładowych darmowych lekcji, oceń czy ta forma kursu Ci się podoba. Jeśli tak – wejdź na wyższy poziom znajomości Pythona.\nPython dla średnio zaawansowanych – programuj sprytnie! Zapraszam!",
      "target_audience": [
        "Osoby znające Python na poziomie podstawowym",
        "Programiści innych języków przesiadające się na Pythona",
        "Adepci Data Science",
        "Programiści znający Pythona, którzy uczyli sie go sami",
        "Studenci IT"
      ]
    },
    {
      "title": "Изучаем Dart",
      "url": "https://www.udemy.com/course/learndart/",
      "bio": "Курс по основам программирования на языке Dart",
      "objectives": [
        "Вы научитесь программировать на Dart",
        "Сможете создавать мобильные приложения на платформе Flutter, используя Dart. Это новый язык программирования на основе Java, разработанный Google"
      ],
      "course_content": {
        "Введение": [
          "Что такое Dart?",
          "Установка Dart на Windows 10",
          "Ссылки для курса, ДЗ, обсуждения"
        ],
        "Основы": [
          "Функция main и комментарии",
          "Переменные (Variables)",
          "Ключевые слова \"const\" и \"final\"",
          "Типы данных (Data Types)",
          "Введение в Null Safety и тип Null",
          "Работа с non-nullable и nullable типами",
          "Приведение/преобразование типов",
          "Типы Object? и dynamic",
          "Упражнения"
        ],
        "Управление потоком (Control Flow)": [
          "Конструкция - if / else",
          "Конструкция - switch",
          "Конструкции - do while и while",
          "Конструкция - for",
          "Упражнения"
        ],
        "Lists": [
          "Введение",
          "Базовые операции со списком",
          "Изменяемые и неизменяемые списки",
          "Свойства и методы списка",
          "spread оператор и коллекции if, for",
          "Обработка Nullable списков",
          "Упражнения"
        ],
        "Sets": [
          "Введение",
          "Базовые операции со множеством",
          "Математические операции над множествами",
          "Упражнения"
        ],
        "Maps": [
          "Введение",
          "Базовые операции с Map",
          "Обработка Nullable Map",
          "Упражнения"
        ],
        "Iterables": [
          "Введение",
          "Базовые операции над Iterables"
        ],
        "Функции": [
          "Функция. Типы функций",
          "Параметры функции",
          "ДЗ по функциям",
          "Функция - Объект",
          "Анонимные функции",
          "Функции высшего порядка",
          "Вложенные функции и области видимости",
          "Замыкания (Closures)",
          "Упражнения"
        ],
        "Исключения": [
          "Конструкции - try / on / catch / finally",
          "Пользовательские исключения"
        ],
        "Классы и конструкторы": [
          "Класс и Объекты",
          "Конструктор класса",
          "Именованный конструктор",
          "Перенаправленный конструктор",
          "Инициализаторы",
          "Константный конструктор",
          "Фабричный конструктор",
          "Статические свойства и методы классов",
          "Модификатор late"
        ]
      },
      "requirements": [
        "Желание учиться",
        "Иметь школьные знания в программировании",
        "Требуется ПК/ноутбук под управлением Windows/Mac"
      ],
      "description": "Важное сообщение для студентов из России\nВ связи с ограничениями работы систем Visa и Mastercard скорее всего вы не сможете оплатить этот курс и/или получить на него скидку. Как можно обойти это ограничение вы можете узнать\nв телеграм-канале \"Dart и Flutter\". Ссылку на него вы можете посмотреть в моем профиле преподавателя под фотографией есть кнопка \"Сайт\". В этом телеграм канале вы сможете задать любые вопросы, а также узнать о возможностях приобретения курсов (информация будет в закрепленном сообщении)\n\nВсем привет! Добро пожаловать на курс \"Изучаем Dart\".\n\n\nПочему Dart?\nDart – это объектно-ориентированный язык программирования разработанный Google. Язык Dart прежде всего предназначен для разработки веб-приложений (как на стороне клиента, так и на стороне сервера), а также для разработки мобильных приложений, с использованием SDK Flutter.\nGoogle также работает над операционной системой Fuchsia OS, которая совместима с Dart, поэтому, когда она будет выпущена, разработчики будут создавать приложения для Fuchsia с использованием Dart, и, как вы знаете, Google является технологическим гигантом, поэтому, если вы изучаете что-то, подкрепленное Google, то это всегда дополнительное преимущество для ваших навыков.\n\n\nЧто будет в курсе?\nВ этом курсе мы изучим все, что нужно, чтобы перейти на новый язык программирования Dart. По его окончании, вы уверенно овладеете данным языком программирования. Шаг за шагом мы будем продвигаться к цели. Мы начнем со стандартного Hello World и постепенно изучим его основы.\nВ курсе есть домашние задания, чтобы вы не просто просмотрели видео, но и закрепили весь материал на практике.\n\n\nВ этом курсе мы рассмотрим следующие темы:\nОсновы Dart\nКонтроль потока\nФункции\nОбъектно-ориентированное программирование\nКлассы и Объекты\nКонструкторы\nДомашние задания\nи многое, многое другое\n\n\nЧто мне делать, если я не знаю Dart?\nЧтобы приступить к изучению данного языка вам вполне хватит школьных знаний по тем языкам программирования, которые вы изучали в школе. После прохождения этого курса вы можете уверенно написать Dart в своем резюме по программированию. Этого курса более чем достаточно.\n\n\nЖелаю Вам успехов в обучении!\nКонстантин Кокорин!",
      "target_audience": [
        "Люди, которые хотят научиться программировать на языке Dart для разработки мобильных Flutter - приложений"
      ]
    },
    {
      "title": "Java Moderno, Fácil de Seguir, com Spring Boot e 11 Projetos",
      "url": "https://www.udemy.com/course/curso-de-java-para-iniciantes-com-projetos/",
      "bio": "Java Completo: 60 Exercícios, POO, JavaFX, JDBC, Postman, STS, REST, Maven, SQLite, JSON, Hibernate,JPA +Amor ao Ensinar",
      "objectives": [
        "Programar em Java do zero, com explicações claras e passo a passo.",
        "Desenvolver APIs modernas com Spring Boot para sistemas e integrações.",
        "Trabalhar com 11 projetos completos para fixar tudo o que foi aprendido.",
        "Conectar sua aplicação Java a bancos de dados, com exemplos guiados.",
        "Entender os conceitos essenciais da programação e da lógica.",
        "Criar aplicações com janelas, botões e formulários (Java para desktop).",
        "Aprender o que é orientação a objetos (POO) e como aplicá-la no seu código.",
        "Usar recursos modernos do Java de forma simples e prática.",
        "Construir um sistema para consulta de dados climáticos em tempo real.",
        "Aplicar programação funcional no Java com clareza e objetividade."
      ],
      "course_content": {},
      "requirements": [
        "Você não precisa saber programar — vou te guiar do zero!",
        "Se já conhece um pouco de lógica de programação, isso vai te ajudar, mas não é obrigatório.",
        "Saber usar o computador no dia a dia (como criar pastas, descompactar arquivos, navegar por pastas) é suficiente.",
        "O principal é estar com vontade de aprender e praticar!"
      ],
      "description": "Curso de Java Moderno\ncom o Novo Spring Boot\n+ Suporte Rápido para Dúvidas\n\n\nO que é Java?\nJava é uma linguagem de programação e uma plataforma de computação que revolucionou o mundo da tecnologia desde seu lançamento pela Sun Microsystems em 1995. Imagine poder criar um programa uma única vez e executá-lo em qualquer dispositivo, seja um computador, um celular ou até mesmo um supercomputador! Isso é possível graças ao Java, que permite que o mesmo código funcione em diferentes ambientes sem precisar de ajustes.\nMas Java não é apenas versátil; é também poderoso e seguro. Com uma sintaxe clara e orientada a objetos, Java facilita a vida dos desenvolvedores, permitindo a criação de aplicativos robustos e eficientes. Java é uma excelente escolha para criar jogos e aplicativos, devido à sua versatilidade e robustez, é possível desenvolver jogos de alta performance que rodam tanto em iOS quanto em Android.\nSe eu não entender alguma coisa, o professor pode me ajudar?\nSim, com certeza! Queremos garantir que você se sinta totalmente apoiado durante o curso. Para isso, disponibilizamos uma seção exclusiva de perguntas e respostas, onde você pode esclarecer suas dúvidas a qualquer momento. Também é possível enviar perguntas diretamente ao professor de forma privada, e ele responderá com toda atenção e cuidado.\nA maioria das perguntas é respondida em menos de 4 horas, em dias úteis, dentro do horário comercial (das 8h às 17h), com prazo padrão de até 24 horas para respostas do professor.\nEmbora ele não tenha obrigação de responder fora desse período, é bastante atencioso e, ocasionalmente, responde também fora do horário — algo que ocorre pontualmente, como um gesto extra de dedicação.\nEstamos aqui para tornar sua jornada de aprendizado a mais tranquila e eficiente possível!\nPor que aprender Java?\nAprender Java pode parecer desafiador à primeira vista, mas há muitas razões convincentes para dar esse passo. Java é uma das linguagens de programação mais populares e amplamente utilizadas no mundo, com grandes empresas como Google e Amazon confiando nela para seus sistemas. Sua versatilidade permite criar aplicativos para desktop, web, dispositivos móveis e até sistemas embarcados. Além disso, a comunidade de desenvolvedores Java é enorme e ativa, oferecendo suporte contínuo através de fóruns, tutoriais e cursos online.\nJava é conhecida por sua segurança e confiabilidade, sendo a escolha de muitos sistemas críticos em bancos e grandes corporações. Sua sintaxe clara e bem estruturada facilita o aprendizado, tornando-o mais acessível para iniciantes. Com a crescente demanda por desenvolvedores qualificados, aprender Java agora pode ser um investimento valioso para o futuro, garantindo que você esteja preparado para as oportunidades que surgirem.\nQuais os salários de quem trabalha com Java no Brasil?\nSegundo dados atualizados (01/08/2025) de plataformas como Glassdoor, Vagas e LinkedIn, o salário médio de um Desenvolvedor Java em início de carreira no Brasil varia entre R$ 4.000 e R$ 7.500 por mês. Desenvolvedores Pleno ganham entre R$ 7.000 e R$ 9.500, enquanto profissionais Sênior recebem de R$ 10.000 a R$ 14.000.\nJá em posições como Tech Lead, Arquiteto Java ou como consultores PJ, é possível ultrapassar os R$ 18.000 a R$ 20.000 mensais. Isso significa que, ao aprender Java, você não está apenas adquirindo uma nova habilidade — está iniciando uma jornada profissional sólida, com alto potencial de crescimento e valorização no mercado.\nO que é Spring Boot Framework?\nSpring Boot é uma ferramenta poderosa que ajuda a desenvolver aplicações em Java de forma rápida e fácil. Ele permite criar aplicativos robustos e escaláveis sem precisar configurar muitos detalhes técnicos, facilitando a vida dos desenvolvedores. Com Spring Boot, você pode focar mais na criação de funcionalidades e menos na configuração do ambiente.\nPor que aprender Spring Boot?\nO Spring Boot é amplamente adotado por empresas em todo o mundo, tornando-se uma escolha essencial para desenvolvedores modernos. Com sua capacidade de aumentar a produtividade e integração perfeita com outras ferramentas da Spring Ecosystem, dominar o Spring Boot abre portas para inúmeras oportunidades no mercado de trabalho. Além disso, sua vasta comunidade e rico ecossistema de ferramentas facilitam a implementação de funcionalidades adicionais, tornando você um candidato mais competitivo e preparado para os desafios do desenvolvimento de software atual.\nQuais são as versões das principais tecnologias utilizadas no curso?\nJava 22: Utilizamos o Java 22 (lançado em março de 2024) por ser uma versão moderna, rápida e cheia de melhorias que tornam o código mais simples e agradável de escrever. Você aprenderá com uma versão atualizada da linguagem, alinhada ao que há de mais recente no ecossistema Java.\nSpring Boot 3.3.5 a 3.4.3: Começamos com a versão 3.3.5 (lançada em 24 de outubro de 2024) e, ao longo do curso, faremos uma atualização guiada para a 3.4.3 (lançada em 20 de fevereiro de 2025). Assim, você terá contato com uma versão atual e estável do framework, aprendendo boas práticas de atualização.\nSTS4 (Spring Tool Suite 4.26.0): Esta é a IDE que utilizaremos nas partes mais avançadas do curso, especialmente no módulo de Spring Boot. A versão 4.26.0 foi lançada em 17 de outubro de 2024 e traz ótimos recursos para aumentar sua produtividade no desenvolvimento com Spring.\nObservação didática: Antes de chegarmos ao capítulo de Spring Boot, não usaremos ainda o STS4. Vamos adotar uma abordagem mais manual no início, para que você compreenda profundamente cada etapa do processo de criação de código. Essa escolha pedagógica é comprovadamente eficaz para quem está começando, pois fortalece a base e facilita o aprendizado do Java.\nO que você vai ter aprendido ao concluir este curso?\nAo concluir este curso (aulas, exercícios e os projetos), você estará preparado para criar programas em Java, desde os conceitos básicos até técnicas mais avançadas. Você aprenderá a desenvolver aplicativos e resolver problemas de programação com confiança. Além disso, adquirirá habilidades práticas altamente valorizadas no mercado de trabalho, tornando-se um profissional mais competitivo e preparado para enfrentar desafios reais.\nO que poderei colocar no meu currículo após finalizar o curso?\nAo concluir este curso, você estará apto(a) a incluir no seu currículo as seguintes competências, demonstrando aos recrutadores o alto nível de conhecimento em Java que você possui:\nProgramação Orientada a Objetos (POO): Domínio dos conceitos fundamentais e avançados da POO, aplicando-os efetivamente no desenvolvimento de software.\nProgramação Funcional: Compreensão e aplicação dos conceitos de programação funcional.\nJavaFX/CSS: Capacidade de criar interfaces gráficas de usuário modernas e responsivas, utilizando JavaFX e CSS.\nOperações Fundamentais de SQL (CRUD): Conhecimento prático nas quatro operações fundamentais de banco de dados: inserir (CREATE), consultar (READ), atualizar (UPDATE) e excluir (DELETE). Capacidade de interagir com bancos relacionais utilizando comandos SQL simples, criando e manipulando tabelas e registros de forma segura e eficaz.\nJDBC: Habilidade no gerenciamento de conexões com bancos de dados relacionais e na execução de operações SQL.\nSpring Boot: Conhecimento na construção de aplicações web robustas e escaláveis com este popular framework Java.\nHibernate/JPA: Expertise na integração entre Java e bancos de dados, utilizando Hibernate como implementação JPA.\nSTS: Familiaridade com o Spring Tool Suite (STS) para o desenvolvimento de aplicativos Spring.\nRESTful APIs: Experiência na construção de serviços web RESTful, garantindo comunicação eficiente entre aplicações.\nExploração de Recursos Avançados do Spring Boot: Capacidade de atualizar e otimizar projetos utilizando as últimas versões do Spring Boot.\nCadastro em Massa via REST: Expertise na implementação de sistemas para cadastro em larga escala com eficiência e precisão.\nIntegração de Aplicações Externas: Habilidade em conectar aplicações usando Web Client em HTML5/JavaScript, abrangendo listagem e operações CRUD completas.\nSegurança Web: Domínio de medidas de proteção como CORS e CSRF, garantindo maior segurança para aplicações web.\nCommandLineRunner: Conhecimento no uso de tarefas de inicialização do Spring Boot para configurar aplicações dinamicamente.\nConsultas Otimizadas: Capacidade de criar consultas avançadas e eficientes, melhorando o desempenho em bancos de dados.\nPostman: Conhecimento no uso do Postman para testar e automatizar requisições HTTP, facilitando o desenvolvimento e o teste de APIs RESTful.\nEstrutura do Curso\nEste curso é estruturado com base em uma metodologia inovadora de neuroaprendizagem. Esta abordagem pedagógica utiliza técnicas de ensino avançadas que permitem ao aluno absorver até 70% mais do conteúdo da tecnologia em estudo, tudo isso com um esforço mental reduzido.\nO conteúdo do curso é organizado em torno de três pilares fundamentais:\nConceitos: Aqui, você entenderá o conceito por trás dessa poderosa linguagem de programação.\nAplicação: Nesse pilar, discutiremos o propósito e as vantagens do uso de Java.\nPrática: Você aprenderá a prática de implementar e usar Java em cenários do mundo real.\nO curso é projetado para ser altamente prático: 80% do conteúdo é dedicado a aulas práticas, enquanto os 20% restantes são reservados para a teoria e conceitos fundamentais. Esta abordagem garante que você não apenas entenda Java, mas também esteja pronto para aplicá-lo efetivamente em seu ambiente de trabalho.\nQual nível profissional atingirei com esse treinamento e quão completo é o curso?\nEste curso oferece uma formação profissional inicial, preparando você para ingressar no mercado de trabalho como Desenvolvedor Java (nível iniciante). O conteúdo foi cuidadosamente elaborado para que você esteja apto a lidar com diversas situações do dia a dia na programação com Java. O curso é estruturado de forma pedagógica e equilibrada, unindo teoria e prática de maneira acessível.\nQuais são os 11 Projetos incluídos neste Curso?\nFormulário de Cadastro com Banco de Dados: Neste projeto, você vai aprender a conectar sua aplicação Java a um banco de dados, realizando as operações essenciais: criar, ler, atualizar e deletar (CRUD). Também desenvolverá uma interface gráfica moderna e funcional, com instruções passo a passo para garantir que cada etapa seja clara e compreensível. É uma excelente oportunidade para adquirir experiência prática e ver seu código se transformar em um sistema real funcionando!\nCalculadora de IMC: Imagine criar uma ferramenta que pode ajudar as pessoas a monitorar sua saúde de forma simples e eficaz. É um projeto que não só aprimora suas habilidades técnicas, mas também tem um impacto direto na vida das pessoas!\nRelógio Digital: Este projeto consiste em um relógio digital desenvolvido em Java. Projetos como esse ajudam os alunos a entender conceitos como manipulação de data e hora, uso de interfaces gráficas e lógica de programação.\nGerador de Senhas Seguras: A segurança cibernética é uma preocupação crescente. O gerador de senhas seguras que você construirá é uma ferramenta valiosa para proteger contas online e aplicativos.\nFront-End para o Gerador de Senhas Seguras: Neste projeto, você desenvolverá um frontend, reutilizando o código do projeto anterior. O objetivo é treinar sua capacidade de criar interfaces gráficas e reutilizar códigos de maneira eficiente usando Programação Orientada a Objetos.\nJogo da Forca: O objetivo desse projeto é criar um programa que permita aos jogadores adivinharem letras de uma palavra oculta. Além de ser uma excelente prática para conceitos de programação e lógica, esse projeto representa um primeiro passo no desenvolvimento de jogos em Java.\nMini Navegador Web Java: Este projeto permite que os alunos explorem a criação de interfaces gráficas com JavaFX, manipulação de eventos e integração com componentes de rede para carregar e exibir páginas web. Além disso, trabalhar em um navegador web oferece uma visão prática de como os navegadores funcionam internamente, incentivando a resolução de problemas e a aplicação de conhecimentos em um contexto real.\nLista de Compras: Neste projeto você vai explorar a programação orientada a objetos, componentes gráficos e persistência de dados para salvar as listas, desenvolvendo habilidades essenciais enquanto cria algo funcional e útil.\nEditor de Texto Básico: Este projeto é essencial para praticar a criação de aplicações interativas. Ao concluir, suas habilidades em Java, interfaces gráficas e manipulação de arquivos serão aprimoradas. Este conhecimento abre portas para projetos mais complexos e aumenta suas oportunidades no mercado de tecnologia.\nSistema de Informações Climáticas em Tempo Real: Agora, imagine desenvolver um sistema profissional que coleta e exibe dados climáticos em tempo real. Esse projeto é de um nível mais avançado e envolve a integração de várias tecnologias. Com esse sistema meteorológico será possível acessar informações atualizadas sobre o clima, como temperatura, umidade, condições do tempo, etc.\nÉ uma ferramenta poderosa para planejadores urbanos, agricultores, viajantes e qualquer pessoa interessada em monitorar as condições climáticas. Além disso, trabalhar em um projeto desse porte prepara você para desafios reais do mercado de trabalho, desenvolvendo habilidades valiosas em análise de dados, programação e design de sistemas.\nCriação de uma API RESTful com Spring Boot: Você aprenderá a criar uma API com Spring Boot, essencial para construir aplicações web robustas e escaláveis. Durante o curso, você desenvolverá uma API RESTful, lidando com requisições HTTP, manipulação de dados e integração com bancos de dados. Esta habilidade é altamente requisitada no mercado, com muitas empresas procurando desenvolvedores capazes de criar e manter APIs eficientes.\nEsses projetos não só são empolgantes, mas também oferecem uma oportunidade fantástica de aplicar o que você aprendeu de maneira prática e significativa!\nO que preciso saber antes de fazer este curso?\nAntes de se inscrever neste curso, é importante que você tenha conhecimento em três áreas principais:\nComputação Básica: É necessário entender conceitos básicos de computação, como criar pastas, descompactar arquivos e usar um navegador de arquivos como Windows Explorer ou equivalentes no Linux, ou macOs.\nVontade de Aprender: Este é o requisito mais importante! Com dedicação e prática, você será capaz de dominar Java.\nSobre o professor\nO curso é ministrado por Arnaldo Sousa, um dos professores mais experientes em Java no Brasil. Arnaldo ensina Java desde 1999 na Sun Microsystems (os criadores do Java!), sendo um dos primeiros instrutores oficiais a capacitar profissionais no país. Ele possui cinco certificações em Java, incluindo a IBM WebServices e IBM TIII (certificação de instrutor da IBM), que o capacitou para ensinar Java também na IBM, abordando Orientação a Objetos, WebServices e IBM WebSphere. Além de sua sólida carreira como instrutor, Arnaldo atua em projetos de multinacionais, o que garante que você aprenderá com quem tem experiência real e prática no mercado.\nProfessor licenciado com especialização em Neuropsicologia, Neurociência, Neuroaprendizagem, Educação Especial e sólida formação em Filosofia, Arnaldo possui uma combinação que aprimora sua capacidade de raciocinar logicamente para comunicar ideias complexas com clareza. Essa didática permite que ele apresente Java de uma maneira extremamente compreensível e prática, descomplicando até os conceitos mais complexos. Com uma abordagem didática, acessível e uma verdadeira paixão por ensinar, ele facilita o aprendizado para todos os níveis de conhecimento.\nNão perca a chance de aprender Java com um dos maiores especialistas do país.\nInscreva-se agora e transforme sua carreira!",
      "target_audience": [
        "Pessoas que nunca programaram e querem começar com Java.",
        "Estudantes de TI que buscam uma base prática e moderna.",
        "Profissionais de outras áreas em transição de carreira para a área de tecnologia.",
        "Alunos que acham Java difícil e buscam um caminho mais acessível e passo a passo.",
        "Programadores de outras linguagens de programação que desejam iniciar em Java."
      ]
    },
    {
      "title": "ORIENTAÇÃO A OBJETOS EM JAVA, C#, PYTHON, PHP E JAVASCRIPT",
      "url": "https://www.udemy.com/course/orientacao-a-objetos-em-java-c-python-php-e-javascript/",
      "bio": "COM MODELAGEM DE BANCO DE DADOS E BUSINESS INTELLIGENCE COM DATA WAREHOUSE",
      "objectives": [
        "APRENDER O CONCEITO DE ORIENTAÇÃO DE OBJETOS EM VÁRIAS LINGUAGENS",
        "CONHECIMENTO SOBRE O DESENVOLVIMENTO DE BANCO DE DADOS",
        "CONHECIMENTO EM BUSINESS INTELLIGENCE COM DATA WAREHOUSE"
      ],
      "course_content": {
        "Introdução": [
          "Introdução ao Curso",
          "O que vai ser ensinado sobre programação orientada a objetos",
          "O que será ensinado sobre modelagem de banco de dados",
          "O que será ensinado sobre as linguagens JAVA, C#, PYTHON, PHP E JAVASCRIPT",
          "O que vamos ver sobre SQL e MySQL",
          "O que será ensinado sobre Data WareHouse",
          "Por que será usado o objeto Pessoa no curso inteiro"
        ],
        "O que é Programação Orientada a Objetos": [
          "Introdução",
          "O que é Programação Orientada a Objetos",
          "O que são Classes",
          "O que são Objetos",
          "O que é um objeto concreto e abstrato?",
          "O que são atributos ou propriedades e métodos ou comportamentos?"
        ],
        "Criação de Objetos": [
          "Introdução",
          "Introdução e o que é a ferramenta Astah",
          "Como fazer o primeiro projeto no Astah",
          "O objeto Pessoa Parte I",
          "O objeto Pessoa Parte II",
          "O objeto Carro",
          "O objeto Casa",
          "O objeto Conta Bancária",
          "O objeto Curso",
          "O objeto Livro",
          "O objeto Venda",
          "O objeto Sentimento",
          "O objeto Animal",
          "O objeto Consulta"
        ],
        "Mais sobre Orientação a Objetos": [
          "Introdução",
          "Os pilares da Orientação a Objeto",
          "O que é Encapsulamento?",
          "Exemplos de Encapsulamento",
          "O que é Herança?",
          "Classes Abstratas",
          "O que é Polimorfismo?",
          "Exemplos de Polimorfismo",
          "Resumo de Herança e Polimorfismo",
          "Interface Parte I",
          "Interface Parte II",
          "Classes Estáticas"
        ],
        "Modelando os Objetos": [
          "Introdução",
          "Quando é Associação e quando é Herança",
          "Agregação e Composição",
          "Generalização",
          "Passando para o Código Parte I",
          "Passando para o Código Parte II",
          "Passando para o Código Parte III",
          "Passando para o Código Parte IV",
          "Modelagem do Objeto Pessoa e suas Associações",
          "Continuando",
          "Continuando com a modelagem",
          "Continuando",
          "Aplicando Herança e Associação"
        ],
        "Projeto de um Help Desk Generico": [
          "Introdução",
          "Diagrama Caso de Uso",
          "Diagrama De Classes Parte I",
          "Diagrama De Classes Parte II",
          "Diagrama De Classes Parte III"
        ]
      },
      "requirements": [
        "POSSUA CONHECIMENTO INICIAL NAS LINGUAGENS DESCRITAS NO TÍTULO DO CURSO",
        "GOSTAR DE LER E PESQUISAR SOBRE AS LINGUAGENS DE PROGRAMAÇÃO",
        "PESSOAS QUE JÁ CONHECE AS LINGUAGENS MAS QUE QUER APROFUNDAR SOBRE O ASSUNTO",
        "PESSOAS QUE QUEIRAM USAR COM UM GUIA DE REFERÊNCIA"
      ],
      "description": "INDICADO PARA PESSOA QUE BUSCAM CONHECIMENTO DE VÁRIAS LINGUAGENS E PRINCIPALMENTE SOBRE ORIENTAÇÃO A OBJETOS E QUE PROCURAM APRENDER NOVAS TECNOLOGIAS DE FORMA SIMPLES E BEM DIDÁTICA.\nNESTE CURSO VOCÊ APRENDERÁ OS CONCEITOS DE ORIENTAÇÃO A OBJETO EM VÁRIAS LINGUAGENS PARA INTENDER AS DIFERENTES SINTAXES E USAR A QUAL É EXTREMAMENTE NECESSÁRIA NO SEU TRABALHO OU ESTUDO. DESTA FORMA VERÁ QUE TEM POUCAS DIFERENÇAS NAS LINGUAGENS E QUE O MERCADO HOJE NECESSITA DE UM CONHECIMENTO DE MAIS DE UMA LINGUAGEM.\nDEPOIS DE APRENDER OS CONCEITOS DE ORIENTAÇÃO VERÁ SOBRE MODELAGEM DE BANCO DE DADOS EM MYSQL E TAMBÉM ESTUDAREMOS SOBRE BI - BUSINESS INTELLIGENCE COM DATA WAREHOUSE PARA APLICAR DE UMA FORMA PRÁTICA A CRIAÇÃO DE UM PROJETO REAL.\nSERÁ ESTUDADO OS PRINCIPAIS CONCEITOS PARA INICIAR UM PROJETO DE SOFTWARE COM AS COLETAS DE DADOS, QUESTÃO FUNDAMENTAL PARA O DESENVOLVIMENTO DE UMA PLICAÇÃO PORQUE SEM DADOS NÃO TEM APLICAÇÃO.",
      "target_audience": [
        "ESTUDANTES E PESSOAS QUE TRABALHAM COM PROGRAMAÇÃO"
      ]
    },
    {
      "title": "Programación Orientada a Objetos con Java",
      "url": "https://www.udemy.com/course/programacion-orientada-a-objetos-con-java-b/",
      "bio": "Programación orientada a objetos con Java",
      "objectives": [
        "Conocerás y utilizarás las técnicas de programación orientación a objetos",
        "Aprenderás a utilizar las clases de uso general de Java Estándar",
        "Serás capaz de acceder a ficheros desde una aplicación Java",
        "Conocerás y aplicarás las características más potentes de la versión Java 8, como las expresiones lambda y los streams",
        "Aprenderás a acceder a bases de datos relacionales desde una aplicación Java"
      ],
      "course_content": {
        "Clases de Java Estándar": [
          "Presentación del curso",
          "El entorno de desarrollo",
          "Clases, objetos y métodos",
          "La clase Math",
          "Obtención de un número aleatorio",
          "Ejercicio práctico: Generación combinación de lotería",
          "Lanzamiento de un dado",
          "La clase String",
          "La clase StringBuilder",
          "Manipulación de un texto",
          "Ejercicio práctico: Invertir cadena de texto",
          "Clases de envoltorio",
          "Cálculo valor medio",
          "Colecciones I",
          "Manipulación de una lista",
          "Ejercicio práctico: Gestión de notas parte 1",
          "Ejercicio práctico: Gestión de notas parte 2",
          "Colecciones II",
          "Funcionamiento de una tabla",
          "Ejercicio práctico: Agenda de contactos parte 1",
          "Ejercicio práctico: Agenda de contactos 4 parte 2",
          "La librería lombok",
          "Colecciones III",
          "Clases de fecha y hora",
          "Ejercicio práctico: Gestión de piezas",
          "Gestor de pedidos",
          "Clases de entrada y salida",
          "Acceso a ficheros",
          "Ejercicio práctico: Agenda de contactos con ficheros",
          "Ejercicio propuesto 1"
        ],
        "Orientación a Objetos": [
          "Introducción a la orientación a objetos",
          "Herencia parte 1",
          "Herencia parte 2",
          "Ejercicio práctico: Jerarquía clases Cuenta",
          "Ejercicio práctico: Herencia BufferedReader",
          "Sobrecarga y sobrescritura",
          "Identificar sobrecarga y sobrescritura",
          "Ejercicio práctico: Clase CuentaMovimeintos parte 1",
          "Ejercicio práctico: Clase CuentaMovimeintos parte 2",
          "Creación de lista numérica mediante herencia",
          "Clases abstractas",
          "Ejercicio práctico: Jerarquía figuras geométricas",
          "Polimorfismo",
          "Ejercicio práctico: Polimorfismo figuras",
          "Ejercicio propuesto 2",
          "Ejercicio propuesto 3"
        ],
        "Interfaces": [
          "Interfaces",
          "Ejercicio práctico: Interfaz Proceso",
          "Ejercicio práctico: Polimorfismo en interfaces",
          "Interfaces en Java 8",
          "Métodos de factoria en interfaces de colección",
          "Expresiones lambda parte 1",
          "Expresiones lambda parte 2",
          "Implementar interfaces mediante lambdas",
          "Ejercicio práctico: Mejora programa de notas",
          "Interfaces funcionales en Java 8",
          "Trabajando con interfaces java.util.function",
          "Manipulación de listas con lambdas",
          "Ejercicio práctico: Utilización nuevos métodos colección parte 1",
          "Ejercicio práctico: Utilización nuevos métodos colección parte 2",
          "Ejercicio propuesto 4"
        ],
        "Streams": [
          "Introducción a los streams",
          "Operaciones intermedias con streams",
          "Operaciones finales con streams",
          "Manipular array de cadenas",
          "Ejercicio práctico: Ejemplo de aplicación de métodos de Stream parte I",
          "Ejercicio práctico: Ejemplo de aplicación de métodos de Stream parte II",
          "Operaciones con los números de una lista",
          "Ejercicio práctico: Mejora de agenda de contactos con streams parte 1",
          "Ejercicio práctico: Mejora de agenda de contactos con streams parte 2",
          "Búsqueda de ciudad más poblada"
        ],
        "Testing": [
          "Testing con JUnit",
          "JUnit en la práctica: testeo de GestionContactos"
        ],
        "Acceso a ficheros": [
          "Acceso a ficheros con java nio",
          "Temperaturas extremas",
          "Cálculo con los datos de un fichero",
          "Ejercicio práctico: Agenda contactos con java.nio parte 1",
          "Ejercicio práctico: Agenda contactos con java.nio parte 2",
          "Ejercicio práctico: Gestor de alumnos fichero csv parte 1",
          "Ejercicio práctico: Gestor de alumnos fichero csv parte 2",
          "Ejercicio práctico: testing JUnit en Gestor de alumnos",
          "Ejercicio propuesto 5",
          "Examen final"
        ],
        "Acceso a bases de datos": [
          "Bases de datos",
          "Instalación de MySQL",
          "Fundamentos de JDBC",
          "Acceso a datos con JDBC: operaciones de acción",
          "Acceso a datos con JDBC: operación de recuperación de datos",
          "Ejercicio práctico: Agenda de contactos en base de datos parte 1",
          "Ejercicio práctico: Agenda de contactos en base de datos parte 2",
          "Ejercicio práctico: Agenda de contactos en base de datos parte 3",
          "Ejercicio práctico: Agenda de contactos en base de datos parte 4"
        ],
        "Aplicaciones multitarea": [
          "Introducción a la multitarea",
          "Ejemplo de código de aplicación de la multitarea",
          "Ejercicio práctico: Generación de tablas de multiplicar concurrentes",
          "El paquete java.util.concurrent",
          "La interfaz Callable",
          "Ejercicio práctico: Cálculos de factoriales de manera concurrente",
          "Futuros completos: La clase CompletableFuture",
          "Ejercicio práctico: Cálculo de factoriales con CompletableFuture",
          "Virtual Threads",
          "Creación de Virtual Thread vs Platform Thread",
          "Ejercicio práctico: Tablas de multiplicar concurrentes con Virtual Threads",
          "Escritura concurrente en fichero"
        ],
        "Novedades últimas versiones": [
          "Novedades en Java 9",
          "Novedades Java 10",
          "Novedades en Java 11 (LST)",
          "Novedades en Java 13 y 14",
          "Ejercicio práctico gestión de contactos con records",
          "Novedades en Java 15",
          "Novedades de Java 16",
          "Novedades de Java 17 (LST)"
        ],
        "Utilización de Github Copilot": [
          "Fundamentos de copilot e instalación de plugin para eclipse",
          "Desarrollo de aplicación gestión de cursos con copilot"
        ]
      },
      "requirements": [
        "Debes conocer la sintaxis y fundamentos del lenguaje Java"
      ],
      "description": "En este curso , por un lado, presentamos las clases básicas utilizadas en la creación de todo tipo de aplicaciones Java y, por otro, analizamos los conceptos de orientación a objetos y su aplicabilidad en la creación de programas. Los conceptos de orientación a objetos, como Herencia, Sobrescritura, Polimorfismo, etc., son claves para la realización de desarrollos profesionales, así como para comprender y utilizar librerías y frameworks basados en Java\nDedicamos también unas lecciones al estudio de las expresiones lambda, una de las grandes novedades que se incorporaron a partir de la versión Java 8, y sus aplicaciones en la manipulación de conjuntos de datos a través de streams. Sin olvidar el estudio de las clases de entrada/salida para el almacenamiento de información en ficheros, el acceso a bases de datos relacionales.\nOtro aspecto importante tratado en el curso es la creación de aplicaciones multitarea. Desde la utilización de los elementos tradicionales como la clase Thread y la interfaz Runnable, hasta los más modernos como los Virtual Threads.\nNo podemos olvidar la importancia que está teniendo cada vez la Inteligencia Artificial en el desarrollo software, por lo que dedicamos también una sección a enseñarte a utilizar Github Copilot, como asistente de generación de código basado en IA.\nLa realización de este curso te proporcionará sin duda una sólida formación del lenguaje Java y las APIs básicas, que te permitirá afrontar con total garantías en posteriores formaciones el estudio de las librerías y tecnologías especializadas en la creación de diferentes tipos de aplicaciones, como Android, Java EE, Spring, etc.",
      "target_audience": [
        "El curso está pensado para personas cono conocimientos básicos del lenguaje Java, que quieran conocer los aspectos avanzados del mismo",
        "Si has realizado el curso de fundamentos de programación Java y quieres seguir avanzando en el aprendizaje de esta tecnología, este es tu siguiente curso"
      ]
    },
    {
      "title": "JSF - Java Server Faces 2.0",
      "url": "https://www.udemy.com/course/jsf-java-server-faces-20/",
      "bio": "Learn Java with this Web framework that will bring productivity and enjoyment of programming.",
      "objectives": [
        "Desenvolver aplicativos ricos para web com JSF 2.0",
        "Criar softwares para web em Java sem uso de JSP e Servlets diretamente",
        "Programar de um jeito produtivo e elegante",
        "Conhecer técnicas de Ajax",
        "Dominar o padrão arquitetural MVC centrado em componentizações"
      ],
      "course_content": {
        "Java EE": [
          "Apresentação das tecnologias",
          "Continuação da apresentação",
          "Instalações de ferramentas",
          "Servidor Glassfish",
          "Glassfish Adapter",
          "JBoss Tools",
          "Configurações no Eclipse"
        ],
        "Apresentação do Projeto": [
          "Início do Projeto"
        ],
        "Nivelamento em JPA": [
          "Entities e Herança",
          "Subclasses e Embedded",
          "Relacionamentos",
          "Fetch e Cascade"
        ],
        "Fundamentos de JSF 2.0": [
          "JSF Básico",
          "JSF Prática 1",
          "JSF Prática 2"
        ],
        "Ciclo de Vida": [
          "Ciclo de Vida 1",
          "Ciclo de Vida 2"
        ],
        "View Components": [
          "View Components 1",
          "View Components 2",
          "View Components 3"
        ],
        "Miscelânea": [
          "JSF Bundles 1",
          "JSF Bundles 2",
          "Validadores e Conversores",
          "Listeners e Navegação"
        ],
        "Facelets": [
          "Templates",
          "Tag Components"
        ],
        "Ajax": [
          "Fundamentos",
          "Ajax Suporte Nativo",
          "PrimeFaces",
          "RichFaces"
        ],
        "Managed Beans": [
          "Managed Beans 1",
          "Managed Beans 2",
          "Dependency Injection 1",
          "Dependency Injection 2",
          "Client Behavior",
          "Bean Validation"
        ]
      },
      "requirements": [
        "Programação em Java",
        "Noções básicas de programação para web"
      ],
      "description": "Este curso foi criado como um módulo de uma formação completa para desenvolvedores Java EE 6 da Especializa Treinamentos.\nAbrange conceitos aprofundados de programação corporativa em Java, iniciando com um nivelamento em JPA (Java Persistence API) para quem não conhece esta especificação, passando pelos fundamentos do JSF como ciclo de vida, validadores e conversores até aprofundamentos em managed e backing beans, client behaviors, Ajax nativo e a especificação Bean Validation.",
      "target_audience": [
        "Programadores Java"
      ]
    },
    {
      "title": "Oracle PL/SQL, Veritabanı Programlama-Sıfırdan İleri Düzeye",
      "url": "https://www.udemy.com/course/oracle-plsql-veritaban-programlama-sfrdan-ileri-duzeye/",
      "bio": "Profesyoneller İçin. PL / SQL Öğren-Veritabanlarını Yönet, Hızlı Programlar Yaz. Bir Adım Öne Geç",
      "objectives": [
        "A'dan Z'ye PL/SQL",
        "PL/SQL Veri Yapıları",
        "(CREATE, ALTER, DROP) Olay Tetikleyicileri (DDL Event TRIGGERS)",
        "PL/SQL Blok Yapıları",
        "Blok içinde PROCEDURE ve FUNCTION",
        "Basit Veri Tipleri",
        "Standalone ve Stored PROCEDURE ve FUNCTION",
        "Büyük Veri Tipleri (LOBs)",
        "Paket (PACKAGE)",
        "Kullanıcı Tanımlı Veri Tipleri (User Defined Data Type)",
        "Dynamic SQL, Dynamic DDL",
        "(INSERT, UPDATE, DELETE) Olay Tetikleyicileri (DML Event TRIGGERS)",
        "PL/SQL içinde JAVA Class’ları çalıştırmak (Bonus Ders)…",
        "PDF Formatında 110 sayfa Referans Kitap",
        "***Derslerin sonunda ÖDÜLLÜ ALIŞTIRMA ÖDEVLERİ vardır***",
        "*** \"Öğrenciyim\", \"Yeni Mezunum\", \"Maddi Durumum İyi Değil\" diyorsanız bana mail yazınız. Gereği Yapılır ***"
      ],
      "course_content": {
        "Oracle Database 12c Nasıl Download Edilir?": [
          "Oracle Database 12c Nasıl Download Edilir?"
        ],
        "Genel Bilgi | Alt Yapı | PL/SQL Nedir?": [
          "PL/SQL Nedir? | Kimleri İlgilendiriyor? | Avantajları?| Gerekli Altyapı?",
          "DB Kullanıcı Create|Sqlplus- SqlDeveloper Connection |Table Create"
        ],
        "PL/SQL Giriş": [
          "PL/SQL Kod Yapısı | İlk Program | PL/SQL Dünyasına Hoş Geldiniz!",
          "Ayraçlar | Semboller| Operatörler | PL/SQL Hangi İşler İçin Kullanılır?"
        ],
        "PL/SQL Veri Tipleri": [
          "Sayısal Veri Tipleri | Örnek Programlar",
          "Karakter Veri Tipleri | Örnek Programlar",
          "Tarih Veri Tipleri ve Parametreleri | Örnek Programlar",
          "Large Object (LOB) Veri Tipleri | Create DIRECTORY | Örnekler | Resim Giriş Prog",
          "Large Object (LOB) Veri Tipleri (Devam)",
          "Referans Veri Tipleri (%TYPE) | Örnekler",
          "Referans Veri Tipleri (%ROWTYPE) | Örnekler",
          "Kullanıcı Tanımlı Veri Tipleri -( User Defined SubTypes) | Örnekler"
        ],
        "Değişkenler (Variables) | Sabitler (Constants)": [
          "Değişken (Variable), Sabit (Constant) Tanımlamak 1| Örnekler",
          "Değişken (Variable), Sabit (Constant) Tanımlamak 2 | Örnekler",
          "Değişken Kapsam Alanı (Variable Scope) | Örnekler",
          "Değişkene Değer Atamak | SELECT … INTO | Örnekler"
        ],
        "PL/SQL OPERATÖRLER": [
          "Tanımlar | Sayısal (Aritmetik) Operatörler | Örnekler"
        ],
        "Koşullu İfadeler (Conditions) | IF | CASE": [
          "IF Yapıları | Örnekler",
          "CASE | Örnekler"
        ],
        "Döngüler (LOOPS)": [
          "LOOP .. END LOOP | Örnekler",
          "WHILE LOOP | Örnekler",
          "FOR LOOP | Örnekler",
          "NESTED LOOPS | Örnekler"
        ],
        "Diziler (ARRAYS)": [
          "TYPE … VARRAY | Örnekler",
          "Dizilere Veri Girişi | Dizi Elemanlarına Erişim | Örnekler",
          "TABLE Operatörü İle VARRAY Okumak | Select … FROM TABLE(VARRAY) | Örnekler",
          "Dizilere Veri Girişi | Dizi Elemanlarına Erişim | LOOP Örneği",
          "Dizilere Veri Girişi | Dizi Elemanlarına Erişim | FROM TABLE Örneği"
        ],
        "İmleçler (CURSORS)": [
          "Hazır (Implicit) Cursorlar (%FOUND | %NOTFOUND | %ROWCOUNT) Örnekler",
          "Kullanıcı Tanımlı (User Defined-Explicit ) Cursors 1 | %TYPE",
          "Kullanıcı Tanımlı (User Defined-Explicit ) Cursors 2 | %ROWTYPE",
          "Parametreli Cursors (1)",
          "Parametreli Cursors (2)"
        ]
      },
      "requirements": [
        "Temel SQL Bilgisi Gereklidir. (\"Oracle SQL, Sıfırdan İleri Düzeye\" Derslerime Bakınız)"
      ],
      "description": "*** \"Öğrenciyim\", \"Yeni Mezunum\", \"Maddi Durumum İyi Değil\" diyorsanız bana mail yazınız. Gereği Yapılır ***\n*\nBurada yayınladığım SQL ve PL/SQL derslerini bir dersaneye kayıt olarak almak istediğinizde 3500 -6000 TL arasında para ödemeniz gerekir.\nÜstelik o kurslarda burada öğrenecekleriniz kadar da öğrenemezsiniz.\n**\nBu derslerde, veritabanı uygulamaları ve programlama kapsamında, dilin sözdizimini (Syntax), yapısını ve özelliklerinin tamamını kapsayan PL / SQL veritabanı programlama dili hakkında A’dan Z’ye her şey...\nVeritabanında depolanan program birimlerinin temel biçimini ve yapısını anlamanın yanında;\nSaklı Yordamlar (Stored Procedure),\nİşlevler (Function),\nPaket Programlar (Package),\nVeritabanı Tetikleyicileri (DML Triggers, DDL Triggers)\nŞema Bazında Dinleme ve İz takibi (Schema Level AUDIT Logs)\nVeritabanı Bazında (Database Level) Dinleme ve İz takibi (Database Level AUDIT Logs)\n...\ngibi pek çok konuda program oluşturup çalıştırabileceksiniz.\nİlave olarak;\nKoşullu İfadeler (Conditions - IF … CASE) yapıları,\nDöngüler (LOOPS),\nDiziler (ARRAYS, VARRAYS),\nTYPE ve RECORDS,\nDinamik DDL İşlemleri (EXECUTE IMMEDIATE),\nİmleçler (CURSORS), Parametreli İmleçler (Parametric CURORS),\nHazır İmleçler (%TYPE, %ROWTYPE,…)\ngibi ileri düzey programlama teknikleri de örneklerle anlatılmıştır.\nTüm örnek programlarda; Oracle 12c DataBase sertifikasyon sınavları ile SQL ve PL/SQL sertifikasyon sınavlarında kullanılan demo tablolar üzerinde çalışmalar yapılmıştır.\n**\nPL/SQL programları içinden JAVA Class çalıştırma konusu da BONUS ders olarak eklenmiştir.\n**\nYerli ve yabancı iş ilanlarında en çok PL/SQL Developer iş ilanları yayınlanmaktadır.\nKariyerinizi ileri düzeyde PL/SQL Developer olarak devam etmek istiyor musunuz?\nCevabınız “EVET” ise bu dersime üye olmalısınız…\n**\nDeğerli arkadaşlarım,\nMail aracılığıyla çokça soru gelmektedir. Bazı sorular bazen gözümden kaçmakta ve cevap vermekte gecikmekteyim. O yüzden bir Face Grubu oluşturdum. Bu gruba üye olup sorularınızı buradan sorarsanız sizlere daha çabuk cevap verebilirim. Anlayışınıza teşekkür ederim.",
      "target_audience": [
        "Oracle Veritabanı Programlamayı Uzmanından Öğrenmek İsteyen Herkes Bu derse Katılabilir..."
      ]
    },
    {
      "title": "Máster en C# 2021: Xamarin, Blazor, Bases de Datos",
      "url": "https://www.udemy.com/course/curso-completo-c-sharp/",
      "bio": "Aprende C#, utilizando Visual Studio y .NET para desarrollar apps con Xamarin, Blazor, ASP.NET, Unity",
      "objectives": [
        "Los estudiantes aprenderán a programar con el lenguaje C#"
      ],
      "course_content": {
        "Introducción a C#": [
          "Instalando Visual Studio",
          "Obteniendo Licencia de Visual Studio Community",
          "Conociendo Visual Studio",
          "Creando nuestro primer proyecto en Visual Studio",
          "Examinando el archivo Program",
          "Escribiendo nuestro primer Hola Mundo",
          "Comentarios en C#",
          "IMPORTANTE: Accede al Grupo Privado y Exclusivo",
          "Únete al grupo privado"
        ],
        "Trabajando con Variables, Operadores y Expresiones": [
          "¿Qué es una variable? ¿Qué son los tipos de datos?",
          "Conociendo los tipos de datos int, long, float, double y decimal",
          "Enunciados, identificadores y palabras clave",
          "¿Cómo declarar una variable?",
          "Conociendo los tipos de datos bool, char y string",
          "Operadores aritméticos",
          "Concatenando cadenas",
          "La importancia de los operandos",
          "El operador Residuo (%)",
          "Números infinitos y NaN",
          "Precedencia y Asociatividad",
          "Incremento y Decremento de Variables",
          "Variables locales declaradas implícitamente"
        ],
        "Métodos en C#": [
          "¿Qué es un método?",
          "Creando métodos en C#",
          "Conociendo la depuración",
          "Parámetros en un método",
          "Regresando resultados de un método",
          "Métodos con cuerpo de expresión",
          "Retornando más de un valor de un método",
          "Ámbito de una variable",
          "Sobrecarga de métodos",
          "Métodos anidados",
          "Parámetros opcionales",
          "Argumentos con nombre",
          "Tips con Visual Studio"
        ],
        "El enunciado de decisión if": [
          "Expresiones Booleanas",
          "Variables booleanas",
          "Operador Not",
          "Operadores de igualdad y de desigualdad",
          "Operadores Relacionales",
          "Operadores Lógicos",
          "La Sentencia de control if",
          "Evaluando varios casos con if else",
          "La sentencia de control Switch"
        ],
        "Ciclos": [
          "Operador de asignacion compuesto",
          "Ciclo While",
          "Ciclo for",
          "Ciclo Do While"
        ],
        "Manejando errores a través de Excepciones": [
          "¿Qué es una excepción?",
          "El método Parse",
          "Estructura try - catch",
          "El tipo de excepción \"Exception\"",
          "Chequeo de operaciones aritméticas a través de checked y unchecked",
          "Lanzando excepciones a propósito",
          "Bloque finally"
        ],
        "Clases y Objetos": [
          "Entendiendo el concepto de clasificación",
          "Pilares de la POO – Encapsulamiento",
          "¿Qué es una clase?",
          "Creando nuestra primer clase",
          "Definiendo métodos para nuestra clase",
          "Creando instancias de una clase",
          "Controlando la accesibilidad a nuestras clases",
          "Constructores de una clase",
          "Sobrecarga de constructores",
          "Deconstruyendo un objeto",
          "Métodos estáticos",
          "Campos compartidos",
          "Campos compartidos constantes",
          "Clases estáticas",
          "Enunciados using estáticos",
          "Clases anónimas"
        ],
        "Tipos valor y tipos referencia": [
          "Comprendiendo los tipos valor y tipos referencia",
          "Declarando tipos por valor y por referencia",
          "Valores nulos",
          "El operador null condicional",
          "Usando tipos Nullable",
          "Definiendo parámetros ref",
          "Definiendo parámetros out",
          "La clase System.Object",
          "Boxing y Unboxing",
          "Los operadores is y as"
        ],
        "Creando tipos valor a través de enumeraciones": [
          "¿Porqué usar enumeraciones?",
          "Declarando una enumeración y resolviendo la problemática",
          "Utilizando enumeraciones como parámetros",
          "Imprimiendo los valores de una enumeración",
          "Convirtiendo una enumeración en nullable",
          "Uso de operadores con enumeraciones",
          "Trabajando con los valores numéricos de una enumeración",
          "Escogiendo el tipo de dato de los valores de una enumeración"
        ],
        "Creando tipos por valor a través de Estructuras": [
          "¿Qué es una estructura y cómo se declaran?",
          "Diferencias entre una clase y una estructura",
          "¿Cómo se inicializa una estructura?",
          "Copiando valores de una estructura"
        ]
      },
      "requirements": [
        "Tener muchas ganas de aprender, siendo autodidácta"
      ],
      "description": "** ¡¡¡Nuevo contenido todas las semanas !!!**\n¡Hola! Soy Héctor Pérez, Microsoft MVP en Developer Technologies.\n¿Eres nuevo en el mundo de la programación, y quieres volverte experto en uno de los lenguajes de programación, más demandados por las empresas actualmente?\nÓ, tal vez ya eres un desarrollador con años de experiencia, pero sientes que escuchas términos en videos ó en publicaciones, y no sabes  de dónde salió dicha funcionalidad?\nSi alguno de los dos, es tu caso, entonces déjame decirte, ¡que este curso es el indicado para tí!\nDespués de impartir el curso numerosas veces para empresas y universidades, he recopilado un temario y una estrategia, que va tocando los temas del lenguaje paso a paso, de tal forma que no se vea un tema sin comprender otro, como pasa en muchos cursos, en donde los instructores piensan que están tratando con profesionales en el lenguaje.\n¿Porqué debería aprender C#?\nDéjame comentarte, que en mi experiencia personal, como desarrollador Full Stack .NET, con más de 10 años de experiencia de desarrollo y certificado en dicha tecnología, no hay semana en la cual no me lleguen ofertas de trabajo de empresas, que quieren que trabaje con ellos, ofreciéndome una buena compensación económica. Sin embargo, suelo declinar ante este tipo de ofertas, ya que prefiero realizar cursos como este, que ayuden a más gente a que pueda desenvolverse en el ámbito profesional, y que a la vez puedan tener una buena calidad de vida.\nSin embargo, si te vuelves un experto en la materia, empezando con este curso, seguramente pronto tendrás a varios reclutadores siguiéndote la pista.\n¿Qué incluye el curso?\nEl curso cubre los temas más importantes que necesitas saber al empezar a aprender el lenguaje de programación C#. A continuación, dejo el listado del temario:\n\n\n- Instalación y configuración del IDE\n- Variables, operadores y expresiones\n- Métodos\n- Enunciado If\n- Ciclos\n- Excepciones\n- Uso de clases\n- Tipos valor y tipos referencia\n- Enumeraciones\n- Estructuras\n- Creación de aplicaciones multiplataforma con Xamarin Forms\n- Creación de aplicaciones web con Blazor\n- Programación Orientada a Objetos\n- Creación de Web API´s\n- Creación de videojuegos con Unity (en camino)\n- ¡Y muchos temas más que vienen en camino! (Todas las semanas encontrarás material nuevo)\n\n\nPor mucho, es el mejor curso que encontrarás de C# del 2019, ya que por cada tema, cubro todas las formas posibles de trabajar en el lenguaje con dicho tema.\nAsí que...  ¡No lo pienses más y te espero en el curso!",
      "target_audience": [
        "Programadores que inician en el mundo de la programación",
        "Desarrolladores profesionales que busquen actualizar sus conocimientos del lenguaje"
      ]
    },
    {
      "title": "Desarrolla Sistemas en C# .Net - 4 capas con SQL Server",
      "url": "https://www.udemy.com/course/desarrolla-sistemas-c-sharp-net-sql-server-4-capas-poo/",
      "bio": "Desarrolla Sistemas en C# .Net, SQL Server, 4 Capas, POO, Windows Forms, Visual Studio IDE- Incluye PROYECTO FINAL",
      "objectives": [
        "Desarrollar un sistema de escritorio en el lenguaje de programación C# .Net con la última versión del Net Framework.",
        "Implementar una arquitectura de desarrollo en capas robusta, escalable y mantenible en C# .Net.",
        "Diseño de Windows Forms.",
        "Usar código de barras en Windows Form.",
        "Diseño de base de datos en SQL Server, tablas y columnas, relaciones, procedimientos almacenados, triggers.",
        "Mantenimientos CRUD de tablas independientes, relacionales y maestro/detalle.",
        "Exportar reportes Excel, PDF, Word.",
        "Gestión de usuarios, permisos y roles, autenticación y autorización.",
        "Implementación de sistemas de gestión de información de escritorio."
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Proyecto final del curso",
          "Recursos y material de apoyo",
          "Descarga e Instalación de Visual Studio 2019"
        ],
        "BASE DE DATOS": [
          "Modelo Entidad Relación de la Base de datos",
          "Creando la base de datos en SQL Server"
        ],
        "ARQUITECTURA DEL PROYECTO": [
          "Arquitectura diseño en 4 Capas de la solución",
          "Creando la solución en capas en Visual Studio 2019"
        ],
        "ACCESO A DATOS": [
          "Conexión a la base de datos en SQL Server",
          "Alternativa de conexión a la base de datos en SQL Server"
        ],
        "MANTENIMIENTO CRUD": [
          "CAPA ENTIDADES: Creando la primera entidad",
          "CAPA DATOS: Creando los procedimientos almacenados para el CRUD",
          "CAPA DATOS: Clase de acceso a Datos",
          "CAPA NEGOCIO: Clase de Lógica del Negocio",
          "CAPA PRESENTACION: Agregando el formulario principal MDI",
          "CAPA PRESENTACION: Creando las opciones de Menú y el Formulario de mantenimiento",
          "CAPA PRESENTACION: Listar registros",
          "CAPA PRESENTACION: Buscar registros",
          "CAPA PRESENTACION: Insertar Registros, validaciones",
          "CAPA PRESENTACION: Actualizar Registros",
          "CAPA PRESENTACION: Eliminar registros",
          "CAPA PRESENTACION: Activar/Desactivar registros",
          "PROYECTO FINAL – Mantenimiento Categorías"
        ],
        "MANTENIMIENTO CRUD TABLA ARTICULO": [
          "CAPA ENTIDADES: Entidad Articulo",
          "CAPA DATOS: Procedimientos almacenados para el CRUD de artículos",
          "CAPA DATOS: Clase de acceso a Datos DArticulo",
          "CAPA NEGOCIO: Clase Lógica del Negocio NArticulo",
          "CAPA PRESENTACION: Listar y buscar Artículos",
          "CAPA PRESENTACION: Listar las categorías en un ComboBox",
          "CAPA PRESENTACION: Cargar Imagen en nuestro proyecto",
          "CAPA PRESENTACION: Generar y guardar código de barras",
          "CAPA PRESENTACION: Insertar Artículos",
          "CAPA PRESENTACION: Actualizar Artículos",
          "CAPA PRESENTACION: Eliminar, activar, desactivar Artículos",
          "PROYECTO FINAL - Mantenimiento de Artículos"
        ],
        "MANTENIMIENTO USUARIO Y ROLES": [
          "Gestión de roles del usuario",
          "CAPA ENTIDADES: Entidad Usuario",
          "CAPA DATOS: Procedimientos almacenados para el CRUD de Usuarios",
          "CAPA DATOS: Clase de acceso a Datos DUsuario",
          "CAPA NEGOCIO: Clase Lógica del Negocio NUsuario",
          "CAPA PRESENTACION: Listar y buscar Usuarios",
          "CAPA PRESENTACION: Listar los roles en un ComboBox",
          "CAPA PRESENTACION: Insertar usuarios, encriptar password",
          "CAPA PRESENTACION: Actualizar Usuarios",
          "CAPA PRESENTACION: Eliminar, activar, desactivar Usuarios",
          "PROYECTO FINAL - Mantenimiento de Usuarios y roles"
        ],
        "ACCESO AL SISTEMA": [
          "LOGIN: Procedimiento almacenado para gestionar acceso",
          "LOGIN: Acceso a datos y Negocio",
          "LOGIN: Formulario de acceso",
          "LOGIN: Permisos de acceso según rol",
          "LOGIN: Salir del sistema",
          "PROYECTO FINAL - Gestión acceso al Sistema"
        ],
        "MANTENIMIENTO PERSONAS": [
          "CAPA ENTIDADES: Entidad Persona",
          "CAPA DATOS: Procedimientos almacenados para el CRUD de Personas",
          "CAPA DATOS: Clase de acceso a Datos DPersona",
          "CAPA NEGOCIO: Clase Lógica del Negocio NPersona",
          "CAPA PRESENTACION: Listar y buscar Proveedores",
          "CAPA PRESENTACION: Insertar Proveedores",
          "CAPA PRESENTACION: Actualizar Proveedores",
          "CAPA PRESENTACION: Eliminar Proveedores",
          "CAPA PRESENTACION: Mantenimiento CRUD de Clientes",
          "PROYECTO FINAL - Mantenimiento de Personas (Clientes - Proveedores)"
        ],
        "MANTENIMIENTO TABLA MAESTRO/DETALLE - INGRESO": [
          "CAPA ENTIDADES: Entidad Ingreso",
          "CAPA DATOS: Procedimientos Almacenados CRUD Ingresos Almacén",
          "CAPA DATOS: Clase de Acceso a Datos",
          "CAPA NEGOCIO: Clase Lógica de Negocio Ingreso",
          "CAPA PRESENTACION: Listado y Búsqueda de ingresos",
          "CAPA PRESENTACION: Formulario de Ingreso",
          "CAPA PRESENTACION: Seleccionar Proveedor",
          "CAPA PRESENTACION: Agregar Artículo por código de barras",
          "CAPA PRESENTACION: Buscar y agregar artículo al detalle",
          "CAPA PRESENTACION: Validar que no se agreguen artículos repetidos",
          "CAPA PRESENTACION: Calcular totales, actualizar la cantidad y el importe",
          "CAPA PRESENTACION: Eliminar detalle del ingreso",
          "CAPA PRESENTACION: Insertar Ingreso",
          "CAPA PRESENTACION: Trigger actualizar stock",
          "CAPA PRESENTACION: Mostrar Ingreso",
          "CAPA PRESENTACION: Anular Ingreso",
          "Actualizar Stock después de anular Ingreso",
          "PROYECTO FINAL - Gestión de compras"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación.",
        "Tener instalado Microsoft Visual Studio.",
        "Tener instalado SQL Server."
      ],
      "description": "Durante este curso te mostraremos como desarrollar un sistema de gestión de información de escritorio utilizando el lenguaje de programación C# .Net con la última versión del Net Framework, SQL Server como gestor de base de datos utilizando procedimientos almacenados para comunicarse con la capa datos, trabajaremos con Windows Forms, utilizaremos el IDE Microsoft Visual Studio 2019 (Puedes utilizar la versión 2022 sin problema); la organización del proyecto estará definida en una arquitectura por capas, robusta, escalable y mantenible.\nDesarrollaremos como proyecto final un sistema de escritorio de gestión de compras y ventas completo y desde cero, este sistema tendrá las funcionalidades de CRUD de tablas independientes, CRUD de tablas relacionales, CRUD de tablas maestro detalles, gestión de accesos y autorizaciones, consultas y reportes.\nCaracterísticas del proyecto final a desarrollar:\n* Módulo Almacén\nArtículos: Gestión de todos los artículos, teniendo en cuenta su categoría, código de barras, nombre, el stock en almacén, precio de venta, una descripción y una imagen referencial. Generar e imprimir código de barras.\nCategorías: Gestión de las categorías, que permiten tener una clasificación de los artículos.\n\n\n* Módulo Compras\nProveedores: Gestión de tus proveedores, teniendo en cuenta su nombre/razón social, tipo y número de documento, dirección, email, teléfono.\nIngresos: Gestión de compras o Ingresos almacén teniendo en cuenta el proveedor, la fecha de ingreso o compra, el tipo de comprobante (Boleta, Factura, Ticket) y número de comprobante emitido por el proveedor, el impuesto; el ingreso tendrá detalles que harán referencia al artículo que esta ingresando, se permitirá realizar la selección de los artículos para agregar de estos la cantidad de ingreso almacén, su precio de compra y el precio de venta propuesto.\nSe puede exportar el comprobante en pdf y el reporte de compras en formato PDF.\n\n\n* Módulo Ventas\nClientes: Gestión de tus clientes, teniendo en cuenta su nombre/razón social, tipo y número de documento, dirección, email y teléfono.\nVentas: Gestión de Ventas, teniendo en cuenta el cliente, la fecha de la venta, el tipo de comprobante (Boleta, Factura, Ticket) y número de comprobante emitido al cliente, el impuesto; la venta tendrá detalles que harán referencia al artículo que se esta vendiendo, se permitirá realizar la selección de los artículos para agregar de estos la cantidad de venta, su precio de venta y si hubiera un descuento.\nSe puede exportar el comprobante en pdf y el reporte de ventas en formato PDF.\n* Acceso al sistema\nRoles: Gestión de todos los roles de acceso al sistema: Administrador, Vendedor, Almacenero.\nUsuarios: Gestión de los usuarios, considerando su nombre, tipo y número de documento, dirección teléfono, email, cargo, login de usuario y password encriptado, seleccionando su rol específico de acceso.\n* Consultas\nConsulta de ventas\nPermite realizar la búsqueda de ventas entre dos fechas seleccionadas.\n\n\n* Reportes\nSe podrá exportar información en formato PDF, WORD, EXCEL.",
      "target_audience": [
        "Estudiantes y profesionales que quieran aprender a desarrollar sistemas de gestión de información de escritorio robustos y escalables."
      ]
    },
    {
      "title": "C++ |Sıfırdan Komple Uygulamalı Nesneye Yönelik Programlama",
      "url": "https://www.udemy.com/course/sifirdan-komple-uygulamali-nesneye-yonelik-programlama/",
      "bio": "C++ Programlama Diliyle Nesneye Yönelik Programlama Mantığı | Temelden Başlayıp Gerçek Projeler İle Öğrenin",
      "objectives": [
        "Nesneye Yönelik Programlamanın temellerini en iyi şekilde öğreneceksiniz.",
        "Kurs Boyunca C++ dilini kullanacağımız için, C++ bilginiz epey gelişecek.",
        "Kurs boyunca çok fazla örnek program yazacağımız için, bu kursu bitirdiğiniz zaman algoritma yeteneğiniz çok fazla gelişmiş olacak."
      ],
      "course_content": {
        "Giriş": [
          "Hatırlatma",
          "Visual Studio Kurulumu",
          "Kurs Kaynak Kodları"
        ],
        "Nesneye Yönelik Programlamaya Giriş": [
          "Nesneye Yönelik Programlama Nedir?",
          "Sınıf(Class) ve Nesne(Object) Kavramları",
          "Sınıfın Üyeleri- Üye Değişken(Member Variable) & Üye Fonksiyon(Member Function)",
          "Kapsülleme(Encapsulation) Nedir?",
          "Public-Protected-Private Keywordleri",
          "Set ve Get Fonksiyon Kavramları",
          "Varsayılan(Default) Constructorlar",
          "Parametreli Constructorlar",
          "Destructor Kavramı",
          "Copy Constructor Kavramı",
          "KODLAMA-1| Üçgen Sınıfı - Constructor&Destructor&Copy Constructor",
          "KODLAMA-1| Üçgen Sınıfı - Set & Get Fonksiyonlar",
          "KODLAMA-1| Üçgen Sınıfı - Üçgen Tipi Belirleme Fonksiyonu",
          "KODLAMA-1| Üçgen Sınıfı - Üçgen Tipine Göre Alan Hesaplama Fonksiyonu",
          "KODLAMA-2| Karmaşık Sayılar Sınıfı - Constructor&Destructor&Copy Constructor",
          "KODLAMA-2| Karmaşık Sayılar Sınıfı - Toplama & Çıkarma Fonksiyonları",
          "KODLAMA-2| Karmaşık Sayılar Sınıfı- Çarpma Fonksiyonları",
          "KODLAMA-3| Array Sınıfı - Constructor&Destructor&Copy Constructor",
          "KODLAMA-3| Array Sınıfı- Eleman Ekleme& Elemanları Yazdırma Fonksiyonları",
          "KODLAMA-3 | Array Sınıfı- Eleman Silme Fonksiyonları",
          "KODLAMA-3 | Array Sınıfı- Eleman Silme Fonksiyonları(DÜZELTME)",
          "KODLAMA-3| Array Sınıfı- Eleman Arama Fonksiyonu",
          "ÖDEV-1 | Tarih Sınıfı - Ödev Tanıtımı",
          "ÖDEV-1 | Tarih Sınıfı Ödev Çözümü - Constructor & Destructor & Copy Constructor",
          "ÖDEV-1 | Tarih Sınıfı Ödev Çözümü - Gün Arttırma Ve İki Tarihi Karşılaştırma",
          "ÖDEV-2 | Banka Hesabı Sınıfı- Ödev Tanıtımı",
          "ÖDEV-2 | Banka Hesabı Ödev Çözümü- Girilen Bilgilerin Doğruluğunu Kontrol Etme",
          "ÖDEV-2 | Banka Hesabı Ödev Çözümü- Constructor&Destructor&Copy Constructor",
          "ÖDEV-2 | Banka Hesabı Ödev Çözümü- Para Çekme & Para Yatırma İşlemleri",
          "ÖDEV-2 | Banka Hesabı Ödev Çözümü- Başka Kişinin Hesabına Para Gönderme İşlemi",
          "ÖDEV-3 | Matris Sınıfı- Ödev Tanıtımı",
          "ÖDEV-3 | Matris Sınıfı Ödev Çözümü- Constructor& Destructor& Copy Constructor",
          "ÖDEV-3 | Matris Sınıfı Ödev Çözümü- Rastgele Değer Atama& Birim Matris Oluşturma",
          "ÖDEV-3 | Matris Sınıfı Ödev Çözümü- İki Matrisin Toplanması",
          "Nesneye Yönelik Programlamaya Giriş Değerlendirme Testi"
        ],
        "Kalıtım-Miras İşlemleri(Inheritance)": [
          "Miras(Inheritance) Kavramı",
          "Miras Alma İşlemi ve Syntax Yapısı",
          "Miras Alma İşleminde Erişim Belirleyiciler",
          "Miras Alma İşleminde Constructor & Destructor & Copy Constructor Mantığı",
          "Birden Fazla Sınıftan Miras Alma(Multiple Inheritance)",
          "Çok Biçimlilik (Polymorphism) Kavramı",
          "Fonskiyonların Çiğnenmesi (Function Overriding) Kavramı",
          "KODLAMA-1 | Kişi Sınıfı Oluşturma",
          "KODLAMA-1 | Kişi Sınıfından Miras Alarak Öğrenci Sınıfı Oluşturma",
          "KODLAMA-1 | Kişi Sınıfından Miras Alarak Öğretmen Sınıfı Oluşturma",
          "KODLAMA-2 | Array Sınıfından Miras Alarak Sıralı ve Sırasız Array Oluşturma",
          "ÖDEV-1 | Kişi Sınıfı - Ödev Tanıtımı",
          "ÖDEV-1 | Kişi Sınıfı Ödev Çözümü- Miras Alarak Çalışan Sınıfı Oluşturma",
          "ÖDEV-1 | Kişi Sınıfı Ödev Çözümü- Miras Alarak Yönetici Sınıfı Oluşturma",
          "ÖDEV-2 | Bilgilendirme",
          "Kalıtım-Miras İşlemleri(Inheritance) Değerlendirme Testi"
        ],
        "Dinamik Bellek Yönetimi(Dynamic Memory Allocation)": [
          "Nesnelerde İşaretçi(Pointer) Mantığı",
          "Dinamik Nesne Oluşturma",
          "Kendi Yazdığımız Sınıftan Dinamik Tek Boyutlu Dizi Oluşturma",
          "Kendi Yazdığımız Sınıftan Dinamik İki Boyutlu Dizi Oluşturma",
          "This Pointer Kavramı"
        ],
        "Upcasting&Downcasting&Virtual Function& Soyut Sınıf(Abstract Class)": [
          "Upcasting Kavramı",
          "Downcasting Kavramı",
          "Sanal Fonksiyon(Virtual Function) Kavramı",
          "Adres & Değer İle Çağırma Farkları(pass by value&pass by reference)",
          "Virtual Destructor Kavramı",
          "Pure Virtual Function ve Soyut Sınıf Kavramı(Abstract Class)",
          "Upcasting&Downcasting&Virtual Function& Soyut Sınıf Değerlendirme Testi",
          "KODLAMA-1 | Person Sınıfından Miras Alınarak Birden Fazla Milliyet Oluşturma",
          "KODLAMA-2 | Vehicle Sınıfı Oluşturma",
          "KODLAMA-2 | Vehicle Sınıfından Car & Motorcycle Sınıfı Oluşturma",
          "KODLAMA-2 | Main Kısmı Hazırlama Ve Test Etme",
          "ÖDEV-1 | Şekil(Shape) Sınıfı Ödev Tanıtımı",
          "ÖDEV-1 | Şekil(Shape) Sınıfından Dikdörtgen(Rectangle) ve Daire(Circle) Sınıfı"
        ],
        "Operatörlerin Aşırı Yüklenmesi(Operator Overloading)": [
          "Operatörlerin Aşırı Yüklenmesi Nedir?",
          "Operatörleri Aşırı Yükleme İşlemi (Operator Overloading)",
          "Friend Function Kavramı",
          "Input ve Output Operatörlerinin Aşırı Yüklenmesi",
          "KODLAMA-1 | Karmaşık Sayıları Sınıfı- Operatörleri Aşırı Yükleyerek İşlemler",
          "KODLAMA-2 | Tarih Sınıfı- Operatörleri Aşırı Yükleyerek İşlemler",
          "ÖDEV-1 | Banka Hesabı Sınıfı- Ödev Tanıtımı",
          "ÖDEV-1 | Banka Hesabı Sınıfı- Operatörleri Aşırı Yükleyerek İşlemler",
          "Operatörlerin Aşırı Yüklenmesi(Operator Overloading) Değerlendirme Testi"
        ],
        "Template Kavramı": [
          "Function Template Kavramı",
          "Class Template Kavramı",
          "Template Sınıf İçin Input ve Output Operatörlerinin Aşırı Yüklenmesi"
        ],
        "Hata Yakalama(Exception Handling)": [
          "Assert Fonksiyonu İle Hata Yakalama",
          "Try&Catch Yapısı İle Hata Yaklama",
          "Kendi Hata Sınıflarımızı Oluşturma"
        ],
        "KURS SONU": [
          "Kurs Sonu"
        ]
      },
      "requirements": [
        "C++ veya C temellerini bilmek ve programlama temellerine hakim olmak.",
        "Öğrencilerin bir bilgisayara sahip olması ve başlangıç seviyesinde bilgisayar kullanmayı biliyor olması.",
        "Kurs için en önemli koşulumuz; gelecek hayalleri, öğrenme disiplini ve hırsı."
      ],
      "description": "Bu kursta başlangıç seviyesinden itibaren C++ Programlama Diliyle Nesneye Yönelik Programlama temellerini ve mantığını öğreneceğiz.\nKurs İşlenişi\nKurs boyunca siz de bunu fark edecekseniz ki\n1.Bölümle ilgili tüm temel bilgileri derinlemesine, mantıklarıyla birlikte öğreneceğiz.\n2.Bölümde öğrendiğimiz bilgilerin daha anlaşılır ve kalıcı olması için kodlama egzersizleri yapacağız.\n3.Bölümde öğrendiğimiz tüm konuları kapsayan ödev soruları ile önce sizin çözmeniz hedeflenecek sonra benim çözümlerim ile kafanızdaki tüm soru işaretleri ortadan kalkacak.\n4.Bölümün sonunda sizlere sunulan testler ile kendinizi test edebilecek ve yanlış yaptığınız zaman neyin eksik olduğunu soru açıklamalarıyla birlikte görebileceksiniz.\nKurs İçeriği\nKurs boyunca aşağıdaki konuları görmeye ve öğrenmeye çalışacağız.\nNesneye Yönelik Programlamaya Giriş\nKalıtım-Miras(Inheritance)\nDinamik Bellek Yönetimi(Dynamic Memory Allocation)\nUpcasting & Downcasting & Virtual Function & Soyut Sınıf (Abstract Class) Kavramları\nOperatörlerin Aşırı Yüklenmesi(Operator Overloading)\nTemplate Kavramı\nHata Yakalama(Exception Handling)\n\n\nYukarıda belirtilen konuların alt başlıklarına, yaptığımız kodlama örneklerine ve ödev başlıklarına kurs içeriği kısmından erişebilirsiniz.\nBunların dışında en büyük avantajınız soru-cevap kısımlarında sorduğunuz sorulara en kısa sürede, ayrıntılı şekilde cevap alabileceksiniz.",
      "target_audience": [
        "Gerçek hayatta karşılaştığı problemler için yazılım geliştirmek isteyen kişiler.",
        "Nesneye yönelik programlama kavramlarını öğrenmek isteyen kişiler.",
        "C++ ve programlama bilgisini ileri seviyeye taşımak isteyen kişiler.",
        "Nesneye yönelik programlama konseptini projelerinde kullanmak isteyen kişiler.",
        "Üniversitede nesneye yönelik programlama dersi gören kişiler."
      ]
    },
    {
      "title": "Java. От простого к сложному.",
      "url": "https://www.udemy.com/course/java-simple2advanced/",
      "bio": "Научитесь программировать на Java.",
      "objectives": [
        "После изучения материала данного курса студенты будут уметь программировать на языке Java на уровне, достаточном для самостоятельной разработки приложений и поиска своей первой работы в данной сфере. Те кто уже имел предварительный опыт программирования на других языках, смогут освоить концепции и практики используемые в языке Java. Внимание, курс доступен в FullHD формате. При первом запуске убедитесь что в правом нижнем углу у Вас в настройках выбран параметр 1080."
      ],
      "course_content": {
        "Подготовка рабочей среды.": [
          "Установка Java JDK и Intellij Idea (Опционально).",
          "Создание первой программы - HelloWorld."
        ],
        "Базовые конструкции языка Java.": [
          "Примитивные типы данных",
          "Переменные в Java. Часть 1.",
          "Переменные в Java. Часть 2.",
          "Приведение типов данных.",
          "Операторы языка Java. Часть 1.",
          "Операторы языка Java. Часть 2.",
          "Условные операторы if - else",
          "Циклический оператор While",
          "Циклический оператор for",
          "Оператор Switch",
          "Методы в Java.",
          "Работа с типом String",
          "Домашнее задание по первому модулю",
          "Линк на GitHub с примерами из лекций."
        ],
        "Основы ООП. Часть 1.": [
          "Классы и объекты",
          "Методы get() и set()",
          "Ключевое слово static. Статические поля и методы.",
          "Модификаторы доступа.",
          "Константы. Перечисления (Enum)",
          "Перечисления. Часть 2.",
          "Конструкторы классов. Ключевое слово import.",
          "Конструкторы. Часть 2. Инициализация объектов.",
          "Домашнее задание к модулю 2."
        ],
        "ООП. Часть 2.": [
          "Наследование. Часть 1.",
          "Наследование. Часть 2.",
          "Наследование. Часть 3.",
          "Композиция",
          "Полиморфизм",
          "Абстрактные классы",
          "Интерфейсы. Часть 1.",
          "Интерфейсы. Часть 2.",
          "Вложенные (Nested) классы.",
          "Локальные и анонимные классы"
        ],
        "Обработка исключений (Exception handling)": [
          "Основы. try-catch блоки.",
          "Checked vs. Unchecked исключения.",
          "Блок finally. Подавление исключений.",
          "Создание классов исключений. Try-with-resources."
        ],
        "Коллекции в Java": [
          "Одномерный массив.",
          "Сортировка одномерного массива.",
          "Индексы массивов.",
          "Двумерные массивы.",
          "Динамический массив (ArrayList). Часть 1.",
          "Динамический массив (ArrayList). Часть 2.",
          "Динамический массив (ArrayList). Часть 3.",
          "Связный список. Часть 1.",
          "Связный список. Часть 2.",
          "Интерфейс Collection и его наследники.",
          "Класс Collection. Часть 1. Интерфейс Comparable.",
          "Класс Collection. Часть 2. Интерфейс Comparator.",
          "Класс Collection. Часть 3. Дополнительные методы (опционально).",
          "Класс Stack.",
          "Интерфейс Queue. Класс Priority Queue.",
          "Интерфейс Deque.",
          "Интерфейс Set.",
          "Класс HashSet. Метод equals.",
          "Методы equals и hashCode.",
          "Операции с множествами.",
          "Класс TreeSet",
          "Интерфейс Map.",
          "Класс HashMap. Часть 1.",
          "Класс HashMap. Часть 2.",
          "Класс TreeMap. Часть 1.",
          "Класс TreeMap. Часть 2",
          "Домашнее задание к модулю."
        ],
        "Работа с файлами в Java. Потоки ввода-вывода.": [
          "Запись в файл с помощью FileWriter класса.",
          "Чтение из файла с помощью класса FileReader.",
          "Байтовый поток (ByteStream).",
          "Сохранение объектов используя ObjectOutputStream. Часть 1.",
          "Сохранение объектов используя ObjectOutputStream. Часть 2",
          "Использование java.io.File для работы с файлами.",
          "Работа с Java NIO. Классы Paths и Files.",
          "Чтение и запись файлов с помощью Java NIO",
          "Java NIO Каналы и Буферы. Часть 1.",
          "Java NIO Каналы и Буферы. Часть 2.",
          "Работа с файлами со случайным доступом (Random Access files).",
          "Работа с директориями.",
          "Атрибуты файла.",
          "Файл визитор.",
          "Рекурсивное копирование файлов."
        ],
        "Параметризированные (generic) типы в Java.": [
          "Зачем нужны generic типы?",
          "Параметризованные методы.",
          "Наследование параметризованных типов.",
          "Подстановка (wildcarding) типов."
        ],
        "Лямбда выражения (Lambda-expressions) и стримы (Streams) .": [
          "Lambda-expressions. Основы, синтаксис.",
          "Функциональные интерфейсы в Lambda выражениях.",
          "Method reference.",
          "Область видимости переменных в Lambda.",
          "Интерфейсы пакета java.util.Function. Predicate, Function, etc.",
          "Static и default методы в интерфейсах.",
          "Функции высшего порядка.",
          "Обзор интерфейса Stream.",
          "Методы интерфейса стрим. Часть 1.",
          "Методы интерфейса стрим. Часть 2.",
          "Parallel Stream."
        ],
        "Многопоточность (Multithreading) в Java": [
          "Создание потоков.",
          "Ключевое слово Volatile.",
          "Synchronized методы и блоки.",
          "Daemon потоки.",
          "Executor service.",
          "Producer-consumer шаблон.",
          "Wait и Notify методы.",
          "ReentrantLock класс.",
          "Класс Semaphore.",
          "Интерфейсы Callable and Future"
        ]
      },
      "requirements": [
        "Общие навыки использования компьютера. Преимуществом будет предыдущий опыт в ИТ, знание английского языка."
      ],
      "description": "Представляю Вам курс \"Java. От простого к сложному\".  С помощью данного курса вы сможете усвоить основные концепции самого популярного на данный момент объектно-ориентированного языка программирования. В процессе прохождения курса вы изучите принципы ООП, научитесь работать с коллекциями, усвоите основы многопоточности, поймете, как устроены Лямбда-выражения. Мы с Вами так же научимся работать с файлами и познакомимся с некоторыми другими темами. Курс построен таким образом, что вы можете проходить разделы независимо друг от друга. Большинство разделов устроены так, что первые несколько видео рассказывают основы, а последние дают углубленное понимание темы.  Материал подается с целью дать достаточно глубокое понимание темы, чтобы студент мог внятно отвечать на поставленные вопросы в процессе прохождения собеседования. Данный курс не заменит Вам практику. Вы должны писать код, чтобы добиться успеха. Но для того чтобы облегчить вам задачу, в процессе обновления курса будут добавляться практические задания. Так же огромным плюсом будет участие в дискуссиях на нашем форуме.\nИскренне надеюсь, что курс покажется интересным для тех, кто только начинает изучать программирование. Материал данного курса должен быть понятным и доступным не зависимо от того был ли у Вас опыт работы в ИТ раньше.\nЖелаю легкого обучения.\nВнимание, курс доступен в FullHD формате. При первом запуске убедитесь что в правом нижнем углу у Вас в настройках выбран параметр 1080.\nАлександр.",
      "target_audience": [
        "Всем кто хочет изучить программирование на Java с ноля или улучшить свои навыки."
      ]
    },
    {
      "title": "Python For Beginners [in Arabic]",
      "url": "https://www.udemy.com/course/python-for-beginners-in-arabic-/",
      "bio": "Learn Python in 4 Hours [Arabic]",
      "objectives": [
        "Programming Fundamentals",
        "Python Basics",
        "Python Object Oriented Programming",
        "Projects with Python",
        "What's after this course?"
      ],
      "course_content": {
        "مقدمة عن الكورس ومذا سنتعلم فيه": [
          "كل ما تريد معرفته عن الكورس",
          "ماذا يمكنك أن تبني بالبايثون ؟",
          "ما هي البرمجة ؟ What is programming ?",
          "What is IDE ? ما هي بيئة العمل ؟"
        ],
        "How to setup your IDE with Python ? طريقة تسطيب بيئة العمل مع البايثون": [
          "How to set up python ? كيفية تنزيل البايثون",
          "Connect Visual studio code with Python - تشغيل البايثون على الفيجيوال ستوديو كود"
        ],
        "Python Basics - أساسيات بايثون": [
          "First Program with Python - أول برنامج لك بالبايثون",
          "Comments - التعليقات",
          "Variables - المتغيرات",
          "Data Types - أنواع البيانات",
          "Numbers - الأرقام",
          "Casting(Converting) - التحويل",
          "Strings - النص",
          "Strings (Slicing) -تقطيع الكلام",
          "Strings ( Format) - دالة فورمات",
          "Strings ( Built in Methods ) - دوال جاهزة للنص",
          "Escape Characters - اختصارات",
          "Boolean - صح أم خطأ",
          "User input - ادخال بيانات",
          "User input Project - مشروع بسيط",
          "Naming Rules - قوانين مهمه في التسمية"
        ],
        "Python Operators - العمليات في بايثون": [
          "Arithmetic operators - العمليات الحسابية",
          "Assignment operators - عوامل التعيين",
          "Comparison operators - عوامل المقارنة",
          "Logical operators - العوامل المنطقية",
          "Identity operators - عوامل الهوية",
          "Membership operators - مشغلي العضوية",
          "Practice"
        ],
        "Python Collections (Arrays) - المجموعات": [
          "Lists - القوائم",
          "Lists - Methods - دوال القوائم",
          "Tuples - المجموعات",
          "Sets",
          "Dictionaries"
        ],
        "Conditional Statements - عبارات شرطية": [
          "If and Nested If - لو",
          "if else and Nested if Else",
          "Calculator - ألة حاسبة"
        ],
        "Loops - التكرار": [
          "While loop",
          "For loop",
          "Nested for - and (range) Function",
          "2D List and Nested for Loop",
          "Break and Continue statements"
        ],
        "Functions - الدوال": [
          "Functions in Detail - الدوال بالتفصيل",
          "Parameter vs Arguments",
          "Recursion Function -دالة التكرارية",
          "Lambda Function -دالة لامدا",
          "Modules - وحدات أو بكجات -مكتبات"
        ],
        "Object Oriented Programming (OOP)": [
          "Classes -Objects",
          "Inheritance - الوراثة",
          "Exceptions and Handling Exceptions",
          "Scope of Variable"
        ],
        "Resources and What is next ? - أين تتعلم المزيد وما التالي": [
          "Best Websites to Complete Learning"
        ]
      },
      "requirements": [
        "No Requirements - لا شيء"
      ],
      "description": "حبيت أني أعمل كورس يلخص لغة البايثون من الصفر حتى تتقن الأساسيات.\nفي حالة لم تقدر على شراء الكورس يرجى التواصل معي على الخاص هنا.\n.يمكنك الدفع فودافون كاش بنصف السعر\n*********************************************************************\nلمحة عن Python\nإن كنت تنجز الكثير من الأعمال باستخدام الحاسوب، فستجد نفسك بحاجة إلى تأدية بعض المهام بصورة أوتوماتيكية. فعلى سبيل المثال قد ترغب في إنجاز عملية بحث واستبدال على عدد كبير من الملفات، أو إعادة تسمية وترتيب مجموعة من ملفات الصور وبطريقة معقدة. قد ترغب ربّما بكتابة قاعدة بيانات صغيرة، أو إنشاء تطبيق يمتلك واجهة رسومية خاصّة، أو حتى لعبة صغيرة.\nإن كنت من المحترفين في مجال تطوير البرمجيات فإنّك ستلجأ على الأرجح إلى استخدام العديد من مكتبات اللغات C/C++/Java ولكنّك ستجد أنّ عمليات الكتابة ثم التصريف ثم الاختبار ثم إعادة التصريف قد أصبحت سلسلة من العمليات المتكررة البطيئة للغاية.\nلربّما كنت تكتب حزمة اختبار لمثل هكذا مكتبة فوجدت أن كتابة شيفرة الاختبار أمر متعب للغاية، أو أنّك كتبت برنامجًا بمقدوره استخدام لغة ملحقة، ولكنّك لا ترغب بتصميم وتضمين لغة جديدة للتطبيق\nستتعلم:\nأهمية وما يمكنك أن تفعل بلغة البايثون\nأساسيات لكل لغات البرمجة\nأساسيات البايثون\nالبرمجة الشيئية بالتفصيل\nاعتمدنا على الأسئلة لتثبيت المعلومة وسهولتها\n****************************************\nفي حالة وجود أي أسئلة أرجو منكم التكرم بكتابة السؤال في التعليقات وان شاء الله سأرد على جميع الأسئلة بلا استثناء\nبايثون (بالإنجليزية: Python)‏ هي لغة برمجة، عالية المستوى سهلة التعلم مفتوحة المصدر قابلة للتوسيع، تعتمد أسلوب البرمجة الكائنية (OOP). ... تتميز بايثون بمجتمعها النشط، كما أن لها الكثير من المكتبات البرمجية ذات الأغراض الخاصة التي برمجها أشخاص من ذلك المجتمع.\n*وبالتوفيق ان شاء الله *",
      "target_audience": [
        "Beginner Python Course for new programmers or CS students"
      ]
    },
    {
      "title": "Pemrograman PHP : Pemula sampai Mahir",
      "url": "https://www.udemy.com/course/pemrograman-php-pemula-sampai-mahir/",
      "bio": "Belajar pemrograman PHP dari pemula sampai mahir disertai studi kasus. Materi akan selalu di-update secara berkala",
      "objectives": [
        "PHP Dasar",
        "PHP Object Oriented Programming",
        "PHP Database",
        "PHP MySQL",
        "PHP Composer",
        "PHP Unit Test",
        "PHP Logging",
        "PHP Login Management",
        "PHP MVC",
        "PHP Model View Controller"
      ],
      "course_content": {},
      "requirements": [
        "Mampu Mengoperasikan Komputer"
      ],
      "description": "Selamat datang di course Pemrograman PHP dari Pemula sampai Mahir. Disini kita akan belajar Pemrograman PHP dari tingkat dasar sampai tingkat mahir, disertai dengan studi kasus. Akan banyak materi yang akan dibahas di course ini seperti :\nPHP Dasar, membahas dasar-dasar pemrograman PHP, tipe data, variable, function, konversi tipe data, dan lain-lain\nPHP Object Oriented Programming, membahas pemrograman berorientasi objek di PHP, membuat class, membuat interface, membuat trait, membahas pewarisan dan polimorfisme, membahas error handling dan lain-lain\nFitur Baru PHP versi 8, membahas fitur-fitur baru yang tersedia di PHP versi 8\nPHP Database, membahas tentang PHP Data Object, cara melakukan koneksi ke database MySQL, belajar Repository pattern, insert update delete dan select ke MySQL, database transaction, dan lain-lain\nPHP Web, membahas cara membuat web menggunakan PHP, melakukan GET query, melakukan POST query, membuat session, belajar cookie, http header, dan lain-lain\nPHP Composer, membahas build tool paling populer di PHP, cara membuat project menggunakan composer, download dependency, cara publish dependency, dan lain-lain\nPHP Unit Test, membahas cara membuat unit test menggunakan PHPUnit, belajar lifecycle unit test, membuat mock object, membuat stub object, dan lain-lain\ndan materi-materi lainnya.\nMateri akan selalu di update secara berkala, dan ketika materi di update, harga course pun akan diupdate dengan harga baru. Jadi pastikan untuk secepatnya membeli course ini, makin cepat, makin murah harga pembelian course ini.",
      "target_audience": [
        "Programmer Pemula yang Ingin Belajar Pemrograman PHP",
        "Programmer yang ingin belajar membuat Web menggunakan PHP",
        "Programmer yang ingin belajar membuat API menggunakan PHP"
      ]
    },
    {
      "title": "Python 2025 : 100 Günlük Programlama Kampı",
      "url": "https://www.udemy.com/course/python-100-gunluk-yazilim-kampi/",
      "bio": "Python ve yazılım geliştirme kavramlarını 100 günlük bir kamp ile Twitter Clone vb. güncel uygulamalar yaparak öğrenin",
      "objectives": [
        "Python",
        "Yazılım Temelleri",
        "Yazılım Geliştirme Süreçleri",
        "Web Geliştirme",
        "GUI Geliştirme",
        "Tkinter, Turtle",
        "Numpy, Pandas, Matplotlib",
        "Django",
        "Git, GitHub",
        "Selenium",
        "Cursor ile Geliştirme Yapma"
      ],
      "course_content": {
        "Gün 1: Giriş ve Kurulumlar": [
          "Tanıtım",
          "Eğitim Kullanma Kılavuzu",
          "Bilgisayarlar Nasıl Çalışır?",
          "Metin Görsel ve Ses",
          "Neden Python?",
          "Anaconda Nedir?",
          "Windows İçin Anaconda Yüklemek",
          "MAC İçin Anaconda Yüklemek",
          "Google Colab",
          "Değişkenlere Giriş",
          "Sosyal Linkler"
        ],
        "Gün 2: Veri Tipleri": [
          "Numaralar",
          "Int vs Float",
          "Ders Notları Hakkında",
          "String",
          "String Metodları"
        ],
        "Gün 3: Index Mantığı ve Koleksiyonlar": [
          "Index Mantığı",
          "Slicing Nedir",
          "Slicing Örnekleri",
          "Liste Nedir",
          "Liste Özellikleri",
          "Veri Tipi Dönüştürme",
          "Daha İleri Seviye Listeler"
        ],
        "Gün 4: Sözlük ve Diğer Yapılar": [
          "Sözlükler",
          "Sözlük Pratikleri",
          "Set",
          "Farklı Oluşturma Yöntemleri",
          "Tuple",
          "Bool"
        ],
        "Gün 5: Quiz 1": [
          "Quiz ve Defter İndirme",
          "Jupyter Notebooks GitHub Link",
          "Quiz Çözümleri"
        ],
        "Gün 6: Kontroller ve Döngüler": [
          "Kıyaslama İşlemleri",
          "If Kontrolleri",
          "Döngüler Giriş",
          "For Döngüsü",
          "Break Continue Pass"
        ],
        "Gün 7: Döngüler": [
          "While",
          "İleri Seviye İşlemler 1",
          "İleri Seviye İşlemler 2"
        ],
        "Gün 8: Quiz 2": [
          "Quiz 2",
          "Quiz 2 Çözümleri"
        ],
        "Gün 9: Fonksiyonlar": [
          "Fonksiyonlar",
          "Fonksiyonlar Devam",
          "Pratik Fonksiyonlar",
          "Kapsama Giriş",
          "Kapsam Detayları"
        ],
        "Gün 10: OOP ve Sınıflar": [
          "Sınıf Nedir?",
          "Sınıf Örnekleri",
          "Inheritance",
          "Polymorphism",
          "Encapsulation",
          "Abstraction",
          "Özel Methodlar"
        ]
      },
      "requirements": [
        "İnternete bağlanabilen, minimum 4GB RAM'e sahip bir bilgisayar"
      ],
      "description": "Python öğrenmek, programlamaya başlamak, yazılım geliştirme süreçlerine hakim olmak ve yazılımcı kariyerinize güzel bir başlangıç için doğru yerdesiniz!\nBu eğitim tam 100 günlük bir programlama kampı! Eğitimi tamamladığınızda anlamadığınız hiç bir yerin kalmamasına, kendi ürünlerinizi geliştirebilir hale gelmenize, iş bulmanız için gerekli olan yeteneklerin sergilenmesine ve kendinizi geliştirmek için yapmanız gereken her türlü öğeye sahip bu eğitim aldığınız en iyi eğitimlerden biri olacak.\nKurs Udemy'de 400.000+ öğrenciye Yazılım ve Siber Güvenlik eğitimleri veren ve Boğaziçi Üniversitesi'nde Android Mobil Geliştirme Eğitmeni olan Atıl Samancıoğlu tarafından veriliyor! Siz de yazılım geliştirme dünyasına adım atmak istiyorsanız aşağıdaki detaylı açıklamayı inceleyip kursa hemen kayıt olabilirsiniz.\nEğitimi alanlara eğitim içinde kullanmanız için DigitalOcean'dan 100$'lık sunucu kredisi hediye edilecektir!\nBu kursta yazılım geliştirme ve Python ile alakalı her seviyeden bilgiler elde edeceksiniz. Eğitimin içindeki bölümlerde değineceğimiz konulardan bazıları şunlar:\nPython Temelleri\nPyCharm, Visual Studio Code, Jupyter Notebook\nRequests\nDjango\nWeb Geliştirme\nTemel HTML & CSS\nNumpy, Pandas, Matplotlib\nGit & GitHub & Versiyon Kontrol Sistemleri\nProje Yönetimi\nSunucuda Canlıya Alma\nSelenium\nThreading\nTkinter, Turtle\nTerminal Kullanımı\nDebugging, ChatGPT\nCursor kullanarak yapay zeka ile yazılım geliştirme\nİçerik & Genel Görünüş\nBu kurs Python ve yazılım geliştirmeyi öğrenmek isteyenler için mükemmel bir seçim. Öncesinde herhangi bir yazılım deneyiminiz yoksa hiç dert etmeyin. En başından, temellerden öğrenmeye başlayarak ileri seviyeye kadar gideceğiz. Dersleri bitirdiğinizde kendi uygulamalarınızı yazacak seviyeye geleceksiniz.\nİlgili konuları \"Twitter Klonu\", \"Turtle Yakalama Oyunu\", \"YouTube Downloader\", \"Arka Plan Silici\", \"PDF Dönüştürücü\"  gibi yenilikçi ve eğlenceli uygulamalar geliştirerek öğreneceğiz. Eğitim pratik odaklı olsa da kesinlikle teorik boyutu aksatılmadan en ince detayları işlemeyi ihmal etmeyeceğiz.\nEğitim içerisinde yazılan tüm uygulamaların kaynak kodları GitHub'da paylaşılacaktır. Bu şekilde kendi uygulamalarınızı geliştirirken ilgili kaynak kodlarını referans alabilir, istediğiniz şekilde kullanabilirsiniz!",
      "target_audience": [
        "Yazılıma başlamak isteyenler",
        "Python öğrenmek isteyenler",
        "Yazılım bilgilerini geliştirmek isteyenler",
        "Yazılım mühendisliği temellerini öğrenmek isteyenler"
      ]
    },
    {
      "title": "Como Estudar Programação de Computadores",
      "url": "https://www.udemy.com/course/como-estudar-programacao/",
      "bio": "Conheça as melhores estratégias para você aprender programação de computadores.",
      "objectives": [
        "Estratégias para estudar programação",
        "Como escolher uma linguagem de programação",
        "IMPORTANTE: Não é um curso que ensina a programar, este curso ensina a escolher o melhor caminho para se tornar programador(a)"
      ],
      "course_content": {
        "Introdução": [
          "Como Tirar o Melhor Proveito desse Curso na Udemy",
          "Introdução",
          "O que você precisa para aprender programação",
          "Em quanto tempo se aprende a programar",
          "Por que precisamos aprender a programar",
          "Como são classificadas as linguagens de programação",
          "Breve história das linguagens de programação",
          "Como escolher a melhor linguagem de programação",
          "Como programar",
          "Como criar programas",
          "Qual a diferença entre programar e criar programas",
          "Qual a melhor estratégia para aprender programação",
          "Como aprendi programação",
          "Como está o mercado de trabalho para programadores",
          "Qual a diferença entre programador e desenvolvedor",
          "Qual a diferença entre front-end, back-end e fullstack",
          "20 dicas para quem está aprendendo a programar",
          "12 obstáculos que todo estudante de programação precisa vencer",
          "Sites úteis para quem está aprendendo programação",
          "Aprenda programação com jogos",
          "Conclusão"
        ]
      },
      "requirements": [
        "Não há pré-requisitos para fazer este curso"
      ],
      "description": "AVISO IMPORTANTE: Este curso não ensina a programar e nem ensina linguagens de programação. Ele serve para você aprender a estudar programação. Nosso objetivo é orientar as pessoas que sonham em programar, mas ficam confusas diante de tantas linguagens, plataformas, paradigmas, ambientes de desenvolvimento, palavras novas e frameworks.\nSe você quer aprender programação e não sabe por onde começar, este curso é para você, mas se você já é programador(a) ou já sabe programar acreditamos que não.\n\n\nGRADE CURRICULAR\n\n\n01. Apresentação\n02. O que é programar\n03. Como os programas são criados\n04. O primeiro bug\n05. Qualquer pessoa consegue programar\n06. O que é necessário para estudar programação\n07. Em quanto tempo se aprende a programar\n08. Por que precisamos aprender programação\n09. Como são classificadas as linguagens de programação\n10. Breve história das linguagens de programação\n11. Como escolher a melhor linguagem de programação\n12. Como programar\n13. Como criar programas\n14. Qual a diferença entre programar e criar programas\n15. Qual a melhor estratégia para aprender programação\n16. Como aprendi programação\n17. Como está o mercado de trabalho para programadores\n18. Qual a diferença entre programador e desenvolvedor\n19. Qual a diferença entre front-end, back-end e fullstack\n20. 20 dicas para quem está aprendendo a programar\n21. 12 obstáculos que todo estudante de programação precisa vencer\n22. Sites úteis para quem está aprendendo programação\n23. Aprenda programação com jogos\n24. Conclusão",
      "target_audience": [
        "Pessoas de qualquer idade em busca de orientação sobre como começar a programar",
        "*** SE VOCÊ JÁ É PROGRAMADOR ESSE CURSO NÃO É PARA VOCÊ ***"
      ]
    },
    {
      "title": "Programación en C#",
      "url": "https://www.udemy.com/course/programacion-en-csharp/",
      "bio": "Aprende a programar desde cero hasta un nivel de experto, empleando el lenguaje C#",
      "objectives": [
        "Aprenderás a programar, desde 0 hasta un nivel de experto, usando el lenguaje C#.",
        "Conocerás cómo usar variables, comprobar condiciones, realizar bucles, crear funciones, descomponer en clases, emplear memoria dinámica, acceder a ficheros...",
        "La mayoría de programas serán \"en consola\", para evitar distracciones, pero al final del curso verás pinceladas de entornos más amigables, como Windows Forms",
        "Conocerás Visual Studio, un entorno de programación potente y prestigioso",
        "Podrás aplicar la gran mayoría de tus conocimientos a otros lenguajes de programación"
      ],
      "course_content": {},
      "requirements": [
        "Disponer de un ordenador/computadora con sistema operativo Windows o MacOS X. La mayoría de proyectos se podrán hacer también desde Linux, aunque quizá no sea posible en alguno de los proyectos finales, más avanzados."
      ],
      "description": "Aprende a programar, desde 0 hasta un nivel de experto.\nTendrás explicaciones, ejemplos y ejercicios propuestos (junto con su solución paso a paso) para dominar conceptos como las variables, las condiciones, los bucles, los arrays, las funciones, las clases, la memoria dinámica (listas, pilas ,colas, diccionarios), los ficheros de texto y binarios...\nContarás con dos profesores distintos, porque sabemos que muchas veces el volver a escuchar algo, explicado de una forma ligeramente distinta ayuda a que \"se encienda esa bombilla\" que te hace entenderlo por completo.\nLos primeros ejemplos y ejercicios se harán \"en consola\", para evitar distracciones, y al final del curso verás lo fundamental de entornos más amigables para el usuario, como Windows Forms y WPF.",
      "target_audience": [
        "Estudiantes o aficionados, con ganas de adquirir un buen nivel de programación"
      ]
    },
    {
      "title": "【世界で7万人が受講】Understanding TypeScript 日本語版",
      "url": "https://www.udemy.com/course/understanding-typescript-jp/",
      "bio": "JavaScriptのより優れたバージョンであるTypeScriptを基本から応用まで学べます。Webpack, React, Express + Node.js との組合せも含め、実PJで役立つ実践的な知識を身につけることができます。",
      "objectives": [
        "TypeScriptの使い方と機能（型、ES6サポート、クラス、ESモジュール、インターフェースなど）とTypeScriptプロジェクトで必要となるその他の知識",
        "TypeScriptとは何か？",
        "TypeScriptのメリットとその理由",
        "TypeScriptの全般的な機能を実際のプロジェクトで適用する方法",
        "ReactJS や NodeJS / Express のアプリケーションでTypeScriptを利用する方法"
      ],
      "course_content": {
        "TypeScript入門": [
          "コースへようこそ",
          "TypeScript 概要 & 使う理由",
          "TypeScriptのインストール & 利用方法",
          "TypeScriptのメリット",
          "コースの概要",
          "このコースを最大限に活用する方法",
          "開発環境（IDE）の設定",
          "コースで利用するプロジェクトの作成"
        ],
        "TypeScriptの基本と型": [
          "イントロダクション",
          "型の利用",
          "JavaScriptの型 vs TypeScriptの型",
          "重要：型の大文字・小文字",
          "number, string, boolean型の使い方",
          "型の指定 & 型推論",
          "型の理解",
          "Object 型",
          "ネストしたObject 型",
          "Array 型",
          "Tuple 型",
          "Enum 型",
          "any 型",
          "Union 型",
          "Literal 型",
          "型エイリアス / カスタム型",
          "型エイリアス と Object 型",
          "コアな型 & 概念",
          "function 型 と void 型",
          "function 型",
          "function 型とコールバック",
          "関数 & 型",
          "unknown 型",
          "never 型",
          "まとめ",
          "役に立つ資料 & リンク"
        ],
        "TypeScript の設定とコンパイラ": [
          "イントロダクション",
          "Watch モードの使い方",
          "プロジェクト全体のコンパイル方法",
          "ファイルの Include & Exclude の設定",
          "コンパイルターゲットの設定",
          "Lib 設定の理解（ビルトイン API の設定）",
          "その他の設定、コンパイラオプション",
          "Source Map の利用",
          "rootDir と outDir の設定（ソースフォルダと出力先フォルダの設定）",
          "コンパイルエラー時にJavaScriptの出力をしない設定",
          "厳格な型チェックのオプション（Strict Type-Checking Options）",
          "コード品質に寄与するオプション",
          "【補足】Chrome for Debugger (非推奨) の代わりに JavaScript Debugger を使用する手順",
          "Visual Studio Code を利用してデバッグする方法",
          "まとめ",
          "役に立つ資料 & リンク"
        ],
        "新しい世代のJavaScriptとTypeScript": [
          "イントロダクション",
          "\"let\" & \"const\"",
          "アロー関数",
          "デフォルト関数パラメータ",
          "スプレッドオペレータ（...）",
          "レストパラメータ（残余引数）",
          "配列とオブジェクトの分割代入",
          "コンパイルターゲット＆まとめ",
          "役に立つ資料 & リンク"
        ],
        "クラス & インターフェース": [
          "イントロダクション",
          "クラスとは？",
          "最初のクラス",
          "JavaScriptへのコンパイル",
          "コンストラクタ関数 & \"this\" キーワード",
          "\"private\" & \"public\" 修飾子",
          "プロパティ初期化のショートカット構文",
          "\"readonly\" プロパティ",
          "クラスの基本",
          "継承",
          "プロパティのオーバーライド & \"protected\" 修飾子",
          "Getter & Setter",
          "static メソッド & プロパティ",
          "abstract クラス（抽象クラス）",
          "シングルトン & private コンストラクタ",
          "クラスのまとめ",
          "クラス",
          "最初のインターフェース",
          "クラスでのインタフェースの実装",
          "インターフェースを利用する理由",
          "読み取り専用のインターフェースプロパティ",
          "インターフェースの拡張",
          "関数型としてのインターフェース",
          "任意のパラメータ & プロパティ",
          "インターフェースの JavaScript へのコンパイル",
          "インターフェース",
          "まとめ",
          "役に立つ資料 & リンク"
        ],
        "高度な型": [
          "イントロダクション",
          "交差型",
          "型ガード",
          "判別可能な Union 型",
          "型キャスト",
          "インデックス型",
          "関数オーバーロード",
          "オプショナルチェイン",
          "NULL合体演算子",
          "高度な型",
          "まとめ",
          "役に立つ資料 & リンク"
        ],
        "Generics（ジェネリクス）": [
          "イントロダクション",
          "組み込みの Generic 型 & Generics とは",
          "【補足】次レクチャ「Generic 関数の作成」に関して",
          "Generic 関数の作成",
          "Generics に制約を追加する",
          "もうひとつの Generic 関数",
          "\"keyof\" の制約",
          "Generic クラス",
          "まとめ",
          "Generic型のユーティリティ",
          "Generic 型 vs Union 型",
          "Generics",
          "役に立つ資料 & リンク"
        ],
        "デコレータ": [
          "イントロダクション",
          "最初のクラスデコレータ",
          "デコレータファクトリ",
          "便利なデコレータ",
          "複数のデコレータの追加",
          "プロパティデコレータの詳細",
          "アクセサとパラメータのデコレータ",
          "デコレータの実行タイミング",
          "クラスデコレータによるクラスの変更",
          "その他のデコレータの返却値",
          "例：\"Autobind\" デコレータの作成",
          "デコレータによるバリデーション - 最初のステップ",
          "デコレータによるバリデーション - 完成",
          "バリデーションモジュールのバグ修正",
          "まとめ",
          "役に立つ資料 & リンク"
        ],
        "実践！ドラッグ & ドロップ可能なプロジェクト管理ツールの作成": [
          "イントロダクション",
          "プロジェクト作成",
          "DOM要素の取得 & オブジェクト指向",
          "DOM要素の操作",
          "\"Autobind\" デコレータの作成 & 利用",
          "ユーザ入力の取得",
          "再利用可能なバリデーション機能の作成",
          "プロジェクト一覧の表示",
          "シングルトン & アプリケーションの状態管理",
          "追加のクラス & カスタム型",
          "Enum によるプロジェクトのフィルタリング",
          "継承の追加 & ジェネリクス",
          "プロジェクト項目の表示",
          "Getter の利用",
          "ドラッグ & ドロップ実装におけるインターフェースの活用",
          "ドラッグイベント & 状態をUIに反映する",
          "ドロップ可能な場所",
          "ドラッグ & ドロップ機能の完成",
          "まとめ",
          "役に立つ資料 & リンク"
        ],
        "モジュールと名前空間 (namespace)": [
          "イントロダクション",
          "モジュール分割の選択肢",
          "名前空間の利用",
          "ファイルとフォルダの整理",
          "名前空間の問題点",
          "注意：Chrome または Firefox を使ってください",
          "ESモジュールの利用",
          "インポート & エクスポート構文のバリエーション",
          "モジュールのコードが実行されるタイミング",
          "まとめ",
          "役に立つ資料 & リンク"
        ]
      },
      "requirements": [
        "JavaScriptの基礎知識が必要です",
        "TypeScriptの経験は不要です",
        "ES6の知識は望ましいですが、必須ではありません"
      ],
      "description": "このコースは、7万人以上が受講し、非常に評判の高いコースであるMaximilian Schwarzmüller氏のUnderstanding TypeScript - 2020 Editionの日本語版です。\n○ なぜ日本の開発者がTypeScriptを学ぶ必要があるのか\n世界の最先端の現場では、新しくJavaScriptのプロジェクトを作成する場合、TypeScriptを採用することが当たり前になりつつあります。日本では、まだ普及の途上ですが、今後も様々な現場で利用が広がっていくことは確実です。なぜなら、TypeScriptはJavaScriptの上位互換だからです。\nこのコースでは、TypeScriptとは何か、なぜJavaScriptの上位互換であると言えるのか、ということを学べます。そしてTypeScriptの機能と、それらを利用する方法を学ぶことができます。\nこのコースでは、非常に基本的な内容や、最も重要な機能である型の説明から始まります。そして、最後まで学ぶことによって、最終的にどんなプロジェクトでも活かせる知識を身につけることができます。ReactやExpressのプロジェクトを作るレクチャーも含まれています。\nTypeScriptはMicrosoftによって開発されましたが、Angular 2+に利用されたことによって広まり、Googleの標準言語にもなっています。\n最先端のプロジェクトで、TypeScriptが利用されており、日本でも今後もさらに普及していくことが予想されます。TypeScriptを基礎からしっかりと理解すれば、様々なプロジェクトで活躍することができるでしょう。\n○ TypeScriptは未来を先取りしています\nTypeScriptのコードはES5にコンパイルできるので、たくさんの次世代バージョンのJavaScript機能を、今日の時点で利用できます。たとえば、ES6の機能である、分割代入の構文や、アロー関数、デコレータ、ジェネリクス、インターフェース、モジュールなど、TypeScriptでは、これらをすべて利用できます。\nこのコースで学べることは、基本だけではありません。より高度な機能や、TypeScriptプロジェクトのワークフローを作成する方法も学ぶことができます。これは、TypeScriptだけのワークフローだけではなく、Webpackのワークフローも含んでいます。\nまた、単なるJavaScript / TypeScriptのプロジェクトだけに留まらず、TypeScriptを使って、Reactのアプリケーションを作る１つのセクションも含んでいます。\n○ 学んだことを実践してください\n動画を見ることは非常に良い学習方法であり、多くの学習者にとって、ベストな方法です。もし、手を動かして練習したい場合には、そのためのセクションがたくさん含まれています。\n○ たくさんの内容がつまっています\nこのコースは、基本的なことだけを説明して、受講者が具体的にどうすればよいか分からないまま終わるようなコースではありません。このコースでは、これらのことを学ぶことができます。\n型、型の使い方\nTypeScriptのコンパイラがどのように動作するか\nTypeScriptで利用できるES6の機能\nTypeScriptにおけるクラス\n名前空間とモジュール\nインターフェース\nジェネリクス\nデコレータ\nサードパーティのJavaScriptライブラリをTypeScriptプロジェクトで利用する方法\nWebpackを使ってTypeScriptのプロジェクトをセットアップする方法\nまたは、TypeScriptだけを使ったワークフローをセットアップする方法\nReactアプリケーションでTypeScriptを使う方法\nNode/ ExpressアプリケーションでTypeScriptを使う方法\nTypeScriptが利用されているプロジェクトとユースケース",
      "target_audience": [
        "TypeScriptを学びたいソフトウェア開発者"
      ]
    },
    {
      "title": "【Pythonで学ぶ】OpenCVでの画像処理入門",
      "url": "https://www.udemy.com/course/pythonopencv/",
      "bio": "OpenCVの導入・画像の基礎知識からエッジの検出・特徴抽出、特徴追跡など様々な画像処理を紹介。実践力強化のため、パーティクルフィルターも原理を理解した後、自力で実装します。",
      "objectives": [
        "OpenCVのライブラリの環境が構築できる",
        "０から始めて画像処理の様々な動きやその背景で何をしているのかが分かる",
        "OpenCVの使い方が分かる　その１：画像を読み込み、処理し、出力する一連の流れが行える。エッジやブロブの検出",
        "OpenCVの使い方が分かる　その２：動画の扱い、トラックバーの作成、物体の追跡",
        "OpenCVの使い方が分かる　その３：原理を理解して、ライブラリに無いものでもコーディングに挑戦：実践力を身に付ける"
      ],
      "course_content": {
        "イントロダクション": [
          "このコースの概要",
          "画像処理とは・OpenCVとは"
        ],
        "環境の構築": [
          "Anacondaのインストール【Windows】",
          "Anacondaのインストール【Mac】",
          "OpenCVの導入【Windows】",
          "OpenCVの導入【Mac】",
          "*環境構築が上手く行かない時",
          "画像・動画のダウンロード",
          "Python文法とJupyter Notebookについて"
        ],
        "画像処理の基礎": [
          "画像の基礎知識",
          "画像の表示・出力",
          "動画の表示・出力",
          "ウインドウの調整",
          "リサイズ",
          "色空間・グレースケール",
          "ヒストグラム",
          "ヒストグラム均一化",
          "γ変換",
          "トラックバーの作成",
          "マウスイベント",
          "図形の描画・文字の記述",
          "２値化",
          "小演習：トラックバー + 2値化"
        ],
        "画像処理・画像解析": [
          "アファイン変換",
          "透視変換",
          "畳み込みとは",
          "畳み込みの基礎",
          "画像の平滑化",
          "画像の微分とは",
          "エッジの検出(Sobel・Laplacian)",
          "エッジの検出(Canny)",
          "直線・円の検出",
          "モルフォロジー演算",
          "インペイント",
          "特徴抽出とは",
          "特徴抽出",
          "顔検出",
          "ブロブの検出",
          "輪郭の検出"
        ],
        "動画処理・動画解析": [
          "色検出",
          "オプティカルフロー",
          "MeanShift・CamShift",
          "背景差分",
          "パーティクルフィルターとは",
          "パーティクルフィルターの実装"
        ],
        "補講": [
          "Jupyter notebookの起動と終了",
          "文法ミニマム1",
          "文法ミニマム2",
          "尤度とは"
        ],
        "ボーナスレクチャー": [
          "参考となるURLの紹介",
          "講師の他の講座のご紹介",
          "講義で使用したnotebook"
        ]
      },
      "requirements": [
        "Pythonの文法は理解できている前提です。ただ、補講に最低限の文法を説明しますのである程度補えます。",
        "Jupyter notebookの使い方",
        "画像処理については予め知っておく必要はありません。",
        "最低限の数学：微分と積分のイメージは知っておく必要があります。行列についても基本的な計算は知っておくのが望ましいです。"
      ],
      "description": "このコースはPythonでOpenCVというライブラリを使った画像処理の入門コースです。\nOpenCVとは元々はIntelがC++主導で開発を進めていた画像処理用のライブラリですが、Pythonから使うことで様々な画像処理が短いプログラミングで書くことができ、画像処理の入門には適しています。\n\n\n【人事の方/マネージャークラスの方へ】\n本コースは次のような使い方が可能です。\n・業務で画像処理が必要になったが、これまで画像処理は全くやった事が無く、画像処理の知識が無い社員の方を育成したい。\n・部門でAI人材を育成しており、特に画像系処理のAI人材を育成したい。\n\n\nOpenCVは深層学習ライブラリのTensorFlowやPyTorchと併せて使われることも非常に多く、画像系AI人材の育成に適しています。\nこの為、画像処理系のAI人材を育成されたい場合、本コースと以下の深層学習のコースをセットで受講されると十分な基礎が身に付きます。\n【Hands Onで学ぶ】PyTorchによる深層学習入門\n\n\n【受講上の注意点】\n注意点ですがPythonの基礎的な文法の解説はほとんどありませんので、Pythonの基本的な文法(リスト、for文、if文など)には習熟しておく必要があります。\n(OpenCVの文法の解説はもちろんあります。)\nまた対象のOSは基本的にはWindowsです。\n(Macの場合異なるのは、AnacondaのインストールとOpencvの導入の部分です。一応、テキストベースでの説明はあります。)\n\n文法は最低限の文法を補う講座を設けていますが、本講座は比較的プログラミング量が多いと思われます。\nこの為、Pythonのコーディング経験が全くない方には難しいかもしれません。\n本講座で取り扱う内容としては、大まかには以下の通りです。(詳しくは\"本講座の概要\"、\"画像処理とは・OpenCV\"とはをご覧ください。)\n\n・環境の構築（OpenCVの導入）\n・画像/動画の入出力\n・トラックバー / マウスイベント\n・色空間/グレースケールへの理解\n・平滑化/エッジの検出などの畳み込み処理\n・2値化\n・特徴点の抽出\n・色検出、オプティカルフローなどの物体追跡\n・パーティクルフィルターの理論と実装\nまた本講座で取り扱わない内容としては\n・機械学習\n・カメラモデル\n・SIFT/SURFなどのライセンス上商用利用しにくいもの\nです。",
      "target_audience": [
        "Pythonには習熟しており、画像処理に興味のある方",
        "Pythonでのプログラミングの幅を広げたい方",
        "OpenCVの使い方を学びたい人"
      ]
    },
    {
      "title": "Python для начинающих: базовый курс",
      "url": "https://www.udemy.com/course/python-for-beginners-basics/",
      "bio": "Быстрое и эффективное обучение программированию с нуля на Python3 - одном из самых популярных языков программирования",
      "objectives": [
        "Базовым основам алгоритмики и программирования",
        "Работать с популярной средой разработки PyCharm",
        "Реализовывать основные элементы и конструкции программирования на языке Python",
        "Разрабатывать код различными способами",
        "Составлять правильные и эффективные алгоритмы и их блок-схемы",
        "Писать код в стиле процедурного программирования на Python",
        "Писать код в стиле объектно-ориентированного программирования на Python",
        "Работать со встроенными и сторонними модулями, а также модулями стандартной библиотеки",
        "Разрабатывать собственные модули и многомодульные приложения",
        "Выполнять тестирование и отладку программного кода различными способами",
        "Работать поэтапно над большими комплексными проектами \"с нуля\"",
        "Писать \"красивый\" и понятный код",
        "Разбирать \"чужой\" код",
        "Решать практические задачи разного уровня сложности"
      ],
      "course_content": {
        "Введение": [
          "Структура курса",
          "Алгоритм и программа",
          "Языки программирования"
        ],
        "Подготовка рабочего пространства": [
          "Установка Python",
          "Установка PyCharm"
        ],
        "Алфавит языка Python": [
          "Алфавит языка. Лексемы",
          "Ключевые слова. Идентификаторы. Литералы. Операции. Разделители",
          "Отступы и комментарии"
        ],
        "Типы данных. Операции и выражения": [
          "Пояснения к домашним заданиям",
          "Типы и модель данных",
          "Тип None. Логический тип данных",
          "Числовой тип данных",
          "Последовательности",
          "Текстовые последовательности",
          "Бинарные последовательности",
          "Множества",
          "Словари",
          "Контрольная работа",
          "Разбор контрольной работы (часть 1)",
          "Разбор контрольной работы (часть 2)",
          "Разбор контрольной работы (часть 3)"
        ],
        "Ветвления и циклы": [
          "Ветвления и циклы",
          "Ветвления",
          "Циклы с условием",
          "Циклы со счетчиком",
          "Операторы передачи управления",
          "Условие else в циклах",
          "Матрицы",
          "Контрольная работа",
          "Разбор контрольной работы (часть 1)",
          "Разбор контрольной работы (часть 2)",
          "Разбор контрольной работы (часть 3)"
        ],
        "Функции": [
          "Общие сведения о функциях",
          "Аргументы функции",
          "Анонимные функции",
          "Рекурсивные функции",
          "Область видимости переменных",
          "Строки документации",
          "Контрольная работа",
          "Разбор контрольной работы (часть 1)",
          "Разбор контрольной работы (часть 2)",
          "Разбор контрольной работы (часть 3)"
        ],
        "Ввод и вывод данных": [
          "Стандартные функции ввода-вывода",
          "Форматированный вывод",
          "Работа с файлами",
          "Модули OS и OS.PATH",
          "Контрольная работа",
          "Разбор контрольной работы (часть 1)",
          "Разбор контрольной работы (часть 2)",
          "Разбор контрольной работы (часть 3)"
        ],
        "Объектно-ориентированное программирование (ООП)": [
          "Введение в ООП",
          "Классы и объекты",
          "Свойства класса: статические и динамические",
          "Методы класса: статические, классовые, уровня класса",
          "Конструктор, инициализатор и деструктор",
          "Инкапсуляция. Модификаторы доступа",
          "Наследование. Множественное наследование",
          "Полиморфизм",
          "Абстракция",
          "Контрольная работа",
          "Разбор контрольной работы (часть 1)",
          "Разбор контрольной работы (часть 2)",
          "Разбор контрольной работы (часть 3)",
          "Разбор контрольной работы (часть 4)"
        ],
        "Модульное программирование": [
          "Введение в модульное программирование",
          "Модули и пакеты",
          "Установка, обновление и удаление модулей",
          "Подключение и использование модулей",
          "Компиляция (кэширование) модулей",
          "Пользовательские модули",
          "Контрольная работа",
          "Разбор контрольной работы (часть 1)",
          "Разбор контрольной работы (часть 2)",
          "Разбор контрольной работы (часть 3)"
        ],
        "Тестирование и отладка": [
          "Отладка программ (теоретическая часть)",
          "Отладка программ (практическая часть)",
          "Контрольная работа"
        ]
      },
      "requirements": [
        "Знания школьного курса математики",
        "Современный компьютер с доступом в Интернет",
        "Желание и мотивация научиться программировать!"
      ],
      "description": "Python - это один из самых популярных языков программирования в мире. Он используется в таких сферах, как анализ данных, машинное обучение, веб-разработка, DevOps, разработка игр и т.д. Кроме того многие крупные международные компании, такие как Google, Facebook, Dropbox, Spotify, Quora, Netflix, на определенных этапах разработки своих продуктов использовали именно язык программирования Python.\nЗа счёт своего простого синтаксиса и отсутствия необходимости в компиляции Python хорошо подходит для легкого обучения программированию с нуля, позволяя уделять большее внимание изучению алгоритмов, концептов и парадигм.\nВ этом курсе вы последовательно шаг за шагом пройдете все необходимые этапы, чтобы научиться разрабатывать код на языке программирования Python. По окончании курса вы будете не только обладать всеми основными базовыми знаниями в области программирования и разработки программных продуктов, но также уметь составлять правильные и эффективные алгоритмы, писать \"красивый\" и понятный код, а также разбирать \"чужой\" код и поэтапно работать над большими комплексными проектами \"с нуля\". Кроме того вы также научитесь выполнять тестирование и отладку программных продуктов различными способами и работать с такой популярной средой разработки как PyCharm.\nДанный курс содержит огромное количество практических примеров, а также задач для самостоятельного решения, которые помогут не только лучше понять и закрепить пройденный материал, но также развить так называемое \"алгоритмическое мышление\" и наиболее быстрым и эффективным образом подготовиться к собеседованию на должность разработчика Python.\nВам не придется тратить недели и месяцы на поиски материалов самостоятельно, все что вам нужно собрано в данном курсе!\nГотовы начать?\nРегистрируйтесь на курс прямо сейчас и сделайте свой первый большой шаг в мир программирования и высоких технологий!",
      "target_audience": [
        "Для новичков без знаний и опыта в области программирования",
        "Для начинающих разработчиков, желающих научиться писать код на языке Python",
        "Для начинающих разработчиков, желающих научиться решать практические задачи быстро и эффективно",
        "Для начинающих разработчиков, желающих быстро и качественно подготовиться к собеседованию на должность Python-разработчика"
      ]
    },
    {
      "title": "Практический курс для новичков по SQL и PostgreSQL",
      "url": "https://www.udemy.com/course/bestpostgres/",
      "bio": "Программирование баз данных: с СУБД PostgreSQL и языком SQL: теория и практика с разборами ДЗ",
      "objectives": [
        "Реляционная модель и SQL",
        "Типы данных PostgreSQL",
        "Создание БД и таблиц",
        "Отношения 1 к 1, 1 ко многим, многие ко многим",
        "Выборки - SELECT",
        "Фильтрация данных - WHERE",
        "Сортировка и группировка данных",
        "Операторы UNION, INTERSECT, EXCEPT над множествами",
        "Соединения таблиц",
        "Подзапросы",
        "Ключи: первичные и внешние",
        "Ограничения",
        "Последовательности",
        "Вставка, удаление, обновление",
        "Проектирование БД",
        "Индексы",
        "Транзакции",
        "Безопасность",
        "Множество ДЗ"
      ],
      "course_content": {
        "Введение в SQL": [
          "Основные концепции",
          "Реляционная модель и SQL",
          "Почему PostgreSQL",
          "Инсталируем PostgreSQL",
          "Типы данных в PostgreSQL",
          "Создание БД",
          "Создание таблиц",
          "Отношение \"один ко многим\"",
          "Отношение \"один к одному\"",
          "Отношение \"многие ко многим\"",
          "Создаём Northwind"
        ],
        "Простые запросы с SELECT": [
          "Полная выборка",
          "Выборка и элементарные арифметические операции",
          "DISTINCT",
          "COUNT",
          "ДЗ \"простые выборки\"",
          "ДЗ \"простые выборки\" - Решение",
          "WHERE",
          "AND, OR",
          "BETWEEN",
          "IN & NOT IN",
          "ORDER BY",
          "MIN, MAX, AVG",
          "ДЗ \"простые выборки-2\"",
          "ДЗ \"простые выборки-2\" - Решение",
          "LIKE",
          "LIMIT",
          "Check on NULL",
          "GROUP BY",
          "HAVING",
          "UNION, INTERSECT, EXCEPT",
          "ДЗ \"группировка, сопоставление, сортировка\"",
          "ДЗ \"группировка, сопоставление, сортировка\" - Решение"
        ],
        "Соединения - Joins": [
          "Знакомство с соединениями",
          "INNER JOIN",
          "LEFT, RIGHT JOIN",
          "SELF JOIN",
          "USING & NATURAL JOIN",
          "AS - псевдонимы",
          "ДЗ \"Joins\"",
          "ДЗ \"Joins\" - Решение"
        ],
        "Подзапросы": [
          "Введение в подзапросы",
          "WHERE EXISTS",
          "Подзапросы с квантификаторами ANY, ALL",
          "ДЗ \"Подзапросы\"",
          "ДЗ \"Подзапросы\" - Решение"
        ],
        "DDL - управляем БД и таблицами": [
          "Управляем таблицами",
          "ДЗ 1 по DDL",
          "ДЗ 1 по DDL - Решение",
          "Primary Key",
          "Foreign Key",
          "Check",
          "Default",
          "Sequences",
          "Sequences & Tables",
          "INSERT",
          "UPDATE, DELETE, RETURNING",
          "ДЗ 2 по DDL",
          "ДЗ 2 по DDL - Решение"
        ],
        "Проектирование БД": [
          "Введение в процесс проектирования",
          "Базовые рекомендации",
          "Нормальная Форма (НФ)"
        ],
        "Представления (Views)": [
          "Введение в представления",
          "Создание представлений",
          "Обновляемые представления",
          "Опция Check",
          "ДЗ \"Views\"",
          "ДЗ \"Views\" - Решение"
        ],
        "Логика с CASE, COALESCE и NULLIF": [
          "CASE WHEN",
          "Введение в COALESCE и NULLIF",
          "COALESCE и NULLIF на практике",
          "ДЗ \"Логика\"",
          "ДЗ \"Логика\" - Решение"
        ],
        "Функции SQL и PL\\pgSQL": [
          "Введение в функции",
          "Наша первая функция",
          "Скалярные функции",
          "IN, OUT, DEFAULT",
          "Возврат наборов данных",
          "Введение в PL\\pgSQL",
          "Возврат и присвоение",
          "Декларация переменных",
          "IF / ELSE",
          "Циклы",
          "RETURN NEXT",
          "ДЗ \"Функции\"",
          "ДЗ \"Функции\" - Решение"
        ],
        "Ошибки и их обработка": [
          "Введение",
          "RAISE на практике",
          "ДЗ \"Ошибки и их обработка\"",
          "ДЗ \"Ошибки и их обработка\" - Решение"
        ]
      },
      "requirements": [
        "Любой вменяемый современный компьютер",
        "Базовые знания работы с компьютером"
      ],
      "description": "Учите SQL быстро и эффективно!\nОт автора бестселлера: \"Полное руководство по Python 3: от новичка до специалиста\"\nВы научитесь читать и писать сложные запросы к базам данных, используя один из самых востребованных языков программирования - SQL и супер востребованную СУБД (систему управления базами данных) - PostgreSQL. Все те знания, которые вы получите на курсе легко применимы и к другим СУБД, таким как MySQL, Microsoft SQL Server, Oracle.\nИзучение SQL это один из самых быстрых способов подняться по карьерной лестнице и начать зарабатывать ещё больше. На курсе вы будете учиться и получать задания для собственной проверки и улучшения понимания материала.\nНа данный момент курс покрывает:\nВведение в SQL: концепции, реляционная модель, инсталляция postgres, создание БД, таблиц, виды отношений, типы данных\nПростые выборки: SELECT, DISTINCT, COUNT, WHERE, AND / OR, BETWEEN, IN, ORDER BY, MIN/MAX/AVG, LIKE, LIMIT, GROUP BY, HAVING, UNION/INTERSECT/EXCEPT, проверки на NULL\nСоединения: INNER, LEFT, RIGHT, SELF, USING и NATURAL JOIN\nПодзапросы: WHERE EXISTS, подзапросы с квантификаторами\nDDL: управление ключами (PK, FK), ограничения, последовательности, INSERT, UPDATE/DELETE/RETURNING\nПроектирование БД: основы, рекомендации, нормальные формы (НФ)\nПредставления (Views): основы, создание, обновления через views, опция check\nЛогика с CASE WHEN, COALESCE и NULLIF\nФункции SQL: основы, скалярные функции, IN/OUT/DEFAULT, возврат наборов данных\nФункции PL/pgSQL: основы, возврат и присвоение, декларация переменных, логика с if-else, циклы, RETURN NEXT\nОшибки и их обработка\nИндексы: основы, методы сканирования, виды, EXPLAIN, ANALYZE\nМассивы: основы, создание, нарезка (slicing), операторы, VARIADIC и FOREACH\nПродвинутая группировка с CUBE/ROLLUP\nПользовательские типы: домены, композитные типы, перечисления\npsql и импорт данных\nтранзакции\nбезопасность\nоконные функции\nтриггеры\nи ещё кое-какие менее значимые темы\nЗачисляйтесь на курс прямо сейчас!",
      "target_audience": [
        "Новички в программировании, желающие научиться работать с данными через SQL и PostgreSQL"
      ]
    },
    {
      "title": "C# ile DevExpress'de SQL Tabanlı Ticari Otomasyon Geliştirin",
      "url": "https://www.udemy.com/course/c-ile-devexpressde-sql-tabanl-ticari-otomasyon-gelistirin/",
      "bio": "DevExpress ile stok takip, fatura, cari, raporlama, grafiksel analiz gibi başlıkları modüler bir müfredatla öğrenin!",
      "objectives": [
        "Stok, fatura, cari, hareket, kasa gibi modülleri bulunan Ticari Otomasyon uygulamalarını kolaylıkla oluşturabilmeyi",
        "DevExpress bileşenlerini kolaylıkla kullanmayı",
        "Modüllere ayrılmış proje oluşturabilmeyi",
        "SQL tabanında prosedür, join, trigger sorguları oluşturabilmeyi",
        "İlişkili veri tabanları oluşturmayı",
        "Raporlama, grafiksel analiz gibi işlemleri gerçekleştirmeyi",
        "Veri tabanı kayıt uygulamaları kontrol edebilmeyi ve daha fazlası..."
      ],
      "course_content": {
        "Tablolar": [
          "Tablo Oluşturma",
          "Tablo Oluşturma - 2",
          "Tablo Oluşturma - 3",
          "Tablo Oluşturma - 4",
          "Tablo Oluşturma - 5"
        ],
        "Devexpress'e Genel Bakış Ve Kurulumu": [
          "Devexpress Nedir",
          "Devexpress İndirme ve Kurulım",
          "Devexpress Genel Bakış"
        ],
        "Menüler": [
          "Proje Taslağı Oluşturma",
          "Menü Oluşturma",
          "Menü Detayları"
        ],
        "Ürünler Modülü": [
          "Form Tasarımı",
          "Form Tasarımı - 2",
          "SQL Connection Class Oluşturma",
          "Ürün Listesi Oluşturma",
          "Ürün Ekleme",
          "Ürün Silme",
          "Ürünlerin Gridden Araçlara Taşınması",
          "Ürün Güncelleme"
        ],
        "Müşteriler Modülü": [
          "Form Tasarımı",
          "Tam Ekran Tasarımı",
          "Müşteri Listesi Görüntüleme",
          "İller ve İlçeleri Listeleme",
          "Yeni Müşteri Ekleme",
          "Müşteri Silme",
          "Müşteri Bilgisi Güncelleme"
        ],
        "Firmalar Modülü": [
          "Firmalar Formu Tasarımı",
          "Firmalar Formu Tasarımı - 2",
          "Firma Listesi Oluşturma",
          "Gridden Verileri Araçlara Taşıma",
          "Yeni Firma Ekleme",
          "Temizleme Metodu Oluşturma",
          "Özel Kodları Listeleme",
          "Firma Silme",
          "Firma Güncelleme"
        ],
        "Personeller Modülü": [
          "Form Tasarımı",
          "Personel Listesi",
          "Yeni Personel Ekleme",
          "Gridden Araçlara Veri Taşıma",
          "Personel Silme",
          "Personel Güncelleme"
        ],
        "Rehber Modülü": [
          "Form Tasarımı ve Müşteri Bilgileri",
          "Firma Listesi İletişim Bilgileri",
          "Formlar Arası Mail Adresi Bilgisi Taşıma",
          "Mail Gönderme - 1",
          "Mail Gönderme - 2"
        ],
        "Giderler Modülü": [
          "Form Tasarımı",
          "Sekme Resimlendirme ve Gider Listesi",
          "Yeni Gider Ekleme",
          "Gridden Araçlara Veri Taşıma & Temizleme Metodu",
          "Gider Silme",
          "Gider Güncelleme"
        ],
        "Bankalar Modülü": [
          "Banka Firma İlişkisi",
          "Bankalar Formu Tasarımı",
          "Bankaları Gridde Listeleme",
          "Inner Join Kullanımı",
          "Prosedür Kullanımı",
          "Yeni Banka Bilgisi Ekleme",
          "Look Up Edit Kullanımı",
          "Look Up Edit Kullanımı 2",
          "Seçilen Firmaya Göre ID Değeri Getirme",
          "Prosedür Güncelleme ve Verileri Araçlara Taşıma",
          "Banka Bilgisi Silme ve Temizleme",
          "Banka Bilgisi Güncelleme"
        ]
      },
      "requirements": [
        "Güçlü bir öğrenme arzusu",
        "Temel seviyede C# programlama dili bilgisi",
        "Herhangi bir Visual Studio sürümü kurulu olması"
      ],
      "description": "Pek çok kişi yazılım dünyasına ilk adımı attıktan sonra nasıl proje geliştireceğini nereden başlayacağını bilemez. Bu kapsamlı C# & DevExpress derslerim ile sizleri Sıfırdan İleri Seviyeye çıkarmayı hedefleyerek, yazılım serüveninizde Türkçe hazırlanmış eğitimler ile size bir parça da olsun katkıda bulunmak en büyük arzum.\n---------\nPeki C# Nedir?\nC# Microsoft'un geliştirmiş olduğu yeni nesil bir programlama dilidir ve yine Microsoft tarafından geliştirilmiş olan .Net teknolojisi için geliştirilmiş dillerden biridir. C# ile mobil uygulamalar (iOS, Android, Windows), oyunlar, websiteler ve masaüstü uygulamaları geliştirebilirsiniz!\n---------\nDevExpress Nedir?\nDevExpress  .NET platformunun bir bileşinidir. Açılımı Developer Express’tir. Klasik form araçları yerine DevExpress araç ve bileşenlerini kullanarak görsel ara yüzü çok güçlü form tasarımları yapılabilir. Özellikle grafiksel tabanda ki bileşenleri (component) ile kullanıcı ve geliştiricileri fazlasıyla içine çekmektedir.\n\n---------\nDünya üzerinde yazılım dillerinin popülerlik sıralamasında ilk 5 içinde yer alan “C#” programlama dili ile otomasyon projeleri, veri tabanı kayıt uygulamaları, akıllı sistemler, stok takip ve kontrol uygulamaları, 2D oyunlar ve .Net proje temelleri gibi çeşitli başlıklarda projeler kodlayarak ister hayalinizdeki projeleri gerçeğe dönüştürebilir ister freelancer olarak çalışarak para kazanmaya başlayabilirsiniz.\n---------\nBu derste üzerinden detaylarıyla geçerek öğreneceklerinizi ise şu şekilde sıralayabilirim:\nDevExpress tanıtımı ile başlayıp 50 den fazla DevExpress aracı kullanacak,\nDevExpress bileşenleri ile form tasarımları yapacak,\nOOP tabanında \"metot, sınıf, nesne\" gibi kavramları uygulamalarla öğrenecek,\nSQL veri tabanında proje süresince DML komutlarını (Select, Insert, Update, Delete) öğrenecek,\nSQL veri tabanında proje süresince DDL komutlarını (Create, Alter, Drop) öğrenecek,\nSQL veri tabanında Prosedür, Tetikleyici, Join gibi kavramlara hakim olacak\nSQL veri tabanında İlişkili Tablolar oluşturabilecek,\nVeri tabanında filtreleme işlemleri yapacak,\nRaporlama işlemleri yapacak,\nSQL'de tablo ve veri tabanını en optimal veri tipleri ile oluşturabilecek,\nGrafik, raporlama, dinamik araç oluşturma,, point gibi ekstra daha pek çok yapı hakkında bilgi sahibi olacak\n130 derslik bir gerçek dünya projesi ile uygulama geliştirip akabinde kendi projelerinizi geliştirebileceksiniz!\nTakıldığınız en ufak konularda bile bana 7/24 ulaşarak, sorularınıza en kısa sürede bilgi alışverişi yoluyla cevaplar bulabileceksiniz.",
      "target_audience": [
        "Kod yazarak uygulama geliştirmek isteyenler",
        "C#'ı gerçek dünya problemleri üzerinden öğrenmeyi arzulayanlar",
        "DevExpress ile proje geliştirmek isteyenler",
        "Yazılım dünyasında ilk büyük ölçekli projelerini geliştirmek isteyenler",
        "Ve tabi programlama bilgisini tazeleyip uygulama geliştirmek isteyen herkes"
      ]
    },
    {
      "title": "Lerne Python und automatisiere deinen Alltag (und Job)",
      "url": "https://www.udemy.com/course/python-automatisierung/",
      "bio": "Lerne Python am Beispiel von unzähligen, praxisorientierten Projekten. Schritt für Schritt zum Python-Profi",
      "objectives": [
        "Lerne Python am Beispiel mit spannenden Projekten",
        "Verwende Python, um deinen Alltag und Job zu automatisieren",
        "Bearbeite Bilder und Videos mit Python und erstelle einen Content-Generator für Social-Media",
        "Verschicke E-Mails mit Python und lasse das Programm automatisch im Hintergrund laufen",
        "Automatisiere Office-Workflows mit Python (.docx, .xlsx, .pptx...)",
        "Extrahiere Daten aus Webseiten und sogar auch aus interaktiven Webseiten (Selenium)",
        "Schreibe echte Desktop-Anwendungen mit tkinter",
        "Spare Zeit, indem du lästige Tätigkeiten mit Python automatisierst"
      ],
      "course_content": {
        "Einführung": [
          "Einführung in den Kurs",
          "Download der Kursmaterialien und Slides"
        ],
        "Von Python in der Kommandozeile zu ausführbaren Python-Programmen": [
          "Einführung in diesen Abschnitt",
          "Ein erstes Python-Programm",
          "Python installieren",
          "Erste Befehle in der Python-Shell",
          "Dateitypen: Strings, Ganzzahlen und Kommazahlen",
          "Lernkontrolle",
          "Umgang mit Variablen",
          "Der input - Befehl: Benutzereingaben annehmen",
          "Lernkontrolle",
          "Installation von Visual Studio Code",
          "Ausführbares Python-Programm erstellen (Windows)",
          "Ausführbares Python-Programm erstellen (macOS / Ubuntu)"
        ],
        "Ein erstes PROJEKT: Rendite-Rechner entwickeln": [
          "Projektvorstellung",
          "Typen konvertieren",
          "Aufgabe: Rendite-Rechner entwickeln",
          "Musterlösung: Rendite-Rechenr entwickeln",
          "Bonus: Der Potenz-Operator in Python",
          "Problem: der Rendite-Rechner über 40 Jahre",
          "Die for - Schleife: Anweisungen wiederholt ausführen",
          "Lösung: der Rendite-Rechner über 40 Jahre"
        ],
        "PROJEKT: Viele Einladungsschreiben generieren": [
          "Projektvorstellung",
          "Listen: mehrere Elemente in einer Variablen speichern",
          "Weitere Funktionen der Liste",
          "Eine Liste mit einer for-Schleifen durchgehen",
          "Einladung mit f-Strings schreiben",
          "Texte generieren",
          "Lernkontrolle",
          "Motivation: Textdateien einlesen",
          "Der open - Befehl: Textdateien einlesen",
          "Troubleshooting: Pfadangaben",
          "Persönliche Einladungen anhand einer Textdatei generieren",
          "Exkurs: Kodierungen von Dateien",
          "In (neue) Dateien schreiben",
          "Lernkontrolle",
          "Einladungen als neue Dateien speichern",
          "Die Standard-Bibliothek von Python"
        ],
        "PROJEKT: Dateien in einem Verzeichnis sortieren (Teil 1)": [
          "Projektvorstellung",
          "os.listdir: Den Inhalt von einem Verzeichnis auslesen",
          "Alle Ordner in einem Verzeichnis auflisten",
          "os.mkdir: Einen neuen Ordner anlegen",
          "Lernkontrolle",
          "Prüfen, ob ein Ordner existiert",
          "if - Abfragen: Entscheidungen im Code umsetzen",
          "Mit Booleans rechnen",
          "Den Typ von einer Datei erkennen",
          "shutil.move: Dateien verschieben",
          "lower und upper: Strings groß oder klein schreiben",
          "Lernkontrolle",
          "Exkurs: Schleifendurchlauf überspringen oder vorzeitig abbrechen",
          "Aufgabe: Programm erweitern",
          "elif: Weitere Verzweigungen in if - Abfragen hinzufügen",
          "Sonstige Dateien in separaten Ordner verschieben"
        ],
        "PROJEKT: Dateien in einem Verzeichnis sortieren (Teil 2)": [
          "Übersicht",
          "Strings zerlegen",
          "Lernkontrolle",
          "Exkurs: Schlüssel-Wert-Paare in Dictionaries speichern",
          "Lernkontrolle",
          "Code mit Dictionaries vereinfachen (Teil 1)",
          "Code mit Dictionaries vereinfachen (Teil 2)",
          "Sonstige Elemente in separaten Ordner verschieben (Variante)",
          "Konfigurationen in separate Dateien auslagern"
        ],
        "Der Paketmanager pip und virtuelle Umgebungen mit venv": [
          "Übersicht",
          "Der Python Package Index (PyPI) & der Paketmanager pip",
          "Coole Sprechblasen mit dem Paket Coway erzeugen",
          "Virtuelle Umgebungen mit venv",
          "Abhängigkeiten von einer Anwendung per requirements.txt spezifizieren",
          "Lernkontrolle",
          "Troubleshooting: Vorgehen, wenn Module nicht gefunden werden können",
          "Verknüpfung zu einer Python-Datei erstellen (wenn venv verwendet werden soll)"
        ],
        "Bilder mit Pillows analysieren und bearbeiten": [
          "Überblick",
          "Pillow installieren und ein Bild anzeigen",
          "Ein Bild skalieren und abspeichern",
          "Exkurs: Tupel in Python",
          "Exkurs: Die Punkt-Schreibweise",
          "Lernkontrolle",
          "Bilder universell skalieren",
          "Helligkeit von Bild ändern",
          "Bild in Sepia umwandeln",
          "Logo einfügen (Teil 1)",
          "Logo einfügen (Teil 2)",
          "QR-Codes",
          "QR-Codes mit Python generieren",
          "Aufgabe: Fotografen-Workflow",
          "Musterlösung: Fotografen-Workflow (Teil 1)",
          "Musterlösung: Fotografen-Workflow (Teil 2)",
          "Musterlösung: Fotografen-Workflow (Teil 3)"
        ],
        "PROJEKT: Meme-Generator entwickeln": [
          "Einführung: Meme-Generator",
          "Schritt 1: Meme-Texte und Bilder einlesen",
          "Schritt 2: Bilder und Meme-Texte zufällig auswählen",
          "Schritt 3: Meme-Text auf Bild positionieren",
          "Schritt 4: Textgröße auf Bildgröße anpassen",
          "Schritt 5: Mehrzeilige Meme-Texte",
          "Schritt 6: Meme-Generator finalisieren",
          "Lernkontrolle"
        ],
        "Jupyter Notebooks": [
          "Einführung: Notebooks",
          "Ein erstes Notebook",
          "Ein Jupyter Notebook im Browser öffnen",
          "Mit den Zellen in einem Jupyter Notebook umgehen",
          "Bilder in einem Jupyter Notebook anzeigen",
          "Lernkontrolle",
          "Notebooks mit Markdown dokumentieren",
          "Lernkontrolle",
          "Notebook nach HTML exportieren",
          "Notebook mit nbconvert nach HTML exportieren",
          "Notebook nach PDF exportieren (Windows)",
          "Notebook nach PDF exportieren (macOS) - Installationshinweise"
        ]
      },
      "requirements": [
        "Es werden keine Programmierkenntnisse benötigt",
        "Du solltest einen Laptop oder Computer besitzen. Alle benötigten Tools werden wir bei dir gemeinsam installieren"
      ],
      "description": "Lerne Python und Automatisiere deinen Alltag und Job!\nMöchtest du Python lernen und gleichzeitig deinen Alltag (und Job) automatisieren? Oder suchst du einen Einstieg in die Welt von Python mit vielen Praxisbeispielen? Oder hast du schon etwas mit Python programmiert, und möchtest jetzt deine Fähigkeiten auf das nächste Level bringen? Dann ist dieser Kurs genau das Richtige für dich :)\nIn diesem Kurs lernst du Python - am Beispiel von vielen, anwendbaren Praxisbeispielen. Zudem beinhaltet dieser Kurs unzählige Aufgaben und Quizze - dadurch macht dieser Kurs besonders viel Spaß.\nIm Vordergrund stehen bei diesem Kurs die Projekte. Was für Projekte beinhaltet dieser Kurs?\nErstelle ein Programm, was deinen Download-Ordner automatisch aufräumt\nVerwende Python, um Bilder zu bearbeiten und automatisiere den Workflow eines Fotografen\nErstelle einen lustigen Meme-Generator\nErstelle schicke Reports, die du nach PDF exportieren kannst\nBearbeite Office-Dateien (.pptx, .docx,...) und automatisiere die Erstellung von Zeugnissen\nVerwende reguläre Ausdrücke, um Daten aus Rechnungen (PDF-Dateien) zu extrahieren\nVerschicke automatisch E-Mails und gratuliere deinen Freunden automatisch zum Geburtstag\nExtrahiere Daten aus einer Webseite\nSchreibe echte Desktop-Apps mit tkinter\n\n\nZudem lernst du alles, was du für den Einstieg in Python benötigst:\nVariablen\nDatenstrukturen: Listen, Dictionaries\nFunktionen\nObjektorientierung\nUmgang mit Datumsobjekten\nExkurs Data Science: Daten einlesen, analysieren und visualisieren\nStarte Programme bequem per Mausklick vom Desktop (Verknüpfung)\nErstelle ausführbare .exe-Dateien aus deinem Python-Code (PyInstaller)\nLasse Programme automatisch im Hintergrund laufen (Cronjob)\n\n\nLerne mit dem erfolgreichstem deutschen Udemy Dozenten.\nBekomme die Fähigkeiten, die dich zu einem gefragten Python-Entwickler machen!\nNutze ein einzigartiges Kurskonzept. Ein Kurs mit anspruchsvollen Praxis-Projekten, die es so nur in diesem Kurs gibt!\n\n\nPraxis ist der Lernturbo!\nLerne verstärkt durch spannende Projekte!\nEin effektiver Lernprozess ist die optimale Kombination von Theorie und Praxis. Das Konzept hier in diesem Kurs ist die sofortige Umsetzung von Theorie in die Praxis.\nDas Motto ist hierbei: \"Wir möchten dieses Projekt umsetzen - was für Theorie brauchen wir dafür?\"\n\n\nDieser Kurs soll dir deinen Alltag automatisieren - und nebenbei mit Spaß und Spannung Python beibringen.\nOder kurz ausgedrückt: „Dies ist der Einstieg in die die Welt von Python, den ich mir früher gewünscht hätte. Nach Abschluss dieses Kurses kannst du souverän eigene Tools entwickeln, die dir den Alltag erleichtern.“\n\n\nKlingt gut?\nDann würde ich mich sehr freuen, wenn ich dir noch heute die Tür zur Welt von Python öffnen kann.\nDu lernst mit dem erfolgreichsten, deutschsprachigen Dozenten auf Udemy.\nSchau dir die Bewertungen zu diesem Kurs an und überzeuge dich selbst :)",
      "target_audience": [
        "Leute, die Python anhand von praxisorientierten Beispielen lernen möchten",
        "Leute, die ihren Alltag mit Python automatisieren möchten"
      ]
    },
    {
      "title": "Python ile Sıfırdan İleri Seviye Programlama",
      "url": "https://www.udemy.com/course/python-programlama-kursu-2020-levent-ertunalilar/",
      "bio": "Projelerle, Python, Selenium, PyQt5, Tkinter, Sqlite, Flask, Django, Numpy, Web Geliştirme öğrenmenin tadını çıkarın!",
      "objectives": [
        "Hiçbir programlama bilgisine sahip olmasanız dahi bu kursa rahatlıkla başlayabileceksiniz.",
        "Python ile programlamanın ve algoritmanın temellerini en iyi şekilde öğrenmiş olacaksınız.",
        "Programlamanın iskeleti olan konuları öğrenerek programlamanın en önemli temelini atmış olacaksınız",
        "Nesne Tabanlı Programlamayı öğrenerek bunu hem Python hem de diğer programlama dillerinde rahatlıkla kullanabileceksiniz.",
        "Sqlite veritabanı ile veritabanını kullanmayı öğrenerek, veritabanını kullanan kapsamlı programlar tasarlayabileceksiniz.",
        "PyQt5 ile Python da arayüz tasarlayarak efektif ve ileri düzey programlar oluşturabileceksiniz."
      ],
      "course_content": {
        "Kursa Giriş": [
          "Giriş",
          "Kurstan En İyi Şekilde Nasıl Yararlanılır"
        ],
        "Geliştirme Ortamının Kurulması (Windows)": [
          "Python Kurulumu",
          "Editör Kurulumu"
        ],
        "Geliştirme Ortamının Kurulması (MacOS)": [
          "Python Kurulumu",
          "Editör Kurulumu"
        ],
        "Python'da Sayılar ve Sayısal Operatörler": [
          "Int ve Float",
          "Sayısal Operatörler",
          "Yorum Satırı Oluşturma"
        ],
        "Python'da Değişkenler": [
          "Değişken Tanımlama",
          "Değişken Tanımlama Kuralları",
          "Veri Tipleri ve Dönüşümleri"
        ],
        "Python'da Karakter Dizileri": [
          "Karakter Dizileri (Strings)",
          "Karakter Dizileri Dilimleme",
          "String Formatlama",
          "Stringlerde Kullanılan Metotlar"
        ],
        "Python'da Listeler": [
          "Listeler",
          "Listelerde Temel İşlemler",
          "Listelerde Kullanılan Metotlar",
          "Demetler (Tuples)",
          "Sözlükler (Dictionary)",
          "Sözlüklerde Kullanılan Metotlar",
          "Sets",
          "Value & Referans Veri Tipleri"
        ],
        "Python'da Operatörler": [
          "Atama Operatörleri",
          "Karşılaştırma Operatörleri",
          "Mantıksal Operatörler",
          "Is & In Operatörleri"
        ],
        "Koşullu Durumlar": [
          "If & Else Blokları",
          "If & Elif & Else Blokları",
          "Uygulama - Koşullu Durumlar"
        ],
        "Döngü Yapıları": [
          "Döngü Nedir?",
          "For Döngüleri",
          "While Döngüleri",
          "Break & Continue",
          "Range() Döngü Metodu",
          "Enumerate() Döngü Metodu",
          "Zip() Döngü Metodu"
        ]
      },
      "requirements": [
        "Kursiyerlerin temel bilgisayar kullanma bilgisine sahip olmaları yeterlidir.",
        "Öğrencilerin programlama ve algoritma bilgisine sahip olmaları gerekli değildir."
      ],
      "description": "- Bu kursla sıfırdan ileri seviyeye Python ve Programlama öğrenmenin tadını çıkaracaksınız.\n- Bu kursu alanında profesyonel, pedagojik formasyon eğitimi almış, 2007 yılından beri binlerce öğrenciye yüz yüze eğitim vermiş bir eğitimciden alacağınızı unutmayın.\n\n\nKursumuzda Python programlamayı baştan sona sıfırdan öğreneceğimiz için herhangi bir programlama bilgisine gerek yoktur. Python'ın günden güne popülerliğini artırdığı ve daha da artıracağı tartışılmaz bir gerçektir. Bu nedenle bu kursun önemi oldukça fazladır.\nBu kursun sonunda programlamaya ve Python'a güzel bir başlangıç yapmakla kalmayıp kendinizi uzman seviyesinde bulacaksınız. Tüm bu söylemlerin sizi heyecanlandırdığına eminim. O nedenle haydi gelin kursumuza başlayalım.\n\n\nKursun İşleyişi :\n1. Konu anlatımları esnasında örnek kodlamalar eşliğinde konuları rahatlıkla anlayabileceksiniz.\n2. Bu kursta her konunun zengin ve özenle seçilmiş egzersizleri eşliğinde çok daha kolay öğrenme gerçekleştireceksiniz.\n3. Ünite sonlarındaki örnek projeler ile öğrenmelerinizi kalıcı hale getireceksiniz.\n4. Ünite sonlarında bulunan çalışma soruları ile öğrendiklerinizi pratiğe dökebileceksiniz.\n5. Videoların sonunda kafanıza takılanları, projelerinizde çözemediğiniz sorunları benimle iletişime geçerek ortadan kaldırabileceksiniz.\n\n\n\n\n\n\nBu Kurs İle Öğreneceğimiz Genel Konular:\n- Veri Tipleri ve Veri Tiplerinin Dönüştürülmesi, Verilerin Kullanılması\n- Python Objeleri ve Veri Yapıları\n- Koşullu Durumlar, (if - elif - else yapıları)\n- Döngü Yapıları (while - for), Döngülerle Çalışma\n- Fonksiyonlar\n- Modüller\n- Nesne Tabanlı Programlama (OOP)\n- Hata Türleri ve İstisnalar (Try - Except - Finally yapıları)\n- Dosyalarla Çalışma (Dosya açma, okuma, yazma) ve Dosya Metotları\n- Gömülü Fonksiyonlar\n- Python'da İleri Seviye Modüller\n- Selenium Bot Yazımı\n- Tkinter ile Arayüz Geliştirme\n- İleri Seviye Tekinter Kullanımı\n- PyQt5 ile Arayüz Geliştirme\n- Sqlite ile Veritabanı Programlama\n- Flask Framework ile Web Programlama\n- Django ile Web Geliştirme\n- Veri Analizi - Numpy\n\n\n*** Bu kurs sürekli kendini yenileyen ve geliştiren bir kurs olacağı için yeni ders konuları ve yeni içerikler eklenmeye devam edecektir.",
      "target_audience": [
        "Programlamaya henüz başlayamamış olan, sıfırdan programlama öğrenmek isteyenler",
        "Programlamaya giriş yapmış ama kendini daha da geliştirmek isteyenler",
        "Başka bir programlama dilini öğrenmiş ya da yarıda bırakıp Python öğrenmek isteyenler",
        "Python'ı temel seviyede bilen ama bununla yetinmeyip uzman seviyesine ulaşmak isteyenler"
      ]
    },
    {
      "title": "Python | Proje ve Uygulama ile Sıfırdan Zirveye Programlama",
      "url": "https://www.udemy.com/course/python-proje-ve-uygulama-ile-sifirdan-zirveye-programlama/",
      "bio": "Python ve standart kütüphaneleri uygulama ile öğrenin!",
      "objectives": [
        "Bilgisayarın ve programlama dillerinin çalışma mantığını öğrenip en temelden bu konuya hakim olacaksınız.",
        "Nesne Yönelimli Programlama (OOP) Felsefesini tam olarak öğrenip herhangi bir programlama dilinde dahi kolayca uygulayabileceksiniz.",
        "UML Modelleme Dili ile birlikte \"Nesne Teknolojisini\" ayrıntılarıyla öğreneceksiniz.",
        "Günümüzde popüler olan ve zirvede kalmaya devam eden Python Programlama Dilini sıfırdan zirveye öğrenmiş olacaksınız.",
        "Python ile içerisinde bulunan hazır fonksiyonlar ve hazır modüllerin keyifli bir şekilde kullanımını öğreneceksiniz.",
        "Çoğu kaynaklarda es geçilen ancak sürdürülebilir yazılım geliştirmek için önemli olan \"temiz kod\" yazımını öğreneceksiniz.",
        "Python dilini rastgele değil, profesyonel ve PEP8 standartlarına uygun olarak öğreneceksiniz.",
        "Sadece konu anlatımla değil popüler soruları ödev olarak çözüp uygulama derslerinde de pratiklerini yapabileceksiniz.",
        "Python ve Programlama dillerine güçlü bir temel hazırlayıp \"Python Teknolojilerine\" zemin hazırlamış olacaksınız.",
        "Python dili ile birlikte gelen standart modüllerini proje ve uygulamalarla öğrenip gelişiminize katkı sağlayacaksınız.",
        "Sürekli güncel tutulan kursumuz sayesinde yeni proje ve uygulamalarda yapabileceksiniz.",
        "Kurs sayesinde yüzlerce örnek uygulama ve proje geliştireceksiniz."
      ],
      "course_content": {
        "Kurs Hakkında": [
          "Bu Kurs Kimler İçin? Katkıları Nelerdir?",
          "Genel Tanıtım",
          "Neden Python ?",
          "Nasıl Çalışmalıyım?",
          "Mutlaka İzlenmesi Gereken Önemli Duyurular",
          "Faydalı Kaynaklar"
        ],
        "Temel Bilgiler": [
          "Bilgisayar Nasıl Çalışır? Transistorlar Nedir?",
          "Bit ve Byte Nedir? İkilik Sayı Sistemi",
          "ASCII Tablosu ve Bit Değerleri",
          "Programlama Dillerinin Temelleri",
          "Programlama Dillerinin Sınıflandırılması",
          "Derleyiciler, Yorumlayıcılar ve JIT Derleyicileri",
          "Assembler, IDE ve Editörler"
        ],
        "Python Hakkında": [
          "Python Nedir?",
          "Python Nasıl Çalışır? Platform Bağımsızlık Nedir?",
          "CPython ve Bytecode Dönüştürme İşlemi",
          "Cython",
          "PyPy",
          "Jython ve IPython",
          "Resmi Web Sitesi İncelemesi",
          "Python Versiyonları ve PYPI"
        ],
        "Windows İçin Python Kurulumu": [
          "Python Kurulumu",
          "Windows Path Kavramı"
        ],
        "Linux İçin Python Kurulumu": [
          "Python Kurulumu ve Güncellemesi"
        ],
        "MacOS İçin Python Kurulumu": [
          "Python Kurulumu"
        ],
        "Python ile Çalışmaya Başlamak": [
          "Python ile Çalışmak",
          "Neden Terminal ile Çalışıyoruz?",
          "IDLE Arayüzü",
          "Yapılan En Sık Hatalar"
        ],
        "Geliştirme Ortamı Kurulumu": [
          "Popüler IDE ve Editörler",
          "Visual Studio Code Kurlumu (Tercih)",
          "(Opsiyonel) PyCharm Kurulumu",
          "(Opsiyonel) Anaconda Dağıtımı, Jupyter Notebook ve Spyder Kurulumu"
        ],
        "VS Code Kullanılan Eklentiler": [
          "VS Code Gerekli Eklentiler - 1",
          "VS Code Tema ve İkon Eklentileri"
        ],
        "DERS: Temel Kavramlar": [
          "String(str) Veri Türü - Giriş",
          "Kaçış Karakterleri",
          "Sayılar(numbers) Veri Türü",
          "Aritmetik Operatörler - Giriş"
        ]
      },
      "requirements": [
        "Temel düzeyde bilgisayar kullanabilmek."
      ],
      "description": "Bu kurs ile birlikte sadece Python dilini değil programlamaya girişin temelini de atacaksınız. Kursumuz daha önce hiç programlama dili eğitimi almamış kişileri temel alarak hazırlandığı için tüm konular temel düzeyden anlatılmaya başlanmıştır. Ayrıca kursumuz ileri seviye yapıları da içerdiği için herhangi bir seviyede kursa katılım sağlayabilirsiniz.\n\n\nKurs içerisinde Python dilinin temelleri ile birlikte uygulamalar, projeler ve standart kütüphane anlatımıyla desteklenmiştir. Programlama dilleri açısından önemli olan \"Nesneye Yönelik Programlama\" teknolojisi kurs boyunca önemli bir kavram haline gelmiş ve çokça üzerinde durularak anlatımı sağlanmıştır.\n\n\nNot: Kurs henüz ilk izlenim aşamasındadır. Python dilinin standart kütüphaneleri eklenerek kurs güncellemesi devam edecektir. Yeni uygulama ve projelerin eklenmesiyle kurs tamamlanacaktır.\n\n\nKursumuzda \"Nesneye Yönelik Programlama\" teknolojisine büyük önem verildiği gibi bu teknolojinin tam anlaşılabilmesi için UML modelleme diline de yer verilmiştir. Böylelikle sınıf diyagramlarıyla ekip çalışmaları yapabilirsiniz.\n\n\nKursumuz sizlerden gelen geri dönüşler ile birlikte ilerleyeceği için yeni video eklemeleri ve projeler sürekli güncellenecektir. Kursun son bölümünde Python Programlama Dilinin standart kütüphaneleri anlatılacak ve kurs tamamlanacaktır. Bu sayede hem Python dilini hem de bu dilin yeteneklerini kullanarak Programlama Dili temelinizi güçlü bir şekilde atmış olacaksınız.\n\n\nBu Kurs Kimler İçin?\nYazılım geliştirmeye merakı olan kişiler,\nHiç programlama bilgisi olmayan ve öğrenmeye hevesli olan kişiler,\nDaha önce bu alanda çalışmış ve temel oluşturmak isteyen kişiler,\nPython programlama diline iyi bir temel oluşturmak isteyen kişiler,\nÜniversitelerin çeşitli bölümlerinde «Programlama Dilleri» derslerini görmüş ve halihazırda eğitim gören kişiler,\nLise, üniversite ve çeşitli kurumlarda bu eğitimleri alan kişiler,\nYazılıma ve programlamaya merakı ve isteği olan herkes bu kurstan faydalanabilir.\nBu Kurs Size Ne Katacak?\nDaha önce hiçbir programlama dili eğitimi görmemiş kişiler dikkate alınarak hazırlanan bir kurs olduğu için kursumuz size profesyonel biçimde programlama dili temeli verecektir.\nProgramlama dilinin temelini ve yapıları öğrendikten sonra dilediğiniz farklı programlama dilini de kısa sürede öğrenebilirsiniz. Önemli olan temeli düzgün kurabilmektir.\nBu kurs sayesinde Python dilini öğrenmekle kalmayıp mantığını da tam olarak anlayacaksınız.\nBir yazılım geliştiricisi olmak için gereken ve öğrenilmesi şart olan konular hakkında fikir sahibi olacaksınız.\nPython dili ile birlikte içerisinde hazır olarak gelen standart modülleri de öğrenip uygulamalar geliştireceksiniz.\nThanks to standard modules; You can write bot (script) applications, read data from websites, perform mathematical operations, develop graphical interface applications, perform operations on various files such as PDF and CSV, learn the concept of Database and develop projects, learn various crypto algorithms and have a very strong Introduction to Programming.\nWith this course, you will be able to solve various algorithmic problems. In this way, you will be able to improve your perspective on problems.\nYou will be able to learn a subject in detail with the \"Topic Explanation\" sections in the course system. Explanation examples were made where necessary and lessons were taught through examples.\nYou have been asked to answer various questions in a principled manner through practice and homework questions. In this way, you will repeat what you have learned. You can also learn by watching the solution videos of these applications. In this way, it is aimed to improve your algorithmic perspective.\nAt the end of the basic concepts, various projects were developed and how to use the learned information in real life was also explained. In this way, you will be able to develop various simulation software.\nYou will have the opportunity to continuously learn as this course is constantly updated and additions will continue to be made according to needs.\nWhy Python?\nSince it is a relatively easy syntax, it can be learned in a short time.\nSince it has an active and large developer community, it is constantly updated and support is easy to get.\nSince there is so much technology today, libraries that are capable of working on every platform are used. (web, mobile, desktop)\nPopular topics today; artificial intelligence, machine learning, deep learning, bot software, cyber security, etc. It is the most used programming language in fields.\nPopular companies; Companies such as Instagram, Google, YouTube, NASA use Python.\nPython is a High Level Programming language. Therefore, it is very easy to learn and develop.\nMore than 305,000 projects have been developed and more than 2 million resources have been published on the official site by Python language developers so far. Additionally, over 500,000 users are actively working in the Python software repository.\nPython works platform independent. Any software you write in Python will run on all operating systems.\nThanks to the different compiler and interpreter mechanisms of the Python language, its speed and performance have reached a level that can be increased.\nPython offers great convenience to developers thanks to the ready-made libraries it contains. For example, you can perform facial recognition by writing just a few lines of code.",
      "target_audience": [
        "Programlama dillerinin temelini öğrenmek isteyen kişiler.",
        "Yazılıma ve programlamaya merakı ve isteği olan kişiler.",
        "Hiç programlama bilgisi olmayan ve öğrenmeye hevesli olan kişiler.",
        "Daha önce bu alanda çalışmış ve temel oluşturmak isteyen kişiler.",
        "Python programlama diline iyi bir temel oluşturmak isteyen kişiler.",
        "Üniversitelerin çeşitli bölümlerinde «Programlama Dilleri» derslerini görmüş ve halihazırda eğitim gören kişiler",
        "Lise, üniversite ve çeşitli kurumlarda bu eğitimleri alan kişiler.",
        "Nesneye yönelik programlama ve modellemelerini öğrenmek isteyen kişiler."
      ]
    },
    {
      "title": "Python | Sıfırdan İleri Seviyeye Yazılım Kursu | 2025 | 30S",
      "url": "https://www.udemy.com/course/sfrdan-ileri-seviyeye-python-dersleri-2021/",
      "bio": "Sıfırdan Python Dersleri ile Python öğren. Numpy,Beatifulsoup,Turtle,Math,OS,Requests ile yaratıcı Python kodları yaz...",
      "objectives": [
        "Bu kursa katılarak Python dilini,gerçekten ANLAYARAK öğreneceksiniz.",
        "Hiçbir ön bilgi sahibi olmadan PROGRAMLAMANIN mantığını kavramış olacaksınız.",
        "Devamlı güncellenen bu kursta durmadan yeni modüller öğreneceksiniz.",
        "Python dilinin en ince detaylarını öğreneceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Bilgisayar",
        "İnternet",
        "Öğrenme isteğiniz..."
      ],
      "description": "\"Python, programlama dünyasında kapılarını aralayan büyüleyici bir dil. Bu kurs, sıfırdan başlayarak Python'un temellerini kavramanızı ve ileri seviyeye ulaşmanızı sağlayacak. Kodlama bilginiz olmasa bile endişelenmeyin, adım adım rehberlik edeceğiz.\n\n\nTemel yapı taşlarından başlayarak, değişkenlerden kontrol yapılarına, fonksiyonlardan nesne yönelimli programlamaya kadar her konuyu detaylıca ele alacağız. Gerçek dünya projeleriyle pratik yaparak öğrenme deneyiminizi zenginleştireceğiz.\n\n\nVeri analizi, yapay zeka, web geliştirme gibi alanlarda Python'un gücünü keşfedeceksiniz. Kurs boyunca size yol gösterecek interaktif uygulamalarla konseptleri pekiştirecek ve kendi projelerinizi hayata geçireceksiniz.\n\n\nSorularınız için her zaman yanınızdayız. Python dünyasına adım atın, yazılımın büyülü dünyasına giriş yapın ve kariyerinizi şekillendirin. Sizi bu heyecan verici Python yolculuğuna davet ediyoruz!\"\n\n\n\"Bu Python kursu, sizlere yazılımın temellerini öğretmenin ötesine geçiyor. Gerçek projelerle pratik yaparak, özgüvenle uygulamalar geliştirecek ve kendi yolunuzu çizeceksiniz. Python'un esnekliği ve gücünü keşfederken, veri analizi, yapay zeka ve web geliştirme gibi alanlarda da ustalaşacaksınız.\n\n\nKurs boyunca, öğrenme sürecinizi optimize etmek için interaktif quizler ve projelerle desteklenen etkileşimli derslerle karşılaşacaksınız.\nEğitim sonunda, Python'un gücünü kavramış ve kendi projelerinizi gerçekleştirebilir durumda olacaksınız. Bu kursla, geleceğin yazılım dünyasına sağlam bir adım atın ve kariyerinizi zirveye taşıyın. Hadi, Python'un büyülü dünyasına birlikte adım atalım!\"\n\n\nÖyleyse şimdi düşünmeyi bırakıp hayalleriniz için harekete geçin ve kendinize bir iyilik yapın.\nhaydi DURMA!",
      "target_audience": [
        "Öğrenmeyi seven",
        "Yazılıma ilgi duyan",
        "Sıfırdan Python dilini öğrenmek isteyen",
        "Hiçbir ön bilgi sahibi olmayan",
        "Veya herhangi bir seviyede bilgi sahibi olan herkes"
      ]
    },
    {
      "title": "Desenvolvimento de Sistemas com C#",
      "url": "https://www.udemy.com/course/desenvolvimento-de-sistemas-com-csharp/",
      "bio": "Sistemas Desktop com C#",
      "objectives": [
        "Criar sistemas com C#"
      ],
      "course_content": {
        "Iniciar aqui": [
          "Introdução",
          "Instalando e Traduzindo o Visual Studio",
          "Criando um Novo Projeto",
          "Criando as Camadas do Projeto",
          "Instalando o SQL Server 2014",
          "Executando o SQL Server",
          "Modelagem do Sistema",
          "Criando tabela de Categorias",
          "Ciclo de Tabela dos Produtos",
          "Tabela dos funcionarios",
          "Tabela de Entrada",
          "Tabelas de Clientes",
          "Concluindo a Criação das Tabelas",
          "Relacionando as Tabelas",
          "Finalizando os Relacionamentos",
          "Criando a conexão com o banco",
          "Corrigindo erro ao acessar SQL",
          "Backup e Restauração do Banco",
          "Criando procedimento no banco",
          "Procedimento para buscar por nome",
          "Procedimento para inserir",
          "Procedimento de editar e excluir",
          "Criando classe de conexão categorias",
          "Criando os contrutores da classe",
          "Criando método para inserir dados",
          "Usando as procedures criadas",
          "Associando as variaveis das procedures",
          "Criando o metodo de inserção e edição",
          "Programando busca com C#",
          "Finalizando ligação das procedures",
          "Programando a camada Negocio",
          "Programando os metodos",
          "Entendendo finalidade das camadas",
          "Criando formulário de Categoria",
          "Inserindo componentes no formulário",
          "Configurando um Data Grid",
          "Inserção de Registros no formulário",
          "Componente Tooltip",
          "Métodos para mensagens e limpar",
          "Habilitando e desabilitando componentes",
          "Ocultando colunas do Grid View",
          "Convertendo inteiro em String",
          "Eventos de Abertura do formulário",
          "Escolhendo formulario para abrir com o produto",
          "Conectando formulário ao Banco",
          "Solucionando erro no código",
          "Programando botão novo",
          "Programando botão de salvar",
          "Mensagens de confirmaçã",
          "Salvando no banco de dados",
          "Duplo clique no GridView",
          "Editando campos no formulário",
          "Programando checkbox para deleção",
          "Programando botão de deletar",
          "Finalização do CRUD"
        ]
      },
      "requirements": [
        "Pode iniciar diretamente por este curso, sem pré requisito"
      ],
      "description": "O curso completo de desenvolvimento de sistemas com C# possui 55 aulas, nele é mostrado o passo a passo de como estruturar e desenvolver sistemas implementando a modelagem do sistema com Banco de Dados, as camadas de desenvolvimento, estruturação do sistema, CRUD, etc. Neste curso simulamos a criação de uma estrutura para o desenvolvimento de um sistema para comércio, adquira já o curso e se torne um programador.",
      "target_audience": [
        "Todo aluno que tenha interesse em desenvolver sistemas com C#"
      ]
    },
    {
      "title": "Aprenda Python 3 em 6 horas",
      "url": "https://www.udemy.com/course/aprenda-python-3-em-6h/",
      "bio": "Aprenda Python de forma rápida com exemplos práticos para fixarem seu aprendizado e saia na frente",
      "objectives": [
        "Ao término do curso, os alunos saberão a sintaxe básica da linguagem Python",
        "Serão capazes de desenvolver pequenos programas",
        "Estarão aptos para se inscreverem em cursos avançados para desenvolvimento de sistemas WEB que solicitem o conhecimento da linguagem Python com pré-requisitos"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "O que precisaremos instalar",
          "Configurando o ambiente no MacoOS",
          "Configurando o ambiente no Ubuntu",
          "Configurando o ambiente no Windows"
        ],
        "Aprendendo a Sintaxe": [
          "Bem vindo!",
          "Variáveis Parte 1",
          "Variáveis Parte 2",
          "Questão sobre array",
          "Removendo elementos em uma lista",
          "Dicionários",
          "Tuplas",
          "Função print() - Aprendendo sobre a saída de dados no console",
          "Operadores Aritiméticos",
          "Operadores de Comparação e Condicionais",
          "Looping For - Parte 1",
          "Looping For - Parte 2",
          "Looping While",
          "Função input() - Entrada de Dados através do console",
          "Função Time e Webbrowser",
          "App Média Escolar",
          "Resolução do exercício Média Escolar",
          "Deixando o código legível no padrão PEP-8",
          "Exercício - Criar um jogo para adivinhar um número",
          "Resolução do exercício Jogo de adivinhar um número",
          "Finalizando o módulo"
        ],
        "Python no paradigma de Orientação a Objetos": [
          "Abertura",
          "Funções",
          "Módulos",
          "Pacotes",
          "Selecione uma resposta",
          "Classes - Conceito",
          "Classe - Parte 1",
          "Classe - Parte 2",
          "Vamos ver se você entendeu Classes",
          "Importando uma Classe",
          "Encapsulamento parte 1",
          "Encapsulamento parte 2",
          "Herança",
          "Aviso",
          "Descobrindo ID de um perfil do facebook",
          "Aviso sobre as urls do Facebook",
          "Projeto Investigar perfil facebook - Parte 1",
          "Projeto Investigar perfil Facebook - Parte 2",
          "Encerramento"
        ],
        "Módulo Extra - Criando um sistema web com Django": [
          "O que estudaremos nesse módulo",
          "Máquina Virtual (PARTE 1)- Criação de uma máquina virtual através do terminal",
          "Máquina Virtual (PARTE 2)- Criação de uma máquina virtual através da IDE PyCharm",
          "Criando o projeto web com Django 2",
          "Criando o bando de dados e o super usuário",
          "Criando a aplicação Endereço - PARTE 1",
          "Criando a aplicação Endereço - PARTE 2",
          "Criando a aplicação Pessoa - PARTE 1",
          "Criando a aplicação Pessoa - PARTE 2",
          "Uma pausa para falar sobre relacionamento entre tabelas",
          "Criando a aplicação Diligencias - PARTE 1",
          "Criando a aplicação Diligencias - PARTE 2",
          "Criando a aplicação Diligencias - PARTE 3",
          "Corrigindo a escrita do nome da classe Diligência e Endereço",
          "Implementando consulta de diligência pelo nome"
        ],
        "Aplicações Plugáveis": [
          "O que veremos nessa Seção",
          "Criando a máquina virtual e um novo projeto de nome agenda",
          "Criando o banco, o super usuário e levantando o projeto",
          "Importando a aplicação \"enderecos\" do projeto Operações",
          "Dica sobre erro no banco de dados",
          "Adicionando a aplicação \"pessoas\"",
          "Removendo aplicação \"enderecos\" do projeto Agenda"
        ]
      },
      "requirements": [
        "Não é necessário conhecimento prévio para fazer este curso",
        "Qualquer pessoa com conhecimento mínimo em informática poderá participar e aprender",
        "Serão instaladas para o curso dois softwares, o Python 3 e a IDE PyCharm"
      ],
      "description": "O curso foi formulado para que o aprendizado da linguagem de programação Python 3, seja realizado em curto espaço de tempo.  A abordagem é feita de forma simples e direta proporcionando uma assimilação natural dessa linguagem tão solicitada no mercado de trabalho. Não perca seu tempo, ele é muito precioso, garanta sua vaga e desfrute do prazer de ser um programador.\nSerão apresentadas as sintaxes básicas da linguagem, para que o aluno entenda os conceito fundamentais para aprender uma linguagem de programação.\nPor ser para nível iniciante, o curso não abordará banco de dados nem criação de aplicações web.\nO curso está dividido em três seções\nSeção 1 - Configuração do ambiente de desenvolvimento;\nInstalação do ambiente de desenvolvimento:\nInstação do Python 3 e\nInstalação da IDE PyCharm\nSeção 2 - Básico da sintaxe;\nvariáveis, listas, dicionários;\ncomo utilizar as condicionais if, elif e else;\nOperadores aritméticos (soma, subtração, multiplicação e divisão, potenciação etc.);\nOperadores lógicos <, <=, >, >=, ==, and, or, not,  !=\nLooping for e while\nimprimindo dados no terminal\ncapturando dados do terminal\nSeção 3 - OO (Orientação a Objetos)\n\nFunções;\nClasses;\nMódulos;\nPacotes\nAo final da Seção 2 o aluno terá a oportunidade de desenvolver duas pequenas aplicações, uma sobre o cálculo da média escolar de um aluno e o outro a criação de um jogo de adivinhação de um número.\nAo final da Seção 3 será desenvolvida uma aplicação para investigar um perfil do facebook, demonstrando as seguintes informações:\nVerificar fotos bloqueadas do perfil\nVerificar fotos que foram marcadas pelo perfil\nFotos que o perfil comentou\nFotos em perfil curtiu\nHistórico de postagens do perfil\nPostagens que o perfil comentou\nPostagens que o perfil curtiu\nVídeos que foi marcado\nVídeos que o perfil comentou\nVídeos que o perfil curtiu\nGrupos que pertence\nEspero vocês!!!",
      "target_audience": [
        "Pessoas que desejam dar o primeiro passo na área de programação",
        "Quem deseja aprender a programar de forma rápida e sem perder tempo",
        "Quem já conhece outra linguagem e deseja aprender Python de uma forma mais rápida",
        "Profissionais da área de inteligência policial visando expandir seus horizontes"
      ]
    },
    {
      "title": "STM32F4 Discovery Kartı İle Arm Programlama Dersleri",
      "url": "https://www.udemy.com/course/stm32f4-discovery-kart-ile-arm-dersleri/",
      "bio": "STM32F4 Discovery Kartı İle Sıfırdan İleri Seviyeye Arm Programlama Dersleri",
      "objectives": [
        "STM32CubleIde ile Stm32f4 programlama",
        "Gömülü Sistem Tasarımı",
        "Elektronik Projeler",
        "Peripheral Kütüphaneleri",
        "Register Kodlama Mantığı",
        "Hal Kütüphaneleri",
        "Stm32CubeMx kullanımı",
        "StmStudio Kullanımı",
        "Termitte kullanımı",
        "ARM Programlama Becerisi",
        "Robotik Projeler",
        "Çevre Birimler",
        "ARM Mimarisi",
        "Cortex M4",
        "Yazılım İle Donanıma Erişim"
      ],
      "course_content": {
        "Giriş": [
          "Giriş- Gömülü Sistem Mühendisliği"
        ],
        "Mikroişlemci Ve Mikrodenetleyici": [
          "Mikroişlemci Nedir Ve Nasıl Çalışır?",
          "Mikrodenetleyici Nedir Ve Nasıl Çalışır?"
        ],
        "ARM MİMARİSİ VE STM32F407VG DISCOVERY BOARD": [
          "STM32F407VG DISCOVERY KART TANITIMI VE ARM AİLESİ"
        ],
        "YÜKLENECEK PRORAMLAR VE İNDİRİLMESİ GEREKEN DOSYALAR": [
          "iNDİRİLMESİ GEREKEN DOSYALAR",
          "PROGRAMLARIN İNDİRİLMESİ VE KURULMASI"
        ],
        "Sistem Saat Ayarı": [
          "Sistem Saati Ayarlama - System Clock Configuration (SYSCLK) [STDPERIPH]",
          "Sistem Saati Ayarlama - System Clock Configuration (SYSCLK) [STM32CUBEMX]",
          "STM32F4 Clock Yapılandırmasını Anlama Register İle",
          "HSE Osilatörünün açılması Register İle",
          "PLL Ayarlarının Yapılması Register İle",
          "System Clock Ayarlarının Yapılması ve Test Edilmesi"
        ],
        "GPIO İŞLEMLERİ | DİJİTAL VERİ YAZMA": [
          "GPIO Konfigurasyonu ve Led Yakma [STDPERIPH KÜTÜPHANELERİ İLE]",
          "Led Blink [STDPERIPH KÜTÜPHANELERİ İLE]",
          "GPIO Konfigurasyonu ve Led Blink [REGISTER İLE]",
          "GPIO Konfigurasyonu ve Led Blink [HAL KÜTÜPHANELERİ İLE]",
          "Buton Kullanımı Ve Push-Pull/Open Drain Tanımları",
          "Butondan Dijital Veri Okuma Ve Led Yakma [STDPERİPH İLE]",
          "Buton İle Led Uygulaması [STDPERİPH İLE]",
          "Buton ile 7 Segment Display Kullanımı [STDPERİPH İLE]",
          "Butondan Dijital Veri Okuma Ve Led Yakma [REGISTER İLE]",
          "Butondan Dijital Veri Okuma Ve Led Yakma [HAL KÜTÜPHANELERİ İLE]"
        ],
        "KESME - HARİCİ KESME (EXTERNAL INTERRUPT)": [
          "INTERRUPT(KESME) NEDİR? EXTERNAL (HARİCİ) INTERRUPT NASIL KULLANILIR?",
          "External Interrupt Kullanarak Led Yakma [STDPERIPH Kütüphanesi ile]",
          "Çoklu External Interrupt Kullanımı [STDPERIPH Kütüphanesi ile]",
          "External Interrupt Ve Çoklu External Interrupt Kullanımı [REGISTER ile]",
          "External Interrupt Ve Çoklu External Interrupt Kullanımı [HAL Kütüphaneleri ile]",
          "Multi External Interrupt Ödev Çözümü"
        ],
        "ANALOG DIGITAL CONVERTER (ADC) İŞLEMLERİ": [
          "ADC Nedir Ve Nasıl Çalışır?",
          "ADC İçin User Manual Ve Datasheet Okuma",
          "STDPeriph Kütüphanesi İle ADC Okuma İşlemi",
          "ADC Değeri Okuma Ve Led Kontrol Örneği",
          "REGISTER ile ADC Veri Okuma",
          "HAL Kütüphanesi İle ADC Verisi Okuma",
          "HAL Kütüphanesi İle Gerçek ADC Verisi Okuma",
          "Çoklu ADC Okuma Ve Dahili Sıcaklık Sensörü Kullanımı"
        ],
        "DIGITAL ANALOG CONVERTER (DAC) İŞLEMLERİ": [
          "DAC Nedir, Nasıl Çalışır?",
          "DAC Referance Manual Okuma",
          "REGISTER İle DAC Kullanımı",
          "STDPeriph Kütükhanesi İle DAC Kullanımı",
          "STDPeriph Kütüphanesi ile ADC ile Okunan Verinin DAC ile Kullanımı",
          "HAL Kütüphanesi İle DAC İşlemleri",
          "ADC Değeri İle DAC Kontrolü | HAL Kütüphanleri İle"
        ],
        "TIMER": [
          "Timer Nedir ve Nasıl Çalışır?",
          "Genel Amaçlı Timerlar Ve Referance Manual Okuma",
          "Genel Amaçlı Timer Değer Okuma | STDPeriph (SPL) Kütüphanesi",
          "Genel Amaçlı Timer İle Led Kontrolü | STDPeriph (SPL) Kütüphanesi İle",
          "Genel Amaçlı Timer Interrupt | STDPeriph (STL) Kütüphanesi İle",
          "BÖLÜM 11 STM32CUBEIDE KURULUM VIDEOSUNU IZLEYINIZ",
          "Genel Amaçlı Timer Değer Okuma | Registerlar İle",
          "Basic Timer Nedir?",
          "Diğer Timerlar",
          "SysTick Timer Kullanımı | STDPeriph (SPL) Kütüphanesi İle",
          "Timer Interrupt | HAL Kütüphanesi İle",
          "Timer External Trigger Mode 1 | HAL Kütüphanesi İle",
          "Timer External Trigger Mode 1 | HAL Kütüphanesi İle",
          "Timer External Trigger Mode 2 | HAL Kütüphanesi İle",
          "Timer Internal Trigger Inputs | HAL Kütüphanesi İle",
          "Timer Internal Trigger Inputs Interrupt | HAL Kütüphanesi İle",
          "Timer Slave Mode Reset Mode | HAL Kütüphanesi İle",
          "Timer Slave Mode Gated Mode | HAL Kütüphanesi İle",
          "Timer Slave Mode Trigger Mode External | HAL Kütüphanesi İle",
          "Timer Slave Mode Trigger Mode Internal | HAL Kütüphanesi İle",
          "Timer Input Capture | HAL Kütüphanesi İle",
          "Timer Input Capture Internal Interrupt | HAL Kütüphanesi İle",
          "Timer Input Capture External Interrupt | HAL Kütüphanesi İle",
          "Timer Output Compare",
          "PWM Nedir ve Nasıl Çalışır",
          "PWM | STDPeriph (SPL) Kütüphanesi İle",
          "PWM İle Gerilim Ayarlama |STDPeriph (SPL) Kütüphanesi İle",
          "PWM ADC İle Pulse Kontrolü | STDPeriph (SPL) Kütüphanesi İle",
          "PWM İle Servo Motor Kontrolü | STDPeriph (SPL) Kütüphanesi İle",
          "PWM İle Servo Motor Sürme | STDPeriph (SPL) Kütüphanesi İle",
          "PWM | Register İle",
          "PWM | HAL Kütüphanesi İle",
          "PWM Servo Motor Sürme | HAL Kütüphanesi İle",
          "PWM Potansiyometre İle Servo Motor Sürme | HAL Kütüphanesi İle",
          "PWM Dead Time Nedir",
          "PWM Complementary Dead Time | HAL Kütüphanesi İle"
        ]
      },
      "requirements": [
        "STM32F407 DISCOVERY BOARD",
        "C Dili Bilgisi",
        "Kendine inanmış bir öğrenci"
      ],
      "description": "Arm mimarisi gömülü sistemler alanında en yayın olarak kullanılan ve en güçlü işlemci mimarisine sahip olan mimaridir. Bu sebeple kurs müfredatımızda arm mimarisini içinde barındıran STM32F4 Discovery kartı ile sürdürdük.\nPiyasada bulunan ders örneklerinden farklı olarak bu kursta STDPeriph (SPL) Kütüphanesi, Register seviyesinde kodlama ve Hal Kütüphaneleri kullanılarak anlatımlar yapıldı, böylece mimarinin temeline inerek kütüphanelerin mutfağı gösterildi.\nEğitim müfredatında arm mimarisinde saat konfigurasyonlarından en ileri seviye çevresel birimlerin konfigurasyonlarına kadar genel hatları ile neredeyse tüm çevresel birimler detaylı bir şekilde anlatılarak ve bol örnek proje yapılarak anlatıldı. Her çevresel birimin çalışma mantığı detaylı olarak anlatıldıktan sonra, referance manual ve datasheetler ile desteklenerek ezber eğitim tarzından ziyade yorum yaparak öğrencilerin kendi başına kendilerini geliştireceği tarzda bir yol izlenerek anlatıldı.\nEğitimler sonunda bir gömülü yazılımcıda aranan kriterlere sahip olunacağını düşünmekteyiz.",
      "target_audience": [
        "Gömülü Yazılım Mühendisi",
        "Mühendislik Öğrencileri",
        "Gömülü Sistem Mühendisi",
        "Bilgisayar Mühendisi",
        "Elektronik Mühendisi",
        "Elektrik-Elektronik Mühendisi"
      ]
    },
    {
      "title": "C# İLE OOP TEMELLERİ: ADIM ADIM KATMANLI MİMARİ",
      "url": "https://www.udemy.com/course/csharp-ile-adim-adim-katmanli-mimari/",
      "bio": "Uygulamalı Proje Üzerinde OOP (Object Oriented Programming) Kavramlarını Modüler Bir Müfredatla Öğrenin!",
      "objectives": [
        "Nesne Tabanlı Programlama'nın (Object Oriented Programming) inceliklerini",
        "Veri tabanı kayıt uygulamaları kontrol edebilmeyi",
        "Prosedür Yazabilmeyi",
        "Tetikleyici Yazabilmeyi",
        "OOP Alt Yapısında Kod Yazabilmeyi",
        "Sınıf & Nesne & Metot Gibi Başlıklarda Çok Daha İleri Seviyede Bilgi Sahibi Olabilecekler."
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Metotlar",
          "Property",
          "Entity ve Propertyler",
          "Paketlerin Kurulması",
          "Context Sınıfı",
          "Code First Migration",
          "Metot Örnekleri ve Erişim Belirleyiciler",
          "Metotlar",
          "Geriye Değer Döndüren Metotlar",
          "Geriye Değer Döndüren Metotlar 2",
          "String Türde Geriye Değer Döndüren Metotlar",
          "Metotlarda Parametre Kullanımı",
          "Metotlarda Parametre Kullanımı 2"
        ],
        "Sınıflar": [
          "Sınıflar ve Propertyler",
          "Tasarımsal İyileştirmele",
          "Kalıtım"
        ],
        "Ürün İşlemleri": [
          "Product List",
          "Ürünlerin Listelenmesi",
          "Yeni Ürün Ekleme",
          "Ürün Silme",
          "Güncellenecek Ürünlerin Getirilmesi",
          "Ürünün Güncellenmesi"
        ],
        "Müşteri İşlemleri": [
          "Müşterilere Ait Controller Metotların Yazılması",
          "Müşterilere Ait Viewlerin Oluşturulması",
          "Müşterilerde Controller Şartları"
        ],
        "N Katmanlı Mimari": [
          "N Katmanlı Mimari",
          "Katmanların Oluşturulması",
          "Concrete Sınıfı ve Entityler",
          "Migration İşlemi",
          "Abstract ve Interfaceler",
          "Repositories",
          "Generic Interface",
          "Generic Repository",
          "Entity Framework Klasörü"
        ],
        "Business Katmanı": [
          "Business Service",
          "Managerlar",
          "Fluent Validation",
          "Managerların Tamamlanması"
        ],
        "UI Katmanı": [
          "UI İşlemleri",
          "Layout",
          "Partial View Kullanımı",
          "Partilların Tamamlanması",
          "Ürünlerin Listelenmesi",
          "Yeni Ürün Ekleme",
          "Ürün Ekleme İşleminde Validasyon Kontrolleri",
          "Ürün Silme İşlemi",
          "Ürün Güncelleme",
          "Müşteri İşlemleri"
        ],
        "İlişkiler": [
          "Job Tablosu ve İlişkiler",
          "Job Tablosunun Core Projeye Eklenmesi",
          "Job Crud İşlemleri",
          "Font Waesome İkonlar",
          "Include Metodu",
          "Include Metodu 2",
          "Dropdown List ile Meslek Listesi",
          "Dropdown Update",
          "Ayarlar Sayfası"
        ],
        "BÖLÜM 9": [
          "Identity Kütüphaneleri",
          "Identity Kütüphanesinin Contexte Çağrılması",
          "Identity Kütüphanesine Genel Bakış",
          "Migrationda Bazı Revizeler"
        ],
        "BÖLÜM 10": [
          "Register Teması",
          "AppUser Sınıfı",
          "Register View Model",
          "Register İşlemi Denemesi",
          "Register İşleminin Yapılması",
          "Error Identity Describer",
          "Login Backend Kodlarının Yazılması",
          "Login İşlemi",
          "Setting Sayfası",
          "Login Konfigürasyonu",
          "Profil Bilgilerini Düzenleme",
          "LogOut İşlemi",
          "Login Path"
        ]
      },
      "requirements": [
        "Güçlü bir öğrenme arzusu",
        "Kurulu Visual Studio Professional 2017",
        "Temel Seviye C# Bilgisi"
      ],
      "description": "Pek çok kişi yazılım dünyasına ilk adımı atmak ister ancak nereden başlayacağını bilemez. Bu kapsamlı C# dersim ile sizleri Sıfırdan İleri Seviyeye çıkarmayı hedefleyerek, yazılım serüveninizde Türkçe hazırlanmış eğitimler ile size bir parça da olsun katkıda bulunmak en büyük arzum.\n\n---------\nPeki C# Nedir?\nC# Microsoft'un geliştirmiş olduğu yeni nesil bir programlama dilidir ve yine Microsoft tarafından geliştirilmiş olan .Net teknolojisi için geliştirilmiş dillerden biridir. C# ile mobil uygulamalar (iOS, Android, Windows), oyunlar, websiteler ve masaüstü uygulamaları geliştirebilirsiniz!\n---------\nDünya üzerinde yazılım dillerinin popülerlik sıralamasında ilk 5 içinde yer alan “C#” programlama dili ile otomasyon projeleri, veri tabanı kayıt uygulamaları, akıllı sistemler, stok takip ve kontrol uygulamaları, 2D oyunlar ve .Net proje temelleri gibi çeşitli başlıklarda projeler kodlayarak ister hayalinizdeki projeleri gerçeğe dönüştürebilir ister freelancer olarak çalışarak para kazanmaya başlayabilirsiniz.\n---------\nBu derste üzerinden detaylarıyla geçerek öğreneceklerinizi ise şu şekilde sıralayabilirim:\nOOP tabanında \"metot, sınıf, nesne\" gibi kavramları uygulamalarla öğrenecek,\nOOP tabanında veri tabanı uygulaması geliştirebilecek,\nKatmanlı Mimari Yapısı hakkında sıfırdan orta seviyeye gelecek,\nSQL veri tabanında pratik bir projeyle DML komutlarını (Select, Insert, Update, Delete) öğrenecek,\nProsedür yazabilecek,\nİlişki kurabilecek,\nTetikleyici oluşturabilecek,\nEntity, Facade, Business Logic gibi Katmanlar hakkında bilgi sahibi olacak ve bunları pratiğe dökecek,\nVeri tabanında filtreleme işlemleri yapacak,\nSQL'de tablo ve veri tabanını en optimal veri tipleri ile oluşturabilecek,\nTemel OOP yapısı hakkında bilgi sahibi olup uygulamalı projeler yapıp akabinde kendi projelerinizi geliştirebileceksiniz!\n\n\n\n\nTakıldığınız en ufak konularda bile bana 7/24 ulaşarak, sorularınıza en kısa sürede bilgi alışverişi yoluyla cevaplar bulabileceksiniz.",
      "target_audience": [
        "C#'ı gerçek dünya problemleri üzerinden öğrenmeyi arzulayanlar",
        "OOP Mimarisinde İlk Adımı Atmak İsteyenler",
        "Önceden programlama dünyasına adım atmış olan ve kendini geliştirmeyi hedefleyenler",
        "Nesne tabanlı programlama bilgisini tazelemeyi amaçlayan herkes"
      ]
    },
    {
      "title": "Ultimate Python: de cero a programador experto",
      "url": "https://www.udemy.com/course/ultimate-python-de-cero-a-programador-experto/",
      "bio": "Conviértete en programador experto viendo desde lo básico hasta lo más avanzado de Python",
      "objectives": [
        "Escribir código en Python con confianza",
        "Iniciarte en el desarrollo web y machine Learning",
        "Escribir código como un profesional",
        "Automatizar tareas repetitivas",
        "Construir aplicaciones de la terminal",
        "Estructuras de datos especificas de Python",
        "Clases y herencia",
        "Módulos",
        "Basos de desarrollo web con Django",
        "Machine Learning",
        "Trabajar con archivos"
      ],
      "course_content": {
        "Introducción": [
          "Instalando Python",
          "REPL de Python",
          "Editor de código",
          "Primera aplicación",
          "Extensiones",
          "Linter y sus usos",
          "Formateo de código",
          "Ejecutando código",
          "Cómo se ejecuta el código"
        ],
        "Tipos básicos": [
          "Variables",
          "Strings",
          "Formato de strings",
          "Métodos de strings",
          "Secuencias de escape",
          "Números",
          "Módulo math",
          "Calculadora básica",
          "Conversión de tipos"
        ],
        "Control de flujo": [
          "Comparadores lógicos",
          "if, else, elif",
          "if, elif y else con dibujos",
          "Operador ternario",
          "Operadores lógicos",
          "Operaciones de corto-circuito",
          "Cadena de comparadores",
          "For",
          "For else",
          "Iterables",
          "While",
          "Loops infinitos",
          "Loops anidados",
          "Ejercicio",
          "Solución del ejercicio"
        ],
        "Funciones": [
          "Introducción a funciones",
          "Parámetros y argumentos",
          "Argumentos opcionales",
          "Argumentos nombrados",
          "xargs",
          "kwargs",
          "return",
          "Alcance",
          "Depurando funciones",
          "Ejercicio",
          "Solución del ejercicio"
        ],
        "Tipos avanzados": [
          "Listas",
          "Manipulando listas",
          "Desempaquetar listas",
          "Iterar listas",
          "Buscando elementos",
          "Agregando y eliminando",
          "Ordenando listas",
          "Expresiones lambda",
          "Listas de comprensión",
          "map y filter",
          "Tuplas",
          "Sets",
          "Diccionarios",
          "Operador de desempaquetamiento",
          "Filas",
          "Pilas",
          "Enunciado del ejercicio",
          "Solución del ejercicio"
        ],
        "Clases": [
          "Introducción a las clases",
          "Creando clases",
          "Constructor",
          "Propiedades de clase",
          "Métodos de clase",
          "Propiedades y métodos privados",
          "Decorador property",
          "Métodos mágicos",
          "Destructor",
          "Comparando objetos",
          "Contenedores",
          "Herencia",
          "Herencia múltiple",
          "Anulación de método",
          "Ejemplo real",
          "Clases abstractas",
          "Polimorfismo",
          "Duck typing",
          "Extendiendo tipos nativos"
        ],
        "Excepciones": [
          "Introducción a las excepciones",
          "Tipos de excepciones",
          "Else y finally",
          "Invocando excepciones",
          "Excepciones personalizadas"
        ],
        "Módulos": [
          "Introducción",
          "Módulos compilados",
          "Paquetes",
          "Sub-paquetes",
          "Referenciando sub-paquetes",
          "dir",
          "Paquetes con nombres dinámicos",
          "Import condicionados"
        ],
        "Rutas y directorios": [
          "Rutas",
          "Directorios",
          "Inyección de dependencias",
          "Import dinámico de paquetes"
        ],
        "Gestión de archivos": [
          "Introducción",
          "Lectura y escritura",
          "Open",
          "Archivos CSV",
          "Archivos JSON",
          "Archivos comprimidos"
        ]
      },
      "requirements": [
        "No se necesita experiencia en programación, aprenderás todo en este curso"
      ],
      "description": "Si quieres aprender a programar, eres estudiante y quieres pulir tus habilidades o ya eres desarrollador Python y quieres conocer más acerca del lenguaje, tienes que tener este curso en tu curriculum. Derechamente te conviene y de esto mismo se trata este curso!\nPython esta dentro de los lenguajes más populares en la actualidad, debido a que se utiliza para construir aplicaciones grandes y robustas. Desde automatizar tareas simples hasta trabajar con Machine Learning, desarrollo Web o ciencias de datos.\nEn este curso vamos a ver todo lo que necesitas saber sobre Python, lo suficiente para convertirte en un maestro de manera rápida, con videos en cápsulas pequeñas y ejemplos fáciles de seguir. No busques más, este es el curso de Python definitivo.\nDentro de las cosas que veremos en este curso:\n\n\nInstalación de herramientas necesarias\nTipos Básicos\nTipos Avanzados\nControl de flujo\nFunciones\nClases\nExcepciones\nMódulos\nLibrerías nativas\nIndice de paquetes PIP\nLas librerías más populares\nIntroducción a Django\nMachine Learning\nY mucho más!\nEn este curso tendremos ejercicios constantemente entre sus secciones para que podamos aplicar lo aprendido, este es un buen balance entre clases teóricas y clases prácticas.\nEste curso está pensado para personas desde que quieren aprender a programar hasta que quieren convertirse en verdaderos expertos en el lenguaje. No esperes más y aprende todo lo necesario aquí y ahora!",
      "target_audience": [
        "Principiantes que quieren aprender a programar",
        "Principiantes que quieren aprender Python",
        "Desarrolladores profesionales que quieren aprender Python"
      ]
    },
    {
      "title": "Monitoreo con Prometheus, Grafana, Spring boot y Docker",
      "url": "https://www.udemy.com/course/devs4j-monitoring/",
      "bio": "El curso se enfoca en aprender a hacer el monitoreo y alertamiento de una aplicación empresarial",
      "objectives": [
        "Monitorear aplicaciones creadas con Spring boot utilizando Actuator, Micrometer, Prometheus y Grafana",
        "Exponer métricas utilizando Micrometer",
        "Transformar las métricas a un formato que Prometheus puede entender",
        "Realizar Scraping a las métricas utilizando Prometheus",
        "Generar Dashboards para visualizar métricas utilizando Grafana",
        "Generar alertas de salud basadas en métricas",
        "Utilizar Postman para la automatización de pruebas en apis REST",
        "Indirectamente aprenderás un poco de Docker"
      ],
      "course_content": {
        "Introducción a Micrometer": [
          "Introducción",
          "Características de un sistema de monitoreo",
          "Creación de un proyecto simple de Micrometer",
          "Uso del MeterRegistry",
          "Uso del CompositeMeterRegistry",
          "Uso del GlobalRegistry",
          "Tipos de Medidas",
          "Convención de nombres en los sistemas de monitoreo",
          "Uso de Counters",
          "Uso de Timers",
          "Uso de Gauge"
        ],
        "Análisis de una aplicación REST y el ecosistema de métricas": [
          "Creación de proyecto de Spring Framework con Micrometer",
          "Habilitando endpoints de Actuator",
          "Analizando las métricas que expone Spring",
          "Creando una métrica personalizada en Spring",
          "PrometheusMeterRegistry y el formato de Prometheuss",
          "Uso de Timer con Spring framework",
          "Formato de Prometheus para los Timers"
        ],
        "Integración de Spring con Prometheus": [
          "Instalación de Docker",
          "Descargando Prometheus utilizando Docker",
          "Conectando la imagen de Prometheus a nuestra aplicación",
          "Probando la integración con Prometheus",
          "Leyendo las métricas personalizadas de Spring desde Prometheus",
          "Descargando e iniciando imagen de Grafana",
          "Integrando Prometheus con Grafana",
          "Instalación de Postman",
          "Generación de tráfico",
          "Creando un Dashboard con Grafana",
          "Generando peticiones con errores",
          "Importando un dashboard de Grafana",
          "Analizando el Dashboard generado por Grafana"
        ],
        "Ejercicio práctico": [
          "Introducción y descarga del proyecto base",
          "Probando endpoints de usuarios existentes",
          "Creando prueba para endpoint POST",
          "Creando script de prueba para el borrado",
          "Modificando script de prueba para get by id",
          "Ejecutando pruebas y revisando dashboards",
          "Creación de webhook básico de alertas",
          "Combinación de dashboards genéricos con personalizados",
          "Configuración de un notification channel",
          "Configuración de una alerta en grafana",
          "Probando una alerta en grafana",
          "Volviendo a un estatus saludable"
        ],
        "Uso del Prometheus Push Gateway": [
          "Introducción al Prometheus Push Gateway",
          "Iniciando Push Gateway utilizando Docker",
          "Creando un proyecto simple de Spring",
          "Agregando código para la generación de métricas",
          "Publicando métricas al Push Gateway",
          "Probando integración entre Prometheus y el Push Gateway",
          "Arquitectura construida a lo largo del curso",
          "Siguientes pasos"
        ]
      },
      "requirements": [
        "Conocimientos básicos de Java y Spring Framework"
      ],
      "description": "El objetivo de este curso es que los estudiantes aprendan como generar métricas en aplicaciones creadas con Spring framework + Spring boot, para hacerlo se utilizará Actuator + Micrometer y prometheus, con esto se registrarán las métricas generadas por la aplicación en un MeterRegistry y se expondrán a través de los endpoints de Actuator.\n\n\nUna vez expuestas las métricas se iniciará un servidor de Prometheus utilizando Docker el cual extraerá las métricas expuestas por nuestra aplicación y las almacenará brindando un lenguaje de consulta llamado Prometheus query language, con el cuál podremos realizar representaciones gráficas de lo que sucede dentro de nuestra aplicación.\n\n\nEl siguiente paso será iniciar un servidor de Grafana utilizando Docker el cual utilizará como fuente de datos el Prometheus que configuramos, con este podremos realizar dashboards que representen el estado de nuestra aplicación, este dashboard podrá ser un dashboard genérico o uno personalizado creado por nosotros.\n\n\nUna de las configuraciones importantes que se explicará es la creación de alertas a través de las cuales podremos notificar a los desarrolladores que hay un problema de salud y como solucionarlo.\n\n\nEl curso requiere conocimientos básicos de Java y Spring framework, no se explicará como crear una aplicación REST utilizando Spring ya que se asume que existe un conocimiento previo al respecto.",
      "target_audience": [
        "Desarrolladores Java que busquen crear aplicaciones robustas"
      ]
    },
    {
      "title": "Spring e Spring Boot (versione 5): la guida completa",
      "url": "https://www.udemy.com/course/spring-e-spring-boot-la-guida-completa/",
      "bio": "Impara a sviluppare applicazioni utilizzando il framework Spring e la potenza di Spring Boot!",
      "objectives": [
        "I principi del framework Spring (Inversion of Control, Dependency Injection, Aspect Oriented Programming, ecc...)",
        "Sviluppare applicazioni web con Spring MVC",
        "Gestire l'accesso ai dati con JDBC, JPA e Hibernate",
        "Velocizzare lo sviluppo di applicazioni Spring sfruttando la potenza di Spring Boot"
      ],
      "course_content": {
        "Introduzione": [
          "Panoramica sul corso - Slide e sorgenti",
          "Installazione di JDK (AdoptOpenJDK) 8",
          "Installazione di Spring Tool Suite",
          "Configurare Spring Tool Suite per l’utilizzo del JDK 8 installato",
          "Hello World - Creazione di una web app Spring Boot Maven con Spring Tool Suite"
        ],
        "Build automation tool - Maven": [
          "Cos'è la Build automation",
          "Introduzione a Maven",
          "Installazione e configurazione di Maven",
          "Configurare Maven in Spring Tool Suite",
          "Il repository locale di Maven",
          "Panoramica delle funzionalità di Maven - Parte I",
          "Panoramica delle funzionalità di Maven - Parte II",
          "Panoramica delle funzionalità di Maven - Parte III",
          "Panoramica delle funzionalità di Maven - Parte IV",
          "Mettiti alla prova!"
        ],
        "Introduzione a Spring": [
          "Cos’è Spring",
          "Caratteristiche di Spring",
          "Mettiti alla prova!"
        ],
        "Spring Framework Core - Le basi": [
          "Introduzione a Spring Framework",
          "Inversion of Control (IoC)",
          "Dependency Injection (DI)",
          "IoC e DI in Spring",
          "Il container IoC - le classi che implementano ApplicationContext",
          "Creazione del container IoC con XML - esempio Hello world",
          "Creazione del container IoC con Annotation - esempio Hello world",
          "Metadati XML-based",
          "Mettiti alla prova!"
        ],
        "Spring Framework Core - I Bean": [
          "Anatomia di un Bean",
          "I Bean - il ciclo di vita",
          "I Bean - come crearli e istanziarli",
          "Invocare un metodo in fase di creazione di un bean",
          "Invocare un metodo in fase di distruzione di un bean",
          "Definire un metodo init e destroy per tutti i bean",
          "Valorizzare le variabili di istanza ed i bean in fase di configurazione",
          "Individuare il tipo di un bean",
          "Dipendenze tra bean in Spring - Introduzione",
          "Dipendenze tra bean in Spring - Parte I: Constructor Dependency Injection",
          "Dipendenze tra bean in Sring - segue Parte I",
          "Dipendenze tra bean in Spring - Parte II: Setter Dependency Injection",
          "Dipendenze tra bean in Spring - Parte III: quando usare l’attributo depends-on",
          "Inizializzazione differita di un bean - lazy initialization",
          "L’autowiring - definizione automatica delle dipendenze",
          "Lo scope di un bean",
          "Utilizzare un file di properties per gestire i metadati - Parte I",
          "Utilizzare un file di properties per gestire i metadati - Parte II",
          "Metadati Annotation-based - introduzione",
          "Definire i bean con le annotation @Component, @Repository, @Service, @Controller",
          "L’autowiring con l’annotation @Autowired",
          "L’annotation @Resource",
          "Le annotation @PostConstruct e @PreDestroy",
          "Usare le annotation JSR 330 @Inject, @Named, @ManagedBean, @Singleton in Spring",
          "Configurazione dei Bean con le annotation: @Bean e @Configuration - Parte I",
          "Configurazione dei Bean con le annotation: @Bean e @Configuration - Parte II",
          "Utilizzare le configurazioni XML e Java insieme",
          "Mettiti alla prova!"
        ],
        "Spring Framework Core - L’AOP": [
          "Introduzione all’AOP - Parte I",
          "Introduzione all’AOP - Parte II",
          "L’AOP in Spring con AspectJ - Parte I",
          "L’AOP in Spring con AspectJ - Parte II",
          "L’AOP in Spring con AspectJ - Parte III",
          "Mettiti alla prova!"
        ],
        "Spring Web MVC - Le basi": [
          "Introduzione a Spring Web MVC",
          "Prepariamo l’ambiente: installiamo Tomcat 9 e configuriamo l’IDE",
          "Creiamo una web app Spring MVC - Il progetto corsospringweb",
          "Creiamo una web app Spring MVC - Il progetto corsospringweb - Fix versione Java",
          "La DispatcherServlet",
          "Configurare la DispatcherServlet",
          "Configurazione di una web app Spring MVC",
          "Mettiti alla prova!"
        ],
        "Spring Web MVC - I controller (Web Controller e REST Controller)": [
          "Gestione dei controller (Web Controller e REST Controller) - Parte I",
          "Gestione dei controller (Web Controller e REST Controller) - segue Parte I",
          "Gestione dei controller (Web Controller e REST Controller) - Parte II",
          "Gestione dei controller (Web Controller e REST Controller) - Parte III",
          "Gestione dei controller (Web Controller e REST Controller) - Parte IV",
          "Gestione dei controller (Web Controller e REST Controller) - Parte V",
          "Accedere agli oggetti HTTPServletRequest e HTTPSession",
          "Accedere ai parametri in Query String con @RequestParam",
          "Accedere ai parametri in Request Header con @RequestHeader",
          "Accedere ai parametri di un cookie con @CookieValue",
          "Accedere agli attributi di una HTTPRequest con @RequestAttribute",
          "Accedere agli attributi di una HTTPSession con @SessionAttribute",
          "Come effettuare il redirect o il forward nel controller",
          "Mettiti alla prova!"
        ],
        "Spring Web MVC - La gestione delle view": [
          "Introduzione alle creazione e gestione delle view",
          "La risoluzione delle view con il ViewResolver",
          "Passaggio oggetti controller/view con ModelAndView e @ModelAttribute - Parte 1",
          "Passaggio oggetti controller/view con ModelAndView e @ModelAttribute - Parte 1",
          "Visualizzare i dati in una view utilizzando ModelAndView",
          "Passaggio di parametri tra controller e view con ModelMap",
          "Introduzione a FreeMarker",
          "Come utilizzare FreeMarker con Spring MCV - Creiamo il progetto myshop",
          "Valori e tipi in FreeMarker, come recuperare le variabili",
          "Definire variabili in FreeMarker",
          "Variabili di tipo stringa: utilizzo, interpolazione e concatenazione",
          "Variabili di tipo numero e boolean",
          "If/Else statement",
          "Comparazione tra elementi",
          "Operazioni logiche su elementi",
          "Iterazioni di liste di elementi",
          "Includere template in altri template",
          "Mettiti alla prova!"
        ],
        "Spring Data Access - Le basi": [
          "Introduzione a Spring Data Access",
          "Installazione MariaDB su Windows",
          "Creazione di un DB per la gestione di alcune funzioni di un e-commerce",
          "Mettiti alla prova!"
        ]
      },
      "requirements": [
        "Conoscenza del linguaggio Java almeno versione 8",
        "Conoscenza di HTML"
      ],
      "description": "Ciao e benvenuto al corso \"Spring e Spring Boot: la guida completa\".\nQuesto corso ti offre tutti gli strumenti necessari per imparare ad utilizzare Spring e Spring Boot!\n\n\nMi chiamo Paolo Preite e sono un Ingegnere Informatico con oltre 20 anni di esperienza nella progettazione e nello sviluppo di software, principalmente in ambito enterprise Java.\n\n\nSe vuoi imparare Spring e Spring Boot, sei nel posto giusto!\n\n\nOgni argomento viene trattato in maniera approfondita, con esempi pratici che ti consentiranno di comprendere anche concetti complessi.\n\n\nIn questo corso affronto tutti gli aspetti di Spring:\nI principi alla base del framework (Inversion of Control, Dependency Injection, Aspect Oriented Programming, ecc...)\nLa gestione e configurazione di un'applicazione Spring\nL'utilizzo dei Bean di Spring\nLo sviluppo di applicazioni web con Spring MVC\nLa gestione dell'accesso ai dati tramite JDBC, JPA e Hibernate e le altre componenti del modulo Spring Data\nLo sviluppo di applicazioni con Spring Boot\ne molto altro ancora...\n\n\nNel corso ho inserito anche due sezioni aggiuntive che sono utili ai fini dello sviluppo di applicazioni:\nuna breve guida sugli strumenti di build automation, con particolare riferimento a Maven\nuna guida ai template engine per lo sviluppo delle componenti di presentation, con particolare riferimento a FreeMarker\n\n\nAllora cosa aspetti, inizia subito ad imparare Spring!\n\n\nTi aspetto al corso :-)",
      "target_audience": [
        "Il corso è rivolto a tutti quelli che vogliono imparare a programmare con Spring o migliorare la conoscenza del framework"
      ]
    },
    {
      "title": "110+ Saatlik C Programlama ve C# ile Yazılımcı Olma Kursu",
      "url": "https://www.udemy.com/course/yazilimci-olma-kursu/",
      "bio": "C Programlama - Algoritmalar- C# - SQL - LINQ - Entity Framework - Temel Programlama - Algoritmalar - C Programlama | C#",
      "objectives": [
        "C programlama mantığını tamamiyle çözmüş olacaklar,en uğraştıran soruların bile üstesinden gelebileceksiniz",
        "C programlama dilinde proje geliştirebilecek,oyun yazabileceksiniz",
        "C programlamada çok karmaşık kodları bile anlayabilecek,gerekli müdahaleleri yapabiliyor olacaksınız",
        "Algoritma tasarlayabiliyor hale geleceksiniz",
        "Hiçbir C dili eğitiminde bulamadığınız algoritmalar ve soru çözümleriyle karşılacaksınız",
        "C programlama kursunu bitirdikten sonra diğer programlama dillerine rahatlıkla geçiş yapabiliyor olucaksınız",
        "Üniversitede C programlama dersi alıyorsanız karşınıza çıkabilecek en zor sorunun daha zorunu çözmeyi öğreneceksiniz",
        "C programlada karmaşık gelen konuların aslında çok basit olduğunu göreceksiniz",
        "Nesne Tabanlı Programlama'nın (Object Oriented Programming) inceliklerini",
        "C# da 2D Oyun Geliştirmeyi",
        "C# ın ayrıntılı uygulamalarını",
        "Windows Form Uygulamarını",
        "Sql Commutları ve Veri Tabanı İşlemlerini",
        "SQL Server servislerini doğru şekilde yönetmeyi ve konfigüre etmeyi",
        "SQL dilini kullanarak başta MSSQL olmak üzere tüm veritabanlarında istenilen sorgulamaları yapabileceksiniz.",
        "C# Ado .Net Uygulamarını",
        "LINQ kullanımında query syntax ve method syntax kullanımını öğrenecksiniz",
        "LINQ ile istediğimiz dataya nasıl ulaşacağımızı öğreneceksiniz",
        "C# da Class İnterface Contructor Yapılarını",
        "C# da Tarih Saat Formatlarını",
        "C# da otomatik mail göndermeyi"
      ],
      "course_content": {},
      "requirements": [
        "Yazılıma ilgi duyması",
        "Çalışma azmi"
      ],
      "description": "Bu kurs sayesinde C programlama ve C# dilinde sıfırdan master seviyeye geleceksiniz. C programla ile algoritma kurabilme yeteneğinizi iyice geliştiriyor En popüler yazılım dili olan C# ile de bitirici vurucu yapıyoruz.\n2 yazılım dilini de en dip detayına kadar nasıl kullanacağınızı öğreneceksiniz.\nEğitim seti yeterli miktar teorik,bol egzersiz mantığı gözetilerek oluşturulmuştur.\nÜniversitelerde temel programlama dersinde genel olarak C programlama gösterilir.C Programlayı öğrendikten sonra diğer yazılım dillerine geçişiniz çok daha kolay ve hızlı olacaktır.\nC Programla  kısmının sonununda C programlama kullanarak yapabileceğiniz şeylere örnek olması açısından , ufkunuzu açmak için C Programlama kullanarak mayın tarlası projesini beraber kodluyoruz.\nC programramlama da en çok karşılaşılan sorun algoritmayı kuramama,istenilen kodu yazamama şeklindedir. C Programlama ve C# ile Yazılımcı Olma Kursu tam da bu sorunun üstüne gidilerek en basit c programından en ağır C programına kadar bol egzersiz yapılarak oluşturulmuştur.\nC# bölümde ise ..Net developer olmak isteyen arkadaşlar malesef pratik uygulama bulamamakta ve teorik bilgi teorik olarak kalmaktadır.Bu eğitim setindeki ana amacımız yeterli düzeyde teorik bilgi verip bol uygulama yaparak bir programcının gerçek hayatta karşılaşabileceği sorunların üstesinden gelmek.\nEğitim setinde temel c# komutlarından başlayıp objet oriented mantığı iyice yerleştiken sonra database işlemlerine geçiyor olacağız.\nGerçek hayatta karşımıza gelen tüm sql ve c# problemlerinin üstesinden geliyor olacaksınız\nProje ve pratik yapılmaktıkça teorik bilgi yanlızca orda kalır.Sizinle birlikte gelmez.Bu eğitimde 1000 den fazla egzersiz yaparak C programlamaya ,güncel Algoritmalara ,C# a ,Ado Net e,Windows Form Uygulamalarına,LInq ya Entity Framework e hakim olucaksınız.\nKursu bitirdiğinizde Junior Software Developer adayı olacaksınız.",
      "target_audience": [
        "C programlamayı tam anlamıyla öğrenmek isteyenler",
        "Üniversitede C programlama dersi alanlar",
        "C Programlama mantığını öğrenmek isteyenler",
        "Algoritma mantığını anlamak isteyenler",
        "C programlamada Koşullu ifadeleri öğrenmek isteyenler",
        "C programlama da dizileri öğrenmek isteyenler",
        "C programlama da karakter dizilerini öğrenmek isteyenler",
        "C programlama da pointer yapısını öğrenmek isteyenler",
        "C programlama da struct yapısını öğrenmek isteyenler",
        "C programlama da recursive fonksiynları öğrenmek isteyenler",
        "C programlamada dosya işlemlerini öğrenmek isteyenler",
        "C# da class ları öğrenmek isteyenler",
        "C# da constructor yapılarını öğrenmek isteyenler",
        "C# da tarih saat formatlarını öğrenmek isteyenler",
        "C# da otomatik mail atmak isteyneler",
        "C# ve Ado .Net i öğrenmek isteyenler",
        "C# ve Sql i öğrenmek isteyenler",
        "C# ve LINQ yu öğrenmek isteyneler",
        "C# ve Entity Framework ü Öğrenmek İsteyenler",
        "C# ve Windows Form Uygulamalarını Öğrenmek İsteyenler",
        "Yazılımcı Olmak İsteyenler"
      ]
    },
    {
      "title": "【 5日でできる】はじめての Java プログラミング入門",
      "url": "https://www.udemy.com/course/10daysjava/",
      "bio": "開発ツール Eclipse のインストールから丁寧に解説し、一人でも最後までつまずかずにJava プログラミングを学べます。プログラミングがはじめてな方や、再挑戦したい方に！",
      "objectives": [
        "Javaプログラミングの流れ、実行の仕組みについて理解できる",
        "Javaプログラミング環境を自分のPC上に作れるようになる",
        "統合開発環境（Eclipse）を導入し、効率よく開発ができるようになる",
        "オブジェクト指向プログラミングの概念を理解できる",
        "Android StudioをインストールしてAndroidプログラミングを体験できる"
      ],
      "course_content": {
        "イントロダクション": [
          "このセクションで学ぶこと",
          "Java言語の概要",
          "プログラミング作成の基本的な流れ",
          "プログラミング言語のタイプ",
          "Java言語の動作の仕組み",
          "確認クイズ",
          "JDK（Java開発キット）とは？",
          "JDKのインストール（Windows編）その１",
          "JDKインストール（Windows編）その２　インストーラの実行",
          "JDKのインストール（Windows編）その3　パスの設定",
          "JDK 1.8インストール（macOS編）",
          "ソースコードを書いてみよう（Windows）",
          "ソースコードを書いてみよう（Mac）",
          "コンパイル・実行してみよう（Windows）",
          "コンパイル・実行してみよう（Mac）",
          "練習課題１：テキストエディタでHello World!",
          "Hello Worldプログラムのサンプルコード"
        ],
        "Eclipseによる開発": [
          "このセクションで学ぶこと",
          "Eclipseの概要とメリット",
          "Eclipse Oxygen(4.7）のインストール",
          "Eclipse Oxygen (4.7）の日本語化",
          "macOSへのEclipse(2019-09)のインストールと日本語化",
          "Eclipseでコードを書いてみよう",
          "インデントについて理解しよう",
          "コメントをつけてみよう",
          "Eclipseの開発支援機能を利用しよう",
          "Eclipse の文字コード設定（Windowsのみ）",
          "練習課題２：EclipseでHello World!"
        ],
        "Javaアプリケーションの基本": [
          "このセクションで学ぶこと",
          "Javaプログラムの構造",
          "クラスの定義",
          "クラスとインスタンスの関係",
          "メソッド定義のフォーマット",
          "mainメソッドは特別なメソッド",
          "新しいメソッドを追加してみよう"
        ],
        "Javaプログラミングの基本文法": [
          "このセクションで学ぶこと",
          "ソースコードを書く時のルール",
          "変数とデータ型",
          "リテラル（値）",
          "エスケープ文字",
          "キーワード（予約語）",
          "式を使ってみよう",
          "Javaのコーディング規約",
          "実数計算をしてみよう",
          "代入演算子を使ってみよう",
          "練習課題３：BMI計算プログラムを書いてみよう",
          "キーボードからの入力を使ってプログラムを書こう",
          "インクリメント・デクリメント演算子とfor文",
          "比較演算子とif文で処理を分岐してみよう",
          "キーボード入力値からBMI、判定結果を表示してみよう",
          "練習課題４：キーボード入力",
          "論理演算子を使ってみよう（論理積）",
          "論理演算子を使ってみよう（論理和）",
          "反転（NOT演算子）",
          "switch文",
          "配列を使ってみよう"
        ],
        "クラスやインスタンスをより深く学ぼう": [
          "このセクションで学ぶこと",
          "コンストラクタを定義してみよう",
          "ゲッターメソッドを定義しよう",
          "クラスの継承",
          "インスタンスの参照",
          "インターフェイス"
        ],
        "サーバサイドプログラミング": [
          "このセクションの概要とサーバサイドJava",
          "Tomcatをインストールしよう",
          "動的Webプロジェクトを追加してみよう",
          "JSPでHello World!プログラムを作成してみよう",
          "アクセスするURLを変更しよう",
          "１行のプログラムを追加してみよう",
          "複数行のプログラムをJSPファイルに埋め込んでみよう",
          "JSPでフォームと連携してみよう",
          "練習課題６：JSPでBMIを計算しよう",
          "サーブレットの仕組みを学ぼう",
          "サーブレットでHello World!プログラムを作成してみよう",
          "入力フォームとサーブレットを連携してみよう。",
          "練習課題７：サーブレットの作成"
        ],
        "Android Studio 3.5 によるアプリ開発体験（追加中）": [
          "Android Studio 3.5 のインストール（Windows 10）",
          "プロジェクトの追加",
          "アプリの画面レイアウトを作ろう",
          "画面レイアウトの制約を追加しよう",
          "BMIスコアを計算して表示しよう",
          "練習課題８： 小数点以下を１桁だけ表示してみよう"
        ],
        "（レガシー）Androidアプリを作成してみよう": [
          "Androidアプリを開発する環境を整えよう",
          "はじめてのAndroidプロジェクトを追加しよう",
          "Android Studioの画面レイアウトを理解しよう",
          "デザインエディターでアプリのひな形を作ろう",
          "ボタンのクリックに対応したメソッドを定義しよう",
          "コンパイル・実行してみよう"
        ],
        "ボーナストラック（質問対応など）": [
          "Java 8のリファレンス集",
          "Java for OS X 2015-001",
          "Eclipseのショートカット（エイリアス）を作る方法",
          "Andoroidコースの割引クーポン"
        ],
        "（レガシー）Android Studio 2でのアプリ開発体験(2016/8追加）": [
          "Android Studio 2.1のインストール（Windows 1）",
          "Android Studio 2.1のインストール（Windows 2）",
          "Android Studio 2.1のインストール（Windows 3）"
        ]
      },
      "requirements": [
        "PC（Windows, Mac OS X, Linux）のいずれか",
        "Eclipse（インストール方法はレッスン内で解説します）",
        "JDK（インストール方法はレッスン内で解説します）",
        "Android Studio（無償、レッスン内で入手方法、設定方法を解説します）"
      ],
      "description": "*2019/10/17 AndroidセクションをAndroid Studio 3.5対応にしました。\n＊2019/10/7　macOSへのEclipse（2019-09）のインストール・日本語化手順を追加しました。\nJavaFXのOracleによるサポートが終了したため、JavaFXセクションをレガシーコンテンツとして最後の方に移動しました。\n＊2019/8/30　macOSへのEclipse（2019-06）のインストール・日本語化手順を追加しました。\n＊2017/10/30　Eclipse Oxygen(4.7）の日本語化手順を追加しました。\n＊2017/10/29　Eclipse Oxygen(4.7）のダウンロード・インストール手順を追加しました。\n＊2017/3/3 更新　JDK, Eclipse 4.6 Neonのインストール手順の解説を最新版にアップデートしました。\nこのコースは\nJavaプログラミングを短期間でマスターしたいあなたが\n現役エンジニアから\nJavaのインストールから、アプリ開発、サーバープログラム開発を学ぶ\nための講座です。\n受講に向いているのは、\nJavaプログラミングに初挑戦する方\n書籍や無料サイトでの学習につまづいてしまった方\n最新のJava 8を短期間に学んで、サーバサイド開発や、Androidアプリ開発などにチャレンジしたい方\nなどです。\nコース内では、\n10日間程度で一通りの学習を終えることを想定しています。\n7時間の映像授業、練習課題、クイズで構成されます。\n開発ツールのインストールから、コーディング、コンパイル、実行まで、\nパソコン上での実際の操作を録画したビデオで丁寧に解説します。\nこのコースを終えると\nJavaの基礎をマスターできます。\nAndroidアプリ開発を体験できます。\nJSP / サーブレットによる、サーバサイドプログラム開発を体験できます。\nJavaFXによる、GUIアプリ開発を体験できます。（Java 11でOracleのサポートが終了しました）\nあなたは、どのようなアプリを作りますか？\n＊＊＊独学ではなく、オンラインフォーラムでわからないところは何回でも質問して、問題を解消しながら、安心して学べます。＊＊＊\n\n【受講生の声】\n「javaが多様な目的で使用されていることが分かりました。」（2019/7 山本大記さん）\n「Windows だけでなく、mac についてもダウンロードから、設定まで、詳しく説明されているところが、親切だと思いました。 質問への対応も素晴らしかったです。 」（2016/8/5 有田さん）",
      "target_audience": [
        "プログラミング経験がない人",
        "ドットインストールなどで勉強しようと思ったが、環境構築でつまづいてしまった人",
        "プログラミングスクールに行きたいが、開催地が遠くにあったり、費用が高額で断念してしまった人",
        "独習は不安だが、ビデオを見ながら実習をしたり、質問したりしながらであれば、プログラミングにチャレンジしてみたい方",
        "Java言語の基礎を覚えて、Androidアプリ制作やWebサービス開発をして「起業したい！」という方"
      ]
    },
    {
      "title": "Fundamentos y Lógica de Programación para Principiantes",
      "url": "https://www.udemy.com/course/fundamentos-programacion-curso/",
      "bio": "Aprende fundamentos y lógica de programación desde cero: algoritmos, sentencias, sintaxis, buenas prácticas y mucho más.",
      "objectives": [
        "Todas las bases necesarias para comenzar a programar en cualquier lenguaje.",
        "Dominar los conceptos clave relacionados con la programación.",
        "Desarrollar la habilidad lógica necesaria para abordar y resolver problemas mediante la programación.",
        "Las principales sentencias y la sintaxis utilizada en programación.",
        "Desarrollar algoritmos efectivos para resolver problemas.",
        "Aplicar matrices, colecciones, operadores, estructuras de control, ciclos, funciones y gestión de excepciones en los programas.",
        "Utilizar buenas prácticas de codificación y consejos para mejorar la productividad y programar de manera profesional."
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso",
          "Preguntas frecuentes sobre programación",
          "Inteligencia artificial: mitos y realidades",
          "Lógica de programación",
          "Como aprovechar al máximo este curso"
        ],
        "Conceptos iniciales": [
          "Introducción [Conceptos iniciales]",
          "Programación y programas informáticos",
          "Importancia de la programación",
          "Áreas de la programación",
          "Lenguajes de alto nivel, bajo nivel y proceso de compilación",
          "Proceso de desarrollo de software"
        ],
        "Algoritmos": [
          "Introducción [Algoritmos]",
          "Algoritmos - Ejemplos 1 y 2",
          "Algoritmos - Ejercicio 1",
          "Algoritmos - Ejercicio 2",
          "Algoritmos - Ejercicio 3",
          "Conclusión [Algoritmos]"
        ],
        "Datos y operadores": [
          "Introducción [Datos y operadores]",
          "Tipos de datos básicos",
          "Variables y constantes",
          "Matrices",
          "Colecciones",
          "Tipado y conversión de tipos de datos",
          "Operadores aritméticos y jerarquía de operaciones",
          "Operadores de asignación",
          "Operadores de incremento y decremento",
          "Concatenación y primer programa completo"
        ],
        "Estructuras de control": [
          "Introducción [Estructuras de control]",
          "If…else, operadores de comparación, igualdad y desigualdad",
          "Múltiples condiciones y operadores lógicos",
          "Sentencia switch",
          "Programa completo aplicando estructuras de control"
        ],
        "Ciclos": [
          "Introducción [Ciclos]",
          "Ciclo while",
          "Ciclo do…while",
          "Ciclo for",
          "Ciclo foreach",
          "Programa completo aplicando ciclos"
        ],
        "Programación modular": [
          "Introducción [Programación modular]",
          "Funciones",
          "Ámbito de las variables",
          "Programa completo aplicando programación modular"
        ],
        "Manejo de excepciones, valores nulos y depuración": [
          "Introducción [Excepciones, nulos y depuración]",
          "Errores en tiempo de compilación",
          "Errores en tiempo de ejecución",
          "Nulo y vacío",
          "Depuración",
          "Programa completo aplicando manejo de excepciones"
        ],
        "Consejos, utilidades y herramientas para programar": [
          "Introducción [Consejos, utilidades y herramientas]",
          "Tus mejores aliados para programar",
          "Herramientas de inteligencia artificial",
          "Editor de texto e IDE",
          "Buenas prácticas de codificación",
          "Documentación del código",
          "Cómo mantenerse actualizado"
        ],
        "Siguientes pasos": [
          "Introducción a la sección",
          "Con qué lenguaje comenzar a programar",
          "Lleva tu lógica de programación al siguiente nivel",
          "Conclusiones y despedida"
        ]
      },
      "requirements": [
        "Una computadora o dispositivo móvil con acceso a internet.",
        "Muchas ganas e interés por aprender a programar."
      ],
      "description": "En la era digital actual, la programación se ha convertido en una habilidad esencial, impulsada por el crecimiento exponencial de la tecnología en todo el mundo. Cada dispositivo, aplicación o sistema requiere programación para funcionar, por lo que el dominio de la programación te abrirá la puerta a infinitas posibilidades.\nSi estás interesado en adentrarte en el emocionante mundo de la programación y el desarrollo de software, estás en el lugar adecuado. Este curso de fundamentos y lógica de programación te guiará desde cero, dotándote de todos los conocimientos esenciales para comenzar tu viaje en la programación. Aquí, aprenderás desde los conceptos fundamentales hasta las principales sentencias comunes en la mayoría de los lenguajes de programación.\nNo importa si nunca antes has programado o si has tenido dificultades en el pasado, ya que el enfoque integral de este curso te proporcionará una base sólida en programación. Comenzaremos desde lo más básico y avanzaremos a través de conceptos clave. En este curso, te sumergirás en el mundo de la programación, desarrollando habilidades que te permitirán abordar y resolver problemas de manera efectiva.\nEl curso se iniciará abordando los conceptos fundamentales de programación y explorando cómo las computadoras y dispositivos interpretan las instrucciones programadas a través de diferentes lenguajes de programación. A continuación, se profundizará en las sentencias clave, operadores y sintaxis de estos lenguajes, utilizando ejemplos y ejercicios para facilitar la comprensión. Al concluir el curso, habrás adquirido una sólida base que te permitirá abordar la programación en cualquier lenguaje, como C, C++, C#, JavaScript, Python, PHP, Java, Kotlin, Swift, Go y cualquier otro lenguaje. Esto se debe a que la lógica de programación que exploraremos es universal y aplicable a prácticamente todos los lenguajes de programación.\nNo importa si eres un principiante o si has tropezado en tus intentos anteriores de aprender a programar; el enfoque de este curso te proporcionará una base sólida y te preparará para convertirte en un programador exitoso. ¡Inscríbete ahora mismo y da el primer paso hacia un emocionante futuro en la programación!",
      "target_audience": [
        "Personas con interés en adentrarse en el mundo de la programación, incluso si no tienen experiencia previa en este campo.",
        "Personas que desean construir una sólida base en programación, comenzando desde cero y aprendiendo los fundamentos esenciales.",
        "Aquellos que han enfrentado obstáculos en el pasado al intentar aprender a programar y están buscando un enfoque más efectivo y comprensible.",
        "Estudiantes que desean dominar la lógica y la estructura de la programación para abordar desafíos de codificación con confianza.",
        "Novatos en programación que desean una introducción detallada a los conceptos esenciales para convertirse en programadores competentes."
      ]
    },
    {
      "title": "JAVA 2018 aprenda para Desktop,Java Web,Android e WebService",
      "url": "https://www.udemy.com/course/java-2018-aprenda-para-desktopjava-webandroid-e-webservice/",
      "bio": "Comece aprendendo do ZERO ou se já possui conhecimento use como guia de pesquisa para programar.",
      "objectives": [
        "Aprender a instalar Java e as Ides Netbeans e Eclipse.",
        "Aprender a programar em Java 8.",
        "Conceitos de variáveis e tipos de variáveis.",
        "Estruturas de decisão e repetição.",
        "Como pesquisar na internet para ajudar a você encontrar uma solução para programar e criar um projeto.",
        "Conceitos sobre POO - Programação Orientada a Objeto",
        "Encapsulamento, Relação, Associação, Herança, Polimorfismo, Interface.",
        "Um pouco de UML - Linguagem de Modelagem Unificada.",
        "Sobre Métodos.",
        "Estudo das classes Time, Date, DateFormat, Calendar e Timer",
        "Trabalhando com Banco de Dados Local - SQLite",
        "Tratamentos de exceções.",
        "Strings, StringBuilder, Caracteres e Expressões Regulares.",
        "Coleções.",
        "Manipulação de Arquivos e Serialização de Objetos.",
        "Interfaces Gráficas com Swing.",
        "Acessos a Banco de Dados com JDBC.",
        "Instalação do Banco de Dados MySql e Workbench.",
        "Interfaces Gráficas com JavaFX.",
        "Redes (Noções Básicas).",
        "Java WEB (Noções Básicas).",
        "Web API com REST (Noções Básicas).",
        "Android (Noções Básicas).",
        "Padrões de design.",
        "Comunicação com Porta Serial - Arduino"
      ],
      "course_content": {
        "Introdução a Linguagem de Programação em Java": [
          "Introdução",
          "Aula 2: História da Linguagem Java",
          "Mercado para Programadores em Java",
          "Como aprender a pesquisar para programar",
          "Endereços de Fóruns e Documentações"
        ],
        "Instalações para o Java funcionar": [
          "Introdução",
          "Instalação JAVA 8 e 9 - SE JDK - Java Development kit",
          "Instalação JAVA 8 e 9 - SE JRE - Runtime Environment",
          "Instalação do NetBeans",
          "Instalação do Eclipse",
          "Documentação da Linguagem Java",
          "Endereços para downloads"
        ],
        "Vamos começar a aprender Java": [
          "Introdução",
          "Como iniciar um projeto no Netbeans",
          "Como iniciar um projeto no Eclipse",
          "Programando nosso primeiro código em JAVA - HelloWord",
          "Estrutura de um Projeto Java, Packcages (Pacotes) e Classes",
          "Convenções de Códigos",
          "O que é printf",
          "O que é Scanner",
          "Cometários na Linguagem Java"
        ],
        "Aprenda a usar as variáveis, tipos de dados e constantes": [
          "Introdução",
          "Bit e Bytes",
          "Variáveis",
          "Tipos de Variáveis",
          "Conversões de Variáveis",
          "Constantes",
          "Caracteres de Sequência de Escape"
        ],
        "Operadores Aritméticos, Relacionais, Lógicos e Bit a Bit": [
          "Introdução",
          "Operadores Aritméticos",
          "Operadores Relacionais",
          "Operadores Lógicos",
          "Operadores Bit a Bit"
        ],
        "Como trabalhar com Arrays unidimensionais e Multidimensionais": [
          "Introdução",
          "Arrays",
          "Arrays Unidimensionais",
          "Arrays Multidimensionais"
        ],
        "Algortimos, Estruturas de Decisão, Estruturas de Laços, Break e Continue": [
          "Introdução",
          "O que são algortimos",
          "Estruturas de Decisões If e Else",
          "If e Else - Continuação",
          "Switch",
          "While",
          "DoWhile",
          "For",
          "For (Each)",
          "Break",
          "Continue"
        ],
        "Métodos, Passagem de Valor, Return, Passagem de Valores por Arrays e Sobrecarga": [
          "Introdução",
          "Métodos",
          "Passagem por Valor",
          "Passagem por Valor de Diferentes Tipos",
          "Return",
          "Passagem por Arrays",
          "Sobrecarga de Métodos"
        ],
        "Programação Orientada a Objetos - POO I": [
          "Introdução",
          "Orientação a Objetos",
          "O que são Classes",
          "Modificadores de Acesso",
          "O que são Objetos",
          "A Classe Carro",
          "A Classe Casa",
          "A Classe Robo",
          "A Classe Conta Bancária",
          "A Classe Produto",
          "A Classe Pizza",
          "A Classe Pessoa",
          "A Classe IPTU",
          "Getter e Setter",
          "A Classe Pessoa Completa",
          "Referenciando Classes",
          "Construtores",
          "Static"
        ],
        "Programação Orientada a Objetos - POO II": [
          "Introdução",
          "O que é UML",
          "Primeiro Pilar da POO - Encapsulamento",
          "Segundo Pilar da POO - Herança - Primeira Parte",
          "Segundo Pilar da POO - Herança - Segunda Parte",
          "Terceiro Pilar da POO - Polimorfismo",
          "A Classe Object",
          "Interface",
          "Mini Projeto - Parte 01",
          "Mini Projeto - Parte 02",
          "Mini Projeto - Parte 03"
        ]
      },
      "requirements": [
        "Possuir uma noção básica de como usar um computador e instalar software.",
        "Gostar de ler e pesquisar sobre o assunto do curso, Java, Lógica de Programação.",
        "Qualquer pessoa que queria aprender a criar programas.",
        "Para pessoas que já conhecem a linguagem Java e querem aprender sobre Android, JavaWEB e JavaFX.",
        "Para pessoas que já dominam a linguagem mas querem usar como um guia de referência."
      ],
      "description": "Bem vindo ao curso de Java para programação em ambiente desktop, web e mobile.\nEste curso são para pessoas que estão começando a programar e querem aprender a linguagem JAVA, que é a mais utilizada no mundo hoje, desde o básico ao avançado. Para quem está buscando melhorar seu conhecimento na linguagem e quer aprender a programar em diferentes plataformas como desktop, para web e para Android Mobile, este é o curso.\nSerão passados todos os conceitos da linguagem em vários tópicos e com aulas práticas para você começar a criar seus próprios programas em Java.\nPessoas que buscam conhecer mais a fundo a construção de programas e buscam aprender novas tecnologias da linguagem de forma simples e bem didática.\nSou do interior de São Paulo e com meu jeito caipira de falar, vou ensinar você a programar e a trabalhar com banco de dados para você obter o conhecimento inicial e prosseguir na sua jornada de estudo para projetar qualquer tipo de aplicação para os mais diversos dispositivos, principlamente integrar através de webservice.",
      "target_audience": [
        "Se possível fazer um curso de algoritmos mesmo que no curso vou apresentar um pouco sobre algoritmos e pseudocódigo.",
        "Estudar sobre SQL"
      ]
    },
    {
      "title": "Curso de Programación en C: De Cero a Avanzado con Prácticas",
      "url": "https://www.udemy.com/course/aprende-c-con-ejercicios-practicos/",
      "bio": "Aprende a programar en lenguaje C con múltiples ejercicios y prácticas guiadas paso a paso. Incluye 2 proyectos finales.",
      "objectives": [
        "Conocer los fundamentos del lenguaje C: sintaxis, tipos de datos, operadores,...",
        "Dominar las estructuras de control alternativas y repetitivas en lenguaje C.",
        "Manejar estructuras de datos complejos como cadenas, vectores o registros.",
        "Usar funciones y dominar la biblioteca estándar del lenguaje C.",
        "Dominar el uso de punteros y entender el manejo de la memoria en el lenguaje C.",
        "Resolver problemas mediante programas codificados en lenguaje C.",
        "Manejar ficheros en modo lectura y/o escritura.",
        "Desarrollar software que maneja memoria de forma dinámica empleando los mecanismos que proporciona el lenguaje C."
      ],
      "course_content": {
        "Introducción": [
          "Promo",
          "Introducción al curso",
          "Lenguaje C",
          "Configuración del entorno de desarrollo",
          "Práctica 1: Hola Mundo"
        ],
        "Fundamentos de C": [
          "Comentarios",
          "Tipos de datos básicos",
          "Variables",
          "Operadores",
          "Entrada/Salida",
          "Práctica 2: Caracteres enlazados",
          "Práctica 3: Área de un rectángulo",
          "Práctica 4: Conversor de divisas",
          "Tipos de datos definidos por el usuario: typedef",
          "Tipos enumerados",
          "Constantes"
        ],
        "Estructuras de control": [
          "Estructuras de control alternativas: if",
          "Práctica 5: Calificaciones alumnado",
          "Práctica 6: Precio final coche",
          "Estructuras de control alternativas: switch",
          "Práctica 7: Días de la semana",
          "Estructuras de control repetitivas- For",
          "Estructuras de control repetitivas-While",
          "Práctica 8: Múltiplos de 3 entre 1 y 100",
          "Práctica 9: Número de aprobados y suspensos",
          "Práctica 10: Suma y promedio de valores"
        ],
        "Estructuras de datos": [
          "Vectores",
          "Práctica 11: Vector de pesos",
          "Práctica 12: Máximo y mínimo de un vector",
          "Matrices",
          "Práctica 13: Habitaciones de un hotel",
          "Cadenas de caracteres",
          "Práctica 14: Cadenas enlazadas",
          "Práctica 15: Buscar carácter en cadena",
          "Registros",
          "Práctica 16: Jugadores de un equipo de fútbol",
          "Registros anidados",
          "Práctica 21: Cálculos de motores",
          "Práctica 22: Entradas de un museo"
        ],
        "C avanzado": [
          "Punteros",
          "Práctica 17: Media de un vector",
          "Funciones",
          "Práctica 18: Multiplicar vector por un valor",
          "Desarrollo e inclusión de librerías",
          "Biblioteca estándar de C",
          "Manejo de ficheros",
          "Práctica 19: Tabla de un número",
          "Práctica 20: Suma números de fichero"
        ],
        "Manejo dinámico de memoria": [
          "Memoria dinámica",
          "Función sizeof",
          "Reserva dinámica de memoria: funciones malloc y calloc",
          "Redimensionar memoria dinámica: función realloc",
          "Liberar memoria dinámica: función free",
          "Práctica 23: Reserva dinámica de una estructura"
        ],
        "Depuración de código": [
          "Configurar CodeBlocks para depurar",
          "Controles para depuración",
          "Inspección de la ejecución de un programa"
        ],
        "Proyecto: Software para gestión de empleados": [
          "Requisitos del proyecto",
          "Estructura de proyecto",
          "Creación del menú de la aplicación",
          "Cargar los empleados del sistema",
          "Listar empleados",
          "Comprobar si existe un empleado",
          "Alta de empleados",
          "Baja de empleados",
          "Consultar los datos de empleados",
          "Modificar datos de empleados",
          "Almacenar los empleados en fichero"
        ],
        "Proyecto: Juego BlackJack": [
          "Requisitos del proyecto",
          "Estructura del proyecto",
          "Creación del menú del juego",
          "Establecer número de jugadores válido",
          "Cargar datos de jugadores",
          "Generar carta",
          "Obtener los puntos de una carta",
          "Desarrollo de la lógica del juego",
          "Mostrar ganador de la partida",
          "Guardar partida",
          "Cargar partidas"
        ],
        "Prólogo": [
          "Cuestionario",
          "Clase extra"
        ]
      },
      "requirements": [
        "No hay requisitos para inscribirse, pues el curso comienza desde cero."
      ],
      "description": "El lenguaje de programación C fue desarrollado por Dennis Ritchie en los Laboratorios Bell entre 1968 y 1972. En la actualidad, el lenguaje C se ha convertido en uno de los idiomas más populares, gracias en gran medida por los siguientes factores:\nMadurez: El lenguaje C ha existido desde hace mucho tiempo en términos de programación de computadoras. Casi todos los aspectos del lenguaje, incluidos los que no estaban destinados por los desarrolladores originales, han sido explorados y ampliamente utilizados y hay una gran cantidad de ejemplos y código fuente reutilizable libremente disponibles en Internet.\nPortabilidad: El lenguaje C es un lenguaje independiente del hardware, lo que implica que un programa desarrollado en C puede ser ejecutado en casi cualquier plataforma.\nFunciones de bajo nivel: A pesar de que el lenguaje C es técnicamente un lenguaje de alto nivel, lo que significa que abstrae la programación del código máquina; es uno de los lenguajes de programación de alto nivel de \"más bajo nivel\". El código escrito en C puede ejercer control, directo y cercano sobre la máquina. Debido a que C está vinculado tan estrechamente con la máquina, proporciona métodos para acceder directamente a los componentes del sistema, como la unidad de disco duro, unidades ópticas e impresoras.\nLenguaje procedimental: C es un lenguaje de programación procedimental, no un lenguaje de programación orientado a objetos. Sin embargo, a pesar del amplio uso de diseño orientado a objetos en la programación moderna, muchas aplicaciones son aún más adecuados para el estilo de diseño procedimental, como el desarrollo de controladores, sistemas embebidos o robótica.\nRelación con C++: C ++ comenzó como una extensión del lenguaje de programación C, pero con el tiempo se convirtió en un lenguaje orientado a objetos. Sin embargo, debido a que comparte la mayoría de la sintaxis y estructura de C, es una tarea sencilla la transición de C a C ++, o de C ++ a C.\nCon este curso de lenguaje C, aprenderás desde cero, desde los aspectos básicos del lenguaje hasta los contenidos más avanzados. La metodología que se utiliza combina la presentación de los contenidos teóricos con la realización de ejercicios prácticos que refuerzan las explicaciones realizadas.\nLas clases se agrupan en bloques de dificultad creciente lo que facilita el seguimiento del curso. En cada clase existe un foro de discusión para que el alumnado pueda postear las dudas surgidas en su visualización.",
      "target_audience": [
        "Estudiantes que quieran iniciarse en el mundo de la programación a través del lenguaje C.",
        "Desarrolladores que quieran reforzar sus conocimientos en el lenguaje C."
      ]
    },
    {
      "title": "Fundamentos de Expressões Regulares (Regex)",
      "url": "https://www.udemy.com/course/curso-regex/",
      "bio": "Aprenda a usar Expressões Regulares (Regex) e aplique em várias linguagens: Javascript, Go, Ruby, Python, Java...",
      "objectives": [
        "Aprenderão os fundamentos de regex: caracteres, conjuntos, grupos, quantificadores...",
        "Criar expressões regular para uso em sistemas reais",
        "Entender expressões regulares e adaptar quando necessário"
      ],
      "course_content": {
        "Introdução": [
          "Visão Geral do Curso",
          "Apostila & Repositório",
          "Ferramentas de Regex Online",
          "O que é Expressão Regular?",
          "Aviso importante aos usuários de Windows",
          "Instalação Node",
          "Instalação VSCode",
          "Usando o Terminal",
          "Terminais"
        ],
        "Executando Expressões Regulares": [
          "Entendendo as Flags",
          "Executando Regex em Várias Linguagens",
          "Executando Regex em JS",
          "Executando Regex em Ruby",
          "Executando Regex em Python",
          "Executando Regex em Go",
          "Executando Regex em Java"
        ],
        "Caracteres": [
          "Olá Regex!",
          "Alguns Cuidados #01",
          "Alguns Cuidados #02",
          "Caracteres Simples",
          "Meta-Caracteres",
          "Meta-Caracteres: Ponto",
          "Desafio: Lista de Arquivos",
          "Selecionando Caracteres Brancos",
          "Desafio: Três Espaços",
          "Meta-Caracteres: Pipe (Ou)",
          "Entendendo o Problema com Ponto",
          "Selecionando Caracteres Unicode"
        ],
        "Conjuntos": [
          "Trabalhando com Conjuntos",
          "Trabalhando com Intervalos",
          "Conjuntos e Meta-Caracteres",
          "Alguns Cuidados com Intervalos",
          "Usando Shorthands",
          "Conjuntos Negados",
          "Selecionando Intervalos Unicode"
        ],
        "Quantificadores": [
          "Conhecendo os Quantificadores",
          "Quantificador: ? (Zero-Um)",
          "Quantificador: + (Um-Mais)",
          "Quantificador: * (Zero-Mais)",
          "Quantificador: {n, m}",
          "Guloso vs Não Guloso",
          "Apresentando Desafios",
          "Desafio: Selecionando CPF",
          "Desafio: Selecionando Telefone",
          "Desafio: Selecionando E-mail"
        ],
        "Grupos": [
          "Usando Grupos",
          "Grupos & Retrovisores",
          "Retrovisores: Só por Curiosidade",
          "Grupos Aninhados",
          "Alguns Cuidados com Grupos",
          "Grupos Especiais #01",
          "Grupos Especiais #02"
        ],
        "Bordas": [
          "Usando Bordas",
          "Implementando Dotall em JS",
          "Usando a Flag Multiline",
          "Bordas de Palavras"
        ],
        "Receitas (Exercícios)": [
          "Aplicando Syntax Highlight #01",
          "Aplicando Syntax Highlight #02",
          "Selecionando Telefones",
          "Selecionando Intervalos Numéricos",
          "Selecionando Endereços IPv4",
          "Validação de Senha",
          "Selecionando E-mail"
        ],
        "Conclusão": [
          "Obrigado e Até Breve"
        ]
      },
      "requirements": [
        "O aluno ter conhecimento dos conceitos básicos de programação"
      ],
      "description": "Expressões Regulares (Regex) são um assunto simples e de extrema importância dentro da área de programação. Entretanto, se eu tivesse que arriscar um palpite, acredito que a maioria dos programadores desconhecem quase que completamente os princípios básicos das Regex.\n\nVocê pode até sobreviver sem Regex, mas tem uma chance enorme de que, quando for necessário trabalhar com texto, o seu código vá rapidamente para o lado negro da força. Apesar da brincadeira, não tenho dúvida que, sem Regex, você perderá diversas oportunidades de ter um código mais limpo e eficiente.\nUm teste rápido, dentro do assunto de Regex, você conhece:\nGrupos\nConjuntos\nQuantificadores\nRetrovisores\nFlags\nBordas\nCaso você não saiba o que significam alguns desses temas ou deseja aprofundar os seus conhecimentos, esse curso sem dúvida vai te ajudar muito, não apenas para que você conheça as expressões regulares, mas também o tornará um programador mais completo.\nSerá um prazer muito grande de ter você como nosso aluno!\nGrande abraço e bons estudos!",
      "target_audience": [
        "Programadores que desejam entender os fundamentos das expressões regulares",
        "Programadores que desejam aprender como usar expressões regulares"
      ]
    },
    {
      "title": "オブジェクト指向の原則３：依存関係逆転の原則とインタフェース分離の原則",
      "url": "https://www.udemy.com/course/objectfive3/",
      "bio": "依存関係逆転の原則に基づいたデザインパターン「依存性の注入：Dependency Injection（DIパターン）」の解説及びDIツール「Unity」の実装方法も解説しています。サンプルコードはC#を使って解説しています。",
      "objectives": [
        "依存関係逆転の原則の原則が理解できる",
        "依存性の注入パターン（DIパターン）が理解できる",
        "DIツールの使い方が理解できる",
        "プロジェクト間参照の利点がわかる",
        "インタフェース分離の原則が理解できる"
      ],
      "course_content": {},
      "requirements": [
        "カプセル化、インタフェース、継承についてある程度理解していること",
        "サンプルコードはC#を使用しているため，ある程度C#コードが理解できること（javaなどのオブジェクト指向言語がわかれば理解できるとは思います）"
      ],
      "description": "どうもこんにちは，ピーコックアンダーソンです。\n今回は「オブジェクト指向の原則シリーズ」の第3弾として\n「依存関係逆転の原則」と「インタフェース分離の原則」を解説しており，\nオブジェクト指向の原則3部作の完結編となります。\n\n\n今回もいろいろと書籍を読み直して，\n2つの原則を掘り下げて解説しています。\n「依存関係逆転の原則」の方が比重は多めです。\nよりよいプログラミングを目指すプログラマーの方にとって，\n楽しい内容になっていると思います。\n\n\n依存関係逆転の原則では，独特な原則ネーミングである\n「逆転」とは何を指すのか？という部分を詳しく解説しているので，\nこのあたりを理解することで，\nオブジェクト指向プログラミングをしている実感と自信がつくと思います。\n\n\n「依存関係が逆転していたらオブジェクト指向プログラミング」\n「逆転していなかったら手続き型」と言われるくらい，\nオブジェクト指向を理解する上で大事な知識ですので，\n理解があいまいな方は，ぜひご覧になってみてください。\n\n\n依存関係逆転の原則に基づいたデザインパターンである，\n「依存性の注入：Dependency Injection」（DIパターン）に関しても説明しており，\n外部から依存性を注入することで，「抽象に対してのプログラミング」や\n「テスト容易性」を実現する方法を解説しています。\n\n\n依存関係つながりということで，\nプロジェクト間参照に関しても解説しており，\n1層構造，2層構造，昔ながらの3層構造，ドメインパターン3層構造の，\nそれぞれの利点等も解説しています。\n\n\nインタフェース分離の原則では，\nクライアントの要求に合わせたインターフェース分離の方法ということで，\n有名な「プリンターの例」と，私独自で考えた「ドラクエの例」を解説しており，\nドラクエの例を見てもらえれば，役割に応じたインタフェースの分離がどういったものかを\n理解していただけると思います。\n\n\n【依存関係逆転の原則】\n#01_依存関係逆転の原則\n#02_原則違反_上位が下位に依存している例\n#03_下位モジュールに依存する事の問題点\n#04_両方とも抽象に依存すべきである\n#05_両方とも抽象に依存させる実装方法\n#06_ファクトリーで下位モジュールを生成する\n#07_抽象に依存することで問題が解決されていることを確認する\n#08_依存関係逆転という言葉の意味\n#09_下位モジュールが抽象に依存する事のメリットとは\n#10_抽象と実装の分離_そもそもオブジェクト指向プログラミングというものは\n#11_依存性の注入\n#12_依存性の注入の実装\n#13_自動テストにおける下位モジュールの問題点\n#14_自動テストの問題を依存性注入で解決する_Mock手作り\n#15_自動テストの問題を依存性注入で解決する\n#16_テストケースごとにMockを作るのは大変\n#17_Moqを使った自動テストをする方法\n#18_メソッドで依存性を注入する方法\n#19_ユーザーインタフェースの自動テストをする方法\n#20_ViewとViewModelのデータバインド\n#21_ViewModelからModuleまでの一連を自動テストする\n#22_ViewModelのコンストラクタからファクトリーを呼ぶ実装\n#23_DIコンテナツールの使い方\n#24_複数の依存性がある場合のDIコンテナの動き\n#25_DIコンテナを外部からアクセス可能にする実装方法\n#26_プロジェクトの依存関係_1層の場合\n#27_プロジェクトの依存関係_2層の場合\n#28_プロジェクトの依存関係_昔ながらの3層の場合\n#29_プロジェクトの依存関係_ドメインパターン3層構造\n#30_依存関係逆転の原則違反の回避方法\n\n\n【インタフェース分離の原則】\n#01_インタフェース分離の原則\n#02_プリンターの実装例\n#03_ドラクエを題材にしたインタフェース分離の例\n#04_キャラクターを操作できるようにする\n#05_役割に応じてインタフェースを分離する\n#06_ロールとしてのインタフェース\n#07_インタフェース分離の原則まとめと5大原則の総括",
      "target_audience": [
        "オブジェクト指向のプログラミングを理解したい方",
        "依存関係逆転の原則を理解したい方",
        "依存性注入（DIパターン）の効果的な使い方を理解したい方",
        "インタフェース分離の原則を理解したい方"
      ]
    },
    {
      "title": "Aprende JavaScript de CERO a EXPERTO",
      "url": "https://www.udemy.com/course/aprende-javascript-de-cero-a-experto/",
      "bio": "Aprende JavaScript sin ningún conocimiento previo",
      "objectives": [
        "Aspectos básicos de la programación",
        "Variables y tipos de datos",
        "Trabajar con textos y números",
        "Estructuras para manejar datos",
        "Sentencias condicionales",
        "Bucles",
        "Funciones y métodos",
        "Programación Orientada a Objetos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Instalación de Visual Studio Code y RunJS",
          "Primer programa"
        ],
        "Sintaxis básica de JavaScript": [
          "Mostrar mensajes al usuario",
          "Sintaxis de JavaScript",
          "Comentarios"
        ],
        "Variables": [
          "Declaración de variables",
          "Tipos de datos"
        ],
        "Trabajar con números": [
          "Operaciones aritméticas",
          "Operaciones de asignación",
          "Métodos para trabajar con números",
          "Métodos de los objetos Number y Math"
        ],
        "Trabajar con strings": [
          "Concatenación e interpolación de strings",
          "Acceder a elementos de un string",
          "Métodos para manejar strings",
          "Métodos para realizar búsquedas en strings"
        ],
        "Arreglos, sets y maps": [
          "Declarar arreglos",
          "Métodos para trabajar con arreglos",
          "Sets",
          "Maps"
        ],
        "Sentencias condicionales": [
          "Operaciones relacionales y lógicas",
          "Sentencia condicional if",
          "Sentencia condicional switch"
        ],
        "Bucles": [
          "Bucle for",
          "Bucle while",
          "Interrumpir bucles",
          "Anidar bucles"
        ],
        "Funciones": [
          "Declarar funciones",
          "Sentencia return"
        ],
        "Programación Orientada a Objetos": [
          "Objetos",
          "Clases",
          "Métodos para clases",
          "Herencia y polimorfismo"
        ]
      },
      "requirements": [
        "No se requiere ninguna experiencia previa en la programación. En este curso se aprende el uso de JavaScript desde cero."
      ],
      "description": "JavaScript es un lenguaje de programación ligero, interpretado o compilado justo a tiempo, con funciones de primera clase. Aunque es más conocido como lenguaje de scripting para páginas web, muchos entornos ajenos a los navegadores también lo utilizan, como Node.js, Apache CouchDB y Adobe Acrobat. JavaScript es un lenguaje basado en prototipos, multiparadigma, monohilo y dinámico, que admite estilos orientados a objetos, imperativos y declarativos (por ejemplo, programación funcional).\nJavaScript es el lenguaje de programación más popular del mundo. Junto con HTML (que se utiliza para la estructura de la página web), y CSS (que se utiliza para el estilo); JavaScript (que se utiliza para la funcionalidad), se considera uno de los lenguajes fundamentales para el desarrollo web. Aun así, JavaScript está en todas partes, ya no es un lenguaje exclusivo de la web, podemos encontrárnoslo en los servidores, en las aplicaciones escritorio multiplataforma,  y en muchos otros ámbitos. Por lo tanto, saber programar en JavaScript puede ofrecer grandes oportunidades laborales.\nEste curso de JavaScript te llevará desde principiante hasta profesional. Este curso está diseñado desde la perspectiva de un estudiante que no tiene conocimientos previos de programación y que es un principiante en JavaScript. Además, está definido de una forma en la que se va de los aspectos más básicos a los más complejos, para que el alumno pueda ir adquiriendo las bases de la programación en JavaScript de la mejor manera posible.\nEntre los contenidos de este curso se encuentran los siguientes:\nSintaxis básica de JavaScript\nVariables y tipos de datos\nTrabajar con variables de texto\nTrabajar con variables numéricas\nEstructuras de datos\nSentencias condicionales\nBucles iterativos\nDeclaración de funciones\nProgramación Orientada a Objetos\nPor lo tanto, a lo largo de este completo curso, cubrimos una gran cantidad de habilidades y técnicas que incluyen las aspectos más esenciales para programar en JavaScript y en cualquier otro lenguaje de programación.\nAl realizar este curso, te convertirás en un programador de JavaScript fluido y serás tan bueno que podrás conseguir una oferta de trabajo razonable como desarrollador de JavaScript y utilizar el lenguaje profesionalmente.",
      "target_audience": [
        "Este curso está dirigido a cualquier persona que esté interesada en aprender a programar con JavaScript"
      ]
    },
    {
      "title": "Introdução a Estruturas de Dados com a Linguagem C",
      "url": "https://www.udemy.com/course/estruturas-de-dados-com-a-linguagem-c/",
      "bio": "Aprenda a implementar estruturas de dados utilizando a linguagem C!",
      "objectives": [
        "Implementar suas estruturas de dados.",
        "Utilizar a linguagem C para implementar estruturas de dados.",
        "Conhecer as mais variadas estruturas de dados."
      ],
      "course_content": {},
      "requirements": [
        "É recomendado já ter programado na linguagem C."
      ],
      "description": "Nesse curso você irá aprender a implementar várias estruturas de dados utilizando a linguagem de programação C.\nA linguagem C é uma das linguagens mais populares e eficientes que existe! Aprender sobre estruturas de dados é fundamental na carreira de qualquer programador. Esse curso tem como objetivo explicar várias estruturas de dados e, através de aulas dinâmicas e didáticas, implementar cada uma dessas estruturas.\nVocê irá aprender com Marcos Castro que já publicou dezenas de cursos e já ensinou centenas de alunos. Ele também foi 3x finalista da Maratona de Programação que é uma competição onde você tem que resolver os mais variados problemas utilizando uma linguagem de programação.\nO armazenamento e organização dos dados é muito importante para que esses dados sejam utilizados de forma eficiente. Aprenda agora mesmo sobre estruturas de dados com a linguagem C através de aulas claras e objetivas!",
      "target_audience": [
        "Todos que querem aprender sobre estruturas de dados."
      ]
    },
    {
      "title": "C# |Sıfırdan İleri Seviyeye Komple C# Kursu +SQL",
      "url": "https://www.udemy.com/course/sfrdan-ileri-seviyeye-komple-c-kursu-sql/",
      "bio": "C# |KOMPLE C# | C# ve SQL | C# Windows Form | C# | C# 2D Oyun Yapımı| LINQ|Entity Framework | C#",
      "objectives": [
        "Nesne Tabanlı Programlama'nın (Object Oriented Programming) inceliklerini",
        "C# da 2D Oyun Geliştirmeyi",
        "Gerçek Hayat Projeleriyle Teorik Bilgiyi Pratiğe Dökmeyi",
        "Sql Commutları ve Veri Tabanı İşlemlerini",
        "C# ın ayrıntılı uygulamalarını",
        "Windows Form Uygulamarını",
        "Sql Commutları ve Veri Tabanı İşlemlerini",
        "SQL Server servislerini doğru şekilde yönetmeyi ve konfigüre etmeyi",
        "C# Ado .Net Uygulamarını",
        "LINQ kullanımında query syntax ve method syntax kullanımını öğrenecksiniz",
        "LINQ ile istediğimiz dataya nasıl ulaşacağımızı öğreneceksiniz",
        "C# da Class İnterface Contructor Yapılarını",
        "C# da Tarih Saat Formatlarını",
        "C# da otomatik mail göndermeyi"
      ],
      "course_content": {},
      "requirements": [
        "Programlamaya ilgi duyması"
      ],
      "description": "Komple Web Geliştirici olmak isteyen arkadaşlar malesef pratik uygulama bulamamakta ve teorik bilgi teorik olarak kalmaktadır.Bu eğitim setindeki ana amacımız yeterli düzeyde teorik bilgi verip bol uygulama yaparak bir programcının gerçek hayatta karşılaşabileceği sorunların üstesinden gelmek.\nEğitim setinde temel c# komutlarından başlayıp objet oriented mantığı iyice yerleştiken sonra database işlemlerine geçiyor olacağız.\nGerçek hayatta karşımıza gelen tüm sql ve c# problemlerinin üstesinden geliyor olacaksınız.\nBu eğitimde;\n\n\nTemel C# komutlarını  öğreneceksiniz,\nC# da Class yapılarını öğreneceksiniz,\nC# da Constructor yapısını öğreneceksiniz,,\nEtkili araçları kullanacak ve öğreneceksiniz,\nKurumsal mimarileri öğreneceksiniz,\nKatmanlı mimarileri SOLID prensiplerle öğreneceksiniz,\nEntity Framework Kullanımını öğreneceksiniz,\nC# ı çok iyi öğrendiğiniz için diğer programlama dillerine geçişiniz çok daha kolay olacak,\nRepository Desenlerini öğrenecek,\nYazılımda soyutlamanın önemini kavrayacak ve uygulayacak,\nWindows Form projeleri nasıl kodlanır öğreneceksiniz,\nWindows Form da yaptığımız çok fazla proje sayesinde önünüze herhangi bir proje geldiğinde çok rahat kodluyor hale geleceksiniz,\nAdo Net kullanmayı öğreneceksiniz,\nSürdürülebilir ve okunabilir yazılım yapmayı öğreneceksiniz.\nBu eğitimin en önemli özelliği full PROJE odaklı olması.Bu da benim eğitim sektöründen değil piyasanın içinden geliyor olmamdan kaynaklı.\nBu zamana kadar Dijital ajans yazılımından ,restorant sektöründe online yemek siparişi ve mobil uygulama yazılımına,Gümrük sektöründe kullanılan yazılıma ve Fintech sektöründe Dijital Cüzdan ve Kart yazılım tecrübesi edinmiş birinden bu eğitimi alacaksınız.",
      "target_audience": [
        "Komple Web Geliştiricisi Olmak İsteyen Herkes",
        "C# da class ları öğrenmek isteyenler",
        "C# da constructor yapılarını öğrenmek isteyenler",
        "C# da tarih saat formatlarını öğrenmek isteyenler",
        "C# da otomatik mail atmak isteyneler",
        "C# ve Ado .Net i öğrenmek isteyenler",
        "C# ve Sql i öğrenmek isteyenler",
        "C# ve LINQ yu öğrenmek isteyneler",
        "C# ve Entity Framework ü Öğrenmek İsteyenler",
        "C# ve Windows Form Uygulamalarını Öğrenmek İsteyenler",
        "Yazılımcı Olmak İsteyenler"
      ]
    },
    {
      "title": "Curso Completo de Delphi XE8",
      "url": "https://www.udemy.com/course/curso-completo-de-delphi/",
      "bio": "Criando um Sistema Financeiro Completo",
      "objectives": [
        "Aprender programar em Delphi",
        "Se familiarizar com o Delphi",
        "Criar um sistema Financeiro pronto para a venda"
      ],
      "course_content": {},
      "requirements": [
        "Adicionamos uma seção de Delphi Basico no curso por isso não existe nenhum requerimento especifico para este curso"
      ],
      "description": "Seja bem vindo! O curso de Delphi contém 129 aulas e acompanham todos os arquivos e fontes, sendo 22 aulas básicas e 107 aulas avançadas.\nCom a criação do sistema, você vai aprender a programar em Delphi criando um sistema Financeiro pronto para a venda do seu negócio próprio ou empresa.\nAtravés do curso você poderá se diferenciar no mercado ao dominar um sistema poderoso como o Delphi, tornando-se um programador que pode gerar sua própria renda através deste programa.\nEstarei disponível para qualquer eventual dúvida durante o curso. Um certificado será enviado para aqueles alunos que completarem todos os módulos.\nTe vejo no curso!",
      "target_audience": [
        "Quem tem interesse no assunto e deseja se diferenciar no mercado"
      ]
    },
    {
      "title": "C++ Bootcamp: Vom Anfänger zum C++ - Entwickler!",
      "url": "https://www.udemy.com/course/cpp-bootcamp/",
      "bio": "Die Schritt-für-Schritt - Anleitung für die Programmiersprache C++. Inklusive vielen Beispielen & Übungen",
      "objectives": [
        "Dein Schnellstart in die Welt von C++",
        "Lerne alle Grundlagen",
        "Mit vielen Beispielen und Übungen",
        "Verstehe auch das Wieso und Warum",
        "Lerne am Beispiel: Desktop-App mit Qt entwickeln",
        "Verstehe Objektorientierung"
      ],
      "course_content": {},
      "requirements": [
        "Du solltest einen PC bedienen können (Grundkenntnisse reichen aus)",
        "Du benötigst keine Programmierkenntnisse",
        "Alle benötigten Programme (Xcode bzw. Visual Studio, QtCreator) werden wir im Rahmen des Kurses herunterladen und bei dir installieren. Du benötigst ca. 10GB freien Festplattenplatz"
      ],
      "description": "Erstelle coole Programme in C++ - sowohl einfache, textbasierte Programme, als auch coole Desktopanwendungen (Mac, Linux, Windows) mit Qt und bringe dadurch deine Karriere voran!\nC++ ist mit eine der wichtigsten Programmiersprachen - jeder Entwickler sollte sie in dem eigenen Toolkit haben!\nDieser Kurs bringt dir Schritt für Schritt alles bei, was du zum Thema C++ wissen musst:\nGrundlagen: Datentypen, Variablen und Funktionen, Kontrollstrukturen\nObjektorientierung: Konzept, inkl. verschiedenen Beispielen\nDatenstrukturen: Arrays, Vektoren, Listen, Sets, Maps, usw.\nFortgeschrittene Konzepte: Referenzen, Pointer, Iteratoren, Namespaces, Exceptions, ...\nZudem gibt's am Ende des Kurses noch einen Bonus (ca. 2.5 Stunden), in dem ich dir zeige, wie du mit Qt coole Desktopanwendungen entwickeln kannst. Zudem entwickeln wir anschließend ein kleines Spiel (Galgenmännchen) mit Qt.\nZudem gibt es in diesem Kurs viele Praxisbeispiele und Übungen. Dadurch lernst du C++ nicht nur theoretisch, sondern kannst das Wissen anschließend auch anwenden.\nNach diesem Kurs bist du in der Lage, C++-Anwendungen zu programmieren. Du hast alle wichtigen Konzepte der Programmiersprache C++ verstanden, und kannst objektorientierten Code schreiben - wichtig sowohl für den privaten, als auch professionellen Einsatz, und für dein nächstes Jobinterview!",
      "target_audience": [
        "Anfänger, die den Einstieg in die Programmierung finden möchten,",
        "oder auch Leute, die schon programmiert haben, und jetzt die Programmiersprache C++ lernen möchten"
      ]
    },
    {
      "title": "C# Asp.Net MVC Entity FrameWork- Razor -Bootstrap-Javascript",
      "url": "https://www.udemy.com/course/c-aspnet-mvc-entity-framework-razor-bootstrap-javascript/",
      "bio": "Desarrolla aplicaciones web con C# Asp.Net MVC 5 , usando Razor - Entity Framework - Ajax - Json - Bootstrap - Jquery",
      "objectives": [
        "Entender como funciona el patrón de diseño Modelo - Vista - Controlador (MVC)",
        "Implementar Entity Framework para conectarnos y realizar operaciones con una base de datos",
        "Usar Razor para generar las vistas",
        "Utilizar DataAnnotations para realizar las validaciones",
        "Realizar menús de opciones para navegar entre pantallas",
        "Realizar listados y búsquedas",
        "Aprender a realizar un CRUD o mantenimiento (Insertar , actualizar , eliminar)",
        "Implementar bootstrap para diseñar nuestras interfaces",
        "Integrar MVC con Javascript para programar en el lado del cliente"
      ],
      "course_content": {},
      "requirements": [
        "Muchas ganas de aprender programación Web"
      ],
      "description": "Aprende a crear aplicaciones web con C# desde cero ,  entendiendo desde los conceptos básicos hasta los mas avanzados , usando Entity FrameWork para conectarnos y realizar operaciones con una base de datos . Evoluciona tus aplicaciones de escritorio y conviértelo a una web para que pueda llegar a mas usuarios en todo el mundo . Entre los temas que veremos están ,  listados , filtrados , mantenimientos , reportes ,autorización , autenticación , envió de correos  entre otros.",
      "target_audience": [
        "Personas que desean aprender a desarrollar aplicaciones web de cero."
      ]
    },
    {
      "title": "Python Programlama Eğitimi A-Z™ - (71.000+ Öğrenci)",
      "url": "https://www.udemy.com/course/veri-bilimi-ve-makine-ogrenmesi-icin-python/",
      "bio": "Python Temelleri - Veri Çekme (Selenium, Scrapy) - Django Web - Veri Analizi ( Numpy , Pandas, Matplotlib ve Seaborn )",
      "objectives": [
        "Python Programlama Dili Temellerini - Veri Tiplerini - Değişken ve Sabitleri",
        "Python - Anaconda - Jupyter Notebook Kurulum ve Kullanımını",
        "Python Karakter Dizilerini - Sayıları Kullanmayı - Boolean Değerleri",
        "Python Sözlükleri - Demetleri - Kümeleri - Veri Tiplerinin Metotlarını",
        "Python Koşul İfadelerini - Döngüleri - For ve While Döngüsünü Nasıl Kullanacağınızı",
        "Python'da ki Fonksiyonların Kullanımını ve Python ile Nesne tabanlı programlamayı",
        "Python Modül - Paket ve Kütüphaneleri - Pythonda Hata ve İstisnaları - Python'da Dosya İşlemlerini",
        "Web crawling , Web scraping mantığını öğrenmiş olacaksınız",
        "Web sitelerinden verileri çekebiliyor olacaksınız",
        "Beautiful Soup4 ve Requests Modüllerini",
        "Selenium modülü ile sosyal medya otomatik giriş otomasyonu yapacağız",
        "Scrapy framework'ünü öğrenmiş olacaksınız",
        "Python programlama dili ile web geliştirme temellerini öğreneceksiniz",
        "Django Framework - Web çatısını öğreneceksiniz",
        "Python ile beraber Veri analizi nasıl yapılır adım adım uygulayarak öğreneceksiniz",
        "Veri Analizi için vazgeçilmez olan NUMPY ve PANDAS Python kütüphanelerini çok detaylı bir şekilde öğreneceksiniz",
        "Veri görselleştirme için Kullanılan MATPLOTLİB ve SEABORN kütüphanelerini çok detaylı bir şekilde öğreneceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Azim ve öğrenme aşkı",
        "Temel Bilgisayar Bilgisi",
        "Herhangi bir programlama bilgisine gerek yoktur"
      ],
      "description": "Dünyanın En Çok Tercih Edilen Yazılım Programlama Dili Olan Python Temellerini bu kursta öğrenebilirsiniz.Bu kursu bitirdiğinizde ;\nPython Programlamaya Giriş Yapmış Olacaksınız\nPython Programlama Dili Temellerini\nPython Veri Tiplerini\nPython ile Değişken ve Sabitleri\nPython Veri Tiplerinin Metotlarını\nPython - Anaconda - Jupyter Notebook Kurulum ve Kullanımını\nPython Karakter Dizilerini\nPython Sayıları Kullanmayı\nPython Boolean Değerleri\nPython Sözlükleri - Demetleri - Kümeleri\nPython Veri Tiplerinin Metotlarını\n\n\nPython Koşul İfadelerini\nPython'da Döngüleri\nFor ve While Döngüsünü Nasıl Kullanacağınızı\nPython'da ki Fonksiyonların Kullanımını\nPython ile Nesne tabanlı programlamayı\nPython Modül - Paket ve Kütüphaneleri\nPythonda Hata ve İstisnaları\nPython'da Dosya İşlemlerini\n\n\nWeb crawling , Web scraping mantığını öğrenmiş olacaksınız\nWeb sitelerinden verileri çekebiliyor olacaksınız\nBeautiful Soup4 ve Requests modüllerini\nBeautiful Soup4 ve Requests ile Glassdor en iyi kazanan meslekler verisini çekeceğiz\nSelenium modülünü öğrenmiş olacaksınız\nSelenium modülü ile sosyal medya otomatik giriş otomasyonu yapacağız\nSelenium ile sosyal medya takipçilerini kayıt edeceğiz\nScrapy framework'ünü öğrenmiş olacaksınız\nScrapy ile Groupon sitesinden ürün verilerini çekeceğiz\n\n\nPython programlama dili ile web geliştirme temellerini öğreneceksiniz\nDjango Framework - Web çatısını öğreneceksiniz\nDjango Temellerini öğrenerek ileri seviye konulara hazır olacaksınız\nKendiniz basit web uygulamaları geliştirebileceksiniz\nSizinle beraber To-do app projesini adım adım yapacağız\n\n\nPython ile beraber Veri analizi nasıl yapılır adım adım uygulayarak öğreneceksiniz\nVeri Analizi için vazgeçilmez olan NUMPY ve PANDAS Python kütüphanelerini çok detaylı bir şekilde öğreneceksiniz\nPython ile Veri görselleştirme nasıl yapılır adım adım uygulayarak öğreneceksiniz\nVeri görselleştirme için Kullanılan MATPLOTLİB ve SEABORN kütüphanelerini çok detaylı bir şekilde öğreneceksiniz.\nKurs Bitiminde sıfırdan nasıl veriler analiz edilir ve veriler nasıl görselleştirilir uygulayarak öğrenmiş olacaksınız.",
      "target_audience": [
        "Yapay zeka ,makine öğrenmesi ve veri bilimi ile ilgili herkes"
      ]
    },
    {
      "title": "Apache Kafka pour débutant",
      "url": "https://www.udemy.com/course/apache-kafka-pour-debutant/",
      "bio": "Apache Kafka pour débutant : Théorie et mise en pratique, Kafka Streams, Kafka connect, Topic Kafka ...",
      "objectives": [
        "Comprendre l'écosystème d'Apache Kafka (Kafka streams, Kafka connect, ...)",
        "Maitriser les concepts fondamentaux de Kafka : topics, partitions, consumers, producers, acks, leader, ...",
        "Développer vos propres Kafka stream et utiliser les transformations de bases.",
        "Développer des producers et consumers en Java pour interagir avec Kafka.",
        "Utiliser Kafka connect en mode standalone.",
        "Utiliser Kafka en ligne de commande: kafka-console-consumer, kafka-console-producer.",
        "Utiliser Kafka SMT avec kafka connect"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Théories": [
          "Topic et Partition",
          "replication factor",
          "Leader et Follower",
          "Consumer et consumer group",
          "Producer et stratégie de partitionnement",
          "Acknowledgement",
          "Offset",
          "Zookeeper",
          "Schema registry",
          "Kraft",
          "Quiz sur la théorie",
          "Lambda/Kafka architecture (optionnel)"
        ],
        "Installation": [
          "Installation Zookeeper - Windows et Linux",
          "Installation Kafka - Windows et Linux",
          "Configuration cluster de 3 brokers - Windows et Linux",
          "Démarrer Kafka 3.7 avec Kraft (wsl2)"
        ],
        "Ligne de commande": [
          "Kafka topic",
          "Kafka console producer",
          "Kafka console consumer",
          "kafka consumer groups et reset offset",
          "Quiz de fin de section"
        ],
        "Kafka connect": [
          "Présentation kafka connect",
          "Connect source file stream",
          "Connect sink file stream",
          "Connect sink désérialisation JSON",
          "Kafka SMT : Single Message Transformations",
          "Kafka SMT : enchainer les transformations",
          "Kafka connect distributed",
          "Quiz de fin de section"
        ],
        "Développement Java et Kafka - Consumer API": [
          "Création d'un consumer",
          "Commit d'offset manuellement",
          "Consumer multithread"
        ],
        "Développement Java et Kafka - Producer API": [
          "Création d'un producer"
        ],
        "Développement Java et Kafka - Kafka stream API": [
          "Kafka stream basique",
          "filter",
          "mapValue",
          "flatMap",
          "foreach",
          "peek et externalisation des properties",
          "Operation stateful et Ktable"
        ],
        "Sécurité": [
          "Principe de base",
          "Crypter et Authentifier avec le protocole SSL/TLS",
          "Authentifier avec la couche SASL",
          "Autorisation avec les listes de contrôle ACL",
          "Installation du broker en SSL."
        ],
        "Autres": [
          "Log compaction",
          "Log compaction: la mise en pratique"
        ]
      },
      "requirements": [
        "Programmation Java basique pour la partie programmation (non obligatoire)",
        "Désireux d'en savoir plus sur Kafka"
      ],
      "description": "Bienvenue dans la formation en français de apache Kafka 2.5+ !\nSaviez-vous que 80% des 100 plus grandes entreprises utilisent apache Kafka ? On peut citer : Zalando, airbnb, Linkedin, Netflix, Paypal, Spotify, Twitter ...\nSi vous souhaitez apprendre Kafka, étape par étape, vous êtes dans la bonne formation. Aucune connaissance Kafka n'est préalablement requise, nous allons voir ensemble la théorie pour ensuite la mettre en pratique.\nA la fin de la formation vous connaitrez :\n* Les concepts importants : Topics, partitions, producer, consumer, replicas, leader, et pleins d'autres.\n* Comment installer Kafka et Zookeper.\n* Configurer Kafka et ses brokers en mode cluster - WIndow/Linux.\n* Utiliser les scripts kafka pour produire et consommer des messages.\n* Configurer et utiliser des kafka connect source et sink.\n* Utiliser l'API producer en Java.\n\n\nJ'ai moi-même utilisé Kafka de façon professionnelle pendant plusieurs années,  cela me permet d'être critique sur les bonnes pratiques à avoir et d'enrichir la formation avec mes propres expériences.\n\n\nPS: Le cours utilise Java comme langage de programmation principal, mais n'ayez aucune inquiétude, tous les concepts abordés dans ce cours sont aussi applicables aux autres langages de programmation : C/C++ , scala , C#, python, ou encore des outils et frameworks Big data comme Nifi, Spark, Druid\n\n\nVous souhaitez utiliser Kafka avec Nifi ? d'autres de mes formations en Français sont disponibles :\nNifi : Apache Nifi De A à Z - le Guide complet",
      "target_audience": [
        "Développeurs intéressés par Kafka.",
        "Administrateurs intéressés par Kafka.",
        "Développeur débutant",
        "Développeur big data",
        "Data engineers"
      ]
    },
    {
      "title": "Aprende a programar desde cero con C#, Microsoft .NET y WPF",
      "url": "https://www.udemy.com/course/aprende-a-programar-desde-cero-con-c-sharp-de-microsoft-dot-net/",
      "bio": "Aprende con aplicaciones de consola y de escritorio (WPF)",
      "objectives": [
        "Fundamentos de programación y con ello la adquisición de bases sólidas para aprender muchas más tecnologías de Microsoft u otras plataformas.",
        "Dominio en temas básicos como flujo de programa, algoritmos y estructuras de datos, manejo de errores y depuración, programación orientada a objetos y mucho más",
        "Dominio de temas intermedios y avanzados como seguridad de aplicaciones, rendimiento de aplicaciones, gestión de memoria, multithreading y mucho más",
        "Excelente dominio de Visual Studio como herramienta principal de desarrollo (IDE) en su versión más reciente para el desarrollo de software con C#.",
        "Dominio de Microsoft .NET",
        "Bases de .NET 5, .NET 6 y .NET 7",
        "Bases de Windows Presentation Fundation (WPF)",
        "Creación de aplicaciones de escritorio con WPF"
      ],
      "course_content": {},
      "requirements": [
        "Comenzamos desde \"¿Qué es programación?\" por lo que no es necesario un requisito mínimo más que el manejo básico de la computadora.",
        "Para alumnos intermedios o avanzados, les es posible tomar el curso comenzando con los temas de su nivel."
      ],
      "description": "En este curso aprende a programar con C#, uno de los lenguajes de programación mas sencillos y a su vez robustos que existentes actualmente. Además C# cuenta con el respaldo de Microsoft al ser parte de .NET\nNOTA: Este curso se actualiza constantemente y en este momento ya está actualizado a .NET 8 y en proceso de actualización a .NET 9 con lo más importante de C# 13\nTambién aprenderás de la mano con Visual Studio, uno de los IDE más potentes en la actualidad, que proporciona las mejores herramientas en su categoría para cualquier desarrollador. Además permite simplificar muchas tareas que en otros lenguajes y entornos de programación podría ser hasta tortuoso. Visual Studio nos permite desarrollar con un conjunto de herramientas completo, desde el diseño inicial hasta la implementación final.\nIrás paso a paso conociendo desde cero el lenguaje y los conceptos de programación necesarios para convertirte en un buen programador, con bases sólidas y logrando posteriormente incluso penetrar en cualquier otro lenguaje o plataforma.\nSi ya cuentas con las bases de programación, podrás brincarte los fundamentos y pasar directo a la acción, éste curso esta diseñado para iniciar en el nivel que te encuentras.\nTambien aprende a crear excelentes aplicaciones de escritorio con Windows Presentation Fundation (WPF), la mejor plataforma para crear aplicaciónes llamativas sobre Windows.\nEl curso incluirá los siguientes temas de estudio :\nFundamentos\ni. Introducción.\nPresentación\nii. Introducción a .NET y Visual Studio\nObjetivo\nIntroducción a .NET Framework\nIntroducción a Visual Studio\nPráctica: Instalación de Visual Studio\nSDK de .NET\nCreación de proyectos con Visual Studio\nPráctica: Analizando un proyecto de consola\niii. Introducción a los conceptos básicos de programación\nLógica de programación\nProcesamiento y almacenamiento de datos informáticos\nHardware\nSoftware\nCiclo de vida de la aplicación\nTipos de aplicación\nPráctica: Tipos de aplicación\nCompilación de código\nPráctica: Compilación\nResumen\niv. Conceptos básicos del lenguaje de programación\nIntroducción\nSintaxis\nPráctica: Sintaxis\nTipos de datos\nVariables y constantes\nPráctica: Tipos, variables y constantes\nResumen\nv. Flujo de programa\nIntroducción a los conceptos de programación estructurada\nIntroducción a la ramificación\nFunciones\nPractica: Aplicando programación estructurada\nvi. Algoritmos y estructuras de datos\nAlgoritmos\nEstructura de datos\nPráctica. Matrices.\nPráctica. Colas y pilas.\nPractica. Listas\nPráctica. Otras colecciones.\nvii. Manejo de errores y depuración\nIntroducción a los errores del programa\nIntroducción al manejo estructurado de errores\nPráctica. Depuración con Visual Studio.\nPráctica. Try Catch Finally.\nviii. Introducción a la programación orientada a objetos\nIntroducción a estructuras y clases.\nClases\nEncapsulación\nHerencia\nEnumeraciones\nPráctica. Clases, encapsulación y herencia\nPráctica. Clases, encapsulación y herencia. Continuación\nPolimorfismo\nVistazo a la biblioteca de clases base de .NET\nTipo Record\nix. Programación Entrada/Salida fundamental\nUso de la E/S de la consola\nPráctica. Usando E/S en consola\nUsando E/S en archivos\nx. Rendimiento de aplicaciones y gestión de memoria\nTipos de valor vs tipos de referencia\nTipos de conversión - Implícitas\nTipos de conversión – Explícitas\nTipos de conversión – System.Convert\nEl recolector de elementos no utilizados\nINTERMEDIO-AVANZADO\nxi. Implementando multiprocesamiento y procesamiento asíncrono\nUsando Delegados y Lambda fácilmente\nEntendiendo hilos (Threads)\nUsando la clase Thread\nUsando la clase Thread - ParameterizedThreadStart\nUsando la clase Thread – ThreadStatic\nUsando la clase Thread – ThreadLocal\nUsando ThreadPool\nUsando Tareas\nUsando Tareas – ContinueWith\nUsando Tareas – TaskFactory\nUsando Tareas - WaitAll\nUsando la clase PARALLEL\nUsando ASYNC y AWAIT\nUsando ASYNC y AWAIT – Ecalabilidad\nUsando ASYNC y AWAIT - SynchronizationContext\nUsando Parallel Language Integrated Query (PLINQ)\nUsando colecciones concurrentes\nxii. Administrando subprocesos múltiples (multithreading)\nObjetivo de la sección.\nSincronizando recursos\nLa clase Volatile\nLa clase Interlocked\nCancelando tareas\nxiii. Crear e implementar eventos (EVENTS) y devoluciones de llamada (CALLBACK).\nObjetivo de la sección.\nEntendiendo delegados (DELEGATES)\nUsando expresiones LAMBDA\nUsando eventos (EVENTS)\nxiv. Usando Tipos en modo avanzado\nObjetivo de la sección.\nCreando enumeraciones\nUsando tipos genéricos (GENERICS)\nExtendiendo tipos existentes\nUsando tipos dinámicos\nxv. Programación orientada a objetos avanzada\nObjetivo de la sección.\nDiseñando e implementando interfaces\nCreando y Usando clases base\nPráctica: Interfaces y Clases Base\nClases base abstractas y selladas\nPrincipio de sustitución de Liskov\nImplementando interfaces estándar de .NET\nPráctica: Usando IDisposable.\nxvi. Utilizando Reflection\nObjetivo de la sección\nCreando y usando atributos\nEjercicio: Usando atributos localmente\nUsando Reflection\nUsando CodeDOM y expresiones Lambda para generar código.\nxvii. Usando Strings en modo avanzado.\nObjetivo\nUsando strings en .NET\nManipulando Strings\nBuscando y enumerando Strings\nFormateando Strings\nEjercicio. Formateo de Strings\nxviii. Validando la entrada de aplicación\nObjetivo\n¿Por qué es importante validar las entradas de una aplicación?\nUsando Parse, TryParse y Convert\nUsando Expresiones Regulares\nValidando JSON y XML\nEjercicio. Validando JSON\nxix. Ejecutando encriptación simétrica y asimétrica\nObjetivo\nUsando encriptación simétrica y asimétrica\nTrabajando con encriptación en .NET\nUsando Hashing\nAdministrando y creando certificados.\nUsando SecureString\nxx. Administrando ensamblados (ASSEMBLIES)\nObjetivo\n¿Qué es un ensamblado?\nFirmando ensamblados usando STRONG NAME\nEl Global Assembly Cache (GAC)\nVersionando ensamblados\nxxi. Depuración (DEBUG) avanzada\nObjetivo\nConfiguración de compilación\nCrear y administrar directivas de compilación\nGestión de archivos PDB y símbolos\nxxii. Implementando el diagnóstico en una aplicación.\nObjetivo\nLOGIN y TRACING 1\nLOGIN y TRACING 2\nPerfilando tu aplicación\nCreando y monitoreando contadores de rendimiento.\nxxiii. Entrada/Salida avanzada\nObjetivo\nArchivos - Usando Drives\nArchivos - Usando Directorios\nArchivos - Usando Archivos\nArchivos - Usando Paths\nEl FILE SYSTEM no es solo para tí\nComunicándonos a través de la RED.\nImplementando E/S asíncrona\nxxiv. Consumiendo datos\nObjetivo\n¿Que es una base de datos?\nInstalando Sql Server\nInstalando Microsoft Sql Server Management Studio\nTrabajando con base de datos - Conexión\nTrabajando con base de datos - Consulta\nTrabajando con base de datos - Actualización\nTrabajando con base de datos - Parámetros\nTrabajando con base de datos - Transacciones\nTrabajando con base de datos - ORM - Entity Framework\nUsando WEB SERVICE - WCF\nConsumiendo XML\nConsumiendo XML - Clases de .NET\nConsumiendo JSON\nxxv. Consultando y manipulando datos y objetos usando LINQ\nObjetivo\nConceptos LINQ: Explicit Typing\nConceptos LINQ: Sintaxis de inicialización de objetos\nConceptos LINQ: Expresiones LAMBDA\nConceptos LINQ: Métodos de extensión\nConceptos LINQ: Tipos anónimos\nUsando queries LINQ\nOperadores estándar de LINQ\n¿Cómo funciona LINQ?\nUsando LINQ para XML\nxxvi. Serializar y deserializar datos\nObjetivo\nUsando serialización y deserialización\nUsando XmlSerializer\nUsando serialización binaria\nUsando DataContract\nUsando JSON Serializer\nWINDOWS PRESENTATION FUNDATION (WPF) PARA PRINCIPIANTES\nxxvii. WPF: Introducción\nObjetivo\nMi primer aplicación WPF\n¿Qué es WPF?\nXAML\nCodigo subyacente\nControles\nLayouts\nData binding\nGráficos y animación\nTipografía y texto\nPersonalización - Content Model\nPersonalización - Plantillas y Triggers\nPersonalización - Estilos\nPersonalización - Controles\nxxviii. WPF: XAML\nObjetivo\n¿Qué es XAML?\nSintaxis XAML - Elementos\nSintaxis XAML - Atributos\nSintaxis XAML - Propiedades\nSintaxis XAML - Colecciones\nSintaxis XAML - Propiedades de Contenido\nSintaxis XAML - Texto como contenido\nSintaxis XAML - Eventos\nCase y espacio en blanco en XAML\nExtensiones de marcado\nConvertidores de tipo\nElementos raíz XAML y espacios de nombres XAML\nPrefijos personalizados y tipos personalizados en XAML\nEventos y código subyacente XAML\nElementos con nombre XAML\nPropiedades adjuntas y eventos adjuntos\nTipos base y XAML\nSeguridad XAML\nCargando XAML desde el código\nxxix. WPF: Code Behind\nObjetivo\n¿Qué es Code Behind?\nCosas a tener en cuenta al manejar Code Behind\nx: Código y Limitaciones del código en línea\nxxx. WPF: Windows\nObjetivo\nLa clase Window\nImplementando Window\nAbriendo una ventana\nVentana propietaria\nActivación de una ventana\nCerrar una ventana\nCiclo de vida de una ventana\nUbicación y tamaño de una ventana\nEstado de una ventana\nApariencia de una ventana\nxxxi WPF: Cuadros de diálogo.\nObjetivo\nCuadros de mensaje\nCuadros de diálogo comunes\nCuadros de diálogo personalizados\nElementos de la interfaz de usuario que abren un cuadro de diálogo\nDevolver un resultado\nxxxii WPF: Controles\nObjetivo\nJerarquia de clases para los controles\nLayouts. Border\nLayouts. StackPanel y ScrollViewer\nLayouts. Grid\nLayouts. Canvas\nLayouts. BulletDecorator\nLayouts. DockPanel\nLayouts. Expander\nLayout. GridSplitter\nLayouts. GroupBox\nLayouts. Thumb And ScrollBar\nLayouts. WrapPanel and ViewBox\nBotones. Button\nBotones. RepeatButton\nVizualización de datos. DataGrid\nVizualización de datos. TreeView y ListView\nFechas. Calendar y DatePicker\nMenus. ContextMenu\nMenus. Menu\nMenus. ToolBar\nSelección. CheckBox\nSelección. ComboBox\nSelección. ListBox\nSelección. RadioButton\nSelección. Slider\nNavegación. Frame\nNavegación. NavigationWindow\nNavegación. TabControl\nInformación de usuario. AccessText\nInformación de usuario. Label\nInformación de usuario. Popup\nInformación de usuario. ProgressBar\nInformación de usuario. StatusBar\nInformación de usuario. TextBlock y Tooltip\nDocumentos. Varios\nEntrada. Varios\nMedia. Varios\nEntrada Digital. Varios.\nxxxiii WPF: Propiedades de Dependencia\nObjetivo.\n¿Qué es una propiedad de dependencia?\nDefinición de una propiedad de dependencia\nRegistro de una propiedad de dependencia\nWrapper de una propiedad de dependencia\n¿Cómo usa WPF las propiedades de dependencia?\nValidación de una propiedad de dependencia\nxxiv WPF: Bindings\nObjetivo.\nPropiedades de dependencia.\nEnlace entre elementos.\nEnlace de elementos con código.\nEnlace de objetos que no son elementos.\nxxxv WPF: Comandos\nObjetivo.\nEntendiendo comandos.\nBiblioteca de comandos.\nOrígenes de comandos.\nEnlaces de comandos.\nOrígenes múltiples.\nTexto de comandos.\nInvocando comandos.\nDesactivando comandos.\nControles con comandos incorporados.\nxxxvi WPF: Recursos\nObjetivo.\nColección de recursos\nJerarquía de recursos\nRecursos dinámicos y estáticos\nRecursos de aplicación y de sistema\nDiccionario de recursos\nxxxvii WPF: Estilos\nObjetivo.\nConceptos básicos\nEstableciendo propiedades\nAdjuntando controladores de eventos\nCapas de estilos\nAplicación automática de estilos\nUn Trigger simple\nTrigger de eventos\nBehaviors\nUsando Behaviors\nY más.",
      "target_audience": [
        "Desarrolladores principiantes con intereses en C# y/o tecnologías Microsoft basadas en .NET",
        "Publico en general con interés en aprender a programar con conceptos básico de computación."
      ]
    },
    {
      "title": "Полный курс по современному TypeScript",
      "url": "https://www.udemy.com/course/modern_typescript/",
      "bio": "Научитесь применять типизацию ради результата, а не просто так",
      "objectives": [
        "Узнаете зачем нужен TypeScript и почему он так популярен",
        "Узнаете основные концепции и принципы TypeScript, от самых простых до самых сложных",
        "Научитесь правильно типизировать код, без последствий в будущем",
        "Научитесь думать типами, а не просто так ставить их",
        "Получите ответ на вопрос: \"А стоит ли мне включать TS в свой проект?\"",
        "Закрепите все знания о типах на практике"
      ],
      "course_content": {},
      "requirements": [
        "Обязательно знание и опыт работы с JavaScript. TypeScript - это надстройка над JS, его дополнение",
        "Желательны знания верстки для реализации проектов"
      ],
      "description": "Почему в большинстве вакансий сейчас указывают TypeScript как требование?\nПочему он находится на втором месте среди самых любимых языков разработчиков?\nЧто за система типов и почему она так важна в крупных проектах?\nДавайте вместе разберемся во всем этом! Основательно, вдумчиво, закрепляя на практике и применяя лучшие подходы.\n\n\nКурс с расширенной поддержкой, с частью про React, большой практикой, мероприятиями и многим другим вы можете найти в моей школе на campfire-school (ссылка есть в моем профиле - \"Сайт\") Буду рад вас там видеть!\n\n\nTypeScript - это \"надстройка\" над языком JavaScript и при этом считается отдельным языком программирования. Он позволяет \"излечить\" большинство проблем стандартного JS, делая код предсказуемым, расширяемым и более безопасным. А это как раз то, что нужно при работе в больших проектах и командах.\nПо этой причине все ведущие компании указывают его как необходимый навык. Изучив TS здесь, вы не просто добавите его в резюме как галочку. Вы поймете причины его создания, проблемы, которые он решает, паттерны, которые можно использовать с ним, начнете думать наперед: как не навредить себе и другим разработчикам в будущем. И поймете весь \"хайп\" по этому языку\nКому подойдет этот курс?\nЕсли вы уже изучили JavaScript и хотите двигаться дальше, становясь более востребованным программистом\nЕсли вы хотите понять, в чем же сила системы типов и почему TS так популярен\nЕсли вы не только хотите добавить новый навык в копилку, но и основательно его освоить\nЕсли вы хотите работать в больших проектах, с большой командой и сложным функционалом\nЧто вы найдете внутри курса?\nВся техническая информация о языке, выходящая далеко за пределы документации. Понятным, человеческим языком, с примерами реального применения и анализом кода\nАдекватный план изучения нового навыка\nЗакрепление всей информации в практических заданиях и тестах\nШаблоны использования TypeScript кода\nВсе необходимые материалы, ссылки и дополнительные ресурсы. Все под рукой и структурировано\nГотовый авторский конспект для каждой теоретической лекции. Повторить пройденный материал можно за несколько минут\nПостоянное обновление, дополнение и расширения курса. Бесплатно и автоматически\nНа все вопросы внутри курса отвечаю лично как можно быстрее. Так же есть телеграм канал для вопросов и обсуждений\nБуду рад помочь освоить вам новый навык и стать еще более крутым специалистом!",
      "target_audience": [
        "Для тех, кто желает выучить TypeScript с нуля, понять, для чего он нужен и полностью освоить все темы в нем",
        "Для тех, кто хочет во время обучения применить свои знания, а не просто прослушать материал",
        "Для тех, кто во время обучения хочет иметь весь материал под рукой: конспекты, ссылки, материалы",
        "Для тех, кто готов перейти на новый уровень во FrontEnd'e"
      ]
    },
    {
      "title": "Web Scraping moderno con Python usando Scrapy Seleniun",
      "url": "https://www.udemy.com/course/web-scraping-moderno-con-python-usando-scrapy-seleniun/",
      "bio": "Aprende el Lenguaje de Programación python y aplicar webscraping",
      "objectives": [
        "Usar Python para automatizar tareas",
        "Programación y automatización de scripts de Python",
        "Eliminación de contenido en sitios web como Linkedin, Instagram, Google, ...",
        "uso de uno de los mejores lenguajes de programacion"
      ],
      "course_content": {},
      "requirements": [
        "programacion intermedia"
      ],
      "description": "Descripción\nAunque las tecnologías de código bajo y sin código se están volviendo cada vez más populares, raspar cualquier sitio web y automatizar cualquier tarea aún puede ser difícil. Este curso le brinda las herramientas para que pueda usar Python para automatizar cualquier tarea en un navegador, como crear un bot de Linkedin o Instagram.\nEste curso ofrece soluciones prácticas a los problemas más desafiantes que encontrará al intentar recuperar datos de sitios web durante su viaje de piratería de crecimiento: raspado de direcciones de correo electrónico, creación de un bot de Instagram, ... Con este curso, comprenderá cómo puede automatizar cualquier script de Python para realizar acciones en línea. Aprenderá cómo conectar su aplicación a bases de datos y cómo ponerla en producción. Este curso se divide en 23 capítulos que abordan todos los temas que necesita comprender para crear cualquier herramienta de automatización o web scraping. Aprenderás:\n- Cómo modificar archivos con Python\n- Cómo eliminar datos de cualquier sitio web (Linkedin, Instagram, etc.)\n- Cómo enviar correos electrónicos y mensajes de texto con Python\n- Cómo conectar su aplicación a bases de datos (MySQL, PostgreSQL, MongoDB)\n- Cómo automatizar y programar scripts de Python\n- Cómo poner tu aplicación en producción con diferentes proveedores\nHe diseñado intencionalmente este curso para que pueda regresar en cualquier momento y encontrar lo que necesita en videos y capítulos de cursos separados. Este curso es parte de una serie de Python en curso que incluye:\n-Python para desarrollo web\n- Python para desguace, programación y automatización web (este curso)\n- Python para backends y API de aplicaciones móviles",
      "target_audience": [
        "desarrolladors en python",
        "programadores",
        "informaticos",
        "ingenieros en sistemas",
        "programadores autodidactas"
      ]
    },
    {
      "title": "C | Sıfırdan İleri Seviyeye Komple C Programlama",
      "url": "https://www.udemy.com/course/sifirdan-ileri-seviyeye-komple-c-programlama-kursu/",
      "bio": "C Programlama | C Programlama Fonksiyonlar | C Programlama Diziler | C Programlama Struct| C Programlama Pointer&Dosya..",
      "objectives": [
        "C programlama mantığını tamamiyle çözmüş olacaklar,en uğraştıran soruların bile üstesinden gelebileceksiniz",
        "C programlama dilinde proje geliştirebilecek,oyun yazabileceksiniz",
        "C programlamada çok karmaşık kodları bile anlayabilecek,gerekli müdahaleleri yapabiliyor olacaksınız",
        "Algoritma tasarlayabiliyor hale geleceksiniz",
        "Hiçbir C dili eğitiminde bulamadığınız algoritmalar ve soru çözümleriyle karşılacaksınız",
        "C programlama kursunu bitirdikten sonra diğer programlama dillerine rahatlıkla geçiş yapabiliyor olucaksınız",
        "Üniversitede C programlama dersi alıyorsanız karşınıza çıkabilecek en zor sorunun daha zorunu çözmeyi öğreneceksiniz",
        "C programlada karmaşık gelen konuların aslında çok basit olduğunu göreceksiniz"
      ],
      "course_content": {},
      "requirements": [
        "C Programlamaya İlgi duyması",
        "Algoritma mantığını öğrenmek istemesi"
      ],
      "description": "AT&T Bell laboratuvarlarında, Ken Thompson ve Dennis Ritchie tarafından UNIX İşletim Sistemi' ni geliştirebilmek amacıyla B dilinden türetilmiş yapısal bir programlama dilidir. Geliştirilme tarihi 1972 olmasına rağmen yayılıp yaygınlaşması Brian Kernighan ve Dennis M. Ritchie tarafından yayımlanan \"C Programlama Dili\" kitabından sonra hızlanmıştır. Günümüzde neredeyse tüm işletim sistemlerinin (Microsoft Windows, GNU/Linux, *BSD, Minix) yapımında %95' lere varan oranda kullanılmış, hâlen daha sistem, sürücü yazılımı, işletim sistemi modülleri ve hız gereken her yerde kullanılan oldukça yaygın ve sınırları belirsiz oldukça keskin bir dildir.[kaynak belirtilmeli]\" Keskinliği, programcıya sonsuz özgürlüğün yanında çok büyük hatalar yapabilme olanağı sağlamasıdır. Programlamanın gelişim süreciyle beraber programlamanın karmaşıklaşması, gereksinimlerin artması ile uygulama programlarında nesne yönelimliliğin ortaya çıkmasından sonra C programcıları büyük ölçüde nesne yönelimliliği destekleyen C++ diline geçmişlerdir.\nÜniversitelerde temel programlama dersinde genel olarak C programlama gösterilir.C Programlayı öğrendikten sonra diğer yazılım dillerine geçişiniz çok daha kolay ve hızlı olacaktır.\nC Programlama kursu sayesinde C programla dilinde sıfırdan master seviyeye geleceksiniz.Eğitim seti yeterli miktar teorik,bol egzersiz mantığı gözetilerek oluşturulmuştur.\nC programlama da en çok karşılaşılan sorun algoritmayı kuramama,istenilen kodu yazamama şeklindedir. C programlama eğitim seti; tam da bu sorunun üstüne gidilerek en basit C programından en ağır C programına kadar bol egzersiz yapılarak oluşturulmuştur.\nEğitimin en sonununda C programlama kullanarak yapabileceğiniz şeylere örnek olması açısından , ufkunuzu açmak için C Programlama kullanarak mayın tarlası projesini beraber kodluyoruz.",
      "target_audience": [
        "C programlamayı tam anlamıyla öğrenmek isteyenler",
        "Üniversitede C programlama dersi alanlar",
        "C Programlama mantığını öğrenmek isteyenler",
        "Algoritma mantığını anlamak isteyenler",
        "C programlamada Koşullu ifadeleri öğrenmek isteyenler",
        "C programlama da dizileri öğrenmek isteyenler",
        "C programlama da karakter dizilerini öğrenmek isteyenler",
        "C programlama da pointer yapısını öğrenmek isteyenler",
        "C programlama da struct yapısını öğrenmek isteyenler",
        "C programlama da recursive fonksiyonları öğrenmek isteyenler",
        "C programlamada dosya işlemlerini öğrenmek isteyenler"
      ]
    },
    {
      "title": "TypeScript с нуля - полный курс и паттерны проектирования",
      "url": "https://www.udemy.com/course/typescript-full/",
      "bio": "Полный курс по современному TypeScript в 2022 году и ООП паттернам проектирования для создания поддерживаемых приложений",
      "objectives": [
        "Основным и продвинутым типам TypeScript",
        "Работе с классами и интерфейсами",
        "Настройке проекта для работы TypeScript",
        "Написанию TypeGuards",
        "Generics",
        "Conditional Types и Mapped Types",
        "Использованию служебных типов",
        "Работе декораторов",
        "Устройству модульности в TypeScript",
        "Типизации библиотек",
        "Паттернам проектирования в TypeScript",
        "Писать расширяемый и поддерживаемый код на примере проекта"
      ],
      "course_content": {},
      "requirements": [
        "Знание JavaScript на начальном уровне"
      ],
      "description": "Обновлено до TypeScript 5.0\nTypeScript - это язык программирования, являющийся надмножеством JavaScript, компилирующимся в него. Благодаря системе типов и дополнительным возможностям, он позволяет писать большие масштабируемые приложения, которые просто поддерживать и развивать. Вместо отлова ошибок в runtime вы получаете быструю проверку вашего кода в compiletime и тесную интеграцию с IDE для быстрого написания кода. При этом вы можете переводить ваши приложения на TypeScript постепенно, улучшая типизацию и качество кода. Сейчас уже сложно встретить большое приложение для frontend или backend без использования TypeScript. Язык уже является стандартом разработки и может быть использован с любым framework.\nВ курсе мы разберём TypeScript с нуля, потому от вас будет требоваться только базовое знание JavaScript. В курсе мы не просто изучим все особенности TypeScript, но и попрактикуемся на упражнениях и написании финального проекта - расширяемую утилиту исполнения команд. При этом важной частью курса буду паттерны проектирования, где мы изучим поведенческие, порождающие и структурные паттерны объектно ориентированного программирования. И даже для тех, кто уже изучал TypeScript многие разделы будут полезны, так как захватывают продвинутые темы, с которыми вы возможно не так часто сталкивались ранее. В курсе мы детально изучим:\nОсновные типы\nTypes и interfaces\nСпециальные типы: Enums, Tuples, never и unknown\nРаботу с классами\nКомпозицию и наследование\nНастройку компилятора TypeScript для проекта\nИспользование Generic в функциях, классах и интерфейсах\nIndex Access Types\nConditional Types\nMapped Types\nTemplate Literal Types\nСпециальные служебные типы\nРаботу и написание декораторов\nReflect metadata\nМодульность TypeScript\nРаботу и типизацию сторонних библиотек\nПорождающие паттерны\nСтруктурные паттерны\nПоведенческие паттерны\nЛекции содержат как теоретическую часть, так и live-code, где мы вместе будем писать код, разбираю особенности работы TypeScript. В конце каждого модуля вас ожидает тест, который позволит укрепить ваши знания. Так же в этом курсе сделан особый акцент на упражнениях, которые позволят закрепить полученные знания на практике.\nВ результате курса вы получите знания и навыки для эффективного написания кода на TypeScript и проектирования архитектуры приложений на нём. Все примеры кода, которые вы увидите в курсе написаны с учётом реальной практики написания кода на TypeScript как на frontend, так и backend.",
      "target_audience": [
        "Начинающим разработчикам со знанием JavaScript",
        "Frontend или backend разработчикам, которые хотят внедрять TypeScript",
        "Тем кто знакомился с TypeScript, но хочет изучить более сложный темы или паттерны проектирования."
      ]
    },
    {
      "title": "C# 12 Programming con .NET 8",
      "url": "https://www.udemy.com/course/c70-bemporad/",
      "bio": "Impara a programmare in modo professionale in C# 12, con .NET 8",
      "objectives": [
        "Conoscere l'architettura generale di .NET 8",
        "Scrivere programmi C# usando la piattaforma .NET 8",
        "Conoscere ed utilizzare in modo professionale il paradigma object-oriented",
        "Conoscere ed utilizzare le basi ed una serie di argomenti avanzati del C#"
      ],
      "course_content": {},
      "requirements": [
        "Conoscenza dell'utilizzo base del terminale di un sistema operativo",
        "La conoscenza di base della programmazione in un qualunque linguaggio di programmazione è di aiuto, ma non indispensabile"
      ],
      "description": "IMPORTANTE: Il corso è stato aggiornato alla versione C# 12 / .NET 8, con l'aggiunta anche di ulteriori lezioni nella prima parte del corso.\nPerché dovresti imparare C#?\nDunque, per prima cosa, C# è uno dei linguaggi più utilizzati e anche più richiesti al mondo, Italia compresa, anche in aziende di medie e grandi dimensioni. TIOBE, uno dei più autorevoli indici online che si occupa della diffusione dei linguaggi di programmazione nel mondo, ha eletto C# come linguaggio dell'anno 2023.\nSecondo, e le due cose in fondo sono legate, C# è stato creato e viene mantenuto da Microsoft, anche se dal 2014 è divenuto open-source. Questa è una garanzia del fatto che C# venga sviluppato, e migliorato nel tempo. In effetti, dal 2002, anno in cui per la prima volta è stato introdotto nel mercato, C# ha avuto numerose incarnazioni, ed una evoluzione continua che lo ha sempre reso uno dei migliori e più completi linguaggi di programmazione disponibili per gli sviluppatori di software.\nInoltre, con C# potrai sviluppare moltissimi tipi di applicazione:\nVideogames, e applicazioni AR/VR (con Unity)\nMobile Apps per iOS/Android/Mac/Windows (con MAUI)\nWeb Apps (con ASP.NET, Razor, e Blazor)\nWindows Apps (con il .NET Framework)\nMicroservices, e altre applicazioni server-side su Mac/Linux/Win e su Cloud (con Azure, AWS o Google Cloud)\nQuesto corso è una guida molto dettagliata del linguaggio C# 11, con l'utilizzo di .NET 7. Contiene i fondamenti base del linguaggio e del paradigma object-oriented, ed anche una serie di argomenti più avanzati, come i generics, i delegate, gli eventi, ed i record. E' composto da una serie di lezioni teoriche, e da esercitazioni pratiche.\nOgni lezione ti avvicina in modo graduale, ma approfondito, alla conoscenza di questo fondamentale linguaggio di programmazione object-oriented.",
      "target_audience": [
        "Chiunque desidera imparare a sviluppare in C#, apprendendo allo stesso tempo tutte le tecniche della programmazione object-oriented"
      ]
    },
    {
      "title": "Python: Programação Orientada a Objetos com Python 3",
      "url": "https://www.udemy.com/course/programacao-orientada-a-objetos-com-python/",
      "bio": "Aprenda programação orientada a objetos com Python 3. São mais de 100 vídeo-aulas, muitos exercícios e projetos!!",
      "objectives": [
        "Aprender os conceitos que envolvem a programação orientada a objetos.",
        "Aplicar os conceitos de programação orientada a objetos com a linguagem Python.",
        "Desenvolver seus próprios programas utilizando orientação a objetos com a linguagem Python."
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Perguntas e respostas",
          "Site do curso",
          "Preparando o ambiente"
        ],
        "Conceitos básicos de POO": [
          "História da POO",
          "Exercício 1",
          "Vantagens da POO",
          "O que é um objeto?",
          "O que é uma classe?",
          "Exercício 2",
          "Membros ou propriedades",
          "Unified Modeling Language - UML",
          "Exercício 3",
          "Interface - Escondendo detalhes",
          "Interface pública",
          "Exercício 4",
          "Composição e Agregação",
          "Herança",
          "Sobreposição de métodos",
          "Abstração",
          "Herança Múltipla",
          "Exercício 5",
          "Herança x Composição"
        ],
        "POO com Python": [
          "Introdução a Linguagem Python",
          "Exercício 6",
          "Exercícios de codificação",
          "Número perfeito",
          "Tupla Par",
          "A mais longa substring em ordem alfabética",
          "Falando sobre objetos",
          "Exercício 7",
          "Criando classes",
          "Exercício 8",
          "Adicionando atributos",
          "Definindo métodos",
          "Exercício 9",
          "Módulos e pacotes",
          "Implementando uma fila de prioridades",
          "Docstrings",
          "Exercício 10",
          "Herança",
          "Herança novamente",
          "Herança Múltipla - Parte 1",
          "Herança Múltipla - Parte 2",
          "Exercício 11",
          "Method Resolution Order - MRO",
          "Classes mixin",
          "Polimorfismo",
          "Polimorfismo novamente",
          "Exercício 12",
          "Duck typing - Parte 1",
          "Duck typing - Parte 2 - LBYL e EAFP",
          "Sobrecarga de operadores",
          "Encapsulamento",
          "Exercício 13",
          "Atributos protegidos",
          "Definindo uma interface ou classe base abstrata",
          "Delegar acesso a atributos",
          "Economizando memória com muitas instâncias",
          "Exercício 14",
          "Diferença entre classmethod e staticmethod",
          "Definindo mais de um construtor em uma classe",
          "Criando uma instância sem chamar init",
          "Exercício 15",
          "Introdução a Exceções",
          "Lançando exceções",
          "Os efeitos de uma exceção",
          "Manipulando exceções",
          "A hierarquia de exceção",
          "Criando nossas próprias exceções",
          "Exercício 16",
          "DRY - Don't repeat yourself",
          "PEP 8",
          "Performance",
          "Exercício 17",
          "Estruturas de Dados built-in - Parte 1",
          "Estruturas de Dados built-in - Parte 2",
          "Estendendo tipos de dados built-in",
          "Função com número de parâmetros variável",
          "Exercício 18",
          "Serialização de objetos",
          "Iterador",
          "Geradores",
          "Geradores novamente",
          "Decorators",
          "Exercício Decorator",
          "Metaclasses",
          "Exercício 19",
          "Injeção de dependência",
          "Criando templates com cookiecutter"
        ],
        "Testes": [
          "Introdução ao unittest - Parte 1",
          "Introdução ao unittest - Parte 2",
          "Doctest",
          "TDD - Test Driven Development - Teoria",
          "TDD na prática",
          "Gerando logs com logging - Parte 1",
          "Gerando logs com logging - Parte 2",
          "Ferramenta Debugger",
          "Testes com pytest",
          "Testes com nose",
          "Coverage",
          "Exercício 20"
        ],
        "Design Patterns com Python": [
          "Introdução a Design Patterns - Parte 1",
          "Introdução a Design Patterns - Parte 2",
          "Princípios e conceitos de padrões de projeto",
          "Implementação do padrão Singleton",
          "Instanciação preguiçosa no padrão Singleton",
          "Padrão Singleton Monostate",
          "Singletons e metaclasses",
          "Exercício 21",
          "Exemplo prático Singleton - Banco de Dados",
          "Desvantagens do padrão Singleton",
          "Padrão Factory",
          "Padrão Simple Factory",
          "Padrão Factory Method"
        ],
        "Projeto SQLite": [
          "Criando a classe do banco",
          "Criando tabelas",
          "Inserindo clientes",
          "Buscando clientes",
          "Adicionando uma senha",
          "Função login",
          "SQLite Browser",
          "SQLAlchemy"
        ],
        "Projeto Aplicação Web com Bottle": [
          "Padrão MVC",
          "Introdução ao Bottle - Hello world",
          "Definindo rotas",
          "Templates",
          "Herança de templates e Bootstrap",
          "Melhorando o visual da aplicação",
          "Página 404",
          "Isolando o ambiente com virtualenv",
          "Git e GitHub",
          "Fazendo algumas modificações",
          "Deploy da aplicação",
          "Integrando com o banco de dados sqlite3",
          "Reorganizando o projeto",
          "Integrando SQLAlchemy com aplicação Bottle",
          "Verificar login e lista de usuários",
          "Verificando username",
          "Página 404 e favicon",
          "Utilizando sessões com redis",
          "Senha segura com bcrypt",
          "bcrypt novamente"
        ],
        "Projeto Jogo Snake com tkinter": [
          "Jogo Snake - Parte 1",
          "Jogo Snake - Parte 2",
          "Jogo Snake - Parte 3",
          "Jogo Snake - Parte 4",
          "Novidades e Melhorias"
        ],
        "Projeto Aplicação Web com Flask": [
          "Introdução ao Flask",
          "Novas aulas"
        ]
      },
      "requirements": [
        "É recomendável ter um conhecimento básico de Python."
      ],
      "description": "Atenção: ainda estão sendo adicionadas aulas a esse curso!\n\nÉ fundamental saber orientação a objetos para construir sistemas complexos. Com esse curso você aprenderá de fato orientação a objetos utilizando uma das linguagens mais populares: Python.\nSão mais de 17 horas em vídeo-aulas e mais de 115 vídeo-aulas!\n\nVocê poderá desfrutar das inúmeras vantagens que o paradigma orientado a objetos pode fornecer. Várias são as vantagens.\nA codificação é natural, mais próxima do mundo real,\nA manutenção do código fica muito mais simples,\nReutilização do código,\nConfiabilidade,\ne muito mais...\nOs instrutores Marcos Castro e Thomas William irão ministrar esse curso através de aulas dinâmicas e didáticas onde você aprenderá os conceitos de programação orientada a objetos (POO) e poderá aplicá-los utilizando a linguagem de programação Python.\nProgramar orientado a objetos pode ser bem complicado para iniciantes, é por isso que preparamos um excelente curso totalmente em vídeo-aulas onde você poderá assistir quantas vezes quiser e onde quiser.\nNo seu ritmo você irá aprender POO com Python e quaisquer dúvidas os instrutores estarão disponíveis para responder o mais rápido possível!\n\nO curso também aborda padrões de projeto (design patterns) com Python e também possui projetos onde você aplicará os conhecimentos adquiridos no curso.\nO que está esperando? Cadastre-se agora mesmo e aprenda definitivamente programação orientada a objetos com Python!",
      "target_audience": [
        "Todos que quiserem aprender programação orientada a objetos com Python."
      ]
    },
    {
      "title": "Iniciando com Ruby e Orientação a Objetos",
      "url": "https://www.udemy.com/course/poo-ruby/",
      "bio": "Aprenda de vez Orientação a Objetos com Ruby!",
      "objectives": [
        "Trabalhar com a linguagem Ruby",
        "Conhecer os conceitos de Programação Orientada a Objetos",
        "Aplicar Programação Orientada a Objetos no Ruby"
      ],
      "course_content": {
        "História, conceitos e instalação do Ruby": [
          "Introdução",
          "História / Características",
          "Instalação",
          "Interpretada vs Compilada",
          "REPL",
          "Olá Mundo!",
          "Exercício das aulas 01 a 06"
        ],
        "Ruby Básico": [
          "Tipos primitivos e Variáveis",
          "Entrada e Saída padrão",
          "Comentários",
          "Strings e Interpolação de variáveis",
          "Exercício das aulas 07 a 10",
          "Coerção",
          "Operadores Aritméticos",
          "Operadores Relacionais",
          "Exercício das aulas 11 a 13",
          "Operadores de Atribuição",
          "Estruturas Condicionais",
          "Operadores Lógicos",
          "Exercício das aulas 14 a 16",
          "Estruturas de repetição",
          "Vetores / Arrays",
          "Hashes",
          "Exercício das aulas 17 a 19",
          "Símbolos",
          "Iterador 'each'",
          "Operadores de Intervalo",
          "Repetições fixas com 'times'",
          "Exercício das aulas 20 a 23"
        ],
        "Programação Orientada a Objetos": [
          "O Paradigma OO",
          "Histórico",
          "Os pilares da OO",
          "Classes",
          "Encapsulamento",
          "Objeto",
          "Exercício das aulas 24 a 29",
          "Corrigindo o Exercício",
          "Definindo Classes",
          "Definindo Métodos (Ações)",
          "Definindo Atributos (Características)",
          "Métodos construtores",
          "Corrigindo o Exercício",
          "Criando um joguinho",
          "Herança entre Classes",
          "Method overriding",
          "Usando o \"super\"",
          "Exercício das aulas 37 a 39",
          "O \"self\"",
          "Métodos de Instância vs Métodos de Classe",
          "Constantes e Classes Constantes",
          "Exercício das aulas 40 a 42",
          "Módulos",
          "Mixins",
          "Polimorfismo vs Duck Typing",
          "Exercício das aulas 43 a 45",
          "Pilares da POO"
        ],
        "Extras": [
          "Reabrindo Classes",
          "Split",
          "Usando Gems",
          "Usando o Bundler",
          "Trabalhando com arquivos",
          "ARGV",
          "Melhorando nosso Jogo",
          "Executando comandos do SO",
          "ASCII Art",
          "Gems para terminal",
          "Projeto Final"
        ]
      },
      "requirements": [
        "O aluno deve ter noções de algoritmo."
      ],
      "description": "ATENÇÃO: ESSE CURSO TERÁ AULAS PUBLICADAS SEMANALMENTE ATÉ A SUA FINALIZAÇÃO!\nO curso visa mostrar aos alunos os primeiros passos com Ruby bem como conhecer e trabalhar com Programação Orientada a Objetos. O mesmo está dividido em 3 grandes módulos que facilitarão a explanação e o aprendizado por parte do aluno. Pretende-se ao final do curso permitir que o aluno conheça as bases do Ruby e da Orientação a Objetos aplicadas à linguagem em questão.",
      "target_audience": [
        "Estudantes de Sistemas de Informação",
        "Estudantes na área de Ti",
        "Desenvolvedores",
        "Interessados no assunto"
      ]
    },
    {
      "title": "Modern C# Kursu : .NET Dünyası İçin Sıfırdan Profesyonelliğe",
      "url": "https://www.udemy.com/course/c-sharp-programlama-kursu/",
      "bio": "Tamamı Kasım 2020'de çekilmiş en güncel içerikle sıfırdan başlayıp, sektörün gerçek ihtiyaçlarına uygun C# öğrenin.",
      "objectives": [
        "En doğru tekniklerle en baştan C# öğreneceksiniz.",
        "Her konuyu gerçek projelerde nasıl kullanacağınızı öğreneceksiniz.",
        "Java, Python, Go gibi dilleri çok kısa sürede öğrenecek altyapıya sahip olacaksınız.",
        "Kurumsal mimarileri öğreneceksiniz.",
        "Katmanlı mimarileri SOLID prensiplerle öğreneceksiniz.",
        "Testlerle ilgili konuda yeterliliğinizi öğreneceksiniz.",
        "Ödevlerle kendinizi yol haritasız hissetmeyeceksiniz."
      ],
      "course_content": {
        "Giriş ve Tanıtım": [
          "Giriş ve Tanıtım",
          "Kurulumlar"
        ],
        "Değişkenleri ve Veri Tiplerini Anlamak": [
          "Değişkenleri ve Veri Tiplerini Anlamak",
          "Bölüm Testi",
          "Bölüm Ödevi"
        ],
        "Mantıksal Yapıları Gerçek Bir Proje Üzerinden Anlamak": [
          "Mantıksal Yapıları Gerçek Bir proje Üzerinden Anlamak",
          "Bölüm Ödevi 1",
          "Bölüm Ödevi 2"
        ],
        "Dizileri Gerçek Bir Proje Üzerinden Öğrenmek": [
          "Dizileri Gerçek Bir Proje Üzerinden Öğrenmek",
          "Bölüm Ödevi"
        ],
        "Döngüleri Gerçek Hayat Projesi Üzerinden Anlamak": [
          "Döngüleri Gerçek Hayat Projesi Üzerinden Anlamak",
          "Bölüm Ödevi 1"
        ],
        "Proje : E-Ticaret Sistemi Simulasyonu": [
          "Projemizi Kurgulayalım",
          "E-Ticaret Sistemini Simule Edelim",
          "Şartlı Durumların Yönetimi",
          "Bölüm Ödevi"
        ],
        "Proje & Listelerle Çalışmaya Başlamak": [
          "Listelerle Çalışmaya Başlamak",
          "Proje - Listelerle Çalışmak",
          "Bölüm Ödevi"
        ],
        "Proje & Class Yapılarını Gerçek Hayat Sistemleri İçin Anlamak": [
          "Class Yapılarını Gerçek Hayat Sistemleri İçin Anlamak",
          "Proje - Class Yapısını Projede Kullanalım",
          "Bölüm Ödevi"
        ],
        "Proje & Metotlar": [
          "Class Metodlarıyla Çalışmak",
          "Metodları Derinlemesine Anlamak",
          "Proje - Classlarla Çalışmak",
          "Bölüm Ödevi"
        ],
        "Constructor Yapısını Kafamızda Netleştirelim": [
          "Constructor Yapısını Kafamızda Netleştirelim"
        ]
      },
      "requirements": [
        "Bu kursun herhangi bir ön koşulu yoktur, en baştan en ileri konulara doğru ilerlenmiştir."
      ],
      "description": "PROGRAMLAMA BİLMEDİĞİNİZİ DÜŞÜNEREK SIFIRDAN BAŞLADIK. KURSUN TAMAMINI KASIM 2020'de ÇEKİLMİŞ, SIFIRDAN EN GÜNCEL İÇERİKLE DONATTIK.\n\"Gerçek Hayattaki Gibi Öğret\" prensibiyle, 300+ kuruma eğitim vermiş veya danışmanlık yapmış bir eğitmen olarak sizi gerçek hayata hazırlıyorum. Aynı konuyu sürekli tekrar etmenize rağmen bir türlü öğrenemiyorsanız, farklı kaynakların içinde boğuluyorsanız, şu an kendinizi güvende hissedin.\n*****10'larca test, ödev ve sadece bu kursu alanlara yönelik canlı webinarlarla yol haritasız kalmayacaksınız.*****\nProgramlamaya giriş, Veri tiplerinden,döngülere, kurumsal yazılım mimarilerinden, tasarım desenlerine kadar geniş bir içerikle karşılaşacaksınız. Sektörde kurumsal organizasyonların kullandığı backend yazma tekniklerini profesyonel bir akış açısıyla öğreneceksiniz. Hayat kurtarıcı Best Practice'lerle dolu bir içerikle karşılaşacaksınız.\nSürdürebilir yazılımlar için SOLID bir mimari. Backend yazma teknikleri kursun ileri seviye bölümlerini oluşturuyor.\nEğitimin en büyük özelliği, best practice odaklı olması ve syntax bazlı programlama yerine Ne-Ne Zaman-Nerede-Niçin sorularına cevap vermesidir. Örneğin, bir çok programcı \"Interface\" syntax'ını bilir fakat, onu gerçek hayatta kullanmakta zorlanır. Bu eğitim sizi kendinden emin bir programcı yapacak.\nYol haritası şeklinde hazırlanmış içerikte, kendinizi nerede eksik istiyorsanız, o kısımdan başlayabileceksiniz.",
      "target_audience": [
        "C# bilmeyenler.",
        "C# bilenler ama etkili teknikler öğrenmek isteyenler.",
        "Katmanlı mimarileri SOLID prensiplerle öğrenmek isteyenler.",
        "Tasarım desenlerini profesyonel kullanmak isteyenler.",
        "Kurumsal mimarileri öğrenmek isteyenler.",
        "Etkili araçları kullanmak ve öğrenmek isteyenler."
      ]
    },
    {
      "title": "Java e Orientação a Objetos",
      "url": "https://www.udemy.com/course/java-e-orientacao-a-objetos-e/",
      "bio": "Aprenda Orientação a Objetos utilizando uma das linguagens mais usadas do Mundo utilizando exemplos fáceis de entender.",
      "objectives": [
        "Ao final deste curso o aluno terá toda a base para escolher qual tecnologia Java ele vai querer aprender.",
        "Estará pronto para resolver qualquer problema com a ajuda do paradigma Orientada a Objetos.",
        "Desenvolver um código limpo e coeso.",
        "Conhecimento da sintaxe do Java.",
        "Desenvolver soluções utilizando o Java"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "O que é Java ?",
          "Porque as grandes empresas preferem desenvolver na plataforma Java?",
          "Download do JDK e configurações"
        ],
        "Lógica, variáveis primitivas e controle de fluxo": [
          "Compilando e executando o seu primeiro programa",
          "Estrutura do código Java - Parte 1",
          "Estrutura do código Java - Parte 2",
          "Estrutura do código Java - Parte 3",
          "Correção do Exercício",
          "Estrutura do código Java - Parte 4",
          "Estrutura Condicional",
          "Laços de Repetição"
        ],
        "Orientação a Objetos": [
          "Primeiros conceitos de classes e objetos",
          "Classes e Objetos - Parte 1",
          "Classes e Objetos - Parte 2",
          "Métodos Sem Retorno - Parte 1",
          "Métodos Sem Retorno - Parte 2",
          "Métodos Sem Retorno - Parte 3",
          "Métodos Com Retorno",
          "Exercícios - Orientações",
          "Correção Exercício 1",
          "Correção Exercício 2",
          "Correção Exercício 3 - Parte 1",
          "Correção Exercício 3 - Parte 2",
          "Relacionamento entre classes"
        ],
        "Arrays": [
          "Criando uma array para guardar valores do tipo primitivos.",
          "Criando uma array para guardar referências",
          "Array - Método length e enhanced-for",
          "Array - Acessando índices inexistentes",
          "Exercício",
          "Correção Exercício - Parte 1",
          "Correção Exercício - Parte 2",
          "O argumento do método main()"
        ],
        "Modicadores de acesso e atributos de classe": [
          "Controlar o acesso aos seus atributos e métodos",
          "Métodos de acesso a atributos do tipo getters e setters",
          "getters e setters - Fixando conhecimento",
          "Construtores",
          "Sobrecarga (Overloading) de métodos",
          "Sobrecarga (Overloading) de construtores",
          "Atributos e métodos estáticos",
          "Correção Exercício 1",
          "Correção Exercício 2"
        ],
        "IDE Eclipse": [
          "Download IDE Eclipse",
          "Criando meu primeiro projeto e classes na IDE Eclipse",
          "Continuação"
        ],
        "Herança, Reescrita e Polimorfismo.": [
          "Herança",
          "Reescrita de métodos",
          "Reforçando sobre reescrita de métodos.",
          "Polimorfismo",
          "Reforçando o polimorfismo",
          "Orientações para os Exercícios",
          "Correção Exercício 1",
          "Correção Exercício 2 - Parte 1",
          "Correção Exercício 2 - Parte 2",
          "Correção Exercício 3"
        ],
        "Classes Abstratas": [
          "Classes Abstratas",
          "Métodos abstratos",
          "Reforçando classes e métodos abstratos"
        ],
        "Interfaces": [
          "Interfaces - Parte 1",
          "Interfaces - Parte 2",
          "Reforçando Interfaces"
        ],
        "Exceções - Exceptions": [
          "O que é uma exceção?",
          "Controlando e tratando erros de maneira elegante.",
          "Controlando e tratando erros do sistema do Banco",
          "Criando suas próprias classes para tratar exceções.",
          "Cláusula Finally",
          "Exercício",
          "Correção Exercício"
        ]
      },
      "requirements": [
        "Lógica de programação."
      ],
      "description": "Este curso de Java e Orientação a Objeto e possuí 92 aulas para que você possa a aprender o básico desta plataforma. Java não é apenas uma linguagem de programação mas sim uma plataforma de desenvolvimento onde você pode construir sistemas Desktop, Web e Mobile. Ao término deste curso você conhecerá os princípios básicos da Orientação a Objetos em Java e aí escolherá um ambiente de desenvolvimento que a plataforma Java disponibiliza. Aí sim você estará pronto para desenvolver qualquer sistema na plataforma Java. Este curso é para você que está começando com programação e ainda não escolheu uma linguagem . É para você que ama TI mas ainda não decidiu qual área seguir. É para você que tem experiencia em outras linguagens e deseja migrar ou aprender Java. É para você que está tentando pela última vez aprender Java e não conseguiu. Muitos cursos desenvolvem sistemas junto com o curso e isso não é bom. Isso porque ficamos muito mais preocupados em ver o sistema funcionando do que o conceito que estamos aprendendo aí quando você se depara com um problema desenvolvendo um outro sistema você não consegue resolver. Acredite em mim, é só avaliar os melhores cursos de Java no mercado, eles não usam este tipo de método. Fiz todo meu treinamento Java em uma das melhores do Brasil que me ajudou muito no meu conhecimento.",
      "target_audience": [
        "Alunos indecisos que estão na área de TI e ainda não sabem qual área seguir.",
        "Alunos que já possuem um conhecimento em lógica de programação.",
        "Profissionais de TI que já trabalham no desenvolvimento de sistemas utilizando o paradigma procedural e queiram migrar para o paradigma Orientada a Objetos, a linguagem Java é uma ótima opção.",
        "Você que é amante da tecnologia e quer embarcar numa aventura nova, Java é a solução.",
        "Este curso não se propõe a ensinar Java e Orientação a Objetos de maneira rápida e milagrosa já que estamos falando de uma linguagem que é a mais utilizada no Mundo.",
        "Mas se você quer aprender de uma maneira correta, faça este curso.",
        "Alunos que já tenham um conhecimento Java podem também reforçar e partir para um nível mais elevado já que o curso terá estes momentos."
      ]
    },
    {
      "title": "【한글자막】 Python 부트캠프 : 100개의 프로젝트로 Python 개발 완전 정복",
      "url": "https://www.udemy.com/course/best-100-days-python/",
      "bio": "전세계 130만명이 넘게 수강한 Python 수업! 데이터사이언스, 웹 개발, 크롤링, GUI 프로그래밍, 게임 등 Python을 통해 개발할 수 있는 모든 것을 다뤄보는 All-in-one 코스",
      "objectives": [
        "Python 기초 문법",
        "OOP(객체 지향 프로그래밍), Python 심화 문법(동적 타이핑, 리스트 컴프리헨션 등)",
        "데이터사이언스를 위한 Python 활용 및 핵심 라이브러리 사용법(Numpy, Pandas, Matplotlib, Seaborn, Plotly, Scikit-Learn 등)",
        "Python을 활용한 웹 개발(HTML/CSS 기초, Bootstrap, Flask, Jinja templating engine, SQLite, SQLAlchemy, PostgreSQL, REST API 등)",
        "GUI 프로그래밍 기초 및 실습, 데스크탑 앱 개발(Turtle, Tkinter, Pomodoro GUI 애플리케이션 등)",
        "Python을 활용한 데이터 크롤링(BeautifulSoup, Selenium 등)",
        "Python을 활용한 업무 자동화(데이터 수집, 크롤링, 이메일 자동 발송 등)'",
        "Python 개발 직무 포트폴리오 구축을 도울 100개의 실전 프로젝트",
        "기타, Python을 활용해 개발할 수 있는 모든 것"
      ],
      "course_content": {
        "1일차 – 초급 – 파이썬 변수를 사용한 데이터 관리": [
          "이 강의에서 학습할 내용들입니다",
          "유데미 러닝크루 스터디 안내",
          "여기에서 시작합니다",
          "강의를 위한 다운로드 가능한 리소스와 팁들",
          "1일차 목표 : 오늘 작업에 대하여",
          "(필독!) 강의 수강을 위해 PyCharm 다운로드 및 셋업하기",
          "파이썬에서 콘솔에 출력하는 방법",
          "출력 실습",
          "문자열 처리와 지능형 코드",
          "디버깅 실습",
          "파이썬의 입력 함수",
          "파이썬 변수",
          "변수 실습",
          "변수 이름 짓기",
          "변수 이름 짓기 퀴즈",
          "1일차 프로젝트 : 밴드명 생성기",
          "축하합니다! 잘 하셨어요!"
        ],
        "2일차 – 초급 – 데이터 형식 이해 및 문자열 조작 방법": [
          "2일차 목표 : 오늘 작업에 대하여",
          "파이썬의 기본 데이터 형식",
          "데이터 형식 퀴즈",
          "형식 오류와 형식 확인, 그리고 형 변환",
          "파이썬의 수학 연산",
          "BMI 계산기",
          "파이썬의 숫자 처리 및 F-String",
          "수식 연산 퀴즈",
          "2일차 프로젝트 : 팁 계산기",
          "벌써 상위 50% 안에 들어가셨네요!"
        ],
        "3일차 – 초급 – 흐름 제어와 논리 연산자": [
          "3일차 목표: 오늘 작업할 것",
          "App Brewery 월간 뉴스레터 구독하기",
          "if / else 및 조건 연산자를 통한 흐름 제어",
          "Modulo 소개",
          "중첩 if 문과 elif 문",
          "해설이 포함된 BMI 계산기",
          "다중 연속 if 문",
          "피자 주문 실습",
          "논리 연산자",
          "논리 연산자 퀴즈",
          "3일차 프로젝트: 보물섬",
          "완성된 프로젝트 공유 및 소개 시간"
        ],
        "4일차 – 초급 – 무작위화 및 파이썬 리스트": [
          "4일차 목표: 오늘차 마지막에 작업할 것",
          "Random 모듈",
          "오프셋을 이해하고 리스트에 항목 추가하기",
          "금융가 룰렛 - 누가 계산해야 할까요?",
          "IndexError 및 중첩 리스트 활용하기",
          "리스트 및 IndexError 퀴즈",
          "4일차 프로젝트: 가위바위보",
          "프로그래밍은 헬스장에 가는 것과 같다"
        ],
        "5일차 – 초급 – 파이썬 반복문": [
          "5일차 목표: 오늘 수업에서 작업할 것",
          "파이썬 리스트로 for 반복문 사용하기",
          "높은 점수",
          "for 반복문과 range() 함수",
          "FizzBuzz",
          "5일차 프로젝트: 비밀번호 생성기 만들기",
          "노력과 인내는 항상 타고난 재능을 능가한다"
        ],
        "6일차 – 초급 – 파이썬 함수와 카렐": [
          "6일차 목표: 오늘 수업에서 작업할 것",
          "파이썬 함수 정의 및 호출",
          "반복문으로 장애물 넘기",
          "파이썬에서의 들여쓰기",
          "코드 들여쓰기 퀴즈",
          "while 반복문",
          "while 반복문을 사용한 장애물 넘기",
          "다양한 높이의 장애물 넘기",
          "최종 프로젝트: 미로 탈출",
          "왜 이렇게 어려운 거야?! 내가 정말 할 수 있을까?"
        ],
        "7일차 – 초급 – 행맨": [
          "7일차 목표: 오늘 수업에서 작업할 것",
          "순서도로 복잡한 문제를 단순하게 만들기",
          "도전과제 1- 무작위 단어를 고르고 정답 확인하기",
          "도전과제 2 - 빈칸을 맞춘 글자로 바꾸기",
          "도전과제 3 - 플레이어가 이겼는지 확인하기",
          "도전과제 4 - 플레이어의 남은 목숨 세기",
          "도전과제 5 - 유저 경험 개선시키기",
          "매일 연습하는 것의 장점"
        ],
        "8일차 – 초급 – 함수의 매개변수와 카이사르 암호": [
          "8일차 목표: 오늘 작업할 것",
          "입력 값이 있는 함수",
          "삶을 주(week)로 표현해보기",
          "위치 인자 vs 키워드 인자",
          "사랑 계산기",
          "카이사르 암호 1부 - 암호화",
          "카이사르 암호 2부 - 복호화",
          "카이사르 암호 3부 - 코드 재구성",
          "초심을 잃지 않는 법"
        ],
        "9일차 – 초급 – 딕셔너리, 네스팅 및 시크릿 옥션": [
          "9일차 목표: 오늘 작업할 것",
          "파이썬 딕셔너리: 깊게 파보기",
          "시험 점수 매기기 프로그램",
          "리스트와 딕셔너리 중첩하기",
          "파이썬 딕셔너리 퀴즈",
          "비밀 경매 프로그램과 순서도",
          "동기와 책임"
        ],
        "10일차 – 초급 – 출력과 함수": [
          "10일차 목표: 오늘 수업에서 작업할 것",
          "출력과 함수",
          "다양한 리턴 값",
          "윤년 실습",
          "Docstrings",
          "함수 퀴즈",
          "계산기 프로젝트",
          "숙면을 취하는 방법"
        ]
      },
      "requirements": [
        "개발 학습을 전혀 해본 적이 없는 완전 입문자도 수강이 가능합니다",
        "인터넷에 접속할 수 있는 PC가 필요합니다",
        "유료 소프트웨어를 구매하지 않아도 괜찮습니다. Pycharm, Jupyter notebook, Google Colab 등 무료 에디터를 사용해 수업을 진행합니다",
        "모든 에디터 설치 및 설정 방법을 단계별로 자세히 설명해 드립니다."
      ],
      "description": "뭐부터 시작해야 할지 모르겠는 개발 입문자를 위해, Python을 활용해 개발할 수 있는 모든 것을 다룬 압도적인 커리큘럼\n100개의 실전 프로젝트와 퀴즈, 템플릿 코드를 통해 쉽고 재미있게 Python 개발 완전 정복\n전 세계 285만명의 넘는 학생들이 선택한 Angela Yu 강사님의 디테일하고 이해하기 쉬운 Python 강의\n\n\n—\n\n\n[Python 개발을 배우려는 분들을 위한 최고의 강의]\nPython을 통해 개발에 입문하려는 분, Python을 활용해 좀 더 심화된 개발을 하고 싶은 중급 개발자, 타 영역 개발 실무를 하다가 Python 개발 분야로 영역을 확장하고 싶은 분들에게 이 강의는 최고의 대안입니다.\n\n\n웹 개발, 데이터사이언스, 웹 크롤링, GUI 프로그래밍, 기타 Python 심화 활용을 위해 100일 동안, 하루에 한 시간, 하나의 프로젝트 학습이면 충분합니다! 이 강의를 통해 여러분은 Python을 마스터하기 위한 모든 것을 배워가실 수 있습니다.\n\n\n\n\n[압도적인 내용, 압도적인 분량, 압도적인 커리큘럼]\nPython은 다양한 개발 분야에 범용적으로 활용될 수 있습니다. 데이터사이언스, 웹 개발, GUI 프로그래밍, 데스크탑 애플리케이션 등 다양한 영역에서 활용됩니다.\n\n\n이 강의는 그 모든 것을 담고 있습니다. 그것도 겉핥기 식의 입문 강의가 아니라, 각 영역에 대한 Angela Yu 강사님의 특별한 강의 노하우가 담긴 디테일하고 자세한 설명으로 60시간 강의가 알차게 구성되어 있습니다.\n\n\n방대한 내용을 자랑하는 이 코스에는 다음과 같은 수많은 프로그래밍 도구와 기술을 다루는 방법이 포함되어 있습니다.\n\n\nPython 기초/심화 문법\nPython 스크립팅 및 자동화\n웹 크롤링(BeautifulSoup, Selenium, Request 모듈)\n데이터사이언스(Pandas, Numpy, Matplotlib, Plotly, Scikit-Learn, Seaborn)\nGUI 프로그래밍 및 데스크탑 앱 개발(Turlte, Tkinter, GUI 게임 개발)\n웹 개발 - 프론트엔드(HTML, CSS, Bootstrab)\n웹 개발 - Flask를 활용한 백엔드 개발(Flask, WTForms, REST API, DB, SQL, SQLite, PostgreSQL, 웹 디자인, 배포)\nCLI 프로그래밍(Bash Command Line)\nGit/Github 기초 문법 및 활용\n이 외에도 더 적기 힘들 정도로 많아요!\n\n\n\n\n[Python 완벽 마스터를 위한 100개의 프로젝트]\n본 강의는 그냥 지식을 단순 전달하는 여타 강의와 달리, 크고 작은 프로젝트를 통해 재미있고 실제적으로 Python 프로그래밍을 학습해갑니다.\n\n\n프로젝트는 아래 내용들을 포함하는 100개의 크고 작은 과제들로 구성되어 있습니다.\n\n\n블랙잭 게임, 뱀 게임, 퐁 게임\n틴더 자동 스와이핑 봇\n링크드인 자동 구직 지원 앱\n생일 축하 이메일/문자 메시지 자동 전송\n블로그 웹사이트 구축\n자신만의 공용 API 구축\n구글 트렌드를 활용한 데이터 사이언스\n레고 데이터 세트 분석\n구글 앱 스토어 분석\n기타 다양한 실습 프로젝트\n\n\n완벽한 이론 강의와 100개의 프로젝트를 통해 여러분은 Python을 이용해 물 흐르듯 유려한 프로그래밍을 할 수 있게 될 것입니다. 현직 Python 개발자 및 전문가 수준으로 성장할 수 있습니다.\n\n\n\n\n[285만 수강생의 개발 학습을 도운 Angela Yu 강사님의 한 마디]\n한국 수강생 여러분 안녕하세요? [Python 부트캠프 : 100개의 프로젝트로 Python 개발 완전 정복] 강의에 잘 오셨습니다!\n\n\n이 강의는 여러분이 Python을 배우는 데 꼭 필요한 유일한 코스라고 자부합니다. 이 코스는 Udemy 역사상 수강생으로부터 가장 높은 점수를 받은 코스입니다. 만점인 별 다섯 개 평가가 100,000개가 넘고, 평균 별점은 4.8에 이릅니다.\n\n\n이 강의는 분명 여러분의 마음에 쏙 들 겁니다. 확신합니다. 그래서 만약 마음에 들지 않으신 분을 위해 30일 내에는 전액 환불을 약속 드립니다! 그러니 아무 걱정 마시고 지금 바로 구매하셔서 이 모든 것을 누리세요!\n\n\n강의를 들으시고 강의와 관련하여 궁금하신 점은 Q&A 게시판에 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n\n\n자, 무엇을 망설이시나요? 지금 바로 \"수강\" 버튼을 클릭하셔서 세계 최고의 개발자 코스에 참여하세요!\n강의에서 만나요\n-Angela Yu",
      "target_audience": [
        "프로젝트를 직접 만들어보면서 재미있게 개발에 입문하고 싶은 분",
        "웹 개발, 데이터사이언스, GUI 프로그래밍 등에 Python을 더 실제적으로 활용해보고 싶은 사람 누구나",
        "Python 개발자로 커리어를 변경하고 싶은 타 영역 개발자 누구나",
        "기타, Python 언어를 학습하고, 다양한 활용 방안에 대해 제대로 알아가고 싶은 사람 누구나"
      ]
    },
    {
      "title": "Spring Boot 2025 REST API's do 0 à AWS e GCP c Java e Docker",
      "url": "https://www.udemy.com/course/restful-apis-do-0-a-nuvem-com-springboot-e-docker/",
      "bio": "Aprenda Spring Boot framework Swagger Docker Kubernetes K8s API RESTful JWT JUnit 5 Mockito React JS do 0 à AWS e GCP e+",
      "objectives": [
        "10% Teoria e 90% Prática",
        "A desenvolver uma API RESTFul do 0 absoluto",
        "Criar uma API RESTful completa com Spring Boot, aplicando boas práticas clean code e design patterns",
        "Implementar autenticação e segurança avançadas com JWT e Spring Security",
        "Aprender a usar o Postman para testar APIs RESTful, explorando parâmetros, verbos HTTP, autenticação, paginação, versionamento e headers",
        "Padrões de projetos como DTO, Builder, Fluent Interface, Factory, Strategy dentre outros aplicados na prática",
        "Fazer upload e download de arquivos de arquivos na sua API",
        "Exportação e importação de dados em Excel e CSV",
        "Geração de relatórios profissionais com JasperReports e Apache POI",
        "Envio de e-mails com Spring Mail e Gmail",
        "Documentar uma API com o Swagger (Open API)",
        "Aplicar testes unitários com JUnit 5 e Mockito",
        "Aplicar testes de integração com JUnit 5, Mockito, REST Assured e TestContainers",
        "Conexão com o Banco de Dados MySQL com Spring Data JPA e Hibernate",
        "Versionamento do banco de dados com migrations via Flyway",
        "Gerenciar logs no Spring Boot para monitoramento e debug",
        "Entender os fundamentos do REST, incluindo requests, responses e status codes HTTP",
        "Explorar conceitos avançados do REST, como modelo de maturidade RESTful, Content Negotiation e HATEOAS com HAL",
        "Os principais Verbos/Métodos do REST(GET, POST, PUT, PATCH, DELETE e OPTIONS)",
        "Como usar parâmetros via query, path, header e body",
        "Modelo de Maturidade de Richardson",
        "Diferenças entre REST e RESTful",
        "Versionamento de APIs para garantir compatibilidade entre versões",
        "Implementar paginação de dados e buscas otimizadas, facilitando o consumo da API",
        "Contêinerizar a API com Docker e Docker Compose",
        "Deploy completo da API na AWS utilizando Amazon ECS, Amazon RDS, Amazon ECR e IAM",
        "Deploy completo da API na GCP utilizando Google Cloud Run, Google Cloud SQL, GKE e Artifact Registry",
        "Continuous Deployment na AWS com GitHub Actions, Docker, Amazon ECR e Amazon ECS",
        "Continuous Deployment na GCP com GitHub Actions, Docker e Google Kubernetes Engine (GKE)",
        "EXTRA - Orquestração de contêineres com Docker e Docker Compose",
        "EXTRA - [Minicurso de React JS] Como Consumir a API com ReactJS, criando uma interface moderna e responsiva",
        "EXTRA - Como Integrar API's RESTful à API do ChatGPT, explorando inteligência artificial",
        "EXTRA - [Minicurso de Kubernetes - K8s] conceitos essenciais para deploys escaláveis"
      ],
      "course_content": {
        "Apresentação": [
          "0101 Apresentação",
          "0102 Repositórios do Curso no Github"
        ],
        "Fundamentos Teóricos Do REST": [
          "0201 Apresentação Da Seção Fundamentos Teóricos Do REST",
          "0202 O Que São Webservices",
          "0203 SOAP x REST",
          "0204 O Que é REST",
          "0205 Entendendo Request e Response",
          "0206 Tipos De Parâmetros",
          "0207 HTTP Status Codes",
          "0208 Os Verbos HTTP E O REST",
          "0209 Os Verbos HTTP Menos Conhecidos",
          "0210 Níveis De Maturidade Do REST",
          "0211 HATEOAS",
          "0212 Documentação Swagger",
          "0213 Autenticação",
          "0214 Versionamento",
          "0215 Indo Além Do RESTFul",
          "0216 Boas Práticas",
          "0217 Teste Seus Conhecimentos sobre RESTful API's com 9 Perguntas de Múltipla Escolha"
        ],
        "Tudo o que Você Precisa Saber Antes de Começar a Codificar": [
          "0301 Apresentação da Seção - O que Você Precisa Saber Antes de Começar a Codar",
          "0302 Como Preparar seu Ambiente de Desenvolvimento: Ferramentas e Recomendações",
          "0303 Como Acessar o Repositório do Curso no Github?",
          "0304 Como Consultar o Código das Aulas?"
        ],
        "Primeiros Passos em Spring Boot 3.4.1 com Java 21": [
          "0401 Apresentação da Seção - Primeiros Passos em Spring Boot 3.4.1 com Java 21",
          "0402 O que é o Spring Framework?",
          "0403 O que é o Spring Boot?",
          "0404 Acessando a Documentação do Spring Boot",
          "0405 Criando o Repositório do Projeto no Github",
          "0406 Criando o Nosso Projeto no Spring Initializr",
          "0407 Entendendo o Maven e o pom.xml",
          "0408 Criando o Primeiro Endpoint REST",
          "0409 Entendendo o .gitignore",
          "0410 Enviando o Nosso Código Para o Github"
        ],
        "Entendendo Path Params e o Tratamento de Exceptions no Spring Boot": [
          "0501 Apresentação da Seção - Entendendo Path Params e o Tratamento de Exceptions",
          "0502 Entendendo as Annotations @RestController, @RequestMapping e @PathVariable",
          "0503 Definindo a Lógica da nossa API RESTful",
          "0504 Definindo os Métodos de Validação e Executando a Aplicação",
          "0505 Tratand Exceções com @ControllerAdvice, @ResponseStatus e @ExceptionHandler",
          "0506 [DESAFIO] Implemente as Demais Operações Matemáticas",
          "0507 [SOLUÇÃO] Implementando as Demais Operações Matemáticas",
          "0508 [DESAFIO] Refatore o Código da Aplicação Separando os Conceitos",
          "0509 [SOLUÇÃO] Refatorando o Código da Aplicação Separando os Conceitos",
          "0510 Como um DEV Proativo Soluciona suas Dúvidas no StackOverFlow",
          "0511 Como um DEV Proativo Soluciona suas Dúvidas no Google",
          "0512 Como um DEV Proativo Soluciona suas Dúvidas no ChatGPT"
        ],
        "Como usar os Verbos HTTP no Spring Boot": [
          "0601 Apresentação da Seção - Como usar os Verbos HTTP no Spring Boot",
          "0602 Injeção de Dependências com @Service e @Autowired",
          "0603 Retornando Listas de Objetos em JSON",
          "0604 O Postman e os Verbos HTTP POST, PUT e DELETE"
        ],
        "Spring Data JPA e Integração da API ao MySQL": [
          "0701 Apresentação da Seção - Integrando a nossa API ao MySQL",
          "0702 Spring Data JPA - Simplificando o Acesso a Dados em Apps Spring Framework",
          "0703 Criando a Base de Dados e Definindo as Propriedades de Conexão",
          "0704 Implementando a Entidade Person e o Repositório",
          "0705 Substituindo os Mocks do Service pelo Acesso ao Repositório",
          "0706 Executando a Aplicação e Testando os Endpoints",
          "0707 Refactoring do Controller de Pessoas"
        ],
        "Trabalhando com Logs no Spring Boot": [
          "0801 Apresentação da Seção - Trabalhando com Logs no Spring Boot",
          "0802 O que são Logs e Qual sua Importância",
          "0803 A Ferramenta de Log Padrão do Spring Boot",
          "0804 Como Configurar Logs em um Pacote Específico",
          "0805 Mudando o Nível de Log Globalmente",
          "0806 Simulação de Erro e Investigação com Logs"
        ],
        "O Padrão de Projetos DTO (Data Transfer Object)": [
          "0901 Apresentação da Seção - O Padrão de Projetos DTO (Data Transfer Object)",
          "0902 O Padrão de Projetos DTO (Data Transfer Object)",
          "0903 O que é e por que usar o Dozer",
          "0904 Implementando o Padrão de Projetos DTO",
          "0905 Adicionando os Testes do Mapper de Entidate e DTO",
          "0906 Ajustando o Service e o Controller"
        ],
        "Versionamento de API's": [
          "1001 Apresentação da Seção - Versionamento de API's",
          "1002 Versionamento de APIs",
          "1003 Criando um Mapper Customizado",
          "1004 Testando as Diferentes Versões do Endpoint"
        ]
      },
      "requirements": [
        "Noções básicas de Orientação a Objetos",
        "Conhecimentos básicos de SQL e qualquer banco de dados relacional",
        "Conhecimentos básicos de Java",
        "Noções básicas de Request e Response do HTTP"
      ],
      "description": "[14/03/2025] Todo o conteúdo prático do curso foi regravado e reestruturado, foram adicionados novos recursos, tecnologias e funcionalidades.\n\n\nSpring Boot 2025: Do Zero à Amazon AWS e Google Cloud com Java, Docker e Kubernetes\n\n\nSe você quer aprender Spring Boot de verdade, desenvolvendo aplicações modernas, seguras e escaláveis, este curso é para você. Aqui, você vai construir um projeto completo e bem estruturado, explorando todos os recursos essenciais do Spring Boot enquanto se prepara para levar suas aplicações à nuvem com AWS e GCP.\nO foco vai muito além de criar uma API: você sairá dominado o Spring Boot, compreendendo suas funcionalidades e escrevendo código limpo, eficiente e pronto para produção.\n\n\nDomine Spring Boot na prática\n\n\nDesde os primeiros passos até os recursos mais avançados, você aprenderá a desenvolver aplicações robustas com injeção de dependências, principais annotations, criação de controllers, manipulação de requisições e respostas, tratamento de exceções e muito mais.\nAlém de construir um sistema bem estruturado, você verá como integrar sua aplicação com um banco de dados MySQL, utilizando Spring Data JPA, Hibernate e Flyway para um gerenciamento seguro e profissional. Também aplicará padrões de design como DTO, Builder, Factory e Strategy, garantindo um código organizado e fácil de manter.\n\n\nCódigo seguro, testado e bem documentado\n\n\nPara garantir que sua aplicação funcione perfeitamente, você aprenderá testes unitários e de integração com JUnit 5, Mockito, REST Assured e TestContainers, validando cada funcionalidade com confiança.\nA segurança também será uma prioridade. Você implementará autenticação com Spring Security e JWT, protegendo seus endpoints e garantindo controle de acesso eficiente. Além disso, trabalharemos com CORS, Content Negotiation e HATEOAS, tornando sua API mais flexível e aderente aos padrões do mercado.\nE para que sua aplicação seja fácil de entender e integrar, configuraremos a documentação automatizada com Swagger (OpenAPI).\n\n\nDesenvolva, conteinerize e implante na nuvem\n\n\nSaber programar é essencial, mas entender como levar sua aplicação para produção é o que realmente faz a diferença. Você aprenderá Docker e Docker Compose, criando um ambiente seguro e previsível para rodar suas aplicações.\nDepois, vamos automatizar a entrega do software com CI/CD utilizando GitHub Actions, garantindo que suas atualizações sejam publicadas de forma rápida e eficiente.\nVocê também verá na prática como implantar sua aplicação na AWS e GCP. Trabalharemos com Amazon RDS, Amazon ECR e Amazon ECS na AWS e com Google Cloud SQL, Google Artifact Registry, Google Cloud Run e Kubernetes no GKE (Google Kubernetes Engine) na GCP.\n\n\nExpanda suas habilidades com conteúdos extras\n\n\nAlém do domínio do Spring Boot, você terá acesso a conteúdos que ampliam seu conhecimento e preparam você para desafios do mundo real. Você aprenderá a consumir a API com ReactJS, gerar relatórios profissionais com JasperReports e Apache POI, trabalhar com upload e download de arquivos, importar e exportar planilhas, enviar e-mails com Spring Mail e Gmail e até integrar sua aplicação com o ChatGPT.\nAprenda com um curso sempre atualizado\nDesenvolvido por um instrutor com quase 15 anos de experiência no desenvolvimento de software e mais de 55 mil alunos treinados, este curso foi atualizado para Spring Boot 3.4 e Java 21, trazendo as melhores práticas mais recentes do mercado.\nSe você quer um curso completo, prático e direto ao ponto, que te ensine Spring Boot de forma aplicada e te prepare para implantar aplicações profissionais na nuvem, inscreva-se agora e comece sua jornada!",
      "target_audience": [
        "Desenvolvedores em início de carreira e que precisam aprender a desenvolver uma API REST/RESFul do zero",
        "Esse curso é indicado para desenvolvedores e engenheiros de software",
        "Para desenvolvedores back-end com conhecimentos de ASP NET, Rails, Django, Node etc e desejam aprender como fazer o que sabem mas com outra tecnologia",
        "Desenvolvedores front-end que desejam se tornar fullstack",
        "Quem já tentou outros tutoriais sobre Webservices REST/RESTful e descobriu que eles eram muito lentos, desatualizados e chatos!"
      ]
    },
    {
      "title": "Pemrograman Go-Lang : Pemula sampai Mahir",
      "url": "https://www.udemy.com/course/pemrograman-go-lang-pemula-sampai-mahir/",
      "bio": "Belajar pemrograman Go-Lang dari pemula sampai mahir disertai studi kasus. Materi akan selalu di-update secara berkala",
      "objectives": [
        "Go-Lang Dasar",
        "Go-Lang Database",
        "Go-Lang MySQL",
        "Go-Lang Context",
        "Go-Lang Goroutine",
        "Go-Lang Concurrency",
        "Go-Lang Embed",
        "Go-Lang Web",
        "Go-Lang RESTful API",
        "Go-Lang HTTPRouter"
      ],
      "course_content": {
        "Golang Dasar": [
          "Slide dan Source Code",
          "Discord Group",
          "Pendahuluan",
          "Pengenalan Golang",
          "Menginstall Golang",
          "Membuat Project",
          "Program Hello World",
          "Multiple Main Function",
          "Tipe Data Number",
          "Tipe Data Boolean",
          "Tipe Data String",
          "Variable",
          "Constant",
          "Konversi Tipe Data",
          "Type Declaration",
          "Operasi Matematika",
          "Operasi Perbandingan",
          "Operasi Boolean",
          "Tipe Data Array",
          "Tipe Data Slice",
          "Tipe Data Map",
          "If Expression",
          "Switch Expression",
          "For Expression",
          "Break dan Continue",
          "Function",
          "Function Parameter",
          "Function Return Value",
          "Returning Multiple Values",
          "Named Return Value",
          "Variadic Function",
          "Function as Value",
          "Function as Parameter",
          "Anonymous Function",
          "Recursive Function",
          "Closure",
          "Defer, Panic dan Recover",
          "Komentar",
          "Struct",
          "Struct Method",
          "Interface",
          "Interface Kosong",
          "Nil",
          "Type Assertions",
          "Pointer",
          "Asterisk Operator",
          "Operator New",
          "Pointer di Function",
          "Pointer di Method",
          "Package dan Import",
          "Access Modifier",
          "Package Initialization",
          "Error",
          "Membuat Custom Error",
          "Materi Selanjutnya"
        ],
        "Golang Standard Library": [
          "Slide dan Source Code",
          "Pendahuluan",
          "Standard Library",
          "Membuat Project",
          "Package fmt",
          "Package errors",
          "Package os",
          "Package flag",
          "Package strings",
          "Package strconv",
          "Package math",
          "Package container list",
          "Package container ring",
          "Package sort",
          "Package time",
          "Package reflect",
          "Package regexp",
          "Package encoding",
          "Package slices",
          "Package path",
          "Package io",
          "Package bufio",
          "File Manipulation",
          "Package Lainnya",
          "Materi Selanjutnya"
        ],
        "Go-Lang Modules": [
          "Pendahuluan",
          "Pengenalan Go Modules",
          "Membuat Module",
          "Menambah Dependency",
          "Upgrade Module",
          "Upgrade Dependency",
          "Major Upgrade",
          "Materi Selanjutnya"
        ],
        "Go-Lang Unit Test": [
          "Pendahuluan",
          "Pengenalan Software Testing",
          "Pengenalan testing Package",
          "Membuat Unit Test",
          "Menggagalkan Test",
          "Assertions",
          "Skip Test",
          "Before dan After Test",
          "Sub Test",
          "Table Test",
          "Mock",
          "Benchmark",
          "Membuat Benchmark",
          "Sub Benchmark",
          "Table Benchmark",
          "Materi Selanjutnya"
        ],
        "Go-Lang Goroutines": [
          "Pandahuluan",
          "Pengenalan Concurrency dan Parallel Programming",
          "Pengenalan Goroutine",
          "Membuat Project",
          "Membuat Goroutine",
          "Goroutine Sangat Ringan",
          "Pengenalan Channel",
          "Membuat Channel",
          "Channel Sebagai Parameter",
          "Channel In dan Out",
          "Buffered Channel",
          "Range Channel",
          "Select Channel",
          "Default Select",
          "Race Condition",
          "sync.Mutex",
          "sync.RWMutex",
          "Deadlock",
          "sync.WaitGroup",
          "sync.Once",
          "sync.Pool",
          "sync.Map",
          "sync.Cond",
          "Atomic",
          "time.Timer",
          "time.Ticker",
          "GOMAXPROCS",
          "Materi Selanjutnya"
        ],
        "Go-Lang Context": [
          "Pendahuluan",
          "Pengenalan Context",
          "Membuat Context",
          "Parent dan Child Context",
          "Context With Value",
          "Context With Cancel",
          "Context With Timeout",
          "Context With Deadline",
          "Materi Selanjutnya"
        ],
        "Go-Lang Database MySQL": [
          "Pendahuluan",
          "Pengenalan Package Database",
          "Menambah Database Driver",
          "Membuka Koneksi ke Database",
          "Database Pooling",
          "Eksekusi Perintah SQL",
          "Query SQL",
          "Tipe Data Column",
          "SQL Injection",
          "SQL dengan Parameter",
          "Auto Increment",
          "Prepare Statement",
          "Database Transaction",
          "Repository Pattern",
          "Materi Selanjutnya"
        ],
        "Go-Lang Embed": [
          "Pendahuluan",
          "Pengenalan Embed Package",
          "Embed File ke String",
          "Embed File ke []Byte",
          "Embed Multiple Files",
          "Path Matcher",
          "Hasil Embed di Compile",
          "Materi Selanjutnya"
        ],
        "Go-Lang Web": [
          "Pedahuluan",
          "Pengenalan Web",
          "Client dan Server",
          "Golang Web",
          "Server",
          "Handler",
          "ServeMux",
          "Request",
          "HTTP Test",
          "Query Parameter",
          "Header",
          "Form Post",
          "Response Code",
          "Cookie",
          "FileServer",
          "ServeFile",
          "Template",
          "Template Data",
          "Template Action",
          "Template Layout",
          "Template Function",
          "Template Caching",
          "XSS Cross Site Scripting",
          "Redirect",
          "Upload File",
          "Download File",
          "Middleware",
          "Routing Library",
          "Materi Selanjutnya"
        ],
        "Go-Lang HttpRouter": [
          "Pendahuluan",
          "Pengenalan HttpRouter",
          "Router",
          "Params",
          "Router Patterns",
          "Serve File",
          "Panic Handler",
          "Not Found Handler",
          "Method Not Allowed Handler",
          "Middleware",
          "Materi Selanjutnya"
        ]
      },
      "requirements": [
        "Mampu Mengoperasikan Komputer"
      ],
      "description": "Selamat datang di course Pemrograman Go-Lang dari Pemula sampai Mahir. Disini kita akan belajar Pemrograman Go-Lang dari tingkat dasar sampai tingkat mahir, disertai dengan studi kasus. Akan banyak materi yang akan dibahas di course ini seperti :\nGo-Lang Dasar, membahas dasar-dasar pemrograman Go-Lang, tipe data, variable, percabangan, perulangan, function dan lain-lain\nGo-Lang Modules, membahas cara membuat module atau project menggunakan Go Modules. Membuat project baru, membuat library, publish library ke repository, download library dan lain-lain\nGo-Lang Unit Test, membahas cara membuat unit test menggunakan Go-Lang, membuat unit test, membuat benchmark test, membuat mock, dan lain-lain\nGo-Lang Goroutines, membahas tentang concurrency dan parallel programming di Go-Lang. Membahas cara membuat goroutine, membuat lock, mutex, channel, dan lain-lain\nGo-Lang Database, memmabahas tentang database programming di Go-Lang menggunakan database MySQL. Cara membuat koneksi database, melakukan perintah SQL di Go-Lang, database transaction, repositorry pattern, dan lain-lain\nGo-Lang Web, membahas cara membuat Web menggunakan Go-Lang, membuat server web, membuat handler, membuat middleware, melakukan unit test web, dan lain-lain\nGo-Lang HttpRouter, membahas salah satu framework http handler yang populer di Go-Lang, cara menggunakan HttpRouter, dan bagaimana cara melakukan unit test nya\ndan lain-lain.\nMateri akan selalu di update secara berkala, dan ketika materi di update, harga course pun akan diupdate dengan harga baru. Jadi pastikan untuk secepatnya membeli course ini, makin cepat, makin murah harga pembelian course ini.",
      "target_audience": [
        "Programmer Pemula yang Ingin Belajar Pemrograman Go-Lang",
        "Programmer yang ingin membuat Web menggunakan Go-Lang",
        "Programmer yang ingin membuat API menggunakan Go-Lang"
      ]
    },
    {
      "title": "Algoritmo e Lógica de Programação do Absoluto ZERO! Completo",
      "url": "https://www.udemy.com/course/aprenda-programacao-do-absoluto-zero-o-seu-primeiro-curso/",
      "bio": "Aprenda Algoritmo, Lógica de Programação e muito mais no curso que vai te ensinar de forma fácil a programar do Zero.",
      "objectives": [
        "Algoritmos",
        "Lógica de Programação",
        "Configuração do Ambiente",
        "A base necessária para se desenvolver como programador",
        "Javascript",
        "Funções",
        "Estruturas de Controle",
        "Estruturas de Repetição",
        "Operadores",
        "Objetos e muito mais"
      ],
      "course_content": {},
      "requirements": [
        "Não existe pré-requisito"
      ],
      "description": "Sejam bem-vindos ao curso Aprenda Programação do Absoluto Zero! Seu primeiro curso de Programação.\nPra quem é direcionado este curso?\nPra quem nunca programou na vida e deseja mudar de profissão para aquela que é uma das carreiras mais promissoras do mercado;\nPra quem está começando os seus estudos de programação na faculdade e tem tido dificuldade pra entender toda a lógica por trás dos códigos;\nPra quem já conhece programação, mas reconhece a importância de ter uma base sólida de fundamentos;\nE pra quem já tentou aprender programação antes, e desistiu porque se frustrou por algum motivo e achou que nunca ia conseguir.\nSe você preencheu qualquer dos itens anteriores, chegou a sua hora, você chegou no lugar certo, este curso foi feito pra você. Este curso te dará a base para iniciar essa caminhada de estudos, e pode ser a porta de entrada que vai abrir as oportunidades que você tanto sonha como programador, seja no Brasil ou no exterior.\nEste curso é voltado tanto pra você que é iniciante e nunca viu programação na vida, como pra você que já é programador, e tem a consciência que precisa melhorar a sua base de fundamentos pra poder avançar ainda mais na sua carreira como programador.\nVocê sabia que, segundo publicação na Infomoney, 13 das 15 profissões mais promissoras para 2020 são ligadas à tecnologia? Esse cenário vem se repetindo há alguns anos e os avanços tecnológicos nos indicam que continuará assim por muito tempo. Então está mais do que na hora de você considerar as carreiras ligadas às tecnologias da informação. Dito isto, é com imenso prazer que anunciamos um dos cursos mais solicitados da Cod3r até então. Aprenda a Programar do Absoluto Zero! Seu primeiro curso de programação.\nEste curso foi concebido de uma forma única na Cod3r, da forma mais básica que já gravamos até hoje, exatamente por entender o quanto este momento, o início da jornada, é sensível na vida de um programador. E que ter a base fundamentada é muito, mas muito importante mesmo, pra que você consiga evoluir e seja capaz de escolher seus próprios caminhos e seguir daqui pra frente.\nNeste curso abordaremos todos os principais conceitos que são fundamentais pra te dar a base necessária pra você prosseguir no sonho de se tornar um programador. Vamos iniciar do absoluto ZERO, desde o conceito mais basilar, pra que você aprenda de forma definitiva. E além de muitos conceitos teremos também um plano de vários exercícios pra que você possa fixar todo o conteúdo oferecido no curso.\nIniciaremos esta jornada dando alguns conselhos importantes pra que você tenha total sucesso durante todo o curso. Depois partiremos pra configuração do ambiente, ou seja, tudo que precisa ser feito no seu computador para que você comece a programar será feito, com vídeo aulas, para que você acompanhe com clareza o passo a passo inicial.\nO curso será desenvolvido com JavaScript, que é, sem sombra de dúvida, uma das linguagens mais importantes e utilizadas da atualidade. Você aprenderá a Lógica de programação, ou seja, como conversar com computadores, e também Algoritmos, que são as ferramentas básicas para estabelecer a comunicação entre nós e as máquinas.\nDentro de algoritmos entenderemos o que são:\nSentenças de código - que são as instruções diretas ao computador;\nBloco de códigos - que são os grupos de instruções;\nDados e como manipulá-los;\nOperadores aritméticos;\nOperadores relacionais - que relacionam dados entre si;\nOperadores de atribuição - utilizados para atribuir valores aos dados. E através desses operadores nós manipularemos os dados para conseguir os resultados desejados.\nAlguns outros conceitos importantes que também aprenderemos neste curso:\nOs conceitos de linguagem fraca e fortemente tipada, que é a definição da mutabilidade dos tipos dos dados;\nEstruturas de controle de fluxo de código, que aplicam as restrições condicionais, ou seja, executam partes do código se certas condições forem cumpridas (if/else);\nEstruturas de repetição, que são aquelas que dadas as condições, repetem o mesmo trecho de código por determinadas vezes (while/for);\nE também o fluxo de código, que em cima disso, aprenderemos a corrigir os erros ou bugs que possam aparecer.\nDesbravaremos o mundo das funções que são blocos de código nomeados e que a partir desse nome podem ser chamados em qualquer lugar do algoritmo. As funções representam ferramentas poderosíssimas para transformar dados. Estudaremos vários tipos de funções partindo de suas anatomias e atingindo todas suas possibilidades e funcionalidades.\nVale ressaltar que nosso curso está repleto de exercícios e desafios para a fixação do conhecimento. E ainda tem mais, você contará com uma equipe de suporte muito ágil, amigável, e pronta para te atender. Quaisquer dúvidas que possam surgir no seu processo de aprendizagem, serão, com toda certeza, sanadas pela nossa equipe.\nA Cod3r é uma escola de cursos online de tecnologia com mais de 200.000 alunos, e nos orgulhamos de ser considerada uma das melhores escolas de tecnologia do país, que se diferencia pela qualidade do seu conteúdo e pela sua didática ímpar. Então, acredite, você estará em boas mãos!\nDepois de tudo isso, o que você está esperando? ABRACE O FUTURO! Vamos programar juntos!",
      "target_audience": [
        "Pra quem nunca programou na vida e deseja mudar de profissão praquela que é uma das carreiras mais promissoras do mercado",
        "Pra quem está começando os seus estudos de programação na faculdade e tem tido dificuldade pra entender toda a lógica por trás dos códigos",
        "Pra quem já conhece programação, mas reconhece a importância de ter uma base sólida de fundamentos",
        "Pra quem já tentou aprender programação antes, e desistiu porque se frustrou por algum motivo e achou que nunca ia conseguir"
      ]
    },
    {
      "title": "Desarrolla Sistemas en Visual Basic Net, 4 capas, SQL Server",
      "url": "https://www.udemy.com/course/desarrolla-sistemas-visual-basic-net-sql-server-4-capas-poo/",
      "bio": "Desarrolla Sistemas informáticos en Visual Basic .Net, SQL Server, 4 Capas, POO, V. Studio IDE - Incluye PROYECTO FINAL",
      "objectives": [
        "Desarrollar un sistema de escritorio en el lenguaje de programación Visual Basic .Net con la última versión del Net Framework.",
        "Implementar una arquitectura de desarrollo en capas robusta, escalable y mantenible en Visual Basic .Net.",
        "Diseño de base de datos en SQL Server, tablas y columnas, relaciones, procedimientos almacenados, triggers.",
        "Mantenimientos CRUD de tablas independientes, relacionales y maestro/detalle.",
        "Diseño de Windows Forms.",
        "Exportar reportes Excel, PDF, Word.",
        "Gestión de usuarios, permisos y roles, autenticación y autorización.",
        "Implementación de sistemas de gestión de información de escritorio."
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de programación.",
        "Tener instalado Microsoft Visual Studio.",
        "Tener instalado SQL Server."
      ],
      "description": "Durante este curso te mostraremos como desarrollar un sistema de gestión de información de escritorio utilizando el lenguaje de programación Visual Basic .Net con la última versión del Net Framework, SQL Server como gestor de base de datos utilizando procedimientos almacenados para la comunicación con la capa de datos, trabajaremos con Windows Forms, utilizaremos el IDE Microsoft Visual Studio 2019 (puedes utilizar la versión 2022); la organización del proyecto estará definida en una arquitectura por capas, robusta, escalable y mantenible.\nDesarrollaremos como proyecto final un sistema de escritorio de gestión de compras y ventas completo y desde cero, este sistema tendrá las funcionalidades de CRUD de tablas independientes, CRUD de tablas relacionales, CRUD de tablas maestro detalles, gestión de accesos y autorizaciones, consultas y reportes.\nCaracterísticas del proyecto final a desarrollar:\n* Módulo Almacén\nArtículos: Gestión de todos los artículos, teniendo en cuenta su categoría, código de barras, nombre, el stock en almacén, precio de venta, una descripción y una imagen referencial.\nCategorías: Gestión de las categorías, que permiten tener una clasificación de los artículos.\n\n\n* Módulo Compras\nProveedores: Gestión de tus proveedores, teniendo en cuenta su nombre/razón social, tipo y número de documento, dirección, email, teléfono.\nIngresos: Gestión de compras o Ingresos almacén teniendo en cuenta el proveedor, la fecha de ingreso o compra, el tipo de comprobante (Boleta, Factura, Ticket) y número de comprobante emitido por el proveedor, el impuesto; el ingreso tendrá detalles que harán referencia al artículo que esta ingresando, se permitirá realizar la selección de los artículos para agregar de estos la cantidad de ingreso almacén, su precio de compra y el precio de venta propuesto.\nSe puede exportar el comprobante en pdf y el reporte de compras en formato PDF.\n\n\n* Módulo Ventas\nClientes: Gestión de tus clientes, teniendo en cuenta su nombre/razón social, tipo y número de documento, dirección, email y teléfono.\nVentas: Gestión de Ventas, teniendo en cuenta el cliente, la fecha de la venta, el tipo de comprobante (Boleta, Factura, Ticket) y número de comprobante emitido al cliente, el impuesto; la venta tendrá detalles que harán referencia al artículo que se esta vendiendo, se permitirá realizar la selección de los artículos para agregar de estos la cantidad de venta, su precio de venta y si hubiera un descuento.\nSe puede exportar el comprobante en pdf y el reporte de ventas en formato PDF.\n* Acceso al sistema\nRoles: Gestión de todos los roles de acceso al sistema: Administrador, Vendedor, Almacenero.\nUsuarios: Gestión de los usuarios, considerando su nombre, tipo y número de documento, dirección teléfono, email, cargo, login de usuario y password encriptado, seleccionando su rol específico de acceso.\n* Consultas\nConsulta de ventas\nPermite realizar la búsqueda de ventas entre dos fechas seleccionadas.\n\n\n* Reportes\nSe podrá exportar información en formato PDF, WORD, EXCEL.",
      "target_audience": [
        "Estudiantes y profesionales que quieran aprender a desarrollar sistemas de gestión de información de escritorio robustos y escalables."
      ]
    },
    {
      "title": "Podstawy programowania. Język C",
      "url": "https://www.udemy.com/course/podstawy-programowania-jezyk-c/",
      "bio": "Pierwsze kroki w świecie programowania",
      "objectives": [
        "Jak pisać i kompilować programy komputerowe w języku C.",
        "Jak używać kompilatora GCC - jednego z najważniejszych kompilatorów języka C.",
        "Jak obsługiwać popularne środowisko programistyczne Visual Studio Code.",
        "Jak działają podstawowe konstrukcje programistyczne: pętle, instrukcje warunkowe oraz funkcje.",
        "Co to są zmienne i jakie typy danych są dostępne w języku C.",
        "W jaki sposób komputery przechowują liczby całkowite oraz niecałkowite.",
        "Jak realizować operacje arytmetyczne i logiczne w języku C."
      ],
      "course_content": {},
      "requirements": [
        "Nie. Kurs jest możliwy do ukończenia nawet przez osoby, które nigdy wcześniej nie miały styczności z programowaniem."
      ],
      "description": "Postaw pierwsze kroki w świecie programowania i poznaj język C - jeden z najpotężniejszych i najpopularniejszych języków programowania.\nDzięki temu kursowi nauczysz się jak pisać i kompilować własne programy komputerowe. Zdobędziesz też wiedzę o ważnych pojęciach związanych z budową i działaniem komputerów.\nWierzysz w znaczenie treningu i dobrze ugruntowanej wiedzy? My też. Dlatego proponujemy Ci naukę programowania w języku C, który pozwala:\ndogłębnie zrozumieć działanie programów komputerowych,\npisać programy o bardzo dużej wydajności,\noprogramowywać zarówno duże maszyny o potężnej mocy obliczeniowej jak i proste mikroprocesory o kilku kilobajtach pamięci.\nPodczas tego kursu dowiesz się jak korzystać z profesjonalnych narzędzi do tworzenia i kompilacji kodów źródłowych, poznasz podstawowe elementy języka C takie jak zmienne, operatory, instrukcje warunkowe pętle oraz funkcje.\nKażda lekcja zawiera ćwiczenia do samodzielnego wykonania, dzięki którym utrwalisz i poszerzysz swoją wiedzę. Wśród ćwiczeń nie brakuje problemów programistycznych spotykanych w prawdziwym życiu.\nOd początku chcemy wprowadzać Cię w świat profesjonalnego programowania. W naszym kursie znajdziesz dzięki temu tematy, które bywają często przemilczane w innych źródłach. Dowiesz się między innymi jak samodzielnie zainstalować w systemie Windows kompilator GCC oraz uruchamiać go z poziomu wiersza poleceń, jak korzystać z możliwości systemu operacyjnego do łączenia swoich programów w potoki albo jak sposób przechowywania liczb w pamięci procesora wpływa na dokładność jego obliczeń.\nDołącz do kursu i zacznij drogę do zostania profesjonalnym programistą.",
      "target_audience": [
        "Osoby, które chcą nauczyć się programować.",
        "Studenci kierunków technicznych, w szczególności: informatyki, elektroniki, telekomunikacji, automatyki i robotyki.",
        "Hobbyści zainteresowani programowaniem w szczególności systemów wbudowanych (np. Arduino)."
      ]
    },
    {
      "title": "Tia Portal-Siemens S71200 PLC ,Panel-WinCC SCADA-Factory I/O",
      "url": "https://www.udemy.com/course/siemens-s7-1200-plc-panel-ve-wincc-scada-dersleri/",
      "bio": "Her bölüme ve derse ait döküman...Siemens S71200, KTP 700 HMI, SCADA, ABB Motor Sürücüler. Servo motor motor sürme.",
      "objectives": [
        "PLC'NİN YAPISI VE GENEL KAVRAMLAR",
        "TIA PORTAL-PLCSIM KURULUMU ve LİSANS İŞLEMLERİ",
        "TIA PORTAL YAZILIMINDA TEMEL İŞLEMLER VE PROGRAMLAMAYA GİRİŞ-PLC BAĞLANTILARI",
        "TIA PORTAL TEMEL İŞLEMLER",
        "TIA PORTAL MENÜLER (V15-S7 1500 PLC İLE)",
        "MANTIK FONKSİYONLARI",
        "BUTON,RÖLE,KONTAKTÖR BAĞLANTILARI ve UYGULAMASI",
        "HAFIZA FONKSİYONLARI",
        "TEMEL PLC UYGULAMALARI",
        "KENAR TETİKLEMELERİ",
        "S7 1200 PLC'DE ZAMAN RÖLELERİ (TIMERS) ve Uygulamaları",
        "S7 1200'DE SAYICILAR ve KARŞILAŞTIRMA KOMUTLARI ve CLOCK MEMORY Bitleri",
        "SAYISAL OPERASYONLAR",
        "SIÇRAMA, KAYDIRMA VE DÖNDÜRME İŞLEMLERİ",
        "ARİTMETİK FONKSİYONLAR VE UYGULAMALARI",
        "VERİ TİPLERİ, PLC SAAT VE TARİHİNİ OKUMA",
        "ANALOG GİRİŞ- ÇIKIŞ İŞLEMLERİ",
        "S7 1200 İLE SİMÜLASYON KULLANIMI VE FACTORY I/O İLE SİMÜLASYON",
        "KESMELER (INTERRUPT)",
        "S7 1200 PLC'LERDE HATA ARAMA",
        "ENKODER UYGULAMALARI ve PWM MODÜLÜ KULLANIMI",
        "MOVE FONKSİYONLARI",
        "SENSÖR BAĞLANTILARI ve UYGULAMALARI",
        "BLOKLAR İLE ÇALIŞMA VE KONTROL YÖNTEMLERİ (PID)",
        "PLC'DEN DONANIM VE PROGRAM ÇEKME",
        "S7 1200 PLC'LER ENDÜSTRİYEL HABERLEŞME",
        "SERVO ve STEP MOTOR KONTROLÜ",
        "ŞİFRELEME,ANINDA OKUMA-YAZMA",
        "ŞİFRELEME,ANINDA OKUMA-YAZMA",
        "SCL DİLİ PLC PROGRAMLAMA",
        "SCL PROGRAMLAMA DİLİ UYGULAMALARI",
        "DURUM GRAFİĞİ YARDIMI İLE PLC PROGRAMLAMA",
        "TIA PORTAL V15 İLE KÜTÜPHANE BLOĞU OLUŞTURMA",
        "PLC UYGULAMALARI",
        "SIEMENS HMI PANEL (KTP 700) PROGRAMLAMA",
        "TIA PORTAL İLE SCADA PROGRAMLAMA",
        "WİNCC SCADA VE ANALOG GİRİŞ ÇIKIŞ UYGULAMALARI",
        "ASENKRON MOTOR SÜRÜCÜLER- ABB ACS355",
        "WİNCC SCADA İLE GRAFİK VE TABLO OLUŞTURMA",
        "PANEL VE SDADA İŞLEMLERİNDE ERİŞİM KORUMASI VE KULLANICI TANIMLAMA",
        "TIA PORTAL PROJELERİNDE RAPOR OLUŞTURMA VE YAZDIRMA",
        "PANEL VE SCADA SİSTEMİNDE ÖZEL FONKSİYONLAR",
        "SCADA UYGULAMALARI",
        "VISUAL BASIC SCRIPT UYGULAMALARI",
        "SERVO MOTOR KONTROLÜ-SİEMENS MOTİON CONTROL",
        "OPC-SİEMENS S7-1200 HABERLEŞMESİ",
        "EKTS VE CADE_SIM ile ALMAN VE AMERİKAN NORMUNDA KUMANDA UYGULAMALARI"
      ],
      "course_content": {},
      "requirements": [
        "Bilgisayar,",
        "İmkan dahilinde PLC veya Simülatör Programı",
        "Temel Kumanda Elemanları (Buton,Röle, Kontaktör)",
        "HMI Panel",
        "Ethernet Bağlantı Kablosu"
      ],
      "description": "Bu kursta SIEMENS firmasının piyasaya sürmüş olduğu ve piyasada yaygın olarak kullanılan S7 1200 serisi PLC cihazlarının kumandası, HMI Panel uygulamaları, Scada uygulamaları Temel ve İleri seviye olarak tüm detayları ile anlatılmakta olup tüm örnekler gerçek PLC üzerinde denenerek yapılmıştır. Ayrıca Temel Kumanda bilgisi de verilerek Programlama mantığı anlatılmıştır. Kurs sanayi çalışanlarının yanı sıra Mühendislik Fakülteleri, Meslek Yüksek Okulları, Endüstri Meslek Liseleri gibi okullarda okuyan öğrenci ve öğretmen arkadaşlara da faydalı olacaktır. Kursun tüm öğrenci, öğretmen ve teknik elemanlara faydalı olmasını umuyor, başarılar diliyorum.\n\n\nPLC PROGRAMLAMA KURSU NEDİR?\nPLC (Programmable Logic Controller)aritmetik , mantıksal denetleyicidir. Fabrikalardaki üretim bölümlerinde veya makinelerin kontrolü gibi işlemlerin denetiminde kullanılan otomasyon cihazıdır. PLC’nin, birçok giriş ve çıkışı vardır. Bilgisayar üzerinden programlandıktan sonra elektrik devresine bağlanır. PLC’nin en büyük artılarından biri, , sıcaklık farklarına, toz, manyetik gürültü ve mekanik darbelere karşı dayanıklı olarak tasarlanmış olmasıdır.\nGeleceğin makineleşme sürecinde endüstri 4.0 teknolojisinin temelini oluşturur\nNEDEN PLC PROGRAMLAMA EĞİTİMİ?\nHazırlanmış fonksiyonları direkt olarak kullanabiliriz.\nAz yer tutarlar, daha az kablo bağlantısı vardır.\nDayanıklıdır, çevre koşullarından kolay etkilenmezler.\nGiriş ve çıkışların durumlarını izleyebiliriz.\nAz arıza yapalar, güvenilirdir, bakımları kolaydır.\nPLC’LERİN GENEL KULLANIM ALANLARI\nSıra Kontrol: paketlemede, asansör endüstrisinde kullanılmaktadır. Hareket Kontrol: kauçuk, film ve kartezyen robot endüstrilerinde kullanılır. Süreç Denetimi: Makineler çalışır durumda olduğunda makinelerin hız ayarlarını, ağırlıklarını, debini, basıncını, sıcaklığını kontrol eder. Veri Yönetimi: havalandırma ( klima), çimento, tekstil, robot vb. sanayilerde kullanılır.\nNOT: EĞİTİMLER SİEMENS  PLC-PANELLER İLE YAPILACAKTIR\nAMAÇ :SANAYİNİN İHTİYAÇ DUYDUĞU HAYAL EDEBİLEN ENDÜSTRİ 4.0 HAZIR BİREYLERİ YETİŞTİRMEKTİR.\n\n\nTIA Portal Basic projelendirme yazılımı, S7-1200 mikro PLC ve SIMATIC HMI Basic panellerin basit ve hızlı programlaması, haberleştirilmesi ve devreye alınmasını sağlar. Mikro PLC'nin merkezi ünitesine esnek genişleme opsiyonları sağlayacak şekilde farklı tipte I/O ve haberleşme modülleri takılabilir. Sistem; projelendirme yazılımı, kontrolörler ve HMI üniteleri arasında kolay bağlantı ve haberleşme için PROFINET portuna sahiptir.\n\n\n\n\nSIMATIC S7-1200 PLC sisteminde, makine ihtiyaçlarınızı tam olarak karşılayacak şekilde genişletebilir 5 farklı CPU tipi mevcuttur. Bunlar; CPU 1211C, CPU 1212C, CPU 1214C, 1215C and 1217C\n\n\n\n\nCPU'ların üzerine takılabilen I/O genişletme kartı, kontrol sisteminin pano montaj ebatlarını değiştirmeden sistemin dijital veya analog I/O sayısının artırılmasına olanak tanır. CPU'nun dijital veya analog giriş çıkış kapasitesini artırmak için giriş çıkış modülleri CPU'nun sağ tarafına takılabilir. CPU 1212C'ye 2, CPU1214C, CPU 1215C ve CPU 1217C ye 8 modül bağlanabilir.\n\n\n\n\nAyrıca tüm S7-1200 CPU'ların sol tarafına seri haberleşme için 3 adet haberleşme modülü takılabilir.",
      "target_audience": [
        "Endüstriyel Otomasyon, Elektrik-Elektronik, Bilişim Alanında Çalışan Teknisyen, Mühendis ve Öğrenciler.",
        "PLC Programlamak ve bu alanda kendisini geliştirmek isteyen Teknik Elemanlar",
        "Üniversite ve Meslek Yüksek okullarında okuyan Mühendis Adayları"
      ]
    },
    {
      "title": "現役シリコンバレーエンジニアが教えるGo入門 + 応用でビットコインのシストレFintechアプリの開発",
      "url": "https://www.udemy.com/course/go-fintech/",
      "bio": "現役シリコンバレーエンジニアの15時間のGo講座 〜 シリコンバレーで流行り出したGoを入門から習得し、応用で次世代Fintechアプリを開発する。Bitcoin以外の株やFXにも使えるシステムトレーディング分析方法を教授。",
      "objectives": [
        "Goの基本を身につけることができます。",
        "応用編でFintechアプリの開発をするため、Goの基本だけではなく開発手順も身につけることができます。",
        "アプリはWEBアプリとなりますので、WEB系のバックエンドで必要なデータベースやフロントエンドなどGo標準のフレームワークを学ぶことができます。",
        "仮想通貨の自動トレードの基本を身につけることができます。",
        "株式投資やFXなどにも使えるテクニカル分析を身に付けることができます。"
      ],
      "course_content": {},
      "requirements": [
        "Pythonなどの他の言語を学んでいるとよりわかりやすいかと思います。",
        "後半のアプリ開発は、仮想通貨や株などの取引を行ったことがあるは理解しやすいかと思います。",
        "応用編では、HTML, JQuery, SQL, MySQL、Json、Web Serverなどを扱いますので、ある程度の基本知識があると良いかと思います。"
      ],
      "description": "このコースでは、Goの基礎である入門コースを一通り終えた後に、次世代のFintech（金融＋テクノロジー）のアプリケーションとしてビットコインを自動でシステムトレードを行うアプリを開発します。\n多くの言語の良い部分を取りれたGoは、コードを実行する際のパフォーマンスも良く、近年急速にライブラリも充実して来ており、シリコンバレーで多くの企業が取り入れ始めました。日本では、ドキュメントも少なく、Go言語を使う機会があまりないかもしれませんが、世界のトップ企業はすでに使い始めているため、技術レベルで世界から遅れないように今からGo始めると良いかと思います。\n私はアメリカで2006年から働き始め、12年立ちましたが、その頃からPythonを先取りして習得していたため、現在のビックデータ産業のトップ企業でもPython言語のシニアエンジニアとして働くことができております。Goに関しても仕事で使っておりますが、Goの良さを感じ、次世代の開発でGoエンジニアが必ず重宝される時代がくると強く感じております。\n次世代の技術では、AI、人工知能、ロケット、ロボットなどが注目されているようですが、Fintechビジネスもシリコンバレーでは拡大しております。株式市場は人生最大の発明と言われるように、今後もなくなることはなく存続していき、それに付随したFintech技術はこれからも伸びていくものと予想されます。\nエンジニアのキャリアアップには、ただ目の前にあるスキルに飛ぶつくのではなく、次世代にくる産業や技術を先取りしてスキルを向上させることが重要になってくることかと思います。その辺りのお話も無料で見れる紹介ビデオでお話ししておりますので、シリコンバレーのトップ産業にご興味ある方はぜひ覗いてみてください。\n本コースが皆様の今後のご活躍にお役に立てるようなコースとなれば幸いです。皆様の成功をお祈りしております！",
      "target_audience": [
        "前半はGoの初心者向け講座で、後半のアプリ開発は中級者向けとなっております。",
        "Fintechにご興味がある方には良い講座かと思います。",
        "システムトレーディングにご興味ある方には良い講座かと思います。",
        "仮想通貨にご興味ある方には良い講座かと思います。"
      ]
    },
    {
      "title": "プログラミングを業務で活かす！PythonによるWeb API活用講座",
      "url": "https://www.udemy.com/course/python-web-api/",
      "bio": "プログラミング初学者必見！Pythonの基礎は終えたけど、もう少し実用的な内容に取り組んでみたい、業務に活かせそうなスキルを身につけたいと考えている方向けに、Pythonを用いたWeb API活用方法をわかりやすくお伝えします。",
      "objectives": [
        "PythonによるWeb APIの実装方法が身につきます。",
        "APIが何かを理解し、APIの重要性、APIの素晴らしさがわかります",
        "様々な形式のAPIを実装することにより、業務活用へのアイディアが広がります",
        "ドキュメント（APIリファレンス）を読む力が身につきます",
        "API実装にあたってつまづくエラーの解決方法がわかります",
        "初学者の次の一歩としてPythonを用いたスキルの幅を広げることができます",
        "グルメサーチAPIを用いてホットペッパー掲載データを収集できるようになる",
        "楽天商品検索APIを用いて商品データを収集できるようになる",
        "Sheets APIを用いてGoogleスプレッドシートを操作する方法がわかる",
        "Gmail APIを用いてメールを自動送信するスキルが身につく",
        "Twitter API（Tweepy）を用いてTwitterを操作することができる",
        "LINE Notify APIを駆使してLINEの自動通知機能を実装することができるようになる",
        "Slack Botを作成する方法が身につく",
        "Azure Face APIを用いた顔検出の方法がわかる",
        "Speech-to-Text APIを用いた音声認識による文字起こしができるようになる",
        "Firestoreを用いたデータベース操作ができるようになる"
      ],
      "course_content": {},
      "requirements": [
        "事前準備は特に必要ありません",
        "プログラミング初学者向けに「Python入門講座」も用意しておりますが、なにかしらのプログラミング経験があると望ましいです",
        "本コースは、macOSを使用して進めていきますが、Windowsでも同様に進めることができます"
      ],
      "description": "＜本講座で意識している3大要素＞\n■ プログラミングの業務活用力\nプログラミング（Python）の基礎はなんとなく理解できてきたけど、「次に何を勉強すればいいのだろうか」「プログラミングを業務に活用できるようになりたいな」と思っているあなたにオススメなのが本講座です。\n私自身、エンジニアとしてプログラミングをバリバリ使っている、という側の人間ではなく、ビジネスサイドの人間としてプログラミングを活用しております。まさしく、本講座のテーマでもある「プログラミングを業務で活かす」です。\n私と同様に、ビジネスサイドの立場でプログラミングを活用していきたい方や、ゆくゆくはエンジニアになりたいけど、まずは身近な事にプログラミングを活かしていきたい方に、本講座はぴったりな内容です。\n\n\n■ エラー解決能力\n通常の講座はエラーが出ないキレイな形で進めていきます。\nしかし、実際に1人で手を動かしながら進めていく中でエラーが出ないことはあるのでしょうか？エラーが出ないことなんてありえないですし、おそらく多くの初学者はエラーでつまづいてしまいます。\n本講座は、初学者がつまづきやすいエラーを敢えてお見せしながら講義を進めていきます。エラーが出たときにどのように対処していくのか、どのように考えればいいのかもお伝えします。\n\n\n■ ドキュメント読解力\n「公式ドキュメントちゃんと読んだ？Qiitaとかの記事じゃなくて公式ドキュメント読めば大体わかるよ」\nこれは、私がプログラミング初学者のときにメンターに言われた一言です。\n「いやいや公式ドキュメント難しいから敬遠してるんですけど...」と、何度思ったことか。\n公式ドキュメントが大事なのはわかると思いますが、読むのって結構億劫になりませんか？\nなんか難しいこと難しく書いてありますよね。私も初学者の頃はずっと敬遠してました。ただ、メンターの言うことも正しくて、たしかに公式ドキュメントの情報が基本的にベストなんですよね。\nそのため、本講座では極力ドキュメントを読解しながらお伝えしていきます。",
      "target_audience": [
        "Pythonの基礎を終えたので次のステップを学んでいきたい方",
        "業務、ビジネスにプログラミング（Python）を活用していきたい方",
        "APIをイマイチ理解していないが興味はある方",
        "Pythonで様々な種類のWeb APIを実装してみたい方"
      ]
    },
    {
      "title": "Die komplette C# Masterclass - von 0 auf 100 in 6 Wochen",
      "url": "https://www.udemy.com/course/die-komplette-csharp-masterclass/",
      "bio": "Lerne C# Programmierung - WPF, Datenbanken, Linq, Spieleentwicklung mit Unity",
      "objectives": [
        "Lerne die Grundlagen der Programmierung mit C#",
        "Lerne wie man Variablen, Methoden, Loops und Bedingungen verwendet",
        "Verstehe in der Tiefe wie OOP (objektorientierte Programmierung) funktioniert und wie man sie anwendet",
        "Erstelle schöne GUIs (Benutzeroberflächen) mit WPF (Windows Presentation Foundation)",
        "Erstelle Videospiele mit C# und Unity 3D",
        "Lerne wie man mit Fehlern umgeht und diese vermeidet",
        "Arbeite mit Dateien und Text",
        "Lerne die Verwendung von Lambda Ausdrücken und Linq",
        "Lerne den Umgang mit Datenbanken mit C#"
      ],
      "course_content": {},
      "requirements": [
        "Visual Studio Community Edition (GRATIS)"
      ],
      "description": "Hattest Du schon einmal eine Idee für ein Programm, eine App oder ein Spiel?\nVielleicht möchtest Du als Entwickler arbeiten? Dann bist Du hier genau richtig. In diesem Kurs erfährst Du, wie Du ein C#-Entwickler werden - Entwickler einer der besten Programmiersprachen der Welt!\nC# ist eine der wenigen Programmiersprachen, die es dir ermöglicht, erstaunliche plattformübergreifende Mobile Apps, Spiele und PC-Programme zu erstellen.\nEine Idee zum Leben zu erwecken ist eines der besten Gefühle, die man haben kann, aber der Weg dorthin ist oft voller Herausforderungen. Deshalb habe ich einen Kurs erstellt, der diesen Weg mit Hilfe von C# so einfach wie möglich macht, damit Du ein erfahrener C#-Entwickler wirst!\nDu beginnst mit dem Erlernen der C#-Grundlagen und C#-Programmierkonzepte im Allgemeinen:\nVariablen\nVorgehensweisen\nAufstellungen\nwenn Anweisungen\nSchlaufen\nArrays.\nDann lernst Du die drei Säulen der objektorientierten Programmierung kennen.\nKlassen und Objekte\nVererbung\nPolymorphismus\nSobald Du sie beherrschen, wirst Du in fortgeschrittene C#-Themen wie Datenbanken und LINQ einsteigen.\nUm wirklich gut in der C#-Programmierung zu werden, musst du selbt programmieren, also habe ich viele Übungen (und Quizzes) erstellt, damit du selbst versuchen kannst, C#-Programme zu entwickeln und auch zu sehen, wie es gemacht wird. Natürlich lernest Du dabei die besten Programmierpraktiken kennen.\nAusgestattet mit diesen Fähigkeiten, wirst Du schöne Benutzeroberflächen mit WPF - Ein Framework, das das Erstellen von GUI's zu einem Kinderspiel macht.\nDann kannst Du Deine eigenen komplexen Programme erstellen.\nAber was als nächstes kommt, ist noch cooler.\nLerne die Spieleentwicklung mit Unity und C# - Erstelle 2 fantastische Spiele\nDa C# für mehrere verschiedene Bereiche der Programmierung verwendet werden kann, habe ich beschlossen, die wichtigsten abzudecken. Also habe ich eine ganze Reihe von Kapiteln hinzugefügt, die speziell für einen C#-Entwickler und Unity-Spielentwickler entwickelt wurden - die wohl beste Game Engine der Welt. In diesen Kapiteln erfährst Du, wie Du Deine eigenen Videospiele erstellen, indem Du Pong, die Mutter der Videospiele und Zickzack, ein erstaunliches und erfolgreiches Endless Runnerspiel, entwickelst.\nWir leben in einer Welt, in der Wissen und Arbeit mehr denn je geteilt werden, so dass die Nutzung von Ressourcen, die von anderen zur Verfügung gestellt werden, einen enormen Schub für Ihren Fortschritt darstellt.  Du wirst lernen, wie man mit 3D-Assets einen Endless Runner macht. Dann wirst du Animationen verwenden, das Spiel zurücksetzen, Partikelsysteme verwenden und schließlich eine Karte prozedural erstellen. Das ist ziemlich fortschrittliches Zeug.\nIch weiß, dass es manchmal schwer sein kann, Code zu lernen, und manchmal bleibt man einfach stecken. Aber keine Sorge, wir sind für Dich da. Wir beantworten jede Frage so schnell wie möglich und sorgen dafür, dass Du Dein Ziel, ein Entwickler zu werden, erreichst.\nFÜR WEN IST DIESER KURS GEDACHT?\n\nDer Kurs ist für alle, die c# lernen und professionell gut in c#-Programmierung werden wollen. Es ist keine Erfahrung erforderlich. Es ist so konzipiert, dass jeder, der mit Maus und Tastatur umgehen kann, es schaffen wird, ihn zu beenden. Die einzige wirkliche Voraussetzung ist der Wunsch zu lernen.\n30 TAGE GELD-ZURÜCK-GARANTIE\nDieser Kurs beinhaltet eine 30-tägige Geld-zurück-Garantie. Hole Dir den Kurs, sehe Dir jede Vorlesung an und mache die Übungen, und wenn Du das Gefühl hast, dass dieser Kurs nichts für Dich ist, bitten einfach um eine volle Rückerstattung innerhalb von 30 Tagen. Du erhältst dein Geld zurück, keine Fragen.\nÜBER DEINEN LEHRER:\nMein Name ist Denis Panjuta und in meinen Kursen habe ich über 50.000 Studenten das Programmieren beigebracht. Ich habe einen Bachelor of Engineering an der Fachhochschule Konstanz. Ich liebe es zu unterrichten und qualitativ hochwertige Kurse zu erstellen. Meine Mission ist es, über 100.000 Menschen das Programmieren beizubringen!\nWie Du siehst, ist dies der einzige C#-Kurs, den Du je brauchen wirst!\nDu lernen alle c#-Grundlagen, und alles, was Du wissen musst, um erfolgreich in c#-Programmierung und den Aufbau Deine eigenen coolen Videospiele!\nVerschwende also keine Zeit mehr und fange jetzt an, Deine Träume und Ideen wahr werden zu lassen, indem Du Dich jetzt in den Kurs einschreibst.",
      "target_audience": [
        "Jeder der C# lernen möchte",
        "Jeder der Cross Plattform Videospiele mit Unity 3D entwickeln möchte",
        "Jeder der PC Programme mit schönen Benutzeroberflächen erstellen will (mit WPF)"
      ]
    },
    {
      "title": "C# Öğrenin",
      "url": "https://www.udemy.com/course/csharp-egitim-seti/",
      "bio": "C#",
      "objectives": [
        "C#",
        "Temel Algoritma",
        "Konsol Uygulaması"
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Değişken Tanımlama",
          "Operatörler",
          "Tip Dönüşümleri",
          "Uygulamalar 1"
        ],
        "Koşul Yapıları": [
          "If - Else Yapısı",
          "Switch - Case Yapısı",
          "If - Else Örnekleri",
          "Switch - Case Örnekleri"
        ],
        "Döngüler": [
          "For Döngüsü",
          "ForEach Döngüsü",
          "Do Yapısı",
          "Do-While Kullanımı"
        ],
        "Diziler": [
          "Diziler Giriş",
          "List Kullanımı",
          "Dizi Örnekleri"
        ],
        "Hata Ayıklama": [
          "Debug ile Hata Ayıklama"
        ],
        "Metodlar": [
          "Metodlar Giriş",
          "Metod Örnekleri"
        ],
        "Nesneye Yönelik Programlama": [
          "Class ile çalışmak",
          "Encapsulation",
          "Kalıtım İşlemleri (Inheritance)",
          "Virtual ve Abstract",
          "Interface Tanımlamak"
        ]
      },
      "requirements": [
        "Visual Studio",
        "Bilgisayar"
      ],
      "description": "C# ve Programlamaya başlamak isteyenler için ideal temel başlangıç kursu.\nProgramlamaya giriş yapmak istiyorsanız bu temel C# Eğitimi tam size göre. Bu eğitim seti 0'dan başlayacak kişilerinde anlayabileceği şekilde hazırlandı. Programlamanın temel mantığı ve algoritmayı kavramanız için bolca örnek ile de öğrendiklerinizi pekiştirebilirsiniz.\nSizde programlamaya ilgi duyuyor ve nereden başlayacağınızı bilmiyorsanız hemen bu kursa kayıt olun !",
      "target_audience": [
        "C# Öğrenmek İsteyen Kişiler"
      ]
    },
    {
      "title": "Curso completo de Python 2025-De cero a Master con Python 3",
      "url": "https://www.udemy.com/course/curso-completo-de-python-desde-cero-hasta-experto/",
      "bio": "Desarrollo web con Python3, Flask, Django y conoce todo desde cero SQLite3, HTML, CSS para crear aplicaciones WEB",
      "objectives": [
        "Lenguaje de Programación Python",
        "Programación Funcional con Python",
        "POO con Pyton",
        "Tkinter y Python",
        "SQLite y Python",
        "Lenguaje HTML",
        "Lenguaje CSS",
        "Microframework Flask",
        "Aplicaciones Web con Flask",
        "Framework Django",
        "Desarrollo Web Backend con Django"
      ],
      "course_content": {},
      "requirements": [
        "Saber usar un computador y un navegador de Internet",
        "Tener un Ordenador con Conexión a Internet"
      ],
      "description": "Bienvenido al Curso Completo de Python, desde Cero hasta Experto.\nAprende a programar desde cero con el lenguaje de mayor crecimiento en los últimos años: Python. Descubre qué es un algoritmo y cómo se construye uno con Python. Luego aprende a crear aplicaciones más completas como aplicaciones de escritorio utilizando herramientas como Tkinter. También aprende a trabajar con bases de datos como SQLite.\nPara crear aplicaciones Web con Python aprende otros lenguajes como HTML y CSS en este mismo curso. Luego puedes crear tus aplicaciones web usando herramientas de desarrollo de Python, como Flask o Django y crear aplicaciones web completas.\nIntroducción a Python\nIniciar aprendiendo este lenguaje de programación aprendiendo las bases, inicia desde cero conociendo los fundamentos de este lenguaje, viendo los siguientes temas.\nInteractúa con intérprete de Python\nTipos de datos y variables\nOperadores en Python\nEstructuras de control\nColecciones de datos\nFunciones en\nPython Programación Orientada a Objetos\nAdéntrate en el paradigma de Programación Orientada a Objetos con Python, Estructura programas en Python utilizando los conceptos de la Programación Orientada a Objetos. Comprende cómo traducir elementos de entorno en elementos de una programa, aprende a escribir algoritmos en Python, analiza sus comportamientos antes de datos.\n¿Qué es programación orientada a objetos?\nClases y Objetos •\nHerencia y Encapsulamiento\nPolimorfismo y Abstracción\nManejo de Errores\nPersistencia de Datos\nAprende temas avanzados sobre módulos, paquetes y sobre persistencia de datos, guarda información que persista como en un archivo o base de datos con SQLite. Crear un interfaz de usuario usando Tkinter.\n¿Qué es Persistencia de datos?\nEntorno de Trabajo\nModularizar Ían y Paquetes\nManejo de Ficheros\nTkinter con SQLite - Crear una aplicación para Escritorio\n\n\nAprende HTML y CSS\nPara crear aplicaciones Web con Python necesitamos conocer lenguajes de HTML y CSS, no necesariamente tenemos que ser un pros con HTML y CSS, pero es bueno conocer lo básico. En este curso aprenderás lo necesario de estos lenguajes de marcado y de estilos.\nLenguaje HTML\n¿Qué es HTML?\nEtiquetas base de HTML\nFormularios\nLenguaje CSS\nCómo agregar estilos\nCrea una página web\nDiseño responsivo\nProyecto- Blog Personal\nMicro-Framework Flask\nAprende Flask micro-framework de Python para desarrollar tus primeras aplicaciones Web con Python. Aprende las principales funcionalidades de Flask. Desarrolla tu primer proyecto web, crear sistemas de Log, persiste datos de tu usuario en Base de datos como MySQL. Maneja templates, crea tus rutas y despliega tu aplicación.\nProgramación Web con Python y Django\nEn esta parte del curso conocerás el framework de Python más popular para desarrollo web: Django. Aprende sobre la estructura de un proyecto, sus archivos más importantes y cómo desarrollar cada una de ellas.\nDar los primeros pasos en el desarrollo Back-end con Python\nCrea desde cero tu primer aplicación web\nAprende a estructurar un proyecto en este Framework\nConoce Django y Ubicarlo en el ecosistema de Python\nComencemos",
      "target_audience": [
        "Dirigido a todo tipo de persona que tenga interés en comenzar a programar en PYTHON"
      ]
    },
    {
      "title": "C / C++ Programlama Dili, Sıfırdan Profesyonelliğe Adım Atın",
      "url": "https://www.udemy.com/course/algoritmalar-ile-c-ve-cpp-programlama-egitimi/",
      "bio": "Yeni Programlamaya Başlayanlar için C ve C++ Programlama Eğitimi, Algoritma ile Programlama Eğitimi, Örnek Sorular",
      "objectives": [
        "C ve C++ Programlama Eğitimi",
        "Bir Problemi Çözmek İçin C ve C++ Kullanır.",
        "Programlama Temelleri",
        "Programlamaya İlişkin Kavramları Öğrenir",
        "C ve C++ Programlama Mantığı",
        "C ve C++ İle Algoritma Eğitimi",
        "Programlama icin gereken yontem ve teknikler",
        "C Programlama Dili",
        "C++ Programlama Dili",
        "Bilgisayar Programlama",
        "Yazılıma Giriş",
        "Bilgisayar Programcılığı"
      ],
      "course_content": {},
      "requirements": [
        "Bilgisayar Kullanabilme",
        "Temel Algoritma Bilgisi",
        "Öğrenmeye Olan İstek"
      ],
      "description": "Teknolojinin gelişmesi ile programlamaya olan ihtiyaç her geçen gün artmaktadır. Elektronik cihazların programlanabilmesi, web teknolojileri , mobil programlama, oyun programlama gibi birçok alanda programlama becerisi karşımıza çıkmaktadır. Özellikle programlamaya yeni başlayan kişilerin yaptığı en büyük hatalardan birisi öğrendiğini düşündüğü kodları aslında ezberlediğini görüyoruz. Oysa ki programlama da yöntem ve teknikler kesinlikle ezberlenmez. Sadece programlama dilinin komutları, fonksiyon ve dile ait özel isimleri ezberlenir. Tüm programlama dillerinin ortak özellikleri bulunmaktadır. Örneğin, değişkenler, koşullu ifadeler(if, switch), döngüler(for, while), diziler(array), OOP, ve fonksiyonlar tüm programlama dillerinde mevcuttur. Ve programlar bu yapılar sayesinde oluşturulur. Bir programlama dili bilen kişi bütün programlama dillerine çok çabuk adapte olabilmektedir. Yeni dili öğrenirken sadece sözdizimi(syntax) yapısı öğrenilir. Ama bir programlama dili öğrenmeden önce programlama mantığının(algoritma) öğrenilmesi gerekir. Yazılım öğrenmeye yeni başlayacak kişilerin doğrudan bir programlama dilini ile başlamaları aslında çok yanlıştır. Programlama eğitimi aşamasında problemleri, bilgisayarın anlayacağı şekilde çözebilmesi için izlemesi gereken yöntemi öğrenmesi her şeyden daha önemlidir. Günümüz programlama dillerine baktığımız zaman birçok dilin C ve C++ dan türetildiğini görüyoruz( javascript, php, python, java,..). Programlama eğitimi ve algoritma öğrenilmesi açısından en uygun dil c ve c++ dır. Bu nedenle birçok meslek lisesi, yüksekokul ve üniversitede programlamaya giriş dersinde ağırlıklı olarak c ve c++ dili gösterilmektedir. Bu kursa başlamadan önce mutlaka algoritma dersi almanızı tavsiye ederim. Derslerde görüşmek üzere hepinize başarılar dilerim.",
      "target_audience": [
        "Meslek Lisesi Yazılım Bölümü Öğrencileri",
        "Yüksekokul Bilgisayar Programcılığı Öğrencileri",
        "Bilgisayar Mühendisliği Öğrencileri",
        "Yazılım Mühendisliği Öğrencileri",
        "Programlama Öğrenmek İsteyenler"
      ]
    },
    {
      "title": "Temel Python : 46 saat, 210 Soru, 5 Proje, 5 Ödev, 2 Sınav",
      "url": "https://www.udemy.com/course/temel-python/",
      "bio": "0'dan İleri Seviyeye; uygulama, quiz, kodlama egzersizi, testler, projeler, ödevler, sınavlarla Python Programlama öğren",
      "objectives": [
        "Programlama temellerini ve Kodlama Algoritmalarını çok sağlam bir şekilde öğreneceksiniz.",
        "Python'u Sıfırdan İleri Seviyeye kadar detaylı olarak öğrenmiş olacaksınız.",
        "17 Quiz ve 170 Kodlama Sorusu ile Python'un tüm temel konuları üzerinde alıştırma yapacaksınız.",
        "Python ile 5 adet Proje ve bunlarla bağlantılı 5 adet Ödev yapacaksınız.",
        "Ara Sınav ve Final Sınavı olarak 20'şer soruluk iki Python testi çözeceksiniz.",
        "Python modülleri ve paketlerini öğrenecek bunları kullanacaksınız.",
        "Anaconda ve PyCharm ile Python programları geliştireceksiniz.",
        "tkinter ile GUI uygulaması yapacaksınız.",
        "Genel Programlama, Veri Bilimi ve Yapay Zeka uygulamaları için gereken bütün Python becerilerini edineceksiniz.",
        "Python Kariyeriniz için gerekli olan tüm temel bilgileri, önce teori sonra da detaylı pratik yaparak edineceksiniz."
      ],
      "course_content": {
        "Genel Bakış": [
          "Giriş",
          "Kurs İçeriği",
          "Neden Python?",
          "Siz ve Bu Kurs"
        ],
        "Kurulumlar": [
          "Notion Kurulumu",
          "Anaconda Kurulumu",
          "Jupyter Lab Başlarken Şifre Sorarsa",
          "Jupyter Notebook Temelleri",
          "Python'da Virtual Environment Yapısı",
          "Direkt Jupyter Lab Açmak"
        ],
        "İlk Program": [
          "Merhaba Dünya (Hello World)",
          "Aritmetik İşlemler",
          "Değerler ve Tipler",
          "[10 Soru] QUIZ - İlk Program",
          "QUIZ - İlk Program - Çözümü",
          "Doğru/Yanlış - İlk Program",
          "Online Kodlama - İlk Program"
        ],
        "Değişkenler": [
          "Değişken Nedir?",
          "Doğru/Yanlış - Değişken Nedir?",
          "Değişken İsimleri",
          "Doğru/Yanlış - Değişken İsimleri",
          "Python Veri Tipleri",
          "Doğru/Yanlış - Python Veri Tipleri",
          "Python'da Yorum Satırı",
          "Doğru/Yanlış - Python'da Yorum Satırı",
          "Numerik Operasyonlar",
          "Doğru/Yanlış - Numerik Operasyonlar",
          "String (Metin) İşlemleri",
          "Doğru/Yanlış - String İşlemleri",
          "Anahtar Kelimeler (Keywords)",
          "Doğru/Yanlış - Anahtar Kelimeler",
          "[10 Soru] QUIZ - Değişkenler",
          "QUIZ - Değişkenler - Çözümü",
          "Online Kodlama - Değişkenler"
        ],
        "Fonksiyonlar I": [
          "Fonksiyon, Fonksiyon, Fonksiyon",
          "Doğru/Yanlış - Fonksiyon, Fonksiyon, Fonksiyon",
          "Matematik Fonksiyonlar (Math)",
          "Doğru/Yanlış - Matematik Fonksiyonlar",
          "Fonksiyonların Birleşimi - 1. Kısım",
          "Fonksiyonların Birleşimi - 2. Kısım",
          "Doğru/Yanlış - Fonksiyonların Birleşimi",
          "Parametreler (Argümanlar)",
          "Doğru/Yanlış - Parametreler",
          "Scope (Yaşam Alanı) Kavramı",
          "Doğru/Yanlış - Scope (Yaşam Alanı)",
          "Fonksiyonun Değer Dönmesi (return)",
          "Doğru/Yanlış - Fonksiyonun Değer Dönmesi (return)",
          "Docstring - Fonksiyonun Dokümantasyonu",
          "Doğru/Yanlış - Docstring",
          "[10 Soru] QUIZ - Fonksiyonlar I",
          "QUIZ - Fonksiyonlar I - Çözümü - 1. Bölüm",
          "QUIZ - Fonksiyonlar I - Çözümü - 2. Bölüm",
          "Online Kodlama - Fonksiyonlar I"
        ],
        "Proje 1 - Fonksiyonlar": [
          "Proje - Kaplumbağa Modülü - 1. Kısım",
          "Proje - Kaplumbağa Modülü - 2. Kısım",
          "Proje - Kaplumbağa Modülü - 3. Kısım",
          "Proje - Kaplumbağa Modülü - 4. Kısım",
          "Proje - Kaplumbağa Modülü - 5. Kısım"
        ],
        "Ödev 1 - Fonksiyonlar": [
          "Ödev 1 - Fonksiyonlar",
          "Kaplumbağa Modülü"
        ],
        "Şartlı İfadeler": [
          "Şartlı İfade Nedir?",
          "Doğru/Yanlış - Şartlı İfade Nedir?",
          "if Yapısı",
          "Doğru/Yanlış - if Yapısı",
          "else Yapısı",
          "Doğru/Yanlış - else Yapısı",
          "elif Yapısı - 1. Kısım",
          "elif Yapısı - 2. Kısım",
          "Doğru/Yanlış - elif Yapısı",
          "İç-İçe (Nested) Şartlı İfadeler",
          "Doğru/Yanlış - İç-İçe Şartlı İfadler",
          "Recursion (Kendi Kendini Çağırmak)",
          "Doğru/Yanlış - Recursion",
          "[10 Soru] QUIZ - Şartlı İfadeler",
          "QUIZ - Şartlı İfadeler - Çözümü - 1. Kısım",
          "QUIZ - Şartlı İfadeler - Çözümü - 2. Kısım",
          "QUIZ - Şartlı İfadeler - Çözümü - 3. Kısım",
          "QUIZ - Şartlı İfadeler - Çözümü - 4. Kısım"
        ],
        "Fonksiyonlar II": [
          "Dönüş Değeri",
          "Adım Adım Geliştirme",
          "Kompozisyon - Fonkiyonların Beraber Kullanımı",
          "Fonksiyonlar 1. Sınıf Vatandaştır",
          "Parametre sayısı önceden bilinmiyorsa: *args",
          "Lambda Fonksiyonu: lambda",
          "Fonksiyon dönen fonksiyon",
          "İç İçe Fonksiyonlar - Nested Functions",
          "Değiştirilebilir x Değiştirilemez (Mutable vs. Immutable)",
          "Pass by Value Pass by Reference",
          "[10 Soru] QUIZ - Fonksiyonlar II",
          "QUIZ - Fonksiyonlar II - Çözümü - 1. Kısım",
          "QUIZ - Fonksiyonlar II - Çözümü - 2. Kısım",
          "QUIZ - Fonksiyonlar II - Çözümü - 3. Kısım"
        ],
        "Döngüler": [
          "While Döngüsü - 1. Kısım",
          "While Döngüsü - 2. Kısım",
          "For Döngüsü",
          "For Döngüsü ile Metinler (String) Üzerinde Dönme",
          "Len Kavramı",
          "Enumerate Kavramı",
          "Döngü içinde Döngü (Nested Loops)",
          "Döngüden Çıkış: break",
          "Döngünün Bir Sonraki Adımına Atla: continue",
          "For-Else Yapısı",
          "[10 Soru] QUIZ - Döngüler",
          "QUIZ - Döngüler - Çözümü - 1. Kısım",
          "QUIZ - Döngüler - Çözümü - 2. Kısım",
          "QUIZ - Döngüler - Çözümü - 3. Kısım"
        ]
      },
      "requirements": [
        "Temel seviye bilgisayar bilgisi yeterlidir.",
        "Herhangi bir Programlama bilgisi gerekmiyor, yeter ki öğrenmeye istekli olun."
      ],
      "description": "Temel Python Kursu, Sıfırdan başlayarak İleri Seviyeye kadar Python'u derinlemesine işlemektedir.\nPython'un mutlak sıfır noktası yani 'HelloWorld' ile başlayacak ve OOP'nin (Nesne Tabanlı Programlama) sonuna kadar işleyeceğiz.\nTam olarak 46 saatlik, dolu dolu bir içerik sizi bekliyor.\nHem derinlemesine teorik bilgi edinecek, hem de her konuyu, defalarca pratik yapma şansı bulacaksınız.\n\n\nTeori:\nHer konuda öncelikle o konunun tüm teorik detaylarını örneklerle öğreneceksiniz.\n\n\nTest Soruları (42 Soru):\nAlt konu sonlarında, o andaki video ile ilgili Test Sorularımız olacak.\n\n\nKodlama Soruları (170 Soru):\nHer konudan sonra 10 Soruluk bir Kodlama Egzersizimiz (Quiz) olacak.\nSiz önce bu soruları kendiniz çözmeye çalışacaksınız.\nArdından beraber çözeceğiz. Birden fazla yöntemle, detaylı olarak çözümler göreceksiniz.\n\n\nProjeler (5 Proje):\nBelirli aralıklarla Projeler yapacağız.\nBu Projeler, gerçek hayat uygulamaları olacak ve bu sayede Python kavramlarının gerçek problemlere nasıl uygulandığını göreceksiniz.\n\n\nÖdevler (5 Ödev):\nHer Projeden sonra bir tane Ödeviniz olacak.\nÖdevlerle öğrendiklerinizi kendi başınıza pratik etme şansı bulacaksınız.\nAraştıracak, düşünecek, bazen zorlanacak, ilgili videoyu belki bir daha izleyeceksiniz ve aktif öğrenme safhasına geçeceksiniz.\n\n\nSınavlar (2 Sınav):\nEğitim içerisinde 2 adet sınavımız var: Ara Sınav ve Final Sınavı.\nBu sınavlar, 20 soruluk test olacak ve süreli olacaklar.\nOldukça keyifli sorular ile Python'u gerçekte ne kadar öğrendiğinizi test edeceksiniz.\n\n\nÇalışma Dokümanları ve Kodlar:\nKurs boyunca işlediğimiz tüm konuların, çözdüğümüz tüm soruların ve yaptığımız projelerin bütün çalışma dokümanlarına ve kod dosyalarına sahip olacaksınız.\n\n\nKurs boyunca veya kurstan sonra bana istediğiniz her soruyu sorabilir,  her konuda danışabilirsiniz.\nGördüğünüz gibi ciddi bir emek ve titizlikle hazırlandı bu eğitim.\n\n\nEğer siz de, Python'u, alıştırma yaparak gerçekten öğrenmek istiyorsanız, haydi bize katılın...",
      "target_audience": [
        "Yazılım Geliştirme ve Programlamaya yeni adım atan",
        "Python öğrenmeye yeni başlayan",
        "Python Temellerini derinlemesine öğrenmek isteyen",
        "Python'u Projeler, Ödevler, Sorular, Quizler ve Test'ler ile uygulayarak öğrenmek isteyen",
        "Veri Bilimi, Yapay Zeka, Makine Öğrenmesi ve Derin Öğrenme için gerekli Python becerilerine sahip olmak isteyen",
        "Python'da kariyer hedefleyen herkes için uygundur."
      ]
    },
    {
      "title": "Universidad de Lógica de Programación - Aprende 7 Lenguajes!",
      "url": "https://www.udemy.com/course/universidad-de-logica-de-programacion-python-java-javascript-c-pseint/",
      "bio": "+ 55 hrs - Aprende la Lógica de Programación con 7 Lenguajes: PSeInt, Python, Java, JavaScript, C, C++ y C#",
      "objectives": [
        "Aprender la Lógica de Programación desde Cero y de una vez por todas!",
        "Aprender a aplicar la Lógica de Programación en los Lenguajes más Populares como son Python, Java, JavaScript, C, C++ y C#.",
        "Aprender a trabajar con Variables y Tipos de Datos en PSeInt, Python, Java, JavaScript, C, C++ y C#.",
        "Aprender a trabajar con Sentencias If-Else con PSeInt, Python, Java, JavaScript, C, C++ y C#.",
        "Aprender Sentencias de Repetición While y For en PSeInt, Python, Java, JavaScript, C, C++ y C#.",
        "Aprender y aplicar las Funciones en PSeInt, Python, Java, JavaScript, C, C++ y C#.",
        "Aprender Arreglos en PSeInt, Python, Java, JavaScript, C, C++ y C#.",
        "Aprender Matrices en PSeInt, Python, Java, JavaScript, C, C++ y C#.",
        "Practicas con muchos ejercicios cada tema en PSeInt, Python, Java, JavaScript, C, C++ y C#."
      ],
      "course_content": {
        "Bienvenidos a la Universidad de Lógica de Programación": [
          "Bienvenidos a la Universidad de Lógica de Programación"
        ],
        "Introducción a la Lógica de Programación": [
          "Habilidades de un buen Programador!",
          "Tipos de Lenguajes de Programación",
          "Lenguajes de Programación que Estudiaremos en el Curso!",
          "Definición de Algoritmo, Pseudocódigo y Diagrama de Flujo",
          "Herramientas que vamos a utilizar en el Curso!",
          "Ejercicio Propuesto - Acerca de mi",
          "Solución Ejercicio - Acerca de mi"
        ],
        "Variables y Tipos de Datos": [
          "Variables y Tipos de Datos",
          "Imprimir Variables en PSeInt",
          "Más detalles al trabajar con Variables",
          "Introducir Datos desde la Consola",
          "Ejecución en Detalle Paso a Paso",
          "Reglas de Nombres de Variables (Identificadores)",
          "Tipos de Datos en PSeInt",
          "Ejercicio Propuesto - Tipos de Datos",
          "Solución Ejercicio - Tipos de Datos",
          "Manejo de Constantes",
          "Tipado Dinámico de Variables"
        ],
        "Uso de Operadores": [
          "Operadores Aritméticos",
          "Operadores Relacionales",
          "Operador Lógico Y (AND)",
          "Operador Lógico O (OR)",
          "Operador Lógico NO (NOT)",
          "Ejercicio Validación Dentro de Rango",
          "Precedencia de Operadores",
          "Prededencia de Operadores - parte 2",
          "Ejercicio Propuesto - Operadores Aritméticos",
          "Solución Ejercicio - Operadores Aritméticos",
          "Ejercicio Propuesto - Calcular Área y Perímetro Rectángulo",
          "Solución Ejercicio - Calcular Área y Perímetro Rectángulo",
          "Ejercicio Propuesto - Cálculo del Precio de un Terreno",
          "Solución Ejercicio - Cálculo del Precio de un Terreno",
          "Ejercicio Propuesto - Calcular Área y Perímetro de un Círculo",
          "Solución Ejercicio - Cálculo de Área y Perímetro de un Círculo",
          "Ejercicio Propuesto - Intercambio de Valores",
          "Solución Ejercicio - Intercambio de Valores",
          "Ejercicio Propuesto - Indicar si es Número de Dos Dígitos",
          "Solución Ejercicio - Indicar si es Número de Dos Dígitos",
          "Ejercicio Propuesto - Opciones de un Menú",
          "Solución Ejercicio - Opciones de un Menú"
        ],
        "Sentencia Si No": [
          "Sentencia Si",
          "Sentencia Si - SiNo",
          "Sentencia Si-Sino Anidada",
          "Ejercicio Propuesto - Mayor de Edad",
          "Solución Ejercicio - Mayor de Edad",
          "Ejercicio Operador Or - Asistir al Juego del Hijo",
          "Ejercicio Bloques Anidados Si-NO - Dia de la Semana",
          "Ejercicio Estructura Segun - Dia de la Semana",
          "Ejercicio Propuesto - Menu de Operaciones",
          "Diagrama de Flujo - Ejercicio Menú de Operaciones",
          "Solución Ejercicio - Menú de Operaciones Aritméticas",
          "Ejercicio Propuesto - Mes / Estación del Año",
          "Solución Ejercicio - Mes / Estación del Año",
          "Ejercicio Propuesto - Etapas de la Vida",
          "Solución Ejercicio - Etapas de Vida",
          "Ejercicio Propuesto - Sistema de Calificaciones",
          "Solución Ejercicio - Sistema de Calificaciones",
          "Ejercicio Propuesto - Convertir Número a Texto",
          "Solución Ejercicio - Convertir de Número a Texto",
          "Ejercicio Propuesto - El Mayor de Dos Números",
          "Solución Ejercicio - El Mayor de Dos Números",
          "Solución Ejercicio - El Mayor de Tres Números",
          "Ejercicio Propuesto - Número Par e Impar",
          "Solución Ejercicio - Número Par e Impar"
        ],
        "Manejo de Ciclos": [
          "Manejo de Ciclos",
          "Ejemplo Ciclo Mientras (While)",
          "Ciclo Mientras Paso a Paso",
          "Ejercicio Propuesto- Imprimir Números del 0 al 5",
          "Solución Ejercicio - Imprimir Números del 0 al 5 de Manera Ascendente",
          "Ejercicio Propuesto - Imprimir los Números del 5 al 1 en orden descendente",
          "Solución Ejercicio - Imprimir los Números del 5 al 1 en orden descendente",
          "Ciclo Repetir - Hasta",
          "Ejemplo Ciclo Repetir - Hasta",
          "Ejercicio Propuesto - Validar Número de Dos Dígitos",
          "Solución Ejercicio - Validar Dos Dígitos Positivos",
          "Ejemplo Validar Menú",
          "Solución Ejemplo - Validar Menú",
          "Ciclo Para (for)",
          "Ejemplo Ciclo Para",
          "Ejemplo Ciclo Para - Paso a Paso",
          "Ejemplo Ciclo Para - Incrementar del 1 al 10 de 3 en 3",
          "Ejercicio Propuesto - Imprimir 10 Números Pares e Impares",
          "Solución Ejercicio - Imprimir 10 Números Pares e Impares",
          "Ejercicio Propuesto - Sumar los primeros 5 Números Ciclo Para",
          "Solución Ejercicio - Sumar los Primeros 5 Números con Ciclo Para",
          "Solución Ejercicio - Sumar los Primeros 5 Números con Ciclo Mientras",
          "Ejercicio Propuesto - Multiplicación de los Primeros 5 Números",
          "Solución Ejercicio - Multiplicación de los Primeros 5 Números",
          "Ejercicio Propuesto - Multiplicar Números Pares e Impares del 1 al 6",
          "Solución Ejercicio - Multiplicar Números Pares e Impares del 1 al 6",
          "Ejercicio Propuesto - Factorial de un Número con Ciclos",
          "Solución Ejercicio - Factorial de un Número con Ciclo Mientras",
          "Solución Ejercicio - Factorial de un Número con Ciclo Para",
          "Ejercicio Propuesto - Serie Fibonacci con Ciclos",
          "Solución Ejercicio - Serie Fibonacci"
        ],
        "Manejo de Arreglos": [
          "Manejo de Arreglos",
          "Declaración de Arreglos",
          "Leer los Valores de un Arreglo",
          "Introducir Valores a un Arreglo",
          "Ejemplo - Introducir Valores a un Arreglos",
          "Ejecucion Paso a Paso - Introducir Valores a un Arreglo (Opcional)",
          "Ejemplo - Promedio de Calificaciones",
          "Ejercicio Propuesto - Serie de Fibonacci con Arreglos",
          "Solución Ejercicio - Serie de Fibonacci con Arreglos",
          "Ejercicio Propuesto - Calcular el Número Mayor y Menor en un Arreglo",
          "Tip (Ayuda) para Resolver el Ejercicio - Número Mayor y Menor en un Arreglo",
          "Solución Ejercicio - Número Mayor y Menor en un Arreglo",
          "Solución Ejercicio - Número Mayor y Menor en un Arreglo - parte 2",
          "Ejercicio Propuesto - Conteo Positivos, Negativos y Neutros en un Arreglo",
          "Tip (Ayuda) Ejercicio Conteo Positivos, Negativos y Neutros en un Arreglo",
          "Solución Ejercicio - Conteo Positivos, Negativos y Neutros en un Arreglo"
        ],
        "Manejo de Matrices": [
          "Manejo de Matrices",
          "Manejo de Matrices - parte 2",
          "Declaración y Llenado de una Matriz",
          "Acceder a los Elementos de una Matriz",
          "Iteración de una Matriz",
          "Ejecución Paso a Paso - Iterar una Matriz",
          "Introducir Valores a una Matriz",
          "Ejercicio Propuesto - Sumar la Diagonal de una Matriz",
          "Tip para Resolver Ejercicio - Sumar la Diagonal de una Matriz",
          "Solución Ejercicio - Sumar la Diagonal de una Matriz",
          "Ejercicio Propuesto - Sumar Renglones y Columnas de una Matriz",
          "Tip (Ayuda) - Ejercicio Sumar Renglones y Columnas de una Matriz",
          "Solución Ejercicio - Sumar Renglones y Columnas de una Matriz",
          "Solución Ejercicio - Sumar Renglones y Columnas de una Matriz - parte 2",
          "Ejercicio Propuesto - Sumar Pares e Impares en una Matriz",
          "Solución Ejercicio - Sumar Pares e Impares de una Matriz",
          "Ejercicio Propuesto - Imprimir una Matriz en Orden Inverso",
          "Tip (Ayuda) - Imprimir una Matriz en Orden Inverso",
          "Solución Ejercicio - Imprimir Matriz Orden Inverso",
          "Ejercicio Propuesto - Valor Mayor y Menor en una Matriz",
          "Ejercicio Resuelto - Valor Mayor y Menor en una Matriz"
        ],
        "Uso de Funciones": [
          "Uso de Funciones",
          "Sintaxis de una Función",
          "Declaración y Uso de una Función",
          "Diferencia entre Parámetros y Argumento en una Función",
          "Diferencia entre Función y Procedimiento",
          "Creación de un Procedimiento",
          "Ejemplo Función Sumar",
          "Manejo de la Memoria RAM",
          "Copia de la Referencia de la Memoria",
          "Analogía Lector Código de Barras vs Memoria RAM",
          "Explicación de Paso por Valor",
          "Ejercicio Paso por Valor",
          "Explicación Paso por Referencia",
          "Ejercicio Paso por Referencia",
          "Diferencias entre Paso por Valor y Paso por Referencia",
          "Paso por Referencia entre Arreglos",
          "Tipos de Datos y Paso Por Valor o Por Referencia",
          "Alcance de Variables",
          "Ejemplo de Refactorización usando Funciones y Matrices",
          "Solución Ejemplo Uso de Funciones y Matrices",
          "Ejecución Ejemplo Funciones y Matrices",
          "Refactorizacion Ejemplo Funciones y Matrices - parte 1",
          "Refactorizacion Ejemplo Funciones y Matrices - parte 2",
          "Refactorizacion Ejemplo Funciones y Matrices - parte 3",
          "Funciones Recursivas",
          "Manejo Memoria en Funciones Recursivas",
          "Ejemplo Función Recursiva (Imprimir 1 al 5)",
          "Ejecución Paso a Paso - Función Recursiva (Imprimir 1 al 5)",
          "Explicación Factorial de un Número con Recursividad",
          "Algoritmo Factorial de un Número con Recursividad",
          "Ejemplo Factorial de un Número con Recursividad",
          "Ejecución Paso a Paso Factorial Número con Recursividad",
          "Ejercicio Propuesto - Cálculo Potencia de un Número con Recursividad",
          "Solución Ejercicio - Potencia de un Número con Recursividad",
          "Ejecución Paso a Paso - Potencia de un Número con Recursividad"
        ]
      },
      "requirements": [
        "No se necesita ningún tipo de experiencia, todo lo aprenderás en este curso de Universidad de Lógica de Programación. Iniciamos absolutamente desde Cero!"
      ],
      "description": "Con más de 55 horas de video, en tu curso de Universidad de Fundamentos y Lógica de Programación, especial para principiantes, aprenderás los Fundamentos y la Lógica de Programación en  7 Lenguajes de Programación del Mundo Real, utlizando las herramientas más inovadoras al día de hoy (PSeInt). Además, veremos muchisimos ejercicios para que todo quede absolutamente claro.\nUna vez aprendida los Fundamentos y la Lógica de Programación en PSeInt, pondrás en práctica todos tus conocimientos en los lenguajes de programación más populares al día de hoy, como son C, C++, JavaScript, Python, Java y C#.\nEl temario del curso es bastante extenso, pero el resumen es este:\nIntroducción a la Lógica de Programación con PSeInt:\nVariables, Identificadores y Tipos de Datos con PSeInt\nSentencias de Control If-Else con PSeInt\nSentencias Iterativas. Ciclos While, Do-While y For con PSeInt\nDeclaración y uso de Funciones con PSeInt\nDeclaración y uso de Arreglos con PSeInt\nDeclaración y uso de Matrices con PSeInt\nLógica de Programación con C:\nVariables, Identificadores y Tipos de Datos con C\nSentencias de Control If-Else con C\nSentencias Iterativas. Ciclos While, Do-While y For con C\nDeclaración y uso de Funciones con C\nDeclaración y uso de Arreglos con C\nDeclaración y uso de Matrices con C\nLógica de Programación con C++:\nVariables, Identificadores y Tipos de Datos con C++\nSentencias de Control If-Else con C++\nSentencias Iterativas. Ciclos While, Do-While y For con C++\nDeclaración y uso de Funciones con C++\nDeclaración y uso de Arreglos con C++\nDeclaración y uso de Matrices con C++\nLógica de Programación con JavaScript:\nVariables, Identificadores y Tipos de Datos con JavaScript\nSentencias de Control If-Else con Java\nSentencias Iterativas. Ciclos While, Do-While y For con Java\nDeclaración y uso de Funciones con Java\nDeclaración y uso de Arreglos con Java\nDeclaración y uso de Matrices con Java\nLógica de Programación con Python:\nVariables, Identificadores y Tipos de Datos con Python\nSentencias de Control If-Else con Python\nSentencias Iterativas. Ciclos While, Do-While y For con Python\nDeclaración y uso de Funciones con Python\nDeclaración y uso de Arreglos con Python\nDeclaración y uso de Matrices con Python\nLógica de Programación con Java:\nVariables, Identificadores y Tipos de Datos con Java\nSentencias de Control If-Else con Java\nSentencias Iterativas. Ciclos While, Do-While y For con Java\nDeclaración y uso de Funciones con Java\nDeclaración y uso de Arreglos con Java\nDeclaración y uso de Matrices con Java\nLógica de Programación con C#:\nVariables, Identificadores y Tipos de Datos con C#\nSentencias de Control If-Else con C#\nSentencias Iterativas. Ciclos While, Do-While y For con C#\nDeclaración y uso de Funciones con C#\nDeclaración y uso de Arreglos con C#\nDeclaración y uso de Matrices con C#\nAsí que como puedes ver, este es el curso más completo para aprender la Lógica de Programación desde Cero y con los lenguajes de programación más importantes al día de hoy, como son PSeInt, C, C++, JavaScript, Python, Java y C#.\nTe esperamos dentro del curso.\nTu amigo e Instructor\nIng. Ubaldo Acosta\nFundador de Global Mentoring",
      "target_audience": [
        "Desarrolladores, programadores, interasados en crear Software, Aplicaciones, Aprender Algoritmos, Lógica de Programación, y poner en práctica todo esto en PSeInt, Python, Java, JavaScript, C, C++ y C#.",
        "Aprender desde cero los lenguajes más populares al día de hoy. Python, Java, JavaScript, C, C++ y C#."
      ]
    },
    {
      "title": "C# para iniciantes - Crie 4 projetos",
      "url": "https://www.udemy.com/course/csharp-para-iniciantes/",
      "bio": "Domine os fundamentos de C# e aprenda a criar 4 projetos, Dê seu primeiro passo para se tornar um grande programador!",
      "objectives": [
        "Aprenda os fundamentos de C# e .NET",
        "Aprenda Orientação a Objetos",
        "Aprenda a desenvolver 4 projetos práticos utilizando C#",
        "Entre em contato com a grande maioria dos recursos da linguagem C#",
        "Aprenda a manipular arquivos",
        "Aprenda dicas e truques para se tornar um grande programador"
      ],
      "course_content": {
        "Introdução": [
          "O que é .NET e o que é possível fazer com C#",
          "Instalação do .NET Framework",
          "Como tirar o melhor proveito do curso",
          "Montando ambiente de desenvolvimento com visual studio",
          "Criando projeto C# no Visual Studio",
          "Entendendo estrutura de um programa C#",
          "Primeiro código C#",
          "Conceito de variável",
          "Declaração de variáveis e tipos",
          "Outras formas de declarar variáveis",
          "Exercícios de fixação 1 - Tipos",
          "Constantes",
          "Capturar entrada do usuário",
          "Operadores aritméticos",
          "Condicionais - Teoria",
          "Condicionais na prática",
          "Exercícios de fixação - Condicionais",
          "Operadores lógicos teoria",
          "Operadores lógicos na prática",
          "Funções",
          "Retorno de funções",
          "Exercícios de fixação - Funções",
          "Arrays",
          "Switch",
          "Enum",
          "Enum e switch para criação de menus",
          "While",
          "Do While",
          "Foreach",
          "For",
          "Escopo",
          "Exercícios de fixação - Repetição"
        ],
        "[Projeto #01] - Calculadora completa no CMD": [
          "Iniciando projeto e construindo menu",
          "Menu em loop",
          "Soma",
          "Outras operações",
          "Raiz e potência",
          "Distribuição do programa"
        ],
        "Structs - Criando tipos customizados": [
          "Introdução e teoria",
          "Structs na prática",
          "Construtor",
          "Funções em structs"
        ],
        "Listas": [
          "Introdução",
          "Criação de listas e NULL",
          "Remoção de elementos",
          "Filtragem e busca"
        ],
        "Manipulação de arquivos": [
          "Introdução e teoria",
          "Escrita de arquivos de texto",
          "Leitura de arquivos de texto",
          "Escrita de arquivos binários",
          "Leitura de arquivos binários"
        ],
        "[Projeto #02] Gestor de clientes no CMD": [
          "Menu",
          "Tipo principal",
          "Adição de clientes",
          "Listagem",
          "Persistência",
          "Deleção e finalização"
        ],
        "Programação orientada a objetos": [
          "Introdução",
          "Classificação",
          "Abstração",
          "Da cabeça para o papel",
          "Exercícios de fixação - Abstração",
          "Classe Vs. Objeto",
          "Static",
          "Construtor",
          "Encapsulamento",
          "Herança - Teoria",
          "Herança na prática",
          "Protected",
          "Construtores em herança",
          "Polimorfismo na herança",
          "Polimorfismo de sobrecarga",
          "Polimorfismo de sobreposição",
          "Interface",
          "Classe abstrata",
          "Namespace",
          "Struct Vs. Objetos - Gerenciamento de memória"
        ],
        "[Projeto #03] Gestor de estoque orientado a objetos no CMD": [
          "Aviso e recomendação",
          "Introdução",
          "Menu",
          "Definindo tipos de produtos",
          "IEstoque",
          "Implementando método de exibição",
          "Cadastro de produtos",
          "Salvamento da lista de produtos",
          "Carregamento e resumo",
          "Remoção de produtos",
          "Entrada no estoque",
          "Saída do estoque"
        ],
        "[Projeto #04] Interagindo com a Internet com C# e HTTP": [
          "Introdução e protocolo HTTP",
          "Formato JSON",
          "Realizando requisição",
          "Instalando bibliotecas",
          "Convertendo JSON para objeto C#",
          "Requisição para dado único",
          "Finalização e recomendação",
          "Feliz ano novo"
        ]
      },
      "requirements": [
        "Para tirar o maior proveito do curso é preciso que você conheça o básico de Lógica de Programação.",
        "Um computador com Windows 7, ou Windows 8/8.1 ou Windows 10."
      ],
      "description": "C# é uma bela linguagem de programação que pode ser usada para criar qualquer tipo de software.\nC# é uma linguagem tão versátil, que com ela você consegue criar aplicativos móveis, jogos, sites e apps desktop.\nApós você dominar os conceitos de programação com C# e .NET Framework, você vai ter muitas opções de áreas para escolher. Você pode escolher criar aplicativos móveis ou aplicações web. Desde que você saiba os fundamentos da linguagem, é fácil criar qualquer coisa com C#.\nNeste curso, Victor Lima, fundador da escola Guia do Programador, vai te ensinar os fundamentos da programação com C# de uma maneira clara, sólida e passo-a-passo. Não só isso, como ele também vai te ensinar orientação a objetos e as melhores práticas e truques que vão te ajudar a se tornar um grande programador.\nCada módulo contém aulas em vídeo completamente planejadas para serem usadas em situações práticas, e vamos colocar os conhecimentos passados em prática desenvolvendo 4 projetos do zero com C#, resolvendo situações do mundo real na programação. Fazendo com que você desenvolva a forma de pensar de um programador.\nSe você quer ser um programador de sucesso, com um bom salário e a liberdade para escolher qualquer trabalho, você precisa aprender a pensar como um grande programador. E vai ser essa a habilidade que você vai desenvolver criando esses quatro projetos na prática.\nExistem muitos tutoriais gratuitos e vídeos que vão te ensinar o básico de C#. Mas se você deseja aprender C# da forma certa e se tornar um programador melhor com um futuro brilhante e muitas opções, este curso é para você.\nPara cada assunto abordado, você não vai aprender apenas o “que é” aquilo, mas também o “porquê” de usar aquilo, e “como” usar a determinada funcionalidade da forma certa. Durante as aulas você vai se deparar com erros comuns durante o desenvolvimento de um software C#, e o professor Victor Lima irá explicar estes erros em detalhes, e te mostrar como resolver eles.",
      "target_audience": [
        "Qualquer pessoa que quer aprender C# ou uma nova linguagem de programação",
        "Iniciantes em programação que querem aprender uma nova linguagem de programação, ou sua primeira linguagem."
      ]
    },
    {
      "title": "Sıfırdan Yazılım Mühendisi Olma Kursu",
      "url": "https://www.udemy.com/course/sfrdan-yazlm-muhendisi-olma-kursu/",
      "bio": "Python -- C -- C++ -- C# -- Yapay Zeka",
      "objectives": [
        "Python Programlama Dili",
        "C Programlama Dili",
        "C++ Programlama Dili",
        "C# Programlama Dili",
        "Yapay Zeka"
      ],
      "course_content": {
        "Giriş": [
          "Tanıtım"
        ],
        "Temel Bilgiler": [
          "Kod Nedir?",
          "IDE veya EGO Nedir?",
          "Bilgilendirme Videoları ( YouTube )"
        ],
        "Python": [
          "Nedir?",
          "Kurulumlar",
          "Ayarlar",
          "Temel Veri Tipleri",
          "Ekrana Çıktı Çıkartmak",
          "Kullanıcıdan Veri Almak",
          "Koşula Bağlı İşlem",
          "Operatörler",
          "Döngüler",
          "Fonksiyonlar",
          "String Biçimlendirme",
          "Kaçış Dizileri",
          "Liste",
          "Kütüphane Uygulaması",
          "Öğelere Erişim",
          "Sözlük Veri Tipi",
          "Demet Veri Tipi",
          "Demet vs Liste",
          "Metot Nedir?",
          "Kümeler",
          "Liste Metotları",
          "Demet Metotları",
          "Kütüphane Uygulaması - 2",
          "Sözlük Metotları",
          "Rehber Uygulaması",
          "Hata Yakalama",
          "Hata Oluşturma",
          "String Öğelere Erişmek",
          "String Metotlar",
          "Binary Nedir?",
          "Sayı Metotları",
          "Aritmetik Fonksiyonlar",
          "Dosya Oluşturma",
          "Dosya Yazma ve Okuma",
          "Dosya Yazma ve Okuma Plus",
          "Restaurant Uygulaması",
          "Basit Etkili Fonksiyon Oluşturma (Lambda)",
          "Fonksiyon İçinde Fonksiyon (özyineleme)",
          "Modül Nedir? (OS Modülü)",
          "Modül Oluşturalım",
          "Time Modülü",
          "Zar Atma Oyunu (Random Modülü)",
          "Nesne Tabanlı Programlama Giriş",
          "Sınıf Oluşturalım",
          "Sınıf Nitelikleri",
          "Savaş Oyunu Plus",
          "Banka Uygulaması",
          "Miras Alma",
          "SQLite3 Veri Tabanı"
        ],
        "Python ile Whatsapp Bot": [
          "Tanıtım",
          "Kurulum",
          "Çalış Köle ( İstediğimizi Yapsın )",
          "Bilgilendir Beni Köle ( Mail Gönderme )",
          "Çevrimiçi mi Bakalım",
          "Kaç Saniye Çevrimiçi"
        ],
        "Python ile İnstagram Bot": [
          "Kurulum",
          "Otomatik Giriş",
          "Otomatik Çıkış",
          "Takip Ettirmek",
          "Beğeni Yaptırmak",
          "Yorum Attırmak",
          "Birden Fazla Hesapla Yapmak",
          "Gizli Çalıştırmak"
        ],
        "C": [
          "Kurulumlar",
          "Genel Kurallar ve Giriş",
          "Genel Kurallar ve Veri Tipleri",
          "Sabitler ve İşleçler",
          "Koşullar ve Döngüler",
          "Pointer ve Diziler",
          "Katar ve Struct",
          "Union ve Dosya Boyutu Yönetimi",
          "Dosya İşlemleri ve Ön İşlemciler",
          "Veri Tipi Dönüşümü ve Fonksiyon",
          "Grafik"
        ],
        "C++": [
          "Kurulumlar",
          "Giriş",
          "Temeller",
          "Koşullar",
          "Döngüler",
          "İç içe döngüler",
          "Fonksiyonlar",
          "Diziler",
          "Göstericiler",
          "Dizgiler",
          "Dosya İşlemleri"
        ],
        "C#": [
          "Kurulum",
          "Temel Araçlar",
          "Değişkenler",
          "Koşullar",
          "Döngüler",
          "Diziler",
          "Fonksiyonlar",
          "Sınıf",
          "Araçlar",
          "Yapılar",
          "Veri Tabanı SQL -1",
          "Veri Tabanı SQL -2",
          "Veri Tabanı SQL -3"
        ],
        "Yapay Zeka": [
          "Kurulumlar",
          "Teorik Anlatım",
          "Uygulamalı Anlatım"
        ]
      },
      "requirements": [
        "64 bit işletim sistemi",
        "Herhangi bir bilgi gereksinimi yoktur"
      ],
      "description": "Bu vermiş olduğumuz kurs tek olup bütün seviyeleri içerisinde barındırmaktadır.\nSıfırdan yazılıma adım atıyoruz ve bir bir deneyerek gidiyoruz, nereden başlayacağını bilmeyen o kadar genç meraklı insan var ki biz de bu kursu açma gereği duyduk ve uygulamaya koyduk.\nHerhangi bir dil bilmenize gerek yok sadece bu kursu izleyin sonunda Python , C , C++ , C# ve Yapay Zeka  gibi çok önemli alanları  öğrenmiş ve yazılımcıların mantığı konusunda çok ileri seviyelere gelmiş olacaksınız.\nBir çok programlama dili nasıl öğrenilir hepsini rahatlıkla göreceksiniz :)\nHadi ne duruyorsunuz Başlayalım Öyleyse :)\n\n\n\n\n\n\n\n\n\n\n\n\nMerhaba,\nBen Battal Ankara'da doğdum, Ankara'da yaşamaktayım. Selçuk Üniversitesi Mühendislik Fakültesinden Mezunum. Udemy üzerinden 2018 yılından beri eğitimler vermekteyim. Bu süreçte bir çok tecrübe edinmiş bunların üzerine giderek kendimi daha da geliştirmiş bulunuyorum. Başta Cerrahpaşa Üniversite olmak üzere çeşitli üniversitelere seminer ve eğitimler verdim. Bir çok kurum ve kuruluşa teknik destek ve eğitim hizmetleri verdim. Güvenlik sebebiyle bunları ayrıntılı verememekteyim :) Konya'da özel olarak Etik Hacker ve Yazılım üzerine eğitimler vermekteyim. Eğitim verdiğim konulara merak salmış kişilerin hem hallerinden hem de dillerinden anladığım için bunu eğitimlerime yansıttım. Sonuçta bir zamanlar bende hiç bir şey bilmiyordum öğrenirken yaşadığım zorlukları sizler için yumuşatmış bulunuyorum :) Çok ciddi biri değilimdir çoğunlukla eğitimlerimde güler ve espriler yaparım :) Bilgiyi her yerde öğrenebilirsiniz ama bunu zevkli geçmesini her yerde sağlayamazsınız. İşte buda benim farkım :) Sizde benimle aynı düşünceye sahipseniz,\nBilgi, tecrübe ve güler yüzle birlikte o gelişimin kapısını birlikte aralayalım :)",
      "target_audience": [
        "Yazılıma yeni başlayanlar",
        "Birden fazla programlama dili öğrenmek isteyenler",
        "Yazılım mühendisi olmak isteyenler"
      ]
    },
    {
      "title": "たっぷりの練習問題を楽しみながら学ぶPython講座",
      "url": "https://www.udemy.com/course/python-hz/",
      "bio": "数多くの練習問題やサンプルコードを通して、実際のプログラミング能力を高めていくPython言語の入門講座",
      "objectives": [
        "Python言語の基本文法",
        "Python言語でのプログラミングのトレーニング",
        "Python言語である程度複雑なプログラムを作る方法",
        "Pythonで本格的なシステム開発を行うための基礎プログラミング能力"
      ],
      "course_content": {},
      "requirements": [
        "コンピュータの基礎知識",
        "プログラミングに必要なテキスト・エディタを操作する能力",
        "インターネットに接続可能なPC"
      ],
      "description": "この講座は、Python言語をこれから学びたいと考えている全ての人たちの講座です。\nプログラミングを学ぶためには、単に簡単な文法を学び、サンプルプログラムを写しているだけでは実力はつきません。\n\n\nそこで、この講座では可能な限りたくさんの練習問題やサンプルコードを用意し、\nそれらに触れながらPython言語を学ぶべるようにしています。\n\n\nこの講座の受講対象となるのは以下のような方々です。\n\n\n【対象】\n・これからプログラミングを学ぶ最初の言語としてPythonを選択したい。\n・一度Pythonの学習をしてみたが、入門書が難しすぎた（優しすぎた）。\n・すでにPython言語についてはある程度学んだが、高度なプログラムが作れない。\n・既に他の言語を学んでいるが、Python言語も学んでみたい。\n・Pythonを使ってゲームを作るための基礎的な実力を身につけたい。\n・人工知能や機械学習のプログラミングを始めるために、Python言語をあらかじめ学んでおきたい。\n\n\nこの講座では、開発環境としてAnacondaのSpyderを利用し、簡単なサンプルから複雑な処理まで一通り学習していきます。\n\n\n基本的な文法や、簡単なサンプルに触れながら、徐々にプログラミングの実力を培った後、\n最終的にポーカー ゲームのプログラムを作るところまで説明していきます。\n\n\nPythonに限らず、プログラミングを初めてみたい方は気軽にチャレンジしてみてください！",
      "target_audience": [
        "Pythonを学習したい人",
        "プログラミングの初心者でPython言語でプログラミングを学びたいと思っている人",
        "Python言語を使って人工知能や機械学習を学びたい人",
        "DjangoなどPython言語によるWebアプリケーションを作るためにPython言語を学びたい人",
        "一度Pythonのプログラミングを学習したがよくわからなかった人"
      ]
    },
    {
      "title": "Become a Java Programmer in Arabic",
      "url": "https://www.udemy.com/course/become-a-java-programmer-in-arabic/",
      "bio": "Learn Java Programming From Scratch",
      "objectives": [
        "Create a Complete desktop application using java language and connected with MYSQL database"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Tools"
        ],
        "Some Java Basics": [
          "Your First Program",
          "Errors Types",
          "Variables and Data Types",
          "Reading Data From User",
          "Mathematical Operators and Variable Casting",
          "Increment and Decrement and Shortcut Operators",
          "Order of Precedence",
          "Char Datatype",
          "Special Chars",
          "Example"
        ],
        "Decisions": [
          "Boolean Variables and Expression",
          "if else",
          "Multiple way if Statement",
          "Logical Operators",
          "Example",
          "Switch"
        ],
        "Loops": [
          "While Loop",
          "Do Loop",
          "For Loop",
          "Continue and Break Statement",
          "Example",
          "Nested Loops"
        ],
        "Methods": [
          "Method Part 1 - void Methods",
          "Method Part 2 - return Methods",
          "Example",
          "Recursion",
          "Method Overloading",
          "Math Class Build in Methods"
        ],
        "Arrays": [
          "One Dimensional Arrays Part 1",
          "One Dimensional Arrays Part 2",
          "Enhanced For Loop",
          "Two Dimensional Arrays"
        ],
        "String": [
          "String manipulation part 1",
          "String manipulation part 2"
        ],
        "Object Oriented Programming": [
          "What is OOP (Object Oriented Programming)?",
          "class implementation",
          "constructor",
          "overloading constructor",
          "this Reference",
          "static member",
          "generic class",
          "inhertance",
          "Example - part 1",
          "Example - part 2",
          "Overriding",
          "super keyword",
          "final keyword",
          "abstract class",
          "Interface"
        ],
        "Date Class": [
          "Date Class Constructors",
          "Date Methods",
          "Simple Date Format"
        ],
        "Exception Handling": [
          "What is Exception?",
          "Exception Handling - try, catch, finally keywords",
          "Exception Handling - throw, throws keywords",
          "Create New Exception Type"
        ]
      },
      "requirements": [
        "Nothing, The Course guides you from Scratch"
      ],
      "description": "This course for anyone  who want to be Java programmer from scratch, We will  start by discus all Java fundamentals and Object Oriented Programming principles then we will able to connect our application with MYSQL database and create GUI for our application.\nThe course is aimed at complete beginners and intermediate programmers. No previous programming experience is assumed!",
      "target_audience": [
        "Students who is intersted in Learning Java"
      ]
    },
    {
      "title": "C# Dersleri ile Programlama Temelleri | Visual Studio C#",
      "url": "https://www.udemy.com/course/programlamatemelleri/",
      "bio": "Visual Studio C# Console ve C# Form Dersleri kursu ile programlama öğrenin uygulamalar geliştirin. | Visual Studio 2022",
      "objectives": [
        "Programlama dillerinin temellerini oluşturan ortak konuları Visual Studio C# programlama dili üzerinden öğreneceksiniz.",
        "Eğitim sonunda programlama temellerini öğreneceğiniz için Java, Python, PHP gibi farklı programlama dillerine kolaylıkla adapte olacaksınız.",
        "Unity ile 3D, 2D oyunlar ve VR & AR uygulamaları geliştirmek için gerekli C# kodlama bilgilerine sahip olacaksınız.",
        "Yazılım geliştirme süreçlerinizi kolaylaştıran Nesne Tabanlı Programlama (OOP yani Object Oriented Programming) yöntemini anlatacağım."
      ],
      "course_content": {
        "Microsoft Visual Studio 2022 Kurulumu": [
          "Microsoft Visual Studio 2022 Sistem Gereksinimleri",
          "Microsoft Visual Studio 2022 Yükleyiciyi (Installer) Başlatma",
          "Microsoft Visual Studio 2022 Modül Tanıtımları",
          "Microsoft Visual Studio 2022 Kurulumu"
        ],
        "Microsoft Visual Studio 2019 Kurulumu ve Kullanımı": [
          "Microsoft Visual Studio 2019 Kurulumu",
          "Yeni Proje Oluşturma ve Kayıtlı Bir Projeyi Açma",
          "Dil Değiştirme",
          "Tema Değiştirme",
          "Hata Listesi (Error List) ve Çözüm Gezgini (Solution Explorer) Panelleri",
          "Pencerelerin Konumlandırılması"
        ],
        "Kod Düzenleyici (Code Editor) Ayarları": [
          "Intellisense Kavramı",
          "İsim Alanı, Sınıf ve Metot Yapısı",
          "Satır Numaraları Ekleme, Sözcük Kaydırma ve Çıktı Ekranı Ayarları"
        ],
        "C# Programlama Dilinde Değişkenler ve Sabitler": [
          "Değişken (Variable) Nedir ve Nasıl Tanımlanır",
          "Değişken Türleri ve Aralıkları",
          "Değişken İsimlendirme Kuralları + Quiz",
          "Değişken İsimlendirme Kuralları - Quiz Çözümleri",
          "Sabit Değerler (Constant Value)",
          "Makale 1: Değişkenler ve Veri Tipleri, Sabit Değerler (Constant Value)"
        ],
        "Ekrana Veri Yazdırma ve Klavyeden Veri Girişi İşlemleri": [
          "Ekrana Veri Yazdırma Yöntemleri",
          "Klavyeden Veri Girişi İşlemleri",
          "Şimdi Sıra Sizde - Quiz",
          "Şimdi Sıra Sizde Çözümler"
        ],
        "Değişkenlerde Tür Dönüşümleri": [
          "Değişkenlerde Bilinçsiz Tür Dönüşümleri",
          "Değişkenlerde Bilinçli Tür Dönüşümleri",
          "ToString() Yöntemi ile Değişkenlerde Tür Dönüşümü",
          "Convert() Yöntemi ile Değişkenlerde Tür Dönüşümü"
        ],
        "Operatörler": [
          "Operatör Türleri",
          "Aritmetiksel Operatörler",
          "Karşılaştırma Operatörleri",
          "Mantıksal Operatörler",
          "Atama ve İşlemli Atama Operatörleri"
        ],
        "If-Else ve If-Else If-Else Kontrol Yapıları": [
          "If-Else Kontrol Yapısı | Konu Anlatımı ve Örnekler",
          "If-Else Kontrol Yapısı | Örnek Uygulama",
          "If-Else Kontrol Yapısı | Egzersiz Çalışmaları",
          "If-Else Kontrol Yapısı | Şimdi Sıra Sizde",
          "If-Else Kontrol Yapısı | Şimdi Sıra Sizde Çözümler",
          "İç İçe If-Else Kontrol Yapısı | Konu Anlatımı ve Örnekler",
          "İç İçe If-Else Kontrol Yapısı | Örnek Uygulama",
          "If-Else If-Else Kontrol Yapısı | Konu Anlatımı ve Örnekler",
          "If-Else If-Else Kontrol Yapısı | Örnek Uygulama"
        ],
        "Switch Case Kontrol Yapısı": [
          "Switch Case Kontrol Yapısı | Konu Anlatımı ve İl Plaka Kodu Sorgulama Uygulaması",
          "Switch Case Kontrol Yapısı | Menü Seçimli Hesap Makinesi Uygulaması",
          "Switch Case Kontrol Yapısı | Otomobil Markasına Ait Modelleri Listeleme",
          "Switch Case Kontrol Yapısı | Şimdi Sıra Sizde - Sinema Bilet Satış Sistemi",
          "Switch Case Kontrol Yapısı | Şimdi Sıra Sizde Çözümler"
        ],
        "For Döngüsü": [
          "For Döngüsü | Konu Anlatımı ve Pratik Örnekler",
          "For Döngüsü | Egzersiz Çalışmaları",
          "For Döngüsü | Farklı Kullanım Örnekleri",
          "For Döngüsü | Break ve Continue Deyimleri"
        ]
      },
      "requirements": [
        "Daha önce programlama konusunda hiçbir bilgi ve deneyiminiz olmadığı düşünülerek sıfırdan ileriye doğru bir anlatım gerçekleştirilmektedir.",
        "Visual Studio 2019 Community Edition versiyonu veya daha eski bir versiyonun bilgisayarınızda kurulu olması gerekir. Visual Studio 2019 Community versiyonu ücretsizdir.",
        "Yüksek performanslı bir bilgisayara sahip olmanız gerekmemektedir. Giriş seviyesinde bir bilgisayar Visual Studio yazılımını çalıştırmak için yeterlidir."
      ],
      "description": "Selçuk Üniversitesi - Bilgisayar Sistemleri Öğretmenliği mezunuyum. 2008 yılından bu yana yaklaşık 11 yıldır Mesleki ve Teknik Anadolu Liselerinin Bilişim Bölümlerinde, Halk Eğitim Merkezi Müdürlükleri ve Belediyelere bağlı kurum ve kuruluşlarda lise ve üniversite öğrencilerine programlama ve robotik kodlama eğitimleri verdim. Yaklaşık 3 yıldır da \"Sen de Kod Yaz\" YouTube kanalı üzerinden ülkemizin yazılım alanındaki gelişimine katkıda bulunmak için programlama ve robotik kodlama eğitimleri yayınlamaktayım.\nHem mesleki bilgi ve becerilerimi hem de Youtube üzerindeki eğitimleri hazırlarken kazandığım deneyimleri bir araya getirerek bu eğitim serisini hazırladım.\nİstisnalar kaideyi bozmaz. Her zaman ve her şartta geçerli olmasa da şu sözü çok severim ve çoğu kez yaşayarak doğruluğunu test ettim. \"İyi bir mühendis her şeyi bilir, iyi bir öğretmen nasıl öğreteceğini bilir.\" Sizlere programlama temellerini ve daha ileri seviyedeki konuları öğreteceğime inanıyorum. Umarım sizlere mahçup olmam ve takdirlerinizi hak ederim. Eğitimleri hem sunu hem de uygulamalı olarak anlatmaya çalıştım. Uzun uğraşlar sonucu hazırladığım animasyonlarla güçlendirilmiş sunular sayesinde soyut programlama kavramlarını zihninizde somut hale getirmeye çalıştım.\nDünya Yazılım Pazarı ve Türkiye\nDünya yazılım pazarının 4.9 trilyon dolar seviyesine ulaştığı günümüzde ülkemizin bu yazılım pazarından aldığı pay 7.8 milyar dolar civarındadır. Gençlerimiz artık bilişim teknolojilerinin önemini kavrayarak kendilerini bu alana yönlendirmektedir. Programlama öğrenmeye karar verip harekete geçmek isteyenler için Visual Studio 2019 C# ile Programlama Temellerini eğitimini hazırladım.\nSen de kod yaz. Geleceğini yaz! Unutma senin geleceğin ülkemizin aydınlık geleceğidir.\nProgramlama Temelleri\nKurs başlığında Programlama Temelleri kavramını kullandım. Çünkü bütün programlama dillerinin konuları ortaktır. Elbette her programlama dilinin güçlü ve zayıf yanları vardır. Ancak programlama dilleri arasında tek değişen komut yazım biçimlerindeki basit söz dizim farklılıklarıdır. Bu sayede her hangi bir programlama dili üzerinden temel konularını öğrendiğinizde yeni bir programlama diline adapte olmakta zorluk çekmezsiniz.\nVisual Studio Nedir?\nMicrosoft Visual Studio 2019 Community (Topluluk) versiyonunu ücretsiz olarak kullanıma sunulmuştur. Microsoft tarafından geliştirilen Visual Studio platformu ile birçok programlama dilini kullanarak masaüstü yazılım, mobil uygulama ya da web sitesi geliştirebilirsiniz. Visual Studio ile C, C++, Visual Basic, C#, F# programlama dillerinin yanı sıra Python, Ruby, Node.js ve M gibi programlama dilleri kullanarak uygulama geliştirebilirsiniz.   ASP.NET web uygulama gelişimi teknolojisi sayesinde Visual Studio ile web uygulamaları üzerinde çalışabilirsiniz. HTML, CSS, JavaScript, jQuery ve benzeri yapıları web uygulamalarınızda kullanabilirsiniz.\nC# Nedir?\nC# programlama dili C/C++ ve Java dillerinin etkileşimi ile ortaya çıkmıştır. Güçlü, esnek, basit ve güvenli bir yapıya sahip olan bu programlama dili .NET platformu için sıfırdan oluşturulmuştur. Orta düzeyli diller grubunda yer alan C# programlama dili ile hem alt düzey hem de üst düzey yazılımlar geliştirebilirsiniz.\nNeden C#?\nC# programlama dilinin öğrenilmesi kolaydır.\nNesne yönelimli programlamayı %100 destekler.\nYüksek verimli bir programlama dili olup kod yazım hatalarını önleyici bir çok önlemi yapısında barındırır.\nGeliştirdiğiniz yazılımların internet üzerinde çalışmasına olanak sağlayan ve başka sistemlerle etkileşimini kolaylaştıran XML desteğini sağlar.\nBilişim ve internet çağının gerektirdiği tüm özellikleri destekler.\nUnity Oyun Motoru ile oyun geliştirmek için mutlaka C# programlama dilini bilmeniz gerekmektedir.",
      "target_audience": [
        "Bilgisayar Mühendisliği, Yazılım Mühendisliği, Mekatronik Mühendisliği ve Elektrik-Elektronik Mühendisliği lisans öğrencileri.",
        "Yönetim Bilişim Sistemleri gibi algoritma ve programlama dersi alan ve kendini geliştirmek isteyen lisans öğrencileri.",
        "Bilgisayar Programcılığı gibi ön lisans bölümlerinde öğrenim gören öğrenciler.",
        "Mesleki ve Teknik Anadolu Liselerinin Bilişim Bölümlerinde eğitim gören Programlama Temelleri ve Nesne Tabanlı Programlama gibi derslerde kendini geliştirmek isteyen öğrenciler.",
        "Kısacası bu kurs programlamaya yeni başlayan veya bilgilerini tazelemek ve geliştirmek isteyen herkese hitap etmektedir."
      ]
    },
    {
      "title": "Dart: De cero hasta los detalles",
      "url": "https://www.udemy.com/course/dart-de-cero-hasta-los-detalles/",
      "bio": "Tu guía completa para aprender Dart sin Frameworks y darte la base que necesitas para programar utilizando este lenguaje",
      "objectives": [
        "Dart puro y sus principales componentes",
        "Conocimiento necesario para entender Flutter, Hummingbird, Angular Dart o código basado en Dart",
        "Peticiones HTTP y conversión a instancias de clases",
        "Comprender cómo leer la documentación de Dart",
        "Mapeo de respuestas a objetos en Dart",
        "Mucho más!"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "¿Cómo funcionará el curso?",
          "¿Cómo realizar preguntas?",
          "Instalaciones necesarias",
          "Instalación de Dart",
          "Instalación de Dart - Windows",
          "Null Safety - Versión",
          "Hoja de atajos de Dart",
          "¡Únete a Nuestra Comunidad de DevTalles en Discord!"
        ],
        "Primeros pasos en Dart - Tipos de datos": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Palabras reservadas",
          "Nuevas palabras reservadas",
          "Hola Mundo en Dart",
          "Otras formas de ejecutar el código en VSCode",
          "Tipado de datos: Números",
          "Tipado de datos: Strings",
          "Tipado de datos: Booleans",
          "Tipado de datos: Listas",
          "Tipado de datos: Sets",
          "Tipado de datos: Mapas",
          "Examen de la sección 2",
          "Código fuente de la sección"
        ],
        "Variables, comentarios y operadores": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Variables, Constantes y Final",
          "Palabra reservada - Late",
          "Comentarios en Dart",
          "Operadores aritméticos",
          "Operadores de asignación, condicional, relacional y de tipo",
          "Operadores relacionales y por tipo (segunda parte)",
          "Examen de la sección 3",
          "Código fuente de la sección"
        ],
        "Control de flujo": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Entradas de información de usuario",
          "If y Else",
          "Resolución tarea IF y ELSE",
          "Ciclo For",
          "Solución de la tabla de multiplicar con un ciclo For",
          "For in",
          "Ciclo While",
          "Ciclo Do While",
          "Break y Continue",
          "Ciclo For con etiquetas",
          "Switch",
          "Examen de la sección 4",
          "Código fuente de la sección"
        ],
        "Funciones en Dart": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Funciones básicas",
          "Argumentos a las funciones - Posicionales",
          "Argumentos a las funciones - Por nombre",
          "Argumentos por valor y referencia",
          "Lambda functions o funciones de flecha",
          "Callbacks",
          "Tarea sobre funciones",
          "Resolución de la tarea sobre funciones",
          "Código fuente de la sección"
        ],
        "Tipos no tan comunes en Dart": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Queue - Colas",
          "Enum - Enumeraciones",
          "Futures",
          "Futures - Segunda parte",
          "Async-Await",
          "catchError",
          "Streams",
          "Streams - onError, onDone y cancelOnError",
          "Streams - Tipado y Broadcast",
          "Código fuente de la sección"
        ],
        "Introducción a las Clases en Dart": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Estructura de una clase en Dart",
          "Clases en archivos independientes",
          "Propiedades privadas",
          "Setters y Getters",
          "Constructores básicos",
          "Constructores con nombre",
          "Propiedades finales",
          "Constructores constantes",
          "Constructores factory",
          "Propiedades y métodos estáticos",
          "Patrón Singleton",
          "Examen sobre la sección 7",
          "Código fuente de la sección"
        ],
        "Herencia en clases": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Extends",
          "Clase abstracta",
          "Super constructor",
          "Override",
          "Mixins",
          "Código fuente de la sección"
        ],
        "Documentaciones y detalles": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Bonus: Dart Styling",
          "Bonus: Dart language specification",
          "Docs: Double",
          "Docs: Double - Propiedades y métodos",
          "Docs: String - Propiedades y métodos",
          "Strings - Operadores y más métodos",
          "Docs: Lists - Propiedades y métodos",
          "List: Más métodos",
          "Mapas: Propiedades y métodos",
          "Método Map de los mapas",
          "Examen teórico sobre la documentación de Dart",
          "Código fuente de la sección"
        ],
        "Paquetes, ejecutar programas, depurar y Http": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Inicio del proyecto - Paquetes",
          "Estructura de un proyecto en Dart",
          "Depurar un programa en Dart",
          "Peticiones HTTP",
          "Extraer y usar el body de una petición http",
          "Mapear la respuesta a una instancia de clase",
          "Parte 2: Mapear la respuesta a una instancia de clase",
          "Optimizaciones del código anterior",
          "Tarea de HTTP - Explicación",
          "Solución de la tarea de Colombia",
          "Código fuente de la sección"
        ]
      },
      "requirements": [
        "Conocimiento de programación estructurada es recomendable",
        "El curso se puede seguir en Windows, Mac OSX o Linux",
        "Este curso es para aprender Dart, no es para aprender programación."
      ],
      "description": "Dart de cero hasta los detalles\nDart es un lenguaje de programación que cada día toma más fuerza. Google quien es el creador del lenguaje, tiene su guía de estilos para desarrollar aplicaciones que usen Dart como lenguaje, dichas guías de estilos las seguiremos a lo largo de este curso.\n\n\nTe recomiendo que te inscribas si estás pensando en entrar en Flutter, Hummingbird o cualquier framework que use Dart como base. Es necesario comprender cómo escribir el código de programación antes de seguir reglas o patrones de desarrollo, y este curso tiene por objetivo darte esa base.\nAquí aprenderás sobre:\nEstructura de proyectos en Dart\nGuía de estilos oficial del equipo de Dart / Google\nConstantes y finals\nPeticiones HTTP\nMapeo de información\nCiclos\nEstructuras de control de datos\nTips\nTrucos en Dart\nLectura de la documentación oficial\nCondiciones\nTipado estricto y dinámico\nDepuración\nListas\nMapas\nQueues\nEnumeraciones\nSingletons\nMucho más!\n\n\nAquí aprenderás desde lo más básico de Dart hasta temas más complejos y necesarios para trabajar con frameworks. Aquí adentro tendrás tareas, ejercicios, exámenes, explicaciones y herramientas indispensables que te ayudarán a ser un eficiente desarrollador utilizando Dart.\n\n\nTe recomiendo tomar este curso primero, antes de entrar en cualquier otro curso relacionado a Dart, te ayudará a comprender mejor la razón de ser y saber qué es propio de Dart y qué es propio del framework.",
      "target_audience": [
        "Personas que quieran conocer Dart",
        "Personas que necesiten o quieran entrar en Flutter pero no tienen la base de Dart",
        "Personas que necesiten o quieran entrar en Hummingbird pero no tienen la base de Dart",
        "Personas curiosas de aprender un nuevo lenguaje de programación"
      ]
    },
    {
      "title": "Aprende Python 3: Programación de Principiante a Avanzado",
      "url": "https://www.udemy.com/course/aprenda-python-3-programacion-de-principiante-a-avanzado/",
      "bio": "Programar en Python3 es fácil con ejercicios, desafíos y muchos ejemplos de la vida real. ¡Aprende a codificar hoy!",
      "objectives": [
        "Los fundamentos básicos de programación y escritura de código de computadora.",
        "Usando Python para resolver problemas de la vida real con programas de computadora",
        "Trabaje con JSON y envíe solicitudes HTTP a servidores web y API para obtener datos de servicios externos",
        "Estadísticas y Visualización de Datos",
        "Una introducción al aprendizaje automático en Python",
        "Use Python para manipular archivos, como hojas de Excel y archivos TXT"
      ],
      "course_content": {
        "Introducción": [
          "Instalación de Python en Windows",
          "Instalación de Python en Mac",
          "Declaraciones",
          "Variables",
          "La función input",
          "Ejercicio - Convertidor de kilómetros a millas"
        ],
        "Tipos de datos": [
          "Tipos de datos - Strings",
          "Ejercicio - Strings",
          "Tipos de datos - Numbers",
          "Ejercicio - Numbers",
          "Tipos de datos - Lists and Tuples",
          "Ejercicio - Lists and Tuples",
          "Tipos de datos - Dictionaries",
          "Ejercicio - Dictionaries",
          "Tipos de datos - Booleans",
          "Ejercicio - Booleans"
        ],
        "Condicionales, Bucles, Funciones y más": [
          "Condicionales (if, elif, else)",
          "Operadores And y Or",
          "Ejercicio - Condicionales",
          "Bucle While",
          "Bucle For",
          "Ejercicio - Bucles",
          "Validación de Datos",
          "Manejo de Errores",
          "Ejercicio - Manejo de Errores",
          "Funciones"
        ],
        "Módulos": [
          "Módulos - Time",
          "Módulos - Matplotlib",
          "Ejercicio - Módulos - Time & Matplotlib",
          "Módulos - Requests",
          "Módulos - Envío de solicitudes HTTP a las APIs",
          "Trabajar con JSON",
          "Ejercicio - Solicitudes HTTP y Json (Parte 1)",
          "Ejercicio - Solicitudes HTTP y Json (Parte 2)",
          "Manejo de archivos: crear, leer, escribir y agregar",
          "Lectura de hojas de Excel"
        ],
        "Machine Learning": [
          "Introducción al Machine Learning",
          "Iris Dataset",
          "Aplicación del modelo KNN",
          "División de grupos de prueba y entrenamiento de introducción de datos",
          "Ejercicio KNN - Elegir el mejor valor de K",
          "El modelo de regresión logística",
          "Aplicación del modelo de regresión logística",
          "¿Qué sigue en Machine Learning?"
        ]
      },
      "requirements": [
        "No es necesario tener ninguna experiencia previa en informática o programación",
        "You only need a computer"
      ],
      "description": "En este curso, aprender a codificar será fácil e intuitivo para ti. Aprenderás Python 3, uno de los lenguajes de programación más populares del mundo.\nCubriremos los fundamentos básicos de la programación y aprenderá cómo hacer cosas emocionantes en Python, como leer y escribir en archivos, como hojas de Excel o archivos TXT, trabajar con JSON y enviar solicitudes HTTP a servidores web y API.\nTambién cubriremos un poco de visualización de datos, estadísticas y aprendizaje automático en Python.\nEste curso no requiere experiencia previa en TI o programación, fue diseñado para ayudar a cualquier persona a aprender a codificar. Al final del curso, escribirá sus propios programas y pensará como un programador. Tu vida profesional obtendrá una gran mejora.\nEste curso ofrece acceso de por vida, un certificado de conclusión y una garantía de devolución de dinero de 30 días. Puedes ver cada lección donde estés, cuando puedas. No puede elegir la velocidad del video y usar la sección de preguntas y respuestas para hacerle preguntas al instructor. ¡No te pierdas esta oportunidad! ¡Inscríbase ahora y comience a aprender Python!\nÚnase a más de 200,000 estudiantes que tomaron este curso en otros 3 idiomas y comience su carrera como programador de Python.",
      "target_audience": [
        "Cualquier persona que quiera aprender a programar desde un nivel de principiante absoluto",
        "Cualquier persona que quiera resolver problemas y crear servicios usando programas de Python"
      ]
    },
    {
      "title": "VBA - La Guida Completa",
      "url": "https://www.udemy.com/course/vba-la-guida-completa/",
      "bio": "Corso MASTER di Programmazione in VBA - da BASE ad ESPERTO",
      "objectives": [
        "Programmazione VBA",
        "OOP: Programmazione ad Oggetti",
        "Metodi e Proprietà di un Oggetto",
        "I costrutti VBA: With - End With | For Each - Next",
        "Esecuzione del Codice: If - Then | GoTo | Select Case",
        "Loops: For - Next | Do - While | Do - Until",
        "Variabili - Variabili Oggetto - Array",
        "Subroutine e Function",
        "Gestione degli Errori",
        "Eventi: Workbook - Worksheet - Application - Non associati",
        "Tecniche VBA",
        "Pivot in VBA",
        "Lavorare con Dati esterni",
        "Interagire con Altre Applicazioni",
        "Debug in VBA",
        "Le UserForms",
        "I Controlli nelle UserForm",
        "Eventi UserForm",
        "I Moduli di Classe",
        "Molto altro..."
      ],
      "course_content": {
        "Introduzione e File del Corso": [
          "Introduzione"
        ],
        "Un Piccolo Ripasso": [
          "Un Rapido Refresh",
          "La Cartella PERSONAL"
        ],
        "L'Area di Lavoro in VBA": [
          "L'Editor VBA - prima parte",
          "L'Editor VBA - seconda parte",
          "Inserire il Codice VBA",
          "Personalizzazione Ambiente"
        ],
        "Concetti Fondamentali": [
          "Le Basi",
          "Le Collections",
          "Le Proprietà",
          "I Metodi"
        ],
        "L'Oggetto principale in Excel": [
          "L'Oggetto Range",
          "La Proprietà Cells",
          "La Proprietà Offset"
        ],
        "Introduzione al Linguaggio": [
          "Facciamo amicizia con il Codice",
          "Le Variabili e i Tipi di Dato",
          "Lo Scope di una Variabile",
          "Le Costanti",
          "Gli Operatori",
          "Gli Arrays",
          "Le Variabili Oggetto",
          "Tipo di Dato Personalizzato",
          "Le Funzioni Integrate"
        ],
        "I Costrutti del VBA": [
          "I Costrutti",
          "With - End With",
          "For Each - Next",
          "GoTo",
          "If - Then - Else",
          "Select Case",
          "For - Next - prima parte",
          "For - Next - seconda parte",
          "Do While - Loop",
          "Do Until - Loop"
        ],
        "Mettiamo in Pratica": [
          "Intervalli Dinamici",
          "Current Region",
          "Lista Cartelle e Chiusura dinamica"
        ],
        "Il Debug del Codice": [
          "Strumenti per il Debugging"
        ],
        "Esercizio Mini- Applicazione": [
          "Applicazione - Esercizio 1",
          "Applicazione - Esercizio 2"
        ]
      },
      "requirements": [
        "Avere terminato il nostro Corso Intermedio e/o Avanzato",
        "Essere in grado di lavorare con le Formule e le Funzioni di Excel senza problemi",
        "Un PC con un sistema Windows",
        "Excel installato per lavorare dinamicamente con il Docente",
        "Possedere una di queste versioni di Excel: 2010 - 2013 - 2016"
      ],
      "description": "Ciao, il mio nome è Casegna Alfonso è sono un Docente informatico specializzato in ambito Office e non solo.\nSono davvero felice di annunciare la pubblicazione del CORSO VBA - LA GUIDA COMPLETA.\nIl Corso, al momento, è strutturato su più di 150 Video che, in totale,  vi terranno incollati al monitor per circa 22 ore. Questi dati sono provvisori poiché il Corso verrà implementato di altri Tutorial Bonus sui quali sto lavorando.\nProbabilmente ti starai chiedendo: \"IL CORSO VBA - LA GUIDA COMPLETA farà al caso mio?\"\nTi dico questa cosa: \"Hai analizzato il titolo? Bene!! ...questo corso è stato creato sia per coloro che non hanno mai avuto a che fare con la programmazione in VBA o altri linguaggi sia per coloro che hanno deciso di fare il salto di qualità.\"\nUn requisito IMPORTANTE è il fatto di saper utilizzare bene Excel ...quindi Formule, Funzioni, Macro, etc devono far parte del proprio repertorio. Nel caso ti suggerisco vivamente di iniziare dai miei Corsi: Base, Esperto, Master Level.\nQualcosa in più sul Corso...\nIl CORSO VBA - LA GUIDA COMPLETA è stato creato per indirizzare in modo importante l'utente verso la Programmazione Professionale in VBA curando tutti gli aspetti più importanti, senza tralasciare quelle sfumature che fanno la differenza.\nLa decisione di creare questo tipo di Corso è dettata dal fatto che chi si avvicina per la prima volta alla Programmazione, deve essere guidato passo dopo passo fino ad acquisire una SOLIDA BASE ma anche coloro che già programmano devono trovare materiale per ampliare, in modo importante, la propria conoscenza. Lo Studente troverà un percorso pieno di Esempi, Test, Domande e soprattutto tanta pratica. Argomenti come, Programmazione ad Oggetti, Programmazione Strutturata, Variabili, Costanti, Proprietà, Metodi, Routine, Function, Costrutti, Eventi, Function, Userforms, Classi devono diventare il tuo pane quotidiano per imparare a creare Applicazioni Professionali.\nPer esperienza posso dirti che:\n1.    Tutti possono imparare a programmare in VBA.\n2.    Il VBA di Excel è un linguaggio semplice e versatile che permette di creare applicazioni davvero potenti.\n3.    E' possibile diventare utilizzatori Avanzati, in ambito VBA, solo fondandosi su Basi Solide.\n4.    Dedicare il giusto tempo a qualcosa rispettando Regole e Metodi porta sempre a centrare l'obiettivo prefissatosi.\nCredo di poter dire che il CORSO VBA - LA GUIDA COMPLETA sia, al momento, il miglior contributo in Italiano presente sul Mercato.\nNON DIMENTICARE che Il CORSO, strada facendo, verrà integrato di materiale EXTRA aggiuntivo utile a rafforzare e testare quanto lo studente ha appreso.",
      "target_audience": [
        "Programmatori in ambito VBA che vogliono imparare partendo dalle basi",
        "Programmatori VBA che vogliono approfondire la loro conoscenza",
        "Chi vuole diventare un utilizzatore davvero avanzato di Excel",
        "Chi vuole imparare a realizzare applicazioni con il VBA di Excel",
        "Chi vuole diventare un programmatore VBA per lavoro"
      ]
    },
    {
      "title": "Programowanie obiektowe w języku Python - OOP - od A do Z",
      "url": "https://www.udemy.com/course/programowanie-obiektowe-jezyk-python-oop-kurs/",
      "bio": "Doprowadź swój kod do perfekcji: Pełny przewodnik po programowaniu obiektowym - od podstaw do zaawansowanych technik!",
      "objectives": [
        "przestrzenie nazw i zakresy, zakres lokalny, obejmujący, globalny, wbudowany, reguła LEGB",
        "przypomnienie: *args oraz **kwargs",
        "4 filary programowania obiektowego: abstrakcja, hermetyzacja, dziedziczenie, polimorfizm",
        "tworzenie klas i obiektów",
        "widoczność zmiennych (publiczne, chronione, prywatne)",
        "atrybuty klasy oraz atrybuty instancji",
        "dekorator @property",
        "metody klasy, dekorator @classmethod",
        "metody statyczne, dekorator @staticmethod",
        "metody specjalne: __new__(), __init__(), __repr__(), __str__(), __bool__(), __len__(), __eq__(), __hash__() i wiele innych",
        "MRO - Method Resolution Order",
        "dziedziczenie pojedyncze (single inheritance), wielokrotne (multiple inheritance)",
        "zastosowanie super()",
        "Klasy abstrakcyjne, klasa ABC i dekorator @abstractmethod"
      ],
      "course_content": {
        "Wprowadzenie": [
          "Słowo wstępu",
          "Programowanie obiektowe - Intro"
        ],
        "Konfiguracja środowiska": [
          "Konfiguracja Google Colab + Anaconda"
        ],
        "Wymagania": [
          "Wymagania do kursu"
        ],
        "-----Przypomnienie-----": [
          "Słowo wstępu"
        ],
        "Przestrzenie nazw i zakresy": [
          "Przestrzenie nazw i zakresy - Intro",
          "Przestrzenie nazw i zakresy - wykład",
          "Przestrzenie nazw i zakresy - ćwiczenia",
          "Ćwiczenie 1",
          "Rozwiązanie 1"
        ],
        "Reguła LEGB": [
          "Reguła LEGB - Intro",
          "Reguła LEGB - wykład",
          "Reguła LEGB - zakres lokalny",
          "Reguła LEGB - zakres obejmujący cz. I",
          "Reguła LEGB - zakres obejmujący cz. II",
          "Reguła LEGB - zakres globalny cz. I",
          "Reguła LEGB - zakres globalny cz. II",
          "Reguła LEGB - zakres lokalny vs. obejmujący vs. globalny",
          "Reguła LEGB - zakres wbudowany",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5"
        ],
        "Przestrzenie nazw i zakresy - ciąg dalszy": [
          "Instrukcja global",
          "Instrukcja nonlocal",
          "list/dict/set comprehension",
          "Obsługa wyjątków",
          "Pomocnicze funkcje wbudowane",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4"
        ],
        "Przypomnienie *args oraz **kwargs": [
          "*args oraz **kwargs - Intro",
          "Zastosowanie *args, **kwargs",
          "*args oraz **kwargs",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4"
        ],
        "-----Programowanie obiektowe - OOP-----": [
          "Programowanie obiektowe - 4 filary",
          "Programowanie obiektowe - 3 etapy",
          "Klasy i obiekty - wykład"
        ],
        "Klasy - podstawy": [
          "Klasy - Intro",
          "Definiowanie klasy - wykład",
          "Definiowanie klasy - ćwiczenia",
          "Funkcja wbudowana type()",
          "Definiowanie klasy - ćwiczenia c. d.",
          "Tworzenie instancji klasy",
          "Tworzenie klasy - __new__() + __init__()",
          "Funkcja isinstance()",
          "Przykład - biblioteka pandas, klasa DataFrame",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4"
        ]
      },
      "requirements": [
        "Ukończony kurs z programowania w języku Python na tym koncie instruktorskim",
        "Ukończony kurs z ćwiczeniami z programowania w języku Python na tym koncie instruktorskim"
      ],
      "description": "To szczegółowy kurs, który skupia się na jednym z najważniejszych aspektów języka Python - programowaniu obiektowym. Jest to idealny kurs dla osób, które mają już podstawową wiedzę o Pythonie i chcą ją poszerzyć, poznając kluczowe koncepty i techniki programowania obiektowego (OOP).\nKurs rozpoczyna się od wprowadzenia do koncepcji OOP, takich jak klasy, obiekty, atrybuty, metody i dziedziczenie. Następnie, uczestnicy zostaną zapoznani z bardziej zaawansowanymi koncepcjami, takimi jak polimorfizm, enkapsulacja, metody specjalne oraz dekoratory. Kurs jest bardzo praktyczny - każdy temat jest tłumaczony na przykładach i ćwiczeniach, które uczestnicy mogą rozwiązywać samodzielnie. To pozwala na dogłębne zrozumienie i praktyczne zastosowanie koncepcji OOP w Pythonie.\nDla każdego ćwiczenia dostępne są szczegółowe rozwiązania, dzięki czemu uczestnicy mogą porównać swoje odpowiedzi z optymalnymi rozwiązaniami, zrozumieć swój błąd i nauczyć się lepszego podejścia do problemu.\nTen kurs to doskonały wybór dla tych, którzy chcą zrozumieć i opanować programowanie obiektowe w Pythonie. Bez względu na to, czy jesteś początkującym programistą, czy doświadczonym deweloperem, ten kurs pomoże Ci udoskonalić swoje umiejętności w OOP i stać się bardziej efektywnym programistą Pythona.\n\n\nPython – Prosty w nauce, potężny w działaniu\nPython to dynamiczny, wysokopoziomowy język programowania, ceniony za przejrzystą składnię i uniwersalność. Doskonale sprawdza się zarówno w prostych skryptach automatyzujących codzienne zadania, jak i w zaawansowanych projektach z zakresu sztucznej inteligencji, analizy danych, web developmentu czy automatyzacji. Dzięki ogromnej społeczności i bogatemu ekosystemowi bibliotek, Python jest idealnym wyborem dla początkujących i profesjonalistów.\n\n\nProgramowanie obiektowe w Pythonie – Kod, który myśli jak obiekt\nProgramowanie obiektowe (OOP) w Pythonie to paradygmat, który pozwala modelować rzeczywistość za pomocą klas i obiektów. Umożliwia tworzenie przejrzystego, modułowego i łatwego w utrzymaniu kodu poprzez łączenie danych (atrybutów) z funkcjami (metodami) w spójne struktury. Python wspiera OOP w sposób prosty i czytelny, oferując mechanizmy dziedziczenia, enkapsulacji i polimorfizmu, co pozwala budować skalowalne i elastyczne aplikacje.",
      "target_audience": [
        "Początkujący programiści Python",
        "Osoby uczące się Pythona do celów zawodowych",
        "Programiści z innych języków (Java, C++, C#), którzy znają OOP, ale chcą nauczyć się, jak stosować te zasady w Pythonie",
        "Przyszli developerzy aplikacji desktopowych, webowych lub API",
        "Kandydaci do pracy lub stażu jako Python Developer",
        "Osoby zainteresowane tworzeniem testowalnego, skalowalnego i czytelnego kodu Python",
        "Studenci kierunków informatycznych i technicznych"
      ]
    },
    {
      "title": "【한글자막】 JavaScript 완벽 가이드 : 초급 + 고급 마스터 과정",
      "url": "https://www.udemy.com/course/javascript-zw/",
      "bio": "기초부터 시작하여 JS 전문가 수준까지 담은 최신 JavaScript 강의! 한 강의로 해결하는 JavaScript 웹 개발 완벽 가이드.",
      "objectives": [
        "처음부터 시작하는 JavaScript - 초급부터 고급까지",
        "최신 JavaScript 개발에서 알아야 할 모든 핵심 기능과 개념",
        "JavaScript 전문가가 되고 JavaScript 관련 직무에 지원하는 데 필요한 모든 것",
        "많은 예제를 통한 프로젝트 주도 학습",
        "변수, 함수, 객체와 배열에 관한 모든 것",
        "객체 지향 프로그래밍",
        "프로토타입, JavaScript 엔진 & 내부에서 작동하는 방식에 대한 자세한 설명",
        "JavaScript로 웹 페이지(= DOM) 조작하기",
        "이벤트 처리, 비동기 코딩과 Http 요청",
        "메타 프로그래밍, 성능 최적화, 메모리 누수 방지",
        "테스트, 보안과 배포",
        "그 외 더 많은 것들!"
      ],
      "course_content": {
        "개요": [
          "소개",
          "JavaScript란 무엇인가?",
          "JavaScript 사용해 보기",
          "온라인 학습 커뮤니티에 합류하세요",
          "JavaScript는 어떻게 실행되는가",
          "동적 vs 약형 언어",
          "호스팅된 환경에서의 JavaScript 실행",
          "강의 개요 - 어떤 내용이 있나요?",
          "강의 최대 활용 방법",
          "강의 참고 자료 사용하기",
          "JavaScript vs Java",
          "JavaScript의 역사",
          "개발 환경 설정",
          "강의 과정 FAQ"
        ],
        "기초: 변수, 자료형, 연산 & 함수": [
          "모듈 소개",
          "프로젝트 설정",
          "버전 제어 & Git 더 보기",
          "웹사이트에 JavaScript 추가하기",
          "변수 & 상수 소개",
          "변수 선언 & 정의",
          "변수 & 연산자로 작업하기",
          "변수 & 연산",
          "시작 코드 이해하기",
          "자료형: 숫자 & 문자열 (텍스트)",
          "상수 사용하기",
          "문자열 더 보기",
          "자료형 & 상수",
          "함수 소개",
          "사용자 정의 함수 추가하기",
          "코드 스타일, 컨벤션 & 구문",
          "값 반환하기",
          "코드 순서의 (비)중요성",
          "전역 & 로컬 범위 소개",
          "“그림자(Shadow) 변수”",
          "“반환” 문장 더 보기",
          "함수를 “간접적으로” 실행하기",
          "“간접적” vs “직접적” 함수 실행 - 요약",
          "함수 & 스코프(Scope)",
          "자료형 변환하기",
          "숫자 & 문자열 섞기",
          "함수로 코드 나누기",
          "모든 버튼들을 함수에 연결하기",
          "코드 주석 작업",
          "연산자 더 보기!",
          "코어 자료형 더 보기!",
          "배열 사용하기",
          "객체 생성하기",
          "객체 - 공통 구문 포착",
          "객체 데이터에 액세스하기",
          "Arrays & Objects",
          "객체를 사용하는 재사용 가능한 함수 추가하기",
          "undefined, null & NaN",
          "“Typeof” 연산자",
          "\"undefined\", \"null\" & \"NaN\"",
          "“defer” & “async”를 이용해 스크립트 올바르게 임포트하기",
          "JavaScript 임포트하기 - 요약",
          "마무리",
          "유용한 참고 자료 & 링크"
        ],
        "효율적인 개발 & 디버깅": [
          "모듈 소개",
          "효율적인 개발 & 디버깅 - 개요",
          "IDE Look & Feel 구성하기",
          "단축키 사용하기",
          "자동 완성 & IDE 힌트로 작업하기",
          "IDE 확장 설치하기",
          "에디터 설정 수정하기",
          "다양한 IDE 뷰 활용하기",
          "도움말 찾기 & MDN으로 작업하기",
          "ECMAScript 표준",
          "“Google” 검색 올바르게 하는 법",
          "JavaScript 디버깅 - 개요",
          "오류 메시지! 당황하지 마세요!",
          "console.log() 사용해 “코드 안을” 들여다 보기",
          "크롬 개발자 도구 & 중단점을 사용해 디버깅 한 단계 끌어 올리기",
          "개발자 도구에서 직접 코드 변경 테스트하기",
          "VS 코드 내에서 직접 코드 디버깅하기",
          "마무리",
          "유용한 참고 자료 & 링크"
        ],
        "제어 구조로 작업하기 (if 문, 반복문, 오류 처리)": [
          "모듈 소개",
          "“if” 문 & 불리언 (비교) 연산자의 소개",
          "텍스트 비교 & 조건에서 불리언 사용하기",
          "“If” 문 사용하기",
          "“If”, “else”, “else-if”로 작업하기",
          "등식에서 객체 & 배열을 비교할 때 주의할 점!",
          "논리적인 AND과 OR 연산자",
          "연산자 우선 순위 이해하기",
          "If & 불리언 연산자 - 기초",
          "True/false를 넘어서: “사실 같은”, “거짓 같은” 값들",
          "Coercion vs Conversion",
          "Falsy와 Truthy 값",
          "더 큰 규모의 예시 프로젝트 설정하기 (“Monster Killer”)",
          "“공격” 함수 추가하기",
          "“if” 문장 이용해 승리 조건 확인하기",
          "“if” 문장 & “더 강한 공격” 기능 더 많이 추가하기",
          "“힐러” 기능을 추가할 시간!",
          "조건적인 보너스 생명 제어하기 (불리언 연산자 사용하지 않음!)",
          "“게임 리셋” 기능 추가하기",
          "사용자 입력 검증하기",
          "조건적 코드에서 전역 상수 식별자로 활용하기",
          "조건적 배틀 로그 추가하기",
          "삼차 연산자의 소개",
          "이론: 문장 vs 표현식",
          "논리적 연산자 “팁” & 축약어",
          "논리적 연산자 - 요약",
          "논리적 연산자 & 원리",
          "“스위치-케이스” 문장으로 작업하기",
          "반복문 소개",
          "“For” 반복문",
          "“For-of” 반복문",
          "“For-in” 반복문",
          "“While” & “do-while” 반복문",
          "반복문 - 기초",
          "“Break”로 반복문 제어하기",
          "“continue”로 반복 제어하기",
          "레이블 문장으로 더욱 제어하기",
          "Break & continue",
          "“Try-catch”로 오류 처리하기 - 소개",
          "사용자 정의 오류 발생시키기",
          "“Try-catch”를 사용해 오류를 잡고 & 처리하기",
          "Error Handling",
          "마무리",
          "유용한 참고 자료 & 링크"
        ],
        "백그라운드 & JavaScript의 특이한 과거 (ES3, ES5)부터 현재까지 (ES6+)": [
          "모듈 소개",
          "ES5 vs ES6+ (“차세대 JS”) - JavaScript의 진화",
          "Var vs let & const - “블록 범위” 소개",
          "\"Hoisting\" 이해하기",
          "엄격 모드 & 읽기 좋은 코드",
          "“JavaScript 전문”",
          "코드가 구문 분석 되고 & 컴파일링되는 법",
          "JavaScript 엔진 속으로 - 코드는 어떻게 실행되는가",
          "[파헤치기] JavaScript 언어 vs 브라우저 API",
          "원시 vs 참조 값",
          "가비지 콜렉션 & 메모리 관리",
          "마무리",
          "유용한 참고 자료 & 링크"
        ],
        "함수 더 보기": [
          "모듈 소개",
          "함수 지식 복습 - 이때까지 배운 내용들",
          "매개변수 vs 인자",
          "함수 vs 메서드",
          "함수는 객체다!",
          "함수 표현식: 변수에 함수 저장하기",
          "함수 표현식 vs 함수 선언",
          "익명 함수",
          "프로젝트 작업하기: 게임에 사용자의 선택 추가하기",
          "코드 게임 로직 구현하기",
          "화살표 함수 소개",
          "다양한 화살표 함수 구문",
          "함수 생성하기",
          "사용자에게 메시지 출력하기",
          "함수 내의 기본 인자",
          "Rest 매개변수 소개 (“Rest 연산자”)",
          "함수 내에서 함수 생성하기",
          "콜백 함수 이해하기",
          "“bind()”로 작업하기",
          "함수 - 심화 내용",
          "계산기 프로젝트에 bind() 추가하기",
          "call()과 apply()",
          "마무리",
          "유용한 참고 자료 & 링크"
        ],
        "JavaScript에서 DOM으로 작업하기 (브라우저 HTML 코드)": [
          "모듈 소개",
          "“DOM”이란 무엇인가?",
          "문서와 윈도우 객체",
          "DOM과 생성 방식 이해하기",
          "노드 & 요소 - DOM 쿼리하기 개요",
          "DOM에서 요소 선택하기",
          "요약: 노드 쿼리 메서드",
          "DOM 프로퍼티 탐구 및 변경",
          "속성 vs 프로퍼티",
          "다수의 요소 선택하기 & 요약",
          "DOM의 기초",
          "DOM 탐색 - 개요",
          "자식 노드 탐색하기",
          "부모노드 & 부모요소 사용하기",
          "형제 요소 선택하기",
          "DOM 탐색 vs 쿼리 메서드",
          "DOM 요소 스타일링하기",
          "JS로 요소 생성하기 - 개요",
          "코드에서 HTML을 통해 요소 추가하기",
          "createElement()를 통해 요소 추가하기",
          "DOM 요소 삽입하기",
          "DOM 노드 복제하기",
          "라이브 노드 리스트 vs 정적 노드 리스트",
          "요소 제거하기",
          "메서드 삽입 & 제거 요약",
          "요약: 삽입, 대체, 제거",
          "실습 프로젝트 설정",
          "모달과 “추가” 버튼 선택하기",
          "CSS 클래스 변경을 통한 모달 열기",
          "배경(Backdrop) 제어하기",
          "사용자 입력 페칭 및 검증",
          "JavaScript에서 영화 생성 & 입력 제거하기",
          "화면에 영화 항목 렌더링하기",
          "영화 요소 제거하기",
          "“Are you sure?” 대화 표시하기 & 숨기기",
          "구성 논리 시작하기",
          "앱 끝내기",
          "마무리",
          "유용한 참고 자료 & 링크"
        ],
        "배열 & 반복 더 보기": [
          "모듈 소개",
          "“반복” 과 “유사 배열 객체”란 무엇인가?",
          "배열 생성하기",
          "배열에는 어떤 데이터를 저장할 수 있을까?",
          "push(), pop(), unshit(), shift() - 요소 추가 & 제거하기",
          "splice() 메서드",
          "범위 선택하기 & slice()로 복제 생성하기",
          "concat()으로 배열에 배열 추가하기",
          "indexOf() /& lastIndexOf()로 인덱스 회수하기",
          "탐색: find()와 findindex()",
          "이것도 포함되어 있을까?",
          "반복문 대안: forEach() 메서드",
          "map()으로 데이터 변환하기",
          "sort()ing과 reverse()ing",
          "filter()로 배열 필터링하기",
          "화살표 함수의 진가는 여기서 발휘된다!",
          "중요한 reduce() 메서드",
          "JavaScript에서 메서드 체인 형성하기",
          "배열 & 문자열 - split()과 join()",
          "분산 연산자 (…)",
          "배열 구조 분해 이해하기",
          "Maps & Sets - 개요",
          "Sets 작업하기",
          "Maps 작업하기",
          "Maps vs 객체",
          "WeakSet 이해하기",
          "WeakMap 이해하기",
          "마무리",
          "유용한 참고 자료 & 링크"
        ],
        "객체 더 보기": [
          "모듈 소개",
          "객체란 무엇인가?",
          "객체 & 원시 값",
          "객체 - 복습",
          "프로퍼티 추가, 수정 & 삭제",
          "특수 키 이름 & 대괄호 프로퍼티 액세스",
          "프로퍼티 유형 & 프로퍼티 순서",
          "프로퍼티 유형 & 프로퍼티 순서",
          "객체 프로퍼티",
          "데모 앱 & 축약어 프로퍼티 구문",
          "객체에 기반해 요소 렌더링하기",
          "For-in 반복문 & 동적 프로퍼티 출력하기",
          "필터 기능 추가하기",
          "“체이닝(Chaining)” 이해하기 (프로퍼티 & 메서드 체이닝)",
          "객체 분산 연산자 (…)",
          "Object.assign() 이해하기",
          "객체 구조 분해",
          "프로퍼티 존재 확인하기",
          "“this” 소개",
          "메서드 축악어 구문",
          "“This” 키워드와 이상한 작동 방식",
          "call()과 apply()",
          "브라우저가 (가끔씩) “this”에 하는 작업",
          "“This”와 화살표 함수",
          "“This” - 요약",
          "\"this\"",
          "획득자(Getters) & 설정자(Setters)",
          "마무리",
          "유용한 참고 자료 & 링크"
        ],
        "클래스 & 객체 지향 프로그래밍 (OOP)": [
          "모듈 소개",
          "“객체 지향 프로그래밍” (OOP)란 무엇인가?",
          "OOP 코드로 시작하기",
          "첫 번째 클래스 정의 & 사용하기",
          "생성자 메서드로 작업하기",
          "필드 vs 프로퍼티",
          "다수의 클래스 사용하고 “연결”하기",
          "클래스 메서드 바인딩하고 “this”로 작업하기",
          "장바구니와 Shop 클래스 추가하기",
          "통신이 까다로울 수 있습니다!",
          "정적 메서드 & 프로퍼티",
          "첫 번째 요약 & 클래스 vs 객체 리터럴",
          "획득자(Getters) & 설정자(Setters)",
          "상속 소개",
          "상속 구현하기",
          "모든 곳에서 상속 사용하기",
          "메서드 덮어쓰기와 super() 생성자",
          "super() 생성자의 실행, 순서 & “this”",
          "메서드를 추가하는 다양한 방법",
          "Private 프로퍼티",
          "\"Pseudo-Private\" 프로퍼티",
          "“Instances” 연산자",
          "빌트인 클래스",
          "객체 설명자 이해하기",
          "클래스",
          "마무리",
          "유용한 참고 자료 & 링크"
        ]
      },
      "requirements": [
        "사전 JavaScript 관련 지식은 필요하지 않습니다",
        "기본 웹 개발 지식이 있으면 도움이 됩니다",
        "HTML과 CSS에 대한 기본 지식이 있으면 학습에 도움이 됩니다 (필수는 아닙니다)"
      ],
      "description": "기초부터 고급 스킬까지 한 강의로 해결하는 JavaScript 웹 개발 완벽 가이드!\n최신 기술 업데이트 완료!\n예제, 데모, 프로젝트, 과제, 퀴즈 등 학습에 도움이 되는 자료 포함!\n\n\nJavaScript 완벽 가이드 (초급+고급 마스터 과정) 강의를 선택해야 하는 이유\nJavaScript는 웹 개발자가 배워야 하는 가장 중요한 프로그래밍 언어입니다 - 이 강의는 JavaScript 개발자로서 알아야 할 모든 것을 다룹니다.\n\n\n이 강의는 JavaScript의 가장 포괄적이고 현대적인 강의입니다 - 저의 모든 JavaScript 지식과 교육 경험을 기반으로 합니다. 언어의 핵심 기초부터 시작하는 완전한 가이드이자 JavaScript 언어와 환경에 대한 광범위한 참고자료를 제공하여 초보자는 물론 경험이 풍부한 JavaScript 개발자 모두 이 강의에서 많은 것을 얻을 수 있습니다!\n\n\n중요한 지식과 유용한 콘텐츠로 가득 차 있기 때문에 방대한 강의입니다. 핵심적인 기초부터 고급 개념 그리고 JavaScript의 특수성, 성능 최적화 및 테스트와 같은 전문 주제에 이르기까지 모든 것을 다룹니다. 제 목표는 JavaScript 언어에 대해 항상 찾을 수 있는 자료를 만드는 것이었습니다. 이 자료는 학습에 사용할 수 있을 뿐만 아니라 중요한 주제를 다시 찾아볼 수 있는 자료로도 사용될 수 있습니다.\n\n\n이 강의는 Udemy와 저의 YouTube 채널 Academind에서 1,500,000명 이상의 학생을 보유한 선생님으로서, 장기간 JavaScript 개발자로서의 경험을 기반으로 합니다. 풍부한 예제, 데모, 프로젝트, 과제, 퀴즈 그리고 물론 강의 영상으로 구성된 강의이며 가능한 한 최고의 JavaScript 학습 방법을 제공하려는 목표를 가지고 있습니다.\n\n\nJavaScript 완벽 가이드 (초급+고급 마스터 과정) 강의의 커리큘럼\n모든 기본 사항: 변수, 상수, 함수, 스크립트 로드 방법 등\n배열 & 객체: 매우 중요한 이 자료구조들을 자세히 살펴보겠습니다\n제어 구조: 조건문과 반복문에서 코드를 실행하는 방법 이해\n내부 작동 방법 알아보기: JavaScript 엔진이 내부에서 작동하는 방식과 이것이 미치는 영향\n핵심 개념 심층 분석: JavaScript 기능, 다양한 구문에 대한 특별한 사항\nDOM으로 작업하기: JavaScript로 웹페이지를 동적으로 조작하는 방법(심층 분석과 다양한 사용 사례를 포함)\nJavaScript의 이벤트: 다양한 이벤트(예: 드래그 앤 드롭)를 리스닝하고 적절한 코드를 실행하는 방법\n클래스 & 객체 지향 프로그래밍: 클래스, 프로토타입, 'this' 키워드, 생성자 함수 등으로 작업하는 방법 알아보기\n비동기와 동기 프로그래밍: 코드를 올바르게 실행하기 위한 콜백, 프로미스, async/await 및 기타 중요한 도구와 언어 기능을 살펴보겠습니다\nHttp 요청: JavaScript로 Http 요청을 보내는 방법\n도구, 최적화와 브라우저 지원: 코드 분할, 작은 코드 생성 및 스크립트가 모든 브라우저에서 작동하는지 확인 - 이는 중요하므로 매우 자세하게 다룹니다\n라이브러리와 프레임워크: Axios와 같은 라이브러리나 React.js와 같은 프레임워크 - 그들이 중요한 이유와 사용 방법\nNode.js: 대부분의 강의에서는 (구문은 동일하기 때문에) 브라우저 측에 초점을 맞추지만 Node.js 전용 섹션에서 해당 JS 호스트 환경에 대한 모든 것을 배울 겁니다\n보안 & 성능 최적화: 물론 보안도 중요하지만 성능도 중요하니 이 강의에서 모두 다룹니다!\n자동 테스트: 수동 테스트는 힘든 작업이지만 신뢰할 수 없습니다. 이 강의에서 자동 테스트에 대해서 다룹니다.\n\n\n강의를 듣기 위해 필요한 조건은 아래와 같습니다.\nJavaScript 지식은 필요하지 않습니다 - 처음부터 배웁니다\n기본 웹 개발 지식(예: 웹의 작동 방식) 외에는 프로그래밍 경험이 필요하지 않습니다.\n기본 HTML 및 CSS 지식은 있으면 좋지만 필수는 아닙니다\n\n\n강의를 듣고 JavaScript를 마스터해서 커리어를 발전시키세요!\n강의에서 뵙겠습니다!\n- Maximilian\n\n\n강의를 들으시고 수업 내용에 관한 질문은 영어로 남겨 주셔야 강사님의 답변을 받으실 수 있습니다 :)",
      "target_audience": [
        "JavaScript 경험이 없거나 적은 초급 웹 개발 수강생",
        "JavaScript에 대한 기본 사항은 알고 있지만 지식을 심화하려는 개발자",
        "핵심 세부 사항에 대해 더 배우고 고급 개념에 대해 자세히 알아보려는 고급 JavaScript 개발자",
        "JavaScript을 배우고 싶고 작동 방식에 관심이 있는 모든 분들"
      ]
    },
    {
      "title": "C#とSQLServerを繋いでデータを操作する4つの方法",
      "url": "https://www.udemy.com/course/cs_sqlserver1/",
      "bio": "DataTable，SqlDataReader，Dapper，EntityFrameworkの４つのデータ操作の方法を解説しています",
      "objectives": [
        "VisualstudioとSQLServerをインストールする方法",
        "DataTableでのSQLServerとの接続方法",
        "SqlDataReaderでのSQLServerとの接続方法",
        "SqlCommandでInsert文やUpdate文を発行する方法"
      ],
      "course_content": {
        "C#とSQLServerを繋いでデータを操作する4つの方法": [
          "01_はじめに",
          "02_VisualStudio2019のインストール",
          "SQLServer2022のインストール_SSMS21対応版（レクチャーは2017を使用）",
          "04_データベースとテーブルの作成",
          "05_プロジェクトの作成",
          "06_接続先文字列の作成",
          "07_データテーブルでのデータの取得",
          "08_Sqlアクセスクラスの作成",
          "09_SqlDataReaderでのデータ取得",
          "10_SqlDataReaderの結果をカスタムクラスに入れる方法",
          "11_SqlCommandでInsert文を発行する方法",
          "12_SqlCommandでUpdate文を発行する方法",
          "13_Update対象がなかったらInsertする方法",
          "14_SqlCommandでDelete文を発行する方法",
          "15_Dapperでデータを取得する方法",
          "16_DapperでInsert文を発行する方法",
          "17_EntityFrameworkをインストールしてDbContextを作成する方法",
          "18_EntityFrameworkでデータを取得する方法",
          "19_EntityFrameworkでInsert文を発行する方法",
          "20_EntityFrameworkでUpdate文を発行する方法",
          "21_EntityFrameworkでDelete文を発行する方法",
          "22_Helperクラスを作ってSqlCommand操作を共通化する方法",
          "23_大量データの作成",
          "24_4つのデータのとり方のパフォーマンスチェック",
          "25_4つの結果を踏まえて講評",
          "さいごに",
          "サンプルコード",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Visualstudio2019とSQLServerが動作する環境"
      ],
      "description": "どうもこんにちは，ピーコックアンダーソンです。\nこのコースはC#とSQLServerのつなぎ方に特化したコースで\n・DataTable\n・SqlDataReader\n・Dapper\n・EntityFrameworkという４つのデータの操作方法を解説しています。\n\n\nあまりC#でのデータベースへの接続に自信のない方は是非受講してみてください。\n\n\nはじめに\n02_VisualStudio2019のインストール\n03_SQLServerのインストール\n04_データベースとテーブルの作成\n05_プロジェクトの作成\n06_接続先文字列の作成\n07_データテーブルでのデータの取得\n08_Sqlアクセスクラスの作成\n09_SqlDataReaderでのデータ取得\n10_SqlDataReaderの結果をカスタムクラスに入れる方法\n11_SqlCommandでInsert文を発行する方法\n12_SqlCommandでUpdate文を発行する方法\n13_Update対象がなかったらInsertする方法\n14_SqlCommandでDelete文を発行する方法\n15_Dapperでデータを取得する方法\n16_DapperでInsert文を発行する方法\n17_EntityFrameworkをインストールしてDbContextを作成する方法\n18_EntityFrameworkでデータを取得する方法\n19_EntityFrameworkでInsert文を発行する方法\n20_EntityFrameworkでUpdate文を発行する方法\n21_EntityFrameworkでDelete文を発行する方法\n22_Helperクラスを作ってSqlCommand操作を共通化する方法\n23_大量データの作成\n24_4つのデータのとり方のパフォーマンスチェック\n25_4つの結果を踏まえて講評\nさいごに",
      "target_audience": [
        "C#でSQLServerとの接続方法を知りたい方"
      ]
    },
    {
      "title": "Fortgeschrittene Python Programmierung [2024 Edition]",
      "url": "https://www.udemy.com/course/fortgeschrittene-python-programmierung/",
      "bio": "Hebe dich von der Masse ab: Werde zum Python 3.12 Experten und meistere das Packaging, Tooling, PEP8, Unit Tests uvm.",
      "objectives": [
        "Coding Guidelines und Good Practice Programmierung (PEP8)",
        "Debugging, Logging, Profiling, Timing und Unit Testing",
        "Erstellen eigener Packages und Dokumentationen",
        "Die verschiedenen Arten, Python Code auszuführen",
        "Speicherverwaltung von Variablen in Python (Mutability)",
        "Der richtige Einsatz von Sequences und Iterables",
        "Funktionen, Decorators, Lambdas etc.",
        "Objektorientierung und Vererbung",
        "Die Einbindung von Cython Code",
        "Die Verwendung der Python C API",
        "Async und Paralleler Code"
      ],
      "course_content": {
        "Kapitel 1: Einleitung und Software": [
          "Einleitung in den Kurs",
          "Handbuch des Kurses",
          "Materialien des Kurses",
          "Das Installieren der Pakete",
          "Visual Studio Code",
          "Die ersten Schritte mit VS Code"
        ],
        "Kapitel 2 - 0: Python Profi Tips 101": [
          "Einfache Type Annotations - Teil 1",
          "f-Strings - Teil 1",
          "Python Pro 101"
        ],
        "Kapitel 2 - 1: Numerischen Werte": [
          "Integers",
          "Floats",
          "Integers und Floats"
        ],
        "Kapitel 2 - 2: Logische Ausdrücke": [
          "Booleans",
          "Python 3.10: Match Anweisung",
          "Logische Ausdrücke"
        ],
        "Kapitel 2 - 3: Speicherverwaltung": [
          "Variablen und Referenzen",
          "Mutability von Datentypen",
          "In-Place Operations und Shallow/Deep Copy",
          "Speicherverwaltung"
        ],
        "Kapitel 2 - 4: Python unter der Haube": [
          "Disassembler, Syntax Tree und Flow Graph"
        ],
        "Kapitel 3 - 1: Container": [
          "Lists",
          "Tuples",
          "Listen und Tuples",
          "Dictionaries",
          "Sets",
          "Dictionaries und Sets"
        ],
        "Kapitel 3 - 2: Strings, Files und Format": [
          "Strings",
          "f-Strings - Teil 2",
          "Pfade",
          "Strings und Dateien"
        ],
        "Kapitel 4 - 1: Funktionen": [
          "Wichtiges zu Funktionen",
          "Probleme bei Default Arguments",
          "*args und **kwargs",
          "Special Parameters bei Funktionen",
          "Funktionen",
          "Commandline Arguments - Teil 1",
          "Commandline Arguments - Teil 2",
          "Commandline Arguments - Teil 3",
          "Commandline Arguments"
        ],
        "Kapitel 4 - 2: Closures und Decorators": [
          "Closures und Decorator",
          "Weiteres zu Decorator",
          "Closures und Decorators"
        ]
      },
      "requirements": [
        "Die Grundlagen der Python Programmierung (Variablen, Listen, Dicts, Klassen etc.)",
        "Erfahrung im Umgang mit dem Terminal (bzw. der CMD)"
      ],
      "description": "Der Kurs wird immer auf dem neusten Stand gehalten und behandelt Themen zu Python 3.12!\nKursbeschreibung:\nDer Kurs führt dich in die Welt der professionellen Python-Entwicklung ein und bereitet dich darauf vor, ein Top-Python-Programmierer zu werden.\nDu wirst fortgeschrittene Konzepte wie Decorators kennenlernen und dich mit Exception- und Error-Handling, sowie den grundlegenden Coding Guidelines und Good Practice-Programmierung (PEP8) beschäftigen. Der Kurs zeigt dir auch, wie du effektiv Debugging, Logging, Profiling, Timing und Unit Testing einsetzen kannst, um qualitativ hochwertige Software zu entwickeln.\nWeiterhin lernst du, eigene Packages und Dokumentationen zu erstellen und fortgeschrittene Techniken wie die Einbindung von Cython, Multiprocessing, Multithreading und asynchrone Programmierung anzuwenden. Schließlich wirst du die Möglichkeiten der Python C-API und die Verwendung von PyBind11 kennenlernen.\nDer Kurs vermittelt dir das nötige Wissen und die Fähigkeiten, um in der Welt der Python-Programmierung hervorzustechen und auf deinem Weg zum Senior-Python-Programmierer enorme Fortschritte zu machen.\nDieser Kurs besteht aus folgenden Themengebieten:\nSpeicherverwaltung von Variablen in Python\nDer richtige Einsatz von Container\nBesonderheiten von Funktionen, Decorators, Lambdas etc.\nBesonderheiten der Objektorientierung und Vererbung\nExceptions und Error Handling\nCoding Guidelines und Good Practice Programmierung (PEP8)\nDebugging, Logging, Profiling, Timing und Unit Testing\nErstellen eigener Packages und Dokumentationen\nDie Einbindung von Cython\nDas Verwenden von Multiprocessing und Multithreading\nDas Verwenden von asynchroner Programmierung\nDie Verwendung der Python C API\nDie Verwendung von PyBind11 (Einstiegs-Beispiel)\nDie neusten Features von Python 3.10, 3.11 und 3.12\nWerde noch heute ein Profi, in der Technologie von Morgen!\nWir sehen uns im Kurs!\n\n\nHinweis:\nIm Kurs wird Python über Anaconda installiert. Wenn dies für Euch nicht möglich ist, könnt ihr auch über andere Quellen Python installieren.",
      "target_audience": [
        "Python-Entwickler mit Grundkenntnissen"
      ]
    },
    {
      "title": "Programación Orientada a Objetos",
      "url": "https://www.udemy.com/course/programacion-orientada-a-objetos-poo/",
      "bio": "Aprende Programación Orientada a Objetos (POO) con C++ desde lo básico hasta lo avanzado de forma sencilla y con ayudas",
      "objectives": [
        "Cómo crear objetos (Abstración)",
        "Diferentes tipos de Constructores y cómo manejar la memoria con los Destructores",
        "Encapsulamiento (public, private, protected)",
        "Implementación de Seguridad en el código",
        "Herencia Simple y Herencia Múltiple",
        "Sobrecarga",
        "Polimorfismo",
        "HAREMOS 2 PROYECTOS SIMULTANEAMENTE: El control de un simulador de unas olimpiadas y el motor de juego para Pokemon"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de programación (variables, bucles...)",
        "¡Ganas de aprender!"
      ],
      "description": "En este curso de Programación Orientada a Objetos con C++ aprenderás de forma básica y muy completa todos los conceptos relacionados con los objetos. Este curso dará un recorrido completo desde las características más básicas hasta las más avanzadas, explicado todo con ejemplos y de forma muy sencilla. De hecho a lo largo del curso desarrollaremos 2 proyectos basados en objetos.\nAprenderás habilidades fundamentales para la programación orientada a objetos como:\nAbstracción\nConstructores por defecto y específicos\nEncapsulamiento\nAtributos y métodos (get, set y otros)\nHerencia Simple y Múltiple\nSobrecarga\nPolimorfismo\nOptimización de recursos, e implementación de seguridad en el código\n\n\nAdemás contarás con material didáctico descargable, consejos desde mi experiencia de +15 años programando, todo el código creado durante el disponible para tí y ejercicios resueltos, para que entiendas qué lógica hay detrás de cada paso que daremos. No solo te explicó cómo se hace cada cosa sino también el porqué.\n\n\nEl curso está dividido en 3 bloques principales abordados a lo largo de las diferentes secciones:\n\n\nObjetos\nEn este bloque aprenderás a abstraer cualquier elemento de la vida real para ser representado en código con sus correspondientes atributos y métodos. Este paso es lo que te ayudará a crear objetos para crear código con toda la potencia que la POO ofrece.\nTambién te enseñaré como hacer un uso correcto del ámbito de los atributos y métodos con public, private y protected enseñándote cuándo es mejor usar cada uno de ellos. Igualmente te explicaré de qué forma puedes crear tu código para hacer un mejor uso de la memoria del dispositivo donde se ejecute el programa que desarolles. Así que no solo te explico cómo hacer código sino como hacer buen código que no consuma muchos recursos, ¡algo que todos los usuarios agradecen!\n\n\nHerencia\nEn este bloque aprenderás a hacer herencia entre objetos. ¿Cómo organizar los constructores combinadamente? ¿Cómo llevar un buen control de las propiedades heredadas y su forma de uso?\nEstas cuestiones se responderán con ejemplos detallados mientras hago código para tí, además aprovecharé para explicarte qué es la sobrecarga y como aprovecharte de esta alternativa\n\n\nPolimorfismo y Herencia múltiple\nPara este último bloque he reservado los conceptos más avanzados que seguro comprenderás a través de ejemplos explicados al detalle. Veremos casos de creación de herencia mútiple y los desafíos que esto conllevo. También aprenderás polimorfismo, algo especialmente importante en la programación orientada a objetos, a través del proyecto que crearé durante el curso sobre el software de simulación de unas olimpiadas junto al proyecto que tú tendrás que desarrollar a lo largo de los ejercicios con la aplicacion de todos los conceptos aprendidos al software de un videojuego\n\n\nTodos los conceptos se explican en detalle, paso a paso y entendiendo el porqué de cada cosa. Así podrás asentar unas correctas bases sobre estos pilares de la programación desde un principio en tu desarrollo profesional.\n¿Verdad que es genial? Pues lo mejor de todo es que está a tu alcance.\nCompra el curso y disfruta de todo lo que te está esperando.\nNos vemos!\nJosé Javier Villena",
      "target_audience": [
        "Estudiantes de programación",
        "Cualquier interesado en aprender a programar"
      ]
    },
    {
      "title": "Aprenda linguagem STL do CLP da Siemens",
      "url": "https://www.udemy.com/course/aprenda-linguagem-stl-clp-siemens-tia_portal/",
      "bio": "Linguagem STL (Statement list)",
      "objectives": [
        "Entender e desenvolver programas na linguagem STL (Lista de Instrução)"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Bit Logic Instructions": [
          "Bit Logic Instructions - Video 1",
          "Bit Logic Instructions - Video 2",
          "Bit Logic Instructions - Video 3"
        ],
        "Comparison Instructions": [
          "Comparison Instructions - Video 1",
          "Comparison Instructions - Video 2"
        ],
        "Conversion Instructions": [
          "Conversion Instructions - Video 1",
          "Conversion Instructions - Video 2"
        ],
        "Counter Instructions": [
          "Counter Instructions - Video 1",
          "Counter Instructions - Video 2"
        ],
        "Data Block Instructions": [
          "Data Block Instructions - Video 1",
          "Data Block Instructions - Video 2"
        ],
        "Logic Control Instructions": [
          "Logic Control Instructions - Video 1",
          "Logic Control Instructions - Video 2",
          "Logic Control Instructions - Video 3",
          "Logic Control Instructions - Video 4"
        ],
        "Math Instructions": [
          "Math Instructions - Video 1",
          "Math Instructions - Video 2",
          "Math Instructions - Video 3",
          "Math Instructions - Video 4"
        ],
        "Program Control Instructions": [
          "Program Control Instructions - Video 1",
          "Program Control Instructions - Video 2"
        ],
        "Indirect Pointer Register": [
          "Indirect Pointer Register - Video 1",
          "Indirect Pointer Register - Video 2"
        ]
      },
      "requirements": [
        "Noção básica de CLP (Controladores Lógicos Programáveis)"
      ],
      "description": "O objetivo do curso é descomplicar as lógicas mais elaboradas em STL (loops, ponteiros, ponteiro tipo ANY, instruções matemáticas, jumps). Muitas máquinas são importadas e a programação vem em STL. Há uma dificuldade enorme para os profissionais de manutenção fazer qualquer alteração necessária. Com esse curso, o profissional poderá entender o que foi desenvolvido, como também ter habilidade para fazer novas lógicas (FC´s e FB´s) na linguagem STL. O curso é dividido em 12 capítulos:\n-Bit Logic Instructions\n-Comparison Instructions\n-Conversion Instructions\n-Counter Instructions\n-Data Block Instructions\n-Logic Control Instructions\n-Math Instructions\n-Program Control Instructions\n-Load  and Transfer Instructions\n-Indirect Address\n-ANY Pointer\n-PID",
      "target_audience": [
        "estudantes de nível técnico, superior e profissionais na área de tecnologia e automação industrial"
      ]
    },
    {
      "title": "Lógica de Programação Para Iniciantes e Estudantes",
      "url": "https://www.udemy.com/course/logica-de-programacao-java-python-visualg-e-javascript/",
      "bio": "Aprenda os Principais Conceitos de Programação de Computadores com Exemplos Práticos Passo a Passo para Iniciantes",
      "objectives": [
        "Lógica utilizada na programação de computadores",
        "Conceitos de programação de computadores em diferentes linguagens",
        "Como analisar e encontrar possíveis soluções computacionais",
        "Diferenças entre algumas linguagens de programação",
        "Conceitos de programação de computadores em Portugol com VisualG",
        "Trabalhar com variáveis, estruturas de Decisão e de repetição entre outros",
        "Quais as Possíveis áreas de atuação de um profissional desenvolvedor"
      ],
      "course_content": {
        "Lógica de Programação com Práticas em VisualG, JavaScript e Python": [
          "A Importância da Lógica de Programação",
          "O que é Lógica de Programação",
          "Apresentação e Instalação dos Softwares",
          "Instalação em Computadores Mac",
          "O Que São Variáveis?",
          "Primeiro Algoritmo",
          "Problema, Solução e Validação",
          "Analisando o Processo Inicial",
          "Teste seus Conhecimentos",
          "Questionário"
        ],
        "Estrutura de Decisão": [
          "Estrutura IF/ELSE (SE/SENÃO)",
          "IF/ELSE na Prática",
          "Adicionando \"E\" na Estrutura",
          "Adicionando \"OU\" na Estrutura",
          "Exemplo de Controle de Notas",
          "Cálculos com na Estrutura SE/SENÃO",
          "Próximos Passos"
        ],
        "Exemplo Prático - Programação Web para Iniciantes": [
          "Programação Web",
          "Configurando o Exercício",
          "Exemplo Prático: Programando em JavaScript",
          "IF/ELSE em JavaScript na Prática"
        ],
        "Linguagens de Programação": [
          "Sobre Java e Python",
          "Exemplo em Python"
        ],
        "Estrutura de Repetição - Loop": [
          "Loop - Estrutura de Repetição",
          "Loop na Prática",
          "Complementando a Estrutura de Repetição",
          "Exercício"
        ],
        "Fluxograma": [
          "Sobre Fluxograma",
          "Exemplo de Fluxograma"
        ],
        "Vetores": [
          "Sobre Vetores",
          "Vetores na Prática",
          "Análise de Dados com Vetores",
          "Exemplo de Cadastro de Pessoas com Vetores"
        ],
        "Switch Case": [
          "Sobre Switch Case",
          "Loop e Switch Case",
          "Próximos Passos",
          "Instalação do Ambiente de Desenvolvimento",
          "Primeiro Programa em Java",
          "Exemplo de Switch Case em Java",
          "Mais sobre Java"
        ],
        "Conteúdo EXTRA - Utilizando IA ChatGPT nos Estudos de Lógica": [
          "O que é IA (Inteligência Artificial)?",
          "Introdução ao ChatGPT",
          "Utilizando ChatGPT nos Estudos",
          "Revisão e Considerações Finais"
        ]
      },
      "requirements": [
        "Ter acesso a um computador com Internet",
        "Interesse por Programação de Computadores",
        "Observação Importante: O principal Software utilizado neste curso não tem versão para máquinas da Apple."
      ],
      "description": "Lógica de Programação para Iniciantes e Estudantes.\n\nEm nossa grade vamos abordar os temas mais importantes para quem deseja trabalhar com desenvolvimento:\n\n\nO que é Lógica de Programação\nConceitos e Exemplos Práticos de Variáveis\nEstrutura de Decisão com IF/ELSE\nFluxograma\nEstrutura de Repetição coom LOOP\nVetores\nSwitch Case\nExemplos Práticos em JavaScript, Python e Java\nExemplo de uso da IA ChatGPT para auxiliar nos estudos.\n\n\nCurso completo de lógica de programação para pessoas que desejam de fato entender os processos de desenvolvimento de códigos por intermédio da lógica.\nEste curso é indicado para todos os estudantes que precisam ter o primeiro contato com programação de computadores, seja para início em carreira ou mesmo para complementar seus estudos técnicos e até mesmo superiores.\n\n\nAqui você terá toda a base necessária para programar em todas as linguagens de programação, pois vamos abordar a estrutura (lógica de programação) geral, o que permitirá ao aluno(a) desenvolver códigos com mais facilidade e de forma mais concisa.\nCurso 100% pensado para iniciantes com foco no entendimento da lógica por trás da programação de softwares em geral.\n\n\nAbordaremos exemplos práticos com as linguagens Python, Java e JavaScript.\n\n\nComo EXTRA teremos aulas com dicas de uso da IA ChatGPT para o complemento dos estudos.\n\n\nNão perca mais tempo e cadastre-se agora mesmo!\n\n\nTe vejo nas aulas.",
      "target_audience": [
        "Pessoas interessadas em ingressar na área de informática",
        "Pessoas interessadas em atuar na área de Desenvolvimento",
        "Estudantes de Tecnologia",
        "Estudantes da Área de Informática",
        "Pessoas que tenham curiosidade sobre programação de computadores",
        "Pessoas que buscam opções no Mercado de Trabalho",
        "Estudantes ou Profissionais que tenham dúvidas sobre o ingresso em uma Faculdade de Tecnologia",
        "Pessoas que queiram aprender como Programar computadores e quais as dificuldades encontradas no ramo"
      ]
    },
    {
      "title": "Máster en Hacking con Python - Vuélvase un Hacker Ético",
      "url": "https://www.udemy.com/course/python-de-0-hasta-hacking/",
      "bio": "¡Conviértete en un Hacker Ético con Python con este curso totalmente desde 0 siendo el más completo de la habla hispana!",
      "objectives": [
        "[+] 🛡️ Optimización de trabajos",
        "[+] 🛡️ Creación de herramientas para pentesting",
        "[+] 🛡️ Detectar, evaluar y explotar vulnerablidades con sus propias herramientas",
        "[+] 🛡️ Darle a Python un enfoque diferente... ¡Uno que vaya a otro nivel!",
        "[+] 🛡️ Tener bases solidas para seguir llevando su conocimiento al limite",
        "[+] 🛡️ Mayor campo laboral",
        "[+] 🛡️ Conocer diferentes métodos web",
        "[+] 🛡️ Como los hacker's desarrollan herramientas",
        "[+] 🛡️ Desarrollar Scanners web",
        "[+] 🛡️ Desarrollar Scanners de red",
        "[+] 🛡️ Interactuar con los servicios de Shodan",
        "[+] 🛡️ Integración de Python con otras herramientas",
        "[+] 🛡️ Integración con API's",
        "[+] 🛡️ Teorías sobre el desarrollo de Malware",
        "[+] 🛡️ Creación de Malware como Ransomwares y Keyloggers",
        "[+] 🛡️ Técnicas de Web Scrapping",
        "[+] 🛡️ Comprensión de los conceptos fundamentales que todo Hacker debe tener",
        "[+] 🛡️ Manejo de archivos desde Python",
        "[+] 🛡️ Interacción con servicios DNS",
        "[+] 🛡️ Comprensión y manejo de sockets desde Python",
        "[+] 🛡️ Como funcionan los eventos del teclado",
        "[+] 🛡️ Como funcionan las conexiones a internet",
        "[+] 🛡️ Como trabajar con módulos de terceros",
        "[+] 🛡️ Como realizar consultas a sitios",
        "[+] 🛡️ Evadir restricciones por cabeceras"
      ],
      "course_content": {
        "Bienvenida": [
          "Hacking con Python: Bienvenida",
          "Hacking con Python: Sobre Python"
        ],
        "Preparación del entorno de trabajo": [
          "Hacking con Python: Editores de código",
          "Hacking con Python: Instalando sublime text en Windows",
          "Hacking con Python: Instalando sublime text en Linux",
          "Hacking con Python: Instalando el interprete de Python 2 en Windows",
          "Hacking con Python: Instalación de Python3 en Windows",
          "Hacking con Python: Instalación del interprete en Linux"
        ],
        "Primeros pasos con Python": [
          "Hacking con Python: Nuestro primer programa en Python",
          "Hacking con Python: Primer programa en Python 3",
          "Hacking con Python: Tipos de datos",
          "Hacking con Python: Strings en Python",
          "Hacking con Python: Strings en Python 3",
          "Hacking con Python: Enteros en Python",
          "Hacking con Python: Enteros con Python 3",
          "Hacking con Python: Flotantes en Python",
          "Hacking con Python: Flotantes con Python 3"
        ],
        "Operadores en Python": [
          "Hacking con Python: Operadores en Python",
          "Hacking con Python: Operadores Booleanos (extra)",
          "Hacking con Python: Operadores Booleanos (Python 2 y Python 3)",
          "Hacking con Python: Operadores aritméticos en Python 2",
          "Hacking con Python: Operadores aritméticos en Python 3",
          "Hacking con Python: Operadores relacionales En Python 2",
          "Hacking con Python: Operadores relacionales en Python 3",
          "Hacking con Python: Operadores lógicos en Python 2",
          "Hacking con Python: Operadores lógicos en Python 3",
          "Hacking con Python: Entrada de datos en Python 2",
          "Hacking con Python: Entrada de datos en Python 3"
        ],
        "Condicionales y bucles": [
          "Hacking con Python: Sentencias",
          "Hacking con Python: El condicional \"if\", \"elif\" y \"else\"",
          "Hacking con Python: \"IF\", \"ELIF\" y \"ELSE\" en Python 3",
          "Hacking con Python: Bucle \"while\"",
          "Hacking con Python: Bucle \"WHILE\" en Python 3",
          "Hacking con Python: Bucle \"for\"",
          "Hacking con Python: Bucle \"FOR\" en Python 3"
        ],
        "Estructuras de datos": [
          "Hacking con Python: Estructura de datos",
          "Hacking con Python: Estructuras de datos con Python 3",
          "Hacking con Python: Listas",
          "Hacking con Python: Tuplas",
          "Hacking con Python: Diccionarios",
          "Hacking con Python: list comprehension"
        ],
        "Manejo de archivos con Python": [
          "Hacking con Python: Manejo de archivos",
          "Hacking con Python: Manejo de archivos con Python 3",
          "Hacking con Python: Escribir Ficheros",
          "Hacking con Python: Leer ficheros",
          "Hacking con Python: Añadir contenido a un fichero"
        ],
        "Clases y funciones": [
          "Hacking con Python: Clases y funciones",
          "Hacking con Python: Clases y funciones en Python 3",
          "Hacking con Python: Programando nuestra primera función",
          "Hacking con Python: Argumentos en funciones",
          "Hacking con Python: Ejercicio con funciones",
          "Hacking con Python: Programando nuestra primera clase",
          "Hacking con Python: Decoradores @staticmethod, @classmethod y @property"
        ],
        "Manejo de errores": [
          "Hacking con Python: ¿Qué son los manejos de errores?",
          "Hacking con Python: Sentencia \"try\", \"except\" y \"finally\""
        ],
        "Modulo y paquetes": [
          "Hacking con Python: ¿Qué es y para que nos sirve un modulo?",
          "Hacking con Python: Creando nuestros propios modulos",
          "Hacking con Python: ¿Qué es un paquete?",
          "Hacking con Python: Creando nuestros propios paquetes"
        ]
      },
      "requirements": [
        "Cualquier dispositivo que pueda conectarse a internet :)",
        "Curiosidad y ganas de llevar su conocimiento a otro nivel",
        "¡Muchas ganas de aprender!",
        "Una buena taza de café"
      ],
      "description": "Aprende desde lo más básico del lenguaje de Python hasta darle un enfoque al Hacking.\nNo importa si tienes o no conocimientos previos en el tema, acá aprenderás todo lo necesario, desde tu primer \"Hola Mundo\" hasta la construcción y diseño de herramientas como:\nbackdoors que mantengan acceso en un sistema operativo.\nherramientas que se encarguen de validar la seguridad en aplicaciones, el desarrollo de poderosos Scanners de red.\nAplicaciones que sean capaces de interactuar con sitios o hasta que realicen búsquedas de dispositivos conectados a internet a través del API de Shodan y mucho.\nCreación de Keyloggers para análisis de funcionamiento.\nCreación de ransomwares en entornos controlados para fines de aprendizaje.\nCreación de herramientas de password guessing y fuerza bruta\nCreación y manipulación de paquetes con Scapy\nTécnicas de anonimato utilizando Python y mucho más\nY eso es solo un poco de lo que aprenderemos, la subida de nuevo contenido es constante y se tiene como objetivo hacer de este curso el más completo para la habla hispana sobre el Hacking con Python. Pero desde luego, una vez que hayas culminado este curso, ¡podrás darle el enfoque que tu desees!\nAlgunas reseñas de mis estudiantes:\n\nDaniel Gutiérrez\n⭐⭐⭐⭐⭐\nEl mejor curso que he hecho en Udemy!. El profesor domina la materia y explica muy bien cada tema. Muchas gracias por los conocimientos compartidos!\n\n\nJonathan Vivar\n⭐⭐⭐⭐⭐\nmas que bueno el curso explica a la perfección y además da una introducción al tema para entender el concepto de todo lo que se va a hacer.\n\nJuan Castillo Tapia\n⭐⭐⭐⭐⭐\nEXCELENTE , Estoy muy agradecido por todo el conocimiento que he adquirido, es mucho mas de lo que yo esperaba, gracias por el excelente curso. Saludos y muchas gracias al MAESTRO.\n\n\nAlexander Henry Obispo Buendia\n⭐⭐⭐⭐⭐\nEl curso es perfecto para empezar en el mundo de la seguridad informática orientado a crear nuestras primeras herramientos y aprendiendo mucho de librerías y nuevos conceptos sobre esta área. Me encanto el curso, muy agradecido con el instructor por que contesto mis interrogantes y mis dudas\n\nOswaldo Ríos\n⭐⭐⭐⭐⭐\nCubre muchos puntos básicos de python, con lo que podemos realizar scripts o programas por nuestra cuenta, de igual manera cubre puntos para realizar pruebas de HE o darnos idea de cómo explotar python en más pruebas que solo las vistas en el curso.\nMuy útil!\n\n\nJosé Miguel Luna\n⭐⭐⭐⭐⭐\nWow excelente Curso, lo recomiendo. Te enseña desde las bases del lenguaje Python, hasta crear tus propias herramientas para Pentesting. Y lo mejor de todo es que el Curso sigue vivo, añadiéndole nuevo contenido constantemente.\n\nAlgunas secciones que podrían interesarte:\n- Interactuando con sitios web\n- Construyendo Scanner's Web\n- Interactuando con registros de sitios\n- Interactuando con sistemas operativos\n- Trabajando con sockets\n- Shodan y Python\n- Nmap y Python\n- Fuerza bruta a servicios\n- Web Scrapping\n- Explotación de vulnerabilidades web\n- Malware con Python\n- Password Cracking\n- Ataques en redes locales con SCAPY\n- Anonimato",
      "target_audience": [
        "Este curso va dirigido a toda aquella persona que busque aprender desde 0 la programación con Python hasta darle un enfoque de seguridad informática, no hay exclusiones, tanto novatos como personas con conocimientos previos son bienvenidos.",
        "Toda persona interesada en aprender",
        "Personas con ansias de superación"
      ]
    },
    {
      "title": "【Java - オブジェクト指向編】難所の項目を完全理解！（豊富な図解/演習問題/Java Silver試験対応）",
      "url": "https://www.udemy.com/course/uz-java-obj/",
      "bio": "オブジェクト指向の苦手をゼロに！初学者でも理解できる設計",
      "objectives": [
        "システム開発のコアであるオブジェクト指向を使いこなせるようになります。",
        "オブジェクト指向に基づいた簡単なゲームプログラムを書くことができるようになります。",
        "演習問題&詳細な解説を通してオブジェクト指向の「これだけは」というポイントを身につけることができます。",
        "Javaプログラミングの応用力や設計に関する知見が広がります。",
        "統合開発環境（eclipse）を利用した高度な開発手法を学ぶことができます。"
      ],
      "course_content": {
        "J2-00_はじめに": [
          "質問方法とAIの活用",
          "プログラマーの学習領域と本コースの学習領域",
          "補足ガイダンス（オブジェクト指向編）",
          "活用相談・キャリア相談はここからできます！",
          "問題演習サイト（Java Silver対応）がご利用いただけます（無料・登録不要）",
          "Java動画講義とJavaSilver試験の対応表＆補足資料"
        ],
        "J2-00_環境構築補足 ※『基礎固め編』受講済みの方は不要": [
          "Java開発環境構築",
          "補講_Javaの有償化問題",
          "補講_eclipseでのJava実行の基本",
          "補講_eclipseでのコマンドライン引数の使用",
          "サクラエディタのインストール（Windows）"
        ],
        "J2-01_オブジェクト指向とは": [
          "オブジェクト指向とは",
          "★ウズカレからあなたへ、ちょっとしたお願い"
        ],
        "J2-02_コンストラクタ": [
          "コンストラクタ",
          "＜解答例＆解説＞コンストラクタ"
        ],
        "J2-03_カプセル化": [
          "カプセル化",
          "＜解答例＆解説＞カプセル化"
        ],
        "J2-04_継承①": [
          "継承①"
        ],
        "J2-05_継承②": [
          "継承②"
        ],
        "J2-06_static": [
          "static"
        ],
        "J2-07_その他のオブジェクト指向の知識": [
          "その他のオブジェクト指向の知識"
        ],
        "J2-補講_正規表現": [
          "正規表現"
        ]
      },
      "requirements": [
        "Javaの基礎知識を一通りお持ちの方。（別コース【Java - 基礎編】を修了していることが望ましい）",
        "ご自身のPC（Windows/Mac）をお持ちの方。",
        "ある程度のインターネット環境をお持ちの方。動画をストリーミング再生できるレベルであれば問題ありません。",
        "ある程度のPC操作が可能な方。ファイルやフォルダの新規作成・解凍が問題なくできるレベルであれば問題ありません。"
      ],
      "description": "▼このコースの特徴\nJavaプログラミングにおける難所『オブジェクト指向』をじっくり丁寧に解説していきます。最終的にオブジェクト指向の考え方に基づいた100~200行程度のプログラムを自在に書けるレベルに到達していただきます。豊富な図解やサンプルソースコード、丁寧な説明とハンズオン、適度な難易度の演習問題と詳細な解説を用意しておりますので、受講後にはきっとオブジェクト指向を明確にイメージしながらプログラミングができるようになっているはずです。",
      "target_audience": [
        "Javaプログラミングの独学に挫折してしまった方。",
        "色々勉強するも結局オブジェクト指向がなんなのかわからないままの方。",
        "未経験からのプログラマー就職を目指している方。",
        "一度Javaの学習をしたものの理解が曖昧で学び直しをしたい方。",
        "納得しないと・理解しきらないと気が済まないタイプの方。",
        "活字が苦手で図解多めの教材で学習をしたい方。"
      ]
    },
    {
      "title": "Introduccion a Python",
      "url": "https://www.udemy.com/course/introduccion-a-python/",
      "bio": "¡Aprende Python como un profesional! ¡Comienza desde lo básico y aprender a crear tus propias aplicaciones !",
      "objectives": [
        "Utilizar Python para manipular todo tipo de información",
        "Introduccion e Instalación de Entorno de Python",
        "Aprenderás sobre la programación para crear aplicaciones para escritorio y las herramientas necesarias.",
        "Capacidad para resolver errores y enfrentar problemas reales.",
        "Conocer todo sobre Python Básica: las herramientas esenciales y los fundamentos básicos de Python como (variables, operadores, sentencias, programación a objetos y muchos más.)"
      ],
      "course_content": {
        "Configuracion Entorno": [
          "Acerca De Python",
          "Instalación & Configuración Sublime Text",
          "Python - Instalacion & Configuración",
          "Actualizar Version de Python",
          "Configuracion Key Bindings"
        ],
        "Sintaxis": [
          "Creando nuestro primer archivo",
          "Comentarios",
          "Salto de Linea & Tabulaciones",
          "Variables",
          "Tipos de Datos Intro",
          "Numericos",
          "Operador Aritmetico",
          "Strings",
          "Strings-Concatenacion",
          "Strings-Metodos",
          "Operdores Relacionales",
          "Operadores Logicos",
          "Booleans",
          "Listas",
          "Listas - Accesibilidad",
          "Listas - Longitud",
          "Listas - Union",
          "Listas - Cambiar Elementos",
          "Listas - Metodos",
          "Listas - Metodos de Agregacion",
          "Listas - Metodos de Replicacion",
          "Listas - Metodos de Eliminación",
          "Listas - Metodos de Ordenamiento",
          "Tuplas",
          "Tuplas - Accesibilidad",
          "Tuplas - Longitud",
          "Tuplas - Union",
          "Conversion Tuplas Listas",
          "Tuplas - Metodos",
          "Diccionarios",
          "Diccionarios - Accesibilidad",
          "Diccionarios - Longitud",
          "Diccionarios - Cambio,Agregacion & Eliminacion",
          "Diccionarios Metodos",
          "Diccionarios - Metodos de Actualizacion",
          "Diccionarios - Metodos de Agregacion",
          "Diccionarios - Metodos de Eliminacion",
          "Diccionarios - Metodos de Replicacion",
          "Diccionarios - Metodos de Busqueda",
          "Input",
          "Operadores IN & NOT IN",
          "Condicional IF",
          "Condicional ELIF",
          "Condicional IF ELSE - parte I",
          "Condicional IF ELSE - parte II",
          "Ciclo FOR",
          "Ciclo FOR - Sentencias Break, Continue & Pass",
          "Ciclo While",
          "Ciclo While - Sentencias Break & Continue",
          "Set",
          "Set - Accesibilidad",
          "Set - Longitud",
          "Set - Metodos",
          "Set - Metodos de Agregacion",
          "Set - Metodos de Replicacion",
          "Set - Metodos de Eliminación",
          "Range",
          "Funciones",
          "Funciones con Parametros",
          "Funciones con Parametros Opcionales",
          "Funciones con Parametros Nombrados & Posicionales",
          "Funciones con Parametros args",
          "Funciones con Parametros kwargs",
          "Funciones Avanzadas",
          "Funcion Lambda",
          "Funcion Filter",
          "Funcion Map",
          "Generadores",
          "Generadores Yield From",
          "Try Except & Finally"
        ],
        "Importante MEGA NOTICIA": [
          "Invitación"
        ]
      },
      "requirements": [
        "Saber manipular un ordenador o laptop",
        "Dominar la lógica de programación",
        "Instalar y configurar Python"
      ],
      "description": "¡Conviértase en un programador experimentado en Python y mejore sus habilidades en este lenguaje!\nPython es uno de los lenguajes más buscados del mundo. Por su sencillez, su ductilidad y su flexibilidad, se ha transformado en el lenguaje favorito. Sus instrucciones son lo más cercanas posible al lenguaje humano, lo cual hace que sea más fácil de aprender, y esto hace que sea ideal para personas que se están iniciando en el mundo de la programación.\nSu popularidad se debe, entre otras cosas se debe a la cantidad de librerías que contiene, tipos de datos y funciones incorporadas en el propio lenguaje, que ayudan a realizar muchas tareas habituales sin necesidad de tener que programarlas desde cero. La sencillez y velocidad con la que se crean los programas. La cantidad de plataformas en las que podemos desarrollar, además, Python es gratuito, incluso para propósitos empresariales.\nEn este curso, le enseñaremos Python de una manera práctica, con cada clase y cada recurso adjuntado, para eso hemos divido el curso en secciones las cuales mencionare acontinuación:\n\n\nPrimeros Pasos en Python\nSintaxis\nTipos de Datos\nOperadores\nListas\nTuplas\nEstructuras Condicionales\nCiclos Repetitivos (Bucles)\nFunciones\nGeneradores\nManejo de Excepciones\n\n\n¿Entonces, Qué esperas? ¡Aprenda Python de una manera que avance en su carrera  mejora tus conocimientos y da un salto adelante en tu carrera profesional, todo de una manera divertida y práctica!",
      "target_audience": [
        "Ingenieros de sistemas",
        "Estudiantes de ingeniera de software",
        "Emprendedores",
        "Personas con amplia ganas de aprender"
      ]
    },
    {
      "title": "Aprendendo a programar em Java",
      "url": "https://www.udemy.com/course/aprendendo-a-programar-em-java/",
      "bio": "Introdução ao paradigma orientado a objetos e os conceitos básicos da linguagem Java.",
      "objectives": [
        "Entender os conceitos da programação orientada a objetos.",
        "Criar suas próprias aplicações em Java.",
        "Obter conhecimentos em Java que são essenciais para futuramente você desenvolver aplicações Web e para dispositivos Android."
      ],
      "course_content": {
        "APRESENTAÇÃO": [
          "Introdução",
          "Tópicos Abordados"
        ],
        "PARADIGMA ORIENTADO A OBJETOS": [
          "Paradigma de Programação",
          "Paradigma Orientado a Objetos - (objetos, propriedades e operações)",
          "Paradigma Orientado a Objetos (classes, atributos e métodos)",
          "Paradigma Orientado a Objetos - (encapsulamento)",
          "Teste 01",
          "Teste 02"
        ],
        "CONCEITOS BÁSICOS DA LINGUAGEM JAVA": [
          "Conceitos Básicos",
          "Plataformas Java",
          "Ambiente de Programação",
          "Downloading - JDK & IDE",
          "Teste 03"
        ],
        "SINTAXE BÁSICA DA LINGUAGEM JAVA": [
          "Primeiro Programa em Java - parte I",
          "Primeiro Programa em Java - parte II",
          "Primeiro Programa em Java - parte III",
          "Primeiro Programa em Java - parte IV",
          "Primeiro Programa em Java - parte V",
          "Fluxo da Compilação e Execução de uma Aplicação Java",
          "Pacotes (Packages)",
          "Leitura do Teclado",
          "A Classe String",
          "Estrutura Geral de uma Classe",
          "Teste 04",
          "Teste 05"
        ],
        "TIPOS PRIMITIVOS DE DADOS": [
          "Tipos Primitivos de Dados",
          "Operadores Básicos",
          "Operadores Aritméticos",
          "Operadores Relacionais",
          "Operadores Binários",
          "Operadores Lógicos",
          "Precedência de Operadores",
          "Teste 06"
        ],
        "ESTRUTURAS DE CONTROLE DE FLUXO": [
          "Controle de Fluxo Condicional",
          "Controle de Fluxo de Seleção",
          "Controle de Fluxo de Repetição - parte I",
          "Controle de Fluxo de Repetição - parte II",
          "Teste 07"
        ],
        "CONSTRUTORES": [
          "PROJETO - Fase 1",
          "Introdução aos construtores",
          "Tipos de Construtores",
          "Teste 08",
          "Teste 09",
          "Implementando métodos da classe"
        ],
        "MÉTODOS E ATRIBUTOS ESTÁTICOS": [
          "Atributos Estáticos",
          "PROJETO - Fase 2",
          "Métodos Estáticos",
          "PROJETO - Fase 3",
          "Teste 10",
          "Teste 11",
          "Trabalhando com membros estáticos"
        ],
        "HERANÇA": [
          "PROJETO - Fase 4",
          "Introdução à Herança",
          "PROJETO - Fase 5",
          "Teste 12"
        ],
        "MODIFICADORES DE ACESSO": [
          "Monificadores de Acesso: public, private e protected",
          "Modificador final",
          "Teste 13",
          "Teste 14"
        ]
      },
      "requirements": [
        "Nenhum pré-requisito é necessário para fazer este curso. Tudo que você precisa para começar a programar em Java está incluso neste curso, e as ferramentas de desenvolvimento utilizadas são gratuitas."
      ],
      "description": "Neste curso você aprenderá o que realmente é a programação orientada a objetos e os conceitos essenciais para você desenvolver suas próprias aplicações em Java.\nEste curso é fortemente baseado no paradigma de programação orientada a objetos, possibilitando alavancar o seu aprendizado para outras linguagens orientadas a objetos além do Java.\nIsto NÃO é um tutorial com meros exemplos em Java. Este é um verdadeiro curso de Java que ensina desde os conceitos básicos da linguagem tais como, objetos e classes, até os tópicos mais avançados da linguagem tais como, threads e semáforos.\nNão se preocupe se você não é um expert em programação ou se você não tem qualquer conhecimento em Java, pois este curso destina-se a TODOS os níveis de estudantes.\nDivirta-se programando!\n*Os códigos Java dos projetos contidos neste curso estão disponíveis para download, bem como, os slides apresentados.",
      "target_audience": [
        "Este curso destina-se à iniciantes não familiarizados com a linguagem Java ou, até mesmo, àqueles que estão procurando se aperfeiçoar nesta linguagem de programação.",
        "Se você é um estudante de computação, ou um programador com certa experiência, ou uma pessoa sem conhecimentos em programação, mas que deseja se tornar um programador Java, então este curso é para você!"
      ]
    },
    {
      "title": "Fundamentos de Programação Moderna com Kotlin - Android",
      "url": "https://www.udemy.com/course/curso-kotlin-pt/",
      "bio": "Kotlin é uma linguagem mais moderna e 100% compatível com Java. Desenvolvimento Android. Acompanha apostila completa!",
      "objectives": [
        "Conheceram o fundamentos da linguagem Kotlin",
        "Aprender a usar as estruturas de controle, operadores, funções, classes, lambdas...",
        "Aprenderão sobre os fundamentos de Orientação a Objetos com Kotlin",
        "Falaremos também de alguns recursos avançados como: reflexão, anotação e generics",
        "Implementaremos um jogo de Campo Minado para revisar tudo que aprendemos"
      ],
      "course_content": {
        "Introdução": [
          "Visão Geral do Curso",
          "Apostila & Repositório",
          "Links: Apostila & Repositório",
          "Java vs Kotlin",
          "Usando o Terminal",
          "Terminais"
        ],
        "Configuração do Ambiente": [
          "Aviso importante aos usuários de Windows",
          "Instalação Java JDK e IntelliJ",
          "Links: Instalação Java JDK e IntelliJ"
        ],
        "Conceitos Básicos": [
          "Criando Projeto Kotlin",
          "Primeiro Programa em Kotlin",
          "Comentários",
          "Variáveis",
          "Cuidado com Inferência #01",
          "Cuidado com Inferência #02",
          "Usando Constantes",
          "Usando Constantes Java",
          "Tipos Básicos em Kotlin",
          "Exemplo de Função #01",
          "Exemplo de Função #02",
          "Template String #01",
          "Template String #02",
          "Notação Ponto",
          "Operador de Chamada Segura",
          "Operador Elvis",
          "Forçando NullPointerException",
          "Explorando os Imports",
          "Dois Ajustes na IDE",
          "Estrutura de Controle: If",
          "Estrutura de Controle: If/Else #01",
          "Estrutura de Controle: If/Else #02",
          "Estrutura de Controle: If/Else If",
          "Refatorando para When",
          "Estrutura de Controle: While #01",
          "Estrutura de Controle: While #02",
          "Estrutura de Controle: For #01",
          "Estrutura de Controle: For #02",
          "Estrutura de Controle: For #03",
          "Estrutura de Controle: For #04",
          "Estrutura de Controle: Do While",
          "Usando o Break #01",
          "Usando o Break #02",
          "Usando o Continue",
          "Operadores: Visão Geral",
          "Operadores: Atribuição",
          "Operadores: Destructuring",
          "Operadores: Aritméticos",
          "Operadores: Relacionais",
          "Operadores: Lógicos",
          "Operadores: Unários",
          "Operadores: Simulando Ternário #01",
          "Operadores: Simulando Ternário #02",
          "Conversão Número/String",
          "Checagem de Tipos",
          "Smart Cast",
          "Operador Cast"
        ],
        "Funções": [
          "Funções Top Level",
          "Argumentos Nomeados",
          "Parâmetros são Imutáveis",
          "Parâmetros Padrões",
          "Simulando Múltiplos Retornos",
          "Adicionando Método em Classe Existente",
          "Java: Chamando Função Kotlin",
          "Argumentos Variáveis",
          "Função Infix",
          "Funções Retornam Unit",
          "Passando Função como Parâmetro #01",
          "Passando Função como Parâmetro #02",
          "Função Inline #01",
          "Função Inline #02"
        ],
        "Classes e Objetos": [
          "Classe e Objetos: Visão Geral",
          "Classe: Exemplo Básico #01",
          "Classe: Exemplo Básico #02",
          "Classe: Membros #01",
          "Classe: Membros #02",
          "Tipos de Variáveis em Kotlin",
          "Class vs Data Class",
          "Método Construtor #01",
          "Método Construtor #02",
          "Bloco Init",
          "Getters & Setters",
          "Getters Calculados",
          "Membros de Classe vs Instância",
          "Passagem por Referência",
          "Enum Class #01",
          "Enum Class #02"
        ],
        "Lambdas": [
          "Meu Lambda #01",
          "Meu Lambda #02",
          "Usando sortedBy",
          "Usando filter e sortedBy",
          "Usando map #01",
          "Usando map #02",
          "Usando takeIf",
          "Usando apply",
          "Usando let",
          "Usando run"
        ],
        "Coleções": [
          "Coleções: Visão Geral",
          "Usando o Array",
          "Usando a função arrayListOf",
          "Usando o intArrayList",
          "ArrayList Heterogêneos",
          "União de ArrayList",
          "ArrayList de Objetos",
          "Usando For em Coleções #01",
          "Usando For em Coleções #02",
          "Matriz: Array de Arrays",
          "Usando Set #01",
          "Usando Set #02",
          "Usando Map #01",
          "Usando Map #02",
          "Hashcode & Equals"
        ],
        "Orientação a Objetos": [
          "Pilares da OO: Visão Geral",
          "Pilares da OO: Encapsulamento #01",
          "Pilares da OO: Encapsulamento #02",
          "Pilares da OO: Herança",
          "Usando this() & super()",
          "Exemplo SEM Polimorfismo",
          "Exemplo COM Polimorfismo"
        ],
        "Avançado": [
          "Exemplo de Recursividade",
          "Usando Generics",
          "Sobrecarga de Operadores",
          "Usando Anotação & Reflexão"
        ],
        "Projeto Campo Minado": [
          "Visão Geral do Projeto",
          "Mostrando o Jogo",
          "Modelo: Classe Campo",
          "Modelo: Classe Tabuleiro #01",
          "Modelo: Classe Tabuleiro #02",
          "Visão: Classe MouseCliqueListener",
          "Visão: Classe BotaoCampo",
          "Visão: Classe PainelTabuleiro",
          "Visão: Classe TelaPrincipal"
        ]
      },
      "requirements": [
        "Você ter uma noção de como usar um PC",
        "Desejável conhecimento básico de algoritmo"
      ],
      "description": "Seja muito bem vindo ao curso de Kotlin Essencial: Aprenda a Nova Linguagem do Android!\nEm 2017 Google I/O anunciou Kotlin como a nova linguagem oficial do Android e isso trouxe uma grande visibilidade e relevância para o Kotlin, mas o uso em Aplicações Android é só parte do escopo atendido pelo Kotlin, na verdade qualquer aplicação desenvolvida em Java pode se beneficiar da modernidade e dos novos recursos, pois o Kotlin funciona em máquinas virtuais Java a partir da versão 6 e consegue trabalhar de forma integrada com qualquer aplicação em Java.\nO Java é uma das linguagens mais utilizadas do mundo e é fortemente adotada no mundo corporativo, entretanto nos últimos anos apresentou uma evolução muito lenta. Nesse cenário a adoção do Kotlin se torna ainda mais importante, porque vários recursos que o Java não adotou, estão disponíveis no Kotlin, tornando-a uma linguagem mais moderna e com a segurança de que o código é totalmente compatível com JVM 6 ou superiores.\nAlém dos vídeos, será disponibilizado uma apostila com todos os exercícios e o repositório com todo o código para te auxiliar nos estudos. Alguns dos assuntos abordados são:\nEstruturas de Controle\nOperadores\nNull Safety\nChecagem de Tipos e Cast\nClasses\nFunções\nLambdas\nColeções\nOO: Encapsulamento, Herança e Polimorfismo\nEnumerações\nGenerics\nReflexão\nAnotação\nSobrecarga de Operadores\nNo final do curso nós faremos um Projeto do jogo Campo Minado para que você tenha a oportunidade de treinar em um projeto real os conceitos que foram ministrados no curso.\nPode ter certeza que todo o conteúdo será disponibilizado com a máxima qualidade e sempre que você precisar estaremos à disposição para atender eventuais dúvidas sobre o curso no fórum.\nA equipe Cod3r te recebe de braços abertos e bons estudos.",
      "target_audience": [
        "Qualquer pessoa que queira aprender a codificar",
        "Desenvolvedores Java que desejam conhecer o Kotlin e seus novos recursos",
        "Desenvolvedores Android que querem utilizar Kotlin em suas Apps"
      ]
    },
    {
      "title": "Python Artık Çocuk Oyuncağı ve Örnekler Python",
      "url": "https://www.udemy.com/course/pythonartikcocukoyuncagi/",
      "bio": "Her yaştan yazılım heveslisine hitap eden Python kursuma hoşgeldiniz...Hem başlangıç hem de ileri seviye için bekliyorum",
      "objectives": [
        "Kendi uygulamalarını yazabilecek, programlama konusunda harika bir deneyim yaşayacaklardır.",
        "Zihinlerindeki pek çok proje için altyapı sahibi olacak ve çözüm yolları geliştirebileceklerdir."
      ],
      "course_content": {
        "Giriş": [
          "Beni Tanımak İster misin?",
          "Neden Programlama Öğrenmeliyiz?",
          "Python Nedir? Neden Python? Neden Hackerler Python Tercih Eder?",
          "Hangi Editörü Kullanmam Gerekir?"
        ],
        "Python Kurulumu": [
          "Python Nereden İndirebilirim?",
          "Kurulum Adımları Nasıldır?"
        ],
        "İnteraktif Shell Kullanımı": [
          "İnteraktif Shell (Etkileşimli Kabuk ) Nedir?",
          "Shell Nasıl Kullanılır",
          "Basit Matematiksel İşlemler Kabukta Nasıl Yapılır?",
          "Turtle Modülüne Giriş ve Kare Çizimi",
          "Turtle ile Üçgen Çizelim"
        ],
        "Pythonda Kullanılan Temel Veri Tipleri": [
          "Veri Tipleri Hakkında Genel Bilgi",
          "String Veri Tipi",
          "İnteger (Tamsayı) Veri Tipi",
          "Float (Kayan Noktalı Sayı) Veri Tipi",
          "Boolean Veri Tipi"
        ],
        "Kullanıcıdan Veri Almak": [
          "Kullanıcıdan Veri Almak",
          "Değişken Tanımlama Kuralları",
          "Print Komutuyla Birden Fazla Parametre Kullanımı",
          "Veri Tipi Dönüşümleri",
          "Matematiksel İşleçler",
          "Örnek Uygulama -1 : Boyların Ortalamasını Bulalım",
          "Örnek Uygulama -2: Basketbolcunun Atış Ortalaması",
          "Örnek Uygulama -3 :Alan Hesaplama",
          "Örnek Uygulama -4: Futbol Sahasının Çevresi",
          "Örnek Uygulama -5: Dairenin Çevresi ve Alanının Hesaplanması"
        ],
        "Koşullu İfadeler": [
          "Koşullu İfadeler Nedir? Nasıl Kullanılır ve Sık Yapılan Hatalar",
          "Örnek Uygulama -6 : Tek mi Çift mi?",
          "Mantıksal Operatörler - (VE) Örnek Uygulama -7 : Kırmızı Ferrari",
          "Mantıksal Operatörler - (VEYA) Örnek Uygulama -8: Makarna -Tost",
          "Örnek Uygulama -9 : Zorunlu Askerlik Kriterleri",
          "Örnek Uygulama -10: İETT",
          "Örnek Uygulama -11: Hitap Örneği",
          "Örnek Uygulama -12: Not Skalası",
          "Örnek Uygulama : Günün Saatleri",
          "Örnek Uygulama: Günün Saatlerini Sistemden Almak",
          "Örnek Uygulama: Taş, Kağıt, Makas Oyunu (uzun)",
          "Örnek Uygulama: Taş, Kağıt, Makas Oyunu (kısa)",
          "Örnek Uygulama: 4 İşlem Makinesi",
          "Örnek Uygulama: Kan Grupları"
        ],
        "Döngüler": [
          "Döngü ne demektir.?",
          "Örnek Uygulama 13 : Sayı Tahmin Oyunu V1. (While)",
          "Örnek Uygulama 14: Sayı Tahmin Oyunu Profesyonel (While Döngüsü)",
          "Örnek Uygulama 15: Basit Hesap Makinesi (While)",
          "For Döngüsüne Giriş",
          "Örnek Uygulama 16: Turtle ile Kare Çizelim (For Döngüsü)",
          "Örnek Uygulama 17: Turtle ile Daire Çizelim (For Döngüsü)",
          "Örnek Uygulama 18: Turtle ile Daire Çizimi V2. (For Döngüsü)",
          "Örnek Uygulama 19: İç İçe Daireler ile görsel Show(For Döngüsü)",
          "Örnek Uygulama 20: Tek Sayıları Toplayalım (For Döngüsü)",
          "Örnek Uygulama 21: Faktöriyel Kavramını Öğrenelim (For Döngüsü)",
          "Örnek Uygulama 22: İsminizdeki Sessiz Harfleri Bulalım (For Döngüsü)",
          "Örnek Uygulama 23: Güvenli Şifre Kontrol Programı(For Döngüsü)",
          "Örnek Uygulama: İç İçe Kareler",
          "Örnek Uygulama: İç İçe For Döngüsü ile Şifre Oluşturma"
        ],
        "Karakter Dizileri": [
          "Karakter Dizilerine Giriş",
          "Shell Üzerinden Karakter Dizileri Kullanımı",
          "Örnek Uygulama 24: Anne Kızlık Soyadı Uygulaması",
          "Upper - Lower - Isupper - Islower kullanımı",
          "Count - Len- Index komutları ve Eposta Adresi geçerlilik uygulaması",
          "Karakter Dizilerini Birleştirme ve Parçalama",
          "Örnek Uygulama 25: Split Örneği",
          "Isalpha, Isnumeric ve isalnum kullanımı",
          "Örnek Uygulama 26: Sefer Sayısı Sorgulama",
          "Endswith - Startswith kullanımı",
          "Örnek Uygulama 27: Devlete Ait Site Adreslerinin Kontrolü",
          "Örnek Uygulama 28: TC Kimlik Numara doğrulama",
          "Kelime Tahmin Oyunu"
        ],
        "Listeler": [
          "Listelere Giriş",
          "Liste Elemanlarına Erişim, Gezinme ve IN kullanımı",
          "Listelerde Append ve Insert Metotlarının Kullanımı",
          "Listelerde Pop ve Remove Metotlarının Kullanımı",
          "Listelerde Index ve Count Metotlarının Kullanımı",
          "Listelerde Sort ve Clear Metotlarının Kullanımı",
          "Örnek Uygulama 29: QUIZ",
          "Örnek Uygulama 30: Rüzgar Gülü",
          "Tombala versiyon-1",
          "Tombala Versiyon -2"
        ],
        "Demetler": [
          "Demetlere Giriş",
          "Demet Tanımlama ve LEN-COUNT fonksiyonları",
          "Örnek Uygulama: 31 Tübitak Örneği",
          "Örnek Uygulama:32 İskambil Kartları",
          "Örnek Uygulama 33: Taş Kağıt Makas oyunu"
        ]
      },
      "requirements": [
        "Programlama konusunda istekli olmanız yeterlidir. Parmaklar çalışsın artık diyorsanız doğru yerdesiniz."
      ],
      "description": "Bugün ortaokulların 5. ve 6. sınıflarında bilişim teknolojileri ve yazılım dersi okutulmakta. Peki, neden böyle bir ders okutulmakta? Hepimiz hemen hemen her gün bilgisayarları günlük işlerimiz için veya oyun oynamak için kullanıyoruz hiç bilgisayarların nasıl çalıştığını ya da oynadığınız oyunların ve kullandığınız programların nasıl çalıştığını merak etmediniz mi? Her gün internet sitelerini kullanıyoruz peki internet siteleri nasıl oluşuyor ya da siz bir tane yapamaz mısınız? Merak etmediniz mi? İnsanlar her gün onlarca şeyi merak ediyor ve araştırıyorlar. Bugün teknolojimizin bu kadar ileride olmasının nedeni merak etmemiz. Kafamızı kaldırıyoruz gökyüzüne bakıyoruz yıldızları görüyoruz acaba dünyadan başka bir gezegende hayat var mı? Bu merakın sonucu olarak şu anda Mars’a uzay aracı gönderildi. Merak etmekten korkmayın bu bizim yaratılış doğamızda var.\nBilgisayara bir işi yaptırırken yani programlarken düşünmeyi öğreniriz. Analiz yapabilme ve problem çözebilme yeteneğimiz artar. Bir sorunla karşılaştığımızda daha iyi düşünebiliriz ve o sorun için bulduğumuz çözümlerin sayısı artar. Olaylara daha ayrıntılı bakabiliriz. Bilgisayarda program yazarken algoritmalar geliştiririz. Algoritma problemin adım adım çözülme sürecidir. Bu da bize olayları detaylı düşünebilme ve çözebilme yeteneği kazandırır. Bu kazanımları kazanabilmeniz çok önemlidir. İşte bu nedenden ötürü okullarımızda bilişim teknolojileri ve yazılım dersleri okutulmakta.\n21. yüzyıl öğrencilerinin edinmesi gereken kazanımlar vardır. -Problem çözebilme -Analiz yapabilme -Eleştirel düşünce -Girişimcilik vb. Bu kazanımların içinde bilgisayarları programlamayı öğrenmekte yer almakta\nBilgisayar programlarının nasıl yapıldığını öğrenmek size bir şey kaybettirmez, aksine çok şey kazandırır.",
      "target_audience": [
        "Çocuklarına programlama öğretmek isteyen yetişkinler, gerçek bir programlama diliyle tanışmak isteyen tüm yetişkinler bu kurs sizin için hem eğlenceli hem de öğretici olacaktır",
        "Programlama ile tanışmak isteyen herkes"
      ]
    },
    {
      "title": "Algoritmos e lógica de programação com Python 3 (c/ projeto)",
      "url": "https://www.udemy.com/course/algoritmos-e-logica-de-programacao-com-python-3-c-projeto/",
      "bio": "Entre no mundo da programação com Python 3, aprenda lógica de programação do básico ao avançado, algoritmos, exercícios",
      "objectives": [
        "Lógica de programação do básico ao avançado, com teoria e exercícios",
        "Resolver algorítimos dos mais simples aos mais complexos",
        "Programar em Python do iníco até os recursos mais avançados da linguagem",
        "Criar softwares em Python",
        "Criar projetos em Python"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Apresentação do curso em detalhes",
          "Por que Python?",
          "Instalando Python no Windows",
          "Instalando Python no Linux",
          "Instalando VS Code no Windows",
          "Instalando VS Code no Linux",
          "Primeiro programa com Python",
          "Utilizando o interpretador",
          "Exercício 1",
          "Exercício 2",
          "Como tirar o melhor proveito do curso",
          "Arquivos do curso",
          "Indicações de Livros",
          "Conclusão da seção",
          "Quiz sobre a introdução ao Python",
          "Como aprender programação mais rápido e ter sucesso na carreira",
          "Teste para saber sua dificuldade com programação"
        ],
        "Variáveis, tipos de dados e operadores": [
          "Introdução da seção",
          "O que são variáveis",
          "Atribuindo valores",
          "Exercício 3",
          "Nomes válidos para variáveis",
          "Valores numéricos",
          "Exercício 4",
          "Valores Booleanos",
          "Operadores relacionais",
          "Operador de igualdade e diferença",
          "Operador maior e menor que",
          "Operador maior ou igual e menor ou igual que",
          "Exercício 5",
          "Operadores lógicos",
          "Operador lógico: not",
          "Operador lógico: and",
          "Operador lógico: or",
          "Exercício 6",
          "Expressões lógicas",
          "Exercício 7",
          "Exercício 8",
          "Exercício 9",
          "Variáveis com texto",
          "Acessando caracteres de string",
          "Concatenação",
          "Exercício 10",
          "Strings dinâmicas",
          "Strings com floats",
          "Exercício 11",
          "Exercício 12",
          "Manipulação de string",
          "Manipulação de string parte 2",
          "Exercício 13",
          "Input de dados",
          "Exercício 14",
          "Conversão de dados",
          "Exercício 15",
          "Exercício 16",
          "Exercício 17",
          "Exercício 18",
          "Erro de conversão de dados",
          "Conclusão da seção",
          "Quiz sobre variáveis e tipos de dados"
        ],
        "Estruturas de condição": [
          "Introdução da seção",
          "O que é lógica de programação?",
          "O que é algoritmo?",
          "Exercício 19",
          "O que é uma estrutura de condição?",
          "Conhecendo o if",
          "Exercício 20",
          "Exercício 21",
          "Exercício 22",
          "Conhecendo o else",
          "Exercício 23",
          "Exercício 24",
          "Estrutura de if aninhado",
          "Exercício 25",
          "Condicional elif",
          "Exercício 26",
          "Exercício 27",
          "Utilização de if",
          "Conclusão da seção",
          "Você ainda não é Dev Júnior?"
        ],
        "Estruturas de repetição": [
          "Introdução da seção",
          "O que é uma estrutura de repetição?",
          "A estrutura while",
          "Exercício 28",
          "Exercício 29",
          "Exercício 30",
          "Exercício 31",
          "A instrução break",
          "Exercício 32",
          "Exercício 33",
          "Repetições aninhadas",
          "A estrutura for",
          "Exercício 34",
          "Exercício 35",
          "Conclusão da seção"
        ],
        "Listas": [
          "Introdução da seção",
          "O que são listas?",
          "Acessando e modificando elementos",
          "Percorrendo listas",
          "Exercício 36",
          "Exercício 37",
          "Cópia de listas",
          "Cópia de listas parte 2",
          "Fatiamento de listas",
          "Execício 38",
          "Quantidade de elementos na lista",
          "Loop baseado na quantidade de elementos",
          "Exercício 39",
          "Adicionando elementos",
          "Exercício 40",
          "Exercício 41",
          "Deletando elemento de uma lista",
          "Exercício 42",
          "Buscando itens na lista",
          "Exercício 43",
          "For com listas",
          "Exercício 44",
          "Função range",
          "Range com incremento",
          "Exercício 45",
          "Algoritmo de maior valor",
          "Exercício 46",
          "Listas dentro de listas",
          "Exercício 47",
          "Dicionários",
          "Exercício 48",
          "Verificando chaves",
          "Adicionando e deletando chaves",
          "Exercício 49",
          "Tuplas",
          "Iterando em tuplas",
          "Conclusão"
        ],
        "Funções": [
          "Introdução da seção",
          "O que é uma função?",
          "Exercício 50",
          "Retornando valores",
          "Exercício 51",
          "Exercício 52",
          "Exercício 53",
          "Exercício 54",
          "Entendendo o escopo",
          "Função recursiva",
          "Parâmetro opcional",
          "Exercício 55",
          "Parâmetro opcional e obrigatório",
          "Função como argumento",
          "Exercício 56",
          "Sequência de parâmetros",
          "Exercício 57",
          "Funções lambda",
          "Modularização de código",
          "Execício 58",
          "Gerando números aleatórios",
          "Exercício 59",
          "Conclusão da seção"
        ],
        "Introdução a Orientação a Objetos": [
          "Introdução da seção",
          "O que é Orientação a Objetos?",
          "O que são classes?",
          "O que são objetos?",
          "Exercício 60",
          "Criando métodos",
          "Exercício 61",
          "Exercício 62",
          "Herança",
          "Substituindo métodos",
          "Exercício 63",
          "Métodos mágicos",
          "Propriedades constantes",
          "Encapsulamento",
          "Deletando objetos",
          "Exercício 64",
          "Conclusão da seção"
        ],
        "Manipulação de strings": [
          "Introdução da seção",
          "Convertendo lista para string",
          "Checando início da string",
          "Convertendo string para maiúsculo e minúsculo",
          "Checando se existe uma palavra na string",
          "Contando número de ocorrências",
          "Encontrando palavra em string",
          "Dividindo string",
          "Trocando palavra em string",
          "Checando se string é composta por números",
          "Conclusão da seção",
          "Resolvendo Problemas com Python 3"
        ],
        "Projeto 1: Jogo da forca": [
          "Apresentação do projeto",
          "Estrutura base do jogo",
          "Recebendo dados do usuário",
          "Condição de vitória e derrota por letra enviada",
          "Conclusão do jogo"
        ],
        "Projeto 2: Relógio": [
          "Apresentação ao projeto",
          "Construção do projeto"
        ]
      },
      "requirements": [
        "Força de vontade",
        "Ter um computador com Windows, Linux ou Mac e também acesso a internet"
      ],
      "description": "Está em busca de um curso de Algoritmos e lógica de programação com Python 3?\nPython é uma das linguagens mais versáteis, ela está presente em desenvolvimento web, desktop, mobile, data science, machine learning e muitas outras áreas!\nPor que não aprender esta linguagem e entrar no mundo da programação? Esta é a proposta deste curso: desbravar uma das linguagens mais utilizadas mundialmente, abordando todos os principais conceitos da programação como:\nalgoritmos;\nlógica de programação;\nvariáveis;\nestruturas de condição;\nestruturas de repetição;\ntipos de dados;\nintrodução a orientação a objetos;\ne muito mais!\nMas não para por aí, você terá uma tonelada de exercícios, todos com resolução e explicação das melhores práticas, para poder entender como funciona o dia a dia de um programador, ou seja, além da teoria de todos os tópicos essenciais para um desenvolvedor, você também sentirá na prática como é desenvolver sistemas.\nEntão se você quer aprender a programar em Python 3 do jeito certo, entender como os softwares que você utiliza são criados e ainda compreender de fato como a programação funciona, este é o seu curso!\nO que é algoritmos e lógica de programação?\nAlgoritmos e lógica de programação são conceitos fundamentais na área da programação. Um algoritmo é um conjunto de instruções sequenciais que permite resolver um problema de maneira sistemática e eficiente. A lógica de programação, por sua vez, é a habilidade de organizar essas instruções de forma lógica e estruturada.\nEsses conceitos são utilizados diariamente por programadores e desenvolvedores em diversas tarefas. Essenciais para a criação de programas, desenvolvimento de software e resolução de problemas complexos. Os algoritmos e a lógica de programação permitem que os profissionais descrevam passo a passo as ações necessárias para alcançar um determinado objetivo.\nAo dominar a lógica de programação, os desenvolvedores têm a capacidade de escrever códigos mais claros, eficientes e livres de erros. Podem dividir um problema complexo em partes menores e mais gerenciáveis, facilitando o processo de desenvolvimento.\n\n\nOs algoritmos e a lógica de programação são fundamentais para otimizar o desempenho de um programa. Ao criar algoritmos eficientes, os desenvolvedores podem economizar tempo de execução e recursos do sistema.\nA habilidade de desenvolver algoritmos e aplicar a lógica de programação também é altamente valorizada no mercado de trabalho. Os profissionais que possuem um bom entendimento desses conceitos são capazes de resolver problemas de forma mais eficaz, tornando-os mais procurados pelas empresas.\nO conhecimento de algoritmos e lógica de programação é crucial para programadores e desenvolvedores em seu dia a dia. São ferramentas essenciais para a criação de programas funcionais e eficientes, além de serem uma base sólida para o desenvolvimento de habilidades específicas em Python.\nComo aprender algoritmo e lógica de programação?\nAprender algoritmo e lógica de programação é essencial para se tornar um programador competente e ter mais oportunidades no mercado de trabalho. Aqui estão algumas dicas para ajudá-lo no processo de aprendizado:\nEstude os conceitos básicos: Comece com os fundamentos, como variáveis, estruturas de controle (condicionais, loops) e estruturas de dados (listas, arrays).\nPratique com exercícios: Resolva problemas de algoritmos e lógica de programação em plataformas online. Essas plataformas fornecem desafios práticos que ajudam a aprimorar suas habilidades.\nFaça um curso: O Curso de Python da Hora de Codar é uma excelente opção para aprender algoritmo e lógica de programação. Além de fornecer uma introdução sólida aos conceitos, contamos com várias alternativas super práticas.\nParticipe de comunidades: Junte-se a grupos de estudo ou fóruns online, onde é possível interagir com outros aprendizes e compartilhar experiências. Contamos com um grupo no Discord gratuito para os alunos trocarem experiência.\nDesenvolva projetos pessoais: Crie pequenos projetos por conta própria para aplicar os conceitos aprendidos.\nPratique constantemente: A prática regular é a chave para aperfeiçoar suas habilidades em algoritmo e lógica de programação. Dedique tempo diariamente para resolver problemas e trabalhar em projetos.\nLembre-se de que o aprendizado contínuo é essencial para se manter atualizado. À medida que você se torna mais confortável com algoritmos e lógica de programação, explore outras áreas da programação e busque novos desafios. A jornada de aprendizado nunca termina, e a prática constante o ajudará a se tornar um programador cada vez melhor.\nPosso afirmar que este é o último curso de lógica de programação e algoritmos que você vai precisar, a metodologia orientada a situações reais e exercícios práticos promove o completo entendimento do aluno sobre o assunto, os tópicos abordados não serão aplicados somente para Python e sim para qualquer linguagem de programação, você vai levar o conhecimento para a sua vida.\nEstá pronto? Te espero no curso para explorarmos Python juntos!",
      "target_audience": [
        "Desenvolvedores iniciantes",
        "Quem deseja entrar no mundo da programação",
        "Quem quer aprender Python",
        "Quem quer aprender a programar do zero",
        "Quem deseja se tornar um desenvolvedor"
      ]
    },
    {
      "title": "Python: Yapay Zeka için Python Programlama (1)",
      "url": "https://www.udemy.com/course/python-sfrdan-uzmanlga-programlama-1/",
      "bio": "Bir Profesyonel gibi Python öğrenin! Temel konulardan başlayın ve Yapay Zeka öğrenmek için gerekli temelleri atın!",
      "objectives": [
        "CV'nize gönül rahatlığıyla \"Advanced in Python for Artificial Intelligence\" yazabileceksiniz",
        "Python öğrendikten sonra diğer dillere adapte olmanız daha kolay olacak",
        "!!! Tüm samimiyetim ile belirtmeliyim ki bu kurs size anlatmak istediklerimin sadece 7'de 1'i. Bu kurs son kursumuz olan yapay zeka kursunun temellerini oluşturacak. Bir örnek vermek gerekirse hayat bir yapay zeka ise bu kurs sizin bu hayattaki ilk adımlarınız",
        "Veri Bilimi (Data Science) temel kütüphanelerinden olan Numpy, Pandas ve Matplotlib kütüphanelerini öğreneceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "Python Giriş",
          "Python Kurulumları",
          "Udemy Tanıtım",
          "Datai Team Github ve Kaynaklar",
          "Opsiyonel: Google Colab"
        ],
        "Python Temelleri (Python Basics)": [
          "Variables (Değişkenler)",
          "String",
          "Numbers",
          "Variable - String - Number",
          "Built-in Functions",
          "User Defined Functions",
          "Default and Flexible Functions",
          "Built-in - User Defined - Default Functions",
          "Video Quiz 1",
          "Lambda Function",
          "Lambda Function",
          "List",
          "Tuple",
          "Dictionary",
          "List - Tuple - Dictionary",
          "Conditionals (if-else Statements)",
          "Video Quiz 2",
          "For Loop",
          "While Loop",
          "If Else Statement - For & While Loops",
          "Video Quiz 3"
        ],
        "Object Oriented Programming (Nesne Tabanlı Programlama)": [
          "Class and Constructor",
          "Class Variables",
          "Class Example",
          "Nesne Tabanlı Programlama",
          "Opsiyonel Ek Ders: Nesne Tabanlı Programlama"
        ],
        "Dealing with Programming Errors": [
          "Syntax Error",
          "Try - Except 1",
          "Try - Except 2",
          "Programlama Hataları",
          "Ara Sınav"
        ],
        "Numpy": [
          "Numpy Basics",
          "Numpy Basics",
          "Numpy Basic Operations",
          "Numpy Basic Operations",
          "Indexing and Slicing",
          "Indexing and Slicing",
          "Shape Manipulation",
          "Shape Manipulation",
          "Stacking Arrays",
          "Stacking Arrays",
          "Convert and Copy Array"
        ],
        "Pandas": [
          "Introduction to Pandas",
          "Pandas Basic Methods",
          "Pandas Basic Methods",
          "Indexing and Slicing Data Frames",
          "Indexing and Slicing Data Frames",
          "Filtering Pandas Data Frame",
          "Filtering Pandas Data Frame",
          "List Comprehension",
          "Concatenating Data",
          "Concatenating Data",
          "Transforming Data"
        ],
        "Visualization with Matplotlib": [
          "Pandas Review",
          "Line Plot",
          "Scatter Plot",
          "Histogram",
          "Bar Plot",
          "Subplots",
          "Matplotlib"
        ],
        "Python Final Sınavı": [
          "Final Sınavı"
        ],
        "Sonuç": [
          "Python Sonuç",
          "Python Ek Kaynak"
        ],
        "EK-1: (Opsiyonel) Python ile Nesne Tabanlı Programlama": [
          "Sınıflar/Classes",
          "Sınıflar/Classes",
          "Nitelikler/Attributes",
          "Nitelikler/Attributes",
          "Metotlar",
          "Metotlar vs Fonksiyonlar",
          "Metotlar",
          "Yapıcı/Constructor/Initializer",
          "Yapıcı/Constructor/Initializer",
          "Hesap Makinesi Projesi",
          "Hesap Makinesi Ödevi",
          "Kapsülleme/Encapsulation",
          "Kapsülleme/Encapsulation",
          "Miras/Inheritance",
          "Miras/Inheritance",
          "Inheritance Projesi",
          "Soyut Sınıflar/Abstract Classes",
          "Soyut Sınıflar/Abstract Classes",
          "Overriding",
          "Overriding",
          "Polymorphism",
          "Polymorphism",
          "Konu Anlatımı Projesi",
          "Araç Kiralama Projesi Giriş",
          "Araç Kiralama Projesinde Kullanılan Sınıflar ve Metotlar",
          "Araç Kiralama Sınıfı (Parent Class)",
          "Araba Kiralama Sınıfı (Child Class)",
          "Bisiklet Kiralama Sınıfı (Child Class)",
          "Müşteri Sınıfı",
          "Müşteri Giriş Sayfası: Bisiklet Menüsü",
          "Müşteri Giriş Sayfası: Araba Menüsü",
          "Araç Kiralama Projesi Test",
          "Sonuç",
          "BONUS"
        ]
      },
      "requirements": [
        "Önceden herhangi bir programlama bilgisi yada dilinin bilinmesine gerek yoktur",
        "İnternet bağlantılı bir bilgisayara sahip olmak yeterlidir",
        "Hedefler ve gelecekle ilgili güzel hayaller"
      ],
      "description": "Bu kurs 7 adımlık Yapay Zeka yolculuğumuzun ilk bölümünü oluşturmaktadır.\nPython\nData Science (Veri Bilimi)\nVisualization Tools (Görselleştirme Araçları)\nMachine Learning (Makine Öğrenmesi)\nDeep Learning (Derin Öğrenme)\nStatistical Learning (İstatistik)\nArtificial Intelligence (Pekiştirmeli Öğrenme)\nNihai  hedefimiz olan Yapay Zeka algoritmalarını öğrenebilmek için gerekli olan Python dili alt yapısını öğreneceğiz.\nNeden Python?\nPython 2020 IEEE araştırmasına göre dünya çapında en çok kullanılan ve tercih edilen programlama dillerinden biri.\nPython kolay öğrenilebilirliği sayesinde kodlamaya yeni başlayanların ilk tercihi oluyor.\nPython open source (açık kaynak) olması nedeni ile Facebook yada Google gibi dünyanın en büyük şirketleri tarafından destekleniyor.\nVeri bilimi, makine öğrenmesi ya da yapay zeka denince akla ilk olarak Python dili geliyor. Bu durum da Python'ın dünya çapında büyük bir kitlesinin olmasına neden oluyor.\nKariyer açısından Python en çok fırsata sahip dillerinden biri.\nBu Kurs ile Alacaklarınız\nSıfırdan Kodlama Becerisi: Sizinle birlikte kod yazıyoruz. Her ders boş bir sayfa ile başlar ve kodu sıfırdan yazarız. Bu şekilde ilerleyebilir ve kodun nasıl bir araya geldiğini ve her satırın ne anlama geldiğini tam olarak anlayabilirsiniz.\nKodlar ve Şablonları: Kursta oluşturduğumuz her Python şablonlarını ve kodunu indirebilirsiniz. Bu, sizlere hem daha sonra kod üzerinde pratik yapma hem de kendi projelerinizi şablon sayesinde daha kolay bir şekilde yaratma imkanı sağlayacaktır\nTeori ve Mantık: Size yalnızca kod yazmayı değil, hem yazdığımız kodun arkasında yatan mantığı ve teoriyi hem de neden böyle bir kod yazdığımızı anlatıyoruz.\nKurs içi destek: Size sadece video ile ders anlatımı yapmıyoruz. Size destek olmak için profesyonel Veri Bilimcilerinden oluşan bir ekip oluşturduk. Bu da ders ve ya ders dışı sorularınıza en fazla 72 saat içinde yanıt alacağınız anlamına geliyor.\nPython Kursu İçeriği\nGerekli Yazılımların Kurulması\nAnaconda/Python\nPython Temelleri\nVariable (değişken)\nString\nNumbers (Sayılar)\nBuilt-in Function (Yerleşik Fonksiyonlar)\nUser Defined Function (Kullanıcı Tanımlı Fonksiyonlar)\nLambda Function\nList\nTuple\nDictionary\nIf-else statements\nFor and While Loops (Döngüler)\nObject Oriented Programming\nClass and Constructor\nClass Variables (sınıf değişkenleri)\nHatalar ile Baş Etmek\nSyntax Hataları\nExceptions\nNumpy Kütüphanesi\nNumpy Basics (Numpy Temelleri)\nNumpy Operations (Numpy Operasyonları)\nIndexing and Slicing\nShape Manipulation\nStacking Arrays\nConvert and Copy Array\nPandas Kütüphanesi\nPandas'a Giriş\nPandas Basic Methods (Pandas Temel Metodları)\nIndexing and Slicing\nFiltering\nList Comprehension\nConcatenating\nTransform Data\nMatplotlib Kütüphanesi\nPandas Review (Pandas gözden geçirme)\nLine Plot\nScatter Plot\nHistogram\nBar Plot\nSubplots\nEK1: Nesne Tabanlı Programlama (OOP)\nSınıflar/Classes\nNitelikler/Attributes\nMetodlar\nMetodlar vs Fonksiyonlar\nYapıcı/Constructor/Initializer\nKapsülleme/Encapsulation\nMiras/Inheritance\nSoyut Sınıflar/Abstract Classes\nOverriding\nPolymorphism\nAraç Kiralama Projesi\nKurs Hakkında Bazı Öğrenci Yorumları\nEngin ERGÜN\nŞuan itibari ile kursu bitirmiş bulunmaktayım, program oldukça iyi hazırlanmış ve cidden akıcı bir kurstu; sıkılmadan günde birer bölüm izlemek mümkün. Kursu ilgisi olan herkese tavsiye ederim.Elinize ve emeğinize sağlık süper bir iş çıkartmışsınız.\nErgüder Cem Maviş\nMuthis:) Turkce kaynak hususunda cekilen sikintilara Python ozelinde care olmus hocamiz sag olsun var olsun.\nOnur Duman\nKursu an itibari ile bitirmiş bulunmaktayım. Kurs gerçekten oldukça verimliydi. Eğitmenin bilgisi ve isteği ilk videolardan bile gayet anlaşılır. Sorduğum sorulara da kısa bir süre içerisinde ve oldukça açıklayıcı bir şekilde geri dönüş yaptı.\nİçeriğin İngilizce olması sizi yanıltmasın. Derslerimiz tamamen Türkçedir.\nHemen kaydolun ve bir an önce başlayalım.",
      "target_audience": [
        "Python dilinde uzmanlaşmak isteyenler",
        "Bir programlama dili öğrenmek isteyen ama hangisi olduğuna karar veremeyenler",
        "Eğitim yada kariyerini veri bilimi(data science), makine öğrenmesi(machine learning) yada yapay zeka(artificial intelligence) alanlarında başlamak ya da sürdürmek isteyenler"
      ]
    },
    {
      "title": "初心者必見！Pythonでニューラルネット・深層学習を完全攻略",
      "url": "https://www.udemy.com/course/python-dl/",
      "bio": "Tensorflow + Kerasで難しい数学の基礎知識ゼロでも学べるAIとディープ・ラーニング(CNN・RNN)の基本",
      "objectives": [
        "Python言語を用いてプログラミングに触れることが出来る。",
        "人工知能や深層学習のプログラムを自分で作ることが出来る",
        "研究開発や視聴調査などに深層学習を活かすことが出来る。"
      ],
      "course_content": {
        "はじめに": [
          "これから学習を始めるにあたり",
          "講座の概要",
          "自己紹介"
        ],
        "Python入門【基本編】": [
          "Pythonってどんな言語？",
          "簡単なプログラムの実行（説明編）",
          "簡単なプログラムの実行（実践編）",
          "変数と演算①（説明編）",
          "変数と演算①（実践編）",
          "変数と演算②（説明編）",
          "変数と演算②（実践編）",
          "Python振り返り①",
          ".pyファイルの入力と実行",
          "分岐処理①（説明編）",
          "分岐処理①（実践編）",
          "分岐処理②（説明編）",
          "分岐処理②（実践編）",
          "分岐処理③（説明編）",
          "分岐処理③（実践編）",
          "分岐処理",
          "繰りかえし処理①（説明編）",
          "繰りかえし処理①（実践編）",
          "繰りかえし処理②（説明編）",
          "繰りかえし処理②（実践編）",
          "繰りかえし処理③（説明編）",
          "繰りかえし処理③（実践編）"
        ],
        "Python入門【中級編】": [
          "データ構造①（リスト：前編）（説明編）",
          "データ構造①（リスト：前編）（実践編）",
          "データ構造②（リスト：後編）（説明編）",
          "データ構造②（リスト：後編）（実践編）",
          "データ構造③（タプル・集合）（説明編）",
          "データ構造③（タプル・集合）（実践編）",
          "データ構造④（辞書）（説明編）",
          "データ構造⑤（辞書）（実践編）",
          "関数①（説明編）",
          "関数①（実践編）",
          "関数②（説明編）",
          "関数②（実践編）"
        ],
        "Python入門【応用編】": [
          "モジュール①（説明編）",
          "モジュール①（実践編）",
          "モジュール②（説明編）",
          "モジュール②（実践編）",
          "オブジェクト指向①(クラスとオブジェクト）",
          "オブジェクト指向②（インスタンスの生成）",
          "オブジェクト指向③（複数のインスタンス）",
          "オブジェクト指向①～③（実践編）",
          "オブジェクト指向④（継承）（説明編）",
          "オブジェクト指向④(継承）（実践編）"
        ],
        "人工知能とは何か": [
          "人工知能とは何か",
          "フレーム問題",
          "第三次AIブーム",
          "人工知能のレベル",
          "チューリングテスト",
          "2045年問題とシンギュラリティ"
        ],
        "深層学習とニューラルネットワークの基礎": [
          "機械学習とは何か",
          "教師あり学習",
          "教師なし学習・強化学習",
          "人口ニューロンの誕生",
          "パーセプトロン",
          "パーセプトロンの限界",
          "ニューラルネットワーク",
          "深層学習",
          "CNNとRNN"
        ],
        "ニューラルネットワークの数学的基礎": [
          "環境構築",
          "JupyterNotebookの使い方①",
          "JupyterNotebookの使い方②",
          "ベクトル【説明編】",
          "ベクトル【実践編】",
          "行列【説明編】",
          "行列【実践編】",
          "matplotlib【説明編】",
          "matplotlib【実践編】",
          "活性化関数【説明編】",
          "活性化関数【実践編】",
          "パーセプトロン【説明編】",
          "パーセプトロン【実践編】",
          "多層ニューラルネットワーク【説明編①】",
          "多層ニューラルネットワーク【説明編②】",
          "多層ニューラルネットワーク【実践編】",
          "局所解と過学習"
        ],
        "Tensorflow+Kerasを用いたニューラルネットワークの実装": [
          "パーセプトロンの実装【説明編①】",
          "パーセプトロンの実装【説明編②】",
          "パーセプトロンの実装【説明編③】",
          "パーセプトロンの実装【実践編】",
          "3層ニューラルネットワークの実装【説明編】",
          "3層ニューラルネットワークの実装【実践編】",
          "アヤメの分類【説明編①】",
          "アヤメの分類【説明編②】",
          "アヤメの分類【実践編】",
          "数字の分類【説明編①】",
          "数字の分類【説明編②】",
          "数字の分類【実践編】"
        ],
        "深層学習（CNN）": [
          "CNNの構築【説明編①】",
          "CNNの構築【説明編②】",
          "CNNの構築【説明編③】",
          "CNNの構築【実践編】",
          "深層学習とGPU",
          "講座を終えるにあたり"
        ]
      },
      "requirements": [
        "初歩的なPCスキル",
        "高校レベルの数学知識"
      ],
      "description": "近頃話題の人工知能（じんこうちのう）や深層学習（しんそうがくしゅう）について興味があり、仕事や学習に活かしたい、そう考えている学生や社会人のためのやさしい入門講座です。\n「今流行の深層学習や、Python言語を勉強したい」\nと思って挫折した経験はありませんか？\n実際に専門書を開いてみると難しい専門用語や数式が羅列されて、「とても自分には理解できない」と諦めた人も少なくないのではないでしょうか。\nしかし、プログラミングの経験が無くても、数学的知識が無くても心配要りません。\n専門の研究者やデータサイエンティストにでもなるのならともかく、人工知能や深層学習のプログラミングは、高校レベルの数学知識で十分間に合うからです。\nあとは、パソコンを操作できる知識があれば十分です。\n学習終了後には、Python言語のプログラミングスキルと、人工知能プログラミングが身につけられます。\n扱う分野は\n・CNN\n・RNN\n・機械学習\n・AI（人工知能）\nです。これらについて学習したいかた、もしくは一度学習しようとして挫折してしまったかた。ぜひこの講座でトライしてください！",
      "target_audience": [
        "人工知能や深層学習について学びたい人ならどなたでも",
        "特に一度学習したが挫折した経験がある人",
        "数学はあまり得意ではないが、ディープ・ラーニングにチャレンジしてみたい人",
        "プログラミングは初心者だが、人工知能のシステムを作ってみたい人"
      ]
    },
    {
      "title": "Programação CLP e IHM Rockwell Atualizado 2021",
      "url": "https://www.udemy.com/course/programacao-clp-e-ihm-rockwell-atualizado-2021/",
      "bio": "Programação de CLPs e IHMs Rockell utilizando o Studio 5000 Atualizado 2021",
      "objectives": [
        "Entenda como um Controlador Lógico Programável funciona.",
        "Compreenda diagramas escritos na Linguagem Ladder.",
        "Crie lógicas de programação para CLP.",
        "Faça projetos de Automação Industrial com CLP.",
        "Familiarizar-se com a ferramenta da Rockwell o Studio 5000"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação do Curso",
          "Apresentação do Instrutor",
          "O Conteúdo do curso",
          "Apresentação do Ambiente da Udemy",
          "Como Gerar o seu Certificado do Curso",
          "Perguntas Frequentes **** IMPORTANTE **** LEIA"
        ],
        "Apresentação dos Equipamentos Rockwell": [
          "Introdução",
          "A Arquitetura Integrada",
          "Os CLPs",
          "As IHMs",
          "Os Softwares"
        ],
        "Introdução ao Studio 5000": [
          "Introdução",
          "Baixando os Softwares",
          "Baixando os Softwares (Descritivo)",
          "Instalando o Studio 5000",
          "Instalando o Studio 5000 (Descritivo)",
          "Instalando o RS Logix Emulate",
          "Instalando o RS Logix Emulate (Descritivo)",
          "Abrindo o Studio 5000 Pela Primeira Vez",
          "Apresentando o Ambiente de Desenvolvimento",
          "Nossa primeira simulação"
        ],
        "Projeto Máquina de Prensar Rolamentos": [
          "Introdução",
          "Apresentação do Projeto",
          "Configurando o Hardware",
          "Tags Globais e Tags Locais",
          "Tipos de Blocos",
          "As Networks",
          "Chamando um bloco",
          "Fazendo download e Monitorando"
        ],
        "Operações e Funções no Ladder": [
          "Introdução",
          "Operação Série e Paralelo (AND e OR)",
          "Operação Série e Paralelo (AND e OR) (Continuação)",
          "Bobinas Latch e Unlatch",
          "Temporizador TON",
          "Temporizador TOF",
          "Criando uma Memória Osciladora",
          "Boas Práticas para Documentar Lógicas",
          "Funções Matemáticas",
          "A Instrução One Shot",
          "Comparadores",
          "Contadores",
          "O Ciclo Automático (Parte 1)",
          "O Ciclo Automático (Parte 2)",
          "Atualizando a Rotina de Saídas",
          "Simulando o Automático"
        ],
        "BONUS - O Software de IHM": [
          "Introdução",
          "O Ambiente de desenvolvimento",
          "Os Controles",
          "Os Indicadores",
          "Link dos Objetos com as Variáveis"
        ],
        "Considerações Finais": [
          "Agradecimento e Considerações Finais"
        ]
      },
      "requirements": [
        "Ter um computador com Windows."
      ],
      "description": "Neste curso o aluno aprenderá desde o básico da programação de CLPs e IHMs Rockwell utilizando o Studio 5000.\nAlém de conhecer os produtos que fazem parte do eco sistema da Rockwell, você aprendera como a Rockwell integrou seus sistemas de autmação de forma a deixar muito mais rápido o desenvolvimento de software.\nVamos desenvolver lógicas utilizando a linguagem Ladder, que é uma das linguagens mais utilizadas para a programação de CLP. Criar projetos e soluções para problemas reais, demandas que existem hoje no mercado. Vamos trabalhar todas as etapas de criação de um projeto, desde a descrição do problema, descrição de um passo-a-passo do programa até a simulação das lógicas no ambiente de desenvolvimento e o desenvolvimento de telas IHM para ser uma interface entre o operador e a máquina.\n\nA área de automação é uma área que está em grande crescimento e espero que este curso sirva de ponta pé inicial para sua entrada no mercado de trabalho servindo como um diferencial.\nAo concluir este curso você saberá entre outras coisas:\nConhecer os produtos da Rockwell\nConhecer o ambiente de desenvolvimento o Studio 5000\nCriar Funções e rotinas\nCriar telas de IHMs\nInterpretar programas feitos na linguagem Ladder\nDesenvolver projetos de software clp de pequeno e médio porte\nDesenvolver e simular programas no Studio 5000\n\n*************** AVISO IMPORTANTE  1   ************\n\n\nEste curso é do básico ao intermediário, porém eu não considero ele um curso de quem está iniciando do ZERO ABSOLUTO.\nSe você está iniciando do ZERO ABSOLUTO, inicie com o meu outro curso que tem esta finalidade antes.\n\n\n**************************\n\n*************** AVISO IMPORTANTE  2 ************\n\n\nSó para lembrá-lo de que os softwares da Rockwell podem ter incompatibilidades difíceis de resolver, são softwares pagos e bem caros.\nIdeal é que você já tenha acesso na sua faculdade ou trabalho à computadores que já possua o software instalado.\nMas igual, como material complementar, no curso há aulas onde explico como baixar e instalar passo a passo, bem como resolver alguns problemas de incompatibilidade.\nMas o curso foi projetado para você aprender passo a passo mesmo sem o software deixando você preparado para quando tiver a chance de utilizar um ou em uma entrevista de emprego.\n\n\n**************************",
      "target_audience": [
        "Este curso destina-se a pessoas que já entendem o básico de como um PLC funciona e o básico de programação."
      ]
    },
    {
      "title": ".NET Core 3.0 & C# 7 Backend Frontend Geliştirici Kursu - 3",
      "url": "https://www.udemy.com/course/net-core-csharp-kursu/",
      "bio": "Kurumsal mimaride etkin bir backend geliştirici olacağınız serinin 3. bölümü. C# 7, AOP, Authorization ,Performance, Log",
      "objectives": [
        "Kurumsal mimari altyapısını öğreneceksiniz.",
        "AOP ve Cross Cutting Altyapılarını Anlayacaksınız",
        "Rol bazlı profesyonel sistem oluşturabileceksiniz",
        "AOP - Authorization yazabileceksiniz",
        "AOP- Performance yazabileceksiniz",
        "AOP- Logging yazabileceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Authorization İle Çalışmak": [
          "Authorization Hangi Katmanda Yapılmalıdır",
          "ClaimsPrincipal İçin Extension Yazmak",
          "Değerlendirmeler Hakkında",
          "HttpContextAccessor İle Çalışmak"
        ],
        "AOP - Authorization": [
          "SecuredOperation Aspect Yazmak",
          "Secured Operation Testi"
        ],
        "AOP - Performance Test": [
          "PerformanceInterceptionAspect Yazmak",
          "PerformanceAspect Testi"
        ],
        "Loglama İle Çalışmak": [
          "Loglama Stratejisi Nasıl Olmalıdır",
          "Veritabanının Oluşturulması",
          "LogDetail ve LogParameter Yazmak",
          "Config Dosyasının Tanıtılması",
          "LoggerService Config Yapılandırması",
          "LoggerService Implementasyonu",
          "SerializableLogEvent İmplementasyonu",
          "JsonLayout Yazmak",
          "Loggers İmplementasyonu"
        ],
        "AOP- Log": [
          "LogAspect Yazmak",
          "AdoNet Appender İmplementasyonu",
          "Loglamanın Test Edilmesi",
          "Son Sötuşların Yapılması ve Bitirilmesi"
        ],
        "Bonus": [
          "Bonus Ders"
        ]
      },
      "requirements": [
        "Temel C# ve teknolojileri bilgisi"
      ],
      "description": "Bu seri daha önce klasik .NET Framework ile yayınladığım \"C# ile Backend Geliştirici Olun\" serisinin .NET Core ile yazılmış ve geliştirilmiş versiyonudur.\n.NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır.\nBu kursta kullanılan mimari eğitim ve danışmanlık yaptığım 300+ kurumda veya firmada kullandırdığım şekliyle birebir yansıtılmıştır. Sektörün önde gelen bir çok firmasında da kullanılmaktadır. Profilimden bu firmaların bazılarını inceleyebilirsiniz.\nSerinin üçüncü bölümünü keyifle hazırladım.\nAOP ve Cross Cutting Altyapılarını Anlamak\nAuthorization Altyapısı İle Çalışmak\nRol Bazlı Profesyonel Bir Sistem Kurmak\nAOP- Authorization\nYazılımda Performans Takibi Yapmak\nAOP - Performance\nLoglama İle Çalışmak\nAOP - Logging\nve daha fazlası...\nBu seri daha önce klasik .NET Framework ile yayınladığım \"C# ile Backend Geliştirici Olun\" serisinin .NET Core ile yazılmış ve geliştirilmiş versiyonudur.\n.NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır.\nBu kursta kullanılan mimari eğitim ve danışmanlık yaptığım 300+ kurumda veya firmada kullandırdığım şekliyle birebir yansıtılmıştır. Sektörün önde gelen bir çok firmasında da kullanılmaktadır. Profilimden bu firmaların bazılarını inceleyebilirsiniz.\nEğer kurumsal bir kariyer hedefiniz varsa, bu kurs sizin için başladığınız gibi heyecanla bitireceğiniz bir kurs olacaktır. Şimdiden başarılar dilerim.",
      "target_audience": [
        ".NET Core ile hazırlanmış kurs taleplerinden yola çıkarak hazırlanmıştır. Prestij kursları olarak hazırladığım, sektörde tecrübeli geliştiricileri ve sektöre sapasağlam adımlarla giriş yapmayı hedefleyen adayları hedef almaktadır."
      ]
    },
    {
      "title": "Sıfırdan Hızlı ve Kolay PHP ÖĞREN - UYGULAMALI",
      "url": "https://www.udemy.com/course/sifirdan-hizli-ve-kolay-php-ogren-ornek-uygulamalar-php-egitimi/",
      "bio": "OOP-MVC- MYSQLİ - PDO -JQUERY - AJAX - CURL - JSON -BOT YAPIMI - Destekleyici örnek projeler- Nesne yönelimli yazılım",
      "objectives": [
        "Kendi projelerini rahatlıkla yapabilirler.",
        "Freelance çalışarak yazılım hizmeti verebilirler.",
        "Bir yazılım firmasında çalışabilirler.",
        "Bir firma kurarak yazılım geliştirip satabilirler.",
        "Kurumsal veya bireysel eğitimler verebilirler."
      ],
      "course_content": {},
      "requirements": [
        "Gerekli olan en önemli şey, istemektir. Gerçekten istiyorsan başaracaksın."
      ],
      "description": "Bu kurs sana hangi kodun nasıl çalıştığını elbette çok rahat öğretecek, ancak en önemlisi örnek uygulamalar ile pekiştirme yaparak konuyu tam olarak kavramanı sağlayacaktır. Kodların teorik anlatımından sonra, örnek uygulamalar ile pratik yapılarak, kodun tam olarak nasıl işe yaradığı gösterilmektedir.  Bu eğitim tam öğretim odaklıdır; konu olabildiğince detaya inilerek ve örneklendirme yapılarak anlatılmıştır. Php'nin yanı sana destek verecek ve geliştirecek çeşitli yazılım teknolojileri de eğitimde bulabileceksin. Sıkılmadan ve keyif alarak bu php işini beraber çözeceğiz. Kurs devamlı güncellemeler alacaktır. Güncellemeleri eğitim hiyerarşisinden takip edebilirsin.\n\n\nYılların verdiği tecrübeye dayanarak söylüyorum ki, çok iyi bir fikrin olabilir, yapmak istediklerin olabilir veya bu işi yapmak istiyor olabilirsin. Ancak öğrenme kısmı, tam olarak öğrenmeyi istemeyen biri için zor gelebilir. O sebeple bu eğitim seni sıkmadan, bu işi halletmeni sağlayacaktır.\nYazılım insanı özgürleştirir ve özgür olmak belki de en güzel duygudur. Merak etme buna çok az kaldı, hatta kıyısındasın.\nNe dersin, ÖZGÜRLEŞELİM Mİ ?\n\n\nEğitim bazı özellikleri;\nPHP'NİN TÜM KODLARI VE TÜM DETAYLAR ANLATILMIŞTIR.\nPDO ve MYSQLİ HER İKİ VERİTABANI DİLİ ANLATILMIŞ VE ÖRNEK PROJELER YAPILMIŞTIR.\nPDO ve MYSQLİ İLE ÖRNEK PROJELER YAPILMIŞTIR.\nREGEX DESENLERİ ANLATILMIŞTIR.\nPHP İLE BOT MANTIĞI ANLATILMIŞ VE ÖRNEK BOT SİSTEMİ YAPILMIŞTIR.\nPHP MAİL İŞLEMLERİ ANLATILMIŞ VE ÖRNEK PROJE YAPILMIŞTIR.\nPHP CACHE SİSTEMİ YAPILMIŞTIR.\nPHP CAPTCHA SİSTEMİ YAPILMIŞTIR.\nPHP EXCEL İŞLEMLERİ ANLATILMIŞTIR.\nPHP ÇOKLU DİL MANTIĞI ANLATILMIŞTIR.\nPHP XML İŞLEMLERİ YAPILMIŞTIR.\nPHP ZİP İŞLEMLERİ YAPILMIŞTIR.\nPHP PDF İŞLEMLERİ YAPILMIŞTIR.\nPHP KREDİ KARTI SANAL POS İŞLEMLERİ YAPILMIŞTIR.\nPHP SMS İŞLEMLERİ YAPILMIŞTIR.\nJQUERY -AJAX DİLLERİ ANLATILMIŞTIR.\nJQUERY -AJAX İLE GELİŞMİŞ DOSYA İŞLEMLERİ PROJESİ YAPILMIŞTIR.\nPHP-AJAX İLE GELİŞMİŞ CHAT SİSTEMİ YAPILMIŞTIR.\nJSON KODLARI ANLATILMIŞ VE ÖRNEK PROJE YAPILMIŞTIR.\nCURL KODLARI ANLATILMIŞ VE ÖRNEK PROJE YAPILMIŞTIR.\nMVC DERSLERİ YAPILMIŞ VE FRAMEWORK MANTIĞI ANLATILMIŞTIR.\nÖRNEK UYGULAMA- QUİZ SİSTEMİ YAPILMIŞTIR.\nÖRNEK UYGULAMA- ANKET SİSTEMİ YAPILMIŞTIR.\nÖRNEK UYGULAMA-ÇEKİLİŞ SİSTEMİ YAPILMIŞTIR.\nÖRNEK UYGULAMA-STOK TAKİP SİSTEMİ YAPILMIŞTIR.\nÖRNEK UYGULAMA- SEPETE EKLE MANTIĞI ANLATILMIŞ VE PROJE YAPILMIŞTIR.\n\n\nYukarıda belirtmiş olduğum maddeler, eğitimin başlıca konularıdır, daha fazlası vardır.Tüm dersler ve örnek projeler en ince ayrıntısına kadar anlatılmaya çalışılmıştır. Her öğrenilen bilginin pekiştirilmesi taraftarı olduğum için kodların sistemler içerisinde nasıl çalıştıklarını görmek, yeni öğrenen birine inanılmaz fayda sağlamaktadır.\nEğitimin içeriği her geçen gün genişlemekte ve güncelleme dersleri sürekli eklenmektedir.",
      "target_audience": [
        "Bu kursu, yazılım dünyasında özgürleşmek isteyen, hayallerini gerçekleştirmek isteyenler almalı",
        "Yazılıma ilgi duyan ve üretmeyi seven kişiler almalı",
        "Meraklı ve istekli kişiler almalı"
      ]
    },
    {
      "title": "Tüm Yönleriyle Sıfırdan İleri Seviye Python Programlama",
      "url": "https://www.udemy.com/course/50-saat-tum-yonleriyle-python-programlama-2021/",
      "bio": "400+ Ders, Bol Örneklerle Detaylı Python, Sqlite ve Standart Kütüphane",
      "objectives": [
        "Python'un yanında programlama dili farketmezsizin programlamanın temellerini iyi şekilde öğreneceksiniz",
        "Her derste konuları yüzeysel olarak değil örneklerle ve püf noktaları ile birlikte detaylı bir şekilde öğreneceksiniz",
        "Nesne Tabanlı Programlamanın mantığını iyi bir şekilde öğreneceksiniz",
        "Sqlite ile veritabanı işlemlerini detaylı şekilde öğrenecek ve aynı zamanda diğer veritabanı sistemlerinde ki mantığıda kavrayacaksınız",
        "Algoritmanın nasıl oluşturulabileceğini detaylı bir şekilde anlayacaksınız",
        "Genel matematik bilgilerinizi tazeleyecek ve İngilizce terimlerin anlamlarınıda öğreneceksiniz"
      ],
      "course_content": {},
      "requirements": [
        "Öğrencilerin başlangıç seviyesinde bilgisayar kullanabilmesi",
        "Düzenli çalışma disiplinine sahip olması",
        "Bu kursu alabilmek için daha önce herhangi bir programlama dilini bilmeniz gerekmez"
      ],
      "description": "Udemy üzerinde Türkçe kaynak olarak en detaylı şekilde hazırlanmış olan Python kursumuza hoşgeldiniz.\n\n\n* Kurs sürekli olarak güncellenmektedir. Belirli dönemlerle en son Python sürümüne göre tekrar çekilmektedir.\n* Kurs bir kitapta ki gibi detaylı şekilde bilgiler içermektedir. İşlenen konular yüzeysel değil detaylı şekilde anlatılmıştır.\n\n\nPython, Türkiye'de ve Dünya'da şu anda en popüler programlama dilleri arasında yer almaktadır.\nBu sebeple Python ile programlamayı öğrenebilmeniz için bu kursu özenle hazırladık. Üstelik bu kurs sayesinde Python'u öğrenebilmek için herhangi bir programlama geçmişinizin olması gerekmiyor.\nKursumuz sıfırdan başlayarak ileri seviyeye kadar Python'un temellerini bol örneklerle ve sade bir dille detaylarını da anlatarak öğretecektir.\nAyrıca kurs boyunca öğrendiğimiz deyimlerin İngilizce anlamlarını ve aynı zamanda yeri geldiğinde öğrendiğimiz teknik konuların tarihsel geçmişlerini de öğreneceğiz.\nBu kurs size sadece Python'u değil programlamanın temellerini de öğretecek. Bu sayede bu kurstan sonra başka bir programlama dilini öğrenmek sizin için çok daha kolay olacak.\nKurs hazırlanırken konuları anlatma ve öğretme biçimim gerçek hayatta özel bilgisayar kurslarında öğrencilerime ders verirken edindiğim tecrübelere göre hazırlanmıştır.\n\n\nKursun Yapısı:\n1. Her ünitede konular mantıksal olarak en kolay öğrenilecek şekilde gruplara ayrılmıştır\n2. Her derste konular işlenirken her bir deyimin ve fonksiyonun söz dizimi öğretilecek olup detaylı bir şekilde püf noktalarda göz önüne alınarak anlatılacaktır.\n3. Detaylı konu anlatımını müteakip her derste örnekler yaparak öğrendiğimiz konuyu iyi bir şekilde pekiştireceğiz.\n4. Kurs boyunca algoritma mantığı kavrayabilmeniz için beraber algoritma oluşturacağız ve genel örnekler yapacağız. Bununla beraber yazdığım kod satırlarını teker teker inceleyerek neyin, neden ve nasıl yapıldığını öğreneceğiz.\n5. Ayrıca derslerimiz işlerken yeri geldiğinde genel matematik kurallarını tekrar edeceğiz ve programlarımızı geliştirirken kullandığımız özel algoritma ile mantıkları püf noktaları ile öğreneceğiz\n\n\n35+ yıllık yazılım geliştirme tecrübemi sizlere aktardığım için mutluluk duymaktayım.\n\n\nNOT: Artık kurslarımda okul ödevlerine yardımcı olmuyorum. Çünkü öğrenci arkadaşlar beni yardımcı olduğum için pişman ettiler. Lütfen ödev konusunda teklifte bulunmayınız.",
      "target_audience": [
        "Daha önce bilgisayar programlama yapmamış ve herhangi bir programlama bilgisi olmayanlar",
        "Başka bir programlama dilini bilen ve Python ile programlamayı öğrenmek isteyenler",
        "Python'u temel seviyede bilip daha derinlemesine ve ileri seviyede öğrenmek isteyenler"
      ]
    },
    {
      "title": "R Programming: Aprende a programar en R desde cero",
      "url": "https://www.udemy.com/course/r-desde-cero-el-curso-mas-poderoso/",
      "bio": "Vuélvete un experto del análisis de datos con R.",
      "objectives": [
        "Aprenderás a programar en R desde cero.",
        "Aprenderás los principios de la programación en R.",
        "Aprenderás los fundamentos de la programación en R.",
        "Aprenderás a usar matrices en R.",
        "Aprenderás a crear Data Frames en R",
        "Aprenderás a crear gráficos super avanzados en R con GGPlot2."
      ],
      "course_content": {
        "1. Introducción": [
          "Bienvenido a Numpi",
          "1.1 Introducción a R",
          "1.2 Descargar R para Windows y Mac",
          "1.3 Instalar R para Windows y Mac"
        ],
        "2. Principios de programación en R": [
          "2.1 Objetivos de la sección",
          "2.2 Tipos de variables",
          "2.3 Uso de las variables",
          "2.4 Variables lógicas y operadores",
          "2.5 While",
          "2.6 Usando la consola",
          "2.7 For",
          "2.8 If",
          "2.9 Ejercicio 1"
        ],
        "3. Fundamentos de R": [
          "3.1 Objetivos de la sección",
          "3.2 ¿Qué es un vector?",
          "3.3 Creación de vectores",
          "3.4 Uso de [...]",
          "3.5 Operaciones con vectores",
          "3.6 La ventajas de las operaciones con vectores",
          "3.7 Funciones en R",
          "3.8 Paquetes en R",
          "3.9 Ejercicio 1"
        ],
        "4. Matrices": [
          "4.1 Objetivos de la sección",
          "4.2 Presentación del proyecto",
          "4.3 Matrices",
          "4.4 Construye tu primer matriz",
          "4.5 Nombra las dimensiones de la matriz",
          "4.6 Colnames () y Rownames()",
          "4.7 Operaciones con matrices",
          "4.8 Visualización con Matplot()",
          "4.9 Subsetting y 4.10 Visualización de subsets",
          "4.11 Creación de tu primer función",
          "4.12 Insights del proyecto",
          "4.13 Ejercicio 1"
        ],
        "5. Data Frames": [
          "5.1 Objetivos de la sección",
          "5.2 Presentación del proyecto",
          "5.3 Importar data a R",
          "5.4 Explorar los datos",
          "5.5 Uso de \"$\"",
          "5.6 Operaciones básicas con un Data Frame",
          "5.7 Filtrando un Data Frame",
          "5.8 Introducción a Qplot",
          "5.9 Visualización con Qplot Pt. I",
          "5.10 Construir Data Frames",
          "5.11 Unir Data Frames",
          "5.12 Visualización con Qplot Pt. II",
          "5.13 Ejercicio 1"
        ],
        "6. Visualización avanzada con GGPlot2": [
          "6.1 Objetivos de la sección",
          "6.2 Presentación del proyecto",
          "6.3 Semantica de GGPlot2",
          "6.4 Factor",
          "6.5 Estética y 6.6 Principios de estética",
          "6.7 Gráficas con capas",
          "6.8 Mapping vs Setting",
          "6.9 Histogramás y gráficas de densidad",
          "6.10 Capas",
          "6.11 Transformaciones estadísticas",
          "6.12 Facetas",
          "6.13 Coordenadas",
          "6.14 Añadir temas",
          "6.15 Boxplots",
          "6.16 Ejercicio 1"
        ],
        "Terminaste": [
          "Nos vemos en clase",
          "Clase extra"
        ]
      },
      "requirements": [
        "No necesitas conocimientos previos, el curso esta diseñado para llevarte de la mano desde cero a experto."
      ],
      "description": "¡Vuélvete un experto en el análisis de datos con R!\n\n\nSi eres un estudiante o profesionista que quiere potenciar su carrera profesional te tengo una buena noticia:\n¡Encontraste el curso indicado!\n\n\n¿Sientes que tu carrera profesional esta estancada?\n¿Tu perfil no destaca entre el de los demás?\n¿Sientes que en la escuela no aprendiste nada útil para el mundo laboral?\n¿Crees que Excel es la única herramienta para analizar datos y hacer gráficas?\n\n\nNo tener las habilidades correctas para esta nueva era tecnológica es la raíz de todos estos males.\n\n\nActualmente el mundo está lleno de datos y es fundamental saber como analizarlos y presentarlos para extraer valor de ellos. Esta es una habilidad que los empleadores valoran cada día más.\n\n\nSi dominas R para analizar datos y generar propuestas de alto impacto serás una persona invaluable para cualquier empresa.\n\n\nYo sé que se de lo difícil que es crecer profesionalmente. También sé lo frustrante que es ver que todos ascienden menos tú.\n\n\nPara tu fortuna este curso de R desde cero te enseñará a generar potentes visualizaciones de una manera fácil y te dará una habilidad para destacar entre los demás.\n\n\nSoy Julio, tengo 8 años de experiencia en el Análisis de Datos y esta habilidad fue la que me permitió catapultar mi carrera profesional hacia el éxito.\n\n\nEl generar propuestas de valor con el Análisis de Datos me ayudó a conseguir trabajos mejor pagados.\n¿Qué crees?\nEl 89% de los estudiantes del curso también ha mejorado su situación laboral.\n\n\n¡Inscríbete ahora y desarrolla esa habilidad que te hace falta!\n\n\nTe garantizo que este curso es todo lo que necesitas para aprender a analizar grandes volúmenes de datos hacer propuestas. Estos son los pasos del éxito:\n\n\n1. Tomar todas las lecciones del curso.\n2. Realizar los ejercicios prácticos.\n3. Estarás listo para hacer poderosos análisis y visualizaciones en cualquier caso de la vida real.\n\n\n\n\nPreguntas frecuentes:\n1. ¿Necesito un software especializado o de pago para poder tomar el curso?\nR: No. Solo necesitas instalar la paquetería de R que es gratuita.\n2. ¿Dónde obtengo la paquetería de R?\nR: En el curso te enseñamos de donde descargarla y como instalarla.\n3. ¿Necesito algún conocimiento previo para tomar el curso?\nR: No, el curso esta diseñado para empezar desde cero y llevarte de la mano por cada uno de los temas.\n4. ¿Qué podré hacer después del curso?\nR: Analizar grandes volúmenes de datos para generar propuestas de alto valor y presentarlas en gráficos visualmente atractivos.\n\n\n\n\nDeja de perder las oportunidades laborales por no tener más habilidades.\nAñádete las habilidades que te harán brillar aprendiendo a generar propuestas de alto valor para el mundo de los negocios.\n\n\nEn cuanto el mercado laboral reconozca que eres un experto R tu carrera profesional comenzará a despegar.\nSuena a \"truco de magia\" pero la realidad es que tendrás una habilidad que es altamente demandada por las empresas.\n\n\nDespués de tomar este curso tu carrera profesional cambiará totalmente porque tendrás las herramientas necesarias para hacer propuestas de alto impacto basadas en datos. Serás del club de los profesionistas que tienen buenos ingresos.\n\n\n¡INSCRÍBETE AHORA y empieza a potenciar tu carrera!",
      "target_audience": [
        "Profesionistas que quieran aprender a analizar datos en R.",
        "Estudiantes que quieran aprender a analizar datos en R.",
        "Profesionistas que quieran aprender a realizar gráficos super vendedores con R.",
        "Estudiantes y profesionales que quieran entrar en el mundo del análisis de datos con R."
      ]
    },
    {
      "title": "Python Scrapy: Capture Dados Web de forma rápida e escalável",
      "url": "https://www.udemy.com/course/python-com-scrapy/",
      "bio": "Aprenda a utilizar o framework Scrapy para capturar informações de páginas web de forma automática de escalável",
      "objectives": [
        "Entender o funcionamento de um Web Crawler",
        "Construir seus próprios scripts para capturar informações da Web",
        "Saber como extrair informações de uma página web"
      ],
      "course_content": {
        "Introdução a linguagem Python": [
          "Apresentação do Curso",
          "PEP, PyPI e Python para Zumbis",
          "Links e referências iniciais",
          "Instalação no Ubuntu (Linux)",
          "Instalação no MacOSX",
          "Instalação no Windows",
          "Jupyter e Scripts Python",
          "Introdução ao Python",
          "Jogo do Adivinha 01",
          "Jogo do Adivinha 02",
          "Jogo do Adivinha 03",
          "Jogo do Adivinha 04",
          "Jogo do Adivinha 05",
          "Simulador de Dados 01",
          "Simulador de Dados 02",
          "Simulador de Dados 03",
          "Simulador de Dados 04",
          "Lista de Contatos 01",
          "Lista de Contatos 02",
          "Lista de Contatos 03",
          "Lista de Contatos 04",
          "Lista de Contatos 05",
          "Lista de Contatos 06",
          "Robôs 01",
          "Robôs 02",
          "Robôs 03",
          "Robôs 04",
          "Robôs 05",
          "Robôs 06"
        ],
        "Entendendo o Scrapy": [
          "Requests e Beautiful Soup",
          "Introdução ao Scrapy",
          "Criando um Projeto Scrapy",
          "Seletor XPath",
          "O uso do yield",
          "Extraindo Itens da Página",
          "Gerando Novas Requisições"
        ],
        "Projeto 1 - OLX": [
          "Criando o Projeto OLX",
          "Acessando a Página de Cada Item",
          "Capturando os Dados de cada Item",
          "Seguindo a página dos itens",
          "Item Pipeline",
          "Sqlite3",
          "Item Pipeline com Sqlite3",
          "MongoDB",
          "Item Pipeline com MongoDB"
        ],
        "Recursos do Scrapy": [
          "Opções do Scrapy Shell",
          "Acessando Página das Categorias do Coursera",
          "Acessando os Cursos do Coursera",
          "Argumentos de linha de comando das Spiders",
          "O que são Item e ItemLoader?",
          "Usando um Item e ItemLoader na prática",
          "Criando um Custom ItemLoader",
          "Finalizando a Spider do Veduca",
          "Um pouco sobre HTTP (Headers e Cookies)",
          "Usando FormRequest para fazer Login com o Scrapy",
          "CrawlSpider: Uma spider com regras"
        ],
        "Tópicos Avançados e Aulas bônus": [
          "Páginas com Javascript, como proceder?",
          "Usando o Splash com o Scrapy"
        ]
      },
      "requirements": [
        "Noções de Lógica de programação",
        "Conhecimentos básicos de linha de comando (Prompt ou Terminal)"
      ],
      "description": "Você já tentou acessar uma página web através de um programa? Com o framework Scrapy esse acesso a captura de informação fica bem mais fácil e organizado.\nNesse curso você irá conseguir acessar o conteúdo das páginas web de forma rápida e fácil utilizando as boas práticas de web crawlers e do framework Scrapy.",
      "target_audience": [
        "Estudantes de Tecnologia",
        "Programadores",
        "Interessados em conhecer o mundo Python"
      ]
    },
    {
      "title": "SAP ABAP für Anfänger 2: komplexe Datenarten und Debugging",
      "url": "https://www.udemy.com/course/sap-abap-kompendium-teil-2/",
      "bio": "Teil 2 der Kursreihe zum lernen von ABAP von Anfang an. Lernen Sie weitere wichtige Aspekte der Sprache in der Praxis!",
      "objectives": [
        "Erste ABAP Programme professionell selbst zu erstellen",
        "Erweitern des eigenen SAP Skillsets",
        "Einen Job im SAP Umfeld",
        "Erweiterte, informationshaltige und interessante Videolektionen",
        "Spaß am Programmieren mit ABAP"
      ],
      "course_content": {
        "Einleitung": [
          "Begrüßung und Einleitende Worte",
          "Inhaltsübersicht ABAP für Anfänger Teil 2",
          "Wie erhalte ich das Zertifikat dieses Kurses?"
        ],
        "Strukturen und interne Tabellen": [
          "Strukturen und Strukturtypen",
          "Move-Corresponding",
          "Grundlagen und Typen der internen Tabellen",
          "Definieren und erzeugen von internen Tabellen",
          "Operationen interner Tabellen: Überblick",
          "Operationen interner Tabellen: Insert und Append",
          "Operationen interner Tabellen: Read Table",
          "Operationen interner Tabellen: Modify",
          "Operationen interner Tabellen: Delete",
          "Operationen interner Tabellen: Insert Lines und Append Lines",
          "Operationen interner Tabellen: Loop",
          "Operationen interner Tabellen: Sort Table",
          "Tabellen mit und ohne Kopfzeile",
          "Systemvariablen - die Syst-Struktur",
          "Praxisübung: Interne Tabellen, Strukturen und Grundlagen",
          "Praxisübung: Interne Tabellen, Strukturen und Grundlagen - Musterlösung",
          "Abschnittstest: Strukturen und interne Tabellen"
        ],
        "Debugging": [
          "Kurzvorstellung: Skillcoach Alexander Troost",
          "Einleitung zum Debugging in ABAP",
          "Watchpoints",
          "Breakpoints",
          "Tabellen im Debugger",
          "Tipps & Tricks zum Debugging",
          "Abschnittstest: Debugging"
        ],
        "Zusammenfassung und Ausblick": [
          "Übersicht der gelernten Inhalte",
          "Ausblick - ABAP für Anfänger Teil 3 - was wirst du lernen?"
        ]
      },
      "requirements": [
        "Für komplette Neulinge: Durcharbeiten des ersten Kurses, die Inhalte von dort werden als bekannt vorausgesetzt",
        "Am besten einen Zugang zu einem SAP System besitzen (Ideal: EhP 7, aber nicht zwingend notwendig)",
        "Falls kein Zugang zu einem SAP System besteht, ist der Kurs dennoch hervorragend dafür geeignet, die Basics von SAP ABAP zu lernen und zu verstehen",
        "Sie benötigen eine Rechnung für Ihren Kurs? Unter dem folgenden Link können sich deutsche und österreichische Teilnehmer eine Rechnungsvorlage herunterladen und ausfüllen (https://support.udemy.com/hc/de/articles/229233307)"
      ],
      "description": "SAP ABAP ist die bekannte  Enterprise-Programmiersprache, die von den größten Unternehmen zum Betrieb ihrer Business-Systeme eingesetzt wird.\nIn diesem zweiten Teil der Kursreihe SAP ABAP-Kompendium (von 5) vermittle ich dir Schritt für Schritt die Grundlagen und essentiellen Fähigkeiten, die du  benötigst, um ABAP zu verstehen und anzuwenden.\nAuch während dieses Kurses kannst du erneut deine eigenen ABAP-Programme schreiben und testen.\nDer Kurs ist ideal für Einsteiger. Er basiert auf den Inhalten des ersten Teils und führt diese konsequent weiter in die Tiefe, damit du sicher verstehst, wie du am besten deine eigenen SAP-Programme implementieren  kannst.\nDie in Teil 1 vermittelten Inhalte setze ich in diesem Kurs als bekannt voraus.\n\nWir werden uns nach und nach an weitere wichtige Schlüsselaspekte der Programmiersprache herantasten, wie zum Beispiel:\nStrukturen und interne Tabellen\nDebugging in ABAP\nPraktische implementierung einer ersten komplexen Anforderung\nDu wirst mir dabei zusehen können, wie ich die Befehle, die ich erkläre, selbst anwende und ich werde dich anleiten, deinen eigenen Code  zu schreiben und zu modifizieren.  Du bekommst das Wissen auf  eine Art und Weise vermittelt, dass du garantiert die grundlegenden  Konzepte verstehen und anwenden können wirst! Außerdem werden wir uns  in diesem Kurs auf die Praxis fokussieren, so dass du dich nicht ewig  mit Theorie herumquälen musst, sondern die Sprache in einem absolut  praktikablen und leicht verständlichen Ansatz lernen wirst und mit jeder  Kurseinheit tiefer in die Materie einsteigst.\nEgal ob du neu in der Programmierung bist, oder nur neu im Bereich ABAP: Diese Kursreihe ist dein Weg zur schnellen, professionellen  ABAP-Softwareentwicklung im Businessumfeld!\nDie meisten ABAP-Kurse kosten tausende von Euros und kratzen gerade einmal an der Oberfläche. Meist darfst du dich erst einmal durch  tausende langweiliger PDF-Seiten lesen und hast dann immer noch keine  praktische Erfahrung. Der Zeitaufwand kann locker über 50 Tage im  Vollzeitstudium betragen! Nicht so mit diesem Kompendium! Ich bin  erfahrener SAP Ausbilder, Coach und Trainer, der über 5 Jahre Erfahrung  in der Beratung und Implementierung mit SAP ABAP hat. Ich vermittle dir  State-of-the-art ABAP-Knowhow aus dem aktuellsten Patch von SAP!",
      "target_audience": [
        "Teilnehmer von Teil 1 der Kursreihe",
        "Interessierte an speziell den Themen dieses Kurses",
        "SAP Basis Consultants die ihr Wissen erweitern wollen",
        "SAP Benutzer, die ihr Wissen um technische Skills erweitern wollen",
        "SAP BW Consultants",
        "Jeder!"
      ]
    },
    {
      "title": "Maîtrisez PHP et devenez autonome en programmation web",
      "url": "https://www.udemy.com/course/9-h2prog-php-pour-etre-autonome-en-programmation-web/",
      "bio": "9 heures de pratique de PHP avec PHP Data Objects (PDO), Bootstrap, MySQL, et la Programmation Orientée Objets (POO)",
      "objectives": [
        "Programmer en PHP pour réaliser une application ou un site web",
        "Appréhender les concepts de base de HTML et CSS",
        "Apprendre puis utiliser les concepts de la Programmation Orientée Objets (POO)",
        "Mettre en place une Base de Données (BD) MySQL",
        "Utiliser PHP data objects (PDO) pour manipuler les données de la BD",
        "Styliser avec Bootstrap"
      ],
      "course_content": {
        "Avant de commencer": [
          "Que contient ce cours ?",
          "Qui suis-je ?",
          "Qu'allons nous réaliser ?",
          "Le parcours de formation",
          "Conseils pour suivre la formation",
          "Les outils"
        ],
        "Les bases de la programmation (en PHP)": [
          "Création de l'espace de travail",
          "Les variables",
          "Les types de variables et le premier Test de variables (if)",
          "Mixer du HTML et du PHP",
          "Les fonctions",
          "Les tests (if)",
          "Boucle for",
          "Constantes",
          "Les tests en détail et l'instruction Switch Case",
          "La boucle While",
          "Les tableaux (Etape 1)",
          "Les tableaux (Etape 2) et la récursivité"
        ],
        "HTML/CSS et PHP": [
          "HTML et CSS : les bases Etape1",
          "HTML et CSS : les bases Etape2",
          "HTML et CSS : les marges",
          "Et le JavaScript ?",
          "Les formulaires",
          "Méthode GET et POST",
          "Réaliser un menu pour disposer de plusieurs pages HTML"
        ],
        "Pratiquer le PHP en exercice": [
          "Faire un \"mini\" site pour répertorier nos exercices",
          "Exo 1 - E1 : Tables de multiplication",
          "Exo 1 - E2 : Tables de multiplication",
          "Exo2 : Pyramide",
          "Exo3 : Cercle - Calcul du périmètre et de l'aire",
          "Exo 4 - E1 : Deviner le chiffre aléatoire",
          "Exo 4 - E2 : Utiliser les SESSIONs",
          "Exo 5 - deux formulaires (un en GET et un en POST)",
          "Exo 6 - Listes déroulantes",
          "Exo 7 - Les tableaux",
          "Exo 8 - Listes déroulantes et tableaux",
          "Exo 9 - Tableaux associatifs",
          "Exo 10 - Un tableau de tableaux associatifs pour afficher tous les personnages"
        ],
        "La POO : Programmation Orientée Objets (en PHP)": [
          "Le concept de la POO et l'initialisation du module.",
          "Créer notre première classe",
          "Fonction de classe",
          "Constructeur",
          "Structuration du code",
          "Getter et Setter",
          "Constantes de classe",
          "Les attributs et méthodes statiques"
        ],
        "La POO en exercice": [
          "Exo 2 - E1 : Une liste de fruits",
          "Exo2 - E2 : Une liste de fruits",
          "Exo 3 - Panier de fruits (une classe contenant deux tableaux d'objets)",
          "Exo 4 - Liste de Panier de fruits",
          "Exo 5 - Ajouter un Panier"
        ],
        "Initiation à la BDD (MySQL)": [
          "Pourquoi une base de données ?",
          "Créer la base de données",
          "Faire des requêtes en SQL",
          "Les requêtes de modification de ligne"
        ],
        "PDO : Récupérer des données d'une BD": [
          "Connexion à la base de données via PDO",
          "Faire des requêtes avec PDO (sans se préoccuper de la POO)",
          "Faire une classe pour gérer notre PDO",
          "Afficher la liste de fruits",
          "Utiliser la classe fruit",
          "Afficher la liste des paniers - étape 1",
          "Afficher la liste des paniers - étape 2",
          "Ajouter un panier : Etape 1",
          "Ajouter un panier : Etape 2",
          "Ajout des fruits au nouveau panier : Etape 1",
          "ajout des fruits au nouveau panier : Etape 2"
        ],
        "Bootstrap pour Styliser son site": [
          "On débute sur Bootstrap",
          "Bootstrap v4 ou bootstrap v5",
          "Les nouveautés de Bootstrap 5",
          "Créer un menu",
          "Les \"cards\"",
          "Lister les fruits et gérer les titres",
          "Les \"tables\" de Bootstrap"
        ],
        "Finalisation de l'application et utilisation de toutes les compétences": [
          "Faire une classe de formatage",
          "Boutons Modifier et Supprimer",
          "Le formulaire pour modifier un fruit",
          "Modifier les informations en BD",
          "Supprimer un fruit d'un panier",
          "Assigner un fruit à un Panier - Etape 1",
          "Assigner un fruit à un Panier - Etape 2",
          "Styliser le formulaire d'ajout d'un panier"
        ]
      },
      "requirements": [
        "Avoir des notions de HTML et CSS est un plus",
        "Disposer d'un ordinateur"
      ],
      "description": "Dans ce cours pratique, vous allez progresser par étape dans la programmation informatique orientée technologie du web.\n\n\nNous partirons de zéro et apprendrons les bases de la programmation et de l'algorithmie :\nNous commencerons par apprendre la programmation et le langage PHP.\nNous continuerons en regardant les bases du HTML et du CSS.\nNous réaliserons ensuite 10 exercices pour verrouiller les compétences de base obligatoires.\n\n\nNous verrons ensuite la Programmation Orientée Objets (POO) :\nNous verrons les concepts de la POO en mettant en place une application de gestion de paniers et de fruits.\nNous pratiquerons la POO sur plusieurs exercices et nous verrons pourquoi il est nécessaire d'avoir une base de données.\n\n\nNous mettrons en place une bases de données pour conserver les informations de notre application :\nNous créerons une base de données MySQL.\nNous utiliserons PDO (PHP data Objects) pour manipuler les données de la BD.\n\n\nEnfin nous mettrons en application toutes les compétences :\nNous réaliserons une application complète (avec BD, POO, PDO et html/CSS).\nNous utiliserons Bootstrap pour styliser notre application.\n\n\nAvec les compétences que vous allez acquérir grâce à ce cours, vous pourrez apprendre d'autres langages de programmation sans trop de difficultés. En effet, les bases de l'algorithmie sont omniprésentes dans ce tutoriel et chacune des notions importantes est expliquée et illustrée avec des cas pratiques.\n\n\nJe reste à votre disposition pour répondre à vos questions et vous guider dans votre apprentissage.",
      "target_audience": [
        "Etudiants ou futurs étudiants en informatique",
        "Développeurs (web ou non)",
        "Développeurs autodidactes"
      ]
    },
    {
      "title": "Il Linguaggio PL/SQL di Oracle - Da Zero a Esperto",
      "url": "https://www.udemy.com/course/il-linguaggio-plsql-di-oracle-da-zero-a-esperto/",
      "bio": "Impariamo da zero come creare applicazioni modulari col PL/SQL e usiamole con lo Spring Boot attivando un servizio REST",
      "objectives": [
        "Creare i blocchi anonimi in PL/SQL",
        "Imparare ad usare le Espressioni Condizionali (IF,THEN,CASE)",
        "Imparare ad usare i Cicli (FOR, WHILE)",
        "Imparare a creare una efficiente Gestione delle Eccezioni",
        "Imparare ad usare i Cursori",
        "Creare ed usare le Procedure (Stored Procedure)",
        "Creare ed usare le Funzioni (Functions)",
        "Creare ed usare i Trigger",
        "Creare codice modulare con i Package",
        "Utilizzare i programmi PL/SQL con Spring Boot"
      ],
      "course_content": {
        "Introduzione": [
          "Introduzione",
          "Piano di Studi"
        ],
        "Installazione DBMS Oracle XE": [
          "Installazione DBMS Oracle",
          "Installazione SQL Developer",
          "Importazione Database in Oracle",
          "Risolvere il Problema di Avvio dell'Oracle",
          "Risolvere Problemi di Connessione"
        ],
        "Ripasso di SQL": [
          "Introduzione al SQL",
          "Ripasso SQL - Query di Selezione",
          "Ripasso SQL - Funzioni di aggregazione",
          "Ripasso SQL - Le Subquery"
        ],
        "Basi di PL-SQL - I Blocchi e le Variabili": [
          "Introduzione al PL/SQL",
          "I Blocchi (BLOCKS) nel PL/SQL",
          "Creiamo il primo blocco anonimo",
          "Le variabili e la loro inizializzazione",
          "Primo uso delle variabili nel PL-SQL",
          "I Blocchi Annidati",
          "Uso delle Etichette nei Blocchi Annidati"
        ],
        "Le Transazioni": [
          "La gestione delle transazioni col PL/SQL",
          "Test Gestione delle Transazioni"
        ],
        "Basi di PL-SQL - Le espressioni condizionali": [
          "Introduzione alle espressioni condizionali",
          "Le Espressioni Condizionali IF e THEN",
          "Le Espressioni Condizionali IF, THEN e ELSIF",
          "Le Espressioni condizionali IF Annidate",
          "Operatore CASE",
          "Operatore SEARCHED CASE"
        ],
        "I Cicli": [
          "Introduzione ai cicli nel PL-SQL",
          "I Cicli Semplici - SIMPLE LOOP",
          "I Cicli - Il Comando WHILE",
          "I Cicli - Il Comando FOR",
          "Introduzione e uso del comando Continue",
          "I Cicli Annidati"
        ],
        "La Gestione delle Eccezioni": [
          "Introduzione alla gestione degli errori",
          "La Gestione delle Eccezioni - Parte 1",
          "La Gestione delle Eccezioni - Parte 2",
          "Scope e Propagazione delle Eccezioni",
          "Eccezioni definite dall'utente",
          "Eccezioni Definite Dall'Utente Dinamiche - Parte 1",
          "Eccezioni Definite Dall'Utente Dinamiche - Parte 2"
        ],
        "I Cursori": [
          "Introduzione ai Cursori",
          "I Cursori Impliciti",
          "I Cursori Espliciti - Parte 1",
          "Uso dei cursori espliciti con diversi cicli",
          "I Cursori con Parametri",
          "Uso Multiplo del Cursore",
          "I Cursori Annidati",
          "I Cursori FOR UPDATE"
        ],
        "Le Collezioni": [
          "Introduzione alle Collezioni in PL-SQL",
          "Uso delle collezioni Index-by Tables e Associative Arrays",
          "Introduzione alla collezione Nested Table",
          "Le collezioni - Il VArray"
        ]
      },
      "requirements": [
        "Cultura informatica di base",
        "Conoscenze di base del SQL",
        "Conoscere come installare e avviare i software",
        "Conoscenza di base di Java (Opzionale)",
        "OS: Windows, Linux. Per Mac necessaria installazione Docker o VM",
        "Almeno 25 Gb di spazio libero su HD",
        "Memoria: 2 GB Minima"
      ],
      "description": "Benvenuti nel corso \"Il Linguaggio PL/SQL di Oracle - Da Zero a Esperto\"\nIl corso è rivolto a tutti coloro i quali, dopo aver acquisito sufficienti conoscenze del Structured Query Language (SQL),   hanno l'esigenza di imparare il Linguaggio Procedurale PL-SQL (Procedural  Language SQL) di Oracle.\nIl corso si compone di tre livelli didattici:\nAl termine del primo livello lo studente avrà una chiara conoscenza di:\nCome creare i blocchi anonimi di PL/SQL\nCome distinguere le diverse sezioni dei blocchi\nCome usare ed inizializzare le variabili nel codice PL/SQL\nCome Gestire le Transazioni\nCome utilizzare le Espressioni Condizionali\nCome utilizzare i Cicli\nCome gestire le Eccezioni\nCome usare i Cursori\nCome usare le Collezioni\nCome usare i Record\nAl termine del secondo livello lo studente avrà una chiara conoscenza di:\nCome creare codice PL/SQL Modulare\nCome creare ed usare le Procedure (Procedure)\nCome creare ed usare le Funzioni (Function)\nCome creare ed usare i Trigger\nCome creare, modificare ed usare i Package\nCome creare i tipi oggetto (OOP)\nCome creare Package Strutturati e Procedure PL/SQL Dinamiche\nAl termine del terzo livello lo studente saprà:\nCome utilizzare le applicazioni modulari PL/SQL con Spring Boot\nCome creare un servizio REST in Spring Boot che impieghi il codice PL/SQL\nCome testare il web service con JUnit 4 e manualmente con PostMan\nTutti gli argomenti verranno trattati utilizzando un database con dati reali* analizzando, commentando ed eseguendo il codice PL/SQL nell'Oracle SQL Developer.\n*I dati provengono da un database di produzione sottoposto ad alterazione casuale per preservare la privacy e la riservatezza dei proprietari dei dati.",
      "target_audience": [
        "Responsabili IT e Data Analyst",
        "Programmatori SQL",
        "Sviluppatori di software",
        "Studenti, Scienziati e Ricercatori",
        "Chiunque desideri espandere le proprie conoscenze di SQL"
      ]
    },
    {
      "title": "Python ile Sıfırdan İleri Seviye Programlama",
      "url": "https://www.udemy.com/course/python-dersleri/",
      "bio": "Sıfırdan İleri Seviye Python Dersleri ile Python Programlama, Veritabanı, Veri Analizi, Bot Yazımı, Web Geliştirme Öğren",
      "objectives": [
        "Python ile Programlamayı iyi bir şekilde öğrenmiş olacaksınız.",
        "Python ile Nesne Tabanlı Programlamayı öğrenerek daha kaliteli uygulamaları yazabiliyor olacaksınız.",
        "Farklı veritabanı (MySql, SQLite, MongoDb) servisleriyle nasıl çalışacağımızı öğrenmiş olacağız.",
        "Python'da modül kullanımını detaylı şekilde öğrenerek hazır modülleri kullanmanın tadına varacaksınız.",
        "Tkinter ile Python'da masaüstü uygulamaları geliştirebiliyor olacaksınız.",
        "Django ile dinamik web uygulamalarını geliştirebiliyor olacaksınız.",
        "Artık CV'nize Python'ı ileri seviyede biliyorum yazıp kariyerinizde fark yaratacaksınız çünkü Python' ın Popülerliği tartışılmaz bir gerçektir."
      ],
      "course_content": {
        "Giriş": [
          "Python Nedir ?",
          "Kursa Nasıl Çalışmalıyım ?",
          "Online Editör ile Python Geliştirme"
        ],
        "Windows Geliştirme Ortamı": [
          "Python Kurulumu",
          "Editör Kurulumu",
          "Komut Satırı Programı",
          "İlk Python Programı"
        ],
        "MacOs Geliştirme Ortamı": [
          "Python Kurulumu",
          "Editör Kurulumu",
          "Terminal Kullanımı",
          "İlk Python Programı"
        ],
        "Python Sayılar ve Matematiksel Operatörler": [
          "Bölüm Hakkında",
          "Numbers: Int ve Float",
          "Numbers: Sayısal Operatörler-1",
          "Numbers: Sayısal Operatörler-2",
          "Yorum Satırı Oluşturma",
          "Sayılar"
        ],
        "Python Değişkenler": [
          "Pythonda Değişken Tanımlama",
          "Pythonda Değişken Tanımlama Kuralları",
          "Uygulama: Değişken Tanımlama",
          "Pythonda Veri Tipleri",
          "Uygulama: Veri Tipleri",
          "Değişkenler"
        ],
        "Python Karakter Dizileri: Strings": [
          "Pythonda Karakter Dizileri: Strings",
          "Pythonda String Slicing",
          "Pythonda String Formatlama",
          "Uygulama: Karakter Dizileri: Strings",
          "Pythonda String Metotları",
          "Uygulama: String Metotları",
          "String"
        ],
        "Python Listeler": [
          "Pythonda Listeler",
          "Pythonda Listeler-2",
          "Uygulama: Listeler",
          "Pythonda Liste Metotları",
          "Uygulama: Liste Metotları",
          "Pythonda Tuple",
          "Pythonda Dictionary",
          "Uygulama: Dictionary",
          "Dictionary Metotları",
          "Uygulama: Dictionary Metotları",
          "Pythonda Sets",
          "Pythonda Value & Referans Veri Tipleri"
        ],
        "Python Operatörler": [
          "Bölüm Hakkında",
          "Atama Operatörleri",
          "Uygulama: Atama Operatörleri",
          "Karşılaştırma Operatörleri",
          "Uygulama: Karşılaştırma Operatörleri",
          "Mantıksal Operatörler",
          "Uygulama: Mantıksal Operatörler",
          "Diğer Python Operatörleri"
        ],
        "Python Koşul İfadeleri": [
          "Bölüm Hakkında",
          "Koşul İfadeleri",
          "Koşullu Durum Blokları - If ve Else Blokları",
          "Koşullu Durum Blokları - If - Elif - Else Blokları",
          "Uygulama-1: Koşullu İfadeler",
          "Uygulama-2: Yakıt Tüketim Maliyeti",
          "Uygulama-3: Koşullu İfadeler"
        ],
        "Python Döngüler": [
          "Bölüm Hakkında",
          "Döngüler",
          "Pythonda For Döngüleri",
          "Uygulama-1: For Döngüleri",
          "Uygulama-2: For Döngüleri",
          "Pythonda While Döngüleri",
          "Uygulama-1: While Döngüleri",
          "Uygulama-2: While Döngüleri",
          "Break & Continue"
        ]
      },
      "requirements": [
        "Başlangıç seviyesinde bilgisayar kullanmayı bilmeniz ve öğrenme disiplinine sahip olmanız yeterlidir.",
        "Programlama geçmişinizin olması gerekmiyor.",
        "Web uygulamaları için basit düzeyde html bilgisi bilinmelidir."
      ],
      "description": "Udemy' nin en güncel ve en detaylı python programlama kursuna katılarak, sıfırdan ileri seviye python programlama öğrenmenin tadına varın...\nSıfırdan Python Dersleri;\nVeritabanı Servisleri (MySql, Sqlite, MongoDb),\nNumpy ve Pandas ile Veri Analizi\nSelenium ile Bot Yazımı,\nRestful Api Servis Uygulamaları,\nDjango ile Web Geliştirme\nTkinter ile Masaüstü Uygulama Geliştirme\nve çok daha fazlasını python kursumuzda bulabilirsiniz.\nKursumuzda baştan sona python programlamayı öğrenerek fark yaratın çünkü Python' ın popülerliği tartışılmaz bir gerçektir. Gelin \"Python programlama öğrenmeye\" beraber başlayalım.\nPython dersleri için her hangi bir programlama geçmişinizin olması gerekmiyor çünkü python derslerimiz size sıfırdan ileri seviye python programlamayı adım adım bol bol uygulama yaptırarak öğretecektir.\nPython programlama dilini güzel bir şekilde öğrendikten sonra farklı platformlarda python nasıl kullanılır öğreniyoruz; Python dersleri ile Masaüstü uygulama geliştirme ve Python ile Web Geliştirme alanında kariyerinize güzel bir yatırım yapacaksınız.\n\nKurs boyunca,\nHer konunun kalıcılığını sağlamak için bir çok python uygulaması yapacağız.\nBölüm sonlarında konuların hepsini kapsayan python ödevlerimizi yapacağız.\nKurs boyunca en gerekli python derslerini en gerektiği kadar detaylı bir şekilde uygulayarak öğreneceğiz.\nKurs İçeriği,\nPython Geliştirme Ortamının Hazırlanması\nPython Objeleri ve Veri Yapıları\nPython Operatörler\nPython Koşul İfadeleri\nPython Döngüler\nPython Fonksiyonlar\nPython Nesne Tabanlı Programlama\nPython Modüller\nPython Hatalar & Hata Yönetimi\nPython Dosya Yönetimi\nPython Fonksiyonların İleri Seviye Özellikleri\nPython Iterators\nPython Generators\nİleri Seviye Python Modülleri  & Web Scaping\nPython ile Bot Yazılımı: Selenium\nSelenium: Instagram Bot\nSelenium: Twitter Bot\nVeri Analizi: Numpy\nVeri Analizi: Pandas\nVeri Görselleştirme: Matplotlib\nSQL Database: MySql & SQLite\nNoSQL Database: MongoDb\nWeb Geliştirme: Django\nDesktop Uygulama Geliştirme - Tkinter\nZaman kaybetmeden Python programlama dünyasına katılın ve Python 'ın getirdiği güzellikleri hep beraber görmeye başlayalım.",
      "target_audience": [
        "Programlamaya iyi bir başlangıç yapmak isteyen herkes.",
        "Başka bir dilde programlama tecrübesi olup Python öğrenmek isteyenler.",
        "Python'ı temel seviyeden bilip, ileri seviye Python öğrenmek isteyenler."
      ]
    },
    {
      "title": "Aprende a Programar con Python. Practicando con proyectos",
      "url": "https://www.udemy.com/course/aprende-a-programar-con-python-practicando-con-proyectos/",
      "bio": "Domina la Programación en Python. Conviértete en un Experto de Python 3.10 y Práctica tus conocimientos con Proyectos",
      "objectives": [
        "Ejercitar la lógica de programación",
        "Comprender cómo la vida cotidiana puede ser fácilitada o simulada con código",
        "Aprender programación desde cero",
        "Conocer y aprender el lenguaje de programación Python",
        "Ser un programador desde cero, sin conocimiento en otro lenguaje o con algo previo",
        "Mejorar las habilidades de programación, mejorar procesos y fácilitar la comprensión de código",
        "Preparar un entorno dónde programar en Python",
        "Operaciones aritméticas y jerarquía de Python",
        "Manejo de cadenas en Python",
        "Digitar datos por teclado con Python",
        "Mostrar Datos por Pantalla al usuario en Python",
        "Operadores Relacionales de Python",
        "Operadores Lógicos de Python",
        "Condicionales en Python",
        "Estructuras de Datos: Listas, Tuplas y Diccionarios",
        "Iteraciones y bucles repetitivos de Python",
        "Segmentar Código y hacerlo más eficaz con las Funciones en Python",
        "Gestionar posibles errores que puedan dar tus programas",
        "Programación Orientada a Objetos"
      ],
      "course_content": {
        "Presentación": [
          "Descripción del Curso",
          "Recuerda que cuentas con nuestro asesoramiento y respuestas a tus preguntas"
        ],
        "Preparando el entorno de trabajo": [
          "Instalar Python 3",
          "Instalar Sublime Text",
          "Instalar Visual Studio Code",
          "Extensiones para Visual Studio Code",
          "Programar desde IDLE",
          "Ejecución de Archivos"
        ],
        "Primeros Pasos": [
          "Guardar los Archivos",
          "Hola Mundo",
          "Variables y Tipos de Datos (Teoría)",
          "Variables y Tipos de Datos",
          "Reglas y Consejos para Variables",
          "Variables y \"Constantes\"",
          "Comentarios y Asignación Múltiple de Variables"
        ],
        "Operadores Aritméticos": [
          "Números",
          "Operadores Aritméticos y Jerarquía (Teoría)",
          "Operadores Aritméticos",
          "Operadores Aritméticos con Variables",
          "Jerarquía de Operaciones",
          "Ejercicios",
          "Ejercicio 1",
          "Ejercicio 2"
        ],
        "Cadenas de Texto": [
          "Cadenas (Teoría)",
          "Cadenas",
          "Cadenas de Texto Parte II",
          "Debanado de Cadenas",
          "Métodos de Cadenas",
          "Ejercicios",
          "Ejercicio 1"
        ],
        "Entrada por Teclado y Salida por Pantalla": [
          "Entrada por Teclado",
          "Ejercicios",
          "Ejercicio 1",
          "Ejercicio 2",
          "Mostrar Datos por Pantalla",
          "Ejercicios",
          "Ejercicio 3",
          "Ejercicio 4"
        ],
        "Booleanos": [
          "Booleanos",
          "Operadores Relacionales y Lógicos (Teoría)",
          "Operadores Relacionales",
          "Operadores Lógicos",
          "Métodos Booleanos"
        ],
        "Condicionales": [
          "If, Else y Elif (Teoría)",
          "If y Else",
          "Elif",
          "Condicionales Anidados",
          "Ejercicios",
          "Ejercicio 1",
          "Ejercicio 2",
          "Ejercicios",
          "Ejercicio 3",
          "Ejercicio 4"
        ],
        "Teoría de Estructuras de Datos": [
          "Listas, Tuplas y Diccionarios (Teoría)"
        ],
        "Estructuras de Datos: Listas": [
          "Listas",
          "Debanado de Listas",
          "Métodos de listas",
          "Métodos de Listas (Parte 2)",
          "Métodos de Listas (Parte 3)",
          "Llenar una Lista Vacía",
          "Ejercicios",
          "Ejercicio 1",
          "Ejercicio 2"
        ]
      },
      "requirements": [
        "Una computadora o teléfono",
        "Acceso a Internet",
        "¡Muchas Ganas de Aprender a Programar!"
      ],
      "description": "Si quieres empezar en el mundo de la programación, y no sabes por dónde iniciar. Si eres un programador que ya tiene experiencia, y deseas aprender un nuevo lenguaje poderoso y potente. Eres un autodidacta, que quiere apreder cosas nuevas. O si simplemente te apasiona la programación... ¡Este curso es para tí!\nNo solo te enseño a programar en Python, sino que te enseño lo más importante: La lógica de programación; ejercitarás tus conocimientos desde cero y llegarás a un nivel muy avanzado de entendimiento de programación y también con su respectiva lógica, y todo con el lenguaje Python.\nAprenderás a desarrollarte como programador, aún conociendo o no sobre la programación. Desarrollarás tu lógica de programación, practicarás con muchos ejercicios, adquirirás experiencia con un lenguaje de una curva de aprendizaje baja, como Python, podrás construir tus propios programas y obtendrás la capacidad suficiente para comprender cualquier otro lenguaje, y para ser un programador completo y bien preparado.\nYo soy Walter Coto, tengo más de 6 Años de experiencia trabajando en Tecnología. Tengo más de 320.000 estudiantes en Udemy. Y en esta oportunidad quiero transmitirte mi experiencia y conocimientos, para que tu puedas desarrollar el pensamiento de un programador.\n¡Nos vemos dentro del curso!\n¡Exitos!",
      "target_audience": [
        "Estudiantes que deseen iniciar en la Programación",
        "Estudiantes Autodidactas que tienen la disciplina para aprender",
        "Estudiantes Programadores que quieran aprender el lenguaje Python desde cero",
        "Estudiantes interesados en Aprender algo nuevo con respecto a la Tecnología"
      ]
    },
    {
      "title": "Débuter et apprendre a programmer en Python.",
      "url": "https://www.udemy.com/course/debuter-et-apprendre-a-programmer-en-python/",
      "bio": "Apprenez la programmation Python progressivement sans aucun prérequis.",
      "objectives": [
        "Les fondamentaux du langage Python",
        "Créer, gérer ou télécharger des fichiers",
        "Créer vos propres modules et packages",
        "Manipuler les chaines de caractères",
        "Exploiter les bases de données",
        "Réaliser des interfaces graphiques",
        "Utiliser des fonctions de la librairie standard de Python",
        "Apprendre la programmation orientée objet (POO)",
        "Apprendre la modularité en python",
        "L'autonomie en utilisant les ressources destinés au Python",
        "Exploiter les environnements virtuels"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation de Python": [
          "Installation de Python sous Windows",
          "Installation de Python sous Linux Ubuntu",
          "Installation de Python sous Mac",
          "Votre premier programme en Python"
        ],
        "Python les fondamentaux": [
          "Les variables de base",
          "Saisie Utilisateur (Input)",
          "Opérateurs mathématique",
          "Modifier le type d'une variable (cast)",
          "Concaténation",
          "Structure conditionnelle (if else)",
          "Opérateurs de comparaison",
          "Opérateurs Logique",
          "Structure conditionnelle (elif)",
          "Boucle for",
          "Boucle while",
          "Break Continue",
          "Structure de donnée : Liste",
          "Structure de donnée : Dictionnaire",
          "Les Tuples (séquences)",
          "Erreurs et exceptions",
          "TP1 : Travaux Pratiques",
          "TP1Correction"
        ],
        "Les fonctions en Python": [
          "Les Fonctions (Procedures)",
          "Valeurs de retour des fonctions",
          "Les Fonctions lambda",
          "TP2 : Travaux Pratiques",
          "TP2 Correction"
        ],
        "La modularité en python": [
          "Qu'est ce que la modularité ?",
          "Utiliser les modules de la bibliothèque de Python",
          "Créer ses propres modules",
          "Tester ses modules",
          "Créer ses packages"
        ],
        "La Programmation Orientée Objet (P.O.O)": [
          "Qu'est ce que la Programmation Orientée Objet ?",
          "Les classes",
          "Le constructeur de classe",
          "Les méthodes",
          "Les méthodes de classe",
          "Les méthodes statiques",
          "Les propriétés",
          "L'Héritage en Python",
          "TP3 Travaux pratiques P.O.O",
          "TP3 Correction"
        ],
        "Interface Graphique (Tkinter)": [
          "Qu'est ce que Tkinter ?",
          "Widget Fenêtre",
          "Widget Label",
          "Widget Message",
          "Widget Button",
          "Widget Entry",
          "Boite message Modale",
          "Les variables de contrôle",
          "Les observateurs (déclencheur d’événements)",
          "Placer des widgets avec pack()",
          "Placer des widgets avec grid()",
          "Placer des widgets avec place()",
          "Widget menu",
          "Modifier la police et la taille d'un widget",
          "TP4 : Travaux Pratiques Tkinter",
          "TP4 Correction"
        ],
        "Aide et ressources en python": [
          "Aide interactive intégrée",
          "Documentation Officiel Aide en ligne",
          "Documentation Tkinter",
          "Chaîne de documentation : docstring",
          "PIP : système de gestion de paquets"
        ],
        "Gestion des données avec les fichiers": [
          "Ouverture est exploitation d'un fichier",
          "Enregistrer dans un fichier",
          "Enregistrer un objet dans un fichier binaire (pickle)",
          "Télécharger un fichier texte, image, etc..."
        ],
        "Manipuler les chaines de caractères en python": [
          "Caractère d'échappement et concaténation",
          "Extraire des caractères dans une chaîne",
          "Gestion de la casse",
          "Gestion des espaces",
          "Suppression ou remplacement de caractère",
          "Scinder, joindre une chaîne de caractère",
          "Recherche de caractère"
        ]
      },
      "requirements": [
        "Aucun prérequis, ce cours est adapté aux débutants en développement",
        "De la motivation et de la persévérance, car apprendre le python est a la portée de chacun !"
      ],
      "description": "Python est un langage de programmation populaire. Des milliers d’entreprises ont construit leurs sites Web avec Python, notamment Google, Facebook, Dropbox, Instagram et Reddit.\nPython est utilisé pour toutes sortes de tâches, telles que la création de sites Web, le jeu vidéo,  l’aspiration de sites, l’analyse de données, l’apprentissage automatique et le traitement du langage naturel ou encore de simples applications.\nLe langage Python est conçu pour être facile à lire sans pour autant sacrifier sa puissance, ce qui en fait un excellent langage pour les débutants.\nPourquoi devriez-vous apprendre le Python?\nPython est facile à apprendre\nPython est un langage de choix, c'est-à-dire à usage général (application, jeux, site web, etc..)\nPython est un langage polyvalent et multiplate-forme\nPython dispose de l'un des gestionnaires de paquets les plus matures\nPython est un langage couramment utilisé dans la science des données\nPython est multiplate-forme et open source\nEt la raison la plus importante : Si vous souhaitez ajouter un langage à votre bibliothèque existante, la demande de programmeurs en Python est énorme.\nPour suivre ce cours vous n'avez besoin d'aucun prérequis, d' aucune compétence en développement !\nIl est aussi adapté aux développeurs désirant apprendre le Python.\nSi l'aventure vous tente alors rejoignez les 60k de participants qui m'ont déjà fait confiance pour leur apprentissage  !!!",
      "target_audience": [
        "Toutes personnes souhaitant apprendre le python.",
        "Les novices en développement, car c'est le langage idéal pour débuter",
        "Les développeurs souhaitant ajouter un langage a leurs compétences"
      ]
    },
    {
      "title": "Der komplette Java Kurs - Dein Weg zum Java Profi!",
      "url": "https://www.udemy.com/course/premium-java-kurs/",
      "bio": "Einfach Java programmieren lernen. Mit Beispielen und Übungsaufgaben im Java Kurs inkl. Java FX.",
      "objectives": [
        "Umfangreiche Java Grundlagen kennen lernen und eigene Programme entwickeln",
        "Die Programmiersprache Java verstehen und anwenden",
        "Perfekte Grundlagen, um Android Apps mit Java zu programmieren",
        "Grundkenntnisse der objektorientierten Java Programmierung",
        "Praxis-Übungsaufgaben mit Lösungen nach jedem Videoblock",
        "Keine langweilige Theorie, sondern echte Beispiele aus der Praxis",
        "Du lernst alle Vorteile von Java gegenüber anderen Programmiersprachen kennen",
        "Einführung in JavaFX um eigene visuelle Oberflächen zu erstellen",
        "Über 30 Stunden Video-Inhalt und 127 Java Lektionen"
      ],
      "course_content": {
        "Java Setup und Grundlagen": [
          "Intro",
          "Setup",
          "Eine Klasse",
          "Instanz-Variablen",
          "Instanz-Methoden",
          "Konstruktoren",
          "Instanz-Initialisierung",
          "Aufgaben zu Block 1",
          "Lösungen zu Block 1"
        ],
        "Erstes Programm, Objekte, Getter & Setter...": [
          "Erstes Programm",
          "Objekte",
          "Access Modifier",
          "Getter & Setter",
          "Daten-Kapselung",
          "Übungsaufgaben zu Block 2",
          "Lösungen zu Block 2"
        ],
        "Klassen-Methoden, Klassen-Variablen, Keyword this...": [
          "Klassen-Methoden",
          "Klassen-Variablen",
          "Klassen-Initialisierung",
          "Lokale Variablen",
          "Shadowing",
          "Keyword this",
          "Overloading",
          "Finale Variablen",
          "Übungsaufgaben zu Block 3",
          "Lösungen zu Block 3"
        ],
        "Operatoren, Packages, Casting von Primitiven": [
          "Packages",
          "Primitive Datentypen",
          "Arithmetische Operatoren",
          "Inkrement & Dekrement",
          "Casting von Primitiven",
          "Übungsaufgaben zu Block 4",
          "Lösungen zu Block 4"
        ],
        "Call by Value, Referenzen, Garbage Collection...": [
          "Komplexe Datentypen",
          "Java API-Doc",
          "Call by Value",
          "Referenzen",
          "Garbage Collection",
          "Übungsaufgaben zu Block 5",
          "Lösungen zu Block 5"
        ],
        "switch Statement, Bedingte Anweisungen und Zuweisungen...": [
          "Vergleichsoperatoren",
          "Bedingte Anweisungen",
          "Bedingte Zuweisungen",
          "switch Statement",
          "Logische Operatoren",
          "Short Circuit Evaluation",
          "Übungsaufgaben zu Block 6",
          "Lösungen zu Block 6"
        ],
        "Arrays, Rekursion, for-Schleife, while & do-while-Schleife": [
          "Arrays",
          "Programmstart-Argumente",
          "Rekursion",
          "for-Schleife",
          "for-Schleife und Arrays",
          "for-each Schleife",
          "VarArgs",
          "while & do-while Schleife",
          "break & continue",
          "Code Labels"
        ],
        "Vererbung, Polymorphie, Keyword super, Interfaces": [
          "Vererbung",
          "Vererbungshierarchien",
          "Polymorphie",
          "Casting von komplexen Datentypen",
          "Scopes bei Vererbung",
          "Keyword super",
          "Overriding",
          "Keyword abstract",
          "Interfaces"
        ],
        "Exceptions, Design Guide": [
          "Ausnahmebehandlung (Exceptions)",
          "Exceptions fangen (try-catch)",
          "Exceptions werfen (throw)",
          "Ausnahmebehandlung: Design Guide"
        ],
        "Objekte kopieren und vergleichen, String Constant Pool, RegEx": [
          "Objekte kopieren (clone)",
          "Objekte vergleichen (equals)",
          "Objekt-ID (hashCode)",
          "String Constant Pool",
          "Reguläre Ausdrücke (RegEx)"
        ]
      },
      "requirements": [
        "Windows-/ Linux-/ macOS-Computer oder Laptop besitzen",
        "Einen PC bedienen können (Basiskenntnisse)"
      ],
      "description": "Der ultimative Schritt-für-Schritt Java-Videokurs, der dich vom absoluten Laien zum fähigen Java-Entwickler transformiert. Mit Übungsaufgaben und Lösungen nach jedem Videoblock um das gelernte Wissen zu überprüfen und zu festigen.\nWerde innerhalb von 30 Tagen ein gefragter Java-Entwickler und lerne, wie du eigene Anwendungen, Spiele, Apps und vieles mehr entwickeln kannst, um all deine Ideen endlich umzusetzen und zusätzlich deinen Wert auf dem Arbeitsmarkt drastisch zu steigern.\n\n\nJava programmieren lernen ohne Programmier-Vorerfahrungen oder Grundkenntnisse...\nHerzlich Willkommen zum Java Kurs! Du willst also Java lernen?!\nDas steht wohl fest - sonst wärst du jetzt nicht hier. Was für dich aber vermutlich noch nicht so ganz feststeht:\n\n\nWIE sollst du Java lernen?\n\nDie Welt um Java ist sehr groß, und entsprechend groß ist auch das Angebot:\nDa gäbe es zum Beispiel speziell auf Anfänger getrimmte Einsteiger-Lektüren. Diese fangen bei Null an, und erklären meist verständlich - oft auch praktisch gehalten - die Basics von Java. Aber es gibt ein Problem: Java wird nicht vollständig behandelt, beim vorgeführten Stoff wird nur an der Oberfläche gekratzt, und viele Erklärungen in diesen Lektüren sind im Kontext der Sprachgesamtheit schlichtweg nicht korrekt.\n\n\nAlso mehr Crashkurs als solide Grundlage, und mit dem Endziel mal ein wirklich guter Java-Entwickler zu werden sogar  kontraproduktiv!  Als Alternative bieten sich \"professionellere\" Bücher an:  1000-Seiten-Wälzer, die Java dann zwar meist auch wirklich  vollständig abdecken, aber ein enormes Durchhaltevermögen erfordern und  auf Grund des Aufbaus und der meist sehr theoretischen Erklärungen mehr  als Nachschlagewerk für bereits gelernte Java-Programmierer geeignet  sind anstatt als Lehrbuch, aus dem man ordentlich lernen kann.\n\n\nAuch das  ist nicht gerade der optimale Weg.   Was bleibt noch übrig? Internet-Tutorials,  also (meist auch kostenlose) How-To's, entweder in Textform, aber nicht  selten auch in Videoform (z.B. auf YouTube). Leider sind diese  Tutorials in vielen Fällen selbst von Anfängern verfasst, meist auf  spezifische Anwendungsfälle gerichtet und in sich völlig  zusammenhangslos - So wird Java lernen zu einem Puzzle, und es kann  davon ausgegangen werden dass viele Teile fehlen, oder auf Grund des  nicht vorhandenen Gesamtkontexts schnell fehlverstanden werden können!\n\n...klingt irgendwie demotivierend? Ist verständlich, denn wer ein richtig guter Programmierer werden möchte, der muss all die genannten  Möglichkeiten kombinieren, Stück für Stück zusammenschustern und sehr  viel Zeit und Mühe investieren - Zumindest bisher!\n\nDenn zum Glück gibt es jetzt endlich eine bessere Alternative...\n\nDer Java Video Kurs: Dein Weg zum Java-Profi!\nDieser Kurs vereint den Spaß am Lernen und den schnellen Lernfortschritt, den das Format Video mit sich bringt, mit der  Professionalität und Vollständigkeit der Java Referenz-Bücher, und  bietet dir zudem sinnvolle Übungsaufgaben und eine individuelle  Lernhilfe. Endlich eine einzige, zentrale Lernquelle für den angehenden  Java-Profi!\n\"Programmieren lernt man nur durch Programmieren!\" Deswegen gibt es zu jedem Video-Block abwechslungsreiche Übungsaufgaben!\n\n\nIm Kurs geht es um die beliebte Sprache Java. Nach jedem Videoblock gibt es umfangreiche Übungsaufgaben mit Lösungen, um das Gelernte in die Praxis umzusetzen. Nur so lernt man auch richtig und kann sein Wissen perfekt überprüfen.\nDer Kurs eignet sich perfekt, wenn man bereits andere Sprachen beherrscht und Interesse am Programmieren hat. Grundkenntnisse sind aber für den Kurs nicht nötig.\nTrete in direkten Kontakt und tausche Dich mit uns in regelmäßigen Diskussionsrunden via Internet aus, stelle uns Fragen und erhalte wertvolle Informationen aus erster Hand.\n\n\n\n++++++++++++++++++++++++++++++++++++\nHier sind zwei von über 400 x 5 Sterne Bewertungen:\nSehr toller und umfangreicher Kurs zum Thema Java. Ich habe den Kurs vor einiger Zeit gemacht und er hat mir sehr geholfen! Er beinhaltet wirklich alles was man wissen muss, hat einen sinnvollen Aufbau und gut verständliche Sprache und Erklärungen. Zusätzlich noch Aufgaben die das gesehen praktisch anwenden und festigen. Man kann wirklich so als Anfänger Java lernen!! Für mich der beste Java Kurs den es gibt!\nLisa Bell\n\n\nDer Java Kurs hat mich vom Anfänger zum Programmierer von \"kleinen\" Programmen gemacht. Der Kurs macht sehr viel Spaß und ist clever aufgebaut. Die Reaktionszeiten des Dozenten bei Fragen sind innerhalb von ein paar Stunden!!! Weltklasse! Ich bin wirklich sehr zufrieden und konnte mit diesem Kurs tolles Wissen aneignen. Vielen Dank.\nJens Dening\n++++++++++++++++++++++++++++++++++++",
      "target_audience": [
        "Jeder der Java lernen will",
        "Jeder der Interesse an Java hat",
        "Jeder der eine starke Grundlage für die Programmierung von Android-Apps schaffen will",
        "Alle, die Java endlich lernen und verstehen wollen"
      ]
    },
    {
      "title": "Langchain y LLM: Desarrolla Aplicaciones de IA en Python",
      "url": "https://www.udemy.com/course/langchain-y-llm-desarrolla-aplicaciones-de-ia-en-python/",
      "bio": "Crea aplicaciones de IA Generativa con LLM y Langchain en Python: Implementa proyectos reales como RAG, Chatbot, agentes",
      "objectives": [
        "Comprender qué son los Large Language Models (LLMs) y cómo interactuar con ellos de manera efectiva.",
        "Conocer la arquitectura y los componentes principales de Langchain.",
        "Configurar APIs para conectar con LLMs.",
        "Diseñar y aplicar con Langchain las plantillas de prompts para optimizar la entrada de datos en LLMs.",
        "Estandarizar tus desarrollos de IA con Langchain y poder usar o cambiar a cualquier otro LLM sin esfuerzo.",
        "Parsear y procesar la salida de los modelos LLM para obtener resultados útiles.",
        "Transformar documentos y manejar cargadores para integraciones con plataformas como Google y AWS.",
        "Crear embeddings de texto y almacenar vectores en bases de datos para potenciar los LLMs con tus propios datos.",
        "Optimizar resultados mediante la compresión de datos utilizando LLMs.",
        "Aplicar el conocimiento adquirido para crear sistemas RAG con bases de datos vectoriales.",
        "Diseñar modelos de cadena secuencial simples y avanzados en Langchain.",
        "Entender el concepto de memoria en Langchain y cómo implementarla.",
        "Desarrollar agentes que utilicen motores de búsqueda para mejorar sus respuestas.",
        "Crear agentes programadores de código y herramientas personalizadas.",
        "Implementar agentes conversacionales que puedan interactuar de manera efectiva utilizando LLMs y Langchain.",
        "Crear agentes que realicen análisis automáticos de SQL a partir de consultas en lenguaje natural."
      ],
      "course_content": {
        "INTRODUCCIÓN A LANGCHAIN Y LLMs": [
          "Bienvenida / Información importante",
          "¿Qué es un Large Language Model (LLM)?",
          "¿Qué es Langchain y cuáles son sus componentes?",
          "Instalación de Python y librería Langchain",
          "¿Qué es una API? Configuración de la cuenta OpenAI y API Key",
          "Uso de LLM Open Source en local con Ollama"
        ],
        "MODELOS DE ENTRADA / SALIDA EN LANGCHAIN": [
          "Interacción y uso de Langchain con LLMs y Modelos de Chat",
          "Plantillas de prompts con Langchain para el modelo de entrada",
          "Parsear y procesar la salida",
          "Serialización de prompts (guardar y cargar)"
        ],
        "CONECTORES DE DATOS EN LANGCHAIN": [
          "Cargadores de documentos",
          "Caso de uso - Carga de ficheros pdf y conexión con LLM para resumen de documento",
          "Cargadores de documentos – integraciones con otras plataformas (Google, AWS, Wik",
          "Transformación de documentos",
          "Incrustación de texto y creación de vectores (embeddings)",
          "Almacenamiento de vectores en base de datos",
          "Compresión y optimización de resultados a partir de LLMs"
        ],
        "CADENAS EN LANGCHAIN": [
          "¿Qué son las cadenas y cómo crear el primero modelo de cadena secuencial simple?",
          "Construcción del Modelo Secuencial Completo",
          "Enrutamiento a cadenas con LLMRouterChain",
          "Cadenas de Transformación",
          "Cadenas para Preguntas y Respuestas sobre nuestros datos",
          "NOTA: Enfoque clásico vs Enfoque runnable"
        ],
        "MEMORIA EN LANGCHAIN": [
          "¿Qué es la memoria en Langchain y qué tipos de memoria podemos implementar?",
          "Creación de Buffer de Memoria completa de una Conversación",
          "Creación de Buffer de Memoria con Ventana",
          "Creación de Buffer de Memoria Resumida"
        ],
        "AGENTES EN LANGCHAIN": [
          "¿Qué son los agentes y cómo implementar un primer caso de uso?",
          "Creación de agente potenciado con motor de búsqueda",
          "Creación de agente programador de código",
          "Creación de herramientas personalizadas",
          "NOTA: Creación de agente con arquitectura runnable",
          "Agentes conversacionales con memoria",
          "PROYECTO: Agente Chatbot con memoria a partir de nuestros datos (sistema RAG)",
          "PROYECTO: Agente para Análisis automático SQL a partir de lenguaje natural"
        ],
        "Bonus": [
          "Clase Extra"
        ]
      },
      "requirements": [
        "No es necesario conocimiento previo en Langchain, solo es recomendable tener conocimiento básico de Python."
      ],
      "description": "¿Estás listo para llevar tus habilidades en Inteligencia Artificial al siguiente nivel con Langchain?\nEste curso de Langchain y LLMs con Python está diseñado para equiparte con las herramientas y el conocimiento necesarios para dominar el futuro del desarrollo tecnológico. Aprende a integrar los potentes Modelos de Lenguaje de Última Generación (LLMs) en tus aplicaciones y transforma cómo interactúas con los datos y el resto de herramientas que tienes a tu alrededor.\nAdemás, Langchain nos ofrece una manera estándar de conectar con cualquier LLM o fuente de datos para crear nuestras propias aplicaciones de IA, por tanto, si en el futuro necesitamos cambiar a otro LLM más potente, no tendremos que rehacer todo el desarrollo, únicamente cambiar la conexión a otro LLM sin desperdiciar tiempo y esfuerzo.\n---\n¿Qué Ofrecemos?\n· Fundamentos Sólidos: Comienza con una comprensión clara de qué son los LLMs y cómo Langchain puede ser la clave para desbloquear todo su potencial.\n· Instalación y Configuración: Te guiamos paso a paso en la instalación de Python y Langchain, y en la configuración de APIs, para que puedas empezar sin contratiempos.\n· Interacción Avanzada: Aprende a crear modelos de chat efectivos y a diseñar prompts optimizados que saquen lo mejor de los LLMs, revolucionando la manera en que tus aplicaciones procesan y presentan la información.\n· Manejo de Datos y Embeddings: Descubre cómo transformar y gestionar documentos, crear embeddings, y almacenar vectores de manera eficiente utilizando bases de datos vectoriales con tus propios datos.\n· Construcción de Cadenas y Agentes: Desarrolla modelos secuenciales y agentes inteligentes capaces de realizar tareas complejas, como búsqueda de información avanzada, chatbots que combinen conocimiento interno y externo o bien análisis automático de SQL.\n· Memoria en Langchain: Implementa memoria de conversación en tus aplicaciones para ofrecer experiencias más humanas y fluidas manteniendo el histórico.\n· Casos Prácticos Reales: Construiremos proyectos reales y relevantes, desde chatbots con memoria hasta sistemas de análisis SQL basados en consultas en lenguaje natural.\n---\n¿Por Qué Elegir Este Curso?\nEnfocado en la Práctica: La metodología se centra en aplicaciones prácticas, asegurando que lo que aprendes puedes aplicarlo inmediatamente.\nAcceso de por vida: Tendrás acceso al material por tiempo ilimitado para que lo hagas a tu ritmo.\nScripts reutilizables: Dispones de todo el material del curso y scripts que puedes adaptar a tu caso de uso concreto de manera inmediata.\nSin coste adicional: Habrá actualizaciones del curso y mejoras que no te supondrás ningún coste adicional.\nNo tienes nada que perder, tendrás acceso de por vida y una garantía de 30 días para asegurar que estás 100% satisfecho con el material, mi objetivo es aportarte valor con todos estos conocimientos y si no es así siéntete libre de solicitar la devolución, aunque estoy seguro de que cumplirá tus expectativas.\nInscríbete ahora y comienza a transformar tus ideas en realidad con Langchain y Python para desbloquear infinitas posibilidades.",
      "target_audience": [
        "Profesionales interesados en integrar modelos de lenguaje avanzados (LLMs) en sus aplicaciones.",
        "Desarrolladores que deseen aprender a utilizar herramientas modernas como Langchain para mejorar la interacción con los usuarios.",
        "Ingenieros de datos que buscan optimizar el procesamiento y almacenamiento de datos utilizando embeddings y bases de datos vectoriales.",
        "Profesionales que desean explorar las capacidades de los LLMs y su aplicación en diversas industrias.",
        "Innovadores que buscan crear productos y servicios basados en inteligencia artificial creando potentes aplicaciones con Langchain.",
        "Líderes que desean comprender cómo las tecnologías de LLMs y Langchain pueden transformar sus negocios y procesos operativos.",
        "Alumnos que deseen adquirir habilidades prácticas en el uso de tecnologías de vanguardia en inteligencia artificial y procesamiento de lenguaje natural.",
        "Estudiantes que buscan proyectos aplicados que les permitan poner en práctica conceptos teóricos.",
        "Personas con un interés general en el campo de la inteligencia artificial que desean explorar sus aplicaciones prácticas.",
        "Entusiastas que buscan una introducción comprensiva a la tecnología detrás de los LLMs y su implementación con Langchain."
      ]
    },
    {
      "title": "Sıfırdan Zirveye Adım Adım Bol Uygulamalı Java Kursu",
      "url": "https://www.udemy.com/course/sifirdan-zirveye-adim-adim-bol-uygulamali-java-kursu/",
      "bio": "Mobil ve Web Geliştirme Dünyası ile pek çok alanda kullanılan Java dilini öğrenmeye başlayarak kariyerinize yön verin",
      "objectives": [
        "Programlama dillerinin temeller yapılarını öğreneceksiniz",
        "Java Programlama Dilinin temelden başlayarak tüm detaylarını öğreneceksiniz",
        "Nesneye yönelimli programlamanın tüm kavramlarını mantığı ve detaylarıyla anlayacaksınız.",
        "Bol örnek, soru, proje ve quizlerle öğrendiklerinizi pekiştireceksiniz.",
        "Java dışında bir dil öğrenmek istediğinizde ihtiyacınız olacak temele ve özgüvene sahip olacaksınız."
      ],
      "course_content": {},
      "requirements": [
        "Java kodlarını yazıp çalıştıracak bir bilgisayar",
        "Öğrenme azmi, isteği ve sabrı olması bu kursta başarılı olmanız için yeterlidir.",
        "Bu kurs ile java öğrenmek için her hangi bir programlama bilgisine ihtiyacınız yoktur."
      ],
      "description": "Bu kurs ile sıfırdan başlayarak Java dilini ve nesneye yönelimli programlanın tüm kavramlarını detaylı ve mantığıyla öğreneceksiniz.\nBu kurs hem teorik hem pratik pek çok bilgi içermektedir. Teorik anlatımlarda öğrendiğimiz yapıları örnekler, projeler ve quizlerle pekiştirip bilgilerimizi kalıcı hale getireceğiz.\nJavayı ve kavramlarını öğrenirken algoritma geliştirme yeteneğinizin de geliştiğini göreceksiniz. Bu sayede öğrendiğiniz konuları kullanarak profesyonel uygulamalar yapabileceksiniz.\nBu kurs ile Java'yı öğrendikten sonra kariyerinize yön verebilirsiniz. Java dilinin kullanıldığı Android veya Web Geliştirme Dünyalarına giriş yapabilecek ve CV'nize Javayı ileri seviyede biliyorum yazabileceksiniz.\nOkullarınızda Java ile gösterilen dersleri yüksek başarı ile geçebilir, isterseniz Java sertifikasyon sınavlarında da yüksek puanlar alabilirsiniz.",
      "target_audience": [
        "Her hangi bir programlama bilgisi olmayan ve java dilini öğrenmek isteyen",
        "Var olan java bilgisine ileri seviye java konularını eklemek isteyen",
        "Javada kariyer yapmak isteyen",
        "Okuldaki java ile ilgili dersleri başarıyla geçmek isteyen herkes bu kursa katılabilir."
      ]
    },
    {
      "title": "Todo PHP y MySQL, de básico a experto",
      "url": "https://www.udemy.com/course/fundamentos-de-programacion-con-php/",
      "bio": "Aprende a programar de forma sencilla y amena en el lenguaje de servidor más extendido y poderoso del mundo: PHP y MySQL",
      "objectives": [
        "Curso completo de PHP y SQLite",
        "Curso completo de MySQL",
        "Programación orientada a objetos con PHP",
        "Una vez finalizado el curso podrás utilizar PHP de forma fluida",
        "Aprenderá a modificar el formato de cadenas y de números",
        "Validará las fechas con PHP",
        "Modificará, cortar y sanear cadenas con PHP",
        "Manipulará los archivos y directorios del servidor por medio de PHP",
        "Aprenderá a abrir, leer y escribir en los archivos del servidor"
      ],
      "course_content": {},
      "requirements": [
        "Computadora personal con Windows o Mac OS y un navegador"
      ],
      "description": "Incluye GRATIS el libro del curso:\nCon PHP se han hecho poderosos imperios, como Yahoo y Facebook (también Udemy). Comenzaremos desde lo básico, conociendo la historia del lenguaje y su estado actual. Revisaremos la formación de variables, los ciclos, las sentencias condiconales, los arreglos (o vectores), asi como la forma de validar formas de HTML.  Analizaremos las poderosas funciones para manejar fechas y cadenas. Todo de forma fácil y amena.\nDentro de los ejemplos encontraremos los siguientes:\nUna sencilla galeria de fotos tomadas directamente de una carpeta\nSubir archivos de imágenes de la computadora al servidor\nCrear archivos de estado\nEnviar un mail con PHP\nHacer páginas privadas con sesiones\nConocer la IP, browser y s/o del usuario que nos visita\nManejo de expresiones regulares\nAplicar filtros a las imágenes como negativo, contraste, blanco y negro, etc.\nReducir el tamaño y el peso de una imagen jpg, png o gif en forma automática\nContenido del libro Introducción a PHP:\n1. Sintaxis general de PHP\nEstructura de archivos PHP\nMezclar HTML y PHP\nComentarios\nEl caracter punto y coma \";\"\nVariables\nTipos de datos\nOperadores y expresiones\nOperadores Aritméticos\nOperador de concatenación\nOperadores de comparación\nOperadores boleados\nCambio de tipo\nPrecedencia\nComandos \"print\" y \"echo\"\nUso de etiquetas HTML\n2. Control de flujo\nComando \"if\"\nComando \"switch\"\nComando \"do ... while\"\nComando \"for\"\nComandos \"break\" y \"continue\"\n3- Arreglos\nCreación de arreglos\nRecorriendo todo un arreglo con \"foreach\"\nOperaciones con arreglos\nAgregar varios elementos al principio del arreglo, con el comando \"array_push\"\nQuitar el primer elemento de un arreglo, con el comando \"array_shift\"\nQuitar cualquier elemento de un arreglo, con el comando \"unset\"\nBuscar por un valor exacto en todo el arreglo, con el comando \"in_array\"\nOrdenando arreglos\nArreglos asociativos\n4- Funciones\nCreación de funciones\nParámetros\nVariables locales y globales\nRegreso de valores\n5- Formas de HTML\nEjemplos de Dreamweaver\nCampos ocultos\nValidaciones\nRedirección a otras paginas\nHipervínculos a rutinas php\nPaso de parámetros en hipervínculos\n6- Fechas y strings\nComando \"time\"\nComando \"date\"\nComando \"getdate\"\nComando \"mktime\"\nValidando fechas con \"checkdate\"\nComando \"printf\"\nComando \"sprintf\"\nComando \"number_format\"\nOperaciones básicas de strings\nConvertir caracteres especiales de texto a HTML\n7- Manejo de archivos\nVerificar si existe un archivo\nVerificar si es archivo o directorio\nPropiedades de archivos\nCreando y borrando un archivo\nAbrir y cerrar un archivo\nLeer un archivo\nProtegiendo archivos contra escrituras múltiples\nOperaciones con directorios\n8 - Galletas\nCreación de galletas\nLectura de galletas\nBorrar una galleta\n9- Acceso a base de datos\nConexión al servidor\nConexión a la base de datos\nOperaciones básicas",
      "target_audience": [
        "Desarrolladores y diseñadores WEB"
      ]
    },
    {
      "title": "オブジェクト指向の原則２：リスコフの置換原則と継承以外の解決方法",
      "url": "https://www.udemy.com/course/objectfive2/",
      "bio": "オブジェクト指向の５大原則の中から「リスコフの置換原則」による継承のガイドラインの解説と継承以外の解決方法アイデア１～４を解説しています。サンプルコードはC#を使って解説しています。",
      "objectives": [
        "リスコフの置換原則を理解する",
        "継承のガイドラインを理解する",
        "似てるから継承するという誤りを理解する",
        "継承以外の解決方法アイデア１～４を理解する",
        "似てるから共通化するという誤りを理解する"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "リスコフの置換原則": [
          "L01_リスコフの置換原則の概要",
          "L02_原則に従っている例",
          "L03_原則に従っている例_抽象クラス",
          "L04_原則に従っている例_インタフェース",
          "L05_原則に従っている例_具象クラス",
          "L06_抽象クラスでの一部上書きの例",
          "L07_原則違反の例",
          "L08_置換可能でない場合の問題点",
          "L09_原則違反の例実装",
          "L10_継承とは",
          "L11_抽象に対してコーディングする",
          "L12_抽象に対してコーディングする実装例",
          "L13_クライアントは抽象に対してコーディングするイメージ",
          "L14_知識が漏れ出すということ",
          "L15_データベースへの実装を遅らせる実装例",
          "L16_知識が漏れ出すということの実装例",
          "L17_知識が漏れないように修正",
          "L18_抽象クラスにロジックを集めて知識が漏れるのを防ぐ",
          "L19_知識を制限するという考え方",
          "L20_アクセスレベルで知識の漏れを防ぐ実装方法",
          "L21_抽象に対して実装を強制する実装方法",
          "L22_原則に従っていることのチェックポイント"
        ],
        "似てるから継承するという誤り": [
          "L23_似てるから継承するという誤り",
          "L24_似てるから継承するという誤りの実装例",
          "L25_似てるから継承の問題点まとめ",
          "L26_継承させない実装",
          "L27_継承させない実装方法の例"
        ],
        "継承以外の解決方法": [
          "L28_継承以外の解決方法",
          "L29_継承以外のアイデア1_別で作る",
          "L30_別で作った場合の問題点_重複コードが出る",
          "L31_アイデア１_別で作る実装例",
          "L32_継承以外のアイデア２_持つという考え方",
          "L33_継承以外のアイデア２_持つという考え方の実装",
          "L34_持つということの問題点",
          "L35_持つという考え方のガイドライン",
          "L36_発注状況管理クラスで発注データを持つ実装例",
          "L37_Entityを持つという考え方",
          "L38_アイデア３_共通化という解決",
          "L39_共通化の実装例",
          "L40_共通化という解決の問題点",
          "L41_共通化で解決できるガイドライン",
          "L42_アイデア４_最小カプセル化という解決",
          "L43_最小カプセル化の実装例"
        ],
        "似てるから共通化するという誤り": [
          "L44_似てるから共通化するという誤り",
          "L45_発注リストと発注履歴リストのモデルを共用で使うBADな例",
          "L46_実態に合わせたモデリング_1テーブルの場合",
          "L47_実態に合わせたモデリング_2テーブルの場合"
        ],
        "補足とまとめ": [
          "L48_共通要素をまとめる継承",
          "L49_共通要素をまとめる継承の実装例",
          "L50_リスコフの置換原則まとめ",
          "L51_プログラマーの自問"
        ],
        "補講": [
          "補講01_結合SELECT文の取得結果を格納するEntityについて",
          "補足1B_インピーダンスミスマッチについて"
        ],
        "使用したプログラムソース": [
          "使用したプログラムソース"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "カプセル化、インタフェース、継承についてある程度理解していること",
        "サンプルコードはC#を使用しているため，ある程度C#コードが理解できること（javaなどのオブジェクト指向言語がわかれば理解できるとは思います）"
      ],
      "description": "どうもこんにちは，ピーコックアンダーソンです。\n今回はオブジェクト指向の５大原則の中から\n「リスコフの置換原則」をテーマに解説しています。\n「リスコフの置換原則」は継承のガイドラインになる原則ですが，\nこの原則に加えて，\n継承をするべきではないケースの場合に，どのように解決するべきか\nということを，「継承以外の解決方法」と題して，\n追加で解説しています。\nなので，１原則にもかかわらず，結構なボリュームになったので\n「リスコフの置換原則と継承以外の解決方法」ということで\nリリースさせていただきます。\n\n\nリスコフの置換原則はオープンクローズドの原則のガイドラインにもなり，\n正しい抽象の使い方ができているかのガイドラインになります。\nそして，原則に反してしまう場合に，どのように解決していくべきかということを，\nC#の実例をつけて解説しているので，興味のある方は，ご覧になってみてください。\n\n\n#01_リスコフの置換原則の概要\n#02_原則に従っている例\n#03_原則に従っている例_抽象クラス\n#04_原則に従っている例_インタフェース\n#05_原則に従っている例_具象クラス\n#06_抽象クラスでの一部上書きの例\n#07_原則違反の例\n#08_置換可能でない場合の問題点\n#09_原則違反の例実装\n#10_継承とは\n#11_抽象に対してコーディングする\n#12_抽象に対してコーディングする実装例\n#13_クライアントは抽象に対してコーディングするイメージ\n#14_知識が漏れ出すということ\n#15_データベースへの実装を遅らせる実装例\n#16_知識が漏れ出すということの実装例\n#17_知識が漏れないように修正\n#18_抽象クラスにロジックを集めて知識が漏れるのを防ぐ\n#19_知識を制限するという考え方\n#20_アクセスレベルで知識の漏れを防ぐ実装方法\n#21_抽象に対して実装を強制する実装方法\n#22_原則に従っていることのチェックポイント\n#23_似てるから継承するという誤り\n#24_似てるから継承するという誤りの実装例\n#25_似てるから継承の問題点まとめ\n#26_継承させない実装\n#27_継承させない実装方法の例\n#28_継承以外の解決方法\n#29_継承以外のアイデア1_別で作る\n#30_別で作った場合の問題点_重複コードが出る\n#31_アイデア１_別で作る実装例\n#32_継承以外のアイデア２_持つという考え方\n#33_継承以外のアイデア２_持つという考え方の実装\n#34_持つということの問題点\n#35_持つという考え方のガイドライン\n#36_発注状況管理クラスで発注データを持つ実装例\n#37_Entityを持つという考え方\n#38_アイデア３_共通化という解決\n#39_共通化の実装例\n#40_共通化という解決の問題点\n#41_共通化で解決できるガイドライン\n#42_アイデア４_最小カプセル化という解決\n#43_最小カプセル化の実装例\n#44_似てるから共通化するという誤り\n#45_発注リストと発注履歴リストのモデルを共用で使うBADな例\n#46_実態に合わせたモデリング_1テーブルの場合\n#47_実態に合わせたモデリング_2テーブルの場合\n#48_共通要素をまとめる継承\n#49_共通要素をまとめる継承の実装例\n#50_リスコフの置換原則まとめ\n#51_プログラマーの自問",
      "target_audience": [
        "リスコフの置換原則を理解したい方",
        "継承のガイドラインを理解したい方",
        "継承以外の解決方法を理解したい方",
        "正しいオブジェクトの設計を理解したい方"
      ]
    },
    {
      "title": "【世界で4万人が受講】JavaScriptエンジニアのためのES6完全ガイド",
      "url": "https://www.udemy.com/course/javascriptes6/",
      "bio": "述べ78万人の受講生を抱えるStephen Grider氏による大人気コースの完全日本語版。JSのメソッドのforEach、map、reduce、ES6で新しく登場した関数のデフォルト値やクラス、改善されたオブジェクトリテラルについて学ぶ。",
      "objectives": [
        "ES6の新機能をどういうときに使うべきかわかるようになる",
        "ES6の主要な機能についての理解",
        "generatorが使えるようになる",
        "分割代入（destructuring）を他のエンジニアにも教えられるほどの理解",
        "forループを使わずに実装ができるスキルの習得"
      ],
      "course_content": {
        "はじめに": [
          "イントロダクション",
          "ES6 vs ES2015"
        ],
        "便利メソッドforEach": [
          "配列の便利メソッド - よりシンプルにより良いコードを",
          "便利メソッドforEach",
          "続・便利メソッドforEach",
          "なぜforEachを使うのか",
          "forループからの脱却",
          "複数の値の処理"
        ],
        "便利メソッドmap": [
          "便利メソッドmap",
          "続・便利メソッドmap",
          "mapの使いどころ",
          "オブジェクトの配列から興味のある値だけを引き抜く",
          "mapで演算",
          "応用問題 - pluckの実装",
          "解説: 応用問題 - pluckの実装"
        ],
        "便利メソッドfilter": [
          "filterで値の絞り込み",
          "続・filterで値の絞り込み",
          "filterの使いどころ",
          "値の条件付き絞り込み",
          "filterで権限の管理",
          "応用問題：「reject」を実装してみよう"
        ],
        "便利メソッドfind": [
          "特定のデータを探すfind",
          "続・特定のデータを探すfind",
          "findの使いどころ",
          "管理者権限をもったユーザーを探そう",
          "残高から預金口座のアカウントを探そう",
          "応用問題：findWhere関数を作ってみよう"
        ],
        "便利メソッドeveryとsome": [
          "everyとsome",
          "さらにeveryとsomeをみてみよう",
          "everyとsomeの構文",
          "everyとsomeの使いどころ",
          "全員回答済みかどうか確認する",
          "通信中のリクエストの確認"
        ],
        "便利メソッドreduce": [
          "reduceでリストを集約",
          "さらにreduce",
          "reduceの面白い使い方",
          "走行距離を求めよう",
          "reduceでプロパティを集約",
          "応用問題：unique関数を作ってみよう"
        ],
        "constとlet": [
          "constとletで変数の宣言",
          "なぜconstとletを使う必要があるのか",
          "constとlet変数を使い分けよう",
          "constとletでリファクタリング"
        ],
        "テンプレートリテラル": [
          "テンプレートリテラル",
          "テンプレートリテラルの使いどころ",
          "テンプレートリテラルを使ってみよう",
          "氏名ヘルパー関数を作ってみよう"
        ],
        "アロー関数": [
          "アロー関数",
          "続・アロー関数",
          "アロー関数の使いどころ",
          "続・アロー関数の使いどころ",
          "functionをアロー関数に変換",
          "アロー関数はどこでも使っていいわけではない"
        ]
      },
      "requirements": [
        "JavaScriptの基本的な知識（配列、関数、オブジェクト）が必要です"
      ],
      "description": "このコースはStephen Grider氏による大人気コース「ES6 JavaScript: The Complete Developer's Guide」の完全日本語版となります。\nモダンなWebのライブラリやフレームワークを扱う上でES6（ES2015）のスキルは必須になってきたと言っても過言ではありません。そして、エンジニア市場においてもES6のスキルへの要求は高まってきています。\nこのコースではES6の機能を一つ一つ体系的に学び、「どういうときに」、「どうやって」使うべきなのかということを丁寧に解説、そして演習で実践していきます。\nまずは配列の便利メソッドである「forEach」、「map」や「reduce」を学びます。次にES6で新しく登場した関数のデフォルト値やクラス、また、改善されたオブジェクトリテラルなどについて学んでいきます。すべてのトピックでコードを実行しながら実際の動きをその場で確認しますし、演習問題を通して実際にコーディングも行っていきながら理解を深めていきます。\nJavaScript、あるいはES6をこれから始めたいと思っているエンジニアや、今までなんとなく使っていたけど「いまいち何がなんだかわかっていない」という方にこのコースはぴったりです！ES6のスキルを身につけるためには、「なぜ」この機能が言語仕様に追加されたのかという理由も含めて学習していくことをおすすめします。このコースではその「なぜ」も含めて学ぶことができます。\nなぜES6の話をするとBabelが出てくるのか\nなぜ従来のforループをやめて「map」や「reduce」を使うようにするのか\nなぜ最近のフレームワークでは「...」を使った変数みたいなものがあるのか\nなぜES6のコードはやたらと省略しているように見えるのか\nなぜgeneratorというものが登場したのか。配列ではだめなのか\nこのコースではこれらの疑問にも応えていきます。「なぜ」をすっきりさせながらES6への理解を深めていきましょう！",
      "target_audience": [
        "なんとなくES6（ES2015）を使ってきたが、もっと理解を深めたい人",
        "JavaScriptをもっとスッキリとキレイに書きたい人",
        "generatorがどういうときに必要なのか知りたい人",
        "constとletがES6でなぜ増えたのか知りたい人"
      ]
    },
    {
      "title": "Python初学者のネクストステップ！FastAPIによるWeb API開発講座",
      "url": "https://www.udemy.com/course/python-fastapi/",
      "bio": "Python初学者必見！今最も注目を集めているモダンなWebフレームワーク『FastAPI』を用いて、本格的なWeb APIを開発する方法をわかりやすくお伝えします。本講座では、会議室予約システムの構築を通じて、実践的な開発手法を学びます。",
      "objectives": [
        "PythonによるWeb API開発方法が身につきます",
        "FastAPIの基本的な使い方が身につきます",
        "FastAPIによるWeb APIの開発方法が身につきます",
        "開発したWeb APIをDeta Cloudにデプロイする方法がわかります",
        "APIが何かを理解し、APIの重要性、APIの素晴らしさがわかります",
        "公式ドキュメントを読み解く力が身につきます",
        "Web APIの開発途中で多々起こるエラーの解決方法がわかります",
        "初学者の次の一歩としてPythonを用いたスキルの幅を広げることができます"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "Web APIとは": [
          "セクション概要",
          "APIとは",
          "Web APIとは",
          "REST APIとは",
          "API活用のメリット・デメリット",
          "知っておくべきAPIエコノミーとは",
          "企業がAPIを提供する理由"
        ],
        "PythonでWeb APIを使ってみる": [
          "セクション概要",
          "APIを叩く上で必要な情報",
          "JSONを理解しよう",
          "HTTPメソッドについて",
          "JSONPlaceholderでAPI活用練習",
          "楽天トラベル系APIとは",
          "楽天トラベル系APIのドキュメントを読む",
          "楽天トラベル系APIを使用"
        ],
        "FastAPI超入門": [
          "セクション概要",
          "FastAPIとは",
          "VSCodeのインストール",
          "型ヒント（Type Hints）とは",
          "必要なライブラリのインストール",
          "FastAPIを起動してみる",
          "APIドキュメントの自動生成",
          "パスパラメータ",
          "クエリパラメータ",
          "必須ではないオプションパラメータ",
          "リクエストボディ",
          "作成したAPIをPythonで叩いてみる",
          "入れ子構造になっているリクエストボディ",
          "バリデーション"
        ],
        "Web APIをクラウド上にデプロイ": [
          "セクション概要",
          "Web APIのデプロイ先",
          "簡易Web API作成",
          "Detaとは",
          "Web APIをDetaへデプロイ"
        ],
        "Streamlit超入門": [
          "セクション概要",
          "Streamlitとは",
          "Streamlit入門1（Text elements）",
          "Streamlit入門2（Data display elements）",
          "Streamlit入門3（Chart elements）",
          "Streamlit入門4（Input widgets）",
          "Streamlit入門5（Layouts and containers）"
        ],
        "会議室予約API開発": [
          "セクション概要",
          "データベース設計",
          "FastAPIでモデルを用意",
          "APIテスト用の画面作成（ユーザー）",
          "APIテスト用の画面作成（会議室）",
          "APIテスト用の画面作成（予約）",
          "SQLAlchemyとは",
          "SQLAlchemyとSQLiteの準備",
          "データベース構築に必要な準備1（database.py）",
          "データベース構築に必要な準備2（models.py）",
          "データベース構築に必要な準備3（schemas.py）",
          "データベース構築に必要な準備4_Read（crud.py）",
          "データベース構築に必要な準備4_Create（crud.py）",
          "メインファイルの作成_Read（main.py）",
          "メインファイルの作成_Create（main.py）",
          "ユーザー登録画面の作成",
          "会議室登録画面の作成",
          "会議室予約画面の作成1（ユーザー、会議室一覧取得）",
          "会議室予約画面の作成2（会議室予約フォーム作成）",
          "会議室予約画面の作成3（予約一覧表示）",
          "予約時間に重複がないかの検証処理1",
          "予約時間に重複がないかの検証処理2",
          "復習"
        ],
        "終わりに": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Pythonの基本的な文法を理解している",
        "使用するPC上にPythonの環境構築ができている",
        "本コースは、macOSを使用して進めていきますが、Windowsでも同様に進めることができます"
      ],
      "description": "本講座は、今最も注目を集めているモダンなWebフレームワーク『FastAPI』を用いて、本格的なWeb APIを開発に挑戦する講座です。\n特に、Pythonの基礎文法を学び終え、ネクストステップとして、応用的・発展的な内容にチャレンジしてみたい！という方におすすめです。\n\n\n＜本講座で意識している3大要素＞\n■ 「まずは動かしてみる」「形にしてみる」\nWeb APIを本格的に開発していくとなると、様々な領域の知識を習得する必要があります。APIをデプロイしたクラウド内での設定から、その他周辺スキルを知っておく必要があります。\n\n理想はこれらの知識を習得しながらAPIを開発していくことではありますが、複雑な内容を詰め込んでしまうと、初学者が挫折する原因にもなります。\nそこで、本講座では、FastAPIの中でも必ず抑えておきたい部分にフォーカスして講座構成を練っています。\n木で例えるならば、幹の部分を本講座でしっかりお伝えし、枝葉の部分はご自身で自走しながら習得していけるような土台を築き上げます。\n\nプログラミング（Python）の基礎はなんとなく理解できてきたけど、「次に何を勉強すればいいのだろうか」「もっと応用・発展的な内容に取り組んでみたい」と思っているあなたにオススメなのが本講座です。\n\n■ エラー解決能力\n通常の講座はエラーが出ないキレイな形で進めていきます。\n\nしかし、実際に1人で手を動かしながら進めていく中でエラーが出ないことはあるのでしょうか？エラーが出ないことなんてありえないですし、おそらく多くの初学者はエラーでつまづいてしまいます。\n\n本講座は、初学者がつまづきやすいエラーを敢えてお見せしながら講義を進めていきます。エラーが出たときにどのように対処していくのか、どのように考えればいいのかもお伝えします。\n\n■ ドキュメント読解力\n「公式ドキュメントちゃんと読んだ？Qiitaとかの記事じゃなくて公式ドキュメント読めば大体わかるよ」\nこれは、私がプログラミング初学者のときにメンターに言われた一言です。\n「いやいや公式ドキュメント難しいから敬遠してるんですけど...」と、何度思ったことか。\n\n公式ドキュメントが大事なのはわかると思いますが、読むのって結構億劫になりませんか？\nなんか難しいこと難しく書いてありますよね。私も初学者の頃はずっと敬遠してました。ただ、メンターの言うことも正しくて、たしかに公式ドキュメントの情報が基本的にベストなんですよね。\nそのため、本講座では極力ドキュメントを読解しながらお伝えしていきます。",
      "target_audience": [
        "Pythonの基礎を習得し終え、さらなるステップアップを目指したい方",
        "エンジニアっぽいことにチャレンジしてみたいプログラミング初学者",
        "PythonによるWeb API開発に興味がある方",
        "今注目を集めているモダンなWebフレームワークFastAPIを学んでみたい方",
        "実践的なWeb APIを開発してみたい方"
      ]
    },
    {
      "title": "Java Certification ( Java Oops feature )",
      "url": "https://www.udemy.com/course/basic-of-java-certification/",
      "bio": "Feel free, take this Java course, Java are very well explained in Hindi-if you not in IT or No idea of coding and Java",
      "objectives": [
        "Begineer level basic of java",
        "Essential java concepts to start development",
        "Coding pattern is very useful in Android Studio(Java) and Unity 3D Game Engine(C#)",
        "Eeven students not aware of basic of programing they can learn and guaranteed to build application based on Java",
        "Object Oriented Programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How Java work structure (Why java is independent language)",
          "Installation of JDK and IntelliJ IDEA (Complete setup of java)",
          "Installation of eclipse and first project setup with java sdk",
          "Java Syntax,Comment,Variable intro",
          "Variable and Type casting in Java",
          "Operator in Java",
          "Java and Android relation",
          "Simple methods in java",
          "Conditional block - if else",
          "Use of switch case in java",
          "For loop in java",
          "Array in java",
          "Oops (Object Oriented Programming) Introduction",
          "Class and Object",
          "Inheritance",
          "Abstraction",
          "Interface",
          "Polymorphism",
          "Encapsulation",
          "Constructor in JAVA"
        ]
      },
      "requirements": [
        "Should have Laptop or PC",
        "100% dedication and learning mindset"
      ],
      "description": "This Java course is in Hindi language. Learn Java in only 3.0hr. In this java course we are going to learn Java  from scratch an our goal is to be a master in Java. This course is in Hindi language so it’s very easy to understand basic concepts and easily understand the problem while we face during the coding. At the completion of the course you definitely mention the Java in your resume. And you are able to code a program. With this knowledge you can start any  development tool to make projects. If you are new in this guaranteed after this Java course you will familiar to run the program and help you to develop your coding performance.\nFrom 11th stander and above can be avail this Java course. If you're in other industry like mechanical or non-it filed this video is best suitable for you. Basic and essential points are covered in this java course.\nWe are going to provide a ppt in which all include all java codes which we are shown in video. Feel free to make practice in java\nOriented Programming Concepts are very well explained.\nJava Oops Concepts are explained in Hindi.\nJava Course contains:-\n\n\nIntroduction of java.\nHow java work structure (Why java is independent language)\nInstallation of JDK and IntelliJ IDEA (Complete setup of java)\nJava Syntax, Comment, Variable intro\nVariable and Type casting in java\nOperator in Java\nJava and Android relation\nSimple methods in java\nConditional blocks in java -  if else\nSwitch case in Java\nFor loop in Java\nArray in Java\nOops (Object Oriented Programming) Introduction.\nClass and Object\nInheritance in Java\nAbstraction in Java\nInterface in Java\nPolymorphism in Java\nEncapsulation in Java\n\n\n\n\n*Basics of Java Certification*\nAdded for search engine optimization\nThis course is in Hindi language\nJava in Hindi\njava in hindi\nJAVA in hindi\nJava in hindi\nHindi java course\ncourse hindi\nlearn java in hindi",
      "target_audience": [
        "Fresher, Beginner and Student, Java certification",
        "Want to learn android studio must to go through this tutorial",
        "Looking for strong Object Oriented Programming Concepts"
      ]
    },
    {
      "title": "イメージでわかる！基礎知識ゼロからのC言語。エンジニアが教えるC言語完全攻略コース。",
      "url": "https://www.udemy.com/course/clang_from_zero/",
      "bio": "プログラミング初心者向けにイメージ図を使って詳しく解説しています。終盤の応用編では、現場で使えるスキルやネットワークプログラミングなど中級者向けの内容も解説しています。",
      "objectives": [
        "ゼロからC言語によるプログラミングをするスキルが身に付きます。",
        "多くのプログラミング言語のベースとなるC言語を確実に身に着け、他言語の理解が深まります。",
        "既存のサービス、製品を保守するためにC言語プログラムを読み解くスキルが身に付きます。",
        "C言語プログラミングだけでなく、ソフトウェア全般の会話が理解できるようになります。"
      ],
      "course_content": {
        "はじめに": [
          "このコースについて"
        ],
        "準備": [
          "このセクションでは",
          "C言語について",
          "インストールとセットアップ",
          "学習環境の使い方"
        ],
        "コンピュータとプログラム": [
          "このセクションでは",
          "コンピュータの基本構造",
          "プログラムとはなにか？",
          "プログラムの構造",
          "まとめ"
        ],
        "変数と式": [
          "このセクションでは",
          "変数と型",
          "式と演算順序",
          "練習問題（三角形の面積の計算）",
          "円の面積を求めてみよう",
          "円の面積解答例",
          "練習問題（BMIの計算）",
          "まとめ"
        ],
        "制御の流れ": [
          "このセクションでは",
          "if文",
          "switch文",
          "while文",
          "for文",
          "練習問題（階乗計算）",
          "３段のピラミッドを作ろう",
          "３段ピラミッド解答例",
          "まとめ"
        ],
        "文字の扱い": [
          "このセクションでは",
          "変数に文字を入れてみよう",
          "文章（文字列）を表示してみよう",
          "文章（文字列）を入力してみよう",
          "練習問題（文字列の入力と表示）",
          "文字列を操作する関数（機能）１",
          "文字列を操作する関数（機能）２",
          "文字列を操作する関数（機能）３",
          "練習問題（挨拶を返すプログラム）",
          "まとめ"
        ],
        "関数": [
          "このセクションでは",
          "簡単な関数の定義",
          "引数と戻り値",
          "練習問題（奇数、偶数の判定）",
          "auto変数とstatic変数",
          "グローバル変数",
          "練習問題（最大値と最小値を返す関数）",
          "練習問題（実行回数を返す関数）",
          "エラーハンドリング",
          "まとめ"
        ],
        "配列と構造体": [
          "このセクションでは",
          "配列とは",
          "構造体とは",
          "アライメント",
          "練習問題（配列の平均値を求める）",
          "練習問題（文字列を逆順表示）",
          "練習問題（学生の成績管理）",
          "多次元配列",
          "まとめ"
        ],
        "ポインタ": [
          "このセクションでは",
          "ポインタとは",
          "ポインタの基本",
          "ポインタを使う場面",
          "練習問題（変数の中身を入れ替える）",
          "まとめ"
        ],
        "応用編（テクニック）": [
          "マクロ"
        ]
      },
      "requirements": [
        "WindowsもしくはLinuxパソコンをお持ちの方",
        "プログラミングに興味がある方"
      ],
      "description": "1972年に登場したC言語。\n移植性が高く、LinuxやWindowsといったパソコンのほか、組み込み機器でも多く使われています。\nこのような背景もあり、登場してから40年以上経過しても、国内企業の求人スキルトップにランクインしています。\n\n\nこのコースでは、まったくの初心者でも学べるように入門レベルの基礎知識からイメージを使ってゼロから学んでいきます。\n実際に私がつまづいた経験をもとに、初心者でもわかりやすくイメージで伝えていきます。\n\n\n\n\nコースの流れは次のようになっています。\n\n\nまずは、初心者でもプログラミングを始められるように\nC言語、プログラムって何？\n学習環境の構築\nコンピュータとプログラムの関係性\nについて学びます。そして実際にC言語を使って一緒にプログラミングしていきます。\n変数と式の書き方\n制御の流れ\nプログラム内での文字の使い方\n関数について\n配列と構造体\nポインタ\n最後に応用編として中級レベルのプログラミングを学びます。\n各セクションの初めに、勉強する内容をイメージを使って解説していますので、初心者でもわかりやすくなっています。\n各セクションのまとめでは、そのセクションで学ぶべきこと・つまづきそうなポイントを学習できる課題があります。\n課題は、すべて一緒にプログラミングして解答例を作成していきますので、理解を助けます。\n\n\nそれ以外でも質問があればQ＆Aフォームから質問してもらえれば、講師が数日中に答えます。\n\n\nこのコースを学んでもらえれば、C言語プログラミングの基礎は固めてもらえますので、「何から始めたらいいかわからない」、「周りに気軽に教えてくれる人がいない」、「自己学習しているけどつまづいてしまった」という人に最適です。\nまた応用編では中級者向けの内容も取り扱っており、C言語プログラミングのAtoZを学ぶことができます。\nみなさんのプログラミング学習の一助になれば幸いです。\n\n\n\n\n2025/4/30：全編に字幕を追加しました。聞き取りづらい部分は字幕をご利用ください。",
      "target_audience": [
        "これからプログラミングを学ぼうという人",
        "一度はC言語を勉強したが、復習したい・学びなおしたい人",
        "C言語が多く使われる歴史のあるシステム（電気、ガスなどのインフラや歴史のある企業）を扱う人",
        "授業や講習でC言語を学んでいるが、もっと理解を深めたい人",
        "保守や機能拡張にC言語を必要としている人",
        "後輩や生徒にプログラミングを教えるために体系的に知識を整理したい人"
      ]
    },
    {
      "title": "SAP ABAP: Yeni Başlayanlar İçin Uygulamalı ABAP Programlama",
      "url": "https://www.udemy.com/course/sap-abap-yeni-baslayanlar-icin-uygulamali-abap-programlama/",
      "bio": "SAP ABAP programlama kursuna katıl ve ABAP programlama dilini uygulamalı öğren! ABAP dilini adım adım öğreneceksiniz",
      "objectives": [
        "ABAP dilini ne kadar kolay öğrendiğinizi göreceksiniz",
        "Uygulamalı bir eğitimin tadını çıkaracaksınız",
        "Veritabanı programlama öğreneceksiniz",
        "Nesne yönelimli programlamayı öğreneceksiniz",
        "SAP ile ilgili genel bilgilere sahip olacaksınız",
        "ABAP Geliştirme Araçları",
        "SAP Sistemine Giriş",
        "ABAP Programlamaya İlk Adım",
        "ABAP’ta Temel Veri Tipleri",
        "SAP ABAP – Operatörler",
        "String Fonksiyonları",
        "Karar İfadeleri",
        "Döngü Kontrolleri",
        "Döngü Kontrol İfadeleri",
        "Data Dictionary Nesneleri",
        "Değişmezler ve Sabitler",
        "Modüler Programlama",
        "Seçim Ekranı Tasarımı",
        "ABAP Programlama Olayları",
        "İnternal Tablo İşlemleri",
        "Open SQL İfadeleri",
        "Diyalog Programlama",
        "ALV Rapor Programlama",
        "Dokümantasyon",
        "Bakım Tablosu Oluşturma",
        "Nesne Yönelimli Programlama",
        "Sanal Makine kurulumu",
        "VirtualBox ve Extension Pack Kurulumu",
        "VirtualBox üzerine Ubuntu Kurulumu",
        "SAPGUI kurulumu",
        "VM üzerine SAP Uygulamalarının Kurulumu",
        "SAP ABAP nedir? SAP ABAP, SAP'nin kurumsal kaynak planlama (ERP) platformunda kullanılmak üzere 1983 yılında geliştirdiği nesne yönelimli programlama dilidir.",
        "SAP ABAP'ı anlamak için önce SAP'yi anlamanız gerekir.",
        "Bir geliştiricinin SAP ABAP kullanması gerekmesinin yaygın bir nedeni, bir şirketin SAP programını başka bir bilgisayar programıyla entegre etmek istemesidir.",
        "SAP",
        "ABAP",
        "SAP ABAP Programlama"
      ],
      "course_content": {
        "SAP ABAP Kursundan Neler Öğreneceğiz?": [
          "SAP ABAP Kursundan Neler Öğreneceğiz?",
          "SAP ABAP Programlama Hakkında"
        ],
        "SAP Genel Bakış": [
          "SAP Nedir?",
          "ERP Nedir?",
          "SAP ABAP Önemli Modüller",
          "SAP R/3 Mimarisi",
          "Neden SAP Kullanmalıyım?",
          "SAP Dünyasındaki İş Fırsatları"
        ],
        "Sanal Makine ve Ubuntu İşletim Sistemi Kurulumu": [
          "Sanallaştırma ve Sanallaştırma Yazılımları",
          "VirtualBox ve Extension Pack İndirme",
          "VirtualBox ve Extension Pack Kurulumu",
          "Ubuntu İşletim Sistemi İndirme",
          "Ubuntu İşletim Sistemi Kurulumu"
        ],
        "SAP NetWeaver ABAP Delevoper Edition Kurulumu": [
          "Java Runtime Environment Kurulumu",
          "ABAP Developer Edition 7.52 SP04 İndirme",
          "Sanal Makine Üzerinde Dosya Paylaşımı ve Yapılandırma Ayarları",
          "Sanal Makine Üzerine ABAP Developer Edition 7.52 SP04 Kurulumu",
          "SAPGUI Kurulumu",
          "Kurulum Checklist - Bu Listeye Bakmadan Geçmeyin Derim"
        ],
        "SAP Server Temel Bilgiler": [
          "17.SAP Server ile Neler Yapabiliriz?",
          "Servisleri Açma / Kapama",
          "Lisans Yenileme",
          "Kullanıcı İşlemleri ve Access Key",
          "Kullanım Aşamasındaki Gerekli Bilgiler ve Linkler"
        ],
        "SAP Sistemine Giriş": [
          "Yeni Bir Uygulama Sunucusu Ekleme",
          "Oturum Açma ve Oturum Kapatma",
          "GUI Özelleştirme ve Navigasyon",
          "ABAP Kod Düzenleyici"
        ],
        "Yeni Başlayanlar İçin İşlem Kodları": [
          "Yeni Başlayanlar İçin İşlem Kodları"
        ],
        "ABAP Programlamaya İlk Adım": [
          "Package Oluşturma",
          "ABAP Programlamaya İlk Adım",
          "Sistem Değişkenleri ve Değerleri",
          "Hata Ayıklama ( Debugging )",
          "Değişken ve Program İsimlendirme"
        ],
        "ABAP’ta Temel Veri Tipleri": [
          "Örnek Verilerin Oluşturulması",
          "Sayısal, Karakter ve Hexadecimal Veri Tipleri"
        ],
        "SAP ABAP Operatörler": [
          "Abap Editör Kısayolları",
          "Aritmetik Operatörler",
          "Karşılaştırma Operatörleri",
          "Karakter Karşılaştırma Operatörleri"
        ]
      },
      "requirements": [
        "Temel Seviyede Bilgisayar kullanımı",
        "Minimum 8 GB RAM",
        "100 GB Boş Disk",
        "x64 İşlemci",
        "JRE 8 veya 11 (64-Bit) versiyonu",
        "Microsoft Windows 7, 8, 10 veya Apple Mac OS X 10.12 ve Üzeri",
        "Öğrenme arzusu",
        "Tek ihtiyacınız olan bilgisayarınız ve sizsiniz! Haydi başlayın öğrenmeye",
        "SAP",
        "SAP ABAP",
        "SAP ABAP Prpgramlama",
        "SAP ERP"
      ],
      "description": "Sap abap, sap abap programming, abap sap, sap abap certification, sap abap workflow, sap hana abap, sap oo abap, SAP ABAP für Anfanger, sap abap programlama\nHerkese selamlar,\n\"SAP ABAP: Yeni Başlayanlar İçin Uygulamalı ABAP Programlama\" kursumuza hoşgeldiniz.\nSAP ABAP programlama kursuna katıl ve ABAP programlama dilini uygulamalı öğren! ABAP dilini adım adım öğreneceksiniz\nSAP ABAP Programlama dili SAP tarafından geliştirilen ve dünyadaki en büyük kuruluşlar tarafından iş sistemlerini yürütmek için kullanılan popüler bir kurumsal programlama dilidir.\nBu kursta; SAP ABAP ve SAP kurumsal sistemlerini en iyi şekilde nasıl programlayacağınızı uygulamalı örneklerle sizlere anlatıyoruz.\nKurs kimlere hitap ediyor?\nİster programlamada yeni olun, isterse ABAP'ta yeni olun, bu SAP ABAP kursu, çok kısa sürede herkesi program geliştirebilir hale getirmeyi planlamaktadır.\nEn temel seviyeden başlayarak adım adım ilerlediğimiz kursumuz ile SAP ABAP programlamasını anlamak ve kendi ABAP programlarınızı oluşturmaya başlamak için gereken temel becerileri öğrenmiş olacaksınız.\nBu eğitimle yalnızca SAP programlama dilinin nasıl çalıştığı konusunda ayrıntılı bir fikir sahibi olmakla kalmayacak aynı zamanda ABAP dili ile ilgili en çok karşılaştıgınız temel sorularınızına da cevaplar bulacaksınız.\nEğitimimiz hem ABAP diline yeni giriş yapacaklar hem de aktif meslek hayatını sürdüren ve bilgilerini tazelemek isteyen yani tüm ABAP meraklıları için harika bir kaynakç\nUygulamalı anlatım\nSAP ABAP programlama dili ile ilgili Türkçe dokümanların sayısının az ve mevcutların da yetersiz olması sebebiyle ABAP programlama dilini sizlere adım adım öğretmeyi amaçlayan bu eğitimin sizlerin başucu eseri olacağına eminiz.\nEğitimimiz ile SAP ABAP dilini kısa sürede öğrenecek ve hemen kendi kodunuzu yazıp test edebilecek hale geleceksiniz.Bu eğitimde size biryandan ilk günden itibaren kod oluşturabilmeniz için pratik örnekleri ele alırkan  bir yandan da her adımın arkasındaki mantığı anlamanız için eğitimimizde sizleri temel bilgilerle de bulusturduk.\nEğitimde hangi konuları ele aldık;\nSAP Genel Bakış,\nABAP Geliştirme Araçları,\nSanal Makine Kurulumu  ( VM )\nSAPGUI Kurulumu\nSAP Sistemine Giriş,\nYeni Başlayanlar için işlem Kodları,\nABAP Programlamaya İlk Adım,\nABAP’ta Temel Veri Tipleri,\nSAP ABAP – Operatörler,\nString Fonksiyonları,\nKarar İfadeleri,\nDöngü Kontrolleri,\nDöngü Kontrol İfadeleri,\nData Dictionary Nesneleri,\nDeğişmezler ve Sabitler,\nModüler Programlama,\nSeçim Ekranı Tasarımı,\nABAP Programlama Olayları,\nİnternal Tablo İşlemleri,\nOpen SQL İfadeleri,\nDiyalog Programlama,\nALV Rapor Programlama,\nDokümantasyon,\nBakım Tablosu Oluşturma,\nNesne Yönelimli Programlama\nSAP ABAP nedir?\nSAP ABAP, SAP'nin kurumsal kaynak planlama (ERP) platformunda kullanılmak üzere 1983 yılında geliştirdiği nesne yönelimli bir programlama dilidir. Şirketlerin ticari operasyonlarının tümünü olmasa da birçok yönünü yönetmelerine yardımcı olur. SAP ABAP'ı anlamak için önce SAP'yi anlamanız gerekir. SAP, şirketlerin kendi iç kaynaklarını yönetmek için kullandıkları bir platformdur, ancak şirketin platformunun kodunu değiştirmesi gereken zamanlar olabilir. Bunu yapmak için \"SAP ABAP\" adlı bir dil kullanırlardı. Platformlarını özelleştirmek istediklerinde, programa ne yapacağını söylemesi için - bilgisayarların kullandığı bir dil olarak düşünülebilecek - programlama kodu için bir SAP ABAP geliştiricisi alırlar. Bir geliştiricinin SAP ABAP kullanması gerekmesinin yaygın bir nedeni, bir şirketin SAP programını başka bir bilgisayar programıyla entegre etmek istemesidir. Geliştirici, SAP programına diğer bilgisayar programıyla nasıl konuşulacağını \"söylemek\" için SAP ABAP programlama dilini kullanır.\nWhat is SAP ABAP?\nSAP ABAP is an object-oriented programming language that SAP developed in 1983 for use within SAP's enterprise resource planning (ERP) platform. It helps companies manage many, if not all, aspects of their business operations. To understand SAP ABAP, you need to understand SAP first. SAP is a platform that companies use to manage their internal resources, but there may be times that the company needs to modify the code of its platform. To do so, they would use a language called \"SAP ABAP.\" When they want to customize their platform, they get an SAP ABAP developer to program code — which can be thought of as a language that computers use — to tell the program what to do. A common reason a developer might need to use SAP ABAP is that a company wants to integrate its SAP program with another computer program. The developer would use the SAP ABAP programming language to \"tell\" the SAP program how to speak with the other computer program.\nKursiyerlerimiz,\nSoru&Cevap bölümünde hızlı cevaplar alabilecek,\nKursu bitiren tüm kursiyerlerimiz kurs bitirme sertifikalarını Udemy'den indirebilecek\nDaha fazla zaman kaybetmeyin ve haydi SAP ABAP kursumuza kayıt olun!\nKursta görüşmek üzere",
      "target_audience": [
        "SAP ABAP öğrenmek isteyenler",
        "ABAP becerilerini öğrenmek isteyen SAP Modül Danışmanları",
        "SAP Proje Ekibi üyeleri",
        "Bilgilerini genişletmek isteyen SAP BASIS Danışmanları",
        "SAP BW Danışmaları",
        "SAP ve ABAP çalışmalarına devam etmek isteyen üniversite öğrencileri",
        "Kısacası ABAP ile ilgilenebilecek herkes"
      ]
    },
    {
      "title": "Estrutura de dados em Linguagem C",
      "url": "https://www.udemy.com/course/linguagem-c-estruturas-de-dados/",
      "bio": "Domine as Estruturas de Dados mais Conhecidas",
      "objectives": [
        "Introdução a Linguagem C",
        "Estruturas de Dados",
        "Structs",
        "Ponteiros",
        "Alocação dinâmica de memória RAM",
        "Listas Encadeadas",
        "Filas",
        "Pilhas",
        "Árvores Binárias",
        "Funções recursivas",
        "Busca Sequêncial e Busca Binária",
        "Tabela Hash"
      ],
      "course_content": {
        "Introdução a Linguagem C": [
          "Apresentação do Curso",
          "Plataforma de Desenvolvimento",
          "Variáveis e tipos de dados",
          "Entrada de Dados",
          "Estruturas Condicionais",
          "Laços de Repetição",
          "Funções",
          "Vetores",
          "Matrizes"
        ],
        "Estruturas de Dados Não Lineares": [
          "Linearidade X Não-linearidade",
          "Structs",
          "Ponteiros",
          "Alocação Dinâmica"
        ],
        "Listas Encadeadas": [
          "Introdução a Listas",
          "Criando uma Lista",
          "Listas - Exibição",
          "Recursão - Parte 1",
          "Recursão - Parte 2",
          "Listas - Recursividade",
          "Listas - Inserção no final",
          "Listas - Inserção em Posição Arbitrária - Parte 1",
          "Listas - Inserção em Posição Arbitrária - Parte 2",
          "Listas - Remoção"
        ],
        "Filas e Pilhas": [
          "Introdução a Filas",
          "Fila - Implementação",
          "Introdução a Pilhas",
          "Pilha - Implementação"
        ],
        "Árvores": [
          "Introdução à árvores",
          "Construindo a primeira Árvore",
          "Exibindo a Árvore",
          "Exibindo a Árvore - Explicação",
          "Inserção em Árvores",
          "Remoção em Árvores - Parte 1",
          "Remoção em Árvores - Parte 2"
        ],
        "Busca em Estruturas Lineares": [
          "Busca Sequencial - Teoria",
          "Busca Sequencial - Prática",
          "Busca Binária - Teoria",
          "Busca Binária - Prática",
          "Tabela de Hash"
        ],
        "Exercícios": [
          "Lista 1 de exercícios - Estrutura de Dados"
        ]
      },
      "requirements": [
        "Conhecimento básico de programação ou Algoritmos"
      ],
      "description": "Esse curso oferece uma visão geral sobre a linguagem C e sobre a implementação das principais estruturas de dados existentes.\nCada estrutura é apresentada de forma simples e direta, com implementações e ilustrações para que o aluno tenha o melhor entendimento possível das estruturas de dados apresentadas durante o curso.\nA ideia do curso é que o aluno compreenda os fundamentos básicos das estruturas de dados mais conhecidas e assim consiga projetar e desenvolver suas próprias estruturas de dados para aplicações especificas, objetivando sempre a alocação de recursos e o desempenho da aplicação.\n\nO curso conta com:\n34 aulas;\nAulas teóricas ilustrativas sobre cada estrutura de dados estudada;\nAulas práticas com implementação das estruturas estudadas;\nDisponibilização de todos os códigos e recurso utilizados durante as aulas;",
      "target_audience": [
        "Desenvolvedores de Software",
        "Estudantes de Computação/Informática"
      ]
    },
    {
      "title": "Java Programlama Dili : Her Seviyeye Uygun Eğitim Seti",
      "url": "https://www.udemy.com/course/java-programlama-dili-her-seviyeye-uygun-egitim-seti/",
      "bio": "Web , Mobil , Masaüstü ve birçok alanda kullanılan Java Programlama Dilini tadını çıkararak öğrenin.",
      "objectives": [
        "Programlama dillerinin çalışma mantığını anlamış olacaksınız.",
        "Java standart edition bilgisi öğreneceksiniz.",
        "Nesne yönelimli programlamanın ne demek ve nasıl kullanıldığını öğreneceksiniz",
        "Algoritma bilginizi geliştireceksiniz.",
        "Javanın web ve mobil programlama frameworklerine alt yapısı kazanmış olacaksınız"
      ],
      "course_content": {
        "Geliştirme Ortamının Hazırlanması": [
          "Eclipse Kurulumu"
        ],
        "Eclipse Arayüz Tanıtımı": [
          "Eclipse Arayüz Tanıtımı"
        ],
        "Hello World ve Yorum Satırı": [
          "Hello World ve Yorum Satırı"
        ],
        "Veri Tipleri [Data Types]": [
          "Veri Tipleri Griş",
          "Byte Veri Tipi",
          "Short Veri Tipi",
          "İnt Veri Tipi",
          "Long Veri Tipi",
          "Float Veri Tipi",
          "Double Veri Tipi",
          "Boolean Veri Tipi",
          "Char Veri Tipi",
          "String Veri Tipi"
        ],
        "Operatörler [Operators]": [
          "Operatörlere Giriş",
          "Atama Operatörü",
          "Toplama ve Çıkarma Operatörleri",
          "Çarpma ve Bölme Operatörleri",
          "Mod Alma Operatörü",
          "Arttırma ve Azaltma Operatörleri",
          "Çoklu Operatörler",
          "İlişkisel Operatörler",
          "Mantıksal Operatörler"
        ],
        "Breakpoint ve Tooltip Kullanımı": [
          "Breakpoint ve Tooltip Kullanımı"
        ],
        "Yeni Eklenen Bölüm": [
          "Süslü Parantez Mantığı",
          "Scope Kavramı",
          "Eclipse Kısayolları"
        ],
        "Kullanıcıdan Değer Alma [Scanner Sınıfı]": [
          "Kullanıcıdan Değer Alma"
        ],
        "Tür Dönüşümü [Type Conversion]": [
          "Tür Dönüşümü"
        ],
        "Koşul Yapıları [Conditional]": [
          "Koşul Yapıları Bilgilendirme",
          "Koşul Yapılarına Giriş",
          "Öğrencinin Notunun Hesaplanması [Örnek]",
          "Else if Bilgilendirme",
          "Else if ile Öğrencinin Notunun Hesaplanması",
          "Kuruyemiş Örneği"
        ]
      },
      "requirements": [
        "Sıfırdan başlıyoruz herhangi bir koşul yoktur."
      ],
      "description": "Arkadaşlar herkese merhabalar,\nBu seri'de sizlerle beraber günümüzde de popülerliğini korumayan devam eden , Türkiye 'de ve dünyada halen güncelliğini koruyan  ve birçok alanda halen kullanılan Java programlama dilini öğreneceğiz.\nİş ilanlarında java developer sıklıkla aranmaktadır. İş ilandaki şartları karşılayabilmek için öncelikle Java SE(Standart Edition) dediğiniz java'nın core\nyapısını anlamak gerekiyor.\nJava SE öğrenilmeden hiçbir framework , kütüphane öğrenilemez.\nİşte bizde bu eğitim serimizde Javanın core yapısını öğrenmeye çalışacağız. Arkadaşlar bu eğitimle beraber java core yapısını öğrendikten sonra artık java ile proje geliştirirken ihtiyaç duyduğunuz frameworkleri ve kütüphaneleri de kullanabilir. Daha complex projeler çıkarabilirisiz.\n\n\nBu eğitimi bitirme süreniz 4 ile 6 ay arasında değişmeli . Çok yavaş ilerlerseniz öğrendikleriniz unutmuş olacaksız . Çok hızlı ilerlerseniz bu seferde konular oturmayacaktır. Belirttiğim süreye uymanızı tavsiye ederim.\nPeki Neler Öğreneceğiz\n1-Programlama dillerinin çalışma mantığını anlamış olacaksınız.\n2-Java standart edition bilgisi öğreneceksiniz.\n3-Nesne yönelimli programlamanın ne demek ve nasıl kullanıldığını öğreneceksiniz\n4-Algoritma bilginizi geliştireceksiniz.\n5-Javanın web ve mobil programlama frameworklerine alt yapısı kazanmış olacaksınız\n\n\nBu kursa katılmak için önceden bilmeniz gereken herhangi bir şey yoktur. Bir internet, bir tanede bilgisayar sahibiyseniz bu iş tamamdır.\nSon bir tavsiye : Eğitime çalışırken pes etmeyin arkadaşlar , her süreç gibi yazılım öğrenmekte bir süreç ve zaman ve çaba istiyor.\nEğer ki her düştüğünüzde kalkmayı başarabilirseniz , Bir gün başardığınızı göreceksiniz.\nBaşarı hiç düşmemek değil , her düştüğün'de daha güçlü ayağa kalkabilmektir diyerek konuşmayı sonlandırıyorum.\ninşallah başka eğitimlerde de görüşmek nasip olur. Kursun herkes için hayırlı olmasını temenni ediyorum.\nherkese iyi çalışmalar dilerim...\n\n\nEnes Bayram...",
      "target_audience": [
        "Java programlama dilini öğrenmek isteyenler",
        "Nesne yönelimli programlama bilgisini geliştirmek isteyenler"
      ]
    },
    {
      "title": "現役シリコンバレーエンジニアが教えるGoで始めるスクラッチからのブロックチェーン開発入門",
      "url": "https://www.udemy.com/course/go-blockchain/",
      "bio": "Facebookの仮想通貨LibraによりAmazon、Microsfot、IBMなどがブロックチェーン事業に参入し、その技術が再び脚光を浴びています。IoT、医療、不動産の分野でも期待される次世代の技術を学びましょう。",
      "objectives": [
        "ブロックチェーンの仕組みを理解することができます。",
        "Goを使ったブロックチェーンの基本となる開発を学べます。",
        "ブロックチェーンのトランザクションの認証を理解することできます。",
        "ブロックチェーンを繋げるハッシュの仕組みができます。",
        "プロックチェーンのマイニングでのナンスを導き出すコンセンサスアルゴリズムが理解できます。",
        "ブロックチェーンの分散された合意形成のコンセンサスの仕組みが理解できます。",
        "仮想通貨の送受信の仕組みが理解できます。"
      ],
      "course_content": {},
      "requirements": [
        "必須ではありませんがビットコインなどの仮想通貨を取り扱った経験がある人の方が理解がしやすいかと思います。",
        "Goで開発いたしますので、Goの入門程度の経験がある方が対象です。"
      ],
      "description": "このコースではブロックチェーンの技術とGoを用いて仮想通貨の送金システムを構築しながらブロックチェーンの根幹にある技術、考え方とその応用方法をハンズオンで学びます。\nBlockchain技術は難しい技術資料が多い上に、ブロックチェーン＝仮想通貨＝怪しいというイメージを持たれがちですが、ブロックチェーンの技術はIT業界の常識を覆し、次世代のネットワーク分散システムのプラットフォーム上で未知なる可能性を秘めています。\nブロックチェーンネットワーク上では、もちろん送金決済、地域通貨、ポイントサービス、その他のデジタル資産のやり取りがインターネット上でできるようになりますが、資産の所有権を記録することもできるため、ブロックチェーンが信頼するIDとして、土地管理、財産の所有権、その他物的財産の所有権を示すこともできます。また、投票やパスポート取得、権利やサービスへも使えます。また、日々書類で行われている行政サービスや不動産契約などの信頼も証明することができます。ここで挙げた以上に多くの分野で使用される可能性が高いのです。\nFacebookがLibraの仮想通貨を発表し、Amazon、Microsoft、IBMなどの大企業ではブロックチェーンのプラットフォームを提供し始めました。これは、今後ブロックチェーンのインフラが使用される機会が増えることを予測しているからこそかと思います。\nまた、ブロックチェーンができるエンジニアの求人はシリコンバレーでも増えており、今後ブロックチェーンが開発できるエンジニアの希少性が高まることが期待できます。\nプロックチェーンのエンジニアにならなくとも、ブロックチェーンを実装された経験はきっと就職や転職の際に提出する履歴書の中でも目立つものとなるので、この機会にブロックチェーンの実装をしてみしょう。\nそれでは、今後とも皆様のご活躍お祈りしております。",
      "target_audience": [
        "ブロックチェーンに関心を持つ方",
        "パワーポイントなどの説明ではブロックチェーンの理解が難しく、コードを書いた方が理解できると思われている方"
      ]
    },
    {
      "title": "Aprendendo programação básica e avançada com Linguagem C++",
      "url": "https://www.udemy.com/course/cmaismaisbasico/",
      "bio": "C++ do jeito certo: explicações dos conceitos, códigos comentados, centenas de exercícios e meu suporte em todo o curso",
      "objectives": [
        "Programar em C++ com desenvoltura do nível básico até o avançado.",
        "Programar utilizando as principais estrutruras de Programação (Variáveis, if, else, switch, case, while, for)",
        "Como declarar variáveis com os tipos de dados C++ (int, float, double, char, bool, string)",
        "Como usar os operadores Aritméticos + - * / %, Relacionais == , > , >= , < , <=, != e Lógicos    AND - E - &&,    OR- OU - ||   e   NOT - NÃO -",
        "O que é e como utilizar a IDE Visual Studio para programar seus códigos em C++",
        "Conceitos importantes do mundo da programação como Abstração, Códigos Fonte, Objeto e Executável, compilação, linkedição, pré-processamento",
        "Conceitos de Lógica, Algoritmo, Pseudocódigo e Processamento de Dados",
        "Como Debugar(executar passo a passo) seu código com BreakPoints",
        "Manipular Operadores de Incremento ++ e Decremento -- Pré-fixados e Pós-Fixados",
        "Como usar operador Ternário interrogação ? para substituir o if, else",
        "Como trabalhar com Loops de Repetição while e for",
        "O que são funções, como declarar, utilizar e criar protótipos",
        "Como entender de vez os temidos ponteiros*",
        "Como trabalhar com referências& e as diferenças em relação aos ponteiros*",
        "Trabalhando com structs, Vetor de structs, typedef e structs Aninhadas",
        "Orientação à Objetos: Classe, Objetos, Instanciação, Atributos, Métodos",
        "Conceitos Avançados de Orientação a Objetos com C++: Herança"
      ],
      "course_content": {
        "Introdução e Instalação do Ambiente de Programação": [
          "Bem-vindo e Bem-Vinda ao Curso - Informações Importantes do Curso!",
          "Apresentação do Curso: O que você vai aprender em todas as seções e aulas C++",
          "Recado Importante para você!",
          "Você pode usar versão 2022. Se desejar use Versão 2019 Visual Studio veja como",
          "Instalando a IDE Visual Studio Community para programar em Linguagem C++",
          "OUTROS COMPILADORES QUE PODEM SER UTILIZADOS COM C++",
          "Se você estiver utilizando CODE::BLOCKS veja como criar, compilar arquivos CPP",
          "Se você estiver Utilizando o DEVC++ Veja como Criar, Compilar e executar .CPP",
          "Criando seu primeiro programa C++ no Visual Studio Community",
          "No Linux Code::Blocks e macOS XCode, como dar um System(\"PAUSE\") e pausar tela?",
          "ATENÇÃO: Resolvendo o erro: O Sistema não pode encontrar o arquivo especificado!",
          "Como criar projeto e código fonte C++ caso você esteja usando o Code:Blocks",
          "Se você usa o Windows 11 ou se o terminal não está mostrando a cor, faça isso.",
          "Analisando seu primeiro programa com programação em linguagem C++",
          "O que é uma IDE (Integrated Development Environment)?",
          "Exercício on-line sobre os conceitos estudados",
          "Exercícios Sobre Atalhos do Visual Studio Community",
          "E se seu antivírus estiver barrando a criação de arquivos .exe (executáveis)?",
          "Você pode compilar On-line e até no seu Celular Android Sem precisar computador"
        ],
        "Primeira Lista de Exercícios e Resolução desta Primeira Lista de Exercícios": [
          "Primeira Lista de Exercícios de Programação C++",
          "Resolução Questão 01) Curso Programação com Linguagem C++",
          "Resolução Questão 02) Curso Programação com Linguagem C++",
          "Resolução Questão 03) Curso Programação com Linguagem C++",
          "Resolução Questão 04) Curso Programação com Linguagem C++",
          "Como retirar mensagem que aparece terminal exit code 0 ao executar programa C++",
          "Sobre o erroCannot open include file: 'stdafx.h': No such file"
        ],
        "Conceitos Importantes Sobre Programação de Computadores": [
          "O que é a tal abstração tão falada na área de computação?",
          "O que é uma linguagem de programação?",
          "O que é a linguagem de programação C++?",
          "Processo de Build C++ Código Fonte e Pré-Processamento",
          "Processo de Build C++ Compilação, Linkedição até a geração do .exe",
          "Analisando mais a fundo o código,a geração do .exe e execução primeiro programa",
          "Exercícios de fixação dos conceitos aprendidos nesta seção"
        ],
        "Criando e Manipulando Variáveis": [
          "O que é e como declarar uma variável?",
          "Trocando o Idioma do Visual Studio Community 2019 para Inglês",
          "DICA: Escondendo a exibição do caminho do diretório ao executar o seu código",
          "Criando e Utilizando Variáveis em C++",
          "Erro ao executar código Visual Studio \"Cannot open <Arquivo.exe> for Writting\"",
          "Comentando e Explicando Códigos Sobre Conceitos De Variáveis",
          "O que são e quais principais tipos de dados C++?",
          "Regras para Declarar(Nomeiar) Variáveis",
          "Como Garantir Quebra de Linha Automática no Visual Studio?",
          "Tipo Inteiro: int",
          "Exercício Criando de Variáveis",
          "Como dar quebra de linha e continuar código na próxima linha?",
          "Tipo ponto flutuante: float e double",
          "Tipo caracter: char e as Codificações ASCII e UNICODE",
          "Exercícios de fixação dos conceitos aprendidos nas aulas anteriores",
          "Tipo Booleano: bool - true(verdadeiro) ou false(falso)",
          "Modificadores de Tipo: short, long, signed e unsigned",
          "Constantes",
          "Conceitos explicados de Namespace, identificadores e Escopo",
          "Exercícios de fixação dos conceitos aprendidos nesta seção",
          "Artigo: Posicionando o texto na tela (centralizando) ou indicando linha/coluna"
        ],
        "Entrada de Dados e Programando com Operadores Aritméticos, Relacionais e Lógicos": [
          "std::cin >> recebendo dados do usuário via teclado em C++",
          "Como receber múltiplas entradas em um único std::cin em C++",
          "C++ Operadores Aritméticos + - * / %",
          "Exercício std::cin",
          "Como não encerrar o programa e solicitar Sim para continuar ou Não para encerrar",
          "Precedência de Operadores: Curso Programação com Linguagem C++",
          "Debug do Código: Analisando Execução Passo a Passo(Breakpoints) no Visual Studio",
          "Operadores relacionais e de Igualdade == > < >= <= != em C++",
          "Conceito de Lógica, Algoritmo, Pseudocódigo e Processamento de Dados",
          "Operadores Lógicos AND - E - &&, OR- OU - || e NOT - NÃO - ! Parte 01",
          "Operadores Lógicos AND - E - &&, OR- OU - || e NOT - NÃO - ! Parte 02",
          "std::printf( ) utilizando especificadores %c, %s, %d, %f e %l PARTE 1",
          "std::printf( ) printando strings com c_str();",
          "Operador Incremento ++ e Decremento -- Pré-fixados e Pós-Fixados: Linguagem C++",
          "Um pouco mais de explicação sobre os operadores de incremento++ e decremento--",
          "Exercícios de fixação dos conceitos aprendidos nesta seção",
          "Explicação das Questões do Simulado (Leia apenas depois de fazer o simulado!)",
          "Diferenças entre std::endl e \\n"
        ],
        "Estruturas de Decisão Condicional (if-else |Operador Ternário ? | Switch Case)": [
          "Estrutura de Decisão Condicional se então, if e else - Conceito",
          "Estrutura de Decisão Condicional se então, if e else - Prática",
          "Expressões if e else Simples e Compostas",
          "Operador Ternário (Condição) ? (true) : (false) - Conceitos",
          "Operador Ternário (Condição) ? (true) : (false) - Prática de Programação",
          "Estrutura de Seleção Condicional Escolha/Caso, Switch/Case",
          "Estrutura de Seleção Condicional Switch/Case Prática de Programação",
          "Habilitando informação visual de identação de início e fim de cada bloco {...}"
        ],
        "Estruturas de Repetição(Loops): while, do-while, for": [
          "Estruturas de Repetição(Loops): while",
          "Estruturas de Repetição(Loops): while - Prática de Programação em Linguagem C++",
          "Potencia de um número inteiro positivo usando apenas while sem math ou cmath",
          "Estrutura de Repetição do-while conceitos e diferenças",
          "Estrutura de Repetição do-while prática de programação.",
          "Validando a entrada do usuário com while e do-while",
          "Estruturas de Repetição(Loops): for - conceitos",
          "Estruturas de Repetição(Loops): for - prática de programação",
          "Gerando Números Aleatórios com rand() e for",
          "Como validar a entrada: Impedindo que o usuário digite uma letra no terminal!"
        ],
        "Funções Conceitos e Desenvolvimento": [
          "Introdução as funções",
          "Funções que não retornam nada (void), funções nos parâmetros e o comando return",
          "Protótipos de funções",
          "Consolidando a Anatomia de uma função",
          "Um pouco mais sobre protótipo de função e definição da função",
          "Consolidando protótipos de funções",
          "Otimizando a função Calculadora utilizando Switch Case",
          "ATENÇÃO: ERRATA CÓDIGO DA PRÓXIMA AULA- LEIA -ME ANTES",
          "Criando Funções em Códigos sem Funções",
          "Separando Protótipos e Implementações de funções em arquivos .h e .cpp",
          "Se você usa Visual Studio Code, siga esta passos para ter êxito aula anterior",
          "Exercício: Criando seu próprio arquivo de cabeçalho .h do zero",
          "Artigo para quem utiliza DEVC++ - Criando Bilbiotecas no DEVC++",
          "Entendendo Melhor o Conceito de Namespaces",
          "Cast - Conversão de Dados Explícita x Coerção - Conversão de dados Implícita",
          "Variável Global",
          "Variável Local e o Escopo de uma Variável",
          "Um pouco mais sobre arquivos de cabeçalho .h e arquivos fonte .cpp e <iostream>",
          "Debugando código e entendendo escopo de variáveis na prática",
          "Variáveis Locais Estáticas (static)",
          "Resumão Variáveis Estáticas, globais, Constantes",
          "Argumentos Padrão para funções – Default Argument",
          "Código Aula: Estrutura Repetição do-while prática programação agora com funções!",
          "Dando Play em sons através da função PlaySound da windows.h",
          "Executando Sons no Linux com comando aplay e biblioteca PortAudio",
          "Executando MP3´s através da API do Windows",
          "Introdução aos <Templates> de Função"
        ],
        "*Ponteiros: conceitos e prática": [
          "Importantes conceitos: variáveis, endereços e memória - Parte 1: Linguagem C++",
          "O que é uma variável ponteiro? Programação em Linguagem C++",
          "Armazenando com & e = endereços de outras variáveis dentro de variáveis ponteiro",
          "Revisando e Consolidando os Conceitos de Ponteiros",
          "Observando na prática o que você aprendeu na teoria",
          "Outras Operações com Ponteiros: Atribuindo um ponteiro a outro",
          "Ponteiros Genéricos void*: Os que podem apontar para qualquer tipo de dado.",
          "Consolidando Ponteiros Genéricos void*",
          "Exercício Sobre Ponteiros",
          "Teste seus conhecimentos sobre Ponteiros"
        ],
        "&Referências: Conceitos e Prática": [
          "O que são referências?",
          "Praticando: Criando e Utilizando Referências",
          "Consolidando os conceitos de Referências",
          "Passagem de argumentos para funções por valor",
          "Passagem de argumentos para funções por referência utilizando referências",
          "Passagem de argumentos para funções por referência utilizando ponteiros",
          "Explicando um pouco mais sobre passagem de argumentos por valor e por referência",
          "Teste seus conhecimentos sobre Referências"
        ]
      },
      "requirements": [
        "Nenhum Conhecimento em Programação é Necessário. O curso é para o nível inciante em C++ mas também aborda conceitos avançados.",
        "Deve-se ter um computador e acesso a Internet.",
        "Você vai usar o Microsoft Visual Studio Community 2017, é uma ferramenta totalmente gratuita e você não precisará comprar nenhum software.",
        "Seu sistema deve possuir os requisitos mínimos de instalação do Visual Studio Community 2017 ou 2019"
      ],
      "description": "Garantia de 30 dias da Udemy. Invista no seu futuro sem risco!\nA Jornada Definitiva: Entenda a Fundo Cada Conceito com Centenas de Exercícios e Suporte Direto do Instrutor.\nChega de tutoriais que apenas mostram código sem explicar o \"porquê\". Este curso é um método completo projetado para quem quer realmente entender C++, desde a instalação da IDE até os conceitos mais avançados de Orientação a Objetos e Ponteiros. Aqui, cada linha de código é explicada, cada conceito é desmistificado e você terá suporte direto para tirar todas as suas dúvidas.\nCONSTRUA UMA BASE SÓLIDA E INQUEBRÁVEL. Este é o curso que te ensina a pensar como programador.\nO QUE VOCÊ VAI DOMINAR:\nConfiguração Profissional: Instale e configure o Visual Studio corretamente e entenda cada etapa do processo de build (compilação, linkedição) que gera um executável.\nFundamentos Robustos: Aprenda de verdade o que são variáveis, tipos de dados, operadores e estruturas de controle (if, switch, loops for/while) com explicações profundas.\nFunções & Organização: Domine a criação de funções, protótipos, bibliotecas próprias (.h e .cpp) e os conceitos de passagem por valor e por referência.\nOs Temidos Ponteiros... Desmistificados! Entenda finalmente ponteiros, referências, alocação de memória (Stack vs Heap) e como usá-los com confiança, sem medo.\nEstruturas de Dados: Trabalhe com vetores, matrizes e structs para organizar informações de forma eficiente.\nProgramação Orientada a Objetos (POO): Mergulhe no paradigma moderno: Classes, Objetos, Encapsulamento, Construtores, Destrutores, Herança e o ponteiro this. Entenda a teoria e a pratique.\nCentenas de Exercícios: Fixe cada conceito com exercícios práticos e códigos totalmente comentados em cada passo, garantindo seu aprendizado.\nNÃO APENAS DECORE CÓDIGO. COMPREENDA A LÓGICA POR TRÁS DELE.\nPara quem é este curso?\nPara iniciantes absolutos que querem começar da maneira certa e para programadores autodidatas que possuem lacunas no conhecimento e desejam solidificar sua base em C++ de uma vez por todas.\nPare de ter dúvidas. Comece a ter resultados\nCom suporte direto do instrutor para guiar você em toda a jornada!\nOi Tudo bem com você? Espero que sim!\nEu Sou o Professor Marcos Pacheco e vou te guiar e te apoiar durante todo este curso!\nEu ensino programação há mais de 11(onze) anos. Minha didática de ensino aqui na Udemy já foi aprovada por mais de 20mil alunos. E qual o segredo?  Dou todo suporte ao meus alunos. Assim você nunca estará sozinho ou sozinha ao fazer este curso.\nCURSO TOTALMENTE COMPATÍVEL COM A VERSÃO MAIS NOVA DO VISUAL STUDIO 2022 E DEMAIS IDE´s\nVOCÊ SE INSCREVERÁ NESTE CURSO SEM RISCOS, POIS TERÁ 30 DIAS PARA EXPERIMENTAR O CURSO OU TER SEU DINHEIRO DE VOLTA, COM  REEMBOLSO GARANTIDO PELA UDEMY!\nComece a programar do zero, aprenda conceitos com muita prática e com todos os códigos explicados e comentados nas aulas!!!\nSe você está procurando um curso que pode ajudá-lo a se tornar um programador habilidoso e bem-sucedido, o curso de programação C++ é a escolha perfeita para você. C++ é uma linguagem de programação poderosa e flexível que é amplamente usada em uma variedade de aplicações, desde jogos de computador até software de automação industrial. E com este curso, você terá a oportunidade de aprender essa linguagem e desenvolver suas habilidades de programação.\nAo se inscrever no curso de programação C++, você será guiado por mim, professor Marcos Pacheco. Vou ajudar você a entender os fundamentos da programação em C++. Você começará aprendendo os conceitos básicos da linguagem, como variáveis, estruturas de controle de fluxo e funções, antes de passar para tópicos mais avançados, como vetores, ponteiros, referências e programação orientada a objetos.\nAlém disso, você terá a oportunidade de aplicar seus conhecimentos em projetos práticos, resolvendo exercícios C++ desde o início. Esses exercícios irão ajudá-lo a consolidar seus conhecimentos e desenvolver suas habilidades de resolução de problemas, preparando-o para enfrentar desafios de programação mais complexos.\nEste curso de programação C++ é ideal para estudantes que desejam entrar no campo da programação ou para programadores que desejam expandir suas habilidades e conhecimentos. Sendo C++ uma das linguagens de programação mais populares e amplamente usadas no mundo, aprender essa linguagem será uma habilidade valiosa que pode ajudá-lo(a) a encontrar um emprego na indústria de software ou até mesmo criar seus próprios aplicativos.\nEntão, se você está procurando um curso que possa ajudá-lo a desenvolver suas habilidades de programação e ajudá-lo a alcançar seus objetivos de carreira, inscreva-se no curso de programação C++ hoje e comece a sua jornada para se tornar um programador de sucesso.\nAprenda a programar e conquiste a habilidade do século 21!\nDe acordo com o relatório Futuro dos Empregos de 2022, do Fórum Econômico Mundial (FEM), a programação é uma das 10 habilidades emergentes no mercado de trabalho para os próximos cinco anos! Este mercado está com falta de profissionais para preencherem as vagas e oportunidades. É a sua chance!\nNeste  curso:\nVocê terá acesso via github ao texto do código-fonte de cada aula para poder baixar, analisar, revisar e testar.\nEu comento e explico todos os códigos do curso e te apoio durante as aulas. Este é um dos motivos que o curso é tão bem avaliado\nEu explico conceitos através de slides e via programação passo a passo para que tudo fique nítido para você\nVocê faz muitos exercícios para aplicar os conceitos que aprendeu na prática\nVocê vai usar um programa profissional e utilizado no mercado de trabalho para programar em C++: o Visual Studio\nTODOS OS RECURSOS E FERRAMENTAS UTILIZADOS NO CURSO SÃO GRATUITOS.\nVOCÊ SE INSCREVERÁ NESTE CURSO SEM RISCOS, POIS TERÁ 30 DIAS PARA EXPERIMENTAR O CURSO OU TER SEU DINHEIRO DE VOLTA, COM  REEMBOLSO GARANTIDO PELA UDEMY!\nEste curso é destinado para Iniciantes Totais em programação ou aqueles que desejam aprender C++.\nVocê vai utilizar a poderosa, e bastante utilizada, linguagem de programação C++\nVocê irá aprender programação desde os conceitos básicos até os avançados e a maioria destes conceitos estão presentes nas principais linguagens de programação da atualidade.\nC++ ESTÁ, DESDE 2001, ESTÁ NO TOP 5 DAS LINGUAGENS MAIS UTILIZADAS E MAIS BEM PAGAS DO MUNDO\nA Linguagem C++ aparece entre o topo dos principais rankings de salários e uso de linguagem da área de programação (FONTE: Tiobe index)\nC++ é uma Linguagem sólida e consolidada no mercado e que não possui prazo de validade.\nEm relação ao curso, não há risco algum, a plataforma da Udemy oferece:\nCertificado de conclusão ao término da formação válido no Brasil e no mundo\nGarantia de Qualidade (ou seu dinheiro de volta em até 30 dias após a compra).\nAcesso vitalício, não expira nunca.\nVocê só paga uma vez.\nC++ pode parecer complexa no início, mas com o tempo a programação vai ficando mais simples para você. O Importante é aprender os conceitos para não ficar somente repetindo códigos. Depois é só praticar o que aprendeu para fixar seu conhecimento. Você já vai usar para programar um programa profissional: O Visual Studio.\nTenho mais de 11(onze) anos de experiência de ensino de programação e PLANEJEI PEDAGOGICAMENTE  o curso para você evoluir passo a passo e aprender conceitos que irão te credenciar a SABER O QUE ESTÁ FAZENDO!\nVocê vai aprender a programar do zero utilizando a linguagem C++ e a mais famosa ferramenta de desenvolvimento de softwares da atualidade: o Microsoft Visual Studio. Neste curso você terá os conceitos de programação explicados e os códigos das aulas comentados com esclarecimento de todas as funcionalidades, para ajudar a garantir seu aprendizado. Todos os códigos das aulas estão disponíveis para você consultar e baixar a qualquer momento.\n\n\nA necessidade de programadores e programadoras no Brasil e no mundo só faz aumentar!\nAtualmente no Brasil e no Mundo a necessidade de programadores e programadoras é muito maior que a oferta deste tipo de profissional. Desta forma, o Brasil e o Mundo necessitam de mais programadores! Neste curso vou te ajudar na sua trajetória de iniciar seus estudos de programação! Sou professor com Mestrado e  ensinei por 10(dez) anos em universidades para alunos de Sistemas de Informação, Ciência da Computação e Engenharias. Atualmente ensino exclusivamente aqui na UDEMY. Possuo Mestrado em Sistemas e Computação e ensinarei a você como programar utilizando a linguagem C++ e o Visual Studio\nAtualmente, a área de programação é uma das mais promissoras e em crescimento contínuo tanto no Brasil quanto globalmente. Segundo dados do relatório Stack Overflow Developer Survey 2023, a demanda por programadores continua alta, refletindo um mercado robusto e dinâmico.\nNo Brasil, há um número crescente de empresas de tecnologia e startups que impulsionam a demanda por desenvolvedores. Estima-se que existam cerca de 227 mil empresas de tecnologia no país, muitas das quais estão constantemente em busca de profissionais qualificados em diversas linguagens de programação, incluindo C++.\nGlobalmente, o cenário não é diferente. A indústria de tecnologia continua a expandir, com um número significativo de empresas de todos os portes buscando talentos em programação para desenvolver e manter suas aplicações e sistemas.\nPara 2025, estima-se que o Brasil enfrentará um déficit de aproximadamente 70 mil profissionais de tecnologia, incluindo desenvolvedores em diversas especializações. Especificamente em C++, as oportunidades são amplas. Empresas de setores como jogos, sistemas embarcados, financeiro e de alta performance valorizam profissionais com expertise nessa linguagem devido à sua eficiência e flexibilidade.\nInvestir em formação e experiência em C++ pode abrir portas para diversas oportunidades, incluindo:\nDesenvolvimento de Jogos: Empresas de desenvolvimento de jogos valorizam muito a eficiência e performance proporcionadas pelo C++ para desenvolver engines e jogos complexos.\nSistemas Embarcados: Dispositivos IoT (Internet das Coisas), sistemas industriais e outros dispositivos embarcados frequentemente utilizam C++ devido à sua capacidade de gerenciar recursos de forma eficiente.\nAplicações de Alta Performance: Áreas como finanças, simulações científicas e processamento de grandes volumes de dados demandam programas otimizados, onde o C++ se destaca.\nConsultoria e Freelancing: Profissionais com experiência em C++ são frequentemente contratados como consultores para resolver problemas específicos ou para contribuir em projetos temporários.\nPortanto, para quem busca se posicionar estrategicamente no mercado de trabalho da programação, investir em habilidades em C++ pode ser uma decisão muito acertada, dada a demanda contínua e as diversas oportunidades que essa linguagem oferece.\nE o que você irá aprender?\nAo iniciar o curso você irá instalar seu Ambiente de Programação Instalando a IDE Visual Studio Community.\nTerminada esta etapa você já vai criar seu primeiro programa C++, compilar e executar este código no Visual Studio Community.\nDepois será o momento de analisar e aprender sobre os conceitos envolvidos com seu primeiro código.\nApós este primeiro momento você vai aprender os importantes conceitos sobre:\nO que é Abstração?\nO que é uma linguagem de programação?\nO que é a linguagem de programação C++?\nAlém disso, você vai mergulhar no processo de construção(build) do C++ analisando desde o código-fonte, pré-processamento, compilação, linkedição até a geração do arquivo executável de seu programa o .exe.\nEm seguida você irá fazer diversos exercícios de fixação dos conceitos aprendidos nesta seção e isso vai se repetir em todas as seções do curso.\nDepois, você aprender o que é e como declarar uma variável\nVai aprender a manipular variáveis e a criar e utilizar variáveis em C++.\nA seguir você vai conhecer o que são e quais principais tipos de dados C++ (int, char, float, double, bool)\nAs regras para declarar(nomear) variáveis\nVai aprender sobre os modificadores de tipo: short, long, signed e unsigned.\nFeito isso, você começará a estudar sobre como receber entrada de dados (cin) via teclado\nPosteriormente você vai conhecer os Operadores Aritméticos, Relacionais e Lógicos\nVai desmitificar os operadores de Incremento ++ e Decremento -- pré e pós-fixados\nDepois de aprender e praticar todos os conceitos acima você começará seu estudo sobre:\nAs Estruturas de Decisão Condicional: if-else,\nO Operador Ternário ?\nO comando de seleção condicional Switch/Case.\nAs Estruturas de Repetição(Loops): while, do-while e for.\nO que são funções e introdução as funções\nFunções que não retornam nada (void),\nFunções com parâmetros\nO comando return\nOs protótipos de funções.\nComo criar suas próprias bibliotecas separando protótipos e implementações de funções em arquivos .h e .cpp.\nFinalizada esta etapa de seu aprendizado você irá praticar com vários exercícios e depois parte para aprender sobre:\nCast - Conversão de Dados Explícita e Coerção\nOs conceitos de Escopo (tempo de vida) de uma variável: Variável Global, Variável Local, Variável Estática (static)\nOs temidos ponteiros, que você vai estudar de forma tranquila analisando o que são as variáveis *ponteiros com muitos conceitos e muita prática.\nDepois fará o mesmo com as &referências em que você vai praticar criando e utilizando referências\nPosteriormente vai analisar a passagem de argumentos para funções por valor e por referência utilizando tanto o conceito de ponteiros quanto o conceito de referências.\nAo finalizar mais esta etapa você parte para estudar:\nVariáveis compostas Vetores(Arrays) e Matrizes.\nProgramação Orientada à Objetos em C++: Classes, Objetos, Atributos e Métodos.\nO Paradigma da Programação Estruturada e o Paradigma da Programação Orientada à Objetos\nO que são Classes?\nO que são Objetos e Instanciação?\nO que são Atributos(propriedades) de uma classe?\nO que são Métodos(funções) de uma classe?\nComo declarar classes e criar objetos(Instanciação) em C++\nSobre os modificadores de acesso Public x Private (Encapsulamento)\nSobre como o computador cria os objetos na memória entendendo as Regiões da RAM (Stack e Heap) para consolidar seu conhecimento sobre classes e objetos.\nVai também separar suas classes em conceito (.h) e implementação (.cpp).\nVai aprender sobre o ponteiro this\nSobre os Construtores\nE sobre os Destrutores.\nSobre Structs - Estruturas em C++\nOs conceitos Avançados de Orientação a Objetos com C++: A Herança\nAlém de todo o conhecimento incrível que você vai adquirir, você ainda ganha:\nAcesso vitalício ao curso e todas as suas atualizações\nCertificado de conclusão on-line do curso válido no Brasil e no mundo\nMeu suporte personalizado e respostas as suas dúvidas\nGarantia de reembolso de até 30 dias após sua compra, garantido pela Udemy\nE por que esperar? Área de programação está aquecida e você tem 30 dias para testar o curso!\nSe você deseja entrar para área que mais cresce no mundo este é um passo que você precisa dar em sua vida. São mais 7(sete) mil alunos inscritos e a maioria deles satisfeitos com minha didática de ensino. Eu usei toda minha experiência de sala de aula de ensino de programação em Universidades e trouxe para você este curso que vai te ensinar a programar usando a linguagem mais usada no mundo C++.\nVocê pode se inscrever neste curso sem riscos, pois terá 30 dias para experimentar o curso ou ter seu dinheiro de volta, com  reembolso garantido pela udemy!\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\nQuer coisa melhor?\nInvestindo naquilo que mais lhe trará retorno, investindo em CONHECIMENTO, investindo em VOCÊ :)\nVamos começar?\nPossuo mais de 20 mil alunos na Udemy e a maioria deles está satisfeito com minha didática de ensino ;)\nVocê já pensou em fazer um curso na Udemy onde o professor realmente responde suas dúvidas, te orienta, e te acompanha de verdade durante toda a sua jornada?\nPois é exatamente isso que você vai encontrar nos meus cursos.\nDesde a primeira aula, você pode enviar quantas perguntas quiser, relacionadas aos conteúdos do curso, e eu estarei lá para te apoiar, corrigir seus erros e esclarecer suas dúvidas.\nNada de estudar sozinho ou ficar travado sem saber o que fazer. Aqui o aprendizado é interativo e com acompanhamento.\nEntão, use e abuse da ferramenta de perguntas da Udemy! Ela é seu canal direto comigo — e eu adoro quando os alunos participam.\nAbraço e nos vemos no curso!\nProfessor Marcos Pacheco\nMestre em Sistemas e Computação",
      "target_audience": [
        "Iniciantes sem experiência em programação ou programadores que desejam aprimorar os conceitos básicos do C++.",
        "Aqueles que querem se tornar programadores e começar a obter uma sólida compreensão do C++.",
        "Pessoas interessadas em programar games e entender melhor os conceitos de C++",
        "Alunos do meu curso de Unreal Engine 4 e C++ que desejam saber mais detalhes sobre os conceitos de programação de games com a Unreal e C++"
      ]
    },
    {
      "title": "Curso de Python - Aprende desde cero",
      "url": "https://www.udemy.com/course/curso-de-python-aprende-desde-cero/",
      "bio": "Curso de Python",
      "objectives": [
        "Conocer el manejo y desarrollo de uno de los lenguaje de programación más usado en el mercado laboral",
        "Se realizará 100% práctico el aprendizaje de este curso.",
        "ejemplos claros al momento de nuestro proceso de desarrollo.",
        "Será nuestra formación base en el mundo del lenguaje de programación"
      ],
      "course_content": {
        "Nivel Básico": [
          "00 - Intro",
          "01 - Descarga e Instalación del Intérprete de Python",
          "02 - Hola Mundo",
          "03 - Crear ficheros de Python",
          "04 - Variables",
          "05 - Tipos de datos",
          "06 - Descarga e Instalación de PyCharm IDE",
          "07 -Conversiones de datos",
          "08 -Conversiones de datos - parte 2",
          "09 - Definir Comentarios",
          "10 - Operaciones Aritméticas",
          "11 - Concatenación",
          "12 - Operadores de cadenas de caracteres adición y multiplicación",
          "13 - Métodos de cadenas de caracteres",
          "14 - Métodos de cadenas de caracteres - parte 2",
          "15 - Métodos de separación y unión",
          "16 - Métodos de análisis",
          "17 - Tuplas",
          "18 - Listas",
          "19 - Diccionarios",
          "20 - Entrada de datos INPUT()",
          "21- Sentencia IF ELSE",
          "22 - Sentencia IF ELIF ELSE",
          "23 - Operadores lógicos",
          "24 - Operadores Ternarios",
          "25 - Bucle FOR"
        ]
      },
      "requirements": [
        "Un equipo de cómputo con Sistema operativo Windows 10 en adelante."
      ],
      "description": "Este curso pretende introducirte en el mundo de la programación, empleando un lenguaje de programación de mayor demanda en el mundo laboral.\nAprenderás a pedir datos al usuario, a comprobar condiciones.\nPython es un lenguaje de alto nivel de programación interpretado cuya filosofía hace hincapié en la legibilidad de su código, se utiliza para desarrollar aplicaciones de todo tipo.\nPython es un lenguaje de programación flexible y diseñado para ser fácil de leer. Es un lenguaje orientado a objetos y de alto nivel. Gracias a su sintaxis sencilla es un muy buen lenguaje para aprender a programar. Python utiliza módulos y paquetes lo cual fomenta la modularidad y la reutilización de código.\nEstaremos desarrollando ejemplos y/o ejercicios propuestos al final de cada video.\nLo que aprenderás\nEn este curso aprenderás los conceptos básicos de programación usando Python.\nAprenderás sobre variables, condiciones, bucles, funciones...\nTendrás ejemplos guiados y ejercicios propuestos.\n¿Hay requisitos para realizar el curso?\nNo se necesita experiencia previa en programación.\nNecesitarás un equipo cómputo con Sistema operativo de Windows..\n¿Para quién es este curso?\nEstudiantes o aficionados, con ganas de introducirse en el mundo de la programación de computadoras y en el lenguaje Python\nInstructores\nVíctor Ramos\nIT Sistemas\nInstructor | Programador | Diseñador\nHola que tal amigos, buen día.\nMi nombre es Víctor Ramos, soy de Perú.\nme dedico a:\n- Asistencia Técnica de Cómputo y Desarrollo de Aplicaciones para Pequeñas y Medianas Empresas.\n- Entrenador en programación de Visual FoxPro 9, VB NET, C#, Python, MySQL Server, Maria DB, PostgreSQL, Oracle database y Microsoft SQL Server.",
      "target_audience": [
        "A todos los que desean aprender a programar en el lenguaje de programación más usado en el mercado laboral"
      ]
    },
    {
      "title": "The Python and Django Learning Guide",
      "url": "https://www.udemy.com/course/wcsjwvoc/",
      "bio": "تعلم لغة بايثون باللغة العربية من الصفر",
      "objectives": [
        "ستتمكن من فهم لغة بايثون"
      ],
      "course_content": {
        "Introduction": [
          "Setup the Environment",
          "Setup the Environment",
          "Terms of Use",
          "About the Instructor",
          "Rating the Course",
          "How to get the Certificate"
        ],
        "Python Basics": [
          "Output (print)",
          "Variable",
          "Comments",
          "Type Casting",
          "Input",
          "App 1 Get My Age",
          "Logical Operation",
          "Mathematical Operation",
          "Order of Operation",
          "If Statements",
          "While, For Loops",
          "Nested Loops",
          "App 2 Degree",
          "Control Statements",
          "Exception Part:1",
          "Exception Part:2",
          "List, Tuple, Dictionary",
          "Using For Loop With List",
          "Built In Functions (BIF) 1",
          "BIF 2: List, Tuple",
          "BIF 3: Dictionary",
          "BIF 4: String",
          "BIF 5: Set",
          "File"
        ],
        "Function": [
          "Function Part:1",
          "Function Part:2",
          "Function Types",
          "Passing List Through Function",
          "Recursion",
          "Lambda Expression",
          "Higher Order Function (HOF)"
        ],
        "Object Oriented Programming": [
          "Introduction",
          "Class, Object",
          "Self",
          "Constructor",
          "Instance, Class Variable & Class Method",
          "Every Thing is Object",
          "Inheritance",
          "Multi Inheritance, Override",
          "Constructor With Inheritance",
          "Import, Random",
          "Nested Classes",
          "Polymorphism",
          "Exception Part:3",
          "Enum Class"
        ],
        "HTML & HTML 5": [
          "0 ضبط بيئة العمل",
          "1 Heading",
          "2 Paragraph",
          "3 Comments",
          "4 Images",
          "5 Link, Iframe",
          "6 Inline, Block",
          "7 Tables",
          "8 Lists",
          "9 Form",
          "10 Form Part 2",
          "11 Form Attributes",
          "12 Select, Datalist Options",
          "13 Videos, Audio"
        ],
        "Django Crash Course": [
          "1 Introduction",
          "2 cmd",
          "3 Creating the first app",
          "4 Views",
          "5 Templates",
          "6 Templates Part2",
          "7 Test",
          "8 Models",
          "9 Review (MVT)",
          "10 Static"
        ]
      },
      "requirements": [
        "لا تحتاج لاي مؤهلات، هذا الكورس مخصص للاشخاص الذين لا يعرفون شي عن البرمجة"
      ],
      "description": "هذه الدورة المفصلة في المستوى الاول والثاني من بايثون حيث افترض الشخص الذي امامي لا يعرف اي شي عن عالم البرمجة ستتمكن من خلال هذه الدورة من الدخول الى عالم البرمجة وفهم اساسيات اللغات البرمجية\nلا تحتاج الى اي مؤهلات للدخول الى هذه الدورة ،تتميز هذه الدورة بأنها مفصلة ولكن ليس فيها تشعبات وتفاصيل غير اساسية\nBecome a Python Programmer and learn one of employer's most requested skills of 2022!\nThis is the most yet straightforward course for the Python programming language on Udemy! Whether you have never programmed before, already know basic syntax, or want to learn about the advanced features of Python, this course is for you! In this course, we will teach you Python 3.\nWith over 45 lectures and more than 5 hours of video, this comprehensive course leaves no stone unturned.\nThis course will teach you Python in a practical manner.\nWe will start by helping you get Python installed on your computer.\nWe cover a wide variety of topics, including:\nInstalling Python\nRunning Python Code\nStrings\nLists\nDictionaries\nTuples\nSets\nNumber Data Types\nPrint Formatting\nFunctions\nScope\nargs/kwargs\nBuilt-in Functions\nDebugging and Error Handling\nModules\nExternal Modules\nObject-Oriented Programming\nInheritance\nPolymorphism\nFile I/O\nAdvanced Methods\nand much more!\nThis course comes with a 30-day money-back guarantee! If you are not satisfied in any way, you'll get your money back. Plus you will keep access to the Notebooks as a thank you for trying out the course!\nSo what are you waiting for? Learn Python in a way that will advance your career and increase your knowledge, all in a fun and practical way!",
      "target_audience": [
        "يمكن لأي شخص ان يدخل الدورة ويتعلم لغة بايثون"
      ]
    },
    {
      "title": "Programming with C++ Language: The Complete Course",
      "url": "https://www.udemy.com/course/programmingwithcpluspluslanguage/",
      "bio": "Learn C++ Programming Language from basic to advance level easily by understanding every topic with practical session.",
      "objectives": [
        "Basics Concepts of C++ Programming",
        "How to Setup and Installl C++ IDEs",
        "Variables, DataTypes,Decision Making and Looping Statement",
        "Array, String ands pointers",
        "Object Orinted Concepts using C++",
        "Demostration of Every Topics through C++ Program",
        "Advanced Concepts like Exception Handling, Template etc"
      ],
      "course_content": {
        "Introduction to C++": [
          "Introduction to C++",
          "Features of C++",
          "What you can develop using C++",
          "Quiz based on Section 1"
        ],
        "Setup of C++ IDEs": [
          "Setup Visual Studio for writing C++ Program",
          "Setup Dev-C++ for Writing C++ Program",
          "Setup Code::Blocks for Writing C++ Program"
        ],
        "Basics of C++": [
          "Structure of C++ Program",
          "Write and Run your First C++ Program",
          "Variables and Constants",
          "cin, cout and endl (Objects of Input and Output Stream)",
          "Primary DataTypes",
          "Example Programs",
          "Quiz based on Section 3",
          "Practice Test Based on Basics of C++ Programming Language",
          "Coding Exercise 1"
        ],
        "Operators and Expressions": [
          "Operators and Type of Operators",
          "Demonstartion of Arithmetic Operators",
          "Demonstration of Relational Operator",
          "Demonstration of Increment and Decrement Operator",
          "Quiz Based on Section 4(Operators and Expression)",
          "Practice Test Based on Operators"
        ],
        "Decision Making Statements in C++": [
          "Conditional/Decision making Satements in C++",
          "if statement",
          "if....else statement",
          "if...else if ladder",
          "Nested if Statement",
          "switch...case statement",
          "Example Programs",
          "Quiz based on Section 5 (Decision making statements in C++)"
        ],
        "Looping Statement in C++": [
          "What is Looping statement? Types of Looping Statement.",
          "while loop",
          "do--while loop",
          "for loop",
          "Quiz based on Section 6(Looping Statement)"
        ],
        "Working with Array": [
          "What is Array? Advantages and Disadvantages of Array",
          "Working with One dimensional Array",
          "Working with Two Dimensional Array",
          "Quiz based on Section 7(Array)"
        ],
        "Working with String": [
          "Character vs String.",
          "How to input and Display String?",
          "Working with String",
          "Important String Functions",
          "Quiz based on Section 8(Working with String)"
        ],
        "Pointers in C++": [
          "What is Pointers?",
          "Use of Pointers in C++ Program",
          "Pointers and Arrays",
          "Dynamic Memory Allocation",
          "Quiz based on Section 9(Pointers in C++)"
        ],
        "Working with Functions": [
          "What is Functions?",
          "Type of Function and its Implementation in C++",
          "Function Overloading",
          "Call by value and Call by Reference",
          "Quiz based on Section 10 (Working with Functions)"
        ]
      },
      "requirements": [
        "No any programming knowledge required because this course covers basic to advance"
      ],
      "description": "Learn C++ Programming Language from basic to advance level easily by understanding every topic with practical session. Here I will explain every topics and subtopics in very easy language which helps the beginner to understand. This course uses the latest version C++ 17. You do not find any C++ tutorial anywhere like this course. This course include theory, concepts and practical of C++. Now a days C++ is very popular programming language and one of the top programming language also.\nIntroduction to C++\n•First appeared in 1985\n•C++ has expanded significantly time to time\n•C++ is Object Oriented Programming language\n•It is available in all platform\n•Filename extension is .cpp\n•Recent version is C++ 17 (December 2017)\n•Recently C++ is mostly used in system programming and embedded system.\nFeatures of C++\n•Simple\n•Portable\n•Powerful\n•Platform Dependent\n•Efficient\n•Object Oriented\n•Rich Library\n•Structured Programming language\n•Case sensitive\n•Security\nSupport dynamic memory allocation\nWhat you can develop using C++?\n•Operating System (Windows)\n•Browsers (Mozilla Firefox, Chrome etc)\n•IoT products\n•Embedded System\n•Compilers\n•Databases (MySql)\n•Gaming Development\n•GUI Based Application (Adobe systems)\nmany more……..",
      "target_audience": [
        "Who wants to learn programming language",
        "Who wants to make Gaming application in future because C++ used in Gaming Development",
        "College/University Students",
        "Students of Computer Science or IT"
      ]
    },
    {
      "title": "Patrones de Diseño: Soluciones prácticas y eficientes",
      "url": "https://www.udemy.com/course/patrones-diseno/",
      "bio": "Patrones de comportamiento, estructurales y de comportamiento en TypeScript agnóstico",
      "objectives": [
        "24 Patrones de diseño",
        "Patrones creacionales, estructurales y de comportamiento",
        "Practicar cada patrón con tareas, ejercicios y explicaciones visuales",
        "Mejorar el código y lógica para resolver problemas"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "¿Cómo funcionará el curso?",
          "¿Cómo hacer preguntas?",
          "Instalaciones recomendadas",
          "Preparación de proyecto"
        ],
        "Introducción a los patrones": [
          "Introducción a los patrones de diseño"
        ],
        "Patrones creacionales": [
          "Patrones creacionales"
        ],
        "Builder": [
          "Builder - Patrón",
          "Builder - Utilización",
          "Builder - Tarea",
          "Builder - Solución a la tarea",
          "Nota"
        ],
        "Factory Method": [
          "Factory Method - Patrón",
          "Factory Method - Utilización",
          "Factory Method - Tarea",
          "Factory Method - Solución a la tarea"
        ],
        "Abstract Factory": [
          "Abstract Factory - Patrón",
          "Abstract Factory - Utilización",
          "Abstract Factory - Tarea",
          "Abstract Factory - Solución a la tarea"
        ],
        "Prototype": [
          "Prototype - Patrón",
          "Prototype - Tarea",
          "Prototype - Solución a la tarea"
        ],
        "Inmutabilidad con copia": [
          "Inmutabilidad con copia - Patrón",
          "Inmutabilidad con copia - Utilización",
          "Inmutabilidad con copia - Tarea",
          "Inmutabilidad con copia - Solución a la tarea"
        ],
        "Singleton": [
          "Singleton - Patrón",
          "Singleton - Utilización",
          "Singleton - Tarea",
          "Singleton - Solución a la tarea",
          "Singleton - Alternativo"
        ],
        "Factory Function": [
          "Factory Function - Patrón",
          "Factory Function - Utilización",
          "Factory Function - Tarea",
          "Factory Function - Solución a la tarea"
        ]
      },
      "requirements": [
        "Conocimiento básico de TypeScript es recomendado",
        "Conocimiento de Programación orientada a objetos es recomendado",
        "Poder realizar instalaciones en el equipo es necesario"
      ],
      "description": "Bienvenidos a nuestro curso de Patrones de Diseño\n\n\nLos patrones de diseño son fundamentales para crear soluciones de software robustas, escalables y mantenibles. Con ellos, puedes evitar reinventar la rueda y resolver problemas comunes de forma eficiente. En este curso, aprenderás a aplicar patrones importantes con TypeScript, llevando tu desarrollo al siguiente nivel. ¡Únete y transforma la forma en que escribes código!\n\n\nEl curso aunque es con TypeScript, se desarrolla de forma agnóstica, lo que te ayudará a poder aplicar los conocimientos en cualquier otro lenguaje que aplique programación basada en objetos.\n\n\nEl curso está dividido en 3 categorías, y cuenta con tareas y ejercicios para cada patrón, puntualmente está divido así:\n\n\nCreacionales\nBuilder\nFactory Method\nAbstract Factory\nPrototype\nInmutabilidad\nSingelton\nFactory Function\nEstructurales\nAdapter\nBridge\nComposite\nDecorator\nFacade\nFlyWeight\nProxy\nComportamiento\nChain of responsibility\nCommand\nIterator\nMediator\nMemento\nObserver\nState\nStrategy\nTemplate Method\nVisitor\n\n\nDominar los patrones de diseño es clave para escribir código sólido, elegante y escalable. Este curso te dará las herramientas para transformar tu forma de desarrollar y llevar tus habilidades al siguiente nivel.\n¡Es hora de dar el salto y seguir creciendo como un mejor desarrollador!\n\n\nNos vemos dentro del curso :)\n\n\nFernando Herrera + Equipo de DevTalles",
      "target_audience": [
        "Desarrolladores de software tanto intermedios como avanzados",
        "Personas que buscan mejorar sus habilidades en escritura de código reutilizable",
        "Ideal para aquellos que trabajan con TypeScript u otros lenguajes orientados a objetos"
      ]
    },
    {
      "title": "Clean Code na Prática (Código Limpo)",
      "url": "https://www.udemy.com/course/clean-code-na-pratica/",
      "bio": "Praticando refatoração para tornar seu código mais limpo",
      "objectives": [
        "Conceitos e prática de \"clean code\" através de exemplos de código",
        "Melhorar código ruim através de refatoração"
      ],
      "course_content": {
        "Introdução": [
          "O que esperar deste curso",
          "Código Ruim e Código Bom",
          "Filosofia \"Clean Code\""
        ],
        "Um Pouco de Teoria (Oriunda de Muita Prática)": [
          "Apresentação da Parte 2",
          "DDD: Negócio ao Código",
          "Linguagem Onipresente",
          "Princípio da Responsabilidade Única (SRP)",
          "Princípio da Não Repetição (DRY)",
          "Indireção ou Delegação",
          "Lei de Demeter (Princípio do Menor Conhecimento)",
          "Acoplamento e Coesão",
          "Imutabilidade",
          "Funções Puras (em Orientação a Objetos)",
          "Testes de Unidade Tempestivos",
          "Refatoração Tempestiva",
          "As 4 Regras da Simplicidade",
          "Revisão dos Conceitos"
        ],
        "Clean Code na Prática": [
          "Apresentação da parte 3",
          "Código Limpo (Visão Geral)",
          "Nomes Significativos",
          "Comentários",
          "Formatação",
          "Funções",
          "Objetos e Estruturas de Dados",
          "Tratamento de Erro",
          "Fronteiras (Limites)",
          "Testes de Unidade",
          "Classes",
          "Sistemas Complexos",
          "Simplicidade"
        ],
        "Estudo de Caso: Cálculo do Prêmio da Mega Sena": [
          "Refatorando o cálculo do prêmio - parte 1",
          "Refatorando o cálculo do prêmio - parte 2",
          "Avaliando a cobertura de testes",
          "Criando uma classe para representar a \"Aposta\""
        ],
        "Conteúdo Extra": [
          "Complexidade Ciclomática - Uma Medida de Testabilidade",
          "Complexidade Cognitiva - Uma Medida de Complexidade",
          "Complexidade do Contador de Constantes Inteiras"
        ]
      },
      "requirements": [
        "Conhecimento de alguma linguagem de programação (o curso é feito em Java e Kotlin)"
      ],
      "description": "Esta curso apresenta o conteúdo do livro \"Clean Code\" a partir de exemplos práticos em códigos Java e Kotlin de forma a mostrar como os conceitos podem ser aplicados em um software. Se você já sabe a sintaxe de uma linguagem, talves seja a hora de realmente aprender a desenvolver, pois qualquer um pode fazer um código que o computador entenda, mas é difícil faezr um código que seres humanos entendam.",
      "target_audience": [
        "Desenvolvedores, testadores e gestores de software"
      ]
    },
    {
      "title": "Master en Colecciones y estructuras de datos en Java",
      "url": "https://www.udemy.com/course/framework-de-colecciones-de-java-y-estructuras-de-datos/",
      "bio": "Conviértete en un experto en el manejo de las colecciones en Java y aprueba en todas las entrevistas de trabajo",
      "objectives": [
        "Aprenderán qué es el framework de Colecciones de Java",
        "Aprenderán porqué es tan importante conocer bien las colecciones en Java",
        "Aprenderan a elegir las mejores colecciones dependiendo los casos de uso",
        "Aprenderán qué son las estructuras de datos en la programación",
        "Aprenderán el funcionamiento interno de algunas de las implementaciones más importantes de las colecciones"
      ],
      "course_content": {
        "Introducción": [
          "Objetivo del curso",
          "Repositorio del curso",
          "¿Qué es el framework de colecciones en Java?",
          "La interface Collection",
          "Colecciones de genéricos"
        ],
        "Las listas en Java": [
          "Interfaz List",
          "La implementación ArrayList",
          "Creación de ArrayList y adición de elementos",
          "Listas y ArrayList",
          "Métodos de iteración en las listas",
          "Eliminar productos condicionalmente en una lista",
          "¿Qué es una lista enlazada?",
          "Tipos de listas enlazadas",
          "Implementación de lista enlazada simple",
          "Test lista enlazada simple",
          "Listas enlazadas",
          "La implementación LinkedList",
          "Proyecto con LinkedList parte 1",
          "Proyecto con LinkedList parte 2",
          "Comparación de rendimiento ArrayList vs LinkedList",
          "La clase Vector",
          "View Collections",
          "Listas en Java"
        ],
        "Pilas y Colas": [
          "Pilas y colas ¿Qué son?",
          "La clase Stack",
          "La interfaz Queue",
          "Colas de prioridad usando Priority Heap",
          "Funcionamiento interno de la clase PriorityQueue",
          "Operaciones comunes de PriorityQueue",
          "Aplicación Sala de emergencias",
          "Upgrade Sala de emergencias",
          "Pilas y Colas",
          "Interfaz Deque - Colas de doble terminación",
          "Buffer de acciones con colas de doble terminación",
          "Tarea: ¿En qué más puede usarse una cola de doble terminación?",
          "Interfaz Deque"
        ],
        "Tablas de hash": [
          "Funciones hash",
          "Tablas de hash",
          "El método hashCode",
          "El método equals",
          "Tablas de hash",
          "Tarea: Tablas de hash"
        ],
        "Mapas": [
          "Los mapas y la interfaz Map",
          "HashMap y LinkedHashMap",
          "Métodos comunes de los mapas",
          "Formas de iteración de mapas",
          "Iteración de mapas usando BiConsumer",
          "Ejercicio conteo de palabras",
          "Aplicación empresa-empleados usando mapas",
          "¿Mejores usos para un mapa?",
          "La clase Properties"
        ],
        "Conjuntos en Java": [
          "Conjuntos ¿Qué son?",
          "La interfaz Set",
          "HashSet y LinkedHashSet",
          "Operaciones con conjuntos",
          "Ejercicio con conjuntos",
          "Ejercicio con conjuntos 2",
          "Conjuntos"
        ],
        "Comparadores": [
          "Introducción a los comparadores en Java",
          "Usos de la interfaz Comparable",
          "Usos de la interfaz Comparator"
        ],
        "La clase Collections": [
          "Introducción a la clase Collections",
          "Métodos addAll, frequency y disjoint",
          "El método sort de Collections",
          "Ordenamiento aleatorio - método shuffle",
          "búsqueda binaria con binarySearch",
          "Métodos reverse, min, max, fill y copy",
          "Colecciones sincronizadas y no modificables"
        ]
      },
      "requirements": [
        "Conocimiento básico de Java.",
        "Entender los conceptos de POO como herencia, polimorfismo y abstracción.",
        "Entender qué es una clase, interfaz, clase abstracta y sus diferencias.",
        "Entender en qué consiste la implementación de una interfaz en Java.",
        "Preferentemente aunque no indispensablemente, deben tener un conocimiento al menos básico de las estructuras de datos."
      ],
      "description": "El manejo de datos es algo sumamente importante en cualquier aplicación. No entender la manera correcta de manipular estos grupos de datos puede impactar considerablemente en el rendimiento de nuestras aplicaciones.\nEn este curso vas a aprender a utilizar las colecciones en Java que te permitirá hacer implementaciones mucho más eficientes en el manejo de tus datos en Java:\nAprenderás sobre:\nListas\nConjuntos\nColas y Pilas\nMapas\nPara lograr esto, nos valdremos de colecciones como ArrayList, LinkedList, TreeMap, PriorityQueue, HashMap, HashSet y varias más.\nEn este curso me esfuerzo mucho para que aprendas cómo utilizar cada una de las implementaciones de colecciones que estaremos viendo, pero también, estaré explicándote lo mejor posible, cómo estas colecciones funcionan en el interior. Entender cómo funciona cada colección es sumamente importante. No basta con saber cómo funcionan sus métodos, es importante también saber cómo se manejan internamente para poder elegir la mejor opción dependiendo el caso de uso.\nPor lo anterior, dentro del curso también incluyo varias explicaciones sobre el funcionamiento de las estructuras de datos tradicionales. Aprenderás cómo hacer una lista enlazada simple y también aprenderás cuáles son las colecciones que la implementan.\nAprenderás cuáles son las diferencias de rendimiento entre una colección y otra dependiendo de su implementación.\nOtro tema importante que aprenderás es sobre la importancia de los métodos equals y hascode y cuáles son las colecciones con las cuáles están relacionados y porqué están relacionados con ellas.\n\n\nSin otra cosa más por decir, te espero en el curso, no te lo pierdas :)",
      "target_audience": [
        "Estudiantes que deseen aprender más sobre las colecciones de Java",
        "Estudiantes que quieran entender cómo manejar grupos de datos en Java",
        "Que deseen aprender buenas técnicas para utilizar las colecciones en Java"
      ]
    },
    {
      "title": "Python'da Nesne Yönelimli Programlama: Tam Kapsamlı Uygulama",
      "url": "https://www.udemy.com/course/komple-uygulamali-nesne-yonelimli-programlama-egitimi/",
      "bio": "Python İle OOP: Hava Yolu, Oyun ve Banka Uygulamalarıyla Pratik Yapma",
      "objectives": [
        "Herhangi bir uygulamayı karmaşık değil nesne yönelimli düşünerek kolayca yazabileceksiniz!",
        "Her türlü soyut, somut kavramı bir nesne olarak düşünüp kodlayabileceksiniz!",
        "Polymorphism, Inheritance, Encapsulation gibi kavramların ne olduklarını öğrenip programlarınızda bu teknikleri kullanabileceksiniz!",
        "Programlama becerilerinizi üst seviyeye çıkarmış olacaksınız.",
        "Banka, hava yolu şirketi, oyunlar gibi her alanda programlar geliştirebileceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Kursa Genel Bakış"
        ],
        "Programların Kurulması": [
          "Anaconda Kurulumu",
          "PyCharm Kurulumu ve İlk Açılış",
          "Jupyter Notebook Uygulamasına Giriş"
        ],
        "Başlamadan Önce...": [
          "List (Liste) Veri Yapısı",
          "Fonksiyonlar"
        ],
        "Class ve Object Kavramları": [
          "Class (Sınıf) Nedir?",
          "Object (Nesne) Nedir?"
        ],
        "Class - Object Alıştırmalar": [
          "Bir Class (Sınıf) Yazalım",
          "Düşman ve Oyuncu Sınıfı",
          "Karakter Class'ı ile Düşman ve Oyuncu Yaratalım",
          "Tarih Objesi Örnekleme"
        ],
        "Inheritance ve Polymorphism": [
          "Inheritance ve Polymorphism Nedir?",
          "Birey Sınıfı",
          "Çalışan Sınıfı",
          "Mühendis ve Muhasebeci Sınıfı",
          "Bir Metodu Override Etmek"
        ],
        "Encapsulation (Kapsülleme) Nedir?": [
          "Encapsulation (Kapsülleme) Nedir?",
          "Python'da Kapsülleme Tekniği"
        ],
        "Özel Metotlar": [
          "__str__ Metodu",
          "__len__ Metodu",
          "__del__ Metodu"
        ],
        "Hava Yolu Şirketi Uygulaması": [
          "Şehir Sınıfı",
          "Uçuş Sınıfı",
          "Bilet Sınıfı",
          "Yolcu Sınıfı",
          "Pegasus Sınıfı - 1",
          "Pegasus Sınıfı - 2",
          "Debugging"
        ],
        "Oyun Uygulaması": [
          "Silah Sınıfı",
          "Düşman ve Oyuncu Sınıfı",
          "Oyun Başlasın!"
        ]
      },
      "requirements": [
        "Başlangıç seviyesinde Python bilgisi yeterlidir."
      ],
      "description": "Nesneye Yönelik Programlama (OOP) ile Python'un kombinasyonunun büyüleyici dünyasına hoş geldiniz! \"Komple Uygulamalı - Nesneye Yönelik Programlama Eğitimi\" kursuyla, teoriden pratiğe, Python dilinde Nesne Yönelimli Programlama'nın derinliklerine dalıp çıkacak ve uygulamalı öğrenme sayesinde becerilerinizi artıracaksınız.\n\n\nBu kurs, konseptleri anlamanız ve uygulamanız için örnekler, alıştırmalar ve projelerle doludur. OOP'nin felsefesini, prensiplerini ve uygulamasını, Python dilinin eşsiz özellikleriyle birlikte ele alıyoruz. Kurs boyunca, kendi kodunuzu yazma ve düzenleme konusundaki güveninizi artırmak için geniş ölçekte projeler üzerinde çalışıyoruz.\n\n\nBu eğitim sürecinin sonunda, OOP yaklaşımının neden projelerinizin temel taşı olduğunu ve özellikle büyük ölçekli projelerde nasıl bir avantaj sağladığını gözlerinizle göreceksiniz.\n\n\nKurs İçeriği:\n\n\n1. Programların Kurulumu\n2. Başlamadan Önce\n3. Class - Object (Nesne) Kavramları\n4. Class - Object (Nesne) Alıştırmalar\n5. Inheritance ve Polymorphism\n6. Encapsulation (Kapsülleme)\n7. Özel Metotlar\n8. Hava Yolu Şirketi Uygulaması (Pegasus)\n9. Oyun Uygulaması\n10. Banka Uygulaması (ATM süreçleri)\n\n\nKurs boyunca, videolardaki örnekleri kendiniz yapmayı denemek ve bol bol pratik yapmak çok önemli. Bunun yanı sıra, çeşitli online kaynakları ve forumları kullanarak daha fazla bilgi edinme ve sorularınıza yanıtlar bulma konusunda cesaretli olmanızı öneriyorum. Elbette, bu süreçte kursun soru-cevap bölümü de size destek olacaktır. Sorularınızı buraya yazabilir, diğer kursiyerlerle etkileşim kurabilir ve kendi sorularınızı yanıtlarken başkalarına da yardımcı olabilirsiniz.\n\n\nOOP'nin kapsamlı bir anlayışına sahip olduktan sonra, sektörde kullanılan diğer programlama dillerine de kolayca geçiş yapabileceksiniz. Bu kurs, size sadece Python ile OOP becerilerini kazandırmakla kalmayacak, aynı zamanda daha geniş bir programlama anlayışı ve çeşitli dillerle çalışabilme esnekliği kazandıracak.\n\n\nHadi, Nesneye Yönelik Programlama ve Python'la büyülü bir yolculuğa çıkalım!",
      "target_audience": [
        "Programlama becerilerinizi en üst seviyeye çıkarmak isteyen,",
        "Nesne Yönelimli Programlama felsefesini öğrenmek isteyen,",
        "Polymorphism ve Inheritance gibi Nesne Yönelimli Programlama özelliklerini öğrenmek isteyen,",
        "Python programlama bilgisini yükseltmek isteyen,",
        "Başkalarının yazdığı programları kolayca okuyabilmek ve geliştirmek isteyen,",
        "Diğer tüm yüksek seviyeli dilleri de kolayca öğrenebilmek isteyen herkes."
      ]
    },
    {
      "title": "Introducción a la Programación con el Lenguaje C desde Cero.",
      "url": "https://www.udemy.com/course/introduccion-a-la-programacion-lenguaje-c-desde-cero/",
      "bio": "Empieza a Programar en C, aprendiendo Operadores, Estructuras, Funciones, Arreglos, Cadenas, manejo de Archivos.",
      "objectives": [
        "Programación básica en C.",
        "Punteros y arrays",
        "Tipo de variables",
        "Entrada y salida de datos",
        "Operadores y expresiones",
        "Estructuras condicionales",
        "Bucles",
        "Funciones",
        "Arreglos y cadenas",
        "Entradas y uniones",
        "Apuntadores",
        "Manejo de archivos"
      ],
      "course_content": {
        "Sobre el Curso": [
          "Recomendaciones para una mejor experiencia en el curso",
          "Recuerda que cuentas con nuestro asesoramiento y respuestas a tus preguntas"
        ],
        "Introducción al Lenguaje C": [
          "Descargar e Instalar DevC",
          "Hola Mundo",
          "Directivas",
          "Variables Globales",
          "Tipo de datos",
          "Constantes",
          "Variables",
          "Repaso de variables Globales y Locales",
          "Funcion Scanf"
        ],
        "Operadores y expresiones": [
          "Operadores de asignacion",
          "Operaciones matemáticas",
          "Operador Incremento y decremento",
          "Operadores Relacionales",
          "Tipo Logico",
          "Operador condicional",
          "Operador coma",
          "Operador Sizeof",
          "Convertir tipo de dato"
        ],
        "Ejercicios: Desarrolla la lógica de Programación": [
          "Ejercicio 1: Pesetas a euros",
          "Ejercicio 2: Sumar valores y multiplicarlos",
          "Ejercicio 3: Sacar la nota media Solución 1",
          "Ejercicio 3: Sacar la nota media Solución 2",
          "Ejercicio 4: Intercambio de valores en Variables",
          "Ejercicio 5: Numero anterior y posterior"
        ],
        "Estructura condicionales": [
          "Sentencia IF",
          "Sentencia Else",
          "Else e If anidadas",
          "Sentencia Switch"
        ],
        "Estructuras cíclicas": [
          "While",
          "Do While",
          "Bucle For",
          "Continue y Break",
          "For aninado"
        ],
        "Funciones": [
          "Función basica",
          "Prototipos",
          "Variables estaticas en funciones",
          "Funciones manejo de caracteres",
          "Funciones metodos especiales",
          "Funciones Cabecera Math",
          "Funciones Aleatorias"
        ],
        "Arreglos y cadenas": [
          "Introducción a Arreglos",
          "Cadena de caracteres con Arrays",
          "Funcion Gets",
          "Getchar y Putchar",
          "Cabecera string.h",
          "Concatenacion",
          "Comparación de cadenas",
          "Dividir cadenas Strtok",
          "Entrada desde Teclado"
        ],
        "Estructuras y Uniones": [
          "Introduccion a la Estructura",
          "Poblar datos",
          "Estructuras anidadas",
          "TypeDef",
          "Arreglo de Estructura",
          "Datos desde Teclado",
          "Estructuras como parametro",
          "Uniones"
        ],
        "Apuntadores": [
          "Introducción a Punteros",
          "Declarar apuntadores",
          "Tipo de dato",
          "Apuntadores a apuntadores",
          "Punteros NULL",
          "Apuntadores con Arrays",
          "Punteros con cadenas",
          "Apuntadores y constantes",
          "Apuntadores a Funciones"
        ]
      },
      "requirements": [
        "Pc e internet"
      ],
      "description": "Saber programar en C te dará eficiencia y la capacidad de tener una conexión directa con el CPU de la PC.\nSi sabes programar en Python, C ++ o Ruby, te va a interesar aprender a programar en C para crear herramientas y funciones.\nSu estructura limpia permite al desarrollador crear aplicaciones de forma rápida y potente.\n?¿Cuáles son las ventajas de saber programar en C?\n- Tiene un Alto nivel de Desempeño. Esto quiere decir que es eficiente al momento de hacer llamadas directas al sistema operativo además de tener parámetros de optimización.\n- Es multiplataforma. El crear aplicaciones con este lenguaje es compatible con Linux Windows y Mac.\n- Estructura de datos. Te permitirá desarrollar aplicaciones con diferentes patrones de diseño.\nYo soy Álvaro Chirou, tengo más de 20 Años de experiencia trabajando en Tecnología, eh dado disertaciones en eventos internacionales como OWASP, tengo más de 500.000 estudiantes en Udemy y 100 formaciones profesionales impartidas en la misma.\nY junto a mi compañero Brian De Vita, con más de 60.000 estudiantes, donde con el hemos dado formaciones profesionales en conjunto también en la plataforma de Udemy, hoy les traemos esta oportunidad de seguirse formando.\nEmpieza a aprender ya mismo!\nNos vemos dentro!\nTus profesores: Álvaro Chirou y Brian De Vita.",
      "target_audience": [
        "Toda persona interesada en aprender C"
      ]
    },
    {
      "title": "Curso R Programming: De Principiante a Avanzado",
      "url": "https://www.udemy.com/course/el-arte-de-programar-en-r-anade-valor-a-tu-cv/",
      "bio": "Jorge, con experiencia en simulación y análisis de datos, te enseñará programación en R desde cero",
      "objectives": [
        "Comprender los fundamentos de la programación en R: variables, funciones y estructuras de control.",
        "Utilizar fuentes de datos externas (CSV, Excel, bases de datos) dentro del entorno de R.",
        "Crear gráficos y visualizaciones utilizando la librería ggplot2 desde lo más básico hasta gráficos personalizados.",
        "Aplicar transformaciones de datos con dplyr para filtrar, agrupar, resumir y modificar datasets.",
        "Integrar múltiples fuentes de información mediante joins para análisis relacional.",
        "Manipular datos de forma eficiente utilizando data.table, incluyendo operaciones avanzadas.",
        "Trabajar con fechas, texto y columnas calculadas para enriquecer el análisis de datos.",
        "Aplicar todo lo aprendido en proyectos reales con enfoque práctico para resolver problemas de análisis de datos."
      ],
      "course_content": {
        "¿Cómo está formado el curso?": [
          "Bienvenido a DataBoosters",
          "Descripción del curso",
          "¿Cómo tomar el curso?"
        ],
        "Parte 1: Introducción a R Programming": [
          "Bienvenido al curso",
          "Revisión del temario del curso",
          "Un poco de historia",
          "Instalación",
          "La consola de R y R Studio",
          "Archivos descargables"
        ],
        "Parte 1: Tipos de datos": [
          "Objetivos y atributos",
          "Vectores 1",
          "Vectores 2",
          "Matrices 1",
          "Matrices 2",
          "Dataframes 1",
          "Dataframes 2",
          "Tipos especiales de datos"
        ],
        "Parte 1: Estructuras de control de flujo": [
          "Ciclo For",
          "IF - ELSE",
          "Ciclo While",
          "Break, Next & Repeat",
          "Ejercicio (Ciclo For)",
          "Eficiencia de un bucle (Tip)"
        ],
        "Parte 1: Funciones": [
          "Como crear una función",
          "Función apply()",
          "Función apply() y dataframes",
          "Función apply() personalizada",
          "Listas y función lapply()",
          "Consideraciones generales apply() y lapply()"
        ],
        "Parte 1: Fuentes de datos": [
          "read.table para datos tabulares",
          "read.table para csv",
          "read.csv",
          "Exportando datos",
          "Archivos de Excel",
          "Otros tipos de datos"
        ],
        "Parte 1: Gráficos en R": [
          "Introducción a gráficas",
          "Personalización de gráficos 1",
          "Personalización de gráficos 2",
          "Grafica de funciones",
          "Gráfico de barras",
          "Histogramas y diagramas de cajas",
          "Exportando gráficos"
        ],
        "Parte 1: Análisis de datos": [
          "Análisis Exploratorio de datos 1",
          "Análisis Exploratorio de datos 2",
          "Análisis Exploratorio de datos 3"
        ],
        "Parte 2 : Visualización de datos con ggplot2": [
          "Bienvenida al curso de visualización de datos con ggplot2",
          "Requisitos previos y recomendaciones",
          "Archivos descargables"
        ],
        "Parte 2: Preparación de Datos": [
          "Importación de datos en R",
          "Exploración inicial de datos",
          "Limpieza y transformación básica",
          "Uso de librerías complementarias"
        ]
      },
      "requirements": [
        "No se requieren conocimientos previos o experiencia. Sólo pasión por aprender.",
        "Habilidades matemáticas básicas."
      ],
      "description": "Domina R desde los fundamentos hasta su aplicación en análisis, manipulación y visualización de datos reales.\nR es uno de los lenguajes más potentes y utilizados en el mundo del análisis de datos, ciencia de datos y estadística. Este curso completo te enseñará a programar en R desde cero, hasta construir visualizaciones profesionales y aplicar técnicas de transformación de datos en proyectos reales.\nComenzaremos con los fundamentos de la programación en R: estructuras de control, funciones, tipos de datos y cómo trabajar con distintas fuentes de información. Aprenderás a escribir código limpio, reutilizable y pensado para análisis eficientes.\nLuego, nos adentraremos en la visualización de datos con ggplot2, donde aprenderás a construir gráficos personalizados por propósito, aplicar estilos, crear visualizaciones interactivas y desarrollar un proyecto visual completo con enfoque narrativo.\nMás adelante, exploraremos en profundidad el procesamiento y manipulación de datos usando dplyr y data.table, dos de las herramientas más utilizadas en el entorno de R. Aprenderás a transformar columnas, combinar tablas con joins, manejar texto, fechas y aplicar funciones avanzadas de agrupación y filtrado.\nEl curso finaliza con casos prácticos y un proyecto final, donde pondrás en práctica todo lo aprendido para resolver desafíos reales de análisis.\nEste curso está diseñado para estudiantes, analistas, científicos de datos o cualquier persona interesada en aprender R y aplicarlo profesionalmente.\n¡Inscríbete ahora y domina el análisis de datos con R, construyendo soluciones reales desde cero!",
      "target_audience": [
        "Este curso es para ti si quieres aprender a programar en R.",
        "Cualquier persona interesada en la programación estadística.",
        "Cualquier persona interesada en convertirse en un científico de datos."
      ]
    },
    {
      "title": "Curso Python: Desde cero para principiantes",
      "url": "https://www.udemy.com/course/python-3-desde-cero-para-principiantes-y-no-programadores/",
      "bio": "Jorge, con experiencia en análisis de datos, te enseñará Python de una manera fácil y sencilla.",
      "objectives": [
        "Aprenderás a instalar Python, configurar VSCode y Jupyter notebook para escribir y ejecutar código.",
        "Dominarás la sintaxis básica de Python, incluyendo tipos de datos, operadores, y estructuras de control.",
        "Serás capaz de utilizar listas, diccionarios, sets, y tuplas para almacenar, acceder y manipular datos de manera eficiente.",
        "Aprenderás a escribir scripts de Python limpios y eficientes, y a depurarlos utilizando técnicas efectivas.",
        "Podrás definir y utilizar funciones, comprendiendo su importancia para la reutilización y organización del código.",
        "Entenderás y aplicarás los conceptos de clases, objetos, herencia, y polimorfismo en tus programas.",
        "Serás capaz de manejar datos persistentes, leyendo y escribiendo archivos en diferentes formatos con Python.",
        "Integrarás todos los conceptos aprendidos para desarrollar y presentar un proyecto final, demostrando tus habilidades."
      ],
      "course_content": {
        "¿Cómo está formado el curso?": [
          "Bienvenido a DataBoosters",
          "Descripción del curso",
          "Presentación del instructor"
        ],
        "Parte 1: Introducción a Python": [
          "Descripción del curso",
          "Bienvenido al curso",
          "Contenido del curso",
          "Archivos del curso"
        ],
        "Parte 1: Introducción e instalación": [
          "¿Qué es Python?",
          "Instalación de Python y Configuración Básica",
          "Visual Studio Code",
          "Estructura de un Programa en Python",
          "Ejecutando Scripts de Python",
          "Uso del Intérprete de Python e IPython",
          "Jupyter notebook",
          "Consideraciones importantes y sintaxis en python"
        ],
        "Parte 1: Fundamentos de Python": [
          "Tipos de datos escalares",
          "Operadores aritméticos y de comparación",
          "Operadores lógicos",
          "If, else, elif",
          "Match, Case",
          "Cadenas de Texto y Operaciones con Strings",
          "Listas y tuplas",
          "For, break, continue",
          "While",
          "Diccionarios y Sets",
          "Funciones y asignación de variables (locales y globales)",
          "Funciones input y print"
        ],
        "Parte 1: Ejercicios Prácticos": [
          "Hello World.",
          "Suma de dos números.",
          "Determinar si un número es positivo, negativo o cero.",
          "Determinar el nombre del día de la semana a partir de un número.",
          "Operadores lógicos.",
          "Encontrar un número en una lista utilizando un bucle for con break.",
          "Imprimir los números del 1 al 10 utilizando un bucle while.",
          "Buscar un valor en un diccionario.",
          "Definición y uso de variables en Python.",
          "Cálculo del índice de masa corporal (IMC).",
          "Función split() y estructura match.",
          "Encontrar un número mayor o menor en una lista de números.",
          "Filtrar números pares.",
          "Determinar si un número es primo.",
          "Función \"range\".",
          "Generar una tabla de multiplicar usando un bucle \"for\".",
          "Calcular el factorial de un número utilizando una función y un bucle while.",
          "Secuencia de Fibonacci.",
          "Calcular la media de una lista de números.",
          "Uso de for, break y continue."
        ],
        "Parte 1: Conclusión del Curso": [
          "Proyecto Final: Aplicación práctica",
          "Recomendaciones Finales"
        ],
        "Parte 2: Estructuras de Datos y Funciones en Python": [
          "Descripción del curso",
          "Bienvenido al curso",
          "Archivos del curso"
        ],
        "Parte 2: Estructuras de Datos": [
          "Introducción a las Estructuras de Datos",
          "Listas: Conceptos y Operaciones Básicas",
          "Tuplas: Uso y Diferencias con Listas",
          "Diccionarios: Manejo de Pares Clave-Valor",
          "Sets: Operaciones y Usos"
        ],
        "Parte 2: Funciones en Python": [
          "Definición y Uso de Funciones",
          "Parámetros y Argumentos de Funciones",
          "Funciones que Devuelven Múltiples Valores",
          "Funciones Anónimas (Lambda) y su Utilidad",
          "Alcance (Scope) y Espacios de Nombres (Namespaces)"
        ],
        "Parte 2: Programación orientada a objetos": [
          "Concepto de Clases y Objetos",
          "Definición y Creación de Clases",
          "Instanciación de Objetos",
          "Atributos y Métodos",
          "Herencia y Polimorfismo",
          "Encapsulamiento y Abstracción"
        ]
      },
      "requirements": [
        "No se necesitan requisitos previos, el curso esta diseñado para aprender Python desde cero."
      ],
      "description": "Python es un lenguaje de programación poderoso y ampliamente usado en la industria. Además, es fácil de aprender y por ello es usado a nivel mundial para enseñar los fundamentos de programación.\nAsí que si quieres aprender a programar y adquirir habilidades altamente demandadas, en este curso aprenderás los fundamentos de programación en Python con explicaciones detalladas.\nSu sintaxis es fácil de entender puesto que es cercana al lenguaje natural, y los programas hechos en Python parecen pseudocódigos, lo cual brinda una gran ayuda en su mantenimiento.\nSu código es más organizado evitando el uso del signo de punto y coma al final de cada sentencia y también evita el uso de llaves para especificar que dicho bloque de código pertenece a una sentencia.\nEn conclusión ¿Debería aprender Python?\nPython es un fenomenal primer lenguaje, como si es tu segundo, tercero o enésimo lenguaje. Su curva de aprendizaje es menos áspera que otros, dispone de miles de librerías que permiten en unas pocas líneas de código hacer lo que nos propongamos. Te permite evolucionar rápidamente, además de profundizar en tareas más complejas, según vas adquiriendo soltura.\n\n\nEl 89% de los estudiantes del curso también ha mejorado su situación laboral.\n¡Inscríbete ahora y desarrolla esa habilidad que te hace falta!\nDeja de perder las oportunidades laborales por no tener mas habilidades.\nAñádete las habilidades que te harán brillar aprendiendo a generar propuestas de alto valor para el mundo laboral.\nSuena a \"truco de magia\" pero la realidad es que tendrás una habilidad que es altamente demandada por las empresas.\nDespués de tomar este curso tu carrera profesional cambiará totalmente porque tendrás las herramientas necesarias para hacer propuestas de alto impacto basadas en datos. Serás del club de los profesionistas que tienen buenos ingresos.\n\n\n¡INSCRÍBETE AHORA y empieza a potenciar tu carrera!",
      "target_audience": [
        "Profesionistas que quieran aprender a programar en Python para facilitar sus tareas del día a día.",
        "Desarrolladores que quieran aprender Python de una manera ágil, completa y sencilla."
      ]
    },
    {
      "title": "Design Patterns com Java - Entendendo Padrões de Projetos",
      "url": "https://www.udemy.com/course/curso-design-patterns-java/",
      "bio": "Aprenda os Padrões de Projetos GoF e Princípios de Programação SOLID em explicações práticas com exemplos reais em Java",
      "objectives": [
        "Design Pattern com Java",
        "Aprenda o conceito, que problemas os Padrões de projetos resolvem e como aplicar em seus projetos Java",
        "Aprenda os principais Padrões de Projetos GoF"
      ],
      "course_content": {
        "Introdução": [
          "Bem Vindo - Introdução",
          "O que é Design Pattern ou Padrão de Projeto?",
          "O que você aprenderá neste curso e o que não aprenderá",
          "JRE, JDK e IDE InteliJ IDEA"
        ],
        "Entendendo o Princípio SOLID": [
          "O que é um princípio de programação",
          "A origem do princípio SOLID",
          "S - Single Responsibility Principle - Princípio da Responsabilidade Única",
          "O - Open/Closed Principle - Princípio Aberto/Fechado",
          "L - Liskov Substitution Principle - Princípio da Substituição de Liskov",
          "I - Interface Segregation Principle - Princípio da Segregação de Interfaces",
          "D - Dependency Inversion Principle - Princípio da Inversão de Dependência",
          "Resumo da Seção"
        ],
        "Design Patterns - Origem": [
          "A origem do Design Pattern",
          "Gangue dos Quatro - Gang of Four (GoF)"
        ],
        "Por que e como aprender Design Patterns hoje?": [
          "Por que utilizar Design Pattern"
        ],
        "Cuidados ao utilizar Design Patterns": [
          "Organize melhor e comunique melhor, não o contrário."
        ],
        "Design Pattern - Criacional": [
          "Factory Method - O problema",
          "Factory Method - A solução",
          "Factory Method - Como implementar - diagrama",
          "Factory Method - Exemplo em Java",
          "Exercício Prático - Factory Method - Desafio Hcode",
          "Abstract Factory - O problema",
          "Abstract Factory - A solução",
          "Abstract Factory - Como implementar - diagrama",
          "Abstract Factory - Exemplo em Java",
          "Exercício Prático - Abstract Factory - Desafio Hcode",
          "Builder - O problema",
          "Builder - A solução",
          "Builder - Como implementar - diagrama",
          "Builder - Exemplo em Java",
          "Exercício Prático - Builder - Desafio Hcode"
        ],
        "Design Pattern - Estrutural": [
          "Adapter - O problema",
          "Adapter - A solução",
          "Adapter - Como implementar - diagrama",
          "Adapter - Exemplo em Java",
          "Exercício Prático - Adapter - Desafio Hcode",
          "Bridge - O problema",
          "Bridge - A solução",
          "Bridge - Como implementar - diagrama",
          "Bridge - Exemplo em Java",
          "Exercício Prático - Bridge - Desafio Hcode"
        ],
        "Design Pattern - Comportamental": [
          "Chain of Responsibility - O problema",
          "Chain of Responsibility - A solução",
          "Chain of Responsibility - Como implementar - diagrama",
          "Chain of Responsibility - Exemplo em Java",
          "Chain of Responsibility - Criando Handlers"
        ],
        "Conclusão": [
          "Conclusão"
        ]
      },
      "requirements": [
        "É imprecindível que o aluno possua conhecimentos sólidos em Orientação a Objetos e linguagem Java",
        "Este curso não ensina como configurar o Java, ou como funciona o básico da linguagem."
      ],
      "description": "Aprenda os principais Padrões de Projetos GoF em explicações práticas com exemplos em reais em Java.\nDesign Patterns ajudam a elevar a carreira de um desenvolvedor a um próximo nível. Aprenda como os padrões de projetos resolvem muitos problemas conhecidos da indústria de desenvolvimento de software.\nTorne-se um profissional pronto para analisar cenários e aplicar cada um dos padrões de projetos.\nAprenda o princípio SOLID de programação, e crie códigos mais limpos e legíveis.\nMelhore a comunicação da sua equipe, aumente produtividade e a qualidade do software que você entrega. Os padrões são divididos em três tipos, Criacionais, Estruturais e Comportamentais, aprenda como e onde utilizá-los.\nAulas conceituais, com aplicação prática e desafios para praticar cada etapa do Desenvolvimento.",
      "target_audience": [
        "Desenvolvedores Java",
        "Engenheiros de Software e estudantes do curso de Engenharia de Sistemas",
        "Programadores que desejam se especializar em Design Paterns"
      ]
    },
    {
      "title": "Pemrograman Kotlin : Pemula sampai Mahir",
      "url": "https://www.udemy.com/course/pemrograman-kotlin-pemula-sampai-mahir/",
      "bio": "Belajar pemrograman Kotlin dari pemula sampai mahir disertai studi kasus. Materi akan selalu di-update secara berkala",
      "objectives": [
        "Pemrograman Kotlin",
        "Kotlin Object Oriented Programming",
        "Kotlin Generic",
        "Kotlin Collection",
        "Gradle",
        "Kotlin Unit Test",
        "Gradle",
        "Kotlin Coroutines"
      ],
      "course_content": {
        "Kotlin Dasar": [
          "Pengenalan Kotlin",
          "Discord Group",
          "Membuat Project di IntelliJ IDEA Terbaru",
          "Program Hello World",
          "Tipe Data Number",
          "Tipe Data Character",
          "Tipe Data Boolean",
          "Tipe Data String",
          "Variable",
          "Tipe Data Array",
          "Tipe Data Range",
          "Operasi Matematika",
          "Operasi Perbandingan",
          "Operasi Boolean",
          "If Expression",
          "When Expression",
          "For Loop",
          "While Loop",
          "Do While Loop",
          "Break dan Continue",
          "Function",
          "Function Parameter",
          "Function Default Argument",
          "Function Named Argument",
          "Unit Returning Function",
          "Function Return Type",
          "Single Expression Function",
          "Function Varargs Parameter",
          "Extension Function",
          "Function Infix Notation",
          "Function Scope",
          "Return If dan When",
          "Recursive Function",
          "Tail Recursive Function",
          "Lambda Expression",
          "Higher Order Function",
          "Anonymous Function",
          "Closure",
          "Inline Function",
          "Label",
          "Package dan Import",
          "Main Parameters",
          "Komentar",
          "Materi Selanjutnya"
        ],
        "Kotlin Object Oriented Programming": [
          "Apa itu Object Oriented Programming",
          "Class",
          "Object",
          "Properties",
          "Constructor",
          "Initializer Block",
          "Secondary Contructor",
          "Properties di Constructor",
          "Function",
          "Function Overloading",
          "this Keyword",
          "Inheritance",
          "Function Overriding",
          "Properties Overriding",
          "super Keyword",
          "super Constructor",
          "Any Class",
          "Type Check dan Casts",
          "toString() Function",
          "equals() Function",
          "hashCode() Function",
          "Abstract Class",
          "Abstract Properties dan Function",
          "Getter dan Setter",
          "Late-Initialized Properties",
          "Interface",
          "Visibility Modifier",
          "Extension Function",
          "Extension Properties",
          "Data Class",
          "Sealed Class",
          "Inner Class",
          "Anonymous Class",
          "Enum Class",
          "Singleton Object",
          "Companion Object",
          "Type Alias",
          "Inline Class",
          "Delegation",
          "Lazy Properties",
          "Observable Properties",
          "Destructuring Declaration",
          "Operator Overloading",
          "Null Safety",
          "Exception",
          "Annotation",
          "Annotation Target",
          "Reflection",
          "Scope Function",
          "Polymorphism",
          "Materi Selanjutnya"
        ],
        "Kotlin Generic": [
          "Pengenalan Generic",
          "Generic Class",
          "Generic Function",
          "Invariant",
          "Covariant",
          "Contravariant",
          "Generic Constraint",
          "Type Projection",
          "Star Projection",
          "Type Erasure",
          "Comparable Interface",
          "ReadOnlyProperty Interface",
          "ReadWriteProperty Interface",
          "ObservableProperty Interface",
          "Generic Extension Function",
          "Materi Selanjutnya"
        ],
        "Kotlin Collection": [
          "Pengenalan Collection",
          "List",
          "Set",
          "Pair",
          "Map",
          "Collection",
          "Iterable",
          "Iterator",
          "Konversi Collection",
          "Collection Operations",
          "Mapping",
          "Zipping",
          "Association",
          "Flattening",
          "String Representation",
          "Filtering",
          "Partitioning",
          "Testing",
          "Plus & Minus Operators",
          "Grouping",
          "Slicing",
          "Take & Drop",
          "Chunked",
          "Windowed",
          "Retrieve by Position",
          "Retrieve by Condition",
          "Retrieve by Random",
          "Checking Existence",
          "Ordering",
          "Custom Order",
          "Reverse Order",
          "Random Order",
          "Aggregate",
          "Fold & Reduce",
          "Grouping Interface",
          "List Specific Operations",
          "Set Specific Operations",
          "Map Specific Operations",
          "Sequence",
          "Properties di Map",
          "Destructuring Declaration di Map",
          "Materi Selanjutnya"
        ],
        "Gradle": [
          "Pengenalan Gradle",
          "Menginstall Gradle",
          "Membuat Project",
          "Struktur Project",
          "Gradle Task",
          "Gradle Properties",
          "Build Project",
          "Dependency Management",
          "Membuat Distribution File",
          "Multi Module Project",
          "Materi Selanjutnya"
        ],
        "Kotlin Unit Test": [
          "Pengenalan Software Testing",
          "Pengenalan JUnit",
          "Membuat Test",
          "Menggunakan Assertions",
          "Mengubah Nama Test",
          "Menonaktifkan Test",
          "Sebelum dan Setelah Test",
          "Membatalkan Test",
          "Menggunakan Assumptions",
          "Test Berdasarkan Kondisi",
          "Menggunakan Tag",
          "Urutan Eksekusi Test",
          "Siklus Hidup Test",
          "Test Dalam Test",
          "Informasi Test",
          "Dependency Injection di Test",
          "Pewarisan di Test",
          "Test Berulang",
          "Test dengan Parameter",
          "Timeout di Test",
          "Eksekusi Test Secara Parallel",
          "Pengenalan Mocking",
          "Mocking di Test",
          "Verifikasi di Mocking",
          "Materi Selanjutnya"
        ],
        "Kotlin Coroutine": [
          "Pendahuluan",
          "Pengenalan Parallel Programming",
          "Membuat Project",
          "Thread Utama",
          "Membuat Thread",
          "Multiple Thread",
          "Menggunakan Executor Service",
          "Future",
          "Pengenalan Concurrency Programming",
          "Pengenalan Coroutine",
          "Membuat Coroutine",
          "Coroutine Sangat Ringan",
          "Job",
          "joinAll Function",
          "Cancellable Coroutine",
          "Setelah Coroutine di Cancel",
          "Timeout",
          "Sequential Suspend Function",
          "Async Function",
          "awaitAll Function",
          "Coroutine Context",
          "Coroutine Dispatcher",
          "Membuat Coroutine Dispatcher",
          "withContext Function",
          "Non Cancelable Coroutine",
          "Coroutine Scope",
          "coroutineScope Function",
          "Coroutine Scope Parent & Child",
          "Coroutine Parent & Chile",
          "cancelChildren Function",
          "Memberi Nama Coroutine",
          "Menggabungkan Context Element",
          "yield Function",
          "awaitCancellation Function",
          "Exception Handling",
          "Supervisor Job",
          "supervisorScope Function",
          "Exception Handler di Job vs Supervisor Job",
          "Mutex",
          "Semaphore",
          "Asynchronous Flow",
          "Flow Operator",
          "Flow Exception",
          "Cancellable Flow",
          "Channel",
          "Channel Backpressure",
          "Channel Buffer Overflow",
          "Channel Undelivered Element",
          "produce Function",
          "Broadcast Channel",
          "Conflated Broadcast Channel",
          "Actor",
          "ticker Function",
          "Shared Flow",
          "State Flow",
          "select Function",
          "Materi Selanjutnya"
        ]
      },
      "requirements": [
        "Mampu Mengoperasikan Komputer",
        "Mengerti Pemrograman Java Akan Mempermudah Dalam Mengikuti Materi"
      ],
      "description": "Belajar pemrograman Kotlin dari Pemula sampai Mahir\nSelamat datang di course Pemrograman Kotlin dari Pemula sampai Mahir. Disini kita akan belajar Pemrograman Kotlin dari tingkat dasar sampai tingkat mahir, disertai dengan studi kasus. Akan banyak materi yang akan dibahas di course ini seperti :\nKotlin Dasar, berisikan materi dasar-dasar pemrograman Kotlin, membuat hello world, belajar percabangan, menggunakan perulangan, membuat function, lambda expression, dan lain-lain\nKotlin Object Oriented Programming, berisikan materi tentang pemrograman berorientasi object menggunakan Kotlin, membuat class, membuat interface, pewarisan, polimorfisme, error handling, dan lain-lain\nKotlin Generic, berisikan materi tentang generic programming di Kotlin, membuat generic class, membuat generic function, dan lain-lain\nKotlin Collection, berisikan tentang materi struktur data dan collection di kotlin, membahas tentang List, Map, dan lain-lain\nGradle, membahas tentang salah satu build tool yang sangat populer di Kotlin yaitu Gradle, cara membuat project Gradle, cara download dependency di Gradle, dan lain-lain\nKotlin Unit Test, membahas tentang cara membuat unit test di Kotlin menggunakan JUnit, menjalankan unit test, membuat mock object menggunakan Mockito dan integrasi JUnit 5 menggunakan Gradle, dan lain-lain\nKotlin Coroutine, membahas tentang parallel dan concurrent programming di Kotlin. Membahas sekilah tentang parallel dan concurrent programming di Java. Membahas tentang coroutine, Job, Channel dan lain-lain\ndan lain-lain.\nMateri akan selalu di update secara berkala, dan ketika materi di update, harga course pun akan diupdate dengan harga baru. Jadi pastikan untuk secepatnya membeli course ini, makin cepat, makin murah harga pembelian course ini.",
      "target_audience": [
        "Programmer Pemula yang Ingin Belajar Pemrograman Kotlin",
        "Programmer Java yang Ingin Belajar Pemrograman Kotlin"
      ]
    },
    {
      "title": "الدليل الشامل لتعلم بايثون 2022",
      "url": "https://www.udemy.com/course/learn-python-arabic/",
      "bio": "الدليل الشامل لتعلم البرمجه ببايثون من الصفر بالامثله وطرق حل لكل المشاكل اللي بتقابل المبتدئين",
      "objectives": [
        "هنعرف يعني ايه برمجه",
        "هنتعرف علي تاريخ لغه برمجه بايثون",
        "هنعرف ليه نتعلم بايثون",
        "هنبدآ نصطب اللغه علي اجهزتنا",
        "هنعرف يعني ايه متغيرات Variables",
        "ايه هي الشروط وهنشوف امثله عليها If-Conditions",
        "ايه هي الحلقات التكراريه في بايثون وهنشوف اكتر من مثال عليها Loops - Break - Continue",
        "هنعرف يعني ايه دوال في بايثون Functions - Arguments - Local VS Global",
        "هنعرف يعني ايه Data Types (Strings - Lists - Tuples - Dictionary)",
        "هنعرف يعني ايه OOP",
        "هنعرف يعني ايه Everything is object",
        "هنتعلم يعني ايه Class وازاي نقدر نعمل Class خاصه بينا",
        "هنعرف يعني ايه Encapsulation وازاي نستخدمها",
        "هنعرف يعني ايه Method ويعني ايه Attribute وايه الفرق بينهم",
        "هنعرف يعني ايه Constructor",
        "هنعرف الفرق بين Class Based , Instance Based",
        "هنتعلم يعني ايه Inheritance او وراثه وازاي اقدر اعمل Inheritance من اكتر من Class",
        "هنعرف يعني ايه Polymorphism",
        "هنعرف يعني ايه Constructor Inheritance او Super",
        "هنشوف كام مثال توضيحي لكل جزء",
        "يعني ايه Module في بايثون",
        "ازاي اقدر اتعامل مع ال external modules - اعملها تصطيب علي الجهاز بتاعي",
        "ازاي اقدر اتعامل مع بعض ال internal modules زي ال OS Module , Date time Module",
        "هنشوف بعض الامثله علي كل اللي درسناه في الكورس"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "My Youtube Channel",
          "الموقع الخاص بيا لمزيد من الكورسات والمقالات",
          "الايميل الخاص بي"
        ],
        "مقدمه عن بايثون": [
          "programming intro",
          "why python",
          "python installation",
          "python editors",
          "interpreter vs compiler",
          "python help"
        ],
        "اساسيات بايثون": [
          "python variables",
          "python operators",
          "help method"
        ],
        "الشروط في بايثون | python conditions": [
          "conditions part 1",
          "conditions part 2",
          "conditions examples"
        ],
        "التكرار في بايثون | python loops": [
          "python loops part 1",
          "python loops part 2",
          "python loops part 3",
          "python loops examples part 1",
          "python loops examples part 2"
        ],
        "الدوال في بايثون | python functions": [
          "python functions part 1",
          "python functions part 2"
        ],
        "انواع الداتا | python data types": [
          "python strings",
          "python lists",
          "python tuples",
          "python dictionary"
        ],
        "البرمجه الكاىنيه | python object oriented programming": [
          "python object oriented intro",
          "every thing is object",
          "python classes",
          "python methods , attributes",
          "python constructor",
          "class attributes VS instance attributes",
          "python oop example",
          "python inheritance",
          "python polymorphism",
          "python constructor inheritance",
          "python multiple inheritance",
          "python oop review"
        ],
        "المكتبات في بايثون | python modules": [
          "python modules part 1",
          "python modules part 2",
          "python modules part 3",
          "python modules part 4"
        ],
        "تمارين علي الاساسيات | python projects": [
          "python project 1",
          "python project 2",
          "python project 3",
          "python project 4"
        ]
      },
      "requirements": [
        "لا يوجد اي متطلبات او مهارات الكورس من الصفر ومناسب لاي شخص"
      ],
      "description": "بايثون هي واحده من اكثر لغات البرمجه انتشارا في العالم واسهلهم واقواهم\nاللعه مستخدمه تقريبا في اغلب التطبيقات اللي بنستخدمها في حياتنا اليوميه زي Youtube , Google Search , Instagram , Quora , Pinterest , وغيرهم كتيير\nبالاضافه ان اللغه مستخدمه من اكبر الشركات زي Google , Nasa , CISCO وغيرهم كتيير\nاللغه بتتميز بالسهوله والقوه وتعدد ال. frameworks الخاصه بيها في كل مجال\nاللغه Cross Platform بمعني انك تقدر تبرمج بيها لاي نظام تشغيل زي Windows - Linux - Mac - Android - IOS\nاللغه من اكثر اللغات المطلوبه علي مواقع العمل الحر freelancing بالضافه لاغلب الشركات\nبالاضافه ان بايثون قويه جدا في اغلب المجالات زي برمجه الشبكات وال Security بالاضافه لبرامج الجرافيك\nبايثون استخدمت في برمجه تطبيقات كتييره جدا في مجال الجرافيك 3D Cad - Blender - Cinema 4D - Inkscape - Gimp وغيرهم\nواستخدمت في بعض الالعاب مثل Battlefield\n\n\n\nماذا الذي سنتعلمه في هذا الكورس\nهنعرف يعني ايه برمجه\nهنتعرف علي تاريخ لغه برمجه بايثون\nهنعرف ليه نتعلم بايثون\nهنبدآ نصطب اللغه علي اجهزتنا\nهنعرف يعني ايه متغيرات Variables\nايه هي الشروط وهنشوف امثله عليها If-Conditions\nايه هي الحلقات التكراريه في بايثون وهنشوف اكتر من مثال عليها Loops - Break - Continue\nهنعرف يعني ايه دوال في بايثون Functions - Arguments - Local VS Global\nهنعرف يعني ايه Data Types (Strings - Lists - Tuples - Dictionary)\nهنعرف يعني ايه OOP\nهنعرف يعني ايه Everything is object\nهنتعلم يعني ايه Class وازاي نقدر نعمل Class خاصه بينا\nهنعرف يعني ايه Encapsulation وازاي نستخدمها\nهنعرف يعني ايه Method ويعني ايه Attribute وايه الفرق بينهم\nهنعرف يعني ايه Constructor\nهنعرف الفرق بين Class Based , Instance Based\nهنتعلم يعني ايه Inheritance او وراثه وازاي اقدر اعمل Inheritance من اكتر من Class\nهنعرف يعني ايه Polymorphism\nهنعرف يعني ايه Constructor Inheritance او Super\nهنشوف كام مثال توضيحي لكل جزء\nعني ايه Module في بايثون\nازاي اقدر اتعامل مع ال external modules - اعملها تصطيب علي الجهاز بتاعي\nازاي اقدر اتعامل مع بعض ال internal modules زي ال OS Module , Date time Module\nهنشوف بعض الامثله علي كل اللي درسناه في الكورس",
      "target_audience": [
        "اي شخص حابب يتعلم برمجه بطريقه صحيحه"
      ]
    },
    {
      "title": "Html y css intensivo-camino hacia REACT",
      "url": "https://www.udemy.com/course/curso-intensivo-de-html-y-css-camino-hacia-react/",
      "bio": "Class, sass, ccs3, html5 moderno, Flexbox, Animaciones, Rotaciones 3d, Paginas completas, Transiciones y más!",
      "objectives": [
        "Crear tu primer pagina en html",
        "Centrar elementos en css",
        "Animaciones hover con css",
        "Sass para css",
        "Crear landing page",
        "Animaciones 3d",
        "Flexbox con css",
        "Y +20 proyectos para que asumas el reto de treinta días con html y css"
      ],
      "course_content": {
        "Introducción": [
          "Bienvenida",
          "Como funcionara el curso",
          "Respuesta a preguntas y grupo comunidad",
          "Repositorio código fuente",
          "1 Que es html y css",
          "2 Configurar tema y iconos en vs code",
          "Configurar animación de cursor en vs code",
          "Configurar colores de linea para css"
        ],
        "Teoría (conceptos básicos)": [
          "Primer hola mundo en html",
          "Etiqueta h",
          "Etiqueta p",
          "Etiquetas sin cierre y etiqueta",
          "Comentarios en html",
          "Css",
          "Class",
          "Extensión para reconocer las clases de html en css",
          "Atajo para escribir class div",
          "Margin y padding",
          "Formateo de pagina",
          "Span"
        ],
        "Teoría (flexbox)": [
          "Display flex",
          "Flex wrap",
          "Gap",
          "Centrar un div dentro de otro div"
        ],
        "Teoría (posición relativa y absoluta)": [
          "Posición fixed",
          "Posición relativa y absoluta"
        ],
        "Proyecto 1 (Menú básico)": [
          "Presentación del proyecto #01",
          "Agregando icono",
          "Nav",
          "Hijos",
          "Media",
          "Publicar en la web tu proyecto"
        ],
        "Teoría (before y after)": [
          "Before y after"
        ],
        "Proyecto 2 (Imágenes apiladas)": [
          "Presentación del proyecto #02",
          "Referencia a imágenes",
          "flexbox",
          "border radius",
          "posición absoluta y relativa",
          "text overflow",
          "Before",
          "Animación",
          "Culminando"
        ],
        "Proyecto 3 (Barra de búsqueda)": [
          "Presentación del proyecto #03",
          "Agregando material icons",
          "Color rgba",
          "Finalizando"
        ],
        "Proyecto 4 (Card confirmado)": [
          "Presentación del proyecto #04",
          "Html",
          "Flex",
          "Media",
          "Final"
        ],
        "Proyecto 5 (Card Pokémon)": [
          "Presentación del proyecto #05",
          "Aislando el proyecto",
          "Main sass",
          "Esqueleto",
          "Imagen de fondo",
          "Flex",
          "Footer",
          "rem",
          "final"
        ]
      },
      "requirements": [
        "No se requiere experiencia en html y css"
      ],
      "description": "Hoy en día si deseas trabajar en proyectos web html y css son 2 pilares fundamentales, sin importar el lenguaje de programación que uses para tu día a día, html y css siempre serán indispensables para el maquetado y estilos que tendrán tu pagina web.\nAunque no te guste en muchos trabajos de desarrollador de software o ingeniero de software te van a pedir que sepas html y css y que mejor oportunidad de aprenderlo con este curso con mas de  20 proyectos que vamos creando conforme se van aprendiendo los conceptos.\nMe he encargado de crear proyectos muy llamativos e interesantes para mantener tu motivación de aprender al máximo.\nAprenderemos a trabajar con:\nHTML, el lenguaje de marcado imprescindible en cualquier web.\nCSS3, enseñando las novedades y los increíbles efectos para las páginas web.\nMaquetación web profesional, desarrollando varios proyectos web con HTML 5 y CSS3 paso a paso.\nResponsive web design, haciendo que cualquier web se adapte a cualquier dispositivo móvil o pantalla.\nSASS, el preprocesador CSS más popular.\nFlexbox, el nuevo modelo de maquetación web basado en elementos flexibles.\nLa metodología de aprendizaje es \"practicar\":\nTodo explicado desde cero y paso a paso.\nVarios proyectos poniendo en práctica todo lo aprendido.\nOrden lógico y progresivo, diseñado para interiorizar todos los conocimientos tanto si sabes programar como si no.\nAdemás te estaré ayudando cuando tengas cualquier duda o problema.",
      "target_audience": [
        "Desarrolladores que desean iniciar en el mundo Web"
      ]
    },
    {
      "title": "Spring Boot: Desarrollo de aplicaciones backend",
      "url": "https://www.udemy.com/course/spring-boot-2-desarrollo-de-aplicaciones-backend/",
      "bio": "Spring Boot 3, Spring Framework, Spring Security, Swagger, Junit 5, Mockito, MongoDB, Lombok, Angular, Docker, AWS",
      "objectives": [
        "Al finalizar este curso, aprenderás a desarrollar aplicaciones backend con Spring Boot 3.",
        "Lo estudiantes podrán construir APIS Rest con tecnología Spring Boot",
        "Los estudiantes aprenderán conceptos esenciales sobre Spring framework, tales cómo Spring Container, JPA, Spring MVC, Inyección de dependencias .",
        "Los estudiantes podrán ser capaces de securizar una aplicación web con Spring Security y JWT.",
        "Los estudiantes aprenderán a documentar APIS con Swagger y Springdocs.",
        "Aprenderás Angular para consumi servicios Rest construidos con Spring Boot 3.",
        "Aprenderás a realizar pruebas unitarias con JUnit y Mockito.",
        "Conocerás la metodología de desarrollo TDD (desarrollos basados en pruebas).",
        "Los estudiantes aprenderán a trabajar con MySql cómo motor de base de datos.",
        "Los estudiantes aprenderán los conceptos principales de Java. Se trabajará con la versión 17 de Java.",
        "Los estudiantes aprenderán a cómo instalar todos lo software necesarios para trabajar con Spring Boot.",
        "Trabajarás con base de datos MongoDB en la nube.",
        "Aprenderás a conectar aplicaciones Spring Boot con MongoDB.",
        "Aprenderás Thymeleaf cómo motor de plantillas para aplicaciones Spring Web.",
        "Aprenderás a usar la librería Lombok en Spring Boot.",
        "Uso de archivos de configuración yml.",
        "Los estudiantes versionarán el código fuente con Git y GitHub.",
        "Crearás un cliente Angular para consumir uno de los proyectos creados con Spring Boot en este curos",
        "Te enseñaré a desplegar aplicaciones Spring Boot en la nube con Amazon Web Services (AWS) con los servicios Elastic Beanstalk.",
        "Cómo complemento aprenderás a desplegar aplicaciones angular en la nube con AWS utilizando el servicio cloudfront y S3.",
        "Aprenderás a utilizar contenedores docker para trabajar con servicios spring boot.",
        "Te vas a introducir a la arquitectura de microservicios."
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso - bienvenida",
          "Cómo funcionará el curso"
        ],
        "Instalaciones": [
          "Introducción a la sección",
          "Link para descargar aplicaciones a instalar",
          "Instalación MySql - Workbench",
          "Consideraciones para instalación del jdk",
          "Instalación JDK versión 17",
          "Instalación JDK en Mac",
          "Instalación de Postman",
          "Instalación STS"
        ],
        "Spring Framework- API Rest - JSON": [
          "Antes de continuar",
          "Introducción a la sección.",
          "Temas a revisar en esta sección.",
          "¿Qué es Spring Framework?",
          "Vision general de Spring",
          "Inversión de Control",
          "Creación de proyecto Spring - Dependencias",
          "Ejemplo con objetos java (sin usar Spring)",
          "Usando interfaces Java",
          "Profundizando en IoC",
          "Primera aplicación Spring - primera parte",
          "Alternativa de applicationContext",
          "Primera aplicación Spring - segunda parte",
          "Inyección de dependencias",
          "Inyección de dependencia por constructor (usando xml) - primera parte",
          "Inyección de dependencia por constructor (usando xml) - segunda parte",
          "Inyección de dependencia por setter (usando xml)",
          "Practica inyección de dependencia por setter",
          "Scope de un bean",
          "IoC usando anotaciones Java",
          "Inicio proyecto demo para uso de anotaciones",
          "Configurando component scan",
          "Uso de anotación @Component",
          "Id implícito para anotación @Component",
          "Inyección de dependencia con anotaciones Java",
          "@Autowired: Practica inyección de dependencia",
          "Conceptos de Api Rest y JSON",
          "Teoría sobre API Rest",
          "Mensajería JSON",
          "Cuestionario"
        ],
        "Maven": [
          "Introducción a la sección",
          "Hablemos de un gestor de proyectos",
          "Características generales de Maven",
          "Modelo Objeto de Proyectos (POM)",
          "groupid y artifactid",
          "Instalación de maven",
          "Comando Maven",
          "Creando proyecto maven",
          "Comando para crear proyectos Maven",
          "Repositorios maven",
          "ciclo de vida de maven",
          "Ciclo de vida - fase compile",
          "Ciclo de vida - fase test",
          "Ciclo de vida - fase package",
          "Ciclo de vida - fase install"
        ],
        "Primeros pasos con Spring Boot": [
          "Introducción a la sección.",
          "Temas a revisar en esta sección.",
          "¿Qué es Spring Boot?",
          "Creación proyecto Spring Boot",
          "Estructura proyecto Spring Boot",
          "Consideraciones a tener en cuenta",
          "Creación base de datos MySQL",
          "Configuración application.properties",
          "Iniciar servidor de desarrollo.",
          "Código fuente sección",
          "Test"
        ],
        "Inicio construcción de API Rest de Categorías": [
          "Introducción a la sección.",
          "Que temas veremos en esta sección",
          "Uso JPA - Modelo Categoría - actualización",
          "Teoría - JPA",
          "¿Qué son las anotaciones?",
          "Uso de CrudRepository - Creación Interfaz Dao",
          "Metadata en la respuesta del servicio",
          "Clase de respuesta de Categorías",
          "Estructura final de respuesta de Categorías.",
          "Código fuente de la sección"
        ],
        "Término primera API Rest - Control de errores": [
          "Introducción a la sección",
          "Que veremos en esta sección",
          "Clase servicio de nuestra API Rest - uso de @Service",
          "Implementación clase service - uso de @Autowired - uso de Log",
          "Clase controladora de Categoría - Método GET",
          "Probar primera API Rest - uso de Postman",
          "Manejo de errores - Uso de clase HttpStatus",
          "Código fuente de la sección"
        ],
        "Desarrollo CRUD de API Rest Categoría": [
          "Introducción a la sección",
          "Que veremos en esta sección",
          "API buscar por id - Uso de PathVariable",
          "Probar servicio buscar por id",
          "Transaccionalidad",
          "API Rest para guardar - Uso de POST",
          "Probar servicio guardar categorías",
          "API Rest para actualizar - Uso de PUT",
          "Probar API Rest de actualizar",
          "API Rest para eliminar - Uso de DELETE",
          "Probar servicio eliminar",
          "Código fuente de la sección"
        ],
        "Practica desarrollo de API Rest": [
          "Introducción a la sección",
          "Temas que veremos en esta sección",
          "Creación clase Libro",
          "Relación Many to One - JPA",
          "Creación tabla libros en base de datos",
          "Tarea 1: API Rest para obtener todos los libros",
          "Resolución tarea 1: API Rest para obtener todos los libros",
          "Tarea 2: API Rest para obtener los libros por id",
          "Resolución tarea 2: Obtener libros por id",
          "Tarea 3: API Rest para guardar libros",
          "Resolución tarea 3: API Rest para guardar libros",
          "Prueba Tarea 3: API Rest para guardar libros",
          "Tarea 4: API Rest para actualizar y eliminar libros",
          "Resolución Tarea 4: API Rest para actualizar y eliminar libros",
          "Pruebas API actualizar y eliminar",
          "Código fuente de la sección"
        ],
        "Seguridad en servicios Rest con Spring Security y Spring Boot": [
          "Introducción a la sección",
          "Temas a revisar en la sección",
          "Introducción a seguridad en servicios Rest",
          "Conceptos de Spring Security",
          "Agregando dependencia spring security al proyecto",
          "Usando usuario por default para probar nuestras apis",
          "Modificando credenciales por default",
          "Configuración de usuarios en memoria",
          "Restringiendo Url según el rol del usuario - Primera parte",
          "Restringiendo Url según el rol del usuario - Segunda parte",
          "Spring security y JDBC - Parte 1",
          "Spring security y JDBC - Parte 2",
          "Encriptando contraseñas con bcrypt",
          "Introducción a uso de token de seguridad",
          "Inicio servicio que genera token al cliente",
          "Crear controlador del servicio token",
          "Generando clase de respuesta y request",
          "Generando código en controlador del método authenticate",
          "Ajustes de configuración y pruebas servicio token",
          "Clase de filtro para validar token",
          "Uso del filtro para validar el token",
          "Pruebas",
          "Código fuente de la sección"
        ]
      },
      "requirements": [
        "Conceptos básicos de programación."
      ],
      "description": "En este curso aprenderás el uso de Spring Boot cómo tecnología para desarrollo de aplicaciones backend.\nSpring Boot es un framework para realizar aplicaciones backend, ya sea APIS Rest, microservicios o una aplicación del lado del servidor.\n¿Por qué aprender Spring Boot? Spring Boot es una de la tecnologías de moda más requeridas y potentes que están solicitando en empresas alrededor del mundo, debido a su respaldo y soporte, generando confianza en las empresas que la usan.\nEn este curso veremos los siguientes temas:\n- Conceptos claves de Spring Framework, ya que el ecosistema de Spring Boot pertenece a Spring Framework.\n- Desarrollarás APIS Rest con los estándares que exige el mercado laboral.\n- Revisarás cómo crear aplicaciones seguras con Spring Security\n- Aprenderás a documentar tus APIS con Springdocs.\n- Aprenderás a realizar pruebas unitarias con el framework Junit versión 5, y framework Mockito para mockear clases.\n- Aprenderás el concepto de TDD (metodología de desarrollo basado en pruebas).\n- Utilizarás Git para versionar tus proyectos realizados con Spring Boot.\n- Aprenderás de Docker y cómo puedes crear imágenes y levantar contenedores para usarlo en servicios Spring Boot.\n- Usarás la base de datos H2 en una de las aplicaciones que vemos en este curso.\n- Utilizarás lenguaje Java para programar en Spring Boot 3. Si no conoces del lenguaje, dispongo una sección de Java para que puedas aprovechar este curso al máximo.\n- Utilizarás MySql cómo base de datos para el proyecto que trabajaremos en el curso.\n- Utilizarás base de datos de MongoDB en un proyecto con Spring boot Web.\n- Utilizarás la librería Lombok para crear tus modelos Java más rápido.\n- Utilizarás Thymeleaf como motor de plantilla.\n- Vamos a construir una aplicación Angular para consumir una de nuestras APIS que construiremos en Spring Boot. Veremos un ejemplo con un cliente real de cómo interactúan tanto el mundo backend (con Spring Boot) y Angular por el lado frontend.\n- Por último te enseñaré a desplegar aplicaciones Spring Boot en la nube con Amazon Web Services (AWS). También aprenderás a subir aplicaciones front end (Angular) hacia AWS.\nCómo instructor, estoy comprometido para que puedas aprender Spring Boot y puedas realizar los proyectos que te exigen en la universidad o trabajo.\nY recuerda, que si por alguna razón no satisface tus expectativas este curso, tienes 30 días de garantía de devolución.\n¡Te veo en el curso!",
      "target_audience": [
        "Programadores y técnicos informáticos que quieran expander sus conocimientos tecnológicos.",
        "Dirigido a profesionales de sector que quieran reciclarse aprendiendo el framework más demandado del mercado."
      ]
    },
    {
      "title": "Python Komplet: Dari Nol Sampai Bisa!",
      "url": "https://www.udemy.com/course/python-komplet/",
      "bio": "Pelajari Python seperti Profesional! Mulai dari dasar-dasar sampai dapat membuat fungsi, exception, dan install module",
      "objectives": [
        "Dasar-dasar Python",
        "Python dan pengolahan nilai",
        "Fungsi bawaan dan buatan dengan Python",
        "Perulangan pada Python",
        "Percabangan pada Python",
        "Olah Data dengan Python",
        "Penggunaan Numpy",
        "Mengenal dan menggunakan Exception",
        "Berbagai macam latihan tentang Python"
      ],
      "course_content": {
        "Pendahuluan": [
          "Bagaimana Mendapatkan e-Certificate",
          "Sesaat Lagi Video Course akan Dimulai"
        ],
        "Dasar-Dasar Python": [
          "Halo Dunia pada Python",
          "Penghitungan Matematika Menggunakan Python",
          "Aturan Penulisan Baris-Baris Program",
          "Penggunaan Huruf Kecil dan Kapital",
          "Pertanyaan-Pertanyaan Dasar tentang Python"
        ],
        "Python dan Pengolahan Nilai": [
          "Pengenalan Variabel",
          "User Input",
          "Contoh Kode Program untuk Meminta Input dari User"
        ],
        "Bekerja dengan String": [
          "Apa itu String?",
          "String Interpolation",
          "String Concatenation",
          "Penggunaan Operator *"
        ],
        "Bekerja dengan Angka": [
          "Mengenal Number pada Python",
          "Fungsi int() dan float()",
          "Contoh Kode Program yang Menggunakan int() dan float()",
          "User Input: Menghitung Luas Lingkaran",
          "Contoh Kode Program Menghitung Luas Lingkaran",
          "Identity Operator"
        ],
        "Instalasi Python dan Editor": [
          "Instalasi Python",
          "Menguji Instalasi Python",
          "Instalasi Pycharm",
          "Menjalankan PyCharm",
          "Ayo, Uji Pengetahuan Anda tentang Python!"
        ],
        "Fungsi dan Method Bawaan dan Buatan dengan Python": [
          "Penggunaan Method pada String",
          "Membuat Fungsi Sendiri"
        ],
        "Percabangan dan Perulangan pada Python": [
          "Percabangan If",
          "Perulangan While",
          "Perulangan For",
          "Menghitung Luas Lingkaran",
          "Quiz Seputar Fungsi, Percabangan, dan Perulangan"
        ],
        "Olah Data pada Python": [
          "Menggunakan List",
          "Menggunakan Dictionary",
          "Quiz Olah Data"
        ],
        "Exception": [
          "Syntax Error dan Exception",
          "Raise Exception",
          "Assertion",
          "Try & Except",
          "Else & Finally"
        ]
      },
      "requirements": [
        "Memiliki Komputer Pribadi"
      ],
      "description": "Jadilah programmer Python dan pelajari salah satu skills dan bahasa pemrograman yang paling dicari di seluruh dunia!\n\n\n#UPDATE JULI 2020: Pembahasan tentang NUMPY telah ditambahkan!\n\n\nVideo ini adalah online course yang paling lengkap, to-the point, dan mudah dipahami untuk bahasa pemrograman Python di Udemy! Tidak peduli apakah Anda belum pernah mempelajari bahasa pemrograman apapun sebelumnya, atau sudah mengetahui berbagai macam sintaks dasar, atau ingin mempelajari  fitur-fitur canggih Python, video course ini dirancang tentu saja untuk Anda! Dalam kursus ini, kami akan mengajari Anda pemrograman Python secara efektif!\nDilengkapi dengan berjam-jam video course, latihan coding, dan kuis, kursus komprehensif ini tidak membutuhkan pengalaman apapun! Bahkan Anda bisa mengoperasikannya menggunakan MS Windows.\nVideo course  ini akan mengajarkan Anda Python secara praktis dengan setiap bab dilengkapi screencast yang mengajarkan sintaks, fungsi, dan aturan pemrograman  lengkap dan latihan-latihan yang menarik! Tunggu apa lagi, ayo belajarlah dengan cara  yang terbaik untuk Anda!\nKami akan memulainya dengan pembahasan kode sederhana Python. Lantas, kami akan membantu Anda menginstal Python di komputer Anda.\nKami membahas berbagai topik, termasuk:\nDasar-Dasar Python\nPython dan Pengolahan Nilai\nFungsi Bawaan dan Buatan dengan Python\nPerulangan pada Python\nPercabangan pada Python\nOlah Data dengan Python\nPenggunaan dan penghitungan matematis menggunakan Numpy\nMemanfaatkan exception\nContoh pembuatan fungsi dan kuis-kuis\n\n\n\n\nAnda akan mendapatkan akses seumur hidup ke seluruh materi di dalam video course ini dari awal hingga tuntas!\nVideo course ini dilengkapi dengan jaminan uang kembali 30 hari! Jika Anda tidak puas dengan cara penyampaian atau isi materi, Anda akan mendapatkan uang Anda kembali. UTUH!\nJadi tunggu apa lagi? Pelajari Python dengan cara termudah yang akan meningkatkan karir dan menambah pengetahuan Anda, semuanya dengan cara yang menyenangkan dan praktis!",
      "target_audience": [
        "Programmer Pemula"
      ]
    },
    {
      "title": "OpenCV A-Z™ : Uygulamalarla Görüntü İşleme | 2023 | 30 Saat",
      "url": "https://www.udemy.com/course/opencv-a-ztm-uygulamalarla-goruntu-isleme-2019-18-saat/",
      "bio": "OpenCV Kütüphanesini ve Python Programlama Dilini Sıfırdan Öğrenerek Görüntü İşlemeye Güzel Bir Başlangıç Yapın !",
      "objectives": [
        "AI, Data Science, Computer Vision gibi alanlarda yoğunlukla kulanılan ve dünyanın en popüler 2. programlama dili olan Python'ı öğreneceksiniz.",
        "OpenCV'nin (Open Source Computer Vision) inceliklerini öğrenecek ve birçok nesne algılama uygulaması geliştireceksiniz.",
        "\"Kendi Haar Cascade\" dosyanızı geliştirebileceksiniz.",
        "Güçlü bir \"Görüntü İşleme\" (Image Processing) kütüphanesi olan OpenCV'nin algoritmalarının nasıl geliştirildiğini anlayacaksınız.",
        "Eğitim boyunca oldukça fazla kod yazacağımız ve çokça uygulama geliştireceğimiz için, Python ve OpenCV deneyiminiz oldukça artacak.",
        "Kursu tamamladığınızda; nesne algılama, nesne takibi ve daha birçok uygulamayı yazmış olacaksınız."
      ],
      "course_content": {
        "Giriş": [
          "Kursa Giriş",
          "\"OpenCV\" Nedir ?",
          "Soru & Cevap Sistemi"
        ],
        "Bilgisayarlı Görü Kavramlarına Giriş": [
          "Computer Vision // Bilgisayarlı Görü",
          "Image Processing // Görüntü İşleme",
          "Image Processing // Görüntü İşleme - I",
          "Image Classification // Görüntü Sınıflandırma",
          "Image Classification // Görüntü Sınıflandırma - I",
          "Object Detection // Nesne Tanıma",
          "Object Detection // Nesne Tanıma - I",
          "Image Segmentation // Görüntü Bölütleme",
          "Image Segmentation // Görüntü Bölütleme - I",
          "Karşılaştırma",
          "Keypoint Detection",
          "Keypoint Detection - I",
          "Face Recognition Systems // Kimlik Tespit Sistemleri",
          "Face Recognition Systems // Kimlik Tespit Sistemleri - I"
        ],
        "Bilgisayarlı Görü Uygulamaları": [
          "Giriş",
          "Biyomedikal Uygulamalar",
          "Tarımsal Uygulamalar",
          "İmalat Uygulamaları",
          "Otomotiv Uygulamaları",
          "Robotik Uygulamalar",
          "Güvenlik Uygulamaları"
        ],
        "Kurulumlar": [
          "Visual Studio Code",
          "Anaconda",
          "Interpreter Ayarları",
          "Ortam Kurulumu ve Kütüphaneler",
          "Kurulum Notları",
          "Extensions // Uzantılar",
          "Folder Structure // Dosya Düzeni",
          "Önemli Not !"
        ],
        "Visual Studio Code": [
          "İlk Bakış",
          "Activity Bar & Menu Bar",
          "Tema Ayarları",
          "Split Editor // Ekranı Bölme",
          "Running Script // Python'ı Çalıştırma"
        ],
        "Bilgisayar Programlamanın Temelleri": [
          "Algorithms // Algoritmalar",
          "Flow Charts // Akış Şemaları - I",
          "Flow Charts // Akış Şemaları - II"
        ],
        "Python Programlama: Giriş": [
          "Giriş",
          "Environment // Ortam",
          "Syntax // Sözdizim Kuralları",
          "Comments // Yorum Satırları",
          "Variables // Değişkenler - I",
          "Variables // Değişkenler - II",
          "Variables // Değişkenler - III",
          "Tips // print() Metodu - I",
          "Tips // print() Metodu - II",
          "Data Types // Veri Tipleri - I",
          "Data Types // Veri Tipleri - II",
          "Data Types // Veri Tipleri - III"
        ],
        "Python Programlama: Gelişme": [
          "Operators // İşleçler - I",
          "Operators // İşleçler - II",
          "Operators // İşleçler - III",
          "Operators // İşleçler - IV",
          "Tips // Kütüphane & Metot Kavramları",
          "Decision Making // Karar Yapıları",
          "Loops // Döngüler - I",
          "Loops // Döngüler - II"
        ],
        "Python Programlama: Sonuç": [
          "Numbers // Sayılar - I",
          "Numbers // Sayılar - II"
        ],
        "Resimler ile Temel İşlemler": [
          "VS Code // OpenCV Kurulumu",
          "Resimlere Giriş",
          "Resim Okuma, Gösterme, Kaydetme",
          "Hata & Çözüm: ModuleNotFoundError: No module named 'cv2'",
          "Pencereyi Yeniden Boyutlandırma Uygulaması",
          "Aspect Ratio (En Boy Oranı) Uygulaması",
          "Video Kaydetme",
          "Android Kamera Kullanımı"
        ]
      },
      "requirements": [
        "Hiçbir programlama bilgisine sahip olmanıza gerek yoktur !",
        "Yüksek bir ilgi ve azim"
      ],
      "description": "Esenlikler arkadaşlar,\nOpenCV A-Z™ : Uygulamalarla Görüntü İşleme eğitimiyle tamamen uygulamalı olarak OpenCV'yi ve Görüntü İşleme'yi öğrenebileceksiniz. İndirimli fiyattan kursa kaydolmak bu kodu kullanabilirsiniz: INDIRIMOPENCV\nHer bir konu teoriye fazla girilmeden, uygulamalar ile satır satır kod açıklamaları yapılarak anlatılmıştır. Kursu tamamladığınızda (tüm başlıklar dahil) yaklaşık 30 uygulama yapmış olacaksınız ki, bu da size OpenCV'de iyi bir deneyim kazandırmış olacak. OpenCV A-Z™ : Uygulamalarla Görüntü İşleme eğitimi, her ne kadar birçok alt başlığa sahipmiş gibi görünse de temelde \"OpenCV\", \"Python\", \"OpenCV Uygulamaları\" ve \"Numpy & Matplotlib\" olmak üzere 4 bölümden oluşmaktadır. Alt başlıklara bölünmesinin nedeni ise öğrencilerin kod ve konu takibini daha kolay yapmalarını sağlamaktır. Ayrıca kursumuz devamlı olarak güncellenmekte ve yeni başlıklar ile birlikte yeni uygulamalar da eklenmektedir.\nAşağıdaki dizelgeden (liste) eğitim boyunca anlatılan konuların ve içeriklerinin özetini inceleyebilirsiniz:\n\n\n1. Python\nBaşlamadan Önce : Yapılacak alıştırmalar ve uygulamalar, kurs yapısı, dikkat edilmesi gereken konular\nPython | 1. Bölüm : Python programlama giriş ve kurulumlar\nPython | 2. Bölüm : Python programlama, karar yapıları döngüler\nPython | 3. Bölüm : Fonksiyon, sözlük, demet, modül\n\n\n2. OpenCV\nOpenCV | Giriş ve Kurulumlar : OpenCV'ye giriş ve kurulumlar, resim ve videoları okuma, gösterme, kaydetme, geometrik şekillerin çizimi, tracbar oluşturma vs.\nOpenCV | Görüntüler Üzerinde Temel İşlemler 1-2 : Görüntülerin özelliklerine ulaşma ve o özellikleri değiştirme, morfolojik işlemler, thresholding vs.\nOpenCV | Contours (Sınır Çizgileri) : Sınır çizgileri (contours) oluşturma, contour alan ve çevre hesapları, image moments\nOpenCV | Convex Hull : Dışbükey örtü oluşturma, dışbükey hataları saptama\nOpenCV | Hough Transforms : Çizgileri, trafik şeritlerini ve çemberleri saptama\nOpenCV | Alıştırmalar I-II : Alıştırmalarla OpenCV uygulamalarına hazırlık\nÇokgen Algılama\nGerçek Zamanlı Çokgen Algılama\nArka Plan Çıkarma\nHSV ile Nesne Takibi\nFare Kullanımı\nYüz Özelliklerini Kullanma\nGöz Bebeği Takibi\nEl Özelliklerini Kullanma\nve daha birçok uygulama\nOpenCV | Haar Cascade : Haar cascade dosyaları ve onların çalışma mantığı\n\n\n3. Uygulamalar\nYüz Algılama (Face Detection) : Resim ve videodan yüzleri saptama (hazır haar cascade ile)\nGöz Algılama (Face & Eye Detection) : Yüz & göz saptama (hazır haar cascade ile)\nİnsan Bedeni Algılama (Body Detection) : İnsan bedeni saptama (hazır haar cascade ile)\nTrafikte Araç Algılama (Car Detection) : Araç saptama (hazır haar cascade ile)\nGülümseme Algılama (Smile Detection) : Gülümsemeleri saptama (hazır haar cascade ile)\nKendi Haar Cascade Dosyanı Yap ! : Kendi yapacağımız haar cascade ile trafikteki araçları saptama (Windows)\nResimdeki Metni Okuma (Text Reading) : Görüntüdeki metni okuma (Windows)\nAraç Plakası Okuma (Licence Plate Detection) : Bir plakayı saptama ve okuma (Windows)\nTrafikteki Araçları Sayma (Car Counting) : Trafikteki araçları sayma\nEl Hareketlerini Algılama (Hand Gesture Recognition) : El hareketlerini algılama ve anlama\nEkrana Resim Çizme (Drawing on Screen) : Webcam'den alınan görüntü ile ekrana resim çizme\n\n\n4. Numpy & Matplotlib\nNumpy & Matplotlib : Numpy ve Matplotlib'e giriş ve kurulumlar, resimleri okuma, gösterme, kaydetme,resimlerin sayısal arka planlarına erişme, Numpy & Matplotlib kütüphanelerinin resimler üzerinde kullanıldığı temel alıştırmalar\n\n\nHemen kaydolarak tüm bunları öğrenmeye başlayabilirsiniz !\nDipçe: İndirimli fiyattan kaydomak için tanıtım videosunun sonundaki kodu kullanabilir veya bana mesaj atabilirsiniz.",
      "target_audience": [
        "Görüntü işleme konusuna ilgisi olan herkes katılabilir."
      ]
    },
    {
      "title": "C# Programlama: Visual Studio 2022 ile Sıfırdan Uzmanlığa C#",
      "url": "https://www.udemy.com/course/csharp-programlama-visual-studio-2022-ile-sifirdan-uzmanliga-yazilim/",
      "bio": "C# ile Nesne Yönelimli Programlama OOP ve C# Veritabanı Otomasyon Yazılımları Geliştirmeyi C# Projesi Yaparak Öğrenin C#",
      "objectives": [
        "Gelişmiş Masaüstü ve Veritabanı Yazılım Uygulamalarını en Güncel Sürüm olan Visual Studio 2022 ile Geliştireceksiniz",
        "C# ile Sıfırdan Nesne Yönelik Programlamayı Günlük Hayattan Örnekler ile Kalıcı Bir Şekilde Öğreneceksiniz",
        "SQL Dilini ve Veritabanı Sorgulama, Kayıt Ekleme, Silme, Güncelleme gibi tüm İşlemleri Örnek Projemizde Yazarak Öğreneceksiniz -Microsoft SQL Server Veritabanı",
        "Kurs Sonunda siz de Veritabanı C# Projemizin benzeri Otomasyon Yazılım Projelerini Sıfırdan Kendiniz Yazabilecek Seviyeye geleceksiniz",
        "Nesne Yönelimli Programlama temellerini iyi bir şekilde öğreneceğiniz için C#'dan sonra Java ve Python gibi dilleri hızlı bir şekilde öğrenebileceksiniz",
        "En önemlisi, artık CV'nize ileri seviyede C# biliyorum yazabileceksiniz.",
        "İndirilebilir Proje Kaynak Kodlarımız üzerinde kendiniz değişiklikler yaparak hızlı bir şekilde benzer yeni Otomasyon Yazılımlarınızı yazabileceksiniz",
        "ADO NET ile veri tabanı bağlantıları yapmayı öğreneceksiniz",
        "Windows Forms Projeleri geliştirmeyi öğreneceksiniz"
      ],
      "course_content": {
        "Giriş: Gerekli Kurulumların Yapılması": [
          "Giriş: Visual Studio 2022 Kurulum"
        ],
        "Visual Studio 2022 ile C# ve Windows Forms'a Giriş": [
          "İlk Formumuzu Button ve TextBox Componentleri ile Birlikte Oluşturuyoruz",
          "ComboBox ve Label Componentleri",
          "ListBox ve GroupBox Kullanımı",
          "RichTextBox ve PictureBox nasıl Kullanılır ve Detayları",
          "DateTimePicker ve TrackBar Kullanımı ve Örnek Üzerinde Anlatım",
          "RadioButton ve CheckBox GUI Componentleri",
          "Windows Forms Componentleri"
        ],
        "Windows Forms Detaylar": [
          "Windows Forms üzerinde Panel Kullanımı",
          "Formlara Profesyonel Iconlar Eklemek",
          "Formlar Arası Geçiş ve Formlar Arası Veri Taşıma",
          "Projeyi Exe Dosyası Haline Getirip Yayınlama"
        ],
        "Algoritma Dersleri (Ek Kaynak)": [
          "Opsiyonel Ek Kaynak: Algoritmalar",
          "Opsiyonel Ek Kaynak : Algoritma Dersleri tamamını izlemek isteyenler için"
        ],
        "C# Veri Tipleri ve Değişkenler": [
          "Veri Tipleri ve Değişkenler Giriş (Yeni Eklendi)",
          "C# string Veri Tipi ve Değişken Kavramı (Güncellendi)",
          "Scope Kavramı (Güncellendi)",
          "Integer (int) Veri Tipi (Güncellendi)",
          "C# Float ve Double Veri Tipleri (Güncellendi)",
          "Örnek Uygulama - Değişkenler ve Veri Tipleri (Yeni Eklendi)",
          "Char Veri Tipi ve Var Kullanımı (Yeni Eklendi)",
          "C# Değişkenler ve Artimetik İşlemler (Güncellendi)",
          "Mini Proje : Geometrik Hesaplama Uygulama Yazılımı Geliştiriyoruz (Güncellendi)"
        ],
        "C# Fonksiyonlar, Koşullu Durumlar, Operatörler": [
          "Fonksiyonlar (Güncellendi)",
          "Fonksiyonların Değer Döndürmesi - Return (Yeni Eklendi)",
          "Metod Overloading - Fonksiyonların Aşırı Yüklenmesi (Yeni Eklendi)",
          "If / else Kullanımı (Güncellendi)",
          "If Else Konu Pekiştirme Örnek (Yeni Eklendi)",
          "Boolean Veri Tipi (Yeni Eklendi)",
          "Mantıksal Operatörler ve if else ile Kullanım (Yeni Eklendi)",
          "Switch Kullanımı (Güncellendi)"
        ],
        "Windows Forms Projelerinde Console Ekranı Nasıl Açılır ve Kullanılır ?": [
          "Windows Forms Projelerinde Console Ekranı Açma ve Kullanma",
          "Console Ekranı Kullanarak Kullanıcıdan Veri Alma",
          "Programlama Quiz Soru: Koşullu Durumlar ve Console Kullanımı"
        ],
        "Koşullu İfadelerle Gerçek Hayat Projesi: Adım Adım Uygulama Rehberi": [
          "CheckBox Kullanımı - Koşullu Durumlar Pekiştirici Uygulama",
          "RadioButton Kullanımı Koşullu Durumlar Pekiştirici Örnek Uygulama"
        ],
        "Döngüler": [
          "For Döngüsü (Güncellendi)",
          "For Döngüsü Kodlama Quiz (Yeni Eklendi)",
          "For Döngüsü Pekiştirme Örnek (Yeni Eklendi)",
          "Döngüler ve if-else Koşullu Durumlar Birlikte Kullanımı (Yeni Eklendi)",
          "Döngüler ve Koşullu Durumlar Birlikte Kullanım Pekiştirme Örnek (Yeni Eklendi)",
          "While Döngüsü (Güncellendi)",
          "Do While Döngüsü (Yeni Eklendi)"
        ],
        "Windows Forms Üzerinde Uygulamalarla Öğrendiklerimizi Pekiştirelim (Güncellendi)": [
          "Windows Forms ve Döngüler Birlikte Kullanım Örnek Uygulama (Güncellendi)",
          "ProgressBar ve Koşullu Durumlar Birlikte Örnek Kullanımı (Güncellendi)",
          "Uygulamalarda Timer Kullanımı - Örnek Uygulama (Güncellendi)"
        ]
      },
      "requirements": [
        "Sadece Standart Özelliklerde Bir Bilgisayar"
      ],
      "description": "Merhaba ,\nC# Dersleri tamamı Microsoft Visual Studio'nun en son sürümü olan Visual Studio 2022 üzerinde anlatılacağı için hiç bir eski teknoloji ders müfredatı ve eski kurulum problemleriyle uğraşmadan C#'ı Sıfırdan Yepyeni bir yazılım geliştirme ortamı üzerinde bol örneklerle UYGULAMALI olarak öğreneceksiniz (Veritabanı yazılımları geliştirme bölümleri Microsoft SQL Server  ile uygulamalı anlatılacaktır).\nNesne Yönelimli Yazılım Geliştirme Eğitimlerini bu Kursta C# ile Sıfırdan Öğrenin ve Object Oriented Programlama konusunda Uzman olun.\nKursumuzda bugün en çok kullanılan profesyonel 3 Relational Database 'den biri olan Microsoft SQL Server'ın güncel versiyonu ile:\nSQL Server Kurmayı ve kendi özel Database'lerinizi Oluşturmayı\nSQL Server Üzerinde Tablolar ve Alanlar Oluşturmayı\nC# üzerinden SQL Server Tabloları üzerinde Kayıt Ekleme , Silme , Güncelleme ( SQL CRUD ) ve SQL Query İşlemlerini Yapmayı\nC# üzerinde DataGridView , SQLTableAdapter ve DataTable gibi Veritabanı Bağlantı Componentlerini Oluşturmayı ve Kullanmayı\nADO NET ile veri tabanı bağlantıları yapmayı\nC# Windows Forms uygulamaları geliştirmeyi\nProfesyonel örnek bir proje ile komple veritabanı bağlantısı olan bir C# Form uygulaması geliştirmeyi\namatörce değil profesyonelce öğrenin !\nKurs İçinde Uygulamalı olarak C# ile Kütüphane Yönetim Sistemi Yazılım Geliştirme Projesi Açıklamalı ve Detaylı olarak Kodlanarak yapılacaktır. Öğrencilerin çok kolay takip edebilmesi için tıpkı birlikte çalışıyormuşçasına adım adım ilerlenecek, Veritabanı Tasarımı ve Tabloların oluşturulmasından, C# ile Veritabanı Yönetim ve complex GUI Componentlerinin tüm kodlarının yazılmasına kadar en ince detayıyla açıklamalı olarak anlatılacaktır. Bu Projeyi yaparken en sık kullanılan SQL  cümlelerini hiç sıkılmadan kolayca öğreneceksiniz. Kurs bitişinde de kendiniz benzer farklı Yazılım Projeleri tasarlayıp üretebilecek seviyede olacaksınız !\nBaşarılar dilerim!",
      "target_audience": [
        "C# ile Nesne Yönelimli Yazılım Geliştirmeyi Öğrenmek İsteyenler",
        "Şu anda Dünyada En Çok Kullanılan 3 Profesyonel Veritabanından biri olan MS SQL Server ile Uygulama Geliştirmek İsteyenler"
      ]
    },
    {
      "title": "C# Curso completo desde cero para ser programador .NET",
      "url": "https://www.udemy.com/course/csharp_cursototal_programador/",
      "bio": "Aprende C#, Visual Studio 2022 y Git desde cero: tu primer paso para convertirte en programador .NET profesional.",
      "objectives": [
        "Programar desde cero con C# usando Visual Studio 2022",
        "Fundamentos de programación aplicables a cualquier lenguaje moderno.",
        "Uso práctico de Git y GitHub para el control de versiones.",
        "Crear programas de consola aplicando clases, métodos, ciclos, arreglos, matrices y colecciones.",
        "Entender la lógica y estructura del código con análisis paso a paso.",
        "Diseñar algoritmos con pseudocódigo y representar soluciones con diagramas UML.",
        "Aplicar técnicas de depuración y resolución de problemas en tus programas.",
        "Manejo de excepciones, recursividad y estructuras de control en C#.",
        "Iniciarte en el ecosistema .NET para crear aplicaciones reales."
      ],
      "course_content": {
        "INTRODUCCIÓN A C# Y .NET": [
          "Conoce la plataforma Udemy",
          "PREGUNTAS Y RESPUESTAS",
          "Introducción a .NET",
          "¿Cómo se crea una aplicación .NET?",
          "Nota antes de descargar Visual Studio",
          "Descargar un IDE para .NET (Visual Studio 2022)",
          "Un primer vistazo a Visual Studio 2022",
          "Creando un primer proyecto .NET con C#",
          "La estructura de un programa en C# (El explorador de soluciones y los Namespace)",
          "La estructura de un programa en C# (Las clases y los métodos)",
          "Escribiendo nuestra primera aplicación \"Hola Mundo\"",
          "Compilar y ejecutar una aplicación de consola",
          "TIP: Evitar que se cierre la consola",
          "Detectando errores en el programa",
          "Información sobre las tareas",
          "TAREA #1",
          "Resolución de la TAREA #1",
          "INTRODUCCIÓN A C# Y .NET"
        ],
        "ELEMENTOS BÁSICOS DE UN PROGRAMA DE COMPUTADORA": [
          "C# y los programas de computadora",
          "El orden en los programas de computadora",
          "Corregir los errores de sintaxis",
          "Diferencias entre Write y WriteLine",
          "Introducción a las variables",
          "Tipos de variables",
          "Declaración de una variable",
          "Inicializar una variable",
          "Comentarios en el programa",
          "Mostrar los valores de las variables en la consola",
          "TIP: Mostrar mensajes muy grandes en el editor",
          "Operadores aritméticos 1: Suma, Resta y Multiplicación",
          "Operadores aritméticos 2: División",
          "Operadores aritméticos 3: Resto",
          "Jerarquía de operaciones / Prioridad de operadores",
          "Pedirle datos al usuario, el método ReadLine()",
          "Convirtiendo una cadena en tipo numérico",
          "TIP: Convertir una cadena sin usar variables de tipo string",
          "La programación estructurada",
          "Los diagramas de flujo",
          "Ejercicio: Planteamiento del problema",
          "Ejercicio: Algoritmo y pseudocódigo",
          "Ejercicio: Diagrama de flujo",
          "Ejercicio: Codificando el problema",
          "TAREA #2",
          "Resolución de la TAREA #2",
          "ELEMENTOS BÁSICOS DE UN PROGRAMA"
        ],
        "LA TOMA DE DECISIONES EN C#": [
          "Introducción a la toma de decisiones",
          "El tipo de dato bool",
          "Operadores de igualdad",
          "Operadores de comparación",
          "Palabras clave en C# (Keyowrds)",
          "La instrucción de selección \" if \"",
          "Múltiples sentencias en if",
          "La instrucción de selección \"else\"",
          "if anidados",
          "La escalera if-else",
          "La estructura \"else if\"",
          "Operadores lógicos booleanos",
          "Operador Negación !",
          "Operador AND &&",
          "Operador OR | |",
          "Ejercicio con operadores lógicos booleanos",
          "La instrucción de selección \"switch\"",
          "Ejercicio con switch",
          "Secciones switch",
          "Etiqueta case default",
          "Ejercicio \"Remplazando if-else por switch\"",
          "Las constantes",
          "TAREA #3",
          "Resolución de la TAREA #3",
          "TOMA DE DECISIONES"
        ],
        "LOS CICLOS": [
          "Instrucciones de iteración",
          "Los operadores de incremento y decremento",
          "Cuándo usar instrucciones de iteración",
          "La instrucción de iteración \"for\"",
          "Secciones for: Inicialización",
          "Secciones for: Condición",
          "Asignación compuesta",
          "Secciones for: Iterador",
          "Contador",
          "Acumulador",
          "Ejercicio con la instrucción \"for\"",
          "Segundo ejercicio con \"for\"",
          "La instrucción de iteración \"while\"",
          "Ejercicio con \"while\"",
          "La instrucción de iteración \"do\"",
          "Ejercicio con \"do\"",
          "Instrucciones de iteración anidadas",
          "Analizando la ejecución de una instrucción anidada",
          "TAREA #4",
          "Resolución de la TAREA #4 Parte 1",
          "Resolución de la TAREA #4 Parte 2",
          "LOS CICLOS"
        ],
        "LOS MÉTODOS": [
          "Introducción a los métodos",
          "Sintaxis de un método",
          "Métodos sin parámetros, ni tipo",
          "Invocación de un método sin parámetros, ni tipo",
          "Métodos que devuelven un tipo",
          "Invocación de un método que devuelve un tipo",
          "Métodos que contienen parámetros",
          "Invocación de un método con parámetros",
          "Métodos con parámetros que devuelven un tipo",
          "Optimizando con métodos",
          "Pasar por referencia vs. pasar por valor",
          "La palabra clave \"out\"",
          "Variables locales con asignación implícita de tipos",
          "El tipo de dato \"tupla\"",
          "Mostrando los campos de una tupla",
          "Devolviendo múltiples valores con \"return\"",
          "TAREA #5",
          "Resolución de la TAREA #5 Parte 1",
          "Resolución de la TAREA #5 Parte 2",
          "LOS MÉTODOS"
        ],
        "LAS MATRICES": [
          "Introducción a las matrices",
          "Matrices unidimensionales (declaración)",
          "Matrices unidimensionales (instancia)",
          "Inicialización de una matriz unidimensional",
          "Acceder a los elementos de una matriz unidimensional",
          "Acceder a los elementos de una matriz usando instrucciones de iteración Parte 1",
          "Acceder a los elementos de una matriz usando instrucciones de iteración Parte 2",
          "Ejercicio con matrices unidimensionales Parte 1",
          "Ejercicio con matrices unidimensionales Parte 2",
          "Introducción a las matrices multidimensionales",
          "Matrices multidimensionales (declaración e instancia)",
          "Matrices multidimensionales (inicialización)",
          "Acceder a los elementos de una matriz multidimensional",
          "Acceder a una matriz multidimensional usando instrucciones de iteración",
          "Ejercicio con matrices multidimensionales Parte 1",
          "Ejercicio con matrices multidimensionales Parte 2",
          "Introducción a las matrices escalonadas (jagged)",
          "Matrices escalonadas (declaración e instancia)",
          "Matrices escalonadas (inicialización)",
          "La propiedad “Length”",
          "Acceder a los elementos de una matriz escalonada",
          "Acceder a los elementos de una matriz escalonada con instrucciones de iteración",
          "Ejercicio con matrices escalonadas Parte 1",
          "Ejercicio con matrices escalonadas Parte 2",
          "El método \"GetLenght\"",
          "Pasar matrices como argumentos",
          "Matrices con asignación implícita de tipos",
          "TAREA #6",
          "Resolución TAREA 6 Parte 1 (Explicación y Diagrama)",
          "Resolución de la TAREA 6 Parte 2 (Código)",
          "Resolución de la TAREA 6 Parte 3 (Ejecución)",
          "LAS MATRICES"
        ],
        "LAS CLASES": [
          "NOTA IMPORTANTE",
          "La programación orientada a objetos",
          "El objeto y las clases",
          "Miembros de la clase",
          "Modificadores de acceso",
          "Declaración de una clase",
          "Diagramas UML",
          "Creando un objeto (instanciar una clase)",
          "Memoria Stack vs Heap Parte 1",
          "Memoria Stack vs Heap Parte 2",
          "Acceder a los campos de la clase",
          "Acceder a los métodos de la clase",
          "El modificador \"static\"",
          "Introducción a las propiedades",
          "Creando propiedades",
          "El descriptor de acceso “get”",
          "El descriptor de acceso “set”",
          "Miembros con forma de expresión",
          "El método ToString y el modificador “override”",
          "Invalidando el método ToString",
          "El constructor",
          "Sobrecargar un método",
          "La clase Random",
          "Ejercicio con clases Parte 1 (Diagrama UML y de Flujo)",
          "Ejercicio con clases Parte 2 (Creando la clase)",
          "Ejercicio con clases Parte 3 (Trabajando en Main)",
          "TAREA #7",
          "Resolución de la TAREA 7 Parte 1",
          "Resolución de la TAREA 7 Parte 2",
          "LAS CLASES"
        ],
        "LAS COLECCIONES GENÉRICAS": [
          "Introducción a las colecciones",
          "Tipos de referencia integrados",
          "El tipo \"object\"",
          "Conversión de tipos y la expresión cast",
          "Conversión Boxing y Unboxing",
          "Los “genéricos”",
          "Ejemplo sin genéricos Parte 1",
          "Ejemplo sin genéricos Parte 2",
          "Ejemplo con genéricos",
          "La colección genérica \"List<T>\"",
          "Agregando elementos a la List",
          "Mostrando información de una List con la propiedad \"Count\"",
          "La instrucción de iteración \"foreach\"",
          "Insertar un elemento en la List",
          "Encontrar un elemento en la List",
          "Ejemplo con List, Parte 1",
          "Ejemplo con List, Parte 2",
          "La colección genérica \"Stack<T>\"",
          "Agregando elementos al Stack",
          "Quitar y obtener elementos del Stack",
          "Encontrar un elemento en el Stack",
          "La colección genérica “Queue<T>”",
          "Agregar, quitar y recorrer objetos del Queue",
          "La colección genérica “Dictionary<TKey, TValue>\"",
          "Agregar elementos y recorrer Dictionary",
          "La propiedad \"Item[ ]\"",
          "Quitar y encontrar elementos del Dictionary",
          "Ejercicio con Dictionary Parte 1",
          "Ejercicio con Dictionary Parte 2",
          "TAREA #8",
          "Resolución de la TAREA #8",
          "LAS COLECCIONES GENÉRICAS"
        ],
        "LAS CADENAS": [
          "Introducción a las cadenas",
          "Creando la instancia de un objeto String",
          "Concatenar cadenas",
          "Concatenar cadenas usando métodos",
          "Separar cadenas con el método Split",
          "Cómo buscar cadenas",
          "Inmutabilidad de los objetos de tipo String",
          "Modificar cadenas",
          "La clase StringBuilder",
          "Comparar y ordenar cadenas",
          "Comparación ordinal de cadenas",
          "Comparación ordinal sin distinción entre mayúsculas y minúsculas",
          "Conversión entre mayúsculas y minúsculas",
          "El método “Compare”",
          "Comparaciones lingüísticas y referencias culturales",
          "Rellenar cadenas con PadLeft y PadRight",
          "Las secuencias de escape Parte 1",
          "Las secuencias de escape Parte 2",
          "Las cadenas de formato: los formatos compuestos",
          "Las cadenas de formato: la interpolación de cadenas",
          "Estructura de una cadena interpolada",
          "Cadenas con formato numérico estándar",
          "Cadenas con formato numérico personalizado",
          "El carácter especial “identificador textual” @",
          "La estructura “DateTime”",
          "Aplicar formato estándar a objetos DateTime",
          "Aplicar formato personalizado a objetos DateTime",
          "Literales de carácter y especificadores de separador de fecha y hora",
          "Convertir cadenas en objetos DateTime",
          "Ejercicio final “Generador de contraseñas” (Diagrama de flujo)",
          "Ejercicio final “Generador de contraseñas” (Codificación Clase Parte 1)",
          "Ejercicio final “Generador de contraseñas” (Codificación Clase Parte 2)",
          "Ejercicio final “Generador de contraseñas” (Codificación Main)",
          "Ejercicio final “Verificador de contraseñas” (Diagrama de flujo)",
          "Ejercicio final “Verificador de contraseñas” (Codificación Método Parte 1)",
          "Ejercicio final “Verificador de contraseñas” (Codificación Método Parte 2)",
          "Ejercicio final “Verificador de contraseñas” (Codificación Main)",
          "TAREA #9",
          "Resolución de la TAREA #9 Parte 1",
          "Resolución de la TAREA #9 Parte 2",
          "LAS CADENAS"
        ],
        "ESTRUCTURAS Y ENUMERACIONES": [
          "Un repaso por los tipos de dato en C#",
          "Introducción a las estructuras (declaración e instancia)",
          "Diferencias entre una estructura y una clase Parte 1",
          "Diferencias entre una estructura y una clase Parte 2",
          "Elegir entre clase y estructura Caso 1",
          "Elegir entre clase y estructura Caso 2",
          "El constructor de una estructura y sus limitantes",
          "Pasar estructuras como argumentos y parámetros",
          "Estructuras anidadas Parte 1 (Introducción)",
          "Estructuras anidadas Parte 2 (TIP para darles propiedades a los campos)",
          "Estructuras anidadas Parte 3 (Accediendo a los campos)",
          "Inicializadores de objetos",
          "Inicializadores de objetos para estructuras anidadas",
          "Matrices de estructuras",
          "Matrices de estructuras dentro de estructuras",
          "Ejercicio con estructuras Parte 1 (Clase y Estructura)",
          "Ejercicio con estructuras Parte 2 (Métodos)",
          "Ejercicio con estructuras Parte 3 (Eliminar elementos de una matriz)",
          "Ejercicio con estructuras Parte 4 (Main)",
          "Introducción a las enumeraciones (definición)",
          "Declaración de un enum",
          "Variables de tipo enumerado",
          "Las enumeraciones y su tipo subyacente",
          "La clase \"Enum\"",
          "La clase \"Type\" y el operador \"typeof\"",
          "Mostrando información de los tipos usando “System.Reflection”",
          "Los métodos “GetProperties” y “GetMethods”",
          "El método \"GetValues\"",
          "Iterar una enumeración de forma sencilla",
          "El método “Parse”",
          "Crear un menú de opciones usando “enums”",
          "Ejercicio con enumeraciones Parte 1 (explicación, enums y clase Jugador)",
          "Ejercicio con enumeraciones Parte 2 (métodos para escoger personaje)",
          "Ejercicio con enumeraciones Parte 3 (métodos para escoger arma)",
          "Ejercicio con enumeraciones Parte 4 (métodos para atacar, defender y salud)",
          "Ejercicio con enumeraciones Parte 5 (la clase Batalla)",
          "Ejercicio con enumeraciones Parte 6 (Main y resumen de la batalla)",
          "TAREA #10",
          "Resolución de la TAREA #10 Parte 1 (Inventario de celulares)",
          "Resolución de la TAREA #10 Parte 2 (Reserva de vuelos)",
          "ESTRUCTURAS Y ENUMERACIONES"
        ]
      },
      "requirements": [
        "No necesitas conocimientos previos de programación.",
        "Solo necesitas una computadora con Windows",
        "Conexión a internet para descargar herramientas y seguir el curso.",
        "Muchas ganas de aprender algo nuevo y útil.",
        "Unicamente es necesario que sepas usar la computadora en nivel básico, moverte por las pantallas, dar click a algo, nada muy difícil."
      ],
      "description": "¡CONVIÉRTETE EN PROGRAMADOR C# DESDE CERO!\n\n¿Siempre has querido aprender a programar, pero no sabes por dónde empezar? Este curso está pensado para ti: una persona sin experiencia previa, pero con muchas ganas de aprender una habilidad útil, moderna y con salida laboral.\nC# con .NET es una de las tecnologías más poderosas y demandadas del mercado, y aquí aprenderás a dominarla desde cero, de forma clara y práctica.\n\n¿QUÉ LOGRARÁS EN ESTE CURSO?\nAprenderás C# desde los fundamentos, con explicaciones paso a paso.\nEntenderás cómo usar Visual Studio 2022 para escribir, compilar y depurar tu código.\nTe introducirás en la lógica de programación, algoritmos y estructuras básicas.\nCrearás tus propios programas con .NET en consola.\nAprenderás a usar Git y GitHub como lo hacen los profesionales.\nTendrás una base sólida para dar el siguiente paso hacia apps, videojuegos, páginas web o software de escritorio.\n\n¿QUÉ HACE DIFERENTE A ESTE CURSO?\nNo es uno de esos cursos donde solo copias y pegas código sin entender nada.\nAquí todo se explica desde cero, con un enfoque didáctico, progresivo y amigable.\nNo necesitas conocimientos previos. Solo ganas de aprender y una computadora. Yo me encargo del resto.\n¿Y SI QUIERO CREAR VIDEOJUEGOS O APLICACIONES?\n¡Perfecto! Todo comienza con una buena base de programación, y eso es justo lo que vas a obtener.\nCon Unity, puedes crear videojuegos con C#.\nCon .NET, puedes desarrollar aplicaciones para Windows, web o dispositivos móviles.\nY con Visual Studio, tendrás una de las herramientas más potentes para desarrolladores.\nEste curso te abre las puertas a todas esas posibilidades.\n\nNO ES MAGIA... ¡ES PROGRAMACIÓN!\nAprender C# no es tan difícil como parece.\nEs como aprender un idioma que tú y tu computadora entienden, pero que puede cambiar tu vida profesional.\nInscríbete hoy y empieza a programar con C# como un verdadero profesional.",
      "target_audience": [
        "Personas que nunca han programado antes y quieren aprender desde cero con C#.",
        "Estudiantes que desean entender la lógica de programación y el pensamiento computacional.",
        "Aspirantes a desarrolladores de software que buscan una base sólida en .NET.",
        "Interesados en crear programas de consola, sentar bases para videojuegos, apps o software.",
        "Quienes desean usar herramientas profesionales como Visual Studio, Git y GitHub.",
        "Aspirantes a desarrolladores de software, videojuegos o aplicaciones.",
        "Aquellos que quieren comenzar una carrera en programación, con una base clara y bien explicada."
      ]
    },
    {
      "title": "Curso Completo sobre Desarrollo desde 0 a Experto.+50 Horas.",
      "url": "https://www.udemy.com/course/master-desarrollo-pablo-tilotta-alvaro-chirou-python-golang-hacking/",
      "bio": "Todas las tecnologías que debes conocer para trabajar como Desarrollador: Programación, Linux, Cloud, Seguridad inf. etc",
      "objectives": [
        "Tendrán acceso a más de 9 cursos completos para todos los niveles",
        "Aprenderán los conceptos básicos de programación , con ejercicios y buenos tips",
        "Accederán a un curso completo de HTML5 y CCS3 (diseño Web)",
        "Tendrán un curso super completo de Python 3 - Aprender ejercitando",
        "Aprenderán los conceptos de Bases de Datos y manejarán una BD Real con miles de registros",
        "Aprenderán el moderno y versátil lenguaje GO (creado por Google)",
        "Desarrollarán paso a paso un VideoJuego Arcade (Arkanoid) con C++ y Allegro",
        "Te enseñaremos a montar tu propio Ecommerce con Wordpress y todos los Plugins necesarios",
        "Accederán a un curso completo de Linux desde 0",
        "Seguridad Informática",
        "Accederán a un curso completo de Hacking con python 3",
        "Cloud",
        "Mysql en AWS"
      ],
      "course_content": {
        "Introducción": [
          "Recomendaciones para una mejor experiencia en el curso",
          "Recuerda que cuentas con nuestro asesoramiento y respuestas a tus preguntas"
        ],
        "Introducción a la programación": [
          "Introducción a la programación",
          "Como piensa un Programador ?",
          "Datos de un Sistema",
          "Conceptos de Variables, Constantes y Punteros",
          "Google Blockly - Nuestra herramienta de aprendizaje",
          "Sentencias y Secuencias",
          "Estructuras de Decisión & Operadores Lógicos",
          "Estructuras de Iteración",
          "Ejercicios Prácticos 1",
          "Rutinas y Funciones",
          "Validaciones",
          "Manejo de Errores y Excepciones",
          "Ayudas y Leyendas",
          "Práctica Final"
        ],
        "HTML5 y CSS3": [
          "Preparamos el entorno de trabajo.",
          "¿Que es HTML5?",
          "Etiquetas nuevas en HTML5",
          "Estructura de un HTML",
          "Header",
          "Etiquetas h1 h2 h3",
          "hgroup",
          "nav, ul, ol y li",
          "Enlaces",
          "p, strong, em",
          "Section",
          "Article",
          "Aside",
          "Div",
          "Footer",
          "Figure, figcaption, img | Audio | Video",
          "Etiquetas de formulario",
          "Introducción a CSS y que es",
          "Sintaxis de CSS y damos estilos.",
          "Porque Normalize",
          "Modernizer compatibilidad entre navegadores",
          "Prefijos"
        ],
        "Desarrolle un VideoJuego desde 0 con C++": [
          "Introducción al Curso",
          "Instalando CODEBLOCKS",
          "Descargando el compilador MINGW",
          "Instalando ALLEGRO",
          "Descarga de Recursos",
          "Creando nuestra carpeta de trabajo y los INCLUDE necesarios",
          "Creando nuestra estructura básica",
          "Declarando los objetos",
          "Edición de las imágenes",
          "Cargando las imágenes a nuestro programa",
          "Cargando y configurando los sonidos al juego",
          "Manejo de teclado",
          "Armando nuestro buffer y Screen",
          "Programando el esqueleto funcional de nuestro juego",
          "Tratamiento de fuentes y textos con ttf2pcx y grabber",
          "Armando los ladrillos y levels",
          "Algoritmos de movimiento de nuestra base y pelota",
          "Detección de colisiones y jugabilidad",
          "Programación de pasaje de nivel y dificultad",
          "Lectura y escritura de archivos para nuestro Highscore"
        ],
        "Crea tu pagina web y tienda virtual con el CMS Wordpress.": [
          "Que es Wordpress",
          "Hosting",
          "FTP para transferir los archivos",
          "Instalamos el wordpress desde el hosting (opción fácil)",
          "Instalamos el wordpress de forma manual",
          "Aclaraciones sobre la configuración de wordpress para la forma manual.",
          "Introducción para instalar wordpress de forma local",
          "Descarga de Xampp y posibles errores o dificultades en la instalación",
          "Instalación de Wordpress en nuestra Pc",
          "Empezamos conociendo nuestro panel de Administración",
          "Apariencia de nuestra web - Temas",
          "Editamos nuestro tema.",
          "Plugin Formulario de contacto para que se comuniquen con nosotros.",
          "Instalamos nuestro E-commerce woocomerce.",
          "Configuramos y ordenamos nuestro menu",
          "Como crear Categorías y Detallamos las opciones para crear un producto",
          "Configuraciones y beneficios de nuestro woocommerce (pagos por paypal Ej.)",
          "Ejecutamos el circuito de una compra en nuestro e commerce.",
          "Plugin recomendados para seguridad"
        ],
        "Introducción a las Bases de Datos": [
          "Que son las Bases de Datos",
          "Concepto de Motores de Bases de Datos",
          "Concepto de Tablas",
          "Concepto de Campos",
          "Concepto de Indices",
          "Que es MySQL ?",
          "Instalando MySQL en mi PC",
          "Instalando HeidiSQL en mi PC",
          "Conectando al servidor de Bases de Datos",
          "Creando nuestra primera Base de Datos",
          "Creando tablas y campos",
          "Tipos de Datos en MySQL e índices (Última parte)",
          "Descargar Archivo SQL de Ejemplo",
          "Importar Datos desde un archivo SQL",
          "Herramientas adicionales de HeidiSQL",
          "Exportando datos en HeidiSQL",
          "Generador de Consultas",
          "Normalización : La primera forma normal",
          "Normalización : La segunda forma normal",
          "Normalización : La tercera forma normal",
          "Buenas Prácticas - Mas Tablas - Menos Columnas",
          "Buenas Prácticas - Mas Registros - Menos Columnas",
          "Buenas Prácticas - Usar valores Default",
          "Buenas Prácticas - Usar campos de Estado",
          "Buenas Prácticas - Use Indices para cada campo Significativo",
          "Buenas prácticas - Tablas Resumen",
          "Lenguaje SQL : Introducción al Lenguaje de Bases de Datos",
          "Lenguaje SQL : Consultar nuestras tablas (Sentencia SELECT)",
          "Lenguaje SQL : Clausula WHERE",
          "Lenguaje SQL : Unión de Tablas con la clausula WHERE",
          "Lenguaje SQL : Clausula Order By",
          "Lenguaje SQL : Funciones Sum() Count() Max() AVG() min()",
          "Lenguaje SQL : Clausula Group By",
          "Lenguaje SQL : Clausula IN / NOT IN",
          "Lenguaje SQL : Clausula BETWEEN",
          "Lenguaje SQL : Clausula LIKE",
          "Lenguaje SQL : Clausula INNER JOIN (Unión de Tablas)",
          "Lenguaje SQL : Clausula LEFT, RIGHT y FULL JOIN (Unión de Tablas)",
          "Lenguaje SQL : Funciones básicas en MySQL",
          "Lenguaje SQL : Clausula HAVING",
          "Lenguaje SQL : Instrucción INSERT (adicionando datos a nuestras tablas)",
          "Lenguaje SQL : Instrucción UPDATE (Actualizando datos de nuestras tablas)",
          "Lenguaje SQL : Instrucción DELETE (Borrando registros en la Base de Datos)",
          "Lenguaje SQL : SubConsultas",
          "Como obtener un nivel Intermedio y Avanzado"
        ],
        "Lenguaje de Programación GO (2023)": [
          "Lineamiento de GO",
          "Instalando GO",
          "Configurando GO y el entorno",
          "Instalando y configurando GIT - GITHUB",
          "Instalando y configurando Visual Studio Code",
          "Iniciando nuestro proyecto de GO y el main",
          "Hola Mundo en GO",
          "Inicio con Variables e Importación de paquetes",
          "Resto Variables",
          "Funciones",
          "Condicionales",
          "Ejercicio 01",
          "Captura de datos por pantalla con BUFIO",
          "Iteraciones",
          "Ejercicio 02",
          "Manejo de Archivos",
          "Funciones Anonimas y Closures",
          "Recursión",
          "Arrays & Slices",
          "Mapas en GO",
          "Estructuras POO",
          "Interfaces POO",
          "Defer Panic Recover",
          "GORoutines",
          "Channels",
          "WebServer",
          "Middlewares"
        ],
        "Desarrollando una API REST en GOLANG - Aplicación tipo Twitter": [
          "Iniciamos el desarrollo del BackEnd",
          "Conceptos iniciales de GIT",
          "GITHub, creando nuestro repositorio",
          "GIT - Instalando GIT en nuestra PC",
          "HEROKU - Creando perfil, proyecto e instalando Heroku CLI",
          "POSTMAN - Instalando la aplicación y configurando el entorno",
          "Creando nuestra BD MongoDB gratuita",
          "Modificando la Seguridad de nuestra BD para accederla Remotamente",
          "Instalando MongoDB Compass en tu PC",
          "Creando estructura de directorios",
          "Configuración de Variables de Entorno",
          "Iniciando GIT y subiendo nuestra estructura a GITHUB",
          "Instalando todas las dependencias que usaremos en nuestra aplicación",
          "Creando el MAIN.GO y la conexión a la BD",
          "Creando el modelo de USUARIOS",
          "Armado de archivo de MIDDLEWARES",
          "Rutina de ROUTERS - Registro",
          "Rutina de BD - InsertoRegistro (con bCrypt para encriptar nuestra Password)",
          "Rutina ChequeoYaExisteUsuario()",
          "Probando el EndPoint y configurando POSTMAN por primera vez",
          "Rutina de BD - IntentoLogin",
          "Rutina de ROUTERS - login",
          "JWT en GOLANG",
          "Probando el EndPoint y verificando nuestro token",
          "Models - CLAIM",
          "Rutina de MIDDLEWARE - Valido JWT",
          "Rutina de ROUTERS - ProcesoToken",
          "Rutina de BD - BuscoPerfil",
          "Rutina de ROUTERS - VerPerfil",
          "Probando este EndPoint",
          "Rutina de BD - ModificoRegistro",
          "Rutina de ROUTERS - ModificarRegistro",
          "Probando este EndPoint",
          "Rutina de BD - InsertoTweet",
          "Rutina de ROUTERS - GraboTweet",
          "Probando este EndPoint",
          "Rutina de BD - LeoTweets",
          "Rutina de ROUTERS - LeoTweets",
          "Probando este EndPoint",
          "Rutina de BD - BorroTweet",
          "Rutina de ROUTERS - EliminarTweet",
          "Probando este EndPoint",
          "Rutina de ROUTERS - SubirAvatar & SubirBanner",
          "Rutina de ROUTERS - ObtenerAvatar & ObtenerBanner",
          "Probando estos EndPoints",
          "Rutina de BD - InsertoRelacion",
          "Rutina de ROUTERS - AltaRelacion",
          "Probando este EndPoint",
          "Rutina de BD - BorroRelacion",
          "Rutina de ROUTERS - BajaRelacion",
          "Probando este EndPoint",
          "Rutina de BD - ConsultoRelacion",
          "Rutina de ROUTERS - ConsultaRelacion",
          "Probando este EndPoint",
          "Rutina de BD - LeoUsuariosTodos",
          "Rutina de ROUTERS - ListaUsuarios",
          "Probando este EndPoint",
          "Rutina de BD leoTweetsSeguidores",
          "Rutina de ROUTERS leoTweetsSeguidores",
          "Probando este EndPoint",
          "Saludo Final del BackEnd y Código Fuente"
        ],
        "Aprende Python desde 0 a Experto Practicando.": [
          "Instalación de Jupyter",
          "Como usar jupyter y código del curso (IMPORTANTE VER ESTA CLASE)",
          "Primer contacto con Python",
          "Cadena de Caracteres (parte 1)",
          "Cadena de caracteres con variables operaciones (parte 2)",
          "índice de cadenas.",
          "Listas",
          "Ingresamos datos por teclado",
          "Operadores Lógicos",
          "Operadores Racionales",
          "Expresiones anidadas y operadores de asignación",
          "If",
          "if else y elif",
          "While",
          "Práctica donde aplicamos todo lo aprendido",
          "For",
          "Tuplas",
          "Conjuntos",
          "Diccionario",
          "Pilas",
          "Colas",
          "Entradas por teclado",
          "Salida por pantalla",
          "Funciones",
          "Retorno y envío de valores",
          "Funciones argumentos parte 1",
          "Funciones argumentos parte 2",
          "Funciones argumentos parte 3",
          "Funciones recursivas e integrada",
          "Errores",
          "Exepciones múltiples",
          "Excepciones multiples e invocación de excepciones",
          "POO objetos y clases",
          "Atributos y Métodos de una clase (Parte 1)",
          "Atributos y Métodos de una clase (Parte 2)",
          "Clases - Métodos Especiales",
          "La utilidad de usar objetos embebidos",
          "Encapsulamiento",
          "Herencia",
          "Clases heredadas y polimorfismo",
          "Herencia Multiple"
        ],
        "✔HACKING Con [ Python3 ]. Audita, Defiende, Crea!. Año 2019": [
          "Introducción",
          "Recopilando información de paginas web con python.",
          "Como obtener la versión de wordpress.",
          "Como obtener el tema utilizado en wordpress",
          "Como obtener los plugins utilizados en wordpress",
          "Como obtener la versión de un Joomla",
          "Como obtener información del DNS de nuestro objetivo",
          "Como obtener los Subdominios de una web.",
          "Como detectar dominios alojados en un Servidor."
        ]
      },
      "requirements": [
        "Se recomienda tener un conocimiento Básico sobre el uso de las tecnologías de la información, es decir con el nivel de usuario que navega por internet y usa su sistema operativo, es suficiente para entender en su profundidad esta formación profesional.",
        "Computadora, puede ser con Windows, Linux o Mac.",
        "Es deseable que el tamaño de la pantalla sea por lo menos de 17'' (pulgadas) para poder ver con claridad lo que se presenta en pantalla."
      ],
      "description": "Trabaja como Desarrollador aprendiendo todo lo que debes saber desde 0\n\n\nLa demanda de trabajo a aumentado exponencialmente y se necesita muchos mas Desarrolladores.\nPero el desarrollo web implica conocimientos complementarios que no muchos saben, como ser:\n>> Curso de Programación Básica\n>> Curso de HTML5 y CCS3\n>> Curso de Javascript desde 0\n>> Curso de Aprende Python desde 0 a Experto Practicando\n>> Curso de Lenguaje GO\n>> Crea tu pagina web y tienda virtual con el CMS Wordpress.\n>> Curso de Desarrollo de VideoJuego con C++ (Juego Arkanoid)\n>> Curso de Introducción a las Bases de Datos\n>> Seguridad informática - Hacking con Python\n>> Aprende a usar Linux desde 0\n>> Seguridad informática, descubre las vulnerabilidades de aplicaciones web\n>> API Rest en GOLAND sobre aplicación tipo Twitter.\n>>  Macros con Excel con VBA desde 0.\n>>  Seguridad Web.\n>>  AWS RDS con MYSQL.\n>> Manejo de entornos Cloud\n>> Seguridad en entornos Cloud.\nPor esa razón, hemos creado esta formación profesional.\nYo soy Álvaro Chirou, tengo más de 20 Años de experiencia trabajando en Tecnología, eh dado disertaciones en eventos internacionales como OWASP, tengo más de 500.000 estudiantes en Udemy y 100 formaciones profesionales impartidas en la misma.\nEmpieza a aprender ya mismo y acompáñame en este increíble curso.\nNos vemos dentro !\nTu profesor: Alvaro Chirou\nProfesor de Udemy",
      "target_audience": [
        "Personas apasionadas por la informática que quiera aprender, desde Programación Básica, a Programación intermedia y avanzada",
        "Personas que quieran conocer todo sobre Linux",
        "Personas que ya programen, pero quieran aprender Hacking con Python 3",
        "Personas a las que no le interesen los lenguajes ni la programación, pero quieran aprender sobre Bases de Datos",
        "Personas a las que no le interesen los lenguajes ni la programación, pero quieran aprender sobre montar un Ecommerce en la Web"
      ]
    },
    {
      "title": "PHP et MySQL : la formation ULTIME",
      "url": "https://www.udemy.com/course/php-et-mysql-la-formation-ultime/",
      "bio": "Créez des sites modernes avec PHP et SQL, et concevez vos premiers projets complet dans le meilleur cours sur internet !",
      "objectives": [
        "Vous apprendrez à utiliser toutes les nouveautés de PHP",
        "Vous apprendrez à utiliser des bases de données",
        "Vous apprendrez à sécuriser vos données",
        "Vous apprendrez à envoyer des emails",
        "Vous apprendrez à utiliser les sessions / cookies",
        "Vous apprendrez à envoyer / modifier / supprimer des données",
        "Vous apprendrez à créer / écrire / modifier / supprimer des fichiers",
        "Vous apprendrez à utiliser des commentaires",
        "Vous apprendrez à utiliser des boucles",
        "Vous apprendrez à utiliser des conditions",
        "Vous apprendrez à faire des opérations",
        "Vous apprendrez à utiliser des variables"
      ],
      "course_content": {
        "Découverte": [
          "Qu’est-ce que vous apprendrez dans cette formation ?",
          "Quel contenu regarder selon mon niveau ?",
          "Qu’est-ce que PHP ?",
          "Qu’est-ce que MySQL ?",
          "Les ressources vidéos offertes"
        ],
        "Installons notre environnement": [
          "Choisissons notre éditeur de code",
          "Choisissons notre serveur local",
          "Comment poser mes questions ?"
        ],
        "Premiers pas en PHP": [
          "Configurer un serveur local",
          "Notre premier Hello World",
          "Utiliser des commentaires"
        ],
        "Les types de données": [
          "Variables",
          "Concaténer des variables : associer",
          "Exercice pratique",
          "Faire des mathématiques",
          "Mnémotechnique des opérations",
          "Exercice pratique",
          "Les tableaux",
          "Exercice final",
          "Rejoignez la Communauté des Etudiants",
          "Recevez gratuitement chaque mois un email sur les tendances du mois !"
        ],
        "Les conditions": [
          "Qu’est-ce qu’une structure de contrôle ?",
          "L’expression IF",
          "Les opérateurs logiques",
          "Mnémotechnique des opérateurs de conditionnement",
          "Les conditions multiples",
          "Les conditions ternaires",
          "L’expression IF ELSE",
          "Entraînez-vous avec des tonnes d'exercices gratuitement avec moi",
          "L’expression IF ELSE IF ELSE",
          "Utiliser des SWITCH",
          "Ecrire des conditions simples de façon concise"
        ],
        "Les boucles": [
          "Qu’est-ce qu’une boucle ?",
          "La boucle WHILE",
          "La boucle FOR",
          "La boucle FOREACH",
          "La boucle DO WHILE",
          "Utilisons des boucles imbriquées"
        ],
        "Projet #1 : Tableaux de nombres": [
          "Consignes et correction"
        ],
        "Les fonctions": [
          "Qu’est-ce qu’une fonction ?",
          "Les fonctions qui retournent une valeur",
          "EXERCICE : Une fonction pour calculer nos racines"
        ],
        "Les fonctions natives": [
          "Quelques fonctions pour les String",
          "Quelques fonctions pour les Maths",
          "Quelques fonctions pour les Tableaux",
          "Inclure un fichier dans un autre fichier"
        ],
        "Les formulaires": [
          "Qu’est-ce qu’un formulaire ?",
          "Envoyer et récupérer des informations",
          "Attention à vos données !!!",
          "Envoyer des fichiers"
        ]
      },
      "requirements": [
        "Vous devez avoir des bases en HTML (j’ai un cours ULTIME pour ça)"
      ],
      "description": "*** Le cours #1 PHP et MySQL dans le classement officiel d'Udemy ! ***\nEnvie de devenir un pro en PHP ? D’utiliser des données utilisateurs grâce à MySQL ? De créer le prochain Google ? Un nouveau Facebook ? Ou une startup ? Ce cours est fait pour vous.\nMon objectif ? Faire de cette formation LA formation ULTIME sur PHP et MySQL.\n\n\nQui suis-je ?\nEntrepreneur depuis une dizaine d’années, et développeur freelance pour le service de très grandes entreprises. Mon objectif dans ce cours a été de vous mettre à disposition tout ce que vous devez savoir pour améliorer vos compétences.\nCe cours est complet et donc massif, avec un total de plus de 13 heures de vidéos décomposées de la façon suivante :\nQu’est-ce que cette notion ?\nPourquoi l’utiliser ?\nComment l’utiliser ?\nDes exercices pratiques\nPour les plus courageux, j’ai mis aussi à disposition une partie « BONUS » et une partie « PROJETS » qui contiennent chacunes les notions les plus profondes et abouties en PHP et MySQL, mais aussi des projets complets qui vous seront utiles pour vos futurs projets, comme un Bitly ou un système d'authentification à la Netflix !\n\n\nPourquoi devais-je prendre ce cours et pas un autre ?\nLa réponse est simple : c’est la plus complète que vous pouvez trouver sur internet, et c’est certainement avec moi que vous aurez le plus d’aide, car je réponds à vos questions dans la journée. Cette formation est évolutive : je rajoute tous les mois du nouveau contenu, comme par exemple des gros projets (comme ce fut le cas avec le Bitly) , des nouvelles notions encore plus profondes et bien d’autres choses qui sont nécessaires pour rendre cette formation ULTIME.\n\n\nToujours pas convaincu ? Ce sont mes étudiants qui en parlent le mieux :)\n\"Explications vraiment claires! Très bon vulgarisateur. Camil Bisson +++++ (5/5) »\n\"Explications très claires et faciles a assimiler , le prof rend le code facile a apprendre. Jef Brunet +++++ (5/5)\"\n\"Formation de très bonne qualité ! Alexandre Audineau +++++ (5/5)\"\n\"Un très bon cours pour le moment :) Louis Nicolas connaît très bien son sujet du PHP et MySQL. Il nous montre la marche à suivre à l'aide d'exemples concrets et de nombreux exercices pour nous pratiquer. Je recommande son cours à tout débutant et même à ceux qui ont déjà des bases en PHP et MySQL, pour revoir les notions ou les perfectionner. Un 5 sur 5 bien mérité pour Louis Nicolas :D Marc-Antoine Quinn +++++ (5/5)\"\nCe ne sont qu’une partie des avis, et il en reste des centaines comme ça ! :)\n\n\nAprès cela, j'espère vous souhaiter la bienvenue en tant que nouvel étudiant dans mon cours. Je suis sûr que vous allez adorer !",
      "target_audience": [
        "Les étudiants en école d'informatique",
        "Ceux qui veulent développer leurs carrières",
        "Les passionnés",
        "Les débutants / intermédiaires / professionnels"
      ]
    },
    {
      "title": "Data Science e Machine Learning com Estatística e Python",
      "url": "https://www.udemy.com/course/data-science-e-machine-learning-com-estatistica-e-python/",
      "bio": "Formação Cientista de Dados Curso Completo de Ciência de Dados, Aprendizado de Máquina e Inteligência Artificial",
      "objectives": [
        "Fundamentos da Linguagem Python",
        "Estatística para Data Science",
        "Teoria e Prática de Modelos de Machine Learning",
        "Fundamentos de Pandas",
        "Fundamentos de Numpy",
        "Visualização de Dados com Matplotlib e Seaborn",
        "Manipulação de Time Series",
        "Introdução à Processamento de Linguagem Natural",
        "Introdução à Aprendizagem Reinforçada / Inteligência Artificial",
        "Introdução à Aprendizagem Não-Supervisionada",
        "Redução de Dimensões"
      ],
      "course_content": {
        "Introdução": [
          "Demanda",
          "Diagrama Venn da Ciência de Dados",
          "Big data",
          "Como fazer esse curso",
          "Instalação do Jupyter Notebook",
          "Jupyter notebook - Teclas Atalho",
          "NÃO PULE ESSA AULA - Download dos Recursos de Todas as Aulas"
        ],
        "Python": [
          "Recursos do Módulo",
          "Variáveis",
          "Operadores Lógicos, Aritméticos e de Comparação",
          "Métodos",
          "Listas, Tuplas e Sets",
          "Condicionais (if e else)",
          "Loops (while e for)",
          "Dicionários",
          "Compreensão de Listas",
          "Expressões Lambda"
        ],
        "Numpy": [
          "Recursos do Módulo",
          "Numpy Array",
          "Numpy Array: Operações Inteligentes",
          "Numpy Array: Slicing e Indexing",
          "Numpy Array: Múltiplas Dimensões",
          "Numpy Array: Boolean",
          "Números Aleatórios"
        ],
        "Pandas": [
          "Recursos do Módulo",
          "Comandos Básicos (head, tail, read_csv, info, describe (numérico e 'O'))",
          "Describe - Resumo Estatístico",
          "Renomear colunas",
          "Selecionar Colunas Específicas",
          "Funções Matemáticas",
          "iloc",
          "loc",
          "map e replace (Mapear e Substituir)",
          "groupby (Agrupar Por)",
          "Crosstab",
          "Ordenando Dados",
          "NaN (dropna, fillna, isnull, np.isnan)",
          "Deletando Coluna ou Linha",
          "Apply e Lambda",
          "Variáveis Dummy e Concatenação de Dados",
          "Expressões Regulares",
          "Engenharia de Recursos",
          "iterrows - Iterando Linha por LInha"
        ],
        "Visualização de Dados": [
          "Recursos do Módulo",
          "Preparando Dados Para Visualização",
          "Subplots - 1ª Forma",
          "Subplots - 2ª Forma",
          "pie e countplot",
          "countplot e hue",
          "boxplot",
          "violinplot",
          "FaceGrid com hist e barplot",
          "FacetGrid com distplot",
          "catplot do tipo \"point\"",
          "FacetGrid com pointplot",
          "Heatmap de Dados Ausentes",
          "relplot",
          "scatterplot",
          "pairplot",
          "jointplots",
          "kdeplot",
          "catplot, count e heatmap de correlações",
          "Dados Artificiais",
          "Fontes"
        ],
        "Time Series": [
          "Recursos do Módulo",
          "datetime now",
          "timedelta - Diferença de Tempo",
          "String para Data Hora (Strptime)",
          "String para data",
          "String para tempo",
          "Períodos de Tempo",
          "DatetimeIndex para String e configurações de idioma",
          "Gráfico de Datas e Valores",
          "DataFrame e time series"
        ],
        "Estatística": [
          "Recursos do Módulo",
          "Amostra e População",
          "Tipos de Dados e Níveis de Mensuração",
          "Técnicas de Amostragens",
          "Histograma I",
          "Histograma II",
          "Frequência Relativa",
          "Média, Mediana e Moda",
          "Medidas de Dispersão - Teoria",
          "Medidas de Dispersão - Prática",
          "Variância e Desvio Padrão",
          "Regra Empírica 68-95-99.7",
          "Valor-Z",
          "Tabela-Z",
          "Encontrar X",
          "Coeficiente de Variação",
          "Covariância",
          "Coeficiente de Correlação",
          "Correlação x Causalidade",
          "Correlações Espúrias",
          "Paradoxo de Simpson",
          "Probabilidade: Conceitos Gerais",
          "Probabilidade: Exercícios",
          "Eventos Independentes x Mutuamente Exclusivos",
          "Probabilidade: Probabilidade de Árvore",
          "Teorema de Bayes x Probabilidade Condicional (Cartas de Uno)",
          "Teorema de Bayes x Probabilidade Condicional (Moeda Viciada)",
          "Teorema do Limite Central: Explicação",
          "Teorema do Limite Central: Aplicando os Conceitos",
          "Teorema do Limite Central: Comprovando o TLC",
          "Teorema do Limite Central: Peso e Altura",
          "Intervalo de Confiança",
          "Teste de Hipóteses: Tribunal",
          "Teste de Hipóteses: Proporções"
        ],
        "Estatística: Regressão Linear": [
          "Recursos do Módulo",
          "Criando um DataFrame de Faturamento Mensal",
          "Criando Gráfico de Dispersão (Scatterplot)",
          "Identificando Elementos da Fórmula da Regressão Linear",
          "Aplicando a Fórmula",
          "Criando Listas de Predições",
          "Visualizando Regressão Linear",
          "R-Quadrado: Soma Quadrática dos Resíduos",
          "R-Quadrado: Soma Quadrática Total",
          "R-Quadrado: Resíduos x Médias",
          "R-Quadrado: Aplicando a Fórmula Completa",
          "Calculando RMSE",
          "RMSE e Regra Empírica",
          "Regressão Linear: StatsModel",
          "Regressão Linear: Sklearn"
        ],
        "Projeto: Regressão Linear (Predição da Idade)": [
          "Recursos do Módulo",
          "Leitura e Concatenação de dados",
          "Tradução e mapeamento de colunas",
          "Corrigindo dados nulos",
          "Correlações",
          "Extraindo Títulos - Engenharia de Recursos",
          "Averiguando informações e removendo colunas",
          "Investigando \"solteiras com pais\" - Engenharia de Recursos",
          "Implementando \"solteiras com pais\" - Engenharia de Recursos",
          "Criando variáveis dummies",
          "Definindo train/test e X/y",
          "Treinando e avaliando modelo",
          "Preenchendo dados nulos",
          "Gerando CSV \"idade_completa\""
        ],
        "Modelos Preditivos": [
          "Recursos do Módulo",
          "Tipos de Machine Learning",
          "Linear Regression",
          "Logistic Regression",
          "KNN",
          "K-Means Clustering",
          "Decision Tree",
          "Random Forest",
          "SVM",
          "Adaboost",
          "SGD",
          "Gradient Boost"
        ]
      },
      "requirements": [
        "Ter alguma experiência anterior com programação ajuda. Porém não é obrigatório, pois o curso cobre os fundamentos de programação em Python."
      ],
      "description": "Fundamentos da linguagem de programação Python , que é a principal base de linguagem para a aplicação da ciência de dados\nEstudo das principais funcionalidades da biblioteca Pandas , que é a principal biblioteca de manipulação de dados da Data Science\nEstudo das principais funcionalidades da biblioteca Numpy , que é a principal biblioteca de manipulação de operações matemáticas\nEstudo das principais bibliotecas de Visualização de Dados : Matplotlib e Seaborn\nManipulando TimeSeries, que são os tipos usados em datas e horas\nRedução de Dimensões com PCA e TSNE\nEstatística para Data Science.\nMachine Learning , com teoria e aplicação prática de estratégias básicas e avançadas\n\nIntuição e aplicação dos seguintes modelos preditivos:\nLinear_Regression (Regressão Linear)\nLogistic_Regression (Regressão Lógica)\nDecision_Tree (Árvore de Decisão)\nRandom_Forest (Floresta Aleatória)\nStochastic_Gradient_Descent (SGD)\nSupport_Vector_Machine (SVM)\nAdaBoost\nGradient_Boost (Impulsionamento Gradiente)\nK-Means_Clustering - (K-Médias de Grupos)\nK-Nearest_Neighbors (KNN)\n\n\nPROJETO: Predição da Idade dos Passageiros do Titanic (Regressão Linear)\nPROJETO: Classificação de sobrevivência dos passageiros do Titanic (Classificação)\nPROJETO: Análise de Sentimentos de Frases do Twitter (Processamento de Linguagem Natural - PLN)\nPROJETO: Funcionamento e uso do modelo de detecção e classificação de objetos em imagens e vídeos YOLO (Visão Computacional)\nPROJETO: Segregando Clientes por Padrões de Compras (Clustering)\nPROJETO: Táxi Auto-Dirigível (Aprendizagem Reinforçada)",
      "target_audience": [
        "Desenvolvedores Python de Todos os Níveis interessados em Data Science e Estatística",
        "Desenvolvedores de outra linguagem interessados em Data Science e Estatística",
        "Estudantes e Profissionais de TI interessados em ingressar no ramo de Data Science"
      ]
    },
    {
      "title": "C प्रोग्रामिंग Language",
      "url": "https://www.udemy.com/course/c-programming-language-it/",
      "bio": "बेसिक से एडवांस सी प्रोग्रामिंग लेवल",
      "objectives": [
        "C प्रोग्रामिंग लैंग्वेज के मूल सिद्धांतों को समझें",
        "दुनिया में सबसे लोकप्रिय, व्यापक रूप से इस्तेमाल की जाने वाली भाषाओं में से एक जानें",
        "Understand the variables, data types, functions, pointers, etc.",
        "उस मूल भाषा को समझें जिस पर अधिकांश आधुनिक भाषाएं आधारित हैं",
        "अपनी पहली सी भाषा आधारित परियोजना बनाएं",
        "सिस्टम / हार्डवेयर प्रोग्रामिंग के लिए उपयुक्त है",
        "उद्योगों में प्रोग्रामिंग पदों के लिए खुद को अधिक कुशल बनाएं",
        "इस कोर्स के अंत में, आप प्रोग्रामिंग का उपयोग करके विभिन्न समस्याओं को हल करते हुए, अपने एल्गोरिथ्म को लिखते हुए अपने प्रोग्राम बना पाएंगे।",
        "बुनियादी कार्यक्रमों से उन्नत स्तर सी भाषा कोड तक लिखने के लिए",
        "सी भाषा के बारे में पूर्ण प्रकटीकरण के आधार पर 101 व्याख्यान का एक पूरा पैकेज"
      ],
      "course_content": {},
      "requirements": [
        "आपको मूल बातें से सी के बारे में पता चल जाएगा- आपको किसी अन्य पिछली प्रोग्रामिंग भाषा को जानने की आवश्यकता नहीं है।"
      ],
      "description": "इस कोर्स का उद्देश्य सी भाषा को सबसे आसान तरीके से पढ़ाना है। यदि आप C प्रोग्रामिंग कोर्स सीखना चाहते हैं, लेकिन यह कैसे और कहाँ शुरू करना है, इस बारे में निश्चित नहीं है, तो यहाँ समाधान है। यह कोर्स आपको मूल प्रोग्रामिंग से पॉइंटर्स, फाइल हैंडलिंग, स्ट्रक्चर्स वाले पॉइंटर्स, आदि जैसे आसानी से मूल प्रोग्रामिंग से सी प्रोग्रामिंग भाषा सीखने में मदद करता है। हमने लिनक्स वातावरण पर पर्याप्त कार्यक्रमों के साथ पूर्ण पाठ्यक्रम को कवर किया है जो आपको अच्छे अंक प्राप्त करने, उद्योग से संबंधित परियोजनाओं को करने और नौकरी के साक्षात्कार के लिए पर्याप्त अनुभव देता है। हमने पाठ्यक्रम को इस तरह से संरचित किया है कि, प्रोग्रामिंग के शून्य अनुभव के साथ एक नौसिखिया कुछ ही दिनों में एक पेशेवर प्रोग्रामर बन सकता है लेकिन नियमित अभ्यास के साथ।\nव्याख्यान लघु और सरल अंग्रेजी और हिंदी मिश्रित भाषा में स्पष्ट रूप से समझाया गया है, जो अवधारणाओं पर एक प्रमुख ध्यान केंद्रित करता है।\n\n\nयदि आप एक नौसिखिया, या मध्यवर्ती स्तर के प्रोग्रामर या उन्नत डेवलपर हैं, तो यह पाठ्यक्रम आपको प्रोग्रामिंग के प्रत्येक पहलू को सिखाएगा।\nयह पाठ्यक्रम सी भाषा की महत्वपूर्ण अवधारणाओं को शामिल करता है। उनमें से कुछ इस तरह हैं:\nऑपरेटर्स\nDecision Making\nलूपिंग\nArrays\nFunctions\nPointers\nस्ट्रिंग्स\nStructure\nUnion\nतो आप किसका इंतज़ार कर रहे हैं? शुरुआत से उन्नत स्तर तक सी भाषा में एक क्लिक और अनुभव प्रोग्रामिंग के साथ नामांकन करें।\n\n\nNote: पाठ्यक्रम को हिंदी और अंग्रेजी मिश्रित में पढ़ाया जाता है। इसके अलावा, इस तथ्य पर विचार करते हुए कि छात्र विभिन्न देशों और क्षेत्रों से हैं, हम पाठ्यक्रम के लिए अंग्रेजी उपशीर्षक प्रदान करने पर काम कर रहे हैं।",
      "target_audience": [
        "जिस किसी को भी कोडिंग में दिलचस्पी है, उसे यह कोर्स करना चाहिए।",
        "जो कोई भी सी भाषा में नौकरी के लिए साक्षात्कार में भाग लेना चाहता है",
        "अपने पाठ्यक्रम में सी प्रोग्रामिंग के साथ या बिना छात्र",
        "स्व सिखाया कोडर्स - जो व्यवस्थित तरीके से सी प्रोग्रामिंग को महँगा करना चाहते हैं"
      ]
    },
    {
      "title": "【GAS超入門講座】2時間で基礎から応用までステップアップ",
      "url": "https://www.udemy.com/course/googleappsscript/",
      "bio": "Google Apps Scriptでスプシをデータベースにカレンダーやメール、LINE、Slackと連携、WebアプリやAPIの作成など、DXの応用まで解説｜業務効率化や自動化に挑戦したい方は必須の講座｜初めてのプログラミングにもオススメ",
      "objectives": [
        "Google Apps Script (GAS)の基礎知識",
        "JavaScriptの基礎",
        "スプレッドシートをプログラミングで操作",
        "Googleサービスとの連携",
        "Google以外のサービスとの連携",
        "Webアプリの開発",
        "DX（業務効率化・業務自動化）"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "Part.1 基本的な使い方と、スプレッドシートに ”Hello world” と表示": [
          "基本的なスクリプトエディタの使い方",
          "Google Apps Script という言語について",
          "①実行ログに「Hello World!」を表示",
          "②スプレッドシートに「Hello World!」と表示",
          "③スプレッドシートのセルの中に「Hello World!」と表示",
          "④ID指定をして、スプレッドシートのセルの中に「Hello World!」と表示"
        ],
        "Part.2 最低限、知っておいて欲しい JavaScript の型（数字、文字、配列）": [
          "定義（const, let, var）について",
          "JavaScriptの型について"
        ],
        "最低限、知っておいて欲しい JavaScript の書き方（if文、for文）": [
          "if文（条件分岐）の処理について",
          "for文（繰り返し）の処理について"
        ],
        "スプレッドシートのセルを操作（追加、取得、更新、削除）": [
          "appendRow() で行を追加",
          "getValues() で指定した範囲内のセルの中身を取得",
          "setValues() で指定した範囲内のセルに値を更新",
          "deleteRows() で行を削除"
        ],
        "スプレッドシートの中に秘密のボタンを作成": [
          "秘密のボタン「新しいタブ」を作成",
          "オリジナルの秘密のボタンを作ろう",
          "秘密のボタンから、新しいシートを作成",
          "超便利なトリガー設定について"
        ],
        "Google のアプリと連携（Googleカレンダー、Gmail など ）": [
          "Googleカレンダーアプリと連携するためのGASの準備",
          "Googleカレンダーアプリと連携するためのGASの解説",
          "Googleカレンダーの予定をGASでスプレッドシートに記載するDEMO",
          "Googleカレンダーの他の人の予定をスプレッドシートに記載",
          "Gmailアプリと連携するためのGASの準備",
          "Gmailアプリでメールを自動送信",
          "Gmailアプリでメールを自動下書き保存",
          "Gmailアプリでメール送信できる1日あたりの実行回数と制限"
        ],
        "Google 以外のアプリと連携（LINE、Slack）": [
          "LINEと連携してできること",
          "LINE Developersでアカウントを作成＆各種設定",
          "LINE Push Message",
          "LINE Reply Message",
          "slackのチャンネルにボットして通知",
          "slackボットのプログラムの解説"
        ],
        "ブラウザ上でWebアプリを作成して、世界に公開": [
          "データベースとなるスプレッドシートの準備",
          "HTMLファイルをブラウザに表示してみよう",
          "スプレッドシートをデータベースに使うWebアプリのDEMO",
          "スプレッドシートをデータベースに使うWebアプリの解説"
        ],
        "APIを作成してローカルでWebアプリを作成": [
          "インターネットの仕組みとAPIとは",
          "APIを作成するための魔法の3行",
          "魔法の3行の解説",
          "ローカルでindex.htmlというファイルを作成",
          "ローカルのindex.htmlからAPIを取得して表示"
        ]
      },
      "requirements": [
        "Google Chrome が使えるパソコン",
        "Googleのアカウント",
        "LINE のアカウント",
        "Slack のアカウント"
      ],
      "description": "プログラミングを全く知らない超初心者でも、動画の通りに手順を沿っていけば誰でも動かしながら学ぶことができます。\n業務効率化や自動化に取り組もうとしている人にとって、参考になればと思います。Google Apps Script（GAS）を普段使っている人にとっても、有意義な内容になると思います。\n◆このコースでできること\n基本的な使い方と、スプレッドシートに ”Hello world” と表示\n最低限、知っておいて欲しい JavaScript の型（数字、文字、配列）\n最低限、知っておいて欲しい JavaScript の書き方（if文、for文）\nスプレッドシートを操作（追加、取得、更新、削除、各種設定）\nスプレッドシートの中に秘密のボタンを作成\nGoogle のアプリと連携（Googleカレンダー、Gmail など ）\nGoogle 以外のアプリと連携（LINE、Slack）\nブラウザ上でWebアプリを作成して、世界に公開（デプロイ）\nWeb APIを作成して、ローカルでWebアプリ作成（中級者向け）\nボーナスレクチャー（PR）\n◆伝えたいこと\nつくれるって『楽しい！』\n便利で手軽なのに『全て無料』\n様々なWeb上のサービスと連携できる事の『可能性』\n◆事前に用意して欲しいもの\nGoogle Chrome が使えるパソコン\nGmail が送信できる Googleのアカウント\nLINE のアカウント\nSlack のアカウント",
      "target_audience": [
        "プログラミングを始めてみたい人",
        "IT系のスクールに通ったけど挫折した人",
        "社内で業務効率化や自動化をしてみたい人",
        "DX って言うけど、何から始めたら分からない人",
        "Google Apps Script を学んでみたい人",
        "IT技術を使って、何か新しいことを始めたい人"
      ]
    },
    {
      "title": "Aprende Lenguaje C++ de CERO a EXPERTO",
      "url": "https://www.udemy.com/course/aprende-lenguaje-c-desde-cero/",
      "bio": "Aprende a programar en C++ sin ningún conocimiento previo",
      "objectives": [
        "Aspectos básicos de la programación",
        "Aprender las funciones más comunes de C++",
        "Operar con diferentes variables",
        "Realizar programas simples",
        "Trabajar con datos",
        "Trabajar con clases y objetos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Instalación de CodeBlocks",
          "Primer programa"
        ],
        "Aspectos básicos de la programación en C++": [
          "Variables",
          "Tipos de datos",
          "Mostrar información",
          "Trabajando con textos",
          "Trabajando con números",
          "Comentarios",
          "Constantes",
          "Solicitar información",
          "Arrays",
          "Punteros"
        ],
        "Funciones": [
          "Declarar funciones",
          "Sentencia return"
        ],
        "Sentencias condicionales": [
          "Sentencia condicional if",
          "Sentencia condicional switch"
        ],
        "Bucles iterativos": [
          "Bucle while",
          "Bucle for",
          "Arrays 2D y bucles anidados"
        ],
        "Clases y objetos": [
          "Declarar clases y objetos",
          "Funciones de constructor",
          "Funciones de objetos",
          "Setters y Getters",
          "Herencia entre clases"
        ]
      },
      "requirements": [
        "No se requiere ninguna experiencia previa en la programación. En este curso se aprende a programar en C++ desde cero."
      ],
      "description": "Bienvenido al curso de programación en C++ de CERO a EXPERTO, el único curso que necesitas para convertirte en un desarrollador experto en C++. No importa si eres un principiante absoluto o vienes de tecnologías como Python o JavaScript. Juntos recorreremos el camino que te convertirá en un profesional de un lenguaje que es la base de la informática moderna.\nC++ es un lenguaje de programación que proviene de la extensión del lenguaje C para que pudiese manipular objetos. A pesar de ser un lenguaje con muchos años, su gran potencia lo convierte en uno de los lenguajes de programación más demandados en la actualidad.\nSi buscas programar en alto nivel, con la opción de poder bajar incluso a ensamblador, C++ sigue siendo una gran opción, ya que estamos ante un lenguaje de programación muy potente y que se ha mantenido actualizado.\nEstos son algunos de los temas que aprenderás en este curso:\nTipos de datos, variables y constantes\nOperadores\nTrabajar con textos\nTrabajar con números\nArreglos\nPunteros\nFunciones\nSentencias condicionales\nBucles iterativos\nDeclarar y trabajar con clases y objetos\nPor lo tanto, a lo largo de este completo curso, cubrimos una gran cantidad de habilidades y técnicas que incluyen las aspectos más esenciales para programar en C++ y en cualquier otro lenguaje de programación.",
      "target_audience": [
        "Este curso está dirigido a cualquier persona que esté interesada en aprender los aspectos básicos de la programación en C++"
      ]
    },
    {
      "title": "Algorithm Analysis & Design Course From A to Z [Arabic]",
      "url": "https://www.udemy.com/course/algorithm-analysis-course-from-a-to-z-arabic/",
      "bio": "T(n), Oh, Omega, Theta, Recursion, Master, Tree, Substitution, Searching, Sorting and more + practical questions",
      "objectives": [
        "Design and analysis of algorithms from Zero to Hero",
        "Analyze any Algorithm in simple and fast way",
        "Find t(n) for any algorithm",
        "Find Time Complexity",
        "Use summation symbol in Algorithm Analysis",
        "Understand Oh, Omega, Theta Notations",
        "Little Oh & Little Omega",
        "Growth Rate VS Time",
        "Deal with Recursive Functions",
        "How To Find Recursion Equation",
        "Solve recurrence: Master, Tree, Substitution Methods",
        "Space Complexity",
        "Memory Stack for space complexity",
        "Auxiliary and Input Space",
        "More examples and practice questions to measure your understand",
        "File with questions and answers to rate yourself",
        "Linear Search, Binary Search",
        "Insertion sort",
        "Selection sort",
        "Quick sort",
        "Stability + in-place & out-of-place",
        "Algorithm design techniques",
        "English subtitle is available"
      ],
      "course_content": {},
      "requirements": [
        "معرفة اي لغة برمجة بمستوى مبتدئ",
        "Basic Knowledge of any programming language"
      ],
      "description": "Algorithm used in everywhere. People Don't know how Complex algorithms they are executing when doing their day to day task and which algorithm to choose from multiple alternatives. The algorithm is the concept which differentiates intermediate and better developer.\n\n\nMore than 80% of the fresh graduates don't have basic knowledge about algorithm analysis and design. So, we offer this course to help understand what is algorithm and how to analyze it to choose best one. Also to improve your logical thinking abilities.\n\n\nأهلا بك في الكورس الأول والأفضل في مناقشة وشرح تحليل وتصميم الخوارزميات. سوف تحصل على 8 ساعات و 21 دقيقة من الشرح التفصيلي والامثلة التطبيقية. تحليل وتصميم الخوارزميات هنا هو ليس شرح مواضيع منفصلة وانما هي حكاية وقصة مترابطة. أيضا في نهاية الكورس ستحصل على ملف اسئلة مختلفة شاملة اسئلة اختيارية مع الاجابة (28 سؤال مختلف) لتقيم مدي استيعابك وفهمك للكورس.\n\n\nWelcome to the first and best course in discussing and explaining algorithm analysis and design. You will receive 8 hours and 21 minutes of detailed explanations and practical examples. Algorithm analysis and design here is not just about explaining separate topics, but it is a connected story and narrative. Also, at the end of the course, you will receive a comprehensive file of different questions, including multiple-choice questions with answers (28 different questions) to assess your understanding and comprehension of the course\n\n\nWhat you are Going to Learn?\nIntroduction: including all basic concepts you must know.\n\n\nLearn How to calculate time for any algorithm (Time complexity) and what is T(n), different techniques including summation rules and how to convert loops to summation which are helpful in calculating T(n).\n\n\nUnderstand Asymptotic notations (Oh, Omega, Theta, Little Oh, Little Omega) with their mathematical definition [Worst Case, Best Case, Average Case].\n\n\nGrowth Rate VS Time and how to sort based on each one + all possible equations you may get.\n\n\nWhat is recursion and how to find the Recursion equation.\n\n\nSolve recurrence using Master theorem.\n\n\nSolve recurrence using Tree method\n\n\nSolve recurrence using Substitution method [Guess and verify VS Plug and chug] and much more.\nSpace Complexity.\n\n\nLinear (Sequential) Search.\nBinary Search\nInsertion Sort\nSelection sort\nStability\nIn-place VS Out-of-place\nQuick sort\nAlgorithm Analysis Techniques:- (brute force, Divide&Conquer, Greedy and so on)\n\n\n\n\nAlso, you will get up to 3hr different practical questions including advanced questions which maximize your knowledge curve.\nYou will get a Solved Exam at the end of this course to train your self and rate your gained knowledge.",
      "target_audience": [
        "Computer science students",
        "Who wants to improve his mentality during the development of programs",
        "Who wants to analyze algorithms to find the best one from a group of alternatives."
      ]
    },
    {
      "title": "Aprenda e Domine a Linguagem C",
      "url": "https://www.udemy.com/course/aprenda-e-domine-a-linguagem-c/",
      "bio": "CURSO PRÁTICO de Desenvolvimento de programas. Aprenda e domine a programação de computadores usando a Linguagem C",
      "objectives": [
        "Dominar as técnicas básicas da programação de computadores com o uso da Linguagem C.",
        "Aprenda e domine a Linguagem C de forma prática, usando muitos exercícios, que irão apresentar a estrutura da programação estruturada com a Linguagem C. CURSO PRATICO, com a abordagem MÃO NA MASSA.",
        "Identificar e usar as estruturas básicas de programação de computadores (tipos de dados, variáveis, Desvios condicionais, Laços de repetição) que serão utilizadas em todas as linguagens de programação e em todos os programas que o aluno for realizar em sua profissão como programador de computadores.",
        "Usar o raciocínio lógico aplicado na linguagem C.",
        "Você poderá aplicar os conhecimentos aqui adquiridos em qualquer linguagem de programação, seja para o desenvolvimento web como PHP, Java, Asp, ou para o ambiente mobile, pois todas estas linguagem utilizam estas técnicas básicas.",
        "A Linguagem C está na maioria das Universidades brasileiras e estrangeiras, e nos cursos como Engenharia da Computação, Sistemas para Internet, Ciência da Computação, Engenharia de Software, utilizam a linguagem C em suas disciplinas de início do curso, sendo este curso um reforço para os alunos destes cursos."
      ],
      "course_content": {
        "Introdução": [
          "Bem Vindo",
          "Como estudar online",
          "Desenvolvimento de software",
          "Compiladores para a Linguagem C",
          "Instalando o Visual Studio",
          "Instalando o Template para o Visual C++",
          "Instalando o Visual Studio Community 2019",
          "Questionário sobre a Introdução"
        ],
        "O primeiro programa em C": [
          "Ambiente de desenvolvimento do Visual Studio",
          "Editando o primeiro programa",
          "Apresentando uma string na tela",
          "Compilando o programa",
          "Executando o programa",
          "Verificando erros de codificação",
          "Encerrando o Visual Studio",
          "Área de trabalho do VS 2019",
          "Exercício 001 - Proposta",
          "Exercício 001 - Correção",
          "Questionário sobre o Primeiro programa em C"
        ],
        "Detalhes da Sintaxe da Linguagem C": [
          "Estrutura de arquivos do projeto",
          "Abrindo um programa já salvo",
          "Fazendo uma pausa no final do programa",
          "Pausa na tela no VS 2019",
          "Case Sensitive, identação, Comentários",
          "Tabela de códigos na string",
          "Códigos de Escrita na tela",
          "Conteúdo necessário para resolver os exercícios",
          "Exercício 002 - Proposta",
          "Exercício 002 - Correção",
          "Exercício 003 - Proposta",
          "Exercício 003 - Correção",
          "Exercício 004 - Proposta",
          "Exercício 004 - Correção",
          "Questionário sobre os Detalhes da Sintaxe da Linguagem C"
        ],
        "Variáveis": [
          "Variáveis",
          "Usando variáveis na Linguagem C",
          "Regras de nomes de variáveis",
          "Declaração de variáveis em um programa",
          "Tipos de dados das variáveis",
          "Inicializando variáveis",
          "Exercício 005 - Proposta",
          "Exercício 005 - Correção",
          "Exercício 006 - Proposta",
          "Exercício 006 - Correção",
          "Exercício 007 - Proposta",
          "Exercício 007 - Correção",
          "Questionário sobre Variáveis"
        ],
        "Funções de Entrada e de Saída de dados": [
          "Entrada, Processamento e saída",
          "Lendo dados numéricos do paralelepípedo",
          "Lendo dados numéricos inteiros",
          "Tipo de dado string em C",
          "Lendo dados do tipo string",
          "Operadores aritméticos",
          "Exercício 008 - Proposta e Correção",
          "Exercício 009 - Proposta",
          "Exercício 009 - Correção",
          "Exercício 010 - Proposta",
          "Exercício 010 - Correção",
          "Exercício 011 - Proposta",
          "Exercício 011 - Correção",
          "Exercício 012 - Proposta",
          "Exercício 012 - Correção",
          "Questionário sobre Funções de Entrada e de Saída de dados"
        ],
        "Estrutura de Decisões": [
          "O que são Estruturas de Decisão?",
          "Operadores relacionais",
          "Desvio Condicional Simples",
          "Exercício 013 - Proposta",
          "Exercício 013 - Correção",
          "Desvio Condicional Composto",
          "Exercício 014 - Proposta",
          "Exercício 014 - Correção",
          "Exercício 015 - Proposta",
          "Exercício 015 - Correção",
          "Exercício 016 - Proposta",
          "Exercício 016 - Correção",
          "Exercício 017 - Proposta",
          "Exercício 017 - Correção",
          "Desvio condicional Encadeado",
          "Exercício 018 - Proposta e Correção",
          "Exercício 019 - Proposta",
          "Exercício 019 - Correção",
          "Exercício 020 - Proposta",
          "Exercício 020 - Correção",
          "Desvio Condicional de Múltiplos Casos",
          "Exercício 021 - Proposta e Corrreção",
          "Exercício 022 - Proposta",
          "Exercício 022 - Correção",
          "Questionário sobre Estruturas de Decisões"
        ],
        "Estruturas de Repetição": [
          "O que são Estruturas de Repetição?",
          "A Estrutura de Repetição - For",
          "Exercício 023 - Proposta e Correção",
          "Exercício 024 - Proposta",
          "Exercício 024 - Correção",
          "Exercício 025 - Proposta",
          "Exercício 025 - Correção",
          "Exercício 026 - Proposta",
          "Exercício 026 - Correção",
          "Exercício 027 - Proposta",
          "Exercício 027 - Correção",
          "Exercício 028 - Proposta",
          "Exercício 028 - Correção",
          "Estrutura de Repetição - While",
          "Exercício 029 - Proposta e Correção",
          "Exercício 030 - Proposta",
          "Exercício 030 - Correção",
          "Exercício 031 - Proposta e Correção",
          "Exercício 031 na VS 2019",
          "Exercício 032 - Proposta",
          "Exercício 032 - Correção",
          "Exercício 033 - Proposta",
          "Exercício 033 - Correção",
          "Estrutura de Repetição - Do While",
          "Exercício 034 - Proposta e Correção",
          "Exercício 035 - Proposta",
          "Exercício 035 - Correção",
          "Exercício 036 - Proposta",
          "Exercício 036 - Correção",
          "Questionário sobre Estruturas de Repetições"
        ],
        "Operadores Lógicos": [
          "Operador Lógico .E.",
          "Exercício sobre o Operador Lógico E",
          "Operador Lógico .OU.",
          "Exercício sobre o Operador Lógico OU",
          "Leitura complementar",
          "Lista de Exercícios"
        ],
        "Exercícios Adicionais Propostos": [
          "Desafio Olímpico",
          "Desafio Olímpico - Solução Parte 1",
          "Desafio Olímpico - Solução Parte 2",
          "Desafio Olímpico - Solução Parte 3",
          "Desafio Olímpico - Solução Parte 4",
          "Desafio Olímpico - Solução Parte 5 Final"
        ],
        "Códigos fontes usados no curso": [
          "Códigos fontes de exemplos e também dos exercícios."
        ]
      },
      "requirements": [
        "Não há nenhum tipo de software ou pré-requisito para fazer este curso, tudo o que for necessário o instrutor mostrará como fazer download gratuito. Não será necessário comprar qualquer software para desenvolver os exercícios do curso.",
        "Você vai ter que se envolver no curso fazendo exercícios de programação que serão apresentados como tarefas. Caso você não consiga desenvolver algum exercício a correção estará postada na aula seguinte ao exercício.",
        "O Instrutor ficará a disposição para dúvidas que vierem a ocorrer no curso. Você poderá enviar sua dúvida e o instrutor irá gravar uma resposta para você."
      ],
      "description": "Aprenda e Domine Uma Das Mais Populares Linguagens de programação: “A Linguagem C”.\nSe você é estudante de um curso universitário ou curso técnico e está tendo dificuldades com Algoritmos e Lógica de programação e com o Desenvolvimento de programas em linguagem “C”, deve começar por este curso para aprender e dominar a Linguagem C.\n\nSe você quer aprender a programar computadores este curso é ideal para você, porque vamos estudar as técnicas básicas de como fazer programas de computadores estruturados e lógicos.\nEste curso vai introduzi-lo no mundo da programação estruturada, de forma rápida e fácil.\nEm um curso com muitos exercícios práticos, acompanhados pelo professor, você vai colocar a \"mão-na-massa\" e programar na Linguagem C em apenas 7 seções.\nVocê vai começar a romper as barreiras da programação, com um futuro promissor como programador de computadores.\nTodo programador precisa de algumas técnicas básicas, aqui você vai ser introduzido a conhecer e trabalhar com elas.\nNeste curso resolvemos juntos problemas com Entrada e Saída de Dados, Desvios Condicionais e Laços de Repetição.\nProjetei este curso de programação para que fosse facilmente compreendido por alunos iniciantes,  para aqueles que tem dificuldades com a programação de computadores e também para aqueles que desejam aprender a programar computadores na Linguagem C.",
      "target_audience": [
        "Este curso é destinado para quem deseja aprender como programar um computador usando a Linguagem C.",
        "Estudantes Universitários e de cursos técnicos com dificuldades de entender a programação de computadores e a Linguagem C.",
        "Não há impedimento algum para qualquer pessoa saber programar computadores. Tenha a certeza de que é uma área que proporciona muitas oportunidades de trabalho, inclusive de trabalhar em casa como um freelance, sem a necessidade de deslocamento até uma empresa, trabalhando em seu Home Office na segurança e conforto de sua casa."
      ]
    },
    {
      "title": "Java для начинающих",
      "url": "https://www.udemy.com/course/beginners-java/",
      "bio": "Изучите основы Java",
      "objectives": [
        "Основы Java (типы данных, циклы, условные операторы, ввод данных)",
        "Объектно-ориентированное программирование (ООП)",
        "Классы, Интерфейсы, Наследование, Полиморфизм",
        "Дженерики (Generics)",
        "Исключения (Exceptions)",
        "Сериализация (Serialization)",
        "Перечисления (Enum)",
        "И многое другое"
      ],
      "course_content": {
        "Основы Java": [
          "JDK и Hello World",
          "Переменные. Примитивные типы данных.",
          "Строки(String) в Java. Ссылочные типы данных.",
          "Цикл while",
          "Цикл for",
          "Условный оператор if",
          "Ввод данных. Класс Scanner.",
          "Цикл do...while",
          "Операторы break и continue",
          "Оператор switch",
          "Массивы в Java",
          "Цикл for each, Массивы строк",
          "Многомерные массивы"
        ],
        "Объекто-ориентированное программирование (ООП)": [
          "Классы и объекты",
          "Методы в Java",
          "Тип возвращаемого значения метода",
          "Параметры метода",
          "Инкапсуляция. Сеттеры и геттеры.",
          "Ключевое слово this",
          "Конструкторы",
          "Ключевое слово static",
          "Ключевое слово final",
          "StringBuilder",
          "Форматирование строк в Java",
          "Класс Object и метод toString()",
          "Наследование",
          "Аннотация @Override",
          "Интерфейсы",
          "Пакеты",
          "Модификаторы доступа public, private, protected и default",
          "Полиморфизм"
        ],
        "Преобразование типов": [
          "Приведение примитивных типов данных",
          "Классы-обертки примитивных типов данных",
          "Восходящее и нисходящее преобразование"
        ],
        "Дженерики (Generics)": [
          "Введение в параметризацию. (Generics)",
          "Wildcards (Generics)"
        ],
        "Исключения (Exceptions)": [
          "Исключения (часть 1). Обработка исключений.",
          "Исключения (часть 2). Выбрасывание исключений.",
          "Исключения (часть 3). Checked и Unchecked исключения.",
          "Исключения (часть 4)"
        ],
        "Сериализация (Serialization)": [
          "Сериализация (часть 1)",
          "Сериализация (часть 2). Сериализация массивов.",
          "Сериализация (часть 3). Transient, serialVersionUID."
        ],
        "Продвинутые темы": [
          "Анонимные классы",
          "Чтение из файла",
          "Абстрактные классы",
          "Метод equals() и String Pool",
          "Вложенные классы",
          "Запись в файл",
          "Enum (Перечисления)",
          "Рекурсия"
        ]
      },
      "requirements": [
        "Желание научиться программировать"
      ],
      "description": "Курс ориентирован на тех людей, кто не знаком с языком программирования Java и программированием в целом, но хотел бы изучить это. В курсе детально и максимально понятно разбираются все основные и важнейшие темы языка программирования Java. После прохождения этого курса вы будете иметь крепкую базу по программированию на Java и сможете писать свои программы.",
      "target_audience": [
        "Для тех, кто хочет изучить программирование на Java"
      ]
    },
    {
      "title": "Formation Complète sur Arduino : les premiers pas vers l'IoT",
      "url": "https://www.udemy.com/course/arduino-la-formation-complete-pour-les-creatifs/",
      "bio": "Votre guide complet d'Arduino qui se concentre sur une approche simple et créative!",
      "objectives": [
        "La prise en main complète d'Arduino",
        "L'apprentissage de la programmation avec Arduino",
        "L'apprentissage de la programmation avec Processing",
        "être capable de créer ses propres prototypes et de les visualiser sur un écran d'ordinateur"
      ],
      "course_content": {
        "Introduction": [
          "Introduction à la formation",
          "Introduction",
          "La matériel",
          "Installer Arduino IDE",
          "Comprendre l'interface d'Arduino IDE",
          "Quiz (introduction)"
        ],
        "Programmation 101 pour Arduino": [
          "Communiquer et débugger",
          "Les variables",
          "Les fonctions",
          "Les conditions",
          "Les while loops",
          "Quiz (programmation 101)"
        ],
        "Arduino : Les bases": [
          "Les breadboards",
          "Le circuit",
          "Les résistances",
          "Les inputs et outputs",
          "Les schémas",
          "Les LEDs",
          "Digital, Analog et PWM"
        ],
        "Les capteurs input": [
          "Les push-buttons (la théorie)",
          "Les push-buttons (le workshop)",
          "Les toggle-switch (la théorie)",
          "Les toggle-switch (le workshop)",
          "Les potentiomètres (la théorie)",
          "Les potentiomètres (le workshop)",
          "Les capteurs de lumière (la théorie)",
          "Les capteurs de lumière (le workshop)",
          "Les capteurs de force (la théorie)",
          "Les capteurs de force (le workshop)",
          "Les capteurs de température (la théorie)",
          "Les capteurs de température (le workshop)"
        ],
        "Les moteurs": [
          "Introduction aux transistors",
          "Les DC Moteurs (la théorie)",
          "Les DC Moteurs (le workshop)",
          "Les servo-moteurs (la théorie)",
          "Les servo-moteurs (le workshop)",
          "les moteurs de vibration (la théorie)",
          "les moteurs de vibration (le workshop)"
        ],
        "Processing 101": [
          "Installer Processing IDE",
          "Processing 101 : Les bases",
          "Débugger avec Processing",
          "Processing 101 : Les formes",
          "Processing 101 : L'animation",
          "Processing 101 : L'interaction"
        ],
        "Communiquer entre Arduino et Processing": [
          "Introduction et montage",
          "D'Arduino à Processing",
          "De Processing à Arduino"
        ],
        "Communiquer entre Arduino et le Web": [
          "Introduction",
          "Le montage avec le capteur de température TMP36",
          "Introduction à Shiftr.io",
          "Communiquer entre Arduino et Shiftr.io",
          "HTML, CSS et JS : Télécharger et installer Sublime Text",
          "HTML, CSS et JS : Connecter Shiftr.io à Javascript"
        ],
        "Astuces avancées": [
          "Gérer le timing : Delay() vs Millis()",
          "Apprendre à souder"
        ]
      },
      "requirements": [
        "Aucune connaissance requise en code ou en électronique, on démarre à Zero!",
        "Le matériel Ardunio à avoir est expliqué dans la première partie",
        "Un ordinateur (Mac, Windows ou Linux)"
      ],
      "description": "Arduino est un écosystème qui permet de créer rapidement des montages interactifs. Pas seulement rapide, mais aussi très simplement et super abordable. Le code est ultra simple à utiliser, les composants s’assemblent comme des legos, bref, Arduino est là pour aider les créatifs à mettre leurs idées en œuvre, mais à ne pas perdre ce temps a devoir apprendre toute l’électronique autour !\nL’approche créative est une des valeurs en plus que cette formation offre. En effet, vous allez découvrir le langage de programmation « Processing » qui agit comme la face visuelle d’Arduino sur votre ordinateur.\nCette formation contient des tonnes de ressources. Tous les codes sources sont téléchargeables ainsi que toutes les présentations.\nVous trouverez aussi des sets exclusifs d’icône pour schématiser vos circuits !\nCette formation est designer pour les débutants et commence à zéro et grandie grâce à vous ! Si vous avez un sujet en particulier qui vous manque, ou que vous voudriez explorer plus en profondeur, n’hésitez pas à prendre contact par mail : hello@skillkitchen.co ou à travers notre page Facebook.\nSi vous êtes curieux à découvrir le monde des microcontrôleurs et à créer vous-même vos propres prototypes, suivez-moi dans cette formation qui vous prendra de zéro jusqu’à Pro !",
      "target_audience": [
        "Les débutants et intermédiaires sont les bienvenus dans ce cours",
        "Quiconque souhaitant apprendre les bases de la programmation",
        "Les amateurs d'IOT"
      ]
    },
    {
      "title": "C#文法１：C#で最初に身に着けるべき30の文法",
      "url": "https://www.udemy.com/course/cskihonnoki/",
      "bio": "C#文法基本のキ：if文などの王道の文法からクラス，インスタンス，インタフェース，抽象クラス，Disposeなど，C#初心者がつまずきそうな部分を丁寧に動画で解説しています",
      "objectives": [
        "C#初心者の為の文法の基本",
        "C#でどんなことができるかを理解できる。",
        "最初に最低限必要な文法知識を学ぶことができます。"
      ],
      "course_content": {
        "C#文法基本のキ": [
          "#00_はじめに",
          "#01 C#について",
          "#02 .NET Frameworkとは",
          "#03 ソリューションとは",
          "#04_参照関係",
          "#05_名前空間とは",
          "#06_ブロック",
          "#07_変数と定数",
          "#08A_データ型",
          "#08B_データ型の実装",
          "#09_値型と参照型",
          "#10_データ型の変換",
          "#11_配列",
          "#12_動的配列",
          "#13A_演算子の解説",
          "#13B_演算子の実演",
          "#14A_条件分岐 if文とswich文とは",
          "#14B_条件分岐 if文とswich文の実装",
          "#15_while文",
          "#16_do-while文",
          "#17_for文",
          "#18_foreach文",
          "#19_オブジェクト指向とは",
          "#20_クラスとは",
          "#20B_レクチャークラスとはの一部訂正_",
          "#21_コンストラクタとは",
          "#22A_アクセス修飾子とは",
          "#22B_アクセス修飾子_実演",
          "#23_メソッドとオーバーロードの書き方",
          "#24_フィールドと型推論",
          "#25A_インスタンスとは",
          "#25B_インスタンスの実装",
          "#26A_カプセル化とは",
          "#26B_カプセル化の実装",
          "#27A_プロパティとは",
          "#27B_プロパティの実装",
          "#28A_Disposeとは",
          "#28B_Disposeの実装方法",
          "#29A_staticとは",
          "#29B_staticの実装",
          "#30A_継承とは",
          "#30B_継承の実装",
          "#31A_オーバーライドとは",
          "#31B_オーバーライドの実装",
          "#32A_インタフェースとは",
          "#32B_インタフェースの実装",
          "#33A_抽象クラスとは",
          "#33B_抽象クラスの実装",
          "#34A_Exception_例外とは",
          "#34B_Exception_例外の実装",
          "おわりに",
          "補講01_継承についての補足",
          "補講02_継承についての補足_コードでの解説",
          "補講03_継承についての補足_継承の使いどころ_ドラクエ編",
          "補講04_ReadAllLinesのDisposeは必要か",
          "補講05_メッセージボックスを好きな場所にだしたい",
          "補講06_コンパイルエラーになるケース",
          "補講07_intにToStringがある理由",
          "補足08_画面コントロールのDisposeについて",
          "補講10_catch (Exception e) の e は不要ですか？",
          "使用したリソース",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "PC"
      ],
      "description": "この動画は、C#の初心者、またはこれからC#を学ぼうと思われている方に対して作成した物です。C#のコーディングに自信のない方のみご覧ください。\nこの動画ではC#の基本的な文法を網羅的に学ぶことができます。\n学校でプログラムを学んだことのない方は、プログラマー等の会社に就職しても最初の1年がとにかく大変だと思います。\n私は今でこそ、メーカーでプロジェクトリーダーをしており、毎年入ってくる新人の教育や、後輩のプログラムのコードレビュー等を行っていますが、17年くらい前は、全くのプログラミング初心者でした。最初に入ったプログラマーの会社でイチから勉強して今に至ります。だから、初心者の方の気持ちがすごくわかるし、どう教えれば、初心者が理解できるかもわかるつもりです。\nこの動画を観ることで次のような効果が得られます\n・簡単なプログラムは何も見ずに書けるようになる\n・基本的な文法のマスター\n・意味を理解してプログラミングできるようになる\n・オブジェクト指向は概念として講義していますが、深いレベルではありません\nこの世の中にはプログラミングの天才みたいな人がいて、ケントベックやマーチンファウラーなどの著書にくらべれば、この動画の技術レベルはそれほどではありません。オブジェクト指向などについて深く学びたい方は、そういった人の書いた本や動画をお勧めします。\nただ、この動画の良いところは、わかりやすいことです。前述したとおり、ズブの素人からこの業界に入って、苦労しまくった私だからこそ、素人の方をプロのプログラマーに教育することができると思っています。\n学校の先生の授業はわからなかったけど、その後に理解している同級生に教えてもらったら理解できたという経験はないでしょうか？あれは最近まで理解できていない人が物事を理解すると、他人へ教育するとき、わからない人の気持ちがわかっているので、解説がわかりやすくなるためです。だから私の事もちょっと先輩に教わるくらいの気持ちで、この動画を観ていただければと思います。\n\n\n#01 C#について\n#01-2 名前空間と参照関係\n#02 ブロック\n#03 値の扱い方と変数と定数\n#04 データ型\n#05 値型と参照型\n#06 データ型の変換\n#07 配列\n#08 動的配列\n#09 演算子\n#10 条件分岐 if文とswich文\n#11 while文\n#12 do-While文\n#13 for文\n#14 foreach文\n#15 オブジェクト指向\n#16 クラス\n#17 コンストラクタ\n#18 アクセス修飾子\n#19 メソッド\n#20 フィールド\n#21 インスタンス\n#22 カプセル化\n#23 プロパティ\n#24 Disposeとusing\n#25 static\n#26 継承\n#27 override（オーバーライド）\n#28 ポリモーフィズム①インタフェース編\n#29 ポリモーフィズム② 抽象クラス編\n#30 例外",
      "target_audience": [
        "C#のプログラミング初心者",
        "C#の文法に自信がない方",
        "C#の文法を全体的に学びたい方"
      ]
    },
    {
      "title": "Python 3.5 ile Sıfırdan İleri Seviyeye Programlama",
      "url": "https://www.udemy.com/course/python-3-egitimi/",
      "bio": "Sıfırdan İleri Seviyeye programlamayı Python ile öğrenin ve gerçek hayat projeleri ile uygulayın.",
      "objectives": [
        "Sıfırdan programlamaya başlayarak yazılım mantığını kavrayabilirsiniz",
        "Yaptığımız çok sayıda örnekle algoritma yeteneğinizi geliştirebilirsiniz",
        "Python ile veritabanı kullanımını öğrenerek Sqlite veritabanı hakkında bilgi sahibi olabilirsiniz",
        "Nesne Yönelimli Programlama mantığını öğrenerek diğer programlama dillerine geçtiğinizde de kolaylık yaşayabilirsiniz",
        "PyQt5 kütüphanesini öğrenerek görsel arayüzlü programlar tasarlayabilirsiniz",
        "BeautifulSoup kullanarak internet sitelerinden veri çekmeyi öğrenebilirsiniz",
        "Pillow kullanarak resim düzenleme işlemlerini öğrenebilirsiniz",
        "PyAutoGui kullanarak bilgisayar kontrolünü yönetmeyi öğrenebilirsiniz"
      ],
      "course_content": {
        "Kursa Giriş": [
          "Eğitmeni Tanıyın",
          "Kursun Hedef Kitlesi Nedir, Kimler Kayıt Olmalı?",
          "Kursa Katılım İçin Gerekli Bilgi Seviyesi ve Araçlar Nelerdir?",
          "Öğrencilere Kursta Öğrendiklerini Uygulamaları ve Geliştirmeleri İçin Tavsiyeler",
          "Öğrenciler Kursun Sonunda Neler Başarabilecekler?",
          "Başarı İçin Eğitmen Tavsiyeleri"
        ],
        "Bilgisayarı Hazırlama ve Programların Kurulumu": [
          "Python 3.5 Kurulumu",
          "Python Kurulum Notları",
          "PyCharm Kurulumu ve Kullanımı",
          "PyCharm Kurulum Notları"
        ],
        "Kullanıcı İle Etkileşim": [
          "Print() Fonksiyonu",
          "Input ile Veri Almak",
          "Yorum Satırları"
        ],
        "Veri Tipleri": [
          "Stringler",
          "Integer-Float",
          "Tip Dönüşümleri",
          "Boolean",
          "Listeler",
          "Listeler - 2",
          "Tuplelar",
          "Sözlükler"
        ],
        "Koşullu Durumlar": [
          "Karşılaştırma Operatörleri",
          "Karşılaştırma Operatörleri - 2",
          "If-Elif-Else Blokları",
          "Ödevler",
          "Dersten Geçme Durumu Ödev Çözümü",
          "Kullanıcı Girişi Ödev Çözümü"
        ],
        "Döngüler": [
          "While Döngüsü",
          "While Döngüsü Örnek",
          "For Döngüsü",
          "For Döngüsü Örnek",
          "Range Fonksiyonu",
          "Range Fonksiyonu Örnek"
        ],
        "Fonksiyonlar": [
          "Fonksiyonlara Giriş",
          "Fonksiyon Tanımlama ve Çağırma",
          "Return İfadesi",
          "Global ve Yerel Değişkenler",
          "Recursive Fonksiyonlar",
          "Fonksiyonlar Ödev",
          "Kaç Yaşındasın Ödev Çözümü",
          "Map() Fonksiyonu",
          "Filter() Fonksiyonu",
          "Reduce() Fonksiyonu"
        ],
        "Modüller": [
          "Modüllere Giriş",
          "Random Modülü",
          "Math Modülü",
          "Time Modülü",
          "Turtle Modülü",
          "Matematik Oyunu - 1",
          "Matematik Oyunu - 2"
        ],
        "Hatalarla Mücadele": [
          "Try, Except, Finally, Else"
        ],
        "Nesne Yönelimli Programlama (OOP)": [
          "Nesne Yönelimli Programlama Mantığı",
          "Sınıf ve Nesne Tanımlama - 1",
          "Sınıf ve Nesne Tanımlama - 2",
          "Miras Alma",
          "Super Fonksiyonu",
          "Matbaa Oyunu Ödevi",
          "Matbaa Ödevi Çözümü 1",
          "Matbaa Ödev Çözümü 2"
        ]
      },
      "requirements": [
        "Temel Bilgisayar Kulanım Bilgisi",
        "Öğrenme İsteği"
      ],
      "description": "Python 3.5'i Öğrenerek Programlama Dünyasına İlk Adımınızı Atın\nBu kursta sıfırdan Python'ı öğrenerek farklı konularla ileri seviyelere kadar ilerleyeceğiz. İster programlamaya yeni başlıyor olun isterseniz daha önce farklı bir dil öğrenmiş olun, Python öğrenerek yeni dünyalara açılmak istiyorsanız doğru yerdesiniz!\n\n** Kurs hakkında fikir sahibi olmak için ücretsiz örnek anlatım videolarını izlemeyi unutmayın **\nGelin Kurs Programının Genel Yapısına Bir Göz Atalım:\nKonuyu önce teorik olarak anlamaya çalışıyoruz\nİnteraktif kodlama egzersizleriyle konuyu anlayıp anlamadığımızı test ediyoruz\nKonu sonunda ise size ödevler veriyorum ve daha sonra çözümünü birlikte yapıyoruz\nArayüz tasarımı gibi önemli bölümlerin sonunda ise geniş projeler yaparak konuya tam hakim hale geliyoruz\n\n\nYardıma İhtiyacınız Olduğunda Buradayız\nEğitim boyunca takıldığınız yerler mutlaka olacaktır. Endişe etmenize gerek yok. Çünkü hem eğitmeniniz olarak ben hem de birlikte eğitim aldığınız kurs arkadaşlarınız size yardım etmek için bekliyor olacaklardır. Bu kursta sorunlar çözümsüz kalmaz ;)\n\n\n\nKursa Başlamayı Düşünüyor Ama Kararsız Mısınız ? Öğrencilerimden Gelen Yorumlar Size Yardımcı Olabilir\nTarık Harun - (5 Yıldız) - Mayıs 2018\nTüm içtenliğim ile belirtmek istiyorum ki ben bu kadar güzel, sade ve nokta atışı olan bir eğitim görmedim. Mırın kırın bir anlatım ile bunaltma yok aşırı detay ile boğulma yok. Keyif alarak Python3 öğreniyorum resmen. Tek olumsuz yanı eğitmenin tek bir kursunun olması udemy üzerinde. Youtube üzerindeki ingilizce eğitim videolarını izleme listeme aldım. Kendi adıma eğitimler için teşekkür ederim hocam.\n\n***\nKenan Özgür Özügürler - (5 Yıldız) - Mayıs 2018\nHarika! Hiçbir şey bilmeden bu kursa kayıt oldum, kursun yarısına gelmiş olmama rağmen çok sade bir dil ile aşırı basitleştirilerek anlatılıyor. Enes hocama ilgisi ve alakasından dolayı çok teşekkürler! İyi ki varsınız! (Dipnot: Eğer kursu almayı düşünen varsa, daha fazla düşünerek vakit kaybetmesin.)\n\n***\n\nYunus Emre Alpak - (5 Yıldız) - Mayıs 2018\nYapay Zeka ve Deep Learning e olan merakım beni Python a itti. Araştırdığım kurslar arasında kendime en uygun kurs olarak bunu seçtim ve hiç pişman olmadım. Ders anlatımı güzel ve anlaşılır. Hocanın anlatım hızını sorarsanız buna cevap verecek kişi ben değilim. Çünkü sahip olduğum bütün eğitim setlerinde videoları x2 hızla izliyorum :)\n\n***\nYusuf Karakuş - (5 Yıldız) - Nisan 2018\nÇok sade ve anlaşılır bir dille anlatılmış. Gerçekten neredeyse aradığım her şeyi bulabildiğim bir kurs oldu. Proje yaparak uygulamalı anlatması da iyice pekiştirmemizi sağlıyor. Çok başarılı bir eğitim, tebrikler...\n\n|| TÜM YORUMLARI OKUMAK İÇİN KURS SAYFASININ ALTINA BAKABİLİRSİNİZ ||\n\n\nŞimdi kurs içeriğimizde hangi konular olduğuna göz atalım:\nPython Ortamlarının Kurulması\nPython'daki Veri Tipleri\nIf-Else Gibi Koşullu Durumlar\nDöngü Yapıları\nFonksiyonlar ve Özellikleri\nModüllerle Çalışmak\nGömülü Python Modülleri\nHatalarla Mücadele\nNesne Yönelimli Programlama (OOP)\nPython ile Veritabanı İşlemleri\nPython ile Dosya İşlemleri\nPyQt Modülü ile Arayüz Tasarımı\nKütüphane Sistemi ve Not Defteri Uygulaması (Arayüz Projeleri)\nIterator ve Generatorların Kullanımı\nItertools Modülü ve Gelişmiş İterasyonlar\nBeautifulSoup ile İnternetten Veri Çekme\nPillow ile Resim Düzenleme\nPyAutoGui ile Bilgisayar Otomasyonu\n\n\nKurs Hakkında\nBu kurs 10.000'in üzerinde öğrencisi bulunan EDUKEY Eğitim Akademisi  Danışmanlığında Uzman Eğitmen Enes Tuzlu tarafından hazırlanmıştır.\n\nKurs Güncellemesi Hakkında\nBu kurs özellikle öğrencilerden gelen talepler doğrultusunda sık sık güncellenmekte ve yeni bilgiler, yeni uygulamalar kursa dahil edilmektedir.",
      "target_audience": [
        "Programlamaya yeni başlayanlar",
        "Başka bir programlama dilini bilen ve Python dilini öğrenmek isteyenler",
        "Python diline aşina olan ve ileri düzeyde kendini geliştirmek isteyenler"
      ]
    },
    {
      "title": "Современный JavaScript - с Нуля до Junior Специалиста",
      "url": "https://www.udemy.com/course/javascript-zero-to-junior-developer/",
      "bio": "Наиболее новый и полный курс по JavaScript с нуля простым и понятным для новичков языком + React Fundamentals",
      "objectives": [
        "Станете продвинутым, уверенным и современным разработчиком JavaScript с нуля",
        "Изучите основы JavaScript и любого языка программирования: переменные, логику, условные операторы, циклы, функции, массивы, объекты и т.д.",
        "Будете готовы к работе, понимая, как на самом деле JavaScript работает под капотом",
        "Научитесь думать и работать как разработчик: решение проблем, исследования, рабочие процессы",
        "Будете много практиковаться",
        "Научитесь проводить debugging (отладку) вашего кода",
        "Научитесь управлять стилями веб страниц при помощи JavaScript",
        "Изучите основы HTML & CSS",
        "Научитесь управлять элементами DOM при помощи JavaScript",
        "Создадите 5 красивых проектов для своего портфолио",
        "Изучите основы современного React",
        "И многое другое!"
      ],
      "course_content": {
        "Введение": [
          "Введение",
          "ВАЖНО! ЧАВО - ЧАсто задаваемые ВОпросы",
          "Заметка к заданиям"
        ],
        "Основы JavaScript": [
          "Что такое JavaScript?",
          "Инструменты",
          "Установка VS Code. Windows",
          "Установка VS Code. Mac",
          "Способы применения JavaScript",
          "Консоль",
          "Переменные. Комментарии",
          "let и const",
          "Типы данных",
          "Преобразование типов",
          "Операции с числами",
          "Строки",
          "Шаблонные строки",
          "Задание \"Анкета\"",
          "Операторы сравнения",
          "Приоритет операторов",
          "Сокращённая форма записи операторов",
          "Задание \"Лишний вес\"",
          "If Else Statement",
          "\"Лишний вес\" с If Else. Задание",
          "\"Лишний вес\" с If Else. Решение",
          "Truthy и Falsy значения",
          "Boolean логика",
          "Switch Statement",
          "Statements & Expressions",
          "Тернарный оператор",
          "Тернарный оператор. Задание",
          "Тернарный оператор. Решение задания",
          "Версии JavaScript",
          "Strict Mode",
          "Функции",
          "Функции. Declarations vs Expressions",
          "Стрелочные функции (arrow functions)",
          "Вызов функций внутри других функций",
          "Заметка к видео \"Функции. Задание\"",
          "Функции. Задание",
          "Функции. Решение задания",
          "Массивы",
          "Методы массивов",
          "Массивы. Задание",
          "Массивы. Решение задания",
          "Объекты",
          "Объекты. Dot vs Bracket Notation",
          "Методы объектов",
          "Объекты. Задание",
          "Объекты. Решение задания",
          "Цикл For",
          "Циклы и массивы",
          "Break & Continue",
          "Итерация в обратном порядке. Цикл в цикле",
          "Цикл While",
          "Циклы. Задание",
          "Циклы. Решение задания"
        ],
        "Необходимые Скиллы Разработчика": [
          "Код всего раздела",
          "Настройка VS Code",
          "Настройка Development Environment",
          "Как Изучать Программирование",
          "Думай Как Программист",
          "Поиск информации в интернете",
          "Debugging (Отладка Кода)",
          "Отладка кода при помощи консоли и breakpoints",
          "Dev Skills. Задание",
          "Dev Skills. Решение задания"
        ],
        "Ускоренный курс HTML & CSS": [
          "Код всего раздела",
          "Структура веб страницы. Основные html элементы",
          "Атрибуты, class, id",
          "Стилизация при помощи CSS",
          "CSS Box Model"
        ],
        "Основы DOM": [
          "Код всего раздела",
          "Проект №1. Угадай Число!",
          "Что такое DOM?",
          "Манипуляция элементами",
          "Events & Event Handlers",
          "Имплементация логики",
          "Изменение CSS при помощи JavaScript",
          "Челлендж - начать игру сначала",
          "Лучший результат",
          "Рефакторинг кода",
          "Проект №2. Модальное окно",
          "Работа с классами",
          "Обработка события нажатия клавиши",
          "Проект №3. Игра \"Свинья\"",
          "Бросаем кубик",
          "Смена игрока",
          "Функциональность \"Оставить очки\"",
          "Новая игра"
        ],
        "Как Работает JavaScript - Заглядываем Под Капот": [
          "Код всего раздела",
          "Обзор JavaScript",
          "Движок JavaScript",
          "Контекст Выполнения & Стек Вызовов",
          "Scope & Scope Chain",
          "Scope на практике",
          "Variable Environment. Hoisting & TDZ",
          "Variable Environment. Hoisting & TDZ на практике",
          "Ключевое слово this",
          "Ключевое слово this на практике",
          "Regular vs Arrow Functions",
          "Типы - Примитивные VS Ссылочные",
          "Типы - Примитивные VS Ссылочные на практике"
        ],
        "Структуры Данных И Строки В Современном JavaScript": [
          "Код всего раздела",
          "Деструктуризация Массивов",
          "Деструктуризация Объектов",
          "Оператор Spread",
          "Паттерн Rest и Параметры Rest",
          "Вычисление Логических Выражений По Сокращённой Схеме (Short-Circuit Evaluation)",
          "Nullish Coalescing - Оператор Нулевого Слияния",
          "Задание 1",
          "Задание 1. Решение",
          "Циклы и Массивы. Цикл for of",
          "Улучшенные Объектные Литералы",
          "Optional Chaining",
          "Циклы и Объекты",
          "Задание 2",
          "Задание 2. Решение",
          "Set",
          "Map. Основы",
          "Map. Итерация",
          "Какую Структуру Данных Использовать?",
          "Задание 3",
          "Задание 3. Решение",
          "Работа Со Строками. Часть 1",
          "Работа Со Строками. Часть 2",
          "Работа Со Строками. Часть 3",
          "Задание 4",
          "Задание 4. Решение"
        ],
        "Больше О Функциях": [
          "Код всего раздела",
          "Параметры По Умолчанию",
          "Передача Аргументов. Значения vs Ссылки",
          "Функции Первого Класса vs Функции Высшего Порядка",
          "Функции Принимающие Callback Функции",
          "Функции Возвращающие Функции",
          "Методы call() и apply()",
          "Метод bind()",
          "Задание 1. Заметка",
          "Задание 1",
          "Задание 1. Решение",
          "Immediately Invoked Function Expression (IIFE)",
          "Замыкания (Closures)",
          "Больше Примеров О Closures",
          "Задание 2",
          "Задание 2. Решение"
        ],
        "Работа С Массивами": [
          "Код всего раздела",
          "Простые Методы Массивов",
          "Итерация Массивов С Помощью Цикла forEach",
          "forEach С Map И Set",
          "Проект №4. Приложение \"Просто Банк\"",
          "Создание Элементов DOM",
          "Задание 1",
          "Задание 1. Решение",
          "Преобразование Данных: map(), filter(), reduce()",
          "Метод map()",
          "Вычисление Nicknames",
          "Метод filter()",
          "Метод reduce()",
          "Отображаем баланс в приложении",
          "Задание 2",
          "Задание 2. Решение",
          "Method Chaining (Цепь Вызовов Методов)",
          "Method Chaining В Приложении",
          "Задание 3",
          "Задание 3. Решение",
          "Метод find()",
          "Имплементация Login",
          "Имплементация Transfers",
          "Метод findIndex()",
          "Методы some() и every()",
          "Запрос Займа",
          "Методы flat() и flatMap()",
          "Сортировка Массивов",
          "Сортируем Транзакции В Приложении",
          "Другие Способы Создания И Заполнения Массивов",
          "Array.from() в веб приложении",
          "Какой Метод Использовать?",
          "Методы Массивов На Практике",
          "Заметка к Заданию 4",
          "Задание 4",
          "Задание 4. Решение"
        ],
        "Числа, Даты, Таймеры": [
          "Код всего раздела",
          "Преобразование И Проверка Чисел",
          "Работа с Math",
          "Вносим Правки В Приложение",
          "Оператор Остаток",
          "Используем Оператор Остаток В Приложении",
          "BigInt",
          "Работа С Датами",
          "Добавляем Даты В Приложение",
          "Операции С Датами",
          "Операции С Датами В Приложении",
          "Интернационализация Дат",
          "Интернационализация Чисел",
          "Интернационализация Чисел В Приложении",
          "Таймеры",
          "Имплементация Обратного Отсчёта"
        ]
      },
      "requirements": [
        "Если вы не знакомы с HTML и CSS - получите ссылку на мой бесплатный курс \"Основы веб разработки. HTML и CSS\"",
        "Вам понадобится компьютер и интернет - мы установим бесплатные инструменты для разработки!"
      ],
      "description": "JavaScript - это САМЫЙ важный язык программирования, который тебе нужно выучить как веб-разработчику, и, пройдя этот курс, ты  не пропустишь ни одной вещи, которую ты должен знать как разработчик JavaScript!\nПочему этот курс JavaScript тебе подходит?\nЭто наиболее новый и полный курс JavaScript на Udemy, который поможет тебе пройти от основ JavaScript до продвинутого уровня, чтобы успешно пройти собеседование и стать профессиональным разработчиком.\nТы изучишь современный JavaScript с самого начала, шаг за шагом, используя практические и интересные примеры кода, важную теорию о том, как JavaScript работает под капотом, а также выполнишь много практических заданий.\nЭтот курс содержит темы для начинающих, среднего и даже продвинутого уровня.\nТы не только будешь изучать язык JavaScript, но и научишься как решать проблемы, научишься как структурировать и организовывать код.\nВ этом курсе ты:\nИзучишь JavaScript с нуля - от новичка до продвинутого уровня\nИзучишь все основные особенности и концепции, которые тебе нужно знать в современной разработке на JavaScript\nНаучишься думать и работать как разработчик: решение проблем, исследования, рабочие процессы\nИзучишь всё, что тебе нужно, чтобы стать экспертом по JavaScript и подать заявку на вакансию JavaScript разработчика\nНаучишься проводить debugging (отладку) твоего кода\nСоздашь красивые проекты для своего портфолио\nИзучишь закулисную работу JavaScript: движки, стек вызовов, подъем, scope, ключевое слово this, ссылочные значения и многое другое\nИзучишь функции: стрелочные функции, функции первого и высшего порядка, связывание и замыкания\nИзучишь объектно-ориентированное программирование\nИзучишь асинхронное и синхронное программирование: мы рассмотрим callback функции, promise, async / await и другие важные инструменты\nAnd More...\nЭтот курс отличается тем, что речь идет не только о написании кода, но и о том, как и почему код работает так, как работает. Потому что это идеальное сочетание теории и практики.\n\n\nНе нужно верить мне на слово, лучше почитай некоторые из сотен положительных отзывов об этом курсе!\n\n\n...\n\n\n\"Добрый день! Юра, большое спасибо за прекрасный курс. Это лучшее что я смотрел на данный момент. Также большое спасибо за поддержку в курсе. У вас талант доносить очень доступно информацию.\nкурс по Javascript должен быть минимум 60 часов. За что я Вам очень благодарен, что он у вас даже больше 60 часов + отдельное спасибо за react.\nОчень жду от Вас курс в таком же духе по vue.js.\nВСЕМ РЕКОМЕНДУЮ!!!\"\n\n\n\"Рад что купил этот курс, много пробелов были заполнены и главное поняты\"\n\n\n\"Отличный курс, много практики, и проекты не тянутся из модуля в модуль, автор очень понятно объясняет, рекомендую к покупке!\"\n\n\n\"Уважаемые модераторы Udemy - обратите внимание на этот курс! Вот как должен выглядеть полный, всеобъемлющий материал. А не вот эти вот фул туториалы и комплит гайды по шесть с половиной часов =)))))) Ну правда - вот это курс на 66 часов без воды - автору YouRa Allakhverdov - просто респект!\nА то весь ASP.NET Web API пытаются за 4.5 часа продать как полный коплит гайд =))) Да даже 10-15 часов - это самый бэйсик. Так вот так и называйте его - базовый. Или выпустите по ASP.NET Web API курс на 100 часов - и продавайте его за 3 цены - я куплю. Тo же самое по EF core - нет даже среднего курса - не то что полного =))) А вот по JS есть этот курс. По React тоже есть классный курс на 55 часов - очень мощный. Давайте в этом же духе))\nЛучше пусть будет курс дороже - но такой как этот, чем курс в котором условно учат переменные объявлять - все ты сеньор разраб теперь =))))\nЕще раз спасибо автору YouRa Allakhverdov и платформе Udemy за такой курс! =)\"\n\n\n\"Отличный курс, очень подробно все объясняется, очень много практики. Интересные задачи, показывающие как в совокупности использовать весь пройденный материал. Даются рабочие практические рекомендации по становлению программистом. Процесс обучения построен так, что по окончании, вникая и выполняя все практические задачи человек действительно может стать специалистом. Благодарю, Юрий.\"\n\n\n...\n\n\nНе теряй своё драгоценное время и записывайся на курс прямо сейчас!",
      "target_audience": [
        "Этот курс для вас, если вы хотите научиться программировать с нуля - JavaScript это отличный выбор для начинающих!",
        "Этот курс для вас, если вы хотите получить глубокое понимание самого популярного языка программирования в мире - JavaScript"
      ]
    },
    {
      "title": "Curso de Visual Studio 2019 - Desenvolvimento Front End",
      "url": "https://www.udemy.com/course/curso-de-visual-studio-2019-desenvolvimento-front-end/",
      "bio": "Programando em Visual Basic",
      "objectives": [
        "Utilizar a plataforma do visual studio e desenvolver sistemas com visual basic"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Instalando Visual Studio 2019",
          "Iniciando a Plataforma",
          "Criando novo Projeto",
          "Projeto Net Framework VB",
          "Iniciando com os Formulários",
          "Propriedades dos formulários",
          "Criando novo formulário",
          "Eventos do formulário",
          "Mensagem para o usuário",
          "Eventos de botões",
          "Iniciando com variaveis",
          "Chamando variaveis",
          "Concatenando valores",
          "Unindo valores string e integer",
          "Tomada de decisão if",
          "Componentes de formulários",
          "Acessando as propriedades",
          "Habilitando e desabilitando campos",
          "Entrando com dados para calculos",
          "Retornando mensagem na label",
          "Comentando áreas",
          "IF Composto",
          "Verificando valor númerico",
          "Retorno de condições",
          "Cores nos componentes",
          "Aplicando cores em RGB",
          "FrontEnd e BackEnd",
          "Fundo para tela de login",
          "Botão transparente",
          "Cores no textbox",
          "Validações para o Login",
          "Criando a tela principal",
          "Menu Strip",
          "Criando os subMenus",
          "Ícones nos menus",
          "Ícones nos botões",
          "Cor RGB nos botões",
          "Erro ao debugar projeto",
          "Finalizando atalhos do menu",
          "Alertas e mensagens do sistema",
          "Tela de cadastro de clientes",
          "Formatação com mascaras",
          "Utilizando radio buttons",
          "Campos para os clientes",
          "DataGridView",
          "Botões para cadastro",
          "Carregando imagem no resource",
          "Finalizando os botões",
          "Evento do radio button",
          "Componente combobox",
          "Validando os campos",
          "Tratamento com TryCat",
          "Teste condicional",
          "Validando campo com máscara",
          "Eventos do dataGridView",
          "Caixa de Mensagem YesNo",
          "Formulário de Produtos",
          "Posicionando componentes",
          "Pickture Box",
          "Validando os campos no form",
          "Testando formulário de produtos",
          "Componente FileDialog",
          "Filtro no Input Dialog",
          "Chamando os formulários"
        ]
      },
      "requirements": [
        "Não há nenhum pré-requisito, qualquer aluno mesmo que nunca tenha programado pode acompanhar este curso"
      ],
      "description": "O curso de Visual Studio 2019 possui 65 vídeo aulas, ele pode ser acompanhado também com as versões 2015 ou 2017, neste curso o aluno vai aprender a trabalhar com a plataforma usando a linguagem Visual Basic em projetos do tipo windows forms, o curso é totalmente prático e prepara o aluno para o desenvolvimento de sistemas como desenvolvedor front end, adquira já o curso e comece a criar seus sistemas.",
      "target_audience": [
        "Todo aluno que tenha interesse em desenvolver sistemas e programar"
      ]
    },
    {
      "title": "C++ 언매니지드 프로그래밍",
      "url": "https://www.udemy.com/course/cpp-unmanaged-programming-by-pocu/",
      "bio": "실제 업계에서 쓰이는 C++ 프로그래밍. 하드웨어 수준에서 배우는 개체지향/객체지향 프로그래밍(OOP) . (김포프, POCU 포큐 아카데미)",
      "objectives": [
        "C++ 언어 사용법",
        "올바른 프로그래밍 습관",
        "C++ 언어가 내부적으로 어떻게 도는지에 대한 이해"
      ],
      "course_content": {
        "코스 소개": [
          "누가 이 코스를 들을 수 있나요?",
          "POCU 수강생만을 위한 정보",
          "수업 일정",
          "코스에서 사용하는 슬라이드 구조",
          "C++에 대한 소문과 사실",
          "정리"
        ],
        "수업에 도움되는 자료": [
          "참고자료 안내",
          "동영상 강좌 관련 질문 안내"
        ],
        "출력(Output)": [
          "Hello World 출력하기, 네임스페이스(namespace)",
          "코드보기: using / namespace",
          "복습 퀴즈",
          "<< 연산자(operator)",
          "코드보기: 모든걸 출력해 보자!",
          "복습 퀴즈",
          "출력형식 지정(Output Formatting) 1",
          "코드보기: 조정자",
          "복습 퀴즈",
          "출력형식 지정(Output Formatting) 2",
          "정리"
        ],
        "입력(Input)": [
          "입력 스트림(Input Stream)",
          "복습 퀴즈",
          "스트림 상태(Stream States)",
          "입력 버리기(Discarding Input): clear(), ignore()",
          "복습 퀴즈",
          "입력 버리기: get(), getline()",
          "코드보기: 정수의 합 구하기, getline()",
          "복습 퀴즈",
          "정리"
        ],
        "일부 새로운 C++ 기능": [
          "Bool 데이터형",
          "참조(Reference) 1",
          "복습 퀴즈",
          "참조 2",
          "컴퓨터는 참조가 뭔지 알까?",
          "코드보기: 참조",
          "복습 퀴즈",
          "코딩표준 쪼오금~",
          "정리"
        ],
        "문자열(string)": [
          "std::string 클래스",
          "복습 퀴즈",
          "std::string이 좋은가요?",
          "코드보기: 문자열 뒤집어 덧붙이기",
          "복습 퀴즈"
        ],
        "파일 입출력(I/O)": [
          "파일 열기와 닫기",
          "한 문자, 한 줄, 한 단어 읽기",
          "잘못된 입력이 있는 경우",
          "잘못된 입력을 어떻게 처리하지?",
          "또 다른 문제...",
          "파일 읽기의 베스트 프랙티스(Best Practice)",
          "복습 퀴즈",
          "파일 쓰기, 바이너리 파일 읽기/쓰기, 파일 안에서의 탐색(seek)",
          "코드보기: 파일 입출력",
          "복습 퀴즈",
          "정리"
        ],
        "개체지향 프로그래밍 (Object-Oriented Programming) 1": [
          "OOP란?",
          "OOP가 복잡해졌다!",
          "접근 제어자(Access Modifier)",
          "복습 퀴즈",
          "개체 생성, 스택/힙",
          "개체 배열 생성, 개체 소멸",
          "멤버 변수 초기화",
          "복습 퀴즈",
          "생각할 거리: new/delete와 malloc()/free()의 차이",
          "생성자(Constructor), 초기화 리스트(Initializer List)",
          "코드보기: Vector 클래스의 헤더 및 cpp 파일",
          "기본 생성자, 컴파일러가 하는 일",
          "영상 퀴즈: 둘 중 컴파일 안 되는 코드는?",
          "둘 중 컴파일 안 되는 코드는?",
          "영상 퀴즈: 둘 중 컴파일 안 되는 코드는?",
          "생성자 오버로딩(Overloading), 소멸자(Destructor)",
          "복습 퀴즈",
          "const 멤버 함수",
          "코드보기: Vector 클래스",
          "구조체(Struct) vs 클래스(Class)"
        ],
        "개체지향 프로그래밍 2": [
          "복사(Copy) 생성자",
          "코드보기: char 배열과 복사 생성자",
          "함수 오버로딩(overloading)",
          "영상 퀴즈",
          "함수 오버로딩 매칭하기",
          "영상 퀴즈",
          "함수 매칭 순서",
          "코드보기: 함수 오버로딩과 Vector 클래스",
          "연산자(operator) 오버로딩",
          "friend 키워드",
          "연산자 오버로딩과 const",
          "코드보기: Vector 클래스에서 연산자 오버로딩하기",
          "복습 퀴즈",
          "연산자 오버로딩을 남용하지 말 것",
          "암시적 함수들을 제거하는 법",
          "복습 퀴즈",
          "정리"
        ],
        "개체지향 프로그래밍 3": [
          "상속",
          "생성자 호출 순서, 소멸자 호출 순서",
          "코드보기: Animal, Cat, Dog 클래스",
          "복습 퀴즈",
          "정리",
          "다형성(Polymorphism)",
          "정적 바인딩",
          "동적 바인딩",
          "복습 퀴즈",
          "가상 소멸자",
          "코드보기: Animal, Cat, Dog의 가상함수",
          "복습 퀴즈",
          "정리",
          "다중(multiple) 상속",
          "추상(abstract) 클래스",
          "영상 퀴즈",
          "\"인터페이스\"",
          "코드보기: IFlyable, IWalkable, Bat, Cat 클래스",
          "정리"
        ]
      },
      "requirements": [
        "\"C 언매니지드 프로그래밍\" 수료",
        "\"개체지향 프로그래밍 및 설계\" 수료"
      ],
      "description": "본 비디오 강좌는 포큐아카데미에서 진행하는 COMP3200 수업의 비디오 강좌입니다.\n\nC++은 C와 더불어 가장 널리 사용되는 언매니지드 언어일 뿐만 아니라 2018년 7월 기준 전세계에서 3번째로 많이 쓰이는 언어입니다. (출처: TIOBE) 그리고 언매니지드 언어라는 특수성 때문에 한동안 사용률이 떨어지지 않을 전망입니다.\n현존하는 프로그래밍 언어를 크게 둘로 나누면 매니지드(Managed) 언어와 언매니지드(Unmanaged) 언어가 있습니다. 이 둘의 차이는 프로그래머가 컴퓨터 하드웨어를 직접 제어할 수 있는지 여부입니다. (예: 프로그래머가 직접 메모리를 관리하는가?)\n프로그램의 성능보다 제품을 빨리 개발하는 것이 중요한 분야에서는 C#, Java와 같은 매니지드 언어를 널리 사용합니다. 하지만 운영체제, 비디오 게임, 가상현실, 주식거래소, 머신 러닝 코어, 블록체인 등 성능이 더 중요한 분야에서는 여전히 언매니지드 언어를 사용할 수밖에 없습니다. 따라서 본 강좌는 실제 업계에서 쓰이는 C++ 프로그래밍 기법에 중점을 맞춰 진행합니다.\n언매니지드 언어의 장점은 여기서 그치지 않습니다. 프로그래머의 지속적인 성장에 반드시 필요한 지식 중 하나가 컴퓨터 하드웨어에 대한 이해입니다. 탑 레이서라면 자동차의 동작 원리를 잘 알아야 하듯이 탑 프로그래머는 하드웨어의 동작 원리를 잘 이해해야 합니다. 이걸 돕는 언어가 바로 언매니지드 언어입니다.\n'COMP2500: Java 개체지향 프로그래밍 및 설계'와 마찬가지로 이 강좌에서도 개체지향 프로그래밍(OOP)에 대해 배웁니다. 하지만 이 코스를 성공적으로 마무리한 분들은 하드웨어 수준에서 개체지향 프로그래밍이 어떻게 작동하는지까지 자세히 이해하실 수 있을 겁니다.\n본 강좌는 다음과 같이 크게 세 부분으로 나뉘며, 강의 진행도 이 순서를 따릅니다.\n코어 C++: 참조, 클래스, 상속 등 C++의 기본이 되는 내용. C++98 표준 ( ~ 5주 차)\n모던 C++: STL 등 C++03 표준에서 추가된 기능 중 업계에서 쓰이는 내용들 (6주 차 ~ 9주 차)\nC++1x: C++11/14/17 표준에서 추가된 최신 기능 중 업계에서 쓰이는 내용들 (10주 차 ~ )\n위와 같이 강의를 세 부분으로 나눈 이유는 회사에 따라 사용하는 C++ 표준이 다르고, 성능 상의 이유로 일부러 과거의 표준을 여전히 사용하는 곳도 많기 때문입니다. 따라서 최신의 C++ 표준만을 사용하는 프로그래머는 업계에서 원하는 프로그래머가 아닌 경우가 많습니다.",
      "target_audience": [
        "컴퓨터 공학의 기본기를 배우고 싶은 분들",
        "프로그래머로서 평생 커리어를 꿈꾸는 분들"
      ]
    },
    {
      "title": "Excel VBA Criação de Sistemas + Banco de Dados Access (SQL)",
      "url": "https://www.udemy.com/course/curso-de-excel-vba-criacao-de-sistemas/",
      "bio": "Dê um passo adiante em sua carreira aprendendo Excel VBA para desenvolvimentos de sistemas e automação de planilhas.",
      "objectives": [
        "Automação de Atividades no Excel utilizando VBA",
        "Integração do Excel com Banco de Dados Access",
        "Desenvolvimento de Sistemas Profissionais com VBA",
        "Construção de Interfaces Gráficas",
        "Linguagem SQL do Zero"
      ],
      "course_content": {},
      "requirements": [
        "É necessário apenas o Excel e o banco de dados Access instalados",
        "Explore o máximo dessa tecnologia que está acessível a todos"
      ],
      "description": "Neste curso você aprenderá a desenvolver incríveis sistemas de automação para agilizar e simplificar as tarefas do dia a dia utilizando o VBA, aprenderá também a utilizar o banco de dados Access e realizar a integração do mesmo com Excel por meio da linguagem SQL, no decorrer do curso criaremos formulários para controle de estoque, cadastro de produtos, cadastro de clientes/funcionários e muito mais! Todo esse conhecimento é essencial para você se destacar em um mercado de trabalho que exige cada vez  mais conhecimentos em tecnologias e suas derivantes, o curso foi criado com base em anos de experiência em desenvolvimento de aplicações para empresas, sendo a maior parte dos projetos feitos em Excel VBA, o Excel é a ferramenta de gestão mais utilizada por empresas e pessoas em todo o mundo e continuará neste posto por muitos anos ainda segundo especialistas da área, por isso é de extrema importância o domínio de tais ferramentas, dê um passo adiante em sua carreira com esse rico conhecimento!\nReceba o certificado de conclusão automaticamente ao finalizar o conteúdo, você poderá coloca-lo em seu currículo ou portfólio, o acesso é vitalício e você receberá todas as atualizações disponibilizadas para o curso.\nAcesse também os demais cursos que temos disponíveis, temos cursos na área de inteligência artificial com Python, e também Integração do Excel com Access de forma  simples e prática, espero ver você em mais dos nossos conteúdos!",
      "target_audience": [
        "Pessoas que utilizam o Excel no dia a dia e pessoas que querem evoluir sua capacidade e conhecimento."
      ]
    },
    {
      "title": "Java编程语言从入门到精通",
      "url": "https://www.udemy.com/course/bestjavatutorial/",
      "bio": "理论与实践相结合的授课方式，助力您全方位掌握Java编程语言",
      "objectives": [
        "拥有成为高级Java软件工程师技术能力",
        "拥有专家级的Java语言技能",
        "向从事该语言工作超过10年的专业Java开发人员学习Java软件开发行业的“最佳实践”",
        "能够向未来的雇主证明您对Java的理解",
        "系统性极强的课程，涵盖Java语言的方方面面，助力您打下扎实的语言基础",
        "获得基本的Java基础知识，以过渡到Spring框架，Java EE，Android开发等",
        "字典式的学习宝典，细分的知识点帮助您随时解答疑惑点",
        "一次购买，终生受益。伴随着Java语言不断的发展进化，课程内容持续更新",
        "学习经典的排序算法，诸如冒泡排序，快速排序，归并排序等",
        "学习经典的数据结构，比如二叉树，二叉查找树，链表，队列，Map等",
        "学习使用JSP、Servlet来开发网络程序",
        "随时随地的讲师一对一答疑解惑",
        "单元测试 - JUnit",
        "如何进行debug工作",
        "如何用Java解析XML和JSON",
        "如何编写网络程序",
        "不只是知识点的讲解，还有大量的练习题帮助你巩固所学"
      ],
      "course_content": {},
      "requirements": [
        "无"
      ],
      "description": "Java是一门伟大的程序设计语言，不论是移动端开发（Android）亦或是企业级开发（Spring Boot ，Java Web Application）Java都占据重要的地位。在风起云涌的计算机技术发展历程中，Java的身影随处可见，而且生命力极其强大。\n1995年，Java Applet使得Web网页可以表现精彩和互动的多媒体内容，促进了Web的蓬勃发展。之后随着Web的发展，应用Web成为大型应用开发的主流方式，Java凭借着“一次编译，到处运行”的特性，很好的支持了互联网应用所要求的跨平台能力，成为服务器端开发的主流语言。Java EE 至今仍然是最重要的企业开发服务器端平台。\n2004年再次产生了对Web客户端体验的强烈需求，促使富因特网应用技术广泛流行，从Java Web Start到现在的JavaFX，都是重要的富因特网应用技术。\n现在，我们步入了移动互联网时代，而Java依然是当之无愧的主角。从第一阶段移动互联网中的J2ME，到目前移动操作系统中全球占据份额最大的Android系统上的App开发，都采用的是Java语言和平台。云计算，大数据，物联网，可穿戴设备等技术的应用，都需要可以跨平台，跨设备的分布式计算环境，我们依然可以看到Java语言在其中的关键作用。除此之外，Java还是一门非常优秀的教学语言。它是一门经典的面向对象编程语言，拥有优雅和简明的语法以及丰富实用的类库，让编程人员尽可能的将精力集中在业务领域的问题求解上。许多开源的项目都是使用Java实现的。\n本课程采用理论实践相结合的方式教学，结合讲师本人超过十年的Java及其相关平台的使用经验，力求能够帮助同学更好，更快的掌握Java编程语言。\n结合Java语言的发展，本课程会持续保持更新！\n课程内容\n初级主题：\n计算机、程序和Java概述\nJava语言程序设计基础\nJava 条件判断\nJava运算符\nJava中的数学函数，字符和字符串\n如何使用Java语言中的循环\nJava方法\nJava数组（一维数组，多维数组）\n高级主题\n对象和类\n面向对象的思想\n多态和继承\n异常处理和文本I/O\n抽象类和接口\n二进制I/O\n递归\nJava语言常用的数据结构（List，Set，Map，Queue）\nJava多线程\n排序\n二叉搜索树\n数据库编程（JDBC）\n单元测试（JUnit）\nXML与JSON\n网络编程\nServlet\nJSP\nJava 8  新特性（Lambda，Stream）\n...\n\n\n本课程的结构设计如下：\n每堂课都包括视频和代码\n有相关的理论测试和编程作业来巩固你所学\n有编码习题来帮助你彻底理解知识点\n\n\n\n\n最后，希望大家学习愉快！",
      "target_audience": [
        "所有级别的开发人员，不管是初学者还是有经验的编程人员",
        "想学习Java编程语言的同学",
        "希望掌握Java编程语言，并借此契机开启职业生涯的同学",
        "有其他编程语言经验的程序员",
        "想提高自己的初、中、高级Java开发人员",
        "需要一门“字典式”编程教程的开发人员"
      ]
    },
    {
      "title": "Wzorce Projektowe (Design Patterns)",
      "url": "https://www.udemy.com/course/wzorce-projektowe/",
      "bio": "Wprowadzenie do najpopularniejszych wzorców projektowych w języku Java",
      "objectives": [
        "Jak wyjaśnić ideę i działanie Wzorców Projektowych.",
        "Jak odpowiednio dobrać rozwiązanie do problemu.",
        "Jakie są uniwersalne i sprawdzone rozwiązania na wiele często spotykanych problemów.",
        "Po ukończeniu tego kursu będziesz lepszym programistą!",
        "Jak w praktyce zastosować przedstawione Wzorce Projektowe."
      ],
      "course_content": {},
      "requirements": [
        "Podstawowa znajomość języka Java.",
        "Podstawowa znajomość programowania obiektowego.",
        "Podstawowa umiejętność obsługi dowolnego IDE."
      ],
      "description": "Wzorce Projektowe (Design Patterns) są tematem istniejącym w świecie programowania od wielu, wielu lat i zagościły w nim już na dobre. Pytanie o wybrany wzorzec jest niemal pewniakiem podczas rozmowy kwalifikacyjnej na startowe pozycje w branży.\n\nW tym kursie poznasz popularne wzorce służące do ułatwienia tworzenia skomplikowanych obiektów, dynamicznej zmiany ich zachowań czy takie, które pozwalają na komunikację pomiędzy dwoma różnymi interfejsami. Są to uniwersalne rozwiązania służące do rozwiązywania problemów, z którymi programistom często przychodzi się zmagać w codziennej pracy.\n\nNaszym celem jest zapewnienie kursantowi:\nwiedzy teoretycznej,\nzdolności wykrycia w żywym kodzie możliwości zastosowania danego wzorca,\numiejętności poprawnego zaimplementowania wzorca,\ngdzie owo \"poprawnie\" to nie przekopiowanie diagramu UML wymyślonego dla jakiegoś abstrakcyjnego problemu, lecz taka implementacja, która idealnie wpasuje się w konkretny kontekst biznesowy.\nKurs jest dostępny w rozdzielczości 1080p - wystarczy w playerze Udemy wybrać AUTO w polu wyboru rozdzielczości. Przy dostatecznie dobrym połączeniu internetowym filmy będą wówczas wyświetlane w najwyższej możliwej rozdzielczości.",
      "target_audience": [
        "Jeśli chcesz poznać koncept Wzorców Projektowych...",
        "Jeśli chcesz zdobyć praktyczną umiejętność stosowania Wzorców Projektowych...",
        "Jeśli chcesz ugruntować swoją wiedzę z zakresu Wzorców Projektowych...",
        "Jeśli chcesz rozwijać się w zawodzie programisty i szlifować swoje rzemiosło...",
        "Jeśli chcesz wzbogacić zasób swoich narzędzi programistycznych o uniwersalne, sprawdzone i praktyczne metody...",
        "... ten kurs jest właśnie dla CIEBIE!"
      ]
    },
    {
      "title": "C++ Cơ bản dành cho người mới học lập trình",
      "url": "https://www.udemy.com/course/c-co-ban-danh-cho-nguoi-moi-hoc-lap-trinh/",
      "bio": "Bắt đầu học lâp trình bằng ngôn ngữ C++",
      "objectives": [
        "Biết cách lập trình cơ bản",
        "Có khái niệm về lập trình C++",
        "Biết cách sử dụng thư viện C++ để chuẩn bị cho khóa học hướng đối tượng"
      ],
      "course_content": {},
      "requirements": [
        "Cần có một máy tính chạy Windows hoặc Mac hoặc Linux",
        "Đường truyền internet tương đối tốt",
        "Có kế hoạch học tập nghiêm túc"
      ],
      "description": "Khóa học này mang lại khái niệm cơ bản về lập trình. Sử dụng ngôn ngữ C++ làm ngôn ngữ chính. Không yêu cầu kiến thức về lập trình trước khi học khóa học này.\nCác bạn sẽ được học từ biến, vòng lặp, câu lệnh rẽ nhánh, con trỏ, kiểu dữ liệu tự định nghĩa... Sau khóa học này các bạn sẽ biết cách sử dụng ngôn ngữ lập trình C++ và đồng thời có khả năng tự học các ngôn ngữ khác.",
      "target_audience": [
        "Dành cho người không biết hoặc biết một ít lập trình",
        "Dành cho học sinh / sinh viên muốn học lập trình, đặc biệt là C++",
        "Dành cho người ngành khác, muốn chuyển sang ngành CNTT",
        "Không dành cho người biết lập trình hoặc lập trình viên",
        "Không dành cho người đã lập trình trong vòng 6 tháng gần đây"
      ]
    },
    {
      "title": "Java: Curso profesional de Java 2025 –De cero a Master",
      "url": "https://www.udemy.com/course/curso-completo-de-java/",
      "bio": "Aprende a programar en Java desde cero hasta avanzado como Java SE y inicia el desarrollo web con Java y Más.",
      "objectives": [
        "Curso de Java - Conoce Lenguaje de Programción Java",
        "Crea tu primer programa en Java",
        "Conoce manejo de Variables y Operadores",
        "Aprende a usar estructuras de control",
        "Conoce las caracteristicas de programación funcional que tiene Java",
        "Curso de Programación Orientada a Objetos",
        "Cuatro pilares de Programación Orientada a Objetos(Encapsulamiento, Abstracción, Herencia, Polimorfismo)",
        "Conoce clases Abstractas, Enumeraciones y Interfaces",
        "Aprende el manejo de Errores - Excepciones",
        "Curso de JDBC - Conoce sobre Persistencia de datos",
        "Conoce sobre Colecciones de datos",
        "Aprende el manejo de archivos con Java",
        "Conose sobre Base de Datos MySQL",
        "Operaciones con conexion de Java a MySQL",
        "Introducción a Java Web",
        "Conoce el desarrollo web",
        "Aprende Spring, el framework más popular de Java"
      ],
      "course_content": {
        "Introducción al Curso": [
          "Introducción"
        ],
        "Introducción a Java": [
          "Introducción",
          "¿Qué es Java?",
          "Qué necesitas para empezar",
          "Instalar el JDK",
          "JShell de Java",
          "Instalar IntelliJ IDEA",
          "Hola Mundo con Java",
          "Compilación y ejecución",
          "¿Cómo funciona Java?",
          "Resumen"
        ],
        "Fundamentos de Java": [
          "Introducción",
          "Variables",
          "Tipos de datos Primitivos",
          "Tipos de cade de texto",
          "Tipos arreglo o arrays",
          "Entrada y salida de datos",
          "Sintaxis y semántica",
          "Proyecto - Precio de venta",
          "Resumen"
        ],
        "Control de Flujo": [
          "Introducción",
          "Operadores",
          "Condiciones if-else",
          "Instrucción switch",
          "Operadores ternarios",
          "Bucles en Java",
          "Iteradores",
          "Proyecto - Sistema de descuentos",
          "Proyecto - Juego adivina el número",
          "Resumen"
        ],
        "Métodos en Java": [
          "Introducción",
          "Definición y sintaxis de un método",
          "Parámetros y argumentos",
          "Métodos con retorno",
          "Sobrecarga de métodos",
          "Varargs",
          "Módulos y Paquetes",
          "Java Doc",
          "Resumen"
        ],
        "PRACTICAS: Crear aplicaciones": [
          "Verificación de Números Primos",
          "Verificador de Palabras Palíndromas",
          "Generador de contraseñas aleatorias",
          "Detector de anagramas",
          "Juego: Piedra, Papel o Tijera"
        ],
        "POO - Programación Orientada a Objetos con Java": [
          "Precentación de Curso - POO",
          "Programación Orientada a Objetos",
          "¿Qué es un Objetos?",
          "¿Qué es una Clase?",
          "Modularidad"
        ],
        "POO - Clases y Objetos": [
          "Clases y Objetos",
          "Paquetes",
          "Modificadores de Acceso",
          "Variables y Métodos estaticos",
          "Variables Constantes",
          "Constructores",
          "Sobrecarga de Métodos",
          "This en Java",
          "Variables y Objetos"
        ],
        "POO - Encapsulamiento": [
          "¿Qué es Encapsulamiento?",
          "Getters y Setters",
          "Sobre Escribir Métodos - toString"
        ],
        "POO - Herencia": [
          "¿Qué es la Herencia?",
          "Superclase y protected",
          "Subclase y uso de Super",
          "Provar Herencia",
          "Polimorfismo",
          "InstanceOf",
          "Converción de Objetos",
          "Equals",
          "hashCode"
        ]
      },
      "requirements": [
        "Saber usar una PC y Tener conexión a Interner"
      ],
      "description": "Java: Curso profesional de Java – De cero a Master\nAprende a programar en Java desde cero hasta avanzado como Java SE, Java EE y Sprint Boot con JDK 17, JDK 11 y JDK 8\nFundamentos de programación de Java\nJava es un lenguaje de programación multiplataforma gracias a la JVM(Máquina Virtual de Java). Aprende los fundamentos y características fundamentales del lenguaje y desarrolla tus propias aplicaciones.\nConoce el lenguaje de programación Java\nCrea tu primer programa en Java\nConoce manejo de Variables y Operadores\nAprende a usar estructuras de control\nConoce las características de programación funcional que tiene Java\nCrea aplicaciones divertidas como juegos\nProgramación Orientada a Objetos\nLos paradigmas de programación que se usa con este lenguaje de programación y fue echo para este paradigma de programación orientada a objeto. La Programación Orientada a Objetos (POO) nos ayuda a desarrollar sistemas más ordenado y estructura. Java surgió con este paradigma y es uno de los lenguajes que define el rumbo que sigue la POO.\nCuatro pilares de Programación Orientada a Objetos\nEncapsulamiento\nAbstracción\nHerencia\nPolimorfismo\nPersistencia de Datos\nAprende a guardar datos que se puedan almacenar en un archivo o base de datos\nComprende cómo funciona la persistencia de datos en un sistema de información utlilizando archivos y base de datos relacionales como MySQL y PostgreSQL. Conecta desde Java a una Base de Datos mediante un Driver y Crea aplicaciones donde los datos persistan.\nConoce sobre Colecciones de datos\nConoce sobre Persistencia de datos\nAprende el manejo de archivos con Java\nConose sobre Base de Datos\nCrea una Base de Datos y Genera una Conexión\nRealiza Operaciones GRUD\nCurso de Java Spring - Este curso en en proceso\nAprende Spring el framework más popular de Java para desarrollo de aplicaciones empresarial backend.\nSpring es una herramienta de desarrollo para crear aplicaciones web en la parte de backend con Java. Con Spring obtén información de una base de datos, muéstra através de endpoints y despliega tu aplicación en Heroku para ser consumido.\nConoce el desarrollo web\nConoce Spring boot y crea entorno de trabajo\nConoce Spring data para manejo de datos\nAprende a construir API\nConoce Spring Security\nAprende a desplegar Aplicaciones",
      "target_audience": [
        "Programadores principiantes"
      ]
    },
    {
      "title": "Curso de C++: Básico a Avanzado",
      "url": "https://www.udemy.com/course/curso-de-cpp-basico-a-avanzado/",
      "bio": "Curso diseñado para principiantes o estudiantes universitarios sin conocimientos previos del lenguaje.",
      "objectives": [
        "Elegir el tipo de variable adecuado.",
        "Entrada y salida de datos por consola.",
        "Usar los operadores aritméticos y lógicos con sus respectivas precedencias.",
        "Uso eficiente de las condicionales simples y múltiples.",
        "Usar la estructura repetitiva adecuada para cada tipo de problema.",
        "Reconocer y usar adecuadamente los punteros y referencias.",
        "Crear tus propias funciones y pasar adecuadamente los parámetros por valor o referencia.",
        "Definir correctamente un registro (struct).",
        "Leer y crear archivos de texto.",
        "Leer y crear archivos binarios."
      ],
      "course_content": {
        "Introducción al curso": [
          "Introducción al curso"
        ],
        "Conceptos Básicos": [
          "Instalación de CodeBlocks",
          "Estructura de un programa",
          "Secuencia de escape",
          "Mensaje por consola",
          "Comentarios en el código",
          "Tipos de Variable",
          "Asignación de variables",
          "Notación Científica",
          "Bits y Bytes",
          "Tipo Char",
          "Tipo Int",
          "Tipo bool, float y double",
          "Entrada por consola",
          "Examen 1"
        ],
        "Operaciones básicas": [
          "Operadores aritméticos",
          "División entera y División real",
          "Precedencia Aritmética",
          "Operadores lógicos y de comparación",
          "Biblioteca cmath",
          "Constantes",
          "Dejar de usar un proyecto",
          "SOLUCIÓN: Programa no ejecuta el archivo correspondiente",
          "Ejercicio 1 : Área de un triángulo",
          "Ejercicio 2: Volumen de una esfera",
          "Ejercicio 3: Promedio de notas",
          "Ejercicio 4: Conversión de temperaturas",
          "Ejercicio 5: Distancia entre puntos",
          "Examen 2"
        ],
        "Estructuras condicionales": [
          "Estructura condicional simple",
          "Estructura condicional múltiple",
          "Ejercicio 1: Número par",
          "Ejercicio 2: Número positivo, negativo o neutro",
          "Ejercicio 3: Estacionamiento",
          "Ejercicio 4: Meses",
          "Ejercicio 5: Vocales",
          "Ejercicio 6: Bonificación",
          "Examen 3"
        ],
        "Estructuras repetitivas": [
          "Estructura While ( Mientras ) y Do-While ( Hacer - Mientras)",
          "Contadores y acumuladores",
          "Estructura For",
          "Ámbito de una variable",
          "Ejercicio 1: Números naturales",
          "Ejercicio 2: Cantidad de dígitos",
          "Ejercicio 3: Sumas",
          "Ejercicio 4: Sucesión",
          "Ejercicio 5: Triángulo",
          "Ejercicio 6: Fibonacci",
          "Examen 4"
        ],
        "Arreglos unidimensionales y bidimensionales": [
          "Arreglos Unidimensionales",
          "Cadenas de texto",
          "Buffer de entrada",
          "Ejercicio 1 : Multiplicaciónde elementos",
          "Ejercicio 2: Unión de arreglos",
          "Ejercicio 3: Cadena a mayúsculas",
          "Ejercicio 4: Menor elemento",
          "Ejercicio 5: Ordenamiento Burbuja",
          "Arreglos bidimensionales (Matrices)",
          "Ejercicio 1: Suma de matrices",
          "Ejercicio 2: Producto de matrices",
          "Ejercicio 3: Matriz transpuesta",
          "Examen 5"
        ],
        "Punteros y referencias": [
          "¿Cómo se almacenan las variables en la memoria?",
          "Declaración de un puntero y operador \"Dirección de ...\"",
          "Operador de indirección",
          "Las referencias",
          "Arreglos y aritmética de punteros",
          "Examen 6"
        ],
        "Funciones": [
          "Funciones y procedimientos",
          "Paso por valor y referencia",
          "Paso de punteros",
          "Paso de arreglos y matrices",
          "Sobrecarga de funciones",
          "Ejercicio 1: Potencia",
          "Ejercicio 2: Números amigos",
          "Ejercicio 3: Invertir arreglos",
          "Examen 7"
        ],
        "Registro": [
          "Registros",
          "Ejercicio 1: Proveedores",
          "Ejercicio 2: Promedios",
          "Ejercicio 3: Varones (Parte 1)",
          "Ejercicio 3: Varones (Parte 2)"
        ],
        "Archivos de texto y binarios": [
          "Flujos de entrada y salida",
          "Archivos de texto. Salida (Escritura)",
          "Archivo de texto. Entrada (Lectura)",
          "Modos de apertura",
          "Verificar estado del flujo",
          "Leer múltiples líneas de texto",
          "Archivos Binarios. Escritura",
          "Archivos Binarios. Lectura",
          "Renombrar y remover archivos",
          "Ejercicio: Paso de lineas"
        ]
      },
      "requirements": [
        "Code::Blocks IDE (Descarga e instalación en video)"
      ],
      "description": "El curso se enfocará en aprender los conceptos básicos y avanzados de C++ con Programación Modular . Un curso totalmente enfocado a estudiantes universitarios o principantes que deseen aprender programación con C++.\nEl modalidad de enseñanza del curso es totalmente teórico/práctico donde se explicará detalladamente cada uno de los temas y se desarrollarán programas a modo de práctica para poder reforzar los conocimientos adquiridos.\nEl curso también cuenta con un taller para poder unificar todo lo aprendido hasta el momento, y se desarrollará paso a paso una agenda.",
      "target_audience": [
        "Cualquiera que desee aprender programación en C++.",
        "Principiantes."
      ]
    },
    {
      "title": "一週間で身につくJava言語",
      "url": "https://www.udemy.com/course/java-jhu/",
      "bio": "Androidの開発、IoTやクラウドコンピューティング、そしてOracleの資格試験などにも必須のJaveを豊富なサンプルや練習問題を通して着実に身につける",
      "objectives": [
        "Java言語でのプログラミング能力",
        "オブジェクト指向の考え方",
        "AndroidアプリやWebアプリケーション開発に必要なプログラミングの基礎力",
        "豊富な練習問題を通してのプログラミングスキル"
      ],
      "course_content": {
        "基本編０日目": [
          "Javaとは",
          "Javaとはどんな言語か",
          "Javaの開発環境",
          "この講座の受講方法"
        ],
        "基本編１日目（はじめの一歩）": [
          "開発環境の設定",
          "はじめの一歩",
          "eclipseの設定",
          "eclipseでのHelloWorld",
          "サンプルプログラムの解説",
          "HelloWorldの応用",
          "エラーへの対処",
          "パッケージの概念",
          "深い階層のパッケージ",
          "基本編１日目のまとめ"
        ],
        "基本編2日目（演算と変数）": [
          "Javaの演算子",
          "変数",
          "代入演算子",
          "型変換とキャスト",
          "文字列の演算",
          "final変数",
          "基本編２日目のまとめ（前半）",
          "基本編２日目のまとめ（後半）",
          "【補足1】リテラル"
        ],
        "基本編3日目（条件分岐）": [
          "if文",
          "if～else文",
          "if～else if～else",
          "複雑なif文",
          "switch文",
          "基本編３日目まとめ（前半）",
          "基本編３日目まとめ（後半）"
        ],
        "基本編4日目（繰り返し処理）": [
          "for文",
          "多重ループ",
          "while文",
          "do～while文",
          "whileとdo～whileの違い",
          "無限ループ",
          "基本編４日目まとめ",
          "【補足】前置・後置"
        ],
        "基本編５日目（配列変数）": [
          "配列変数",
          "配列の初期化",
          "多次元配列",
          "不揃いな配列",
          "基本編５日目まとめ"
        ],
        "基本編６日目（クラスとオブジェクト）": [
          "クラスとオブジェクト",
          "複数のインスタンス",
          "基本編６日目まとめ"
        ],
        "基本編第７日目（アクセス指定子）": [
          "アクセス指定子",
          "カプセル化",
          "基本編７日目まとめ",
          "【補足1】参照とnull"
        ],
        "応用編第１日目（静的メンバ）": [
          "静的メンバ",
          "自分自身のメソッド",
          "応用編１日目まとめ"
        ],
        "応用編２日目（継承）": [
          "継承",
          "Objectクラス",
          "応用編２日目まとめ",
          "【補足1】ポリモーフィズム",
          "【補足2】アノテーション"
        ]
      },
      "requirements": [
        "最低限のコンピュータの操作スキルと知識",
        "インターネットへの接続環境をもつパソコン"
      ],
      "description": "① コースの概要\n\nJavaはWebアプリの開発やAndroidスマートフォン・タブレットのアプリケーションを開発できるだけでなく、\n近年ではIoTやクラウドコンピューティングの分野で大変注目を浴びています。\nJavaを学ぶメリットは、スマートフォンアプリやWebアプリなどが開発できることばかりではありません。\nスタンダードな言語仕様と汎用性の高い文法を持つことから、Java言語さえしっかりマスターすれば、\nここから更にC#やRubyなど他の言語を学ぶのが大変楽になります。\nそのため、多くのシステム開発会社では新入社員にまずJava言語を学ばせてから他の言語の学習をさせます。\nそれぐらい、Java言語とは重要な言語なのです。\n\n\nこのコースを学ぶと、単なるJava言語の文法のみならずサンプルや練習問題を通して、\n応用範囲の広いプログラミングの基礎体力も身につけることが出来ます。\nそのため実用目的だけではなくプログラミング教育の参考資料としても最適です。\n\n\n② 目標\n最初に説明したように、このコースは初心者プログラマーを対象としたコースです。具体的には以下のような方が対象です。\nプログラミング学習を始めた大学生および大学院生\nゲーム・情報系の専門学校の学生\n他の様々な学校の学生\nプログラミング教育に備える必要がある小学校から高校までの教員\n今からプログラミングを始める新しい新入社員\nOracleの資格試験を受験するためにJavaプログラミングの基礎を学びたい方\nAndroidプログラミングを始めるためJava言語を学びたいと思っているプログラマー\nSpringといったWebフレームワークでの開発をするためにJava言語を学びたいと思っているプログラマー\nかつてJava言語を学んだこともありますが、挫折した経験のある人\n\n\n③ 内容\nコンテンツは、以下の内容で構成されています。\n講義映像\nソースコード\n練習問題と回答\n開発環境として統合開発環境であるeclipseをWindows上で使用すると想定されています。\neclipseはインターネットで無料で入手できます。\nただし、このコースで導入されたJava言語のソースコードはLinxu/Mac OSなどの異なる開発環境、OSでも使用できます。\n他の環境で勉強している人は、各自自分の環境に対応させて学習を進めてください。",
      "target_audience": [
        "これからプログラミングを始めてみたい学生・社会人",
        "Java言語に興味があり、始めてみたいプログラミング初心者",
        "他のプログラミング言語をすでに学んでおりJava言語に興味がある",
        "Androidスマートフォンのソフトウェアを開発するためにJavaのプログラミングをマスターしたいプログラマー",
        "JSP/Servletといったライブラリや、Struts、SpringといったフレームワークでWebアプリを作るためにJava言語を学びたいプログラマー",
        "一度Java言語を学んだことがあるが挫折したことがある",
        "プログラミング教育のためにプログラミングを身に着けてみたい小学校・中学校などの教員"
      ]
    },
    {
      "title": "Programación en C++ de cero con estructuras de datos y POO",
      "url": "https://www.udemy.com/course/programacion-en-c-plus-plus-con-estructuras-de-datos/",
      "bio": "Aprende a programar en c++, estructuras de datos: Listas , pilas , colas . arboles y programación orientada a objetos",
      "objectives": [
        "1)Algoritmos",
        "2)Operadores Aritmeticos",
        "3)Operadores Logicos",
        "4)Operadores de comparación",
        "5)Estructuras de control",
        "6)Arreglos Unidimensionales y Bidimensionales",
        "7)Funciones y Metodos",
        "8)Programación estructurada",
        "9)Librerías",
        "10)Manejo de Archivos",
        "11)Paso por valor y referencia",
        "12)Funciones especiales",
        "13)Ámbito de un programa, variable globales y locales",
        "14)Punteros",
        "15)Clases predefinidas string , Vector , etc",
        "16)Complejidad algorítmica",
        "17)Espacios de Nombres",
        "18)Introducción a estructuras de datos",
        "19)POO , creación de clases y objetos",
        "20)Encapsulamiento",
        "21)Polimorfismo",
        "22)Herencia",
        "23)Métodos especiales Getter y Setter",
        "24)Constructores",
        "25)Sobrecarga de métodos y constructores",
        "26)Listas",
        "27)Colas",
        "28)Pilas",
        "29)Memoría dinámica y estática"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Variables y tipos de datos": [
          "Nota de Bienvenida",
          "Descargar DevC++ y Primer Programa",
          "Tipos de dato primitivos implementación",
          "Entrada de datos",
          "Declaracion e Inicializacion de Variables"
        ],
        "Operadores Aritmeticos": [
          "Operadores Aritmeticos",
          "Operadores Aritméticos Reducidos",
          "Incremento y Decremento",
          "Ejercicio: Intercambiar Valores",
          "Ejercicio: Promedio",
          "Ejercicio: Costo de transporte",
          "Ejercicio Metros a libras",
          "Descuentos de compra",
          "Ejercicio: Calcular el polinomio dado",
          "Ejercicio: Hipotenusa"
        ],
        "Estructuras de control": [
          "Teoría estructuras de control",
          "IF-ELSE, par o impar",
          "While, Interés Compuesto",
          "Do-While, Crear cuenta de usuario",
          "For, Sumatoria desde \"A\" hasta \"N\"",
          "Switch, Conversor de dinero"
        ],
        "Operadores logicos": [
          "Teoría operadores logicos",
          "Ejercitando lógica y notación reducida"
        ],
        "Operadores de comparación": [
          "Teoría operadores de comparación",
          "Números Primos"
        ],
        "Ejercicios de Estructuras de Control": [
          "Ejercicio: Calificación Alumno",
          "Ejercicio: Múltiplos de X",
          "Dia de la Semana",
          "Ejercicio: Mayor de Edad",
          "Ejercicio Difícil: Estación del Año parte I",
          "Ejercicio Dificil: Estación del Año parte II",
          "Progresión Aritmetica",
          "Progresión Geométrica",
          "Ordenar 3 números",
          "Rendimiento de un Curso"
        ],
        "Programación estructurada: Procedimientos y Funciones": [
          "Teoría Procedimientos y Funciones",
          "Introducción a funciones, Factorial Iterativo",
          "Factorial Iterativo Explicación Grafica",
          "Factorial Recursivo",
          "Factorial Recursivo Explicación Grafica",
          "Fibonacci",
          "Paso por valor",
          "Paso por Referencia",
          "Operador &",
          "Área y Perímetro de un rectángulo"
        ],
        "Ámbito : Variables Globales y Locales": [
          "Ámbito , Variables globales y locales",
          "Ámbito de bloque",
          "Constantes: Define y const",
          "Variables estaticas"
        ],
        "Arreglos Unidimensionales y Bidimensionales": [
          "Teoría Arreglos",
          "Crear Vector , Mostrarlo y Buscar elemento",
          "Arreglo con 100 números Aleatorios",
          "Suma de Vectores",
          "Buscar Menor y Mayor Elemento dentro de un arreglo de números",
          "Arreglo de nombres , Buscar Elemento",
          "Arreglo de caracteres, Formas de almacenar un string",
          "Arreglo de caracteres iniciado por consola"
        ]
      },
      "requirements": [
        "Para la realización de este curso no es necesario tener experiencia previa debido a que se abordara desde los temas más elementales como variables y tipos de datos hasta los más avanzados como estructuras de datos, solo se necesita las ganas de aprender."
      ],
      "description": "Este curso esta diseñado para que aprenda ha programar en C++ sin necesidad de conocimientos previos dado que aborda desde temas fundamentales como lo son los algoritmos, variables y tipos de datos hasta conceptos mas avanzados como lo son las estructuras de datos o la programación orientada objetos. El conocimiento que adquirirás en en este curso es alrededor de un libro de 1000 paginas en c++ dado que precisamente se baso en la estructura organizacional tomando como base varios libros de programación en c++. El curso cuenta con clases mixtas combinando la teoría con la practica , dando especial énfasis en en la practica con una gran variedad de ejercicios de naturaleza simple y compleja aumentando la dificultad de los mismos a medida se gana conocimiento en la programación c++.\nVentajas de aprender C++:\n- C++ es un lenguaje de programación prácticamente incomparable en temas de eficiencia en la programación solo superado por unos pocos lenguajes. C++ es un lenguaje de nivel medio-bajo que le permitirá administrar el uso de recursos de una manera mucho mas eficiente en cuanto a  uso de memoria y velocidad en tiempo de ejecución de programas se refiere, cosa que no se puede tratar en todos lenguajes a dicho nivel de detalle.\n-C++ es un lenguaje multiparadigma, lo cual quiere decir que usted podrá aprender tanto de programación estructurada y estructuras de programación como también sobre programación orientada a objetos(POO) , ambos paradigmas de la programación poderosos y especialmente importantes en la actualidad, lo cual elevara su nivel de conocimiento y su espertiz en cuanto a programación en general se trata.\n-C++ es un colosal en la programación y es uno de los lenguajes más demandados en la actualidad junto con otros lenguajes como Python, java , C o JavaScript entre otros. Aprenderlo le resultara extremadamente provecho si su propósito es desarrollarse profesionalmente.\n-C++ es un lenguaje que aunque pueda parecer difícil le ofrecerá una gran variedad de herramientas para trabajar y le enseñara desde la base como aprender usando buenas practicas en la programación creando código prolijo , organizado, elegante y compacto, cosa que le resultara increíblemente provechosa en equipos de trabajo e inclusive para usted mismo a medida que crea programas con una complejidad mucho más elevada.\n-C++ es un lenguaje increíblemente versátil, esta desarrollado para que usted pueda desenvolverse prácticamente en cualquier tipo de programa juegos, controladores de dispositivos, HPC, nube, escritorio, incrustado, aplicaciones móviles, navegadores web, sistemas operativos, bases de datos, etc.\nEn este curso aprenderás:\n-Variables y tipos de datos\n-Operadores aritméticos\n-Operadores lógicos\n-Operadores de comparación\n-Estructuras de control if, if-else, while, do-while, for , switch.\n-Librerías\n-Constantes.\n-Ámbito , variables locales y globales\n-Arreglos estáticos y dinámicos\n-Punteros y Direcciones de memoria\n-Memoria Heap y Stack\n-Iteración y Recursividad\n-Métodos y Funciones\n-Paso por valor y Referencia\n-Documentación de Código\n-Programación estructurada y Modular\n-Eficiencia y Eficacia algorítmica\n-Algoritmos de búsqueda y ordenamiento\n-Manejo de archivos\n-Estructuras de programación\n-Listas estáticas y Dinámicas simple y doblemente enlazadas\n-Pilas estáticas y Dinámicas\n-Colas estáticas y Dinámicas\n-Arboles ,arboles binarios , ABB , AVL\n-Tablas hash con direccionamiento abierto y cerrado\n-Programación orientada a objetos(POO)(En construcción)\n-Clases y Objetos(En construcción)\n-Encapsulamiento y Modificadores de Acceso(En construcción)\n-Constructores(En construcción)\n-Sobrecarga de métodos y funciones(En construcción)\n-Métodos especiales getter, setter, toString(En construcción)\n-Clases abstractas(En construcción)\n-Herencia(En construcción)\n-Polimorfismo (En construcción)\nNota: Los últimos temas de este temario están en construcción serán incluidos en pocas semanas.\nNota 2: Este curso continuara añadiendo nuevo contenido adicional constantemente.",
      "target_audience": [
        "Este curso va dirigido para toda persona que desee incursionarse en el mundo de la programación, en C++ o profundizar sus conocimientos sobre los mismos"
      ]
    },
    {
      "title": "ChatGPTを最強にするハンズオンo1/ChatGPT API(gpt-4o)/LangChain",
      "url": "https://www.udemy.com/course/chatgpt_langc/",
      "bio": "～Agents/Responses API対応～ ChatGPT APIとLangChain/AutoGPTでChatGPTに翼を授けよう。",
      "objectives": [
        "OpenAI 新AudioAPIの使い方(2025/3/20発表)",
        "OpenAI Responses APIの使い方(2025/3/12発表)",
        "Google Gemini ProのAPI利用方法",
        "ChatGPT APIによるChatGPTファインチューニングハンズオン解説",
        "ChatGPT APIの関数呼び出し(Function Calling API)のハンズオン解説",
        "LangChainでChatGPTとSerpAPIを利用してChatGPTにWebアクセスさせる方法",
        "AutoGPTとのやりとりを完全に日本語で行う方法",
        "SerpAPIの使い方",
        "ChatGPT APIの使い方",
        "OpenAI APIアカウントの作成方法",
        "Google Colaboratoryのセットアップ方法",
        "AutoGPTのセットアップ＆日本語化方法",
        "BabyAGI-UIのセットアップ＆日本語化方法",
        "PrivateGPTをセットアップし完全にローカルに英語でgpt4allと対話する方法",
        "GPT-ENGINEERのセットアップ＆実行方法",
        "OpenInterpreterのセットアップ＆実行方法",
        "DALLE3のデモ解説＆OpenAIの画像生成APIを試す",
        "LLaVa1.5の始め方＆Bardとの比較（StableDiffusion Web画像を解説させる）",
        "GPT-4 VisionとDALLE3の使い方ハンズオン",
        "Assistants Playgroundの使い方",
        "GPTsの使い方・GPTsの作り方",
        "シン・GPTs　ーHuggingChat Assistantsの使い方",
        "Claude 3.0 Sonetの使い方",
        "Claude 3.0 Opus/APIの使い方",
        "Claude 3.0 を利用したWebサイトん作り方",
        "gpt-4-turbo-2024-04-09モデルの使い方"
      ],
      "course_content": {
        "紹介": [
          "紹介"
        ],
        "環境セットアップ": [
          "本講座で利用するサービスのアカウントを作成する"
        ],
        "ChatGPT API(gpt-3.5-turbo)": [
          "【2023年1119更新】ChatGPT APIの新しい呼び出し方",
          "ChatGPT APIに現在の首相の名前を聞いてみる"
        ],
        "SerpAPIの利用": [
          "SerpAPI"
        ],
        "LangChainの利用": [
          "LangChain",
          "（2023/9/4 新版）LangChain",
          "追伸（翻訳プロンプト追加）",
          "LangChain Gallery - YouTubeから文字起こし",
          "LangChain Gallery - YouTubeの文字と開始時間を取得",
          "LangChainとFAISSで動画文字起こしからQuestionAnswering"
        ],
        "AutoGPTの利用": [
          "AutoGPT概要",
          "AutoGPT環境前準備",
          "AutoGPT実行: 月間１万ドル売り上げるドーナッツ屋さん",
          "【2024/4/6アップデート】AutoGPT最新版での実行"
        ],
        "DeepLをクラス化して呼び出し": [
          "DeepL API登録",
          "DeepL認証キーの取得",
          "PythonからDeepL利用",
          "PythonからDeepLを利用して翻訳",
          "AutoGPTからDeepLを呼び出せるようにクラス化",
          "AutoGPTを日本語化する",
          "AutoGPTからのファイル出力も日本語化する",
          "【2024/4/16更新】最新のAutoGPTにDeepL APIを組み込みRoleを日本語で出力する"
        ],
        "BabyAGI-UI/PrivateGPT": [
          "BabyAGI-UIをセットアップし日本語で利用する。",
          "PrivateGPTをセットアップし英語で利用する。"
        ],
        "Function Calling APIの実装ハンズオン": [
          "OpenAI API 0613アップデートの内容概説とChatGPT API 関数呼び出し実装ハンズオン"
        ],
        "GPT-ENGINEER": [
          "GPT-ENGINEERでFlaskのHello World.",
          "GPT-ENGINEERで時計表示"
        ]
      },
      "requirements": [
        "Pythonの基本的な文法がわかっていると進めやすいです",
        "API ReferenceをベースにコピペしたりChatGPT片手に進めるを推奨します",
        "LangChainはPCとWebブラウザ(Chrome/Edge)があれば受講可能です",
        "AutoGPTをハンズオンしたい場合は、Pythonが動く程度のPCがあると尚可です。"
      ],
      "description": "※2025/3/20 OpenAI 最新Audio APIの使い方ハンズオンならびに無料トークンをゲットする方法(2025/4/10まで)を追加しました。\n※2025/3/12 OpenAI 最新API Responses API/Web Search Tool/Agentsの使い方ハンズオン追加しました。\n※2024/12/11 LangChainTutorial.ipynbを現時点で最新のAPIですべて動作するように修正しました。\n※2024/12/9 ChatGPT Plusに加入したo1を効果的に利用するハンズオンを追加しました。\n※2024/5/18 gpt-4oを解説・利用するハンズオンを追加しました。\n※2024/4/13 gpt-4-turbo-2024-04-09を利用するハンズオン追加しました。\n※2024/3/17 Claude3 APIのハンズオン追加しました。\n※2024/1/22 GPTStoreのハンズオン追加しました。\n※2023/12/16 Gemini ProのAPI利用方法追加しました。\n\n\n2022年の衝撃的なリリースから約2年が経過し、ChatGPTは一時的なトレンドではなく、社会に浸透したインフラとなりつつあります。先日2024/5/13のOpenAIの発表ではAIが人間のように感情豊かに見て・聞いて・話をする非常に先進的なデモンストレーションがなされ、マルチモーダルモデルgpt-oがベールを脱ぎました。もっと先と考えられていたAPIが一斉に公開され、発表から1週間も立たずに画期的なアイデアがすでに形になってきています。\n\n\n本講座で扱っている「LangChain」「AutoGPT」「BabyAGI」「Open Interpreter」などの外部ツールはこの発表されたアップデートを活用する上でも、これからの将来を予測するためにも必須の知識となっています。\n\n当講座ではChatGPT APIの最新リリースや周辺ツールのリリースを常にウォッチしどのようにこれらの技術を活用できるのか？といった観点でハンズオン解説を行っていきます。\n\nGMAILアカウントとPCとWebブラウザがあれば、LangChainを使ってChatGPTにWebアクセス結果をベースに回答させるためにすべき事柄を最短でハンズオンで学ぶことが可能です。また、最新のFunction Calling機能やFine Tuningのハンズオンまで網羅しています。2023/9/24にはOpenInterpreterの使い方も追加しております。これからも新技術が出るたびにその使い方にキャッチアップしながら解説を追加していきます。2023/10/4にはDALLE3のデモ＆ハンズオン予告と、openai画像生成APIの使い方を追加しました。2023/10/20にはLLaVa1.5の解説をBardとの比較の中で行いました。画像生成にはStableDiffusion Webを用いました。2023/11/6のOpenAI Dev Dayの内容にキャッチアップし、DALL3およびgpt-4 visionのハンズオンを追加しました。2024/5/13のOpenAIのgpt-4oリリースのハンズオンも追加しました。\n\nアジェンダは下記のとおりです。\n\n\nGoogle Colaboratory（Python実行環境）のセットアップ\nSerpApiアカウント連携＆APIキーの取得\nOpenAI APIアカウント連携＆APIキーの取得\nChatGPT API (gpt-3.5-turbo)を呼んで、2023年4月現在の首相の名前を聞いてみる\nSerpAPIを呼んで、2023年4月現在の首相の名前を聞いてみる\nLangChainでChatGPTとSerpAPIを利用して、ChatGPTに、2023年4月現在の首相の名前を答えてもらう。\nLangChain/ChatGPT API/Whisper/FAISSを利用してYouTubeから音声認識とQuestion Answeringを行う。\nAutoGPTを利用して、ハワイワイキキにカフェをオープンするプランをブレストする。\nAutoGPTをDeepL APIを利用して日本語化する。\nBabyAGI-UIをGoogle翻訳で日本語化して使う（プログラミング・英語一切不要で汎用AIの赤ちゃんと出会う）\nOpenAI API 0613アップデートの内容概説とChatGPT API 関数呼び出し(Function Calling API)\nGPT-ENGINEERのセットアップと実行方法\nChatGPT API Fine Tuning 利用方法\nOpenInterpreterの使い方基礎（Colab)\nDALLE3のデモ＆openai.Image.create()の使い方\nLLaVa1.5のデモ＆Bardとの比較\nOpenAI Dev Day(2023/11/7)の概説と、DALLE3 / gpt-4 visionのハンズオン\nAssistants Playgroundのハンズオン\nGemini Pro API利用方法ハンズオン\nGPTStore利用方法ハンズオン\nClaude 3利用ハンズオン\ngpt-4-turbo-2024-04-09利用ハンズオン\ngpt-4o徹底解説＆利用ハンズオン\nChatGPT Plus加入&家計簿アプリ（フロントページ）のUIUXを徹底的に考えさせるハンズオン\nAgents/Responses API/Web Search Toolを使う\nOpenAI 新Audio APIを使う\n\n\n講座でお待ちしています。",
      "target_audience": [
        "ChatGPTに最新のできごとを聞きたいPython初心者",
        "ChatGPT APIの使用方法に興味のあるビジネスマン",
        "LangChainに興味のあるすべての人",
        "AutoGPTを日本語で使いたい人",
        "ChatGPTを独自データで学習して独自モデルを作りたい方"
      ]
    },
    {
      "title": "Java ile Nesne-Merkezli ve Fonksiyonel Programlama",
      "url": "https://www.udemy.com/course/java-ile-nesne-merkezli-ve-fonksiyonel-programlama/",
      "bio": "Object-Oriented and Functional Programming in Java",
      "objectives": [
        "Java ile nesne-merkezli ve fonksiyonel programlama."
      ],
      "course_content": {
        "Çok Şekillilik": [
          "Upcasting",
          "Çok Şekillilik",
          "Çok Şekilli Metotlar",
          "Binding",
          "Sonuçlar",
          "Downcasting ve instanceof",
          "Ödevler"
        ],
        "Soyut Sınıflar": [
          "Soyut Sınıf ve Metot",
          "Soyut-Somut Sınıf ve Miras",
          "Neden Soyut Sınıf?",
          "Uygulama",
          "Ödevler"
        ],
        "Arayüzler": [
          "Arayüz Nedir? ve interface Anahtar Kelimesi",
          "Arayüzü Gerçekleştirme",
          "Arayüz ve Yetkinlikler - I",
          "Arayüz ve Yetkinlikler - II",
          "Arayüz ve Miras - I",
          "Arayüz ve Miras - II",
          "Tip Kavramı",
          "Geri Çağırma Metotları",
          "Arayüz Yenilikleri",
          "Arayüz Yenilikleri a - default Metotlar",
          "Arayüz Yenilikleri b - static Metotlar",
          "Arayüz Yenilikleri c - private Metotlar",
          "Ödevler"
        ],
        "İç Sınıflar": [
          "Yüksek Seviyeli Sınıf ve İç Sınıf",
          "Statik İç Sınıflar",
          "Üye İç Sınıflar",
          "Yerel İç Sınıflar",
          "İsimsiz Sınıflar",
          "Ödevler"
        ],
        "Sıradışı Durum Yönetimi": [
          "Giriş",
          "Temeller",
          "Geleneksel Sıra Dışı Durum Yönetimi",
          "Java'da Sıra Dışı Durum Yönetimi",
          "Java'da Sıra Dışı Durum Yönetimi a - Throwable",
          "Java'da Sıra Dışı Durum Yönetimi b - Error",
          "Java'da Sıra Dışı Durum Yönetimi c - Exception Sınıfı",
          "try-catch-finally Blokları",
          "try-catch-finally Blokları a - catch Bloğunda Çoklu Sıra Dışı Durum",
          "try-catch-finally Blokları b - finally",
          "Kaynak Yönetimi",
          "Checked-Unchekced Exceptions",
          "Sıra Dışı Durum Nesnesi Oluşturmak",
          "Yakalanan Sıra Dışı Durumu Tekrar Fırlatmak",
          "Overriding ve Sıra Dışı Durumlar",
          "Assertions",
          "Ödevler"
        ],
        "Sınıf Tasarımı": [
          "Karmaşıklık ve Değişim",
          "Birliktelik ve Bağımlılık",
          "Uygulama",
          "Veri ve Sorumluluk"
        ],
        "Fonksiyonel Programlamaya Giriş": [
          "Giriş",
          "Tarih ve Temel Kavramlar",
          "Lambda İfadeleri ve Yüksek Seviyeli Fonksiyonlar",
          "Fonksiyonel Programlama Nedir?",
          "Fonksiyonel Programlama a - Değişmezlik ve Saf Fonksiyonlar",
          "Fonksiyonel Programlama b - Birinci Sınıf Vatandaş Olarak Fonksiyonlar",
          "Farklı Dillerde Fonksiyonel Programlama",
          "Ödevler"
        ],
        "Java'da Fonksiyonel Programlama": [
          "Giriş",
          "İsimsiz Sınıflar",
          "Lambda İfadeleri",
          "Lambda İfadelerinin Özellikleri",
          "Lambda İfadeleri ve Sıra Dışı Durumlar",
          "Hazır Arayüzler - I",
          "Hazır Arayüzler - II",
          "Java APIsinde Fonksiyon Kullanımları",
          "Hazır Arayüzlerde Fonksiyon Bileşimleri",
          "Metot Referansları",
          "Nesne-Merkezli ve Fonksiyonel Programlama",
          "En İyi Uygulamalar",
          "Ödevler"
        ],
        "Torbalar": [
          "Giriş",
          "Torbalara Giriş",
          "Java'da Torbalara Giriş",
          "Collection",
          "Diğer Bazı Arayüzler",
          "Diğer Bazı Arayüzler - a - Iterator",
          "Diğer Bazı Arayüzler - b - Iterable",
          "Diğer Bazı Arayüzler - c - Comparable",
          "Diğer Bazı Arayüzler - d - Comparator",
          "Collection Torbaları",
          "Set ve Gerçekleştirmeleri",
          "Set ve Gerçekleştirmeleri - a - HashSet",
          "Set ve Gerçekleştirmeleri - b - Hashing ve Hash Fonksiyonları",
          "Set ve Gerçekleştirmeleri - c - TreeSet",
          "List ve Gerçekleştirmeleri",
          "List ve Gerçekleştirmeleri - a - ArrayList ve LinkedList",
          "Diğer Collection Nesneleri",
          "Diğer Collection Nesneleri - a - Vector",
          "Diğer Collection Nesneleri - b - Stack",
          "Diğer Collection Nesneleri - c - Queue ve Dequeue",
          "Map Arayüzü",
          "Map Gerçekleştirmeleri - a - HashMap",
          "Map Gerçekleştirmeleri - b - TreeMap",
          "Map Gerçekleştirmeleri - c - Hashtable",
          "Dönüşümler",
          "Algoritmalar",
          "Diğer Torba Kütüphaneleri",
          "Ödevler"
        ]
      },
      "requirements": [
        "Evet, katılımcıların Udemy'de yayınlanan \"Java ile Nesne-Merkezli Programlamaya Giriş\" eğitimimizin içeriğine hakim olmaları beklenmektedir. Dolayısıyla Java SE'nin enum ve mirasa kadarki nesne yapılarını bilmeleri, Java APIsindeki temel sınıfları kullanabilmeleri beklenmektedir."
      ],
      "description": "Bu kursun amacı, katılımcının Java SE ile nesne-merkezli ve fonksiyonel programlama yetkinliklerini tamamlamak ve exceptions, collections, generics, modules ve ve fonksiyonel programlama tekniklerini kullanarak program geliştirebilmesini sağlamaktır. Bu eğitim Java diline giriş yapan ve yine Udemy'de yayınlanmış olan Java ile Nesne Merkezli Programlamaya Giriş’in devamıdır. Dolayısıyla bu eğitimin içeriğine hakim olmadan bu eğitimi almayın.\nBu eğitim Java'da en temel yordamsal (procedural) ve nesne-merkezli (object-oriented) yapılarının, enum ve miras (inheritance) da dahil olmak üzere bilindiğini varsayar. Bunlar üzerine bu kurs,  çok şekillilik (polymorphism), soyut sınıflar (abstract classes) ve arayüzler (interfaces), iç sınıflar (nested/inner classes), modüller, sıra dışı durum yönetimi ve assertionları (exception management and assertions) bina eder. Sınıf tasarımı (class design) ile daha sağlıklı nesne-merkezli programlama nasıl yapılacağını ele alır. Sonrasında kurs fonksiyonel programlamaya (functional programming) giriş yapar ve Java'da fonksiyonel programlama ile lambda ifadelerini (lambda expressions) ele alır. Kurs torbalar ve genel yapılar (collections and generics) ile biter.\nŞu an için eksik olan Modüller ve Genel Programlama (Generics) kursa eklenecektir.\nDolayısıyla kursun kazandıracağı yetkinlikler şunlardır:\nJava’nın en ileri nesne-merkezli (object-oriented) özelliklerini kullanarak tasarımlar yapabilmek ve program yazabilmek.\nJava’nın fonksiyonel (functional) özelliklerini kullanabilmek, lambda ifadelerini yazabilmek.\nSıra dışı durum ve assertion, modüller ve iç sınıfları öğrenerek daha yetkin programlar yazabilmek.\nTorbalar ve genericsleri öğrenerek hem birden fazla neseyi yöneten hem de parametrik tipleri kullanan programlar yazabilmek.\nJava'nın yeni sürümleri çıktıkça, ele alınan konularda yenilikler olursa, bu yenilikleri ele alan yeni bölümler eğitime eklenecektir.\nBu eğitim Oracle'ın Java sertifikalarına hazırlık olarak da alınabilir.\nKurs çok detaylıdır, konuları bildiğinizi düşünseniz bile, atlamadan ve sindirerek ilerleyin. Tüm örneklerini çalıştırın, oynayın, bozun, her şeyin nedenini anlayın ve tekrar çalışır hale getirin. Kendi örneklerinizi yazın, benzer teknikleri uygulayın, ödevleri muhakkak yapın. Ödevlerin çözümlerini de kod olarak paylaşacağım. Ayrıca bazı ödevlerin çözümlerini videolarda da bulacaksınız.\nEğitimin kaynak kodlarına hem Github üzerinden hem de Eclipse projesi olarak ulaşabilirsiniz. Github'da ayrıca PDF yansılar (slides) da var. (yansılarda zaman zaman sonradan yaptığım değişiklikleri de görebilirsiniz.) Bunun için 1. bölümün resourcelarına bakın.\nBu eğitim online canlı derslerle yapıldığı için sıklıkla katılımcı sorularına cevap verdiğimi göreceksiniz. Umarım bu durum eğitimden elde edeceğiniz faydayı arttırır.\nNot: İlk derste instanceof operatörünün Java 15 ile gelen yeni kullanımı ele alınıyor. Bu eğitimi kaydederken Java 14 kullandığımdan bu özelliği ancak \"preview feature\" olarak kodda gösterebilmiştim. Ama artık Java 17 var ve siz de Java 17 kullanın ve bu kodlarda bir sıkıntı çekmeyin.",
      "target_audience": [
        "Java'ya giriş yapmış ve ilerlemek isteyenler.",
        "Java ile nesne-merkezli programlamada ilerlemek isteyenler.",
        "Java ile fonksiyonel programlamayı öğrenmek isteyenler.",
        "OCP sertifikasyonuna hazırlananlar."
      ]
    },
    {
      "title": "Curso de Delphi 10",
      "url": "https://www.udemy.com/course/curso-de-delphi-10/",
      "bio": "Aprendendo trabalhar com delphi 10.2 Berlin",
      "objectives": [
        "Trabalhar com o delphi 10,2 para desenvolver sistemas desktop"
      ],
      "course_content": {
        "Introdução": [
          "Curso de Delphi 10 Berlin",
          "Baixando o Delphi 10",
          "Instalando o delphi 10 Trial",
          "Abrindo o delphi 10",
          "Criando um novo projeto",
          "Estrutura do Projeto",
          "Componentes e Propriedades",
          "Compilando o Projeto",
          "Configurando Formulário",
          "Configurando Botões",
          "Imagens em botões",
          "Nomeando componentes",
          "Entendendo o código fonte",
          "Estruturação do código fonte",
          "Eventos para botões",
          "Tipos de variaveis",
          "Declarando valores para variavel",
          "Chamando variaveis",
          "Variaveis nas procedures",
          "Concatenando variaveis",
          "Convertendo inteiro para string",
          "Convertendo string para inteiro",
          "Trabalhando com calculos",
          "Operadores e comparadores",
          "Condicionais if e else",
          "Concatenando texto com variavel",
          "Condições AND E OR",
          "Laço de Repetição FOR",
          "Laço de Repetição While",
          "Incrementando laços de repetição",
          "Criando uma nova tela",
          "Chamando outras telas",
          "Janelas Modal",
          "Criando Projeto Multiplataforma",
          "Criando uma Calculadora",
          "Trabalhando com Layouts",
          "Dicas para uso dos Layouts",
          "Cabeçalho da calculadora",
          "Programando os operadores",
          "Habilitando e desabilitando botões",
          "Condições para as operações",
          "Programando as operações",
          "Trabalhando com case e switch",
          "Switch com strings",
          "Cálculos com switch e case",
          "Inserindo valores após clicar",
          "Limpando valores na calculadora",
          "Apagando valores da calculadora",
          "Virgulas e casas decimais",
          "Limpando os dados",
          "Finalizando a calculadora",
          "Trocando ícone da aplicação",
          "Criando o executável"
        ]
      },
      "requirements": [
        "Não precisa de nenhum pré-requisito"
      ],
      "description": "O curso de Delphi 10.2 Berlin contém 53 aulas e acompanham todos os arquivos e fontes, este é um curso indicado para iniciantes na programação, é usada a nova plataforma do delphi 10 podendo também ser acompanhado em qualquer delphi a partir da versão XE7, se você pretende se tornar um programador e quer se ingressar nessa área adquira já nosso curso e se torne um programador completo.",
      "target_audience": [
        "Todo aluno que deseja aprender sobre delphi e aprender a programar"
      ]
    },
    {
      "title": "Curso Programação Rust Completo : do Zero ao Pleno! (2025)",
      "url": "https://www.udemy.com/course/curso-programacao-rust-completo-do-zero-ao-pleno/",
      "bio": "Imersão total em Rust: domine conceitos, resolva problemas e crie projetos práticos do início ao fim!",
      "objectives": [
        "Definição de enums para representar valores discretos e hierárquicos",
        "Criação de structs para agrupar dados complexos em uma única estrutura",
        "Trabalho com arrays e vectors para armazenar e manipular conjuntos de dados",
        "Gerenciamento de strings para lidar com dados de texto de maneira segura e eficiente",
        "Utilização de hashmaps para mapear chaves para valores de maneira rápida e flexível",
        "Aplicação de shadowing para reutilizar nomes de variáveis em contextos diferentes",
        "Manipulação de referências para acessar dados de maneira segura e sem copiar grandes quantidades de dados",
        "Declaração de estáticos para compartilhar dados entre todas as instâncias de um programa",
        "Escrita de blocos de código para agrupar instruções lógicas",
        "Definição de tuplas e tuplas structs para armazenar vários valores com tipos diferentes em uma única estrutura"
      ],
      "course_content": {
        "Configuração Inicial até Desafios de Controle de Fluxo e Funções": [
          "Visão geral do Treinamento",
          "Setup Rust",
          "Setup Vscode",
          "Rust Extension no Vscode",
          "Criando Diretório para o Projeto",
          "Explicando Primeiro Programa !",
          "Declaração de Variaveis",
          "Teste Declaração de Variáveis",
          "Tipos de Dados: Inteiros, Ponto Flutuante e Boolean",
          "Exemplo de Fluxo de Controle",
          "Teste Aula Exemplo Fluxo de Controle",
          "Exemplo Input de Dados e Fluxo de Controle Para Analise",
          "Vamos revisar o código da Aula!",
          "Teste Exemplo Input de Dados e Fluxo de Controle Para Analise",
          "Soma de Dígitos Usando While",
          "Calculo do Fatorial usando While",
          "Revisão do código da aula",
          "Quantos Alunos Ficaram de Recuperação ? Usando While",
          "Quantos Alunos Ficaram de Recuperação ? Usando While",
          "Tarefa Maior Divisor Comum Usando While",
          "Maior Divisor Comum Usando While",
          "Revisão da Solução Proposta",
          "Funções Parte 1",
          "Revisão Função Parte 1",
          "Funções Parte 2",
          "Funções Parte 3",
          "Introdução ao For",
          "Calculo do Fatorial de Um Sequência Usando For",
          "Revisão Calculo do Fatorial",
          "Simulado A1",
          "Introdução as Tarefas",
          "Contando de 1 a 10 com Funções, While e For Loops em Rust",
          "Contando de 1 a 10 com Funções, While e For Loops em Rust",
          "Encontrando o maior número em um vetor com Rust",
          "Encontrando o maior número em um vetor com Rust",
          "Verificando se um número é primo com Rust",
          "Verificando se um número é primo com Rust",
          "Crie um programa em Rust que leia um número inteiro e exiba a sua tabuada.",
          "Crie um programa em Rust que leia um número inteiro e exiba a sua tabuada.",
          "Crie um programa em Rust que leia uma sequência de números reais e exiba a soma",
          "Crie um programa em Rust que leia uma sequência de números reais e exiba a soma",
          "Calculando a média de notas com Rust",
          "Calculando a média de notas com Rust",
          "Questões de Entrevistas! - Verificação de Caracteres únicos em Rust",
          "Verificação de Caracteres Únicos em Rust",
          "Solução: Verificação de Caracteres Únicos em Rust",
          "Verificação de Permutação em Rust",
          "Verificação de Permutação em Rust",
          "Solução: Verificação de Permutação em Rust",
          "Verificador de Edição de Strings",
          "Verificador de Edição de Strings",
          "Solução: Verificador de Edição de Strings",
          "Tarefa: Compressão de String",
          "Compressão de String",
          "Solução: Compressão de String",
          "Tarefa: Determinar se um número inteiro é um palíndromo",
          "Determinar se um número inteiro é um palíndromo",
          "Solução: Determinar se um número inteiro é um palíndromo"
        ],
        "Explorando Estruturas de Dados e Funcionalidades Avançadas em Rust": [
          "Tuplas",
          "Revisão de Tuplas",
          "Tipos Enums [Parte 1]",
          "Revisão Tipos Enums [Parte 1]",
          "Teste Enums",
          "Tipos Enums [Parte 2]",
          "Revisão Tipos Enums [Parte 2]",
          "Tipos Enums [Parte 3]",
          "Revisão Tipos Enums [Parte 3]",
          "Tipos Enums [Parte 4]",
          "Revisão Tipos Enums [Parte 4]",
          "Teste Enums",
          "Constantes",
          "Revisão Constantes",
          "Blocos de Código",
          "Revisão Blocos de Código",
          "Shadowing",
          "Revisão Shadowing",
          "Variável statics",
          "Revisão Variável statics",
          "References",
          "Revisão References",
          "Teste",
          "Structs",
          "Revisão Structs",
          "Strings",
          "Revisão Strings",
          "Tarefa: Reversão de String",
          "Reversão de String",
          "Solução: Reversão de String",
          "Tarefa: Verificação de Anagramas em Rust",
          "Verificação de Anagramas em Rust",
          "Solução: Verificação de Anagramas em Rust",
          "Verificando se uma string é um palíndromo com Rust",
          "Verificando se uma string é um palíndromo com Rust",
          "Pass By Reference",
          "Revisão Pass By Reference",
          "Tuple Structs",
          "Revisão Tuple Structs",
          "Arrays",
          "Revisão Arrays",
          "Tarefa: Rotação de Array em Rust",
          "Rotação de Array em Rust",
          "Solução: Rotação de Array em Rust",
          "Implementation Keyword",
          "Teste",
          "Vectors",
          "Revisão de Vectors",
          "Tarefa: Encontrar k-ésimo Maior",
          "Encontrar k-ésimo Maior",
          "Solução: Encontrar k-ésimo Maior",
          "Tarefa: Melhor Momento para Comprar e Vender Ações",
          "Melhor Momento para Comprar e Vender Ações",
          "Solução: Melhor Momento para Comprar e Vender Ações",
          "Tarefa: Movendo Zeros",
          "Movendo Zeros",
          "Solução: Movendo Zeros",
          "Hash Maps",
          "Revisão Hash Maps",
          "Tarefa: Encontrar Duplicatas em um Vetor",
          "Encontrar Duplicatas em um Vetor em Rust",
          "Solução: Encontrar Duplicatas em um Vetor",
          "Tarefa: Construção de Strings",
          "Construção de Strings",
          "Solução: Construção de Strings",
          "Verificação de Padrão de Palavras em Rust",
          "Solução: Verificação de Padrão de Palavras em Rust",
          "Tarefa: Intersecção de Dois Vetores",
          "Intersecção de Dois Vetores",
          "Solução: Intersecção de Dois Vetores",
          "Tarefa: Encontrar a Soma Mais Próxima",
          "Encontrar a Soma Mais Próxima",
          "Solução: Encontrar a Soma Mais Próxima",
          "Teste Enums",
          "Tarefa: Todos os Subsets",
          "Todos os Subsets",
          "Solução: Utilização de Função Interna em Todos os Subsets",
          "Simulado A2",
          "Contando as letras maiúsculas em uma string com Rust",
          "Contando as letras maiúsculas em uma string com Rust",
          "Criar um Programa de Portfólio para o Mercado Financeiro.",
          "Criar um Programa de Portfólio para o Mercado Financeiro.",
          "Criando uma moeda em Rust",
          "Criando uma moeda em Rust",
          "Criando structs e implementando métodos em Rust",
          "Implementação de um Block struct para uma blockchain",
          "Implementação de um Block struct para uma blockchain",
          "Implementação de uma conta bancária em Rust",
          "Solução: Implementação de uma conta bancária em Rust"
        ],
        "Aprofundando em Rust - Arquivos, Traits, Pattern Matching e Projetos Práticos": [
          "Leitura de Arquivos",
          "Revisão Leitura de Arquivos",
          "Escrevendo Arquivos",
          "Revisão Escrevendo Arquivos",
          "Teste",
          "Trabalhando com arquivos em Rust",
          "Definindo Traits",
          "Revisão Definindo Traits",
          "Pattern Matching",
          "Revisão Pattern Matching",
          "Input de Dados no Match",
          "Revisão",
          "Teste",
          "Slice String",
          "Revisão Slice String",
          "Métodos String",
          "Revisão Métodos String",
          "Random Numbers",
          "Revisão Random Numbers",
          "Gerando números aleatórios com Rust",
          "Gerando números aleatórios com Rust",
          "Desenvolva o Jogo de Adivinhação de Número em Rust",
          "Desenvolva o Jogo de Adivinhação de Número em Rust",
          "Jogo de Adivinhação de Palavra em Rust",
          "Jogo de Adivinhação de Palavra em Rust",
          "Modules",
          "Modulos em Structs e Impl",
          "Ler e Escrever arquivos, strings, match, modulos e mais!",
          "Implementar uma forma geométrica",
          "Implementar uma forma geométrica",
          "Criar um código para representar uma doença",
          "Criar um código para representar uma doença",
          "Criar um Código em Rust para aplicar no Mercado Imobiliário",
          "Criar um Código em Rust para aplicar no Mercado Imobiliário",
          "Implementar uma função de cálculo matemático",
          "Implementar uma função de cálculo matemático",
          "Gerenciamento de portfólio financeiro em Rust",
          "Gerenciamento de portfólio financeiro em Rust",
          "Implementando uma interface BankAccount",
          "Implementando uma interface BankAccount"
        ],
        "Análise Estatística, Programação Funcional e Projetos Aplicados em Rust": [
          "Media, Mediana e Moda - Parte 1",
          "Revisão Media, Mediana e Moda - Parte 1",
          "Media, Mediana e Moda - Parte 2",
          "Revisão Media, Mediana e Moda - Parte 2",
          "Media, Mediana e Moda - Parte 3",
          "Revisão Media, Mediana e Moda - Parte 3",
          "Implementação da Função Mediana",
          "Solução: Implementação da Função Mediana",
          "Conceito Moda",
          "Moda Parte 1",
          "Revisão Moda Parte 1",
          "Moda Parte 2",
          "Revisão Moda Parte 2",
          "Calcular Moda de um Vetor de Números Inteiros",
          "Solução: Calcular Moda de um Vetor de Números Inteiros",
          "Projeto: Estatísticas Descritivas com Structs",
          "Solução: Projeto Estatísticas Descritivas Parte 1",
          "Solução: Projeto Estatísticas Descritivas Parte 2",
          "Conclusão Projeto Estatísticas Descritivas",
          "Importando dados para o Projeto",
          "Algoritmo Pig-Latin",
          "Adicionar Pessoa ao Departamento",
          "Adicionar Pessoa ao Departamento Parte 2",
          "Adicionar Pessoa ao Departamento Parte 3",
          "Implementação de uma rede social simples",
          "Implementação de uma rede social simples",
          "Implementação de uma trait de rede com Rust",
          "Solução Implementação de uma trait de rede com Rust",
          "Criar um código em Rust para uma companhia de viagens",
          "Criar um código em Rust para uma companhia de viagens",
          "Tarefa: Caça-Palavra",
          "Caça-Palavra",
          "Solução: Caça-Palavra",
          "Tarefa: Rainhas em um Tabuleiro",
          "Rainhas em um Tabuleiro",
          "Solução: Rainhas em um Tabuleiro Parte 1",
          "Solução: Rainhas em um Tabuleiro Parte 2",
          "Jogo de Batalha Naval em Rust:",
          "Jogo de Batalha Naval em Rust Parte 1",
          "Jogo de Batalha Naval em Rust Parte 2"
        ],
        "Algoritmos de Ordenação, Buscas Eficientes e Manipulação de Entradas": [
          "Método Simples - Algoritmos de Ordenação",
          "Algoritmo Ordenação por Flutuação - Bubble Sort Parte 1",
          "Algoritmo Ordenação por Flutuação - Bubble Sort Parte 2",
          "Bubble Sort e Selection Sort",
          "Leitura de arquivo e ordenação de números inteiros com Bubble sort",
          "Solução: Leitura de arquivo de números inteiros com Bubble sort",
          "Algoritmo Ordenação por Inserção (Insertion Sort) Parte I",
          "Algoritmo Ordenação por Inserção (Insertion Sort) Parte 2",
          "Algoritmo Two Sums Parte 1",
          "Algoritmo Two Sums Parte 2",
          "Algoritmo Two Sums Final",
          "Algoritmo Two Sums com HashMap Parte I",
          "Algoritmo Two Sums com HashMap Parte 2",
          "Algoritmo Two Sums com HashMap Parte 3",
          "Algoritmo Two Sums com HashMap Parte Final",
          "Implementação de Busca Linear em Rust",
          "Implementação de Busca Linear em Rust",
          "Implementação da Busca Binária em Rust",
          "Implementação da Busca Binária em Rust",
          "Tarefa: Máximo Número de Moedas que Você Pode Obter",
          "Máximo Número de Moedas Que Você Pode Obter",
          "Solução: Máximo Número de Moedas Que Você Pode Obter",
          "Tarefa : Utilizando Pattern Matching para tratar diferentes tipos de entradas",
          "Utilizando Pattern Matching para tratar diferentes tipos de entradas em Rust",
          "Solução: Utilizando Pattern Matching para tratar diferentes tipos de entradas",
          "Ganhos Máximos do Uber",
          "Solução: Ganhos Máximos do Uber Parte 1",
          "Solução: Ganhos Máximos do Uber Parte 2",
          "Tarefa: Dinheiro mínimo exigido antes das transações",
          "Dinheiro mínimo exigido antes das transações",
          "Solução: Lógica da menor Transação",
          "Solução: Implementando lógica Dinheiro mínimo exigido antes das transações",
          "Número Mínimo de Linhas para Representar um Gráfico de Ações Mercado Financeiro",
          "Número Mínimo de Linhas para Representar um Gráfico de Ações Mercado Financeiro",
          "Solução: Número Mínimo de Linhas para Representar um Gráfico de Ações",
          "Tarefa: Encontrar Jogadores com Zero ou Uma Derrota",
          "Encontrar Jogadores com Zero ou Uma Derrota",
          "Solução: Encontrar Jogadores com Zero ou Uma Derrota Parte 1",
          "Solução: Encontrar Jogadores com Zero ou Uma Derrota Parte 2",
          "Tarefa: Menor Valor do Número Reorganizado",
          "Menor Valor do Número Reorganizado",
          "Solução: Menor Valor do Número Reorganizado",
          "Tarefa: Recompensar os Top K Alunos",
          "Recompensar os Top K Alunos",
          "Solução: Recompensar os Top K Alunos Parte 1",
          "Solução: Recompensar os Top K Alunos Parte 2",
          "Implementação de Leitura, Ordenação e Gravação de Arquivos",
          "Solução: Implementação de Leitura, Ordenação e Gravação de Arquivos Parte 1",
          "Solução: Implementação de Leitura, Ordenação e Gravação de Arquivos Parte 2",
          "Solução: Implementação de Leitura, Ordenação e Gravação de Arquivos Final",
          "Ordenar a Matriz Diagonalmente"
        ],
        "Concorrência, Bibliotecas, Testes, Lifetimes, Objetos de Trait, Closures": [
          "Setup novo diretório",
          "Introdução as Threads!",
          "Exemplo de uso de Threads!",
          "Exemplo de uso de Threads! Parte 2",
          "Encadeamento de Threads",
          "Criando um canal de comunicação entre as Threads",
          "Compartilhando contador entre as threads!",
          "Utilizando Duration nas threads!",
          "Aprimorando o Exemplo de Concorrência",
          "Aprimorando o Exemplo de Concorrência",
          "Solução: Aprimorando o Exemplo de Concorrência",
          "Tarefa: Gerenciando Threads em Rust",
          "Gerenciando Threads em Rust",
          "Solução: Gerenciando Threads em Rust",
          "Comparando métodos sequenciais e paralelos em Rust",
          "Verificação Paralela de Números Primos em Rust",
          "Verificação Paralela de Números Primos em Rust",
          "Solução: Verificação Paralela de Números Primos em Rust",
          "Métodos assíncronos",
          "Métodos assíncronos Parte 2",
          "Tarefa: Execução Assíncrona em Rust com Tokio",
          "Execução Assíncrona em Rust com Tokio",
          "Solução: Execução Assíncrona em Rust com Tokio",
          "Desenvolvimento de Tarefas Assíncronas com Tokio",
          "Desenvolvimento de Tarefas Assíncronas com Tokio",
          "Solução: Desenvolvimento de Tarefas Assíncronas com Tokio",
          "Introdução a Bibliotecas!",
          "Biblioteca para To-Do-List",
          "Testando Bibliotecas!",
          "Importando a Biblioteca!",
          "Criando diretório de tests para as Bibliotecas",
          "Criando diretório de tests para as Bibliotecas Parte 2",
          "Tarefa: Implementação da Estrutura Point e testando",
          "Implementação da Estrutura Point e testando",
          "Solução: Implementação da Estrutura Point e testando",
          "Tarefa: Implementação da Estrutura Rectangle e testando",
          "Implementação da Estrutura Rectangle e testando",
          "Solução: Implementação da Estrutura Rectangle e testando",
          "Implementando Biblioteca Sepador de Strings e Lifetimes - Parte 1",
          "Implementando Biblioteca Sepador de Strings e Lifetimes - Parte 2",
          "Implementando mais um Teste e um pouco mais sobre referências mutáveis",
          "Tarefa: Lifetimes em Rust",
          "Lifetimes em Rust",
          "Solução: Lifetimes em Rust",
          "Tarefa: Lifetimes em Rust - Parte 2",
          "Lifetimes em Rust - Parte 2",
          "Solução: Lifetimes em Rust - Parte 2",
          "Tipo Genérico de Dado",
          "Tarefa: Implementação da função genérica largest",
          "Implementação da função genérica largest",
          "Solução: Implementação da função genérica largest",
          "Tarefa: Implementação de uma Estrutura Point Genérica",
          "Implementação de uma Estrutura Point Genérica",
          "Solução: Implementação de uma Estrutura Point",
          "Tarefa: Implementação de uma Estrutura Genérica de Lista",
          "Implementação de uma Estrutura Genérica de Lista",
          "Solução: Implementação de uma Estrutura Genérica de Lista",
          "Tarefa: Implementação de uma Estrutura de Baralho Genérico",
          "Implementação de uma Estrutura de Baralho Genérico",
          "Solução: Implementação de uma Estrutura de Baralho Genérico",
          "Biblioteca Divisão por Zero!",
          "Biblioteca Divisão por Zero! - Parte 2",
          "Biblioteca Divisão por Zero - Parte 3",
          "Overflow em uma biblioteca de divisão",
          "Solução: Overflow de uma biblioteca de divisão",
          "Monomorfização em Rust",
          "Monomorfização Parte 2",
          "Implementação de uma Estrutura Genérica Repositório",
          "Solução: Implementação de uma Estrutura Genérica Repositório",
          "Implementação da Estrutura Genérica Soma de Repositorio",
          "Solução Implementação da Estrutura Genérica Soma de Repositório",
          "Implementação da Trait Summary",
          "Solução Implementação da Trait Summary",
          "Objetos de Trait Parte 1",
          "Objetos de Trait Parte 2",
          "Implementação de uma GUI Simples em Rust",
          "Solução Implementação de uma GUI Simples em Rust",
          "Criando uma Biblioteca de Animais",
          "Solução: Criando uma Biblioteca de Animais",
          "Criando uma Biblioteca de Mídia",
          "Solução: Criando uma Biblioteca de Mídia",
          "Implementando um Sistema de Posts em Rust",
          "Introdução a Closures",
          "Closures",
          "Empréstimo em Closures",
          "Movendo a propriedade de valores para a Closure",
          "Definindo a closure unwrap_or_else",
          "Crie um método que tome uma Closure como argumento",
          "Solução: Crie um método que tome uma Closure como argumento",
          "Calculando a Soma Parcial com Closures e Threads",
          "Solução: Calculando a Soma Parcial com Closures e Threads",
          "Criando uma Extensão para a Enumeração Option",
          "Solução: Criando uma Extensão para a Enumeração Option",
          "Biblioteca com Closures e Threads",
          "Solução: Biblioteca com Closures e Threads",
          "Introdução a Iteradores",
          "Iteradores Parte 1",
          "Iteradores Parte 2",
          "Manipulação de Caracteres",
          "Solução: Manipulação de Caracteres",
          "Manipulação de Arquivos",
          "Solução: Manipulação de Arquivos",
          "Manipulação de Estruturas",
          "Solução: Manipulação de Estruturas",
          "Manipulação de Livros",
          "Solução: Manipulação de Livros",
          "Projeto: Busca em Arquivo"
        ],
        "Projeto: Contador com Interface gráfica usando Iced": [
          "Introdução",
          "Iniciando diretório do projeto",
          "Criando a Estrutura para o Contador",
          "Implementando App para o Contador",
          "Criando Interface do Contador",
          "Colcando a conteúdo da Interface Gráfica em um Container",
          "Arrumando os erros e rodando a aplicação"
        ],
        "Projeto: Snake Game": [
          "Setup Projeto",
          "Criando Arquivo desenho.rs",
          "Revisão Criando Arquivo desenho.rs",
          "Criando Função Desenhar Retângulo",
          "Revisão Criando Função Desenhar Retângulo",
          "Criando Arquivo Snake e criando Enum Direção",
          "Revisão Criando Arquivo Snake e criando Enum Direção",
          "Struct Block e Struct Snake",
          "Revisão Struct Block e Struct Snake",
          "Impl Snake",
          "Revisão Impl Snake",
          "Função Desenho e Posição da Cabeça",
          "Revisão Função Desenho e Posição da Cabeça",
          "Debugging dos arquivos Snake e Draw",
          "Função move_forward",
          "Revisão Função move_forward",
          "Função move_forward Parte 2",
          "Revisão Função move_forward Parte 2",
          "Função next_head",
          "Revisão Função next_head",
          "Função overlap\\_tail e debbuging do código",
          "Revisão Função overlap\\_tail e debbuging do código",
          "Criando Arquivo game.rs",
          "Revisão Criando Arquivo game.rs",
          "Struct Game e Função new",
          "Revisão Struct Game e Função new",
          "Função tecla_pressionada",
          "Revisão Função tecla_pressionada",
          "Função desenhar",
          "Revisão Função desenhar",
          "Função atualizar",
          "Revisão Função atualizar",
          "Função adicionar_comida",
          "Revisão Função adicionar_comida",
          "Função atualização_cobra",
          "Revisão Função atualização_cobra",
          "Debugging do código",
          "Implementação na função main( )",
          "Revisão Implementação na função main( )",
          "Explicação detalhada ( Leitura Complementar )",
          "Implementação na função main( ) Parte 2",
          "Revisão Implementação na função main( ) Parte 2",
          "Atualização das dependências e rodando o Jogo",
          "Simulado jogo da cobrinha em Rust"
        ],
        "Projeto: Solana + Rust": [
          "Setup Ubuntu no Windows Parte 1",
          "Setup Ubuntu no Windows Parte 2",
          "Instalação do Rust",
          "Criando Primeiro Projeto com Node.js",
          "Criando Conexão com a Blockchain da Solana",
          "Ganhando SOL em nossa Carteira!",
          "Vamos criar um Token em Solana! Parte 1",
          "Vamos criar um Token em Solana! Parte 2",
          "Mintando nosso Token!",
          "Token Supply",
          "Criando uma Carteira no Phantom",
          "Mandando Tokens para a Carteira Phantom!",
          "Iniciando o Projeto!",
          "Vamos fazer o Build do Projeto!",
          "Sua Primeira Função em Rust!",
          "Utilizando Derive para criar perfil das contas!",
          "Iniciando Arquivo de Testes!",
          "Terminando Primeira Funcionalidade do Teste!",
          "Testando no Terminal!",
          "Criando a Função Soma na Calculadora!",
          "Testar a Função Soma e Criar a Função Subtração!",
          "Criando a Função Multiplicar e Testando!",
          "Criando a Função Divisão e Testando!",
          "Criando a Primeira Funcionalidade em Rust!",
          "Criando uma Campanha!",
          "Fazendo o Compile da Campanha!",
          "Fazendo uma Função para retirar fundos da Campanha!",
          "Fazendo uma Função para retirar fundos da Campanha! Parte 2",
          "Criar Função 'Doar' para a nossa Campanha!",
          "Terminando Função 'Doar' !",
          "Deploy do Dapp na Blockchain da Solana! Parte 1",
          "Deploy do Dapp na Blockchain da Solana! Parte 2",
          "Utilizando React para criar o Front-End!",
          "Criando App.js!",
          "Utilizando UseEffect!",
          "Conectando Dapp com a Carteira Phantom!",
          "Criando Botão de Conectar Carteira!",
          "Criar Campanha Parte 1!",
          "Criar Campanha Parte 2!",
          "Fazendo o Botão 'Criar Campanha' no Dapp - Parte 1!",
          "Fazendo o Botão 'Criar Campanha' no Dapp - Parte 2!",
          "Registrar as Campanhas Criadas!",
          "Renderizando Lista de Campanhas!",
          "Criar Função 'Doar'!",
          "Criar Função 'Retirada de Fundos'"
        ],
        "Projeto: Construa sua Blockchain em Rust!": [
          "Setup do Projeto e Dependências",
          "Struct Bloco",
          "Construção de Blocos!",
          "Vamos iniciar a Prova de Trabalho! Preparar o Hash do Bloco!",
          "Validar Hash!",
          "Fazendo a função Prova de Trabalho!",
          "Criando nova instância da Blockchain e adicIonando Blocos!",
          "Importando Blockchain no main e corrigindo erros!",
          "Iniciando a Blockchain!",
          "Reconstruindo a Blockchain com a Base de Dados!",
          "Refatorando Add_Block para o Banco de Dados!",
          "Finalizando o módulo da Blockchain!",
          "Arrumando os erros na Blockchain!",
          "Criando os argumentos da Linha de Comando!",
          "Construindo as funções para as linhas de comando!",
          "Implementando a Cli e corrigindo erros!"
        ]
      },
      "requirements": [
        "Ser um Entusiasta em Programação ! Ter vontade de Aprender!",
        "Um forte senso de lógica e solução de problemas",
        "Conhecimento básico em programação, como loops, condicionais e funções",
        "Familiaridade com a lina de comando e o ambiente de desenvolvimento de códig",
        "A determinação de se tornar um mestre em Rust e dominar as técnicas mais avançadas da linguagem"
      ],
      "description": "O curso  é uma imersão completa na linguagem de programação Rust, ideal para quem deseja entender profundamente seus conceitos e aplicá-los no desenvolvimento de software robusto e eficiente. Ao longo deste curso, você será guiado por uma série de módulos focados nos principais aspectos da linguagem, desenvolvendo a capacidade de construir projetos práticos e resolver problemas reais.\nVocê começará com os fundamentos essenciais, como o entendimento de ownership e borrowing, que são a base da segurança de memória do Rust. O domínio desses conceitos permitirá que você escreva código mais eficiente e seguro, evitando falhas comuns em outras linguagens. Aprenderá também sobre lifetimes, que garantem que referências no código sejam válidas por todo o tempo necessário, e como esses conceitos se entrelaçam para prevenir erros difíceis de detectar.\nAvançando no curso, você explorará traits e genéricos, que são pilares da flexibilidade e reutilização de código em Rust. Compreender como trabalhar com esses recursos permitirá que você escreva código mais modular, limpo e que funcione em diversos cenários de maneira eficiente. Além disso, você aprenderá sobre o poderoso sistema de tipos do Rust, que assegura que seu código seja altamente seguro e livre de bugs.\nO curso é projetado para ser imersivo, com uma abordagem prática onde você aprenderá resolvendo problemas reais. Desde o início, você será desafiado a criar projetos e a aplicar o que aprendeu em contextos práticos, promovendo uma aprendizagem ativa. Projetos como a construção de uma API em Rust, manipulação de arquivos são apenas alguns exemplos de atividades práticas que farão parte do seu aprendizado.\nAlém disso, o curso aborda tópicos avançados, como concorrência, testes e depuração, fundamentais para um engenheiro Rust que deseja se destacar no mercado. Você aprenderá como lidar com problemas de performance, otimizar seu código e criar aplicações altamente escaláveis. Ao final do curso, você terá desenvolvido uma série de projetos completos que demonstram seu domínio da linguagem e sua capacidade de resolver problemas de forma eficiente.\nAo longo de sua jornada, você terá acesso a suporte contínuo e um ambiente de aprendizagem dinâmico, com fóruns de discussão, quizzes e exercícios para reforçar seu aprendizado. Se você está pronto para dominar Rust e avançar em sua carreira de desenvolvimento de software, este curso oferece tudo o que você precisa para se tornar um especialista de verdade.\nSobre a Linguagem\nO Rust é uma linguagem de programação recente mas já está entre as mais amadas entre os programadores, sendo utilizada para o desenvolvimento de sistemas de nível mais baixo quanto em aplicações de alto nível. Assim, ela é utilizada para o desenvolvimento de diferentes tipos de aplicações, como ferramentas de linha de comando, web services, ferramentas para DevOps, jogos, aplicativos de IoT — Internet of Things — entre outros. A linguagem de programação Rust ainda conta com um compilador superinteligente. Dessa forma, ela identifica erros de programação que podem passar despercebidos em outras linguagens. Além de tudo isso, o Rust ainda pode potencializar a performance de serviços críticos, rodar em sistemas embarcados, e facilmente fazer integração com outras linguagens de programação.\nEste curso parte do ZERO para te ensinar os principais fundamentos para você programar com Rust! O que isso quer dizer? Com algumas noções básicas de programação você já consegue aprender a resolver problemas e programar com Rust!\nE mais do que isso!\nEntre os conteúdos abordados, estão: como rodar com o gerenciador de pacotes do rust: cargo no Vscode; definição de variáveis; tipos de dados; if e else; while e for , loop; constantes; tuplas; funções; Structs; Arrays; Vetores; Pattern Matching e muito mais! E ainda por cima todo conteúdo é aplicado em exemplos e exercícios de computação!\nVenha iniciar seu estudo em Rust conosco!",
      "target_audience": [
        "Iniciantes em programação que desejam aprender uma linguagem poderosa e versátil",
        "Desenvolvedores experientes que querem se aprofundar nas técnicas avançadas da linguagem",
        "Programadores que buscam criar aplicações de alto desempenho e robustas",
        "Qualquer pessoa interessada em dominar o Rust e se destacar no mercado de trabalho de programação"
      ]
    },
    {
      "title": "JAVA - Tópicos Avançados",
      "url": "https://www.udemy.com/course/java-avancado-new-features/",
      "bio": "Uma abordagem prática dos novos recursos (new features) da linguagem Java.",
      "objectives": [
        "Aperfeiçoar-se na programação Java",
        "Compreender os novos recursos de cada release do Java e aplica-los em seus códigos.",
        "Estar sempre por dentro das new features do Java a cada release.",
        "Aplicar técnicas avançadas de programação Java em seus códigos."
      ],
      "course_content": {},
      "requirements": [
        "O aluno deverá ter algum conhecimento em Java",
        "Possuir uma IDE de desenvolvimento para programar em Java (Eclipse, Netbeans, ou de sua preferência)"
      ],
      "description": "A linguagem de programação Java, há mais de 20 anos, tem sido utilizada por milhões de desenvolvedores e presente em bilhões de dispositivos em todo mundo até os dias atuais. A cada release do Java, novos recursos (chamados de new features) e funcionalidades são introduzidas na linguagem, como também, na sua JVM.\nEste curso aborda de forma prática, objetiva, com exemplos e exercícios de codificação os novos recursos da linguagem Java a partir do JDK 8. Trata-se de um curso avançado destinado aos programadores Java ou para aqueles que já têm bons conhecimentos na linguagem e querem se aperfeiçoar.\nEste curso é extremante evolutivo. Eu diria que este é o melhor investimento que você fará, dentre os outros cursos que eu tenho publicado nesta plataforma, porque você estará sempre atualizado e por dentro das mudanças do Java, como também, você obterá o certificado com o título “Java – Tópicos Avançados” reconhecido por mim e pela plataforma, e o mais importante: com valor para o mercado de trabalho.\nSe você já trabalha com Java, ou se você é um estudante que aprecia a linguagem e quer se aprofundar no assunto, então este curso é para você! Inscreva-se agora.\nNos veremos na aula 1 !",
      "target_audience": [
        "Programadores Java que desejam se aperfeiçoar na linguagem.",
        "Estudantes que desejam se aprofundar na linguagem Java."
      ]
    },
    {
      "title": "MEGA CORSO di quasi 50 ORE Per PROGRAMMATORE JAVA JUNIOR!",
      "url": "https://www.udemy.com/course/pillole-di-java/",
      "bio": "Quasi 50 ORE imparare java da zero fino a diventare programmatori java da assumere: POCA TEORIA, TANTA PRATICA",
      "objectives": [
        "Impara le competenze di base di Java necessarie per candidarti per posizioni di Programmatore Java Junior..",
        "Acquisisci le basi java essenziali di Java Enterprise Edition, Spring Framework, Angular e altro ancora.",
        "Impara le \"best practices\" nello sviluppo software da chi ha lavorato come sviluppatore, e formatore, Java pe molte multinazionali.",
        "Acquisisci quello che effettivamente serve sapere per iniziare una carriera come sviluppatore java junior."
      ],
      "course_content": {},
      "requirements": [
        "Non è necessario avere esperienza di programmazione. Imparerai ciò che effettivamente serve in questo corso.",
        "Un computer con Windows, Mac o Linux per installare tutti i software e gli strumenti gratuiti necessari per programmare."
      ],
      "description": "Quasi 50 ore di lezioni!\nQueste lezioni sono state estratte da corsi, tenuti in presenza, finanziati da aziende per poter formare da zero, e assumere, programmatori java junior.\nTi è mai capitato di studiare qualcosa, come ad esempio un corso universitario, e di non capirci assolutamente niente? A noi si, tante volte.\nIl primo pensiero che viene in mente è di non essere in grado di apprendere quel determinato argomento.\n“Troppo difficile per me” è il pensiero che resta intrappolato nella nostra testa, provocando spesso frustrazioni e amarezza. La realtà, invece, è ben diversa da quello che sembra.\n\n\nNon esistono cose difficili o facili. Esistono buoni o cattivi maestri.\nE questo noi lo abbiamo imparato in tanti anni da studenti, e poi da docenti, in diversi contesti e con persone di svariate età e contesti culturali. Inoltre, quello che insegniamo, lo abbiamo già fatto noi in prima persona, abbiamo cioè lavorato come programmatori JAVA, per tanto tempo, in grosse multinazionali ICT.\nQuesta contaminazione di vedute ci ha permesso di sviluppare un modo di spiegare concetti, anche difficili, tale che chiunque, dotato ovviamente di un minimo di buona volontà, possa capire.\nE siamo bravi in quello che facciamo, lo confermano le tantissime persone che abbiamo formato (facciamo questo per lavoro e veniamo pagati a risultato raggiunto).\n\n\nCosa imparerò con questo CORSO JAVA?\nLo scopo di questo livello è diventare programmatore java junior, che è cosa ben diversa dal conoscere \"solo\" java base. Per questo motivo il corso è diviso a livelli. Prima di poter passare al livello successivo, bisogna sapere applicare, concretamente, i concetti del livello corrente.\nI primi 3 livelli riguardano java base, gli altri le tecnologie più richieste sul mercato. Prima di passare agli altri livelli, si deve aver appreso molto bene i primi 3 livelli. Appreso vuol dire che si riesce a svolgere gli esercizi in un tempo accettabile.\nATTENZIONE: verranno spiegate solo le cose effettivamente richieste, nel mondo del lavoro, ad un programmatore java junior. Questa conoscenza dettagliata degli argomenti da sapere ci è data da anni  di esperienza nel campo della formazione di programmatori java per le aziende.\n\n\nQuali argomenti verranno affrontati?\nTutti gli argomenti richiesti ad un programmatore java junior, con un occhio di riguardo al mondo Enterprise.\nAttenzione: alcuni concetti non saranno approfonditi. Questo perché sono conoscenze, in genere, non richieste a una figura junior. Questo non vuol dire che non sono importanti ma semplicemente che dovranno essere approfonditi in futuro, con un apprendimento on the job, durante il passaggio da programmatore junior a senior. E' meglio sapere bene le basi che poco di tutto.\n\n\nCosa è incluso?\nUna serie di video con delle dispense, e esercizi, da seguire passo passo.\n\n\nObiettivi dell'intero corso\nDiventare dei programmatori java junior, partendo da zero.",
      "target_audience": [
        "Questo corso è perfetto per i principianti assoluti senza precedenti esperienze nella programmazione.",
        "Imparare una professione BEN PAGATA che può essere svolta comodamente DA CASA"
      ]
    },
    {
      "title": "【Java-超入門】ゼロからはじめる 初心者向け『Java』【１週間】コース ～優しい ステップバイステップ 講座～",
      "url": "https://www.udemy.com/course/java-getting-started/",
      "bio": "『新たにJavaを始めたいかた』『転職のためのプログラミング習得したいかた』『新入社員が業務で使うJavaの基礎を学びたいかた』のため、つまずきやすい【Javaのはじめの一歩】を分かりやすい解説を聞いて学べる講座",
      "objectives": [
        "Javaプログラミングから実行の流れを理解できる。",
        "基本的なJavaプログラムを作成できる。",
        "Javaプログラミング環境をパソコン上に作れる。（Windows環境で解説）",
        "Javaの基本文法をマスターできる。"
      ],
      "course_content": {
        "【Javaの特徴】": [
          "「本コース資料」と「サンプルプログラム」",
          "【１】Javaとは",
          "【２】Javaの特徴",
          "【３】本コースの主旨",
          "【４】本コースの対象",
          "【５】本コースの学び方",
          "【まとめ】セクション １"
        ],
        "【Java開発環境の構築】": [
          "【１】開発環境の構成",
          "【２】開発環境の構築",
          "【３】覚えておくこと",
          "【まとめ】セクション ２"
        ],
        "【Java実行までの流れ】": [
          "【１】実行までの３ステップ",
          "【２】３ステップ❶コーディング",
          "【３】３ステップ❷コンパイル",
          "【４】３ステップ❸実行",
          "【５】デバッグ",
          "【まとめ】セクション ３",
          "【演習問題】と【解答例】セクション ３",
          "【演習問題解説】セクション３"
        ],
        "【Javaプログラム全体像】": [
          "【１】ソースコードの基本ルール",
          "（サンプル４－１）",
          "【２】わかりやすくするために",
          "（サンプル４－２）",
          "【３】基本構造",
          "（サンプル４－２改変）",
          "【まとめ】セクション ４",
          "【演習問題】と【解答例】セクション ４",
          "【演習問題解説】セクション ４"
        ],
        "【変数の宣言と代入】": [
          "【１】変数とは",
          "【２】変数の使い方３ステップ",
          "（サンプル５－１）",
          "【３】変数を使う時のポイント",
          "（サンプル５－２）",
          "【４】定数",
          "【５】識別子",
          "（サンプル５－３）",
          "【まとめ】セクション ５",
          "【演習問題】と【解答例】セクション ５",
          "【演習問題解説】セクション ５"
        ],
        "【データ型】": [
          "【１】リテラル",
          "【２】基本データ型",
          "（サンプル６－１）",
          "【３】String型",
          "（サンプル６－２）",
          "【４】データ型の大分類",
          "【まとめ】セクション ６",
          "【演習問題】と【解答例】セクション ６",
          "【演習問題解説】セクション ６"
        ],
        "【演算子】": [
          "【１】式",
          "【２】①連結演算子",
          "（サンプル７－１）",
          "【２】②算術演算子",
          "（サンプル７－２）・算術演算子の評価順",
          "【２】③インクリメント演算子・デクリメント演算子",
          "（サンプル７－３）",
          "【２】④関係演算子",
          "（サンプル７－４）・関係演算子の評価順",
          "【２】⑤論理演算子",
          "（サンプル７－５）・論理演算子の評価",
          "【２】⑥代入演算子",
          "（サンプル７－６）",
          "【３】規則",
          "（サンプル７－７）",
          "【まとめ】セクション ７",
          "【演習問題】と【解答例】セクション ７",
          "【演習問題解説】セクション ７"
        ],
        "【型変換】": [
          "【１】代入の原則",
          "【２】自動的な型変換",
          "（サンプル８－１）",
          "【３】明示的な型変換",
          "【４】入出力・エスケープシーケンス",
          "（サンプル８－２）",
          "（サンプル８－３）",
          "【まとめ】セクション ８",
          "【演習問題】と【解答例】セクション ８",
          "【演習問題解説】セクション ８"
        ],
        "【配列】": [
          "【１】配列とは",
          "【２】配列の宣言",
          "【３】配列の要素",
          "【４】配列要素の初期化",
          "【５】String型の配列",
          "（サンプル９－１）",
          "【まとめ】セクション ９",
          "【演習問題】と【解答例】セクション ９",
          "【演習問題解説】セクション ９"
        ],
        "【ｉｆ文】": [
          "【１】条件分岐とは",
          "【２】フローチャート",
          "【３】if文",
          "【４】条件式",
          "（サンプル１０－１）",
          "（サンプル１０－２）",
          "【まとめ】セクション １０",
          "【演習問題】と【解答例】セクション １０",
          "【演習問題解説】セクション １０"
        ]
      },
      "requirements": [
        "パソコンを持っていて、プログラミングしながら学習できること。（解説はWindowsで行っています）",
        "プログラミング経験は不要です。環境構築から学べます。"
      ],
      "description": "このコースは、Javaプログラミング超入門コースです。\n\n\nこれをご覧いただけている たあなたは…\n\n\n『マンネリの毎日の中でプログラミングを新たに学びたい』\nというかたかも知れません…\n\n\n『転職のためのプログラミングを学びたい』\nというかたかも知れません…\n\n\n『新入社員で、業務で使うJavaの基礎を学びたい』\nというかたかも知れません…\n\n\nただ、そう思ってはいるものの\n何から始めればよいか 分からないかも知れませんね。\n\n\nそのような あなたは\nぜひ このコースを ご受講いただけたらと思っています。\n\n\nこのコースは、初心者向けになっています。\n\n\n\n\n▼ このコースの特徴 ▼\n\n\n★このコースでは、プログラミング初心者が挫折しそうな\nポイントを踏まえて、用語や考え方を丁寧に解説していきます。★\n\n\nプログラミングで挫折するのは、最初の段階で\n用語や考え方に、ついていけない場合が最も多いものです。\n\n\nこの事に充分に配慮しています。\n\n\n\n\n▼ このコースで学ぶと ▼\n\n\n★『マンネリの毎日の中でプログラミングを新たに学びたい』かたは…\n\n\nプログラミングの楽しさを知って、更に高度な\nアプリケーションの開発に挑戦することができるようになります。\n\n\n★『転職のためのプログラミングを学びたい』かたは…\n\n\n開発環境の構築と、Javaプログラミングの基礎を学ぶことで\n転職に向けた基礎を身につけることができます。\n\n\nJavaは最も活用分野が広く、最も多くの人に使われていて\n求人数も 長らく Javaが第１位をキープしています。\n転職に有利なのは言うまでもありませんね。\n\n\n★『新入社員で、業務で使うJavaの基礎を学びたい』かたは…\n\n\n新入社員研修の現役講師から、実務で活きるプログラミングの基礎を\n学ぶことで、実際の研修の予習復習や 実務の準備ができます。\n\n\n業務にスムーズに入っていける、基礎力を養うことができます。\n\n\n\n\n▼ はじめましょう ▼\n\n\n新たなスキルを身につけることは、自己成長とキャリアの発展につながります。\n\n\nJavaを学ぶことで、プログラミングの基礎をしっかりと学び\nさらに高度なアプリケーションの開発に挑戦することができます。\n\n\nこの講座では、Javaの「はじめの一歩」を踏み出して\nプログラミングの基本的な概念や文法を学びます。\n\n\nそして、プログラミングしながら成長していくことができます。\n\n\nこの講座は、皆さんの成長と成功を応援する場です。\n皆さんが本当に輝けるよう、全力でサポートします！\n\n\nさあ、Javaの世界への扉を開きましょう！\n\n\n一緒に学び、成長し、素晴らしい\nアプリケーションを開発する土台を身につけましょう。\n\n\nさあ、新たな挑戦の舞台が広がっています。\n\n\n一緒にJavaの世界を探求し、自身の成長とキャリアの可能性を広げましょう！\n\n\n未来への第一歩を踏み出す準備はできていますか？\nそれでは、講座のスタートです！",
      "target_audience": [
        "新入社員で研修でJavaを使うので予習をしておきたいかた。",
        "転職のためにプログラミングを学びたいかた。",
        "Javaプログラミングに挑戦してみたいかた。",
        "Javaプログラミング初心者のかた。",
        "プログラミングで挫折した経験のあるかた。",
        "（Javaプログラミング未経験者・初心者向けになっています。ある程度の知識・スキルをお持ちのかたには物足りない内容となっております。ご了承ください。）"
      ]
    },
    {
      "title": "Club Java Master - Novato a Experto Java +110hrs Actualizado",
      "url": "https://www.udemy.com/course/club-java-master-de-novato-a-experto-java-javaee-spring-hibernate-jpa/",
      "bio": "Actualizado Conviértete en Full Stack Java Developer Aprende las tecnologías Java como Java EE, Spring, Hibernate y más",
      "objectives": [
        "Tener los fundamentos de Java, así como las bases para incluso presentar una certificación Java",
        "Diseñar sistemas Java orientados a objetos (POO)",
        "Aplicar patrones de diseño como MVC, DTO, DAO, entre muchos más",
        "Usar JDBC para conectarse a cualquier base de datos como Oracle o MySql, etc.",
        "Aplicar Servlets y JSPs para el desarrollo de aplicaciones Web con Java",
        "Aprenderás a utilizar el framework de Struts de Apache",
        "Aplicarás el framework de Hibernate para crear una capa de datos robusta, flexible y escalable",
        "Dominarás el framework de Spring para aplicarlo a tus sistemas Java del mundo real",
        "Aplicarás tecnologías de Java EE (versión empresarial Java) y aprenderás EJBs, JPA, Web Services SOAP y REST, Seguridad y mucho más!!!"
      ],
      "course_content": {},
      "requirements": [
        "No se requiere ningún conocimiento previo, ya que aprenderás Java desde lo más básico hasta lo más avanzado.",
        "Manejo básico de PC"
      ],
      "description": "Actualizado! +110 horas de video, +8,000 estudiantes, +600 Clases, este es el curso perfecto para convertirte en un experto Java, Full Stack Java Developer.\n¿Te falta tiempo para estudiar o dinero para invertir en tu capacitación Java o quieres conseguir empleo/trabajo como programador profesional Java?\nCon el curso de Club Java Master te convertirás en un especialista en la tecnología Java (Full Stack Java Developer). Estudiaremos temas desde la lógica de programación, los Fundamentos de Java, Programación Orientada a Objetos con Java, JDBC con Conexión a Bases de Datos, Servlets y JSP's, Struts Framework, Hibernate Framework, Spring Framework, Java Empresarial (Java EE), incluyendo EJB's, JPA, Web Services, Seguridad y más.\n\nEl curso cuenta con dos versiones. Toda la primera parte incluye el uso del IDE de IntelliJ, la segunda versión incluye el IDE de Netbeans, así que sin importar cual sea el IDE de tu preferencia podrás aprender y estudiar de ambos IDEs.\nAsí que el Club Java Master será la mejor inversión que podrás realizar para convertirte en el experto Java que siempre has soñado.\n\nCon todo lo anterior, tendrás las bases para preparar varias certificaciones como programador Java, además de adquirir el conocimiento para poder aplicar a varias vacantes laborales para comenzar a trabajar como programador Java en tiempo record.\nEste curso cuenta con los siguientes niveles:\n\n\nNivel. Fundamentos de Java\n\nLección 1 - Comenzando con la Tecnología Java\nEl asombroso mundo de la programación en Java\nQué es la tecnología Java (desde un enfoque práctico)\nNuestro primer programa en Java desde cero\nLección 2 - Variables y Operadores en Java\nUso de Variables en Java y para qué las utilizamos\nTipos de Datos en Java y cómo se clasifican\nManejo y Clasificación de operadores en Java\nLección 3 - Sentencias de Control en Java\nUso de la estructura if-else y dónde utilizarla\nManejo de la esctrutura switch y cuando aplicarla\nLección 4 - Manejo de Ciclos en Java\nUso del ciclo for y su uso\nUso del ciclo while y cómo aplicarlo\nUso del ciclo do-while y cuando utilizarlo\nLección 5 - Programación Orientada a Objetos\nIntroducción a la Programación Orientada a Objetos (POO)\nManejo de Clases en Java\nUso de Objetos en Java\nLección 6 - Funciones en Java\nDeclaración de Métodos o Funciones en Java\nUso y llamado de Funciones en Java\nLección 7 - Manejo de Datos en Java\nUso de Arreglos en Java\nManejo de Matrices en Java\nLección 8 - Herencia en Java\nManejo de Herencia en Java\nUso de superclases y subclases en Java\nLaboratorio Final del Nivel\nEjercicio Final donde se integra todo lo aprendido en este Nivel\n\n\nNivel. Programación con Java\n\nLección 1 - Polimorfismo en Java\nQué es el polimorfismo y su aplicación\nSobreescritura en Java y su uso\nLección 2 - Manejo Avanzado de Objetos en Java\nConversión de Objetos (cast)\nIdentificando el tipo de objeto con el operador instanceof\nLa importancia y uso del operador this\nLección 3 - Manejo de Bloques de Código en Java\nAlcance de Variables (Scope)\nUso de bloques estáticos y no estáticos\nLección 4 - Uso de Clases Abstractas e Interfaces en Java\nDiferencias entre Clases Abstractas e Interfaces\nDeclaración y uso de Clases Abstractas\nManejo de Interfaces en Java y cuándo utilizarlas\nLección 5 - Manejo de Excepciones en Java\nProcesando las excepciones en Java\nUso de try-catch y propagación de Excepciones\nMódulo 6 - Manejo de Colecciones en Java\nUso de las colecciones en Java\nManejo de List, Set y Map y la aplicación de cada estructura\nMódulo 7 - Manejo de Archivos en Java\nManejo y uso de archivos en Java\nManejo de Streams en Java y sus usos\nLaboratorio Final del Nivel\nEjercicio Final donde se aplica todo lo aprendido en este nivel\n\n\nNivel. Conexión a Bases de Datos con JDBC\n\nLección 1 - Comenzando con JDBC (Java Database Connectivity)\nLa necesidad de una base de datos\nInstalando MySql y Oracle\nDescarga de controladores (drivers) para conectarnos a la base\nLección 2 - Conectando a la Base de Datos (BD)\nPasos para conectarnos a una base de datos relacional\nCódigo JDBC para conectarnos a la base de datos\nLección 3 - Sentencia Select\nPasos para ejecutar la sentencia Select de SQL con JDBC\nUso de la sentencia select para leer la información de la BD\nLección 4 - Manipulando Datos con JDBC\nPasos para ejecutar las sentencias insert, update y delete\nUso de las sentencias insert,update y delete para manipular información\nSeparación de funciones select, insert, update y delete con JDBC\nLección 5 - Arquitectura Multicapas\nEstructurando nuestro código JDBC\nCreando la capa de datos en una Arquitecturas Multicapas\nLección 6 - Patrones de Diseño\nPatrón de Diseño DAO (Data Access Object)\nPatrón de Diseño DTO (Data Transfer Object) o VO (Value Object)\nLaboratorio Final con la integración de todo lo visto en este Nivel\nNivel - Servlets y JSPs\n\nLección 1 - Introducción a la Tecnología Web con Java\nEl asombroso mundo de la tecnología Web con Java\nLa revolución de las aplicaciones Web y cómo aprovecharla\nEl servidor de aplicaciones Glassfish y cómo utilizarlo\nLección 2 - Conceptos Básicos de los Servlets\nSin misterios: qué es la tecnología de los Servlets\nElementos y ciclo de vida de un Servlet\nLección 3 - Manejo de Sesiones con Servlets\nImplementación del concepto de Sesiones con Servlets\nAprenderemos el uso del objeto HttpSession\nImplementaremos un carrito de compras Web\nLección 4 - Conceptos Básicos de los JSPs\nEstudiaremos cómo crear páginas Web dinámicas con JSPs\nAprenderemos los elementos fundamentales de los JSPs\nLección 5 - Conceptos Avanzados de Servlets y JSPs\nVeremos cómo crear una aplicación Web integrando los Servlets y JSPs\nProcesamiento de datos con Servlets y despliegue de información con JSPs\nLección 6 - JSTL y EL (Expression Language) en JSPs\nEntenderemos las etiquetas JSTL para facilitar el uso de JSPs\nVeremos el poder de EL (Expression Language) en los JSPs\nLección 7 - Patrón de Diseño MVC (Model View Controller)\nEstudiaremos una arquitectura multicapas del mundo real con Servlets y JSPs\nAplicaremos el patrón de diseño MVC con Servlets y JSPs\nLección 8 - Aplicación Control Clientes\nIntegración de los primeros 5 niveles en un proyecto final\nAnálisis, Diseño y Desarrollo de la aplicación Control de Clientes\nEste nivel les permite conseguir empleo desde becario o programador Java Jr\nNivel - Java Server Faces\n\nLección 1 - Introducción a JavaServer Faces\nQué es JSF y su rol en Java EE\nConceptos básicos de JSF y MVC\nHolaMundo con JSF\nLección 2 - ManagedBeans en JSF\nConcepto de ManagedBeans en JSF\nUso de ModelManagedBeans en JSF\nExpression Language (EL) en JSF\nCocepto de BackingBeans en JSF\nManejo de Alcances (Scopes) en JSF\nLección 3 - Reglas de Navegación en JSF\nReglas de Navegación en JSF\nCiclo de Vida en JSF\nLección 4 - Validadores en JSF\nManejo de Validadores en JSF\nUso de Convertidores en JSF\nManejo de Mensajes e Internacionalización en JSF\nLección 5 - Manejo de Eventos en JSF\nUso de Value Change Listener\nManejo de ActionListener y ActionEvent en JSF\nUso de librería estándar y SelectItems en JSF\nLección 6 - Manejo de Facelets\nLa evolución de JSP y el uso de Facelets\nEl uso y la importancia de Faceltes en JSF\nLección 7 - Integración de Servicios Java EE\nEl rol de JSF, EJB y JPA\nEjercicio donde se integra todo lo visto en este Nivel\n\n\nNivel - Java EE (Básico) (Incluye EJB's y JPA)\n\nLección 1 - Introducción a Java EE\nIntroducción al mundo Java Empresarial (Java EE)\nStack de Tecnologías Java EE\nArquitectura Multicapas en Java EE\nInstalación de las Herramientas (Eclipse, MySql)\nInstalación del Servidor de Aplicaciones Glassfish\nUso de Maven y JavaEE\nHolaMundo con JavaEE\nLección 2 - Enterprise Java Beans (EJB)\nIntroducción a los EJB\nTipos y Configuración de un EJB\nInyección de Dependencias en Java EE\nEmpaquetamiento y Contenedores empresariales\nLección 3 - Introducción a Java Persistence API (JPA)\nIntroducción a Java Persistence API (JPA)\nEntenidimiento de las clases de Entidad en JPA\nManejo de EntityManager y Persistence Unit\nUso de JPA\nLección 4 - Consultas con JPA\nCiclo de Vida en JPA\nTipos de Relaciones en JPA\nConsultas JPQL en JPA\nUso del API de Criteria en JPA\nManejo de Transacciones en JPA\nNivel - Java EE (Avanzado) (Incluye Web Services y Seguridad)\nLección 5 - Rol de JSF\nRol de JSF en Java EE\nAjax en JSF\nPrimeFaces y JSF\nIntegración JSF, PrimeFaces, AJAX, EJB y JPA\nLección 6 - WebServices y JavaEE\nIntroducción a los Web Services\nTipos de Web Services JAX-WS y JAX-RS\nQué es un Documento WSDL\nUso de Documentos XML y XSD (XML Scheme)\nManejo del API de JAXB\nEstrategias de Generación de Web Services\nDespliegue de Web Services\nCreación del Cliente del Servicio Web\nLección 7 - REST Web Services\nIntroducción a REST Web Services\nAnálisis de Peticiones HTTP\nAnotaciones del API JAX-RS\nIntegración de EJB y JAX-RS\nCreación de un Cliente REST\nDocumento WADL y XSD del REST Web Service\nDespliegue de un REST Web Service\nCreación Cliente REST Web Service\nLección 8 - Seguridad en Java EE\nIntroducción a la Seguridad en Java EE\nAutenticación y Autorización en Java EE\nSeguridad en la Capa Web en Java EE\nSeguridad en Capa EJB en Java EE\nAutenticación de Clientes en Java EE\nAutenticación del Cliente Web\nAutenticación del Cliente SOAP y REST Web Service\nEjercicio Final con la integración de todo lo aprendido\n\n\nNivel - Struts Framework\nLección 1 - Introducción a Struts Framework\n¿Qué es un Struts Framework?\nInstalación de Herramientas del Curso\nLección 2 - HolaMundo con Struts\nCreación del proyecto Web con Struts Framework\nHolaMundo con Struts.\nLección 3 - Manejo de Acciones con Struts\nAcciones con Struts\nEjercicio Acciones con Struts\nMás ejercicios de Acciones con Stu\nLección 4 - Manejo de Formas con Struts\nFormBeans con Struts\nEjercicio con FormBeans\nLlenado de Formularios con Struts\nLección 5 - Acciones Avanzadas con Struts\nFormas Avanzadas con Struts\nEjercicio Formas Avanzadas con Struts\nLección 6 - Internacionalización con Struts\nManejo de Internacionalización con Struts\nEjercicio manejo de Mensajes con Struts\nEjercicio manejo de Internacionalización con Struts\nLección 7 - Manejo de Excepciones con Struts\nManejo de Excepciones con Struts\nEjercicio Manejo de Excepciones con Struts\nLección 8 - Validación Manual con Struts\nValidación Manual con Struts\nEjerciciodas Validación Manual con Struts\nLección 9 - Validación Automática con Struts\nValidación Automática con Struts\nEjercicio Validación Automática\n\n\nLección 10 - Manejo de Tiles (Plantillas) con Struts\nUso de Tiles (Plantillas) con Struts\nEjercicio Plantillas con Struts\nLaboratorio Final\nConclusión del Curso con Struts\n\n\nNivel - Hibernate Framework y JPA (JavaPersistence API)\n\nLección 1 - Introducción a Hibernate Framework\n¿Qué es un ORM - Object Relational Mapping?\nCómo Hibernate me ayuda en un diseño multicapas empresarial\nCómo ser mucho más productivo en la capa de datos con Hibernate\nLección 2 - Configuración de Hibernate\nRevisaremos de los Patrones de Diseño DAO y DTO\nPondremos en práctica las operaciones básicas con Hibernate.\nCrearemos una aplicación Web con JSPs, Servlets y Hibernate.\nLección 3 - Manejo de Relaciones con Hibernate\nEstudiaremos los tipos de Asociaciones en Hibernate\nVeremos las relaciones uno-uno, uno-muchos y muchos-muchos\nEstudiaremos el concepto de Clases de Entidad que nos ofrece Hibernate\nLección 4 - Ciclo Vida en Objetos de Entidad\nEstudiaremos el concepto del Ciclo de Vida en Objetos de Entidad\nAprenderemos el concepto de Persistencia y Persistencia en Cascada\nLección 5 - Consultas con HQL\nAprenderemos el lenguaje HQL (Hibernate Query Language)\nEstudiaremos el concepto de JOINS en HQL\nAnalizaremos el concepto de Lazy Loading y Fetch en HIbernate\nLección 6 - Consultas API Criteria\nEstudiaremos el API de Criteria y cómo aplicarlo en Hibernate\nAnalizaremos en qué casos aplicar HQL o el API de Criteria\nLección 7 - Query by Example\nAprenderemos a aplicar Criteria Join y Fetch\nUtilizaremos Query by Example para crear queries avanzados\nLección 8 - Sistema SGA con Hibernate\nConstruiremos el sistema SGA con Hibernate\nLa capa de datos la construiremos utilizando Hibernate\nCrearemos consultas avanzadas con Hibernate\nAplicaremos todo lo aprendido en este Nivel\n\n\nNivel - Spring Framework\n\nLección 1 - Introducción a Spring\nQué es Spring y su importancia en el munodo Java EE\nConceptos Básicos de Spring y sus módulos\nArquitecturas Multicapas utilizando Spring Framework\nLección 2 - Configuración de Spring\nCómo aplica Spring la cohesión y el acomplamiento\nQué es la Fábrica de Spring y cómo configurarla\nLección 3 - Inyección de Dependencias\nManejo de Inyección de Dependencias con Spring\nRelación entre clases y su uso con Spring\nTipos de Inyecciones de Dependencias con Spring\nUso de Anotaciones con Spring\nLección 4 - Spring y JDBC\nIntroducción a Spring con JDBC\nUso de Plantillas con Spring JDBC\nConfiguración general de Spring JDBC\nConfiguración de un DataSource en Spring\nConsultas con Spring JDBC\nUso de RowMapper con Spring JDBC\nLección 5 - Manejo de Transacciones con Spring\nIntroducción a Spring con JDBC\nDefinición de TransactionManager en Spring\nAtributos de una Transacción\nPropagación de una Transacción en Spring\nConfiguración de Transacciones en Spring\nY muchos temas más.\nAsí que empieza tu capacitación hoy mismo.\nRecuerda, tu satisfacción está 100% garantizada o tu dinero de vuelta.\nTe espero del otro lado.\nIng. Ubaldo Acosta\nFundador de Global Mentoring",
      "target_audience": [
        "Cualquier interesado en convertirse de Novato a Experto programador Java",
        "Cualquiera que quiera aprender la lógica de programación con Java",
        "Cualquiera que quiera aprender la programación orientada a objetos",
        "Cualquier interesado en aprender JDBC y conectarse a cualquier base de datos con Java",
        "Cualquier interesado en aprender a crear aplicaciones Java Web con Servlets y JSPs",
        "Cualquier interesado en aplicar los frameworks más populares como Struts, Spring y Hibernate",
        "Cualquier interesado en aplicar Java EE y tecnologías como EJB, JPA, Web Services REST y JAX-WS SOAP, Seguridad y mucho más"
      ]
    },
    {
      "title": "Curso de Desenvolvimento Java",
      "url": "https://www.udemy.com/course/curso-de-desenvolvimento-java/",
      "bio": "Aprenda a programar em java com esse curso completo, prático e diferenciado!",
      "objectives": [
        "Criar e manter programas Java profissionalmente",
        "Adotar as melhores práticas de desenvolvimento com Java",
        "Utilizar variáveis, classes, métodos, condicionais, loops, arrays, collections e exceções",
        "Aplicar os princípios de orientação à objetos nos programas Java"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação do Curso",
          "O que é uma linguagem de programação?",
          "Interpretadores vs Compiladores",
          "Introdução ao Java",
          "Configuração do Ambiente Windows",
          "Configuração do Ambiente Mac",
          "Configuração do Ambiente Linux",
          "Primeiro Programa Java",
          "Para se aprofundar"
        ],
        "Conhecendo a Base": [
          "Introdução",
          "Estrutura de um Programa Java",
          "Teoria: Variáveis e a sua função",
          "Prática: Variáveis e sua função",
          "Teoria: Tipos Primitivos",
          "Prática: Tipos Primitivos",
          "Operadores no Java",
          "Conversão de Tipos",
          "Entrada e Saída de Dados (I/O)",
          "O tipo de dados String",
          "Boas Práticas (Clean Code)",
          "Para se aprofundar...",
          "Exercício 1 - Média Aritmética",
          "Exercício 2 - Dias de Idade",
          "Exercício 3 - Tabuada",
          "Exercício 4 - Relacionamento de Ordem",
          "Exercício 5 - Preço com Desconto",
          "Exercício 6 - Estoque Médio",
          "Exercício 7 - Conversor Dólar Real",
          "Exercício 8 - Desafio: Saudação usando o Console",
          "Conclusão"
        ],
        "Tomando Decisões no Código": [
          "Introdução",
          "Teoria: Estruturas de Seleção - If",
          "Prática: Estruturas de Seleção - If",
          "Prática: Operador Ternário - If",
          "Teoria: Estruturas de Seleção - Switch",
          "Prática: Estruturas de Seleção - Switch",
          "If vs Switch",
          "Boas Práticas (Clean Code)",
          "Para se aprofundar...",
          "Exercício 1 - Aprovado / Reprovado",
          "Exercício 2 - Par / Ímpar",
          "Exercício 3 - Ordem Crescente",
          "Exercício 4 - Categoria Atleta",
          "Exercício 5 - Calculadora",
          "Exercício 6 - Calculadora de IMC",
          "Exercício 7 - Área Figura Geométrica",
          "Exercício 8 - Ano Bissexto",
          "Conclusão"
        ],
        "Repetindo Instruções": [
          "Introdução",
          "Teoria: Estruturas de Repetição - While e Do While",
          "Prática: Estruturas de Repetição - While e Do While",
          "Teoria: Estruturas de Repetição - For",
          "Prática: Estruturas de Repetição - For",
          "Teoria: While vs For",
          "Teoria: Jump Statements",
          "Prática: Jump Statements",
          "Boas Práticas (Clean Code)",
          "Loops Aninhados",
          "Para se aprofundar...",
          "Exercícios de Programação",
          "Contando de 1 a 10",
          "Soma dos números de 1 a N",
          "Pirâmide de números",
          "Imprimindo o maior número",
          "Fatorial",
          "Sequência de Fibonacci",
          "Conclusão"
        ],
        "Arrays de Dados": [
          "Introdução",
          "Teoria: Conhecendo os Arrays",
          "Prática: Conhecendo os Arrays",
          "Teoria: Percorrendo os Arrays",
          "Prática: Percorrendo os Arrays",
          "Prática: Argumentos do Programa Java",
          "Teoria: Arrays Multidimensionais",
          "Prática: Arrays Multidimensionais",
          "Teoria: Percorrendo Arrays Multidimensionais",
          "Prática: Percorrendo Arrays Multidimensionais",
          "Para se aprofundar...",
          "Imprimir Array de Números",
          "Array de Tarefas",
          "Comparando Arrays de Números",
          "Agenda de Compromissos",
          "Batalha Naval",
          "Conclusão"
        ],
        "Trabalhando com Objetos": [
          "Introdução",
          "Orientação à Objeto (OO)",
          "Vantagens da OO",
          "Classes",
          "Atributos",
          "Métodos",
          "Construtores Padrão",
          "Construtores com Parâmetros",
          "Valores Padrão de Atributos",
          "Pacotes",
          "Import de Pacotes",
          "Membros Públicos",
          "Tipos de Referência",
          "Wrapper Classes",
          "Modificador Static",
          "Métodos Static",
          "Atributos Static",
          "Quando usar o Static e Modificador Final",
          "Bloco Static",
          "Arrays são Objetos",
          "Arrays de Primitivos",
          "Arrays de Objetos",
          "Igualdade entre Objetos",
          "Igualdade entre Arrays",
          "Para se aprofundar...",
          "Currículo",
          "Carro",
          "Conta Bancária",
          "Jogo de Monstros",
          "Conclusão"
        ],
        "Princípios da OO": [
          "Introdução",
          "Pilares da OO",
          "Teoria: Encapsulamento",
          "Prática: Encapsulamento",
          "Modificadores de Acesso - Atributos",
          "Modificadores de Acesso - Métodos",
          "Getters e Setters",
          "Modificadores de Acesso - Classes",
          "Modificadores de Acesso - Pacote Default",
          "Encapsulamento no Construtor",
          "Teoria: Abstração",
          "Prática: Abstração",
          "Teoria: Herança",
          "Prática: Herança",
          "Usando a Palavra Reservada Super",
          "Vantagens da Herança no Código",
          "Sobrescrever Métodos",
          "Modificador Protected - Atributos",
          "Modificador Protected - Métodos",
          "Uso do instanceof",
          "A Classe Object",
          "Classes Abstratas",
          "Usando Interfaces",
          "Métodos Default - Interfaces",
          "Modificador Final",
          "Teoria: Polimorfismo",
          "Prática: Polimorfismo",
          "Casting de Polimorfismo",
          "Sobrecarga de Métodos",
          "Polimorfismo com Generics",
          "Atributos no Polimorfismo",
          "Tipos de Polimorfismo: Compile vs Runtime",
          "Encapsulamento",
          "Herança",
          "Polimorfismo",
          "Conclusão"
        ],
        "Trabalhando com Strings": [
          "Introdução",
          "Revisando o tipo String",
          "Pool de Strings",
          "Entendendo a Imutabilidade das Strings",
          "Strings são Arrays de Caracteres",
          "Acessando Caracteres Específicos na String",
          "Capitalizando uma String",
          "Dividindo uma String em Palavras",
          "Conversões entre Tipos",
          "Concatenação com o StringBuilder",
          "Formatação de Strings Complexas",
          "Reverter String",
          "Palíndromos",
          "Jogo da Forca",
          "Conclusão"
        ],
        "Utilizando as Collections": [
          "Introdução",
          "Arrays vs Collections",
          "Declarando um ArrayList",
          "Adicionando elementos no ArrayList",
          "Get no ArrayList - Get",
          "Insert / Update no ArrayList",
          "Delete no ArrayList",
          "Sort no ArrayList",
          "Percorrendo um ArrayList - For vs Iterator",
          "Conversões entre Array e ArrayList",
          "Map e HashMap",
          "TodoList com List",
          "TodoList com Map",
          "Conclusão"
        ],
        "Lidando com Exceções": [
          "Introdução",
          "O que são exceções?",
          "Try - Catch",
          "Capturando exceções específicas",
          "Capturando múltiplas exceções",
          "Lançando exceções com o throw",
          "Exceções Checáveis vs Não Checáveis",
          "Exceções Personalizadas",
          "Transação Bancária",
          "Conclusão"
        ]
      },
      "requirements": [
        "Apenas vontade e compromisso em aprender no seu tempo",
        "Um computador que permita instalar as ferramentas necessárias para acompanhar o curso"
      ],
      "description": "Quer aprender Java, umas das linguagem mais usadas no mercado, estável, que possui umas das maiores comunidades de devs do mundo e que paga generosamente os seus profissionais?\nNesse curso, você vai aprender na prática a usar essa linguagem desde os fundamentos até conceitos mais avançados de orientação à objetos. E tudo isso com uma das instrutoras mais bem avaliadas na plataforma!\n\n\nO que você aprenderá:\nCriar e manter programas Java profissionalmente\nAdotar as melhores práticas de desenvolvimento com a linguagem\nUtilizar variáveis, classes, métodos, condicionais, loops, arrays, collections e exceções\nAplicar os princípios de orientação à objetos nos programas Java\nHá algum requisito ou pré-requisito para o curso?\nApenas vontade e compromisso em aprender no seu tempo\nUm computador que permita instalar as ferramentas necessárias para acompanhar o curso\nPara quem é este curso:\nIniciantes que desejam trabalhar com Java\nIntermediários que desejam reforçar os conceitos bases do Java e evoluir na carreira\nAvançados que desejam reforçar as suas bases do Java\nCurtiu? Então não perca mais tempo procurando cursos, se inscreva agora nesse curso que foi planejado para te tornar uma pessoa desenvolvedora Java utilizando uma didática focada em aliar teoria e prática sempre de forma clara e objetiva.\n\n\nAtribuições:\nImagem do Curso: By storyset on Freepik",
      "target_audience": [
        "Iniciantes que desejam trabalhar com Java",
        "Intermediários que desejam reforçar os conceitos bases do Java e evoluir na carreira",
        "Avançados que desejam reforçar as suas bases do Java"
      ]
    },
    {
      "title": "دورة متكاملة في لغة السي شارب c#",
      "url": "https://www.udemy.com/course/arabiccsharp/",
      "bio": "دليلك لتعم لغة السي شارب بكل تفاصيلها",
      "objectives": [
        "ستكون قادر على البرمجة بلغة سي شارب",
        "ستكون قادر على التعامل مع الفجول ستديو",
        "ستكون قادر على استعمال بعض الاختصارات",
        "ستكون قادر على الطباعة وادخال المعلومان من والى البرنامج",
        "ستكون قادر على تعريف جميع انواع المتغيرات",
        "ستكون قادر على استعمال المعليات الرياضية والعمليات المنطقية وعمليات المقارنه",
        "ستكون قادر على استمال جمل التحكم بشكل احترافي من جمل الشرط وجمل التكرار وجمل اتخاذ القرار",
        "ستكون قادر على التعمال مع المصفوفات واللستات وبكل خواصها",
        "ستكون قادر على اكتشاف الاخطاء وامساكها",
        "وسكون قادر على متابعة البرنامج بشكل احترافي",
        "ستكون قادر على استمال الدوال",
        "جميع مفاهيم oop ستكون بين يديك",
        "ستكون قادر على استعمال البرمجه الشيية سهولة وقوة",
        "سكون قادر على التعامل مع الوقت",
        "سكتون قادر على التعامل مع النصوص"
      ],
      "course_content": {
        "Introduction to C# and VS - مقدمة في لغة السي شارب والفجول ستديو": [
          "Introduction to language and environment - مقدمة مبسطة عن اللغة وبيئة العمل",
          "Keywords and IO statement - الكلمات المحجوة وجمل الادخال والاخراج",
          "statement and shortcode for writing - جمل واختصارات الطباعة",
          "Introduction to Variables - مقدمة في المتغيرات",
          "Type Conversions - التحويل بين انواع المتغيرات",
          "Mathematical operations - العمليات الرياضية",
          "Comparisons and logical operations - عمليات المقارنة وعمليات المنطقية",
          "Static variables - المتغيرات الثابتة"
        ],
        "Control Structures - جمل التحكم": [
          "Conditional Statement (if) - (if) جمل الشرطية",
          "Conditional Statement (if else) - (if else) جمل الشرطية",
          "Conditional Statement (operator) - (operator) جمل الشرطية",
          "Conditional Statement (switch) - (switch) جمل الشرطية",
          "Loop Statement (For) - (for) جمل التكرار",
          "Loop Statement (while) - (while) جمل التكرار",
          "Loop Statement (do while) - (do while) جمل التكرار",
          "Control Statement (break ,continue) - (break ,continue) جمل التحكم"
        ],
        "examples for the previous parts - أمثلة للأجزاء السابقة": [
          "enter numbers from keyboards - ادخال ارقام من الكيبورد",
          "odd or even program - برنامج كشف الرقم الزوجي والفردي",
          "Square area program - برنامج حساب مساحة المربع والمستطيل",
          "Calculator program - برنامج الحاسبة",
          "goto (Calculator program) - ( اذهب الى (برنامج الحاسبة"
        ],
        "array and list - المصفوفات والقوائم": [
          "introduction to array - مدخل الى المصفوفات",
          "Definition of array - طرق تعريف المصفوفات",
          "work with array - التعامل مع المصفوفات",
          "array with for - المصفوفات مع جمل التكرار",
          "work to List - المعمل مع القوائم"
        ],
        "Intermediate level - المستوى المتوسط": [
          "try catch - السيطرة على الاخطاء المتوقعة",
          "debugging - متابعة خطوات البرامج",
          "line number and regions - طرق ترتيب البرامج",
          "foreach - جملة التكرار التلقائية",
          "nested loops - التكرار المتشعب",
          "functions - التعامل مع الدوال"
        ],
        "OOP Programming - البرمجة الشيئية": [
          "Class",
          "Access Modifiers",
          "Namespace",
          "Class Constructor - Destructors",
          "Encapsulation",
          "Inheritance",
          "Abstract Class - Sealed Class",
          "Overloading",
          "Override",
          "Interface",
          "Delegate",
          "Events",
          "Anonymous",
          "Lambda",
          "Enum"
        ],
        "You must Know - يجب ان تعرف": [
          "work with DateTime",
          "Work with String"
        ]
      },
      "requirements": [
        "لا تحتاج لمعرفة اي شي لبدء التعلم"
      ],
      "description": "كورس متكامل في لغة السي شارب\nفي غضون اسبوع واحد من مشاهدة الدروس والتتطبيق سوف تكون قادر على استعمال لغة السي شارب مع جميع التقنيات\nلغة سي شارب تستعمل في كل مجال : برمجة المواقع + برمجة التتطبيقات الحاسوب + برمجة تتطبيقات الهواتف الذكية وغيرها\nفي هذا الكورس سوف نتعلم مبادى لغة السي شارب واساسيات البرمجة وستكون لنا انطلاقة مع جمل التحكم والامثلة ونصائح حول البرمج بجمل التحكم وسنمر على الجمل المتقجمة في اللغة وبعدها ندخل في عالم البرمجة الشيئية وهي من اهم اجزاء الكورس وسوف نتعلم البرمحة الشيئة ببساطه وقوة\nالجزء الاخير في الكورس سيكون في تحديث مستمر في معدل محاضرة لكل شهر تقريبا\nسوف استقبل طلباتكم لشرح بعض الامور التي ترونها غامضة او عادة الشرح\nسنركز على كونسل ابلكيشن ولا نهم بالواجهات ليكون الكورس مركز على اللغة\nمرفق مع كل جزء ملف نصي يشرح الجزء ليكون مرجع تحتفظ به\nانصح الجميع ببداية قوية خاليه من التجارب والاخطاء مع هذا الكورس",
      "target_audience": [
        "المهتمين بلغة سي شارب",
        "المبتدئين بلغة سي شارب",
        "لمبرمجي الكونسل ابلكيشن"
      ]
    },
    {
      "title": "Algoritma Geliştirme Eğitimi ve Programlamaya Giriş",
      "url": "https://www.udemy.com/course/algoritma-akis-diyagramlari-ve-programlamaya-giris/",
      "bio": "Algoritma Eğitimi ve Akış Diyagramları ile Programlamaya Giriş, Flowgorithm Programı ile Programlama Mantığını Öğrenin",
      "objectives": [
        "Algoritma Eğitimi",
        "Yazılıma Giriş",
        "Programlamanın temeli olan algoritmayı",
        "Algoritma ve programlama mantığını",
        "Algoritma İle Problem Çözmeyi",
        "Sıfırdan başlayarak problem çözmeyi ve algoritma oluşturmayı",
        "Akış şemalarının programlamadaki önemini",
        "Akış şemalarını oluşturmayı",
        "Oluşturdukları algoritma ve akış şemalarını test ederek sonuç almayı",
        "Flowgorithm programını kullanarak akış şemalarını oluşturmayı",
        "Bilgisayar Programcılığı"
      ],
      "course_content": {
        "Algoritmaya Giriş ve Temel Kavramlar": [
          "Bilgisayar Sistemlerinin Çalışma Prensibi",
          "Problemin Tespit Edilmesi, Çözülmesi ve Programlamaya İlişkin Temel Kavramlar",
          "Programlamada Kullanılan Temel Operatörler",
          "Temel Operatörlerin Kullanılabilirliği",
          "Akış Diyagramlarında Kullanılan Semboller ve Flowgorithm Programının Tanıtılması",
          "Flowgorithm Programının MacOs İşletim Sistemine Kurulması"
        ],
        "Koşullu İfadeler": [
          "Dikdörtgenin Alan ve Çevre Hesabı - Dairenin Alanını Hesaplama",
          "3 Sayının Ortalaması ve Girilen Tutara Göre KDV Hesaplama",
          "Koşullu İfadeler - Ehliyet Alabilme-Girilen Sayı Pozitif, Negatif veya Sıfır mı",
          "İşe Alınma Problemi if - else Kullanımı",
          "Parçalı Fonksiyon Problem Çözümü",
          "Vücut Kitle İndeksi Hesaplama",
          "Girilen Vize ve Final Notuna Göre Ortalama Hesaplama ve Geçti Kaldı Sonucu",
          "İkinci Dereceden Bir Bilinmeyenli Denklem Çözümü",
          "100 lük Sistemdeki Puanı 5lik Sisteme Çevirme",
          "Üstüne Ekleyerek Toplam İşlemi - Zihinden Toplama",
          "Çalışma Soruları"
        ],
        "Döngüler": [
          "Döngülere Giriş",
          "Girilen Sayıların Toplamı ve Çift Sayıların Toplamı",
          "Girilen Sayının Mükemmel Sayı Olup Olmadığını Tespit Etme",
          "Girilen Sayının Faktöriyelini Hesaplama",
          "Girilen 10 Adet Sayıdan Kaç Tanesinin Pozitif, Negatif ve Sıfır Olduğunu Bulma",
          "Çarpım Tablosu - İç İçe Döngüler",
          "İç içe Döngü Uygulaması - Yıldız Karakterleri ile Üçgen Oluşturma",
          "İç İçe Döngü Uygulaması - Sayı Piramidi",
          "While Döngüsüne Giriş",
          "0 Girilene Kadar Sayıları Toplama",
          "0-100 Arası 3 ve 5 e Bölünen Sayılar",
          "Girilen Sayının Asal Çarpanlarını Bulma",
          "Girilen Sayının Asal Olup Olmadığını Tespit Etme",
          "10 Tabanındaki Sayıyı 2 Tabanına Dönüştürme",
          "Girilen İki Sayının OBEB'ini Bulma",
          "İstenen Sayıda Asal Sayı Bulma",
          "İstenen Sayıda Mükemmel Sayı Bulma",
          "Do While Döngüsünün Kullanımı",
          "Do While Döngüsü ile Geçerli Şifre Girişi"
        ],
        "Dizi Kavramı Ve Diziler ile İlgili İşlemler": [
          "Dizi Nedir? Hangi Durumlarda Kullanılır?",
          "Dizilerin Döngüler ile Kullanımı",
          "Dizi Elemanlarını Güncelleme",
          "Dizi İçindeki En Büyük Sayıyı Bulma",
          "Dizilere Veri Girişi ve Not Ortalama Hesabı",
          "Dizi İçindeki Elemanları Sıralama",
          "Dizi İçindeki Elemanları Ters Sıralama",
          "Diziye Yeni Eleman Ekleme"
        ],
        "Fonksiyonlar": [
          "Fonksiyon Tanımı Ve Parametresiz Fonksiyonlar",
          "Parametre Alan Ve Geri Değer Döndürmeyen Fonksiyonlar",
          "Kullanıcının Girdiği İki Sayı Aralığını Fonksiyon İle Yazdırma",
          "Parametre Alan Ve Geri Değer Döndüren Fonksiyonlar",
          "Dizi Elemanlarını Fonksiyon ile Toplama",
          "Fonksiyon Yardımı İle Dizinin Elemanlarını Küçükten Büyüğe Sıralama",
          "Fonsiyon Alıştırmaları",
          "Fonksiyonlar ile İlgili Örnek Sorular"
        ],
        "Flowgorithm İle Gelen Dahili Fonksiyonlar": [
          "Dahili Fonksiyonları Tanıyalım - Matematiksel Fonksiyonlar",
          "Metinsel ve Dönüşüm Fonksiyonları Tanıyalım",
          "Kelimeyi Harf Harf Yazdırma",
          "Kelimeyi Tersten Yazma",
          "Rastgele Harflerden Kelime Oluşturma 1. yöntem",
          "Rastgele Harflerden Kelime Oluşturma 2. Yöntem",
          "Ödev: Rastgele Harflerden Kelime Oluşturma 3.Yöntem",
          "Girilen Metni Şifreleyen Program",
          "Girilen Cümleyi Kelime Kelime Ayırma",
          "Bir Sayıyı Rakamlarına Ayırma ve Rakamların Toplamını Hesaplama",
          "Dahili Fonksiyonlar"
        ],
        "Sizler İçin Seçme Sorular (Ödevler)": [
          "Girilen 20 adet sayıdan çift olanların toplamının tek olanların toplamına oranı",
          "Girilen sayının 5'in kuvveti olup olmadığını bulan programın akış diyagramı",
          "1-40 arası 3'e bölünen sayıların adedini hesaplama",
          "Haftanın Hangi Günü?",
          "N ye Kadar Olan Tek ve Çift Sayılar Üzerinde Matematiksel İşlemler",
          "Arka arkaya girilen rastgele 10 sayının ortalaması",
          "Klavyeden girilen sayının pozitif tam bölenlerini ve toplamlarını yazdırma",
          "Kullanıcıdan alınan sayının hangi basamağında hangi rakam var?",
          "1/2! + 2/3! + 3/4! +.+ n/(n+1)! Girilen n sayısına göre verilen seriyi hesaplama",
          "Girilen İki Sayının OBEB'ini Bulma 2.Yöntem",
          "Armstrong Sayılar",
          "Ödev: Orta - İleri Seviye Algoritma Soruları"
        ],
        "Proje: Online Alışveriş Sepeti": [
          "Proje Tanıtım",
          "Alış Veriş Sepetine Ürün Ekleme",
          "Alışveriş Sepetindeki Ürünleri Listeleme",
          "Alışveriş Sepetindeki Ürünü Silme",
          "Projeyi Fonksiyonlar Yardımı İle Oluşturma"
        ],
        "Örnek Uygulamalar - Sizden Gelen Sorular": [
          "Sayı Tahmin Oyunu",
          "Binom Açılımı- Pascal Üçgeni",
          "Seri Sayılar Toplama ve Çıkarma",
          "Girilen Pozitif Tam Sayının, İki Tam Sayının Kareleri Toplamı Şeklinde Yazma",
          "Dizi Algoritmaları - 1",
          "Dizi Algoritmaları - 2",
          "Dizi Algoritmaları - 3",
          "Binary Search(İkili Arama)",
          "T.C. No Doğrulama",
          "Akış Diyagramı Sınav Sorusu",
          "Yıldız Karakterleri İle Elmas Deseni Oluşturma",
          "Girilen Ip Adresinin Geçerli Olup Olmadığını Kontrol Etme",
          "Dizi İçindeki Farkı En Az Olan İki Sayıyı Tespit Etme"
        ],
        "BONUS BÖLÜM": [
          "Bonus: Bundan Sonra Yapılacaklar"
        ]
      },
      "requirements": [
        "Temel bilgisayar kullanımı"
      ],
      "description": "Programlamaya başlamadan önce mutlaka algoritma ile başlanmalıdır. Programlamanın temelinde problem çözme yatmaktadır. Bir programlama dilinde verilen problemi çözmek için algoritma ve akış şemalarından faydalanılmaktadır. Doğrudan bir programlama dili öğrenmeye çalışmak, kodları ezberlemekten öteye geçmez. Oysaki yazılımda ezber yoktur. Sadece o programlama diline ait metodlar, komutlar ezberlenir. Bütün programlama dillerinde ortak olan bazı değerler bulunur örneğin, değişkenler, karar yapıları, döngüler, diziler, fonksiyonlardır. Doğrudan bir programlama dili ile başlarsanız bu yapıların nasıl yazıldığını ve nasıl kullanıldığını görürsünüz. Fakat programlama için bu anlattıklarımın sadece nasıl yazıldığını bilmek yetmez. İşin mantığını anlamak ve hangi durumlarda hangi yapıların kullanıldığını bilmek gerekir. Bu eğitim setimizde problemlerin nasıl çözüldüğünü göreceksiniz. Algoritma bilginizin iyi olması durumunda hangi programlama dilini seçerseniz seçin öğrenme süreciniz çok hızlı olacaktır. Çünkü siz problemlerin nasıl çözüleceğini biliyor olacaksınız. Öğrenmeniz gereken sadece programlama diline ait syntax( söz dizimi) yapısıdır. Syntax yapısını öğrenmek çok kısa zaman almaktadır. Birçoğumuz bilgisayarda hemen bir proje çıkarmak ister. Aceleci davranırız. Yani emeklemeden yürümek, yürümeden koşmak isteriz. Fakat sağlam bir altyapımız olmadan doğrudan bir programlama dili ile işe başlarsak projenin belli noktalarında çözüm üretemez hale gelir ve başkalarına ait kodların belli bölümlerini internetten kopyala yapıştır yöntemi ile kendi projemize dâhil ederiz. Fakat bir değişiklik yapmak istediğimizde kodların anlamını bilemediğimiz için kodlarımız tabiri caizse çorbaya dönüşür ve işin içinden çıkamaz duruma geliriz.\nAlgoritma Eğitimi, Programlamaya Giriş, Akış Diyagramları, Programlama Mantığı, Programlamaya Başlangıç, Programlama Temelleri",
      "target_audience": [
        "Bilgisayar Mühendisliği Öğrencileri",
        "Bilgisayar Programcılığı Öğrencileri",
        "Meslek Lisesi Bilişim Bölümü Öğrencileri",
        "Programlamaya İlgi Duyan Herkes",
        "Programlamaya Başlayacak Kişiler"
      ]
    },
    {
      "title": "【Java - 基礎編】完全未経験からの基礎入門講座（丁寧な解説/豊富な図解/演習問題/Java Silver試験対応）",
      "url": "https://www.udemy.com/course/uz-java-kiso/",
      "bio": "【注意】本コースでは学習方法の解説は無く技術の解説から始まっています。Java基礎の効果的な学習方法は、無料のお試し導入編「Javaプログラマーが実践する4STEPメソッド！」をご視聴ください。（導入編との関連はページ中央「解説」を参照）",
      "objectives": [
        "ゼロからJavaの基礎知識を納得感をもって学ぶことができます。",
        "ご自身のPCにJava環境を作り、50〜100行程度のプログラムを自在に書けるようになります。",
        "コンピューターの世界で何が起きるか明確なイメージを持ってコードを書けるようになります。",
        "豊富な演習問題&詳細な解説を通して実践力を最短で迷いなく鍛えることができます。"
      ],
      "course_content": {
        "J1-00_はじめに": [
          "質問方法とAIの活用",
          "プログラマーの学習領域（＋本コースの学習領域）",
          "問題演習サイト（Java Silver対応）がご利用いただけます（無料・登録不要）",
          "Java動画講義とJavaSilver試験の対応表＆補足資料"
        ],
        "J1-01_Javaプログラミングの初歩": [
          "01_1_Javaプログラミングの初歩",
          "Java - 基礎編　小テスト1",
          "★ウズカレからあなたへ、ちょっとしたお願い"
        ],
        "J1-02_Java開発環境": [
          "02_1_Java開発環境構築",
          "02_2_補講_Javaの有償化問題"
        ],
        "J1-03_Javaプログラミングの手順": [
          "03_1_Javaプログラミングの手順",
          "J1-03_補講_eclipseでのJava実行の基本 ※Macユーザー向け講座",
          "＜解答例＆解説＞Javaプログラミングの手順",
          "サクラエディタのインストール（Windows）",
          "Java - 基礎編　小テスト2"
        ],
        "J1-04_ソースコードの基本ルール": [
          "ソースコードの基本ルール",
          "＜解答例＆解説＞ソースコードの基本ルール",
          "Java - 基礎編　小テスト3"
        ],
        "J1-05_変数の扱い,定数,型": [
          "変数の扱い,定数,型",
          "＜解答例＆解説＞変数の扱い,定数,型",
          "Java - 基礎編　小テスト4"
        ],
        "J1-06_演算子": [
          "演算子",
          "＜解答例＆解説＞演算子",
          "Java - 基礎編　小テスト5"
        ],
        "J1-07_データの型変換": [
          "データの型変換",
          "＜解答例＆解説＞データの型変換",
          "Java - 基礎編　小テスト6"
        ],
        "J1-08_配列と参照型": [
          "配列と参照型",
          "補講_eclipseでのコマンドライン引数の使用 ※Macユーザー向け講座",
          "＜解答例＆解説＞配列と参照型",
          "Java - 基礎編　小テスト7"
        ],
        "J1-09_Stringと参照型の扱い": [
          "Stringと参照型の扱い",
          "Java - 基礎編　小テスト8"
        ]
      },
      "requirements": [
        "ご自身のPC（Windows/Mac）をお持ちの方。",
        "ある程度のインターネット環境をお持ちの方。動画をストリーミング再生できるレベルであれば問題ありません。",
        "ある程度のPC操作が可能な方。ファイルやフォルダの新規作成・解凍が問題なくできるレベルであれば問題ありません。"
      ],
      "description": "▼ 無料のお試し導入編との違いにご注意ください\n本コースでは「どうすればJava言語の学習を効率的に進められるか」などの学習方法については解説しておりません。Java言語の効果的な学習方法を知りたい方は、無料のお試し導入編「Javaプログラマーが実践する4STEPメソッド！」をご視聴ください。\nSTEP１．Udemyの検索欄にて「ウズカレ　無料」で検索\nSTEP２．絞り込み＞価格＞無料にチェック✓を入れる\nSTEP３．無料のお試し導入編（緑色のサムネが目印）があります\n\n\n本コース「Java - 基礎編」と無料のお試し導入編の「Javaプログラマーが実践する4STEPメソッド！」を混同しないようにご注意ください。\n\n\n▼このコースの教材の特徴\n本コースではゼロからJavaプログラミングを学びたい方向けに、Javaプログラミングの基礎の基礎をじっくり丁寧に解説していきます。ゼロからご自身のパソコンにJavaの環境を構築していただき、最終的に50～100行程度のプログラムを自在に書けるレベルに到達していただきます。豊富な図解やサンプルソースコード、丁寧な説明とハンズオン、適度な難易度の演習問題と詳細な解説を用意しておりますので、現在プログラミング学習に不安を覚えている方も受講後にはきっとJavaプログラミングを好きになれているはずです。\n\n\n▼本コースは以下のような方に特にオススメです。\nプログラミング完全未経験者\n参考書などで過去に挫折した方\n過去に学習したが曖昧な知識に不安を持っている方\n納得しながら学習を進めたい方",
      "target_audience": [
        "Javaプログラミングの独学に挫折してしまった方。",
        "未経験からのプログラマー就職を目指している方。",
        "一度Javaの学習をしたものの理解が曖昧で学び直しをしたい方。",
        "納得しないと・理解しきらないと気が済まないタイプの方。",
        "活字が苦手で図解多めの教材で学習をしたい方。"
      ]
    },
    {
      "title": "Programowanie w języku Python - od A do Z - 2025",
      "url": "https://www.udemy.com/course/programowanie-w-jezyku-python/",
      "bio": "Kompletny przewodnik od podstaw do zaawansowanych technik programowania - opanuj język Python krok po kroku!",
      "objectives": [
        "Spyder - prawdopodobnie najlepsze IDE do nauki Pythona",
        "podstawy programowania - zmienne, typy danych, operatory, instrukcje",
        "struktury danych - listy, krotki, zbiory i słowniki",
        "funkcje, moduły i wyrażenie lambda",
        "tworzenie własnych modułów i pakietów",
        "obsługa plików - odczyt i zapis plików",
        "programowanie obiektowe",
        "projektowanie i tworzenie własnych programów",
        "wyjątki i obsługa błędów",
        "testy jednostkowe i framework unittest"
      ],
      "course_content": {
        "Konfiguracja środowiska": [
          "Wskazówki - jak korzystać z kursu?",
          "Repozytorium kursu - Github",
          "Repozytorium kursu - GitHub",
          "Instalacja Anacondy i Hello World"
        ],
        "Podstawy": [
          "Update - wersja programu Spyder",
          "Wprowadzenie do programu Spyder",
          "Funkcja print() - wprowadzenie",
          "Argument sep w funkcji print()",
          "Argument end w funkcji print()",
          "Drukowanie wyników do konsoli - funkcja print()",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Drukowanie wyników do konsoli - funkcja print() cz. 2",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Obliczenia w Pythonie",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Solution 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Wprowadzanie wartości przez użytkownika - funkcja input()",
          "Konwencja nazewnictwa zmiennych",
          "Operator wycinania",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Typy danych",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Dane tekstowe i metody",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Ćwiczenie 12",
          "Rozwiązanie 12",
          "Ćwiczenie 13",
          "Rozwiązanie 13",
          "Ćwiczenie 14",
          "Rozwiązanie 14",
          "Podsumowanie: Podstawy"
        ],
        "Struktury Danych": [
          "Zbiory - Intro",
          "Zbiory",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Tuple - Intro",
          "Tuple",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Listy - Intro",
          "Listy",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Listy - wycinanie",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Ćwiczenie 12",
          "Rozwiązanie 12",
          "Listy - metody",
          "Ćwiczenie 13",
          "Rozwiązanie 13",
          "Ćwiczenie 14",
          "Rozwiązanie 14",
          "Ćwiczenie 15",
          "Rozwiązanie 15",
          "Ćwiczenie 16",
          "Rozwiązanie 16",
          "Słowniki - Intro",
          "Słowniki",
          "Ćwiczenie 17",
          "Rozwiązanie 17",
          "Ćwiczenie 18",
          "Rozwiązanie 18",
          "Ćwiczenie 19",
          "Rozwiązanie 19",
          "Ćwiczenie 20",
          "Rozwiązanie 20",
          "Ćwiczenie 21",
          "Rozwiązanie 21",
          "Ćwiczenie 22",
          "Rozwiązanie 22",
          "Ćwiczenie 23",
          "Rozwiązanie 23",
          "Podsumowanie: Struktury Danych"
        ],
        "Kontrola Przepływu Programu": [
          "Wartości logiczne - Intro",
          "Wartości logiczne",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Instrukcje Warunkowe - Intro",
          "Instrukcje Warunkowe",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Instrukcje Warunkowe cz. 2",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Instrukcje Warunkowe cz. 3",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Instrukcje Warunkowe cz. 4",
          "Ćwiczenie 12",
          "Rozwiązanie 12",
          "Ćwiczenie 13",
          "Rozwiązanie 13",
          "Ćwiczenie 14",
          "Rozwiązanie 14",
          "Pętle for - Intro",
          "Pętle for",
          "Ćwiczenie 15",
          "Rozwiązanie 15",
          "Ćwiczenie 16",
          "Rozwiązanie 16",
          "Ćwiczenie 17",
          "Rozwiązanie 17",
          "Ćwiczenie 18",
          "Rozwiązanie 18",
          "Ćwiczenie 19",
          "Rozwiązanie 19",
          "Ćwiczenie 20",
          "Rozwiązanie 20",
          "Instrukcja break - Intro",
          "Instrukcja break",
          "Ćwiczenie 21",
          "Rozwiązanie 21",
          "Ćwiczenie 22",
          "Rozwiązanie 22",
          "Ćwiczenie 23",
          "Rozwiązanie 23",
          "Instrukcja continue - Intro",
          "Instrukcja continue",
          "Ćwiczenie 24",
          "Rozwiązanie 24",
          "Ćwiczenie 25",
          "Rozwiązanie 25",
          "Pętle for - jeszcze więcej przykładów",
          "Ćwiczenie 26",
          "Rozwiązanie 26",
          "Pętla while - Intro",
          "Pętle while",
          "Ćwiczenie 27",
          "Rozwiązanie 27",
          "Pętle while - jeszcze więcej przykładów",
          "Ćwiczenie 28",
          "Solution 28",
          "Ćwiczenie 29",
          "Rozwiązanie 29",
          "Podsumowanie: Kontrola Przepływu Programu"
        ],
        "Input/Output - czytanie i zapisywanie plików w Pythonie": [
          "Wczytywanie plików",
          "Tryby odczytu pliku",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Wczytywanie plików - przykłady",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Zapisywanie do pliku",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Zapisywanie do pliku - przykład",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Tryby otwarcia plików - podsumowanie",
          "Podsumownaie: Input/Output"
        ],
        "Funkcje": [
          "Funkcje wbudowane",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Definiowanie własnych funkcji",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Definiowanie własnych funkcji cz. 2",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Ćwiczenie 12",
          "Rozwiązanie 12",
          "Dokumentowanie funkcji",
          "Wyrażenie lambda",
          "Ćwiczenie 13",
          "Rozwiązanie 13",
          "Ćwiczenie 14",
          "Rozwiązanie 14",
          "Przekazanie dowolnej liczby argumentów: *args",
          "Ćwiczenie 15",
          "Rozwiązanie 15",
          "Ćwiczenie 16",
          "Rozwiązanie 16",
          "Ćwiczenie 17",
          "Rozwiązanie 17",
          "Przekazanie dowolnej liczby argumentów: *kwargs",
          "Ćwiczenie 18",
          "Rozwiązanie 18",
          "Ćwiczenie 19",
          "Rozwiązanie 19",
          "Ćwiczenie 20",
          "Rozwiązanie 20",
          "Update Projekt - generator logów",
          "Projekt - generator logów",
          "Zakres zmiennych - global, local, nonlocal",
          "Ćwiczenie 21",
          "Rozwiązanie 21",
          "Generatory",
          "Ćwiczenie 22",
          "Rozwiązanie 22",
          "Ćwiczenie 23",
          "Rozwiązanie 23",
          "Ćwiczenie 24",
          "Rozwiązanie 24",
          "Ćwiczenie 25",
          "Rozwiązanie 25",
          "Podsumowanie: Funkcje"
        ],
        "Przekształcanie listy, słownika, zbioru": [
          "List comprehension",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Dict Comprehension",
          "Dict Comprehension cz. 2",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Set Comprehension",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Podsumowanie: Przekształcanie listy, słownika, zbioru"
        ],
        "Moduły i pakiety": [
          "Moduły",
          "Pakiety",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Podsumowanie"
        ],
        "Wbudowane moduły i pakiety": [
          "Pakiet os",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Pakiet sys: Uruchamianie skryptów z poziomu PowerShell'a i Bash'a",
          "Pakiet sys: Specjalna zmienna __name__",
          "Pakiet sys: Uruchamianie skryptów z argumentami",
          "Tutorial 1",
          "Tutorial 2",
          "Tutorial 3"
        ],
        "Programowanie Obiektowe (Object-Oriented Programming)": [
          "Wprowadzenie do programowania obiektowego (klasa, obiekt, atrybut, metoda)",
          "Ćwiczenie 1",
          "Rozwiązanie 1",
          "Ćwiczenie 2",
          "Rozwiązanie 2",
          "Specjalny parametr self",
          "Konstruktor i metody",
          "Ćwiczenie 3",
          "Rozwiązanie 3",
          "Ćwiczenie 4",
          "Rozwiązanie 4",
          "Ćwiczenie 5",
          "Rozwiązanie 5",
          "Ćwiczenie 6",
          "Rozwiązanie 6",
          "Dekorator @staticmethod",
          "Ćwiczenie 7",
          "Rozwiązanie 7",
          "Ćwiczenie 8",
          "Rozwiązanie 8",
          "Ćwiczenie 9",
          "Rozwiązanie 9",
          "Ćwiczenie 10",
          "Rozwiązanie 10",
          "Dekorator @classmethod",
          "Ćwiczenie 11",
          "Rozwiązanie 11",
          "Ćwiczenie 12",
          "Rozwiązanie 12",
          "Projekt: Magazyn cz. 1",
          "Projekt: Magazyn cz. 2",
          "Dziedziczenie klas",
          "Dziedziczenie wielokrotne klas",
          "Dziedziczenie wielokrotne klas - problem",
          "Dziedziczenie wielopoziomowe klas",
          "Ćwiczenie 13",
          "Rozwiązanie 13",
          "Ćwiczenie 14",
          "Rozwiązanie 14",
          "Ćwiczenie 15",
          "Rozwiązanie 15",
          "Ćwiczenie 16",
          "Rozwiązanie 16",
          "Ćwiczenie 17",
          "Rozwiązanie 17",
          "Ćwiczenie 18",
          "Rozwiązanie 18",
          "Zmienne publiczne, chronione i prywatne",
          "Metody magiczne",
          "Ćwiczenie 19",
          "Rozwiązanie 19",
          "Ćwiczenie 20",
          "Rozwiązanie 20",
          "Ćwiczenie 21",
          "Rozwiązanie 21",
          "Projekt - Funkcja Kwadratowa",
          "Ćwiczenie 22",
          "Rozwiązanie 22",
          "Ćwiczenie 23",
          "Rozwiązanie 23",
          "Ćwiczenie 24",
          "Rozwiązanie 24",
          "Ćwiczenie 25",
          "Rozwiązanie 25",
          "Podsumowanie"
        ]
      },
      "requirements": [
        "Dostęp do komputera z internetem",
        "Chęć nauki i cierpliwość",
        "Brak wcześniejszego doświadczenia w programowaniu"
      ],
      "description": "Programowanie w języku Python - od A do Z to kompleksowy kurs, który został stworzony z myślą o osobach początkujących, jak i tych, które chcą ugruntować lub rozszerzyć swoją wiedzę z zakresu programowania w jednym z najpopularniejszych języków na świecie – Pythonie.\nTen kurs krok po kroku przeprowadzi Cię przez wszystkie najważniejsze zagadnienia związane z Pythonem – od podstaw składni, przez typy danych, instrukcje warunkowe, pętle, funkcje, aż po bardziej zaawansowane tematy, takie jak programowanie obiektowe (OOP), obsługa plików i praca z bibliotekami zewnętrznymi.\nNie musisz mieć wcześniejszego doświadczenia w programowaniu – wszystko tłumaczymy jasno, w przystępny sposób, popierając wiedzę praktycznymi przykładami. Dzięki licznym ćwiczeniom, quizom oraz projektom końcowym utrwalisz materiał i nauczysz się wykorzystywać Pythona w praktyce.\nPo ukończeniu kursu będziesz w stanie samodzielnie pisać skrypty oraz rozwiązywać realne problemy za pomocą kodu. Niezależnie od tego, czy chcesz zostać programistą, analitykiem danych, testerem czy po prostu rozwinąć nowe umiejętności – ten kurs to idealny pierwszy krok.\nDołącz już dziś i rozpocznij swoją przygodę z Pythonem – od A do Z!\n\n\nPython – Język, który rozumiesz od pierwszej linijki\nPython to wszechstronny, czytelny i łatwy w nauce język programowania, który zdobył ogromną popularność w dziedzinach takich jak analiza danych, sztuczna inteligencja, web development czy automatyzacja. Dzięki rozbudowanemu ekosystemowi bibliotek i aktywnej społeczności, Python pozwala szybko tworzyć skalowalne i nowoczesne aplikacje, niezależnie od poziomu doświadczenia programisty.",
      "target_audience": [
        "Osoby początkujące (zero doświadczenia w programowaniu)",
        "Osoby planujące przebranżowienie do IT",
        "Studenci i uczniowie kierunków technicznych i nietechnicznych",
        "Analitycy danych i przyszli Data Scientists",
        "Testerzy oprogramowania",
        "Osoby uczące się do egzaminów lub certyfikacji z Pythona",
        "Pracownicy różnych branż chcący automatyzować zadania",
        "Hobbyści i pasjonaci technologii"
      ]
    },
    {
      "title": "Visual Basic com Banco de Dados",
      "url": "https://www.udemy.com/course/visual-basic-com-banco-de-dados/",
      "bio": "Sistemas com Visual Studio 2017",
      "objectives": [
        "Criar sistemas desktop com visual basic usando banco de dados access e Sql"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Instalando o Visual Studio 2017",
          "Tipos de Projetos no Visual Studio",
          "Projetos Universal Multiplataforma",
          "Projeto Desktop com VB",
          "Classes e Módulos",
          "Iniciando com a programação",
          "Métodos main para classes",
          "Formulários",
          "Rodando projeto console",
          "Trabalhando com mais de um projeto",
          "Chamada nos projetos",
          "Tipos de variaveis",
          "Cálculos com variaveis",
          "Condição if",
          "Teste de condição composto",
          "switch Case",
          "Windows form",
          "Propriedades dos formulários",
          "Configurando propriedades",
          "Tela de Cadastro",
          "Criando banco de dados access",
          "Conexão com banco access",
          "Fonte de dados para conexão",
          "Data Grid View",
          "Buscando no banco de dados",
          "SQL para buscar dados",
          "Programando botão de editar",
          "Editando os registros no banco",
          "Buscando dados no banco",
          "Corrigindo duplicaçao no banco",
          "Atualizando grid view",
          "Inserindo registros no banco",
          "Deletando registros do banco",
          "Mensagens no sistema",
          "Habilitando botões",
          "Validação de campos",
          "Binding em campo oculto",
          "Associando campo ao binding",
          "Criando mais formulários",
          "Compilando sistema com banco",
          "Instalando SQL 2017",
          "Instanlando Magnament Studio",
          "Criando o banco de dados SQL",
          "Criando a conexão com SQL Server",
          "Conectando com SQL Server",
          "Chamando conexão no formulário",
          "Associando tabela ao grid view",
          "Criando procedimentos no banco",
          "Executando procedimentos",
          "Classe para tabelas",
          "Chamando o procedimento",
          "Concluindo funçao para excluir",
          "Chamando função de exclusão",
          "Procedimento para inserir cliente",
          "Funçao para inserir cliente",
          "Inserindo Clientes no SQL",
          "Backup do banco de dados",
          "Banco de dados no servidor",
          "Conectando com servidor em rede",
          "Alimentando banco de dados em rede"
        ]
      },
      "requirements": [
        "Não precisa de pré requisito, pode iniciar diretamente por este curso"
      ],
      "description": "O curso de Visual Studio com Banco de dados possui 60 aulas, neste curso o aluno aprenderá a trabalhar com o visual studio 2017 voltado para a linguagem Visual Basic, aprenderemos sobre a linguagem, sobre os componentes, sobre a comunicação de sistemas com banco de dados access e banco de dados SQL Server, podendo manter seus sistemas com banco de dados local ou banco de dados em rede.",
      "target_audience": [
        "Todo aluno que tenha interesse em programação e desenvolvimento de sistemas com visual studio"
      ]
    },
    {
      "title": "C#文法：C#でラムダ式を書く方法Part2【LINQのクエリ構文とラムダ式マスター編】",
      "url": "https://www.udemy.com/course/lambda02/",
      "bio": "クエリ構文とラムダ式それぞれの書き方でWhere，Orderby，Select，let，Groupby，Join，ConvertAll，Skip，Take，All，Anyなどを書く方法を解説しています。",
      "objectives": [
        "LINQとは何か",
        "クエリ構文の書き方",
        "ラムダ式の書き方",
        "Enumelableの各種関数の使い方"
      ],
      "course_content": {
        "C#でラムダ式を書く方法Part2【LINQのクエリ構文とラムダ式マスター編】": [
          "00_はじめに",
          "01_LINQとは",
          "02_プロジェクトの作成",
          "03_int配列に対してクエリ構文のWhereを書く方法",
          "04_int配列に対してクエリ構文のWhereとOrderbyを書く方法",
          "05_文字配列に対してクエリ構文のWhereを書く方法",
          "06_カスタムクラスに対してクエリ構文のWhereを書く方法",
          "07_カスタムクラスに対してクエリ構文のOrderbyを書く方法",
          "08_カスタムクラスに対してクエリ構文で必要な項目をSelectする方法",
          "09_カスタムクラスに対してクエリ構文で別名でSelectする方法",
          "10_カスタムクラスに対してクエリ構文で別のクラスに変換する方法",
          "11_let句の使い方",
          "12_クエリ構文でGroupbyを書く方法",
          "13_クエリ構文でGroupbyを複数指定する方法",
          "14_クエリ構文で内部結合（InnerJoin）をする準備",
          "15_クエリ構文で内部結合（InnerJoin）をする方法",
          "16_クエリ構文で内部結合（InnerJoin）で複数条件を指定する方法",
          "17_クエリ構文で外部結合（leftJoin）をする方法",
          "18_IEnumerableとは？",
          "19_遅延実行のおさらい",
          "20_ラムダ式でAverage_Max_Min_Sumの使い方",
          "21_ラムダ式で文字列のAverage_Max_Min_Sumの書き方",
          "22_ラムダ式でOfTypeを使って指定した型だけを取得する方法",
          "23_ラムダ式を使ってWhereを書く方法",
          "24_ラムダ式を使ってSelectを書く方法",
          "25_ForEachのラムダ式",
          "26_ConvertAllなどを使って任意の型に変換する方法",
          "27_ラムダ式でOrderbyを書く方法",
          "28_ラムダ式でGroupByを書く方法",
          "28B_訂正_ラムダ式でGroupByを書く方法",
          "29_EnumerableのRepeatとRangeの書き方",
          "30_SequenceEqualを使って2つのListが同じかどうかをチェックする",
          "30B_「SequenceEqualを使って2つのListが同じかどうかをチェックする」の補足",
          "31_Distinct_Intersect_Union_Exceptの使い方",
          "32_Skip_Take_SkipWhile_TakeWhileの使い方",
          "33_AllとAnyの使い方",
          "34_IEnumerable_これなんて読む？",
          "さいごに",
          "使用したソースコード",
          "補講01_Where条件を動的に変更する方法",
          "補講01の訂正",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "C#でラムダ式を書く方法Part1受講者もしくはラムダ式の書き方をある程度理解している事"
      ],
      "description": "どうもこんにちは，ピーコックアンダーソンです。\n今回は，ラムダ式を書く方法のパート２ということで，\nC#3.0から記述可能なLINQ（統合言語クエリ）の\nクエリ構文とラムダ式の各種メソッドを解説しています。\n\n\n【クエリ式】\nIEnumerable<int> numQuery1 =\nfrom num in numbers\nwhere num % 2 == 0\norderby num\nselect num;\n\n\n【ラムダ式】\nIEnumerable<int> numQuery2 =\nnumbers.Where(num => num % 2 == 0)\n.OrderBy(n => n);\n\n\nこの2種類の書き方ができる各種関数を順番に紹介していますので\n興味のある方は，是非ご覧ください。\n\n\n#00_はじめに\n#01_LINQとは\n#02_プロジェクトの作成\n#03_int配列に対してクエリ構文のWhereを書く方法\n#04_int配列に対してクエリ構文のWhereとOrderbyを書く方法\n#05_文字配列に対してクエリ構文のWhereを書く方法\n#06_カスタムクラスに対してクエリ構文のWhereを書く方法\n#07_カスタムクラスに対してクエリ構文のOrderbyを書く方法\n#08_カスタムクラスに対してクエリ構文で必要な項目をSelectする方法\n#09_カスタムクラスに対してクエリ構文で別名でSelectする方法\n#10_カスタムクラスに対してクエリ構文で別のクラスに変換する方法\n#11_let句の使い方\n#12_クエリ構文でGroupbyを書く方法\n#13_クエリ構文でGroupbyを複数指定する方法\n#14_クエリ構文で内部結合（InnerJoin）をする準備\n#15_クエリ構文で内部結合（InnerJoin）をする方法\n#16_クエリ構文で内部結合（InnerJoin）で複数条件を指定する方法\n#17_クエリ構文で外部結合（leftJoin）をする方法\n#18_IEnumerableとは？\n#19_遅延実行のおさらい\n#20_ラムダ式でAverage_Max_Min_Sumの使い方\n#21_ラムダ式で文字列のAverage_Max_Min_Sumの書き方\n#22_ラムダ式でOfTypeを使って指定した型だけを取得する方法\n#23_ラムダ式を使ってWhereを書く方法\n#24_ラムダ式を使ってSelectを書く方法\n#25_ForEachのラムダ式\n#26_ConvertAllなどを使って任意の型に変換する方法\n#27_ラムダ式でOrderbyを書く方法\n#28_ラムダ式でGroupByを書く方法\n#29_EnumerableのRepeatとRangeの書き方\n#30_SequenceEqualを使って2つのListが同じかどうかをチェックする\n#31_Distinct_Intersect_Union_Exceptの使い方\n#32_Skip_Take_SkipWhile_TakeWhileの使い方\n#33_AllとAnyの使い方\n#34_IEnumerable_これなんて読む？\nさいごに",
      "target_audience": [
        "C#でLINQのクエリ構文やラムダ式の書き方をマスターしたい方"
      ]
    },
    {
      "title": "Programowanie w PHP od podstaw - teoria i praktyka",
      "url": "https://www.udemy.com/course/kurs-programowanie-w-php/",
      "bio": "Podstawy PHP, programowania obiektowego i baz danych pozwalające zostać w przyszłości junior PHP developerem",
      "objectives": [
        "składnia PHP",
        "programowanie obiektowe w PHP",
        "podstawy bazy danych MySQL",
        "dobre praktyki programowania",
        "architektura projektu jak w rzeczywistej pracy",
        "architektura MVC i metody CRUD"
      ],
      "course_content": {
        "Wstęp do kursu": [
          "Wstęp - o kursie i o sobie",
          "Czym jest PHP i dlaczego warto się go uczyć",
          "Jak będzie wyglądał kurs",
          "Dobre praktyki programowania",
          "Projekt w kursie",
          "Udostępnienie kodu",
          "Teoria - pliki",
          "Skuteczna nauka",
          "Czego się uczymy",
          "Instalacja Apache",
          "Visual Studio Code",
          "Vhosts",
          "Terminal"
        ],
        "Wstęp do programowania w PHP, zmienne i stałe w PHP": [
          "Pierwsza linijka kodu w PHP",
          "HTML w PHP",
          "Komentarze",
          "Deklarowanie zmiennych",
          "Zmienne - typy wartości",
          "Sprawdzenie typu zmiennej - var_dump",
          "Dobre praktyki przy stosowaniu zmiennych",
          "Stałe"
        ],
        "Operatory w PHP": [
          "Operator przypisania",
          "Operatory arytmetyczne",
          "Operatory przypisania - ciąg dalszy",
          "Operator konkatenacji",
          "Post i pre - dekrementacja i inkrementacja",
          "Pre i post - ciąg dalszy",
          "Operatory porównania i rzutowanie",
          "Operatory porównania - ciag dalszy",
          "Stringi - co jeszcze warto wiedzieć"
        ],
        "Tablice w PHP": [
          "Wprowadzenie do tablic",
          "Edycja tablicy",
          "Kopiowanie wartości poza tablicę",
          "Dodawanie elementów na końcu tablicy",
          "Użycie funkcji unset",
          "Nazwy indeksów",
          "Tablice asocjacyjne",
          "Tablice asocjacyjne - zagnieżdżanie tablic"
        ],
        "Struktury kontrolne - instrukcje warunkowe": [
          "Struktury kontrolne - wstęp",
          "Instrukcja warunkowa if",
          "If else",
          "Elseif",
          "Ternary operator - skrócony zapis if else",
          "Operatory logiczne",
          "Switch"
        ],
        "Pętle w PHP": [
          "Pętla for",
          "Pętle while i do while",
          "Pętla foreach",
          "Break i continue"
        ],
        "Funkcje w PHP, argumenty funkcji": [
          "Funkcje wbudowane",
          "Budowa funkcji i jej definiowanie",
          "Funkcja z argumentami",
          "Scope - zakres widoczności zmiennej",
          "Wiele argumentów funkcji i wartości domyślne",
          "Typowanie argumentów - statyczne i dynamiczne",
          "Typowanie w PHP",
          "Tryb coercive (domyślny) i tryb ścisły",
          "Określenie argumentu dozwolonego na null",
          "Typy, których można użyć jako typowanych atrybutów"
        ],
        "Wartości zwracane funkcji": [
          "Wartości zwracane - return",
          "Typowanie zwracanej wartości",
          "Void",
          "Funkcje anonimowe i callable",
          "Funkcje strzałkowe"
        ],
        "Programowanie obiektowe w PHP": [
          "Wprowadzenie do programowania obiektowego",
          "Właściwości klasy",
          "Metody",
          "This",
          "Modyfikatory dostępu",
          "Czy używać modyfikatorów dostępu",
          "Konstruktor",
          "Przykład użycia konstruktora",
          "Zasady tworzenia dobrych klas",
          "Stałe i self",
          "Właściwości statyczne - static",
          "Dziedziczenie - extends i protected",
          "Na czym polega dziedziczenie",
          "Konstruktory i dziedziczenie",
          "Deklaracje i definicje metod",
          "Dziedziczenie a nadpisywanie metod i konstruktora",
          "Klasy abstrakcyjne",
          "Renderer",
          "Interfejsy",
          "Interfejs a klasa abstrakcyjna",
          "Sens istnienia interfejsów",
          "Final",
          "Namespaces"
        ],
        "Projekt - cz. 1: projekt układu aplikacji, struktura plików": [
          "Rozpoczynamy pracę z projektem",
          "Funkcja debugująca",
          "Projekt jak w świecie rzeczywistym",
          "Struktura katalogów w projekcie",
          "Include i include once",
          "Require i require once",
          "Rozwinięcie funkcji debugującej",
          "Typ strict i namespace i uzycie HTML w pliku index",
          "Struktura HTML projektu",
          "Odczytanie URL za pomocą get",
          "Różna treść dla różnych URL",
          "Refaktoryzacja i bezpieczeństwo",
          "Separacja logiki i widoku aplikacji",
          "Layout i klasa widoku",
          "Zróżnicowanie szablonu za pomocą parametrów",
          "Refaktoryzacja i wyłączenie błędów",
          "Aktualizacja HTML i CSS"
        ]
      },
      "requirements": [
        "podstawowa znajomość HTML i CSS"
      ],
      "description": "Ten kurs zapewni Ci podstawową wiedzę, dzięki której będziesz mógł/mogła zacząć myśleć o rozpoczęciu swojej zawodowej przygody z PHP jako junior PHP developer. Składa się on z części teoretycznej (podpartej licznymi przykładami) oraz praktycznej, w której wraz ze mną wykonasz projekt aplikacji do zarządzania notatkami. Brzmi lekko i przyjemnie, ale obiecuję Ci, że tylko tak brzmi :)\n\n\nW ramach części teoretycznej nauczysz się nie tylko składni języka PHP, ale też poznasz, czym jest programowanie obiektowe i to nie tylko w teorii, ale również w praktyce. Zdobędziesz też podstawową wiedzę na temat baz danych - czym są, z czego się składają i jak ich używać bez oraz z PHP. Do tego uzyskasz kilka prostych, acz bardzo ważnych rad dotyczących dobrych praktyk programowania. Wreszcie w części praktycznej stworzysz razem ze mną prawdopodobnie swój pierwszy projekt w oparciu o architekturę MVC i CRUD. Korzystamy z darmowego edytora kodu Visual Studio Code.\n\n\nTen kurs kieruję do osób, które chcą nauczyć się PHP od podstaw, jak i do osób, które z PHP miały już styczność. Przejście tego kursu i opanowanie umiejętności i technologii, które w nim pokazuję, jest podstawą w rzeczywistej pracy na stanowisku junior PHP developera. Oczywiście, współczesne wymagania na rynku pracy dla juniora zawierają też inne technologie, np. Laravel czy Symphony (są to frameworki, których zamierzam uczyć w innych kursach) czy GIT (system kontroli wersji, którego możesz uczyć się za darmo w kursie Samuraja Programowania).\n\n\nKurs oparty jest na PHP 7.4.\n\n\nZapraszam do wspólnej nauki!\nTomek",
      "target_audience": [
        "osoby myślące o przekwalifikowaniu się i rozpoczęciu pracy jako Junior PHP Developer",
        "osoby, które chciałby poznać i zacząć przygodę z PHP",
        "osoby, które znają już podstawy, ole chciałyby ugruntować wiedzę i poszerzyć ją o \"bardziej zaawansowane podstawy\""
      ]
    },
    {
      "title": "Go (Golang) - Do zero ao avançado (com teste de unidade)",
      "url": "https://www.udemy.com/course/golang-do-zero-ao-avancado/",
      "bio": "Construa uma API utilizando Go, Keycloak, PostgreSQL e workes",
      "objectives": [
        "Chi REST API",
        "Teste de unidade",
        "REST API",
        "PostgreSQL",
        "Keycloak - provedor de identidade",
        "Fila",
        "Aprender o funcionamento do golang",
        "Novidades do go 1.19",
        "Variáveis",
        "func",
        "struct",
        "Ponteiros",
        "Generics",
        "Interface",
        "Concorrência",
        "Estrutura de projeto"
      ],
      "course_content": {
        "Fundamenos": [
          "Características",
          "Go Playground",
          "Estrutura do arquivo",
          "Variáveis",
          "Tipos de dados",
          "Operadores",
          "Const",
          "Tamanho dos tipos de dados",
          "Conversão"
        ],
        "Fluxo de controle": [
          "if",
          "mais sobre if",
          "else",
          "operadores lógicos",
          "for",
          "break and continue",
          "cade o while?",
          "for aninhados"
        ],
        "Slices and Arrays": [
          "Conceito de lista",
          "Criando listas",
          "Make e for para listas",
          "Sublistas",
          "Index",
          "Array vs Slices",
          "Maps",
          "Maps na prática",
          "Range",
          "Delete"
        ],
        "Exercícios": [
          "Exe 1",
          "Exe 2",
          "Exe 3"
        ],
        "Funções": [
          "Função",
          "Função com retorno",
          "Retorno de mais de um valor",
          "Retorno nomeado",
          "Escopo",
          "Init"
        ],
        "Instalação": [
          "Golang",
          "VSCode",
          "Configurando VSCode"
        ],
        "Ponteiros": [
          "Ponteiros"
        ],
        "Struct": [
          "go mod",
          "struct",
          "encapsulamento",
          "composição",
          "métodos",
          "alterando dados por métodos",
          "herança"
        ],
        "Interfaces": [
          "interfaces",
          "mais exemplos",
          "interface{}"
        ]
      },
      "requirements": [
        "Noção básica em algoritmo."
      ],
      "description": "Golang é a linguagem criada pelo Google para resolver problemas internos, porém, o seu funcionamento deu tão certo que acabou virando publica e com ela novas tecnologias foram criadas, como Docker, Kubernetes e várias outras.\nMuita gente tem a noção de que golang é uma linguagem performática, mas pouca gente sabe que ela é extremamente simples e é isso que irei demonstrar nesse curso. Tenho certeza que sua curva de aprendizagem será extremamente baixa, mesmo que você venha de linguagem onde a sintaxe é totalmente diferente.\nO objetivo desse curso é demosntrar tudo o que o mercado usa quando estamos falando de Golang. Por isso o curso tem mais de 23h e nele você irá criar uma aplicação usando os conceitos do REST API, com autenticação usando a ferramenta Keycloak, o banco de dados Postgree e muito teste de unidade (Sim, você vai aprender teste de unidade). Não tenho duvida que você se dará bem naquele projeto ou no novo emprego que utiliza essa linguagem.\nMas antes de começar o projeto, vou passar pelo básico da linguagem para que você vá se acostumando e também vários exercicíos legais estão nesse curso.\nCom isso, o curso é dividido em dois pointos:\n* Linguagem/Sintaxe: Variáveis, Funções, Ponteiros, Struct, Interface, Generics, Go mod, concorrência, sync.WaitGroup, sync.Mutex, Channels, Manipulação de erros\n* Projeto: Conceitos Web (para aqueles que não dominan), Estrutura do projeto, Domain/Service/Infrastruture, Teste de unidade utilizando testify, Chai, Postgree, Keycloak como ferramenta de autenticação, Async Call (Fila)\nMeu nome é Stephany Henrique Batista, sou formado em Ciências da Computação e tenho Pós em Banco de dados. Já estou na área de tecnologia a quase 20 anos com várias experiências nacionais e internacionais, tendo atuado em uma das 100 empresas mais valiosas do mundo. Se você buscar mais pelo eu perfil aqui verá que já consegui compartilhar meus conhecimentos para mais de 15.000 alunos, tendo uma nota excelente como avaliação. Espero sinceramente te ajudar em mais esse curso. Fique livre para deixar o seu feedback e te espero nas aulas!",
      "target_audience": [
        "Para aqueles que queiram aprender a linguagem do momento",
        "Devs que queiram crescer ou entrar em grandes empresas que usam essa tecnologia"
      ]
    },
    {
      "title": "【未経験からエンジニア】Python入門 基礎文法徹底解説:チュートリアル網羅で初心者でもプログラミングできるようになる",
      "url": "https://www.udemy.com/course/python-engineer-basic/",
      "bio": "現役エンジニアによる基礎文法徹底解説&ハンズオン。未経験者には意味不明な Python チュートリアルをしっかりかみ砕き、ChatGPT による独習方法も解説。資料・演習が充実、数多くのサンプルコードで体系的に技術を身につけられます。",
      "objectives": [
        "Pythonの基礎文法をみっちり学べます。(サクッと知りたい方には適していません。受講しないでください)",
        "他のコースでは省略されがちな「ゼロから環境構築する方法」を解説しています",
        "AIとコーディング・プログラミングを協働するにも基礎・質問力・支持力が必要です。そのための基礎が身に付きます。",
        "なぜそうなるのか？ をかみ砕いて解説、ハンズオンでコーディングしますので、理解が進みます",
        "Python3の基礎文法を体系的にマスターできます",
        "Python3エンジニア認定基礎模擬試験(40問×2)を受けられるアプリをChatGPTとともに開発できるようになります",
        "気象庁APIと通信し、自分のLINEに通知を送るアプリを開発できるようになります",
        "プログラミング未経験者・初心者にはハードルが高すぎる「Pythonチュートリアル」をガリガリかみ砕いて解説します",
        "言語仕様の細かいところまで身に付きます",
        "Python でシステムを開発するのに必要な文法が身に付きます",
        "(ChatGPT コピペ) 1営業日前のダウ平均株価と日経平均株価を取得し、自分のLINEに通知を送るアプリを作ります",
        "(ChatGPT コピペ) CSVファイルのデータを読み込んで、条件に一致したデータだけをエクセルに出力するアプリを作ります",
        "AI (ChatGPT) で学習・独習速度を加速する方法がわかります",
        "厚い技術書一冊分に相当する140,382文字(+画像+参照リンク)のWeb上の資料(Dynalist)にいつでもアクセスできるようになります。検索、サンプルコードのコピペができますので、教科書・参考書代わりに使えます。",
        "小テスト、演習問題、コーディング問題、演習テスト付きなので手を動かすことで、記憶に定着しやすくなります",
        "Git, GitHub でプログラムの簡易なバージョン管理ができるようになります",
        "プログラミング未経験者がつまずきがちな「プログラミングそもそも論」から解説するため理解の幅が広がります",
        "「言われたとおり書いたら動いたけど、なぜ動いているのかよく分からない」がなくなります",
        "プロが好んで使う開発環境「PyCharm」のを使って開発できるようになります",
        "基礎的なターミナル(黒い画面)の使い方と、コマンドを使ってアプリ開発する方法が身に付きます",
        "演算子、コメント、変数、データ型、print関数、input関数などの基礎が身に付きます",
        "条件分岐、データ構造、反復処理、命名規則、関数などの少し難しい概念も身に付きます",
        "クラス、名前空間、例外処理、モジュールとライブラリのインストールなどの少し高度な内容も解説します",
        "ファイル操作とファイル入出力、仮想環境とコマンドライン引数といったやや高度な内容も解説します",
        "PythonがインストールされていないPCで作ったプログラムを実行できるようにする方法(PyInstaller)"
      ],
      "course_content": {},
      "requirements": [
        "プログラミングの経験は不要。必要なことを全て学習できます。",
        "「きちんと理解して使えるようになりたい」という方のための講座です。「試験に出るところだけ効率よく学びたい」ではありません。ご注意ください。",
        "このコースは「Pythonの基礎文法を体系的に身につける」ことを目的としており、\"ついでに\" 「資格合格」を目指します。",
        "試験に出ないことも数多く扱いますので、「資格合格」がメインの方はこのコースに適していません。",
        "「さらっと学びたい」というにはボリュームが大きすぎますのでご注意ください",
        "「よく分からないけど、まあ動いてるからヨシ！」という方にこのコースは向いていません",
        "IDE (開発環境=PyCharm) の見た目(色とアイコンと行番号)をカスタムしてレクチャーしています。初期設定の見た目じゃないとついて行けないと思われる方はご注意願います。",
        "Anaconda環境はサポートできません"
      ],
      "description": "このコースには未経験からPythonエンジニアになるための基礎知識が全て含まれています。\n\n\nこんな方に:\nプログラミングを身につけてキャリアアップしたい\n「効率化」「自動化」「業務改善」という言葉を聞くとワクワクする\n営業職のような人間相手がメインの仕事よりもコンピュータ相手の仕事の方が向いていると思う\nずっとPCを触っているのが全く苦にならないので、それを仕事にしたい\nいくつかの入門書を読んだがイマイチよく分からず悔しい\n将来にわたって使える技術を身につけたい\nPC画面にかっこいいソースコードをたくさん書くような仕事をしたい\nPythonチュートリアルを読んでPythonに入門しようとしたが挫折した\nPython3エンジニア認定基礎試験の合格 +α の知識、技術を身につけたい\n\n\nこのコース修了時には:\nまったくのプログラミング未経験者でも、Pythonの基礎文法をマスターし、アプリケーションを作れるようになります。\nあなたの技術習得のためのレクチャーを提供し、学習をサポートします。\n\n\n\n\nこのコースで開発するアプリ:\nこのコースでは以下のようなアプリケーションを開発し、基礎力、応用力を身につけられます。\n前日の日経平均とダウ平均株価を米ヤフーファイナンスから取得し自分のLINEに通知を送るアプリ (ChatGPTによるコード生成)\nCSVファイルを読み込み、条件に合致したデータだけをエクセルファイルに書き込むアプリ。(ChatGPTによるコード生成)\n気象庁APIと通信し、3日先までの天気予報を取得、その情報を加工して自分のLINEに通知を送るアプリ\n米ヤフーファイナンスから為替情報を取得し、両替計算(日本円と米ドル)を行うアプリ\nPython3エンジニア認定基礎試験 の模擬試験(40問×2)を受けられるアプリ (ChatGPTの提示したコードを改良するテクニックを学びます)\n\n\nこのコースで学ぶ内容:\n具体的には以下の内容を学習できます。\n手元のPCにPythonと開発環境をインストールし開発できるようにする方法\nかっこいい開発環境にするための方法\nChatGPTで学習・速度を加速させる方法\nそもそもプログラム・プログラミングとは何か？ を学び知識を底上げする\nプログラミングに必須の黒い画面(ターミナル)と基礎的なコマンドの使い方\nあなたが作ったPythonプログラムを他の人に使ってもらう方法\nprint関数、input関数、コメント、変数、定数\n各種データ型(str, 数値型, bool, datetime, None)の特性とその挙動\n複数の値を格納する型(リスト、辞書、タプル、セット)の特性とその挙動\n条件分岐 (if 文)を使ってプログラムの挙動を制御する方法\n反復処理 (for 文, while 文)を使って複数のデータを一気に処理する方法\n内包表記を使ってリスト、辞書等を作る方法\nPython の命名規則を覚え、他のPython エンジニアと認識をそろえる\n関数定義と引数の受け渡し (実引数、仮引数、位置引数、キーワード引数)\nクラスを定義し、属性(プロパティ、メソッド)を設定する方法\nクラスにデコレータを使ってプロパティを設定する方法\nクラスにイテレータを実装する方法\nクラスで隠蔽、継承、多態性を実装する方法\n例外処理を行い適切にエラー処理する方法\nモジュール・ライブラリをインポートし、より高度なプログラムを開発する方法\nPythonプログラム外部のファイルに対して読み書きする方法\n仮想環境を使ってより実践的な開発を行う方法\n作ったPythonプログラムをターミナルから実行し、引数を渡す方法\n\n\n上記の内容はPython3エンジニア認定基礎試験の出題範囲である「Pythonチュートリアル」をほぼ網羅しています。\nそれぞれのトピックでは各コードがなぜそのように動くのか？ をかみ砕き、実際にコードを書き、深掘りしながら解説します。\nこれら基礎文法を組み合わせ、応用することでちゃんと動くプログラムを作れるようになります。\n\n\n学習方法:\nプログラミングを身につけるためには、実際に手を動かしたくさん書く、という体験が絶対に必要です。インプットした知識を思い出す、という体験も記憶を定着させます。そこでこのコースでは数多くのコーディング演習問題と小テストを用意しました。\nまた、レクチャーの途中でも動画を一時停止し、チャレンジ問題に挑戦できるタイミングを用意し、その直後に解説を行うというものもあります。\n学習・開発環境はPyCharmを使います。VSCodeにこだわりがあればそちらでもかまいませんが、特にこだわりがなければPyCharmを強くオススメします。このコースではPyCharmの使い方と学習・開発速度を加速させるショートカットキーの使い方も解説します。\n\n\nさらに:\nプログラム開発に必要不可欠な技術に「Git」「GitHub」があります。この2つを使わない開発現場はありません。エンジニアになるためには欠かすことができない技術です。\nこれらの使い方をこのコースに含めるか迷いましたが、「必要な知識」ですので含めることにしました。最低限の機能に絞ってさらっと解説します。\nまた、GitHubを使えばあなたがどのくらいプログラミングしているかを第三者にアピールできますので、キャリアアップの足がかりになります。\n\n\n講師について:\nこのコースの講師 イクマ ヒロユキ は専門学校や大学で情報工学やプログラミングを学んだわけではありません。\n職歴は、呉服営業 > 花屋 > ニート > 呉服営業 > ニート > ギフト商材営業 > 製造業 総務 > 製造業 社内ひとりSE、という経歴です。\nしかし、総務に配属されたときに「もっと楽したい！」という気持ちが高まりエクセルVBA・プログラミングと出会い、プログラミングの楽しさに目覚めました。\nそれ以来、10年以上ずーっとプログラムを書いています。私にとってプログラミングは仕事であり、趣味であり、情熱を持って打ち込む対象です。\nこの楽しさをあなたにもお伝えしたい、と思いこのコースを作りました。あなたの受講お待ちしております！",
      "target_audience": [
        "みっちりしつこく解説していますのでサクッと情報を得たい方には向いていません。受講しないでください。",
        "プログラミングを覚える必要がある新入社員",
        "エンジニアにキャリアアップしたい方",
        "コンピュータを使った問題解決の方法を考えるのが好きな方",
        "人間よりもコンピュータと対話している方が得意な方",
        "営業職はもう嫌だ、、、という方 (講師=イクマはこれでした)",
        "Python エンジニアを目指す方",
        "徹底的にPythonの基礎を学びたい方",
        "Python をきちんと書けるようにならなければならないプログラミング未経験の新入社員～中堅社員の方向け",
        "プログラミングに興味があり、きちんと使えるようになりたい方"
      ]
    },
    {
      "title": "Apprendre la programmation en C: cours complet",
      "url": "https://www.udemy.com/course/apprendre-la-programmation-en-c-cours-complet/",
      "bio": "Développement logiciel avec le langage C",
      "objectives": [
        "Créer des programmes en C",
        "Comprendre les bases de la programmation (comment créer un logiciel à partir de code source).",
        "Utiliser la bibliothèque standard du C (STL).",
        "Maîtriser la gestion des variables et de la mémoire.",
        "Maîtriser l’utilisation des boucles et conditions.",
        "Dompter les tableaux et les pointeurs.",
        "Créer et utiliser des fonctions.",
        "Créer des modules pour les partager."
      ],
      "course_content": {
        "Introduction": [
          "Bienvenue dans cette formation",
          "Comment créer un programme?",
          "Présentation du langage c",
          "Quiz sur les bases de la programmation"
        ],
        "Mise en place de l'environnement": [
          "Installer les outils",
          "Créer un nouveau projet C",
          "Compiler son premier programme"
        ],
        "Syntaxe et structure d'un programme de base en C": [
          "Les includes",
          "La fonction main",
          "la fonction printf",
          "Instruction et indentation",
          "Les commentaires",
          "Tp et bilan"
        ],
        "Variables et mémoire": [
          "Gestion de la mémoire",
          "Déclarer des variables",
          "Afficher des variables",
          "Principaux types de variables",
          "Tailles des variables en mémoire",
          "Signed et unsigned",
          "Short et long",
          "Quiz: Variables et mémoire",
          "Tp et bilan"
        ],
        "Opérations et variables": [
          "Les opérateurs",
          "Les expressions",
          "Priorité des opérateurs",
          "Opérateurs spéciaux",
          "Préfixe et suffixe",
          "Lecture depuis la console",
          "Quiz: Les opérateurs en C",
          "Tp et bilan"
        ],
        "Complément sur les variables": [
          "Les constantes",
          "Portée des variables",
          "Typage et transtypage",
          "Exercice: Conversion ASCII",
          "Overflows",
          "Fonctions Mathématique (stl)",
          "Quiz: Complément sur les variables",
          "Tp et bilan"
        ],
        "Les conditions en C": [
          "Présentation des conditions",
          "La condition if else",
          "Les opérateurs logique",
          "Priorité des opérateurs logique",
          "Exercice: Pair ou Impair",
          "Imbrication des conditions",
          "Le switch case",
          "L'opérateur conditionnel",
          "Quiz: les conditions en C",
          "Tp et bilan"
        ],
        "Les boucles en C": [
          "Présentation des boucles en C",
          "La boucle While",
          "La boucle Do While",
          "La boucle For",
          "Règles d'or des boucles",
          "Exercice: Code PIN",
          "Break et Continue",
          "Boucles imbriqués",
          "Quiz: les boucles en C",
          "Tp et bilan"
        ],
        "Les Pointeurs": [
          "Présentation des pointeurs",
          "Variables et adresses",
          "Créer et utiliser un pointeur",
          "Dangers des pointeurs",
          "Quiz sur les bases des pointeurs",
          "Exercice: Adresses et variables"
        ],
        "Les tableaux": [
          "Présentation des tableaux",
          "Parcourir un tableau",
          "Tableaux et pointeurs",
          "Exercice: Tableaux et adresses",
          "Tableaux multidimensionnels",
          "Quiz sur les tableaux",
          "Tp et bilan"
        ]
      },
      "requirements": [
        "Avoir un ordinateur sous Windows, Linux ou Mac.",
        "Avoir les droits administrateur sur sa machine.",
        "Savoir installer un logiciel sur son ordinateur."
      ],
      "description": "Bonjour a tous et bienvenue dans cette formation sur la programmation et plus spécialement sur le développement logiciel en C, je m'appelle Arnaud Mercier et je serai votre formateur tout au long de ce cours\nje suis ingénieur informatique spécialisé notamment dans l’architecture et le développement logiciel. Lors de mon parcours professionnel j’ai eu l’occasion de travailler sur de très nombreux projets de développement en C comme par exemple:\nJeu vidéo pour la Nintendo DS\nDécodeur TV pour Orange.\nLogiciel embarqué pour des jumelles d’observation chez Safran\net bien d’autres\nLe C est un langage très populaire et utilisé. On le retrouve un peu partout comme par exemple dans le jeux vidéo, la plupart des logiciels PC et même dans l’embarqué. Le C est un très bon candidat si vous cherchez un 1er langage pour apprendre le développement logiciel car il comporte beaucoup de notions que l’on retrouvent dans la plupart des autres langages. Ainsi la maîtrise du C vous garantit un apprentissage beaucoup plus simple et rapide d’autres langages de programmation.\nDans cette formation pour débutants et intermédiaires en développement, nous allons apprendre les bases du développement logiciel. Comment à partir de lignes de code on peut faire un logiciel exécutable sur notre machine. Puis nous verrons les bases du langage C et entre autre, comment gérer la mémoire via les variables, comment faire vivre notre programme avec les boucles et conditions ou encore comment utiliser la bibliothèque standard du C (STL) pour interagir avec l’utilisateur.\nUne fois ces bases acquises, nous augmenterons un peu le niveau avec les redoutables pointeurs et tableaux. c’est souvent la partie que les novices en C redoutent le plus. Mais je vous garantie qu’avec moi ça vous semblera finalement très simple ;)\nAlors oui c’est un gros programme mais je vous garantie que vous ne verrez pas le temps passer.\n\n\nLa philosophie de mes cours\nApprendre en pratiquant : Comme le dit Richard Branson « La meilleure façon d’apprendre c’est de faire ! » Et oui, il n'y a pas de secret, plus vous pratiquerez, plus vous progresserez ! Vous trouverez alors environs 20% de théorie pour 80% de pratique dans cette formation.\nApprendre en s’amusant : Vous l’avez surement remarqué, mais nous apprenons bien mieux quand les choses sont présentées de manière ludique. Vous trouverez alors dans cette formation un fil rouge sous forme d’un petit jeu vidéo un peu spécial vous verrez. Cela permettra alors d'illustrer les notions vue ensemble et servira de support pour les exercices que je vous ai préparés.\n\n\nInformations importantes à savoir:\nSi cette formation ne vous satisfait pas alors vous pouvez obtenir un remboursement sous 30 jours.\nUne fois que vous avez rejoint la formation, vous y avez accès à vie.\nVous avez également accès gratuitement à toutes les mises à jour que j’apporterai à cette formation.\nVous pouvez m’envoyer des messages personnels avec toutes vos questions ou suggestions concernant la formation.\nDes extraits vidéos sont à votre disposition.\nAu plaisir de partager cette formation avec vous !\nArnaud",
      "target_audience": [
        "Débutant dans le développement logiciel. Le C est l’un des meilleurs langages pour se lancer dans l’aventure de la programmation.",
        "Personnes souhaitant apprendre à développer en C ou revoir et maîtriser les bases de ce langage."
      ]
    },
    {
      "title": "Python Bootcamp: Der Einstiegskurs",
      "url": "https://www.udemy.com/course/python-kurs/",
      "bio": "Werde Python Entwickler in 2 Wochen. Grundlagen, Objektorientierung, Modularisierung: Dieser Kurs deckt alles ab!",
      "objectives": [
        "Eigene Programme in Python zu Programmieren",
        "Die grundlegenden Konzepte von Python zu verstehen",
        "Eigenständig mit Python zu arbeiten"
      ],
      "course_content": {
        "Wir lernen die Grundlagen von Python": [
          "Einführung in Python und in diesen Kurs",
          "Einführung in Jupyter",
          "Merkblatt: Was tun, wenn try.jupyter.org nicht funktioniert?",
          "Wichtiger Hinweis! (Windows)",
          "Merkblatt: Jupyter / Hallo Welt",
          "Zahlen in Python",
          "Strings in Python",
          "Strings in Python",
          "Strings in Python (2)",
          "Strings in Python (2)",
          "Merkblatt: Strings in Python",
          "Zahl -> String, String -> Zahl, ..."
        ],
        "Wir lernen die Grundlagen von Python (2)": [
          "Listen in Python",
          "Listen in Python (2)",
          "Merkblatt: Listen in Python",
          "Test: Listen in Python",
          "Booleans",
          "Dictionaries",
          "Merkblatt: Dictionaries in Python",
          "Tupel"
        ],
        "Erweiterte Grundlagen in Python": [
          "If - Abfragen",
          "Else und elif",
          "For-Schleifen",
          "For-Schleifen mit range()",
          "While - Schleife",
          "Break & Continue",
          "List Comprehensions",
          "Aufgabe für euch",
          "Musterlösung"
        ],
        "Funktionen in Python": [
          "Funktionen in Python",
          "Rekursive Funktionen",
          "Benannte Parameter",
          "Funktionen übergeben",
          "Lambda Funktionen",
          "Pass by Reference",
          "Scope von Variablen",
          "Verschachtelte Funktionen",
          "Funktionen dokumentieren",
          "Merkblatt: Funktionen in Python (7 Seiten)",
          "Funktionen in Python"
        ],
        "Objektorientierung in Python": [
          "Einführung in die Objektorientierung",
          "Konstruktoren",
          "Objektorientierung: Eigenschaften definieren",
          "Private Eigenschaften & Methoden",
          "Vererbung (Object Inheritance)",
          "Typ eines Objekts feststellen: isinstance() vs. type()",
          "__str__, __len__, __del__",
          "Merkblatt: Objektorientierung (PDF, 5 Seiten)",
          "Objektorientierung in Python"
        ],
        "Exceptions in Python": [
          "Exceptions in Python",
          "Exceptions in Python (Error - Hierachie)",
          "Exceptions in Python (in Unterfunktionen, except IndexError, ...)",
          "Eigene Exceptions in Python",
          "Exceptions in Python (finally - Block)",
          "Merkblatt: Exceptions in Python (PDF, 6 Seiten)"
        ],
        "Module in Python": [
          "Mac: Python lokal installieren",
          "Mac: Editor (Atom) lokal installieren",
          "Mac / Linux: Ein kurzer Exkurs, Umgang mit Terminal",
          "Windows: Python lokal installieren",
          "Windows: Editor (Atom) lokal installieren",
          "Python - andere Datei einbinden",
          "Import vs. import from",
          "Import as",
          "Import mit Ordner"
        ],
        "Zugriff auf das Dateisystem": [
          "Dateien öffnen (open, read, seek)",
          "Datei Zeile für Zeile auslesen",
          "Datei schließen",
          "Datei schreiben",
          "Aufgabe: Programmzähler",
          "Musterlösung: Programmzähler"
        ],
        "Weitere Features": [
          "Sets in Python",
          "Merkblatt: Sets in Python (PDF, 2 Seiten)",
          "Decorators",
          "Decorators mit Parametern",
          "Dict Comprehensions",
          "Merkblatt: Dict - Comprehensions (PDF, 2 Seiten)",
          "Erkenne die Datenstruktur!",
          "Datumsfunktionen",
          "Weitere Datumsfunktionen",
          "strftime",
          "Formatierung von Strings",
          "Formatierung von Strings (Zahlen)"
        ],
        "Extra: Generation": [
          "Unterschied Iteration vs. Generation",
          "Eigenen Generator schreiben - das yield - keyword",
          "Aufgabe Generators",
          "Musterlösung: Aufgabe Generators",
          "Generator Comprehensions"
        ]
      },
      "requirements": [
        "In diesem Kurs werden wir zuerst try.jupyter.org verwenden, und später Python auf unserem Rechner installieren. Das wird aber alles im Kurs erklärt, ihr braucht also nichts zu tun :)",
        "Ihr benötigt natürlich einen Computer (Windows / Mac / Linux) auf dem ihr entwickeln könnt"
      ],
      "description": "Info für Ungeduldige: Schon nach 15 Minuten hast du dein erstes Python - Programm geschrieben!\nDieser Kurs ist der perfekte Anfängerkurs für Python 3, und Python ist die perfekte Programmiersprache für Programmieranfänger. Sie ist einfach aufgebaut, aber gleichzeitig unglaublich mächtig und wird daher für unzählige Anwendungszwecke verwendet: Internet-of-Things, Webserver, wissenschaftliches Rechnen, numerisches Programmieren, usw.\nDu fängst zuerst ganz einfach bei einem \"Hallo Welt\" an, und lernst anschließend Schritt für Schritt alle wichtigen Konzepte von Python kennen:\n\nEinfache Programme\nListen\nList Comprehensions\nUnterschied zwischen Strings, Integern und Floats\nFunktionen\nLambda Funktionen\nObjektorientierung\nAbfangen von Fehlern\n...\nDu fängst wirklich sofort an, Python zu lernen. Dadurch steigst du sofort in die Programmiersprache ein und sammelst wertvolle Praxiserfahrung.\nDadurch wirst du ideal auf deine Anwendung von Python vorbereitet - und zwar egal, für was du Python später verwenden möchtest.\nSpäter installieren wir auch noch Python bei euch lokal, sodass ihr auch ohne Internet eure Programme weiter programmieren könnt.\nUdemy-Zertifiziert:\nNach Abschluss dieses Python-Kurses beherrscht du Python und kannst eigenständig Python-Programme schreiben! Und all das mit Udemy-Zertifikat, das du auch z. B. für deinen Lebenslauf verwenden kannst.\nSchaue dir jetzt meine Video-Nachricht and dich an!\n\n\nKlingt gut?\nDann würde ich mich sehr freuen, dir noch heute die Tür zur Python-Welt öffnen zu können.\nDu lernst mit dem erfolgreichsten, deutschsprachigen Dozenten auf Udemy.\nSchau dir auch meine Video Nachricht an, oder lies dir noch ein paar Bewertungen durch - überzeuge dich einfach selbst :)",
      "target_audience": [
        "Der Kurs beschäftigt sich mit der aktuellsten Version von Python, Python 3. Er ist nicht für Leute, die die Vorgängerversion (Python 2) lernen möchten",
        "Der Kurs ist für Anfänger, die noch keine größere Erfahrung mit Python haben"
      ]
    },
    {
      "title": "Python 3零基础完全入门与提高",
      "url": "https://www.udemy.com/course/python3-chinese/",
      "bio": "《Python3面向对象编程》第一版中文译者之一，新浪知名Python博主“麦兜搞IT”带大家一起学Python3.8+",
      "objectives": [
        "Python的基本语法",
        "Python的数据结构",
        "python的控制结构",
        "python的module，class面向对象",
        "python的debug",
        "python的测试",
        "函数式编程",
        "python的函数",
        "正则表达式"
      ],
      "course_content": {},
      "requirements": [
        "准备一台能够访问Internet的PC（windows，Linux，Mac均可）",
        "一个安静的环境"
      ],
      "description": "大家好，欢迎大家学习Python3零基础完全入门课程。我是这门课程的讲师肖鹏，作为一名Cisco的网络开发工程师，我对Python的开发有10年的经验，热爱分享，2009-2014年，我在新浪博客“麦兜搞IT”上发表了150篇Python Blog，总阅读人数超过了100万人次。2015年，我的第一本译著《Python3面向对象编程》出版。今天，我把我的经验在Udemy上分享给大家，希望能给大家带来一些帮助，也欢迎大家和我交流，一起学习进步。\nPython 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。\n\nPython 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。\nPython 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。\nPython 是交互式语言： 这意味着，您可以在一个Python提示符，直接互动执行写你的程序。\nPython 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。\nPython 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。\n本课程，让我们一起从零开始学习Python，认识Python。\n•第一章 课程介绍和开发环境搭建\n•第二章 基本数据类型\n•第三章 列表和元组\n•第四章 字典和集合\n•第五章 条件语句和循环语句\n•第六章 函数\n第七章 面向对象基础\n第八章 模块和包\n第九章 输入输出和文件\n第十章 函数式编程\n第十一章异常和处理\n第十二章 调试和测试\n第十三章 Logging日志\n第十四章 Collection模块\n第十五章 深入认识class和object\n第十六章 深入理解python的Namespace",
      "target_audience": [
        "想掌握一门编程语言",
        "想开发一个Web application",
        "想写一些简单脚本提高工作效率"
      ]
    },
    {
      "title": "Corso completo sulla programmazione in Python 3 - 2025",
      "url": "https://www.udemy.com/course/corso-completo-sulla-programmazione-in-python/",
      "bio": "Il corso completo in Italiano per il linguaggio di programmazione più richiesto di questo secolo!",
      "objectives": [
        "Comprendere i fondamentali del linguaggio Python 3",
        "Progredire in modo graduale in modo da affrontare topic avanzati come classi e decoratori senza problemi",
        "Possibilità di testare le tue conoscenze tramite numerosi esercizi e un vero test di esame finale!",
        "Testare le tue conoscenze in maniera pratica, realizzando dei progettini finali!"
      ],
      "course_content": {},
      "requirements": [
        "Un computer",
        "Una connessione internet",
        "Familiarità con alcuni concetti base della programmazione è sicuramente un \"plus\" ma non è assolutamente necessario!!"
      ],
      "description": "Corso completo sulla programmazione in Python 3 è un lungo viaggio nella programmazione in Python, il linguaggio di programmazione più popolare al mondo e utilizzato da tantissime compagnie tra cui Google, Pinterest e Facebook!\nIn oltre 15 ore di contenuti video affronteremo tutti gli aspetti principali di questo fantastico linguaggio!\nTra i vari argomenti ci soffermeremo su:\n· Setup e Installazione\n· Variabili e panoramica sui concetti base\n· Data types: numeri, booleani, liste, stringhe, set, tuple, dizionari, frozen set...\n· Funzioni e Metodi\n· Controllo di flusso\n· Cicli for e while\n· Funzioni built-in\n· lambda expressions\n· Decoratori\n· Classi e il paradigma object oriented\n· Gestione delle eccezioni.\n· Progettini per testare le tue conoscenze dal punto di vista pratico\n· Files I/O\n· Iteratori e Generatori\n... e tanto altro!\nDurante tutto il corso scriveremo codice insieme e avrai l'opportunità di testare ciò che hai imparato con numerosi esercizi. Avrai anche la possibilità di testare la tua preparazione con un vero e proprio test  usato durante l'esame per ottenere la certificazione Python Associate!\nIl corso inoltre verrà aggiornato costantemente con nuovi contenuti e progetti in base ai tuoi feedback!\nPython è un linguaggio fantastico e sono sicuro che non rimarrai deluso dalle sue potenzialità!\nGrazie per aver visitato questa pagina, se vuoi imparare a programmare in Python, questo è il corso per te!",
      "target_audience": [
        "Chiunque voglia approcciarsi per la prima volta alla programmazione in Python",
        "Programmatori con background in altri linguaggi che vogliono aggiungere Python al loro arsenale",
        "Tutti coloro che vogliono imparare una delle skills attualmente più richieste in ambito lavorativo!"
      ]
    },
    {
      "title": "Curso Completo de PHP 7 PROFISSIONAL - 6 cursos em 1.",
      "url": "https://www.udemy.com/course/curso-completo-de-php-profissional/",
      "bio": "PHP, MySQL, AJAX e Programação Orientada à Objetos. Desenvolvimento de um projeto REAL!",
      "objectives": [
        "Instalação do PHP e MySQL.",
        "Fundamentos da linguagem.",
        "Estruturas de Repetição e Ações Condicionais.",
        "Criar consultas em MySQL.",
        "Criar um banco de dados do zero.",
        "Listagem de Produtos.",
        "Rotinas de Pesquisa.",
        "Login de usuário.",
        "CRUD (Consulta, Inclusão, Alteração e Exclusão de dados).",
        "Upload de arquivos.",
        "O que é AJAX.",
        "Como carregar arquivos JSON.",
        "Criar uma lista aninhada a outra.",
        "Introdução à OOP.",
        "Classe e Objeto.",
        "Método Construtor.",
        "Herança, Polimorfismo, Abstração e Encapsulamento",
        "Membros de Base.",
        "Interfaces"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico de desenvolvimento Web nas linguagens HTML e Javascript.",
        "Um computador com acesso à internet."
      ],
      "description": "Este é o treinamento de PHP mais completo da Udemy. São mais de 285 aulas e mais de 19 horas de aulas gravadas. Junte-se a mais de 250 mil alunos com o professor #1 da Udemy Brasil.\nO objetivo deste treinamento é ensinar tanto quem está iniciando, como aqueles profissionais que já conhecem a linguagem server-side mais popular e desejam ir muito além.\nNeste curso, você vai aprender:\nInstalar o PHP e MySQL.\nVariáveis e Arrays em PHP.\nAções condicionais (IF, ELSE, Switch-Case).\nEstruturas de Repetição (While, For, For each).\nFunções.\nData e Hora.\nCriar consultas em MySQL.\nCriar filtros.\nRelacionamento entre tabelas.\nCriar um banco de dados do zero.\nConhecer as API's de conexão.\nListagem de Produtos.\nRotina de Pesquisa.\nLogin de usuário.\nInclusão, Alteração e Exclusão de dados.\nUpload de arquivos.\nPágina de Contato (por email).\nO que é AJAX.\nComo carregar arquivos XML.\nComo carregar arquivos JSON.\nComo criar arquivos JSON com PHP.\nUsando função CallBack.\nCriar uma lista aninhada a outra.\nComo utilizar serviços de terceiros (CEP, Tempo, etc).\nIntrodução à OOP.\nClasse e Objeto.\nMétodo Construtor.\nHerança, Polimorfismo, Abstração e Encapsulamento.\nMembros de Base.\nAssociação de Agregação.\nAssociação por Composição.\nInterfaces.\n\n\nO curso contém um conjunto completo para seu aprendizado:\nVídeo-aulas.\nExercícios e simulações para você praticar.\nSuporte para tirar as suas dúvidas.\n\n\nNesta formação, você aprenderá do ZERO até o AVANÇADO como:\n\nVamos começar do princípio, vou te ensinar como criar uma conta instalar cada software necessário. Depois, vou ensinar conceitos iniciais da linguagem. Logo em seguida, vamos entender como funciona um banco de dados, vamos aprender a criar consultas simples e complexas. Vamos também aprender a criar um banco de dados do zero. Vamos aprender como integrar PHP com MySQL, serão dois cursos para estas técnicas.\nVamos aprender em seguida como utilizar técnicas de AJAX com PHP. Aprender a carregar arquivos JSON e XML. Vamos aprender a criar arquivos JSON com PHP, funções de CallBack, consumir serviços de terceiros como CEP e Previsão de Tempo. Vamos aprender também os fundamentos de Programação Orientada à Objetos com PHP.\n\n\nO que nossos alunos falam a respeito:\n★★★★★\nMoacir\nNa apresentação realmente possui tudo o que preciso para desenvolver bem em PHP. Estou gostando muito ! O Curso é simplesmente FANTÁSTICO ! O Docente está de Parabéns, excelente metodologia. Excelente !!!!\n★★★★★\nFábio Lisboa\nO curso tem sido excepcional. Cada lição ensinada é ímpar e é um curso de ótima qualidade, claro e objetivo. Indico a todos.\n★★★★★\nAndré Lisboa\nÓtimo professor aprendei muito com o curso.\n\n\nRespostas de nossos alunos:\nVocê está obtendo informações importantes? -- Resposta: 98% Sim\nAs explicações dos conceitos são claras? -- Resposta: 98% Sim.\nA apresentação do instrutor é cativante? -- Resposta: 97% Sim.\nO curso está atendendo a suas expectativas? -- Resposta: 97% Sim.\nO instrutor entende do assunto? -- Resposta: 98% Sim.\n\n\nNão há risco algum, a plataforma da Udemy oferece:\nCertificado ao término da formação.\nGarantia de Qualidade (ou seu dinheiro de volta em até 30 dias após a compra).\nAcesso vitalício, não expira nunca.\n\nClique no botão COMPRAR AGORA e tenha acesso à 100% do meu curso. Seja muito bem-vindo e conte conosco em sua jornada de aprendizado!\n\n\nO pacote contém 286 aulas gravadas distribuídas em 71 seções. São 19h e 40 minutos de aulas gravadas.",
      "target_audience": [
        "Desenvolvedores Web",
        "Estudantes de Computação",
        "Interessados em desenvolver sistemas para Web e Aplicativos."
      ]
    },
    {
      "title": "Полное руководство по Python 3: от новичка до специалиста",
      "url": "https://www.udemy.com/course/bestpython/",
      "bio": "Изучи Python 3 с нуля - один из самых популярных языков программирования в мире + Введение в SQL и PostgreSQL",
      "objectives": [
        "Писать простые программы на Python 3",
        "Как писать простые игры типа крестиков-ноликов",
        "Логика с условиями и циклами",
        "Объектно-ориентированное программирование на Python",
        "Использование Jupyter Notebook",
        "Использование коллекций в Python: списки, словари и так далее",
        "Декораторы",
        "Неизменяемые объекты",
        "Лучшие практики по написанию \"чистого\" кода на Python",
        "Введение в SQL и PostgreSQL"
      ],
      "course_content": {},
      "requirements": [
        "Современный компьютер с доступом к Интернет"
      ],
      "description": "Python стабильно входит в ТОП-10 наиболее популярных языков программирования. Это именно тот язык с которого стоит начинать изучать программирование. Благодаря своей простоте и элегантности, Python позволяет новичкам не вникать во множество сложных программных понятий и конструкций, присущих другим языкам.  Короче говоря, если вы только начинаете своё путешествие в мир программирования, Python станет отличным выбором в качестве вашего первого языка программирования.\nПопулярность Python объясняется не только тем, что его легко изучать, но и реальными преимуществами языка в смысле его профессионального применения для решения сложных проблем автоматизации. Python - кросс-платформенный язык и работает под Windows, Linux, Mac OS. Множество архитектурных конструкций в этом языке строятся без нагромождения абстракций, как часто происходит в других ЯП (языках программирования).  Огромное количество уже готовых библиотек даёт возможность не изобретать велосипеды на каждом шагу.\nЭтот курс покрывает все основные возможности Python и даёт рекомендации по написанию грамотного, \"чистого\" кода. Данный курс покрывает следующие темы:\nВведение в Python: в чём преимущества Python, Python 2 vs Python 3, технические особенности, инсталляция дистрибутива\nОсновы Python: обзор типов данных, числа и простая математика, переменные, bool и None, основы работы со строками,\nформатирование строк, операторы сравнения, работа с файлами\nКоллекции в Python: list, dict, tuple, set, for-цикл, while-цикл, генераторы, логика с условиями\nФункции и модули: помощь по API, основы написания функций, лямбда-выражения,  вложенные функции и область видимости переменных, декораторы\nОбработка ошибок: ошибки и исключения, выброс исключений, их обработка, очистка ресурсов, юнит-тестирование\nКлассы: наследование и полиморфизм, множественное наследование, миксины, магические методы, абстрактные классы, проблема инкапсуляции\nМодули и пакеты:  PyPi, pip, создание модулей и пакетов, импорт модулей, типов и функций, __name__ и __main__\nДополнительные материалы: отладка, реализуем stack, namedtuple, декораторы, datetime, enum, интроспекция, управление памятью\nВстроенные модули: json, itertools, requests\nИнфраструктура и новые фичи: линтеры, виртуальные окружения, data classes, type hints\nPyCharm: установка, создание проекта, отладка, рефакторинг, quick fixes\nВведение в SQL и PostgreSQL: запросы, подзапросы, виды отношений, соединения, подключение к БД из Python и т.д.\nМножество домашних заданий с решениями\nЗачисляйтесь на курс прямо сейчас и начинайте новую жизнь, программируя на Python!",
      "target_audience": [
        "Новички, которые никогда не пробовали программировать",
        "Программисты, которые хотят вникнуть в новый для себя язык программирования"
      ]
    },
    {
      "title": "C# Eğitim Videosu Serisi",
      "url": "https://www.udemy.com/course/c-sharp-egitim-videosu-serisi/",
      "bio": "C# dilini en doğru şekilde öğrenin.",
      "objectives": [
        "C# diline temel seviyeden başlayarak, birlikte ileri seviyeye kadar geliyor olacağız",
        "Object-Oriented programlama mantığını adınız gibi öğreneceksiniz",
        "Programlamanın temel yapı taşlarını öğrenerek; bilinçli kod yazabilir hale geleceksiniz",
        "Ezbere değil, bilinçli ve anlaşılır kod yazmayı öğreneceksiniz"
      ],
      "course_content": {},
      "requirements": [
        "Visual Studio Geliştirme Ortamı"
      ],
      "description": "C# Eğitimi\nBu eğitim videosu serisi gerçekten titiz bir şekilde hazırlanmıştır..Eğitim serisini bitiren kişilerin, C# diline bütünüyle hakim olup, hızlı ve doğru bir şekilde kod yazması kaçınılmazdır. Tükettiğiniz her bölüm sonrasında özgüveniniz artacak ve bir sonraki bölümü izlemek için sabırsızlanacaksınız.\nBu kursda işleyeceğimiz konu başlıklarından bazıları aşağıdaki gibidir:\n* Object-Oriented Programlama'nın temelleri\nA: Abstraction\nI: Inheritance\np: Polymorphism\ne: Encapsulation\nr: Reusability\n* Veri Tipleri\n* Döngüler\n* Delegeler\n* Interface Kavramı\n* Hata Yönetimi\nÖnemli Not: Yeni videoların yüklenmesi halen devam ediyor..\nFaydalı olması temennisi ile..",
      "target_audience": [
        "C# dilini hiç bilmeyenler",
        "C# dilini daha önce kullanıp, teknik detaylarına hakim olmak isteyenler"
      ]
    },
    {
      "title": "Python do Básico ao Avançado[+1500 min de exercícios/extras]",
      "url": "https://www.udemy.com/course/python-do-basico-ao-avancado1500-min-de-exerciciosextras/",
      "bio": "Aprenda Linguagem Python Com Programação Orientada a Objetos, Testes, Coleções, Funções, Arquivos, Módulos e muito mais!",
      "objectives": [
        "Você irá adquirir conhecimentos suficientes para ser um profissional na Linguagem Python.",
        "Você terá um diferencial no mercado ao aprender a programar uma das Linguagens de Programação com maior crescimento atualmente.",
        "Você será capaz de desenvolver sistemas inteligentes e automatizados.",
        "Você será capaz, após concluir o curso, de expandir conhecimentos acerca de Desenvolvimento Web, Banco de dados e usar o Python no seu cotidiano.",
        "Irá dominar a Linguagem no nível Básico (Operações, Condicionais, Loops e mais)",
        "Irá dominar a Linguagem no nível Intermediário (Coleções, Funções, Arquivos e mais)",
        "Irá dominar a Linguagem no nível Avançado (Programação Orientada a Objetos, Testes, Decoradores e mais)",
        "Aprenda Python com +1500 minutos de Exercícios, Projetos e Extras.",
        "Aprenda Python de maneira objetiva e clara."
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básicos de Informática",
        "Ter acesso à internet, computador com Windows, Linux ou MAC",
        "Desejar ser um Profissional em Python"
      ],
      "description": "Python é uma Linguagem que está em grande ascensão no mercado, com isso, a procura por profissionais capacitados no desenvolvimento de Sistemas Automatizados, Data Science, Inteligências Artificiais e Desenvolvimento Web (Django) é crescente.\nAlém de ser uma Linguagem de fácil aprendizado e simples, Python é uma ferramenta forte que está em crescimento acelerado, portanto desde já é necessário dominá-la e se manter atualizado.\nPara tal feito, a Programando Ideias está disponibilizando para você, por tempo integral, mais de 50 horas de conteúdo (por enquanto) partindo do básico ao avançado, logo esse curso está aqui para você que deseja dar o primeiro passo rumo a ser um Programador Profissional de Python e também, para um desenvolvedor que contêm conhecimento, mas deseja se aprofundar e se atualizar no mercado.\nO curso oferece para você o embasamento teórico completo dividido em inúmeras aulas, separadas por seções que representam um crescimento gradual no nível de dificuldade e conteúdo. Além disso, existem mais de 1500 minutos repletos de exercícios resolvidos e comentados, projetos reais e ferramentas extras que irão auxiliar seu cotidiano e poderão ser utilizadas como base para projetos profissionais, como reconhecimento facial, controle do computador por voz  e mais.\nNosso time acredita em uma metodologia desenvolvida por profissionais das áreas de educação e psicologia, embasada em um sistema de ensino didático, acompanhado de vídeos contendo as resoluções dos exercícios propostos, a fim de fixar o conteúdo ensinado nas aulas teóricas.\nConteúdo abordado em nosso curso:\nInstalação da IDE em diversos Sistemas Operacionais\nEntrada e saída de dados\nVariáveis e tipo de dados\nOperações matemáticas\nCondicionais e operadores lógicos\nEstruturas de repetição\nColeções em Python\nFunções\nFunções Built-in\nConhecendo e tratando erros\nIteradores e Geradores\nTrabalhando com módulos e pacotes\nManipulando arquivos\nNested Functions e Decoradores\nProgramação Orientada a Objetos (Classes, Métodos, Atributos e Objetos)\nParadigmas de POO (Encapsulamento, Abstração, Herança e Polimorfismo)\nArquivos CSV, Pickle e JSON\nManipulando Data e Hora\nAplicando Testes em Python\nCuriosidades e Ferramentas Extras\nProjetos Finais (Genius, Jogo da Forca, Corrida de Obstáculos, Caixa Eletrônico)\nEm breve muito mais...\nNão perca tempo, é sua chance de se tornar um profissional completo com conhecimentos avançados e se destacar em qualquer oportunidade.",
      "target_audience": [
        "Estudantes ou Profissionais do Mercado que tem paixão pela Programação e desejam aprender Python.",
        "Iniciantes que desejam dar o passo inicial na Linguagem de Programação Python.",
        "Programadores Intermediários e Avançados que desejam aprender novos conteúdos e revisar antigos."
      ]
    },
    {
      "title": "OpenCV. Curso de OpenCV para visión por ordenador con Python",
      "url": "https://www.udemy.com/course/vision-por-ordenador-python-opencv/",
      "bio": "Aprende las últimas técnicas de visión por ordenador y reconocimiento facial con OpenCV y Python.",
      "objectives": [
        "Usar OpenCV para trabajar con ficheros de imágenes y vídeos",
        "Realizar manipulaciones de imágenes",
        "Crear un programa de detección de caras",
        "Modificar vídeos con Python y OpenCV",
        "Manipular y abrir imágenes con Numpy",
        "Usar Python y OpenCV para dibujar figuras en imágenes y vídeos",
        "Detección de objetos en imágenes"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Numpy e imágenes": [
          "Arrays en Python",
          "Imágenes como arrays en Python",
          "Matriz de números aleatorios"
        ],
        "Imágenes con OpenCV": [
          "OpenCV - Introducción",
          "OpenCV - Instalación",
          "Abrir imagen con OpenCV",
          "Manipulación de imágenes",
          "Dibujar figuras en una imagen",
          "Escribir texto en una imagen",
          "Dibujar con el ratón en una imagen",
          "Dibujar arrastrando el ratón sobre la imagen"
        ],
        "Procesamiento de imágenes": [
          "Mapeo de colores",
          "Conversiones de colores",
          "Mezclar imágenes",
          "Espacios de colores",
          "Mezclar 2 imágenes con distinto tamaño",
          "Crear imágenes binarias",
          "Mostrar una imagen en varios tamaños",
          "Gradientes y contornos de una imagen",
          "Efectos de erosión y eliminación del ruido",
          "Histograma de colores de una imagen"
        ],
        "Vídeos con Python y OpenCV": [
          "Conectarse a la cámara y grabar video",
          "Leer un archivo de video",
          "Dibujando en un vídeo"
        ],
        "Detección de objetos con OpenCV y Python": [
          "Detección de un objeto por emparejamiento de imágenes",
          "Detector de esquinas",
          "Detector del contorno de una imagen",
          "Detección de imágenes por características",
          "Detección de una cara en una imagen",
          "Identificar una cara dentro de un video"
        ],
        "Sección adicional": [
          "Clase extra"
        ]
      },
      "requirements": [
        "Debes tener un conocimiento básico de Python",
        "Webcam en tu ordenador, si quieres aprender a modificar vídeo en tiempo real"
      ],
      "description": "En este curso básico de OpenCV con Python, aprenderás a realizar programas de visión por ordenador, como por ejemplo, grabar un video con tu videocamara del ordenador y detectar tu cara en movimiento dentro del video.\nEstos son los temas principales del curso\nNumpy en Python\nArrays en Python\nImágenes como arrays en Python\nImágenes con OpenCV y Python\nIntroducción a OpenCV\nInstalación de OpenCV\nAbrir una imagen\nManipulación de imágenes\nDibujar figuras en imágenes\nEscribir textos en imágenes\nDibujar con el ratón en una imagen\nProcesamiento de imágenes\nMapeo de colores\nConversiones de colores\nMezclar imágenes\nEspacios de colores\nMezclar 2 imágenes con distinto tamaño\nCrear imágenes binarias\nMostrar una imagen en varios tamaños\nGradientes y contornos de una imagen\nEfectos de erosión y eliminación del ruido\nHistogramas de los colores de una imagen\nVídeos con Python y OpenCV\nConectarse a la cámara web y grabar un video\nLeer archivo de vídeo\nDibujando en un vídeo\nDetección de objetos con OpenCV y Python\nDetección de un objeto por emparejamiento de imágenes\nDetector de esquinas\nDetector del contorno de una imagen\nDetección de imágenes por características\nDetección de una cara en una imagen\nIdentificar una cara dentro de un video",
      "target_audience": [
        "Gente que quiera aprender a manipular imágenes y vídeos con Python y OpenCV"
      ]
    },
    {
      "title": "Máster en Programación de Aplicaciones en Labview - 2025",
      "url": "https://www.udemy.com/course/aprende-a-programar-en-labview-desde-cero/",
      "bio": "Programa aplicaciones con LabVIEW y arduino - 100% practico, TCP/IP y Visión artificial - Domina Labview nxg 5.0",
      "objectives": [
        "Crear programas en LabVIEW muy intuitivamente, resolviendo los problemas planteados con la mejor tecnica.",
        "Tener un buen conocimiento de todo el potencial de LabVIEW, conociendo en detalle de todo el entorno del programa.",
        "Programación estructurada  - Aprenderas a usar todas las estructuras de control que tiene LabVIEW.",
        "Un repaso de electrónica digital para entender mas (AND - OR - NOT) elementos en LabVIEW.",
        "Entender todas las Gráficas en LabVIEW - Sabras utilizar la correcta en tu aplicación",
        "Dominaras los tipos de Arrays y Clústers, para así crear aplicaciones mas complejas.",
        "Aprenderemos enlazar y adquirir datos con el micro controlador ARDUINO, asi utilizar LabVIEW para lo que realmente se ha creado",
        "Instalaremos juntos todo el software necesario, y aprenderas a instalar cualquier libreria en LabVIEW",
        "Entenderemos el Protocolo TCP-IP - DataSocket - y publicaremos nuestro Panel Frontal en paginas WEB en tiempo real",
        "Dominar y entender el nuevo entorno de LabVIEW NXG 5.0"
      ],
      "course_content": {
        "S1 - Introducción": [
          "Presentación del curso",
          "¡¡ Notas Importantes !!",
          "Recomendaciones para el curso",
          "¿ Que es LabVIEW ?",
          "Presentación y explicación de mi Trabajo Final de Carrera - Tesis Uni_2009"
        ],
        "S2 - Explorando LabVIEW": [
          "Inicio del programa",
          "Instalando labVIEW - NI LabVIEW Edición para Estudiantes",
          "Panel frontal",
          "Paleta de controles",
          "Diagrama de bloques",
          "Paleta de funciones",
          "Nuestro primer programa en LabView",
          "Ejercicio # 1",
          "Nuestro primer proyecto (Agrupacion de Vi) en labview",
          "Explorando LabVIEW"
        ],
        "S3 - Tipos de datos": [
          "Cables",
          "Controles e indicadores",
          "Constantes",
          "Booleanos",
          "String",
          "Flujo de datos",
          "Ejercicio # 2 - Variedad de tipos de datos en LabVIEW",
          "Tipos de datos"
        ],
        "S4 - Ayudas en LabVIEW": [
          "Descripción de cada icono",
          "Buscar iconos rapidamente - Conociendo mas sobre LabVIEW",
          "Vista panorámica de proyectos LabVIEW (Navegation Window)",
          "Ayudas en LabVIEW"
        ],
        "S5 - Programación estructurada #1": [
          "Introducción a la programación estructurada",
          "Un rapaso sobre las funciones de comparación",
          "Select",
          "Ciclo while loop",
          "Ciclo For loop",
          "For Loop Condicional",
          "Diagram Disable Structures - Deshabilitar estructura",
          "Ejercicio # 3",
          "Programación estructurada #1"
        ],
        "S6 - Tuneles y Shift Register": [
          "Túneles",
          "Shift Register o Registros de desplazamientos",
          "Shift Register o Registros de desplazamientos apilados",
          "Repaso de Shift Registers con mas ejemplos prácticos",
          "Ejercicio utilizado en la industria - Media de los datos adquiridos del motor",
          "Ejercicio # 4",
          "Tuneles y Shift Register"
        ],
        "S7 - Electrónica digital - Domina mas elementos lógicos": [
          "Introducción a la electrónica digital",
          "Circuitos y señales digitales",
          "Algebra de Boole",
          "Puertas lógicas - ( AND OR NOT NAND NOR )",
          "Repasando las tablas de verdad con elementos booleanos de LabVIEW",
          "Repaso practico con compuertas lógicas",
          "Ejercicio # 5",
          "Electronica digital"
        ],
        "Proyecto # 1 - LabVIEW busca un numero para el usuario": [
          "Planteamos el proyecto a realizar",
          "Buscando todos los elementos del proyecto",
          "Construir el numero aleatorio entre 0 y 100",
          "Limitamos el Controlador e iniciamos la lógica de programación",
          "Aplicamos la condición para que termine el programa",
          "Contar numero de intentos del ordenador y final del proyecto #1"
        ],
        "S8 - Programación estructurada #2": [
          "Estructura Case",
          "Ejercicio # 6",
          "Event Structure",
          "Estructura Flat Sequence",
          "Estructura Stacked Sequence",
          "Ejemplo practico con la estructura Stacked Sequence",
          "Formula node",
          "Ejercicio practico con Formula Node",
          "Ejercicio # 7",
          "Programación estructurada #2"
        ],
        "S9 - Temporización en la ejecución del código": [
          "Introducción a la temporizaron en LabVIEW",
          "Wait Until Next ms Multiple",
          "Wait (ms) - Funcion de espera",
          "Time Delay (s)",
          "Tick Count (ms)"
        ]
      },
      "requirements": [
        "Saber utilizar el PC a nivel básico",
        "Alta motivación de aprender TODO sobre LabVIEW"
      ],
      "description": "Este master está dirigido a toda persona que esté interesada en aprender y reforzar mas de LabVIEW, todo de manera practica y optimizada donde podrás asimilar todos los conceptos de una manera fácil y en el menor tiempo posible.\n\n\nEl master esta en construcción, quedan por añadir proyectos y mas clases (llegaremos a las 15 horas o mas de contenido), realizare actualizaciones cada semana.\n\n\nEl precio del curso incrementara a medida que el curso se complete. APROVÉCHALO AHORA !!\n\n\nAprenderás:\n\n\nEntender todo el entorno de Labview y moverte con soltura.\nProgramación estructurada  - Usar todas las estructuras que tiene LabVIEW.\nShift Register.\nUn repaso de electrónica digital para entender mas (AND - OR - NOT) elementos en LabVIEW.\nGráficas en LabVIEW.\nUso de Arrays y Clústers, para así crear aplicaciones mas complejas.\nProgramación modular - Interconectando VIs\nAprenderemos enlazar y adquirir datos con el micro controlador ARDUINO.\nInternet Protocolo TCP-IP - DataSocket - Publicación en WEB.\nVisión Artificial y Procesamiento de Imágenes con el Software Vision Acquisition and Motion.\nDomina Labview NXG, enterate de los cambios y mejoras en Labview.\n\n\nSoy ingeniero en electrónica industrial y automática, totalmente certificado, con este curso obtendrás información dictada por un profesional en este programa.\n\n\nDe hecho mi tesis o trabajo final de carrera BANCO DE PRUEBAS PARA UNA MOTO ELÉCTRICA DE COMPETICIÓN, lo realice con LabVIEW + tarjeta de adquisición de datos DAQ-6009 el cual lo expondré en el curso próximamente.",
      "target_audience": [
        "Cualquiera que desea aprender programación en LabVIEW",
        "Estudiantes de ingeniería, que deseen mejorar sus habilidades en la programación grafica",
        "Personas que quieran automatizar procesos, con un muy bajo coste"
      ]
    },
    {
      "title": "Python do ZERO à Programação Orientada a Objetos",
      "url": "https://www.udemy.com/course/python-do-zero-a-poo/",
      "bio": "Aprenda programação em Python de forma simples, rápida e efetiva.",
      "objectives": [
        "Programação em Python.",
        "Programação Estruturada e Orientada a Objetos.",
        "Python do básico ao avançado."
      ],
      "course_content": {},
      "requirements": [
        "Um computador e interesse em aprender programação."
      ],
      "description": "Aprenda programação de forma rápida e descomplicada por meio da linguagem de programação Python, uma das mais fáceis, modernas, robustas e eficientes linguagens de programação da atualidade. Neste curso você terá uma abordagem clara e didática criada de forma que você possa aprender do zero absoluto como programar na linguagem Python desde seus primeiros códigos até estruturas de programa mais robustas usando de orientação à objetos.\nO curso foi todo desenvolvido com uma metodologia autodidata, de modo que o(a) aluno(a) tem plenas condições de não somente replicar os exemplos apresentados, mas aplicar os conceitos das explicações de cada tópico criando e executando seus próprios códigos. Ao inscrever-se neste curso você também terá direito de acesso a materiais que auxiliarão no processo de aprendizagem, além, é claro, do suporte do próprio autor para solucionar toda e qualquer dúvida. Curso com certificado emitido pela Udemy.\nCurso desenvolvido por Fernando Feltrin, Engenheiro da Computação com especialização em ciência de dados e inteligência artificial, professor licenciado para docência de nível técnico e superior, autor de mais de 10 livros sobre programação em Python e responsável por desenvolvimento e implementação de aplicações voltadas a modelos de redes neurais artificiais aplicadas à radiologia (diagnóstico por imagem).",
      "target_audience": [
        "Quem deseja aprender programação de computadores.",
        "Quem quer aprender Python."
      ]
    },
    {
      "title": "Schnelleinstieg in TypeScript",
      "url": "https://www.udemy.com/course/schnelleinstieg-in-typescript/",
      "bio": "Erlerne die wichtigsten Features von TypeScript in kurzer Zeit und wende diese auf deine Projekte an.",
      "objectives": [
        "Typescript Grundlagen",
        "Datentypen verwenden",
        "Interfaces erstellen",
        "Type Narrowing und Type Guards",
        "Objektorientierung und Vererbung",
        "Module Importieren/Exportieren",
        "Generische Funktionen und Klassen",
        "Union und Intersection Types",
        "Enum"
      ],
      "course_content": {},
      "requirements": [
        "JavaScript Grundlagen"
      ],
      "description": "Kursbeschreibung:\nDer Kurs zeigt dir die wichtigsten Features in TypeScript.\nDabei werden wir am Anfang gemeinsam die benötigte Software installieren und einrichten.\nDanach beginnen wir mit den Basics und arbeiten uns bis zu Klassen und zur Vererbung vor.\nDu kannst dir auch gerne die öffentlichen Videos vom Kurs anschauen, um auf den Geschmack zu kommen.\nWas ist TypeScript?\nWenn du TypeScript noch nicht kennst, handelt es sich dabei um eine Sprache, die auf JavaScript aufbaut und Syntax für statische Typen hinzufügt. Tools wie der TypeScript-Compiler löschen diese Typen einfach und lassen dich mit sauberem, lesbarem JavaScript zurück, das überall ausgeführt werden kann. Aber diese Typen sind da, um geprüft zu werden! Typen machen deine Absichten explizit und Tools können sie lesen und verstehen, um Fehler zu erkennen, noch bevor du deinen Code ausführst. Indem TypeScript deine Typen prüft, kann es Fehler wie Tippfehler, Logikfehler und mehr aufdecken! Neben dem Auffinden von Fehlern nutzt TypeScript auch Typen, um Editor-Tools wie präzise Code-Vervollständigung, Go-to-Definition und Umbenennung zu unterstützen.\nDieser Kurs besteht aus folgenden Themengebieten:\nInstallation von TypeScript, NodeJS und VSCode\nDie Grundlagen der TypeScript Programmierung\nVariablen, Arrays, Tuples etc.\nFunktionen, Klassen, Vererbung etc.\nWerde noch heute ein Profi, in der Technologie von Morgen! Wir sehen uns im Kurs!",
      "target_audience": [
        "JavaScript Entwickler",
        "TypeScript Entwickler"
      ]
    },
    {
      "title": "はじめてのPython3。経験0からGUIアプリケーションを作れるまでの基礎力を！",
      "url": "https://www.udemy.com/course/python3_for_beginners/",
      "bio": "数行のコードが仕事の生産性を劇的に向上させます！Python3の初心者も、GUIアプリを作れるまでの基礎が身に付きます！CSV,XML, JSONなどのファイル作成と読み込み方法や、exeファイルへ変換してユーザーへ配布する方法まで網羅！",
      "objectives": [
        "Pythonの基礎(知識0の状態から学びます)",
        "batファイルからPythonスクリプトを走らせる方法",
        "exeファイルへ変換方法(ユーザーに対して簡単にツールを配布することができます)",
        "サードパーティ製のパッケージのインストール方法(PyInstaller)",
        "CSVやXML, JSONなどのファイル作成と読み込み方法(各種情報の保存をしたり、ファイルをシェアすることで情報を共有することができます)"
      ],
      "course_content": {},
      "requirements": [
        "このコースで使用しているOSはWindows 10になります (LinuxやMacでも同じように動作させることができます)",
        "Python初心者"
      ],
      "description": "このコースは、Pythonやプログラム初心者が『Directory Maker』というツールを作れるようになるまでを強力にサポートします！\n\n\nPythonは、最近では機械学習などで用いられることが多いスクリプト言語です。\n他の言語に比べると学習コストが低いというのも特徴です。\n\n\nこのコースはPythonのインストール方法から始まり、SublimeTextというテキストエディタを使ってスクリプトを記述し、batファイルを叩いてスクリプトを実行させたり、exeファイルへの変換を学んでいきます。\nコースの要所要所に演習問題と回答を用意し、その演習までに習った知識でどのようなツールが作れるのか、というのも確認していきます。\n\n\n複雑なスクリプトを書けなくても、3-5行程度のスクリプトを書けるようになるだけで、普段の作業の効率が大幅に改善します。\n事務作業をされている方はPythonスクリプトを活用することで、フォルダの自動作成や、ファイルのコピーなども可能となります。\n\n\nこのコースで、Pythonのはじめの一歩を踏み出しましょう。\n\n\n*他のコースのカリキュラムの比較表を私のTwitter(@NakamoriTatsuya)で公開していますので、そちらもご確認をお願いいたします。\n\n\n※このコースに添付されているファイルやプログラムは、このコースを受講していただいた方は、商用利用を含め許可いたします。\nただし、他人への配布や、会社のサーバーなどへのアップロードは不可としますので、お願いいたします。\n\n\n他の言語を習得されている方でも導入しやすいように講座を策定しました。\nPythonのデータ型や変数の値の持ち方(参照)については、一つずつ丁寧に説明する事を心がけました。\n===============\n講師の環境\nWindows10\nPython (3.7.4)\nPySide2 (5.13.0)\nPyInstaller (3.5)\n===============\n\n\nCopyrights\n[Python] 2001-2019.  Python Software Foundation\n[SublimeText] Sublime HQ Pty Ltd\n[WhiteSpace (SublimeText)] 2015 Randy Lai\n[Alignment (SublimeText)]  2011 Will Bond\n[Smart Delete (SublimeText)]  Jay Gillibrand\n[PyInstaller] 2005–2019, PyInstaller Development Team.\n[PySide2] 2019 The Qt Company Ltd.",
      "target_audience": [
        "Pythonを学びたいと思っている方",
        "他の言語からPythonへ乗り換えようと思っている方",
        "Python2から3へ移行しようとされている方",
        "事務作業をスクリプトで効率良くしたいと思っている方(フォルダを作る、ファイルをコピーするなど)"
      ]
    },
    {
      "title": "C# Programlama Dili :Her Seviyeye Hitap Eden Eğitim Seti",
      "url": "https://www.udemy.com/course/c-sharp-programlama-dili-her-seviyeye-hitap-eden-egitim-seti/",
      "bio": "C# Programlama Dilini Detaylı Olarak Öğrenme ve Aktif Olarak Kullanabilme.",
      "objectives": [
        "C# programlama dilini ileri seviyeye kadar öğrenip rahat bir şekilde kullanabilecek.",
        "Nesneye Dayalı Programlama(Object Oriented Programming) çok iyi öğreneceksiniz (garantisini veriyorum.)",
        "Diğer programlama dillerine kolay bir şekilde adapte olabileceksiniz.",
        "Windows Formları öğreneceksiniz.",
        "2D oyunları yapabilecek altyapıyı kazanacaksınız.",
        "Her alana uygun Otomasyon yapabileceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Öğrenme isteği ve Sabır."
      ],
      "description": "Bir eğitmen olduğum kadar aynı zamanda bir öğrenciyim;\nhangi eğitimi alsam hep bir şeyin eksik kaldığını hissetmişimdir. Yazılım hayatımda beni bir anda üst seviyeye çıkaran bir şeyi farkettim.\nyazılan her kodun arkaplan'da çalışma yapısıydı ve bunu çok iyi öğrendiğim için her türlü backend diline çok kısa zamanda hakim olabiliyorum.Bu eğitimimde bu olaya çok fazla değer verdim ve her şeyi en ince ayrıntısına kadar anlattım.(kafanızda soru işareti kalmayacak garantisini veriyorum :))\nBir öğrenci bir eğitmenden neler ister bunu düşünerek bu eğitimi hazırladım.Açıklayacı ve detaylı anlatış tarzım dikkatinizi çekecektir.\nEğitim üzerinde ki her bir bölümü günlere bölerek izleyin ve kesinlikle pratik yapmayı unutmayın eğer ki izler pratik yapmazsanız hiçbir zaman öğrenemezsiniz ve benim yaptığım örnekler ile yetinmeyin arkadaşlar farklı farklı örnekleri çözmekte size bakış açısı kesinlikle kazandıracaktır.Eğitimi bitirme süreniz genel olarak 4 ay ile 6 ay arasında değişmelidir çok hızlıda ilerlemeyin çok yavaşta amacınız anladıklarınızı pratik yapıp konuların neden kullanıldığı , nerede kullanmak gerektiğini anlamak olması gerekiyor.Süreç biraz zor pes etmeyen kazanacaktır.\nKursta C# Programlama Dilini , Windows Formlar'ı anlattım ve her anlattığım konu üzerinden örnekler yaparak konuların pekiştirilmesini sağlamaya çalıştım.Bu eğitimi seveceğinize canı gönülden inanıyorum uzun bir süre sonunda bu eğitimi çıkarabildim.Umarım sizlere bir faydam dokunur.Bu eğitimden sonra farklı eğitimler de çekmeyi düşünüyorum.Hangi eğitimlerin olmasını isterseniz bunu bana özelden yazabilirsiniz.Eğitimler de görüşmek üzere :)\n-Bu kurs yazılıma ilk defa adım atan , nereden başlayacağını bilmeyen , detaylı bir şekilde öğrenmek isteyen herkes için uygundur...",
      "target_audience": [
        "Yazılımla ilgilenen herkes",
        "C# Programlama dilini öğrenmek isteyenler."
      ]
    },
    {
      "title": "はじめてのRuby on Rails入門-RubyとRailsを基礎から学びウェブアプリケーションをネットに公開しよう",
      "url": "https://www.udemy.com/course/the-ultimate-ruby-on-rails-bootcamp/",
      "bio": "Rails8対応。汎用性が高くPythonやPHPと同様に人気のある Rubyを使ってWebアプリケーション開発に挑戦しよう。基礎からCodespacesによる開発環境構築、Renderを使ってインターネットに公開するまでを体系的に学べる",
      "objectives": [
        "Ruby on RailsとRubyを使った実践的な開発スキル",
        "Ruby on RailsとRubyの違いを理解",
        "ウェブサービスを公開する方法",
        "クラウドサービス、RenderのPaaS(Platform as a Service)を使ってサービスをネット上に公開する方法を学ぶ",
        "AWS Cloud9を使った開発環境の構築"
      ],
      "course_content": {},
      "requirements": [
        "HTMLの基礎知識",
        "CSSの基礎知識",
        "JavaScriptの基礎知識",
        "データベース・SQLの基礎知識",
        "Linuxコマンドによるファイル操作の基礎知識（cd, ls, mv, sudoが使えるレベル）"
      ],
      "description": "Ruby on Rails とは？\nウェブアプリケーションをより効率的に作るための、ウェブアプリケーションフレームワークの一つで、複雑なウェブアプリケーションを効率的に開発できるメリットから、日本最大級の料理レシピサービスのクックパッド、グルメ口コミサイトの食べログ、ニュースアプリのGunosy、クラウド会計のfreee、民泊予約サイトのAirBnB（エアービーアンドビー）、ソースコード管理サービスGitHub（ギットハブ）、 クラウドファンディングのKickstarter（キックスターター）など、大手企業や有名スタートアップ企業でも採用されています。\n\n\nオープンソースであり、無償で利用できることから、多くのエンジニアに利用されて目に触れれることで、日々進化が行われています。フレームワークの品質が高く維持されていることも特徴です。\n数年で流行が去ってしまうフレームワークも多い中で、10年以上に渡りビジネスで利用されており、安心して利用することができます。\n\n\n☆☆コースの内容をしっかりと確認した上で受講をいただけるように、無料プレビューを約15分間公開しております。ぜひご覧ください！！☆☆\n\n\nWebアプリケーションフレームワークとは？\nWeb開発における、共通した作業にともなる労力を軽減、Webアプリケーションを少ないコードで開発できるように作られたものです。\n\n\nRubyとは？\nWebアプリケーションフレームワーク、Ruby on Railsでも使われるプログラミング言語です。 オブジェクト指向、シンプルな文法、強力な標準ライブラリ国際標準として規格化が行われているといった特徴があります。まつもとゆきひろ氏が開発した日本発のプログラミング言語です。世界中で利用されていますが、日本でも利用者が多く、日本語の情報が豊富にあるメリットがあります。\n\n\n学習の流れ\nイントロダクション\n開発環境構築\nRuby の基礎\nRuby on Railsの基礎\nミニQ＆Aサービスの開発\nウェブサービスをインターネットに公開する（Render）\n\n\n利用ソフトウェア等\n下記を使用してWebアプリケーション開発を学習します。\nRuby 3.3.5・・・サーバ側で動かすプログラミング言語\nRuby on Rails 8.0.0・・・Webアプリケーションを高速で開発するためのフレームワーク\nGitHub Codespaces・・・GitHubが提供するWebブラウザで動作する開発環境\nRender・・・Railsアプリケーションを簡単にインターネットに公開できるクラウドサービス\nGoogle Chrome ・・・Webブラウザ\n☆☆☆ 特記事項：\n動作確認済みの、コース指定バージョン、コース指定の手順以外の環境では、学習ができません。（ご自身で問題解決ができる方を除く）\n☆☆☆\n\n\n学習環境について\nパソコン(macOS または Windows)が必要。\nレクチャーの動画では原則としてmacOSを使用。Windows環境での学習については適宜補足説明。\nインストールして使うアプリケーションとして、Webブラウザ Google Chrome（無料）。\n開発環境には、GitHub CodespacesというブラウザでWeb開発が行えるGitHubのサービスを利用。（個人アカウントでは無料枠あり）\nRenderアカウント（無料プラン）\n\n\nQ＆Aコーナーのご利用について\n主に、カリキュラム通りに学習が進められない場合のアドバイスや、ディスカッションを行っております。\nコース内で紹介する動作確認済みの手順以外は、サポート対象外とさせていただいております。\n本コースの内容を超えるご質問にはお答えできませんので、あらかじめご了承ください。\n\n\n■ おわりに\n皆さんの今後の自己実現のためのお役に立てるコースとなれば幸いです。\nそれでは、皆さんとコースの中でお会いできることを楽しみにしております！\n\n\n受講するか迷っていますか？\nコースにご満足いただけない場合は30日以内返金保証制度があるため安心です（Udemy マーケットプレイスよりコースを購入された場合）\n\n\n旧版のカリキュラム（古いカリキュラム）について\n現在、旧版のカリキュラムを受講中の方のために、一定期間、コースの最後に旧版を残しています。\nただし、内容が古くメンテナンスが難しいため、一定期間後に削除予定です。ご容赦ください。\nお早めに最新のカリキュラムへ移行していただくことをおすすめします。\n\n\n■更新履歴\n2025/3/17 大規模アップデートを実施（Ruby 3.3.5とRuby on Rails 8に対応）\n2023/7/22 レクチャー「Cloud9の基本的なセットアップをしよう」を最新情報へアップデート\n2023/5/31 レクチャー「IAMユーザーを作成しよう」を最新情報へアップデート\n2023/4/11  試験公開：セクション「インターネットにウェブサービスを公開しよう（Render版）」\n2022/11/28  heroku無料プランの廃止に関するアップデート\n2022/6/28 コース紹介動画リニューアル\n2022/2/16 大規模リニューアル実施（Ruby 3とRuby on Rails 7へ対応）",
      "target_audience": [
        "HTML, CSS, JavaScriptの基本は習得した程度のウェブ開発初心者",
        "プログラミングの基礎は学習したが、ウェブサービスの実際の作り方と公開の仕方がわからない",
        "RubyとRuby on Railsを使ってウェブサービスを作りたい",
        "RubyとRuby on Railsを使うプロジェクトにアサインとなったので学びたい。",
        "☆☆☆すでにRubyを実務で利用している方には受講をおすすめいたしません☆☆☆"
      ]
    },
    {
      "title": "Sıfırdan Kodlama Eğitimi ile Programcılığın Mantığını Öğren",
      "url": "https://www.udemy.com/course/sifirdan-kodlama-egitimi-ile-programciligin-mantigini-ogrenin-python/",
      "bio": "Python, Java C, R, Php, Javascript yada Visual Basic Fark Etmez, Asıl Olan Mantığı Öğrenmektir.",
      "objectives": [
        "Hiç Bilmediğiniz Bir dili nasıl öğrenirsiniz.",
        "Değişkenler",
        "Sabitler",
        "Döngüler",
        "Şartlı İfadeler",
        "Fonksiyonlar",
        "Kütüphaneler",
        "Basit Bir Python Projesi",
        "Derleyiciler",
        "Editörler"
      ],
      "course_content": {},
      "requirements": [
        "Bilgisayar",
        "İnternet",
        "Öğrenmeye istekli olma."
      ],
      "description": "Sıfırdan Kodlama Eğitimi ile Programcılığın Mantığını Öğren\nKodlama dünyası, Python, Java C, R, PHP, JavaScript gibi birçok yazılım diliyle dolu. Ancak gerçek bir yazılımcı olmak istiyorsanız, öncelikle bu işin mantığını kavramanız gerekiyor. Yazılım ve kodlamanın temel mantığını çözdükten sonra, hangi dilde çalışacağınızı seçebilir ve o dilde projeler üretebilirsiniz.\n\n\nYazılım mantığını aktarmaya çalışırken hiç yazılım kullanmadan Türkçe ifadeler ile tabiri caiz ise küçük çocuklara anlatır gibi kodlamanın mantığını anlatmaya çalıştım. İleri seviye bir yazılım eğitimi bekliyorsanız bu eğitim size göre değildir. Hiç aşina olmayan kişilere göre hazırlanmıştır.\n\n\nYazılımın temelini oluşturan belli başlı enstrümanlar vardır ve bunları Lego parçalarına benzetebiliriz. Bu eğitimle size bu Lego parçalarını ve nasıl bir araya getireceğinizi öğreteceğim. Eğitimi aldıktan sonra istediğiniz programlama dilini kolaylıkla öğrenebilecek ve kendi projelerinizi geliştirebileceksiniz.\nKod yazarken takıldığınız noktalarda neler yapmanız gerektiğini ve bir yazılımcının nelere dikkat ettiğini öğreneceksiniz. Bu sayede sorunlarla başa çıkmayı ve hızlı çözümler üretmeyi öğreneceksiniz. Eğitim boyunca pratik yapacak, gerçek dünya senaryolarını çözecek ve projeler geliştireceksiniz.\n\n\nTemel programlama kavramları, değişkenler, operatörler, döngüler, koşullar ve fonksiyonlar gibi temel yapı taşları hakkında ayrıntılı bilgi edineceksiniz. Bu bilgileri günlük hayatta kullandığımız bir takım yapılarla özdeşleştirerek daha anlaşılık hale getirmeye çalıştık.\n\n\nBu eğitimle, yazılım dünyasına adım atmak ve programcılık becerilerinizi geliştirmek için mükemmel bir başlangıç yapacaksınız. Kurs sonunda, birçok dilde kod yazabilen ve gerçek dünya projelerini hayata geçirebilen bir yazılımcı olacaksınız.\nYeni başlayanlar için uygun olan bu kurs, herhangi bir ön bilgi gerektirmez ve size adım adım rehberlik ederek programcılığın temellerini öğretecektir. Kendinizi teknolojinin geleceğine hazırlamak ve kariyerinizi ileriye taşımak için bu fırsatı kaçırmayın!\nKursa kaydolun ve programlamaya başlamanın heyecanını yaşayın!",
      "target_audience": [
        "Programcılık Öğrencileri",
        "Programlamayı öğrenmek isteyenler",
        "Yeni yazılım dillerini öğrenmeye meraklı kişiler"
      ]
    },
    {
      "title": "Le langage Go | Formation complète",
      "url": "https://www.udemy.com/course/le-langage-go-formation-complete/",
      "bio": "Les fondamentaux et notions avancées du langage Go (Golang)",
      "objectives": [
        "Développer en utilisant le langage Go",
        "Construire des applications performantes et simples à maintenir",
        "Paralléliser vos programmes pour profiter de toute la puissance de votre CPU"
      ],
      "course_content": {},
      "requirements": [
        "Un ordinateur sur Windows / macOS / Linux",
        "Quelques bases de programmation conseillées, mais pas obligatoire"
      ],
      "description": "Go est un langage open-source créé par Google. Sa popularité est en explosion, il est maintenant dans le top 20 des langages les plus populaires du classement TIOBE. De plus, Go est encore jeune, c’est le bon moment pour vous y mettre !\nCe cours s’adresse autant aux débutants en programmation qu’à ceux qui ont déjà une expérience dans un autre langage (Java, C#, Python ou Ruby). A la fin du cours, vous serez capable de réaliser des projets Go complets.\nGo est un langage à la fois abordable et puissant. Avec lui, vous pourrez aussi bien faire des outils simples (traitement de fichiers, compression zip, etc. ) que des applications web performantes (génération de miniatures, API REST, etc).\nQui utilise Go ?\nGo est né en 2009, et en moins de 10 ans a déjà conquis le monde. Grâce à son accent sur la performance et la facilité de développement, on le trouve chez de grands noms comme :\nGoogle (of course !)\nNetflix\nGitHub\nUber\nMolotov TV\nLeBonCoin\nStructure du cours\nGrâce aux quizz et aux exercices, vous serez capable de maîtriser toutes les spécificités de Go. Voici quelques exemples de projets que nous ferons ensemble :\nUn outils de remplacement de mots dans des fichiers ;\nLe jeu du pendu en console incluant des tests unitaires pour vérifier la logique de jeu ;\nUn dictionnaire stockant ses définitions en base de données ;\nUn générateur de certificats de réussite qui produit des PDFs et du HTML.\nUn logiciel de filtre massif d’images, qui converti en noir et blanc ou applique un flou tout en divisant par 4 le temps de traitement grâce aux Goroutines ;\nUn serveur web proposant une API HTTP Rest pour un catalogue de film avec authentification JWT\nPour réaliser ces applications, nous allons aborder tous les aspects importants du langage :\nLa syntaxe de base du Go, déclaration des variables, contrôles de flux (if, for, etc.) ;\nLes différences de Go avec d’autres langages (Java, Python, etc.) ;\nL’organisation du code en package ;\nL’utilisation de bibliothèques externes ;\nLes Goroutines et les Channels pour paralléliser vos traitements ;\nLes requêtes HTTP GET / POST avec du contenu JSON ;\nLe routing pour créer un serveur web performant ;\nLes interactions base de données en SQL ;\nLa sécurisation d'API avec JWT.\nJe compte ajouter encore beaucoup de contenu dans ce cours, attendez-vous à recevoir des mise à jour régulières. Rejoignez moi et maitrisez le Go pour répondre à la demande croissante sur cette technologie !",
      "target_audience": [
        "Débutant en programmation qui veut poser des bases solides",
        "Développeur Web (PHP, Ruby, Python, Java...) qui veut découvrir un nouveau langage backend",
        "Passionné de scripting et tooling (Python / Bash) qui veut ajouter une nouvelle corde à son arc"
      ]
    },
    {
      "title": "CORSO DI PROGRAMMAZIONE PER BLOCKCHAIN ETHEREUM",
      "url": "https://www.udemy.com/course/blockchain-ethereum-italiano/",
      "bio": "Corso completo per programmare Smart Contracts (Contratti Intelligenti) con Solidity per la blockchain Ethereum",
      "objectives": [
        "Cosa sono le blockchain e in particolare come funziona la piattaforma Ethereum",
        "Che cosa è Solidity e perchè è importante per imparare a scrivere blockchain",
        "Tutti i fondamentali costrutti del linguaggio di programmazione Solidity per blockchain",
        "Come scrivere uno smart contract per Ethereum usando Solidity"
      ],
      "course_content": {},
      "requirements": [
        "Conoscenze di base circa il normale utilizzo di un PC in ambiente Windows o Linux"
      ],
      "description": "Impara il linguaggio di programmazione più potente e importante per la scrittura di contratti smart e scopri come scrivere, distribuire e testare i contratti smart su Ethereum.\nCaratteristiche principali:\nMuovi i primi passi con il linguaggio di programmazione Solidity\nCrea contratti intelligenti per Ethereum usando il linguaggio Solidity\nImpara a testare e distribuire il contratto intelligente per la tua Blockchain privata\nSolidity è un linguaggio orientato alla scrittura di smart contracts (contratti intelligenti) la cui sintassi è fortemente influenzata da JavaScript, ed è progettato per compilare codice per la macchina virtuale di Ethereum. Questo corso è il primo e unico testo in completamente in italiano per capire la programmazione Solidity per costruire contratti intelligenti su Ethereum e altre blockchain.\nIniziamo il corso con un breve passaggio sulle blockchain, Ethereum, e i loro concetti più importanti. Imparerete come installare tutti gli strumenti necessari per scrivere, testare e eseguire il debug dei contratti di Solidity su Ethereum. Quindi, si esplorerà il layout di un file sorgente Solidity e si lavorerà con i diversi tipi di dati. Passeremo poi a vedere insieme come si lavora con gli operatori, le strutture di controllo e le strutture dati durante la creazione dei vostri contratti intelligenti. Vi accompagnerò attraverso chiamate di funzione, ritorno di tipi diversi di dati0, modificatori di funzione ed esempi pratici nella programmazione orientata agli oggetti con Solidity. Scopri tutto quello che puoi sulla registrazione degli eventi e sulla gestione delle eccezioni, nonché sul testing e il debug dei contratti intelligenti.\nEntro la fine di questo corso, sarete in grado di scrivere, distribuire e testare contratti intelligenti su Ethereum. Questo corso vi fornirà tutti gli strumenti per la scrittura di contratti utilizzando Solidity e vi aiuterà anche a sviluppare le abilità di programmazione con Solidity in pochissimo tempo.\n\n\nCosa imparerai:\n\n\n1.Le basi e i concetti fondanti di Solidity ed Ethereum\n\n\n2.Esplora in profondità il linguaggio Solidity e la sua unicità\n\n\n3.Crea nuovi accounts e invia transazioni alla catena dei blocchi di Ethereum\n4.Impara a conoscere in dettaglio il linguaggio di programmazione per scrivere contratti intelligenti\n5.Scopri i principali strumenti per lo sviluppo e l'implementazione di contratti intelligenti\n6.Scrivi codice sicuro utilizzando la gestione delle eccezioni e il controllo degli errori\n7.Comprendi le basi di Truffle e il processo di debug\n\n\nA chi è destinato questo corso:\nQuesto corso è per chiunque voglia iniziare con la programmazione Solidity per lo sviluppo di un contratto intelligente per la piattaforma di Ethereum. Non è richiesta alcuna conoscenza preliminare dell'EVM (Ethereum Virtual Machine).\nSommario:\n1.SMART CONTRACTS, LA PIATTAFORMA ETHEREUM E IL FUTURO CHE FINALMENTE E’ ARRIVATO\n2.INIZIAMO A PARLARE DI SOLIDITY\n3.INSTALLARE UN ECOSISTEMA ETHEREUM SUL NOSTRO COMPUTER\n4.GETH: IL LINGUAGGIO PIU’ AGILE PER ETHEREUM\n5.DI COSA E’ FATTO UN CONTRATTO INTELLIGENTE?\n6.QUALI TIPI CI METTE A DISPOSIZIONE SOLIDITY?\n7.VARIABILI DI STATO E FUNZIONI\n8.LE ESPRESSIONI DI CONTROLLO CONDIZIONALE IN SOLIDITY\n9.SCRIVIAMO ALCUNI CONTRATTI INTELLIGENTI\n10.I FONDAMENTI DELLA PROGRAMMAZIONE PER OGGETTI APPLICATI A SOLIDITY\n11.FUNZIONI, MODIFICATORI E FALLBACK\n12.INPUT E OUTPUT DELLE FUNZIONI\n13.ECCEZIONI, EVENTI, LOGGING\n14.TRUFFLE: NOZIONI DI BASE\n15.IL DEBUGGING DEI CONTRATTI",
      "target_audience": [
        "Chiunque abbia un interesse personale e professionale nel diventare sviluppatore di Blockchain e di Smart Contracts in ambiente Ethereum usando il linguaggio di programmazione Solidity"
      ]
    },
    {
      "title": "独学で身につけるPython〜演習問題セット〜【業務効率化・自動化で残業を無くそう！】",
      "url": "https://www.udemy.com/course/python-kaizen-practice/",
      "bio": "多種多様な演習問題に取り組んでPython基礎力を徹底的に鍛え上げましょう！基礎力に自信が持てればプログラミング学習のモチベーションも飛躍的に高まっていきます。「自力でプログラムが書けない」「今の実力を確かめたい」そんな方にオススメです！",
      "objectives": [
        "Python基礎力を徹底的に鍛え上げるレベル別オリジナル演習問題（計60問）",
        "基礎文法を復習し定着させる初級問題",
        "基礎文法を組み合わせて使う力を養う中級問題",
        "要求仕様を解釈しコードに落とし込む力が問われる超実践的な上級問題",
        "Excel業務の効率化・自動化スキルを向上させる実例ベースの演習問題"
      ],
      "course_content": {
        "はじめに": [
          "講師紹介・コース概要",
          "レクチャーの構成等について",
          "コース受講中の注意事項　※必読",
          "質問用テンプレート　※質問時利用必須",
          "字幕について"
        ],
        "初級": [
          "演習問題_初級",
          "演習問題_初級_解説"
        ],
        "中級": [
          "演習問題_中級",
          "演習問題_中級_解説"
        ],
        "上級": [
          "演習問題_上級①",
          "演習問題_上級①_解説",
          "演習問題_上級②",
          "演習問題_上級②_解説",
          "演習問題_上級③",
          "演習問題_上級③_解説",
          "演習問題_上級④",
          "演習問題_上級④_解説",
          "演習問題_上級⑤",
          "演習問題_上級⑤_解説"
        ],
        "（おまけ）Excel": [
          "演習問題_Excel",
          "演習問題_Excel_解説"
        ],
        "おわりに": [
          "おわりに"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "前作のコース「基礎編」を受講済みの方を対象としております。",
        "前作のコース「基礎編」を未受講の方でも下記２点を満たしていればご受講いただくことは一応可能ですが、一部基礎編の受講を前提とした内容を含みますのでその点はご承知おきください。",
        "①Pythonの実行環境を構築済み（Pythonとjupyter notebookもしくはjupyter lab）※演習問題はjupyterファイル（.ipynbファイル）形式でのご提供になります。また、AnacondaやVSCode等、本コースとは異なる実行環境を利用されている場合はご質問にはご対応いたしかねます。",
        "②Pythonの基礎を学習済み（数値・文字列・変数・リスト・if文・for文・ライブラリといった基本的な文法）",
        "プロのエンジニアを目指すためのコースではありません。プログラミング中級者〜上級者向けのコースでもありません。\"バックオフィス業務のカイゼンに必要なPythonスキル\"という前提で、「基礎文法に不安があり自分でプログラムを書けないPython初学者」を卒業するためのコースです。",
        "問題の大半は試行錯誤と\"自走力\"が必要なレベルで作問しておりますので、「簡単な問題を大量にこなし（て自己肯定感を高め）たい」という方には不向きです。",
        "ハンズオンでプログラミングをするコースですので、PCでご受講ください。スマホでご受講いただくように構成してはおりません（スマホではソースコードが読めません）。また、ハンズオン形式であるが故にただ視聴するだけのコースではありませんので、修了までに要する時間はコーストップ画面に記載の合計時間よりも当然長くなります。",
        "セクション1の「質問用テンプレート」に記載のルールが守られていないご質問にはご対応いたしかねます。つまり\"何でも好き勝手に質問できるコース\"ではありませんので、その点ご納得いただけない場合はご受講をお控えください。",
        "本コースの演習問題には、皆様が今後プログラミングを続けていくにあたり必須となる「自走力」を鍛えていただくために\"あえて\"、コース内で扱っていない知識についてご自身で調べていただく必要がある問題を一部含めております。この考え方にご納得いただけない場合はご受講をお控えください。",
        "本コース内容の転用・流出は禁止しております。"
      ],
      "description": "「とりあえず教材をいくつかこなしてみたけれど、まだ基礎文法に自信が無い」\n「自分でプログラムが書けるようになりたい（けれど、挫折してしまいそうで怖くて一歩を踏み出せない）」\n「現時点のPythonスキルがどの程度のレベルなのか確かめたい」\nそんなPython初学者の方におすすめのコースです！\n\n\n着実なレベルアップを実現するために緻密に構成した、計60問のオリジナル演習問題をご用意しました。\n簡単な問題ばかりではありませんので中々思うようにいかないこともあるかもしれませんが、コンフォートゾーンを抜け出して最後まで粘り強く取り組んでいただければ、きっと今よりももっとPythonの面白さを感じていただけるはずです。\n基礎力に自信が持てれば、プログラミング学習のモチベーションも飛躍的に高まっていきます。\n今作でも楽しむ気持ちを第一に、一緒にスキルアップしていきましょう！\n\n\n\n\n\n\n\n\n★学習効率を最大化するための講師推奨ラーニングパス★\n①Python基礎編\n（Python・プログラミングの基礎を学び、プログラムによってどんなことが実現できるのかを知る）\n↓\n②本コース\n（基礎力を鍛え上げて自信をつけ、プログラミングの面白さを再確認し、学習のモチベーションをさらに上げる）\n↓\n③応用編・Excel自動化編・Windows編のうちニーズに合ったコース\n（様々なプログラミング活用方法を習得し、実務の効率化・自動化に繋げる）",
      "target_audience": [
        "Pythonの基礎文法に不安がある方",
        "自分でプログラムが書けるようになりたい方",
        "現在のPythonスキルレベルを確認したい方",
        "Pythonの新たな勉強テーマが欲しい方",
        "Excel関連業務を効率化・自動化したい方",
        "残業を無くしたい方",
        "今の業務にやりがいが無い方",
        "DX・リスキリングの必要性を感じている方",
        "バックオフィス（事務系職場）勤務の方",
        "新入社員の方",
        "若手社員の方",
        "中堅社員の方",
        "自治体職員の方",
        "学校職員の方"
      ]
    },
    {
      "title": "【Java - JDBC編】JavaでのDB操作を完全理解！データベース活用講座（丁寧な解説/豊富な図解/演習問題）",
      "url": "https://www.udemy.com/course/uz-java-jdbc/",
      "bio": "エラーに悩まない！初心者でも安心して学べるJavaとDBの接続法",
      "objectives": [
        "Javaのソースコードからデータベースにアクセスする技術「JDBC」を使いこなせるようになります。",
        "プログラムからデータベースにアクセスする際の勘所を掴めるようになります。",
        "DAOパターンに基づくシステム設計の基礎を身に着けることができます。",
        "演習問題&詳細な解説を通して実践力を鍛えることができます。",
        "Javaプログラミングの応用力や設計に関する知見が広がります。"
      ],
      "course_content": {
        "J4-00_はじめに": [
          "質問方法とAIの活用",
          "はじめに",
          "問題演習サイト（Java Silver対応）がご利用いただけます（無料・登録不要）"
        ],
        "J4-01_JDBC基礎": [
          "書類ダウンロード",
          "J4_01_1_JDBCとは",
          "★ウズカレからあなたへ、ちょっとしたお願い",
          "次回動画補足（J4_01_2_JDBCの環境設定）",
          "J4_01_2_JDBCの環境設定",
          "J4_01_3_データベース接続の概要",
          "J4_01_4_接続の確立",
          "J4_01_5_SQL文の送信",
          "J4_01_6_抽出結果の取得",
          "J4_01_7_接続の解除"
        ],
        "J4-02_JDBC応用": [
          "書類ダウンロード",
          "4_02_1_DAOとは",
          "4_02_2_DAOパターン",
          "4_02_3_PreparedStatement",
          "4_02_4_DTO",
          "4_02_5_トランザクション",
          "4_02_6_複数データの受け渡し"
        ],
        "EX_総合演習": [
          "書類ダウンロード",
          "総合演習①",
          "総合演習②",
          "書類ダウンロード - 総合演習（解答）",
          "総合演習①（解説）",
          "総合演習②（解説）"
        ],
        "J4-99_さいごに": [
          "★学んでいる今だからこそ、感じていることを教えてください",
          "99_さいごに"
        ],
        "【これまでのシリーズを受講されていない方向け】Windowsにおける事前環境構築": [
          "J4_ZZ_Java開発環境構築（Win）",
          "J4_ZZ_eclipse（Win）",
          "J4_ZZ_MySQLのインストール（Win）"
        ],
        "【これまでのシリーズを受講されていない方向け】Macにおける事前環境構築": [
          "J4_ZZ_Java開発環境構築+eclipse（Mac）",
          "J4_ZZ_MySQLのインストール（Mac）"
        ],
        "ボーナスセクション": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Javaの基礎知識をお持ちの方（別コース【Java - 基礎編】【Java - オブジェクト指向編】を修了していることが望ましい）",
        "MySQLおよびSQLの基礎知識をお持ちの方（別コース【Java - SQL編】を修了していることが望ましい）",
        "ご自身のPC（Windows/Mac）をお持ちの方。",
        "ある程度のインターネット環境をお持ちの方。動画をストリーミング再生できるレベルであれば問題ありません。",
        "ある程度のPC操作が可能な方。ファイルやフォルダの新規作成・解凍が問題なくできるレベルであれば問題ありません。"
      ],
      "description": "▼このコースの特徴\nJavaソースコードからデータベースを操作する技術『JDBC』をじっくり丁寧に解説していきます。最終的にDAOパターンという設計思想に基づいたデータベース活用プログラムを書けるようになっていただきます。豊富な図解やサンプルソースコード、丁寧な説明とハンズオン、適度な難易度の演習問題と詳細な解説を用意しておりますので、受講後にはきっとオブジェクト指向を明確にイメージしながらプログラミングができるようになっているはずです。",
      "target_audience": [
        "Javaプログラミングの独学に挫折してしまった方。",
        "JDBCへの理解が曖昧なまま学習が進んでしまっている方。",
        "未経験からのプログラマー就職を目指している方。",
        "データベースを活用したサービス・ポートフォリオを作りたいと考えている方。",
        "納得しないと・理解しきらないと気が済まないタイプの方。",
        "活字が苦手で図解多めの教材で学習をしたい方。"
      ]
    },
    {
      "title": "MATLAB : Sıfırdan Uygulamalı Eğitim Seti | Sertifikalı",
      "url": "https://www.udemy.com/course/matlab-egitim/",
      "bio": "Sıfırdan Başlayanlar İçin Matlab Eğitimi: Değişkenler, Matematiksel Hesaplamalar, Döngüler ve Matlab Fonksiyonları!",
      "objectives": [
        "Mühendislik problemlerinizi çözebileceksiniz.",
        "Matlab arayüzüne ve ayarlamalarına hakim olacaksınız.",
        "Döngü ve Koşul ifadelerini derinlemesine öğreneceksiniz.",
        "Değişken tanımlama işlemlerine hakim olacaksınız.",
        "M File ve Dosya işlemlerine hakim olacaksınız.",
        "Fonksiyonlar konusunu öğrenip çeşitli uygulamalar yapabileceksiniz.",
        "Matlab ile grafikler oluşturabileceksiniz.",
        "GUI (Grafiksel Kullanıcı Arayüzü) oluşturabileceksiniz."
      ],
      "course_content": {
        "Tanıtım": [
          "Tanıtım Videosu"
        ],
        "Başlarken": [
          "Arayüz Tanıtım",
          "Matlab Ayarlamaları",
          "Eğitim Öncesi Matlab Kişiselleştirmeleri",
          "Matematiksel Hesaplamalar"
        ],
        "Değişken Tanımlama": [
          "Değişken Tanımlama-1",
          "Değişken Tanımlama-2",
          "Vektör Ve Matris Tanımlama"
        ],
        "Bilinmesi Gerekenler": [
          "Genel Komutlar",
          "Vektör Ve Matrislerde İşlemler",
          "M File Giriş (Disp-İnput-Fprintf)",
          "Metin Düzenleme ve Yazdırma Komutları"
        ],
        "Dosya İşlemleri": [
          "Dosya Açma ve Yazma İşlemleri",
          "Dosya İşlemleri Örnek Uygulama",
          "Dosya Okuma İşlemleri"
        ],
        "Koşul İfadeleri": [
          "if Koşul İfadesi",
          "if Örnek Uygulama",
          "Else Koşul İfadesi",
          "Else if Koşul İfadesi",
          "Switch-Case İfadesi / Hesap Makinesi Örneği"
        ],
        "Döngü İfadeleri": [
          "While Döngüsü",
          "While Döngüsü Örnek Uygulama",
          "While Döngüsü Örnek Uygulama-2",
          "For Döngüsü",
          "For Döngüsü Örnek Uygulama",
          "Break Komutu",
          "Continue Komutu"
        ],
        "Koşul ve Döngüler Örnek Uygulamalar": [
          "Örnek Uygulama (While Döngüsünü İf Gibi Kullanma)",
          "Ödev-1",
          "Örnek Uygulama (Ders Geçme Koşulu Hesabı)",
          "Örnek Uygulama (2. Dereceden Denklem Kök Hesabı)",
          "Ödev-2",
          "Örnek Uygulama (Eşitlikte N Sayısını Buldurma)"
        ],
        "Fonksiyonlar": [
          "Fonksiyonlara Giriş",
          "Fonksiyonlara Örnek"
        ],
        "Grafik Oluşturma": [
          "Grafik Oluşturmaya Giriş",
          "Hold- Grid ve Line İşlemleri",
          "Grafik Tipi Düzenlemeleri",
          "Örnek Uygulama",
          "Ödev",
          "Figure Penceresi Ayarlamaları",
          "Ezplot Komutu ve Eksen İşlemleri",
          "Subplot Kullanımı ve Örnek Uygulama"
        ]
      },
      "requirements": [
        "Matlab programı.",
        "Öğrenme hevesi."
      ],
      "description": "Fen bilimleri ve Mühendislik alanından pek çok kişi MATLAB'ı derinlemesine öğrenmek ister fakat hem uygun zaman hem de kendine göre içerik bulamadığı için erteler. Bugün sizce de MATLAB programını derinlemesine öğrenmek için güzel bir gün değil mi ?\nMatlab Nedir ?\nMATLAB, temel olarak sayısal hesaplama, grafiksel veri gösterimi ve programlamayı içeren teknik ve bilimsel hesaplamalar için yazılmış yüksek performansa sahip bir yazılımdır. “MATrix LABoratory (=Matris Laboratuarı)” kelimesinin kısaltması olan MATLAB, adında da anlaşılacağı üzere temel olarak matrisler ile çalışır ve matris temelli çok güçlü bir problem çözme ve uygulama geliştirme ortamıdır. Bir başka açıklamayla MATLAB, çok paradigmalı sayısal hesaplama yazılımı ve dördüncü nesil programlama dilidir. Bana soracak olursanız da dünyanın en büyük bilimsel hesap makinesidir. Bu programla yapabileceklerinizin sınırı yok. Basit, kullanışlı ve işlevsel terimlerinin tam da karşılığı.\nMatlab İle Neler Yapabilirim ?\nVeri elde etme.\nVeri analiz etme.\nModelleme ve Simülasyon.\nVeri grafikleştirme.\nProgramlama ve uygulama geliştirme.\nAlgoritma prototipi oluşturma ve geliştirme.\nVe daha niceleri...\nBugün 500.000 den fazla akademisyen, araştırmacı ve bilim adamı kullanmaktadır. Hadi sen de bu ekipte yerini al.\nBu eğitimle birlikte değişken tanımlama , koşul ve döngü ifadeleri gibi ana başlıkların tamamına hakim olacaksınız. Ayrıca matlabda dosya işlemleri nasıl yapılır, matlab ile grafikler ne şekilde oluşturulup düzenlenir tüm bu soruların da cevabını bulabileceksiniz.",
      "target_audience": [
        "Mühendislik ve matematik odaklı projelerde çalışmak isteyen öğrenciler ve profesyoneller,",
        "Akademik veya profesyonel alanda analiz ve veri işleme yapmak istiyorsan,",
        "Matematiksel modelleme ve simülasyon becerilerini geliştirmek istiyorsan,",
        "MATLAB ile güçlü analizler yapmayı öğrenmek istiyorum diyorsan, bu eğitim tam sana göre!"
      ]
    },
    {
      "title": "VisuALG (Portugol) - Lógica de Programação do ZERO",
      "url": "https://www.udemy.com/course/portugol/",
      "bio": "Crie 4 Jogos Completos e Aprenda Todas as Estruturas Lógicas de Programação com mais de 80 Arquivos Comentados",
      "objectives": [
        "Criar um Jogo da Velha COMPLETO",
        "Criar um Jogo da Forca COMPLETO",
        "Criar um Jogo de RPG COMPLETO",
        "Criar um Jogo de Batalha Naval COMPLETO",
        "Ler, Imprimir e Validar informações do Usuário",
        "Definir , Imprimir ,Concatenar e ler Variáveis",
        "Realizar Operações Matemáticas com Variáveis",
        "Concatenar Variáveis e Textos em Frases",
        "Utilizar Condicionais Simples, Complexas e Múltiplas (Se e Senão)",
        "Utilizar Condicionais Simples, Complexas e Múltiplas (Escolha Caso)",
        "Gerar Números Aleatórios",
        "Criar Laços de Repetição (Enquanto)",
        "Criar Laços de Repetição (Repita Até)",
        "Criar Laços de Repetição (Para Faça)",
        "Criar, Validar e Acessar Menus",
        "Definir , Imprimir ,Concatenar e Ler Vetores",
        "Definir , Imprimir ,Concatenar e Ler Matrizes",
        "Realizar Operações entre Vetores e Matrizes",
        "Criar Procedimentos com ou sem Parâmetros",
        "Criar Funções com retorno, com ou sem Parâmetros",
        "Introdução a Linguagem C e C++",
        "Ler, Imprimir e Validar Variáveis em C",
        "Realizar Operações Matemáticas com Variáveis em C",
        "Concatenar Variáveis e Textos em Frases em C",
        "Utilizar Condicionais Simples, Complexas e Múltiplas (If e If Else)",
        "Utilizar Condicionais Simples, Complexas e Múltiplas (Switch Case)",
        "Criar Laços de Repetição (While)"
      ],
      "course_content": {
        "Introdução (Manipulando Variáveis)": [
          "Introdução da Plataforma Udemy",
          "Nosso Presentão: 70 Arquivos de Exemplos",
          "Introdução ao VisuALG (Definir, Imprimir, Concatenar e Ler Variáveis)",
          "Arquivos da Aula de Introdução ao VisuALG",
          "Quizz 01 - Manipulando Variáveis"
        ],
        "Condicionais": [
          "Condicionais Simples e Compostas (Se e Senão)",
          "Arquivos da Aula de Condicionais Simples e Compostas",
          "DESCONTÃO PARA OUTROS CURSOS",
          "LINKS DE DESCONTOS PARA ALUNOS ATUAIS",
          "Condicionais Múltiplas e Conectivos Lógicos(Se e Senão com E e OU)",
          "Arquivos da Aula de Condicionais Múltiplas e Conectivos Lógicos",
          "Condicionais de Escolha Caso",
          "Arquivos da Aula de Escolha Caso",
          "Quizz 02 - Condicionais"
        ],
        "Aulas Grátis": [
          "Mais de 200 Aulas 100% Grátis Para Você!"
        ],
        "Gerando Valores Aleatórios": [
          "Gerar Valores Aleatórios",
          "Arquivos da Aula de Gerar Valores Aleatórios",
          "Quizz 03 - Valores Aleatórios"
        ],
        "Laços de Repetição": [
          "Laço de Repetição (Enquanto e Repita Até)",
          "Arquivos da Aula de Laço de Repetição (Enquanto e Repita Até)",
          "Laço de Repetição (Para Faça)",
          "Arquivos da Aula de Laço de Repetição (Para Faça)",
          "Quizz 04 - Laços de Repetição"
        ],
        "Menus e Validação de Dados": [
          "Menus e Validação de Dados",
          "Arquivos da Aula de Menus e Validação de Dados",
          "Quizz 05 - Menus e Validação de Dados"
        ],
        "Revisão Geral": [
          "Revisão Geral (Parte 1)",
          "Revisão Geral (Parte 2)",
          "Arquivos da Revisão Geral"
        ],
        "Vetores e Matrizes": [
          "Definir , Imprimir ,Concatenar e Ler Vetores",
          "Arquivos da Aula de Definir , Imprimir ,Concatenar e Ler Vetores",
          "Definir , Imprimir ,Concatenar e Ler Matrizes",
          "Arquivos da Aula de Matrizes",
          "Quizz 06 - Vetores e Matrizes"
        ],
        "Procedimentos e Funções": [
          "Procedimentos Com e Sem Parâmetros",
          "Arquivos da Aula de Procedimentos",
          "Funções e tipos de Retorno",
          "Arquivos da Aula de Funções",
          "Quizz 07 - Procedimentos e Funções"
        ],
        "Aulas Particulares, Consultoria e Freelances": [
          "Aulas Particulares, Consultoria e Freelances"
        ]
      },
      "requirements": [
        "Iremos instalar o software do curso (VisuALG) na primeira aula",
        "Não é necessário ter qualquer experiência prévia com programação ou lógica",
        "Ler e Escrever, pois esse curso é a o início,a alfabetização dos Programadores"
      ],
      "description": "Nesse curso você irá aprender desde a instalação do programa inicial (VisuALG) até a criação de jogos como Jogo da Velha, Jogo da Forca, Batalha Naval e até mesmo um RPG como o clássico ZORK.\nVou te ensinar passo a passo o que é uma variável, para que serve, como fazer Operações Matemáticas, Ler Dados inseridos pelo Usuário, Escrever mensagens na tela, Gerar Números Aleatórios e tudo mais até criarmos nossos primeiros programas!\nVocê vai conhecer os Laços de Repetição e as Condicionais, as melhores formas de usar cada um deles, além de trabalhar com Vetores e Matrizes que são tipos diferentes de variáveis, extremamente usadas no mundo profissional.\nAo criar Funções e Procedimentos, seu código ficará mais limpo e conciso, economizando várias linhas, pois agora você irá poder reutilizar os blocos já criados :D\nE o melhor de tudo é que no final do curso, você irá produzir projetos de jogos reais, aprendendo da forma mais divertida e podendo fixar todos os conteúdos vistos até o momento, de formas diferentes e pensando na experiência do usuário!\nNo final do curso você ainda pode fazer aulas de Introdução a programação em C e C++, para começar a criar programas que rodam em qualquer computador, os executáveis!\nEXTRA: Temos uma sessão que possui mais exercícios resolvidos para você poder praticar ainda mais.\nEu tenho certeza de que você vai gostar, então vem comigo!",
      "target_audience": [
        "Esse curso é extremamente indicado para iniciantes em lógica e programação",
        "Este curso é para pessoas que querem tornar seu pensamento mais ágil",
        "Este curso é para quem quer melhorar sua resolução de problemas",
        "Este curso é para quem quer melhorar sua expressividade de ideias",
        "Este curso é a sua porta de entrada para o Mundo da Programação"
      ]
    },
    {
      "title": "실무 프로그래밍 입문 (C#)",
      "url": "https://www.udemy.com/course/intro-to-programming-in-csharp-by-pocu/",
      "bio": "모든 프로그래밍 언어에 공통되는 기본 스킬을 익히는 과목. 사용의 편의성/직관성/성능이라는 세마리 토끼를 다 잡은 훌륭한 매니지드(managed) 언어인 C#을 사용합니다. (김포프, POCU 포큐 아카데미)",
      "objectives": [
        "프로그래밍 기초",
        "올바른 프로그래밍 습관",
        "C# 사용법"
      ],
      "course_content": {},
      "requirements": [
        "\"헬로코딩: 프로그래밍(한빛미디어)\" 도서 완독",
        "고등학교 수준 수학"
      ],
      "description": "본 비디오 강좌는 포큐아카데미에서 진행하는 COMP1500 수업의 비디오 강좌입니다.\n\nC#은 사용의 편의성 및 직관성, 그리고 성능이라는 세마리 토끼를 다 잡은 매우 훌륭한 매니지드(managed) 언어로, 현존하는 최고의 프로그래밍 언어 설계자이자 타입스크립트(TypeScript)의 핵심개발자인 Anders Hejls의 주도 하에 지속적으로 발전하면서 미래의 프로그래밍 언어가 나아가야 할 방향을 제시하고 있습니다. 그렇기에 C#은 데스크탑 애플리케이션, 웹 프로그래밍, 그리고 게임개발(예: 유니티 엔진 기반 게임)에 이르기까지 다양한 분야에서 널리 쓰이는 언어입니다.\n이처럼 사용이 편하고 직관적인 언어는 프로그래밍을 처음 배울 때 매우 중요합니다. 아직 개념조차 제대로 잡히지 않았는데 사용하는 도구(즉, 프로그래밍 언어)가 모호하고 복잡하다면 실수만 거듭하다 흥미를 잃을 가능성이 높죠. 또한 C#은 프로그래머의 실수를 빨리 잡아주는 비주얼 스튜디오(Visual Studio)라는 매우 훌륭한 개발 도구와 꼼꼼한 참고문서를 제공하기로 유명합니다. 이 모든 것들은 소프트웨어 개발이 DNA에 묻어있는 마이크로소프트라는 회사가 배후에 있었기에 가능한 일이며, 따라서 프로그래밍을 처음 배우는 분들에게 C#은 최적의 언어라 말할 수 있겠습니다.\n하지만 이 과목의 제목은 ‘프로그래밍 입문’이지 ‘C# 프로그래밍’이 아닙니다. 이것이 의미하는 바는 이 과목에서 배우는 내용은 어느 프로그래밍 언어에도 적용되는 기반 지식입니다. 프로그램을 작동하게 만들려면 필요한 입출력, 반복문, 조건문 등이 여기에 포함되겠죠. 하지만 기본기를 완벽히 소화한 학생들은 C# 고유의 기능들을 배울 기회도 있을 것입니다.\n따라서 본 강좌는 다음과 같이 크게 두 부분으로 나뉩니다.\n프로그래밍 입문: 대부분의 프로그래밍 언어에서 공통되는 기초 프로그래밍에 대해 배웁니다 ( ~ 8주 차)\n기초 C# 프로그래밍: C# 프로그래밍 언어에서 지원하는 기초적인 기능들을 익혀봅니다. (9주 차 ~ 15주 차)\n위와 같이 강의를 두 부분으로 나눈 이유는 C#이라는 특정 언어에 상관없이 모든 언어에 공통된 기초 지식들을 우선적으로 제대로 습득하여 다른 언어를 배울 때 혼동이 생기지 않게 하는 반면, C#에서 제공하는 타 언어보다 뛰어난 기능들까지 살펴 보아 앞으로 프로그래밍 언어가 나아갈 방향을 느낄 수 있게 하기 위해서입니다.",
      "target_audience": [
        "컴퓨터 공학의 기본기를 배우고 싶은 분들",
        "프로그래머로서 평생 커리어를 꿈꾸는 입문자들"
      ]
    },
    {
      "title": "Reactに入門した人のためのもっとReactが楽しくなるステップアップコース完全版",
      "url": "https://www.udemy.com/course/react_stepup/",
      "bio": "「React何となく分かったけど次どうしたら良いか分からない」という人がステップアップするために知っておくべきことを順序立ててハンズオン形式で詰め込みました。本コースを終える頃にはもっとReactのことを好きになっていると思います。",
      "objectives": [
        "再レンダリング最適化の方法",
        "様々なCSSのあてかた",
        "実践的な画面遷移(React Router)の方法",
        "Atomic Designに基づいたコンポーネント分割",
        "グローバルなstate管理",
        "TypeScript × Reactのテクニック",
        "カスタムフックの使い方",
        "Chakra UIを用いた実践アプリの作成"
      ],
      "course_content": {
        "はじめに": [
          "講師挨拶",
          "本コース受講の前提条件",
          "コース全体像"
        ],
        "CodeSandboxについて": [
          "[追加]CodeSandboxの変更についてとStackBlitzの紹介"
        ],
        "再レンダリングの仕組みを知りレンダリングを最適化する": [
          "注意事項（Reactのバージョン）",
          "理解度の確認",
          "レンダリング確認用のコーディング",
          "模擬的にレンダリングコストの高いコンポーネントを作成",
          "再レンダリングが起きる条件",
          "レンダリング最適化１(memo)",
          "レンダリング最適化２(useCallback)",
          "おまけ(useMemo)"
        ],
        "様々なCSSのあてかたに触れる": [
          "Inline Styles",
          "CSS Modules",
          "Styled JSX",
          "styled components",
          "Emotion"
        ],
        "ルーティングの基礎(React Router)": [
          "React Routerバージョンの注意点",
          "React Router導入&事前準備",
          "基本的なページ遷移",
          "ネストされたページ遷移",
          "ルート定義の分割",
          "URLパラメータを扱う",
          "クエリパラメータを扱う",
          "stateを渡すページ遷移",
          "Linkを使わないページ遷移",
          "404ページを用意する"
        ],
        "コンポーネントの分割方法（Atomic Design）": [
          "Atomic Design概要",
          "Atomの作成",
          "Moleculeの作成",
          "Organismの作成1",
          "Organismの作成2",
          "Templateの作成",
          "Pageの作成",
          "Atomic Designに取り組む上でのポイント"
        ],
        "グローバルなstate管理を知る": [
          "グローバルなstate管理がなぜ必要か",
          "ツラい例を実装してみる",
          "Contextでのstate管理(基本的な使い方)",
          "Contextでのstate管理(ユーザー情報の設定と参照)",
          "Contextでのstate管理(再レンダリングの最適化)",
          "Recoilでのstate管理(Recoilの紹介)",
          "Recoilでのstate管理実践"
        ],
        "JSONPlaceholderでのデータ取得解説": [
          "JSONPlaceholderとは",
          "JSONPlaceholderからaxiosでデータを取得してみる"
        ],
        "React × TypeScript(基礎編)": [
          "TypeScriptとは",
          "基本的な型",
          "引数の型指定",
          "返却値の型指定",
          "変数の型指定",
          "設定ファイル(tsconfig)をいじってみる"
        ],
        "React × TypeScript(実践編)": [
          "React × TypeScriptの準備",
          "型がないせいでバグっているアプリの例",
          "取得データの型を定義しバグを防ぐ",
          "propsに型を定義しよう",
          "型定義を効率的に管理しよう",
          "コンポーネント自体の型定義",
          "オプショナルチェイニングでnull安全なコードを書く",
          "補足(ライブラリの型定義について)"
        ]
      },
      "requirements": [
        "素のJavaScriptとReactの違いを理解している",
        "モダンJavaScriptの記法が分かる(アロー関数、分割代入、map等々)",
        "Reactの基本が分かる(JSX構文、stateやprops、useStateとuseEffect)"
      ],
      "description": "React力を更に高めたい全ての人におくるステップアップコース完全版！\n\n\n「stateやprops、useStateやuseEffectの使い方は何となく分かったけど次どうしたら良いか分からない」\n「もっと実務で必要となるレベルの解説を知りたい」\n\n\nといったReactでもっとステップアップしていきたい人のために本コースを作成しました。\n\n\n■本コースでは以下の内容を取り扱います\n再レンダリングの仕組みを知りレンダリングを最適化する\nどんな時に再レンダリングは起きるのか、またそれを最適化する方法を知ることで規模が大きくなってもサクサク動く快適なアプリケーションを作ることができるようになります。\n様々なCSSのあてかたに触れる\nいざ自分でアプリケーション作ろうと思うとCSSについては絶対迷うと思います。\n選択肢を増やすために主要なCSSライブラリについて使い方を紹介します。\nルーティングのテクニックを学ぶ(React Router)\nReactで画面遷移を伴うアプリケーションを作る場合ルーティング周り知識は不可欠です。\nReactRouterの使い方や具体的なテクニックを知ることでアプリケーション開発に生かせるかと思います。\nコンポーネントの分割方法を学ぶ（Atomic Design）\nコンポーネント分割として有名なAtomic Designというデザインシステムを紹介します。\n概念の部分や、Reactでの使い方を知ることでコンポーネント分割への意識が変わります。\nグローバルなstate管理を知る\n実際のアプリケーションではコンポーネントを横断して使用できるグローバルなstateの知識は必須です。\nReact標準のContextの使い方やテクニックと、Recoilというライブラリについても軽く紹介しています。\nReact × TypeScriptで開発できるようになる\nこれからReactで開発していく場合、TypeScriptの使用はほぼ必須と言っても過言ではありません。\n基礎、応用と順番にTypeScriptについて解説していくので、今後はTypeScriptを用いたReact開発に取り組んでいけるようになるかと思います。\nカスタムフックを使えるようになる\nコンポーネントとロジックを分離するカスタムフック について実際に使い方を学ぶことで更にステップアップしたReactのコードを書けるようになります。\nChakra UIを使った実践アプリ作成\nこれまでの内容を全て取り込んで実際にCSSフレームワークを使いながらアプリケーションを作っていく流れを体験することで、より学習した内容の生かし方がイメージできるようにしています。\n\n\n■それ以外の本コースの特徴\n私自身、複数プロジェクトでReactを使用し仕事をしているエンジニアです(フリーランス→会社設立)\nコード入力時は画面を拡大する等、編集も工夫しているためスマホでもストレスなく閲覧できます\n収録音声にも気をつかっているのでイヤホン等で視聴しても不快ではないです(声の好みは分かりませんが...)",
      "target_audience": [
        "React力を全体的にあげたいReact入門者"
      ]
    },
    {
      "title": "C# - Buenas prácticas y código limpio",
      "url": "https://www.udemy.com/course/csharp-cleancode/",
      "bio": "Aprende todo lo necesario para ser un mejor programador en C#",
      "objectives": [
        "Conoce las buenas prácticas en C# que te llevarán a ser un Senior Developer",
        "Aprende como hacer refactoring e identificar areas de mejora en el código",
        "Descubrirás nuevas herramientas para mejorar tu código en C#",
        "Conocerás los conceptos de Pair programming y las herramientas para trabajo en equipo",
        "Aprenderás cuando aplicar las ultimas mejoras de C# y actualizar código legacy",
        "Reconocerás cuando extraer en métodos y clases segmentos de código existente"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos basico de C#",
        "Experiencia en Visual Studio",
        "Tener instalado la ultima versión de Visual Studio Community"
      ],
      "description": "Este curso contiene una serie de tips, buenas practicas, consejos y ejemplos reales para escribir C# de la mejor manera posible de acuerdo a los retos que se nos presenten.\nAprenderás a realizar refactoring en código existente y mejorarlo utilizando las mejoras de C#, LINQ y algunas herramientas externas.\nCon este curso mejorarás tus skills y pasarás a otro nivel como programador.",
      "target_audience": [
        "Programadores profesionales que usen C#",
        "Estudiantes y profesionales que estén en proceso de aprendizaje de C#",
        "Programadores C# en proceso de ser senior developers"
      ]
    },
    {
      "title": "HTML, CSS dan JavaScript : Pemula sampai Mahir",
      "url": "https://www.udemy.com/course/pemrograman-javascript-pemula-sampai-mahir/",
      "bio": "Belajar pemrograman HTML, CSS dan JavaScript dari pemula sampai mahir disertai studi kasus.",
      "objectives": [
        "HTML Dasar",
        "HTML Form",
        "CSS Dasar",
        "CSS Layout",
        "JavaScript Dasar",
        "JavaScript Object Oriented Programming",
        "JavaScript Domain Object Model",
        "JavaScript Async",
        "JavaScript Modules",
        "JavaScript Standard Library"
      ],
      "course_content": {},
      "requirements": [
        "Mampu Mengoperasikan Komputer"
      ],
      "description": "Selamat datang di course HTML, CSS dan JavaScript dari Pemula sampai Mahir. Disini kita akan belajar Web dasar dari HTML, CSS dan JavaScript dari tingkat dasar sampai tingkat mahir, disertai dengan studi kasus. Akan banyak materi yang akan dibahas di course ini seperti :\nHTML Dasar, disini kita akan belajar tentang dasar-dasar web menggunakan HTML. Bagaimana membuat web menggunakan HTML\nHTML Form, disini kita akan belajar bagaimana membuat Form menggunakan HTML. Form adalah salah satu bagian untuk berinteraksi dengan pengguna web\nCSS Dasar, disini kita akan belajar tentang CSS, untuk menambahkan gaya dan tampilan ke halaman HTML agar lebih menarik\nCSS Layout, disini kita akan belajar tentang cara melakukan tata telak posisi element-element HTML mengggunakan CSS\nPemrograman JavaScript Dasar, disini kita akan belajar tentang dasar-dasar pemrograman JavaScript. Ini adalah materi awal yang wajib dikuasai\nPemrograman JavaScript Object Oriented Programming, disini kita akan belajar pemrograman berorientasi objek di JavaScript, salah satu paradigma paling populer saat ini\nPemrograman JavaScript Modules, disini kita akan belajar cara membuat aplikasi javascript yang modular, sehingga mudah digunakan\nPemrograman JavaScript Document Object Model, disini kita akan belajar bagaimana interaksi antara javascript dan html dan juga css, sehingga bisa membuat halaman web lebih kaya akan interaksi\nPemrograman JavaScript Async, disini kita akan belajar bagaimana asynchronous programming di javascript, seperti mengambil data dari server, dan lain-lain\nPemrograman JavaScript Web API, kita akan bahas banyak web api yang tersedia di javascript\nStudi Kasus Menggunakan JavaScript, dan course ini akan dilengkapi banyak studi kasus\nMateri akan selalu di update secara berkala, dan ketika materi di update, harga course pun akan diupdate dengan harga baru. Jadi pastikan untuk secepatnya membeli course ini, makin cepat, makin murah harga pembelian course ini.\nCourse ini juga didukung dengan private group DISCORD sehingga kita bisa berdiskusi sesama member ketika terjadi masalah di course ini.\nFokus pemrograman JavaScript ini akan mengarah ke frontend, sedangkan untuk materi javascript backend akan dibuat dalam course terpisah dengan tema NodeJS.",
      "target_audience": [
        "Programmer Pemula yang Ingin Belajar HTML",
        "Programmer Pemula yang Ingin Belajar CSS",
        "Programmer Pemula yang Ingin Belajar Pemrograman JavaScript"
      ]
    },
    {
      "title": "C++ Komplettkurs: Praxisnahe und Moderne C++ Programmierung",
      "url": "https://www.udemy.com/course/der-komplettkurs-zur-modernen-c-programmierung/",
      "bio": "Von C++ Basics bis C++23: Praxisnah, mit spannenden Projekten und GUI-Entwicklung für deinen Programmier-Erfolg. [2025]",
      "objectives": [
        "Erlerne die C/C++ Grundkonzepte",
        "Verstehe die Logik hinter Pointern und Referenzen",
        "Erlerne die wichtigsten STL Features und Funktionen",
        "Programmiere mit Tools der Modernen Objektorientierung",
        "Verstehe die Anwendung von Templates und Operator Überladungen",
        "Verbessere deinen Code durch Lambda Ausdrücken und Smart Pointer",
        "Die Programmierung von GUI Anwendungen mit Qt",
        "Die effektive Implementierung von Vektoren und Matrizen",
        "Das programmieren eines kleinen Computerspiels"
      ],
      "course_content": {
        "Kapitel 1: Einleitung": [
          "Einleitung in den Kurs",
          "Informationen zu der Software",
          "Die Software im Kurs",
          "Windows: GCC Compiler Installation - Teil 1",
          "Windows: GCC Compiler Installation - Teil 2",
          "Linux: GCC Compiler Installation - Teil 1",
          "Linux: GCC Compiler Installation - Teil 2",
          "Mac: Clang Compiler Installation",
          "Handbuch des Kurses",
          "Materialien des Kurses",
          "Visual Studio Code einrichten",
          "Unser erstes C++ Programm im Detail",
          "Der Übungskurs zum Hauptkurs"
        ],
        "Kapitel 2 - 1: Variablen, Datentypen und Logik": [
          "Variablen",
          "Grundrechenarten",
          "Datentypen - Teil 1",
          "Datentypen - Teil 2",
          "Zusatzwissen: Integer Zahlen in Binär",
          "Zusatzwissen: Float Zahlen in Binär",
          "Das Rechnen mit Integer und Float Zahlen",
          "Warum gibt es überhaupt verschiedene Integer?",
          "Vordefinierte Int Typen",
          "Characters und die ASCII Tabelle",
          "Das Einlesen aus der Konsole",
          "Beispiel: Umfang und Fläche eines Quadrats",
          "Variablen, Datentypen und Konsolenausgabe."
        ],
        "Kapitel 2 - 2: Logik": [
          "If und Else - Teil 1",
          "If und Else - Teil 2",
          "Bool Datentyp",
          "Modulo Operator",
          "Beispiel: Absoluter Wert",
          "Ternary Operator",
          "Abfragen"
        ],
        "Computerspiel 1": [
          "Vorwort Computerspiel 1",
          "Computerspiel 1"
        ],
        "Kapitel 2 - 3: Schleifen": [
          "For Schleifen",
          "Increment und Decrement",
          "Beispiel: Primzahl berechnen",
          "Verschachtelte For Schleifen",
          "For Schleife für das Spiel",
          "While Schleifen",
          "Do-While Schleife",
          "Break und Continue",
          "While Schleife für das Spiel",
          "For vs. While",
          "Schleifen"
        ],
        "Computerspiel 2": [
          "Vorwort Computerspiel 2",
          "Computerspiel 2"
        ],
        "Kapitel 2 - 4: Funktionen und Header": [
          "Funktionen - Teil 1",
          "Funktionen - Teil 2",
          "Funktionen - Teil 3",
          "Header Dateien",
          "Include Guards",
          "Funktionen und Header",
          "Vorwort Programmierübungen",
          "Musterlösung: Schleifen, Abfragen und Funktionen",
          "Rekursive Funktionen - Fakultät",
          "Beispiel: Rekursive Summe",
          "Funktion Overload",
          "Template Funktion",
          "Funktionen 2"
        ],
        "C++ Tools: Teil 1": [
          "Debugging",
          "Debug vs. Release",
          "Compiler Commands"
        ],
        "Kapitel 2- 5: Const, Auto uvm.": [
          "Warum ist using namespace std; schlecht?",
          "Post vs. Pre Increment",
          "Preprocessor Defines",
          "Const Variablen",
          "Constexpr Variablen",
          "Lokale Static Variablen",
          "Quiz: Const, Constexpr, Static",
          "Musterlösung: Const, Constexpr und Static",
          "C++ Casting vs. C Casting",
          "Auto Keyword",
          "Uniform Initialization",
          "Const, Auto uvm."
        ],
        "Computerspiel 3": [
          "Vorwort Computerspiel 3",
          "Computerspiel 3"
        ]
      },
      "requirements": [
        "Eine Grunderfahrung in der Programmierung ist hilfreich aber nicht notwendig",
        "Mathematische Grundkenntnisse von Vektoren und Matrizen sind hilfreich"
      ],
      "description": "Starte deine Reise in die moderne C++ Programmierung – praxisnah, umfassend und up-to-date!\nDieser umfassende C++ Komplettkurs ist perfekt für alle, die von den Grundlagen bis zu den neuesten Features von C++23 alles lernen wollen – egal ob Anfänger oder erfahrener Programmierer. Du bekommst fundiertes Wissen und praktische Skills an die Hand, die dich fit machen für aktuelle und zukünftige Projekte.\nWir beginnen mit den Basics der C und C++ Programmierung und arbeiten uns Schritt für Schritt durch die wichtigen Neuerungen der C++ Standards (11, 14, 17, 20 und 23). Du lernst den sicheren Umgang mit Pointern, Referenzen und Arrays, sowie den effizienten Einsatz der mächtigen Standard Template Library (STL).\nDarüber hinaus zeige ich dir, wie du moderne objektorientierte Programmierung umsetzt, Lambda-Ausdrücke und Templates clever nutzt und den Umgang mit Smart Pointern sowie Copy- und Move-Konstruktoren meisterst.\nEin besonderes Highlight: Du erhältst eine praxisnahe Einführung in die GUI-Programmierung mit ImGui – so kannst du direkt ansprechende grafische Benutzeroberflächen entwickeln.\nIm gesamten Kurs erwarten dich zahlreiche spannende Programmierprojekte, die dein Wissen vertiefen und dir helfen, das Gelernte sofort anzuwenden.\nDas lernst du in diesem Kurs:\nGrundlagen der C und C++ Programmierung\nAlle wichtigen Neuerungen aus C++11 bis C++23\nSicherer Umgang mit Pointern, Referenzen und Arrays\nDie wichtigsten Funktionen der Standard Template Library (STL)\nModerne objektorientierte Programmierung\nLambda-Ausdrücke und Templates praktisch anwenden\nSmart Pointer, Copy- und Move-Konstruktoren\nEinführung in die GUI-Programmierung mit ImGui\nPraxisnahe Projekte zur Festigung deines Wissens\nMach dich fit für die Technologie von morgen und werde C++ Profi – melde dich jetzt an!\nIch freue mich darauf, dich im Kurs zu begrüßen!",
      "target_audience": [
        "Programmieranfänger und Leute die in anderen Sprachen schon Erfahrung haben"
      ]
    },
    {
      "title": "Aprendendo a programar em C++",
      "url": "https://www.udemy.com/course/aprendendo-a-programar-em-c-plus-plus/",
      "bio": "Introdução ao paradigma orientado a objetos e os conceitos básicos da linguagem C++.",
      "objectives": [
        "Compreender os conceitos da programação orientada a objetos.",
        "Criar suas próprias aplicações básicas em C++.",
        "Obter conhecimentos em C++ que são essenciais para futuramente você desenvolver aplicações mais sofisticas e com interface gráfica do usuário em C++."
      ],
      "course_content": {
        "APRESENTAÇÃO": [
          "Introdução"
        ],
        "PARADIGMA ORIENTADO A OBJETOS": [
          "O que é Paradigma de Programação?",
          "Paradigma Orientado a Objetos - (objetos, propriedades e operações)",
          "Teste 01",
          "Paradigma Orientado a Objetos (classes, atributos e métodos)",
          "Teste 02"
        ],
        "CONCEITOS BÁSICOS DA LINGUAGEM C++": [
          "Sobre a Linguagem C++",
          "Teste 03",
          "IDEs e Compiladores"
        ],
        "SINTAXE BÁSICA DA LINGUAGEM C++": [
          "Primeiro Programa em C++",
          "Fluxo do Processo de Compilação e Execução",
          "Tipos Primitivos de Dados",
          "Teste 04",
          "Operadores"
        ],
        "CLASSES E OBJETOS EM C++": [
          "Implementando Classes em C++",
          "Teste 05",
          "Criando Objetos em C++",
          "Teste 06"
        ],
        "CONSTRUTORES E DESTRUTORES": [
          "Introdução aos Construtores",
          "Tipos de Construtores",
          "Introdução aos Destrutores",
          "Teste 07",
          "Implementando métodos da classe"
        ],
        "REFERÊNCIAS E PONTEIROS": [
          "Referências",
          "Passagem de Parâmetros e Retorno de Função por Valor e Referência",
          "Ponteiros",
          "Referências vs Ponteiros",
          "Teste 08",
          "Trabalhando com ponteiros"
        ],
        "FUNÇÕES": [
          "Declarando Funções Dentro e Fora da Classe",
          "Cabeçalhos (Header Files)",
          "Namespace",
          "Funções Amigas",
          "Funções e Variáveis Membros Estáticas",
          "Teste 09",
          "Declarando funções amigas"
        ],
        "HERANÇA": [
          "Introdução à Herança",
          "Aplicando Relacionamento de Herança entre Classes"
        ],
        "MODIFICADORES DE ACESSO": [
          "Modificadores de Acesso: public, private e protected",
          "Teste 10"
        ]
      },
      "requirements": [
        "Nenhum pré-requisito é necessário para fazer este curso. Tudo que você precisa para começar a programar em C++ está incluso neste curso, e as ferramentas de desenvolvimento utilizadas são gratuitas."
      ],
      "description": "Neste curso você aprenderá o que realmente é a programação orientada a objetos e os conceitos essenciais para você começar a desenvolver suas próprias aplicações em C++.\nEste curso é fortemente baseado no paradigma de programação orientada a objetos, possibilitando alavancar o seu aprendizado para outras linguagens orientadas a objetos além da linguagem C++.\nIsto NÃO é um tutorial com meros exemplos de manipulação de variáveis e vetores em C++. Este é um verdadeiro curso de C++ que irá lhe ensinar desde os conceitos básicos da linguagem tais como, objetos e classes, até os tópicos mais avançados da linguagem.\nNão se preocupe se você não é um expert em programação ou se você não tem qualquer conhecimento em C++, pois este curso destina-se a TODOS os níveis de estudantes.\nDivirta-se programando!\n*Os códigos em C++ dos projetos contidos neste curso estão disponíveis para download.",
      "target_audience": [
        "Este curso destina-se à iniciantes não familiarizados com a linguagem C++ ou, até mesmo, àqueles que estão procurando se aperfeiçoar nesta linguagem de programação.",
        "Àqueles que querem entender melhor o paradigma de orientação a objetos."
      ]
    },
    {
      "title": "はじめてのPython 少しずつ丁寧に学ぶプログラミング言語Python3のエッセンス",
      "url": "https://www.udemy.com/course/python-python3/",
      "bio": "AIやデータサイエンスの講座でPythonが難しかった方は、この講座から始めましょう。今最も熱いプログラミング言語Pythonを学ぶことで、あなたの可能性は大きく広がります。プログラミング入門用の教材としてもおすすめです。",
      "objectives": [
        "AI、データサイエンスの講座を受講するための下地が身につきます。",
        "ちょっとした計算、解析やWebスクレイピング用のツールとしてPythonが活用できるようになります。",
        "Pythonで文章を加工したり解析したりできるようになります。正規表現も学びます。",
        "Pythonの文法を理解し、コードが書けるようになります。Pythonの基本的なプログラミング技術が身につきます。",
        "条件分岐、ループ、関数、オブジェクト指向などプログラミングの基本的な考え方が身につきます。"
      ],
      "course_content": {},
      "requirements": [
        "プログラミングが全くの未経験でも問題ありません。",
        "MacでもWindowsでも大丈夫です。"
      ],
      "description": "はじめてのPythonは、誰にでも開かれたPython初心者向けの講座です。\nプログラミング言語Pythonをゼロから少しづつ丁寧に解説するので、Pythonの本質を無理なく着実に身につけることができます。\n高い学習効率も本コースの特徴の一つです。\n講義と演習を軸として、高い学習効率が実現できるようにコースが設計されています。\nPythonのコードに慣れるために、演習ではコードを実際に書いたりカスタマイズしたりします。\nレクチャーの難易度は緩やかに上昇するので、プログラミング初心者の方でも問題なく受講することができます。もし、不明な点が生じましたら、Q&Aで遠慮なくご質問ください。\nゼロからPythonを学習し、楽しみながらそのエッセンスを身につけていただくことがこのコースの目的です。\n————————————————————\nPythonは、とてもコストパフォーマンスのいいプログラミング言語です。\n文法が簡潔で学習の敷居が低いにもかかわらず、高い汎用性を持っています。\nそして、様々なプログラミング言語別の年収ランキングで、Pythonエンジニアの年収は1位となっています。\n近年Pythonが注目を集めている理由の一つに、人工知能の分野での活躍があります。\n機械学習やディープラーニングを含む人工知能の開発でスタンダードとなっており、FacebookやGoogleなどの先端企業で高い利用実績があります。\n統計用ライブラリが充実しているため、データサイエンスの分野でも活躍しています。\nビッグデータの解析においても、Pythonはとても有用です。\nまた、IoTやロボット制御の分野において、ハードウェアの制御や自律型ロボットのアルゴリズムにPythonは用いられています。\nそして、YouTube、Instagram、DropboxなどのWebアプリは、Pythonで開発されています。\nその他にも、自然言語処理、数学、生物学、天文学などPythonは分野の垣根を超えて大活躍しています。\nコードが簡潔に書けるため、専業のプログラマでなくても実用的なコードが書けるのが大きなメリットです。\n以上のように、Pythonは実績、汎用性共に申し分なく、有用で将来性のあるプログラミング言語です。\n実際にPythonは社会を様々な形で支えており、Pythonエンジニアの需要は高まっています。\n様々な国内外の企業がで高待遇で募集していますが、需要に供給が追いついていません。\n————————————————————\n本コースの開発環境、AnacondaとJupyter Notebookは簡単にダウンロード、インストールすることができます。\n環境構築の敷居が非常に低いため、プログラミング初心者の方にもお勧めです。\nPythonの習得は、あなたの可能性を大きく広げます。\n本コースを修了した方は、早速Pythonを何かに使ってみたくなるのではないでしょうか。",
      "target_audience": [
        "Pythonプログラミングを身に付けたい方",
        "PythonがAIや機械学習を勉強する際の障壁になっている方",
        "Pythonをビジネスで扱う必要に迫られた方",
        "プログラミング学習の最初のきっかけが欲しい方",
        "より効率的にデータを扱いたい方",
        "WebアプリやAIに関しては概要のみとなります",
        "文系の方、非エンジニアの方にもおすすめです"
      ]
    },
    {
      "title": "Python Web Scraping",
      "url": "https://www.udemy.com/course/python-web-scraping/",
      "bio": "Aprendendo a coletar dados na WEB com Python.",
      "objectives": [
        "Utilizar o Python para realizar web scraping para coleta de informações na Internet.",
        "Utilizar técnicas de web scraping e web crawling para acessar dados a partir de qualquer fonte na Web e em qualquer formato."
      ],
      "course_content": {
        "Introdução": [
          "Seção - Introdução",
          "O que é web scraping?",
          "Páginas Web",
          "Um pouco mais sobre páginas Web"
        ],
        "Instalação do Python": [
          "Seção - Instalação do Python",
          "Qual versão utilizar?",
          "Instalando o Python no Windows",
          "Instalando o Python no Linux",
          "Pyenv",
          "Virtualenv"
        ],
        "Identificando informações de um Website": [
          "Seção - Identificando informações de um Website",
          "Identificando Tecnologias utilizadas no Website com a biblioteca builtwith.",
          "Identificando o proprietário de um Website utilizando a biblioteca python-whois"
        ],
        "Expressões Regulares": [
          "Seção - Expressões Regulares",
          "Expressões Regulares"
        ],
        "Meu primeiro Web Scraper": [
          "Seção - Meu primeiro Web Scraper",
          "Primeiro Web Scraper",
          "Encontrando informações em uma página Web"
        ],
        "Biblioteca BeautifulSoup": [
          "Seção - Biblioteca BeautifulSoup",
          "Instalando a biblioteca BeautifulSoup - Atualização",
          "Instalando a biblioteca BeautifulSoup",
          "Servidor Web em Python",
          "Executando o BeautifulSoup",
          "Tratando erros ao acessar os dados na web - Atualização",
          "Tratando erros ao acessar os dados na web",
          "Um pouco mais de BeautifulSoup - Correção",
          "Um pouco mais de BeautifulSoup",
          "Expressões Regulares com BeautifulSoup - Observações",
          "Expressões Regulares com BeautifulSoup"
        ],
        "Biblioteca LXML": [
          "Seção - Biblioteca LXML",
          "Biblioteca LXML - Parte 1",
          "Biblioteca LXML - Parte 2",
          "Biblioteca LXML - Tarefa",
          "Biblioteca LXML - Desafio 1",
          "Biblioteca LXML - Desafio 2",
          "Biblioteca LXML - Utilizando XPath"
        ],
        "Usando o Scrapy Framework": [
          "Seção - Usando o Scrapy Framework",
          "Instalando o Scrapy Framework",
          "Trabalhando com Scrapy - Parte 1",
          "Trabalhando com Scrapy - Parte 2",
          "Trabalhando com Scrapy - Parte 3",
          "Trabalhando com Scrapy - Parte 4",
          "Sistema de raspagem de dados da Telelista - Exemplo prático",
          "Trabalhando com Scrapy - Mais um pouco sobre Selector XPATH e CSS"
        ],
        "Usando APIs": [
          "Seção - Usando APIs",
          "Introdução ao uso de APIs - Aula 1",
          "Introdução ao uso de APIs - Aula 2",
          "Introdução ao uso de APIs - Aula 3"
        ],
        "Armazenando dados": [
          "Seção - Armazenando dados",
          "Armazenando dados - Parte 1",
          "Instalação MySQL (revisão)",
          "Introdução a Banco de Dados e ao MySQL. Instalação do MySQL no Windows.",
          "Instalação do MySQL no Linux.",
          "Trabalhando com o MySQL Workbench",
          "Conectando ao banco com MySQL Connector/Python",
          "Executando instruções SQL com Python",
          "Armazenando o resultado do scraping no MySQL"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de informática.",
        "Conhecimentos básicos de programação em Python.",
        "Ter feito o curso Python 3 para Todos (do mesmo instrutor) aqui da Udemy é importante."
      ],
      "description": "AVISO: O CURSO ESTÁ EM ANDAMENTO, SEMPRE TEREMOS NOVAS AULAS!!!!\n\n\nNeste curso você aprenderá técnicas de web scraping e web crawling com Python para acessar dados à partir de qualquer fonte na Web e em qualquer formato.\nAprenderá a criar scripts em Python e a usar APIs para coletar e processar dados de milhares de páginas Web ao mesmo tempo.\nAprenderá a analisar páginas HTML, armazenar os dados coletados, rastrear formulários e logins, identificar informações e tecnologias utilizadas em um site.\nAprenderá sobre expressões regulares.\nAprenderá sobre bibliotecas que vão lhe auxiliar nas tarefas de scraping como BeautifulSoup, LXML e Scrapy.\nAprenderá a criar programas para ler diversos tipos de documentos como CSV, PDF, DOCX, XLSX, JSON e ODT.\nAprenderá a realizar limpeza dos dados.\nAprenderá a utilizar o Selenium WebDriver.",
      "target_audience": [
        "Todo programador que queira adquirir conhecimento em scraping usando Python.",
        "Profissionais de segurança da informação e administradores de sistemas Web."
      ]
    },
    {
      "title": "Apprendre les Macros et le langage VBA avec Excel",
      "url": "https://www.udemy.com/course/apprendre-les-macros-et-le-langage-vba-avec-excel-2016/",
      "bio": "Programmer sous Excel en Visual Basic pour application VBA",
      "objectives": [
        "Réaliser des Macros",
        "Apprendre le langage VBA",
        "Réaliser des applications a l'aide du VBA",
        "Réaliser du code en Visual Basic pour Application avec Excel"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Visual Basic Editor",
          "Votre première Macro en VBA",
          "Analyse de la macro (Code VBA)"
        ],
        "VBA Les fondamentaux": [
          "MsgBox Boite de message",
          "Introduction aux Variables",
          "Utilisations des variables",
          "Type personnalisé de variable",
          "Mode \"Expilicit\"",
          "Les Conditions",
          "Select Case",
          "Tableau Unidimensionnel et Multidimensionnel",
          "Les Boucles",
          "Les Fonctions",
          "Les arguments de procédure",
          "Les Evènements",
          "Utiliser les fonctions Excel en VBA",
          "VBA saisie Utilisateur (InputBox MsgBox)",
          "TP1 Macro montant TTC vers HT",
          "TP1 Correction (Fichier source joint)"
        ],
        "Exploiter le VBA dans un classeur Excel": [
          "Objet Sheets et WorkSheets",
          "Objet Cells",
          "Objet Range",
          "Objets Rows et Columns",
          "Find",
          "On Error (Gestion d'erreur en VBA)",
          "For each",
          "Type Variant",
          "Sélection dynamique",
          "Les Dates",
          "Calcul entre des dates",
          "Manipuler les chaines de caractères",
          "Majuscule Minuscule chaîne de caractère",
          "Position de la première occurrence d'une chaîne dans une autre chaîne",
          "Inverser l'ordre des caractères dans une chaîne",
          "Remplacer des caractères dans une chaîne",
          "Scinder une chaîne de caractère dans un tableau",
          "jeu de caractères ASCII",
          "TP2 Macro de Cryptage et Décryptage",
          "TP2 Correction (Fichier source joint)"
        ],
        "Débogage Éditeur Visual Basic (VBE)": [
          "Fenêtre d'exécution",
          "Point d'arrêt",
          "Pas à pas détaillé",
          "Fenêtre Variables locales",
          "Espion"
        ],
        "Les formulaires et les contrôles": [
          "Formulaire - UserForm",
          "Intitulé - Label",
          "Bouton de commande - Command Button",
          "Zone de Texte - TextBox",
          "Zone de liste modifiable - ComboBox",
          "Zone de liste - LisBox",
          "Case à cocher - CheckBox",
          "Bouton d'option - Option Button",
          "Bouton Ascenseur - Toggle Button",
          "Cadre - Frame",
          "Contrôle d'onglet - TabStrip",
          "Multipages",
          "Image",
          "Barre de défilement - ScroolBar",
          "Toupie - SpinButton",
          "Utiliser les Contrôles dans une feuille Excel",
          "Générer un formulaire de saisie automatiquement",
          "Positionner les contrôles sur le formulaire",
          "Navigation entre formulaire (Modal)",
          "TP3 Réalisation d'un quiz",
          "TP3 Correction (Fichier source joint)"
        ],
        "Module de classe": [
          "Introduction au module de classe",
          "Instanciation et déclaration des propriétés de la classe",
          "Procédure de class"
        ],
        "VBA et Gestion de fichier": [
          "Ecriture dans un fichier texte",
          "Lecture d'un fichier texte",
          "Boite de dialogue Ouvrir",
          "Boite de dialogue sélection de Dossier",
          "Opération sur les fichiers (Copie, Suppression, Déplacement, etc..)",
          "Opération sur les dossiers (Copie, Suppression, Déplacement, etc..)",
          "Lister les fichiers dossiers (DIR)",
          "TP4 Lister les fichiers d'un dossier dans Excel",
          "TP4 Correction (Fichier source joint)"
        ],
        "VBA et application externe": [
          "Exécuter un programme externe",
          "Ouvrir le navigateur avec une URL de destination",
          "VBA et application Microsoft Office"
        ],
        "Workflow Application VBA : Gestion de DVD": [
          "Présentation du programme DVDthèque",
          "Design du formulaire",
          "Chargement de l'affiche",
          "Liste de Genre",
          "Enregistrement des données",
          "Tester l’existence du titre avant enregistrement",
          "Nouvel enregistrement",
          "Sélectionner un DVD existant",
          "Affiche de la sélection dans le formulaire",
          "Trie par propagation",
          "Suppression d'un enregistrement",
          "Formulaire des prêts",
          "Cacher l'interface Excel et afficher l'application",
          "Parcours d'apprentissage du VBA",
          "Remerciements"
        ]
      },
      "requirements": [
        "Maitriser les bases d'Excel"
      ],
      "description": "Excel est un tableur puissant très courant , il fait partie de la suite Microsoft Office et permet de gérer des tableaux complexes, ou tout simplement des tableaux de base comme pour la gestion de vos comptes personnels.\nTout le monde connaît Excel, mais êtes-vous sur de l'exploiter pleinement. Connaissez-vous :\n-Les macros\n-Les applications Excel grâce développés grâce au langage VBA\nSi vous pensez que créer des macros est trop compliqué et que ce n'est pas à votre portée, soyez rassuré(e), ce cours est adapté aux personnes débutantes en programmation et démarre de zéro.\nLes leçons sont riches en exemples et simplifiées autant que possible afin de faciliter l'apprentissage du VBA.\nDans ce cours, vous allez découvrir le langage Visual Basic pour Application et les Macros, puis progressivement vous découvrirez comment l'exploiter pleinement dans vos tableaux grâce a des Travaux pratique avec un corrigé vidéo puis avec un Workflow complet pour la création d'application dans Excel.\nAlors convaincu ?\nRejoignez-moi dans la première partie de ce cours et profitez pleinement de votre tableur Excel.",
      "target_audience": [
        "Débutant en développement VBA",
        "Utilisateurs d' Excel voulant développer ses compétences"
      ]
    },
    {
      "title": "Programação para Iniciantes usando Portugol Studio",
      "url": "https://www.udemy.com/course/programacao-para-iniciantes/",
      "bio": "Aprenda lógica de programação usando ferramentas e abordagens criadas para iniciantes!",
      "objectives": [
        "Lógica de programação para iniciantes",
        "Representação de Algoritmos em Fluxograma e Pseudo-código",
        "Programação em ferramentas didáticas como Scratch e AppInventor",
        "Programação em Portugol Studio"
      ],
      "course_content": {
        "Resolução de Problemas": [
          "Introdução",
          "Pensar sobre como você pensa!",
          "Abstração",
          "Resolução de Problemas - Monges e Canibais!",
          "Resolvendo problemas de Lógica"
        ],
        "Algoritmos": [
          "Introdução à Algoritmos - code.org",
          "Pseudo-código (Lobo, ovelha e repolho)",
          "Fluxogramas",
          "Scratch - Construindo um jogo [parte 1]",
          "Scratch - Construindo um jogo [parte 2]",
          "Scratch - Construindo um jogo [parte 3]",
          "AppInventor - Criando um App em 15 minutos!"
        ],
        "Programando com o Portugol Studio": [
          "Apresentando o Portugol Studio",
          "Variáveis, entrada e saída",
          "Tipos de Dados",
          "Exercícios práticos resolvidos [parte 1]",
          "Exercícios práticos resolvidos [parte 2]"
        ],
        "Operadores e Expressões": [
          "Operadores Relacionais",
          "Expressões Relacionais",
          "Operadores Lógicos",
          "Operadores Aritméticos DIV e MOD",
          "Exercitando DIV e MOD - Caixa Eletrônico",
          "Precedência de Operadores"
        ],
        "Desvios Condicionais": [
          "Introdução aos Desvios Condicionais",
          "Se - Senão, aprofundando os desvios condicionais!",
          "Exercícios resolvidos com Desvios Condicionais",
          "Verificação de Intervalos - IMC",
          "Exercício resolvido - Defesa Civil",
          "Exercício resolvido - Signos",
          "Exercício resolvido - Bounce",
          "Exercício resolvido - Mouse Over",
          "Desvios Condicionais Aninhados",
          "Aninhamento - exercício resolvido - Jogo de adivinhação"
        ],
        "Lações de Repetição - Loops": [
          "Loops",
          "Loops e música!",
          "Loops aninhados"
        ],
        "Funções": [
          "Funções",
          "Funções que retornam valores"
        ],
        "The end!": [
          "Como são as outras linguagens de programação?",
          "Parabéns, você chegou até o fim!"
        ]
      },
      "requirements": [
        "Nenhum pré-requisito"
      ],
      "description": "Olá! Eu sou Elieser A. de Jesus, bacharel em Ciência da Computação e mestre em Computação Aplicada!\nNesse curso vou compartilhar com você o que eu aprendi em 14 anos  envolvido com programação de computadores.\nJá programei jogos, sistemas e leciono em universidade a quase 10 anos.\nAlém disso, eu também sou músico, e juntei as minhas paixões em um projeto chamado JamTaba, um software que permite tocar online com músicos de outros países. Nesse projeto eu sou o principal programador e trabalho com colaboradores de vários países.\nNesse curso você aprenderá a base para a programação de computadores:  a lógica de programação.\nEu planejei esse curso baseado nas dificuldades que eu venho observando nos alunos. Como professor eu percebo que a dificuldade para aprender a programar está relacionada com dificuldades de raciocínio lógico e resolução de problemas.\nPensando nisso eu criei esse curso dando ênfase nessas questões, e só depois entramos na codificação. Para iniciantes é muito ruim tentar codificar antes de entender a lógica de programação. Geralmente isso causa muitos problemas de aprendizagem.\nEsse curso está direcionado para:\n- Pessoas que não tem qualquer noção e querem aprender programação;\n- Estudantes de graduação que queiram complementar suas aulas relacionadas à programação; e\n- Estudantes de ensino médio que cursam disciplinas relacionadas com programação e que queiram se aprofundar.\n\n\nSeja bem vind@!",
      "target_audience": [
        "Pessoas interessadas em aprender a base para a programação de computadores",
        "Estudantes de graduação buscando complementar as aulas de Algoritmos e Programação",
        "Estudantes de Ensino Médio ou Técnico que queiram complementar suas aulas de Computação ou Robótica"
      ]
    },
    {
      "title": "Python para Todos - Aprenda a criar diversas aplicações",
      "url": "https://www.udemy.com/course/python-3-para-todos/",
      "bio": "Do básico ao avançado - Crie aplicações para Desktop, Web e Mobile.",
      "objectives": [
        "Instalar o Python, usar o interpretador, o IDLE Shell e a IDE PyCharm.",
        "Entender e aprender conceitos básicos de Python.",
        "Entender e aprender conceitos avançados de Python.",
        "Lógica de programação com Python.",
        "Utilizar bibliotecas padrões e de terceiros.",
        "Criar sistemas Python multiplataforma (Linux, Windows e Mac).",
        "Criar bons algoritmos e programas para diversos fins.",
        "Programação Orientada a Objetos em Python.",
        "Utilizar Python para Web e dispositivos móveis.",
        "Criar aplicações Web utilizando frameworks Python (Flask e DJango).",
        "Criar aplicações com Interface Gráfica do Usuário (GUI) com PyQt5, wsPython e Tkinter.",
        "Criar testes automatizados.",
        "Trabalhar com arquivos e diretórios.",
        "Trabalhar com planilhas do Google.",
        "Criar Chatbots para Facebook Messenger.",
        "Criar e manter ambientes virtuais.",
        "Criar jogos com PyGame.",
        "Trabalhar com documentos do Microsoft Office."
      ],
      "course_content": {},
      "requirements": [
        "Conhecimentos básicos de informática e vontade de aprender programação.",
        "Não é necessário que já saiba programar."
      ],
      "description": "Este curso é para quem não sabe programar e quer ingressar no mundo da programação e também para quem já é programador e deseja aprender uma nova linguagem.\nVocê desenvolverá dezenas de aplicações no decorrer do curso.\nEste curso aborda desde conceitos básicos como preparação do ambiente, criação de programas simples, definição de variáveis, estruturas condicionais, funções, passando por Orientação a Objetos, testes automatizados, threads, criação de aplicações com acesso a banco de dados, criação de aplicações com interface gráfica, programação para dispositivos móveis, processamento distribuído e aplicações web.\n\nVocê tem à sua disposição todo código-fonte usado no curso anexado às aulas, além de materias em PDF para complementar o estudo, podendo baixar todo código-fonte de nosso repositório no Github.\n\nCurrículo do curso:\nSeção 1 - Introdução\nApresentação do curso\nPor que Python?\nSeção 2 - Instalação do Python\nQual versão utilizar?\nInstalando o Python no Windows\nInstalando o Python no Linux\nSeção 3 - Executando o primeiro código\nUsando o interpretador do Python\nCriando o primeiro arquivo e executando pelo terminal ou prompt de comando\nUtilizando o IDLE Shell\nEscolhendo e utilizando uma IDE\nSeção 4 - Conceitos básicos\nBlocos de código\nObjetos\nComentários de código\nOperações matemáticas\nSeção 5 - Variáveis e tipos de dados\nNomes de variáveis e atribuição\nVariáveis numéricas\nVariáveis do tipo lógico\nVariáveis do tipo string\nTipagem estática e dinâmica\nEntrada de dados e conversão de dados\nAprendendo mais sobre strings\nSeção 6 - Estruturas condicionais\nAprendendo If, elif e else\nSeção 7 - Estruturas de repetição\nFor e Range\nWhile\nSeção 8 - Estruturas de dados\nListas\nTuplas\nSet\nDicionários\nSeção 9 - Funções, módulos e pacotes\nIntrodução\nVariáveis locais e globais\nParâmetros de funções\nMódulos e pacotes\nFunções recursivas\nValidação de entrada de dados\nExpressões Lambda\nFunção Type\nSeção 10 - Aprendendo ainda mais sobre strings\nVerificação de strings e conversão para maiúsculas e minúsculas\nContando e pesquisando elementos em uma String\nPosicionamento de strings\nSeparação, Substituição de Strings e Remoção de Espaços em Branco\nValidação por tipo de conteúdo\nFormatação de strings e números\nSeção 11 - Programação Funcional\nSeçao 12 - Decoradores\nSeçao 13 - Geradores\nSeção 14 - Orientação a Objetos\nConceitos básicos\nIntrodução, paradigma de orientação a objetos. Definição de objetos e classes.\nClasses e representação UML.\nClasse, objetos, namespace, sombreamento de atributos e self.\nHerança.\nHerança Múltipla.\nPolimorfismo.\nClasses abertas.\nEncapsulamento.\nPropriedades\nDescritores\nSobrecarga de operadores\nColeções\nMetaclasses\nAbstract Base Class (ABCMeta) e abstractmethod\nSeção 15 - Mensagens e tratamento de erro\nMensagems de erro\nTratamento de erros\nSeção 16 - Documentação\npydoc\nSeção 17 - Biblioteca padrão\nSeção 18 - Bibliotecas de terceiros\nSeção 19 - Melhorando seu código\nSeção 20 - Testes automatizados\nSeção 21 - Threads\nSeção 22 - Trabalhando com arquivos e diretórios\nSeção 23 - Banco de dados - MySQL\nIntrodução a Banco de Dados e ao MySQL. Instalação do MySQL no Windows.\nInstalação do MySQL no Linux.\nTrabalhando com o MySQL Workbench\nConectando ao banco com MySQL Connector/Python\nExecutando instruções SQL com Python\nCriando um cadastro simples, sem interface gráfica\nSeção 24 - Banco de dados - MongoDB\nSeção 25 - Interface gráfica com PyQt5\nInterface gráfica, Qt, Introdução ao PyQt5.\nComponentes de interface gráfica.\nUtilizando o QtDesigner para desenhar as telas.\nMulti-thread.\nCriando uma aplicação com interface gráfica e MySQL.\nSeção 26 - Interface gráfica com wsPython\nSeção 27 - Interface gráfica com TKinter\nSeção 28 - Google SpreadSheet - Trabalhando com planilhas do Google\nSeção 29 - Processamento numérico\nSeção 30 - Processamento distribuído\nSeção 31 - Plataformas portáteis\nSeção 32 - Desenvolvimento de Aplicações Web com Flask\nSeção 33 - Desenvolvimento de Aplicações Web com DJango\nSeção 34 - Desenvolvimento de Aplicações Web com Pyramid\nSeção 35 - Criando Chatbot para Facebook Messenger\nSeção 36 - Ambientes virtuais\npyenv\nvirtualenv\nvirtualenvwrapper\nSeção 37 - Trabalhando com e-mails\nSeção 38 - Desafios diversos\nSeção 39 - Criptografia\nSeção 40 - Programação de redes\nSeção 41 - Tradução e reconhecimento de fala\nSeção 42 - API Rest\n\n\n\n\nReferências bibliográficas\nAs referências bibliográficas estão informadas na descrição da aula \"Apresentação do curso\".\n\n\nAVISO: O CURSO ESTÁ EM ANDAMENTO, FREQUENTEMENTE TEREMOS NOVAS AULAS!!!!",
      "target_audience": [
        "Qualquer pessoa que tenha desejo de se tornar um programador de computadores.",
        "Qualquer programador que não saiba Python e tenha desejo de aprender uma nova linguagem de programação.",
        "Programadores Python que queiram aprender alguns dos conhecimentos específicos que são apresentados no curso."
      ]
    },
    {
      "title": "Curso completo de Python 3 de la A a la Z - 2025 +50 horas!",
      "url": "https://www.udemy.com/course/python-3-az/",
      "bio": "Aprende Python 3 como un profesional empezando por las bases hasta programar tus propios algoritmos o juegos completos",
      "objectives": [
        "Aprenderás a usar las últimas versiones de Python 3 de forma profesional",
        "Aprenderás funcionalidades avanzadas de Python como los módulos de tratamiento de ficheros o los formatos de timestamps",
        "Entenderás conceptos más avanzados como los decoradores.",
        "Crearás un proyecto final de programación: el juego del Scrabble en Python!",
        "Aprenderás a utilizar todos los conceptos de Programación Orientada a Objetos con clases!",
        "Entenderás como sacarle el máximo provecho tanto a los Notebooks de Google Colab como a crear ficheros y módulos en scripts .py!",
        "Tendrás un conocimiento 100% funcional de Python desde las bases de la programación hasta los aspectos más avanzados!",
        "Aprenderás todos los tipos de datos básicos y estructuras de datos que tienes disponibles en Python, incluídas las listas, diccionarios, tuplas o arrays",
        "Dominarás todas las librerías necesarias para luego cursar ML o IA con éxito, incluidas pandas, numpy, math, cmath, matplotlib, seaborn, csv, os y muchas más!",
        "Dominarás todos los conceptos de programación con Python 3 de la A a la Z"
      ],
      "course_content": {
        "Te damos la bienvenida": [
          "¡Bienvenido al curso, estudiante!",
          "No valores antes de tiempo",
          "Consejos para disfrutar aprendiendo en Udemy",
          "Y para que empieces la aventura con buen pie"
        ],
        "Tema 0 - Antes de empezar": [
          "La herramienta del curso: Google Colaboratory",
          "La sintaxis del texto utilizando markdown",
          "Pyratilla y su historia"
        ],
        "Tema 1 - Python básico": [
          "El concepto de Variable",
          "Palabras clave en Python",
          "Declaración de multiples variables",
          "Operaciones con variables de tipo numérico",
          "Cómo hacer comentarios",
          "La función import",
          "Python básico",
          "Diario de Pyratilla - Entrada 1",
          "¿Las Tareas no se Marcan como Completadas?"
        ],
        "Tema 2 - Números en Python": [
          "Tipos de números en Python",
          "Operaciones aritméticas",
          "Orden de las operaciones aritméticas",
          "Números complejos: definición y operaciones",
          "Conjugado, módulo, argumento, unidad imaginaria y otras representaciones",
          "El plano complejo",
          "Números complejos en Python",
          "Repaso - Números en Python",
          "Números en Python",
          "Diario de Pyratilla - Entrada 2"
        ],
        "Tema 3 - Strings en Python": [
          "Variable de tipo string",
          "Los string literals",
          "Concatenación de strings",
          "Repetición de strings",
          "La función print()",
          "Ejercicio: Concatenando y repitiendo strings para cantar ¡Cumpleaños feliz!",
          "Las funciones str, format y los saltos de línea y tabulaciones",
          "Substrings",
          "Métodos para trabajar con strings",
          "Más funciones con las que trabajar con strings",
          "Ejercicio: Obtener substring eliminando palabra introducida por usuario",
          "Ejercicio: Personalizando la canción Cumpleaños Feliz",
          "Ejercicio: Combinando input() y print()",
          "Ejercicio: Devolver la edad dado el año de nacimiento y el año actual",
          "Repaso - Strings en Python",
          "Strings en Python",
          "Diario de Pyratilla - Entrada 3"
        ],
        "Tema 4 - Operadores de decisión": [
          "Variables booleanas",
          "Tablas de verdad: Negación, conjunción y disyunción",
          "Negación, conjunción y disyunción en Python",
          "Operadores de comparación",
          "Múltiples comparaciones simultáneas",
          "Las comparaciones en strings",
          "Métodos booleanos de strings",
          "El operador de decisión if",
          "Ejercicio: Comprobando si un string contiene espacios en blanco",
          "El operador de decisión else",
          "Ejercicio: Resolviendo ecuaciones de primer grado",
          "El operador de decisión elif",
          "El operador ternario",
          "Ejercicio: Comprobar si un número es par o impar",
          "Ejercicio: Comprobando si un punto (x, y) pertenece al cuadrado unidad",
          "Operadores if y else anidados",
          "Ejercicio: Comprobar si un año es bisiesto",
          "Corrección Ejercicio",
          "Repaso - Operadores de decisión",
          "Operadores de decisión",
          "Diario de Pyratilla - Entrada 4"
        ],
        "Tema 5 - Operadores de iteración": [
          "El bucle while",
          "Ejercicio: Recorrer una frase y contar cuantas vocales tiene",
          "El comando break",
          "Ejercicio: Utilizando el comando break",
          "Combinación while ... else",
          "Ejercicio: Practicando la combinación while ... else",
          "Ejercicio: Rueda de letras",
          "El bucle for",
          "Ejercicio: Invirtiendo un string",
          "La función range",
          "Ejercicio: Suma de términos de una progresión aritmética",
          "El comando continue",
          "Ejercicio: Utilizando el comando continue para eliminar una letra de un string",
          "Ejercicio: Combinando for con break y continue",
          "Bucles anidados",
          "Repaso - Operadores de iteración",
          "Operadores de iteración",
          "Diario de Pyratilla - Entrada 5"
        ],
        "Tema 6 - Estructuras de datos: Listas": [
          "Introducción a listas",
          "Elementos de una lista",
          "Ejercicio: Añadiendo elementos por teclado a una lista",
          "Bucles con listas",
          "Concatenación y repetición de listas",
          "Más métodos de listas",
          "Ejercicio: Eliminando un elemento indicado por el usuario",
          "Ejercicio: Ordenando elementos de una lista creada por el usuario",
          "Conversión a listas",
          "Ejercicio: Convirtiendo los números impares del 0 al 30 a lista",
          "Listas anidadas",
          "Matrices con listas",
          "Ejercicio: Creando manualmente una matriz 4x4",
          "Ejercicio: Suma de matrices dadas por el usuario",
          "Ejercicio: Producto de matrices dadas por el usuario",
          "Matrices con numpy",
          "Ejercicio: Introduciendo matriz n x m manualmente con numpy",
          "Ejercicio: Suma de matrices numpy dadas por el usuario",
          "Ejercicio: Producto de matrices numpy dadas por el usuario",
          "Repaso - Estructuras de datos: Listas",
          "Estructuras de datos: Listas",
          "Diario de Pyratilla - Entrada 6"
        ],
        "Tema 7 - Estructuras de datos: Diccionarios": [
          "Introducción a diccionarios",
          "Elementos de un diccionario",
          "Ejercicio: Crear un diccionario por teclado",
          "Tamaño de un diccionario",
          "Bucles con diccionarios",
          "Diccionarios y listas",
          "Ejercicio: Diccionario de listas",
          "Más métodos de diccionarios",
          "Ejercicio: Eliminando la clave elegida por el usuario",
          "Construyendo diccionarios con dict()",
          "Ejercicio: Diccionario y DNI",
          "Ejercicio: Diccionario de apariciones de caracteres",
          "Corrección Ejercicio",
          "Repaso - Estructuras de datos: Diccionarios",
          "Estructuras de datos: Diccionarios",
          "Diario de Pyratilla - Entrada 7"
        ],
        "Tema 8 - Estructuras de datos: Conjuntos": [
          "Introducción a conjuntos",
          "Subconjuntos",
          "Operaciones con conjuntos",
          "Elementos de un conjunto",
          "Tamaño de un conjunto",
          "Bucles y conjuntos",
          "Más métodos de conjuntos",
          "Ejercicio: Letras que aparecen en una frase",
          "Ejercicio: Intersección de letras de 2 palabras",
          "Ejercicio: Diferencia simétrica de dos conjuntos",
          "Ejercicio: Criba de Eratóstenes",
          "Ejercicio: Elemento máximo de un conjunto",
          "Repaso - Estructuras de datos: Conjuntos",
          "Estructuras de datos: Conjuntos",
          "Diario de Pyratilla - Entrada 8"
        ]
      },
      "requirements": [
        "No es necesario ningún tipo de conocimiento en programación. Este curso es realmente te enseñará a programar desde cero",
        "Un ordenador con conexión a internet para poder descargar y ejecutar los notebooks de Python que te daremos durante el curso",
        "Muchas ganas de aprender Python desde cero para seguir creciendo en las ramas de Inteligencia Artificial, Data Science y Machine Learning"
      ],
      "description": "La aventura de Piratas que ya ha enseñado a programar a miles de personas en todo el mundo en castellano.\n\n\nTe presentamos nuestro curso de Python 3, completo de la A la Z. Aprenderás desde la base y llegarás posteriormente a temas más complejos.\n¡Conviértete hoy mismo en un programador de Python y aprende una de las habilidades más solicitadas por las empresas que buscan empleados bien cualificados en este 2025!\nLos Data Scientist ganan en promedio más de 100.000$ al año ya sea trabajando en empresas o como consultores externos. Sus portfolios de trabajos previos son su mejor arma para captar nuevos clientes y destacar como analistas de datos. Sin embargo, los datos no se analizan a mano, y el lenguaje de programación de Python se ha convertido en un requisito indispensable para aplicar algoritmos de Machine Learning o de Inteligencia Artificial como los que vemos en los cursos más avanzados. La programación con Python 3 se ha convertido en una habilidad importantísima para conseguir mejores trabajos en el siglo XXI.\n¡Este es el curso más completo, pero manteniendo la simplicidad para que aprender una tecnología como Python sea accesible para todos los estudiantes, para el lenguaje de programación Python en Udemy! Ya sea que nunca hayas programado antes, o bien ya conozcas la sintaxis básica o tal vez quieras aprender sobre las funciones avanzadas de Python, ¡este curso es sin duda para ti! En este curso te enseñaremos Python 3 desde lo más básico hasta convertirte en un experto capaz de programar lo que quieras.\nY es que Python es el lenguaje de programación ideal para iniciarte en el mundo del machine learning y del Data Science. Incluso, si eres de los que ha intentado aprender programación en la Universidad Python, es de los lenguajes más ampliamente extendidos, y no solo en Machine Learning o en Data Science, si no también su variante, Django para el mundo de la programación web.\nUna gran cantidad de clases y ejercicios\n¡Con más de 300 clases, 50 tareas de ejercicios y más de 50 horas de vídeo, este curso integral no dejará ningún concepto sin tratar! ¡Nuestro curso incluye por supuesto cuestionarios, pruebas, ejercicios de programación, desafíos y tareas finales de programación, así como un mega proyecto final para crear un todo un portfolio de conocimientos prácticos en Python!\nAprende a usar Python para tareas del mundo real, como trabajar con archivos y ficheros de texto, leer archivos de CSV o JSON, crear estructuras de datos, cargar y representar los datos necesarios para un análisis exploratorio en Data Science y mucho más.\nEste curso te enseñará Python de una manera práctica, y además acompañando a cada una de las clases tienes la explicación práctica de conceptos diferente de programación en Python, junto con un notebook con todo el código programado correspondiente a esa clase. ¡Aprende de la manera que sea mejor para ti: viendo el vídeo, programando desde cero o repasando el script ya creado mientras escuchas el audio del vídeo!\nY para que aprendas divirtiéndote, hemos preparado una aventura de Pyratas, donde acompañarás a Pyratilla a convertirse en el terror de todos los mares mientras aprende a llevar las finanzas de su barco, conseguir una tripulación, batir a enemigos con su espada y lo mejor de todo: programándolo todo en Python 3 de la A a la Z!!! Te garantizo que no te quedarás indiferente con la metodología que hemos preparado para ti! Y sin duda alguna, al apuntarte a alguno de nuestros cursos de Machine Learning o de Data Science, tendrás esa habilidad de programación necesaria para perderle de una vez el miedo al código.\nAdemás, para evitar tener problemas de instalación, o que tu ordenador no sea lo bastante potente y que puedas seguir el curso independientemente de tu sistema operativo, ya sea Linux, MacOS o Windows, utilizaremos la avanzada tecnología de Google Colab, de modo que no tendrás que usar los recursos de tu ordenador si no que con una cuenta de gmail gratuita tendrás todo listo para poder trabajar estés donde estés.\nDurante nuestro curso cubriremos una amplia variedad de temas:\nQué es Python y por qué es tan popular para Data Science\nConceptos básicos de la línea de comandos en bash\nCómo ejecutar código de Python en Google Colab\nTipos de datos numéricos int y floats\nStrings y cómo se utilizan\nListas\nDiccionarios\nTuplas\nConjuntos\nFormato de impresión de datos\nFunciones\nÁmbito de visibilidad\nArgumentos de entrada y valores de retorno\nFunciones universales\nDepuración y manejo de errores y excepciones\nMódulos integrados y módulos externos creados por ti mismo\nProgramación orientada a objetos\nHerencia\nPolimorfismo\nEntrada y Salida de archivos\nMétodos avanzados\nLos módulos pandas, numpy, math y cmath para carga y manejo de datos\nLos módulos matplotlib y seaborn para representación gráfica de información\nLos módulos csv y os para carga y manejo de datos\n¡Además, obtendrás acceso de por vida a más de 300 clases con sus notebooks correspondientes para cada tema de cada clase!\n¡Por si fuera poco, este curso viene con una garantía de devolución de dinero de 30 días! Si no estás satisfecho de alguna manera, recuperarás todo tu dinero, así que tienes riesgo nulo. Además, tendrás acceso a los notebooks como agradecimiento por probar el curso.\nEntonces,¿ a qué estás esperado? Aprende Python de una manera que hará avanzar tu carrera profesional y aumentará tus conocimientos y opciones de ser contratado gracias a dominar esta nueva habilidad, ¡todo de una manera divertida y práctica!",
      "target_audience": [
        "Estudiantes que se inicial por primera vez en la programación. No necesitas ninguna experiencia previa.",
        "Programadores que quieran cambiarse al lenguaje Python.",
        "Programadores intermedios que ya sepan Python y quieran elevar sus habilidades de programación al siguiente nivel"
      ]
    },
    {
      "title": "Yeni başlayanlar için Python'a giriş eğitimi | Python ilacı!",
      "url": "https://www.udemy.com/course/sifirdan-uzmanliga-python-egitimi/",
      "bio": "Python'ı ilk defa öğreniyorsanız, doğru adrestesiniz!",
      "objectives": [
        "Python programlama dilini başından sonuna öğreneceksiniz!"
      ],
      "course_content": {},
      "requirements": [
        "Hiçbir yazılım geçmişiniz olmasına gerek yoktur!"
      ],
      "description": "Python son yılların en popüler yazılım dilidir. Kod yazmaya başlamak için ilk seçilmesi gereken dildir. Bu dili, bir profesyonelden öğrenmenin avantajını yaşayacaksınız. Kod yazma geçmişiniz olmasına gerek yoktur. Verimli çalışma ile bu kurstan azami faydayı sağlayabilirsiniz.  Python'ın günlük konuşma diline olan yakınlığı, size kod yazmayı sevdirecek, buna inanıyorum.\nPython programları; C ve C++ gibi dillerin aksine, derlenmeye gerek olmadan çalıştırılabilir. Python’da derleme işlemi ortadan kaldırıldığı için, bu dille oldukça hızlı bir şekilde program geliştirilebilir.\nPython programlama dili basittir, temiz söz dizimine sahiptir. Bu da onu pek çok programcı tarafından tercih edilen bir dil haline getirmiştir. Bu sayede kendisiyle hem program yazmak, hem de başkası tarafından yazılmış bir programı okumak, diğer programlama dillerine kıyasla çok kolaydır.\nPython’ın yukarıda sayılan özellikleri sayesinde dünya çapında ün sahibi büyük kuruluşlar (Google, YouTube ve Yahoo! gibi) bünyelerinde her zaman Python programcılarına ihtiyaç duyuyor. Mesela pek çok büyük şirketin Python bilen programcılara iş imkanı sağladığını, Python’ın baş geliştiricisi Guido Van Rossum’un 2005 ile 2012 yılları arasında Google’da çalıştığını, 2012 yılının sonlarına doğru ise Dropbox şirketine geçtiğini söylersek, bu programlama dilinin önemi ve geçerliliği herhalde daha belirgin bir şekilde ortaya çıkacaktır.\nYabancı bir kelime olan python’ı nasıl telaffuz edeceğimizi biliyor muyuz?\nGeliştiricisi Hollandalı olsa da python İngilizce bir kelimedir. Dolayısıyla bu kelimenin telaffuzunda İngilizce kuralları geçerli. [paytın] şeklinde telaffuz edebilirsiniz. Python kelimesini tamamen Türkçeleştirerek [piton] şeklinde telaffuz etmeyi yeğleyenler de vardır.",
      "target_audience": [
        "Python'ı sıfırdan öğrenmek isteyen ve bilip geliştirmek isteyen herkes!"
      ]
    },
    {
      "title": "C# Asp.Net MVC ( Ajax + Json +Bootstrap + JavaScript)",
      "url": "https://www.udemy.com/course/c-aspnet-mvc-ajax-json-boostrap-javascript/",
      "bio": "Aprende Asp.Net MVC y como interactua con las tecnologías mas usadas y conocidas JQuery , Bootstrap entre otras",
      "objectives": [
        "Como funciona el patron de diseño MVC",
        "Como pasar datos de un controlador a una vista",
        "Realizar listados de la base de datos a nuestra aplicación",
        "Usar Bootstrap para mejorar la interfaz de nuestras aplicaciones",
        "Aprender a transportar y leer información de un JSON",
        "Realizar una petición AJAX del cliente al servidor",
        "Aprender a usar modales para el desarrollo de aplicaciones"
      ],
      "course_content": {},
      "requirements": [
        "Conocimiento básicos de C#"
      ],
      "description": "Aprende a desarrollar aplicaciones web , si vienes del mundo de aplicaciones windows form , es hora que conviertas tu aplicación a una web  para que miles de usuarios puedan accederlo desde un browser  y así llegue a mas personas en el mundo. Ademas aprenderás  como aplicar las librerías mas populares en el mercado  JQuery y Boostrap para el desarrollo de aplicaciones , y si no conoces , aquí aprenderás de cero a utilizarlo.",
      "target_audience": [
        "Personas que desean realizar aplicaciones web"
      ]
    },
    {
      "title": "C#のWPFでXAMLを書く方法",
      "url": "https://www.udemy.com/course/wpf-xaml/",
      "bio": "C#WPFはWindowsフォームの次に生まれたユーザーインタフェースでXAMLという言語を使って画面制御を行います。ここではそのXAMLの書き方を解説しています。",
      "objectives": [
        "C#でのWPFのプログラミング方法",
        "XAMLが書けるようになる",
        "C#でSQLiteに接続してデータを表示する方法",
        "画面コントロールの使い方がわかる"
      ],
      "course_content": {},
      "requirements": [
        "C#やVBでのWindowsFormsプログラミングの経験があったほうが理解しやすい"
      ],
      "description": "この動画はC#でWindowsFormsプログラミングしかやったことのない方や，\nC#プログラミングの初心者向けに，WPFの書き方，XAMLの書き方について解説しており，\n最速でWPFでSQLiteとつないで画面にデータを表示する方法を解説している動画です。\nコースの序盤でそこまで解説し，中盤以降では各コントロールの使い方と書き方を解説しています。\n今回MVVMに関しては記載していません。\nこの内容については次回以降に１つのテーマとして取り上げて，解説していきたいと思っています。\nWPFに関して，無茶苦茶深いレベルまで解説しているコースではありません。\nこのコースはWindowsFormsプログラマーやVBプログラマーのような方が，\n初めてWPFやXAMLに触れた時の不安や，やり辛さを少しでも軽減するために，\nWPF＆XAMLになれるために適したコースです。\nちなみにXAMLとはWPFをするためにUIをデザインするためのXMLみたいなコードの事です。\n\n\nXAMLはWPFだけでなく，Windows10以降で動作するUWPや\nAndroidやiPhone開発ができるXamarin.Formsで使われている言語です。\nスマホ社会の今，今後C#でプログラミングをするうえで，避けて通れないのがXAMLです。\nそれをここで慣れておきましょう。デスクトップアプリ開発をするなら今でもWPFがファーストチョイスとなります。\n目次\n#1　WPFプロジェクトの作成\n#2　StackPanel\n#3　Grid\n#4　コントロールの名前の付け方\n#5　イベント\n#6　StaticResource\n#7　コントロールのスタイル定義\n#8　グループごとのコントロールのスタイル定義の方法\n#9　SQLiteの使い方\n#10　ListView\n#11　ListViewのフィルタリング\n#12　SQLite＆ListView\n#13　ボタン\n#14　CheckBox\n#15　RadioButton\n#16　Expander\n#17　GroupBox（グループボックス）\n#18　Slider（スライダー）\n#19　ProgressBar（プログレスバー）\n#20　ComboBox（コンボボックス）\n#21　ListBox（リストボックス）\n#22　TabControl（タブコントロール）\n#23　TreeView\n#24　Textについて（TextBlock,TextBox）\n#25　Menu\n#26　ToolBar\n#27　StatusBar\n#28　 WrapPanel\n#29　DockPanel\n#30　Canvas\nボーナスレクチャーでは全レクチャーのソースコードをダウンロードできます。",
      "target_audience": [
        "C#でWPFをこれから学びたい方",
        "C#初心者",
        "C#でのWindowsFormsプログラミングしか経験のない方",
        "XAMLを学びたい方"
      ]
    },
    {
      "title": "Java leicht gemacht - Der umfassende Java Einsteigerkurs A-Z",
      "url": "https://www.udemy.com/course/programmieren-lernen-mit-java-ein-kurs-fur-einsteiger/",
      "bio": "Java lernen anhand vieler Beispiele und Übungen. Weiteres: ArrayList,HashMap oder TreeSet und eine Einführung in JavaFX.",
      "objectives": [
        "Mit Java deine eigenen Programme entwickeln",
        "Die Programmiersprache Java verstehen und anwenden können",
        "Lerne alles was du brauchst um die Java Klausur für das Studium zu bestehen",
        "Wie man mit dem Programm Eclipse arbeitet und Tipps und Tricks zum Programm",
        "Verstehen was Objektorientierte Programmierung ist: Klassen, Objekte, abstrakte Klassen, interface ,Vererbung, Assoziation, Modifikatoren und vieles mehr",
        "Lerne alles über ArrayList, TreeSet und HashMap und viele weitere Klassen",
        "Wie man Listen (ArrayList) sortieren kann",
        "Verstehe was ist der Unterschied zwischen ArrayList und LinkedList ist",
        "Verstehe wie das Collection Framework funktioniert",
        "Lerne alles über das Comparable und Comparator Interface",
        "Was ist der Unterschied zwischen dem Comparable und Comparator Interface",
        "Wie man das Comparable oder das Comparator Interface mit eigenen Objekten nutzt",
        "Lerne was Anonyme Klassen sind und wie man diese nutzen kann",
        "Auf dich wartet eine Einführung in JavaFX um eigene visuelle Oberflächen zu erstellen",
        "Einführung in den JavaFX SceneBuilder um Oberflächen für Java Programme zu erstellen ohne dafür Code schreiben zu müssen",
        "Von der Konsole zum ersten Programm - Im Kurs wirst du dein erstes Programm mit Oberflächen entwickeln"
      ],
      "course_content": {},
      "requirements": [
        "Keine Vorkenntnisse nötig. Du lernst alles was du brauchst im Kurs.",
        "Einen PC bedienen können (Basiskenntnisse).",
        "Windows- / Linux-/ MacOS-Computer oder Laptop besitzen"
      ],
      "description": "Lege mit diesem Kurs den Grundstein deiner Zukunft in der Programmierung. Java Entwickler sind gefragter denn je.\n\nIn diesem Kurs lernst du die Grundlagen zu Java und die der Objektorientierten Programmierung. Im ersten Kapitel Grundlagen zeige ich dir die Grundlagen rund um Java. Zum Beispiel was Variablen, Strings sind oder was Datentypen sind und wozu sie da sind.\nIn jedem weiteren Kapitel steigst Du tiefer in die Welt von Java ein. Es gibt Übungsaufgaben, Lösungen und nach jedem Kapitel kannst du mit einem kurzem Quiz Dein Wissen abfragen und festigen. In den Videos werden auch Grafiken verwendet um so das Ganze Anschaulicher zu gestalten. Durch ein Zusammenfassendes Video am Ende eines Kapitels werden die Zusammenhänge nochmal verdeutlicht.\nAuch im Kurs lernst du alles über das Collection Framework welches z.B. die Klassen ArrayList oder TreeSet beinhaltet. Grade in diesem Abschnitt wird vieles durch Bilder anschaulich erklärt z.B. wie eine ArrayList bildlich vorstellen kann.\nNeu im Kurs ist eine Einführung in JavaFX. Ich zeige dir wie man mit JavaFX visuelle Oberflächen erstellen kann. Frei nach dem Motto von der Konsole zu Oberflächen wirst du im Kurs mit den zuvor erworbenen Java Kenntnissen eigene eigenständiges Programme entwickeln. Im Kurs werden wir gemeinsam Programme mit Oberflächen erstellen.\nDu findest außerdem zu jedem Kapitel eine Lektion welche den Quellcode beinhaltet somit erhältst du zusätzlich weiteres Material zum Download.\n\n\nWarum dieser Kurs?\nIch selbst habe mit Java in der Hochschule angefangen, weiterhin habe ich auf YouTube Videos geschaut. Doch immer wieder habe ich mich gefragt \"hmm was habe ich jetzt eigentlich gelernt\". Das lag daran, dass man oft dort nur den Code kopiert aber nicht verstanden hat was man dort programmiert. Aus diesem Grund habe ich diesen Kurs erstellt mit Übungen + Quizze + Zusammenfassungen und vielem anschaulichen Bildmaterial zum besseren Verständnis.\nDas beste ist du brauchst keine Kenntnisse über Java , der Kurs ist so aufgebaut, dass du als Programmier Einsteiger loslegen kannst.\nWarum ist das so? Naja ich habe auch mal bei null begonnen, deshalb ist es mir eine Herzensangelegenheit dir Java beizubringen, ohne 2 Jahre Bücher zu lesen. Ich will das du verstehst was du dort programmierst.\nAlso worauf wartest du :). Ich freue mich Dich bald Begrüßen zu dürfen.\nAußerdem gehst du kein Risiko ein. Du hast ein 30 Tägiges Rückgaberecht. Des Weiteren erhältst du von mir in den Foren jederzeit Hilfe.\n\n\nDas Schreiben mir Studenten die diesen Kurs bereits absolviert haben:\n\n\"\nHi Christian,\nich habe diese Nachricht bestimmt 4 mal neu verfasst, weil ich nicht die richtigen Worte gefunden habe, um dir zu vermitteln bzw. um dir die Message richtig rüber zu bringen wie gut und besonders dein Kurs ist, hätte ich vorher gewusst wie der Kurs ist wieweit er mich bringt dann hätte ich auch 100€ ausgegeben und nicht gewartet bis er unter 30€ fällt, sorry aber dieses Niveau bin ich von meinen anderen ca. 20 - 30 Kursen, die ich hier gekauft habe nicht gewohnt, das bedeutet nicht das diese schlecht sind, doch klar ist das ich bei deinem Kurs die Videoreihe mir nur einmal anschaue und woanders 2 mal.\nDanke Christian\nGruß Martin\n\"",
      "target_audience": [
        "Alle, die gerne Programmieren lernen wollen und mit Java beginnen möchten",
        "Alle, die gerne Java lernen und verstehen möchten",
        "Alle, die gerne eigene Java Programme entwicklen möchten",
        "Alle, die gerne Java lernen möchten als Vorbereitung für Android App Programmierung",
        "Für Schüler, die gerne Java lernen möchten oder als Vorbereitung für Praktika",
        "Für Studenten, die Java lernen müssen um die Klausur zu bestehen",
        "Für Fernstudenten, die Java lernen müssen um die Klausur zu bestehen"
      ]
    },
    {
      "title": "C# Kursu: Yeni Başlayanlar için C# Programlama Dersleri",
      "url": "https://www.udemy.com/course/komple-uygulamali-programlama-egitimi-yeni-baslayanlar/",
      "bio": "Sıfırdan programlama mantığı dahil bilmeniz gereken en temel C# programlama derslerini kısa zamanda öğrenin!",
      "objectives": [
        "Yazılımcı olmak için gereken en önemli konuları öğrenip kariyerinize iyi bir başlangıç yapabileceksiniz.",
        "Web, masaüstü ya da mobile uygulama geliştirmek için gereken temeli fazlasıyla almış olacaksınız."
      ],
      "course_content": {},
      "requirements": [
        "Hiç bir ön bilgi gerekmez, sadece yazılım geliştirmeyi öğrenmek istemeniz yeterli!"
      ],
      "description": "Kursumuz sıfırdan başlayarak bir programcının bilmesi gereken en temel konuların yer aldığı, piyasadaki en güncel ve en öğretici kurs olduğunu bilmenizi isterim.Kurs boyunca tüm konuların anlatımında net ve yalın bir anlatım yapılmıştır.\nPeki neden Programlama Kursuna İhtiyaç Duyalım ;\nCiddi iş potansiyeline sahip olan bu alanda kendinizi geliştirip iyi bir kariyer sahibi olabilirsiniz.\nFreelancer olarak çalışıp kendi müşterilerinize hizmet sunabilirsiniz.\nKurumsal bir firmada iyi bir ücret karşılığında çalışabilirsiniz.\nHayal ettiğiniz projeleri gerçekleştirme fırsatına sahip olabilirsiniz.\nKurs programı programlama alanıyla uğraşmaya başlamış ancak neyi ne zaman öğrenmesi gerektiğini bilmeyen ya da bu alanla ilgili hiç bir fikri olmayan kişileri göz önüne alarak sıfırdan özenle hazırlanmıştır.\nProgramcı olmak aslına bakarsak zor değil ancak kaynak sıkıntısı gerçekten çoğu zaman sıkıntı oluyor ve aslında kolay olan bu süreci gerçekten çok zormuş gibi gösteriyor.\nKaynak sıkıntısı ; aslında neyi öğrenmemiz gerektiği , öğrenme sürecinde birbirinin eşdeğeri konular ya da yazılım araçlarının neler olduğu , en son çıkan teknolojiler neler gibi konuların bilinmediği üzerinedir. Bu gibi sıkıntılar öğrenme sürecini uzatıp çoğu zamanda bu işten vazgeçilmesine neden olmaktadır.\nBize sınırsız bilgi sunan İnternet ile kaynağa ulaşma sürecimiz çok çabuk ve kolay olmaktadır ancak bu başta güzel gözükse de binlerce kaynak içinden neyi öğrenmemiz gerektiğini seçmek gerçekten zor oluyor.Dolayısıyla çoğu zaman birbirine eşdeğer çoğu yazılım türleri ya da araçlarıyla boşu boşuna aylarca uğraşıyoruz.\nİçeriğini sürekli güncel tutacağım bu kurs sonunda siz de artık bir programcının bilmesi gereken en temel konuları öğrenmiş olacaksınız.\n\nKursumuzda C# programlama dilini anlatmaktayım.\nPeki neden C# dilini tercih etmekteyim ve neden size bu dili önermekteyim ?\nBir programlama dili seçerken en önemli kriterin bu dilin ne kadar çok kullanıldığı ve bu dil ile neler yapılabileceği olmalıdır.\nNe kadar çok kullanıldığı önemlidir; çünkü ne kadar yaygınsa o kadar çok yardım bulabilirsiniz ve C# dilinin yıllardır en popüler diller arasında olduğunu bilmenizi isterim.\nNeler yapılabileceği çok önemlidir. C# ile web siteleri, masaüstü uygulamaları ve hatta son zamanlarda çok popüler olan Xamarin yapısı ile geliştirdiğiniz mobil uygulama hem android hem ios cihazlarda çalışmaktadır. Sadece C# ile bunların hepsini yapabilirsiniz. Bu gerçekten heyecan verici. Artık Android için Java IOS için Swift öğrenmenize gerek yok.\nKurs Sonunda ; Programlama mantığını öğrenmiş olup, web , masaüstü ve mobil uygulama (android-ios) geliştirmeye hazır olacaksınız. Üstelik tüm bu süreçte yanınızda olmaya devam edeceğim.\nÜstelik takıldığınız her hangi bir konuda bana anında ulaşıp benden yardım talebinde bulunabilirsiniz. Sorularınızı mümkün olan en kısa sürede cevaplayacağımdan emin olabilirsiniz.\nZaman kaybetmeden bu kursa dahil olup bir programcının bilmesi gereken en güncel ve en temel konuları planlı bir şekilde öğrenin...!",
      "target_audience": [
        "Kod yazmayı öğrenmek isteyen herkes",
        "Web, masaüstü ya da mobile uygulama geliştirmek için programcılık altyapısı oluşturmak isteyenler"
      ]
    },
    {
      "title": "【1時間速習】イメージでわかる！C言語ソケット通信プログラミング",
      "url": "https://www.udemy.com/course/c-oxolcz/",
      "bio": "一時間でネットワークの基礎の解説からソケット通信プログラミングが出来るまでレベルアップ！",
      "objectives": [
        "C言語によるソケットプログラミング",
        "通信技術の基礎知識",
        "TCPとUDPのソケット通信プログラミング",
        "C言語を使ったHTTPサーバプログラミング"
      ],
      "course_content": {},
      "requirements": [
        "WindowsPCをお持ちの方",
        "C言語の基礎知識のある方"
      ],
      "description": "C言語プログラミングの中でも質問の多いソケット通信について、要点をまとめました。\nC言語に限らず一般的なネットワークの概念から、C言語によるHTTPサーバプログラミングまでを解説します。\n\n\nコースでは以下について学びます。\nソケット通信の概要\nTCP通信とUDP通信の違い\nTCP通信プログラミング\nUDP通信プログラミング\nHTTPサーバプログラミング\nWindows10へのC言語プログラミング環境の構築\n\n\n通信プログラミングは、基礎を学び終わったプログラマーなら誰でもぶち当たる壁です。\n通信プログラミングには通信の知識も必要になるので、プログラムだけ学んできた初心者には難しく感じ、挫折する人もいます。\nこのコースでは、通信の知識について、初心者でもわかりやすくイメージを使って解説しています。\nイメージとプログラムの流れをあわせて学べるので、C言語ソケット通信プログラムで関門となるbindやacceptの意味も理解できる内容になっています。\n\n\nソケット通信プログラミングができれば、初心者から脱出できたと言ってもらってもよいと思います。\nこのコースでソケット通信について学び、初心者を脱出の一助となれば幸いです。\n\n\n聞き取りにくいというコメントをいただきましたので、日本語字幕を追加しました！\n※このコース受講にはC言語プログラミングの基礎的な知識を必要とします。",
      "target_audience": [
        "C言語のソケット通信に興味のある方",
        "C言語初心者の方でレベルアップしたい方"
      ]
    },
    {
      "title": "【Vue.js2&Vue.js3対応】基礎から【Vuetify】を使った応用まで！ 超初心者から最短距離でレベルアップ",
      "url": "https://www.udemy.com/course/vuejs-basic/",
      "bio": "サンプル豊富で実践で使える知識をたっぷり身につけていきます。Vue.js2 初歩の初歩からVueRouter, Vuexまで。Vuetifyを使ってデザインも意識したアプリサンプルあり。Vue.js3のCompositionAPIも追加!",
      "objectives": [
        "VueJsを基礎からわかりやすく",
        "ES6の文法をメインに",
        "ディレクティブ・オプションAPI・リアクティブの使い方",
        "VueCLIやVueRouterを使ったモダン開発の方法",
        "Vuetifyを使ったマテリアルデザインの構築方法",
        "Vuexの考え方、よく使う記法",
        "VueJs3の扱い方",
        "CompositionAPIの扱い方"
      ],
      "course_content": {},
      "requirements": [
        "HTML/CSSの基本を知っている",
        "javascriptの基本を知っている",
        "インターネット接続可能なパソコン",
        "わからない事があったら遠慮なく質問する主体性"
      ],
      "description": "『Vue.js』はプログレッシブ(段階的)フレームワークと呼ばれ、\n\n\nはじめは小規模から、機能を追加することで大規模まで対応できるというつくりになっているのですが、\n\n\nいきなり小規模〜大規模を覚えようとすると、覚えることが多すぎて、\n\n\n『結局なにをどうすればいいのさ・・・』となってしまいがちです。\n\n\nそんな実体験もありこの講座では、\n\n\nはじめはちょっとずつ、\njQueryでもできることから取り組んで、\n『できる！』と思えるように時間をかけて進めるような構成にしています。\n\n\n\n\n初心者の視点で、\nちょっとでも『ん？』と思う箇所はできるだけ掘り下げ、\nスッキリした状態で先へ進めるように解説しています。\n\n\n\n\n簡単でもいいのでできるだけ手を動かしてアプリをつくりつつ、\n知識だけでなく実際に使えるようになるような構成を意識しております。\n\n\nVue.js2の方が初心者向けということもあり、\nセクション1～9まではVue.js2でレクチャーし、\nセクション10以降でVue.js3を解説しています。\n\n\n■更新情報\n2022/7 Vue.js3.2 script setupを追加しました。\n\n\n■講座内のサンプル\nタブメニュー\nモーダルウィンドウ\nカルーセル(スライドショー)\nフォーム\nボタンクリックでAjax画像取得(Vuetify)\nフォーム(Ajax + API)\n簡易読書管理アプリ(GoogleBooksAPI + VueCLI + VueRouter + Vuetify)\n\n\n\n\n■講座で扱っている内容\nディレクティブ(v-if/v-show/v-for/v-bind/v-on/v-cloak/v-text/v-html)\nオプションAPI(data/methods/computed/watch)\nリアクティブシステム(get/set)\nライフサイクルフック(created/mounted)\nトランジション(transition/transition-group)\n双方向データバインディング(v-model)\nAjax(fetch/async/await)\nLodash\nフォーム(v-model/computed(get/set)\nコンポーネント間通信(props down/event up)\nスロット(名前付き、スコープ付き)(v-slot)\nVuetify(CDN/NPM)\nVueCLI(SFC/MPA)\nVueRouter(SPA)\nVuex\nVue.js3対応(Provide/Inject, Teleport, CompositionAPI、合成関数)\nVue.js3.2 対応 script setup\n\n\n■収録時のバージョン\n・セクション1～9\nVue.js 2.6.11\nLodash 4.17.20\nVuetify 2.3.10\nMaterial design font 5.5.55\nVueCLI 4.5.6\nNode.js 12.16.2\nVuex 3.4.0\n\n\n・セクション10\nVue.js 3.0.0\nGoogleChrome拡張機能 Vue.js Devtools ver6.0.0 beta 15\nVueRouter 4.x\nVuex 4.x\n\n\n・セクション11\nVue.js 3.2",
      "target_audience": [
        "プログラミングに少しでも興味がある方",
        "ホームページにVueJsも含めたいと思っている方",
        "本やWebで勉強したけれどいまいち身につかないと感じている方",
        "モダンなフロントエンドに触れたい方"
      ]
    },
    {
      "title": "Curso Java SE, Java EE con MySQL - De básico hasta avanzado",
      "url": "https://www.udemy.com/course/java-servlets-jsp/",
      "bio": "Curso Java paso a paso en Windows y Linux. Crea aplicaciones web con base de datos MySQL y publícalas en Internet",
      "objectives": [
        "Aprender los fundamentos del lenguaje de programación Java SE utilizando Windows.",
        "Aprender la Programación Orientada a Objetos.",
        "Aprender desarrollo web con Java EE (Servlets y JSPs) utilizando Linux.",
        "Aplicar el patrón de diseño MVC en tus aplicaciones web.",
        "Implementar seguridad a tus aplicaciones web con el estándar de Java EE.",
        "Comprar tu propio servidor VPS (Virtual Private Server) para publicar tus aplicaciones web en Internet.",
        "Instalar y configurar Apache Tomcat en un servidor Linux.",
        "Registrar tu propio dominio con el proveedor de hosting Godaddy y configurarlo con tu servidor Linux.",
        "Desarrollar una aplicación web para publicar ofertas de empleos para practicar todos los conceptos aprendidos durante el curso."
      ],
      "course_content": {},
      "requirements": [
        "Computadora con Windows/Linux/Mac.",
        "Diseño web básico con HTML y CSS.",
        "Y lo más importante. ¡ Muchas ganas de aprender Java !"
      ],
      "description": "Bienvenido al tu curso \"Java SE, Java EE (Web) con MySQL - De básico hasta avanzado\", el curso en el que aprenderás a programar desde cero con el lenguaje de programación Java SE. Comenzaremos aprendiendo las bases del lenguaje de programación Java (NIVEL BASICO), continuaremos viendo el desarrollo de aplicaciones web (NIVEL INTERMEDIO) y terminarás aprendiendo a configurar tu propio servidor Linux Ubuntu Server con Apache Tomcat con tu propio dominio para publicar tus aplicaciones web (NIVEL AVANZADO).\n¿Qué incluye el curso?\nMás de 40 horas de clases en video donde se explica paso a paso los diferentes temas.\nLas clases donde se explican los diferentes conceptos son apoyadas con diapositivas para reforzar más el aprendizaje.\nEn las clases de  programación se proporciona todo el código fuente para que lo puedas utilizar como base para tus propios proyectos.\nDesarrollo de una aplicación web para poner en práctica todos los conceptos aprendidos durante el curso.\nSoporte por parte del instructor para preguntas o dudas relacionadas con temas del curso, las cuales serán respondidas en menos de 24 Hrs.\nAmpliación de temas para que el curso sea mucho mas completo sin que pagues nada adicional por dichos cambios.\n¿Porqué estoy compartiendo este curso contigo?\nEn mi primer trabajo como desarrollador de software me pidieron desarrollar una aplicación web con Java. En aquel tiempo no había mucha documentación que me ayudara a avanzar rápido con el desarrollo de esta aplicación. Me hubiera ayudado mucho un curso como este que te estamos compartiendo, sobre todo por como esta estructurado. El curso te explica todos los conceptos que pudieras necesitar en un futuro para crear cualquier tipo de aplicación web con Java. Por eso estoy compartiendo este curso, para que tú avances más rápido y brinques rápido la barrera de aprendizaje para empezar.\nNo esperes más, comienza a aplicar los conocimientos que ya tienes de Java para crear aplicaciones web dinámicas.",
      "target_audience": [
        "Este curso está dirigido a personas que quieren iniciar a desarrollar aplicaciones con Java SE."
      ]
    },
    {
      "title": "Scripting Shell/Bash - Automatisez votre système Linux !",
      "url": "https://www.udemy.com/course/scripting-shellbash-automatisez-votre-systeme-linux/",
      "bio": "Tout connaître du scripting bash et shell pour garder la main sur votre système Linux",
      "objectives": [
        "Qu’est-ce qu’un script ?",
        "Comprendre les composants principaux d'un script",
        "Être capable d'exécuter un script",
        "Comprendre ce qu'est le Shebang",
        "Savoir créer et utiliser des variables de manière conventionnelle",
        "Mettre en place des tests et des conditions dans vos scripts",
        "Utiliser les boucles",
        "Comprendre comment se servir des paramètres de position",
        "Savoir passer des arguments à son script",
        "Permettre à l'utilisateur de saisir des données qui vont être réutilisées par la suite",
        "Comprendre les codes retours et les sorties du script",
        "Savoir mettre en place et utiliser des fonctions",
        "Comprendre comment utiliser les WildCards",
        "Utiliser le Case",
        "Générer des logs",
        "Savoir comment débuger vos scripts"
      ],
      "course_content": {
        "Les commandes de base d'un script shell": [
          "Présentation de la formation",
          "Exécution d'un script - Shebang et commentaires",
          "Les variables",
          "Mise en place de tests",
          "Les conditions - If, Elif, Else",
          "Les boucles - For",
          "Les variables de positionnement - $0 $1 $2 ... $n",
          "Cas concret - Utilisation des conditions et des variables de positionnement",
          "Permettre à l'utilisateur de saisir des données - commande read",
          "La boucle While",
          "Les commandes de base d'un script shell",
          "Travaux pratiques sur les commandes de base !",
          "Script compteur",
          "Jeu du plus et du moins"
        ],
        "Scripting intermédiaire": [
          "Les codes erreurs (exit code)",
          "Le ET ( && ) et le OU ( || )",
          "Les fonctions",
          "Exercice 1 - Verification de l'existence de fichiers",
          "Scripting intermédiaire",
          "Les wildcards ( ?, * [] )",
          "Les wildcards"
        ],
        "Scripting avancé": [
          "Une alternative au if - Le case",
          "Exercice - Utilisation du case",
          "Les logs - Générer ses propres logs",
          "Utilisation de bash avec YAML",
          "Commande read avancée - Stocker des valeurs dans un tableau",
          "Actions avancées sur les variables - unset, export, typset, expr et cut",
          "La commande sed - suppression, substitution et translittération",
          "Scripting avancé"
        ],
        "Exercices - Gestion des utilisateurs": [
          "Exercice 1 - Vérification de l'existence d'un utilisateur",
          "Exercice 2 - Vérification de l'existence d'un groupe",
          "Exercice 3 - Création et suppression d'un utilisateur",
          "Exercice 4 - Création et suppression d'un groupe"
        ],
        "Exercices - Gestion des fichiers": [
          "Exercice 1 - Création et suppression de fichiers",
          "Exercice 2 - Modification des droits de propriété",
          "Exercice 3 - Script capable de modifier les droits sur le fichier",
          "REDUCTION EXCEPTIONNELLE (90%) - Cours GNU/Linux de débutant à confirmé"
        ]
      },
      "requirements": [
        "Être motivé !",
        "Avoir un niveau minimum de débutant en utilisation de GNU/Linux",
        "Pas de pré-requis nécessaires en développement et en programmation"
      ],
      "description": "Vous vous êtes toujours demandés comment automatiser certaines tâches de votre système GNU/Linux ? Vous avez toujours eu envie d'en savoir plus sur le scripting shell ?\nCe cours est fait pour vous !\nVous y apprendrez comment effectuer du développement en Bash grâce à un découpage du cours en trois sections principales :\n\n\nLes bases du scripting Shell : permet à ceux qui n'ont jamais développé de pouvoir comprendre le fonctionnement du scripting et d'être capable de mettre en place leurs premiers scripts grâce à une méthode pas à pas et à quelques exercices et quizz permettant d'asseoir les connaissances acquises.\nVous y verrez notamment à quoi correspond le Shebang, comment exécuter vos scripts, et qu'est-ce que sont les variables. Vous mettrez ensuite en place vos premiers tests avec les conditions If et les boucles For et While. Vous pourrez demander à l'utilisateur de saisir des données que votre script sera capable d'interpréter et d'utiliser par la suite.\n\n\nLe scripting Shell intermédiaire : permettra d'utiliser à bon escient les codes erreurs (exit code) et les fonctionnalités accessibles grâce à l'utilisation du ET (&&) et du OU (||). Vous mettrez ensuite en place vos premières fonctions notamment lors d'un exercice vérifiant l'existence d'un fichier, et vous utiliserez les wildcards (aussi appelés métacaractères) pour rendre vos scripts beaucoup plus puissants !\n\n\nLe scripting avancé : vous donnera les outils pour utiliser du code plus performant, par exemple grâce au case. Vous serez également capable de générer vos propres logs et d'utiliser le langage YAML pour les fichiers de configuration. Enfin vous en verrez d'avantages sur les variables (unset, export, typeset, readonly, etc...) et sur la commande sed.\n\n\nPlusieurs exercices cloturent ce cours afin de mettre en pratique l'ensemble des éléments que vous avez acquis lors de cette formation.",
      "target_audience": [
        "Les curieux et les débutants",
        "Quiconque souhaite apprendre à automatiser son système GNU/Linux",
        "Technicien, administrateur et ingénieur système et réseau",
        "DevOPS"
      ]
    },
    {
      "title": "C# od podstaw - intensywny kurs programowania",
      "url": "https://www.udemy.com/course/kurs-c-sharp-od-podstaw/",
      "bio": "Naucz się programować aplikacje! Programowanie w praktyce, oparte na przykładach",
      "objectives": [
        "Programować aplikacje w języku C#",
        "Praktyczne podejście do programowania",
        "Na czym to całe programowanie polega, w C# i nie tylko",
        "Do czego służy C#, co można dzięki niemu stworzyć",
        "Dobre praktyki pisania kodu",
        "Programowanie obiektowe",
        "Pełne zrozumienie wszystkich prezentowanych zagadnień",
        "Jak się dalej rozwijać w tym kierunku, gdzie szukać informacji"
      ],
      "course_content": {},
      "requirements": [
        "Znajomość języka angielskiego na podstawowym poziomie"
      ],
      "description": "Do kursu zapraszamy zarówno obecnych programistów, którzy chcą dobrze poznać język C#, jak i osoby, które do tej pory nie miały w ogóle do czynienia z programowaniem a chcą poznać, czym jest programowanie i nauczyć się tworzyć aplikacje.\n\nJęzyk C# jest obecnie bardzo pożądany na rynku pracy. Jest to nowoczesny język obiektowy stworzony i stale rozwijany przez Microsoft, dzięki któremu można stworzyć, co tylko się zechce - czy będą to aplikacje desktopowe, czy może webowe, mobilne, gry, serwisy, co tylko sobie wymarzysz ;)\n\nW kursie poznasz wszystkie zagadnienia dotyczące podstaw języka C#, dzięki którym będziesz tworzyć własne programy oraz które pozwolą Ci na dalszy rozwój w tym kierunku. Kładę bardzo duży nacisk na praktykę, większość zagadnień jest prezentowana na przykładach, a pod koniec kursu - w sekcji projektowej - stworzymy od początku do końca 2 projekty użytecznych aplikacji.\n\nTen kurs będzie Twoim dobrym startem w stronę nowej kariery jako software developer. Zapraszam Cię do kursu i mam nadzieję, że dzięki niemu pokochasz programować tak jak ja i odmienisz swoje życie.\n\nLista rzeczy, których nauczam w kursie (te bardziej istotne):\n- Co to programowanie\n- Na czym to polega\n- Program, jak działa\n- Zmienne, typy, nazwy\n- Decyzje\n- Pętle\n- Operacje\n- Debugowanie\n- IDE, Visual Studio\n- IntelliSense\n- Funkcje\n- Klasy\n- Obiekty\n- Klasy generyczne\n- Interface\n- Properties\n- Default\n- Nameof\n- Typeof\n- Rzutowanie zmiennych\n- Parsowanie\n- Operator is\n- Konkatenacja stringów\n- Parametry, argumenty\n- Konstruktory\n- Access modifiers\n- Klasy/funkcje statyczne\n- Wyjątki\n- ... i wiele wiele innych",
      "target_audience": [
        "Osoby chcące nauczyć się programowania w języku C#",
        "Początkujący programiści chcący się nauczyć lub doszkolić w zakresie języka C#",
        "Osoby chcące sprawdzić, na czym polega programowanie i czy jest to coś, czym chciałyby się zajmować"
      ]
    },
    {
      "title": "Python per Principianti Assoluti! Il Corso Pratico",
      "url": "https://www.udemy.com/course/python-corso-pratico-di-programmazione/",
      "bio": "[Aggiornato Laboratorio 2024] Il Corso Introduttivo per chi parte realmente da 0 nel mondo della Programmazione! By EHI",
      "objectives": [
        "Le basi del linguaggio di programmazione PYTHON",
        "Come realizzare semplici programmi",
        "Quali sono i COSTRUTTI di base di PYTHON",
        "Poter approfondire successivamente la materia",
        "I concetti base della programmazione ad OGGETTI",
        "Le basi della programmazione di RETE in PYTHON",
        "Come interagire con un DATABASE tramite PYTHON"
      ],
      "course_content": {
        "Introduzione": [
          "Struttura del corso",
          "Materiale di Supporto allo Studio",
          "Note Supporto allo Studio",
          "Spirito di condivisione tra studenti",
          "Come ottenere il rimborso del corso"
        ],
        "I Concetti di Base": [
          "Installazione di PYTHON",
          "Assegnamento di una variabile",
          "Tipo di una variabile",
          "Best practice assegnamento nome variabile",
          "Keyword riservate",
          "Gli operatori",
          "Le espressioni",
          "Input da tastiera",
          "Commentare il codice",
          "Funzione Type - Esercizio 1",
          "Funzione Print - Esercizio 2",
          "Operatori aritmetici - Esercizio 3",
          "Concatenazione tra stringhe - Esercizio 4"
        ],
        "I costrutti di Selezione - IF/ELIF/ELSE": [
          "Valori booleani",
          "Operatori di confronto",
          "Operatori logici",
          "Costrutto IF",
          "IF multipli",
          "Costrutto IF - ELSE",
          "Costrutto ELIF",
          "IF nested",
          "Costrutto TRY - EXCEPT",
          "Valori Pari e Dispari - Esercizio 1",
          "Indovina la figura geometrica - Esercizio 2",
          "Tipologia di triangolo - Esercizio 3"
        ],
        "I costrutti di Iterazione - WHILE/FOR": [
          "Incremento-Decremento pattern comune",
          "Costrutto WHILE - Teoria",
          "Costrutto WHILE - Pratica",
          "Condizione while TRUE",
          "Costrutto BREAK-CONTINUE",
          "Costrutto FOR",
          "Contatore numeri lista - Esercizio 1",
          "Tabellina del dieci - Esercizio 2",
          "Stampa caratteri - Esercizio 3",
          "Calcolo del fattoriale - Esercizio 4",
          "Numeri pari e numeri dispari - Esercizio 5"
        ],
        "Le Funzioni": [
          "Le funzioni",
          "Funzioni Built-in",
          "I moduli - Modulo Math - Random",
          "Definizione di una funzione",
          "Funzione di funzione",
          "Argomenti di una funzione",
          "Variabile come argomento di funzione",
          "Valore di ritorno - Esercizio 1",
          "Funzione con 2 parametri - Esercizio 2",
          "Funzione somma - Esercizio 3",
          "Funzione valore assoluto - Esercizio 4",
          "Funzione elevamento a potenza - Esercizio 5"
        ],
        "Le Stringhe": [
          "Stringhe e Indici",
          "Funzione LEN()",
          "Scorrere elementi di una stringa - Teoria",
          "Scorrere elementi di una stringa - While",
          "Scorrere elementi di una stringa - For",
          "Contatore caratteri stringa",
          "Confronto tra stringhe",
          "Stringhe e funzioni Built-in",
          "Cercare elementi di una stringa",
          "Slicing di una stringa - Esercizio 1",
          "Splitting di una stringa - Esercizio 2",
          "Concatenazione tra stringhe - Esercizio 3"
        ],
        "Le Liste": [
          "Le liste - Teoria 1",
          "Le liste - Teoria 2",
          "Scorrere elementi di una lista",
          "Aggiornare elementi lista",
          "Lista - funzioni Built-in",
          "Eliminare elementi lista",
          "Lista - Sum() - Max() - Min()",
          "Ordinare elementi lista - Esercizio 1",
          "Rimuovere duplicati lista - Esercizio 2",
          "Verifica presenza elemento - Esercizio 3",
          "Slicing di una lista - Esercizio 4",
          "Lista - Potenza del due - Esercizio 5"
        ],
        "Le Tuple": [
          "Le tuple - Teoria 1",
          "Le tuple - Teoria 2",
          "Scorrere/Cercare elementi tupla - Esercizio 1",
          "Aggiungere elementi tupla - Esercizio 2",
          "Cancellare elemento tupla - Esercizio 3",
          "Slicing di una tupla - Esercizio 4",
          "Concatenazione tra tuple - Esercizio 5",
          "Confronto elementi tupla - Esercizio 6"
        ],
        "I Dizionari": [
          "I dizionari",
          "Inserimento elementi",
          "Ricerca dei VALORI",
          "Ricerca delle CHIAVI",
          "Conteggio vocali e consonanti - Teoria",
          "Conteggio vocali e consonanti - Pratica",
          "Il metodo GET()",
          "Scorrere elementi del dizionario",
          "Estrarre KEY/VALORE - Funzioni Built-in - Esercizio 1",
          "Rimuovere elementi - Funzioni Built-in - Esercizio 2",
          "Rimuovere elementi - keyword DEL - Esercizio 3",
          "Elevamento alla seconda - Esercizio 4"
        ],
        "Le Classi": [
          "Le classi - Teoria",
          "Le classi - Pratica",
          "Elementi di una classe",
          "Oggetti e ciclo di vita",
          "Creazione di più oggetti - Teoria",
          "Creazione di più oggetti - Pratica",
          "Ereditarietà - Teoria",
          "Ereditarietà - Pratica",
          "Classe Persona - Esercizio 1",
          "Classe Robot - Esercizio 2"
        ]
      },
      "requirements": [
        "Aver voglia di imparare. E una connessione Internet!"
      ],
      "description": "Perchè questo corso è differente? Il Motivo è semplice! Esistono due modi per imparare un linguaggio di programmazione:\nPartire dalla TEORIA. Subire quindi decine e decine di CONCETTI TEORICI e successivamente mettere in pratica quanto appreso.\nPartire dalla PRATICA. Iniziare subito a svolgere ESERCIZI PRATICI così che la TEORIA diventi quasi una diretta conseguenza.\nEcco, io seguirò ESCLUSIVAMENTE il secondo approccio.\nAll'interno del corso saranno presenti poche SLIDE, quelle necessarie e realmente utili all'apprendimento di PYTHON.\nE poi ci focalizzeremo sugli esercizi...molti esercizi...saranno presenti per ogni SEZIONE.\nIl mio OBIETTIVO è: renderti fin da subito AUTONOMO. Così che tu possa già scrivere i tuoi PRIMI PROGRAMMI.\nPer cui: se cerchi un corso con un approccio teorico, rigoroso e accademico, allora questo NON è il corso giusto per te!\nViceversa: se cerchi un corso dal taglio quasi esclusivamente PRATICO, allora non perdere altro tempo e acquistalo subito! Non rimarrai deluso!\nATTENZIONE: partiremo da ZERO! Proprio dalla basi. Questo corso è per PRINCIPIANTI  ASSOLUTI. Consiglio agli studenti più esperti di NON acquistare questo corso.\nAdesso parliamo della struttura:\nIntroduzione.\nI Concetti di Base.\nI Costrutti di Selezione. IF/ELIF/ELSE.\nI Costrutti di Iterazione. WHILE/FOR.\nLe Funzioni.\nLe Stringhe.\nLe Liste.\nLe Tuple.\nI Dizionari.\nLe Classi.\nI File.\nPython e le Reti.\nPython e i Database.\nIl corso ti introdurrà a tutti questi ARGOMENTI.\nInoltre: oltre 100 risorse scaricabili e tutte le SLIDE del corso in formato PDF!\nCos'altro stai aspettando? ! Ti aspetto!",
      "target_audience": [
        "Chiunque abbia sentito parlare di PYTHON e voglia approfondire questo linguaggio di programmazione"
      ]
    },
    {
      "title": "Kurs JavaScript - Szybki Start",
      "url": "https://www.udemy.com/course/kurs-javascript-szybki-start/",
      "bio": "Wstęp do programowania w języku JavaScript",
      "objectives": [
        "Omówienie zastosowań języka JavaScript",
        "Fundamentalne pojęcia związane z programowaniem",
        "Najważniejsze konstrukcje jak zmienne, pętle czy instrukcje warunkowe",
        "Jak skonstruowane są strony WWW",
        "Pracę w narzędziach developerskich przeglądarki",
        "Konfigurację edytora kodu i środowiska",
        "Wstęp do jQuery i praktyczne przykłady"
      ],
      "course_content": {
        "JavaScript - Szybki Start": [
          "Czym jest programowanie w JavaScript?",
          "Podstawowe koncepcje języka JavaScript",
          "Obiektowy Model Dokumentu",
          "Korzystanie z jQuery",
          "Programowanie Obiektowe",
          "Praktyczny Projekt i ES6"
        ]
      },
      "requirements": [
        "Znajomość technologii internetowych",
        "Podstawowa znajomość HTML i CSS"
      ],
      "description": "Welcome to the introduction to JavaScript! In this material you will get acquainted with the basics of the most popular programming language in the world! If you are just starting your programming adventure, the course you have in front of you is a great introduction that will allow you to get to know the most important JavaScript structures and capabilities without going into advanced concepts that are difficult to understand for beginners.\nWe prepared this course so that it would be the easiest and most pleasant introduction to the world of JavaScript technology and creating functional websites and websites. However, JavaScript is not just a page, so the material has been prepared in such a way that you can, after assimilating the necessary basics, also take care of the creation of applications for phones or desktops!\nIn the course you will also find an introduction to jQuery, thanks to which you will be able to see how after you learn the basics of JavaScript you will be able to speed up and simplify your work! All the discussed constructions will be processed using practical examples that will allow you to prepare an interesting menu with tabs or handle the form on the website.\nThis material has been prepared for people who are just starting their adventure with JavaScript and want to get the necessary knowledge to start as soon as possible. This is not another course that has to teach you JavaScript from AZ in tens of hours. In our assessment, such materials may discourage beginners and are overloaded with unnecessary information.\nJust like learning a foreign language - you can learn grammar, syntax, spelling and spend years at school, or just go abroad for a long vacation and learn a language through conversion, as you use it in reality. The course that you have in front of you is fully compatible with this second approach, which in our opinion allows for a much more effective learning. You will see that it can also be extremely pleasant!\nTherefore, we invite you to familiarize yourself with the course!\nThe author of the course is Piotr Palarz.",
      "target_audience": [
        "Każdy, kto chciałby poznać język JavaScript"
      ]
    },
    {
      "title": "Fundamentos de Programación",
      "url": "https://www.udemy.com/course/fundamentos-de-la-programacion/",
      "bio": "Aprende las Bases de la Programación en 9 lenguajes a la vez: Java, Python, Go, C++, PHP, Ruby, C#, JavaScript y C",
      "objectives": [
        "Manejar las bases de la programación en Java, C, Python, Go, Ruby, C++, JavaScript, PHP y Ruby",
        "Estarán listos para adentrarse de modo avanzado a CUALQUIER área del desarrollo de software: programación de apps, juegos, web, etc.",
        "Buenas prácticas para escribir código"
      ],
      "course_content": {},
      "requirements": [
        "El curso explica los conceptos en profundidad desde la base, no es necesario ningún conocimiento previo. TODO se explica en el Curso",
        "Saber utilizar un PC a nivel básico como por ejemplo, saber instalar programas",
        "Sobre todo tener ganas de aprender !"
      ],
      "description": "Actualizado en agosto de 2023\nEn este curso de Fundamentos de Programación aprenderás de forma básica y muy completa las nociones más elementales sobre el desarrollo de software. Este curso dará un recorrido completo por todos los conceptos más básicos para aprender a programar, lo cual te permitirá entender cualquier lenguaje gracias a la visión global que adquirirás. De hecho a lo largo del curso aprenderás cámo aplicar cada idea en 9 lenguajes simultáneamente.\nAprenderás las bases de la programación en varias de las principales áreas de desarrollo de software:\nEl desarrollo web\nEl desarrollo de apps para dispositivos móviles\nEl desarrollo de aplicaciones de escritorio\nTe animo a que veas el temario y cualquiera de las clases que estén accesibles antes de comprar el curso y seguro que desearás ver el resto del curso.\nLos lenguajes que veremos en este curso son los siguientes:\nPython\nRuby\nJavaScript\nPHP\nJava\nGo\nC\nC++\nC#\nAdemás contarás con material didáctico descargable, ejercicios propuestos y ejemplos de uso en software de la vida real, para que entiendas cómo se han desarrollado tales programas y sepas tú también cómo hacerlo.\nEl curso está dividido en varios bloques:\n\n\nIntroducción a la programación\n\nEn esta sección entenderás qué es programar, qué son los lenguajes de programación, qué diferentes tipos de lenguajes hay, cómo interactuan con el procesador de la máquina, sabrás lo que se cuece realmente por dentro, qué áreas del desarrollo existen y en qué lenguajes se pueden llevar a cabo, así como las diferentes herramientas que puedes usar para programar en cada uno de los 9 lenguajes que se abordan en el curso.\n\n\nManejo de Datos\nAquí aprenderás los tipos de datos que hay, cómo se administran en cada lenguaje, cómo hacer operaciones con los valores y recursos avanzados como los arrays y las matrices de varias dimensiones para almacenar datos en masa.\n\n\nProgramación Estructurada\nEn este sección entenderás cómo funciona el flujo de ejecución de las instrucciones escritas en el código del programa, de eso modo aprenderás a tomar el control de la ejecución y decidir qué debe hacer tu programa en cada momento.\n\n\n\nProgramación Modular\nDescubre las formás más básicas de agrupar el código en bloques independientes para tener todas las instrucciones mejor organizadas y de forma más optimizada. Eso te ayudará a mantener y visualizar mejor el proceso de ejecución.\n\n\nProgramación Orientada a Objetos (POO)\nNo sabes programar si no entiendes los Objetos, qué son, cómo funcionan, cómo crearlos y administrarlos, así como establecer Herencia entre Objetos y el uso de Polimorfismo. En esta sección te mostraré todos estos puntos con varios ejemplos prácticos.\n\nTodos los conceptos se explican en detalle, paso a paso y entendiendo el por qué de cada cosa. Así podrás sentar las bases desde un principio en tu desarrollo profesional. Este curso te permitirá expandirte a cualquier área del desarrollo de software.\n¿Verdad que es genial? Pues lo mejor de todo es que está a tu alcance.\nCompra el curso y disfruta de todo lo que te está esperando.\nNos vemos!\nJosé Javier Villena",
      "target_audience": [
        "Estudiantes de Programación",
        "Estudiantes de Ingeniería de Sistemas",
        "Estudiantes de Desarrollo de Aplicaciones Multiplataforma",
        "Estudiantes de Desarrollo de Aplicaciones Web",
        "Estudiantes de Desarrollo de Videojuegos",
        "Cualquier persona interesada en la Programación"
      ]
    },
    {
      "title": "Python : Sıfırdan İleri Seviyeye - Etik Hacker Örnekleriyle",
      "url": "https://www.udemy.com/course/python-sifirdan-ileri-seviyeye/",
      "bio": "Python ve programlamayı sıfırdan ileri seviyeye öğrenin! Tüm öğrendiklerinizi Etik Hacker araçları yazarak pratik yapın!",
      "objectives": [
        "Sıfırdan Python dilinde program yazmak",
        "Etik Hacker araçları yazmak",
        "Obje odaklı programlama",
        "Siber güvenlik temelleri ve ileri seviye işlemler",
        "Exploit geliştirme"
      ],
      "course_content": {
        "Hoşgeldiniz": [
          "Giriş",
          "Kurs Kullanım Kılavuzu"
        ],
        "Kurulumlar": [
          "Kurulumlar Giriş",
          "Anaconda Yüklemek (Windows)",
          "Anaconda Yüklemek (Mac)"
        ],
        "Veri Yapıları ve Tipleri": [
          "Veri Tipleri Giriş",
          "Numaralar",
          "Değişkenler",
          "Defterleri İndirmek",
          "Değişkenler ve Genel GitHub Link",
          "String",
          "Strings GitHub Link",
          "String İleri Seviye",
          "String İleri Seviye GitHub Link",
          "Değişken Özellikleri",
          "Listeler",
          "Listeler İleri Seviye",
          "Listeler GitHub Link",
          "Dictionary",
          "Dictionary GitHub Link",
          "Set ve Farklı Oluşturma Yöntemleri",
          "Set GitHub Link",
          "Tuple",
          "Tuple GitHub Link",
          "Boolean",
          "Boolean GitHub Link",
          "Sınav 1",
          "Sınav 1 GitHub Link",
          "Sınav 1 Çözümleri",
          "Sınav 1 Çözümleri GitHub Link"
        ],
        "Kontroller ve Döngüler": [
          "Kontroller ve Döngüler Giriş",
          "Mantıksal Kullanımlar",
          "Comparison GitHub Link",
          "If Kontrolleri",
          "If Kontrolleri Devam",
          "If Pratik Kullanımlar",
          "If Kontrolleri GitHub Link",
          "For Döngüsü",
          "For Döngüsü Pratik Kullanımlar",
          "For Döngüsü GitHub Link",
          "Break Continue Pass",
          "Break Continue Pass GitHub Link",
          "While Döngüsü",
          "While Döngüsü GitHub Link"
        ],
        "Hayat Kurtaran Bilgiler": [
          "Hayat Kurtaran Bilgiler Giriş",
          "Faydalı İşlemler",
          "Zip ve Random",
          "Listeler İleri Seviye",
          "Faydalı İşlemler GitHub Link",
          "Sublime Text İle Çalışmak (Windows)",
          "Komut İstemcisi (Windows)",
          "Sublime Text (MAC)",
          "Terminal (MAC)",
          "Sınav 2: Adam Asmaca Oyunu",
          "Sınav 2 Çözüm",
          "Sınav 2 Çözüm Devamı",
          "Adam Asmaca GitHub Link"
        ],
        "Fonksiyon ve Methodlar": [
          "Fonksiyon ve Methodlar Giriş",
          "Fonksiyon Nedir?",
          "Girdi Çıktı İşlemleri",
          "Fonksiyon İleri Seviye",
          "Fonksiyon GitHub Link",
          "Fonksiyon Pratik Yöntemler",
          "Lambda",
          "Fonksiyon Pratik Yöntemler GitHub Link",
          "Scope",
          "Scope GitHub Link",
          "Decorator",
          "Decorator GitHub Link",
          "Sınav 3: Hesap Makinası",
          "Sınav 3: Çözüm",
          "Hesap Makinası GitHub Link"
        ],
        "Obje Odaklı Programlama (OOP)": [
          "OOP Giriş",
          "Class Nedir?",
          "Methodlar",
          "Sınıflar Pratik Kullanım",
          "Inheritance",
          "Polymorphism",
          "OOP Sınıflar GitHub Link",
          "Özel Methodlar",
          "Özel Methodlar GitHub Link",
          "Hataları Ele Almak",
          "Hataları Ele Almak GitHub Link",
          "Type Annotation"
        ],
        "Modüller ve Paketler": [
          "Modüller Giriş",
          "Kütüphaneleri Kullanmak",
          "ModulesPackages GitHub Link",
          "Kendi Modülümüzü Yazmak",
          "Kendi Paketimizi Oluşturmak",
          "Imported vs Direct",
          "Imported vs Direct GitHub Link"
        ],
        "Sanal Makina Kurulumları": [
          "Sanal Makina Giriş",
          "Sanal Makina Nedir?",
          "Virtualbox Yüklemek (Windows Kullanıcıları İçin)",
          "Virtualbox Yüklemek (Mac Kullanıcıları İçin)",
          "Kali Linux İndirmek",
          "Kali Linux İndirme Linkleri",
          "Kali Linux Kurmak",
          "Kali Linux Yükleme Sorunu Çözümleri (Windows)",
          "Manual .iso Yüklemek (Sorun Yaşayanlar İçin)",
          "Yükleme Sorunlarını Çözmek (MAC)",
          "Kali Linux Yükleme Sorun Çözümleri",
          "Windows Kurulumu ve Problem Çözümleri",
          "Snapshot Almak"
        ],
        "Kali Linux Temel İşlemler": [
          "Kali Linux Giriş",
          "Kali Linux Genel Görünüm",
          "Kali Linux Temel Komutlar",
          "Taşıma İşlemleri",
          "Yetki Farklılıkları",
          "Linux Klasörleri",
          "Linux Paket Yöneticileri",
          "Nano",
          "Şifre Değiştirmek",
          "PyCharm Yüklemek"
        ]
      },
      "requirements": [
        "Herhangi bir ön bilgi gerekmemektedir",
        "En az 4GB Ram'e sahip bir bilgisayar"
      ],
      "description": "Python Kursu'na Hoşgeldiniz!\nSıfırdan Python ile programlama öğrenmek istiyorsanız doğru yerdesiniz!\nBu kursta tamamen sıfırdan başlayarak detaylı bilgilere kadar Python ile programlama öğrenceğiz. Kursun ilk yarısında Python'un temellerini ve detaylarını hemen ardından ise bu öğrendiklerimizi kullanarak hacker'ların kullandığı saldırıları, bu saldırıları yaparken yazdıkları araçların nasıl programlandığını ve tabii ki kendinizi bu saldırılara karşı korumayı öğreneceksiniz. Bu kursu almak için öncesinde herhangi bir programlama veya siber güvenlik bilgisi sahibi olmanıza gerek yok! Kurs içerisinde en son teknoloji olan Python 3.9 versiyonu ile çalışılmaktadır.\nHacker'ların saldırılarını yaparken kullandıkları araçları nasıl yazdıklarını öğrenmek ve kendimizi bunlardan nasıl koruyacağımızı öğrenmek istiyorsanız doğru yerdesiniz!\nEğer programlama ile ilgilenmiyorsanız sadece Etik Hacker Olma hayaliniz varsa o zaman Atıl Samancıoğlu tarafından verilen Etik Hacker Olma Kursu'na bakmanızı öneririz!\nEğitim Udemy'de 400.000+ öğrenciye Etik Hacker'lık & Mobil Geliştirme dersleri veren ve aynı zamanda Boğaziçi Üniversitesi'nde Mobil Geliştirme Eğitmeni olan Atıl Samancıoğlu tarafından veriliyor! Siz de programlama ve bilişim güvenliği dünyasına adım atmak istiyorsanız aşağıdaki detaylı açıklamayı inceleyip kursa hemen kayıt olabilirsiniz.\nAşağıda kurs boyunca işleyeceğimiz konulardan örnekler görebilirsiniz:\nPython Programlama\nPython Temelleri\nObje Odaklı Programlama (OOP)\nFarklı Ortamlarda Yazılım Geliştirme\nSocket\nScapy\nLinux Temelleri\nSanal Makina Kullanımları\nMac Değiştirici Yazılımı\nOrtadaki Adam Saldırı Araç Yazımı ve Önlemleri\nZararlı Program Yazılımı ve Önlemleri\nBackdoor Yazılımı ve Önlemleri\nKeylogger Yazılımı ve Önlemleri\nBuffer Overflow\nExploit Geliştirme\nİçerik\nBu kurs sıfırdan Python ile programlama öğrenmek isteyenler için ideal. Daha önce herhangi bir programalama veya bilişim güvenliği tecrübeniz yok ise hiç problem değil. En temel konulardan başlayarak en detaylı konulara ilerleyeceğiz. Kurs sonunda ise Python ile kendi etik hacker araçlarınızı yazacak düzeye geleceksiniz.\nAlakalı konularda yapacağımız derslerde ARP, MAC, Keylogger, Trojan, Backdoor, Packaging, Scapy, Socket, Regex, Persistence, Buffer Overflow, Exploit Geliştirme gibi kavramların ne olduğunu ve nasıl kullanıldığını öğreneceğiz. Her derste teoriyi göz ardı etmemek suretiyle devamlı pratik yaparak bilgilerimizi güncel tutacağız! Kurs içerisinde sınavlar, ödevler sizi beklemektedir. Aynı zamanda aklınızda oluşan tüm soru işaretlerini soru & cevap kısmından eğitmene sorabileceğinizi de belirtmek isteriz!\nÖnemli Uyarı: Bu kursta özellikle de Etik Hacker Olma araçları kısmında öğretilen tüm bilgilerin amacı etik hacker, siber güvenlik yetkilileri yetiştirip; kişileri ve kurumları bu saldırılardan korumaktır. Tüm öğrenciler kursta öğrendiği bilgileri yasal çerçeve içerisinde kalarak kullanacaklarını taahhüt ederler.\nÖğrenci yorumlarından örnekler:\nAtıl Hocamın her dersini aldım. İos, Android ve Etik Hacker eğitimlerini... Her kursu dikkatli dinlerseniz Atıl Hocam bilginin harmanlanmış halini direk veriyor ve sonuç odaklı gidiyor ve çok hızlı bir biçimde öğreniyorsunuz. Bu kadar başarılı anlatım yapan biri daha görülmemiştir. Her sorumu max 6 saat içinde yanıtlayıp çözümsüz bırakmamıştır. Başka bir kurs çıkarsa yine alırım ingilizce bilgisi de muazzam olduğu için bu kadar bilgili değerli hocamız. iyi ki varsınız sizi çok seviyoruz hocam. - Erdoğan\nHarika bir kurs ve tüm beklentilerimi tam olarak alıyorum. Kesinlikle tavsiye ederim. - Ramazan\nAtıl Hocama çok teşekkür ediyorum. Bu konuda eğitim almak isteyenlere de Atıl Hocam'ın bu kursunu mutlaka tavsiye ediyorum. - Mehmet\nÖğrencilerine gayet doyurucu bilgiler veriyor hocamız. Akılda soru işareti kalmayacak şekilde. Şiddetle tavsiye ediyorum. - Yakup\nAtıl Hoca yine farkını ortaya koymuş. İlk önce sizi çok kaliteli bir python kursu karşılıyor. O kadar detaylı açıklıyorki hiç programlama ile alakası olmayan bir kişi çok rahat anlayabilir. Hocanın diksiyonunun düzgün olması ve sıcak kanlı anlatım tarzı sizi strese sokmadan kolayca ilerleyebilmenizi sağlıyor. Ayrıca her sorunuza cevap alıyorsunuz sıkılmadan cevaplıyor. Bu kurs bittikten sonra çoğu kişinin arayıpta bulamadığı pentest programlarını kendimiz nasıl yazarız eğitimi başlıyor. Fakat burda önemli olan nokta bu hack araçlarını kesinlikle baştan savma yapmıyor. Örneğin; Aha yazdım bakın mac değişti hadi diğer programımıza geçelim demiyor. Bu programı yazarken gayet profesyonel temiz bir kodla yazıp, ptyhondaki en güncel teknolojileri kullanarak yapıyor ve bunu yaparkende yine detaylı olarak açıklıyor. Ortaya çıkan programı çok az düzenleyip yayınlanabilir hale getirebilirsiniz. Yine çok önemli olan diğer bir noktada herhangi bir programı çağırtarak program yazmıyor. Yani programlar baştan yazılıyor. Bir çok kişi hack aracı yazma eğitimi diye uğraşmayıp örneğin nmap i kendi yazdığı programa çağırıp aha port scanner yaptım diyerek insanları kandırıyorlar. Ne demek istediğimi bu konularla ilgili olan arkadaşlar hemen anlayacaktır. İlgili olan kişiler için bulunmaz nimet bir kurs olmuş. Eleştiri olarak diyeceğim tek şey , ilk giriş Python kursunda mantığı anlatmak için örnekler biraz basit tutulmuş bu kısımda gerçek hayat örneklerine daha fazla yer verilebilirdi. Fakat bu açık ethic hacker programları bölümüne gelince kapanıyor. Bu programların nasıl yazılacağını öğrenmekle kalmayıp bir çok güncel teknolojiyide beraberinde öğreniyorsunuz. Eline sağlık Atıl hocam... - Kanıt\nKurs kesinlikle yeni başlayanlar için fazlasıyla yeterli. Hocanın açıklamaları yerinde ve doğru. Kesinlikle öneriyorum. - Berkay\nAnlatım çok düzgün, yararlı fonksiyonlar kısmının gerçek hayatta nasıl ve nerelerde kullanılacağının anlatıldığı yerler bence çok iyi. profesyonel bakış açısını size kazandırıyor. Teşekkür ediyorum. - Oral\nAtıl hocamızın her kursu gibi bu kursta gayet açık ve mükemmel. - Kykaan",
      "target_audience": [
        "Sıfırdan Python öğrenmek isteyenler",
        "Sıfırdan programlama öğrenmek isteyenler",
        "Linux temellerine hakim olmak isteyenler",
        "Etik Hacker araçlarının nasıl yazıldığını öğrenmek isteyenler"
      ]
    },
    {
      "title": "エンジニアのためのUML入門",
      "url": "https://www.udemy.com/course/uml-engineer/",
      "bio": "プログラマーからITアーキテクトにステップアップしたい方のためのUML入門",
      "objectives": [
        "UMLの必要性や全体像を理解することができます。",
        "オブジェクト指向で考えるとはどういうことか理解することができます。",
        "ユーザーに対するシステムの機能をユースケース図で表すことができるようになります。",
        "システムの構造をクラス図で表すことができるようになります。",
        "システムを構成するオブジェクト同士の振る舞いをシーケンス図で表すことができるようになります。",
        "システムを構成するオブジェクトの状態遷移をステートマシン図で表すことができるようになります。"
      ],
      "course_content": {},
      "requirements": [
        "ITやプログラミングについて知識がない方でも受講することができます。"
      ],
      "description": "本講座は、システムエンジニア、あるいは、システムエンジニアを目指す方向けに、\nUML（統一モデリング言語）を使って、システムのモデルを分析設計できるようになっていただくための研修です。\nこの講座は、単にUMLの図の描き方だけを教える研修ではなく、\nDVDレンタルビデオショップの業務を題材に、\nUMLのモデリングアプローチ（何を、誰が、どのように）に従って、\n最終的には、システムの\nユースケース図、\nクラス図\nシーケンス図\nを描けるようになっていただく実践的な内容になっています。\nUMLを武器にプログラマーからITアーキテクトにステップアップしたい方、\nぜひ、受講をお奨めします。",
      "target_audience": [
        "エンジニア、あるいは、将来エンジニアを目指す方が対象です。"
      ]
    },
    {
      "title": "Data Visualization: A'dan Z'ye Veri Görselleştirme (3)",
      "url": "https://www.udemy.com/course/data-visualization-adan-zye-veri-gorsellestirme-3/",
      "bio": "Bir Profesyonel gibi Veri Görselleştirme öğrenin! Python ile Seaborn, Plotly ve Matplotlib konularının temellerini atın!",
      "objectives": [
        "Artık CV'nize gönül rahatlığıyla \"Data Science and Visualization\" yeteneğini ekleyebileceksiniz",
        "Ders sonunda yapacağımız proje ile tüm dünyaya yayın yapacaksınız",
        "Farklı görselleştirme teknikleri ile hem veriyi anlamanız kolaylaşacak hem de data science alanında vizyonunuz genişleyecek",
        "Veri görselleştirme temel kütüphanelerinden olan matplotlib, seaborn ve plotly konusunda uzmanlaşacaksınız",
        "Nihai hedefimiz olan Yapay Zeka kursuna bir adım daha yaklaşmış olacaksınız."
      ],
      "course_content": {},
      "requirements": [
        "Önceden \"Python: Sıfırdan Uzmanlığa Programlama (1)\" kursunun alınmış olması yada python temellerinin bilinmesi gerekli!",
        "İnternet bağlantılı bir bilgisayara sahip olmak",
        "Hedefler ve gelecekle ilgili büyük ve güzel hayaller",
        "Son olarak da veri bilimine ve yapay zekaya karşı duyulan bir tutku bu kursu almak için yeterlidir."
      ],
      "description": "Merhaba arkadaşlar,\nBu kurs 7 bölümlük nihai hedefimizin üçüncü bölümünü oluşturmaktadır.\nPython: Python Sıfırdan Uzmanlığa Programlama (1)\nData Science ve Python: Sıfırdan Uzmanlığa Veri Bilimi (2)\nVisualization Tools (Görselleştirme Araçları)\nMachine Learning (Makine Öğrenmesi)\nDeep Learning (Derin Öğrenme)\nStatistical Learning (İstatistik)\nArtificial Intelligence (Yapay Zeka)\nData Visualization(veri görselleştirme) kursunda hem Python dili ile veri görselleştirmenin nasıl yapıldığını hem de nihai hedefimiz olan yapay zeka konusuna temel oluşturacak bilgiler öğreneceğiz.\nNeden Data Visualization?\nİnsan beyni çok karmaşık bir yapıyı görselleştirerek kolay bir şekilde anlamlandırabilir,\nData içerisinde bilgiye ulaşmayı kolaylaştırır,\nVeri biliminin temellerindendir,\nAnlaması ve uygulaması kolaydır.\nBu Kurs ile Alacaklarınız\nSıfırdan Kodlama Becerisi: Sizinle birlikte kod yazıyoruz. Her ders boş bir sayfa ile başlar ve kodu sıfırdan yazarız. Bu şekilde ilerleyebilir ve kodun nasıl bir araya geldiğini ve her satırın ne anlama geldiğini tam olarak anlayabilirsiniz.\nKodlar ve Şablonları: Kursta oluşturduğumuz her Python şablonlarını ve kodunu indirebilirsiniz. Bu, sizlere hem daha sonra kod üzerinde pratik yapma hem de kendi projelerinizi şablon sayesinde daha kolay bir şekilde yaratma imkanı sağlayacaktır\nTeori ve Mantık: Size yalnızca kod yazmayı değil, hem yazdığımız kodun arkasında yatan mantığı ve teoriyi hem de neden böyle bir kod yazdığımızı anlatıyoruz.\nKurs içi destek: Size sadece video ile ders anlatımı yapmıyoruz. Size destek olmak için profesyonel Veri Bilimcilerinden oluşan bir ekip oluşturduk. Bu da ders ve ya ders dışı sorularınıza en fazla 72 saat içinde yanıt alacağınız anlamına geliyor.\nData Visualization kursu içeriği\nGiriş\nData Analytics vs Data Science\nVisualization Nedir?\nKaggle\nEn Çok Kullanılan Görselleştirme Araçları\nSeaborn Görselleştirme Kütüphanesi\nBar\nPoint\nJoint\nPie\nLm\nKde\nViolin\nHeatmap\nSwarm\nPair\nCount Plots\nPlotly Görselleştirme Kütüphanesi\nLine\nScatter\nBar\nPie\nBubble\nHistogram\nWord Cloud\nBox\nScatter Matrix\nInset\n3D\nSubplots\nMap\nAnimation Plots\nRare (Nadir) Visualization Tools ve Kütüphaneleri\nMatrix and Box Plot (Missingno)\nParallel Plots (Pandas)\nNetwork Charts (networkx)\nVenn Diagram (matplotlib)\nDonut Plot (matplotlib)\nSpyder Chart (matplotlib)\nCluster Map (seaborn)\nInset Plot (plotly)\n3D Plot (plotly)\nKurs Hakkında Bazı Öğrenci Yorumları\nİlkin KILIÇ\nBu kurs gerçek anlamda adının hakkını veriyor, tam anlamıyla \"a'dan z'ye\". O kadar çok görselleştirme aracını öğretiyor ki, bir zaman sonra içiniz dışınız grafik oluyor ve \"bunu daha önceden yapamamış mıydık?\" diye sorduruyor :) Emeği geçen herkese tebrikler ve teşekkürler.\nSibel Cansu\nDaha onceki iki kursa oldugu gibi bunda da yine cok faydalı bilgiler ogrendim. Egitmenin alanında tecrubeli olması ve bilgileri olabildigi kadar sade anlatması dersler arasındaki ilerlemeyi kolaylastırıyor. Tesekkurler DATAI TEAM.\nÖmer Faruk Tekgözoğlu\nGerçekten çok başarılı, önceki kursları da izleyerek gelirseniz daha yararlı olacak diye düşünüyorum. Görselleştirme adına ne arıyorsanız burada bulabilirsiniz. Özellikle plotly kısmı çok başarılı.\nİçeriğin İngilizce olması sizi yanıltmasın arkadaşlar. Derslerim tamamen Türkçedir.\nHemen kaydolun ve bir an önce başlayalım.",
      "target_audience": [
        "Python dilinde uzmanlaşmak isteyenler",
        "Data Science (veri bilimi) alınında uzmanlaşmak isteyenler",
        "Eğitim yada kariyerini veri bilimi(data science), makine öğrenmesi(machine learning) yada yapay zeka(artificial intelligence) alanlarında başlamak yada sürdürmek isteyenler",
        "Data Visualization (veri görselleştirme) alanında uzmanlaşmak isteyenler"
      ]
    },
    {
      "title": "Curso Python: De Principiante a Avanzado",
      "url": "https://www.udemy.com/course/python-3-curso-completo-de-cero-a-experto/",
      "bio": "Jorge, con experiencia en programación, te guiará en el aprendizaje de Python desde cero.",
      "objectives": [
        "Aprenderás a instalar Python, configurar VSCode y Jupyter notebook para escribir y ejecutar código.",
        "Dominarás la sintaxis básica de Python, incluyendo tipos de datos, operadores, y estructuras de control.",
        "Serás capaz de utilizar listas, diccionarios, sets, y tuplas para almacenar, acceder y manipular datos de manera eficiente.",
        "Aprenderás a escribir scripts de Python limpios y eficientes, y a depurarlos utilizando técnicas efectivas.",
        "Podrás definir y utilizar funciones, comprendiendo su importancia para la reutilización y organización del código.",
        "Entenderás y aplicarás los conceptos de clases, objetos, herencia, y polimorfismo en tus programas.",
        "Serás capaz de manejar datos persistentes, leyendo y escribiendo archivos en diferentes formatos con Python.",
        "Integrarás todos los conceptos aprendidos para desarrollar y presentar un proyecto final, demostrando tus habilidades."
      ],
      "course_content": {},
      "requirements": [
        "No se necesitan requisitos previos, el curso esta diseñado para aprender Python desde cero."
      ],
      "description": "¿Listo para sumergirte en el mundo de la programación y desbloquear nuevas oportunidades profesionales? Python, el lenguaje de programación versátil y demandado en diversas industrias, es el lugar perfecto para comenzar. Nuestro curso te guiará desde los conceptos básicos de Python, enseñándote a configurar tu entorno de desarrollo y a escribir tus primeros scripts, hasta dominar estructuras de datos avanzadas y la programación orientada a objetos.\nCon una combinación de teoría y práctica, aprenderás a manejar datos con eficiencia, a utilizar herramientas de desarrollo como VSCode y Jupyter notebook, y a aplicar fundamentos de programación como tipos de datos, operadores, y estructuras de control. Además, profundizarás en temas avanzados como funciones anónimas, manejo de archivos, y mucho más, todo mientras construyes un proyecto final que demuestra tus habilidades adquiridas.\nEste curso está diseñado para motivarte a pensar como un verdadero programador, solucionar problemas complejos y prepararte para desafíos reales en el mundo de la tecnología. No importa si estás comenzando tu camino en la programación o buscas fortalecer tus habilidades en Python, este curso te proporcionará las herramientas necesarias para alcanzar tus metas.\nTe invitamos a unirte a nuestra comunidad de aprendizaje. Da el paso y comienza tu viaje hacia el dominio de Python, abriendo la puerta a infinitas posibilidades en tu carrera profesional. Inscríbete hoy y transforma tu futuro con la programación.",
      "target_audience": [
        "Profesionistas que quieran aprender a programar en Python para facilitar sus tareas del día a día.",
        "Desarrolladores que quieran aprender Python de una manera ágil, completa y sencilla."
      ]
    },
    {
      "title": "C# ile DevExpress'de Teknik Servis ve Ürün Takip Sistemi",
      "url": "https://www.udemy.com/course/c-ile-devexpressde-teknik-servis-ve-urun-takip-sistemi/",
      "bio": "Entity Framework Linq Asp Üzerinde DevExpress ile Mail - Sms- Raporlama Modülleri Bulunan Gerçek Bir Proje Geliştirelim!",
      "objectives": [
        "C# ile dinamik projeler oluşturabilmeyi",
        "SQL tabanında crud cşlemleri gerçekleştirebilmeyi",
        "İlişkili veri tabanları oluşturulabilmeyi",
        "Raporlama, grafiksel analiz gibi işlemleri gerçekleştirmeyi",
        "Veri tabanı kayıt uygulamaları kontrol edebilmeyi",
        "DevExpress bileşenlerini ve araçlarını kolaylıkla kullanabilmeyi",
        "SQL tabanında prosedür, join, trigger sorguları oluşturabilmeyi",
        "Bir ürün yönetim ve takip sistemini",
        "Web api kullanımlarını",
        "Aspnet web forms ile web sayfası oluşturabilmeyi",
        "Web sayfası ile masa üstü projelerini aynı veri tabanı üzerinden kontrol edebilmeyi",
        "Ve daha fazlası..."
      ],
      "course_content": {},
      "requirements": [
        "Temel seviye C# bilgisi"
      ],
      "description": "Aralık ayında taslaklarını hazırlayıp çekimlerine başaldığım kursumuzun tamamlanması yaklaşık 1.5 sürdü. Daha önce Udemy'de hazırlamış olduğum C# ile DevExpress'de SQL Tabanlı Ticari Otomasyon Geliştirin kursumuzun çok çok üstünde  bir kurs olmasını istiyordum. Ve öyle de oldu. Sanırım Udemy'deki bu 11.kursum diğer 10 kursuma göre en kapsamlısı ve süre olarak da en uzunu oldu. Her şeyi sıfırdan adım adım anlatarak bölümlere ayırıp başlık - alt başlık hiyerarşisi ile kursumu yayına hazır hale getirdim. Bu kursa katılmak için bilmeniz gerekn tek şey temel seviyede birazcık c# bilgisi. Eğer bu bilginiz varsa inanın büyük bir kolaylıkla kursu izleyip uygulayarak yüzlerce yeni şey öğreneceksiniz. Gelelim kursumuzda neler öğreneceğinize;\nC# ile DevExpress Araç ve Bileşenlerini Kulanmayı\nRibbon Form Dizaynını\nTemel SQL Komutlarından Sonra Kapsamlı Bir İlişki Oluşturmayı\nMdi Form Yapısını\nKritik Seviye Yapısını\nEntity Framework ile Crud İşlemleri\nLinq Sorguları ve Metotları\nTrigger ve Prosedür Kullanmayı\nOOP Yapısı ile Proje Geliştirmeyi\nDb First Yaklaşımını\nAsp.Net ile Web Projesi Geliştirmeyi\nAsp.Net Master Page Yapısını\nHtml5 Template ile Arayüz Düzenlemeyi\nKargo Takibi Yapmayı\nQR Code Oluşturmayı\nBarkod Oluşturmayı\nQR Code ile Ürün Takibini\nXtrareport ileDetaylı Raporlamayı\nDevExpress Chart ile Grafik İşlemlerini\nC# ile Modern UI Oluşturmayı\nve daha onlarcasını dersler esnasında öğreneceksiniz.",
      "target_audience": [
        "Kod yazarak uygulama geliştirmek isteyenler",
        "C#'ı gerçek dünya problemleri üzerinden öğrenmeyi arzulayanlar",
        "DevExpress ile proje geliştirmek isteyenler",
        "Yazılım dünyasında ilk büyük ölçekli projelerini geliştirmek isteyenler",
        "Ve tabi programlama bilgisini tazeleyip uygulama geliştirmek isteyen herkes"
      ]
    },
    {
      "title": "Curso de Java - Nivel Básico",
      "url": "https://www.udemy.com/course/curso-de-java-nivel-basico/",
      "bio": "Java Nivel Básico",
      "objectives": [
        "Conocer el manejo y desarrollo de uno de los lenguaje de programación más usado en el mercado laboral",
        "Se realizará 100% práctico el aprendizaje de este curso.",
        "ejemplos claros al momento de nuestro proceso de desarrollo.",
        "Será nuestra formación base en el mundo del lenguaje de programación"
      ],
      "course_content": {
        "Descarga e Instalación de recursos": [
          "00 - Intro Java",
          "01 - Descarga e Instalación del JDK",
          "02 - Descarga e Instalación del IDE Apache NetBeans",
          "03 - Temas disponibles en IDE Apache NetBeans"
        ],
        "Definición de Proyecto": [
          "04 - Clásico Hola Mundo",
          "05 - Definir Comentarios",
          "06 - Imprimir en Pantalla",
          "07 - Eliminar Proyecto",
          "08 - Crear Java Class"
        ],
        "Variables": [
          "09 - Variables y Tipos de datos",
          "10 - Variables y Tipos de datos - parte 2"
        ],
        "Operadores": [
          "11 - Operadores Aritméticos",
          "12 - Operadores de Comparación",
          "13 - Operadores Lógicos",
          "14 - Operadores de Incremento y Decremento",
          "15 - Operador Condicional",
          "16 - Concatenación"
        ],
        "Entrada de datos": [
          "17 - Entrada de datos por teclado",
          "18 - Entrada de datos por teclado - parte 2"
        ],
        "Personalizar el Ide NetBeans": [
          "19 - Personalizar el IDE Apache NetBeans - Dracula Theme"
        ],
        "Conversión de tipos de datos": [
          "20 - Conversión de tipos de datos - parte 1",
          "21 - Conversión de tipos de datos - parte 2",
          "22 - Conversión de tipos de datos - parte 3",
          "23 - Conversión de tipos de datos - parte 4"
        ],
        "Estructura Condicional IF": [
          "24 - Estructura Condicional IF Else",
          "25 - Estructura Condicional IF Else IF"
        ],
        "Estructura Condicional SWITCH": [
          "26 - Estructura Condicional SWITCH"
        ],
        "Estructura Cíclica WHILE ... DO WHILE ... FOR": [
          "27 - Estructura Cíclica While",
          "28 - Estructura Cíclica Do While",
          "29 - Estructura Cíclica For"
        ]
      },
      "requirements": [
        "Un equipo de cómputo con Sistema operativo Windows 10 en adelante."
      ],
      "description": "Este curso pretende introducirte en el mundo de la programación, empleando un lenguaje de programación de mayor demanda en el mundo laboral.\nAprenderás a pedir datos al usuario, a comprobar condiciones.\nAdemás, aprender Java te ayudará a conocer las bases de otros lenguajes cuya sintaxis es muy parecida, como C# y C++.\nPara que puedas practicar, tienes ejercicios propuestos al final de cada video. Las soluciones a esos ejercicios las tienes compartidas al final del curso, para que puedas comparar tus intentos con el \"Proyecto\", y asegurarte de que estás aprendiendo.\n\n\nLo que aprenderás\nEn este curso aprenderás los conceptos básicos de programación usando Java.\nAprenderás sobre variables, condiciones, bucles, funciones...\nTendrás ejemplos guiados y ejercicios propuestos.\n¿Hay requisitos para realizar el curso?\nNo se necesita experiencia previa en programación.\nNecesitarás un equipo cómputo con Windows para ejecutar JDK y el IDE Apache NetBeans.\n¿Para quién es este curso?\nEstudiantes o aficionados, con ganas de introducirse en el mundo de la programación de computadoras y en el lenguaje Java.\nInstructores\nVíctor Ramos\nIT Sistemas\nInstructor | Programador | Diseñador\nHola que tal amigos, buen día.\nMi nombre es Víctor Ramos, soy de Perú.\nme dedico a:\n- Asistencia Técnica de Cómputo y Desarrollo de Aplicaciones para Pequeñas y Medianas Empresas.\n- Entrenador en programación de  VB NET, C#, Java, Visual FoxPro 9,  MySQL Server, Maria DB, PostgreSQL, Oracle database y Microsoft SQL Server.",
      "target_audience": [
        "A todos los que desean aprender a programar en el lenguaje de programación más usado en el mercado laboral"
      ]
    },
    {
      "title": "Полный Курс Python 3: от Новичка до Мастера (Питон, Пайтон)",
      "url": "https://www.udemy.com/course/complete-python-bootcamp-russian/",
      "bio": "Для начинающих и не только! Базовый + Продвинутый Курс Python. Начните с нуля и пройдите путь до специалиста по Python.",
      "objectives": [
        "Изучите базовый синтаксис и структуры данных Python 3!",
        "Изучите продвинутые возможности Python, такие как модуль \"collections\" и работа с timestamp!",
        "Научитесь использовать Объектно-Ориентированное Программирование!",
        "Изучите сложные темы, например декораторы и генераторы.",
        "Научитесь создавать блокноты Jupyter Notebook и файлы .py",
        "Научитесь создавать графические интерфейсы в блокнотах Jupyter Notebook!",
        "Получите уверенное понимание основ языка Python!"
      ],
      "course_content": {
        "Обзор Курса": [
          "Введение - Обзор курса",
          "Обзор Содержания Курса",
          "Python 2 и Python 3. Пайтон или Питон?",
          "Часто Задаваемые Вопросы"
        ],
        "Установка Python": [
          "Основы Работы в Командной Строке",
          "Установка Python",
          "Запуск Кода Python"
        ],
        "Объекты и Структуры Данных в Python": [
          "Напоминание о том, где можно скачать блокноты Jupyter Notebook.",
          "Введение в Типы Данных Python",
          "Числа (Numbers)",
          "Числа (Numbers) - Часто Задаваемые Вопросы",
          "Проверочные Вопросы по Числам (Numbers)",
          "Присвоение Переменных",
          "Введение в Строки (Strings)",
          "Индексирование и Срезы Строк",
          "Свойства и Методы Строк",
          "Строки - Часто Задаваемые Вопросы",
          "Проверочные Вопросы по Строкам",
          "Форматирование Вывода для Строк",
          "Форматирование Вывода - Часто Задаваемые Вопросы",
          "Списки (Lists) в Python",
          "Списки - Часто Задаваемые Вопросы",
          "Проверочные Вопросы по Спискам",
          "Словари (Dictionaries) в Python",
          "Словари - Часто Задаваемые Вопросы",
          "Проверочные Вопросы по Словарям",
          "Кортежи (Tuples) в Python",
          "Проверочные Вопросы по Кортежам",
          "Множества (Sets) в Python",
          "Значения Boolean в Python",
          "Проверочные Вопросы - Множества и значения Booleans",
          "Ввод-вывод (I/O) для файлов в Python",
          "Ресурсы для Дополнительной Практики",
          "Обзор Теста по Объектам и Структурам Данных Python",
          "Решения для Теста по Объектам и Структурам Данных Python"
        ],
        "Операторы Сравнения в Python": [
          "Операторы Сравнения в Python",
          "Сцепление Операторов Сравнения с помощью Логических Операторов",
          "Проверочные Вопросы по Операторам Сравнения"
        ],
        "Операторы Python": [
          "Операторы If, Elif и Else в Python",
          "Циклы For в Python",
          "Циклы While в Python",
          "Полезные Операторы в Python",
          "Генераторы Списков (List Comprehensions) в Python",
          "Обзор Теста по Операторам Python",
          "Решения Теста по Операторам Python",
          "(Опционально) Задание - Игра на угадывание чисел"
        ],
        "Методы и Функции": [
          "Методы и Документация Python",
          "Функции в Python",
          "*args и **kwargs в Python",
          "Упражнения по Функциям",
          "Обзор Упражнений по Функциям",
          "Решения Упражнений - Уровень Разминка",
          "Решения Упражнений - Уровень 1",
          "Решения Упражнений - Уровень 2",
          "Решения Упражнений - Сложные Задачи",
          "Lambda-выражения, функции Map и Filter",
          "Вложенные Операторы и Области Видимости (Scope)",
          "Функции и Методы - Домашнее Задание",
          "Полезные Советы для Задания по Функциям и Методам",
          "Решения для Домашнего Задания по Функциям и Методам"
        ],
        "Проект - 1": [
          "Обзор Первого Проекта Python",
          "Помощь по Проекту",
          "Обзор Решения для Проекта 1 - Часть 1",
          "Обзор Решения для Проекта 1 - Часть 2"
        ],
        "Объектно-Ориентированное Программирование (ООП)": [
          "ООП: Введение",
          "ООП: Атрибуты и Ключевое слово Class",
          "ООП: Классы, Объекты, Атрибуты и Методы",
          "ООП: Наследование и Полиморфизм",
          "ООП: Специальные Методы (Magic/Dunder)",
          "ООП: Домашнее Задание",
          "ООП: Решение для Домашнего Задания",
          "ООП: Задача",
          "ООП: Решение для Задачи"
        ],
        "Модули и Пакеты": [
          "Pip Install и PyPi",
          "Модули и Пакеты",
          "__name__ и \"__main__\""
        ],
        "Ошибки и Обработка Исключений (Exceptions)": [
          "Ошибки и Обработка Исключений (Exceptions)",
          "Домашнее Задание - Ошибки и Обработка Исключений",
          "Решения для Домашнего Задания - Ошибки и Обработка Исключений",
          "Обзор Pylint",
          "Запуск тестов с помощью библиотеки Unittest"
        ]
      },
      "requirements": [
        "Компьютер с доступом в интернет."
      ],
      "description": "Станьте Python-программистом и изучите один из навыков, наиболее востребованных работодателями в 2022 году!\nЭтот курс является переводом на русский язык англоязычного бестселлера, который прошли уже более 800 000 слушателей! С поддержкой на русском языке.\nМатериалы курса можно скачать. Это более 100 блокнотов Jupyter Notebook с примерами кода и с детальными комментариями на русском языке.\nЭто наиболее полный и в то же время простой курс по языку программирования Python на Udemy! Если Вы никогда раньше не программировали, или Вы уже знаете базовый синтаксис, или Вам нужны продвинутые темы Python - этот курс для Вас!\nБолее 100 лекций и более 14 часов видео - этот исчерпывающий курс охватывает все возможные аспекты языка Python! Этот курс содержит проверочные вопросы, тесты и домашние задания, а также 3 больших проекта для создания Вашего портфолио проектов на Python!\nВ этом курсе Вы будете изучать язык Python на практике - каждая лекция содержит не только видео-уроки, но и соответствующий код!\nМы начнем с установки Python на Вашем компьютере, инструкции есть для разных операционных систем - Windows, MacOS и Linux !\nМы пройдем много тем, включая:\nОсновы работы в командной строке\nУстановка Python\nЗапуск кода Python\nСтроки (Strings)\nСписки (Lists)\nСловари (Dictionaries)\nКортежи (Tuples)\nМножества (Sets)\nЧисловые типы данных\nФорматирование вывода\nФункции\nОбласть видимости переменных (Scope)\nargs/kwargs\nВстроенные функции\nОтладка и обработка ошибок\nМодули\nВнешние модули\nОбъектно-ориентированное программирование (ООП)\nНаследование\nПолиморфизм\nФайловый ввод-вывод\nПродвинутые методы\nЮнит-тесты\nи многое другое!\nВы получите неограниченный доступ к более 100 лекциям, а также соответствующие блокноты (Notebooks) для лекций!\n\nЭтот курс предоставляет 30 дней гарантии возврата денег! Если курс Вам не понравится, Вы получите Ваши деньги обратно. И у Вас останется доступ к блокнотам этого курса - таким образом мы говорим Вам \"Спасибо!\" за то, что Вы попробовали этот курс!\nИтак, чего же Вы ждете? Изучите Python - продвиньте свою карьеру вперёд и получите новые знания! Это весело и полезно!",
      "target_audience": [
        "Новички - те, кто никогда не программировал ранее.",
        "Программисты, которые переключаются на Python с других языков программирования",
        "Программисты Python среднего уровня, которые хотят повысить свою квалификацию!"
      ]
    }
  ]
}