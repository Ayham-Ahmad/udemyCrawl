{
  "courses": [
    {
      "title": "Microsoft BOT Framework & DialogFlow: Creating ChatBot",
      "url": "https://www.udemy.com/course/microsoft-bot-framework-dialogflow-creating-chatbot/",
      "bio": "Learn how to build basic chatbot using Microsoft BOT Framework and Dialogflow",
      "objectives": [
        "Understanding how ChatBots work and operate in Microsoft BOT Framework and DialogFlow",
        "Learn how to design ChatBots based on different business cases",
        "Understand how DialogFlow works in terms of developing ChatBots",
        "Develop a working ChatBot with live calendar integration in DialogFlow",
        "Design basic ChatBots in Visual Studio",
        "Design and configure ChatBots in Azure Bot Service",
        "Learn how to integrate ChatBots into Skype and Facebook Messenger",
        "Learn the pros and cons of Visual Studio and Azure Bot Service along with a comparison between DialogFlow"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is a BOT",
          "Different types of BOT Designs"
        ],
        "Creating a BOT with DialogFlow": [
          "Agents",
          "Creating Agents",
          "Intents",
          "Creating Intents",
          "Creating Entities",
          "Events",
          "Contexts",
          "Demo on contexts",
          "Fulfillment",
          "Training and Analytics",
          "Building a BOT from scratch"
        ],
        "Microsoft BOT Framework": [
          "How Microsoft BOTS work",
          "Microsoft FormFlows",
          "LUIS - Natural Language Processor",
          "Building a BOT in Visual Studio",
          "Enhancing a BOT in Visual Studio",
          "Building a FormFlow in Visual Studio",
          "Creating a BOT in Azure",
          "Integrating a BOT into Skype and Facebook Messenger"
        ]
      },
      "requirements": [
        "Be familiar with coding in C# or Nodejs and Visual Studio"
      ],
      "description": "Are you a company or a Web developer, IT administrator, data center architect, consultant, enterprise architect, data protection officer, programmer, data security specialist, or big data analyst and want to gain fundamental and intermediate level skills and enjoy a fascinating high paying career?\nOr maybe you just want to learn additional tips and techniques taking to a whole new level?\nWelcome to Creating Chatbot with Dialogflow and Microsoft course For Beginners - A one of its kind course.\nThe flipped classroom model with hand-on learning will help you experience direct  into the course as your begin your learning journey. Be sure to watch the preview lectures that set course expectations\nIn this course, you'll learn and practice:\nBuilding BOTs in Dialogflow\nBuilding BOTs in Microsoft Azure and Visual Studio\nDeploying BOTS in Skype and Facebook Messenger\nLearn the basic concepts of BOTs\nUnderstand  best practices, and much more\nYou will also get complete resources, toolkit, and code where applicable with this course! We've built this course with our Team ClayDesk of industry recognized developers and consultants to bring you the best of everything!\nSo, if you would like to:\nstart your freelancing career and consult companies, this course is for you\ngain marketable skills as an IT expert and professional, this course is for you\nThis course is not designed for advanced level students\nThis Chatbot course is exactly what you need, and more. You’ll even get a certification of completion\nSee what our students say “It is such a solid course that covers all important areas of machine learning, and I now know hoe to predict future products based on their features. Simply awesome!.” - Alex Neuman\n“This is such an awesome course. I loved every bit of it – Wonderful learning experience!”  Ankit Goring.\nJoin thousands of other students and share valuable experience\nWhy take this course?\nAs an enterprise architect consulting with global companies, technology evangelist, and brand innovator, I have designed, created, and implemented enterprise level projects, I am excited to share my knowledge and transfer skills to my students.\nEnroll now in Creating Chatbot with DialogFlow and Microsoft  today and revolutionize your learning. Stay at the cutting edge of Machine Learning and Artificial Intelligence —and enjoy bigger, brighter opportunities with Microsoft Azure and Dialogflow.\nQasim Shah",
      "target_audience": [
        "Beginner BOT developers looking to get started in learning more about bots and learning how to build their very first BOT",
        "Students who want to understand the difference between developing Chatbots in Dialogflow and Microsoft BOT Framework"
      ]
    },
    {
      "title": "Dependency Injection for Java Developers",
      "url": "https://www.udemy.com/course/java-ee-fundamentals-contexts-and-dependency-injection-cdi-20-for-java/",
      "bio": "Your most comprehensive guide to modern dependency injection on the Java EE platform with CDI 2.0",
      "objectives": [
        "Master how to build maintainable software applications with industry standard Java EE",
        "Master how to build loosely coupled, highly testable software components on Java EE",
        "Master the individual components of Contexts and Dependency Injection API",
        "Master dependency injection in Java",
        "Learn to write event based reactive software in Java"
      ],
      "course_content": {
        "Part 0 - Introduction": [
          "Introduction",
          "Introduction",
          "Introduction",
          "Introduction",
          "Introduction",
          "Introduction"
        ],
        "Setting Up Required Software": [
          "Java Development Kit 8",
          "NetBeans IDE",
          "Apache Maven",
          "Git"
        ],
        "Part 1 - A look at what Java EE really is": [
          "What is Java EE?",
          "What is Java EE?",
          "What is Java EE?",
          "What is Java EE?",
          "What is Java EE?",
          "What is Java EE?",
          "What is Java EE?",
          "What is Java EE?",
          "What is Java EE?",
          "Project Work",
          "Java EE Quiz"
        ],
        "Part2 - CDI - Basics": [
          "Introduction",
          "What is Inversion of Control?",
          "What is Dependency Injection",
          "What is Dependency Injection",
          "CDI Features",
          "Lifecycle Contexts",
          "Typesafe Dependency Injection",
          "Interceptors and Decorators",
          "CDI Events",
          "Service Provider Interface"
        ],
        "Part 3 - CDI In Practice": [
          "Introduction",
          "Prerequisite Software",
          "Code Samples",
          "Final Words",
          "CDI on Java EE",
          "Getting started with CDI on Java EE",
          "CDI Bean Discovery",
          "CDI Bean Discovery Modes",
          "CDI Container - What is it?",
          "CDI Getting Started - Code",
          "Beans and Contextual Instances",
          "CDI Injection Point - Field Injection",
          "CDI Injection Point - Constructor Injection",
          "CDI Injection Point - Method Injection",
          "CDI Managed Beans",
          "Bean Type of a Managed Bean",
          "CDI Managed Beans - Session Beans",
          "CDI Lifecyle Callbacks - PostConstruct",
          "CDI Lifecyle Callbacks - PreDestroy",
          "Interceptor Lifecyle Callbacks",
          "Recap",
          "CDI Fundamentals",
          "Written Assignment 1",
          "Using the Java EE API Documentation",
          "CDI Qualifiers",
          "CDI Qualifiers",
          "CDI Qualifiers - API Documentation",
          "CDI Qualifiers With Value",
          "CDI Stereotypes",
          "CDI Built-in Qualifier - @Named",
          "CDI Built-in Qualifier - @Default",
          "CDI Built-in Qualifier - @Any",
          "CDI Contexts",
          "CDI Contexts - Session Scope",
          "CDI Contexts - Request Scope",
          "CDI Contexts - Dependent Scope",
          "CDI Contexts - Conversation Scope",
          "CDI Contexts - Application Scope",
          "CDI Contexts - Stateless EJBs",
          "CDI Contexts - Stateful EJBs",
          "CDI Producers",
          "CDI Producers - Scoping Returned Objects",
          "Recap",
          "CDI Detail",
          "Written Assignment 2",
          "CDI - Interceptors",
          "CDI Interceptors",
          "CDI Interceptors - API Documentation",
          "CDI Events",
          "CDI Events",
          "CDI Events",
          "CDI Events",
          "CDI Events - API Documentation",
          "CDI Events - API Documentation",
          "Running Code Sample - Contexts",
          "Running Code Sample - Contexts",
          "Running Code Sample - Producer",
          "Running Code Sample - Qualifiers",
          "Running Code Sample - Interceptors",
          "Running Code Sample - Events",
          "CDI Detail",
          "End of the beginning"
        ],
        "Jakarta EE": [
          "What is Jakarta EE?",
          "Jakarta EE - Whats New?",
          "Jakarta EE Mailing Lists"
        ],
        "Advanced CDI": [
          "Java EE 8 Introduction",
          "Downloading Glassfish 5",
          "Adding Glassfish 5 to NetBeans",
          "Upgrading to Java EE 8",
          "CDI 2.0 Primer",
          "Synchronous Events",
          "Synchronous Events",
          "Synchronous Events - Running the Code",
          "Synchronous Events - Running the Code",
          "Synchronous Events - Running the Code",
          "Asynchronous Events",
          "Asynchronous Events",
          "Asynchronous Events - Running the Code"
        ],
        "Java EE Microservices": [
          "What is Payara Micro?",
          "How do I deploy a Java EE app with Payara Micro?"
        ],
        "Testing CDI with Arquillian": [
          "Introduction to Java EE Testing with Arquillian and JUnit",
          "The Arquillian Website",
          "Testing with Arquillian",
          "Testing with Arquillian",
          "Testing with Arquillian",
          "Testing with Arquillian"
        ]
      },
      "requirements": [
        "Basic knowledge of Java or any other strongly typed JVM language like Kotlin",
        "A Java IDE- preferably NetBeans or IntelliJ",
        "Java 8 installed",
        "Apache Maven",
        "Git SCM"
      ],
      "description": "Are you a software developer? If not, are you aspiring to be one? If you answered yes, then I have good news for you!\nDependency Injection is the cornerstone of good, decoupled software engineering principles. And this course is your ultimate guide to the latest Contexts and Dependency Injection (CDI 2.0) standard on the Java Platform.\n\nYou will learn how the Java dependency injection framework - CDI - helps you write better code through the provision of\nPowerful, extensible and well defined contextual lifecycles for components\nA mechanism for decoupling application components through a typesafe event API\nTypesafe interceptors for altering the behaviour of components at runtime\nA well defined Qualifier system for easy isolation of beans\nA Producer mechanism of converting almost any valid Java type to a CDI managed bean\nA Stereotype system to group together common architectural patterns\nBindings for using business components on the web tier of your applications through Expression Language\nAll these and more will be covered in an exciting way through a mixture of detailed theoretical explanations and practical code samples, all the while using modern pedagogical means to keep you engaged and help you absorb your new knowledge. You are encouraged to be an active student by asking questions, participating in group discussions and helping your fellow students.\nIf you have ever wanted to write clean code, this course is your best guide for that. You will pick up valuable tips along the way from your instructor's years of experience. This course will cover CDI 2.0 in detail, as well as equip you with the theoretical underpinnings of Java EE.\nDependency Injection for Java Developers will cover\n\nWhat Java EE is\nHow Java EE is evolved through the JCP\nWhat a JSR is\nWhat  Reference Implementation is\nHow to contribute to the advancement of Java\nContexts and Dependency Injection\nGood software engineering principles and more\nDependency Injection for Java Developers is packed with so much that by the end of the course, you will feel confident to use your new found knowledge to help you write better, readable, maintainable and long lived software.\nSo go ahead, click on the big green button to enroll now and be on your way to writing better software. See you in the course.",
      "target_audience": [
        "Anyone who wants to master the art of writing loosely coupled software applications on the Java platform",
        "Anyone who wants to master the art of writing maintainable software on the Java platform",
        "Anyone who needs a firm grounding in the most important API on the Java EE Platform",
        "Anyone who wants to master the newly released Java EE CDI 2.0",
        "Anyone who wants to be a good Java EE software engineer",
        "Anyone who wants to master dependency injection on the Java platform"
      ]
    },
    {
      "title": "Clean Code: 20 Code Smells and How to Get Rid of Them",
      "url": "https://www.udemy.com/course/write-better-code-20-code-smells-how-to-fix-them/",
      "bio": "Improve your software design skills by learning 20 common code anti-patterns and techniques to eliminate them!",
      "objectives": [
        "Apply the fundamental principles of good software design: Encapsulation, abstraction, polymorphism, among others.",
        "Understand the SOLID principles of software engineering and how to use them to design better code",
        "Acquire practical skills to improve the quality and the design of",
        "Learn how to fix the most common pitfalls of Object Oriented Programming",
        "Learn how to design highly maintainable, extensible, and easy-to-change code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Let's Stay Connected"
        ],
        "Fundamentals of Software Design and SOLID Principles": [
          "Fundamentals of Good Software Design",
          "Designing Deep Modules",
          "SOLID Principles: Single Responsibility Principle",
          "SOLID Principles: Open/Close Principle",
          "SOLID Principles: Liskov Substitution Principle",
          "SOLID Principles: Interface Segregation Principle",
          "SOLID Principles: Dependency Inversion Principle"
        ],
        "Navigating the Code Base": [
          "Navigating the Code Base",
          "Note on the Code Smells"
        ],
        "Code Smell: Repeated Switches": [
          "Repeated Switches - Overview",
          "Repeated Switches - Code Example",
          "Repeated Switches - Solution Walkthrough"
        ],
        "Code Smell: Primitive Obsession": [
          "Primitive Obsession - Overview",
          "Primitive Obsession - Code Example",
          "Primitive Obsession - Solution Walkthrough"
        ],
        "Code Smell: Loops": [
          "Loops - Overview",
          "Loops - Code Example",
          "Loops - Solution Walkthrough"
        ],
        "Code Smell: Long Parameter List": [
          "Long Parameter List - Overview",
          "Long Parameter List - Code Example",
          "Long Parameter List - Solution Walkthrough"
        ],
        "Code Smell: Knowledge Duplication": [
          "Knowledge Duplication - Overview",
          "Knowledge Duplication - Code Example",
          "Knowledge Duplication - Solution Walkthrough"
        ],
        "Code Smell: Uninformative Comments": [
          "Uninformative Comments - Overview",
          "Uninformative Comments - Code Example",
          "Uninformative Comments - Solution Walkthrough"
        ],
        "Code Smell: Shotgun Surgery": [
          "Shotgun Surgery - Overview",
          "Shotgun Surgery - Code Example",
          "Shotgun Surgery - Solution Walkthrough"
        ]
      },
      "requirements": [
        "Familiarity with JavaScript and TypeScript (or any other major programming language) is recommended to better follow the code examples.",
        "Familiarity with Git."
      ],
      "description": "BRING YOUR SOFTWARE DEVELOPMENT SKILLS TO THE NEXT LEVEL!\nLearn the SOLID principles and how they can improve the design of your code\nLearn 20 code smells and anti-patterns against best software design practices\nLearn how to write code that is easy to maintain, extend, and change\nExplore practical examples in a variety of applications\nBenefit from deep dives and detailed discussions around best practices in the software engineering industry\nA STEP-BY-STEP COURSE, FOR BEGINNERS AND ADVANCED DEVELOPERS:\nThis course is thought for both those who are starting their software development carriers and want to learn how to design SOLID code from the start, as well as for those who are in the industry for several years and want to improve their coding!\n6 hours of high-quality, straight-to-the-point videos\nSelf-paced course: take as much time as you need to complete the course\nLifetime access: access does not expire. Ever!\n30-day money-back guarantee: try the course without risks. No questions asked\nCertificate of completion: receive a solid proof of completion and differentiate yourself\nWHY THIS COURSE?\nFocus on the fundamental principles of software design: Information Hiding, Encapsulation, Abstraction, and Polymorphism.\nDetailed and easy to follow discussion on 5 SOLID principles: Single Responsibility principle, Open-Close principle, Liskov Substitution principle, Interface Segregation principle, and Dependency Inversion principle.\n20 code smells distilled and thoroughly explained: learn many different ways we can fix our code, making it more robust and easier to work with.\nAt the end of this course, you will have acquired not only knowledge about the principles of great software development, but also practical insight into how to reason about the design of your system and how to improve it.\n\n\nWHY LEARN SOLID PRINCIPLES AND CODE SMELLS?\nExcelling in software development goes far beyond writing code. The code we write must not only achieve its intended functionality, but it must also be easy to maintain, extend, and change. When our code is not well designed, it starts to show several symptoms called code smells. It is crucial to be fully aware of them to immediately address the underlying causes when we come across bad code.\nTo develop this awareness, this course discusses the most important principles for designing and developing systems that comply with programming best practices. The contents are based on my learnings from multiple years of coding experience, as well as on several books and resources from seasoned developers in the industry.\nI’m looking forward to taking this journey with you!\n\n\nCourse thumbnail credits: macrovector - freepik",
      "target_audience": [
        "Software developers aiming at expanding their knowledge on SOLID principles and good software design practices",
        "Everyone who is curious about the principles and practices of designing solid systems",
        "Software developers and engineers who want to bring their coding skills to the next level by learning how to develop clean, maintainable systems"
      ]
    },
    {
      "title": "Raspberry Pi: Start Coding with 18 Sensors, 8 Projects!",
      "url": "https://www.udemy.com/course/raspberry-pi-start-coding-with-18-sensors-8-projects/",
      "bio": "Python Coding with Raspberry Pi, Working with Database, Working with Sensors With So Many Examples, Use Multiple Sensors",
      "objectives": [
        "Project Development from scratch with Raspberry",
        "Working with 18 Separate Sensors and Using Sensor Logic Advanced",
        "Coding with Python",
        "Working with Database from A to Z",
        "Using Breadboard from Scratch",
        "Working In Terminal",
        "Advanced Projects for Students",
        "GPIO Library Usage",
        "General Software and Hardware Tools and Resources Related to Raspberry Pi",
        "Storing Error Logs in a File"
      ],
      "course_content": {
        "What is Raspberry Pi?": [
          "About Raspberry Pi",
          "Rasbian Installation",
          "Raspbian Configuration",
          "Sensors of Raspberry Pi"
        ],
        "Connect Remotely To Raspberry Pi": [
          "SSH and VNC Activation and Connection"
        ],
        "Breadboard and GPIO Usage": [
          "Breadboard Usage",
          "Raspberry Pi GPIO Heading and Numbering System",
          "Calculation with resistance color codes",
          "Terminal usage and commands",
          "Section 3 - Quiz",
          "Section 3 - Assignment",
          "Section 3 - Assignment Answers"
        ],
        "Coding with Python": [
          "Variables",
          "Python and Raspberry Pi with a Simple Program",
          "Some Local Python Functions",
          "Mathematical Operations and Operators",
          "Conditional Statements",
          "Coding With Python - Assignment 1",
          "Coding With Python - Assignment 1 Answers",
          "Loops",
          "Lists",
          "Dictionaries",
          "Functions",
          "Working with different files",
          "Catching Error",
          "Working with Python in GPIO",
          "Section 4 - Quiz",
          "Coding With Python - Assignment 2",
          "Coding With Python - Assignment 2 Answers"
        ],
        "Working with Database": [
          "What is Database?",
          "Getting to know database systems",
          "Installation of Sqlite and working with sample database",
          "Working with Select,Where statement and sorting",
          "Working with Insert",
          "Working with Update",
          "Working with Delete",
          "Let's create our own database",
          "Making a Database Connection with Python",
          "Python database queries",
          "SQL - Assignment",
          "SQL - Assignment Answers"
        ],
        "Using Sensors with Raspberry": [
          "Working With Push Button",
          "Temperature and Humidty Sensor",
          "Infrared Human Body Induction Sensor",
          "Rain Sensor",
          "Sound Sensor",
          "Ultrasonic Distance Sensor",
          "Flame Sensor",
          "Laser Head Sensor",
          "Obstacle Avoidance Sensor",
          "Vibration Sensor",
          "Photosensitive Resistance Sensor",
          "Tilt Sensor",
          "RFID Module",
          "Hall Effect Sensor",
          "Tracking Sensor",
          "Buzzer Usage",
          "Gas Sensor",
          "Display Panel"
        ],
        "Project Development with Raspberry": [
          "Number Prediction Game (Led Lighting by Answer)",
          "Quiz (Led Lighting and Buzzer Use According to Answer)",
          "Ringing and Sending Mail with Motion Detection Sensor",
          "Using Buzzer and Led with Flame Sensor",
          "Led Lighting and work with buzzer with vibraiton sensor",
          "Use of temperature humidity sensor with Display Panel",
          "Working on the Display Panel with Distance Sensor",
          "Atm Application",
          "Project Development With Raspberry - Assignment",
          "Project Development With Raspberry - Assignment Answers"
        ]
      },
      "requirements": [
        "You need a computer and a Raspberry Pi.",
        "You need to know how to use computers as beginner and have a learning discipline"
      ],
      "description": "We have created a Whatsapp Group so that our students and instructors can interact faster and generate new ideas. You can send a message to +905494842486 to participate.\nIn our course you will learn the basics of Raspberry Pi with Python from scratch, SQL database queries, and design and code Advanced projects with Raspberry Pi. Linux and Terminal usage, detailed sample coding with Python,\nWith Raspberry Pi, you'll gain the ability to work with 18 different sensors and use them together. You can integrate all the work you have done during the training into your projects. You can download resources and use them on your Raspberry.\nBe the Master the use of cross sensors with 8 different advanced projects.\nIf you have no idea about Raspberry Pi and Python, this course is just for you!\nYou will learn in detail with 2 teachers who are experts and you will enjoy the lessons.\nYou will get quick answers and detailed solutions.",
      "target_audience": [
        "Anyone interested in programming",
        "Anyone with Interests IOT",
        "All producers who wants to develop projects or products for institutions and competitions.",
        "Anyone who wants to learn Python",
        "Anyone Wishing to Use Raspberry Effectively"
      ]
    },
    {
      "title": "LangChain on Azure - Building Scalable LLM Applications",
      "url": "https://www.udemy.com/course/langchain-on-azure-building-scalable-llm-applications/",
      "bio": "Navigating the Azure Landscape: A Pathway from Basic AI Applications to Scalable Microservices",
      "objectives": [
        "Azure account structure and resource group management",
        "Manage Files in the cloud with Blob Storage",
        "Azure Cognitive Search & PgVector as Vector Databases",
        "Utilize PgVector and the Indexing API for data retrieval",
        "Manage container images using Azure Container Registry",
        "Deploy and monitor Azure App Services",
        "Azure Functions and Event Grid for event-driven architecture",
        "Apply security measures to protect Azure app services and databases"
      ],
      "course_content": {
        "Introduction": [
          "Before we start...",
          "Prerequisites for this course",
          "What we build in this course",
          "What this course is NOT about",
          "Software Architecture"
        ],
        "Installation of required software": [
          "Installation of Docker",
          "Installation of the Azure CLI",
          "Installation of Visual Studio Code"
        ],
        "Microsoft Azure Basics": [
          "Create a Microsoft Azure Account",
          "Subscription & the Azure Hierarchy",
          "Create a Resource Group"
        ],
        "Azure Cognitive Search": [
          "Create an Azure Cognitive Search Service",
          "Set up venv, Jupyter Notebook kernel, and environment variables",
          "How to Create an Index and Insert Data in ACS using the Python SDK",
          "LangChain & ACS"
        ],
        "Blob Storage": [
          "Understanding and Implementing Blob Storage: Theory and Setup on Azure",
          "Blob Storage with the Azure Python SDK: Uploading, Deleting, and Managing Data"
        ],
        "PgVector & Indexing API": [
          "Setup PgVector with Azure Database for PostgreSQL flexible server",
          "Indexing API with PgVector",
          "Indexing API in combination with Blob Storage"
        ],
        "Retrieval with the LangChain Expression Language": [
          "Retrieval with LCEL from PgVector"
        ],
        "Local Start of Services with docker-compose & Code walkthrough": [
          "Setup of Services with docker-compose",
          "Frontend Code Walkthrough - HTTP Methods, Dockerfile, Proxy Setup",
          "Backend Code Walkthrough"
        ],
        "Azure Container Registry": [
          "Azure Container Registry Setup",
          "Build Docker Images and Push Images in Registry"
        ],
        "Azure App Services": [
          "Azure App Services Intro & Frontend Deployment",
          "Prepare Backend for Deployment",
          "Uploadservice Deployment & Entering of missing env variables"
        ]
      },
      "requirements": [
        "Intermediate Python Skills (OOP, Datatypes, Functions, modules etc.)",
        "Familiarity with the terminal",
        "Basic Docker knowledge",
        "Basic to intermediate LangChain knowledge - VectorStores, RAG, Agents etc."
      ],
      "description": "Dive into the depths of Azure and Large Language Model (LLM) applications with this comprehensive course. Starting with the initial setup of Azure account structures and resource groups, moving to the practical management of Azure Blob Storage, this course equips you with the essential skills to navigate and utilize Azure's extensive offerings.\nWe then delve into different vector stores, such as Azure Cognitive Search and PgVector, comparing their advantages and disadvantages. You will learn how to chunk raw data, embed it, and insert it into the vector store. A typical Retrieval Augmented Generation (RAG) process is performed on the vector store, primarily using Jupyter notebooks for this part of the course.\nAfter covering the basics, we transition from notebooks to using docker-compose to locally spin up services. We'll delve deeply into how these services work.\nThe next step is deploying these services to the cloud, where we learn about new services like the Container Registry and App Service.\nOnce the Web Apps are set up, we implement an event-driven indexing process with Blob Triggers, the Event Grid, and Azure Functions to index documents upon changes in Blob Storage.\nThe final chapters cover basic security measures, such as setting up a firewall for the database and IP-based access restrictions.\nThis course is tailored for individuals with foundational knowledge of Python, Docker, and LangChain and is perfect for anyone looking to build real applications with a production-grade architecture, moving beyond simple playground apps with Streamlit.",
      "target_audience": [
        "LLM Enthusiasts who are tired of simple LangChain & Streamlit applications and want to reach the next level"
      ]
    },
    {
      "title": "Dynamic Programming Java, Coding Interviews and Applications",
      "url": "https://www.udemy.com/course/dynamic-programming-java/",
      "bio": "Become a better developer by learning how to build efficient Dynamic Programming algorithms",
      "objectives": [
        "Recognize a problem that can be solved using Dynamic Programming",
        "Come up with both a top down and bottom up Dynamic Programming solution using Java",
        "Use Dynamic Programming for coding interview puzzles and practical applications",
        "Improve your problem-solving skills and become a better developer",
        "Revise your recursion knowledge"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Useful links and resources"
        ],
        "Understanding Recursion": [
          "Introduction to recursion",
          "More Recursion"
        ],
        "Counting Derangements": [
          "What's a Derangement?",
          "Coming up with a Recurrence Relation",
          "Recursive code walkthrough",
          "Top Down Solution",
          "Top Down code walkthrough",
          "Bottom Up Solution",
          "Bottom Up code walkthrough",
          "Optimization and code walkthrough"
        ],
        "Aircraft Spacing": [
          "Solving Air Traffic",
          "Defining a solution recursively",
          "Recursive code walkthrough",
          "Top Down Solution",
          "Top Down code walkthrough",
          "Bottom Up Solution",
          "Bottom Up code walkthrough",
          "Optimization and code walkthrough"
        ],
        "Maximum Sub Array": [
          "How are maximum sub arrays useful?",
          "Recurrence Relation",
          "Recursive code walkthrough",
          "Top Down Solution and code walkthrough",
          "Bottom Up Solution and code walkthrough",
          "Optimization and code walkthrough"
        ],
        "Text Justification": [
          "How to make paragraphs look pretty",
          "Solving Recursively",
          "Recursive code walkthrough",
          "Bottom Up Solution",
          "Bottom Up code walkthrough",
          "Optimization",
          "Optimization code walkthrough"
        ],
        "String Distance": [
          "Distance between Strings",
          "Solving Recursively",
          "Recursive code walkthrough",
          "Top Down Solution and code walkthrough",
          "Bottom Up Solution",
          "Bottom Up code walkthrough",
          "Optimization and code walkthrough"
        ],
        "Final Course Exercise": [
          "Well done!",
          "The Full Bus Tour Problem"
        ]
      },
      "requirements": [
        "Java programming language",
        "Familiarity with recursion, although we also cover this in the course"
      ],
      "description": "Have you ever wondered what makes a good developer? Why it is that big tech companies are increasingly asking candidates to solve challenging coding puzzles in interviews? Or why you should bother to learn about complicated algorithms?\n\n\nWith regards to technical skills a good developer has an understanding of computer science and knows when to apply this knowledge. Tech companies know that if someone has a good grasp of these fundamentals, she will likely be fine learning any programming language, using any new tool and solving a wide range of programming problems. As a developer comprehending data structures and algorithms you’ll be better equipped to tackle some of the more difficult problems both in your day-to-day job and for coding interviews.\n\n\nDynamic Programming is a topic in data structures and algorithms. It covers a method (the technical term is “algorithm paradigm”) to solve a certain class of problems. In this course we will go into some detail on this subject by going through various examples. The course is designed not to be heavy on mathematics and formal definitions. Instead you will learn through practical everyday programming algorithms and through some coding interview puzzles. We present a method to recognize problems that can be solved using dynamic programming and then build an efficient solution through small gradual steps.\n\n\nIn addition, you will also learn how to gamble professionally, how to be an air traffic controller and how to become a serious writer.*\n*Not really… but hey it’s hard to make Dynamic Programming sound exciting...\n\n\nAll code in this course can be found on github, username/project: cutajarj/DynamicProgrammingInJava\n\n\nAt the end of the course we have a small coding exercise to test your knowledge.",
      "target_audience": [
        "Self taught developers who are looking to up their game and become better developers",
        "Experienced developers wanting to learn how to apply Dynamic Programming to solve certain classes of problems",
        "Developers wanting to prepare for an upcoming coding interview",
        "University students struggling with Dynamic Programming"
      ]
    },
    {
      "title": "Software Development Fundamentals 2022 (using VB .Net)",
      "url": "https://www.udemy.com/course/vb-net-complete-antivirus-and-vpn-software-full-course/",
      "bio": "Learn Visual Basic and Desktop applications (VB .Net version).",
      "objectives": [
        "Create a Complete Antivirus Software with VPN integration ready for your market - Unofficial",
        "Learn how to Create Beautiful UI Designs in VB-Net",
        "Learn from Basic to Advance in VB-Net",
        "Learn to create Trial Periods for your projects",
        "Learn to create Subscription Plans to your Project",
        "Learn to use User Controls",
        "Learn to Use Custom Classes",
        "Learn to create your own Custom Buttons",
        "Learn to release and prepare your project for the market (EXE Installer)",
        "Many More..."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About this Course",
          "Contents of this Course",
          "Things you need for this course",
          "Installing Software"
        ],
        "UI DESIGNING": [
          "Create Project",
          "UI DESIGN 1",
          "UI PART 2",
          "UI PART 3",
          "UI PART 4",
          "UI PART 5",
          "UI PART 6",
          "UI PART 7",
          "UI PART 8",
          "UI PART 9",
          "UI PART 10",
          "UI PART 11",
          "UI PART 12",
          "UI PART 13"
        ],
        "MAIN FUNCTION CODING": [
          "CODING 1",
          "CODING 2",
          "CODING 3",
          "CODING 4",
          "CODING 5",
          "CODING 6",
          "CODING 7",
          "CODING 8",
          "CODING 9"
        ],
        "EXTRAS": [
          "EXTRA 1",
          "EXTRA 2",
          "EXRA 3"
        ],
        "COMPLETE PROJECT FILE": [
          "DOWNLOAD FULL SOUCE CODE"
        ]
      },
      "requirements": [
        "No Programming Experience needed, you will learn everything",
        "Just get yourself ready to learn and do it"
      ],
      "description": "Hi There!\nWelcome to my course on \"Software Development Fundamentals\" using VB .Net. In this course, we will be looking at a variety of different types of programs and concepts around programming.\nWe'll start off with looking at Core Programming. We will download for free the Visual Studio Community edition, and use it to investigate the fundamental VB .Net statements. We'll look at decision structures such as If and Switch [Case Select], repetition such as For loops, While loops and recursion, and then we'll look at errors and find out how to handle them.\nWe'll then look at Object-Oriented Programming. We'll go deeper into concepts that we have already used, such as namespaces, methods and classes, and add to them using events and constructors. We'll see how you can duplicate and develop classes using inheritance, polymorphism and encapsulation.\nNext up is General Software Development. We'll look at various different data structures such as arrays, stacks, queues and linked lists, and we'll also look at sorting algorithms. We'll then take a step back and look at application life cycle management, and how to interpret application specifications.\nThen we'll look at Desktop Applications. We will have been creating a lot of Console-based applications earlier in this course, but we'll add to this with Windows apps and Windows Services.",
      "target_audience": [
        "Beginner Developers willing to learn more about software development",
        "Senior Developers willing to create their own amazing fully functional software for the market",
        "Finally, anyone willing to create something amazing"
      ]
    },
    {
      "title": "Algorithms and Software Engineering for Professionals",
      "url": "https://www.udemy.com/course/algorithms-and-software-engineering-for-professionals/",
      "bio": "Understand the core concepts and algorithms of software engineering using Java",
      "objectives": [
        "Master the core software engineering algorithms",
        "Understand the concepts Iterations, time complexity and optimization",
        "Understand key data structures such as stack and queues",
        "Learn the Art of Algorithm design",
        "Master tree and graph Algorithms",
        "Ace in technical interviews with proper grasp of concepts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Iterations and Transformations on Sequence’s": [
          "Iterations",
          "Iterations Lab 1 Count Condition Loops with Java 8 Streams",
          "Iterations with Java Collections .",
          "Iterations Lab 2 LinkedList Unsafe iteration on Queues",
          "Iterations with Java Maps and Streams",
          "Iterations Lab 3 Matching Pattern Sequences with iterations Part A",
          "Iterations Lab 3 Matching Pattern Sequences with iterations Part B"
        ],
        "Time Complexity": [
          "Time Complexity",
          "Big O specific calculation",
          "Time Complexity Lab 1 Practical Obtain Sequence Introduction",
          "Time Complexity Lab 1 Practical Task Obtain Sequence Solutions",
          "Array Operations 1 Equilibrium Index",
          "Array Operations 2 Optimal Index",
          "Sorting Arrays",
          "Time Complexity Lab 2 Array task with Expected Worst case time complexity O(n)",
          "Space complexity",
          "Sorting Algorithms Time and Space complexity",
          "Common Sorting Algorithms best and worst case",
          "Time Complexity Lab 3 Sorting Algorithm efficiency"
        ],
        "Counting and Optimisation": [
          "Counting Concepts",
          "Sliding window maxima and minima",
          "Counting and Optimisation Lab 1 Application of a Sliding window",
          "Counting and Optimisation Lab 1 Application of a Sliding window Part B",
          "Counting Patterns",
          "Count Combinations",
          "Count Permutations",
          "\"Counting and Optimisation Lab 2 Application of Counting to Permutations \"",
          "Counting Theorem for Algorithms",
          "Counting Sort",
          "Pigeonhole Sort",
          "Counting and Optimisation Lab 3 Application of the Counting Theorem"
        ],
        "Sorting": [
          "Sorting Concepts",
          "Implement Insertion Sort with comparator",
          "Sorting Lab 1 Introduction",
          "Sorting Lab 1 Compute the number of distinct values in array of N integers.",
          "Breaking the Quadratic time barrier",
          "Implement Heap Sort",
          "Recursive Sorting Algorithms",
          "Implement MergeSort",
          "Sorting Lab 2 Practical Optimise subsequences",
          "Implement Radix sort Part A",
          "Implement Radix sort Part B",
          "Sorting Lab 3 Practical Radix Sort on String Arrays"
        ],
        "Stacks and Queues": [
          "Stack Concepts",
          "Implement a basic Stack with a Linked List",
          "Perform simple stack algorithm with Reverse Polish notation",
          "Stacks and Queues Lab 1 Application of a Stack",
          "Queue Concepts",
          "Implement a basic Queue with a Linked List",
          "Practical Application of a Queue",
          "Stacks and Queues Lab 2 Practical Application of a Queue",
          "Parsing Concepts",
          "Implement a simple AST parser",
          "Stacks and Queues Lab 3 Test for Well Formed Expressions"
        ],
        "Divisibility Operations and Primes": [
          "Slice Operations",
          "Implement Kadane's algorithm",
          "Implement a double-slice operation",
          "Slice Operations Lab 1 Application of a slice operation Part A",
          "Slice Operations Lab 1 Application of a slice operation Part B",
          "Divisibility Operations",
          "Implement Euclidean algorithm (common factors)",
          "Implement a test for a prime number",
          "Slice Operations Lab 2 Simple Peak detection",
          "Slice Operations Lab 2 Simple Peak detection Part B",
          "Divisibility Operations and Primes",
          "Sieving (finding prime numbers)",
          "Slice Operations Lab 3 Probabilistic Tests for Large Primes Part A",
          "Slice Operations Lab 3 Probabilistic Tests for Large Primes Part B"
        ],
        "Tree Based Algorithms": [
          "Search Algorithms",
          "Implement a Binary search",
          "Implement a Hash table",
          "Tree Based Algorithms Lab 1 Binary search algorithm optimisation",
          "Binary Trees",
          "Implement a Binary Search Tree",
          "Binary Tree recursion",
          "Tree Based Algorithm Lab 2 Extend the Binary Tree API",
          "Avl Trees",
          "Implement a Avl Tree",
          "Sub Trees and Paths",
          "Tree Based Algorithm Lab 3 Tree Traversal (Paths)"
        ],
        "Graph Algorithms": [
          "Graphs Concepts",
          "Implement a Graph as a Abstract Data Type (ADT)",
          "Implement a Depth-first search",
          "Graph Algorithms Lab 1 Path Search with dfs",
          "Graphs Search",
          "Implement a Directed Graph as a Abstract Data Type (ADT)",
          "Implement a Breadth-first search",
          "Graph Algorithms Lab 2 Breadth First Search",
          "Topological Sort",
          "Implement a Topological sort",
          "Graph Algorithms Lab 3 Shortest Path Optimisation"
        ],
        "Algorithm Design": [
          "Greedy Programming Concepts",
          "Implement a Greedy Solution",
          "Algorithm Design Lab 1 Overlapping Segment Application",
          "Dynamic Programming Concepts",
          "Implement a Dynamic Solution",
          "Algorithm Design Lab 2 Optimise Stock Trades Part A",
          "Algorithm Design Lab 2 Optimise Stock Trades Part B",
          "Divide-and-Conquer Concepts",
          "Implement a Divide-and-Conquer Solution",
          "Algorithm Design Lab 3 Count the Unique Inversions"
        ]
      },
      "requirements": [
        "This is an advance course and basic programming knowledge is assumed"
      ],
      "description": "In order to build something, you must start from the ground up. It is always important to understand the basics and the core of a concept and this ideology also holds true for software programming. Data structures and algorithms are the basic building blocks for Software Engineering, that determine how the system will operate.\nData structures and algorithms are two common concepts that can be found in Software Engineering and are imperative to mastering any programming language or technology within the software technology landscape. In order to master any programming language, functional or objective, one must first understand the basic concept behind it, which includes algorithms.\nData in software engineering are represented in data structures such as maps, lists, trees, etc. and is in the constant need of being sorted and merged, transformed and matched in some way. For this reason, software engineers devised algorithms as a solution for this task, which is consistent, repeatable and testable with a set of metrics to quantify performance.\nHowever, for data structures to work seamlessly with your system, you need to understand the basics to creating clean, efficient and powerful algorithms that reduces the amount of work required by the engineer. This is where this course can help.\nOur comprehensive course has been designed to help you understand algorithms and data structures from scratch. This course covers important concepts related to data structures and algorithms including the five major categories of algorithms: Cryptography, Compiler Theory, Signal Processing, Data Analysis, and Graph Databases. This is a course for the Big Boys.\nIt also includes understanding other primary concepts such as recursion and its relationship to concurrency and ADT’s like Trees and Graphs; relationship between trees and rotation operations used in balancing, operations with Primes, Fermat's theorem, parsing grammars with Stacks and Queues and related tools like AST based parsers the beginning step on the road to Compiler theory.\nIn addition to covering the theoretical concepts, the course also is packed with examples of practical applications. It is important to not only understand what the concept it, but also how to use it. You will definitely get the best of both worlds in this algorithm and data structure tutorial.\nThis course will also help you ace the theoretical intensive tech interviews. So if you plan to apply for a tech job, this course will act as a great refresher.\nWith this course, you will not only be able to understand algorithms, but actually write better algorithms to help simplify your programming life. With this much power waiting for you, what are you waiting for? Let’s get started.",
      "target_audience": [
        "Students who want to master core concepts and algorithms for better software development will find this course very effective"
      ]
    },
    {
      "title": "Competitive Programming",
      "url": "https://www.udemy.com/course/competitive-programming/",
      "bio": "Master the Theory and Application of Algorithms and Data Structures to Excel in Programming Contests",
      "objectives": [
        "Competitive Programming",
        "Algorithms",
        "Data Structures",
        "Programming",
        "Merge Sort, QuickSort, Count Sort, Bucket Sort",
        "Linear Search, Binary Search, QuickSelect, Two Pointer Technique",
        "Stacks, Queues, Hash Tables, Hash Sets, Heap-Based Structures, Binary Search Tree-Based Data Structures, Coordinate Compression, Custom Comparators",
        "Hash Functions, Collisions, Rabin-Karp, Sliding Window Technique",
        "Greedy Algorithms",
        "Iterative Complete Search, Backtracking, Permutations, Subsets, Pruning",
        "Divide and Conquer, Binary Search the Answer, the Bisection Method",
        "Dynamic Programming: Competitive Approach, Top-Down and Bottom-Up DP, Space Optimisation, Prefix Sums, Backtracking to Find Solutions",
        "Graph Representation: Adjacency Lists, Adjacency Matrices, Edge Lists, Weighted and Unweighted Graphs",
        "Graph Exploration: Breadth-First Search (BFS), Depth-First Search (DFS), Connected Components, Multi-Source BFS",
        "Directed Graphs and Cycles: Topological Sort, Strongly Connected Components, BFS for Single-Source Shortest Paths",
        "Shortest Paths: Dijkstra, Floyd-Warshall's, Bellman-Ford and Negative-Weight Cycles, Arbitrages and the Logarithm Trick",
        "Trees: Special Properties, Faster Shortest Paths, Diameter, Minimum Spanning Trees",
        "Union-Find Disjoint Sets: Optimised Implementation, Kruskal's Algorithm, Minimum Spanning Tree Variants",
        "Strings: Dynamic Programming on Strings, Longest Common Subsequence, Edit Distance, Longest Palindromic Substring, Tries, Suffix Tries",
        "Game Theory: States and Transitions, Minimax for Optimal Game Playing, Dynamic Programming To Recover Optimal Strategies",
        "Approaching Interactive Problems"
      ],
      "course_content": {
        "Introduction": [
          "About the Instructor",
          "Course Prerequisites",
          "Course Structure",
          "What is an Online Judge?",
          "Online Judge Verdicts",
          "Types of Problem in Programming Contests",
          "I/O for Competitive Programming",
          "Welcome Contest",
          "Hints and Solutions"
        ],
        "Sorting": [
          "Introduction to Section 2 and the Horse Race Problem",
          "Sorting in C++ Using Custom Comparators",
          "Structs and Overloading Comparison Operators",
          "Merge Sort",
          "QuickSort",
          "DNA Sorting Problem",
          "Count Sort",
          "Football Problem",
          "Bucket Sort",
          "Bucket Sort Solution to the Football Problem",
          "Problem Set 1",
          "Hints and Solutions"
        ],
        "Searching": [
          "Linear Search",
          "Binary Search",
          "QuickSelect",
          "Two Pointer Technique: Start+End",
          "Two Pointer Technique: Different Paces",
          "Problem Set 2",
          "Hints and Solutions"
        ],
        "STL Data Structures: Stacks, Queues and BST- and Heap-based Structures": [
          "Stacks: bracket matching",
          "Queues",
          "Hash Tables and Hash Sets Introduction",
          "Unordered (Hash) Sets and Maps in C++",
          "Ordered Sets and Maps",
          "Dictionaries",
          "Coordinate compression",
          "Custom Comparators for STL Data Structures",
          "Problem Set 3",
          "Hints and Solutions"
        ],
        "Hashing": [
          "Hash Functions",
          "Extra: Handling Collisions",
          "Rabin-Karp Case Study: Pattern Search",
          "Rabin-Karp Case Study: Polynomial Rolling Hash Functions",
          "Rabin-Karp Case Study: Sliding Window Technique",
          "Sliding Window Technique: Subarray Sums",
          "Problem Set 4",
          "Hints and Solutions"
        ],
        "Greedy Algorithms": [
          "What are Greedy Algorithms?",
          "Greedy Coin Change",
          "Demonstrating Correctness Under Contest Time Pressure",
          "Timetable Problem",
          "Interval Covering",
          "Sort -> Solve",
          "Problem Set 5",
          "Hints and Solutions"
        ],
        "Complete Search": [
          "Complete Search Introduction",
          "Backtracking Introduction",
          "Backtracking: Permutations",
          "Backtracking: Subsets",
          "Pruning: Card Game",
          "Iterative Complete Search",
          "Problem Set 6",
          "Hints and Solutions"
        ],
        "Divide and Conquer": [
          "Revisiting Sections 2 and 3",
          "Binary Search the Answer",
          "The Bisection Method",
          "Problem Set 7",
          "Hints and Solutions"
        ],
        "Dynamic Programming": [
          "Top-Down Fibonacci",
          "Bottom-Up Fibonacci",
          "How to Recognise and Approach DP Problems",
          "Maximum One-Dimensional Range Sum",
          "Space Optimisation",
          "Optimal Coin Change 1",
          "Optimal Coin Change 2",
          "Backtracking to Find Solutions",
          "Prefix Sums",
          "Horses Problem Revisited",
          "Horses Addendum",
          "Problem Set 8",
          "Hints and Solutions"
        ],
        "Graphs 1: Graph Exploration": [
          "Graph Terminology",
          "Graph Representation",
          "Depth-First Search",
          "Breadth-First Search",
          "Farthest Node: BFS Application",
          "Graph Sums: DFS Application",
          "Connected Components",
          "Labyrinth Problem Part 1: Single-Source BFS",
          "Labyrinth Problem Part 2: Multi-Source BFS",
          "Problem Set 9",
          "Hints and Solutions"
        ]
      },
      "requirements": [
        "Basic C++, such as conditionals, loops, variables or functions. No Object-Oriented Programming (OOP) required."
      ],
      "description": "Ready to take your programming skills to the next level? In this course, which will help both novice and advanced programmers alike, you will dominate the algorithms and data structures necessary to do well in contests and to gain a competitive edge over other candidates in software interviews.\nThere are many tricks which are gained through experience and competitive programmers have a sixth sense when it comes to breaking problems down into the building blocks that make up a solution and which many are reluctant to share. Here I will let you in on the techniques and the applications that are useful for the field, focusing on real problems and how they are solved, while giving you an intuition on what is going on under the hood and why these ideas work.\nFrom dynamic programming to graph algorithms and backtracking, you will get to practise and feel confident about many topics, learning advanced concepts such as union-find disjoint sets, tries and game theory without feeling lost, and to apply new content as soon as you learn it, with over 100 suggested problems, both from past olympiads and online judges and some created by me specifically for this course. All of them come with detailed solutions. With this course, you will be ready to participate in online contests and informatics olympiads, and will have the experience necessary to continue advancing in this field. Are you ready to take this big step in your journey?",
      "target_audience": [
        "Students and engineers wishing to delve into competitive programming, diving into the details and soaring up the rankings",
        "Developers with a desire to master algorithms to succeed in technical interviews",
        "High school students with a passion for Mathematics interested in seeing algorithms applied to technology",
        "Anyone interested in gaining insights and learning the details of algorithms and data structures"
      ]
    },
    {
      "title": "【日本語字幕版】Mastering OpenAI APIs: Unleash the Power of GPT4",
      "url": "https://www.udemy.com/course/mastering-openai-apis-unleash-the-power-of-gpt4-jpsub/",
      "bio": "GPT-4での収録！ChatGPT API、Whisper、エンべディング、DALL-E、そして数々のプロジェクトでOpenAIをマスターしましょう！",
      "objectives": [
        "OpenAIのGPT-4とText Completionを習得する",
        "GPTのパラメーターを理解してモデルのパフォーマンスを調整する",
        "GPT-4を使用して任意の言語でコードを書き、分析し、デバッグする",
        "GPTの出力を一貫性のために構造化し、洗練する",
        "特定のユースケースと固有の要件に対応するためにGPT-4をカスタマイズする",
        "DALL-E 2を使用して画像を生成し、編集する",
        "テキストの検索、分類、理解のためにテキストエンべディングを使用する",
        "エンべディングを活用したレコメンドアルゴリズムを構築する",
        "Whisperを使用して音声ファイルを翻訳し、文字起こしする"
      ],
      "course_content": {
        "イントロ": [
          "コースの概要",
          "Discordコミュニティの紹介",
          "OpenAIの簡単な歴史",
          "GPTについて",
          "任意：Transformerアーキテクチャ",
          "アカウントの登録",
          "【重要！】コースのアップデートについて",
          "CHANGELOG - 必須！",
          "コースのコードについて",
          "コースのスライドについて"
        ],
        "はじめよう": [
          "事前準備",
          "OpenAIの破壊的アップグレードによる重要なお知らせ",
          "はじめてのCompletionリクエスト",
          "APIキーを隠そう",
          "トークンについて",
          "max_tokens",
          "ストップシーケンス",
          "n と echo",
          "様々なCompletionモデル",
          "モデルの性能と価格の比較"
        ],
        "プロンプトエンジニアリング": [
          "良いプロンプトとは",
          "出力形式の制御",
          "要約プロンプト",
          "データ抽出プロンプト",
          "感情分析プロンプト",
          "Zero-shot 対 Few-shot プロンプト",
          "ステップ・バイ・ステップなプロンプト",
          "テキスト変換プロンプト"
        ],
        "カラーパレットジェネレータプロジェクト": [
          "カラーパレットプロジェクトの紹介",
          "カラーパレットジェネレータプロンプトの作成",
          "色の見本描画関数の作成",
          "Flaskサーバーのセットアップ",
          "OpenAIとサーバーの結合",
          "/palette エンドポイントの作成",
          "フォームの作成",
          "ブラウザでの色の描画",
          "コピペ機能",
          "カラーブロックのスタイリング",
          "フォームのスタイリング",
          "フロントエンドのリファクタ"
        ],
        "重要なAPIパラメータ": [
          "温度(Temperature)",
          "Top Pについて",
          "頻度ペナルティ(Frequency Penalty)",
          "プレゼンスペナルティ(Presence Penalty)",
          "ストリーミングレスポンス"
        ],
        "Chat API と GPT-4": [
          "Chat APIの紹介",
          "はじめてのChatリクエスト",
          "価格に関する重要事項",
          "メッセージ形式でのプロンプト",
          "gpt-3.5-turboの種類について",
          "CompletionをChat形式に書き直し",
          "Chat APIのパラメータ"
        ],
        "GPT-4チャットボットを作ろう": [
          "チャットボットプロジェクトについて",
          "チャットボットの大枠作成",
          "リクエスト間でのメッセージの保持",
          "オプションで個性をを追加",
          "チャットボットの出力に色付け"
        ],
        "GPT-4とコード": [
          "GPT-4にコードを解説してもらう",
          "GPT-4で時間計算量を求める",
          "GPT-4をでJSをPythonに変換",
          "GPT-4を使ったバグの修正",
          "GPT-4を使って一からコードを生成"
        ],
        "TikTokenでコストの見積り": [
          "TikTokenを使用したトークンのカウント",
          "GPT-4のメッセージトークンのカウント"
        ],
        "GPT-4自動コードレビュー": [
          "コードレビューアの紹介",
          "コードレビューアの実装その１",
          "コードレビューアの実装その２",
          "対話型コードレビューアの紹介",
          "対話型コードレビューアのプロンプト",
          "対話型コードレビューアのウォークスルー"
        ]
      },
      "requirements": [
        "初心者レベルのPython経験だけで十分です！"
      ],
      "description": "超人気講師Colt Steeleによる「Mastering OpenAI Python APIs: Unleash ChatGPT and GPT4」の日本語字幕版！\n\n\nこのコースではOpenAIが提供するAPI（GPT-4、DALL-E、Whisperなど）をマスターする方法を学びます。GPT-4の可能性を最大限に引き出してみませんか？\n\n\nあなたも人工知能の世界に一歩を踏み出し、OpenAIの最新のAPI（GPT-3、GPT-3.5、GPT-4、DALL-E、Whisper）を使って、革新的ななアプリケーションやソリューションを作り上げる方法を身につけてみませんか。プロジェクト中心のこのコースは、どのような背景やスキルレベルの学習者にも対応しており、AIを活用した開発の基礎を学べます。\n\n\nこのコースで次のことを学びます：\nOpenAIの生成モデルとその応用可能性への深い理解\n自然言語処理を活用したGPT-4の使用方法、テキスト生成や要約、翻訳など\nデバッグや改善、そしてゼロからのコード作成に向けたGPT-4の活用方法\nテキストプロンプトを用いてDALL-Eで鮮やかな画像やアートワークを作成\nWhisperを用いた音声の正確な書き起こしと翻訳方法\nエンベディングを用いたテキストの抽出、検索、比較方法、および単語や段落、文書間の幾何学的な距離を活用する方法\n\n\n実践的なプロジェクトでの学び：\nGPT-4を用いたQ&Aボット作成\nGPT-4を使用したカラーパレット検索エンジン作成\nGPT-4を使用した対話型コードレビューア作成\nAI駆動のSpotifyプレイリストジェネレータ作成\nGPT-4を使用したRedditのコメント感情分析\n任意のサイズの書籍を要約する方法\nDALL-EとGPT-4で自分だけの、対話型で無限の可能性を秘めた冒険物語アプリ作成\nエンべディングを活用した映画のレコメンドアルゴリズム作成\n\n\nコース全体を通じて、具体的なプロジェクトや実例を通じて学習することで、新たに得た知識やスキルを直ちに活用することができます。さらに、以下のような詳細についても学べます：\nプロンプトエンジニアリング、トークン化、および温度(Temperature)設定のベストプラクティス\nAPIパフォーマンス、エラーハンドリング、リソース管理の最適化戦略\nAI駆動開発に伴う倫理的な観点と課題\n\n\nソフトウェア開発者、データサイエンティスト、AIに興味がある方、どなたでもこのコースでOpenAIのAPIをプロジェクトに取り入れ、革新的なAI駆動ソリューションを作成するための専門的な知識を習得することができます。\n\n\nこのコースを通してスキルを進化させ、OpenAIのGPT-4、DALL-E、そしてWhisper APIの無限の可能性を引き出しましょう。ぜひこのコースにご登録ください。OpenAIの力を体感し、AIの未来を一緒に切り開きましょう！\n\n\nUnleash the Power of AI: Master OpenAI's APIs, including GPT-4, DALL-E, and Whisper in this Comprehensive and Hands-On Course. This is a brand new course, recorded with GPT-4!\nStep into the world of artificial intelligence and discover how to harness OpenAI's cutting-edge APIs, including GPT3, GPT-3.5, GPT4, DALL-E, and Whisper, to create groundbreaking applications and solutions. This immersive, project-driven course is designed for learners of all backgrounds and skill levels, providing a solid foundation in AI-driven development.\nIn this comprehensive course, you will:\nDevelop a deep understanding of OpenAI's generative models and their potential applications\nMaster GPT-4 for natural language processing, including text generation, summarization, translation, and more\nUse GPT-4 to debug code, improve code, and even write code from scratch\nGenerate visually stunning images and artwork using DALL-E based on textual prompts\nConvert spoken audio into accurate transcriptions and translations with the power of Whisper\nUse AI Embeddings to distill, index, search, and compare text, unveiling the geometric power for comparing words, paragraphs, and documents",
      "target_audience": [
        "AIに興味のある開発者",
        "生成モデルで作業効率を上げたいソフトウェアエンジニア",
        "OpenAIのツール群に興味のある起業家",
        "創作のワークフローを強化したいコンテンツクリエーター"
      ]
    },
    {
      "title": "How to Create a Google Sheets Add-on",
      "url": "https://www.udemy.com/course/how-to-create-a-google-sheets-add-on/",
      "bio": "Add unique functionality to Google Sheets. Navigate the process from creation, through rejection, to ultimate approval",
      "objectives": [
        "Create a publishable new feature of Google Sheets™",
        "Extend Google Sheets™ functionality",
        "Get free templates to build a site for your add-on and market your add-on",
        "Overcome rejection when listing your add-on to the Workspace Marketplace"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is an add on? and what problems can it solve?"
        ],
        "MAKE IT WORK": [
          "Introduction",
          "Write Apps Script to Create a New Google Sheets Formula",
          "Add Autocomplete with Custom Function",
          "How to Name Your Add-on"
        ],
        "MAKE IT USABLE": [
          "Introduction",
          "Add-on Menu onOpen",
          "OnInstall to onOpen",
          "Apps Script Manifest",
          "Connect to a Google Cloud Project",
          "OAuth Consent Screen",
          "OAuth Scopes"
        ],
        "MAKE IT DISCOVERABLE": [
          "Introduction",
          "Add-on Logo Design",
          "Add-on Banner Design",
          "Add-on Screenshots",
          "Add-on Web Site"
        ],
        "MAKE IT MARKETPLACE-ABLE": [
          "Introduction",
          "Check Add On Works and Record Client ID Video",
          "Create an Oauth Consent Screen YouTube Video",
          "Complete the OAuth Consent Screen Approval",
          "OAuth Verification Request Email Action Needed",
          "OAuth Approval Request Granted",
          "Marketplace SDK Install and App Configuration",
          "Marketplace Store Listing",
          "Submit Store Listing for Approval",
          "Rejection!",
          "Marketplace Approval",
          "Marketplace Opportunities",
          "Update Your Add-on",
          "Upgrade Your Add-on to V8 Runtime Explained"
        ],
        "Create an Internal Add-on": [
          "How to Create an Internal Google Sheets Add-on"
        ]
      },
      "requirements": [
        "You do not need to be expert programmer, but should know basic programming concepts.",
        "You'll need to have used Google Sheets.",
        "You've already signed up for the Google Developers and have a Workspace Account."
      ],
      "description": "Creating and publishing a Google Sheets Add-on involves several steps, including coding, testing, packaging, and submitting the add-on for publication. In this walkthrough, I'll guide you through the entire process, including the challenges you might encounter and how to overcome them.\nDuring the course of this video course I publish my 6th add-on. I share with you the problems, rejections, challenges, and how to overcome them all.\nI share with you the website template I use for all my add-ons, and the exact theories I use now to publish on the Workspace Marketplace to be found.\nThis course is great for those who want to extend the functionality of Google Sheets, or those who want to integrate their own app into Sheets. Whether you want to make something for sheets users to find you, or you want to make a functioning app for your current customers in sheets. This course has something for you.\nIf you have an add-on in mind to make, let's walkthrough the entire process of creating, coding, and ultimately publishing a Google Sheets Add-on.\nIf you have not yet gotten an idea there's plenty in this course!\nWhether you're making a free add-on, a paid add-on, or even an add-on just for your organization, this course will help you through the entire process.",
      "target_audience": [
        "Startups looking to build add-ons or Sheets integrations for their users. Also a great way to build a MVP.",
        "Agencies seeking to build an add-on as a lead magnet for clients. Customers can use your proprietary machinations without giving them Apps Script.",
        "Businesses of all sizes who wish to extend Google Sheets functionality for themselves and others.",
        "Educators and Teachers who wish there was one little thing in Sheets that does _____ (fill in the blank)! Build it yourself."
      ]
    },
    {
      "title": "Elasticsearch Queries In Practice",
      "url": "https://www.udemy.com/course/elasticsearch-search-api-and-query-dsl-in-practice/",
      "bio": "A Complete Guide to Elasticsearch Query DSL, Search API, Optimization & Tune-up",
      "objectives": [
        "Elasticsearch Query DSL & Search API best practices",
        "Distributed search architecture & basic terms",
        "How to tune-up and analyze queries",
        "How to customize routing and scoring",
        "How to do highlighting, suggestions, spell corrections",
        "How to design effective notifications with Percolate Query",
        "How to analyze and aggregate data using aggregations",
        "How to use query templates"
      ],
      "course_content": {
        "About this Course and Author": [
          "About the author"
        ],
        "Code & Slides Download": [
          "Slides and Code Download"
        ],
        "Prerequisites": [
          "How to prepare yourself to this course",
          "Role of Elasticsearch in the infrastructure",
          "Basic Terms",
          "Test"
        ],
        "Search in Elasticsearch cluster": [
          "Distributed Search",
          "Source and Inverted Index"
        ],
        "Query DSL": [
          "How to run Elasticsearch & Kibana",
          "Sample DataSet",
          "Search Types",
          "Search API",
          "Term Query",
          "Bool Query",
          "Query context or Filter context",
          "Range Query",
          "Prefix Query & Wildcard Query",
          "Regexp Query",
          "Match Query",
          "QueryString Query",
          "Fuzzy query",
          "Span Query",
          "Geo Query",
          "Nested objects & nested query",
          "Reverse search - Percolate"
        ],
        "Aggregations": [
          "Aggregations Overview",
          "Aggregations - Metric Aggregations",
          "Aggregations - Bucketing Aggregations",
          "Aggregations - Pipeline Aggregations"
        ],
        "Search API special features": [
          "Highlighting",
          "Suggestions And Spell Correction",
          "Search templates",
          "Source filtering",
          "Scroll API"
        ],
        "Tuning & Optimizations": [
          "Tuning & good practices",
          "Index naming convention",
          "Search Profiler",
          "Performance testing",
          "Slowlog",
          "Custom Routing",
          "Custom Analyzer",
          "Custom Scoring"
        ],
        "Congratulations": [
          "Thank You!"
        ]
      },
      "requirements": [
        "No programming nor administrative experience needed",
        "Basic HTTP and RESTful API experience is fine enough",
        "Access to any running Elasticsearch/Kibana deployment is optional (course contains simple installation guide)"
      ],
      "description": "This course will guide you how to properly and effectively use Elasticsearch Query DSL (Domain Specific Language) based on JSON to define queries. Additionally I present most commonly used Search APIs that will help you fully understand how Elasticsearch works and how to use it to build modern search applications, like Google, Bing, Yahoo!, DuckDuckGo etc. Course contains a lot of practical knowledge, examples and hands-on lectures.\nIf you are a beginner, don't worry, course guides you from very generic concept of lucene inverted index and role of search engines like Elasticsearch) in the system architecture to more advanced features.\nIf you have no data to play with, don't worry we import sample datasets at the very beginning of this course.\nIf you already have experience with Elasticsearch, you will enjoy the advanced part of it. Maybe you wonder if the way that use use Elasticsearch is the proper way and maybe your queries can return results faster ? If so, then course will help you find answers to that questions, optionally grounding and strengthening your exiting experience. No matter what is your existing level of knowledge, after completing this course, you will be ready to become a true professional in the Elasticsearch community.\nIn this course, I will show you how to properly use Elasticsearch product. We will start by explaining basic terms and role of Elasticsearch in the system architecture. Then, after importing sample data, we will go through term based queries, range queries, specialized queries, geo queries, nested queries and so on. We will get to know how to build effective notifications by using percolate queries or aggregate and analyze results using aggregations.\nI’ll show you how to do highlighting, suggestions, spell corrections, and template your queries. At the end we will cover tuning and optimization best practices, query profiling, performance testing and customize default routing and scoring.\nOverall, you'll learn how to properly and effectively query Elasticsearch in the easy way, without spending hours reading manuals.\nI hope to see you in the first lecture.",
      "target_audience": [
        "Software Engineers",
        "Architects",
        "DevOps & Administrators",
        "Developers & QA"
      ]
    },
    {
      "title": "Embedded Development with Qt5 from scratch!",
      "url": "https://www.udemy.com/course/embedded-development-with-qt5-from-scratch/",
      "bio": "Develop and run your own Qt applications on a Raspberry Pi in less than two hours!",
      "objectives": [
        "Develop Qt applications on Raspberry Pi",
        "Working with Embedded Hardware",
        "Developing on Embedded Hardware using the Qt Framework",
        "Cross compiling Qt for Raspberry Pi"
      ],
      "course_content": {
        "Introduction": [
          "What is a Raspberry Pi?"
        ],
        "Setting up the environment": [
          "Flashing Raspberry Pi Rasbian image",
          "WiFi/SSH set up on Raspberry Pi",
          "Prepare Raspberry Pi Target Device",
          "Setting up Linux VM (optional)",
          "Prepare Ubuntu Host"
        ],
        "Cross compiling Qt": [
          "Compile Qt from Sources",
          "Deploy Qt to the Device"
        ],
        "Starting with Embedded Development": [
          "Build Qt application for Rarpberry Pi",
          "Development using the terminal",
          "Development using the QtCreator",
          "Create a new application and run it on the Raspberry Pi"
        ],
        "Loading Qt applications on start-up": [
          "Running a Qt application on startup",
          "Setting up a custom QML splash screen"
        ],
        "Bonus: Creating device replicas": [
          "Backup Raspbian OS"
        ],
        "Disclaimer/Where to go from here": [
          "Disclaimer/Where to go from here"
        ]
      },
      "requirements": [
        "Ideally you should have a Raspberry Pi with an SD Card and a display in order to follow the hands-on parts"
      ],
      "description": "Cross platform is one of the biggest advantages Qt brings with it, thus a very good reason to be used for development on embedded devices, but is it really as easy as it sounds? In this course, we'll see step by step all necessary things needed to be done in order to achieve a seamless embedded development process, using our computer for implementation and deploying from it directly to the target for testing, agile, fast and efficiently!",
      "target_audience": [
        "UI Developers",
        "UX Developers",
        "Embedded Software Engineers",
        "Software Engineers interested in UI Application Development for Embedded Systems",
        "Software Engineers",
        "GUI Developers"
      ]
    },
    {
      "title": "Algorithms for Coding Interviews",
      "url": "https://www.udemy.com/course/algorithms-for-coding-interviews/",
      "bio": "with problems and solutions",
      "objectives": [
        "Understand the inner working of the most common algorithms used in coding interviews",
        "Identify which algorithm is a better fit depending on the problem",
        "Improve your problem solving skills",
        "Improve your interviewing skills"
      ],
      "course_content": {
        "Introduction": [
          "Objectives",
          "Roadmap",
          "Omega UP"
        ],
        "Complexity Analysis": [
          "Introduction - Complexity Analysis",
          "Constant Time Complexity",
          "Linear Time Complexity",
          "Polynomial Time Complexity",
          "Logarithmic Time Complexity",
          "Exponential Time Complexity",
          "Interview Tips",
          "Coding Question - Blame",
          "Coding Question - Blame (Naive Approach)",
          "Coding Question - Blame (Naive Approach Code)",
          "Coding Question - Blame (Optimal Approach)",
          "Coding Question - Blame (Optimal Approach Code)"
        ],
        "Data Structures I": [
          "Introduction - Data Structures I",
          "Vector",
          "List",
          "Stack",
          "Queue",
          "Heap",
          "Summary",
          "Coding Question - Top K",
          "Coding Question - Top K (Approach)",
          "Coding Question - Top K (Code)",
          "Coding Question - Latest Averages",
          "Coding Question - Latest Averages (Approach)",
          "Coding Question - Latest Averages (Code)"
        ],
        "Data Structures II": [
          "Introduction - Data Structures II",
          "Unordered Set / Hash Set",
          "Set / Tree Set",
          "Unordered Map / Hash Map",
          "Map / Tree Map",
          "Interview Tips",
          "Coding Question - You Complete Me",
          "Coding Question - You Complete Me (Approach)",
          "Coding Question - You Complete Me (Code)",
          "Coding Question - Lufillo and Anagrams",
          "Coding Question - Lufillo and Anagrams (Approach)",
          "Coding Question - Lufillo and Anagrams (Code)",
          "Coding Question - Lufillo and Anagrams (Conclusion)"
        ],
        "Graphs": [
          "Introduction - Graphs",
          "Definition",
          "Directed Graphs",
          "Connected / Disconnected Graphs",
          "Paths and Cycles",
          "Adjacency Matrix",
          "Adjacency List",
          "Adjacency Matrix VS. Adjacency List",
          "DFS",
          "DFS (Code)",
          "BFS",
          "BFS (Code)",
          "Interview Tips",
          "Coding Question - Up Land",
          "Coding Question - Up Land (Approach)",
          "Coding Question - Up Land (Code)",
          "Coding Question - Dora the Explorer A",
          "Coding Question - Dora the Explorer A (Approach)",
          "Coding Question - Dora the Explorer A (Code)",
          "Coding Question - Dora the Explorer B",
          "Coding Question - Dora the Explorer B (Approach)",
          "Coding Question - Dora the Explorer B (Code)"
        ],
        "Dynamic Programming": [
          "Introduction - Dynamic Programming",
          "Factorial",
          "Fibonacci",
          "Domino Tiles",
          "Lufe Numbers",
          "Interview Tips",
          "Coding Question - Flags",
          "Coding Question - Flags (Approach)",
          "Coding Question - Flags (Code)",
          "Coding Question - Stars",
          "Coding Question - Stars (Approach)",
          "Coding Question - Stars (Code)"
        ],
        "Backtracking": [
          "Introduction - Backtracking",
          "Sudoku - Statement",
          "Sudoku - Approach",
          "Sudoku - Algorithm",
          "Sudoku - Code",
          "Interview Tips",
          "Coding Question - Super Market",
          "Coding Question - Super Market (Approach)",
          "Coding Question - Super Market (Code)",
          "Coding Question - Super Market (Bitmask)"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Experience with any programming language"
      ],
      "description": "What will you learn from the course?\n\n\nBy the end of the course, you will have a better idea of the type of problems asked in coding interviews and how to approach them to implement a viable solution.\nYou will also learn the most common algorithms used in coding interviews, and more importantly, when to use them.\nYou will improve your problem-solving skills and interviewing skills.\n\n\nAbout the Instructor\n\n\nDavid has more than 10 years of experience teaching the Algorithms Design and Analysis course at Universidad Panamericana. He has been involved in the ACM-ICPC programming team of the university as a contestant, coach, and advisor.\n\n\nDavid is a Principal Software Engineer with more than 10 years of experience in the industry, having worked at Amazon and Oracle. He also has worked at Karat as a contractor to interview engineers for companies such as Roblox, Indeed, Walmart, Palantir, and others. He has interviewed hundreds of candidates during his trajectory and has participated as a problem setter for questions used in recruitment processes.\n\n\nHe is the founder of dnd-learning, where he creates educational content related to algorithms.  He provides guidance and mentorship for coding interviews and constantly publishes material about algorithms and interviews. He is co-author of the book \"Algorithms for Competitive Programming\".\n\n\nMaterial\n\n\nThe slides of the course are available for download.\nFor each coding exercise in the course, it is provided the code with the implementation, and a document explaining the solution.\nThe coding questions are public to practice, and all of them have automated test cases.\n\n\nContent of the Course\n\n\nIntroduction\nObjectives\nMotivation\nTools that will be used during the course\nComplexity Analysis\nImportance of identifying time and space complexity in an interview\nCommon types of complexities\nInterview tips\nCoding exercises\nData Structures I\nLinear data structures: Vector, list, queue, and stack\nTree data structures\nInterview tips\nCoding exercises\nData Structures II\nHashing data structures\nInterview tips\nCoding exercises\nGraphs\nDefinition\nTypes of graphs\nPaths and cycles\nRepresentation of a graph\nGraph traversal\nInterview tips\nCoding exercises\nDynamic Programming\nDefinition\nHow to approach a problem with dynamic programming\nExamples of DP problems\nInterview tips\nCoding exercises\nBacktracking\nDefinition\nHow to implement a backtracking solution\nWhen is a good idea to use backtracking\nExample: Sudoku\nInterview tips\nCoding exercises",
      "target_audience": [
        "New graduates and experienced engineers preparing for a coding interview"
      ]
    },
    {
      "title": "C++ Programming In Ubuntu",
      "url": "https://www.udemy.com/course/learn-cpp-from-scratch/",
      "bio": "Learn C++ with Ubuntu on Windows",
      "objectives": [
        "Build software in C++",
        "Understand C++ classes, functions, pointers, structures, memory, templates and keywords",
        "Understand how to create Makefiles",
        "Basic linux skills",
        "Basic understanding of how the processor works",
        "Understand how to use the G++ compiler",
        "Understand how to create libraries"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Crawl": [
          "Getting started",
          "Your first program",
          "Understanding datatypes and variables",
          "Understanding functions",
          "Understanding scopes",
          "Basic operators",
          "Using statements, comparison operators and logical operators",
          "Understanding comments",
          "Header files, the preprocessor basics and function declarations",
          "Using the linker",
          "Namespaces",
          "Receiving input from the keyboard",
          "Arrays",
          "Strings",
          "Vector basics",
          "Reading and writing a file",
          "Understanding enums"
        ],
        "Walk": [
          "Makefiles",
          "Working with structures",
          "Understanding the heap and the stack",
          "Working with references and pointers"
        ],
        "Run": [
          "What is Object Oriented Programming",
          "Understanding casting",
          "Working with classes",
          "Creating libraries"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You should have basic computer skills."
      ],
      "description": "Do you want to make great apps?\n\nIf you are someone with no previous programming experience or someone with programming experience and would love to learn C++ you have come to the right place. In this course you will be taken through the baby steps of C++ and learn about functions, header files, datatypes, arrays all the way to more advanced c++ concepts such as classes, structures, pointers, macros and memory and in just over four hours your experience will flourish.\nYou will also learn about Makefiles and how to use them as well as how to use the compiler G++. This will allow you to write code without the assistance of an IDE which is normally essential with C++ when developing open source projects so that you can give the programmer who uses your code freedom on how he or she wishes to compile your project. I recommend the code editor Visual Code when writing C++.\n\nAfter this course you could be considered to be a decent C++ developer.\n\nI have programmed in C++ for a long time and have created my own programming language's which I wrote the compiler and interpreter for in C++. I am sure you will be happy with this course.",
      "target_audience": [
        "Anyone who wants to learn how to code",
        "Anyone who wants to learn C++",
        "Anyone who wants to learn about system memory and a little bit about how processors work"
      ]
    },
    {
      "title": "Mastering Semantic Kernel by Creating Projects",
      "url": "https://www.udemy.com/course/mastering-semantic-kernel/",
      "bio": "Learn to harness the potential of Semantic Kernel and build advanced AI applications using OpenAI and Azure OpenAI.",
      "objectives": [
        "Fundamentals of Semantic Kernel",
        "Kernel Creation",
        "Generating Images, Text, Audio, and Transcriptions Using AI",
        "Using Chat Histories",
        "Using and Creating Native Plugins",
        "Prompting Techniques",
        "Using Vector Stores",
        "Textual Search"
      ],
      "course_content": {
        "Introduction": [
          "What is Semantic Kernel?",
          "Semantic Kernel Components",
          "Benefits and Use Cases",
          "Setting Up a VS 2022 Project with Semantic Kernel"
        ],
        "The Kernel - Core Engine": [
          "Understanding Kernel as orchestrator",
          "The Builder pattern",
          "Builder Pattern Demo",
          "Creating an API Key to connect to OpenAI",
          "Creating an API Key to connect to Azure OpenAI",
          "Creating the project, environment variables and Kernels",
          "Chat Completion using Semantic Kernel",
          "Chat Completion Streaming using Semantic Kernel",
          "Generating images using Semantic Kernel",
          "Note about generating images using OpenAI",
          "Generating Audio Files using Semantic Kernel",
          "Extracting Text from Audio using Semantic Kernel"
        ],
        "Workshop - Creating Blog Posts using Semantic Kernel": [
          "About the project",
          "Creating the project and configuring the Kernels",
          "Generating the Blog Post",
          "Generating a Featured Image for the blog post",
          "Generating the Blog Post Audio File",
          "Publishing the content on Wordpress",
          "Download the completed project"
        ],
        "Getting Started with Chat Completion": [
          "Using the Chat Completion Service",
          "Adding Chat History",
          "Multi-modal chat completion"
        ],
        "Workshop - Creating a Multi-modal Chat Application": [
          "Introduction to the Section",
          "Creating and setting up the project",
          "Displaying chat instructions",
          "Interacting with the chat service",
          "Adding the ability to read images"
        ],
        "Plugins": [
          "The foundation of plugins in Semantic Kernel",
          "Creating Kernel Functions",
          "Creating Native Plugins",
          "Creating your first native plugins",
          "Using built-in plugins",
          "Function Calling",
          "Function Calling in Semantic Kernel",
          "Function Calling in Action",
          "AddFromObject vs AddFromType",
          "Function Choice Behavior",
          "Function Invocation",
          "Dealing with complete objects as parameters",
          "Adding OpenAPI plugins"
        ],
        "Workshop - Create a Video Insights app": [
          "Introduction to the Section",
          "Creating and configuring the initial project",
          "Installing ffmpeg",
          "Extracting the audio file from a video file",
          "Compressing the audio File for transcription",
          "Implementing Speech to Text to get the transcription",
          "Cutting video highlights",
          "Burning subtitles"
        ],
        "Prompting": [
          "Prompting fundamentals",
          "Using Semantic Kernel prompt templates",
          "Converting prompts to ChatHistory instances",
          "Using variables in prompt templates",
          "Handlebars Prompt Templates",
          "Liquid Prompt Templates",
          "Separating prompt templates into YAML files"
        ],
        "Workshop - Create a Podcast Generator App": [
          "Introduction to the Section",
          "Configuring the project",
          "Input Data Collection",
          "Markdown Conversion",
          "Generating the first draft",
          "Generating the Podcast Script",
          "Generating the Conclusion",
          "Podcast Generation"
        ],
        "Memory (Vector Stores) and Text Search": [
          "What are Embeddings and Vector Stores?",
          "Defining your Data Model",
          "Generating embeddings and saving in Vector Stores",
          "Performing Vector Search",
          "Text Search",
          "Text Search Plugins",
          "Text Search Plugins - Function Calling",
          "Text Search with Vector Stores"
        ]
      },
      "requirements": [
        "Basic programming knowledge (ideally in C# or .NET)",
        "Willingness to learn and experiment with Semantic Kernel and AI plugins",
        "OpenAI account or access to Azure OpenAI services"
      ],
      "description": "Do you want to integrate artificial intelligence into your applications efficiently and effectively? This course is your gateway to the world of Semantic Kernel, a powerful Microsoft tool that enables you to enhance your developments with language models (LLMs) like OpenAI and Azure OpenAI.\nWhat will you learn in this course?\nVectorStores and Semantic Search: Learn how to use embeddings to store and retrieve information efficiently, reducing token consumption and optimizing queries.\nIntegration with OpenAI and Azure OpenAI Models: Generate embeddings, process text, and perform vector searches using technologies like TextEmbeddingADA002.\nRetrieval-Augmented Generation (RAG): Improve AI model accuracy by combining web searches and vector databases with Semantic Kernel.\nProcess Automation with Plugins: Implement custom plugins in C# to connect external APIs and perform specialized tasks.\nApplication Development with Semantic Kernel: Build everything from interactive chatbots to automated content generators for WordPress and podcasts.\nIntegration with FFmpeg: Extract audio from videos, transcribe content with Whisper, and generate clips for social media automatically.\nAdvanced Prompt Engineering and Templates: Learn how to structure effective prompts using YAML, Handlebars, and Liquid to optimize AI interactions.\nWho is this course for?\nDevelopers looking to implement AI in their applications using .NET and C#\nData scientists and NLP specialists who want to enhance their models with vector searches\nContent creators and automation enthusiasts interested in generating text, audio, and images with AI\nProfessionals seeking to master advanced Semantic Kernel techniques and its integration with OpenAI and Azure\nWhy take this course?\n100% hands-on: Real-world projects from installation to final implementation\nCutting-edge technology: Learn to leverage Semantic Kernel, a key SDK for developing AI copilots and intelligent assistants\nPractical use cases: From intelligent chatbots to automated WordPress posts and AI-generated podcasts\nSupport and community: Access an active community and updated materials featuring the latest AI tools\nIf you want to take AI to the next level and integrate it into real-world projects, this course is for you.\nEnroll now and become an expert in Semantic Kernel and applied AI!",
      "target_audience": [
        "Students and professionals who want to expand their toolkit for building intelligent applications with natural language processing.",
        "Entrepreneurs and AI solution creators interested in leveraging AI service capabilities.",
        "Developers who want to integrate AI into their applications.",
        "Anyone interested in building applications with advanced AI capabilities."
      ]
    },
    {
      "title": "Full-Stack Web Applications with Firebase",
      "url": "https://www.udemy.com/course/full-stack-web-applications-with-firebase/",
      "bio": "A complete guide to getting started with Firebase and the Cloud for creating modern fast web applications",
      "objectives": [
        "Authentication with email and password",
        "To do list application that demonstrates Authorization",
        "How to upload images to Firebase storage",
        "How to create, read, update and delete from the Cloud Firestore database"
      ],
      "course_content": {
        "Introduction to Firebase": [
          "Back-End as a Service (BaaS)",
          "Firebase Services"
        ],
        "Learn Cloud Firestore Database - Build a Chat Application": [
          "Create a New Firebase App",
          "Initialize Cloud Firestore Database",
          "Your First Chat Message",
          "Chat Stream",
          "Ordering Newest Messages First",
          "Simulate a Two-Way Conversation",
          "Clear Messages",
          "Quiz"
        ],
        "Learn Deployment - Practice Concepts on Your Chap Application": [
          "Deploy to Firebase Hosting",
          "Initiate a Live Chat with Someone"
        ],
        "Learn Cloud Storage - Build a Image Sharing Application": [
          "Initialize Firebase Storage",
          "Storing Images",
          "Showing Images in the Browser",
          "Clear Images",
          "Quiz"
        ],
        "Learn Authentication - Build a Boilerplate Application": [
          "Modal and Authentication Actions Listener",
          "Authentication Forms",
          "Making Your App Aware of Users",
          "Creating Users",
          "Showing a User Dashboard",
          "Signing Out",
          "Signing In",
          "Resetting Passwords",
          "Handling Error and Success Messages",
          "Loading Visual"
        ],
        "Learn Security - Boilerplate + To-Do List Application": [
          "User Authorization Primer",
          "Creating Your First “To-Do” Item",
          "Deleting Completed Items",
          "Cloud Firestore Security"
        ]
      },
      "requirements": [
        "Understanding of JavaScript"
      ],
      "description": "In this course, you will learn how to create and launch applications extremely quickly using Firebase. Firebase is a suite of cloud-based services designed to satisfy common developer needs. Known as a BaaS (Back-end as a Service) you get all the benefits of a back-end without the complications of setting one up from scratch. Once you learn how to leverage its services, you are going to exponentially decrease development time.",
      "target_audience": [
        "JavaScript Developers",
        "Full-stack developers",
        "Front-end developers",
        "Back-end developers"
      ]
    },
    {
      "title": "Build SOAP Web Services with Spring",
      "url": "https://www.udemy.com/course/soap-with-spring-web-services/",
      "bio": "How to implement and test a contract first SOAP web service with Spring Web Services",
      "objectives": [
        "Mastering SOAP web services using Spring, building robust APIs, and integrating with real-world applications.",
        "How to implement & test a contract first SOAP Web Service with Spring Web Services, IntelliJ and SoapUI.",
        "How to create a SOAP Client with Spring Boot that will hit your working SOAP Spring Web Services Endpoint.",
        "How to refactor the Maven Archetype Spring SOAP Web Service to a Spring Boot SOAP Service"
      ],
      "course_content": {
        "Preview of SOAP with Spring and Jakarta JEE8 using Eclipse - Updated Course": [
          "SOAP with Spring"
        ],
        "Introduction": [
          "Personal Introduction",
          "What is SOAP Web Services",
          "Sample Business Problem"
        ],
        "SOAP Web Services with IntelliJ": [
          "What does our XML elements look like?",
          "From XML to XSD to WSDL Part 1",
          "From XML to XSD to WSDL Part 2",
          "From XML to XSD to WSDL Part 3",
          "Are you using a version of Java later than Java 8 ?",
          "Creating the SOAP Web Services Project in IntelliJ Part 1",
          "Creating the SOAP Web Services Project in IntelliJ Part 2",
          "Creating the SOAP Web Services Project in IntelliJ Overview"
        ],
        "Implenting the SOAP Web Service Endpoint": [
          "Implenting the SOAP Web Service Endpoint in IntelliJ",
          "Getting Spring Web Services to generate the SOAP WSDL for us",
          "Writing the Spring Web Service SOAP Endpoint and Service classes",
          "Testing the SOAP Endpoint with SOAP-UI",
          "Q & A : How can we handle custom <SOAP-ENV:Header> elements?"
        ],
        "Conclusion": [
          "1. Bonus Lecture - SOAP Client with Spring Boot",
          "2. Bonus Lecture - SOAP Client with Spring Boot",
          "1. Bonus Lecture - SOAP Server with Spring Boot 1",
          "2. Bonus Lecture - SOAP Server with Spring Boot",
          "3. Bonus Lecture - SOAP Server with Spring Boot",
          "The Finish Line",
          "Bonus Lecture - Discounts"
        ]
      },
      "requirements": [
        "Be able to use IntelliJ",
        "Understand Java",
        "Some knowledge of XML and XSD",
        "Some knowledge of Maven"
      ],
      "description": "Master SOAP Web Services with Spring: Build, Test, and Deploy Like a Pro\nUnlock the power of SOAP web services with Spring in this hands-on, project-based course! Designed for Java developers and Spring enthusiasts, this course guides you step-by-step to create robust, production-ready SOAP APIs using Spring Web Services and Spring Boot.\nWhat You’ll Learn:\nSet Up a Spring Web Services Project: Use the Spring Web Services Maven Archetype in IntelliJ to kickstart your project with a professional boilerplate setup.\nGenerate WSDL Automatically: Configure your Spring application to create a SOAP WSDL file dynamically from XML and XSD input/output documents.\nBuild a Robust Service Layer: Develop a clean, reusable service layer with Java interfaces and implementations to connect to backend resources.\nCreate SOAP Endpoints: Write modern, annotation-based SOAP endpoints using Spring’s powerful @Annotations for seamless integration.\nTest with Confidence: Validate your SOAP endpoints using the open-source SoapUI testing tool to ensure reliability and functionality.\nBonus #1: Build a SOAP Client: Create a Spring Boot-based SOAP client to interact with your working SOAP endpoint.\nBonus #2: Modernize Your Service: Repackage your Spring SOAP web service as a Spring Boot application for streamlined deployment.\nWhy Take This Course?\nHands-On Learning: Build real-world SOAP web services with practical, step-by-step guidance.\nIndustry-Relevant Skills: Master SOAP, Spring, and Spring Boot—technologies widely used in enterprise applications.\nCertification: Earn a Udemy certificate to showcase your expertise.\nBeginner to Intermediate Friendly: Perfect for Java developers with basic Spring knowledge looking to specialize in web services.\nWho Is This Course For?\nJava developers wanting to master SOAP web services.\nSpring developers aiming to build enterprise-grade APIs.\nBackend developers seeking practical skills in Spring Web Services and Spring Boot.\nPrerequisites: Basic knowledge of Java and Spring is recommended. All tools (IntelliJ, SoapUI, Maven) are free and easy to set up.\nEnroll and start building professional SOAP web services with Spring today! Level up your Java backend development skills and stand out in the tech industry.",
      "target_audience": [
        "Java developers, Spring enthusiasts, or professionals aiming to enhance their backend development skills.",
        "Java Developers who need to Implement a SOAP Web Service with Spring Web Service",
        "Testers who need to test a SOAP WebService with SoapUI",
        "Java Developers who need to implement a SOAP Client with Spring Web Services using Spring Boot",
        "Java Developers who need to implement a SOAP Server with Spring Web Services using Spring Boot"
      ]
    },
    {
      "title": "Convolutional Neural Networks for Image Classification",
      "url": "https://www.udemy.com/course/convolutional-neural-networks-for-image-classification/",
      "bio": "Design your own deep CNN for accurate image recognition, train and test in Real Time by camera",
      "objectives": [
        "Design deep CNNs architectures with high accuracy results",
        "Demonstrate classification in Real Time by camera",
        "Generate synthetic data to augment existing dataset",
        "Assemble own, custom dataset for Classification tasks",
        "Modify existing dataset for Classification tasks",
        "Apply preprocessing techniques for dataset before training",
        "Train deep CNNs in Keras",
        "Classify new images after training"
      ],
      "course_content": {
        "Welcome": [
          "Introduction to the course",
          "Quick Win #1: Convolution",
          "Coding Activity: Convolution",
          "Quick Win #2: Pooling",
          "Coding Activity: Pooling",
          "Quick Win #3: Convolution+Pooling",
          "Coding Activity: Convolution + Pooling",
          "Quick Win #4: Convolution in Real Time by camera",
          "Coding Activity: Define a 3x3 filter",
          "Quick Win #5: Track movement of the object via Convolution",
          "Coding Activity: Update deque object",
          "Glossary",
          "Software Installation & Verification",
          "How to study the course?"
        ],
        "Assemble custom dataset for Image Classification": [
          "Introduction & Learning objectives: Assembling dataset",
          "Toolkit to download images",
          "Download images from large and existing dataset by toolkit",
          "Activity: Download images for a given class",
          "Modify downloaded dataset to use it for Classification",
          "Coding Activity: Pandas dataFrame",
          "Download other datasets",
          "Process other datasets to use them for Classification",
          "Coding Activity: Splitting Dataset",
          "Quiz: What are the best practices for creating own dataset?",
          "Conclusion: key takeaways for assembling custom dataset"
        ],
        "Modify existing dataset of Traffic Signs for Classification": [
          "Introduction & Learning objectives: Modifying existing dataset",
          "Download dataset of Traffic Signs",
          "Convert downloaded dataset to use it for Classification",
          "Coding Activity: Pandas dataFrame",
          "Quiz: What are the best practices for converting dataset?",
          "Conclusion: key takeaways for modifying existing dataset"
        ],
        "Apply preprocessing techniques for datasets before training": [
          "Introduction & Learning objectives: Applying preprocessing approaches",
          "Construct set of datasets with colour images",
          "Coding Activity: Mean Image",
          "Construct set of datasets with grayscale images",
          "Coding Activity: Standard Deviation",
          "Quiz: What are the best practices for implementing preprocessing approaches?",
          "Conclusion: key takeaways for applying preprocessing techniques"
        ],
        "Design deep CNNs architectures for efficient Classification": [
          "Introduction & Learning objectives: Designing deep architectures",
          "How many Convolutional-Pooling pairs of layers?",
          "How many Feature Maps in Convolutional layers?",
          "How many Neurons in Fully Connected layer?",
          "How much Dropout?",
          "What else?",
          "Save designed deep CNN models into binary files",
          "Quiz: What are the best practices for constructing deep CNN architectures?",
          "Conclusion: key takeaways for designing deep CNNs",
          "Heuristic approach to identify the best model"
        ],
        "Train and Test designed CNNs models": [
          "Introduction & Learning objectives: Training developed deep CNNs models",
          "Overfit designed deep models with prepared datasets",
          "Train designed deep models with prepared datasets",
          "Test trained models",
          "Test Classification in Real Time by camera",
          "Combine: Detection & Classification in Real Time by camera",
          "Visualize training process of filters",
          "Quiz: What are the best practices for training and testing deep CNNs models?",
          "Conclusion: key takeaways for training designed CNNs"
        ],
        "Practice Test": [
          "Review all the learned skills",
          "Practice Test: Everything you've learned",
          "What is next?"
        ],
        "Generate synthetic data to augment datasets": [
          "Introduction & Learning objectives: Generating additional artificial data",
          "Change brightness of images in dataset",
          "Manipulate images by geometric transformations",
          "Augment and equalize images in dataset",
          "Visualize unique examples from augmented dataset",
          "Quiz: What are the best practices for producing additional artificial data?",
          "Conclusion: key takeaways for generating synthetic data"
        ],
        "How does it work?": [
          "What does Confusion Matrix show?",
          "Coding Activity: Confusion Matrix",
          "Quiz: Confusion Matrix",
          "2D Image Convolution: Numpy, Tensorflow, Keras",
          "Coding Activity: Reshape a given input"
        ],
        "How to move from image recognition to object detection?": [
          "How to train YOLO v5 for object detection?"
        ]
      },
      "requirements": [
        "Basic knowledge of Image Classification Algorithms",
        "Basics on how CNN works",
        "Intermediate knowledge of Python V3",
        "Basic knowledge of OpenCV",
        "Basic knowledge of Tensorflow",
        "Basics on how to use Anaconda Environments",
        "Basics on how to code in Jupyter Notebook"
      ],
      "description": "In this practical course, you'll design, train and test your own Convolutional Neural Network (CNN) for the tasks of Image Classification.\nBy the end of the course, you'll be able to build your own applications for Image Classification.\nAt the beginning, you'll implement convolution, pooling and combination of these two operations to grayscale images by the help of different filters, pure Numpy library and 'for' loops. We will also implement convolution in Real Time by camera to detect objects edges and to track objects movement.\nAfter that, you'll assemble images together, compose custom dataset for classification tasks and save created dataset into a binary file.\nNext, you'll convert existing dataset of Traffic Signs into needed format for classification tasks and save it into a binary file.\nThen, you'll apply preprocessing techniques before training, produce and save processed datasets into separate binary files.\nAt the next step, you'll construct CNN models for classification tasks, select needed number of layers for accurate classification and adjust other parameters.\nWhen the models are designed and datasets are ready, you'll train constructed CNNs, test trained models on completely new images, classify images in Real Time by camera and visualize training process of filters from randomly initialized to finally trained.\nAt the final step, you'll pass Practice Test according to the all learned material during the course.\nAs a bonus part, you'll generate up to 1 million additional images and extend prepared dataset by new images via image rotation, image projection and brightness changing.\nThe main goal of the course is to develop and improve your hard skills in order to apply them for real problems of Image Classification based on Convolutional Neural Networks.\nEvery lecture of the course has SMART objectives. It means, that you can track your progress and witness practical results within the visible time frame, right after the end of the lecture.\nS - specific (the lecture has specific objectives)\nM - measurable (results are reasonable and can be quantified)\nA - attainable (the lecture has clear steps to achieve the objectives)\nR - result-oriented (results can be obtained by the end of the lecture)\nT - time-oriented (results can be obtained within the visible time frame)",
      "target_audience": [
        "Students who want to build complete application for Image Classification with CNN",
        "Students who want to improve their hard skills on Image Classification with CNN before their next interview for internship or dream job",
        "Students who want to use CNN with their Own Data for Image Classification but don't know where to start",
        "Young Researchers who study different Image Classification Algorithms and want to Train CNN with Custom Data and Compare results with other approaches",
        "Students who know basics of Image Classification but want to know how to Train CNN with New Data",
        "Students who study Computer Vision and want to know how to use CNN for Image Classification",
        "Students who work on project of safety driven and want to Classify Traffic Signs with CNN",
        "Students who develop alarm-warning system for driver and need to Classify Traffic Signs"
      ]
    },
    {
      "title": "Design Patterns",
      "url": "https://www.udemy.com/course/designpatterns/",
      "bio": "Tasarım Kalıpları",
      "objectives": [
        "Tasarım Kalıpları ya da Design Patterns",
        "Yazılım tasarımı üzerine soyut düşünce ve modelleme yetkinlikleri.",
        "Yazılımın karmaşıklık ve değişim olarak betimlenen doğası",
        "OOP pratikleri"
      ],
      "course_content": {},
      "requirements": [
        "Evet, bir nesne-merkezli programlama dilinde (OOPL) yetkinlik gereklidir.",
        "Dolayısıyla bu eğitim soyut ve somut sınıflar (concrete & abstract classes) ve aralarındaki ilişkiler (association), miras (inheritance), arayüzler (interfaces) ve çok şekillilik (polyorphism) konularına tam hakimiyet gerektirir."
      ],
      "description": "Bu kursun amacı, katılımcılara, GoF (Gang of Four ya da Dörtlü Çete) ve yaygın diğer tasarım kalıpları üzerinden yazılım tasarımı disiplini kazandırmaktır. Dolayısıyla kursta şu yetkinliklerin kazandırılması amaçlanmaktadır:\nYazılım tasarımında soyut düşünme/modelleme,\nYazalım tasarımın temel problemleri, kavramları ve teknikleri,\nSık rastlanan yazılım problemleri üzerine düşünme,\nKalıpların iş alanlarındaki problemlere uygulanması,\nTüm bunlar temelde GoF’un ortaya koyduğu dil, yaklaşım ve kalıplar üzerinden yapılacaktır.\nBu kursta şu konular ele alınacaktır:\nYazılım karmaşıklığı ve değişim (software complexity and change)\nBirliktelik ve bağımlılık (cohesion & oupling) ve anti-patternları\nSOLID, GRASP, Demeter prensipleri\nNesne rolleri\nGoF’un 23 kalıbı: Yaratımsal, Yapısal ve Davranışsal kalıplar\nNull Object vb.diğer kalıplar\nBu kurs herhangi bir programlama dilinden bağımsızdır. Kursun örnekleri temelede Java ve C#’da verilmekle beraber, kalıpların C++, Python vb. dillerindeki gerçekleştirmeleri de olabildiğince sağlanacaktır. Ayrıca katılımcılar kodlarını istedikleri nesne-merkezli dilde ve ortamda yazabilirler.\nKod örnekleri hem Github'da hem de Eclipse, Visual Studio vb. projeleri olarak paylaşılacaktır. Bunun için 1. bölümün resourcelarına bakın.\nBu eğitim çok detaylıdır, konuları bildiğinizi düşünseniz bile, atlamadan ve sindirerek ilerleyin. Tüm örneklerini çalıştırın, oynayın, bozun, her şeyin nedenini anlayın ve tekrar çalışır hale getirin. Kendi örneklerinizi yazın, benzer teknikleri uygulayın, ödevleri muhakkak yapın.\nBu eğitim online canlı derslerle yapıldığı için sıklıkla katılımcı sorularına cevap verdiğimi göreceksiniz. Umarım bu durum eğitimden elde edeceğiniz faydayı arttırır. Siz de ihtiyaç duyduğunuzda, eğitimle ilgili, yansılarda mesela, herhangi bir yanlışlık, düzeltme ihtiyacı vs. olduğunu düşündüğünüzde bana ulaşabilirsiniz.",
      "target_audience": [
        "Nesne-merkezli yapılar hakkında daha soyut düşünerek, daha az bağımlılıklı (lowly-coupled) ve daha yüksek birliktelikli (highly-cohesive) yazılımlar ortaya koymak isteyenler.",
        "C++, Java, C#, Python, vb. bir nesne-merkezli programlama dilinde (OOPL) yetkin olup daha tasarımsal düzeyde düşünmek ve kodunu buna göre geliştirmek isteyenler.",
        "Yazılım tasarımcıları, yazılım mimarları, tecrübeli developerlar/programcılar ve bu pozisyonların adayları.",
        "Ayrıca aşağıdaki ilgilere sahip olanlar da bu eğitimden çok faydalanacaklardır: OOP, dile hakimiyet ve Temiz Kod (Clean Code)."
      ]
    },
    {
      "title": "Learn Programming - Beginner to Master",
      "url": "https://www.udemy.com/course/learn-programming-beginner-to-master-2024/",
      "bio": "Learn how to write your own application with advanced UI. This course is a stepping stone into the world of programming.",
      "objectives": [
        "This course includes +15 project with source of code",
        "Learn how to make modern advanced UI",
        "Learn VB from an experienced full professor who has been using and teaching VB for more than 8 years. the Instructor 19 and started coding at the age of",
        "Learn to use Visual Studio with VB software language",
        "Learn how to protect our software from debuggers",
        "Learn how to make applications for Windows OS",
        "Learn how to make cheating softwares",
        "Learn how to use api for softwares",
        "Learn how to debug for softwares",
        "Learn how to build a virtual environment for malware analysis"
      ],
      "course_content": {
        "LET'S BEGIN": [
          "Download the Visual Studio 2022",
          "Intro"
        ],
        "Login Application": [
          "First Project",
          "Lesson 2",
          "Lesson 3",
          "Lesson 4",
          "Lesson 5",
          "Lesson 6",
          "Lesson 7 with source",
          "Login Application Source"
        ],
        "Random Name Selecter": [
          "Random Selecter Software",
          "Lesson 2",
          "Lesson 3",
          "Source of Code"
        ],
        "Get Raw texts Software": [
          "Lesson 1",
          "Source of Code"
        ],
        "Music Loader Software": [
          "Lesson 1",
          "Lesson 2",
          "Lesson 3",
          "Lesson 4",
          "Source of Code"
        ],
        "Automatic Shutdown Software": [
          "Lesson 1",
          "Lesson 2",
          "Source of code"
        ],
        "How to make notify menu": [
          "Lesson 1",
          "Source of Code"
        ],
        "Key Detector Software": [
          "Lesson 1",
          "Lesson 2",
          "Source of Code"
        ],
        "Auto Clicker Software": [
          "Lesson 1",
          "Lesson 2",
          "Lesson 3",
          "Source of Code"
        ],
        "How to make Advanced UI": [
          "Lesson 1",
          "Lesson 2",
          "Lesson 3",
          "Lesson 4",
          "Lesson 5",
          "Source of Code"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "This Visual Basic .NET training course from IBRAHIM CELIK will teach you how to develop applications.\n\nYou will start by learning how to install and use the Visual Studio 2022 development environment. The course will then teach you how to build classes that define properties, methods, and events in VB .NET, as well as understand and use overloaded methods and operators and perform calculations. This video tutorial will also cover topics including debugging programs, working with data types, branching and looping statements, and use subroutines, functions, and object-oriented techniques. You will learn how to use modify toolbox controls, and sort information, as well as easily read and write data in files. Finally, you will learn about programming with 15 source of code project.\n\nOnce you have completed this VB training course, you will be fully capable of programming with Visual Basic Working files are included, allowing you to follow along with the author throughout the lessons.\n\nThere are project files in this course. You can download all of them, change them as you wish and use them. In this course, we aimed to make various program projects and learn more easily. In this way, we aimed to develop software in a more practical and memorable way.",
      "target_audience": [
        "Software Developers"
      ]
    },
    {
      "title": "Array Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/array-interview-questions-practice-test/",
      "bio": "600+ Array Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Array Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the Ultimate Array Interview Questions Practice Test Course!\nAre you preparing for technical interviews and seeking to master array-related concepts? Look no further! This comprehensive practice test course is designed to help you ace your array-related interview questions. Arrays are fundamental data structures used in programming and mastering them is crucial for success in technical interviews. This course covers a wide range of array topics, from basic concepts to advanced problem-solving techniques, ensuring that you are well-prepared to tackle any array-related question that comes your way.\nSection 1: Basic Concepts of Arrays In this section, we delve into the foundational concepts of arrays, including their definition, characteristics, declaration, initialization, and traversal techniques. You'll learn how to access and modify array elements efficiently, along with understanding array length and size.\nSection 2: Array Operations and Manipulations This section focuses on various operations and manipulations that can be performed on arrays. From insertion and deletion to finding maximum and minimum elements, searching, sorting, reversing, merging, and splitting arrays, you'll gain a deep understanding of how to manipulate arrays to solve different problems.\nSection 3: Multidimensional Arrays Multidimensional arrays are arrays of arrays, and this section explores their declaration, initialization, access, traversal, and operations. You'll learn how to work with two-dimensional arrays and beyond, along with understanding their applications in real-world scenarios.\nSection 4: Array Algorithms and Problem Solving Array-based algorithms are essential for solving complex problems efficiently. In this section, we cover various algorithms such as Kadane's algorithm, counting sort, two pointers technique, sliding window technique, prefix sum technique, and dynamic programming with arrays. These algorithms are crucial for tackling array-related problems in technical interviews.\nSection 5: Advanced Array Concepts Advance your array knowledge with this section, which explores sparse arrays, circular arrays, jagged arrays, array rotation, partitioning, and shuffling. Understanding these advanced concepts will give you an edge in solving more complex array-related problems.\nSection 6: Array Applications and Usage Arrays have numerous applications beyond basic data storage. In this section, we explore how arrays are used in data structures, competitive programming, image processing, audio processing, and text processing. Understanding these applications will help you appreciate the versatility of arrays and their importance in real-world scenarios.\nPractice Test and Interview Questions Throughout the course, you'll have access to a plethora of practice test questions covering each section's topics. These questions are designed to simulate real interview scenarios and test your understanding of array concepts thoroughly. By practicing with these interview questions, you'll gain confidence and proficiency in handling array-related challenges during technical interviews.\nEnroll now and take your array skills to the next level with our comprehensive array interview questions practice test course. Whether you're a beginner looking to solidify your fundamentals or an experienced programmer aiming to master advanced array concepts, this course has something for everyone. Don't miss out on this opportunity to excel in your array-related technical interviews!",
      "target_audience": [
        "Students: Computer science students or programming enthusiasts looking to solidify their understanding of arrays and excel in their academic coursework or technical interviews.",
        "Job Seekers: Individuals preparing for technical interviews for software development, data science, or engineering roles where array-related questions are commonly asked.",
        "Professionals: Software developers, engineers, or programmers aiming to refresh their knowledge of arrays or expand their skill set to solve complex array-related problems efficiently.",
        "Coding Enthusiasts: Hobbyists or self-taught programmers interested in exploring the intricacies of array programming and improving their problem-solving abilities.",
        "Competitive Programmers: Participants in coding competitions or hackathons looking to sharpen their array manipulation skills and gain a competitive edge.",
        "Career Changers: Individuals transitioning into the tech industry from non-technical backgrounds who want to build a strong foundation in array programming."
      ]
    },
    {
      "title": "Architektura aplikacji - back-end, Java",
      "url": "https://www.udemy.com/course/architektura-java/",
      "bio": "CQRS, DDD, porty i adaptery, czysta architektura, wzorce, modularny monolit - przygotowanie pod mikroserwisy, Spring",
      "objectives": [
        "Zrozumiesz jak budować łatwe w utrzymaniu aplikacje webowe",
        "Zobaczysz jak odwlekać decyzje o implementacji w czasie",
        "Zobaczysz \"z czym się je\" CQRS, DDD i czystą architekturę",
        "Zapoznasz się z architekruą: modularny monolit"
      ],
      "course_content": {
        "Wprowadzenie": [
          "Wstęp",
          "Highlight / Making of"
        ],
        "Przegląd aplikacji - działanie": [
          "Wprowadzenie",
          "Pobranie aplikacji",
          "Uruchamianie konkretnej wersji",
          "Testowanie narzędziem Postman",
          "Projekty - operacje PUT",
          "Projekty - operacje POST, zadania - GET",
          "Zadania - pozostałe operacje",
          "Sprawdzenie zawartości bazy H2",
          "Podsumowanie"
        ],
        "Przegląd aplikacji - kod": [
          "Wprowadzenie",
          "pom.xml, testy, application.yml",
          "Struktura aplikacji, główna klasa",
          "Encja Task",
          "Encja Project",
          "Słów kilka o getterach kolekcji i @OneToMany",
          "Repozytoria",
          "Serwis zadań",
          "Serwis projektów - start",
          "Serwis projektów - zapis z usuwaniem",
          "Serwis projektów - pozostałe przypadki zapisu",
          "Data Transfer Object",
          "TaskController",
          "ProjectController",
          "AuthenticationController + DTO",
          "TokenService + JWT",
          "TokenService - pozostałe metody",
          "AuthenticationFilter",
          "SecurityConfiguration - beany",
          "SecurityConfiguration - configure",
          "Twoja analiza kodu",
          "Podsumowanie"
        ],
        "Dostęp pakietowy v1": [
          "Wprowadzenie",
          "Ustawienia IntelliJ",
          "Pakiet configuration",
          "Pakiet controller",
          "Pakiet dto",
          "Pakiet entity",
          "Pozostałe pakiety",
          "Podsumowanie"
        ],
        "package-by-feature": [
          "Wprowadzenie",
          "Zgrupowanie zadań w pakiet",
          "Pakiet auth",
          "Jak to testować?",
          "Analiza kodu v2",
          "Klasy inicjalizujące wewnątrz pakietów",
          "Schowanie kolejnych klas i metod",
          "Weryfikacja apki",
          "Podsumowanie"
        ],
        "Fasada - jedyne wejście do modułu": [
          "Wprowadzenie",
          "Wizja",
          "TaskFacade - początek",
          "Schrowanie repo",
          "Wzorzec budowniczego dla DTO",
          "Budowniczy - kilka dodatków",
          "Zmiana kontraktu w fasadzie",
          "Fabryka zadań do zrobienia",
          "Schowanie encji zadań",
          "Weryfikacja aplikacji",
          "Uproszczona encja",
          "Schowanie encji projektów",
          "Podsumowanie"
        ],
        "CQRS": [
          "Wprowadzenie",
          "Wizja",
          "TaskQueryRepository - start",
          "Springowe projekcje",
          "Problemy z projekcjami",
          "Projekcja przy pomocy klasy",
          "TaskQueryRepository - koniec",
          "Podsumowanie zmienionych zadań do zrobienia",
          "ProjectQueryRepository - start",
          "Query w projektach",
          "Podsumowanie"
        ],
        "Czysta/heksagonalna/cebulkowa architektura, architektura portów i adapterów": [
          "Wprowadzenie",
          "O co chodzi w tej czystej architekturze?",
          "Moduły Mavena - start",
          "Moduł adapters",
          "Przeniesienie pakietu auth",
          "Koniec modułu adapters",
          "Moduły domain i app",
          "DTO w app",
          "Porządki w zależnościach modułów",
          "Konfiguracje w adapterach",
          "Repozytoria jako porty i adaptery",
          "Kolejny podział app-adapters",
          "Przeniesienie encji - wizja",
          "Zadanie - encja domenowa i encja ORM",
          "Adaptery repozytoriów",
          "Podsumowanie"
        ],
        "Domain-Driven Design (DDD)": [
          "Wprowadzenie",
          "DDD taktyczne",
          "DDD strategiczne, EventStorming",
          "Pierwszy agregat - zadanie",
          "Snapshoty",
          "Odtwarzanie agregatu i tworzenie snapshota z agregatu",
          "Korzystanie ze snapshotów",
          "Dołożenie mappingu do snapshotów - orm.xml",
          "Repozytoria działające na snapshotach, słowo o Value Objectach",
          "Przegląd odpowiedzialności i jak to testować",
          "Snaphoty projektów",
          "Projekty: agregat i wewnętrzna encja",
          "Projekty w stylu DDD",
          "Podsumowanie"
        ],
        "DDD v2, zdarzenia": [
          "Wprowadzenie",
          "Wizja, zarys problemu",
          "TaskCreator",
          "Value Objects",
          "Nowa metoda agregatu",
          "VO w zadaniach (model, fasada, adaptery)",
          "DomainEvent",
          "Zdarzenia zadań",
          "Publikacja z agregatu",
          "Publikacja z warstwy aplikacji",
          "Adapter publikujący zdarzenia",
          "Zmiany w domenie - krok projektu",
          "Zmiany w projekcie i fasadzie projektów",
          "Odbiór zdarzenia w fasadzie",
          "Adaptery - SQL",
          "Adaptery - odbieranie zdarzeń",
          "Zadania na 6",
          "Podsumowanie"
        ]
      },
      "requirements": [
        "Znajomość języka Java",
        "Rozumienie aplikacji webowych",
        "Znajomość frameworka Spring"
      ],
      "description": "Chcesz tworzyć mikroserwisy? Zacznij od dobrej architektury!\nUpewnij się, że Twoja aplikacja jest na to gotowa, że umiesz wydzielić niezależne moduły i skomunikować je asynchronicznie, zdarzeniami.\nNowy dzień, nowy framework. To może być ciekawe, ale nie jest kluczowe w programowaniu. Warto znać nowinki technologiczne, ale o wiele ważniejsze są podstawy architektoniczne, które tutaj przedstawiam.\nDobra architektura ułatwi podbicie wersji biblioteki i podmianę frameworka na nowy, lśniący. Z kolei bez dobrej architektury nowy framework/biblioteka może pomóc, ale z dużym prawdopodobieństwem po prostu zaciemni nasz kod i wprowadzi tylko kolejne obejście problemu.\nCommand Query Responsibility Segregation, Domain-Driven Design, odwrócenie kontroli, projekcje Spring Data, zdarzenia.",
      "target_audience": [
        "Dla chcących rozwinąć się w kierunku architektów oprogramowania",
        "Dla zaczynających nowy projekt",
        "Dla przepisujących stary projekt"
      ]
    },
    {
      "title": "Build a Streaming Twitter Filter with Python and Redis",
      "url": "https://www.udemy.com/course/build-a-streaming-twitter-filter-with-python-and-redis/",
      "bio": "Learn how to use Twitter's Streaming API, Redis and Flask together.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Twitter Stream",
          "Design & Front-end Development",
          "Sentiment Analysis",
          "Redis Server",
          "Data Formatting",
          "Flask Server",
          "Next Steps"
        ]
      },
      "requirements": [
        "Understanding of Python and web development"
      ],
      "description": "This video series will walk through building a streaming Twitter filter using Python and Redis.\n\n\nHere is a synopsis of each video:\nTalks about the project and data pipeline\nShow how to ingest the Twitter stream\nExplain sentiment analysis and how to do it using Python\nExplain Redis and show how to setup a local server\nDesign a pen & paper mockup, then convert to front-end code\nPrepare a custom Python class to preprocess and format data fields\nBuild a simple Flask server to combine all the code so far\nExplores further improvements to the pipeline",
      "target_audience": [
        "Intermediate programmers who are interested in data engineering"
      ]
    },
    {
      "title": "Introduction to Prompt Engineering",
      "url": "https://www.udemy.com/course/introduction-to-prompt-engineering/",
      "bio": "Designing Effective Prompts to Unlock the Full Power of AI",
      "objectives": [],
      "course_content": {
        "Introduction to Prompt Engineering": [
          "Introduction to Prompt Engineering",
          "Basics of Natural Language Processing",
          "Understanding LLM",
          "Introduction to AI Language Models",
          "How Prompt Engineering Interacts with AI Models",
          "The Role of Data in Training Language Model"
        ]
      },
      "requirements": [
        "Basic Computer Literacy – Familiarity with using a computer and the internet is necessary to navigate course materials and AI tools. Interest in AI and Language Models – A willingness to explore and experiment with AI-generated content will help you get the most out of this course. Access to AI Tools – Some modules may require access to AI platforms like OpenAI's ChatGPT, Google Bard, or other language models for hands-on practice."
      ],
      "description": "Unlock the full potential of generative AI with our Prompt Engineering course! This comprehensive program is designed to teach you the essential techniques for crafting effective prompts that yield accurate, relevant, and high-quality responses from AI models. Whether you're a beginner or an AI enthusiast, this course will equip you with the skills to optimize AI interactions for various applications, from content creation to automation and problem-solving.\nUse the link in the video to gain access to the full course, quiz and other advance courses.\nWhat you will learn:\n- Module 1: Introduction to AI, NLP, and Prompt Engineering\nGain a foundational understanding of artificial intelligence (AI) and natural language processing (NLP). Learn how prompt engineering plays a crucial role in optimizing AI-generated responses.\n- Module 2: Understanding Language Models and Their Mechanics\nExplore how large language models (LLMs) like ChatGPT work, including their structure, training process, and response generation mechanisms.\n- Module 3: Fundamentals of Effective Prompt Design\nDiscover best practices for designing effective prompts, including clarity, specificity, and structuring techniques to achieve desired AI responses.\n- Module 4: Advanced Prompt Engineering Techniques\nDelve into advanced strategies such as few-shot learning, chain-of-thought prompting, and multi-turn interactions to refine AI outputs.\n- Module 5: Contextualizing Prompts for Specific Outcomes\nLearn how to tailor prompts for various domains, such as content generation, programming assistance, data analysis, customer support, and more.\n- Module 6: Optimizing and Refining Prompts\nMaster techniques for improving prompt efficiency through iteration, error correction, and prompt evaluation frameworks.\n- Module 7: Ethical Considerations in Prompt Engineering\nUnderstand the ethical implications of AI-generated content, including bias mitigation, responsible AI usage, and data privacy concerns.\n- Module 8: Real-World Applications of Prompt Engineering\nExplore practical use cases across industries, from business automation and marketing to healthcare and education.\n- Module 9: Hands-On Projects and Application Building\nApply your knowledge by working on real-world projects, creating AI-driven applications, and optimizing AI workflows.\n- Module 10: Final Assessment and Certification\nTest your skills with a final assessment and earn a certification in Prompt Engineering, validating your expertise in AI interactions.\nWho Should Take This Course?\n- AI Enthusiasts & Developers\n- Content Creators & Marketers\n- Data Analysts & Researchers\n- Customer Support Professionals\n- Anyone looking to harness AI effectively\n\n\nBy the end of this course, you'll have a deep understanding of how to craft effective prompts, optimize AI responses, and apply your knowledge to real-world scenarios. Join us and become a Prompt Engineering expert!",
      "target_audience": [
        "Beginners in Cybersecurity or Cloud Computing Those who want a foundational understanding of how cloud security works. IT Professionals and System Admins Looking to upskill in cloud-specific security practices. Developers and DevOps Engineers Who deploy or manage applications in the cloud and want to build secure systems. Students in Tech or Security Programs Needing real-world knowledge of modern cloud threats and protections. Project Managers or Tech Leads Who work with cloud infrastructure and want to better understand security risks and responsibilities."
      ]
    },
    {
      "title": "Introduction to Generative AI",
      "url": "https://www.udemy.com/course/introduction-to-generative-ai-z/",
      "bio": "Understand How AI Creates Text, Images, and More Using Machine Learning",
      "objectives": [],
      "course_content": {
        "Introduction to Generative AI": [
          "Introduction to Generative AI",
          "Understanding Variational Autoencoders",
          "Understanding Generative Adversarial Network",
          "Ethical Considerations & the Future of GenAI",
          "Deep Learning Frameworks & Tools for GenAI",
          "Transformers and Attention Mechanism"
        ]
      },
      "requirements": [
        "Basic Computer Skills – You should be comfortable using a computer, browsing the internet, and using online tools. Stable Internet Connection – Since the course involves cloud-based AI tools and hands-on exercises, a reliable internet connection is necessary. Interest in AI and Creativity – No prior AI knowledge is required, but a curiosity about AI-powered content generation (text, images, etc.) will enhance your learning experience."
      ],
      "description": "Generative AI is revolutionizing industries by enabling machines to create human-like content, from text and images to code and music. This course provides a comprehensive introduction to Generative AI, breaking down complex concepts into simple, practical lessons. Whether you're a developer, data enthusiast, or a business professional, this course will equip you with the knowledge and skills to leverage Generative AI effectively.\nWhat You'll Learn:\n- The fundamentals of Generative AI and how it differs from traditional AI models\n- How popular models like ChatGPT, DALL·E, and Stable Diffusion work\n- The role of neural networks, transformers, and deep learning in AI generation\n- Hands-on techniques to generate text, images, and even code using AI tools\n- Ethical considerations, limitations, and responsible AI usage\nWhat will i learn?\nUnderstand the Fundamentals of Generative AI – Gain a solid understanding of how generative AI models work, including their applications in text, image, and content generation.\nHands-on Experience with AI Tools – Learn to use popular generative AI tools and platforms to create text, images, and other forms of AI-generated content.\nApply AI for Real-World Use Cases – Develop practical skills to leverage generative AI in business, creative projects, and automation, enhancing productivity and innovation.\nRequirements\nBasic Computer Skills – You should be comfortable using a computer, browsing the internet, and using online tools.\nStable Internet Connection – Since the course involves cloud-based AI tools and hands-on exercises, a reliable internet connection is necessary.\nInterest in AI and Creativity – No prior AI knowledge is required, but a curiosity about AI-powered content generation (text, images, etc.) will enhance your learning experience.",
      "target_audience": [
        "Business professionals looking to enhance productivity and innovation with AI tools. Content creators and marketers wanting to streamline creative workflows using generative AI. Developers and tech enthusiasts interested in learning how generative models work and how to apply them. Students and educators seeking a foundational understanding of AI for academic or instructional purposes. Entrepreneurs and startups aiming to integrate AI into products, services, or automation strategies."
      ]
    },
    {
      "title": "RPA – Máster Automatización de Procesos con UiPath [2025]",
      "url": "https://www.udemy.com/course/rpa-master-automatizacion-de-procesos-con-uipath-2021/",
      "bio": "Domina la automatización de procesos RPA con UiPath desde cero y mejora la eficiencia exponencialmente",
      "objectives": [
        "Desarrollo de robots con UiPath que automaticen tareas repetitivas.",
        "Dominar todos los conceptos de UiPath desde cero.",
        "Aplicar técnicas de automatización como Web Scraping, OCR, tratamiento de documentos pdf, automatización de análisis en Excel, robotización de emails,…",
        "Creación de 6 completos robots que automaticen procesos de negocio reales desde cero.",
        "Dominar la tecnología Robotic Process Automation y analizar y priorizar procesos susceptibles de ser automatizados.",
        "Adquirirá un conocimiento extenso en la tecnología puntera RPA que podrá aplicar de inmediato a un precio muy asequible en comparación con otros programas."
      ],
      "course_content": {
        "Introducción a RPA y UiPath": [
          "Bienvenida / Información importante",
          "¿Qué es Robotic Process Automation (RPA)?",
          "Selección de procesos RPA",
          "Plataformas en RPA - Comparativa",
          "Instalación de UiPath",
          "NOTA INSTALACIÓN UIPATH",
          "NOTA IMPORTANTE ENTORNO CLÁSICO",
          "Creación del primer robot con UiPath",
          "Descarga robots UiPath"
        ],
        "Conceptos básicos UiPath": [
          "Menú inicio e instalación de extensiones",
          "Menú diseño e instalación de paquetes",
          "Menú depurar",
          "Paneles en UiPath",
          "Variables en UiPath - Creación, asignación y ámbito",
          "Argumentos en UiPath",
          "Importaciones en UiPath"
        ],
        "Robot 1: Climatología (Web Scraping básico)": [
          "Demo - Creación Robot Climatología",
          "Inserción Cuadro Diálogo",
          "Apertura y búsqueda en navegador web",
          "Obtención de datos web (Web scraping)",
          "Creación Diagrama de Flujo",
          "Aplicar condiciones",
          "Asignar valor a variable y crear mensaje",
          "Aplicar condiciones “IF” y “OR”"
        ],
        "Robot 2 Asesor Inmobiliario (Web Scraping avanzado + Transformación de datos)": [
          "Demo - Creación Robot Asesor Inmobiliario",
          "Inserción Cuadro Diálogo",
          "Apertura y búsqueda en portal web",
          "Extracción masiva de datos desde la web",
          "Creación tabla de datos",
          "Lectura y Transformación de datos",
          "NOTA: ARRAY PARA AÑADIR FILA DE DATOS",
          "Añadir datos en tabla",
          "Filtrar datos en base a condiciones",
          "Ordenación de datos",
          "Exportación de resultados a Excel",
          "NOTA: EXPORTACIÓN A EXCEL CON ACTIVIDADES MODERNAS"
        ],
        "Robot 3 Robot Registro e Inventario portal Web (Data filling Automation)": [
          "Demo - Creación Robot Registro e inventario web",
          "Lectura de fuente de datos Excel",
          "NOTA: URL PORTALES WEB CRM",
          "Apertura navegador y creación bucle WHILE",
          "Registro en portal web de la información",
          "Reutilización de scripts",
          "Ejecución en paralelo de automatizaciones"
        ],
        "Robot 4 Robot Facturación (Automatización PDF Data Scraping)": [
          "Demo - Creación Robot Facturación",
          "Preparación Carpeta de proyecto y solicitar ruta al usuario",
          "Crear variables filepath e iterar para cada fichero",
          "Activar opciones de lectura detallada en pdf",
          "Lectura de información de pdf (pdf scraping)",
          "Escritura de datos en Excel"
        ],
        "Robot 5 Organizador mediante OCR (Optical Character Recognition)": [
          "Demo - Creación Robot Organizador OCR",
          "Preparación proyecto, solicitar ruta al usuario e iteración masiva de ficheros",
          "Obtención de datos con Extracción de Pantalla OCR",
          "Obtención de datos mediante lectura PDF con OCR",
          "Gestión de ficheros con Diagrama de Flujo"
        ],
        "Robot 6 Robot Analítico y Automatizador de Email (Excel + Email)": [
          "Demo - Creación Robot Analítico y Automatizador de Emails",
          "Obtención emails automáticamente",
          "Iterar para todos los emails y leer datos masivos",
          "Bucle SWITCH (Cambiar)",
          "Análisis automático en Excel",
          "Optimización flujo de trabajo",
          "Envío de emails automáticamente",
          "Envío de emails formateados con plantilla"
        ],
        "Conclusiones": [
          "Conclusiones",
          "Siguientes Pasos",
          "Clase Extra",
          "Proyecto Robot Web Scraping Inversor"
        ]
      },
      "requirements": [
        "No, únicamente tener un PC con Windows instalado."
      ],
      "description": "¿Quiere dominar los procesos RPA con la herramienta UiPath para automatizar todas esas tareas repetitivas y enfocarse en actividades de mayor valor?\nA día de hoy, si no está aprendiendo Robotic Process Automation (RPA), está un paso por detrás de lo que demanda el mercado, puesto que gran parte de los actuales puestos de trabajos serán reemplazados por robots software más pronto de lo que pensamos.\n---\nEscuche de otros alumnos por qué este es el curso de RPA con UiPath MEJOR VALORADO en español:\n\"Muy buen curso, bien estructurado y bien explicado por parte del docente. Se ven multitud de proyectos de automatización que pueden ser reutilizados a proyectos propios del día a día e incluso dar ideas para elaborar robot automatizados aplicados a ámbitos diferentes a los que se plantean en el curso. Totalmente recomendado!!\" -- Miguel Ángel Carrasco\n\n\n\"Muy buen curso teórico y práctico. Bien estructurado y se nota que el profesor los prepara. EL profesor va al grano y contesta rápido a las dudas que se le plantean.\" -- Juan Carlos\n\n\n\"Excelente!, todo tipo de dudas que tuve Iván responde super rápido brindando soluciones. Curso que sirve tanto para acciones del día a día en lo personal como en el trabajo. Super recomendable y con prácticas progresivas!\" -- Ariel Souto\n---\nEn este curso aprenderá todo lo necesario para convertirse en un maestro de la tecnología Robotic Process Automation (RPA) con UiPath y estar preparado para un futuro donde la automatización de procesos será un factor clave en la transformación digital y mejora de la eficiencia y calidad en sus tareas diarias.\nAl finalizar el curso podrá crear robots a nivel profesional siendo capaz de utilizar técnicas de automatización como web scraping, registro automático de información, tratamiento automático de ficheros como pdf o Excel, aplicar técnicas Optical Character Recognition (OCR) para analizar automáticamente imágenes, analizar datos automáticamente e incluso leer y enviar emails de manera totalmente autónoma con los robots creados.\nEste curso tendrá un enfoque eminentemente práctico, comenzará con todos los pasos necesarios de instalación de UiPath desde cero y posteriormente iremos creando paso a paso 6 robots con aplicación 100% a casos reales:\n---\nRobot 1: Climatólogo (Web Scraping - nivel principiante)\nEn este robot, el usuario inserta una ciudad y el robot realiza una búsqueda web de la temperatura y el tiempo para sugerir la indumentaria al usuario.\nRobot 2: Asesor inmobilidario (Web Scraping avanzado – nivel principiante)\nEn este caso, el usuario inserta una ciudad concreta y el robot realiza la búsqueda de cientos de inmuebles en un portal web extrayendo los datos de precio, descripción, habitaciones y superficie para finalmente realizar el exportado a un fichero Excel totalmente automático.\nRobot 3: Registro e Inventario Web\nEn muchos puestos de trabajo tenemos que registrar miles de datos en un portal web a partir de la información de un fichero Excel. Este robot automatiza por completo este trabajo siendo capaz de procesar y registrar en la web cientos de datos en cuestión de segundos y con un 0% de errores.\nRobot 4: Facturación (Automatización PDF – nivel intermedio)\nImagine el trabajo de un administrativo que tiene que procesar diariamente cientos de facturas en formato pdf para copiar y pegar los datos en un fichero Excel, esto es un trabajo muy tedioso y sujeto a errores, por ello construiremos un robot que automatiza todo este proceso de manera masiva leyendo todos los documentos pdf que tengamos.\nRobot 5: Organizador OCR (OCR – nivel avanzado)\nEn multitud de ocasiones tenemos documentos en formato imagen o bien escaneados en un pdf donde no se puede obtener directamente los datos en formato texto, para solucionar este problema aprenderemos a crear un robot que aplique técnicas Optical Character Recognition iterando masivamente en ficheros con estas características y además organizará cada fichero en su correspondiente carpeta en función de los campos de interés.\nRobot 6: Analítico y Automatizador de Emails (nivel avanzado)\nCon este robot nos pondremos en el papel de un analista inmobiliario que recibe cientos de emails con solicitudes de análisis del mercado inmobiliario y tiene que contestar a cada correo recibido. El robot creado leerá automáticamente todos los emails sin leer, analizará los datos en base a la solicitud de manera autónoma para finalmente enviar un email al remitente automáticamente.\n---\nTendrá a su disposición un material extenso de consulta y todos los robots explicados durante esta especialización de automatización de tal manera que le sea muy sencillo reutilizarlos para su caso de uso concreto. Mi objetivo es que cuando finalice el curso pueda aplicarlo de inmediato a su situación particular.\nNo tiene nada que perder, tendrá una garantía de 30 días para asegurar que está 100% satisfecho con el material, mi objetivo es aportarle valor con todos estos conocimientos y si no es así siéntase libre de solicitar la devolución, aunque estoy seguro de que cumplirá sus expectativas.\nEs el momento de que pase a la acción, tomando este curso conseguirá dominar la tecnología más puntera RPA y la herramienta más popular UiPath, lo cual supone obtener una habilidad muy importante para poder destacar sobre el resto y conseguir sacar el máximo provecho de su tiempo.",
      "target_audience": [
        "Toda persona que quiera potenciar su perfil dominando técnicas RPA con la herramienta UiPath desde cero.",
        "Toda persona que quiera especializarse para conseguir un puesto de trabajo en RPA altamente demandado.",
        "Personal administrativo que precise ahorrar su preciado tiempo eliminando aquellas tareas repetitivas disminuyendo errores.",
        "Perfiles técnicos que ejecuten actividades repetitivas y quieran ser más eficientes mejorando además la calidad.",
        "Gestores de equipos que requieran analizar qué procesos pueden ser sometidos a RPA y mejorar el desempeño del equipo.",
        "Analistas que quieran automatizar sus tareas diarias de análisis con herramientas como Excel.",
        "Personas que estén cansadas de procesar cientos de emails y quieran automatizar estos procesos de lectura y envío.",
        "Estudiantes que quieran obtener habilidades que le abrirán puertas en el mercado laboral.",
        "Cualquier persona que quiera automatizar sus procesos cotidianos para enfocarse en actividades de mayor valor."
      ]
    },
    {
      "title": "Software Engineering 101: Data Structures with Python & C++",
      "url": "https://www.udemy.com/course/software-engineering-101-data-structures-with-python-c/",
      "bio": "Linear and non linear data structures, searching and sorting algorithms, dynamic programming, recursion and backtracking",
      "objectives": [
        "Learn the basic fundamentals of data structures and algorithms, such as getting to know their use cases and technical limitations",
        "Learn about linear and non linear data structures",
        "Learn how to build employee attendance tracker using array",
        "Learn how to build customer support ticketing system using linked list",
        "Learn how to create undo function using stack",
        "Learn how to build patient queue system",
        "Learn how to find customer ID using binary search tree",
        "Learn how to build patient prioritization system using heap",
        "Learn how to build social network friend recommendation algorithm using graph traversal",
        "Learn how to implement quick sort, merge sort, and bubble sort",
        "Learn how to implement binary search and linear search in e-commerce product catalog",
        "Learn how to optimize flight route using greedy algorithm and dijkstra algorithm",
        "Learn how to optimize investment budget using dynamic programming and Knapsack algorithm",
        "Learn how to perform mathematical computation and Fibonacci calculation using recursion",
        "Learn how to create Sudoku solver using backtracking",
        "Learn how to implement hashing in product database",
        "Learn how to build flight data management system using binary search",
        "Learn how to build autonomous robot path planner using priority queue and A algorithm"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction",
          "Table of Contents",
          "Whom This Course is Intended for?"
        ],
        "Tools, IDE, and Datasets": [
          "Tools, IDE, and Datasets"
        ],
        "Introduction to Data Structures & Algorithms": [
          "Introduction to Data Structures & Algorithms"
        ],
        "Array & Linked List": [
          "Array & Linked List"
        ],
        "Creating Undo Function Using Stack": [
          "Creating Undo Function Using Stack"
        ],
        "Building Patient Queue System": [
          "Building Patient Queue System"
        ],
        "Finding Customer ID Using Binary Search Tree": [
          "Finding Customer ID Using Binary Search Tree"
        ],
        "Building Patient Prioritization System Using Heap": [
          "Building Patient Prioritization System Using Heap"
        ],
        "Building Friend Recommendation Algorithm Using Graph Traversal": [
          "Building Friend Recommendation Algorithm Using Graph Traversal"
        ],
        "Implementing Quick Sort, Merge Sort, and Bubble Sort Algorithms": [
          "Implementing Quick Sort, Merge Sort, and Bubble Sort Algorithms"
        ]
      },
      "requirements": [
        "No previous experience in data structures is required",
        "Basic knowledge in Python and C++"
      ],
      "description": "Welcome to Software Engineering 101: Data Structures with Python & C++ course. This is a comprehensive project based course where you will learn the fundamentals of data structures and algorithms like arrays, linked lists, stacks, queues, trees, graphs, and hash tables, while also exploring algorithms such as sorting, searching, and dynamic programming. This course is a perfect combination between computer science and system optimization, making it an ideal opportunity to practice your programming skills while improving your technical knowledge in software engineering. In the introduction session, you will learn the basic fundamentals of data structures and algorithms, such as getting to know their use cases, technical limitations, and commonly used algorithms. Then, in the next section you will find and download dataset from kaggle, it is a platform that offers high quality datasets from various industries. Afterward, we will start the project. Initially we will focus on linear data structure concepts. In the first project, we are going to develop an employee attendance tracker, where arrays will be used to efficiently store and update daily attendance records. In the second project, we are going to design a customer support ticketing system that uses linked lists to manage incoming requests in the order they arrive. For the third project, we are going to implement an undo feature for a simple text editor by leveraging the Last In First Out behavior of stacks. In the fourth project, we are going to simulate a hospital queue system, using the queue concept to manage patients based on their arrival time. Following that, we will move to non linear data structures concepts. In the fifth project, we are going to create a Customer ID finder tool using binary search trees for fast data retrieval. In the sixth project, we are going to build a patient prioritization system using a heap to ensure urgent cases are addressed first. In the seventh project, we are going to build a friend recommendation engine for a social network using graph traversal techniques. In the eighth project, we are going to apply sorting algorithms like merge sort, quick sort, and bubble sort to organize sales data. In the ninth project, we are going to implement binary and linear search to help users quickly find products in an e-commerce product catalog. In the tenth project, we are going to optimize flight routes using the Dijkstra algorithm, which is a popular greedy algorithm for finding the shortest path. Projects one through ten will be implemented in Python, while projects eleven to fourteen will be implemented in C++ as it will give us more advanced control and better performance. In the eleventh project, we are going to create an investment budgeting tool using dynamic programming, specifically Knapsack algorithm which will help us maximize returns within budget constraints. In the twelfth project, we are going to deepen our understanding of recursion by computing Fibonacci sequences efficiently. In the thirteenth project, we are going to design a Sudoku solver using backtracking to systematically explore and fill the correct numbers. The fourteenth project is a real world application project where we are going to build a flight data management system using binary search to extract historical records quickly. Lastly, at the end of the course, we are going to build an autonomous robot path planner using min heap and the A algorithm to simulate intelligent pathfinding in a dynamic environment.\nFirstly, before getting into the course, we need to ask this question to ourselves, why should we learn about data structures and algorithms? Well, here is my answer, they help you write programs that run faster, use memory efficiently, and handle large volumes of data effectively. In software engineering, this knowledge is crucial for solving complex problems, optimizing system performance, and designing solutions that are reliable under various conditions.\nBelow are things that you can expect to learn from this course:\nLearn the basic fundamentals of data structures and algorithms, such as getting to know their use cases and technical limitations\nLearn about linear and non linear data structures\nLearn how to build employee attendance tracker using array\nLearn how to build customer support ticketing system using linked list\nLearn how to create undo function using stack\nLearn how to build patient queue system\nLearn how to find customer ID using binary search tree\nLearn how to build patient prioritization system using heap\nLearn how to build social network friend recommendation algorithm using graph traversal\nLearn how to implement quick sort, merge sort, and bubble sort\nLearn how to implement binary search and linear search in e-commerce product catalog\nLearn how to optimize flight route using greedy algorithm and dijkstra algorithm\nLearn how to optimize investment budget using dynamic programming and Knapsack algorithm\nLearn how to perform mathematical computation and Fibonacci calculation using recursion\nLearn how to create Sudoku solver using backtracking\nLearn how to implement hashing in product database\nLearn how to build flight data management system using binary search\nLearn how to build autonomous robot path planner using priority queue and A algorithm",
      "target_audience": [
        "Software engineers who are interested to learn data structures and algorithm using Python and C++",
        "Game developers who are interested in creating game logics and optimizing game performance"
      ]
    },
    {
      "title": "SOLID, Wzorce Projektowe w C# (.NET) - praktyczny przewodnik",
      "url": "https://www.udemy.com/course/solid-wzorce-projektowe-w-c-sharp-net-praktyczny-przewodnik/",
      "bio": "Najpopularniejsze wzorce projektowe Gang of Four. Zasady SOLID i filary OOP w C#, .NET",
      "objectives": [
        "wzorce projektowe",
        "zasady programowania SOLID",
        "filary programowania obiektowego: dziedziczenie, abstrakcja, enkapsulacja i polimorfizm",
        "dobre praktyki programowania"
      ],
      "course_content": {
        "Powitanie": [
          "Wstęp",
          "Oglądanie kursu w FullHD",
          "Wygodne przeglądanie kodu z GitHuba",
          "Darmowe materiały",
          "Discord"
        ],
        "Programowanie obiektowe (OOP)": [
          "Programowanie obiektowe - Wprowadzenie",
          "Konfiguracja środowiska lokalnego",
          "Klasy",
          "Interface",
          "Enkapsulacja",
          "Dziedziczenie",
          "Polimorfizm",
          "Abstrakcja"
        ],
        "Zasady programowania SOLID": [
          "SOLID wprowadzenie",
          "Single Responsibility Principle - Zasada pojedynczej odpowiedzialności",
          "Open Close Principle - Zasada otwartego-zamkniętego",
          "Liskov Substitution Principle - Zasada podstawienia Liskov",
          "Interface Segregation Principle - Zasada segregacji interfejsów",
          "Dependency Inversion Principle - Zasada odwrócenia zależności"
        ],
        "Wstęp": [
          "UML",
          "Wzorce projektowe - wprowadzenie"
        ],
        "Wzorce projektowe kreacyjne": [
          "Budowniczy (Builder)",
          "Budowniczy (Builder) - Implementacja",
          "Fabryka (Factory)",
          "Fabryka (Factory) - Implementacja",
          "Fabryka abstrakcyjna (abstract factory)",
          "Fabryka abstrakcyjna (abstract factory) - implementacja",
          "Prototyp (Prototype)",
          "Prototyp (Prototype) - Implementacja",
          "Singleton",
          "Singleton - Implementacja"
        ],
        "Wzorce projektowe behawioralne": [
          "Strategia (strategy)",
          "Strategia (strategy) - Implementacja",
          "Obserwator (observer)",
          "Obserwator (observer) - Implementacja",
          "Mediator",
          "Mediator - Implementacja",
          "Łańcuch zobowiązań (Chain of responsibility)",
          "Łańcuch zobowiązań (Chain of responsibility) - Implementacja",
          "Metoda szablonowa (Template method)",
          "Metoda szablonowa (Template method) - Implementacja",
          "Stan (State)",
          "Stan (State) - Implementacja"
        ],
        "Wzorce projektowe strukturalne": [
          "Adapter",
          "Adapter - Implementacja",
          "Fasada (Facade)",
          "Fasada (Facade) - Implementacja",
          "Dekorator (Decorator)",
          "Dekorator (Decorator) - Implementacja",
          "Pośrednik (Proxy)",
          "Pośrednik (Proxy) - Implementacja"
        ]
      },
      "requirements": [
        "Podstawowa znajomość dowolnego języka programowania zorientowanego obiektowo (preferowany C#)"
      ],
      "description": "Niezależnie od języka programowania w jakich pracujesz, jeśli chcesz osiągnąć najwyższy poziom programowania, po prostu MUSISZ opanować wzorce projektowe.\n\n\nWiększość pracodawców poszukuje inżynierów oprogramowania posiadających umiejętności projektowania wzorców i są gotowi zapłacić dodatkowe pieniądze, aby ich zatrudnić.\nWzorce projektowe służą do projektowania zorientowanego obiektowo oprogramowania, które można w prosty sposób rozszerzać i jest łatwe do utrzymania.\nMożna je stosować w dowolnym języku programowania, po to aby rozwiązać powszechne problemu związane z projektowaniem i implementacją aplikacji.\nTe umiejętności, nauczysz się na tym kursie, z przykładami z realnych problemów różnego rodzaju aplikacji.\nPod koniec tego kursu będziesz umiał:\nwskazać problemy z trudnym utrzymaniem i rozszerzalności w swoim kodzie\npisać rozszerzalny kod\nodpowiedzieć na pytania rekrutacyjne odnośnie wzorców projektowych\nbędziesz lepszym programistą !\n\nKurs pokrywa:\n\n- filary programowania obiektowego: abstrakcja, enkapsulacja, dziedziczenie, polimorfizm\n- diagramy klas w języku UML\n\n\nZasady SOLID:\nSingle-responsibility principle: Zasada pojedyńczej odpowiedzialności\nOpen–closed principle: Zasada otwartego-zamkniętego\nLiskov substitution principle: Zasada podstawienia Liskov\nInterface segregation principle: Zasada segregacji interfaceów\nDependency inversion principle: Zasada odwrócenia zależności\n\n\nWzorce projektowe kreacyjne (służące do tworzenia w prosty i reużywalny sposób obiekty):\n\nBudowniczy (Builder)\nFabryka (Factory)\nFabryka abstrakcyjna (Abstract Factory)\nPrototyp\nSingleton\n\n\nWzorce projektowe behawioralne (definiujące zachowanie w jaki sposób możemy korzystać z obiektów / funkcjonalności):\n\n\nStrategia (Strategy)\nObserwator (Observer)\nStan (State)\nMetoda szablonowa (Template method)\nŁańcuch zobowiązań (Chain of responsibilty)\n\nWzorce projektowe strukturalne (ułatwiające implementacje złożonych struktur klas i relacji między nimi):\n\n\nAdapter\nDekorator\nFasada\nProxy\n\n\nZnając te najpopularniejsze wzorce projektowe, bez problemu odnajdziesz i zrozumiesz ich implementacje w projektach, w których będziesz uczestniczyć oraz bez większych problemów porozumiesz się z innymi programistami\n\nW razie pytań jestem dostępny",
      "target_audience": [
        "Osoba ze znajomością zorientowanego obiektowo języka programowania, chcąca nauczyć się dobrych praktyk i wzorców programowania"
      ]
    },
    {
      "title": "Algoritmalar, Veri Yapıları ve Real-Life Python Problemleri!",
      "url": "https://www.udemy.com/course/algorithms-data-structures-and-real-life-python-problems/",
      "bio": "Python ile Algoritma ve Veri Yapıları Temellerini Atın! Gerçek Hayat Python Problemleri ile İş Mülakatlarına Hazırlanın",
      "objectives": [
        "Algoritmalar ve Veri Yapılarının hem mantığını hem de Python ile nasıl kodlandığını öğreneceksiniz",
        "Python dilinde gerçek hayat problemleri ile kendinizi geliştireceksiniz",
        "Farklı algoritmalar sayesinde hem analitik düşünme gücünüzü hem de Python kodlama yeteneğinizi arttıracaksınız",
        "Gerçek dünya problemleri ile yüzleşerek hem kodlama becerinizi hem de vizyonunuzu geliştireceksiniz",
        "Kendi kendinize \"Neden ben Google'da çalışmayayım ki\" diye soracaksınız",
        "İş başvurusu öncesi neler yapmanız gerektiğini öğreneceksiniz",
        "İş mülakatlarına teknik anlamda daha donanımlı ve öz güvenle gideceksiniz",
        "Daha hızlı çalışan ve daha az bellek kullanan yani daha etkili kodlar yazacaksınız"
      ],
      "course_content": {
        "Giriş": [
          "Datai Team Yol Haritası",
          "Ful Kurs Ders Programı",
          "Anaconda ve Jupyter Notebook Kurulumu",
          "Üniversite vs Kurs Ders Programı",
          "Motivasyon ve Tavsiye"
        ],
        "Adım Adım İş Başvurusu": [
          "Adım Adım İş Başvurusu Genel Bakış",
          "Şirketler",
          "İş Türleri",
          "CV (Özgeçmiş) Hazırlama",
          "Online Presence",
          "İş Arama",
          "Non-Technical İş Görüşmesi",
          "Adım Adım İş Başvurusu Sonuç"
        ],
        "Algoritma ve Code Complexity": [
          "Algoritma ve Code Complexity Genel Bakış",
          "Algoritma Nedir",
          "Algoritma ve Code Complexity",
          "Big-O Notation",
          "Big-O | Omega | Theta",
          "Big-O Örnekleri",
          "Calculating Scale of Big-O",
          "Algoritma ve Code Complexity Sonuç, Quiz ve Mülakat Soruları"
        ],
        "Python": [
          "Python Genel Bakış",
          "Python İş Görüşmesi Soru-Cevap 1",
          "Python İş Görüşmesi Soru-Cevap 2",
          "Python İş Görüşmesi Soru-Cevap 3",
          "Python İş Görüşmesi Soru-Cevap 4",
          "Python Challenge/Problem Genel Bakış",
          "Easy Problem: Faktöriyel",
          "Easy Problem: Kelimenin Tersi",
          "Easy Problem: Saat Çevirme",
          "Easy Problem: Baş Harf Büyütme",
          "Medium Problem: Kelime Karıştırma",
          "Medium Problem: Sıklık Bulma",
          "Medium Problem: Kayıp Basamak",
          "Hard Problem: Array Rotasyonu",
          "Hard Problem: Array Pairs",
          "Python Neler Öğrendik?"
        ],
        "--------------------DATA STRUCTURES (VERİ YAPILARI)--------------------": [
          "Data Structure Genel Bakış"
        ],
        "Array(Dizi) Yapısı": [
          "Array(Dizi) Yapısı Genel Bakış",
          "Arrays",
          "Dynamic Arrays",
          "Dynamic Array with Python",
          "Array İş Mülakatları Soru-Cevap",
          "Array Python Challenge/Problem: Word Split",
          "Array(Dizi) Yapısı Neler Öğrendik ve Tavsiyeler"
        ],
        "Stacks - Queues - Deques": [
          "Stacks - Queues - Deques Genel Bakış",
          "Stacks",
          "Stacks with Python",
          "Queues",
          "Queues with Python",
          "Deque",
          "Deque with Python",
          "Stacks - Queues - Deques İş Mülakatları Soru-Cevap",
          "Challenge 1: Stack Kullanarak String'in Tersini Bulmak",
          "Challenge 2: Python da Listeyi Stack ve Queues Gibi Kullanmak",
          "Challenge 3: İki Stacks ile Queue Yapmak",
          "Stacks - Queues - Deques Neler Öğrendik ve Tavsiyeler"
        ],
        "Linked List": [
          "Linked List Genel Bakış",
          "Linked List",
          "Linked List with Python",
          "Doubly Linked List",
          "Doubly Linked List with Python",
          "Linked List İş Mülakatları Soru-Cevap",
          "Challenge 1: Linked List Başından Node Eklemek",
          "Challenge 2: Linked List Verilen Node'dan sonra Node Eklemek",
          "Challenge 3: Linked List Sonundan Node Eklemek",
          "Challenge 4: Linked List Node Silmek",
          "Linked List Neler Öğrendik ve Tavsiyeler"
        ],
        "Recursion": [
          "Recursion Genel Bakış",
          "Recursion",
          "Recursion Basit Soru",
          "Recursion İş Mülakatları Soru-Cevap",
          "Challenge 1: Recursion ile String'in Tersini Bulmak",
          "Challenge 2: Recursion ile Çarpma işlemi: x*y",
          "Challenge 3: Recursion ile Üslü Sayılar: x^y",
          "Recursion Neler Öğrendik"
        ],
        "--------------------Algorithms (Algoritmalar)--------------------": [
          "Algorithms Genel Bakış"
        ]
      },
      "requirements": [
        "Tercihen \"Python: Sıfırdan Uzmanlığa Programlama (1)\" kursunu almış olmak yada temel seviyede Python bilgisine sahip olmak",
        "İnternet bağlantılı bir bilgisayara sahip olmak",
        "Hedefler, hırs, tutku ve gelecek ile ilgili güzel hayaller"
      ],
      "description": "Algoritmalar, Veri Yapıları ve Real-Life Python Problemleri!\nBu kursta Python ile algoritmaları ve veri yapılarını öğrenip, gerçek dünya problemlerini çözeceğiz.\nNeden Python?\nPython 2018 IEEE araştırmasına göre dünya çapında en çok kullanılan ve tercih edilen programlama dili.\nPython kolay öğrenilebilirliği sayesinde kodlamaya yeni başlayanların ilk tercihi oluyor.\nPython open source (açık kaynak) olması nedeni ile Facebook yada Google gibi dünyanın en büyük şirketleri tarafından destekleniyor.\nVeri bilimi, makine öğrenmesi yada yapay zeka denince akla ilk olarak Python dili geliyor. Bu durumda Python'ın dünya çapında büyük bir kitlesinin olmasına neden oluyor.\nPython öğrenmesi en kolay olan dillerin başında geliyor.\nKariyer açısından Python en çok fırsata sahip dillerinden biri.\nReal-Life Python Problemleri\nGerçek hayatta karşımıza çıkabilecek problemleri Python ile algoritmalar geliştirerek çözeceğiz.\nBu problemler sayesinde hem Python kodlama becerimiz gelişecek hem de dünyada diğer yazılımcılar tarafından çözülen problemler ile yüzleşeceğiz.\nNeden Algorithms(Algoritmalar) ve Data Structures (veri yapısı) Öğrenmeliyiz?\nVeri yapılarını ve algoritmaları bilmek çok daha etkili kod yazmamızı sağlar. Bu durumda tam olarak yazılım alanında iş veren şirketlerin istediği bir durumdur.\nVeri yapıları ve algoritmalar yazılım yada algoritma iş mülakatlarının olmazsa olmaz soruları arasındadır.\nGünümüzde donanım sınırlaması nedeni ile çözülemeyen problemler veri yapılarını ve algoritmalar sayesinde daha kolay çözülebilmektedir.\nHer yazılımcının bilmesi gerek yeteneklerdendir.\nGünlük hayatta kullanılan araçların arkasında yatan algoritmaları anlamak için gereklidir.\nJob Interviews (İş Mülakatları) Kısmı Neleri İçeriyor?\nBir yazılım mühendisi yada algoritma tasarım işi için yapılan mülakatlarda teknik sorular vardır. Bu teknik kısım genelde her konunun başlangıç ve orta seviye zorlukta ki kısımlarından sorulur. İş mülakatları kısmında her konu ile alakalı mülakatlarda çıkacak sorular ele alınmıştır.\nTeknik sözel soruların yanında birde \"Coding Problems\" soruları vardır. Bu kısım içinde detaylı olarak her bir konu özelinde Python ile mülakatta çıkabilecek sorular uygulamalı olarak çözülmüştür.\nBu Kurs ile Alacaklarınız\nSıfırdan Kodlama Becerisi: Sizinle birlikte kod yazıyoruz. Her ders boş bir sayfa ile başlar ve kodu sıfırdan yazarız. Bu şekilde ilerleyebilir ve kodun nasıl bir araya geldiğini ve her satırın ne anlama geldiğini tam olarak anlayabilirsiniz.\nKodlar ve Şablonları: Kursta oluşturduğumuz her Python şablonlarını ve kodunu indirebilirsiniz. Bu, sizlere hem daha sonra kod üzerinde pratik yapma hem de kendi projelerinizi şablon sayesinde daha kolay bir şekilde yaratma imkanı sağlayacaktır\nTeori ve Mantık: Size yalnızca kod yazmayı değil, hem yazdığımız kodun arkasında yatan mantığı ve teoriyi hem de neden böyle bir kod yazdığımızı anlatıyoruz.\nKurs içi destek: Size sadece video ile ders anlatımı yapmıyoruz. Size destek olmak için profesyonel Veri Bilimcilerinden oluşan bir ekip oluşturduk. Bu da ders ve ya ders dışı sorularınıza en fazla 72 saat içinde yanıt alacağınız anlamına geliyor.\nPython for Algorithms, Data Structures and Job Interviews kursu içeriği:\nGİRİŞ\nDatai Team Yol Haritası\nFul Kurs Ders Programı\nÜniversite vs Kurs Ders Programı\nAnaconda ve Jupyter Notebook Kurulumu\nMotivaston ve Tavsiye\nADIM ADIM İŞ BAŞVURUSU\nAdım Adım İş Başvurusu Genel Bakış\nŞirketler\nİş Türleri\nCV Hazırlama\nOnline Presence\nİş Arama\nNon-Technical İş Görüşmesi\nALGORİTMA ve CODE COMPLEXITY\nAlgoritma Nedir\nAlgoritma ve Code Complexity\nBig-O Notation\nBig-O | Omega | Theta\nBig-O Örnekleri\nScale of Big-O\nPYTHON\nPython Genel Bakış\nPython İş Görüşmesi Soru-Cevap 1\nPython İş Görüşmesi Soru-Cevap 2\nPython İş Görüşmesi Soru-Cevap 3\nPython İş Görüşmesi Soru-Cevap 4\nPython Challenge/Problem\nEasy Problem: Faktörüyel\nEasy Problem: Kelimenin Tersi\nEasy Problem: Saat Çevirme\nEasy Problem: Baş Harf Büyütme\nMedium Problem: Kelime Karıştırma\nMedium Problem: Sıklık Bulma\nMedium Problem: Kayıp Basamak\nHard Problem: Array Rotasyonu\nHard Problem: Array Pairs\nDATA STRUCTURES (VERİ YAPILARI)\nArray (Dizi) Yapısı\nArrays\nDynamic Arrays\nDynamic Arrays with Python\nArrays İş Mülakat Soru-Cevap\nArrays Python Challenge/Problem\nStacks - Queues - Deques\nStacks\nStacks with Python\nQueues\nQueues with Python\nDeque\nDeque with Python\nStacks - Queues - Deques İş Mülakatları Soru - Cevap\nChallenge 1: Stack Kullanarak String'in Tersini Bulmak\nChallenge 2: Python da Listeyi Stack ve Queues Gibi Kullanmak\nChallenge 3: İki Stacks ile Queue Yapmak\nLinked List\nLinked List\nLinked List with Python\nDoubly Linked List\nDoubly Linked List with Python\nLinked List İş Mülakat Soru - Cevap\nChallenge 1: Linked List Başından Node Eklemek\nChallenge 2: Linked List Verilen Node'dan sonra Node Eklemek\nChallenge 3: Linked List Sonundan Node Eklemek\nChallenge 4: Linked List Node Silmek\nRecursion\nRecursion\nRecursion with Python\nRecursion İş Mülakat Soru - Cevap\nChallenge 1: Recursion ile String'in Tersini Bulmak\nChallenge 2: Recursion ile Çarpma işlemi: x*y\nChallenge 3: Recursion ile Üslü Sayılar: x^y\nALGORITHMS (ALGORİTMALAR)\nSearching Algorithms\nSequential Search with Python\nBinary Search with Python\nJump Search with Python\nHashing ve Hash Table\nSearching Algorithms İş Mülakat Soru - Cevap\nChallenge 1: Binary Search with Recursion\nSorting Algorithms\nBubble Sort\nBubble Sort with Python\nMerge Sort\nMerge Sort with Python\nInsertion Sort\nInsertion Sort with Python\nSelection Sort\nSelection Sort with Python\nCounting Sort\nCounting Sort with Python\nQuick Sort\nQuick Sort with Python\nHeap Sort\nSorting Algorithms İş Mülakatları Soru-Cevap\nChallenge 1: Second Great Low\nChallenge 2: Three Sum\nTree Theory\nTree\nBinary Tree\nBinary Tree with Python\nBinary Search Tree (BST)\nBinary Search Tree with Python\nTree Theory İş Mülakatları Soru-Cevap\nChallenge 1: Key Search\nGraph Theory\nGraph Theory\nAdjacency Matrix ve List\nAdjacency List with Python\nDepth First Search (DFS)\nDepth First Search (DFS) with Python\nBreadth First Search (BFS)\nBreadth First Search (BFS) with Python\nGraph Theory İş Mülakatları Soru-Cevap\nChallenge 1: Vertex Covering\nDynamic Programming\nDynamic Programming\nDynamic Programming vs Recursion\nDynamic Programming with Fibonacci Numbers\nDynamic Programming İş Mülakatları Soru-Cevap\nChallenge 1: Catalan Numbers\nGOOGLE - FACEBOOK - AMAZON İŞ MÜLAKAT ALGORİTMALARI\nGoogle: Stock Maximum Profit\nGoogle: Step Counting Using Recursion\nGoogle: String Combinations Consisting only of 0, 1 and ?\nFacebook: Find All Duplicates in Array in Linear Time\nFacebook: Dutch National Flag Sorting Problem\nAmazon: Generate Primes Up To N Using Sieve of Eratosthenes Algorithm\nSONUÇ\nKurs Hakkında Bazı Öğrenci Yorumları\nMuhsin Ozbek\nDATAI TEAM tarafından verilen Sade ve sadece verilmesi gereken bilgiyi vermekle doğrudan hedefe gitmeyi isteyenler için on numara bir kurs daha.\nCelal Anak\nEğitmenimin bütün kurslarını aldım, 1'den 5'e kadar ve son olarak bunu, UDEMY'de çok fazla kurs satın aldım ama DATAI bambaşka bir dünya, kesinlikle ve kesinlikle tavsiye ederim, gözünüz arkada kalmaz...\nTanju Özer\nbu kursta benim ilgimi çeken şu oldu. genelde herhangi birşeyi öğrenmeye başladığınızda cevap bulamadığınız soru ; o şeyde neye odaklanmam gerekir, işte bu kurs da öğrenmekten ziyade neyi öğrenmeniz gerektiğini açıklamış datai team, dikkatli takip ederseniz ilerde karşılaşacağınız şeyleri söylüyor buda size kendi reçetenizi çıkarma imkanı sunuyor. elinize dilinize bilginize sağlık datai team.\nİçeriğin İngilizce olması sizi yanıltmasın arkadaşlar. Derslerim tamamen Türkçedir.\nHemen kaydolun ve bir an önce başlayalım.",
      "target_audience": [
        "Algoritma, veri yapıları (data structure) ve Python ile ilgili iş başvurusunda bulunacaklar",
        "Yazılım mühendisi veya yazılım geliştiricisi olarak çalışmak isteyenler",
        "Google, Facebook gibi dünya çapında şirketler tarafından yapılan teknik mülakat sorularını öğrenmek isteyenler",
        "Python ile farklı algoritmalar çözerek hem kendini geliştirmek hem de kariyerlerinde öne çıkmak isteyenler",
        "Bulmaca çözmeyi ve rekabeti sevenler",
        "İş mülakatlarında hem sosyal hem de teknik anlamda kendini güvende hissetmek isteyenler"
      ]
    },
    {
      "title": "Pontos de Função & Roteiro de Métricas do SISP",
      "url": "https://www.udemy.com/course/curso-rapido-apf-roteiro-de-metricas-do-sisp-v2x/",
      "bio": "Aprenda como utilizar métricas de software funcionais para contratar software",
      "objectives": [
        "entender como funcionam as principais métricas de desenvolvimento de software utilizadas no mercado brasileiro",
        "realizar uma contagem de pontos de função em um contexto simplificado",
        "entender como funciona o Roteiro de Métricas do SISP (seus principais recursos e restrições)"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Nivelamento: \"Métodos de Desenvolvimento\" (1)",
          "Nivelamento: \"Tipos de Requisitos\" (2)",
          "Nivelamento: \"Visão do Usuário\" (3)"
        ],
        "Sobre Métricas": [
          "Breve histórico",
          "Tipos de estimativas",
          "Métodos usados",
          "Definições gerais",
          "Convenções locais"
        ],
        "Análise de Pontos de Função": [
          "O que é APF",
          "Quem usa",
          "Reconhecido pelo usuário",
          "Processo: \"Reúna a documentação\" (1)",
          "Processo: \"Identifique os RFU\" (2)",
          "Processo: \"identifique Funções de Dados\" (3)",
          "Processo: \"Identifique Funções de Transação\" (4)",
          "Processo: \"Calcule o Tamanho\" (5)",
          "Processo: \"Documente e Reporte\" (6)",
          "Ferramentas de trabalho",
          "O que não é escopo",
          "Conta ou não conta"
        ],
        "Roteiro de Métricas do SISP 2": [
          "Sobre o Roteiro",
          "Orientações: \"Overview\"",
          "Item 4.1: \"Projeto de Desenvolvimento\"",
          "Item 4.2: \"Projeto de Melhoria\"",
          "Item 4.3: \"Projeto de Migração\"",
          "Item 4.4: \"Manutenção Corretiva\"",
          "Item 4.5 (1): \"Mudança de Plataforma - Linguagem\"",
          "Item 4.5 (2): \"Mudança de Plataforma - DB\"",
          "Item 4.6: \"Atualização de Versão\"",
          "Item 4.7: \"Manutenção em Interface\"",
          "Item 4.8: \"Adaptações em Funcionalidades\"",
          "Item 4.9: \"Apuração Especial\"",
          "Item 4.10: \"Atualização de Dados\"",
          "Item 4.11: \"Páginas Estáticas\"",
          "Item 4.12: \"Documentação de Sistemas\"",
          "Item 4.13: \"Verificação de Erros\"",
          "Item 4.14: \"Pontos de Função de Testes\"",
          "Item 4.15: \"Componente Interno Reusável\"",
          "Sobre \"Múltiplas Mídias\"",
          "Sobre \"Log, Trilha e Histórico\"",
          "Outras ferramentas propostas",
          "Os métodos ágeis na visão do SISP",
          "Praticando..."
        ],
        "Encerramento": [
          "Para refletir",
          "Até breve"
        ],
        "Materiais e Bônus": [
          "[ MATERIAIS DO CURSO ]",
          "[ RESULTADOS DOS EXEMPLOS ]",
          "Como funciona a planilha de contagem"
        ]
      },
      "requirements": [
        "fundamentos sobre processo de desenvolvimento de software"
      ],
      "description": "Este curso apresenta de uma forma bastante simples e objetiva, como funcionam as principais métricas de software do mercado e como a administração pública faz uso desta estratégia no Brasil.\nSerão abordados alguns conceitos básicos sobre o método Análise de Pontos de Função do IFPUG e também o modelo de funcionamento do Roteiro de Métricas do SISP (versão 2.3).\nÉ o único curso da Udemy sobre o Roteiro de Métricas do SISP e esta é a forma mais comum de contratação de software no Governo Brasileiro. Aproveite agora e adquira já o seu acesso vitalício!",
      "target_audience": [
        "analistas de requisitos/ sistemas",
        "gestores de projetos de software",
        "coordenadores e gerentes de equipes que atuam com projetos de software"
      ]
    },
    {
      "title": "Game Hacking with software",
      "url": "https://www.udemy.com/course/game-hacking-with-software-cheat-engine/",
      "bio": "Game cheating with vb software language together cheat engine",
      "objectives": [
        "Understand the fundamentals of programming languages and concepts",
        "Develop problem-solving skills through coding exercises and projects",
        "Gain proficiency in software development tools and techniques",
        "Collaborate effectively in a team environment to develop and deploy software applications"
      ],
      "course_content": {
        "Setups": [
          "Setups"
        ],
        "Create Project": [
          "Create Project"
        ],
        "Get Base Address": [
          "How to get base address"
        ],
        "Fill out the names": [
          "Getting names"
        ],
        "Pointer Scan with Cheat Engine": [
          "Cheat Engine Pointer Scan"
        ],
        "Write Memory": [
          "Write Memory"
        ],
        "Final": [
          "Final Project"
        ],
        "Optional Video": [
          "Optinal tutorial video"
        ],
        "Optional": [
          "Optional Video"
        ],
        "Documents": [
          "Documents for software"
        ]
      },
      "requirements": [
        "No prior programming experience required. This course is designed for beginners and will cover all necessary concepts from scratch."
      ],
      "description": "How to get started with Visual Studio\nHow to use Cheat Engine\nHacking games to unlimited ammo\nUsing Pointer Scanning for ammo\nHow to hack a process memory\nMemory Hacking\nCreating software with vb software language\n\n\nThis software is written in the Visual Basic programming language and is designed to develop game cheats through Cheat Engine. This cheating software, aimed at changing the gaming experience, can provide players with a variety of benefits, for example, access to more coins, points or other in-game resources. However, the use of such cheating software can often disrupt the balance of the game and miss the enjoyment of other players. Therefore, the ethical use of such software is important; it should only be used for personal entertainment purposes and only in their own games. In addition, many game developers take various measures to detect cheating software and can penalize players who use cheating. Therefore, users of the cheat software should take into account the consequences of their use. As a result, this cheat software offers players the opportunity to customize their gaming experiences and increase their entertainment, but users should behave in accordance with ethical guidelines and not negatively impact the experience of others.\"",
      "target_audience": [
        "Beginner developers",
        "Game Cheating",
        "Game Hacking",
        "Software",
        "Cheat Software",
        "Cheating Software",
        "Game softwares",
        "Cheat Engine",
        "Visual Studio"
      ]
    },
    {
      "title": "Practice TDD with Node, Typescript and Jest (checkout kata)",
      "url": "https://www.udemy.com/course/practice-tdd-with-node-typescript-and-jest-checkout-kata/",
      "bio": "A practical exercise to practice TDD using Node Typescript and Jest",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Kata presentation",
          "Kata Implementation Split: First Test",
          "Kata Implementation Split: Item Price",
          "Kata Implementation Split: Refactor Items",
          "Kata Implementation Split: Apply Discount",
          "Kata Implementation Split: Refactor Discount"
        ]
      },
      "requirements": [
        "Familiar with Node and Typescript",
        "Basic understanding of Testing in general"
      ],
      "description": "This is not an actual course, is an exercise showing how to practice Test Driven Development TDD using Node.js Typescript and Jest as a framework library.\n\n\nHow we will work this out is, first, we will present a problem to checkout a list of items and calculate the final price, but we would add some spice on it adding some discounts to some products. Later, we will implement this problem writing the tests first, starting for the simples functionality and growing our design and our functionality until it matches all the requirements provided.\nWhile we try to find the solution for this problem, we will remain disciplined staying always within the red-green-refactor loop, that will guarantee that we will make it until our final design assuming no risks, working the solution iteratively and in small increments.\n\n\nThis exercise is a sneak preview of the other courses published about getting to know TDD in Node Typescript and Jest and building a REST API in both approaches Outside-In and Inside-out. Students can decide after watching this \"course\" if they would like to take any of the other three. Do you want to develop software like this? Check this out and get to know this practice!",
      "target_audience": [
        "Developers with certain experience writing code",
        "Developers with certain experience writing tests"
      ]
    },
    {
      "title": "Flow Blockchain Developer Bootcamp (Free)",
      "url": "https://www.udemy.com/course/flow-blockchain-developer-bootcamp-free/",
      "bio": "Become A Flow Blockchain Developer With One Course. Master Cadence & More!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Hello World",
          "Fungible Tokens",
          "Non-Fungible Tokens",
          "Marketplace Setup"
        ]
      },
      "requirements": [
        "You Need A Computer With Linux, MacOS Or Windows.",
        "A Basic Understanding Of Web-Technologies.",
        "Knowledge Of A Programming Language Is Beneficial (Integers, Booleans, Strings, Etc.) Though Not Required."
      ],
      "description": "Welcome to the Flow Blockchain Developer Bootcamp (Free). The intro course to become a Flow blockchain developer.\n\nCourse & Lesson Plan comes from Flow & Dapper Labs.\n\nEven if you have zero or limited programming experience, this course will take you from beginner to Flow blockchain developer. Here's why:\n\nThe lesson plan is generated by Flow & Dapper Labs.\n\nThe course has been updated for 2021, so you'll be learning with all of the latest tools.\n\nThe course doesn't cut corners. You'll learn by building real-world projects in our practical labs.\n\nYou'll save yourself over $10,000. Yet, get access to the same materials as in-person bootcamps.\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a Flow blockchain developer.\n\nBy the end of this course, you will have an introduction to Flow blockchain apps, and you'll be on your way to getting a job or use your skills professionally.\n\nYou'll also build a portfolio of projects that you can show off to any potential employer.\n\nWho this course is for:\nIndividuals Who Want To Benefit From One Of The Most In-Demand Skills.\nTechnologists Who Want To Join The Highest Paid Developer Workforce.\nFreelancers Who Want To Earn Money Writing Building Blockchain Apps.\nDevelopers Who Want To Build Flow Blockchain Applications Using Solidity.\nProfessionals Who Want To Add 'Blockchain Developer' To Their Resume.",
      "target_audience": [
        "Beginning Blockchain Developers."
      ]
    },
    {
      "title": "ChatGPT for DevOps Practitioners",
      "url": "https://www.udemy.com/course/ai-assisted-devops-mastery/",
      "bio": "Learn 6 ways you could Turbo Charge your Journey to Devops Mastery with AI and ChatGPT. Includes Prompts.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Welcome",
          "6 Ways to Achieve Devops Mastery and 5 Ways to Upscale your career with Devops",
          "Connect with Me & School of DevOps"
        ],
        "ChatGPT for Devops Mastery": [
          "Learn and Understand Concepts with ChatGPT with Anologies and Visualisations",
          "ChatGPT Prompts",
          "Select the Right Tool for the Job - No Confusion, Absolute Clarity",
          "Write Sophisticated Shell Scripts & Generate Automation Code with Python",
          "Generate Multi Stage Dockerfiles, Kubernetes+Argo Manifests, Helm Charts",
          "Generate Jenkinsfiles, Ansible Playbooks and Terraform Modules",
          "Troubleshooting, Automated Code Reviews and Generating Devops Project Ideas",
          "Devops Demo Apps Repo",
          "Beyond AI"
        ]
      },
      "requirements": [
        "Fundamental Understanding of what is Devops"
      ],
      "description": "Are you ready to embark on a transformative journey to master DevOps with the power of AI and ChatGPT by your side? Welcome to the \"AI/ChatGPT Assisted DevOps Mastery Blueprint\" course, your roadmap to becoming a DevOps expert!\nIn today's fast-paced IT landscape, DevOps has emerged as the cornerstone of innovation and efficiency. Whether you're an IT fresher looking to kickstart your career, a seasoned professional seeking to level up, or someone in between, this course is designed to empower you with the knowledge and skills you need to thrive in the world of DevOps.\nHere are the six powerful ways in which this course will guide you towards DevOps mastery:\nLearn and Understand Concepts: Gain a deep understanding of DevOps principles, methodologies, and best practices. Explore the core concepts that underpin DevOps success, equipping you with the knowledge to make informed decisions.\nGet Guidance on Tools and Technologies: Navigate the complex DevOps toolchain with ease. Discover the right tools for the right job, and learn how to leverage them effectively to streamline your workflows.\nWrite Scripts and Automation Code: Unlock the magic of automation by mastering scripting and coding. Create scripts and automation code to automate routine tasks, improving efficiency and reliability.\nAutomated Code Reviews and Optimization: Learn how to implement automated code reviews and optimizations. Enhance code quality and performance while reducing human error.\nTroubleshoot Issues & Perform Root Cause Analysis: Develop the skills to troubleshoot and resolve issues swiftly. Perform root cause analysis to identify and eliminate the source of problems, ensuring system reliability.\nCome up with Practice Project Ideas: Hone your practical skills by conceptualizing and implementing real-world DevOps projects. Apply your knowledge to create solutions that solve industry challenges, setting you apart as a DevOps expert.\nThroughout this course, you'll also harness the power of AI and ChatGPT to accelerate your learning. Our AI-driven guidance will help you clarify concepts, prepare for interviews, complete quests and projects, and even review and optimize your code.\nBy the end of the \"AI/ChatGPT Assisted DevOps Mastery Blueprint\" course, you'll not only possess a strong foundation in DevOps but also the ability to tackle complex challenges and excel in your DevOps career. Join us on this journey, and let's unlock your full DevOps potential together. Enroll now and take the first step towards mastering DevOps with confidence!",
      "target_audience": [
        "IT Professionals who want to make a career as a Devops Engineer or a Site Reliability Engineer"
      ]
    },
    {
      "title": "Learn Python: Build a Virtual Assistant",
      "url": "https://www.udemy.com/course/learn-python-build-a-virtual-assistant-in-python/",
      "bio": "Go from basic python to creating a virtual assistant for your computer",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic knowledge of programming",
        "Competence in the English language",
        "Be able to code in basic python"
      ],
      "description": "In Learn Python: Build a Virtual Assistant In Python, you will go from beginner to intermediate level the fun way; creating a real-world application! In this course, I will teach you how to create and set up a virtual assistant for your computer. We will learn how to get data from Wikipedia and Wolfram Alpha, as well as create a GUI. After that, I will regularly release new videos on other optional things that you could add to our application.\nThis course will help you add something fun to your portfolio and give you good practice for using python. This course is especially good for beginner hobbyists who want to learn how to use various APIs and how to apply them.\nStudents who enroll will be able to create a real-world, personalized application for your personal use.",
      "target_audience": [
        "This course is meant for beginners who have a basic knowledge of how programming works",
        "This course is designed to help people gain a basis in python and the many capabilities of many of its APis",
        "This course is not meant for complete beginners to basic programming"
      ]
    },
    {
      "title": "HOW TO MANUFACTURE ROBOTS IN THE OIL AND GAS INDUSTRY",
      "url": "https://www.udemy.com/course/how-to-manufacture-robots-in-the-oil-and-gas-industry/",
      "bio": "MOBILE ROBOTS FOR THE OIL AND GAS INDUSTRY",
      "objectives": [
        "HOW TO SELECT A CHASSIS FOR THE OIL AND GAS INDUSTRY",
        "HOW TO AUTOMATE THE MOVEMENT OF A ROBOT",
        "HOW TO DETECT OBSTACLES AND AVOID THEM",
        "WHO TO ACQUIRE DATA USING A MOBILE ROBOT",
        "WIRELESS COMMUNICATION SYSTEMS IN A MOBILE ROBOT",
        "HOW TO STORE ACQUIRED DATA FROM A MOBILE ROBOT"
      ],
      "course_content": {
        "Introduction": [
          "SELECTION OF ROBOT CHASSIS FOR THE INDUSTRY",
          "AUTOMATED MOVEMENT OF A MOBILE ROBOT",
          "OBSTACLE DETECTION AND AVOIDANCE",
          "DATA ACQUISITION BY A MOBILE ROBOT",
          "WIRELESS COMMUNICATION IN A MOBILE ROBOT",
          "DATA LOGGING IN A MOBILE ROBOT",
          "CUSTOM/SPECIAL FEATURES IN A MOBILE ROBOT",
          "OGCI CERTIFICATE",
          "COURSE QUIZ"
        ]
      },
      "requirements": [
        "NONE"
      ],
      "description": "This Courses Teaches You how to Design and Manufacture a Mobile Robot for the Oil and Gas Industry. It is taught in seven (7) Basic Modules.\nIn order to Design and Manufacture a Robot for the Oil and Gas Industry,\nThere are Certain Factors You have to consider.\n1. is the chassis that will be suitable for the Environment in Which  the Oil and Gas Robot is supposed to operate in.\n2. is the type of movement or motion that the mobile robot will need to perform to complete its automated tasks and functions.\n3. is the ability of your mobile robot to detect and avoid obstacles while it is in motion.\n4 is the type, resolution, frequency, and range of the data the robot is required to detect,   measure and acquire.\n5 is the type, range and integration of compatible communication systems capable of transmitting measured data from the robot to other locations\n6 is how you intend to store the data that is measured by the robot, either prior to or after the data is transmitted\nand 7 are the special features and functions that may be required of the robot that is not yet already in the market.\nThis covers these basic 7 features that are requirements in order for a mobile robot to be able to successfully function and operate in the Oil and Gas Industry.",
      "target_audience": [
        "STUDENTS IN ROBOTICS ENGINEERING",
        "FACULTY IN ROBOTICS ENGINEERING",
        "EXPERIENCED PROFESSIONALS IN THE OIL AND GAS INDUSTRY",
        "FACULTY IN PETROLEUM ENGINEERING",
        "STUDENTS IN PETROLEUM ENGINEERING"
      ]
    },
    {
      "title": "Practical beginners course to Serverless Applications",
      "url": "https://www.udemy.com/course/introduction-to-serverless-aws/",
      "bio": "Hands on course of all the basics that you need to get started building applications with AWS and Serverless Framework",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "The instructor",
          "Introduction to cloud computing and AWS",
          "Create your AWS root account",
          "Securing your AWS account"
        ],
        "Introduction to Serverless": [
          "Why you should learn serverless?",
          "Install and configure Serverless Framework",
          "Deploy your first AWS Lambda",
          "Getting started with API Gateway",
          "Its your turn now!"
        ],
        "Monitoring your service with Serverless Framework": [
          "Introduction to monitoring",
          "Basics of Cloudwatch"
        ],
        "Introduction to DynamoDB": [
          "What is DynamoDB?",
          "Basic operations on DynamoDB tables with AWS Lambda",
          "Its your turn now"
        ],
        "Wrap up!": [
          "Conclusion and what is next",
          "Bonus Lecture: List of resources to follow after you finish this course"
        ]
      },
      "requirements": [
        "Javascript knowledge",
        "Usage of the terminal"
      ],
      "description": "The adoption of serverless computing is increasing over the years. Serverless is a great technology to save costs in the development of new applications. Also it reduces the time to market.\nSo why not to get started learning it? Serverless is the future and lots of companies are starting to adopt it now as the technology is becoming more mature.\nIn addition, AWS is the most popular cloud provider when it comes to running serverless loads and also for traditional computing.\nSo this course is the right course for you if you want to get started with Serverless, if you want to improve in your career and become a more desired hire, if you want to start a new project at work and you want to try the latest technologies, if you want to get started with cloud but you don't want to get started with servers and virtual machines.\nWHAT YOU WILL LEARN\nIn this course you will learn all the basic concepts that you need in order to get started building serverless application with AWS and Serverless Framework.\nYou will learn how to create an AWS account and secure it\nYou will learn what is Serverless Framework and how to install it\nYou will run your first AWS Lambda\nYou will learn about API Gateway\nYou will be deploying your whole Serverless application as infrastructure as code\nYou will learn about DynamoDB\nYou will learn the basics of monitoring with CloudWatch\nREQUIREMENTS\nIn order to take this course you don't need to have any previous knowledge on AWS or Serverless.\nYou just need to know some Javascript and have the basic understanding on how to build backends.\nYou will need access to a phone and a credit card to configure your AWS account (don't worry you wont get charged for any activity done in this course as it all falls in the AWS free tier)",
      "target_audience": [
        "Junior developers with some knowledge on how a backend works"
      ]
    },
    {
      "title": "JSON | Short Course | Step by Step for Beginners",
      "url": "https://www.udemy.com/course/json-short-course-step-by-step-for-beginners/",
      "bio": "JSON Basics, JSON Path, Validation, JSON Schema",
      "objectives": [],
      "course_content": {
        "INTRODUCTION": [
          "What is JSON"
        ],
        "VALIDATION": [
          "How to validate JSON"
        ],
        "JSON PATH": [
          "What is JSON Path"
        ],
        "JSON SCHEMA": [
          "What is JSON Schema"
        ],
        "MESSAGE": [
          "Message From Raghav"
        ]
      },
      "requirements": [
        "******You do not need any prior knowledge***** All lectures are prepared to take you from scratch",
        "Non programming users can follow and learn from this course",
        "You will have life time access",
        "All basic setup and prerequisites are taken care in this course"
      ],
      "description": "This course is created for complete beginners.\nGet started with JSON step by step\nThis course is created for complete beginners. If you like to learn and understand JSON from scratch, this course is for you.\nIf you are working with JSON requests, messages, or files in any project or platform like API Testing, this will create a firm foundation for you to deal with any kind of JSON data.\nIn this session, we will learn\nWhat is JSON\nJSON Syntax\nJSON Path\nJSON Validation\nJSON Schema\n\n\nBy the end of this course, you will be able to understand the complete basics of JSON\nComplete knowledge on how JSON works\nComplete knowledge on JSON Path, JSON Schema, and Validation\n\n\n******You do not need any prior knowledge*****\nAll lectures are prepared to take you from scratch\nNon-programming users can follow and learn from this course\nYou will have lifetime access\nAll basic setup and prerequisites are taken care in this course\n\n\nYou can follow along with the session along with hands-on\nI will show you simple examples and animations to understand JSON\nAll practical hands-on demo and sessions are included in this course\nDo not worry if you have never worked with JSON earlier, Let's start on this awesome journey to learn JSON\n\n\nYou can get all my FREE tutorials on my website AutomationStepByStep\nLet's Get Started...\nNever Stop Learning\nRaghav Pal",
      "target_audience": [
        "Anyone who wants to learn JSON from scratch",
        "Anyone using JSON in any project or API related processes like testing etc",
        "Users for SOAP or REST API testing with JSON format",
        "Beginners in API Testing and JSON"
      ]
    },
    {
      "title": "Java 8 Interview Questions Preparation Course",
      "url": "https://www.udemy.com/course/java-8-interview-questions-preparation-course/",
      "bio": "Learn Top 50 Interview Questions on Java 8. Get Success in your Interview.",
      "objectives": [],
      "course_content": {
        "Why should you learn Java 8?": [
          "Introduction",
          "Disclaimer"
        ],
        "Java 8 Interview Questions Part 1": [
          "What are the new features released in Java 8?",
          "What are the main benefits of new features introduced in Java 8?",
          "What is a Lambda expression in Java 8?",
          "What are the three main parts of a Lambda expression in Java?",
          "What is the data type of a Lambda expression?"
        ],
        "Java 8 Interview Questions Part 2": [
          "Why did Oracle release a new version of Java like Java 8?",
          "What are the advantages of a lambda expression?",
          "What is a Functional interface in Java 8?",
          "Why do we need Functional interface in Java?",
          "What are the differences between Collection and Stream API in Java 8?"
        ],
        "Java 8 Interview Questions Part 3": [
          "What are the main uses of Stream API in Java 8?",
          "What are the differences between Intermediate and Terminal Operations?",
          "What is a Spliterator in Java 8?",
          "What is Type Inference in Java 8?",
          "How does Internal Iteration work in Java 8?"
        ],
        "Java 8 Interview Questions Part 4": [
          "What are the main advantages of Internal Iterator over External Iterator?",
          "Can we provide implementation of a method in a Java Interface?",
          "Why do we need Default method in a Java 8 Interface?",
          "What is the purpose of a Static method in an Interface in Java 8?",
          "What are the core ideas behind the Date/Time API of Java 8?"
        ],
        "Java 8 Interview Questions Part 5": [
          "What are the advantages of new Date and Time API in Java 8 over old Date API?",
          "What are the main differences between legacy Date/Time API and Java 8 Date API?",
          "How can we get duration between two dates or time in Java 8?",
          "What is the new method family introduced in Java 8 for processing of Arrays?",
          "How does Java 8 solve Diamond problem of Multiple Inheritance?"
        ],
        "Java 8 Interview Questions Part 6": [
          "What are the differences between Predicate, Supplier and Consumer in Java 8?",
          "Is it possible to have default method definition in an interface?",
          "How Java 8 supports Multiple Inheritance?",
          "How can you get the name of Parameter in Java by using reflection?",
          "What is Optional in Java 8?"
        ],
        "Java 8 Interview Questions Part 7": [
          "How can we get current time by using Date/Time API of Java 8?",
          "Is it possible to define a static method in an Interface?",
          "How can we analyze the dependencies in Java classes and packages?",
          "What are the new JVM arguments introduced by Java 8?",
          "What are the popular annotations introduced in Java 8?"
        ],
        "Java 8 Interview Questions Part 8": [
          "What is a StringJoiner in Java 8?",
          "What is the type of a Lambda expression in Java 8?",
          "Main differences between an interface with default method and an abstract class.",
          "Bonus Lecture: What next?"
        ]
      },
      "requirements": [
        "Some Software Development Experience",
        "Familiar with basic Java"
      ],
      "description": "Java 8 is one of the major releases from Java with features like Streams, Lambdas etc. A lot of companies are looking for software developers proficient in Java 8 features.\nThis course contains basic to expert level Java 8 interview questions that an interviewer asks. Each question is accompanied with an answer so that you can prepare for job interview in short time.\nWe have compiled this course after attending dozens of technical interviews in top-notch companies like- Google, Netflix, Amazon etc.\nOften, these questions and concepts are used in our daily programming work. But these are most helpful when an Interviewer is trying to test your deep knowledge of Java 8 features.\nWhat is the biggest benefit of this course to me?\nFinally, the biggest benefit of this course is that you will be able to demand higher salary in your next job interview.\nIt is good to learn Java 8 for theoretical benefits. But if you do not know how to handle interview questions on Java 8, you can not convert your Java 8 knowledge into higher salary.\nWhat are the topics covered in this course?\nWe cover a wide range of topics in this course. We have questions on Java 8 best practices, Security, Pact, Bulkhead Design Pattern etc.\nHow will this course help me?\nBy attending this course, you do not have to spend time searching the Internet for Java 8 interview questions. We have already compiled the list of the most popular and the latest Java 8 Interview questions.\nAre there answers in this course?\nYes, in this course each question is followed by an answer. So you can save time in interview preparation.\nWhat is the best way of viewing this course?\nYou have to just watch the course from beginning to end. Once you go through all the videos, try to answer the questions in your own words. Also mark the questions that you could not answer by yourself. Then, in second pass go through only the difficult questions. After going through this course 2-3 times, you will be well prepared to face a technical interview in Java 8 topic.\nWhat is the level of questions in this course?\nThis course contains questions that are good for a Fresher to an Architect level. The difficulty level of question varies in the course from a Fresher to an Experienced professional.\nWhat are the sample questions covered in this course?\nSample questions covered in this course are as follows:\nWhat are the new features released in Java 8?\nWhat are the main benefits of new features introduced in Java 8?\nWhat is a Lambda expression in Java 8?\nWhat are the three main parts of a Lambda expression in Java?\nWhat is the data type of a Lambda expression?\nWhat is the meaning of following lambda expression?\nWhy did Oracle release a new version of Java like Java 8?\nWhat are the advantages of a lambda expression?\nWhat is a Functional interface in Java 8?\nWhat is a Single Abstract Method (SAM) interface in Java 8?\nHow can we define a Functional interface in Java 8?\nWhy do we need Functional interface in Java?\nIs it mandatory to use @FunctionalInterface annotation to define a Functional interface in Java 8?\nWhat are the differences between Collection and Stream API in Java 8?\nWhat are the main uses of Stream API in Java 8?\nWhat are the differences between Intermediate and Terminal Operations in Java 8 Streams?\nWhat is a Spliterator in Java 8?\nWhat are the differences between Iterator and Spliterator in Java 8?\nWhat is Type Inference in Java 8?\nDoes Java 7 support Type Inference?\nHow does Internal Iteration work in Java 8?\nWhat are the main differences between Internal and External Iterator?\nWhat are the main advantages of Internal Iterator over External Iterator in Java 8?\nWhat are the applications in which we should use Internal Iteration?\nWhat is the main disadvantage of Internal Iteration over External Iteration?\nCan we provide implementation of a method in a Java Interface?\nWhat is a Default Method in an Interface?\nWhy do we need Default method in a Java 8 Interface?\nWhat is the purpose of a Static method in an Interface in Java 8?\nWhat are the core ideas behind the Date/Time API of Java 8?\nWhat are the advantages of new Date and Time API in Java 8 over old Date API?\nWhat are the main differences between legacy Date/Time API in Java and Date/Time API of Java 8?\nHow can we get duration between two dates or time in Java 8?\nWhat is the new method family introduced in Java 8 for processing of Arrays on multi core machines?\nHow does Java 8 solve Diamond problem of Multiple Inheritance?\nWhat are the differences between Predicate, Supplier and Consumer in Java 8?\nIs it possible to have default method definition in an interface without marking it with default keyword?\nCan we create a class that implements two Interfaces with default methods of same name and signature?\nHow Java 8 supports Multiple Inheritance?\nCan we access a static method of an interface by using reference of the interface?\nHow can you get the name of Parameter in Java by using reflection?\nWhat is Optional in Java 8?\nWhat are the uses of Optional?\nWhich method in Optional provides the fallback mechanism in case of null value?\nHow can we get current time by using Date/Time API of Java 8?\nIs it possible to define a static method in an Interface?\nHow can we analyze the dependencies in Java classes and packages?\nWhat are the new JVM arguments introduced by Java 8?\nWhat are the popular annotations introduced in Java 8?\nWhat is a StringJoiner in Java 8?\nWhat is the type of a Lambda expression in Java 8?\nWhat is the target type of a lambda expression ?\nWhat are the main differences between an interface with default method and an abstract class in Java 8?",
      "target_audience": [
        "Software Engineer, Sr. Software Engineer, Member Technical Staff, Expert",
        "DevOps Engineer, Operations Engineer",
        "Software Architect, Development Manager, Director",
        "Anyone who wants to learn Java 8 features"
      ]
    },
    {
      "title": "Digital Signal Processing (DSP)",
      "url": "https://www.udemy.com/course/dsp-digital-signal-processing/",
      "bio": "Learn DSP concepts- Sampling, Filtering, Interpolation, Fourier Theory, Digital Formats, Image, Audio, Video Compression",
      "objectives": [
        "Learn Digital Signal Processing (DSP) concepts in detail",
        "Understand Sampling, Filtering, Interpolation, Decimation processes",
        "Learn the latest compression techniques for Images, Audio, Video",
        "Gain command over Fourier Theory and its application",
        "Understand the technology behind Manipulation of Sound using DSP",
        "Develop a simple Application using DSP",
        "Explain Digital Design for Testability purposes"
      ],
      "course_content": {
        "Introduction to DSP": [
          "Introduction to DSP - part 1",
          "Introduction to DSP - part 2"
        ],
        "Need for Design for Testability": [
          "Need for Design for Testability"
        ],
        "Simple Application of DSP": [
          "Simple Application of DSP"
        ],
        "Manipulation of Sound using DSP": [
          "Manipulation of Sound using DSP"
        ],
        "Sampling & Filtering": [
          "Sampling & Filtering - part 1",
          "Sampling & Filtering - part 2"
        ],
        "Filter Realization": [
          "Filter Realization"
        ],
        "Filter Implementation": [
          "Filter Implementation"
        ],
        "Interpolation & Decimation": [
          "Interpolation & Decimation"
        ],
        "Fourier Theory": [
          "Fourier Theory"
        ],
        "Digital Formats & Audio Compression": [
          "Digital Formats & Audio Compression"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Digital Signal Processing (DSP) course by Uplatz.\n\n\nDigital Signal Processing (DSP) includes evolving protocols and algorithms that can be used to improve a signal in a particular way or extract some useful information from it. Digital Signal Processing is an important branch of Electronics and Telecommunication engineering that deals with the managing of consistency and accuracy of the digital communication by employing multiple techniques. Digital circuits do not suffer from the much limitations. While variations in the section values can slightly change the delay of a CMOS inverter gate, the complete functionality of the gate will be retained. Unlike analog circuits, digital circuits are less vulnerable to component variations. Digital circuits are also more flexible and suited for implementing mathematical functions.\nDSP systems executed in either hardware or software programmable DSP processors are categorized by common characteristics. First, data flow/real-time computing corresponds to its analog counterpart in that an output signal is a convolution of an input signal and the impulse response of a given analog linear time-invariant (LTI) system. The convolution is assumed to take infinitesimal time to compute. Because of these DSP common characteristics, many DSP algorithms can be suitably conveyed into the form of nested Do-loops perhaps with an infinite loop bound.\n\n\nUplatz offers this end-to-end course on DSP. This Digital Signal Processing course introduces the basic concepts and principles underlying discrete-time signal processing. Concepts will be shown using cases of standard technologies and algorithms. This DSP course also explains the digital signal processing (DSP) system general model and the various functions that it performs. It accepts an analog signal as an input and converts this analog signal to numbers. It also performs computations using the numbers and converts the results of the computations into an analog signal. This DSP course covers extensive explanation of Digital Signal Processing concepts, design for testability, demonstration of a practical DSP application, manipulation of sound using DSP, sampling & filtering, filter realization & implementation, interpolation, decimation, and the like. This DSP training will help you learn modern techniques of image, audio & video compression and will make you aware of the different digital formats.\n\n\nDigital Signal Processing (DSP) - Course Curriculum\n\n\nIntroduction to DSP\nNeed for Design for Testability\nSimple Application of DSP\nManipulation of Sound using DSP\nSampling & Filtering\nFilter Realization\nFilter Implementation\nInterpolation and Decimation\nFourier Theory\nDigital Formats\nAudio Compression\nImage and Video Compression\n\n\nThe career path of a Digital Signal Processing (DSP) engineer involves several stages of education, skill development, and professional growth. DSP engineers work with signals (such as audio, video, and sensor data) to analyze, manipulate, and process them using various algorithms and techniques. Here's a general overview of the career path for a DSP engineer:\nEducation:\nBachelor's Degree: The journey usually begins with a bachelor's degree in electrical engineering, computer engineering, or a related field. During this phase, students gain foundational knowledge in mathematics, electronics, programming, and signal processing concepts.\nEntry-Level Positions:\nJunior DSP Engineer/Signal Processing Intern: After completing a bachelor's degree, you might start as an intern or entry-level engineer in roles that involve assisting with DSP-related projects, testing algorithms, and getting hands-on experience with tools and software commonly used in the field.\nSkill Development:\nMaster's/Ph.D. (Optional): While not always necessary, pursuing a master's or Ph.D. can deepen your knowledge and expertise in DSP. This can be particularly valuable if you're interested in research, advanced algorithm development, or academia.\nMid-Level Positions:\nDSP Engineer: With a few years of experience, you can advance to a mid-level DSP engineer role. In this stage, you'll likely be working on more complex projects, designing and implementing DSP algorithms, optimizing code for performance, and collaborating with cross-functional teams.\nSpecialization:\nAudio DSP Engineer, Image/Video Processing Engineer, Communications Engineer, etc.: As you gain experience, you might choose to specialize in a particular domain within DSP. This could involve working on audio processing for devices like headphones and speakers, video processing for multimedia applications, or communication systems involving modulation/demodulation techniques.\nSenior-Level Positions:\nSenior DSP Engineer/Lead DSP Engineer: With a significant amount of experience, you can take on more leadership responsibilities. This might include mentoring junior engineers, leading projects, and making architectural decisions for complex signal processing systems.\nExpertise and Leadership:\nPrincipal DSP Engineer/Engineering Manager: At this stage, you have a wealth of experience and expertise. You might be responsible for guiding the overall DSP strategy within your organization, managing teams of engineers, and contributing to high-level decision-making.\nResearch and Innovation (Optional):\nResearch Scientist/DSP Researcher: If you have a passion for pushing the boundaries of DSP, you could transition into research-focused roles. This might involve working at universities, research institutions, or companies focused on cutting-edge technology.\nConsulting or Entrepreneurship (Optional):\nDSP Consultant or Startup Founder: With a solid foundation and extensive experience, you might choose to start your own consulting firm or technology startup that specializes in DSP-related solutions or products.\nThroughout your career, continuous learning, staying up-to-date with the latest advancements in DSP, and adapting to emerging technologies will be crucial. Networking within the industry, attending conferences, and participating in online communities can also contribute to your professional growth as a DSP engineer.",
      "target_audience": [
        "DSP - Data Engineers",
        "DSP/PHY Architects - TDMA, CDMA, OFDMA, 3GPP",
        "Beginners & Newbies aspiring for a career in Communications technology",
        "DSP - Product Managers",
        "Communications DSP Engineers",
        "Electronics & Embedded Engineers",
        "Audio & Video Processing Engineers",
        "DSP Engineers & Senior Engineers",
        "DSP- R&D Team Leads",
        "Anyone interested in Signal Processing and Digital",
        "Senior Engineers - DSP Software",
        "Technical Lead - DSP Software Development",
        "RF Design Head Mixed Signal DSP",
        "Chief System Engineers - DSP FPGA Design",
        "DSP System Design Engineers",
        "Embedded Engineers - Software, Hardware, Firmware",
        "DSP Firmware Developers (Audio & Video)",
        "5G NR DSP FW - Principal Engineers",
        "Engineers - Emulation",
        "DSP Architects - Physical Layer WCDMA LTE"
      ]
    },
    {
      "title": "Curso de programación Web: \"Crea tu Tienda Online con PHP\".",
      "url": "https://www.udemy.com/course/desarrolla-una-tienda-online-con-php-y-mysql/",
      "bio": "Desarrollarás una Tienda Virtual con PHP y MySQL . Diseño de páginas web con Html5, CSS3, Bootstrap 3, Ajax y JQuery.",
      "objectives": [
        "Este curso ha sido realizado en 2016 pero al realizarlo adquirirás una buena lógica de programación.",
        "El instructor ya no responde a las preguntas de los estudiantes pero en el curso está todo bien explicado.",
        "Realizar una tienda online totalmente operativa para la venta real.",
        "Implementar pagos mediante la plataforma PayPal",
        "Realizar un sistema de comentarios para valorar los productos de la tienda.",
        "Realizar un sistema de venta de productos normales y también de productos digitales.",
        "Aprenderéis a migrar de mysql a mysqli. Al principio utilizo solo mysql pero luego paso todo el proyecto a mysqli y os enseño a hacerlo."
      ],
      "course_content": {
        "Descargar archivos y tablas de la tienda (Importante leer)": [
          "Descargar archivos y tablas de la tienda (Importante leer)",
          "¿Que vamos a desarrollar? 1ª Parte",
          "¡Nuevo!(02/06/17):Control de Stock Inteligente 2º.",
          "¡Nuevo! (29/05/17) : Control de Stock Inteligente 1º.",
          "¡Nuevo! (12/05/17) : Pagos con PayPal.",
          "Sistema de valoraciones para los productos 1",
          "Sistema de valoraciones para los productos 2",
          "Instalación de wampserver y configuración de dreamweaver"
        ],
        "Creación del header": [
          "Creación del header 1"
        ],
        "Photoshop": [
          "Photoshop 1",
          "Photoshop 2"
        ],
        "Creación del header (continuación)": [
          "Creación del header 2",
          "Creación del header 3"
        ],
        "Creación del main": [
          "Creación del main 1",
          "Creación del main 2",
          "Creación del main 3"
        ],
        "Animaciones CSS3": [
          "Animaciones 1",
          "Animaciones 2"
        ],
        "Creación del footer": [
          "Footer"
        ],
        "Bootstrap": [
          "Bootstrap"
        ],
        "Administración: Zona privada": [
          "Zona privada 1",
          "Zona privada 2",
          "Zona privada 3"
        ],
        "Administración: Añadir/Editar/Eliminar las Categorías": [
          "Añadir/Editar/Eliminar las Categorías 1",
          "Añadir/Editar/Eliminar las Categorías 2",
          "Añadir/Editar/Eliminar las Categorías 3",
          "Añadir/Editar/Eliminar las Categorías 4",
          "Añadir/Editar/Eliminar las Categorías 5",
          "Añadir/Editar/Eliminar las Categorías 6",
          "Añadir/Editar/Eliminar las Categorías 7",
          "Añadir/Editar/Eliminar las Categorías 8",
          "Añadir/Editar/Eliminar las Categorías 9",
          "Añadir/Editar/Eliminar las Categorías 10",
          "Añadir/Editar/Eliminar las Categorías 11",
          "Añadir/Editar/Eliminar las Categorías 12",
          "Añadir/Editar/Eliminar las Categorías 13",
          "Añadir/Editar/Eliminar las Categorías 14",
          "Añadir/Editar/Eliminar las Categorías 15"
        ]
      },
      "requirements": [
        "Es recomendable tener conocimientos aunque sean muy básicos en php o cualquier otro lenguaje de programación, por ejemplo, saber que es una variable, uso de bucles, condicionales... Aunque no es imprescindible, ya que podéis ir buscando información paralelamente mientras seguís el curso.",
        "Utilizo dreamweaver cs6 pero puedes utilizar cualquier versión de Dreamweaver (más antigua o más actual) o bien cualquier otro editor de código que prefieras, incluso un simple bloc de notas."
      ],
      "description": "Es un curso donde se realiza una tienda virtual con php y mysql, está pensado para gente que le gusta la programación y se está iniciando en este “mundillo”.\nTened paciencia si al principio voy un poco lento ( Es el primer curso que hago ), a medida que avancéis las clases serán más fluidas.",
      "target_audience": [
        "Este curso está pensado para gente que quiere aprender a hacer cosas prácticas con php de una manera sencilla, sin complicaciones de frameworks o POO."
      ]
    },
    {
      "title": "ELEKTRİK PROJE CİZİMİ VE SMM OLMAK",
      "url": "https://www.udemy.com/course/elektrik-proje-cizimi-ve-smm-olmak/",
      "bio": "BİNA ELEKTRİK PROJE CİZİMİ VE PROJE OFISI NASIL ACILIR NEREDEN PARA KAZANILIR",
      "objectives": [
        "AUTOCAD İLE AG ELEKTRİK PROJE CİZİMİ VE SMM YANI PROJE OFISI NE İŞ YAPAR",
        "AutoCAD Electrical",
        "ELEKTRİK PROJE EĞİTİMİ",
        "MÜHENDİS",
        "YAZILIM",
        "PAR KAZANMA YÖNTEMİ",
        "İŞ"
      ],
      "course_content": {
        "AUTOCAD GİRİŞ VE TEMEL AYARLAR": [
          "AUTOCAD GİRİŞ VE TEMEL AYARLAR",
          "2- AUTOCAD DRAW MENUSU KOMUTLARI",
          "3- MODIFY MENUSU KOMUTLARI",
          "4-ANOTATION MENUSU KOMUTLARI",
          "5 -LAYER MENUSU KOMUTLARI",
          "6 -PROPERTIES MENUSU KOMUTLARI",
          "7 - BLOCK MENUSU KOMUTLARI"
        ],
        "MİMARİ PROJE CİZİMİ VE MİMARİ PROJE TEMİZLEME": [
          "8-MİMARİ PROJE CİZİMİ",
          "9-MİMARİ PROJE TEMİZLEME"
        ],
        "MEVCUT BİNALAR İÇİN ELEKTRİK PROJE CİZİMİ": [
          "10 - PROJE CIZIME GIRIS",
          "11-TOPRAKLAMA PROJESI CIZIMI",
          "12- ANA PANO VE SIGORTA KUTUSU YERLESTIRIMI VE ANA KOLON HATTI CIZIMI",
          "13- AYDINLATMA TESİSATI",
          "14- PRIZ TESISATI CIZIMI"
        ],
        "RUHSATLI ELEKTRIK PROJE CIZIMI": [
          "15- YUKLEME CETVELI VE GERILIM DUSUMU HESABI",
          "16- KOLON SEMASI- PANO YERLESIMI VE VAZIYET PLANI CIZIMI",
          "17 RUHSAT PROJESI CIZIMI GRIS ve TOPRAKLAMA HESABI",
          "18 ANA DAGITIM PANOSU VE BINA BESLEMELERININ CEKILMESI",
          "19 AYDINLATMA PROJESI CIZIMI",
          "20- PRIZ TESISATI CIZIMI",
          "21 - YUKLEME CETVELI ,KURULU VE TALEP GUC HESABI YAPIMI",
          "22-GERILIM DUSUMU VE ISINMA KONTROL HESABI",
          "23- KUVVETLI AKIM KOLON SEMASI CİZİMİ",
          "24- PARATONER TESİSATI",
          "25 DIAFON , ZIL-KAPI OTOMATIGI TESISATI",
          "26 TELEFON TESIATI CIZIMI",
          "27 TV TESISATI CIZIMI",
          "28 KAMERA SISTEMI TESISATI CIZIMI",
          "29- YANGIN IHBAR TESISATI CIZIMI"
        ],
        "SMM OLMAK VE DOSYA TAKIBI": [
          "30- SMM OLMAK VE IMZA HAKKI ALMAK ICIN GEREKLI ISLEMLER",
          "31- DOSYA TAKIBI VE EVRAKLARININ DUZENLENMESI",
          "32- SMM LER NE IS YAPAR VE NEREDEN PARA KAZANIRLAR"
        ],
        "DİGER PROJE CİZİM ÇESİTLERİ": [
          "33- TESİS PROJESİ CIZIMI",
          "34- ŞANTİYE PROJESI",
          "35 -TARIMSAL SULAMA PROJESI",
          "36- EKBAĞLANTI PROJESI",
          "37- GÜÇ ARTIŞI PROJESI"
        ]
      },
      "requirements": [
        "AUTOCAD",
        "MİCROSOFT OFİS",
        "PARA KAZANMA"
      ],
      "description": "BU KURS İLE İLK BASTA ELEKTRİK PROJE CİZMEYE YETECEK KADAR AUTOCAD KOMUTLARININ TEMEL DUZEYDE KULLANIMINDAN BAHSEDİLECEKTİR. DAHA SONRA MİMARİ PROJE CİZİMİ VE MİMARİ PROJENİN ELEKTRİK TESİSATI CIZMEYE HAZIR HALE GETIRE BILMEK ICIN TEMIZLENMESI KONUSU İŞLENİLECEKTİR. 3.BOLUMDE MEVCUT BİNALAR İÇİN ELEKTRİK TESİSAT PROJESİ NASIL CİZİLDİGİ. 4. BOLUMDE İSE RUHSAT PROJESİ NASIL CİZİLDİĞİ ANLATILACAKTIR. PROJE CIZIM EGITIMI BITTIKTEN SONRA NASIL SMM OFOSI ACILIR VE BU SEKTORDE HANGI IŞ DALLARI YAPILIR VE PROJE ABONELIK DOSYA TAKIBI NASIL YAPILIR  KONULARINI İŞLİYECEĞİZ.",
      "target_audience": [
        "ELEKTRİK",
        "ELEKTRONİK",
        "MÜHENDİS",
        "AUTOCAD",
        "ELEKTRİK PROJE",
        "SMM",
        "ELEKTRİK ELEKTRONİK MÜHENDİSLERİ",
        "TEKNİSYENLER",
        "BİNA PROJE",
        "AUTOCAD ELEKTRİK",
        "OTOMASYON",
        "AutoCAD Electrical",
        "ELEKTRİK PROJE EĞİTİMİ"
      ]
    },
    {
      "title": "Solana Developer Interview Prep - 200 Practice Questions",
      "url": "https://www.udemy.com/course/solana-interview/",
      "bio": "Land Your Solana Job with 200 Practice Questions",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Get ready to ace your Solana developer interview with this comprehensive prep course featuring 200 practice questions designed to sharpen your skills and boost your confidence.\nSolana is one of the fastest and most scalable blockchains in the world, attracting developers and companies across DeFi, NFTs, and Web3 applications. With the rising demand for Solana developers, having the right knowledge and interview preparation is the key to standing out.\nThis course covers the essential topics you’ll need to master, from Solana’s Proof of History consensus to Rust and Anchor smart contract development, SPL tokens, and advanced security practices. Each question is designed to reflect real-world Solana interview patterns, helping you practice, review, and solidify your understanding of Solana’s ecosystem.\nBy working through 200 Solana interview questions, you will:\nStrengthen your knowledge of Solana architecture, accounts, and transactions.\nGain confidence in answering both theory and practical Solana development questions.\nBuild expertise in Rust, Anchor, and Solana CLI tools used in the ecosystem.\nLearn how Solana compares to Ethereum and why companies choose Solana for scalability.\nPrepare for technical questions around SPL tokens, wallets, explorers, and validator nodes.\nDevelop insights into Solana’s security best practices and performance optimizations.\nWhether your goal is to land a Solana developer role, prepare for a Web3 job interview, or simply deepen your understanding of Solana, this course provides the structured practice you need to succeed.\nStart today and practice your way to becoming a confident Solana developer ready for any interview challenge.",
      "target_audience": [
        "Developers preparing for a Solana developer interview and seeking structured practice.",
        "Rust or Web3 developers who want to transition into Solana blockchain development."
      ]
    },
    {
      "title": "Mastering Python: From Basics to Advanced Concepts",
      "url": "https://www.udemy.com/course/mastering-python-from-basics-to-advanced-concepts/",
      "bio": "Learn Python essentials, advanced concepts, libraries, and data structures with hands-on exercises",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Unlock the power of Python with our comprehensive course designed to take you from beginner to advanced levels. Whether you're just starting your programming journey or looking to sharpen your skills, this course covers everything you need to know.\nCourse Highlights:\nPython Basics: Understand the fundamentals of Python, including variables, data types, functions, and control flow. Dive deep into object-oriented programming with classes, methods, and more.\nAdvanced Python Concepts: Explore complex topics such as decorators, generators, and lambda functions. Learn about algorithmic paradigms like quick sort and gain insights into Python's built-in functions and runtime complexities.\nPython Libraries and Functions: Get hands-on experience with essential Python libraries and functions, including sys, map(), and defaultdict. Understand how to write efficient and clean Python code following PEP 8 guidelines.\nData Structures: Master data structures like stacks, queues, and binary search trees. Learn to implement and manipulate these structures in Python to solve complex problems efficiently.\nInterview Preparation: Prepare for technical interviews with real-world Python questions. From basic syntax to advanced problem-solving, this course provides a solid foundation for acing your next coding interview.\nBy the end of this course, you'll have a strong grasp of Python, enabling you to tackle any project or interview with confidence. Join now and start your journey to becoming a Python expert!",
      "target_audience": [
        "Beginners who want to learn Python from scratch and build a solid foundation in programming.",
        "Intermediate developers looking to deepen their understanding of Python’s advanced concepts and libraries.",
        "Students and professionals preparing for technical interviews and wanting to enhance their problem-solving skills in Python.",
        "Anyone interested in mastering Python to pursue a career in software development, data science, or automation."
      ]
    },
    {
      "title": "Generative Art on Blockchains - Free",
      "url": "https://www.udemy.com/course/free-art-blockchain/",
      "bio": "Become A Generative Artist Who Publishes Their Art on Blockchains With One Course. Master P5js, Solidity, & More!",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "You Need A Computer With Linux, MacOS Or Windows.",
        "A Basic Understanding Of Web-Technologies.",
        "Knowledge Of A Programming Language Is Beneficial (Integers, Booleans, Strings, Etc.) Though Not Required."
      ],
      "description": "Welcome to the Generative Art on Blockchains Course. The only course you'll need to become a Generative Artist on any blockchain.\n\nAt 2+ hours, this Generative Art on Blockchains Course is a comprehensive course.\n\nEven if you have zero or limited programming experience, this course will take you from beginner to Generative Artist.\n\n\nHere's why:\n\nThe course has been updated for 2021, so you'll be learning with all of the latest tools.\n\nThe course doesn't cut corners. You'll learn by building real-world projects in our practical labs.\n\nYou'll save yourself over $10,000. Yet, get access to the same materials as in-person bootcamps.\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a Generative Artist on the Blockchain.\n\nBy the end of this course, you will be fluently creating generative art, and you'll be so good that you can get a job or use your skills professionally.\n\nYou'll also build a portfolio of projects that you can show off to any potential employer.\n\nWho this course is for:\nIndividuals Who Want To Benefit From One Of The Most In-Demand Skills.\nTechnologists Who Want To Use Code to Create Art.\nFreelancers Who Want To Earn Money Creating Generative Art.\nArtists Who Want To Build Ethereum Blockchain NFTs Using Solidity.\nProfessionals Who Want To Add 'Generative Artist' To Their Resume.",
      "target_audience": [
        "Beginning Blockchain Developers.",
        "Artists interested in NFTs."
      ]
    },
    {
      "title": "Introducción a la Ingeniería del Software",
      "url": "https://www.udemy.com/course/introduccion-a-la-ingenieria-del-software/",
      "bio": "Conoce los pasos a seguir para construir aplicaciones siguiendo unas pautas adecuadas",
      "objectives": [
        "Entender el concepto de Ingeniería del Software",
        "Conocer las diferentes etapas por las que pasa cualquier producto software en su desarrollo",
        "Conocer las principales características de las principales metodologías de desarrollo software actuales",
        "Enfocar el desarrollo de un producto software desde el principio, estableciendo unas etapas adecuadas de análisis y diseño",
        "Hacer uso de diferentes herramientas que ayuden a analizar, diseñar y desarrollar un producto software"
      ],
      "course_content": {
        "1. Introducción. Lenguajes y programas": [
          "1.01. Introducción al curso",
          "IMPORTANTE: sobre este curso",
          "1.02. Concepto de software",
          "1.03. Lenguajes y tipos",
          "1.04. Traductores de lenguajes",
          "1.05. Ejemplo de lenguaje compilado. C/C++",
          "1.06. Ejemplo de lenguaje basado en máquina virtual. Java",
          "1.07. Ejemplo de lenguaje interpretado. Python"
        ],
        "2. Metodologías de desarrollo software": [
          "2.01. Ciclos de vida del software",
          "2.02. Metodologías. Concepto y tipos",
          "2.03. Metodologías tradicionales",
          "2.04. Metodologías ágiles. Características",
          "2.05. Metodologías ágiles. Scrum",
          "2.06. Metodologías ágiles. Kanban"
        ],
        "3. Especificación de requisitos": [
          "3.01. Inicio de un proyecto software",
          "3.02. Técnicas de recogida de información",
          "3.03. Tipos de requisitos"
        ],
        "4. Análisis de la aplicación": [
          "4.01. Introducción al análisis y a UML",
          "4.02. Diagramas de casos de uso",
          "4.03. Diagramas de actividad",
          "4.04. Diagramas de clases"
        ],
        "5. Herramientas": [
          "5.01. Tipos de herramientas",
          "5.02. Herramientas de gestión de proyectos y requisitos",
          "5.03a. Herramientas de análisis y diseño",
          "5.03b. Herramientas de análisis y diseño. Visual Paradigm Online",
          "5.04a. Herramientas de implementación. Características de los IDEs",
          "5.04b. Herramientas de implementación. Geany",
          "5.04c. Herramientas de implementación. Visual Studio Code"
        ]
      },
      "requirements": [
        "En el curso aprenderemos los primeros pasos que hay que dar para enfocar correctamente el desarrollo de una aplicación, así como las herramientas que podemos utilizar para ello. Sería conveniente tener algunas nociones de programación en cualquier lenguaje orientado a objetos (Java, C#, etc), a la hora de ver mejor cómo trasladar los resultados de la etapa de análisis al código que finalmente conformará la aplicación."
      ],
      "description": "Este curso pretende dar una visión introductoria de qué es la Ingeniería del Software, y cómo se aplica al desarrollo de aplicaciones, a la hora de definir los pasos a seguir en dicho desarrollo, y las herramientas que se pueden utilizar, para garantizar un producto de calidad al final del proceso.",
      "target_audience": [
        "Estudiantes de informática, tanto a nivel universitario como de ciclos formativos o a nivel particular, que estén interesados en conocer o aclarar dudas sobre qué pasos seguir para desarrollar una aplicación, y qué técnicas se pueden emplear actualmente."
      ]
    },
    {
      "title": "Curso Eletrônica Digital Para Leigos [100% Iniciante]",
      "url": "https://www.udemy.com/course/sistemas-digitais-i/",
      "bio": "Maker FlipFlop Mecatrônica Circuit Matemática Binária Automação TI Básica Arduíno Robótica Elétrica Completo Electronics",
      "objectives": [
        "Aprenderá conceitos de Eletrônica Digital, tais como: circuitos sequênciais circuitos combinacionais e as operações lógicas.",
        "Aprenderá os conceitos da eletrônica e eletricidade Básica, tais como: corrente tensão e resistência;",
        "Resistores, capacitores, lei de ohm, circuitos regulador de tensão e temporizadores RC.",
        "Aprenderá a desenvolver pequenos projetos de automação do zero unindo a eletrônica digital e a eletrônica básica.",
        "A simular em software online, projetos e circuitos eletrônicos."
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento de eletricidade básica: corrente, tensão e resistência (conceitos que serão revisados)",
        "Computador com acesso à internet de boa qualidade.",
        "Nenhum software pago é necessário, todos os laboratórios virtuais são online e grátis."
      ],
      "description": "Bem vindo ao curso de Eletrônica Digital Para Leigos. Esse curso é focado no ensino da Eletrônica Digital que é uma das subdivisões mais incriveis da eletrônica moderna (Eletrônica Analógica, Eletrônica Digital, Eletrônica de Potência). E a mais presente nos aparelhos eletrônicos atuais.\nApesar de o nome parecer muito futurístico, a eletrônica Digital é muito prática e divertida sendo a ramificação mais simples e cativante de se aprender na eletrônica.\nA Eletrônica Digital é muito indicado para o iniciante dar os seus primeiros passo na eletrônica pois é uma das área mais simples por ser constituida apenas de dois estados ou nivéis de tensão sendo um associado ao \"zero\" e outro ao \"um\". Essa é a eletrônica mais prática de todas pois com conceitos simples você já consegue montar seus primeiros projetos de eletrônica e o mais interessante é que não precisa de muita teoria apenas um pensamento lógico, é bem semelhante a programar arduino porém mais simples e sem linguagens de progrmação, na verdade a eletrônica digital é a antecessora dos microcontroladores arduino, PIC e etc.\nAtualmente, praticamente todos os dispositivos são digitais isso graças a eletrônca digital!\nEsse curso é especifico para iniciantes em eletrônica. Nele teremos uma abordagem bem simplificada dos fundamentos da eletrônica Básica, somente o essecial para podermos adentrar na eletrônica digital, esses são conceitos simples sobre tensão, corrente, potência e alguns componentes como led, resistor e capacitor, conceitos necessários para desenvolver a habilidade de projetar seus primeiros circuitos digitais. Ou seja, você não precisa ter nenhum conhecimento de eletrônica para ser bem sucedido nesse curso, tudo que você vai precisar saber para dominar a eletrônica digital já está incluso nas aulas mesmo que seja um completo leigo na área. Isso é tão verdadeiro que você terá um garantia de 30 dias para comprovar o que estou te prometendo.\nDentre os vários conteúdos estão incluso: introdução aos fundamentos da eletrônica básica, portas lógicas, operações aritméticas binárias, circuitos combinacionais, projetos práticos de aplicação dos mais variados circuitos digitais, contempla também muitas simulações em laboratórios virtuais de vários projetos exemplo para você aprender os conceitos de criação de projetos.\nO curso é muito indicado para quem deseja ou já utiliza o arduíno pois, a eletrônica digital é o principio de funcionamento do arduíno, assim, você vai conseguir dominar muito melhor os teus projetos com microcontroladores .\nChegou a sua vez de aprender eletrônica digital e está capacitado a desenvolver seus projetos! Nós encontramos nas aulas.\n\"Tempo de preparação não é tempo perdido\" Rhema Brasil",
      "target_audience": [
        "Iniciando em eletrônica que possuem pouco ou nenhum conhecimento",
        "Hobistas ou entusiastas da Eletrônica",
        "Pessoas que estudam ou desenvolve projetos com Arduíno",
        "Pessoas que desejam criar projetos para automatizar sua casa",
        "Técnicos da área de eletrônica iniciantes do zero em eletrônica Digital."
      ]
    },
    {
      "title": "C# .NET Core Clean Architecture & CQRS Proje Altyapı Kursu 3",
      "url": "https://www.udemy.com/course/c-net-core-clean-architecture-cqrs-proje-altyap-kursu-3/",
      "bio": "C# .NET ile kurumsal altyapı geliştiriyoruz. CQRS, Clean Architecture, DDD, Pipeline, code generation ve çok fazlası.",
      "objectives": [
        "Set 1 - DDD odaklı Clean Architecture İmplementasyonu Öğreneceksiniz",
        "Set 1 - CQRS (Command Query Responsibility Segregeation) Öğreneceksiniz",
        "Set 1 - SOLID ve Clean Code Teknikleri Öğreneceksiniz",
        "Set 1 - Ultra Gelişmiş Senkron ve Asenkron Repository İmplementasyonu Öğreneceksiniz",
        "Set 1 - Dynamic Search İmplementasyonu Öğreneceksiniz",
        "Set 1 - Response Request Pattern odaklı mapping (Automapper) Öğreneceksiniz",
        "Set 1 - Gelişmiş ve best practice odaklı Entity Framework İmplementasyonu Öğreneceksiniz",
        "Set 1 - API İmplementasyonu Öğreneceksiniz",
        "Set 1 - Extension yazım teknikleri Öğreneceksiniz",
        "Set 1 - ve bir çok alt konu Öğreneceksiniz",
        "Set 2 - Çoklu ve ilişkili domain modelleme Öğreneceksiniz",
        "Set 2 - Gelişmiş Mapping İmplementasyonu Öğreneceksiniz",
        "Set 2 - Migration İmplementasyonu Öğreneceksiniz",
        "Set 2 - İş Kuralı ve Clean Code Yazım Teknikleri Öğreneceksiniz",
        "Set 2 - Global Hata Yönetimi Öğreneceksiniz",
        "Set 2 - Pipeline Yazım Teknikleri Öğreneceksiniz",
        "Set 2 - Validation Pipeline ile Fluent Validation İmplementasyonu Öğreneceksiniz",
        "Set 2 - Transaction Pipeline İle Transactional Operation İmplementasyonu Öğreneceksiniz",
        "Set 3 - Caching Pipeline İmplementasyonu Öğreneceksiniz",
        "Set 3 - InMemory Cache İmplementasyonu Öğreneceksiniz",
        "Set 3 - Redis Cache İmplementasyonu Öğreneceksiniz",
        "Set 3 - Logging Pipeline İmplementasyonu Öğreneceksiniz",
        "Set 3 - Serilog İmplementasyonu Öğreneceksiniz",
        "Set 4 - Security ve JWT İmplementasyonu Öğreneceksiniz",
        "Set 4 - Mailing İmplementasyonu Öğreneceksiniz",
        "Set 5 - Test odaklı altyapı geliştirme Öğreneceksiniz"
      ],
      "course_content": {},
      "requirements": [
        "İleri Seviye C#"
      ],
      "description": "DİKKAT: Bu kurs ileri seviyedir. Kurs içeriğine hakimiyet sağladığınızda sektörde en ön sıralarda olursunuz.\nFAKAT!\nAçıklamaları okuyup örnek içerikleri izleyerek kursun sizin için uygun olup olmadığına karar vermenizi öneririm. Ek olarak 1 ay koşulsuz iade hakkından yararlanarak kursu deneyip iade edebilirsiniz. Kurs çoklu seriden oluştuğu için emek vererek kazandığınız paranızın boşa gitmesi en son isteyeceğim şeydir.\nYazılım geliştirme çok ilginç bir ivmeden geçiyor. Pandemiyle beraber zaten popüler olan meslek bir anda dünyanın en popüler mesleği haline geldi. Bu süreçte hiç tecrübesi olmayan hatta yazılım konusunda çok başlarda olan kişiler bile geliştirilmek üzere işe alındı. Bu süreçte sektörde ciddi bir yazılım personeli istihdamı oluştu.\nDoygunluğun artması ve pandeminin sonlanması sektörü yeniden eski günlere götürmeye başladı. Yine dünyanın en popüler mesleği olan yazılım geliştirme yavaş yavaş yeniden daha çok kalifiye personele ihtiyaç duyan hale dönüşüyor.\nTam da bu ihtiyaçtan yola çıkarak ultra advanced bir içerik hazırladım.\nKlasik yaklaşımlar yerine ufkunuzu açacak ve sektörde hali hazırda çalışanların da öğrenmek istediği içerikleri bu setlerde topladım.\n1. Sette öğrenecekleriniz:\nDDD odaklı Clean Architecture İmplementasyonu\nCQRS (Command Query Responsibility Segregeation)\nSOLID ve Clean Code Teknikleri\nUltra Gelişmiş Senkron ve Asenkron Repository İmplementasyonu\nDynamic Search İmplementasyonu\nResponse Request Pattern odaklı mapping (Automapper)\nGelişmiş ve best practice odaklı Entity Framework İmplementasyonu\nAPI implementasyonu\nExtension yazım teknikleri\nve bir çok alt konu\n2. Sette Öğrenecekleriniz\nÇoklu ve ilişkili domain modelleme\nGelişmiş Mapping İmplementasyonu\nMigration İmplementasyonu\nİş Kuralı ve Clean Code Yazım Teknikleri\nGlobal Hata Yönetimi\nPipeline Yazım Teknikleri\nValidation Pipeline ile Fluent Validation İmplementasyonu\nTransaction Pipeline İle Transactional Operation İmplementasyonu\n3. Sette Öğrenecekleriniz\nCaching Pipeline İmplementasyonu\nInMemory Cache İmplementasyonu\nRedis Cache İmplementasyonu\nLogging Pipeline İmplementasyonu\nSerilog İmplementasyonu\n4. Sette Öğrenecekleriniz\nSecurity ve JWT İmplementasyonu\nMailing İmplementasyonu\n5. Sette Öğrenecekleriniz\nTest odaklı altyapı geliştirme\nMoq İmplementasyonu",
      "target_audience": [
        "Sektörde ön sıralarda olmak isteyenler"
      ]
    },
    {
      "title": "Mastering Spring Boot OAuth2 for Google Login",
      "url": "https://www.udemy.com/course/master-spring-boot-oauth2-with-google-login-react-frontend/",
      "bio": "A step-by-step guide to integrating Google's secure OAuth2 login into your Spring Boot applications",
      "objectives": [
        "Implement Google login and registration using OAuth2 in a Spring Boot application",
        "Set up secure backend authentication using Spring Security and MySQL",
        "Build and integrate a React frontend with a Spring Boot backend for seamless user experience",
        "Setup google service for auth2"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Entities, Repositories, Controller, Security": [
          "Create Project",
          "Usern Entity & Repository",
          "User Service",
          "Controller",
          "Security"
        ],
        "Google Service Setup and Test": [
          "Google Service Setup",
          "Test"
        ],
        "Frontend": [
          "Frontend Impl"
        ]
      },
      "requirements": [
        "Basic Knowledge of Spring boot is required",
        "Have a google email account"
      ],
      "description": "Are you ready to master secure login and registration using OAuth2 in Spring Boot, and take your skills further by integrating it with a React frontend? This course will guide you step-by-step through building a robust and secure authentication system with OAuth2, allowing users to log in with their Google accounts.\nIn this course, you will:\nLearn how to set up Spring Boot and implement OAuth2 for authentication.\nConfigure secure login and registration workflows with Google.\nSet up MySQL to store user information securely.\nIntegrate a React frontend as a extra to provide a smooth user experience.\nWhether you are a backend or full-stack developer, this course offers valuable insights into how OAuth2 works and how to apply it in real-world projects. The practical examples will help you build confidence in handling user authentication securely while seamlessly connecting your backend and frontend.\nBy the end of the course, you will have created a fully functional login and registration system with Google authentication, a secure backend with Spring Boot, mysql database, and a responsive frontend with React. Plus, you’ll gain the skills to apply these technologies to future projects.\nJoin today and build an essential skill set for modern web development!",
      "target_audience": [
        "Spring Boot developers"
      ]
    },
    {
      "title": "AI大模型应用开发：从小白到高手（LLM Application Development with LangChain）",
      "url": "https://www.udemy.com/course/llm-app-dev/",
      "bio": "紧跟前沿的AI应用开发课，动画满满、直观易懂，5个项目手把手实战，轻松掌握全流程",
      "objectives": [
        "AI基础理论科普",
        "Python基础入门全覆盖",
        "OpenAI API的计费方式与常用参数解析",
        "OpenAI API用法示例",
        "提示词工程最佳实践",
        "LangChain Model I/O | AI模型与输入/输出",
        "LangChain Memory | 给AI模型添加记忆",
        "LangChain RAG | 给AI模型读文件的能力",
        "LangChain Agent | 给AI模型用工具的能力",
        "OpenAI Assistant API的用法",
        "Streamlit前端框架入门",
        "AI应用部署"
      ],
      "course_content": {
        "介绍": [
          "先导片 | AI大模型 (LLM) 应用开发，小白也轻松掌握"
        ],
        "【选修】AI大模型科普": [
          "AI科普 | 啥是“AIGC”及一系列AI技术词",
          "AI科普 | 啥是大语言模型（LLM）",
          "AI科普 | AI聊天助手背后的黑科技Transformer",
          "AI科普 | 如何3步训练出一个AI聊天助手"
        ],
        "【赠送预习】Python入门篇 | 非零基础可以跳过": [
          "在你开始编程之前 | 为什么安装Python和PyCharm",
          "Windows系统 | 安装Python和PyCharm",
          "macOS系统 | 安装Python和PyCharm",
          "PyCharm | 创建你的第一个项目",
          "Python print | 让程序给你打印“爸爸”",
          "Python print | 让程序给你打印一首诗",
          "Python变量 | 怎么让程序记住你对象的手机号？",
          "Python命名规则 | 哪些变量名算好名字？",
          "Python数学运算 | 用代码秒杀计算器",
          "Python注释 | 悄悄在代码里骂用户？",
          "Python数据类型 | 程序世界的物种们",
          "Python交互模式 | 读一行执行一行",
          "Python input | 写个用户问答互动程序",
          "Python条件语句 | 对象今天会生气吗",
          "Python嵌套/多条件判断 | 对象今天会生气吗 II",
          "Python逻辑运算 | 今年过节能收礼吗",
          "Python列表 | 创一个购物清单",
          "Python字典 | 创个秒查流行语的词典",
          "Python for循环 | 找出不正常的体温",
          "Python while循环 | 捕捉日落",
          "Python 格式化字符串 | 优雅群发春节短信",
          "Python函数（上） | 不做代码复读机",
          "Python函数（下） | 不做代码复读机",
          "Python引入模块 | 别人写的，拿来吧你",
          "Python面向对象编程 | 封装、继承、多态都是啥？",
          "Python创建类（上）| 没对象？实例化一个",
          "Python创建类（下）| 当上帝的时刻到了",
          "Python 类继承 | 老鼠的儿子会打洞",
          "Python文件路径 | 文件在哪里，代码咋知道",
          "Python文件操作 | 会读文件，程序便有了眼睛",
          "Python文件操作 | 会写文件，程序便有了记忆",
          "Python异常处理 | 程序炸之前，走一波预判",
          "Python测试（上） | 不存在不写bug的程序员",
          "Python测试（下） | 高效率把bug揪出来",
          "Python高阶和匿名函数 | 脱了马甲也要认识"
        ],
        "AI大模型应用开发准备": [
          "工具安装 | 做AI大模型应用开发，需要些啥？",
          "Jupyter Notebook使用 | 上手金刚钻",
          "Jupyter Notebook使用 | 更多上手金刚钻"
        ],
        "OpenAI大模型API基础": [
          "大模型API | 如何用代码与AI对话？模型API",
          "大模型API | 创建OpenAI API密钥，然后藏起来",
          "大模型API | 发送你对AI大模型的第一个请求",
          "大模型API | AI模型咋收费？必了解的token计数",
          "大模型API | 定制AI的回复？常用参数详解",
          "大模型API | 定制AI的回复？更多常用参数详解"
        ],
        "提示词工程": [
          "AI提示工程 | 什么构成了一个好的提示？",
          "AI提示工程 | 限定输出格式",
          "AI提示工程 | 零样本VS小样本",
          "AI提示工程 | 思维链与分步骤思考"
        ],
        "AI提示工程 | 思维链与分步骤思考": [
          "AI大模型API用法示例 | 文本总结：一建总结用户评价",
          "AI大模型API用法示例 | 文本撰写：秒生成小红书爆款文案",
          "AI大模型API用法示例 | 文本撰写：秒生成小红书爆款文案",
          "AI大模型API用法示例 | 文本翻译：全语种翻译器"
        ],
        "LangChain介绍": [
          "LangChain介绍 | 为什么我们需要LangChain？",
          "LangChain介绍 | 与Assistant API的对比",
          "LangChain基础 | 安装LangChain及了解核心模块"
        ],
        "LangChain Model I/O | AI模型与输入/输出": [
          "Model | 玩转Open AI聊天模型",
          "Prompt Template | 让模型的输入超级灵活",
          "Few Shot Templates | 高效往提示里塞示范",
          "Output Parser | 从模型输出里提取列表",
          "Output Parser | 从模型输出里提取JSON",
          "Chain | 串起提示模板-模型-输出解析器"
        ],
        "项目1：视频脚本一键生成器": [
          "视频脚本一键生成器 | 项目介绍",
          "视频脚本一键生成器 | 创建项目及安装依赖项",
          "视频脚本一键生成器 | 创建AI请求",
          "视频脚本一键生成器 | 创建网站页面"
        ]
      },
      "requirements": [
        "不要求任何编程基础",
        "不要求任何AI背景"
      ],
      "description": "关于讲师的信息？\n我毕业于加拿大排名第一的大学，计算机科学（Computer Science）科班出身，曾作为软件工程师就职于Amazon。\n\n\n为什么要学习AI大模型应用开发？\n自从生成式AI热度爆发后，这句话就被反复提及，“替代你的不是AI，而是会使用AI的人”。\n我们都开始迫于压力，着手了解这项对社会能产生重大影响的技术。\n但你有没有想过，在会使用AI的人之上是什么呢？\n那就是——“会打造AI的人”。\n学会打造AI，可以让你适应新时代人才需求，提升薪资和竞争力。也可以助你成为AI大模型领域程序员、产品经理等，不落后于时代。还能让你利用AIGC应用开发能力，实现副业变现。亦或是构建出无数人使用的AI产品，站在创业浪潮之巅。\n\n\nAI大模型相关知识是不是很深奥很难掌握？\n确实在几年前，要独立开发AI应用，我们首先要具备机器学习的相关知识，这意味着要苦读N年枯燥烧脑的数学及算法。\nAI模型的训练呢也是又烧钱又耗时间。我们不仅要确保硬件配置达标，还得花时间准备数据、训练模型和调整模型。\n但大模型的出现，让这一切都没有你想象中难了。\n由于它们在理解及生成自然语言上有了极大提升，即使你完全没有AI经验，现在也可以上手即用。\n除了不需要从头训练之外，我们和模型的交互方式也变得更加容易。传统机器学习要求我们用代码调整模型，但大模型允许我们直接用自然语言给它提要求，它就能理解并做出相应的回应。\n\n\n我的AI大模型课程有什么不一样？\n第一是，你能看到非常多我精心制作的动画演示，讲解中我也会利用很多贴近生活的例子，来帮助你理解。\n第二是精炼。我的课程视频每个长度在5～10分钟左右，直击重点的精炼，知识密集，杜绝长篇大论，帮你高效掌握技能。\n\n\n课程使用什么编程语言？\n课程使用的编程语言，是AI领域最热门的Python。\n但如果你不会Python也完全不必担心，因为预习篇就是为没有Python基础的同学准备的。\n\n\n课程有没有其它亮点？\n除了AI大模型的必备开发技能，课程配备的五个实战项目，每个都能产出一个独立AI应用。你不仅能亲自动手巩固知识，还能在项目基础上做更多定制化，实现副业变现。你也可以把项目放在简历上，提升求职吸睛度。有时话说再多，都不如直接拿出自己的成果。\n\n\n我们课上再见。",
      "target_audience": [
        "大学生：掌握当下前沿AI技术，顺应智能时代的人才需求",
        "求职者：简历增加热门AI相关项目，增加求职吸睛度",
        "转行者：转行AI大模型应用程序员/产品经理等，了解必备AI技能",
        "在职者：抓住企业的AI应用开发需求，增强竞争力和薪资待遇",
        "创业者：开发自己的AI产品，站在时代浪潮之巅"
      ]
    },
    {
      "title": "DevOps Interview IQ: Mastering Knowledge 300 Questions",
      "url": "https://www.udemy.com/course/devops-interview-iq-mastering-knowledge/",
      "bio": "A Comprehensive Set of 300 Questions for DevOps Interview Preperation or Knowledge Mastery",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Embark on an empowering journey with our 'DevOps Interview IQ: Mastering Knowledge Assessment' program! Immerse yourself in key DevOps domains, including Version Control Systems, Continuous Integration/Continuous Deployment (CI/CD), Containerization and Orchestration, Infrastructure as Code (IaC), Monitoring and Logging, and Security in DevOps.\n\n\nThis course consists of 6 multiple choice assessments assessing your knowledge of the following topics:\n\n\nWhat will students learn in your course?\nAssess Git Mastery:\nEvaluate proficiency in essential Git commands.\nAssess knowledge of branching and merging strategies.\nIdentify skills in handling conflicts and resolving issues.\nEvaluate CI/CD Competence:\nGauge familiarity with Jenkins, Travis CI, and CI/CD tools.\nAssess the ability to configure CI/CD pipelines.\nEvaluate understanding of deployment strategies.\nTest Containerization and Orchestration Skills:\nAssess knowledge of Docker fundamentals.\nEvaluate understanding of Kubernetes orchestration.\nIdentify skills in container networking and security.\nMeasure IaC Expertise:\nEvaluate comprehension of IaC principles and benefits.\nAssess familiarity with various IaC tools (Terraform, Ansible, Chef, Puppet, etc.).\nIdentify proficiency in writing, managing, and automating infrastructure code.\nTest Monitoring and Logging Proficiency:\nEvaluate knowledge of monitoring tools like Prometheus and Nagios.\nAssess skills in log management and analysis.\nMeasure understanding of incident response and alerting.\nAssess DevSecOps Competency:\nEvaluate comprehension of DevSecOps principles.\nAssess familiarity with security best practices in CI/CD pipelines.\nIdentify proficiency in vulnerability scanning and mitigation.\n\n\nWho is this course for?\nThis course is designed for:\nSoftware developers aiming to assess and enhance their DevOps skills.\nIT professionals interested in evaluating their proficiency in DevOps tools and practices.\nIndividuals preparing for DevOps-focused assessments or interviews.",
      "target_audience": [
        "Individuals preparing for DevOps-focused assessments or interviews"
      ]
    },
    {
      "title": "Full python Masterclass, From a beginner to employed",
      "url": "https://www.udemy.com/course/full-python-masterclass-from-a-beginner-to-employed/",
      "bio": "Python, Software engineering, Entry-level roles",
      "objectives": [
        "Become a python master",
        "Be able to start applying for internships and entry level roles",
        "Understand the basics of large scale programming concepts like OOP",
        "Be able to pickup new programming languages easily",
        "Understand basic database concepts",
        "Have a foundation into Data science & Machine learning",
        "Be able to build your own portfolio ready projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to stay motivated",
          "How to get Support"
        ],
        "Software Setup": [
          "Setting up pycharm on windows",
          "Setting up Pycharm on Mac or Linux",
          "Setting Up VSCode"
        ],
        "Python Basics": [
          "Introduction",
          "The print Statement",
          "Variables",
          "Variables 2",
          "The input statement"
        ],
        "Control flow": [
          "The if Statement",
          "Elif Statement",
          "Else statement",
          "Nested Ifs"
        ],
        "Loops": [
          "While loops",
          "Break and continue statements",
          "The for loop",
          "Range based For loop",
          "Nested loops"
        ],
        "Data structures in python": [
          "Intoduction to strings",
          "String Slicing",
          "Modifying Strings",
          "String Concatenation",
          "All string Methods Cheatsheet",
          "Introduction to lists",
          "Inserting Items",
          "Removing Elements",
          "List Comprehension",
          "All List Methods Cheatsheet",
          "Tuples",
          "Unpacking Tuples",
          "All Tuple Methods Cheatsheet",
          "Dictionaries",
          "Modifying Dictionaries",
          "Loops with dictionaries",
          "Nested Dictionaries",
          "Dictionary methods cheatsheet"
        ],
        "Function": [
          "Introduction to functions",
          "Passing Arguements",
          "Arbitrary Arguements",
          "The return Statement",
          "Input and return Types",
          "Recursion"
        ],
        "Introduction to OOP": [
          "Intro to OOP",
          "Constructors",
          "Getters, Setters and str",
          "Using Functions",
          "del Keyword"
        ],
        "Inheritance": [
          "Intro to inheritance",
          "In depth inheritance"
        ],
        "THE COURSE IS NOT FINISHED YET (More sections will be added soon)": [
          "MORE SECTIONS COMING SOON"
        ]
      },
      "requirements": [
        "All you need is a laptop and an internet connection, the rest is up to me!"
      ],
      "description": "Course Description:\nAre you ready to unlock the power of Python and elevate your coding skills to new heights? Look no further! Welcome to the \"Python Masterclass - From Basics to Mastery\" on Udemy.\nThis comprehensive course is designed for beginners and seasoned developers alike, offering a step-by-step journey through the Python programming language. From laying a solid foundation with Python basics to diving deep into advanced concepts, this masterclass ensures that you gain a thorough understanding of Python's versatility and power.\nWhat You'll Learn:\nFundamentals of Python: Start from scratch and build a strong understanding of Python syntax, data types, and control structures.\nHands-On Coding Exercises: Apply your knowledge with hands-on coding exercises that reinforce key concepts and boost your problem-solving skills.\nReal-World Projects: Tackle real-world projects, allowing you to apply your Python skills in practical scenarios and build a professional portfolio.\nAdvanced Python Concepts: Explore advanced topics such as object-oriented programming (OOP), file handling, and exception handling to write efficient and robust code.\nOptimizing Code: Learn expert tips and tricks to optimize your Python code for better performance and maintainability.\nWhy Take This Course:\nPractical Learning: Gain practical, real-world experience through a series of engaging coding projects.\nExpert Guidance: Benefit from expert instruction and clear explanations from seasoned Python developers.\nCommunity Support: Join a vibrant community of learners, fostering collaboration and knowledge sharing.\nCareer Advancement: Whether you're a beginner or a professional, mastering Python will open doors to diverse career opportunities in software development, data science, and more.\nWho Should Enroll:\nBeginners eager to learn Python from the ground up.\nDevelopers looking to strengthen their Python skills and stay ahead in their careers.\nAnyone interested in entering the dynamic world of programming with Python.\nUpon Completion: Upon completing this Python Masterclass, you'll not only have a strong command of Python but also a portfolio of projects that showcase your skills. Congratulations on taking the first step towards Python mastery!\nEnroll now and let's embark on this exciting Python journey together!",
      "target_audience": [
        "Beginners who have not coded before",
        "Developers / students that want to learn python in detail",
        "Anyone who is curious about the world of data science and machine learning",
        "Anyone who wants to become a software developer!"
      ]
    },
    {
      "title": "Model-Based Design with Simulink: Build Embedded Software",
      "url": "https://www.udemy.com/course/model-based-software-for-embedded-systems-with-simulink/",
      "bio": "Learn automotive-grade model development, simulation, and code generation. Build Embedded Software for Real-World System",
      "objectives": [
        "Understand the fundamentals of Simulink and Stateflow for control system modeling",
        "Apply design rules for clean, maintainable, and verifiable models",
        "Configure and run code generation workflows using Simulink Coder and TargetLink",
        "Implement MIL/SIL/PIL testing and validation",
        "Use version control practices (Git/SVN) for Simulink model management",
        "Design models that are calibration-ready and production-compliant"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Matlab Simulink",
          "Code Generation",
          "Design Guidelines 1",
          "Design Guideline 2",
          "Design Guidelines 3",
          "Guidelines",
          "State Machines",
          "Testing",
          "Timing Loops",
          "Quality",
          "Workflows",
          "Conclusions",
          "Quiz"
        ]
      },
      "requirements": [
        "This course is designed to be accessible to both entry-level and experienced engineers.",
        "The following are recommended (but not mandatory) to get the most out of the training:",
        "A basic understanding of automotive systems or embedded control principles (e.g., engine, EV, braking, or powertrain concepts)",
        "Familiarity with engineering modeling or simulation tools is helpful but not required Exposure to MATLAB or Simulink is beneficial, but all essential concepts will be explained from first principles Access to a MATLAB/Simulink environment (Student, Trial, or Academic license is acceptable) A computer capable of running Simulink models (Windows or Linux, at least 8 GB RAM recommended)",
        "No prior experience in production code generation or embedded C is needed — this course will guide you through those processes step by step."
      ],
      "description": "This course offers a comprehensive, hands-on introduction to Model-Based Software Engineering (MBSE) for automotive systems, with a focus on MATLAB/Simulink and TargetLink. It is designed to help engineers and developers build production-quality, safety-compliant embedded software used in modern vehicles.\nYou will begin by learning how to construct clean, modular models in Simulink and Stateflow, apply design rules aligned with automotive best practices (e.g., MAAB), and use simulation-driven development workflows. The course walks you through key MBSE steps, including Model-in-the-Loop (MIL), Software-in-the-Loop (SIL), and Processor-in-the-Loop (PIL) testing. You’ll learn to configure your models for automatic C code generation, assess model performance, and verify functional behavior — critical skills in ISO 26262 and ASPICE-compliant environments.\nIn addition, you will explore how to manage signal interfaces, data types, version control (using Git/SVN), and calibration readiness, ensuring that your models are robust, reusable, and ready for deployment in real-world ECUs.\nWhether you're an automotive engineer, control systems developer, or software professional entering embedded development, this course will equip you with the tools and workflows used by OEMs and Tier 1 suppliers to develop reliable, verifiable, and maintainable software for powertrain, EV, ADAS, and chassis systems.\nAfter following the recommendations from this course, you will move with confidence into the exciting world of embedded software development, enhancing your salary expectations.",
      "target_audience": [
        "Control system engineers, Embedded software developers",
        "Automotive engineering graduates",
        "Professionals transitioning into MBSE or software-defined vehicles (SDV) Students and researchers working on automotive simulation and software"
      ]
    },
    {
      "title": "Grafische Apps in C# mit der WPF für Anfänger",
      "url": "https://www.udemy.com/course/grafische-anwendungen-in-csharp-mit-der-wpf/",
      "bio": "Der praxisnahe und schnelle Einstieg in die Programmierung grafischer Benutzeroberflächen mit der WPF",
      "objectives": [
        "Du kannst grafische Anwendungen, z.B. ein \"kleines Malprogramm\" programmieren.",
        "Du kannst eine Benutzeroberfläche erstellen.",
        "Du kannst alle wichtigen Bedienelemente einer Benutzeroberfläche in Deine Anwendungen einbinden."
      ],
      "course_content": {
        "Einleitung & Installation": [
          "Welche Voraussetzungen solltest Du mitbringen?",
          "Was versteht man unter einer GUI-Anwendung?",
          "Was ist die „Windows Presentation Foundation“ (WPF)?",
          "Fragen & Antworten - WPF"
        ],
        "Praktische Einführung - Erste WPF-App": [
          "Wie erstellst Du eine WPF-Anwendung als Konsolenprojekt?",
          "Wie erstellst Du eine WPF-Anwendung als „WPF-App“-Projekt?",
          "Wie kannst Du XAML-Code debuggen?",
          "Fragen & Antworten - Erste WPF-App",
          "WPF-App mit Rectangle-Element"
        ],
        "XAML": [
          "Was ist XAML („Zammel“)?",
          "Was sind selbstschließende Elemente?",
          "Was sind Markup-Erweiterungen?",
          "Was sind Ressourcen?",
          "Welche weiteren XAML-Elemente gibt es?",
          "Fragen & Antworten - XAML"
        ],
        "Basis-Klassen": [
          "Was sind Controls?",
          "Einfacher Bildbetrachter",
          "Wozu dient die Basisklasse FrameworkElement?",
          "Wozu dient die Basisklasse Control?",
          "Welche weiteren Eigenschaften gibt es bei der Application-Klasse?",
          "Welche weiteren Eigenschaften gibt es bei der Window-Klasse?",
          "Fragen & Antworten - Basis-Klassen",
          "Einfacher Texteditor",
          "Programmieren mit KI - Installation",
          "Programmieren mit KI - Erstes kleines Beispiel"
        ],
        "Layout-Controls": [
          "Was sind Layout-Controls?",
          "Wie funktioniert die Canvas-Klasse?",
          "Wie funktioniert die Grid- und DockPanel-Klasse?",
          "Fragen & Antworten - Layout-Controls"
        ],
        "Bedienelemente (Controls)": [
          "Welche Controls gibt es und was sind Shapes?",
          "Welche Arten von Buttons gibt es?",
          "Welche Arten von Schiebereglern gibt es?",
          "Wie können Bilder dargestellt werden?",
          "Welche Elemente für Text gibt es?",
          "…weiter geht es mit dem Malprogramm!",
          "Fragen & Antworten - Bedienelemente (Controls)",
          "Welche mehrelementigen Controls gibt es?",
          "Welche Eigenschaften besitzt die Basisklasse Selector?",
          "Welche Eigenschaften besitzen die Klassen ListBox und ComboBox?",
          "Mit welcher Klasse können Registerkarten erstellt werden?",
          "Welche Template-Klassen gibt es?",
          "Fragen & Antworten - Bedienelemente (Controls)",
          "Wie kann ich Menüs anlegen?",
          "Wie kann ich Werkzeugleisten anlegen?",
          "Wie erstelle ich eine Fortschrittsanzeige und eine Statuszeile?",
          "Welche weiteren Klassen zum Gruppieren gibt es?",
          "Welche weiteren Controls gibt es?",
          "Fragen & Antworten - Bedienelemente (Controls)"
        ],
        "Navigation": [
          "Wie navigiert man zu einem anderen Fenster?",
          "Wie ändert man den Inhalt innerhalb eines Fensters?",
          "Datei-Explorer für Bilder",
          "Fragen & Antworten - Navigation"
        ],
        "Data und Command Binding": [
          "Was ist Datenbindung?",
          "Wozu dient die Eigenschaft DataContext?",
          "Wozu dient die Eigenschaft ItemsSource?",
          "Wie spürt man Bindungsfehler auf?",
          "Wie können Bindungsdaten formatiert und automatisch weitergegeben werden?",
          "Kann man auch Methoden an Ereignisse binden?",
          "Kann man das Binding noch etwas vereinfachen?",
          "Was sind Design Pattern (Entwurfsmuster)?",
          "Fragen & Antworten - Data und Command Binding"
        ]
      },
      "requirements": [
        "Du solltest grundlegende Kenntnisse in der Programmiersprache C# besitzen.",
        "Du benötigst einen Computer mit Windows 10. Besitzt Du einen Computer mit macOS oder Linux, benötigst Du auf Deinem Computer eine virtuelle Maschine mit Windows.",
        "Visual Studio Community 2019 (kostenlos)"
      ],
      "description": "In diesem Kurs lernst Du, wie Du grafische Apps mit der \"Windows Presentation Foundation\" (WPF) programmierst. Die WPF ist eine .NET-Bibliothek von Microsoft zur Erstellung von Windows-Anwendungen. Dazu solltest Du bereits Erfahrungen mit der Programmiersprache C# und Konsolenanwendungen haben. In praktischen Übungen wirst Du schnell zunächst einfache grafische Apps programmieren und dabei die Grundlagen hierzu beherrschen. Am Ende des Kurses kann Du eigene grafische Apps unter Windows programmieren und einfache Best Practices in der professionellen Software-Entwicklung anwenden.\nDu beginnst mit den grundlegenden Klassen der \"Windows Presentation Foundation\" und lernst mit XAML eine einfache Möglichkeit kennen, eine grafische Benutzeroberfläche zu designen. XAML ist eine tolle Möglichkeit, die Oberfläche ohne C#-Code so zu gestalten, dass sie einfach änderbar ist. Du wirst bereits zu Beginn einfachen XAML-Code eingeben und testen und diesem mit C#-Code \"Leben einhauchen\". Darauf wirst Du alle wichtigen Bedien- und Layoutelemente in kleinen Beispielen einsetzen. Daneben setzt Du praktische Softwaretechniken wie Data und Command Binding sowie Navigation zwischen Fensterinhalten um. Dabei wirst Du Praxisbeispiele wie ein kleines Malprogramm oder einen Bildbetrachter programmieren.",
      "target_audience": [
        "Für C#-Programmierer mit Anfängerkenntnissen, die Anwendungen mit einer grafischen Benutzeroberfläche erstellen wollen."
      ]
    },
    {
      "title": "DevOps - Mão na massa!",
      "url": "https://www.udemy.com/course/devops-mao-na-massa/",
      "bio": "Aprenda Vagrant, Ansible, Git, Docker, Jenkins, Sonarqube, Prometheus, Grafana e Kubernetes 100% prática!",
      "objectives": [
        "Introdução a DevOps - Conceitos, cultura e ferramentas",
        "Vagrant - Ferramenta de provisionamento de máquinas virtuais",
        "Introdução ao Git - Gerenciando código fonte, boas práticas",
        "Ansible - Infraestrutura como código",
        "Docker - Criação, administração e boas práticas",
        "Jenkins - Como criar um pipeline completo CI/CD"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico de Linux",
        "Ser capaz de instalar e configurar software em plataformas - Linux / Windows"
      ],
      "description": "O curso DevOps - Mão na massa! foi criado para atender a demanda de profissionais de T.I que já estão no mercado e desejam uma visão geral do que é DevOps no dia a dia. Esse curso foi inspirado pela necessidade de aprender diversas ferramentas que muitas vezes estão conectadas, porém a literatura ou cursos dificilmente as conectam. O objetivo não é ser especialista em todas as ferramentas citadas, mas sim ter uma visão geral de como é trabalhar com DevOps e servir como um guia para os profissionais que desejam embarcar nessa área tão importante nos dias de hoje.\nA abordagem do curso, como o nome mesmo diz, é focar na prática o aprendizado, onde cada comando é executado passo a passo e visualizado pelo aluno de forma detalhada e simples.\nO curso aborda de forma macro os principais tópicos listados abaixo:\nUma pequena apresentação dos conceitos DevOps\nUso do Vagrant como plataforma de gerenciamento de máquinas virtuais para Lab.\nIntrodução ao git: comandos básicos de criação de repositórios, gerenciamento da árvore, exemplos práticos de manipulação de arquivos.\nAnsible: laboratório 100% prático com exemplos de como configurar o managed host, criar playbooks e efetuar o deploy de uma aplicação Java com banco de dados MySQL.\nDocker: Introdução de instalação e configuração do Docker, exemplos de comandos mais utilizados e por fim como criar uma imagem docker e exemplo de uso do Docker compose como ferramenta de orquestração de containers.\nJenkins: O coração do pipeline DevOps. Nesse tópico serão abordados temas de instalação e configuração do Jenkins, criação de pipelines que vão desde a compilação de códigos fonte, startup de containers, testes integrados, build de imagens Docker e como aplicar o git flow no pipline CI/CD.\nSonarqube: Melhore a segurança e a qualidade de código com Sonarqube. Entenda o funcionamento integrado do Sonar com o Jenkins, configurando um pipeline DevOps ainda mais completo.\nKubernetes: Aprenda como instalar e configurar o K3s, distribuição mais leve do Kubernetes utilizada em nosso laboratório. O k3s será utilizado na esteira DevOps o passo de CD (Deployment continuo) disponibilizando uma aplicação funcional em NodeJs e Redis.\nObservability: Entenda como instalar configurar o Prometheus, ferramenta de observability muito popular para monitoria de containers e ambientes baseados em microsserviços. Configure dashboards conectados ao Prometheus com o Grafana, ferramenta opensource muito utilizada para visualização de dados e gráficos.",
      "target_audience": [
        "Sysadmin",
        "Administradores de redes",
        "Analistas de Middleware",
        "Operadores de sistemas",
        "Desenvolvedores"
      ]
    },
    {
      "title": "Mastering CLI App development with Rust",
      "url": "https://www.udemy.com/course/mastering-cli-app-development-with-rust/",
      "bio": "Develop CLI applications with Clap",
      "objectives": [
        "Learning about different CLI app types and in general about CLI apps",
        "Implementing a Prompt based application to use it with an AI MML",
        "Using simple crates to draw nice CLI graphs and tables",
        "Implementing traditional CLI apps to fetch data and output in different formats"
      ],
      "course_content": {
        "About CLI apps": [
          "Introduction",
          "All about CLI Apps"
        ],
        "AI prompt App": [
          "Developing an AI prompt CLI App"
        ],
        "Weather forecasting CLI App": [
          "Weather forecast CLI App - Location search",
          "Weather forecast CLI App - Weather forecast",
          "Overview"
        ]
      },
      "requirements": [
        "Basic Rust development knowledge"
      ],
      "description": "Are you new to the world of command-line tools and curious about building practical, real-world applications in Rust? \"Mastering CLI App Development with Rust\" is the perfect place to start — even if you're a beginner in CLI app development.\nIn this course, you’ll learn how to build two fully functional command-line interface (CLI) applications using Rust: a prompt-based CLI app that interacts with a Large Language Model (LLM), and a weather forecast CLI app that fetches live weather data from an API. These projects are designed to be approachable, yet useful, helping you understand the structure and workflow of CLI apps from the ground up.\nYou’ll get hands-on experience working with standard input/output, argument parsing, making API requests, and integrating third-party crates to extend functionality. While this course doesn’t aim to teach Rust fundamentals in depth, it assumes basic familiarity with the language and focuses squarely on applying Rust to build real CLI tools.\nBy the end of the course, you'll have a solid foundation in building command-line apps and be equipped to create your own tools that can interact with services, process data, and make your terminal more powerful.\n\n\nSo I hope you will like this course and will get started on jumping into the CLI world!",
      "target_audience": [
        "People who wants to start with implementation of CLI applications in Rust"
      ]
    },
    {
      "title": "【初心者が短時間で学ぶ】性能問題を防止するためのシステム開発の基礎知識【非機能要件を考慮した設計】",
      "url": "https://www.udemy.com/course/system_performance/",
      "bio": "性能問題が発生してしまうと、どれだけ機能が完璧でもシステムを誰にも使われません。しかし、非機能、特に性能を考慮するには様々な知識が必要となります。そこで本コースでは、ポイントを絞り短時間で性能問題を防止するための基礎知識を学習します！",
      "objectives": [
        "システム開発における性能の重要性",
        "性能要件を満たすための要素",
        "業務量に応じたサーバスペック（CPU／メモリ）の見積りの考え方（サイジング）",
        "並列処理とサーバリソースの考え方",
        "性能問題が発生した際の原因分析手順",
        "性能問題が発生する際の原因のバリエーション例"
      ],
      "course_content": {
        "コース紹介": [
          "コース紹介",
          "コースの目的と講師紹介",
          "受講前の注意事項",
          "コースの全体像"
        ],
        "性能の重要性": [
          "性能の必要性",
          "性能要件の種類",
          "性能を満たすための要素_アプリの処理順序",
          "性能を満たすための要素_データ量と処理方式",
          "性能問題が発生するケース",
          "このセクションのまとめ"
        ],
        "性能を決める要素と考え方": [
          "ノードと性能の考え方",
          "性能指標",
          "性能とCPUとメモリの考え方①",
          "性能とCPUとメモリの考え方②",
          "サイジング_サーバの適切な見積り①",
          "サイジング_サーバの適切な見積り②",
          "サイジング_サーバの適切な見積り③",
          "並列実行と性能の考え方①",
          "並列実行と性能の考え方②",
          "このセクションのまとめ"
        ],
        "性能問題の原因分析手順": [
          "今回取り扱うユースケース",
          "性能問題の原因分析_処理順序の明確化",
          "性能問題の原因分析_原因の特定",
          "性能原因の一例",
          "性能原因の一例_DB(データベース)",
          "性能原因の一例_アプリケーションの設計",
          "性能原因の一例_その他",
          "まとめ"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "プログラミング経験は不要です",
        "プロジェクト経験は必須ではありません（経験があると理解が深まるため推奨）"
      ],
      "description": "＊このコースを作成した理由＊\n「機能が完璧でも画面が切り替わるのに５秒かかるシステム、使う人いますか？」\n多くのエンジニアは機能を作りこむことに夢中になりますが、\nどれだけ機能が完璧でもシステムの性能が低いと誰にも使われません。\nシステム開発では性能（非機能要件）の考慮が必須です！\n\n\nしかし、性能って何を考慮すればよいのか分からない方が多いと思います。\nそこで、本コースでは性能に関する基礎知識をポイントを絞って短時間で学習します。\n\n\n＊本コースで得られること＊\n・システム開発における性能の重要性\n・性能要件を満たすための要素\n・業務量に応じたサーバスペック（CPU／メモリ）の見積りの考え方（サイジング）\n・並列処理とサーバリソースの考え方\n・性能問題が発生した際の原因分析手順\n・性能問題が発生する際の原因のバリエーション例\n\n\n＊本コースの最大の目的＊\n性能問題を発生させないために必要な基礎知識を得てもらうことです。\n本コースでは、\n・性能問題はなぜ発生するのか？\n・発生しないようにするためにはどうするべきなのか？\nなどの性能に関する基礎知識（考え方、性能原因の特定手順など）を学びます。\n\n\n＊コース内容＊\nシステムにおける性能の重要性\n・なぜ性能が重要なのか？\n・性能を満たすためのシステムの要素\n-アプリケーションの設計\n-サーバスペック\n→何が性能に影響するのか？について学習します。\n・性能問題が発生するパターン\n要件定義で定めた非機能要件（処理性能）が過剰な場合など、性能問題が発生するパターンを解説します。\n\n\n性能を決める要素\n・CPUとメモリが性能にどのような影響があるのか？\n・サーバのサイジング（スペックの見積り）の考え方\n・並列実行における考慮ポイント、処理特性\n→並列実行を行えば必ずしも早くなるとは限りません。\nどのような処理特性があるのか？について解説します。\n\n\n性能問題が発生した際の原因分析手順\n・原因分析手順\n→性能問題が発生した際の原因分析手順を解説\n・性能問題の原因となる理由\n→代表例としてDB,アプリの設計などについて解説",
      "target_audience": [
        "性能問題で悩んでいる人",
        "性能を考慮したシステム開発を実施したい人",
        "システムにおける性能の考え方を知りたい人"
      ]
    },
    {
      "title": "Go Programlama Dili",
      "url": "https://www.udemy.com/course/go-programlama-dili/",
      "bio": "Türkiye'nin ilk ve en kapsamlı Go(Golang) programlama dili eğitimi...",
      "objectives": [
        "Golang programlama dilini öğreneceksiniz",
        "Golang ile web uygulaması geliştirmenin temellerini öğreneceksiniz",
        "Golang ile veritabanı programlamayı öğreneceksiniz"
      ],
      "course_content": {
        "Genel Bakış": [
          "Go Nedir?",
          "Go Programlama Diline Genel Bakış",
          "Neden Go?",
          "Go Programlama Dili Kullanıcıları",
          "Bazı Go Kütüphaneleri",
          "Anahtar Kelimeler",
          "Operatörler ve Sınırlayıcılar",
          "Türler",
          "Go Programlamaya Nasıl Başlarım?",
          "Nasıl Çalışmalıyız?",
          "Eğitim, Kurslar ve Kitaplar Üzerine...",
          "Bir Hata ile Karşılaştım!"
        ],
        "Çalışma Ortamı ve Hazırlıklar": [
          "Makale Önerisi : Go Programlama Dili Ortam Kurulumu",
          "Go Programlama Ortam Kurulumu",
          "Geliştirme Editörleri",
          "İlk Program",
          "Ortam Değişkenleri",
          "Go Araçları"
        ],
        "Go Programlamaya Giriş": [
          "İsimlendirme",
          "Değişkenler",
          "Operatörler",
          "Boş Tanımlayıcı : Alt Çizgi ( _ )",
          "Constant",
          "Tür Dönüşümü",
          "Konsol : Çıkış İşlemleri",
          "Konsol : Giriş İşlemleri",
          "Saat/Tarih İşlemleri"
        ],
        "Akış Kontrol": [
          "if",
          "switch",
          "break, continue, goto"
        ],
        "Döngüler": [
          "For",
          "For ile While döngü yöntemi uygulamak",
          "Range"
        ],
        "Hata Yönetimi": [
          "Hata Yönetimi"
        ],
        "Diziler": [
          "Dizi Nedir ve Nasıl Kullanılır?",
          "Dizi Oluşturmak"
        ],
        "Slice": [
          "Slice Nedir ve Nasıl Kullanılır?",
          "Slice Oluşturmak"
        ],
        "Maps": [
          "Map Nedir ve Nasıl Kullanılır?",
          "Map Oluşturmak"
        ],
        "Paket Yönetimi": [
          "Paket Kullanımı",
          "Paket Yapısı ve Yeni Paket Oluşturmak"
        ]
      },
      "requirements": [
        "Temel programlama bilgisi"
      ],
      "description": "*Türkiye'nin ilk Go Programlama Dili kursudur.\n\n\n\"Birisine bir şey öğretemezsiniz, ancak kendisinin onu keşfetmesine yardım edebilirsiniz.\" {Galileo Galilei}\n\nBu kurs Go(Golang) programlama dilini anlatmayı hedeflemektedir. 2015 yılından beri kullandığım Go programlama dili ile ilgili meraklılarının başlangıç oluşturabilmesi adına bu kursu oluşturdum. Kurs süresini çok uzatmadan, geliştirici adaylarına gerekli olan en temel dil ve çevre ortam bilgileri vermeyi hedeflemektedir.\nBu kurs ile birlikte açıklayacağımız konular aşağıdaki gibidir;\n- Go Programlama Dilini Detaylı İncelemek\n- Çalışma Ortamı ve Editörler\n- Değişkenler, Türler, Go Diline Özgü Söz Dizimi ve Kurallar\n- Akış Kontrol Mekanizmaları\n- Döngüler\n- Hata Yönetimi\n- Diziler\n- Slice (Dilimler)\n- Maps\n- Paket Yönetimi\n- Struct (Yapılar)\n- Interface (Arayüzler)\n- Fonksiyonlar\n- Metodlar\n- İşaretçiler\n- Nesne Yönelimli Programlama\n- Eş Zamanlılık (Concurrency)\n- Test\n- Reflection\n- Go Paketleri\n- Veri Formatı ve Dosya İşlemleri\n- Go ile Veritabanı Programlama\n- Go ile RESTful API ve Web Programlama (Örnek Uygulamalar)\n- Algoritmalar\n\n\nKURS GÜNCELLEME POLİTİKASI :\nYayınladığım kursların içeriklerini belirli aralıklar ile güncelliyorum. İzlediğim politika ise aşağıdaki gibidir :\nMevcut yazılım projelerim haricinde bilgi paylaşımı sağlamak için kurslar üretiyorum... Bunların sayısı bu yıl içerisinde ciddi oranda artacak... Zaman ve emek yönetimi açısından \"beğeni kadar güncelle\" yöntemini uyguluyorum. Yani eğer kurslara puanlama yaparsanız, bu kursların takipçilerinin daha fazla eğitim istediğini düşünerek belirli aralıklarla bu kursları güncelleyeceğim. Eğer beğeni sayısı az ya da yeteri kadar olmazsa, bu kurslar herhangi bir güncelleme olmadan mevcut içeriklerle yayınlanmaya devam edecektir. Eğer satın aldığınız kursun güncellenerek size daha fazla değer katmasını isterseniz, bu isteğinizi bana ileteceğiniz en doğru yol puanlama sistemidir.",
      "target_audience": [
        "Yazılım geliştirici olmak isteyen herkes",
        "Golang programlama dilini öğrenmek isteyen herkes",
        "Cross-platform(Linux, OSx, Windows vb.) bir dil öğrenmek isteyen herkes",
        "Güçlü, hızlı ve yüksek performanslı bir programlama dili öğrenmek isteyen herkes",
        "Dünya genelinde özellikle büyük girişimler tarafından kullanılan Golang dilini öğrenmek isteyen herkes",
        "Açık kaynaklı(OpenSource) bir programlama diline geçmek isteyen yazılım geliştiricileri"
      ]
    },
    {
      "title": "Introduction to Fullstack and DevOps Engineering",
      "url": "https://www.udemy.com/course/intro-fullstack-devops/",
      "bio": "Introduction to DevOps, Web Application Concepts, and Amazon Web Services",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic understanding of Web Applications",
        "Access to an Ubuntu VM",
        "(Optional) Access to an AWS account"
      ],
      "description": "Many individuals, especially fresh graduates and junior engineers, are unsure how to start a career in Fullstack and DevOps Engineering.\nThis course is composed of two modules:\nWeb Applications.\nInfrastructure and Application Deployment.\nEach module comprises several lectures made of a theoretical part, in which certain concepts are explained, and a practical part, consisting of exercises and demos, to apply the knowledge learned, and to make sense of the information acquired. Amazon Web Services will be used in the demos, which will give you a great overview of cloud computing in general and AWS in particular. Finally, there will be a section that contains quizzes and a course project, to test everything you have learned.\nUpon completing this course, you will have a basic understanding of:\n- Web Applications Concepts: What they are, why we need them, and how they are developed and deployed.\n- Containers and Docker: The ability to containerize applications and perform basic deployments of containers.\n- Cloud Computing and Amazon Web Services: Creation of networking and compute resources.\n- Basic DevOps Concepts: Networking and compute requirements, application deployment, application containerization.\nIn summary, this course aims to teach you the basic information needed to kickstart your career in Fullstack or DevOps. What differentiates this course is that it focuses a lot on understanding concepts, ideas, and thought process, which will allow you to further expand this knowledge on your own, or hopefully in more advanced courses.",
      "target_audience": [
        "Computer Science and Engineering fresh graduates",
        "Junior and mid-level software Engineers and System Administrators",
        "Anyone looking to kickstart a career as a Fullstack or DevOps Engineer",
        "Companies and Technical Leads aiming to Apply DevOps"
      ]
    },
    {
      "title": "Docker Interview Questions Preparation Course",
      "url": "https://www.udemy.com/course/docker-interview-questions/",
      "bio": "Learn Top 50 Docker Interview Questions. Save time in Interview preparation.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Software Development or Operations Knowledge",
        "Familiar with Software concepts"
      ],
      "description": "Docker is one of the fastest growing software in technology world. Till now 4 billion Docker containers have been used. This course is designed to help you achieve your goals in Docker field. Engineers with Docker knowledge may get more salary than others with similar qualifications without Docker knowledge.\nIn this course, you will learn how to handle interview questions on Docker technology in Software Design and Development. I will explain you the important concepts of Docker and related areas.\nYou will also learn the benefits of Docker in this course.\nWhat is the biggest benefit of this course to me?\nFinally, the biggest benefit of this course is that you will be able to demand higher salary in your next job interview.\nIt is good to learn Docker for theoretical benefits. But if you do not know how to handle interview questions on Docker, you can not convert your Docker knowledge into higher salary.\nWhat are the topics covered in this course?\nWe cover a wide range of topics in this course. We have questions on Docker best practices, Security, DockerHub, DockerCompose etc.\nHow will this course help me?\nBy attending this course, you do not have to spend time searching the Internet for Docker interview questions. We have already compiled the list of the most popular and the latest Docker Interview questions.\nAre there answers in this course?\nYes, in this course each question is followed by an answer. So you can save time in interview preparation.\nWhat is the best way of viewing this course?\nYou have to just watch the course from beginning to end. Once you go through all the videos, try to answer the questions in your own words. Also mark the questions that you could not answer by yourself. Then, in second pass go through only the difficult questions. After going through this course 2-3 times, you will be well prepared to face a technical interview in Docker architecture.\nWhat is the level of questions in this course?\nThis course contains questions that are good for a Fresher to an Architect level. The difficulty level of question varies in the course from a Fresher to an Experienced professional.\nWhat happens if Docker technology changes in future?\nFrom time to time, we keep adding more questions to this course. Our aim is to keep you always updated with the latest interview questions on Docker.\n\nWhat are the sample questions covered in this course?\nSample questions covered in this course are as follows:\nWhat is Docker?\nWhat is the difference between Docker image and Docker container?\nHow will you remove an image from Docker?\nHow is a Docker container different from a hypervisor?\nCan we write compose file in json file instead of yaml?\nCan we run multiple apps on one server with Docker?\nWhat are the common use cases of Docker?\nWhat are the main features of Docker-compose?\nWhat is the most popular use of Docker?\nWhat is the role of open source development in the popularity of Docker?\nWhat is the difference between Docker commands: up, run and start?\nWhat is Docker Swarm?\nWhat are the features of Docker Swarm?\nWhat is a Docker Image?\nWhat is a Docker Container?\nWhat is Docker Machine?\nWhy do we use Docker Machine?\nHow will you create a Container in Docker?\nDo you think Docker is Application-centric or Machine-centric?\nCan we lose our data when a Docker Container exits?\nCan we run more than one process in a Docker container?\nWhat are the objects created by Docker Cloud  in Amazon Web Services (AWS) EC2?\nHow will you take backup of Docker container volumes in AWS S3?\nWhat are the three main steps of Docker Compose?\nWhat is Pluggable Storage Driver architecture in Docker based containers?\nWhat is Docker Hub?\nWhat are the main features of Docker Hub?\nWhat are the main security concerns with Docker based containers?\nWhat are the security benefits of using Container based system?\nHow can we check the status of a Container in Docker?\nWhat are the main benefits of using Docker?\nHow does Docker simplify Software Development process?\nWhat is the basic architecture behind Docker?\nWhat are the popular tasks that you can do with Docker Command line tool?\nWhat type of applications- Stateless or Stateful are more suitable for Docker Container?\nHow can Docker run on different Linux distributions?\nWhy do we use Docker on top of a virtual machine?\nHow can Docker container share resources?\nWhat is the difference between Add and Copy command in a Dockerfile?\nWhat is Docker Entrypoint?\nWhat is ONBUILD command in Docker?\nWhat is Build cache in Docker?\nWhat are the most common instructions in Dockerfile?\nWhat is the purpose of EXPOSE command in Dockerfile?\nWhat are the different kinds of namespaces available in a Container?\nHow will you monitor Docker in production?\nWhat are the Cloud platforms that support Docker?\nHow can we control the startup order of services in Docker compose?\nWhy Docker compose does not wait for a container to be ready before moving on to start next service in dependency order?\nHow will you customize Docker compose file for different environments?",
      "target_audience": [
        "Anyone appearing for Docker interview",
        "Anyone who wants to learn Docker",
        "Software Engineer, OPS Engineer, Architect, Development Manager, Quality Engineer"
      ]
    },
    {
      "title": "DevOps e Scrum com o novo Azure passo á passo na prática",
      "url": "https://www.udemy.com/course/devops-e-scrum-com-o-novo-azure-passo-a-passo-na-pratica/",
      "bio": "Gerenciando o desenvolvimento de softwares e equipes muito fácil.",
      "objectives": [
        "Ferramentas do novo DevOps Azure",
        "Scrum",
        "Kanban",
        "Engenharia de Requisitos",
        "E mais..."
      ],
      "course_content": {
        "Introdução": [
          "Introdução ao Azure DevOps",
          "O que é DevOps?",
          "Primeiro acesso ao VSTS",
          "Criando um projeto no VSTS",
          "O que é o Scrum?",
          "Área de Overview e Summary",
          "Dashboards",
          "Documentando o Projeto",
          "Novos Integrantes e Gerenciando o Time",
          "Definindo as permissões do Time",
          "O dono do projeto mudou. E agora?",
          "Times dentro do projeto",
          "Work Item e Engenharia de Requisitos",
          "Cadastrando Work Items e notificando desenvolvedores por e-mail",
          "Enviando mensagens e histórico de discussões sobre um Work Item",
          "Vinculando Work Items",
          "Filtrar Work Items",
          "O que é o Kanban?",
          "Boards e Work Items",
          "Product Backlogs no Azure DevOps",
          "Mover Work Items do Product Backlog para uma Sprint",
          "Configurando as Sprints",
          "Criando Relatórios com Queries",
          "Criando Gráficos em Relatórios com Queries",
          "Relatórios Scrum",
          "Revisão",
          "Conclusão e Próximos Passos"
        ]
      },
      "requirements": [
        "Não é necessário nenhum pré-requisito para realizar o curso."
      ],
      "description": "Neste curso você irá aprender o novo Azure DevOps com foco em Scrum na prática. Vamos explorar os recursos que essa plataforma oferece para trabalhar com essa metodologia de desenvolvimento ágil, Kanban, Engenharia de Requisitos e mais.\nO legal, é que neste curso, você não precisa ter conhecimentos prévios, pois vamos fazer tudo passo a passo.\n\n\nAproveite e bom curso!",
      "target_audience": [
        "Qualquer pessoa que queira aprender sobre Scrum, Kanban e o novo Azure DevOps"
      ]
    },
    {
      "title": "Learn Docker and prepare for Job Interview",
      "url": "https://www.udemy.com/course/learn-docker-from-the-scratch-and-prepare-for-job-interview/",
      "bio": "Learn all the needed skills and Land your Job Guarantee",
      "objectives": [
        "What is Docker and why",
        "VM vs Containers",
        "How Docker works Architecture",
        "Docker Overview",
        "Docker Engine",
        "Docker Images",
        "Docker Containers",
        "Docker Networking",
        "Docker Commands",
        "Containers Management",
        "Our first Nginx Container",
        "How to handle Dockerfile",
        "Docker compose app py file",
        "Interview Preparation"
      ],
      "course_content": {},
      "requirements": [
        "Nothing just Patience and Eager to Learn !"
      ],
      "description": "DevOps is a combination of software development and information technology operations that enables businesses to deliver applications at a faster pace. It brings together development and operations teams so there are fewer redundancies in the software development process\nDevSecOps is a culture shift in the software industry that aims to bake security into the rapid-release cycles that are typical of modern application development and deployment\n\n\nDevOps has revolutionized workplaces in many ways. The number of DevOps-related jobs are increasing, while its rank as an in-demand job\n\n\nDevOps is important because it's a software development and operations approach that enables faster development of new products and easier maintenance of existing deployments\n\n\nWhat is containerization?\nContainerization is the packaging of software code with just the operating system (OS) libraries and dependencies required to run the code to create a single lightweight executable—called a container—that runs consistently on any infrastructure. More portable and resource-efficient than virtual machines (VMs), containers have become the de facto compute units of modern cloud-native applications\n\n\nWhat is Docker ?\nDocker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels",
      "target_audience": [
        "DevOps Engineers",
        "DevSecOps Engineers",
        "Developers",
        "System Administrator",
        "IT Engineers"
      ]
    },
    {
      "title": "SAP PI Completo en Español",
      "url": "https://www.udemy.com/course/sap-pi-completo-en-espanol/",
      "bio": "Conviertete en experto en SAP PI 7.5",
      "objectives": [
        "Aprenderas SAP PI 7.5 desde nivel basico hasta el nivel avanzado.",
        "Aprenderas a utilizar los adaptadores mas comunes como PROXY, IDOC, FILE, SOAP, JDBC",
        "Aprenderas como realizar la implementación de SAP PI como en un proyecto real.",
        "Aprenderas a como conectar sistema SAP y No SAP con SAP PI.",
        "Se entregara al final del curso los manuales de SAP PI (en ingles)"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos en computación.",
        "Contar con una computadora y acceso a internet.",
        "Tener un sistema donde realizar las practicas que veremos en el curso."
      ],
      "description": "El curso contiene un contenido completo que abarca todos los temas mas importantes de SAP PI 7.5, esta diseñado muy detalladamente y estructurado para que de manera fácil puedas aprender los conocimientos necesarios para trabajar con el y poder implementarlo conociendo lo que se esta haciendo.\nDe la mano del instructor Freddy Valderrama te guiara en los videos paso a paso para que aprendas que es SAP PI, los componentes, el SLD, ESR, ID, como crear las conexiones necesarias y como crear interfaces desde cero.\nEste curso esta creado tomando la experiencia de mas de 13 años en diferentes implementaciones de SAP que ha realizado el instructor a lo largo de los años y documentación de SAP.\nEl curso esta enfocado en aprender de una manera facil SAP PI 7.5.\n¡Domina SAP PI/PO y transforma tu perfil profesional!\nNuestro curso completo en español, desde lo más básico hasta las interfaces más avanzadas, te prepara para el mercado real. Aprende con ejercicios prácticos, proyectos simulados y soporte directo.\nCertifíca tus habilidades y accede a mejores oportunidades laborales en una de las áreas más demandadas y mejor remuneradas de SAP.\n¡No esperes más! Invierte en tu futuro hoy y celebra mas adelante.",
      "target_audience": [
        "Toda personas con ganas de aprender y convertirse en consultor de SAP PI."
      ]
    },
    {
      "title": "SQL Interview Mastery: 150+ Fresh Questions for 2025 Success",
      "url": "https://www.udemy.com/course/from-basics-to-expert-sql-python-for-data-interviews/",
      "bio": "Master SQL & Python for Data Engineering, Analytics, and Science Interviews",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Are you preparing for a career in data engineering, data analytics, or data science? This course is your ultimate guide to acing technical interviews, focusing on SQL, Python, and core programming concepts.\nIn this course, you’ll tackle real-world interview questions ranging from fundamental concepts to advanced problem-solving. We’ll dive into topics that interviewers love to test, such as SQL query optimization, Python data manipulation, and essential computer science principles. You’ll learn how to think like a problem solver and handle even the trickiest interview scenarios with confidence.\nWhat’s Inside?\nSQL Mastery:\nFrom writing basic queries to optimizing complex joins, window functions, and CTEs, you’ll cover everything that matters. Learn the tricks interviewers use to test your SQL skills, including real-world data problems and edge cases.\nPython Proficiency:\nDevelop your Python expertise with exercises on data manipulation, file handling, algorithms, and automation. Master popular libraries like Pandas and NumPy, and get hands-on experience with real-world data challenges.\nProgramming Fundamentals:\nReview critical computer science topics such as data structures, algorithms, and system design. Learn how to explain and implement concepts like hash tables, recursion, and dynamic programming—favorites in technical interviews.\nInterview Tricks and Tips:\nUnderstand common traps interviewers set to test your analytical thinking and problem-solving skills. Gain insights into how to break down complex questions, communicate effectively, and showcase your expertise.\nWhy Take This Course?\nWhether you’re a beginner or an experienced professional, this course is designed to prepare you for every aspect of data-related interviews. With over 1000 practice questions and answers, you’ll gain the confidence to excel in SQL and Python technical tests and handle behavioral questions with ease.\nBy the end of the course, you’ll not only know what to answer but also how to approach interview challenges strategically. This is your complete toolkit for landing your dream job in data.\nStart your journey today and get ready to impress your interviewers with your knowledge and skills!",
      "target_audience": [
        "Aspiring data engineers, analysts, and scientists preparing for technical interviews.",
        "Professionals looking to transition into data roles and strengthen their SQL and Python skills.",
        "Students and beginners interested in understanding SQL and Python for data-related tasks.",
        "Experienced developers aiming to improve their problem-solving abilities in SQL and Python."
      ]
    },
    {
      "title": "Crack Coding Interviews:Data Structures + Algorithms-Python",
      "url": "https://www.udemy.com/course/datastructures-algorithms-python/",
      "bio": "A complete guide for coding interviews. Get job offers, handle offers and negotiations and kickstart your career",
      "objectives": [
        "Ace coding interviews given by some of the top tech companies",
        "Become more confident and prepared for your next coding interview",
        "Cracking the Coding Interview questions with explanations",
        "Become a better developer by mastering computer science fundamentals",
        "Learn, implement, and use different Data Structures",
        "Learn, implement and use different Algorithms",
        "Learn everything you need to ace difficult coding interviews",
        "Learn how to approach and solve hard coding problems",
        "Learn to evaluate your code",
        "Learn to write efficient code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to succeed in this course",
          "Leetcode"
        ],
        "Interviews": [
          "Resume",
          "When to apply for a job ?",
          "How to perform in technical interviews",
          "Technical interview demo",
          "Summary"
        ],
        "BigO Notations": [
          "How to get Interviews!!",
          "Introduction",
          "What does large input mean?",
          "Asymptotic Notations",
          "Time Complexity",
          "O(1) - Constant Time",
          "O(n) - Linear Time",
          "O(n^2) - Quadratic Time",
          "O(logn) - Logarithmic Time",
          "Which time complexity is better?",
          "Rules of BigO",
          "Quiz - I",
          "RAM - Random Access Memory",
          "Space Complexity",
          "O(1) - Constant Space",
          "O(n) - Linear Space",
          "Quiz - II",
          "Time or Space ?"
        ],
        "Data Structures": [
          "What is a data structure ?",
          "Why do we need data structures ?",
          "Data Structures classification",
          "Basic Operations on Data Structures"
        ],
        "Arrays": [
          "What is an array?",
          "Types of arrays",
          "Arrays in memory",
          "Create and Insert",
          "Traversal",
          "Access",
          "Accessing elements in array : Eliminating edge cases for negative indexing",
          "Search : Linear Search",
          "Search : Binary Search",
          "Delete/Remove",
          "Summary",
          "When to use arrays?",
          "Resources"
        ],
        "Lists": [
          "What is a list?",
          "Properties of a list",
          "List vs Array",
          "List operations : Create",
          "Resources",
          "List operations : Access",
          "List operations : Insert",
          "List operations : Traversal",
          "Linear Search",
          "Binary Search",
          "List operations : Delete",
          "List comprehension and map",
          "List slicing",
          "Other List operations",
          "Strings",
          "Common mistakes",
          "Summary"
        ],
        "List - Practice problems": [
          "Copy & Reverse - Problem",
          "Copy & Reverse - Solution",
          "Reverse & Split - Problem",
          "Reverse & Split - Solution",
          "Rotate array - Problem",
          "Rotate array - Solution",
          "String compression - Problem",
          "String compression - Solution",
          "Chess tournament - Problem",
          "Chess tournament - Solution (Part - 1)",
          "Chess tournament - Solution (Part - 2)",
          "Chess tournament - Solution (Part - 3)",
          "Stocks - Problem",
          "Stocks - Solution",
          "Trapping rain water - Problem",
          "Trapping rain water - Solution (Part - 1)",
          "Trapping rain water - Solution (Part - 2)"
        ],
        "Data Structures : Hash Tables/Dictionaries": [
          "What is a dictionary ?",
          "Why do we need dictionaries?",
          "Dictionaries in memory",
          "Create",
          "Access, Insert and Update",
          "Traversal",
          "Delete",
          "Collision resolution",
          "Built-in functions",
          "List vs Dictionary",
          "Summary"
        ],
        "Dictionary - Practice problems": [
          "Design Hashmap - Problem",
          "Design Hashmap - Solution",
          "Longest Word - Problem",
          "Longest Word - Solution",
          "Valid Anagram - Problem",
          "Valid Anagram - Solution",
          "Isomorphic Strings - Problem",
          "Isomorphic strings - Solution"
        ],
        "Linked Lists": [
          "Pointers",
          "Why do we need Linked Lists ?",
          "Types of Linked Lists"
        ]
      },
      "requirements": [
        "No experience in data structures or algorithms needed",
        "Basic programming skill in python",
        "No previous computer science knowledge necessary"
      ],
      "description": "Welcome to Crack Coding Interviews:Data Structures + Algorithms-Python course. This course provides your with most extensive and modern data on Data Structures and Algorithms along with tips on how to get interviews, how to perform during technical and non-technical interview, handle offers, rejections and negotiations\n\n\nThis course is for\nSelf taught programmers\nStudents looking for a high paying job out of college\nSoftware developers aspiring to join giant tech companies\nComplete beginners with little skill in python\n\n\nIf you want to work at giant tech companies like Google, Facebook, Microsoft, Amazon, Netflix and many others etc.., but don't know to where to start or intimidated by the process? Do you find yourself getting \"stuck\" at coding interviews? This course gives you confidence and knowledge to ace any coding interview. All the exercises and lessons and strategies taught in this course makes you capable to land offers from any company you want.\n\n\nMany students are self taught programmers with high aspirations. They may feel discouraged due to lack of knowledge about computer science fundamentals compared to a college graduate. By competing this course, they can level with a  college graduate which gives a boost in their interviews\n\n\nAfter finishing this course, you will have good knowledge about\nData Structures used in computer science\nAlgorithmic techniques required to solve all kinds of coding problems\nKnowledge on how perform in each step of interview process\nHands on exercises on interview questions asked in big tech companies on each topic",
      "target_audience": [
        "Anyone who wants to become a better developer",
        "Students familiar with Python programming looking to start a career in tech!",
        "Any self taught programmer who missed out on a computer science degree",
        "Any engineer, developer, programmer, who wants to improve their interviewing skills"
      ]
    },
    {
      "title": "【한글자막】 OpenAI API 마스터하기: GPT-4의 무한한 창의성 끌어내기",
      "url": "https://www.udemy.com/course/mastering-openai-korean/",
      "bio": "본 강의는 GPT-4 로 녹화한 강의입니다! ChatGPT API, Whisper, 임베딩, DALL-E 에 대해 배우면서 수많은 프로젝트를 함께 수행해봐요!",
      "objectives": [
        "OpenAI의 GPT-4 및 텍스트 완성 기능 익히기",
        "모델 성능을 미세하게 조정하기 위한 GPT 매개변수 이해",
        "GPT-4를 사용하여 모든 언어의 코드 작성, 분석, 디버깅",
        "일관성과 명확성을 위해 GPT 출력 구조화 및 개선",
        "특정 사용 사례와 독특한 요건을 해결하기 위해 GPT-4 사용자 지정",
        "DALL-E 2를 이용한 이미지 생성 및 편집",
        "텍스트를 검색, 분류하고 이해하는 데 텍스트 임베딩 활용",
        "임베딩 기반 추천 알고리즘 구축",
        "Whisper를 사용해 오디오 파일 번역 및 전사"
      ],
      "course_content": {
        "강좌 소개": [
          "환영 인사 및 강좌 개요",
          "Discord 커뮤니티에 조인하세요!",
          "OpenAI의 약력",
          "GPT에 대해 알아보기",
          "선택 강의: 트랜스포머 구조",
          "계정 생성하기",
          "변경 로그 - 이 강의를 건너뛰지 마세요! (확인 필수)",
          "강좌 코드 받는 법",
          "강의자료 슬라이드 받는 법"
        ],
        "시작하기": [
          "설치 요구사항",
          "대대적인 OpenAI 1.x 업그레이드(중요 공지)",
          "첫 번째 완성 요청",
          "Windows 사용자의 경우: 텍스트 파일 편집",
          "API 키 숨기기",
          "토큰 이해하기",
          "max_tokens",
          "Stop 시퀀스",
          "N & Echo",
          "다양한 완성 모델",
          "모델 성능과 요금 비교"
        ],
        "프롬프트 엔지니어링": [
          "좋은 프롬프트의 요소",
          "출력 형식 제어하기",
          "요약 프롬프트",
          "데이터 추출 프롬프트",
          "감정 분석 프롬프트",
          "Zero-Shot Vs. Few-Shot 프롬프팅",
          "\"스텝 바이 스텝으로 사고하기\" 프롬프팅",
          "텍스트 변형 프롬프트"
        ],
        "색 팔레트 생성기 프로젝트": [
          "색 팔레트 프로젝트 소개",
          "Colaboratory에서의 컬러 렌더링",
          "색 팔레트 생성기 프롬프트 작성하기",
          "색 블록 렌더링 함수 작성하기",
          "플라스크 서버 설정하기",
          "OpenAI를 서버와 통합하기",
          "팔레트 엔드포인트 작성하기",
          "폼 생성하기",
          "브라우저에서 색 렌더링하기",
          "복사 및 붙여넣기 기능",
          "색 블록 스타일 적용하기",
          "폼 스타일 적용하기",
          "프론트엔드 코드 리팩토링하기"
        ],
        "주요 API 매개변수": [
          "Temperature",
          "Top_P 이해하기",
          "Frequency 페널티",
          "Presence 페널티",
          "Stream으로 응답 전송하기"
        ],
        "Chat API와 GPT-4": [
          "Chat API 소개",
          "첫 번째 챗 요청",
          "요금 관련 유의사항",
          "올바른 포맷으로 작성된 메시지로 프롬프팅하기",
          "GPT-3.5-Turbo 버전 유의사항",
          "Completion 프롬프트를 Chat 형식으로 재작성하기",
          "Chat API 매개변수"
        ],
        "GPT-4 챗봇 만들기": [
          "챗봇 프로젝트 소개",
          "챗봇 기본 구조 작성하기",
          "메시지 요청 기록 남기기",
          "성격 부여하기",
          "챗봇 결과에 색 입히기"
        ],
        "GPT-4로 코드 작업하기": [
          "GPT-4에 코드 설명 요청하기",
          "GPT-4로 시간 복잡도 계산하기",
          "GPT-4로 JS를 파이썬으로 변환하기",
          "GPT-4로 코드 버그 수정하기",
          "GPT-4로 처음부터 코드 작성하기"
        ],
        "틱 토큰(TikToken)으로 예상견적 내보기": [
          "틱 토큰으로 토큰 수 세기",
          "GPT-4 메시지 토큰 수 세기"
        ],
        "GPT-4 자동 코드 리뷰어": [
          "기본 코드 리뷰어 소개",
          "기본 코드 리뷰어 만들기 1부",
          "기본 코드 리뷰어 만들기 2부",
          "대화형 코드 리뷰어 소개",
          "대화형 코드 리뷰어 프롬프트",
          "대화형 코드 리뷰어 자세히 살펴보기"
        ]
      },
      "requirements": [
        "초심자 수준의 파이썬 경험만 있으면 됩니다!"
      ],
      "description": "이 강의는 유데미 강좌 중 \"Mastering OpenAI Python APIs: Unleash the Power of GPT4\"와 동일한 강의이며, 한국어 자막이 기존 강의와 다르게 전문 한글 자막이 제공됩니다. 또한 강의 내용에 대한 질문은 Q&A에 영어로 남겨주시면 오리지널 강사님으로부터 답변을 받으실 수 있습니다. 강의 내용 외의 문의는 한국어로 남겨주셔도 되며, 웅진씽크빅 글로벌에서 매일 확인하여 답변드리고 있으니 편하게 질문해주세요! :)\n\n\n(GPT-4로 녹화한 새로운 강의입니다!)\nAI의 무한한 잠재력을 경험해보세요!\n포괄적인 실습 강좌를 통해 GPT-4, DALL-E, Whisper 등 OpenAI 의 API 들을 익히세요.\n\n\n인공 지능의 세계로 진입해 GPT3, GPT-3.5, GPT4, DALL-E, Whisper 등 OpenAI의 최첨단 API를 활용해 획기적인 애플리케이션과 솔루션을 만드는 방법을 알아보세요. 몰입적인 프로젝트 중심 강좌로, 모든 배경과 숙련 수준의 학습자를 위해 고안되어 AI 기반 개발 시 탄탄한 기반을 제공합니다.\n\n\n이 포괄적인 강좌에서 다음을 경험하실 수 있습니다.\nOpenAI 의 생성 모델 및 잠재적인 애플리케이션에 대한 이해도 심화\n텍스트 생성, 요약, 번역 등 자연어 처리 측면에서 GPT-4 익히기\nGPT-4 를 사용해 코드를 디버깅하고, 코드를 개선하며, 처음부터 코드 작성하기\nDALL-E 를 사용하여 텍스트 프롬프트에 기반해 멋진 시각적 이미지와 아트워크 생성하기\nWhisper 의 기능으로 음성 오디오를 정확한 전사본으로 변환 및 번역하기\nAI 임베딩을 사용해 텍스트를 정제, 색인화, 검색, 비교하여 단어, 문단, 문서를 비교할 수 있는 기하학적 기능 이용하기\n\n\n\n실무 경험 목적의 실제 프로젝트:\nGPT-4 를 사용해 동적 Q&A 봇 만들기\nGPT-4 로 시각적 색상 팔레트 검색 엔진 만들기\nGPT-4 로 대화형 코드 검토 어시스턴트 작성하기\nAI 기반 Spotify 플레이리스트 생성기 만들기\nGPT-4 를 사용해 Reddit 댓글 감정 분석하기\n모든 크기의 책을 단락 몇 개로 요약하기\nDALL-E 및 GPT-4 로 무한 대화형 나만의 모험 떠나기 애플리케이션 만들기\n임베딩 기반 영화 추천 알고리즘 생성하기\n\n\n\n전반적인 강좌를 통해 실습 프로젝트와 실제 예시에 참여하면서 새로 배운 지식과 기술을 즉시 적용할 수 있게 됩니다. 다음 내용도 자세히 살펴봅니다:\n프롬프트 엔지니어링, 토큰화, 온도 설정의 모범 사례\nAPI 성능, 오류 처리, 리소스 관리의 최적화를 위한 전략\nAI 기반 개발과 관련된 윤리적 고려 사항 및 어려움\n\n\n\n소프트웨어 개발자, 데이터사이언티스트, AI 팬이라면 이번 강좌를 통해 OpenAI의 API 를 프로젝트에 통합하고 혁신적인 AI 기반 솔루션을 개발할 수 있는 전문 지식을 갖출 수 있습니다.\n포괄적이고 참여도 높은 이번 강좌를 통해 AI 여정을 시작하고 기술을 향상하세요. 지금 등록해 OpenAI의 GPT-4, DALL-E, Whisper API의 무한한 잠재력을 확인해 보세요!",
      "target_audience": [
        "AI에 대해 궁금한 개발자",
        "생성(generative) 모델로 워크플로우를 강화하려는 소프트웨어 엔지니어",
        "OpenAI에서 제공하는 도구에 관심이 있는 기업가",
        "창의적인 워크플로우를 보강하는 데 관심이 있는 콘텐츠 크리에이터"
      ]
    },
    {
      "title": "Data Structures and Algorithms MCQ Solving Techniques",
      "url": "https://www.udemy.com/course/data-structures-and-algorithms-mcq-solving-techniques/",
      "bio": "Shortcut tricks to solve various Data Structure Problems of UGC NET, GATE, NIC, ISRO,DRDO Exam.",
      "objectives": [
        "100% Quick and Easy Shortcut tricks to solve Data Structure Questions in your UGC NET, GATE,Scientist B and Scientific Assistant Examination.",
        "Students become familiar with every Data Structures.",
        "Understand how to solve Data Structures related questions .",
        "Understand the mathematical concepts behind the Data Structures.",
        "Understand the working principle of Linear Data Structures like Stack, Queue and Linked List.",
        "Understand the Fundamentals of various Sorting like Bubble Sort, Insertion Sort,Merge Sort, Quick Sort,Heap Sort.",
        "Understand the Fundamentals of various Searching like Sequential Search and Binary Search.",
        "Helpful for nielit scientist b exam preparation.",
        "Covered gate exam syllabus.",
        "Helpful for NTA UGC NET candidates."
      ],
      "course_content": {},
      "requirements": [
        "A PC / Laptop / Mobile."
      ],
      "description": "Data Structures and Algorithms are essential concepts for any computer science student or software developer. However, mastering these concepts can be a challenging task, and many people struggle to learn them. That's where shortcut tricks come in handy.\nShortcut tricks are quick and easy ways to solve complex problems, and they can be especially useful in the field of data structures and algorithms. With the right shortcuts, you can speed up your problem-solving abilities, improve your efficiency, and save valuable time.\nIn this day and age, where time is of the essence, learning data structure and algorithm shortcut tricks can be a game-changer. Not only will it help you to solve problems quickly and efficiently, but it will also give you an edge over others in a competitive job market. So, if you want to improve your problem-solving skills and become a more efficient developer, learning shortcut tricks for data structures and algorithms is a great way to start.\nThis course will be helpful for the candidates who are preparing for UGC NET, GATE, NIC, ISRO,DRDO Scientist B and Scientific Assistant Exam. Various shortcut tricks are discussed. You will find Quiz in every sections, you can judge your performance. You will get the solutions of previous years UGC NET, GATE, ISRO Scientist B Exams. Stack, Linked List, Sorting, Searching, Graph, Tree, Minimum Spanning Tree (MST), Graph Traversal algorithm BFS and DFS, Hashing and Introduction to algorithms lectures are uploaded. Several MCQs also updated in this course. MCQs also solved in shortcut manner. The topics are\nBasic concepts of data representation: abstract and system defined types, primitive data structures Linear data structures and their sequential representation: array, stack, queue, circular queue, dequeue and their operations and applications Linear data structures and their linked representation: linear link lists, doubly linked lists, linked stack, linked queue and their operations and applications. Non Linear Data Structures I: Binary trees, binary search trees, representations and operations, thread representations, sequential representations, graphs and their representation. Searching Techniques- Linear, Binary, Interpolation Sorting Techniques-Insertion Sort, Bubble, Selection, Quick\nNon Linear Data Structures II : Hashing, Files\nEvery This will help you to boost your preparation.",
      "target_audience": [
        "Computer Science Students.",
        "Information Technology (IT) Students.",
        "GATE candidates.",
        "NTA UGC NET candiadtes.",
        "Scientist B Candidates.",
        "Scientific Assistant Candidates.",
        "Candidates who are appearing Computer Science Examinations"
      ]
    },
    {
      "title": "Apache Airflow",
      "url": "https://www.udemy.com/course/airflow-es/",
      "bio": "Aprende a utilizar Airflow para tus procesos ELT o ETL desde cero mediante ejemplos prácticos",
      "objectives": [
        "Instalar y configurar Apache Airflow, en la nube u on premise",
        "Desarrollar tus propios flujos de trabajo en Airflow",
        "Adaptar Airflow a las necesidades particulares de tu entorno profesional creando Plugins",
        "Crear procesos ETL con los orígenes y destinos más comunes",
        "Componentes principales de Airflow: Dags, Operators, Tasks, Executors...",
        "Aspectos algo más avanzados de Airflow: XCom, Hooks..."
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de Python",
        "Recomendable conocimientos básicos de shell en unix",
        "Recomendable conocimientos básicos de Docker"
      ],
      "description": "Apache Airflow es la herramienta de moda para crear procesos ELT/ETL y todo tipo de flujos de trabajo automatizados. Pero no es una de esas modas tontas y pasajeras, no. Airflow se ha ganado el puesto a pulso, ya que nos ofrece una escalabilidad, personalización y robustez difíciles de igualar por cualquier otra herramienta. Y lo mejor de todo: ¡es open source! (que no cuesta un duro, vamos). Gracias a eso tiene una grandísima comunidad y está siempre en constante mejora y expansión.\nEn este curso aprenderás a usar Airflow desde 0 y adquirirás conocimientos suficientes para poder utilizarlo en producción en tu empresa. Conocerás todos los conceptos necesarios para entender bien el funcionamiento de la herramienta, y podrás deleitar a tus compis de curro con unas pipelines chulísimas. Y eso lo aprenderás sin apenas darte cuenta, ya que mis vídeos son concisos y van al grano.\nTodo esto aderezado con tests para que repases, ejercicios de programación donde yo os aportaré una solución posible y constantes actualizaciones y mejoras del curso, para que nunca pares de aprender y mejorar. También tenéis vídeos sobre como actualizar a Airflow 2!\nNo te lo pienses más y adentrate en el maravilloso mundo de Apache Airflow.",
      "target_audience": [
        "Profesionales informáticos (principalmente relacionados con el mundo de los datos) con conocimientos de Python, que deseen una herramienta para implementar procesos de ETL/ELT o workflows en general",
        "Estudiantes con interés en trabajar en una posición de Data Engineer o Data Scientist"
      ]
    },
    {
      "title": "Practical Odoo Development Quiz Apps, API & Customization",
      "url": "https://www.udemy.com/course/practical-odoo-development-quiz-apps-api-customization/",
      "bio": "Master Odoo development through practical quizzes ORM, views, business logic, integrations, and real-world scenarios.",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Unlock your potential as an Odoo developer with this comprehensive Practical Quiz – Odoo Developer. This course is designed to help you reinforce your knowledge, test your skills, and apply Odoo concepts in realistic scenarios. Whether you are a beginner or an intermediate developer, this quiz-based approach ensures you learn by doing and retain critical skills required for professional Odoo development.\nIn this course, you will:\nTest your understanding of Odoo installation and environment setup across Linux, Windows, and Docker.\nPractice ORM operations, including create(), write(), unlink(), and browse(), to manipulate records effectively.\nExplore views and UI concepts, from XML forms, tree, kanban, calendar views to QWeb templates and inheritance.\nApply business logic and server-side development, including custom workflows, automated actions, and Python decorators like @api.model and @api.depends.\nIntegrate Odoo with external APIs and eCommerce platforms such as Shopify and WooCommerce.\nLearn deployment best practices, performance tuning, CI/CD pipelines, and troubleshooting in production environments.\nThis course is perfect for:\nAspiring Odoo developers looking to strengthen their skills through practical testing.\nPython developers who want to transition into ERP development.\nERP enthusiasts preparing for real-world Odoo projects and certifications.\nStudents and professionals seeking scenario-based, hands-on learning rather than theory alone.\nBy the end of this course, you will have tested and solidified your knowledge across all major areas of Odoo development, boosting your confidence to handle real-world projects. Start your journey to becoming a proficient Odoo developer today!",
      "target_audience": [
        "Odoo beginners who want hands-on quiz practice.",
        "Python developers aiming to test Odoo knowledge.",
        "ERP enthusiasts preparing for real-world Odoo scenarios.",
        "Students seeking interactive, scenario-based learning instead of theory."
      ]
    },
    {
      "title": "First Steps in Programming with C# for Beginners",
      "url": "https://www.udemy.com/course/first-steps-in-programming-with-csharp-for-beginners/",
      "bio": "Learn Coding by Examples and by Solving Practical Problems with C# and Visual Studio",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "This course is for absolute beginners",
        "Anyone who is interested in programming"
      ],
      "description": "The training course \"First Steps in Programming with C# for Beginners\" teaches the basics of computer coding through a lot of practical exercises. The course content combines simple explanations with a lot of live coding examples and many practical assignments with an automated online evaluation. The course comes with a free C# coding book, which gives more detailed explanations for each covered topic. The course is suitable for absolute beginners, who want to start coding and decide whether they enjoy writing computer programs and want to invest more efforts to learn more and become software engineering professionals.\n\nCourse topics:\nUnderstanding coding, writing simple commands and programs\nWorking with the Visual Studio IDE: writing and executing C# programs\nUsing variables, data, expressions and calculations\nReading and writing numbers and text to the console\nUsing conditional statements (if-else and switch-case statements)\nUsing loops to repeat code logic (for loop, while loop, do-while loop)\nPractical problem solving with automated online evaluation system\nDesigning simple algorithms (during the problem solving)\nThis practical coding training course is already attended by 100,000+ students at the Software University (SoftUni), who started their software developer career using this course. Thousands of SoftUni graduates already work as software engineers in the industry (search for \"SoftUni alumni LinkedIn\").\nThis training is the first important step in learning computer programming and software development. It is just the start and far from enough to start a job. It lays solid foundation for additional learning of programming and software technologies, building problem solving skills, algorithmic thinking and reaching a software developer job later.",
      "target_audience": [
        "Newbies in coding",
        "Beginners in programming",
        "Beginners in C# and .NET",
        "Anyone who wants to start coding"
      ]
    },
    {
      "title": "Mastering Technical Interviews - System Design & Algorithms",
      "url": "https://www.udemy.com/course/mastering-technical-interviews/",
      "bio": "Conquer technical interviews & maximize your salary! Data structures, leet code, algorithms, architecture system design.",
      "objectives": [
        "Learn how to analyze and break down interview coding problems into easily solveable steps",
        "Learn how to design and architect complex systems for interviews",
        "How to negotiate the best possible salary",
        "How to communicate effectively in an interview to explain your solution",
        "How to break down leet code problems into solveable problems"
      ],
      "course_content": {},
      "requirements": [
        "Programming experience required. Class utilizes Python but knowledge in any language"
      ],
      "description": "Technical interviews are hard! It takes a combination of lots of practice, a good interviewer, and a bit of luck.\nThis course will cover the most common things that interviewers are looking for in grading your technical interview.\n\n\nFirst, we'll do a crash course on data structures covering arrays, hash maps, & linked lists.\nThen we'll cover real coding questions that I and my team ask when interviewing candidates.\nWe will also cover system design questions and how to be verbose in answering and discussing solutions.\nWe'll cover management & behavioral and most importantly the questions that you need to ask your interviewers. Remember, you are interviewing them just as much as they are interviewing you!\nFinally, we'll cover salary expectations and how to properly value your experience to maximize your salary!\n\n\nOur focus will be for a generalist programming interview (Full Stack, Backend, Data Science, Tools Programmer). With a some software development experience. Knowing variables, loops, functions, objects, classes, basic data structures.\nIn this course we'll be using Python. However, for your interview select the language you are most comfortable with!\n\n\nDon't get discouraged. Despite interviewing hundreds of candidates on a yearly basis for everything from Data structures, algorithms, architecture & design. Entry level to senior positions I still fail interviews too.\nInterviews are tough but by knowing what interviewers are looking for and what hints to listen for can help increase your chances of landing that new job!",
      "target_audience": [
        "Software engineers from entry level straight out of college to senior level engineers"
      ]
    },
    {
      "title": "كيف تلتحق بشركة احلامك! الدليل الكامل للنجاح في أي انترفيو!",
      "url": "https://www.udemy.com/course/interviewssecrets/",
      "bio": "Interview secrets in Arabic",
      "objectives": [
        "كيفية بناء سيرة ذاتية كاملة وناجحة",
        "كيفية بناء بروفيل لينكدان ناجح",
        "كيفية بدء الكلام مع شركة احلامك بشكل ناجح",
        "كيفية النجاح في أي انترفيو في أي شركة بما فيها الشركات العالمية",
        "كيفية التفاوض على افضل عرض بعد النجاح في الانترفيو"
      ],
      "course_content": {},
      "requirements": [
        "الكورس لا يتطلب أي خلفية تقنية في اكثر من 70% من محتوياته. للاستفادة من 90% على الاقل, يرجي وجود خلفية تقنية عند الطالب"
      ],
      "description": "اشتغلت في حياتي في ٣ شركات عملاقة: ميكروسوفت، امازون و بوكينج\nو اتقبلت في اتنين عمالقة تانيين (جوجل و فيسبوك)\nعلشان ادي لمحة بسيطة عن نظام الاختبارات هناك، شركة منهم (بدون ذكر اسم)، لو فرضنا اتقدم ليها ١٠ الاف شخص، اقل من ٤٪؜ بيترد عليهم. يعني حوالي 9600 شخص مش بيعدوا مرحلة السي في اصلا!!\nمن ضمن ال ٤٠٠ اللي فاضلين، ١٠٠ فقط بيعدوا مرحلة ال recruiter و ال tech screening\nال ١٠٠ اللي فاضلين، ٤٠ بس اللي بيعدوا ال final interview.\nببساطة، 0.4% فقط اللي بيعدوا الانترفيو\nهل ده علشان ال 99.6% التانيين غير صالحين او مفيش عندهم كفاءة كويسة؟\nالاجابة: لا!\nكتير منهم يصلحوا تماما للعمل في الشركة ديه و غيرها!\nطب المشكلة فين و حلها ازاي و نعمل ايه علشان نبقي من ال 0.4% دول؟\nده محور الكورس ده.\n\n\nهل معني كده إن الكورس ده يصلح فقط لمهندسين صناعة البرمجيات؟!\nالإجابة: لأ!\nمع إن الكورس مصمم في الأصل لمهندسين صناعة البرمجيات, حوالي 70% من المحتوي يصلح لاي وظيفة مهما كانت!\n\n\nايه مكونات الكورس؟\nالكورس هيعدي بيك بكل المراحل المتوقعه في أي انترفيو.\nهنبدأ بإزاي نعمل سيرة ذاتية محترمه\nبعدها إزاي نعمل بروفايل ناجح على لينكدان وليه ممكن نحتاج نعمل ده.\nبعدها إزاي أصلا نوصل للشركات ونضمن إنها ترد علينا؟\nبعدها إزاي نعدي انترفيو الموارد البشرية\nنبدأ بعدها ندخل في الجد ونتكلم في كل المراحل الباقية لحد ما نوصل للنجاح في الانترفيو وإزاي نتفاوض على أحسن عرض من الشركة\n\n\nIn short, you would learn the secrets to pass any interview and all in Arabic!",
      "target_audience": [
        "أي طالب في مجال صناعة البرمجيات",
        "أي محترف في مجال صناعة البرمجيات",
        "أي شخص يبحث عن وظيفة في شركة كبيرة أو صغيرة مهما كان المجال"
      ]
    },
    {
      "title": "Resilience4j with Spring Boot: Build Fault-Tolerant Systems",
      "url": "https://www.udemy.com/course/resilience4j-spring-boot-learnit/",
      "bio": "Use real-world resilience patterns to build robust, scalable, and failure-resistant backend systems",
      "objectives": [
        "Understand the importance of resilience in microservice architecture",
        "Set up and integrate Resilience4j in a Spring Boot application",
        "Implement circuit breakers to prevent cascading service failures",
        "Apply retry mechanisms to recover from transient errors",
        "Use rate limiting to protect APIs from overload and abuse",
        "Implement time limiter patterns to avoid slow responses and hangs",
        "Isolate service calls using bulkhead patterns for failure containment",
        "Create fallback strategies to ensure graceful degradation",
        "Configure and tune resilience patterns via application properties file",
        "Monitor resilience metrics using Spring Boot Actuator",
        "Write integration tests for fault-tolerant endpoints",
        "Chain multiple Resilience4j decorators (retry + circuit breaker, etc.)",
        "Handle exceptions and fallbacks programmatically and declaratively",
        "Build robust and production-ready Java microservices that can withstand real-world failure scenarios"
      ],
      "course_content": {
        "Introduction": [
          "Communication Plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only - No Sign-Up, FREE, Just Practice",
          "Course Structure & How to Navigate This Course"
        ],
        "Resilient, Scalable & Secure Systems with Spring Boot": [
          "OAuth, OAuth 2.0, JWT & OpenID Connect, Identity Provider",
          "Practice: Auth0 - Configuration of Identity Provider",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 1",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 2",
          "Testing Security: Testing of Spring Boot Endpoints - Part 1",
          "Testing Security: Testing of Spring Boot Endpoints - Part 2",
          "Protecting APIs with Rate Limiting",
          "Rate Limiting Practical Guide: Bucket4j",
          "Building Resilient Services with Resilience4j in Spring Boot. Circuit Breaker",
          "Circuit Breaker - Practice",
          "Spring Boot + Resilience4j: Retry Pattern",
          "Spring Boot + Resilience4j: Time Limiter Pattern",
          "Spring Boot + Resilience4j: Rate Limitter Pattern",
          "Spring Boot + Resilience4j: Bulkhead Pattern",
          "Microservices Patterns in Practice: Exploring API Gateway",
          "Spring Cloud Gateway: Practice",
          "Understanding Load Balancing: Concepts, Strategies, and Use Cases",
          "Implementing Load Balancing with Spring Cloud LoadBalancer"
        ],
        "Annex: Spring Security": [
          "Using the Latest Spring Versions in This Course",
          "Spring Security Introduction",
          "First Login Form & First Security Filter Configuration",
          "Spring Security: The Updated Way to Define the Security Filter Chain",
          "Login with Database Users, Roles & Privileges",
          "Remember Me & Methods Security",
          "Spring Security Architecture & Authentication Provider",
          "EXAM: Spring Security - Online Shop"
        ],
        "Annex: Spring Boot": [
          "Spring Boot: Introduction",
          "The First Spring Boot Project",
          "Spring Boot Starters",
          "Spring Boot Configurations & Application Properties",
          "Spring Boot Actuator - Monitoring Tools"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Basic knowledge of Java programming",
        "Familiarity with object-oriented programming principles",
        "Understanding of REST APIs and HTTP communication",
        "Ability to run and test applications using an IDE (e.g., IntelliJ or Eclipse)",
        "Basic understanding of Maven or Gradle for dependency management"
      ],
      "description": "Modern systems don’t fail because of code - they fail because of dependencies.\nNetwork latency, downstream outages, timeouts, and traffic spikes: these are the realities every backend must face.\nThat’s why fault tolerance is no longer optional - it’s essential.\nThis course is a practical deep dive into Resilience4j, the lightweight and powerful library built specifically to bring resilience patterns to Java applications - and it’s designed to integrate seamlessly with Spring Boot.\nYou'll learn how to design and build microservices that survive failure, recover gracefully, and protect themselves from overload - using real-world tools like circuit breakers, retries, rate limiters, time limiters, bulkheads, and fallback strategies.\nThis isn’t a theory-based course. Every concept is backed by live coding, real examples, testable endpoints, and the architectural context you need to apply these patterns in production systems.\n\n\nWhat You’ll Learn:\nHow to use Resilience4j with Spring Boot for building resilient microservices\nWhen and why to use circuit breakers to prevent cascading failures\nHow to apply retry logic that doesn't overwhelm downstream services\nConfiguring rate limiting to protect your APIs from abuse and DDoS-like behavior\nLeveraging time limiters to cut off hanging requests and improve latency\nIsolating resources with bulkhead patterns to contain failure domains\nBuilding fallback mechanisms and graceful degradation flows\nComparing Resilience4j vs Hystrix vs Bucket4j and choosing the right approach\nTesting resilient endpoints and failure scenarios in Spring Boot\nIntegrating monitoring tools using Spring Boot Actuator\n\n\nWhy This Course Stands Out:\nMost Spring Boot courses focus on building features. This one focuses on building systems that don’t crash under pressure.\nYou’ll go beyond CRUD and into the engineering mindset required to design services that:\nRecover from partial outages\nScale gracefully\nFail safely\nContinue to serve users even when things go wrong\nAll implementations are in Java using Resilience4j and Spring Boot, but the design thinking applies to any modern backend system.\n\n\nWho This Course Is For:\nJava and Spring Boot developers ready to level up their systems architecture skills\nBackend engineers who’ve experienced service crashes and want to prevent them\nMicroservices developers aiming to make their APIs production-ready\nDevOps and platform engineers interested in system stability and observability\nSoftware architects designing distributed, fault-tolerant systems\nAnyone preparing for backend or system design interviews\n\n\nYou’ll Build:\nResilient Spring Boot microservices with fail-safety built in\nFully working examples of retry, rate limiting, fallback, and circuit breaker logic\nConfigurable fault tolerance with runtime tuning via Spring Boot properties\nSystems that not only recover - but protect themselves proactively\nBy the end of this course, you'll be ready to confidently build and deploy Java microservices that can survive and thrive in today’s distributed, failure-prone environments.\nEnroll now and master the tools, patterns, and mindset that make real-world systems truly resilient.",
      "target_audience": [
        "Java developers who want to build fault-tolerant backend system",
        "Spring Boot users aiming to move beyond basic application development",
        "Backend engineers working with microservices and distributed architectures",
        "Developers interested in implementing real-world resilience patterns",
        "Software architects responsible for system reliability and uptime",
        "DevOps engineers looking to improve system stability and failure handling",
        "Teams building APIs that must remain available under stress or partial outages",
        "Anyone maintaining production-grade services that require robust fault tolerance",
        "Engineers preparing for system design interviews or technical architecture roles",
        "Developers transitioning from monolithic to microservice-based systems"
      ]
    },
    {
      "title": "Python for Complete Beginners",
      "url": "https://www.udemy.com/course/python-for-absolute-beginnerz/",
      "bio": "Start learning Python from scratch. No experience needed. Master the fundamentals and build your first Python programs.",
      "objectives": [
        "Understand what Python is and how it works",
        "Install and set up Python and a modern code editor (VS Code)",
        "Use the Python interpreter and write basic Python code",
        "Variables and data types",
        "Numbers and type conversion",
        "Strings (concatenation, slicing, formatting, and escape characters)",
        "Lists, tuples, sets, and dictionaries",
        "Apply conditional logic with if, else, and elif statements",
        "Use loops like for and while for repetition and iteration",
        "Write their first small programs using real Python syntax",
        "Build a solid foundation for more advanced Python topics and projects"
      ],
      "course_content": {
        "1. Introduction to Python & Setup": [
          "Introduction to the Course",
          "1_python interpreter",
          "2_importing modules in python interpreter",
          "3_python indentation in python interpreter",
          "4_Downloading Python IDE",
          "5_Introduction to vscode IDE",
          "6_create your first python program",
          "7_Indentation within IDE"
        ],
        "2. Variables and Data Types": [
          "8_introduction to variables",
          "9_how variables type can be changed through the execution process",
          "10_how to assign values to variables"
        ],
        "3. Working with Numbers and Type Conversion": [
          "11_Introduction to Numbers in python",
          "12_Number type conversion in python"
        ],
        "4. Mastering Strings in Python": [
          "13_introduction to strings",
          "14_string repetation and concatination",
          "15_slicing strings",
          "16_updating strings",
          "17_Escape characters",
          "18_special stirng operators",
          "19_String formating"
        ],
        "5. Working with Lists": [
          "20_introduction to list",
          "21_accessing list elements",
          "22_updating list within python",
          "23_deleting a value from a list",
          "24_basic list operations"
        ],
        "6. Understanding Tuples": [
          "25_introduction to tuples.mp4",
          "26_updating and deleting tuples",
          "27_Basic tuple operations"
        ],
        "7. Exploring Other Python Data Types": [
          "28_min and max in python",
          "29_sets in python",
          "30_Introduction to dictionary"
        ],
        "8. Control Flow: Conditional Statements": [
          "31_if_statement syntax",
          "32_if_else_statement syntax",
          "33_if elif syntax"
        ],
        "9. Loops and Iterations in Python": [
          "34_for loops",
          "35_for with range",
          "36_introduction to while loop"
        ]
      },
      "requirements": [
        "No prior programming experience is needed – this course is for complete beginners",
        "A computer (Windows, macOS, or Linux) with internet access",
        "Basic computer usage skills (e.g., opening apps, downloading files)"
      ],
      "description": "Are you completely new to programming? Do you want to learn Python but don’t know where to start? You’re in the right place!\n“Python for Complete Beginners” is a step-by-step course designed for total beginners with no prior experience in coding or computer science. This course breaks down the core concepts of Python into easy, understandable lessons — all with real examples, hands-on practice, and friendly explanations.\nYou’ll start by installing Python and setting up your environment. Then, you’ll dive into the building blocks of Python — variables, data types, strings, loops, functions, and more. You’ll also get to write your own simple scripts and problem-solving exercises to reinforce your learning.\nWhether you’re a student, a career-changer, or simply someone curious about coding, this course gives you the strong foundation you need to move confidently into more advanced topics.\nWhat You’ll Learn\nHow to install Python and set up your coding environment\nVariables, data types, and working with numbers and text\nControl flow with if statements, loops, and logical operators\nFunctions and how to organize code\nWorking with lists, dictionaries, sets, and tuples\nBasic file handling in Python\nWriting and running your own Python programs\nBuilding mini projects to apply what you’ve learned\nWhy Take This Course?\nPerfect for complete beginners — no prior knowledge required\nClear, structured, and beginner-friendly explanations\nHands-on coding exercises and real examples\nBuild confidence and lay a strong foundation for future learning\nJoin now and start your Python journey the right way — with a course built just for complete beginners!",
      "target_audience": [
        "Absolute beginners who have never coded before",
        "Students, hobbyists, or anyone curious about programming",
        "Career changers who want to explore software development",
        "Beginners preparing for a more advanced Python or computer science course",
        "Anyone who wants a gentle, clear introduction to coding in Python"
      ]
    },
    {
      "title": "Create a Chat bot with Ruby & ChatGPT in Under an Hour",
      "url": "https://www.udemy.com/course/create-a-chat-bot-with-ruby-chatgpt-in-under-an-hour/",
      "bio": "Learn key Ruby programming skills and how to interact with the Chat GPT/Open AI API to create a chat bot in under 1 hour",
      "objectives": [
        "Setting up a Ruby development environment",
        "Interacting with the Chat GPT API",
        "Building a terminal based ChatBot",
        "Building a Chat Bot with a functioning memory",
        "Building a Chat Bot with multiple personalities"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Environment Setup for Ruby Development",
          "Project Setup"
        ],
        "Creating/Programming the Chat Bot": [
          "Starting to Code Your Chatbot",
          "What's an API?",
          "Getting and Storing Your API Key",
          "Installing the Open AI Dependencies and Plugging them into the Chat Bot"
        ],
        "Fine Tuning and Wrap-up": [
          "Adding Chat Bot Memory",
          "Changing Personality and Course Wrap-up"
        ]
      },
      "requirements": [
        "Basic computer literacy and comfort using a web browser",
        "Interest in AI and chatbot technology - no prior experience required",
        "Willingness to learn and experiment with new concepts"
      ],
      "description": "Dive into the world of Ruby programming and AI-powered chatbots with this beginner-friendly course! We're at an exciting time where anyone can create their own intelligent conversational agents. This course will guide you through the process of building a chatbot from scratch, using popular tools like Ruby, Visual Studio Code and the Chat GPT/OpenAI API.\n\n\nBy the end of this course, you'll be able to:\n\n\n1. Set up a complete Ruby development environment for chatbot creation\n2. Understand the basics of API integration and how to communicate with APIs securely\n3. Write code that creates a conversational loop between the chatbot and the end user\n4. Implement AI-powered responses using ChatGPT\n5. Create a chatbot with memory to maintain context in conversations\n\n\nYou'll see hands-on demos and follow along as we build a fully functional chatbot step by step. No prior experience with AI or advanced programming is required – just bring your curiosity and willingness to learn!\n\n\nThroughout the course, we'll use readily available tools and libraries, making it easy for you to continue experimenting and building after the course ends. While we'll focus on the Ruby tech stack, the concepts you'll learn can be applied across various platforms and programming languages.\nAre you ready to bring your chatbot ideas to life and join the AI revolution? Let's start coding!",
      "target_audience": [
        "Ruby programmers of any level who are curious about AI technology",
        "Programmers and hobbyists in search of an engaging, real-world coding project to expand their portfolio",
        "Tech-curious learners ready to dive into AI and chatbot development, regardless of their current skill level."
      ]
    },
    {
      "title": "Information System Project Management (English Version)",
      "url": "https://www.udemy.com/course/information-system-project-management/",
      "bio": "Project Management, Project Management Body of Knowledge (PMBOK) , IT Project",
      "objectives": [],
      "course_content": {
        "Project Initiation & Planning": [
          "Overview",
          "An Overview of IT Project Management",
          "The Project Charter",
          "The Business Case",
          "The Project Team",
          "Project Initiation & Planning"
        ],
        "Project Executing": [
          "The Scope Management Plan",
          "The Work Breakdown Structure",
          "The Project’s Schedule and Budget",
          "Project Executing"
        ],
        "Project Monitoring and Controlling": [
          "The Risk Management Plan",
          "The Project Communication Plan",
          "The IT Project Quality Plan",
          "Project Monitoring and Controlling",
          "Final Quiz"
        ]
      },
      "requirements": [
        "You should able to use a Computer or Laptop",
        "You should able to use a project management software such as Ms. Project"
      ],
      "description": "Information System Project Management is talking about the processes, tools, techniques, and areas of knowledge needed to successfully manage information technology (IT) project. Project Management Body of Knowledge (PMBOK) defines nine knowledge areas for understanding project management.\nProject Integration Management\nProject Scope ManagementProject Time Management\nProject Cost Management\nProject Quality Management\nProject Human Resource Management\nProject Communications Management\nProject Risk Management\nProject Procurement Management\nThe material in each chapter provides a logical flow in terms of the phases and processes required to plan and manage an IT project.\nModule 1. An Overview of IT Project Management\nModule 2. The Business Case\nModule 3. The Project Charter\nModule 4. The Project Team\nModule 5. The Scope Management Plan\nModule 6. The Work Breakdown Structure\nModule 7. The Projects Schedule and Budget\nModule 8. The Risk Management Plan\nModule 9. The Project Communication Plan\nModule 10. The IT Project Quality Plan",
      "target_audience": [
        "Student who want to learn Information System Project Management"
      ]
    },
    {
      "title": "Learn to build AWS Bedrock based end to end AI Web App",
      "url": "https://www.udemy.com/course/learn-to-build-aws-bedrock-based-end-to-end-ai-web-app/",
      "bio": "Hands on course to build an AI/LLM based web Application using Amazon Bedrock, Lambda, API Gateway & CloudFront",
      "objectives": [
        "Learn about AWS services like: CloudFront, S3, API Gateway, Lambda, Bedrock, IAM and CloudWatch",
        "Be able to code & test Lambda using Python 3.13 and use CloudWatch & Amazon Q to debug and resolve permissions issues",
        "Able to build Global & Scalable static website using S3",
        "Able to build website to call Lambda function from Web Page hosted on S3",
        "Able to sent curated prompt from End user's web browser to Amazon's Titan Model provided by Bedrock & send results back to the end user Browser",
        "Able to look at CloudWatch logs and write Python code to parse json and extract required data elements"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "AWS Account creation & Overview": [
          "AWS Account Creation",
          "AWS Navigation & IAM User Creation, AWS Billing Overview"
        ],
        "AWS Services Overview": [
          "AWS Lambda Overview",
          "AWS S3 Overview",
          "AWS Bedrock service overview",
          "AWS API Gateway Overview",
          "AWS CloudFront Overview"
        ],
        "Building the Application": [
          "Build Static website with AWS S3",
          "Explore & Create Basic Lambda Function",
          "Code Lambda to get Foundation Model List provided by Bedrock",
          "Build Lambda to call Foundation Model using AWS Bedrock",
          "Integrate AWS API Gateway with AWS Lambda",
          "Deploy CloudFront for AWS S3 static website"
        ],
        "Tie all parts and Test Application End to End": [
          "Test Application End to End and validate Architecture",
          "Wrap-up and Next Steps!"
        ]
      },
      "requirements": [
        "Ability to create Amazon AWS Account (need valid credit card, charges depend on services used, less than 5$ for me))"
      ],
      "description": "In this hands-on course, you will follow along step-by-step to build a Cloud Native AWS Bedrock based AI Web App that sends data from User's Web Browser, using S3 based static website on CloudFront to API Gateway, to AWS Lambda and finally to an AWS Bedrock, where in call is made to a Foundation Model (FM) provided by bedrock and response is sent back to end user's browser based on the prompt that was received. This course is designed to provide practical, real-world skills by walking through each component of the architecture, ensuring that learners not only understand the concepts but also apply them directly in a cloud environment.\nOn the AWS side, you will gain experience working with several important services, including AWS IAM for securing resources, AWS CloudFront for deploying the web app we create globally at scale, API Gateway to be able to execute AWS Lambda function via a public end point used in S3 web form and AWS CloudWatch for monitoring and logging the data sent back & forth to Lambda. The AWS Lambda interacts with AWS Bedrock service and sends prompts to LLM/FM and obtain Generative response for the user to view on the browser based on prompt sent. These services are essential for building secure, scalable, and reliable applications in the cloud. In this course we curate prompt for user to send 3 Ingredients and send back a recipe idea generated by Foundation Model (FM/LLM - Amazon - Titan) back to user browser.\nBy the end of this course, you will have built a working, scalable AI based Web Application, gained insights into cloud-native architectures, and acquired hands-on experience that can be directly applied to real-world projects or professional roles.\nThis course is suitable for Entry Level budding Cloud Engineers who are looking to build AWS development skills, looking to work on Real Life project and wanting to add one to their resume. It will help them be more confident when interviewing, since they will work hands-on in this course. This course will also help mid level Cloud Engineers expose themselves to latest and fastest growing Technology area of AI, Foundation Models and their Applications. It will also help Product Owners, Product Mangers, Scrum Masters and Technology Leaders looking to get a hands-on experience of building an End to End Web Browser based Application that leverages Generative power of Foundation Model/LLM provided by AWS Bedrock.",
      "target_audience": [
        "Beginner Budding Cloud Engineers looking to build AWS skills and add to their Resumes",
        "Beginner Budding Cloud Engineers looking to build AWS Bedrock skills to make headway to learn building AI Apps",
        "Mid Level to Sr. Cloud Engineers to foray into Bedrock and build End to End POC type AI application",
        "Product Owners and Product Managers wanting to know details on what goes in to build Cloud Native AI app using AWS and help them brainstorm for future use cases",
        "Technology Leaders looking to get hands-on and know more of issues/efforts/potential of building Cloud Native AWS based End to End AI Application"
      ]
    },
    {
      "title": "DeepSeek AI Mastery: From Basics to Advanced Applications",
      "url": "https://www.udemy.com/course/deepseek-ai-mastery/",
      "bio": "Build Real-World Applications with deepseek AI, LangChain, and AI Agents",
      "objectives": [
        "Learn to integrate DeepSeek AI APIs to build powerful and scalable AI applications effortlessly.",
        "Understand the fundamentals of Retrieval-Augmented Generation (RAG) and implement document-based Q&A systems.",
        "Create and deploy AI agents to automate complex tasks, such as stock market research and data analysis.",
        "Run DeepSeek AI models locally on your own machine and gain hands-on experience with real-world applications."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started with DeepSeek AI": [
          "What is DeepSeek AI? (brief Introduction)",
          "Join the free community",
          "All the code repo's"
        ],
        "Building Your First AI App": [
          "Basic API Integration with DeepSeek",
          "Creating Your First AI Application"
        ],
        "Understanding RAG (Retrieval-Augmented Generation)": [
          "What is RAG and Vector Databases? using them with deepseek and langchain",
          "Building an AI RAG Application (Document Q&A) using deepseek"
        ],
        "AI Agents in deepseek and Langchain": [
          "What are AI Agents and Why Use Them using deepseek and langchain",
          "Building an AI Agent using deepseek: Stock Market Researcher"
        ],
        "Advanced Techniques": [
          "Running DeepSeek Locally",
          "More lessons incoming about Janus Pro (Image model by deepseek)"
        ]
      },
      "requirements": [
        "Basic programming knowledge is helpful but not mandatory.",
        "Familiarity with Python and REST APIs is recommended.",
        "Willingness to follow along with hands-on projects."
      ],
      "description": "Unlock the power of DeepSeek AI and LangChain to build cutting-edge AI applications! This course is your step-by-step guide to mastering AI development, from basic integrations to advanced AI agents and Retrieval-Augmented Generation (RAG). You’ll gain practical experience in working with some of the most in-demand AI technologies today.\nIn this course, you will:\nLearn how to integrate the DeepSeek AI API and create your first AI-powered application.\nUnderstand RAG (Retrieval-Augmented Generation) and implement document Q&A systems.\nBuild practical, real-world projects like an AI Agent Stock Market Researcher using LangChain.\nExplore how to run DeepSeek models locally and gain hands-on experience with advanced techniques.\nWhether you're a developer, data enthusiast, or entrepreneur, this course is designed to be beginner-friendly while offering practical insights into building state-of-the-art AI applications. By the end of this course, you’ll be equipped with the skills to design, build, and deploy intelligent applications that solve real-world problems.\nThe course is packed with hands-on projects, clear explanations, and step-by-step guidance to ensure you build confidence and expertise in AI development. Plus, as AI technology evolves, you’ll benefit from regular updates, new projects, and added content to stay ahead in the field.\nJoin now and start your journey to mastering AI development! Get ready to build smarter, faster, and more innovative AI solutions today!",
      "target_audience": [
        "Developers curious about building AI applications without training large models.",
        "Data enthusiasts eager to learn about RAG (Retrieval-Augmented Generation) and AI agents.",
        "People who want to learn about Deepseek AI",
        "Entrepreneurs and tech professionals looking to leverage DeepSeek AI for business use cases.",
        "Anyone with an interest in practical AI who wants a step-by-step, beginner-friendly approach."
      ]
    },
    {
      "title": "Learn Practical Approach to OpenCV using Kotlin",
      "url": "https://www.udemy.com/course/learn-practical-approach-to-opencv-using-kotlin/",
      "bio": "Less theory but more code to build complex OpenCV applications",
      "objectives": [
        "Become proficient enough to do complex opencv operation on the image",
        "Able to understand and use core API of the OpenCV library",
        "Apply image processing concepts to create better image using OpenCV",
        "Sharing OpenCV code across different platform as library dependency",
        "Learn TDD and clean coding approach in OpenCV application",
        "Applying design pattern to known coding problems while building apps",
        "Practical examples of the commonly used features in popular apps mobile or desktop",
        "Developing complex feature in Android app that uses OpenCV"
      ],
      "course_content": {},
      "requirements": [
        "Object Oriented Programming knowledge",
        "Understanding of Kotlin or Java program code",
        "Laptop",
        "Opencv library",
        "Android phone (Optional) for some project",
        "Basic knowledge of Algebra and Geometry"
      ],
      "description": "OpenCV is a widely used library for developing complex applications on various devices like Mobile, Desktop, Raspberry Pi, backend applications, etc.\n\n\nThere are many courses and books available that provide a good theoretical understanding of image processing concepts. If you are someone who has no understanding of image processing, I would suggest you take some basic level course or book to gain a high-level understanding to better understand this course.\n\n\nThis course is primarily designed for someone who wants to see the power of the OpenCV library and also to learn by coding. In this course, we will first learn the basic concept and later implement the code to visually understand the same using code.\n\n\nIf you are a beginner or intermediate-level learner, you will learn a lot for sure. There are many skills you will learn as you progress with the course. Skills like TDD, clean coding, identifying the problem, and using appropriate design patterns to simplify the code which is something many developers in big MNCs give very less emphasis on.\n\n\nIf you are an expert-level learner, It will be a refreshing course for you.\n\n\nIn this course, we have covered complex-level application that uses the advanced-level concept to achieve interesting results.\n\n\nHappy learning !!",
      "target_audience": [
        "Someone who has an interest in learning about Image processing.",
        "Someone who wants to explore the power of the OpenCV library.",
        "Someone who wants to learn and build OpenCV complex functions."
      ]
    },
    {
      "title": "Operational Excellence for Software Engineers",
      "url": "https://www.udemy.com/course/operational-excellence-for-software-engineers/",
      "bio": "Master the mindset, tools, and strategies behind building reliable, scalable, and cost-efficient systems.",
      "objectives": [
        "Define a framework for continuous improvement and apply it across operational workflows",
        "Establish measurable operational targets and track SLAs using relevant KPIs",
        "Identify common availability issues and implement mitigation strategies",
        "Minimize the impact and duration of operational incidents",
        "Optimize system performance using proven engineering techniques and design patterns",
        "Forecast capacity and Manage budget to ensure cost-effective operations",
        "Maintain reliable delivery pipelines through structured update and deployment practices",
        "Design dashboards that provide actionable insights and enhance operational visibility"
      ],
      "course_content": {},
      "requirements": [
        "Basic Software Engineering Experience, although we won't be coding",
        "Basic Understanding of DevOps concepts, like: CI/CD Pipeline, Testing, Deployment",
        "Basic Cloud Knowledge, like: Auto Scaling, API Gateway",
        "Familiarity with Production Systems: Exposure to live systems, deployments, and incident handling (even at a junior level) is important for context."
      ],
      "description": "Operational Excellence is the backbone of resilient, scalable, and cost-effective software systems. This course is designed for software engineers, DevOps professionals, and technical leaders who want to elevate their operational mindset and take full ownership of system health. Through a structured, hands-on approach, learners will explore the methodology of continuous improvement, define and track operational targets like SLAs, and learn to identify and mitigate availability issues before they escalate.\nStudents will gain practical skills to minimize the impact of incidents using deployment strategies, rollback mechanisms, and regional isolation techniques. The course dives deep into performance optimization, covering advanced engineering practices such as caching, parallelism, and request hedging. Budget and cost management are treated as first-class concerns, with strategies for forecasting demand, planning capacity, and reducing operational expenses.\nIn addition, learners will master delivery pipeline hygiene and update methodologies, ensuring reliable deployments and long-term system stability. The course also teaches how to design dashboards that transform observability into actionable insight—empowering teams to monitor, respond, and improve with confidence.\nWhether you're scaling infrastructure, responding to outages, or refining deployment workflows, this course will help you build systems that are not only reliable and performant, but also aligned with business goals and engineering best practices.",
      "target_audience": [
        "Software Development Engineers (SDEs) who want take ownership of system reliability, performance, and cost, and level up their operational thinking",
        "DevOps Engineers looking to expand their impact beyond tooling into strategic operational practices",
        "Site Reliability Engineers (SREs) aiming to strengthen their approach to incident response and system resilience",
        "Architects and Software Engineering Managers (SDMs) seeking a structured framework for improving system health and delivery velocity"
      ]
    },
    {
      "title": "Java Hyper Sql Database(HSQLDB) Practical Training",
      "url": "https://www.udemy.com/course/java-hyper-sql-databasehsqldb-practical-training/",
      "bio": "Focused on Real World Practice",
      "objectives": [
        "Java HSQLDB Practice on Project",
        "Java HSQLDB on Eclipse DataSource Explorer",
        "Java HSQLDB using Interface",
        "Java HSQLDB on Eclipse"
      ],
      "course_content": {
        "Java HSQLDB Practical Training": [
          "Part 1",
          "Part 2",
          "Part 3",
          "Part 4",
          "Part 5",
          "Part 6",
          "Part 7"
        ]
      },
      "requirements": [
        "Basic Knowledge Of Java"
      ],
      "description": "All my courses are focused on real world live code writing.\nWhile you watch you will feel like you are writing the code.\nYou need basic knowledge of java for the course.\nSo if you think you forget basic concepts, you can refresh your knowledge\nbefore wathing my courses.\nI highly recommend you after watching 1 or 2 times, you should start writing your own code.\nBecause the best way to learn is writing your own code. Using ECLIPSE IDE  tools by yourself.\nIn this course you will learn using HSQLDB (hyper sql database). We use;\nEclipse IDE\nDatasource Viewer\nDebugging\nError Handling\nJava interfaces, classes, database access objects and crud operations.\nYou will realize tips. You will see how interfaces are important for even if a tiny program and make things easier and\nmanagable !\nYou will learn create shema, create database, create table and different ways to connect hsqldb.\nConnection url and using type file.\nYou will learn how java objects can be used for database operations.\nYou will learn basic sql statements. (insert, delete, update and get)\nYou will learn how to get counterparts of resultset java types like char > string, timestamp > timestamp\nYou will learn how to debug in eclipse.",
      "target_audience": [
        "Everyone"
      ]
    },
    {
      "title": "Linux Kernel Memory Management",
      "url": "https://www.udemy.com/course/linux-kernel-memory-management/",
      "bio": "Explore how the Linux kernel allocates, manages, and protects system memory.",
      "objectives": [
        "Understand how memory is structured and managed in the Linux kernel.",
        "Learn how Linux handles virtual memory, paging, segmentation, and physical memory mapping.",
        "Explore important kernel data structures like struct page, vm_area_struct, and memory zones",
        "Trace how system calls and user-space memory requests are handled in the kernel."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Page": [
          "Page",
          "Page Usage"
        ],
        "Process Address Space": [
          "Process Address Space",
          "Virtual Memory Area",
          "Page Table"
        ],
        "Virtual Memory": [
          "Virtual Memory"
        ],
        "Memory Descriptor": [
          "Memory Descriptor",
          "mm_struct continue",
          "Allocation and Destroy of memory descriptor"
        ],
        "Virtual Memory Areas": [
          "Virtual Memory Area",
          "VMA Operations",
          "VMA ops Continue"
        ],
        "Kernel Segment": [
          "Kernel Segment"
        ],
        "Page Management": [
          "Page Structure",
          "Page Allocation"
        ],
        "Zones": [
          "Zones in Linux Kernel"
        ],
        "Memory Allocation in Linux Kernel": [
          "Kmalloc",
          "Vmalloc"
        ]
      },
      "requirements": [
        "Basic knowledge of C programming.",
        "No prior experience with kernel development is required, but it’s a bonus!"
      ],
      "description": "Behind every running application, service, or container in Linux, there's a powerful memory management system ensuring that resources are allocated efficiently, processes are isolated securely, and performance is optimized. In this course, we take you deep into the world of Linux Kernel Memory Management, exploring how the operating system handles memory under the hood—from basic paging to advanced allocation strategies.\nThis course is designed to demystify one of the most complex and critical areas of Linux internals. You'll begin by understanding how physical and virtual memory are structured in Linux. From there, we'll examine key kernel components such as memory zones, page tables, slab and slub allocators, the buddy system, and how the kernel efficiently maps, allocates, and tracks memory using structures like vm_area_struct and struct page.\nYou'll get hands-on with real-world tools like /proc, vmstat, top, and kmemleak, and you’ll learn to analyze memory-related issues, monitor usage, and debug potential problems. We also cover how system calls interact with memory and how memory is shared, protected, and reclaimed.\nWhether you're an aspiring kernel developer, systems programmer, or someone who simply wants to go beyond the surface of Linux, this course will give you the skills and insights to truly master memory at the kernel level.",
      "target_audience": [
        "System programmers who want to understand how the kernel handles memory under the hood.",
        "Computer science students looking to deepen their OS internals knowledge"
      ]
    },
    {
      "title": "Sistemas embarcados profissionais - imersão ao assunto",
      "url": "https://www.udemy.com/course/sistemas-embarcados-profissionais-imersao-ao-assunto/",
      "bio": "Conceitos e fundamentos para a ir de um entusiasta ao início da carreira profissional no segmento",
      "objectives": [
        "Conhecer como se desenvolve sistemas embarcados profissionalmente",
        "Fazer a transição entre um entusiasta e um profissional na área",
        "Pensar mais criteriosamente nos itens que se relacionam com um sistema embarcado",
        "Desenvolver softwares de sistemas embarcados muito mais confiáveis e performáticos"
      ],
      "course_content": {
        "Utilização do Arduino, microcontroladores e inputs e outputs": [
          "Utilização do Arduino, microcontroladores e inputs e outputs"
        ],
        "Interrupções e timers": [
          "Interrupções e timers"
        ],
        "Relação complexidade x performance e protocolos de comunicação": [
          "Relação complexidade x performance e protocolos de comunicação"
        ],
        "Padrão de codificação, macros/defines, modularização de código e condicionais": [
          "Padrão de codificação, macros/defines, modularização de código e condicionais"
        ],
        "Máquinas de estados e variáveis (globais e locais)": [
          "Máquinas de estados e variáveis (globais e locais)"
        ],
        "Escolha de um microcontrolador, modalidades de software embarcado e dicas": [
          "Escolha de um microcontrolador, modalidades de software embarcado e dicas"
        ]
      },
      "requirements": [
        "Ter conhecimento básico de eletrônica",
        "Ter conhecimento básico de programação (preferencialmente em C)",
        "Desejável: ter tido alguma experiência com Arduino"
      ],
      "description": "Neste curso, você terá a imersão necessária para sair do nível de entusiasta em eletrônica e sistemas embarcados em direção a uma carreira na área. Ou seja, você aprenderá conceitos e fundamentos importantes aos profissionais da área de sistemas embarcados, permitindo o desenvolvimento de software embarcado de maneira mais profissional.\nVocê também será capaz de escrever software embarcado de forma a se extrair o máximo possível de performance de um microcontrolador, algo essencial em se tratando de desenvolvimento de produtos que envolvam sistemas embarcados.",
      "target_audience": [
        "Pessoas que ainda não trabalham profissionalmente com desenvolvimento de sistemas embarcados",
        "Estudantes de engenharia elétrica, eletrônica e computação"
      ]
    },
    {
      "title": "Becoming an AI Engineer with LLM Application Development",
      "url": "https://www.udemy.com/course/becoming-an-ai-engineer-with-llm-application-development/",
      "bio": "A concise guide for AI engineers to develop and deploy LLM-powered applications",
      "objectives": [
        "Learn the fundamental of LLM and generative AI",
        "Learn the fundamental of API development",
        "Learn the fundamental of Gradio framework",
        "Develop your own AI chatbot in a day",
        "Deploy your solution with Hugging Face Space",
        "Automate your application development and deployment workflow to improve software quality and delivery speed"
      ],
      "course_content": {
        "Chapter 1 - Introduction to Generative AI": [
          "Course Overview",
          "What is artificial intelligence (AI)?",
          "What is generative AI (GenAI)?",
          "What are large-language models (LLMs)?",
          "What is prompt engineering?",
          "What is application programming interface (API)?",
          "What is LangChain?",
          "Supplement Materials",
          "Course Quiz - Introduction to Generative AI"
        ],
        "Chapter 2 - Environment Set-up / Generative AI Platform Tours": [
          "Python Environment Set-up",
          "Visual Studio Code Set-up",
          "GitHub Tour",
          "Hugging Face Tour",
          "OpenAI API Platform Tour",
          "Supplement Materials"
        ],
        "Chapter 3 - Develop your API for your generative AI applications": [
          "What are HTTP and REST API?",
          "API development and deployment workflow",
          "Architecting your API backend application with FastAPI",
          "Demonstration - Architecting your FastAPI Applications",
          "Python API development with FastAPI",
          "Containerize your API application with Docker",
          "Deploying your API with Hugging Face Space",
          "Course Exam - Develop your API for your generative AI applications"
        ],
        "Chapter 4 - Develop and Deploy with your Front-end Interface": [
          "Introduction to Gradio and develop your first application",
          "Demonstration: Deploy your first Gradio application",
          "Course Quiz - Develop and Deploy with your Front-end Interface"
        ],
        "Chapter 5 - Streamline API Delivery with Automated Test Pipeline": [
          "What is DevOps?",
          "What is software testing?",
          "Introduction to Pytest and Software Testing Frameworks",
          "Demonstration - Pytest for Generative AI Applications",
          "Demonstration - Automated Test Workflow with GitHub Actions"
        ],
        "Chapter 6 - Course Summary / Advanced Topics": [
          "What is domain-adaptation?",
          "What is retrieval-augmented generation (RAG)?",
          "Course Recap",
          "Future Learning",
          "Final Exam - Becoming an AI Engineer with LLM Application Development",
          "Build your own chatbot with open-source model on Hugging Face"
        ]
      },
      "requirements": [
        "Passion for AI",
        "Computer (MacOS, Linux, or Windows)",
        "Stable Network Connection",
        "Python Installed - Recommended version: 3.9 or 3.10",
        "Visual Studio Code Installed",
        "Hugging Face Pro Subscription",
        "OpenAI API Subscription",
        "GitHub Account (Free or Pro)"
      ],
      "description": "Becoming an AI Engineer with LLM Application Development\n| A concise guide for AI engineers to develop and deploy generative AI applications |\n\n\nWhat is generative AI? Why you should be a part of this revolution?\nGenerative AI is a truly transformative technology that allows us to engineer and deploy various AI applications like chatbots and other automation workflows without costly upfront investments. Therefore, there is an emerging trend that many companies, even if not within the technology domains like finance and health care, are trying to adopt AI applications like ChatGPT. Here is what an AI engineer could do to help these organizations develop and deploy a valuable and cost-effective AI application using various open or closed-source models. If you want to be a part of this revolution, this course is right for you to learn the fundamental concepts and practical skills to become an AI engineer nowadays.\n\n\nWhat can I learn from this course?\n- Chapter 1 - Introduction to Generative AI\n- Chapter 2 - Environment Set-up / Generative AI Platform Tours\n- Chapter 3 - Develop your API endpoint for your generative AI applications\n- Chapter 4 - Develop and Deploy with your Front-end Interface\n- Chapter 5 - Streamline API Delivery with Automated Test and Deployment Pipeline\n- Chapter 6 - Course Summary / Final Exam\n\nWhat can I gain from this course?\nThis course has a wide range of materials to help you become familiar with the concepts and skills to design, develop, and deploy an AI application; those resources include:\n1. On-demand lecture videos\n2. Supplement learning resources to keep up to date with the latest trend\n3. Open-source codebase to help you kick-start your AI engineer journey\n4. Various online quizzes to help you familiarize yourself with the contents and the skills\n5. Q&A with the instructor\n6. Programming test with hands-on online practice\n\n\nWho is my instructor?\nMark is an entrepreneur and computer science student at the University of London who lives in Taiwan. He founded Mindify AI, a company aimed at helping software engineers learn new codebases faster with its flagship product, Mindify Chat. Mark is also involved in AI and quantum AI research, working on innovative projects, including utility-scale quantum generative AI models for the Google Quantum Application XPRIZE. In addition to his business ventures, Mark creates Notion templates and Udemy courses, generating side income. Mark's recent achievements include developing algorithms, leading research projects, starting a new company, and gaining traction for Mindify AI. He is dedicated to making his products profitable and advancing his research and business efforts.",
      "target_audience": [
        "Professional software developers who are new to generative AI application development",
        "Computer science students who are interested in generative AI application development",
        "Web developers who is seeking to build an generative AI as a side project",
        "Python developers who is seeking to build an generative AI as a side project"
      ]
    },
    {
      "title": "FastAPI for Absolute Beginners",
      "url": "https://www.udemy.com/course/fastapi-for-absolute-beginners/",
      "bio": "Build API with FastAPI that you can sell, use as a backend for WordPress SaaS, or power online pro tools.",
      "objectives": [
        "What an API is and how it works (with real-life analogies)",
        "Setting up Python and VS Code from scratch",
        "Creating virtual environments for cleaner development",
        "Installing and managing FastAPI packages and dependencies",
        "Building your first API using FastAPI",
        "Adding functionality with dynamic endpoints",
        "Structuring your app with libraries, modules, and classes",
        "Handling JSON responses and data validation with Pydantic",
        "Securing your APIs using CORS and authentication techniques",
        "Optimizing your APIs using caching, async calls, and background tasks",
        "Documenting APIs using Swagger and protecting your docs",
        "Using external tools to test your APIs professionally"
      ],
      "course_content": {
        "Introduction to FastAPI": [
          "Build Robust API from Scratch with FastAPI for Beginners (Promo)",
          "FastAPI Concepts and Basics",
          "What is API and Resources?"
        ],
        "Download and Access Softwares": [
          "Install Python and VSC",
          "Access to ChatGPT"
        ],
        "Fundamental of FastAPI": [
          "Activate Virtual Environment",
          "Installing Packages & Dependency"
        ],
        "Building First API with FastAPI": [
          "Build First API with Ease",
          "Creating Endpoints (Functionality)",
          "Making API Dynamic"
        ],
        "Library, Modules, and Classes": [
          "Library, Modules, and Classes",
          "Fastapi and JsonResponse",
          "Pydantic and Basemodel, Field"
        ],
        "API Security and Measures": [
          "CORS Method"
        ],
        "3 API Optimization Methods": [
          "Synchronous and Asynchronous",
          "Caching",
          "Background Tasks"
        ],
        "Swagger Documentation & Testing": [
          "Swagger Documentation in FastAPI",
          "Adding Tags and Descriptions for Endpoints",
          "Protecting Swagger Documentation with Authentication",
          "Role Play for this Course",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic knowledge of Python syntax (variables, functions, loops)",
        "A computer with internet access",
        "Willingness to learn and try hands-on code",
        "No prior backend or API experience needed"
      ],
      "description": "Unlock the Power of FastAPI – The Fastest Way to Build Modern APIs from Scratch\nAre you ready to step into the world of modern web development and build lightning-fast APIs with Python? This course is your practical, no-fluff gateway to learning FastAPI — the high-performance web framework that’s transforming how APIs are built.\nFastAPI for Absolute Beginners is designed for complete newcomers to backend development or anyone curious about how modern APIs work. Whether you’re a frontend developer wanting to go full stack, a student preparing for internships, or a self-taught programmer ready to level up — this course gives you everything you need to start strong.\nWith highly focused video lessons, this course breaks down complex backend concepts into easy, actionable steps. From installing Python and your development environment to creating real, dynamic, and secure API endpoints — every lesson builds toward helping you become confident with FastAPI.\nYou’ll learn how to:\nSet up your environment the right way\nUnderstand what an API really is\nBuild your first API project\nAdd endpoints, route logic, and handle requests\nIntegrate key tools like Swagger, JSONResponse, and Pydantic\nSecure your APIs and optimize them for performance\nBy the end of the course, you’ll go from zero experience to deploying feature-rich APIs with authentication, documentation, background tasks, and more.\nBut what happens if you don’t learn this now?\nYou’ll miss out on one of the most in-demand backend skills in today’s job market. While others are catching up, you'll already be ahead — building, testing, and scaling production-ready APIs. FastAPI is becoming the framework of choice for startups, data science teams, and modern backend services. Learning it now gives you a serious edge.\nThis course doesn't just teach code — it transforms how you think about APIs. You’ll learn to design like a backend engineer, reason through real-world scenarios, and write cleaner, faster code that scales.\nJoin today and start building your first API.",
      "target_audience": [
        "Complete beginners curious about backend development",
        "Frontend developers wanting to learn API design",
        "Students or interns looking to build job-ready skills",
        "Developers from other stacks (Node, Java, PHP) transitioning to Python",
        "Anyone interested in learning FastAPI from the ground up"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/aws-for-intermediate/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Groundwater Modeling Using Visual MODFLOW Flex-Level2",
      "url": "https://www.udemy.com/course/groundwater-modeling-using-visual-modflow-flex-level2/",
      "bio": "Groundwater Modeling: Seawater Intrusion, Density-Dependent Flow, and Dewatering with Visual MODFLOW Flex",
      "objectives": [
        "Understand the principles of groundwater models and their applications in real-world scenarios.",
        "Learn the fundamentals of density-dependent flow and how it affects groundwater movement.",
        "Gain hands-on experience using Visual MODFLOW Flex for groundwater modeling.",
        "Develop skills to simulate and analyze models such as seawater intrusion, the Elder problem, and dewatering models."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fundamentals and Introduction to VMOD FLEX": [
          "Principles of GW models",
          "Fundamentals of density dependent flow",
          "Introduction to Visual Modflow Flex"
        ],
        "Applications VMOD Flex": [
          "Exercise 1: Seawater intrusion",
          "Exercise 2: Elder problem",
          "Exercise 3: Deawatering Model",
          "References"
        ]
      },
      "requirements": [
        "No prior knowledge is required.",
        "Basic familiarity with groundwater concepts is helpful but not mandatory.",
        "A computer with Visual MODFLOW Flex installed (trial or full version)."
      ],
      "description": "This course is a continuation of my Udemy course \"Applied Groundwater Modeling Using Visual MODFLOW Flex.\" If you have completed that course or have a basic understanding of groundwater modeling, this Level 2 course will take your skills to an advanced level.\nGroundwater modeling is essential for understanding and managing water resources, and this course focuses on density-dependent flow—a critical factor in simulations considering variations in water density (function of concentration). Using Visual MODFLOW Flex, you will learn how to build and analyze models that account for density-driven groundwater movement, which is crucial for coastal aquifers, contaminant transport, and engineering applications.\nThroughout the course, you will engage in three hands-on exercises:\n-Seawater intrusion modeling – Understand how saltwater moves into freshwater aquifers and how to mitigate its impact.\n-Elder problem simulation – Explore fundamental density-driven flow concepts through a classic benchmark problem.\n-Dewatering modeling – Learn how to simulate groundwater extraction for construction and mining projects.\nBy the end of this course, you will have practical expertise in solving real-world groundwater challenges using one of the most advanced modeling tools available. Whether you are a hydrogeologist, engineer, researcher, or student, this course will equip you with valuable skills to advance your groundwater modeling knowledge.",
      "target_audience": [
        "Students, researchers, and professionals in hydrogeology, environmental science, and water resources.",
        "Engineers and consultants working on groundwater modeling projects.",
        "Anyone interested in learning advanced groundwater modeling techniques using Visual MODFLOW Flex."
      ]
    },
    {
      "title": "【ひぐま流】ソフトウェア開発入門講座～要件定義や設計などのソフトウェア開発工程を幅広く学び、成長するための土台を築こう～",
      "url": "https://www.udemy.com/course/higuma_software_entry/",
      "bio": "社会人としての基礎スキルからIT基礎知識、ITシステム開発工程(提案・要件定義・設計・実装・テスト・本番移行・保守運用)まで幅広く学べるソフトウェア開発の入門講座！本講座で基礎を身に着け、実践での成長を加速させよう！",
      "objectives": [
        "セルフマネジメント",
        "報告・連絡・相談、議事録、会議などのコミュニケーション",
        "ITシステム開発の全体像",
        "提案フェーズの進め方",
        "要件定義",
        "良い設計・悪い設計",
        "DB設計(DBの正規化・テーブル設計書の作成・ER図)",
        "画面設計(画面遷移図・画面定義書・権限管理)",
        "バッチ設計(ジョブネット設計・バッチ処理定義書作成・I/F設計)",
        "帳票設計(帳票定義書作成)",
        "プログラミングの基本的な考え方",
        "オブジェクト指向プログラミングの基本的な考え方",
        "SQL(特にSELECT文)",
        "Javaからデータベースにアクセスする方法(JDBCドライバー)",
        "簡単なWebアプリケーションの作成(Spring)",
        "ソフトウェアテスト設計(同値分割・境界値分析・テスト観点整理・テスト仕様書作成)",
        "ソフトウェアテストの自動化(JUnit/DBUnit)",
        "移行の全体像(移行計画・移行手順書・移行リハーサル)",
        "保守・運用の主要業務とポイント",
        "DBチューニングの概要"
      ],
      "course_content": {
        "はじめに": [
          "本講座の説明"
        ],
        "SIerの概要": [
          "SIerのビジネスモデル",
          "SIerの業務",
          "SIerの将来性と顧客からの期待"
        ],
        "基礎スキル": [
          "セルフマネジメントの目的",
          "タスク管理",
          "品質管理",
          "作業効率向上",
          "報告・連絡・相談",
          "議事録作成",
          "会議運営のポイント",
          "レビューを受ける側の心構え",
          "目標設定と振り返り",
          "【コラム】自己啓発は有用なのか？",
          "セルフマネジメント まとめ"
        ],
        "【知識】コンピュータの仕組み": [
          "知識編 導入",
          "コンピュータ基礎 概要",
          "コンピュータ基礎 制御装置と記憶装置",
          "コンピュータ基礎 記憶装置",
          "【コラム】コンピュータの性能",
          "コンピュータ基礎 入力装置と出力装置",
          "【コラム】：ビットとバイトと文字コード",
          "コンピュータ基礎 OS",
          "サーバーの概要",
          "ITシステムの構成",
          "ネットワークの概要",
          "【コラム】TCP/IPを使ったネットワーク(インターネットの通信方式)",
          "コンピュータ基礎 小テスト",
          "コンピュータ基礎 まとめ"
        ],
        "【知識】インターネットの仕組み": [
          "インターネット 概要",
          "セッションとCoocie",
          "HTMLの概要",
          "CSSの概要",
          "インターネット時代の情報リテラシー",
          "インターネット 小テスト"
        ],
        "【知識】最近のIT用語": [
          "本章の進め方",
          "AIの概要",
          "ChatGPTなどの生成AI",
          "ブロックチェーン",
          "IoT",
          "API",
          "クラウドコンピューティング",
          "データ連携基盤",
          "IT用語 小テスト"
        ],
        "【知識】セキュリティ": [
          "ゼロトラスト",
          "システム的なセキュリティ対策",
          "人起因のセキュリティ対策",
          "情報漏洩対策",
          "効果の小さい(無意味な)情報漏洩対策",
          "IT・データ活用時のモラル",
          "セキュリティ 小テスト",
          "まとめ",
          "知識編 まとめ"
        ],
        "【概論】ITシステム開発工程の全体像": [
          "本章の全体像と進め方",
          "開発スタイル",
          "アジャイル",
          "アジャイル推進FW",
          "【コラム】内製と外注",
          "契約形態",
          "本章のまとめ"
        ],
        "【提案】傾聴の重要性と提案": [
          "本章の概要と進め方",
          "傾聴の定義や重要性",
          "傾聴の範囲",
          "傾聴マインド：相手がどう見ているか？",
          "傾聴マインド：肯定的意図を探る",
          "傾聴マインド：判断しない",
          "傾聴スキル：質問",
          "質問以外の傾聴スキル",
          "シナリオ作成",
          "見積り",
          "提案書作成",
          "本章のまとめ"
        ],
        "【要件定義】事業要件定義": [
          "要件定義編の進め方",
          "事業要件定義の全体像と進め方",
          "ゴール分析",
          "ゴール分析_タスクの詳細化",
          "ステークホルダー分析",
          "事業要件定義のまとめ"
        ]
      },
      "requirements": [
        "ハンズオンではWindows PCで操作説明します(JavaやMySQL Workbenchを利用します)"
      ],
      "description": "本講座では要件定義～本番移行、保守運用まで幅広く経験した講師が、IT技術者なら必須のスキル・知識を厳選して体系的に解説します。\n\nIT技術は非常に多岐に渡るため、本講座を受講したからといって現場で即戦力で活躍できるわけではありません。\nただ、知識があれば今まで見えなかったこと・気づけなかったことを知覚できるようになります。\n今まで気が付けなかった先輩の工夫を参考にしたり、仮説を立てて自分で試行錯誤したりすることで、ITエンジニアとしての成長を加速することができます。\n本講座は、前述のような「成長の土台」を築くことを目的に設計しています。\n\n\n本講座では次のことを学べます。\nチームで働く上での基本スキル(セルフマネジメント・議事録・会議運営など)\nIT基礎知識(コンピュータ基礎・インターネット・IT用語・セキュリティ)\nITシステム開発の全体像\n提案(傾聴・見積など)\n事業要件定義(ゴール分析・ステークホルダー分析)\n業務要件定義(CATWOE分析・XYZ分析など)\nシステム要件定義(非機能要求分析・運用設計など)\nデータベース設計(正規化・テーブル定義書作成など)\n画面設計(画面遷移図・画面定義書など)\nバッチ設計(ジョブ設計・バッチ処理定義書など)\n帳票設計\nテスト(同値分割・境界値分析・JUnit・DBUnitなど)\n移行(移行計画・移行リハーサルなど)\n保守・運用業務の概要\nデータベース パフォーマンスチューニング\n\n\nITシステムは、最近は使わない企業は無いくらい重要な企業インフラとなっています。\n本講座が、日本企業を陰ながら支えてくださっているIT技術者の皆様にとって少しでも役に立ち、\n延いては日本社会の発展にほんの少しでも貢献できれば幸いです。",
      "target_audience": [
        "(特に業務アプリを作成する)若手・新人ITエンジニア",
        "ITエンジニアと対話したい管理職(プロジェクトマネージャー・プロダクトマネージャーなど)",
        "SIerと対話するための基礎知識を養いたい方(情報システム部・ITシステム開発に興味のあるビジネスパーソン)",
        "新入社員/若手社員/中堅社員/管理職"
      ]
    },
    {
      "title": "Automating ML Pipelines for Song Recommendation System",
      "url": "https://www.udemy.com/course/automating-ml-pipelines-for-song-recommendation-system/",
      "bio": "Automate Song Recommendations with Docker, MLFlow, and CI/CD Practices for Machine Learning Algorithms.",
      "objectives": [
        "Understand the Math Behind ML Algorithms: You will learn the mathematical concepts that underlie popular machine learning algorithms.",
        "Implement Machine Learning Algorithms: You will gain hands-on experience in coding and applying various machine learning algorithms.",
        "Design and Build MLFlow Tracking: You will learn how to use MLFlow for tracking and managing machine learning experiments effectively.",
        "Implement Microservices with Docker: You will learn how to create and manage microservices for automating machine learning pipelines using Docker.",
        "Automate Model Training and Evaluation: You will learn to use Airflow triggers to automate the process of training and evaluating machine learning models.",
        "Set Up Git CI/CD for a Song Recommender App: You will learn how to implement CI/CD for a song recommendation web app."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Machine Learning - Math Intuition": [
          "Math Behind Collaborative Filtering",
          "Math Behind KNN (Euclidean Distance)",
          "Math Behind Naive Bayes (Bayes Theorem)",
          "Math Behind TF and IDF",
          "Math Behind Cosine Similarity",
          "Evaluation Metric - MSE",
          "Math Behind - K-Means Clustering (Unsupervised Learning)",
          "Math Behind Principal Component Analysis",
          "Math Behind Pearson Correlation",
          "Math Behind - T-Statistic Test",
          "Evaluation Metrics - Classification Models"
        ],
        "ML Experimentation - Supervised & Unsupervised Learning": [
          "Module Artifacts",
          "Project Env Setup (Conda)",
          "Import required libraries",
          "Understanding the features in data",
          "Data Preprocessing",
          "Feature Engineering",
          "Pearson Correlation Analysis",
          "T-Test Statistics",
          "Collaborative Filtering - User Genre Matrix",
          "Creation of user similarity network visualization (Cosine Similarity)",
          "Songs Recommender Engine Model - Collaborative Filtering",
          "Fetch Songs Recommendation - Collaborative Filtering Model",
          "KNN and Naive Bayes Model Pipeline",
          "Model Hyperparameter Tuning",
          "Best Estimator Recommendation",
          "K-Means Clustering and PCA"
        ],
        "Airflow - Automate Collaborative Filtering model training and deployment": [
          "Module Artifacts",
          "Code Environment Setup",
          "MLFlow Lifecycle and Commands",
          "Airflow Lifecycle and Commands",
          "DAG Setup - Data Splitting, User Genre Matrix Generation, Training & Evaluation",
          "train_and_deploy.py W/O Airflow",
          "Optional - DAG Assets Validation"
        ],
        "Building Microservices for MLFlow and Airflow using Docker": [
          "docker-compose.yml Lifecycle (Theory)",
          "Dockerfile (Python and Airflow)",
          "Microservices - docker-compose.yml",
          "Building Docker Image for Python",
          "Building Docker Image for Airflow"
        ],
        "ML Pipeline Orchestration - Airflow Triggers and MLFlow Experiments": [
          "Build and Compose up the Microservices",
          "Orchestrating the ML Job Triggers and Logs"
        ],
        "Song Recommender System Web App": [
          "Import required modules",
          "Load Pkl Model",
          "Fallback condition for recommender system",
          "Load and Fetch cache Data",
          "Building UI for song recommender system",
          "Filter and Join recommendations",
          "Testing the recommender app in localhost environment",
          "Push the codebase to Github repository",
          "Deploy recommender app to Streamlit cloud with Github CI/CD"
        ],
        "Challenges / Takeaways / Homework": [
          "Automating ML Pipeline Song Recommendation: Challenges / Takeaways / Homework",
          "Thank you!",
          "Codebase Artifacts"
        ]
      },
      "requirements": [
        "Basic Knowledge of Python programming, as it will be used for implementing machine learning algorithms and building ML pipeline microservices.",
        "A desire to learn and experiment with machine learning and microservices is encouraged."
      ],
      "description": "Math Behind Machine Learning Algorithms:\nK-Nearest Neighbors (KNN): A method for finding similar songs based on user preferences.\nRandom Forest (RF): An algorithm that combines many decision trees for better predictions.\nPrincipal Component Analysis (PCA): A technique for reducing the number of features while retaining important information.\nK-Means Clustering: A way to group similar songs together based on features.\nCollaborative Filtering: Making recommendations based on user interactions and preferences.\nData Processing Techniques:\nFeature Engineering (Feature Importance using Random Forest): Feature importance analysis and creating new features from existing data to improve model accuracy.\nData Pre-processing (Missing Data Imputation): Cleaning and preparing data for analysis.\nEvaluation and Tuning:\nHyperparameter Tuning (Collaborative Filtering, KNN, Naive Bayes Classifier): Adjusting the settings of algorithms to improve performance.\nEvaluation Metrics (Precision, Recall, ROC, Accuracy, MSE): Methods to measure how well the model performs.\nData Science Fundamentals:\nTF-IDF (Term Frequency and Inverse Document Frequency): A technique for analyzing the importance of words in song lyrics.\nCorrelation Analysis: Understanding how different features relate to each other.\nT-Test: A statistical method for comparing groups of data.\nAutomation Tools:\nBuilding Microservices using Docker: Use containers to run applications consistently across different environments.\nAirflow: Automate workflows and schedule tasks for running ML models.\nMLFlow: Manage and track machine learning experiments and models effectively.\nBy the end of the course, you will know how to build and automate the training, evaluation, and deployment of an ML model for a song recommendation system using these tools, libraries and techniques.",
      "target_audience": [
        "Students pursuing studies in data science, computer science, or related disciplines who want to enhance their practical skills in machine learning and automation.",
        "Individuals looking to deepen their understanding of machine learning and its applications in real-world scenarios, particularly in recommendation systems.",
        "Programmers interested in expanding their skill set to include machine learning concepts and automation practices using tools like Docker, MLFlow, and Airflow.",
        "Professionals wanting to learn how to build and automate machine learning pipelines and improve their workflow efficiency.",
        "Anyone with a foundational knowledge of machine learning who wants to gain practical experience in implementing algorithms and automating processes.",
        "Individuals looking to enhance their qualifications and job prospects by adding machine learning and automation expertise to their portfolio."
      ]
    },
    {
      "title": "What Is \"LEAN\" or \"AGILE\" Business Analysis?",
      "url": "https://www.udemy.com/course/what-is-lean-or-agile-business-analysis/",
      "bio": "Understanding How Lean Principles Affect Your Requirements Discovery Process in Standard or Agile Software Development",
      "objectives": [],
      "course_content": {
        "How Do Lean Principles Affect the Business Analysis Process?": [
          "Welcome to the Course",
          "Four Philosophies Dominate Current IT Development",
          "Potential Wastes in Business Analysis and Requirements Discovery",
          "Six Lean Principles to Combat Waste in Business Analysis",
          "The Shift Focus from Project to Product in Lean and Agile"
        ],
        "Lean Requirements Are the Prime Deliverable of Lean Business Analysis": [
          "Requirements Constructs in an Agile, Lean Environment",
          "Product Backlogs and Other Requirements Repositories and Kanban Boards",
          "Manage (or Groom) and Seed Product Backlogs",
          "Know When to Do What in a Lean and Agile World"
        ],
        "What Lean Techniques Does the One Wearing the BA Hat Need?": [
          "Create and Use a Product Vision (Next Big Thing)",
          "Define a Minimum Viable (Buyable) Product",
          "Lean Requirements Communication Techniques",
          "Lean Problem Analysis Reveals Business Needs",
          "Write SMART Features, Requirements, User Stories, and Epics",
          "Use Cynefin to Manage Uncertainty",
          "Right-Size Epics, Features, User Stories, and Requirements",
          "Develop, Present, and Analyze Visual Models",
          "Acceptance or Business-Facing Testing"
        ],
        "Wrap-up": [
          "What Should You Do Now",
          "BONUS LECTURE: More Business Analysis Courses from Tom and Angela Hathaway"
        ]
      },
      "requirements": [
        "No tools or knowledge required",
        "Interest in Business Analysis for Information Technology (IT) and Software Requirements Definition / Analysis"
      ],
      "description": "Take the Path to LEAN Business Analysis (as it relates to Information Technology)\n\n\nIn today’s world, you and your organization must be responsive, flexible, and make things happen quickly. You must do more with less – and faster. You no longer have business as usual, so why do business analysis as usual?\nWith the widespread adoption of Agile, software development has gone through some serious remodeling. Agile teams build robust products incrementally and iteratively, requiring fast feedback from the business community to define ongoing work.  As a result, the process of defining IT requirements is evolving rapidly. Backlogs replace requirements definition documents. User Stories, Epics and Features replace requirement statements. Scenarios and Examples replace test cases. The timing of business analysis activities is shifting like sand.\nThis course is a brief overview of how you can reduce waste in Business Analysis practices to optimally support the new lean and agile software development world. You will learn about topics such as:\n·         The purpose of a product roadmap and a prioritized product backlog\n·         The concept of a Minimum Viable Product (MVP)\n·         Agile and Lean thinking applied to requirements discovery, analysis, and acceptance testing\n·         Lean requirement constructs such as Features, User Stories, Epics, Scenarios, Examples, etc.\n·         The importance of feedback from your customers to improve the product",
      "target_audience": [
        "Business Analysts",
        "Product Owners",
        "Subject Matter Experts",
        "Project Managers",
        "Managers of all levels",
        "Business Architects",
        "CIO",
        "Anyone interested in Business Analysis for IT projects"
      ]
    },
    {
      "title": "Schnelleinstieg in die Python Programmierung für Anfänger",
      "url": "https://www.udemy.com/course/schnelleinstieg-in-die-python-programmierung-fur-anfanger/",
      "bio": "Effektiver Python-Crashkurs: Wenig Bla-Bla, schneller Lernerfolg. Ideal für Python-Neulinge.",
      "objectives": [
        "Installiere Python mit Anaconda",
        "Erstelle eigene Python Environments",
        "Verwende Visual Studio Code zum programmieren",
        "Variablen und Datentypen",
        "Logik und Schleifen",
        "Listen, Dictionaries und Tuple",
        "Funktionen und Klassen",
        "Verwendung von externen Paketen"
      ],
      "course_content": {},
      "requirements": [
        "Grundkenntnisse mit Windows, Linux oder MacOS"
      ],
      "description": "Dieser kompakte Python-Kurs vermittelt dir in kürzester Zeit ein solides Fundament für den erfolgreichen Einstieg in die Programmierung. In wenigen Stunden lernst du, wie du Python effektiv nutzt und eigene Projekte selbstständig realisierst.\nZunächst zeige ich dir, wie du Python und Anaconda installierst und die beliebte Entwicklungsumgebung Visual Studio Code einrichtest. Danach erhältst du eine verständliche Einführung in die wichtigsten Programmierkonzepte, die dir helfen, den Umgang mit Python schnell zu meistern.\nDer Kurs führt dich weiter zu Funktionen, Klassen und Vererbung, damit du strukturierten und wiederverwendbaren Code schreiben kannst. Außerdem lernst du, wie du Dateien in Python einliest und schreibst, um mit unterschiedlichen Datenformaten zu arbeiten. Fortgeschrittene Themen wie Type Annotations und f-Strings runden dein Wissen ab und verbessern die Qualität deines Codes.\nPraxisnah und mit abwechslungsreichen Programmieraufgaben wirst du das Gelernte festigen und deine Fähigkeiten ausbauen. Die schnelle und klare Vermittlung macht diesen Kurs ideal für alle Python-Neulinge, die ohne unnötiges Bla-Bla effektiv lernen wollen.\nDieser Kurs umfasst folgende Themen:\nInstallation von Python und Anaconda\nEinrichtung und Nutzung der IDE Visual Studio Code\nGrundlagen der Python-Programmierung\nUmgang mit Variablen, Listen und Dictionaries\nFunktionen, Klassen und Vererbung\nEinlesen und Schreiben von Dateien\nType Annotations und f-Strings\nPraktische Programmieraufgaben zur Festigung\nStarte noch heute deinen Weg zum Python-Profi in der Technologie von morgen! Wir sehen uns im Kurs!\nHinweis:\nIm Kurs wird Python über Anaconda installiert. Alternativ kannst du Python auch über andere Quellen installieren.",
      "target_audience": [
        "Python-Anfänger",
        "Programmier-Anfänger",
        "Machine Learning Interessierte",
        "Data Science Interessierte",
        "MINT Studenten"
      ]
    },
    {
      "title": "Essentials of Machine Learning",
      "url": "https://www.udemy.com/course/essentials-of-machine-learning/",
      "bio": "Get an overview of the different components that can come up in a machine learning project",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Essentials of Machine Learning",
          "Machine Learning Essential Terms",
          "ML Essential Terms Contd.",
          "Wrapping Up Essential Terms",
          "Data Preparation",
          "Data Preparation Contd.",
          "Classification Algorithms",
          "Classification Algorithms Contd.",
          "Regression Algorithms",
          "Optimization Techniques"
        ]
      },
      "requirements": [
        "Curiosity about the machine learning project structure"
      ],
      "description": "Machine Learning has become an exciting route to go down by many teams and companies. However, it's not always realistic that everyone is expected to catch up with all of the latest ML trends.\n\n\nUsually Machine learning teams are made up of different people. On the technical side you can have a mixture of the different data scientists and engineers, like a Machine Learning Data Scientists, as well as Machine Learning and Data Engineers. The data scientists' main responsibility would be building out or improving the models, and the engineers will help with everything else around deployment and that the models are getting the data they need.\n\n\nFrom the non-technical side it's likely you'll have a project manager and possibly also several other business stakeholders. This course is aimed for these people, who need to understand what's going on at a higher level, without necessarily having to dive into the technical components. Those that need to know enough to help with product vision, and be able to have and understand discussions about current statuses, blockers, as well as estimations.\n\n\nIn this course we'll look at some of the different components involved in an ML project so that you can feel like you can have fruitful conversations when working on an ML project without needing to get bogged up on all the technical details.",
      "target_audience": [
        "Anyone who wants to get a high-level overview of the different components involved in machine learning"
      ]
    },
    {
      "title": "Build Powerful AI Agents Using smolagents from Hugging Face",
      "url": "https://www.udemy.com/course/build-powerful-ai-agents-using-smolagents-from-hugging-face/",
      "bio": "Learn to create autonomous AI agents using Smolagents, integrating tool-calling, LLMs, and real-world applications.",
      "objectives": [
        "Understand AI Agents & Multi-Agent Systems",
        "Build AI Agents Using the Smolagents Library",
        "Develop Custom AI Agents for Real-World Applications",
        "Integrate AI Agents with External APIs & Tools"
      ],
      "course_content": {
        "Introduction to the Art and Science of Building AI Agents": [
          "What is an AI Agent?",
          "Why Choose smolagents",
          "AI Agents & Smolagents Library",
          "Build a Code AI Agent",
          "Build a Tool-Calling AI Agent (Step 1)",
          "Taste of OpenRouter",
          "Build a Tool-Calling AI Agent (Step 2)",
          "Tool-Calling Agents & LiteLLM in SmolAgents"
        ],
        "Multi-Agent Systems": [
          "Building a Multi-Agent System (1)",
          "Building a Multi-Agent System (2)",
          "Building a Multi-Agent System (3)"
        ],
        "Applications": [
          "Build an AI Financial Analyst",
          "Build a Text-to-SQL Agent"
        ]
      },
      "requirements": [
        "Basic Python programming skills",
        "Familiarity with AI concepts",
        "Internet access"
      ],
      "description": "AI agents are transforming the way we work. Sam Altman predicts that AI coworkers will enter the workforce in 2025, and companies like OpenAI, xAI, and DeepMind are already launching cutting-edge AI agents like Operator and DeepSearch.\nBut how do you build your own AI agent? Which framework should you use?\nIf you like graph-based control, LangGraph is an option.\nIf you prefer role-based AI teams, CrewAI works well.\nIf you're into prompt optimization, DSPy can be adapted.\nHowever, if you want a lightweight, flexible, and straightforward way to build AI agents, Smolagents from Hugging Face is the answer.\nWhy Choose Smolagents?\nNo unnecessary abstractions—simple yet powerful.\nAccess any LLM in the world—OpenAI, Together AI, OpenRouter, Mistral, or even your own models.\nCreate custom tool-calling agents that can interact with real-world data, APIs, and more.\nWhat You’ll Learn in This Course:\nThe fundamentals of AI agents—how they work and why they matter.\nBuilding a tool-calling agent—connecting your agent to external tools and APIs.\nIntegrating AI models like GPT-4, Gemini, and Claude—leveraging multiple AI brains.\nCreating custom AI tools—fetch financial data, analyze documents, or search the web.\nMulti-agent systems—designing AI agents that collaborate.\nBuilding a text-to-SQL agent for querying databases.\nCreating a financial analyst AI to automate investment research.\nWhether you're a developer, researcher, or AI enthusiast, this course will equip you with the skills to build, deploy, and scale AI agents for real-world use cases. Start learning today.",
      "target_audience": [
        "AI Enthusiasts & Developers",
        "Data Scientists & Engineers",
        "Finance & Business Professionals",
        "Anyone Curious About AI Agents"
      ]
    },
    {
      "title": "Algorithms and Data Structures - Part 3",
      "url": "https://www.udemy.com/course/kal-academy-algorithms-and-data-structures-part-3/",
      "bio": "Ace your next technical interview!",
      "objectives": [
        "Basics of problem solving",
        "Gain deeper understand of Algorithms and Data Structures",
        "Master the skills needed to ace technical interviews",
        "Dynamic Programming"
      ],
      "course_content": {},
      "requirements": [
        "Be able to comfortably program in a programming language of choice"
      ],
      "description": "There are four parts to this program.\nIn part 1 of the course, we start with the deep dive implementations on some of the basic linear structures such as Arrays, Queues, Stacks and Dictionary. Understanding data structures are key to problem solving.\nIn part 2 of the course we will deep dive into problem solving, strings, Linked List and recursion.\nIn this part 3 of the course, we deep dive into more problem solving and dynamic programming.\nFinally in part 4, we will cover Trees and Graphs.\n\n\nHappy coding!",
      "target_audience": [
        "Developers preparing for technical interviews"
      ]
    },
    {
      "title": "Gemini AI Made Simple: Create Chatbots & AI Tools with Ease",
      "url": "https://www.udemy.com/course/practical-gemini-ai/",
      "bio": "Learn Gemini AI API step-by-step to create chatbots, data dashboards, and AI-powered visualizations with Python.",
      "objectives": [
        "Set up and connect to the Gemini AI API using Python",
        "Build interactive AI chatbots that understand user input.",
        "Create dynamic AI-powered data dashboards (a case study in how to combine AI with other libraries like Pandas)",
        "Go beyond the chatbot, and use Gemini to create AI-generated (user-prompted) data visualizations.",
        "Acquire the skills to leverage AI to take your coding projects to the next level."
      ],
      "course_content": {},
      "requirements": [
        "Basic Python knowledge (loops, functions, variables) is strongly recommend but not required. A general experience in coding will do.",
        "A Google account to access Google Colab (recommended for coding).",
        "A Gemini AI API key (we’ll show you how to get one for free).",
        "Curiosity and a willingness to experiment with AI!"
      ],
      "description": "Welcome to the ultimate beginner’s course on Gemini AI!\nAre you ready to unlock the potential of Gemini AI to build interactive tools like chatbots, dashboards, and visualizations? Whether you’re a developer, a data enthusiast, or simply curious about AI, this course is designed for you!\n\n\nWhy Learn From Us?\nThis course is taught by the Alessi twins—Luca and Dominique! From Luca’s experience teaching data visualization workshops at a top university to Dominique’s expertise as an Ivy-educated* computer scientist working in industry, together, we bring a unique blend of academic and industry experience. You can trust us to guide you every step of the way!\n\n\nWhat You’ll Learn:\nSet up the Gemini AI API with Python.\nBuild your first AI chatbot that answers questions intelligently.\nCreate dynamic data dashboards with AI-generated summaries.\nBuild dashboards that respond to user prompts with AI-generated data visualizations.\nSafely and effectively integrate AI into your projects.\nBy the end of this course, you’ll not only understand the Gemini AI API but also have the skills to create tools that automate tasks, analyze data, and showcase your creativity. Many of these principles can also be applied to other AI APIs.\n\n\nWhy Take This Course?\nBeginner-friendly with hands-on coding exercises.\nReal-world projects to showcase in your portfolio.\nPractical skills to integrate AI into workflows and stand out professionally.\n\n\nWho Is This Course For?\nDevelopers and coders eager to explore AI APIs.\nData enthusiasts looking to create dashboards and visualizations.\nStudents and professionals who want to stand out with unique AI-powered projects.\nNo prior experience with Gemini AI is required! All you need is a basic understanding of Python and a willingness to learn.\n\n\nTools You'll Need:\nPython (setup guide included in the course)\nGoogle Colab for coding exercises\nGemini AI API Key (we’ll show you how to get it!)\nTake the first step toward mastering Gemini AI. Enroll now, and let’s build something amazing together!\n\n\n*This class is not affiliated with any university.",
      "target_audience": [
        "Beginner developers interested in AI.",
        "Developers and coders (with no AI experience) eager to integrate AI into their projects.",
        "Data analysts and researchers looking to automate insights with AI.",
        "Students and professionals wanting to build AI-powered tools.",
        "Anyone curious about AI and looking for practical coding applications."
      ]
    },
    {
      "title": "Building GenAI Application using LabVIEW LLM Libraries",
      "url": "https://www.udemy.com/course/building-genai-application-using-labview-llm-libraries/",
      "bio": "Build practical GenAI-powered applications in LabVIEW with LLMs, RAG, embeddings, agents, and secure offline models",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to LabVIEW LLM Libraries",
          "Notes"
        ],
        "Large Language Models in LabVIEW": [
          "Large Language Models in LabVIEW",
          "Model Abstraction in LabVIEW"
        ],
        "Embeddings, RAG, and Knowledge-Aware Agents": [
          "Context Engineering - Model and Your Data",
          "Retrieval Augumented Generation in LabVIEW",
          "Agents in LabVIEW",
          "Data Preperation Pipeline"
        ],
        "Building Secure and Modern Application": [
          "Integrate Modern Chat Interface in your LabVIEW application",
          "Using Secure Offline Models in LabVIEW"
        ]
      },
      "requirements": [
        "Basic familiarity with LabVIEW programming",
        "A working installation of LabVIEW 2020 or higher (Community, Professional, or compatible edition).",
        "Internet access for using cloud-hosted LLM providers (OpenAI, Azure OpenAI, Gemini) — unless focusing on the offline models module.",
        "Curiosity to explore how Generative AI can be applied to engineering workflows."
      ],
      "description": "Generative AI is changing the way engineers build, validate, and automate systems — and now you can bring those capabilities directly into LabVIEW.\nIn this hands-on course, you’ll learn step by step how to use the LabVIEW LLM Library to integrate large language models (LLMs) into your test, measurement, and automation applications. No AI background required — if you know the basics of LabVIEW, you can start building powerful GenAI applications.\nThrough 9 focused modules, you’ll go from fundamentals to advanced workflows:\nUnderstand the role of LLMs in engineering applications\nApply model abstraction to switch between providers like OpenAI, Azure OpenAI, and Gemini\nUse embeddings to represent your own data\nBuild Retrieval-Augmented Generation (RAG) pipelines to improve model accuracy\nDesign knowledge-aware agents that can plan, reason, and interact with tools\nPrepare and manage data pipelines for reliable retrieval\nAdd a modern chat interface to LabVIEW apps for intuitive user interaction\nDeploy secure offline models to protect sensitive data\nBy the end of this course, you’ll know how to design and deploy LabVIEW applications that are smarter, faster, and AI-enabled — ready to solve real engineering problems.\nWhether you’re a LabVIEW developer, automation engineer, or technical lead, this course gives you the tools to integrate Generative AI directly into your workflows and future-proof your applications.",
      "target_audience": [
        "LabVIEW developers and test engineers who want to enhance their applications with Generative AI capabilities.",
        "Automation and validation engineers working in semiconductor, hardware, or R&D labs looking to speed up workflows with AI-powered tools",
        "Software professionals interested in practical examples of integrating LLMs, RAG, and agents into engineering applications.",
        "Students and early-career engineers with LabVIEW knowledge who want to learn how AI is reshaping test, measurement, and automation."
      ]
    },
    {
      "title": "Learn Software Product Management (no coding needed)",
      "url": "https://www.udemy.com/course/learn-software-product-management-no-coding-needed/",
      "bio": "Product Management made easy",
      "objectives": [
        "Software Developers, Product Managers, Designers, QA, Business Analyst",
        "Prioritisation, RCA, consumer research, market research, metrics, pricing, CIRCLES, Jira, Figma",
        "Defining product strategy",
        "Become better product managers"
      ],
      "course_content": {
        "Introduction": [
          "Agile, product vision/mission, product strategy, product roadmap",
          "Story boarding, Kanban, Product backlog, cloud services",
          "Guesstimates, JIRA, Wireframing",
          "Prioritization Techniques",
          "Pricing, Product Metrics",
          "Root Cause Analysis",
          "Design a product from scratch"
        ]
      },
      "requirements": [
        "No coding experience required, no specific background needed"
      ],
      "description": "Title: Become a Product Manager: Learn the Skills & Get the Job\nCourse Description:\nAre you curious about how great products are built? Do you want to lead teams, shape strategy, and deliver value to customers? Whether you're starting your career, making a switch, or upskilling for your current role — this course is your comprehensive guide to becoming a successful Product Manager.\nIn this practical, real-world-driven course, you’ll learn the core skills, tools, and frameworks used by top product managers at companies like Google, Amazon, and Meta. You’ll go beyond theory with case studies, assignments, and templates that prepare you for interviews and on-the-job challenges.\nWhat You'll Learn:\nThe complete product lifecycle — from ideation to launch and growth\nHow to define product vision, goals, and OKRs\nUser research and problem validation techniques\nRoadmapping, prioritization, and backlog management\nWorking with cross-functional teams (Engineering, Design, Marketing)\nAgile, Scrum, and Kanban methodologies\nMetrics that matter: KPIs, analytics, and A/B testing\nTools of the trade: Jira, Notion, Figma, and more\nHow to crack PM interviews with confidence\nWho This Course Is For:\nAspiring product managers from any background\nEntrepreneurs and startup founders\nProfessionals in tech, design, or business looking to pivot\nJunior PMs seeking to grow into senior roles\nExtra Content:\nResume & LinkedIn optimization for PM roles\nMock interview questions with expert tips\nAccess to a private community for discussion and feedback",
      "target_audience": [
        "Software Developers, QA, Designers, Business Analysts"
      ]
    },
    {
      "title": "Microservices with Spring Cloud - Getting Started",
      "url": "https://www.udemy.com/course/microservices-with-spring-cloud-getting-started/",
      "bio": "Learn how easy it is to build Spring Boot microservice applications with Spring Cloud",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Course Introdution",
          "Module Intro",
          "Microservices",
          "Spring Cloud",
          "Demo Project",
          "Environment Setup",
          "Module Conclusion"
        ],
        "User and Order Services": [
          "Module Intro",
          "User Service Setup",
          "User Service Implementation Part I",
          "User Service Implementation Part II",
          "User Service Testing",
          "Order Service Implementation",
          "Module Conclusion"
        ],
        "Infrastructure Setup Part I": [
          "Module Intro",
          "Eureka Registry",
          "Config Server Setup",
          "Config Server Testing",
          "Connecting Services Together Part I",
          "Connecting Services Together Part II",
          "Module Conclusion"
        ],
        "Infrastructure Setup Part II": [
          "Module Intro",
          "Spring Cloud Gateway Part I",
          "Spring Cloud Gateway Part II",
          "Custom Filters Setup",
          "Custom Filters Testing",
          "Feign Client Setup",
          "Feign Client Testing",
          "Spring Actuator",
          "Spring Boot Admin",
          "Module Conclusion"
        ],
        "Conclusion": [
          "Full Test",
          "Scaling Services",
          "Final Word"
        ]
      },
      "requirements": [
        "To be familiar with Java programming language",
        "To have at least basic understanding of Spring Framework"
      ],
      "description": "Microservices with Spring Cloud - Getting started course, is mainly for developers who want to learn how to build distributed applications with Spring Cloud. But people who just want to understand how microservices applications with Spring Cloud works are welcome too.\nIn this course we will do quick overview of what microservices really are and what advantages they bring into the applications. Will take a good look at some of the main Spring Cloud components, such as: Eureka Registry, Config Server, Spring Cloud Gateway, and will build a fully functional Spring Cloud application, utilising them. Will speak about Microservice decoupling and monitoring in Spring Cloud. So by the end of this course you should be, not only familiar with main Spring Cloud building blocks, but also have fully functional application running on your machine.\nAlso I want to mention, if you will have any questions about the course (or not) do not hesitate to contact me and I will do my best to help you out! All reviews are welcome so I could learn form them and create better content in a future.\n\n\nMusic: Royalty Free Music from Bensound\nMain photo: C Dustin on Unsplash",
      "target_audience": [
        "Developers who want to learn how to build distributed applications with Spring Cloud",
        "People who want to understand how distributed Spring Cloud applications works"
      ]
    },
    {
      "title": "Algoritmos y estructuras de datos",
      "url": "https://www.udemy.com/course/algoritmos-y-estructuras-de-datos-cb/",
      "bio": "Conceptos e implementación en C",
      "objectives": [
        "Aprender a determinar la eficiencia de un algoritmo",
        "Conocer y aplicar algoritmos de ordenamiento",
        "Conocer e implementar las estructuras de datos fundamentales",
        "Desarrollar nuevas prácticas de programación"
      ],
      "course_content": {},
      "requirements": [
        "Saber utilizar el PC",
        "Saber programación básica en C (estructuras de control de flujo, ciclos, funciones y estructuras)"
      ],
      "description": "¿Acabas de aprender programación y buscas ampliar tus conocimientos? ¿sabes cómo funciona la memoria dinámica? ¿conoces las estructuras de datos fundamentales? ¿sabes aplicar algoritmos de ordenamiento eficientes?\nAquí resolverás todas esas interrogantes, ya que a lo largo de este curso, aprenderás qué son, cómo funcionan y hasta implementarás las estructuras de datos más famosas en el mundo de la programación, tales como:\nListas\nPilas\nColas\nÁrboles\nTries\nTablas hash\nAdemás, descubrirás algoritmos que probablemente no conocías y que hacen las cosas de una manera mucho más eficiente. Lo mejor de todo es que trabajaremos con C, por lo que \"fabricaremos completamente\" nuestras estructuras; no como en otros lenguajes (más ineficientes) donde ya está todo hecho pero desconoces por completo su funcionamiento interno y no puedes personalizarlas.\n¿Sabías que a los reclutadores de Google, Facebook o Microsoft no les importa cuántos lenguajes de programación sepas sino cuántos y qué tan bien dominas los algoritmos y las estructuras de datos?\nAsí que anímate a tomar este curso que definitivamente ampliará tus herramientas para la solución de los problemas más ocurrentes en el mundo de la programación, convirtiéndote así, en un mejor desarrollador de software.\nNos vemos en clase :)",
      "target_audience": [
        "Programadores",
        "Estudiantes de ingeniería de software",
        "Cualquiera que desee conocer algoritmos"
      ]
    },
    {
      "title": "Site Reliability Engineering (SRE) Mastery: 6 Practice Exams",
      "url": "https://www.udemy.com/course/site-reliability-engineering-sre-mastery-6-practice-exams/",
      "bio": "Practice and Test 700+ Questions ( Conceptual + Scenario) of Site Reliability Engineering (SRE) : 6 Practice Exams",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you ready to master Site Reliability Engineering (SRE) and prepare for real-world scenarios? This course, \"Site Reliability Engineering (SRE) Mastery: 6 Practice Exams\", is your ultimate guide to acing SRE concepts, principles, and practical applications. With over 700+ conceptual and scenario-based questions, these six practice exams are designed to reinforce your knowledge, test your skills, and boost your confidence in SRE.\nWhat You Will Learn:\nFoundations of SRE: Understand the purpose, key principles, and how SRE bridges DevOps and IT operations.\nService Reliability Metrics: Master SLIs, SLOs, SLAs, and error budgets for optimal service management.\nMonitoring and Observability: Learn effective monitoring strategies, alerting best practices, and modern tools like Prometheus and Grafana.\nIncident Management: Develop skills in on-call management, root cause analysis, and creating blameless postmortems.\nCapacity Planning and Automation: Explore techniques for scaling resources, forecasting demand, and implementing Infrastructure as Code (IaC).\nReliability and Resilience: Delve into resiliency patterns, chaos engineering, and disaster recovery strategies.\nPerformance Optimization: Optimize systems with load testing, caching, and performance tuning tools.\nSecurity in SRE: Address critical security principles, monitoring, and compliance practices.\nDistributed Systems and Microservices: Gain expertise in designing reliable distributed systems and microservices architectures.\nWhy This Course?\nComprehensive Coverage: Each module focuses on real-world challenges and solutions, ensuring a holistic understanding of SRE.\nScenario-Based Practice: Tackle practical questions that mimic on-the-job scenarios and interview settings.\nAdvanced Tools and Techniques: Stay ahead with hands-on knowledge of SRE tools, including Prometheus, Terraform, and Chaos Monkey.\nContinuous Improvement: Learn to foster a culture of reliability through retrospectives and best practices.\n\n\nPrepare to excel in Site Reliability Engineering and build systems that stand the test of time. Enroll now and take your SRE skills to the next level!",
      "target_audience": [
        "Aspiring SREs looking to enter the field.",
        "Anyone passionate about building and maintaining highly reliable systems.",
        "DevOps professionals aiming to extend their expertise.",
        "IT Operations teams transitioning into SRE roles."
      ]
    },
    {
      "title": "Làm Chủ Git và GitHub Từ A đến Z",
      "url": "https://www.udemy.com/course/master-git-and-github-from-a-to-z-vietnamese/",
      "bio": "Git và Github thực chiến - quản lý mã nguồn chuyên nghiệp và làm việc nhóm hiệu quả",
      "objectives": [
        "Hiểu rõ nền tảng của hệ thống quản lý phiên bản (Version Control System) và lý do Git ra đời",
        "Làm chủ các khái niệm cốt lõi trong Git: working area, staging area, local & remote repository",
        "Thành thạo các lệnh Git cơ bản: add, commit, push, pull, fetch, log, remote",
        "Tạo và quản lý nhánh (branch), hiểu cơ chế hoạt động của head, merge và giải quyết xung đột (conflict))",
        "Sử dụng Git để làm việc nhóm hiệu quả, theo đúng quy trình dự án hiện đại",
        "Hoàn tác các thay đổi sai sót với các lệnh như checkout, restore, reset, revert",
        "Làm quen và sử dụng các tính năng quan trọng trên GitHub: pull request, fork, GitHub Actions",
        "Áp dụng các lệnh Git nâng cao: stash, tag, ignore, rebase, hook",
        "Cài đặt môi trường làm việc chuyên nghiệp với VS Code, GitHub Desktop và SSH key",
        "Tư duy và kỹ năng sử dụng Git/GitHub như một developer chuyên nghiệp trong thực tế"
      ],
      "course_content": {
        "Introduction": [
          "Giới thiệu giảng viên",
          "Khóa học này dành cho ai",
          "Lộ trình làm chủ Git/Github từ A-Z",
          "Điều kiện và một số tips học tập",
          "Cách học hiệu quả trên Udemy"
        ],
        "Cài đặt môi trường cho Git/Github": [
          "Hệ thống quản lý các phiên bản (VCS) - Git & Github",
          "Cài đặt Visual Studio Code (VSCode)",
          "Hướng dẫn sử dụng VSCode",
          "Cài đặt Git trên Windows",
          "Đăng ký tài khoản Github",
          "Cài đặt Github Desktop Tool",
          "Cách cài đặt Git config",
          "Thực hành - cài đặt Git config",
          "Lý thuyết - Các câu lệnh cơ bản trên Windows và Unix",
          "Thực hành - Các lệnh cơ bản trên Windows Command Prompt",
          "Thực hành - Các lệnh cơ bản trên Ubuntu/MacOS"
        ],
        "Git's core concepts": [
          "Git's core concepts - Những khái niệm cốt lõi của Git",
          "Cách tạo local Git repository",
          "Thực hành - Cách tạo local Git repository",
          "Cách cài đặt SSH key cho Github",
          "Thực hành - Tạo Github public repository, clone về máy tính qua SSH",
          "Thực hành - Tạo Github private repository, clone về máy tính qua SSH",
          "Thực hành - Clone Github repository về máy tính bằng Github Desktop Tool"
        ],
        "Những câu lệnh cơ bản trong Git": [
          "Git add và Git commit",
          "Thực hành - Git add và Git commit",
          "Git log",
          "Thực hành - Git log",
          "Git remote",
          "Thực hành - Git remote",
          "Git push",
          "Thực hành - Git push",
          "Git pull và Git fetch",
          "Thực hành - Git pull và Git fetch"
        ],
        "Collaboration trong Git": [
          "Collaboration trong Git",
          "Git branch",
          "Git HEAD",
          "Thực hành - Git HEAD",
          "Git branch - commands",
          "Thực hành - Git branch - commands",
          "Git merge fast forward",
          "Thực hành - Git merge fast forward",
          "Git merge 3-way",
          "Thực hành - Git merge 3-way khi có conflict",
          "Thực hành - Git merge 3-way khi không có conflict",
          "Git diff",
          "Thực hành - Git diff"
        ],
        "Going back and undoing changes – Quay lại lịch sử và thực hiện hoàn tác các thay": [
          "Overview",
          "Git restore",
          "Thực hành - Git restore",
          "Git reset",
          "Thực hành - Git reset",
          "Git revert",
          "Thực hành - Git revert",
          "Git checkout - detached HEAD"
        ],
        "Git’s advances - Git nâng cao": [
          "Git ignore",
          "Thực hành - Git ignore - phần 1",
          "Thực hành - Git ignore - phần 2",
          "Git tag",
          "Thực hành - Git tag",
          "Git stash",
          "Thực hành - Git stash",
          "Git rebase",
          "Git hooks",
          "Thực hành - Git hooks"
        ],
        "Github tour - Các tính năng chính trên Github": [
          "Một vòng Github",
          "Github - Pull request",
          "Github Forking",
          "Github Actions"
        ],
        "Conclusion": [
          "Bài giảng thưởng",
          "Practice test"
        ]
      },
      "requirements": [
        "Không cần kinh nghiệm lập trình – Bạn sẽ được chia sẻ mọi thứ cần biết",
        "Máy tính có kết nối internet",
        "Chỉ cần bạn chịu khó làm theo và thực hành, bạn sẽ nắm vững kiến thức"
      ],
      "description": "Chào mừng bạn đến với khóa học: Làm Chủ Git và GitHub Từ A đến Z - quản lý mã nguồn chuyên nghiệp và làm việc nhóm hiệu quả!\nMình là một Senior AI Engineer, có nhiều năm kinh nghiệm trong lĩnh vực Machine Learning, Deep Learning, và phát triển phần mềm. Trong quá trình làm việc, mình nhận thấy rằng rất nhiều lập trình viên – kể cả người có kinh nghiệm – chưa thật sự hiểu rõ cách Git và GitHub hoạt động, dẫn đến việc sử dụng sai cách, mất code, hoặc khó khăn trong làm việc nhóm cũng như quản lý mã nguồn.\nVì vậy, mình thiết kế khóa học này để giúp bạn hiểu bản chất, thực hành thành thạo, và ứng dụng Git/GitHub chuyên nghiệp trong công việc.\nVỀ KHÓA HỌC \"Làm Chủ Git và GitHub Từ A đến Z\"\nDù bạn là người mới bắt đầu lập trình, đã từng dùng Git nhưng chưa thực sự hiểu sâu, hay một developer đang đi làm, khóa học này đều phù hợp. Mình sẽ hướng dẫn bạn từng bước, hiểu về version control system – hệ thống quản lý các phiên bản, cài đặt môi trường để làm việc với Git/Github đến thao tác nâng cao như rebase, stash, hook,…\nBạn sẽ học qua ví dụ thực tế, thực hành với từng câu lệnh, và làm quen với quy trình làm việc nhóm hiện đại thông qua Git/GitHub.\n\n\nNỘI DUNG CHÍNH TRONG KHÓA HỌC:\nGiới thiệu VCS: Khái niệm hệ thống quản lý phiên bản, các loại VCS, Git và GitHub\nCài đặt môi trường: VS Code, Git, GitHub Desktop, SSH key và cấu hình Git\nCốt lõi Git: Working area, staging area, local repo; tạo repo local và trên GitHub\nLệnh cơ bản: add, commit, log, pull, fetch, push, remote\nLàm việc nhóm: Branch, HEAD, merge, giải quyết conflict, diff\nHoàn tác & phục hồi: checkout, restore, reset, revert\nKhám phá GitHub: Pull request, fork, GitHub Actions và các tính năng quan trọng\nGit nâng cao: tag, ignore, stash, rebase, hook…\nPHƯƠNG PHÁP HỌC\nHọc lý thuyết ngắn gọn, dễ hiểu\nThực hành với từng lệnh Git ngay sau khi học\nCó ví dụ minh họa thực tế và tình huống dự án\nHọc qua lỗi để hiểu bản chất Git sâu sắc hơn\nHOÀN THÀNH KHÓA HỌC, BẠN SẼ:\nLàm chủ Git và GitHub từ căn bản đến nâng cao\nThực sự hiểu bản chất của Git, cách các lệnh hoạt động\nBiết cách xử lý các lỗi thường gặp như conflict…\nSử dụng Git/Github chuyên nghiệp khi làm việc nhóm hoặc dự án cá nhân\nTự tin áp dụng vào công việc\nLIÊN LẠC VỚI GIẢNG VIÊN\nBạn có thể sử dụng tính năng Q&A của Udemy để gửi câu hỏi. Mình sẽ thường xuyên kiểm tra và phản hồi nhanh nhất. Khóa học sẽ còn được cập nhật thêm nội dung nếu có thay đổi về công nghệ hoặc tính năng Git/GitHub mới.",
      "target_audience": [
        "Người mới bắt đầu, chưa biết gì về Git/GitHub",
        "Lập trình viên muốn hiểu và sử dụng Git hiệu quả",
        "Người đã từng dùng nhưng chưa thực sự hiểu cách Git hoạt động",
        "Người muốn cải thiện kỹ năng làm việc nhóm và quản lý mã nguồn"
      ]
    },
    {
      "title": "Java com Spring Boot, Kafka e Microserviços",
      "url": "https://www.udemy.com/course/java-spring-boot-kafka-microservicos/",
      "bio": "Curso introdutório sobre microserviços orientados a eventos.",
      "objectives": [
        "Entender melhor as necessidades de uso de microserviços",
        "Conhecer mais sobre arquiteturas orientadas a eventos",
        "Implementar na prática microserviços com comunicação híbrida (via eventos e via rest)",
        "Aprender como implementar microserviços com Java e Spring Boot"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Requisitos de Software",
          "API (Application Programming Interface) - Fundamentos",
          "Arquitetura de Microserviços - Fundamentos",
          "Introdução ao Apache Kafka",
          "Padrão MVC e estrutura de aplicações com Spring Boot"
        ],
        "Criando primeiro Microserviço - API Principal": [
          "Criando estrutura inicial do microserviço",
          "Criando e explicando objetos DTO's",
          "Classes @Service e RestClient",
          "Classes @RestController",
          "Kafka Producers"
        ],
        "Criando Infraestrutura na máquina local": [
          "Containers Docker - fundamentos da tecnologia",
          "Apache Kafka com Conduktor",
          "Banco de Dados Postgresql com Docker"
        ],
        "Criando segundo microserviço - Car Store Service": [
          "Criando estrutura de código inicial",
          "Criando classes Entity e DTO",
          "Classes @Service",
          "Classes Kafka Consumer",
          "Classes @RestController Car Store Service",
          "Debug de código e testes iniciais da aplicação"
        ],
        "Criando terceiro microserviço - Analytics Service": [
          "Estrutura inicial - Analytics Service",
          "Classes @Service Analytics Service",
          "Segundo Consumidor Kafka"
        ],
        "Finalizando": [
          "Testes Funcionais com os 3 Microserviços"
        ]
      },
      "requirements": [
        "Compreensão básica sobre a linguagem de programação Java"
      ],
      "description": "Aprenda na prática conceitos importantes de Engenharia de Software\n\n\nArquiteturas de microserviços desenvolvidas com Java e Spring Boot tem sido largamente\nadotadas por diversos tipos de projetos em todo o mundo.\n\n\nA comunicação entre microserviços via API's REST permitiu a viabilidade de implementação dessa\nabordagem de aplicações distribuídas, mas conforme cresceram as necessidades e alta demanda\npor performance e alto volume de dados, surgiram também as arquiteturas orientadas a eventos\nque fazem uso de brokers de mensagens para trafegar dados entre microserviços.\n\n\nNeste curso ministrado por um instrutor com larga experiência no mercado de trabalho, fazemos uma introdução teórica e prática sobre como e porque utilizar a comunicação híbrida\nde microserviços com Java, Spring Boot, API's REST e Apache Kafka.\n\n\nAo acompanhar e implementar o código ensinado nesse curso, você será capaz de compreender os casos de\nuso destas tecnologias e conceitos e saber como realizar código prático seguindo esta abordagem.\nEste é um conhecimento importante para todos que desejam evoluir nas melhores práticas da engenharia de software moderna.\n\n\nTópicos abordados:\n\n\nO que são os microserviços e que problema eles resolvem;\n\n\nO que é o Apache Kafka e porque ele é importante em aplicações distribuídas;\n\n\nO que é o Docker e qual sua utilidade;\n\n\nDesenvolvimento de microserviços em Java com Spring Boot;\n\n\nComunicação híbrida entre microserviços usando API's REST e eventos com o Apache Kafka.",
      "target_audience": [
        "Desenvolvedores Java iniciantes, plenos ou já experientes que desejam aprender mais sobre microserviços"
      ]
    },
    {
      "title": "Building AI Applications and Agents with LangChain",
      "url": "https://www.udemy.com/course/becoming-an-ai-engineer-with-langchain/",
      "bio": "Develop your Generative AI Applications and Agents with LangChain",
      "objectives": [
        "Learn to use LangChain to develop generative AI applications",
        "Learn to use LangChain and its platforms to develop RAG applications",
        "Learn to use LangChain and LangGraph to develop LLM agents",
        "Learn the fundamental of LLM application development and prompting techniques"
      ],
      "course_content": {},
      "requirements": [
        "Have a basic understanding to Python programming",
        "Have an account to OpenAI API and its API Key",
        "Have an account to Anthropic API and its API Key",
        "A free or premium LangSmith account"
      ],
      "description": "Building AI Applications and Agents with LangChain\n\n\nAbout the Course\n\"Building AI Applications and Agents with LangChain\" is a hands-on course designed to provide a thorough understanding of LangChain, a robust framework for developing applications with large language models (LLMs). Led by Mark Chen, founder of Mindify AI, this course is crafted to take you from the basics of generative AI to advanced LangChain components and integrations. By the end, you’ll have practical experience building applications that use LangChain to streamline data handling, model interactions, and AI deployment processes.\n\n\nAbout the Instructor\nMark Chen, the founder of Mindify AI, is an experienced AI engineer and entrepreneur dedicated to creating generative AI solutions. His expertise spans building LLM-driven applications, developing AI agent-based applications, and navigating the LangChain framework. Mark’s background in developing real-world AI applications gives this course a unique, practical focus that combines foundational knowledge with insights from the cutting edge of AI technology.\n\n\nCourse Outline\n- Chapter 1: Introduction to Generative AI and LangChain\n- Chapter 2: Working with LLMs – From Embedding to Chat Models\n- Chapter 3: Document Handling – Using Document Loaders in LangChain\n- Chapter 4: Data Storage – Vector Data Stores and Context Retrieval\n- Chapter 5: Essential Tools – LangChain Tooling and Code Integration\n- Chapter 6: Agents and Decision-Making – LangGraph Agent Applications\n- Chapter 7: LangChain on Platforms – Integrating LLMs across platforms\n- Chapter 8: Building Applications – LangChain APIs for Chatbots, RAG, and Agentic Models\n\n\nWhat Will You Learn from This Course\nUnderstand the Architecture of LangChain: Get familiar with its structure, components, and modular integrations.\n- Master Prompt Engineering: Learn zero-shot, few-shot, and chain-of-thought prompting to improve model accuracy and utility.\n- Implement Real-World Applications: Create LLM applications that handle documents, search data, and interact through custom agents.\n- Interface with AI Models: Learn how to utilize LangChain’s APIs for chat models, data stores, and agents in deployable applications.\n\n\nWho Will Be Suitable for This Course\nThis course is ideal for:\n- Aspiring AI Engineers and Developers who want hands-on experience with LLM-driven applications.\n- Software Engineers interested in transitioning to AI by building practical applications with a comprehensive framework.\n- Tech Enthusiasts and Researchers looking to deepen their understanding of generative AI and LangChain’s framework.\n- Anyone interested in AI development who wants to leverage the power of LLMs and AI agents to build robust, scalable applications.\n\n\nTake this course to kickstart your journey as an AI engineer and gain the skills to create real-world applications that push the boundaries of what AI can achieve.",
      "target_audience": [
        "People with needed to develop context-aware AI application",
        "Computer science students",
        "People with deep interests in generative AI",
        "People who wants to become an AI engineer in the future",
        "People that wants to build AI agents with LangChain and LangGraph"
      ]
    },
    {
      "title": "Modelagem de Dados UML (Análise&Projeto Orientado a Objetos)",
      "url": "https://www.udemy.com/course/uml-diagrama-de-classes/",
      "bio": "Curso completo de modelagem conceitual com UML. Teoria e prática! Bônus: projeto Java, Spring Boot e Hibernate/JPA",
      "objectives": [
        "Ao final do curso o aluno será capaz de modelar os dados de um sistema usando UML como ferramenta"
      ],
      "course_content": {},
      "requirements": [
        "Computador Mac, Linux ou Windows",
        "Para acompanhar melhor o estudo de caso do último capítulo do curso, é desejável conhecimento básico de Programação Orientada a Objetos e Banco de Dados Relacional"
      ],
      "description": "O Modelo Conceitual, também chamado de Modelo de Domínio em nível de análise, é uma descrição das informações que o sistema vai gerenciar.\nPor muitos anos o modelo conceitual tem sido representado pelo modelo Entidade-relacionamento, criado por Peter Chen, que em seguida é convertido para o modelo relacional para implementação em banco de dados relacional. Esta abordagem segue o chamado Paradigma Estruturado. É uma abordagem consistente e muito usada ainda nos dias atuais.\nEntretanto, com a evolução das plataformas orientadas a objetos e das técnicas e ferramentas de mapeamento objeto-relacional (ORM), tornou-se muito viável a implementação de modelos de domínio em linguagens orientadas a objetos, de modo a explorar os benefícios do Paradigma Orientado a Objetos, paradigma este mais sofisticado que o estruturado, e que permite soluções elegantes e flexíveis para várias situações.\nDentro do Paradigma Orientado a Objetos, a ferramenta que se consolidou como padrão para desenhar diversos tipos de artefatos é a UML - Unified Modeling Language. A UML possui diversos diagramas que servem para representar inúmeras coisas, especialmente artefatos de sistemas orientados a objetos.\nNeste curso, nós vamos aprender a criar modelos conceituais utilizando o chamado Diagrama de Classes da UML, a partir de descrições em estilo \"Visão geral de sistema\". Vamos aprender a modelar conceitos, atributos e associações. Vamos aprender também a identificar as multiplicidades dos papéis em uma associação. Além disso, vamos aprender vários recursos de modelagem conceitual com UML tais como: agregação e composição, herança, classes de associação, enumerações e tipos primitivos.\nAo final do curso, para mostrar como tudo que foi ensinado possui aplicação prática de mercado, vamos fazer um estudo de caso completo no qual vamos implementar um modelo conceitual de significativa complexidade utilizando padrão de mercado e boas práticas. Vamos utilizar a plataforma Java, com Spring Boot e JPA. Vamos implementar o modelo completo, criar uma instância do modelo com Java em nosso próprio sistema, e vamos gerar a base de dados relacional automaticamente. Por fim, vamos disponibilizar endpoints REST para recuperar e apresentar os dados em formato JSON.\nTenho certeza que este curso vai agregar valiosos conhecimentos sobre modelagem de domínio em nível de análise, e também te elevará a um grau de compreensão superior sobre esta importante disciplina. Não perca mais tempo: comece já este curso.",
      "target_audience": [
        "Estudantes de cursos na área de Computação e desenvolvimento de sistemas",
        "Desenvolvedores de sistemas que desejam aprimorar ou sedimentar seus conhecimentos em modelagem conceitual com UML"
      ]
    },
    {
      "title": "Learn to Solve Algebraic Equations Recursively in Python",
      "url": "https://www.udemy.com/course/learn-to-solve-algebraic-equations-recursively-in-python/",
      "bio": "How to Write Recursive Algorithm to Solve Algebraic Expressions in Python",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Helper Functions",
          "Operator Precedence",
          "Iterating Through and Solving Expressions",
          "Testing and Debugging"
        ]
      },
      "requirements": [
        "Programming in Python in required to the most value out of this course."
      ],
      "description": "This course is designed for learners of all levels who want to enhance their Python programming skills and gain a deep understanding of mathematical problem-solving.\nCourse Highlights:\nFoundations of Algebraic Equations:\nGain a solid understanding of algebraic equations and their significance in mathematics and computer science.\nExplore the fundamentals of Reverse Polish Notation (RPN) and its application in solving mathematical expressions.\nPython Programming for Beginners:\nDiscover how Python can be a powerful tool for implementing recursive algorithms.\nRecursive Problem-Solving Techniques:\nDive into the concept of recursion and understand its importance in solving complex problems.\nLearn how to break down algebraic equations into smaller, more manageable subproblems.\nImplementing Reverse Polish Notation (RPN):\nMaster the art of expressing algebraic equations in RPN.\nUnderstand the advantages of using RPN in recursive problem-solving.\nStep-by-Step Equation Solving:\nWalk through various algebraic equations, solving them step by step using recursive techniques and RPN.\nGet hands-on experience with real-world examples and practical exercises.\nOptimizing Recursive Solutions:\nExplore techniques for optimizing recursive algorithms to enhance performance.\nUnderstand the importance of efficiency in algorithm design.\nProject-Based Learning:\nApply your knowledge by working on practical projects that reinforce the concepts learned throughout the course.\nCollaborate with peers and receive constructive feedback on your implementations.\nReal-World Applications:\nDiscover how recursive algebraic equation solving is applied in various industries, from finance to computer graphics.\nBy the end of this course, you'll be proficient in solving algebraic equations recursively using Python and Reverse Polish Notation and have a solid foundation in recursive problem-solving that can be applied to a wide range of programming challenges. Enroll now and embark on a journey to become a confident and skilled Python programmer with a deep understanding of mathematical algorithms.",
      "target_audience": [
        "Beginner Python developers curious about recursive algorithms"
      ]
    },
    {
      "title": "Bien débuter avec Spring et Spring Boot pour Java",
      "url": "https://www.udemy.com/course/bien-debuter-avec-spring-et-spring-boot/",
      "bio": "Ce que vous devez absolument savoir pour développer avec Spring, Spring Boot, Spring MVC, Spring Data, Spring Cloud...",
      "objectives": [
        "Concevoir et développer des applications d'entreprise avec Spring et Spring Boot",
        "Comprendre et exploiter les principes d'inversion de contrôle et du Domain Driven Design",
        "Mettre en pratique des sous projet Spring comme Spring MVC ou Spring Data",
        "Utiliser les API Java EE / Jakarta EE comme JPA (Java Persistence API)",
        "Mettre en oeuvre avec Spring des API ReST",
        "Faire l'expérience des bonnes pratiques et des problèmes communément rencontrés"
      ],
      "course_content": {
        "Introduction": [
          "Présentation du cours",
          "Ne restez pas seul : Accès au serveur discord",
          "Rappel : Librairies Java et introduction à Maven",
          "Guide de survie",
          "Spring Initializr",
          "Premier fonctionnel"
        ],
        "Pourquoi a t-on besoin de Spring ?": [
          "Illustration",
          "DVDStore : Entités métier, services métier et premier Repository",
          "Le problème de la flexibilité des applications",
          "DVDStore : Repository alternatif et couche de contrôle",
          "Programmation par contrat",
          "DVDStore : Création des interfaces",
          "Injection de dépendance",
          "DVDStore : Injection des implémentations",
          "Inversion de contrôle",
          "DVDStore : Changement de perspective",
          "Récapitulons"
        ],
        "Les fondamentaux du framework Spring": [
          "Conteneur léger Spring",
          "DVDStore : Exploiter le conteneur léger Spring",
          "Affectation d'une valeur à une propriété",
          "DVDStore : Valoriser une propriété de type File",
          "Autowiring byName et byType",
          "DVDStore : Injection automatique des dépendances",
          "Configuration par annotation",
          "DVDStore : Annotation des dépendances",
          "Valorisation des propriétés par annotation : @Value et fichier de propriétés",
          "DVDStore : Annotation du chemin du fichier csv",
          "Détection automatique des beans",
          "Injection par constructeur et Design pattern Immutables",
          "Gérer les conflits de dépendances",
          "DVDStore : Détection automatique des beans",
          "Se passer du fichier XML",
          "DVDStore : Se passer du fichier XML",
          "Les classes de configuration plus en détail",
          "DVDStore : Déplacer les annotations vers la classe exécutable"
        ],
        "Mise en place de Spring Boot": [
          "SpringBootApplication",
          "DVDStore : Passer à Spring Boot",
          "Spring Boot et Maven",
          "DVDStore : Standards Maven",
          "Fat Archive - Déployer une application en production"
        ],
        "Les applications Web avec Spring Boot": [
          "Présentation de la section",
          "Spring Boot Web Starter",
          "DVDStore : Mettre en place le serveur d'application",
          "Auto-configuration Spring",
          "DVDStore : Changer le port et le context root",
          "Ressources Web statiques",
          "DVDStore : Fichiers statiques hors de l'application",
          "Spring MVC : Le controleur frontal (Front Controller)",
          "Spring MVC : Les controleurs Web",
          "DVDStore : About Us",
          "Spring MVC : Les vues avec Thymeleaf",
          "DVDStore : About Us page",
          "Spring MVC : Affichage de données dans la vue - Le modèle",
          "DVDStore : Afficher la liste des Films",
          "Modularité",
          "DVDStore : Séparer les responsabilités",
          "Paramètre de requête et préparation à ReST",
          "DVDStore : Afficher le détails d'un film",
          "Spring MVC : Gestion de formulaire",
          "DVDStore : Ajouter un film",
          "Validation des beans",
          "DVDStore : Valider le formulaire d'ajout",
          "Affichage des erreurs de saisie",
          "DVDStore : Afficher les messages d'erreur"
        ],
        "Developper une API ReST avec Spring": [
          "Rappels : Web Services ReST",
          "ResponseBody, RequestBody et RestController",
          "DVDStore : Créer une API pour les Films",
          "Expérimenter les services ReST",
          "Exploiter les services ReST dans l’application",
          "DVDStore : Exploiter l'API ReST dans les pages HTML"
        ],
        "Spring et les bases de données relationnelles": [
          "Présentation de la section",
          "Installer MySQL Community Edition",
          "Installer le client DBeaver",
          "Création de la base de données \"Invoise\"",
          "DVDStore : Création de la base de données \"DVDSTORE\"",
          "Spring JDBC : Première connexion",
          "Lire et écrire avec un JdbcTemplate",
          "DVDStore : Lire et écrire dans la base de données avec JdbcTemplate",
          "Introduction à Spring Data et Spring Data JDBC",
          "Spring Data JDBC : Model et Repository",
          "DVDStore : Exploiter Spring Data JDBC",
          "Spring Data JPA avec Hibernate",
          "DVDStore : Exploiter Spring Data JPA",
          "Spring Data JPA : Modèle de données plus complet",
          "DVDStore : Modèle de données plus complet",
          "Spring Data JPA : Jackson et le Open Session In View (OSIV)",
          "Nullifier les proxy avec Jackson Hibernate5Module",
          "Solution 1 : La déproxification à postériori (N+1 Select)",
          "DVDStore : Déproxification de l'acteur principal et des avis du film",
          "Solution 2 : Les fetch à priori dans les repository (@Query ou @EntityGraph)",
          "DVDStore : Fetch à priori sur l'acteur principal et les avis",
          "Open Session / EntityManager in View, est-ce une bonne idée ?",
          "DVDStore : Desactivation du mode Open In View",
          "Spring Data JPA : Ecriture en base de données",
          "Introduction à la gestion transactionnelle",
          "DVDStore : Ajout de Film en mode transactionnel"
        ],
        "Architectures “Cloud native” et microservices": [
          "Introduction",
          "Découpage en microservices",
          "Les entites métier et les données",
          "Premier endpoint (micro)service",
          "Préparation du microservice consommateur",
          "Exploiter le service avec RestTemplate",
          "Associations entre entites et API ReST",
          "Spring cloud et Client Side Service Discovery avec Netflix Eureka",
          "Enregistrement des clients du discovery server",
          "Obtenir l'emplacement d'un microservice avec @LoadBalanced",
          "Expérimenter le load balancing côté client",
          "Programmation réactive et WebClient"
        ],
        "Rappels": [
          "Rappels \"Installer\" Java 11 Open JDK",
          "Rappels : Installer IntelliJ Community Edition",
          "Rappels : Utiliser Maven avec IntelliJ",
          "Struts, JSF, Spring MVC : les frameworks Web MVC 2"
        ],
        "Bonus": [
          "Pas certain(e) d'avoir tout saisi ?"
        ]
      },
      "requirements": [
        "Une bonne expérience du développement Java (Le cours \"Devenez développeur Java\" dans l'idéal)",
        "Une première expérience du développement web avec Java EE (Le cours \"Devenez développeur Web avec Java EE\" dans l'idéal)",
        "Une première expérience du développement Java avec une base de données via les API JDBC et JPA (Le cours \"Java et les bases de données avec JDBC, Hibernate et JPA\" dans l'idéal\")",
        "Avoir déjà utilisé Maven",
        "Avoir déjà utilisé IntelliJ est un plus"
      ],
      "description": "Spring et Spring Boot sont LES librairies qu'un développeur Java doit absolument connaître. Les 3/4 des applications Java d'aujourd'hui utilisent Spring quelque part.\nATTENTION : Initialement tourné avec Spring Boot 2, Spring 5 et Java 11, le cours vous fournit également les spécificités Spring Boot 3, Spring 6 et Java 21. Faites bien attention aux notes à télécharger associées à chaque session.\nDans ce cours de 10 heures vous apprendrez les fondements qu'il est essentiel et indispensable de connaître lorsque l'on est développeur Java (Attention ce cours exploite Java et non Kotlin ou Groovy).\nSpring est vaste, très vaste et ce cours n'est pas une énumération exhaustive des APIs de Spring mais un cours sur les APIs que vous allez forcément utiliser !\nAu programme :\nLe framework Spring, pourquoi et comment !\nSpring Boot l'essentiel !\nSpring MVC, le Web avec Thymeleaf et les API ReST\nSpring JDBC : lire et écrire dans une base de données relationnelle\nSpring JPA avec Hibernate et les mappings les plus communs\nSpring Data sur JDBC et JPA sans fioritures !\nLa gestion transactionnelle @Transactional, la base\nSpring Cloud et les microservices, l'architecture, Eureka et un peu de programmation réactive\nPas au programme :\nSpring AOP et Aspect J, parce que 99% d'entre vous n'en auront pas explicitement besoin\nLes détails de la gestion transactionnelle, parce que si vous en êtes là,  Internet suffit\nLe messaging et Spring Batch parce que ça s'utilise dans des contextes particuliers, ça ne fait pas partie de l'indispensable\nLes tests et la sécurité... Là j'ai pas de bonne excuse, ça viendra promis juré !\nEt puis tout le reste qui est pas mentionné plus haut, parce que vous serez alors assez doué pour l'apprendre tout seul.\n\n\nOn apprend rien sans y mettre les mains, alors rien que pour vous :\n30+ exercices fil rouge corrigés dont les sources sont disponibles sur GitHub\nJe réponds à TOUTES LES QUESTIONS depuis 2017 dans un délai de 48h\nEt non ce n'est pas une application complète parce que il y a rien de plus ennuyeux que de répéter 50 fois les même bouts de code (Vous le ferez bien assez dans la vraie vie).\n\n\nCe cours présenté avec la seule et unique DERNIERE VERSION DE JAVA EN LTS (avant 2021) c'est à dire Java 11 mais le cours est compatible avec les versions supérieures.\nIl vous sera recommandé d'utiliser IntelliJ Community pour les développements, un environnement de référence et gratuit.\n\n\nLe cours est présenté par moi même, Jean-Philippe Ehret, si vous ne me connaissez pas encore et bien dans 10 heures vous en aurez marre de me voir  et surtout m'écouter alors vous n'aurez probablement pas envie de me connaître plus. Mais si vous en voulez encore j'ai une chaîne YouTube sur le développement avec Java avec des trucs qui sont pas sur Udemy alors n'hésitez pas à y faire un saut !\n\n\nSinon, je n'ai plus qu'une seule chose à dire : Ne ratez pas ce cours ! Commencez MAINTENANT et changez votre vision du développement Java pour toujours !\n\n\nJP",
      "target_audience": [
        "Développeurs Java Junior"
      ]
    },
    {
      "title": "Web-Apps mit Javascript und jQuery selber programmieren",
      "url": "https://www.udemy.com/course/web-apps-mit-javascript-und-jquery-selber-programmieren/",
      "bio": "Der einfache Weg für Einsteiger mit und ohne Vorkenntnisse - bauen Sie interaktive Apps für jeden Webbrowser!",
      "objectives": [
        "Sie lernen hier praxisorientiert alle wichtigen Grundlagen von HTML, CSS und Javascript/jQuery - am Ende programmieren Sie eigene interaktive Web-Apps.",
        "Sie lernen von Grund auf \"echtes Programmieren\" in JavaScript - und Ihre Programme und Apps laufen in jedem Webbrowser!"
      ],
      "course_content": {},
      "requirements": [
        "Der Kurs ist für komplette Einsteiger geeignet. Wer aber schon Vorkenntnisse hat, wird natürlich ebenso profitieren.",
        "Anforderungen: Neugier, Lust, etwas zu meistern, von dem alle denken, es wäre \"schwierig\", Spaß an kreativen Herausforderungen.",
        "Für das Programmieren brauchen Sie einen Computer mit Tastatur (PC/Mac/Laptop). Die Apps laufen dann später auch auf jedem mobilen Gerät."
      ],
      "description": "Web-Apps sind in - sie laufen auf jedem Gerät, das einen Webbrowser hat - PC, Mac, Laptop, iPad, iPhone, Tablet, Smartphone... und man kann sie über das Web sofort der ganzen Welt mit einem Klick zugänglich machen. Kein Wunder, dass die Nachfrage nach guten Web-Apps immer weiter steigt.\nLernen Sie in meiner umfangreichen Ausbildung von Grund auf, Ihre eigenen Apps mit JavaScript und jQuery zu programmieren. Zuvor erwerben Sie alle dafür ausgerichteten Grundlagen, damit Sie eine solide Basis haben. Mit dem extra für meine Kurse entwickelten PageStyle-Editor, den ich Ihnen zur Verfügung stelle, basteln Sie Ihr eigenes sauberes Weblayout in Minutenschnelle, sodass Sie sich danach in Ruhe auf das Programmieren konzentrieren können.\nDer Kurs geht gründlich und immer leicht verständlich Schritt für Schritt voran, vermittelt alles Wissen, das Sie wirklich brauchen, ohne Sie mit technischem Ballast zu überfordern, und führt sie mit originellen Ideen, viel Spaß, Motivation und immer einem Schuss Humor auf Ihrem Weg vom Einsteiger zum Experten. Wir beginnen mit den Grundlagen von HTML und CSS, die man speziell für Web-Apps braucht, dann lernen wir, efffizient mit dem PageStyle-Editor umzugehen, um uns anschließend ausführlich in zahlreichen Projekten der Programmierung in Javascript und jQuery zu widmen - mit allen professionellen Techniken, und dennoch so einfach verständlich wie möglich. Zu jedem neu eingeführten Befehl und zu jeder Methode gibt es ein Fact-Sheet als PDF, auf dem alles präzise zusammengefasst ist.\nAlles, was Sie hier lernen, wird immer direkt am praktischen Beispiel zum Nachmachen gezeigt - und jeder Abschnitt vermittelt eine neue Technik, die solide eingeführt wird. Nie zuviel auf einmal, aber alles, was wichtig ist - konzentriert auf das, was man wirklich braucht, um echte Erfolgserlebnisse zu haben. Angefangen von kleinen Demos und Spielereien - bis zu immer größeren und cooleren Web-Apps. So werden Sie Schritt für Schritt zum Profi - ja, das ist möglich, selbst wenn Sie vorher noch nie programmiert haben.\nGlauben Sie an sich! Sie können programmieren - sei es als Weiterbildung für den Beruf oder nur aus Neugier und privatem Interesse. Programmieren fördert Ihre Kreativität, trainiert Ihr logisches Denken und macht vor allem Spaß!\nHätten Sie gedacht, dass Sie einen interaktiven grafischen Taschenrechner samt Layout in weniger als 15 Minuten programmieren können? Bereits in der Mitte dieser Ausbildung werden Sie es können.. und dann noch viel mehr. Am Ende bauen Sie souverän Ihre ganz eigenen Apps für den Webbrowser.\nIch bringe meine gesammelte und komprimierte Erfahrung aus 30 Jahren Softwareentwicklung in diesen Kurs ein. Ich fühle mich geehrt, Sie ausbilden zu dürfen.",
      "target_audience": [
        "Für jeden, der an sich glaubt und mit Spaß Programmieren lernen möchte. Es ist einfacher als Sie denken!",
        "Für berufliche Weiterbildung, privates Interesse, Lockdown-Frustrierte, Kreative, Logiker, Menschen, die schon immer mal ausprobieren wollten, ob sie programmieren lernen können.",
        "Jetzt ist der Zeitpunkt da - fangen Sie direkt an, und in wenigen Wochen sind Sie Web-App-Programmierer!"
      ]
    },
    {
      "title": "Coding a C compiler in Javascript",
      "url": "https://www.udemy.com/course/c-compiler-in-javascript/",
      "bio": "Learn all steps of compiler design in one course, and learn to write a C compiler in Javascript.",
      "objectives": [
        "Learn how to write a lexer which turns the C code into tokens, the smallest atomic parts of a programming language.",
        "Learn how to write a code generator, which takes your AST as input and emits a complete Assembly program that you turn into an executable .EXE or .ELF file.",
        "Learn to write a parser which parses the C code, through the tokens, and turning it into a data structure your program understands.",
        "Extra: Learn to create your own regular expression library that works not just with strings, but with any datatype as input.",
        "Learn to create an abstract syntax tree (AST), the primary data structure of any compiler.",
        "Extra: Learn how to write a transpiler (or pre-compiler) which adds functionality to Javascript itself.",
        "Extra: You will also learn the basics and intermediates of Typescript, a popular Javascript add-on.",
        "Everything you learn about compilers in this course, will work with any languages, not just Javascript and C."
      ],
      "course_content": {},
      "requirements": [
        "You need to have a basic understanding of Javascript, that is all. Everything related to ie. Typescript, C or Assembly - I will explain at every step."
      ],
      "description": "Coding a C compiler in Javascript\nIn this exciting new project we'll be coding a real C compiler in Javascript.\nThe first version will be able to parse a few commands and when all the steps are done (lexing, defining grammar, parsing, generating an AST, emitting code and writing the compiler driver) we will add new functionality, one command at the time.\nYou will learn every step of compiler design in this 15 episode course. In addition to this, you will also learn how to build your own, datatype-independent regular expression library and also a transpiler/pre-compiler for JS/TS code.\nPrerequisites\nTo follow along in this project you need a basic understanding of Javascript. That's it. Everything Node- or C or Typescript related will be explained at every step.\nOperating systems\nThis project will work equally well in Windows, Mac OS X or Linux. All you need is Node.js and Nasm. Just follow the instructions from the intro. Happy coding!\nAbout the author\nDr. Jonas is an experienced instructor who's been coding for 25 years and teaching for almost ten years. His popular Youtube channel has almost 50 000 subscribers and he's also running his own web TV channel with programming content. He's an appreciated teacher with stunning reviews and several programming courses of different kind.\n\n\nEnroll Today! Or check out the two hours of free previews.",
      "target_audience": [
        "This course is for Javascript developers who wishes to learn compiler design.",
        "This course is also for C developers who wishes to learn compiler design."
      ]
    },
    {
      "title": "Resilience Patterns in Microservice Architecture: Hands-On",
      "url": "https://www.udemy.com/course/resilience-patterns-microservice-architecture-learnit/",
      "bio": "Master circuit breakers, bulkheads, retries, and load balancing for stable distributed systems",
      "objectives": [
        "Understand the core resilience patterns used in modern microservices",
        "Implement circuit breakers using Resilience4j in Spring Boot",
        "Apply retry logic to recover from transient service failures",
        "Use time limiter patterns to prevent backend hangs and long response times",
        "Protect APIs with rate limiting using Bucket4j and Resilience4j",
        "Isolate failures with the bulkhead pattern (thread-pool and semaphore isolation)",
        "Build load-balanced microservices with Spring Cloud LoadBalancer",
        "Set up routing and edge protection with Spring Cloud Gateway",
        "Secure endpoints using OAuth2, JWT, and Spring Security",
        "Configure identity providers (like Auth0) for real-world authentication",
        "Monitor service health using Spring Boot Actuator",
        "Create fault-tolerant asynchronous flows using CompletableFuture and TimeLimiter",
        "Compare different resilience libraries (Resilience4j vs. Bucket4j) and know when to use each",
        "Write integration tests for resilient endpoints in Spring Boot",
        "Design backend systems that stay reliable under pressure and traffic spikes"
      ],
      "course_content": {
        "Introduction": [
          "Communication Plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice",
          "Course Structure & How to Navigate This Course"
        ],
        "Resilient, Scalable & Secure Systems with Spring Boot": [
          "OAuth, OAuth 2.0, JWT & OpenID Connect, Identity Provider",
          "Practice: Auth0 - Configuration of Identity Provider",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 1",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 2",
          "Testing Security: Testing of Spring Boot Endpoints - Part 1",
          "Testing Security: Testing of Spring Boot Endpoints - Part 2",
          "Protecting APIs with Rate Limiting",
          "Rate Limiting Practical Guide: Bucket4j",
          "Building Resilient Services with Resilience4j in Spring Boot. Circuit Breaker",
          "Circuit Breaker - Practice",
          "Spring Boot + Resilience4j: Retry Pattern",
          "Spring Boot + Resilience4j: Time Limiter Pattern",
          "Spring Boot + Resilience4j: Rate Limitter Pattern",
          "Spring Boot + Resilience4j: Bulkhead Pattern",
          "Microservices Patterns in Practice: Exploring API Gateway",
          "Spring Cloud Gateway: Practice",
          "Understanding Load Balancing: Concepts, Strategies, and Use Cases",
          "Implementing Load Balancing with Spring Cloud LoadBalancer"
        ],
        "Annex: Spring Security": [
          "Spring Security Introduction",
          "First Login Form & First Security Filter Configuration",
          "Login with Database Users, Roles & Privileges",
          "Remember Me & Methods Security",
          "Spring Security Architecture & Authentication Provider",
          "EXAM: Spring Security - Online Shop"
        ],
        "Annex: Spring Boot": [
          "Spring Boot: Introduction",
          "The First Spring Boot Project",
          "Spring Boot Starters",
          "Spring Boot Configurations & Application Properties",
          "Spring Boot Actuator - Monitoring Tools"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Basic knowledge of Java programming",
        "Familiarity with object-oriented programming concepts",
        "Some experience with Spring Boot (recommended but not mandatory)",
        "Understanding of RESTful APIs and HTTP methods",
        "Ability to run Java applications using an IDE like IntelliJ or Eclipse",
        "Basic familiarity with Maven or Gradle for dependency management"
      ],
      "description": "Your microservices are deployed. Your APIs are live. But will they survive?\nModern applications don’t fail because of bugs - they fail because they can’t handle traffic spikes, dependency timeouts, or unexpected downtime in connected services. That’s why top engineers today are turning to resilience patterns - to build systems that don’t just run, but endure.\nIn this hands-on course, you’ll master the core resilience patterns that protect real-world systems - including circuit breakers, retries, time limiters, rate limiters, bulkheads, and load balancing - all using Spring Boot, Resilience4j, and Spring Cloud.\nYou won’t just learn how to implement them - you’ll understand when, why, and where to use each pattern, with real coding demos, architectural reasoning, and battle-tested practices.\nWhat You’ll Build:\nSecure, production-ready microservices\nFault-tolerant APIs that gracefully recover from failures\nScalable backends that handle real-world traffic and instability\nRate-limited endpoints that protect your services from abuse\nLoad-balanced systems with automatic instance failover\n\n\nWhy This Course?\nThis isn’t theory. This is real-world engineering.\nYou’ll work with:\nResilience4j, the industry-standard lightweight fault tolerance library\nSpring Cloud Gateway for routing and edge protection\nSpring Security & OAuth2 to protect your APIs\nSpring Boot Actuator to monitor and measure application health\nWe go beyond simple REST apps and teach you how to survive in today’s cloud-native, distributed architecture world.\n\n\nWho This Is For:\nSoftware Engineers building or maintaining microservices\nBackend engineers preparing for real production deployments\nSpring Boot developers wanting to upgrade their architecture skills\nSoftware architects and tech leads focused on uptime, performance, and reliability\nAnyone working with distributed systems who wants to prevent cascading failures\nBy the end of this course, you won’t just know what resilience is - you’ll know how to build it into everything you write.\nEnroll now and start building microservices that can take a hit - and keep running.",
      "target_audience": [
        "Software Engineers who want to build robust, fault-tolerant applications",
        "Backend engineers working with microservices or distributed systems",
        "Developers interested in implementing real-world resilience patterns",
        "Software architects aiming to improve system stability and scalability",
        "DevOps engineers focused on service reliability and graceful failure handling",
        "Teams building cloud-native services that must survive network and dependency failures",
        "Anyone maintaining mission-critical APIs that must handle high load and partial outages",
        "Engineers preparing for system design interviews or backend architecture roles",
        "Developers transitioning from monoliths to microservices and needing production-grade patterns",
        "Spring Boot users looking to go beyond basic CRUD apps"
      ]
    },
    {
      "title": "Introducción a Entity Framework Core 6 - De Verdad",
      "url": "https://www.udemy.com/course/introduccion-a-entity-framework-core-2-1-de-verdad/",
      "bio": "Aprende desde cero Entity Framework Core 6",
      "objectives": [
        "Vas a ser capaz de desarrollar aplicaciones de .net (desktop, web) utilizando Entity Framework Core.",
        "Podrás crear bases de datos a partir de código fuente de C#.",
        "Vas a saber modelar relaciones entre tus entidades utilizando el API Fluente.",
        "Podrás crear pruebas automáticas, tanto unitarias como de integración.",
        "Estarás familiarizado con las últimas nuevas características de Entity Framework Core."
      ],
      "course_content": {
        "Introducción a Entity Framework": [
          "Introducción",
          "¿Qué es Entity Framework Core?",
          "Versiones de EF Core",
          "Código Primero y Base de Datos Primero",
          "¿Cuándo Podemos Usar EF Core?",
          "¿Cuándo No Usar EF Core?",
          "EF Core vs Dapper",
          "Instalando el EF Core CLI",
          "Configurando una Aplicación de Consola con EF Core",
          "Configurando una Aplicación de ASP.NET Core con EF Core",
          "Resumen",
          "Código del Curso en Github"
        ],
        "Modelado de la Base de Datos": [
          "Introducción",
          "Creando el Proyecto",
          "Creando la Entidad Género",
          "Llaves Primarias - Configuraciones",
          "Longitud Máxima de un Campo de Texto",
          "Campos no Nulos",
          "Cambiando Nombres y el Esquema",
          "Creando la Entidad Actor - Mapeando DateTime a Date",
          "Creando la Entidad Cine - Precisión de Decimales",
          "Almacenando la Ubicación de un Cine - Datos Espaciales",
          "Creando la Entidad Películas - Unicode",
          "Relaciones Uno a Uno - Propiedades de Navegación - Ofertas de Cines",
          "Relaciones Uno a Muchos",
          "Utilizando Enums",
          "Valor por Defecto",
          "Relación Muchos a Muchos - Automática",
          "Relaciones Muchos a Muchos - Manual",
          "Configurando Convenciones",
          "Organizando el OnModelCreating",
          "Visualizando la Base de Datos",
          "Resumen"
        ],
        "Consultando Datos": [
          "Introducción",
          "Insertando Datos con Data Seeding",
          "Un Simple Query",
          "Queries Más Rápidos con AsNoTracking",
          "Obteniendo el Primer Registro con First y FirstOrDefault",
          "Filtrando con Where",
          "Ordenando con OrderBy y OrderByDescending",
          "Paginando con Skip y Take",
          "Seleccionando Columnas con Select",
          "Ahórrate el Select con AutoMapper",
          "Consultando Datos Espaciales",
          "Ordenando y Filtrando Datos Espaciales",
          "Eager Loading - Include - Cargando Data Relacionada",
          "Utilizando ThenInclude",
          "Ordenando y Filtrando la Data Relacionada",
          "ProjectTo y Eager Loading",
          "Select Loading - Cargado Selectivo",
          "Explicit Loading - Carga Explícita",
          "Lazy Loading - Carga Perezosa",
          "Desactivando el Lazy Loading",
          "GroupBy",
          "Ejecución Diferida",
          "Resumen"
        ],
        "Crear, Actualizar y Borrar Datos": [
          "Introducción",
          "Modelo Conectado y Modelo Desconectado - Estatus",
          "Insertando Registros",
          "Insertando Varios Registros",
          "Insertar Registros con Data Relacionada Nueva",
          "DTO para Insertar Cine (opcional)",
          "Insertar Registros con Data Relacionada Existente",
          "Mapeo Flexible",
          "Actualizando Registros - Modelo Conectado",
          "Actualizando Registros - Modelo Desconectado",
          "Actualizando Registros con Data Relacionada",
          "Borrado Normal",
          "Borrado Suave o Lógico",
          "Filtros al Nivel del Modelo",
          "Resumen"
        ],
        "Configurando Propiedades": [
          "Introducción",
          "Modos de Configuración",
          "Llaves Primarias",
          "Ignorando Propiedades y Clases",
          "Índices",
          "Índices con Filtros",
          "Introducción al HasConversion",
          "HasConversion Personalizado",
          "Entidades Sin Llave",
          "Ejecutando una Vista",
          "Propiedades Sombra",
          "Automatizando Configuraciones con el API Fluente",
          "Resumen"
        ],
        "Configurando Relaciones": [
          "Introducción",
          "Conceptos Básicos",
          "Relaciones por Convenciones",
          "Relaciones Requeridas y Opcionales",
          "Atributo ForeignKey",
          "Dos Propiedades de Navegación a la Mista Entidad - InverseProperty",
          "Relación Uno a Uno con el API Fluente",
          "Relación Uno a Muchos con el API Fluente",
          "Relación Muchos a Muchos con el API Fluente - Con Clase Intermedia",
          "Relación Muchos a Muchos con el API Fluente - Sin Clase Intermedia",
          "OnDelete: ¿Qué Ocurre al Borrar?",
          "División de Tablas",
          "Entidades de Propiedad",
          "Herencia - Tabla por Jerarquía",
          "Herencia - Tabla por Tipo",
          "Resumen"
        ],
        "Comandos y Migraciones": [
          "Introducción",
          "Comando Get-Help",
          "Comando Add-Migration",
          "Comando Update-Database",
          "Comando Remove-Migration",
          "Comando Get-Migration",
          "Comando Drop-Database",
          "Modificando las Migraciones Manualmente",
          "Migration Bundles o Empaquetado de Migraciones",
          "Comando Script-Migration",
          "Database Migrate - Aplicando las Migraciones desde C#",
          "Modelos Compilados",
          "Base de Datos Primero - Scaffold-DbContext",
          "Resumen"
        ],
        "DbContext": [
          "Introducción",
          "Propiedades del DbContext",
          "OnConfiguring",
          "Cambiando el Estatus de una Entidad con Entry",
          "Actualizando Algunas Propiedades",
          "Sobrescribir SaveChanges",
          "Inyección de Dependencias en el DbContext",
          "Eventos Tracked y StateChanged",
          "Eventos de SaveChanges",
          "Queries Arbitrarios",
          "Sentencias Arbitrarias",
          "ToSqlQuery - Centralizando Queries Arbitrarios",
          "Procedimientos Almacenados",
          "Introducción a las Transacciones",
          "BeginTransaction - Una Transacción Para Varios SaveChanges",
          "Estrategia de Detección de Cambios Personalizada - Parte 1",
          "Estrategia de Detección de Cambios Personalizada - Parte 2",
          "Resumen"
        ],
        "Escenarios Avanzados": [
          "Introducción",
          "Funciones Escalares",
          "Funciones con Valores de Tabla",
          "Columnas Calculadas",
          "Secuencias",
          "Conflictos de Concurrencia por Campo",
          "Conflictos de Concurrencia por Fila",
          "Manejando Conflictos de Concurrencia",
          "Conflictos de Concurrencia con el Modelo Desconectado",
          "Introducción a las Tablas Temporales",
          "Insertar, Editar y Borrar Datos de la Tabla Temporal",
          "Consultando la Tabla Temporal e Histórica",
          "TemporalAsOf - ¿Cuál era el Valor de un Registro en una Fecha X?",
          "TemporalFromTo - Registros Activos en un Rango de Fecha",
          "TemporalContainedIn - Registros Contenidos en un Rango de Fecha",
          "TemporalBetween - Registros Activos en Rango de Fecha Cerrado",
          "Restaurando el Registro Borrado",
          "Personalizando la Tabla Temporal e Histórica",
          "Trabajando con el DbContext en Otro Proyecto",
          "Resumen"
        ],
        "Pruebas Automáticas": [
          "Introducción",
          "Concepto de Prueba",
          "Pruebas Automáticas",
          "Pruebas Unitarias - Nuestra Primera Prueba",
          "Introducción a los Mocks",
          "Configurando el Proveedor en Memoria",
          "La Primera Prueba Unitaria con EF Core",
          "Configurando AutoMapper para Pruebas - Pruebas Negativas",
          "Usando LocalDb en Pruebas Automáticas",
          "Resumen"
        ]
      },
      "requirements": [
        "Nivel básico de C#. Sabes usar variables, funciones, clases, y LINQ"
      ],
      "description": "En este curso aprenderás a utilizar Entity Framework Core 6 para hablar con una base de datos desde código de C#.\n- Aprenderemos a crear bases de datos desde nuestro código de C# utilizando la técnica de código primero.\n- Haremos una breve comparación con Dapper, para ver cuál es la diferencia entre cada una de estas herramientas.\n- Veremos cómo leer, actualizar, borrar, y crear data utilizando Entity Framework Core.\n- Aprenderemos a trabajar con relaciones entre nuestras tablas: Relaciones uno a muchos, relaciones uno a uno, y relaciones muchos a muchos.\n- Utilizaremos el API Fluente para realizar configuraciones del esquema de nuestra base de datos.\n- Veremos cómo utilizar pruebas automáticas en nuestros proyectos de Entity Framework Core.\n- Aprenderemos acerca de las nuevas funcionalidades que nos trae Entity Framework Core 6.\n- Utilizaremos funciones como Sum, Average y GroupBy, para realizar operaciones sobre distintos registros de una tabla.\n- Veremos cómo ejecutar procedimientos almacenados utilizando Entity Framework Core.\n- Cargaremos la data relacionada de nuestras entidades de distintas formas, utilizando eager loading, cargado explícito, select loading y lazy loading.\n- Aprenderemos que con la ejecución diferida podemos utilizar técnicas interesantes para hacer nuestro código más flexible y reutilizable.\n- Veremos técnicas de cómo configurar correctamente Entity Framework Core en ASP.NET Core, como por ejemplo, veremos cuándo debemos usar un pool para reciclar el DbContext.",
      "target_audience": [
        "Desarrollador principiante o avanzado de .net que quiere estar al día con Entity Framework Core."
      ]
    },
    {
      "title": "Eine Einführung in Clean Code — saubere Software entwicklen!",
      "url": "https://www.udemy.com/course/clean-code-java-object-oriented-programming/",
      "bio": "Erfahre, wie du mit einfachen Mitteln, deine Codequalität enorm verbessern kannst. Einfach bessere Software.",
      "objectives": [
        "Sauberen Code schreiben, der verständlich und gut wartbar ist"
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung",
          "Wieso sollen wir sauberen Code schreiben?",
          "(Keine) Übungen",
          "Harte Arbeit",
          "Pfadfinder sein",
          "Code",
          "Dein Trainer"
        ],
        "Kernkonzepte": [
          "Sei ein Profi",
          "Trage Verantwortung",
          "Do one thing."
        ],
        "Saubere Namen": [
          "Aussagekräftige und aussprechbare Namen",
          "Ein Wort pro Konzept",
          "Klassen gut benennen",
          "Methoden gut benennen",
          "Variablen gut benennen",
          "Der \"to\"-Ansatz"
        ],
        "Saubere Methoden": [
          "Kleine Methoden",
          "Wenig Parameter",
          "Keine Magic Number",
          "Entweder anweisen oder abfragen - nicht beides",
          "Keine Flags",
          "Input bleibt Input!"
        ],
        "Sonstige Sauberkeiten": [
          "Das Gesetz von Demeter",
          "Gute Kommentare - schlechte Kommentare -> Keine Kommentare!",
          "Kleine Klassen - Wenig Klassen",
          "Niedrige Kopplung",
          "Hohe Kohäsion",
          "Coding Conventions"
        ],
        "Sauberer Programmierer": [
          "Was ist ein Clean Coder?",
          "Glaube nicht!",
          "Kenne deinen Kunden",
          "Kenne deine Werkzeuge",
          "Kenne deine Fähigkeiten",
          "Sage nein",
          "Praktiziere testgetriebene Entwicklung",
          "Übe!"
        ],
        "Code Smells": [
          "Riecht es hier ein wenig komisch?",
          "Die GOTT-Klasse",
          "Kommentare",
          "Toter Code",
          "Duplizierter Code",
          "Unverständliche Namen",
          "Lange Methoden",
          "Gezuppel - hineingreifen in den Codeberg",
          "Switch-Statements",
          "Eine Klasse übernimmt zu viel Verantwortung",
          "Feature Neid",
          "Faule Klassen",
          "Unnötige Vererbung",
          "Aufwändiger Buildprozess",
          "Zu viele Argumente in einer Methode"
        ],
        "Fragen und Antworten": [
          "Codebeispiel für das Gesetz von Demeter"
        ],
        "BONUS: Hier gibt es tolle Angebote von mir": [
          "Wage das Abenteuer Softwareentwicklung",
          "Weitere Kurse zum Bestpreis",
          "Bonus: Coding.Cards"
        ]
      },
      "requirements": [
        "Du solltest eine Programmiersprache beherrschen",
        "Du hast Freude daran, gute Software zu entwickeln"
      ],
      "description": "Clean Code ist in aller Munde.\nKleine Änderungen am eigenen Programmierstil und dem eigenen Bewusstsein, bringen enorme Effekte beim Entwickeln von guter, produktiver und wartbarer Software.\nIn diesem Einführungskurs wirst du viele kleine und interessante Anregungen und Prinzipien kennenlernen, mit denen du die Softwarequalität deiner Programme enorm verbessern kannst.\nCode wird viel häufiger gelesen und verstanden, als geschrieben. Jede Erweiterung und Änderung an bestehendem Code, setzt Verständnis von bereits geschriebenem Code voraus.\nDaher ist lesbarer, verständlicher Code so enorm wichtig.\nGenau hier setzt Clean Code an. Unter dem Begriff fasst man viele kleine und größere Methoden zusammen, die den Code einfacher und verständlicher machen.\nEs ist eine Wohltat, Clean Code zu lesen. Dein Team wird es dir danken!\nMit Clean Code bekommst du genau die Werkzeuge in die Hand, um ohne viel Aufwand, lesbaren und verständlichen Code entwickeln zu können.\nDie Beispiele sind in JAVA geschrieben - jedoch so einfach gehalten, dass du sie auch ohne JAVA-Kenntnisse verstehen kannst.\nSchreib dich ein, und werde ein Clean Coder!\nHier Stichpunkte aus dem Inhalt:\nWieso Clean Code?\nDie Pfadfinderregel\nProfessionelles Verhalten\nVerantwortung tragen\nAussagekräftige Namen\nAussprechbare Namen\nNamen für Klassen\nNamen für Methoden\nNamen für Variablen\nSaubere Methoden\nSaubere Klassen\nDas Gesetz von Demeter\nGute Kommentare\nKohäsion\nKopplung\nDer saubere Programmierer\nCode Smells",
      "target_audience": [
        "Programmierer",
        "Softwareentwickler"
      ]
    },
    {
      "title": "Python 4000: The Software Creation Process (\"Gig Success\")",
      "url": "https://www.udemy.com/course/python-4000-gig-success/",
      "bio": "Who’s afraid of A.I? (2025 Update!)",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Students must be able to create scripts & call functions using Python",
        "The completion of our \"Practical Python\" series - or equvalent education - is recommended"
      ],
      "description": "I've no idea why everyone is so freaked about today's code generators ... creating software is so much more than merely 'speaking code!'\n\nFrom that one person gig, to those board room brainstorming sessions, the concepts taught in \"Gig Success\" are designed for professionals who need to learn what to do to keep clients happy, as well as to influence software developers.\nNo matter if your are a top-down or bottom-up software developer, let me help you take your analytical, requirements- gathering, coding, and testing abilities, to the next level!\n\n\nAbout This Series\nWritten by a Principal Trainer & Principal Software Development Engineer, in order to insure mastery key topics are presented several times, as well as at ever-increasing depth. You will also be using cross platform programming interfaces - the same techniques will work on Microsoft Windows, Linux, and Mac.\n\n\nNote:\nGig Success is a \"Level 4\" educational opportunity. Students should be either (1) comfortable writing Python, or (2) using A.I to generate code.\n\n\nRelated Concepts:\nAfter completing the Python 1000 series, in the Python 2000 series you can complete  keyword mastery by exploring a large collection of activity-related topics.\nSold separately, in the 2000 series students will enjoy learning how to create Lambdas, Generators, Context Managers, Packages & Modules, Classes, Factories, Frameworks, how to manage Exceptions, as well as other professional programming topics.  From keywords & tabs, to testing & documentation, hints & tips on how to use Python in the professional world abound!",
      "target_audience": [
        "Students looking to learn how to succeed in the new, global, \"Gig Economy\"",
        "Software developers interested in learning how to better work with clients & patrons",
        "Professionals who want to know how to capture requirements, as well as how to create & test software, from them"
      ]
    },
    {
      "title": "x86 Assembly Language - Subroutine Management",
      "url": "https://www.udemy.com/course/master-x86-assembly-language-from-zero-to-hero/",
      "bio": "Working with Subroutines from Scratch",
      "objectives": [
        "Learn advanced instructions of x86 Assembly Language",
        "Master working with subroutines in x86 assembly code",
        "To demonstrate knowledge and capacity to work with x86 structures",
        "Acquire proficient Machine Language knowledge",
        "Get fast and friendly support in the Q&A area"
      ],
      "course_content": {},
      "requirements": [
        "Have completed the previous parts of this program.",
        "Any computer and OS will work — Windows, macOS or Linux."
      ],
      "description": "Continue your computer science/IT journey in-depth with this x86 Assembly Language training on Subroutines.\nWhether you want to:\n- build the skills you need to get your first programming job\n- move to a more senior IT position\n- become a computer scientist mastering in assembler\n- or just learn x86 assembly language to be able to work with your own science projects quickly.\n\n...this introduction to x86 Masterclass is the course you need to do all of this, and more.\n\n\nWhat makes this course ideal?\nThis course contains all the Advanced Foundations of x86 Assembly Language.\nWe will learn it from scratch so any person without any background can start learning.\nAll the content is for free!\n\n\nHere’s just some of what you’ll learn\n(It’s okay if you don’t understand all this yet, you will in the course)\nMaster subroutine management in x86\nUnderstanding structures and data alignment\nMaster working with the activation block\nUnderstand advanced x86 topics\n\n\nWhat if I have questions?\nAs if this course wasn’t complete enough, I offer full support, answering any questions you have everyday.\nThis means you’ll never find yourself stuck on one lesson for days on end. With my hand-holding guidance, you’ll progress smoothly through this course without any major roadblocks.\n\n\nReady to get started, developer?\nEnroll now using the “Add to Cart” button on the right, and get started on your way to creative, advanced OS brilliance.\nOr, take this course for a free spin using the preview feature, so you know you’re 100% certain this course is for you.\nSee you on the inside (hurry, x86 is waiting!)",
      "target_audience": [
        "Take this course if you want to gain a fundamental understanding of x86 Assembly Language",
        "Take this course if you have been trying to learn x86 but: 1) still don't really understand x86, or 2) still don't feel confident enough",
        "Take this course if you want to master x86 subroutine management"
      ]
    },
    {
      "title": "Python GUI and Games with Tkinter: Build 5 GUI Games",
      "url": "https://www.udemy.com/course/python-gui-and-games-with-tkinter/",
      "bio": "Build Games with Python using tkinter",
      "objectives": [
        "Be familiar with tkinter widgets",
        "Learn GUI from the basics",
        "Learn how to draw different shapes on canvas",
        "Keyboard and Mouse Events",
        "Create 2D animation",
        "Add tabs and a Menu in your application",
        "How to make Games",
        "5+ GUI Games"
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic understanding of the Python Programming Language.",
        "A computer system with an internet connection"
      ],
      "description": "Welcome to the \"Python GUI and Games with Tkinter: Build 5 GUI Games\"  course, a Tkinter is the standard Python interface for developing GUI. Python with Tkinter is the fastest and easiest way to create GUI applications.  This course is created in a way that even a newbie can follow. Whether you have some experience in creating GUI using PyQt or any other framework or you are completely new this course is just right for you.\n\n\nIn this course first, you will learn Tkinter widgets that are used to make your GUI application. You will learn how to use widgets, how to customize them, how to change their properties, and a lot more. Then we are going to use all these widgets to make our GUI Games.\n\n\nI will start by helping you get install needed things on your system, which includes Python, pip, and, PyCharm IDE, after that we will install the required packages as and when needed.\n\n\nTkinter widgets include:\nMainWindow\nPhotoImage\nLabel\nEntry\nButton\nmessagebox\nCheckbutton\nRadiobutton\nScale\nListbox\ncolorchooser\nText\nfiledialog\nMenu\nFrame\nToplevel\nProgressbar\nCanvas\nScrollbar\nScrolledText\nComboBox\nTreeView\nSpinbox\nLabelFrame\nMenubutton\nSeparator\nSizegrip\nand muny more!\n\n\nThen we are going to learn how to catch events.\nKey Events from the Keyboard\nMouse events\n\n\nOnce we are done with the widgets, you will take a big leap and we are going to make games using Tkinter.\nYou will make the below games along with the course.\n\n\nGame - 01: Rock paper scissors\nGame - 02: tic tac toe\nGame - 03: Color Ball Finder\nGame - 04: Make an image from the image part\nGame - 05: Flip a Card ( Card pair)\nYou will get lifetime access to all the lectures.\nSo what are you waiting for? Start creating an Awesome GUI application with me most easily and practically and boost your career.",
      "target_audience": [
        "Beginner Python Developers who want to build Awesome GUI Games using tkinter",
        "All level Python GUI Developer"
      ]
    },
    {
      "title": "STM32 ile Gömülü Yazılım Tasarımı",
      "url": "https://www.udemy.com/course/stm32cubeide-ile-gomulu-yazlim-tasarim/",
      "bio": "STM32CubeIDE ve STM32F4-Discovery İle Gömülü Yazılım Tasarımı",
      "objectives": [
        "STM32CubeIDE kullanımı",
        "STM32f4-Dicovery Kit Detayları",
        "Örnek Gerçek Hayat Projeleri",
        "STMStudio Kullanımı",
        "HAL Kütüphane Detayları",
        "STemWIN Grafik Kütüphanesi",
        "FatFS Dosya Sistemi",
        "LWIP Ethernet",
        "I2C, SPI, UART, USB ve ETHERNET Gibi Çevre Birim Kontrolü",
        "IOT Uygulamaları (MQTT ile)",
        "Gömülü Yazılım Geliştirme Detayları",
        "GSM ve GPS Uygulamaları",
        "Sinyal İşleme (FFT, IIR)",
        "OV7670 Kamera Uygulamaları",
        "RF Haberleşme (LoRa) Uygulamaları",
        "ESP8266 - Wifi Uygulamaları",
        "nRF24L01 Uygulamaları",
        "GPIO, I2C, SPI, USB, ADC, DAC, PWM gibi Çevrebirim Kontrolü"
      ],
      "course_content": {},
      "requirements": [
        "Temel Seviye C programlama bilgisi",
        "STM32CubeIDE'nin Bilgisayara yüklü oması",
        "STM32F4-Discovery karta sahip olmak"
      ],
      "description": "Bu eğitim serisi en güncel STM gömülü yazılım geliştirme aracı olan STM32CubeIDE ve STM32F4-Discovery Geliştirme Kiti kullanılarak hazırlanmıştır.\nYıllar içerisinde sahip olduğum gömülü yazılım alanındaki tecrübelerimi bu kurs sayesinde sizlerle paylaşmak istedim.\nEn güncel gömülü yazılım tekniklerini, metodolojilerini ve araçlarını bu kurs sayesinde sizlerle paylaşıyorum.\nKurs içeriğini olabildiğince açık ve anlaşılır şekilde hazırlamaya çalıştım.\nBu eğitim sayesinde ADC, DAC, GPIO, UART, SPI, I2C, USB ve ETHERNET gibi arayüzler hakkında detaylı bilgiye sahip olacaksınız.\nÇevre birimleri kolaylıkla kontrol edebileceğiniz HAL kütüphaneleri hakkında bilgi sahibi olacaksınız.\nSTM işlemci aileri ile yapacağınız tasarımlarda sıklıkla kullanacağınız STM32CubeIDE aracının detaylarına vakıf olacaksınız.\nEğitim içerisinde uygulamalı olarak anlatılan protokol ve gerçek hayat projeleri ile kendinizi gömülü yazılım geliştirme konusunda geliştireceksiniz.\nUygulamalı gerçek hayat projelerini kendi uygulamalarınızda kolaylıkla kullanabilmeniz için tüm kaynak kod ve proje dosyaları sizlerle paylaşılmaktadır.\nBu kurs gömülü yazılım dünyasına yeni adım atan veya bilgiye sahip olan ancak kendisini daha da geliştirmek isteyen Mühendis ve Mühendis adayları için özenle hazırlanmkştır.\nSizler de kurs içeriğinin zenginleşmesi için geri dönüş sağlayıp eklenmesini istediğiniz proje veya içerik konusunda yardımcı olabilirsiniz.\nKurs ile ilgili aklınıza takılan soru ve yorunları çekinmeden paylaşmanızı rica ediyorum. Sizlerden gelen geri dönüşler kurs içeriğinin güncellenmesi konusunda çok yardımcı olacaktır.\nSon söz;\nSizlerden ricam, kursumu beğenseniz de beğenmesenizde yorum ve puanlama yapmanızdır. Başka insanların da bu kurs içeriğinde faydalanabilmeleri için sizlerden gelen geri dönüşler çok değerli.",
      "target_audience": [
        "Gömülü yazılım konusunda bilgi edinmek veya tecrübe kaanmak isteyen herkes katılabilir."
      ]
    },
    {
      "title": "Blueprint: Ace Backtracking/Recursion Interview Problem",
      "url": "https://www.udemy.com/course/blueprint-ace-backtrackingrecursion-interview-problem/",
      "bio": "Compiled list of Leetcode questions to Ace your Next Interview",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "A basic understanding of essential data structures and algorithms is desirable."
      ],
      "description": "This course is part of series of courses teaching you how to ace any coding interview at big tech companies. This course we will be focusing on backtracking and recursive problems.\nIf you visit the Leetcode page now you will see that there are almost 3000 questions. No matter if you have 3 weeks or 3 or 6 months to prepare, solving 3000 questions seems impossible.\nQuality over quantity! I solved hundreds of them while preparing for big tech interviews and I can say with confidence after certain number of questions we have diminishing returns. A good base of questions with patterns clearly explained is all you really need. As of now there are many lists online Blind 75, Prashad's leetcode patterns, curated list of problems from Elements of Programming.\nI aggregated all problems from those lists and tips/tricks from the books in one free platform. Solving problems on this platform will make you prepared for any coding interview at most of the big tech companies. For each problem, we have description, written explanation with time/space complexity. All problems are solved using 4 different programming languages C++, Java, JavaScript and Python. For each problem we created a deep dive video going into details on how to solve the problem. As of this moment we have 17 categories with 200+ solved problems.\n\n\nThe platform is meant to be used following 4 simple steps:\nStart with any of the categories, and go from easy to hard level problems (sorted order)\nRead the problem, see if you can do it on your own, read the explanations and watch the video\nTry related problems and continue solving the problem in the selected category\nRetention phase, after 3 weeks randomly select a problem from the category you have already completed, solved the problem in your head. Basically just go through the pattern you would use, read the explanation of the solution",
      "target_audience": [
        "Those aiming to excel in technical coding interviews with companies such as Google, Facebook, Microsoft, Amazon, and more."
      ]
    },
    {
      "title": "Aprenda Quarkus e Desenvolva API's RESTful Poderosas em Java",
      "url": "https://www.udemy.com/course/aprenda-quarkus-e-desenvolva-apis-restful-poderosas-em-java/",
      "bio": "Aprenda de vez o framework Java Subatômico e Supersônico Quarkus para criar API's RESTful poderosas e robustas",
      "objectives": [
        "Desenvolvimento de Aplicações Enterprise com Quarkus",
        "Desenvolver API's RESTFul utilizando recurso avançados",
        "Implementar Testes automatizados na API com Rest Assured",
        "Entender o processo de modelagem e desenvolvimento de API's",
        "Mapear e manipular entidades no banco de dados através da API",
        "Documentação da API com Swagger UI"
      ],
      "course_content": {
        "Introdução e Início": [
          "Instruções iniciais e repositório do projeto no GITHUB",
          "Conhecendo o Quarkus",
          "Alinhamento sobre Rest",
          "Concluindo o alinhamento sobre Rest",
          "Diferença entre REST e RESTFul"
        ],
        "Preparação do Ambiente": [
          "Download e Instalação do JDK",
          "Download e Instalação do Apache Maven",
          "Download e Instalação do Intellij",
          "Download e Instalação do Insomnia"
        ],
        "Iniciando o Projeto": [
          "A API que será desenvolvida neste curso",
          "Criação do Projeto Quarkus",
          "Listando e adicionando extensões do Quarkus no projeto"
        ],
        "API de Users": [
          "Conhecendo a API de Usuarios (Users)",
          "Criando o POST de Users",
          "Recebendo e devolvendo objetos JSON",
          "Instalando o banco de dados",
          "Criando a tabela de Users e configurando a conexão",
          "Mapeamento da Entidade de Users",
          "Manipulando entidades com o Panache Entity",
          "Concluindo as operações CRUD",
          "Utilizando os repositórios do Panache",
          "Aplicando validações com Hibernate Validator (Bean Validation)",
          "Retornando um objeto de erro padrão",
          "Alterando os códigos de status para mais específicos",
          "Evitando codigo boilerplate com o Lombok project"
        ],
        "API de Posts": [
          "Conhecendo a API de Postagens de Usuários",
          "Criando o Resource de Posts e os endpoints",
          "Implementando o método de realizar postagens",
          "Concluindo a API de Postagens"
        ],
        "API de Followers": [
          "Conhecendo a API de Followers",
          "Criando a Tabela e as classes necessárias para API",
          "Implementando o método de seguir um usuário",
          "Concluindo o PUT de followers",
          "Evitando conflito de usuarios",
          "Implementando o GET de Followers",
          "Implementando o método para deixar de seguir um usuário",
          "Restrigindo o acesso aos posts"
        ],
        "Implementando Testes Automatizados na API": [
          "Configurando o ambiente para os testes",
          "Implementando o primeiro teste de API",
          "Testando o caso de erro de validação",
          "Realizando Testes ordenados",
          "Criando cenário com beforeEach",
          "Teste de usuário inexistente ao tentar fazer uma postagem",
          "Definindo os casos de teste da lista de posts",
          "Testes de Listagem de postagens pt. 01",
          "Testes de Listagem de postagens pt. 02",
          "Testes na API de Followers",
          "Usuário deve seguir um outro usuário",
          "Testes de listagem de seguidores",
          "Finalizando o módulo de testes"
        ],
        "Finalização": [
          "Documentando a API com Swagger UI",
          "Adicionando meta dados na documentação",
          "Empacotando a aplicação para produção",
          "Subindo a aplicação com Docker",
          "Conclusão"
        ],
        "Bônus: Aprofundando em Docker": [
          "O que posso ou não fazer com Docker",
          "Instalação do node JS",
          "Download Beekeeper Studio",
          "Aprendendo a encontrar e baixar imagens Docker",
          "Rodando e utilizando o MySQL no Docker",
          "Utilizando mais de uma versão do MySQL na sua máquina de forma simples",
          "Aprendendo a parar e restartar um container",
          "Um erro que os desenvolvedores iniciantes no docker cometem",
          "Deletando containers",
          "Resumo sobre os comandos de containers",
          "Diferença entre imagens e containers",
          "Construindo uma API em Java para dockerizar",
          "Entendendo o processo de build e deploy de uma aplicação",
          "Construindo um arquivo Dockerfile",
          "Buildando nossa primeira imagem Docker e criando containers apartir dela",
          "Resumo sobre os comandos de imagens",
          "Criando a conta no Dockerhub.mp4",
          "Criando um Multi-stage build.mp4",
          "Testando o multi-stage build e enviando a imagem para o DockerHub",
          "Aprendendo um pouco mais sobre imagens e versionamento",
          "Aprendendo a conectar minha app com banco de dados do Docker",
          "Expondo o problema de conexão entre containers Docker",
          "Entendendo o problema de conversação entre os containers",
          "Criando uma network para nossos containers",
          "Implementando a conversação entre os containers através da Network",
          "Sobre os hosts",
          "Painel Docker for windows"
        ],
        "Modulo Complementar (Opcional - Aulas Bônus)": [
          "Como enviar seu código para o Github"
        ]
      },
      "requirements": [
        "Java e Orientação a Objetos",
        "Noções de Rest e Protocolo HTTP",
        "Desejável conhecimento em MAVEN",
        "Desejável conhecimento em banco de dados e SQL",
        "Desejável conhecimento em Docker"
      ],
      "description": "Olá! Seja bem vindo ao Curso Aprenda Quarkus e Desenvolva API's RESTful Poderosas em Java!\n\n\nNeste curso iremos abordar de forma totalmente prática, o desenvolvimento de uma API do absoluto zero, desde a instalação das ferramentas até a finalização da aplicação.\nO curso é para desenvolvedores que já tem conhecimento na linguagem de programação Java e desejam obter maestria para construir API's RESTful com Quarkus. Os assuntos abordados no curso são:\nAlinhamento das especificações REST;\nQuarkus, um framework java completo para desenvolvimento de API's Rest com todos os recursos necessários para acesso a bancos de dados, segurança, Web, etc;\nRest Assured - uma biblioteca para realizar testes automatizados na API.\nBanco de Dados PostgreSQL, um banco de dados SQL relacional robusto e bastante utilizado pelo mercado.\nTodo o projeto é criado, configurado e codificado pelo instrutor, os links para o código fonte das aulas estará anexo as aulas que fizerem sentido, além do link para os sites mostrados no curso e o link para download direto das ferramentas nas versões utilizadas pelo instrutor.\nSerá desenvolvida uma API de rede social simples, mas que garantirá bastante  conteúdo e informação que será aproveitada tanto em ambientes de estudo como no ambiente profissional de grandes empresas.\nNo final iremos aprender a fazer o BUILD e empacotamento da aplicação para deixar pronta para a nuvem.",
      "target_audience": [
        "Desenvolvedores Java que queiram dominar o Quarkus",
        "Iniciantes que queiram aprender sobre o framework subatômico do mercado Java"
      ]
    },
    {
      "title": "設計を理解しながらWebアプリを開発！【はじめてのWeb開発】【Flask】",
      "url": "https://www.udemy.com/course/flask_memo/",
      "bio": "「要件や設計を理解していないけど、なんとなくできる」という状態から「設計を理解しながら開発できる」ようにWeb開発の基礎知識を習得しながらpython+FlaskでWebアプリを実装します！",
      "objectives": [
        "Webアプリの基礎知識を学びながらステップバイステップで開発を行います",
        "要件・設計を理解した上で、Webアプリを開発する知識を得ることができます",
        "Webアプリを開発する上で必要なDB(データベース)の基礎知識を学びながら開発を行います",
        "ログイン機能などを「なんとなくできる状態」から「しっかりと理解した上で実装する」ことができます",
        "Python+Flaskを利用したWeb開発を学びます。"
      ],
      "course_content": {
        "はじめに": [
          "コース紹介",
          "コースの目的と講師の自己紹介",
          "受講前の注意事項",
          "本コースの全体像",
          "本講義で扱うコマンドやプログラムについて(GitHub)",
          "本コースのGitHubのリポジトリのリンク"
        ],
        "【基礎】Webサーバを構築しよう！": [
          "Webアプリはどのように動作する？",
          "Webアプリケーションフレームワーク",
          "環境構築_python",
          "環境構築_flask",
          "環境構築_vscode",
          "HelloWorld_講義",
          "HelloWorld_プログラム作成",
          "HellowWorld_実行方法_講義",
          "HellowWorld_実行方法_実施",
          "ルーティング_講義",
          "ルーティング_実装",
          "ルーティング変数_講義",
          "ルーティング変数_実装",
          "画面(HTML)テンプレート_講義",
          "画面(HTML)テンプレート_実装",
          "画面内条件分岐_講義",
          "画面内条件分岐_実装"
        ],
        "【開発】TOP画面を作ろう！": [
          "アプリの完成イメージ",
          "top画面の要件",
          "top画面の設計と開発",
          "top画面の実装_html部分",
          "top画面の実装_python",
          "top画面の実装_html改良",
          "本セクションのまとめ"
        ],
        "【開発】DBの基礎を学ぼう！": [
          "DBとは",
          "DB環境構築_SQLiteインストール",
          "DBの作成",
          "createtable",
          "間違えて作成したテーブルのDrop",
          "insert",
          "select",
          "update",
          "delete",
          "トランザクション",
          "top画面_DBを利用した設計と開発",
          "top画面_DBを利用した実装"
        ],
        "【開発】新規登録画面／機能を作ろう！": [
          "新規登録画面_要件と設計",
          "新規登録画面_実装①_top画面の修正",
          "新規登録画面_実装①_python",
          "新規登録画面_実装①_新規登録画面",
          "新規登録画面_実装②"
        ],
        "【開発】編集画面／機能を作ろう！": [
          "編集画面_要件と設計",
          "編集画面_実装①_top画面の修正",
          "編集画面_実装①_pythonの修正",
          "編集画面_実装①_新規画面の作成",
          "編集画面_実装②"
        ],
        "【開発】削除画面／機能を作ろう！": [
          "削除画面の要件と設計",
          "削除画面の実装①_top画面の修正",
          "削除画面の実装①_python",
          "削除画面の実装①_削除画面",
          "削除画面の実装②_python"
        ],
        "【開発】ログイン画面／機能を作ろう！①（DBなしで仕組みを作る）": [
          "ログイン機能(DBなし)_要件と設計",
          "環境構築_flask-login",
          "ログイン画面_実装①_画面",
          "ログイン機能_実装①_python設定",
          "ログイン機能_実装①ルーティング追加_python",
          "ログイン機能_実装①ログイン状態チェック",
          "ログイン機能_実装②_python",
          "ログイン機能_実装②_ログアウト機能"
        ],
        "【開発】ログイン画面／機能を作ろう！②（DB利用）": [
          "ログイン機能(DB活用)の要件",
          "知識強化_ログイン機能とハッシュ値",
          "ログイン機能(DB活用)の設計",
          "ユーザーテーブル作成",
          "サインアップ画面の作成",
          "ユーザ登録機能の作成_python",
          "実行確認①",
          "DBエラーの対策",
          "DBを利用したログイン機能の実装_python",
          "実行確認②とまとめ"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Pyhton,HTML,CSSなどの基礎知識（プログラミング経験者で自身で調べながら進められる人なら問題なし）",
        "WindowsやMacのPC　※注意：講師の環境はWindowsとなります"
      ],
      "description": "「システム開発をしているが、システムがどんな仕組みで動いているか分からない」という方は意外と多いです。\n\n\nあなたは以下の質問に答えられますか？\nWebアプリはどのように画面を表示しているのか？\nログイン機能の認証機能はどのように本人を判定しているのか？\nパスワードのハッシュ化とは何か？何のために必要か？\nこのコースを受講すれば分かるようになります！\n\n\n本コースは\nWebアプリを初めて作ってみたい！\nしっかりと設計を理解して、開発に取り組みたい！\nという人のためのコースです。\n\n\n本講義は開発の本質的な知識を理解するために、\n要件・設計を理解しながらWebアプリの開発をステップバイステップで実施していきます。\n（より早くWebアプリが実装できるpython+Flaskを利用したWeb開発を実施します。）\n\n\n本コースは以下のような受講者の理解を深める工夫をしています。\n前提となる基礎知識を講義、実装の順番で習得\n開発するアプリの全体像をご説明\n各機能の実装前に要件・設計の内容をご説明\n講義の後に実装することで理解が深まる\n\n\nWeb開発の要件・設計を理解し、\n知識を習得しながら学習を進めたい方に受講頂きたい内容です。",
      "target_audience": [
        "プログラミングを習得し、次のステップへ進みたい人",
        "はじめてWebアプリを開発してみたい人",
        "Webアプリやシステム開発をしているが、要件・設計などの基礎知識を習得したい人",
        "python+FlaskによるWebアプリ開発に興味がある人",
        "DBやログイン機能の基礎的な仕組みを理解したい人"
      ]
    },
    {
      "title": "Python For Complete Beginners - 2025",
      "url": "https://www.udemy.com/course/python-for-complete-beginners-2025/",
      "bio": "Learn Python fundamentals from scratch! Ideal for first time coders, business pros, and students!",
      "objectives": [
        "Install the latest stable version of Python on Windows or macOS",
        "Run and debug Python scripts from both VS Code and the command line",
        "Explain what variables are and assign values of type int, float, str, and bool",
        "Perform arithmetic operations, understand operator precedence, and use type conversion",
        "Build and manipulate strings with concatenation, f-strings, and common string methods",
        "Gather user input with input() and convert it to numeric types when needed",
        "Create, index, slice, and mutate lists; differentiate between positive and negative indexing",
        "Construct and query dictionaries with .get(), .items()",
        "Compare tuples to lists (immutability, performance characteristics)",
        "Use sets to enforce uniqueness and perform set operations (union, intersection, difference)",
        "Control program flow with if / elif / else statements",
        "Iterate with for loops (including range()), list comprehensions, and enumerate()",
        "Build while loops responsibly",
        "Define functions with parameters, return values, and type hints",
        "Create and activate virtual environments (python -m venv .venv) and manage dependencies with pip + requirements.txt",
        "Parse basic command-line options using argparse (flags, positional args)",
        "Handle more advanced argparse patterns",
        "Distinguish syntax errors from runtime errors",
        "Safeguard code with try / except / else / finally, catching multiple exceptions where needed",
        "Capture exception objects as e and log/print informative messages",
        "Raise custom errors with raise when validating user input or business rules",
        "Decide when structured error handling is essential in real-world projects",
        "Read from and write to text files with open() and context-manager with blocks",
        "Append to existing files safely and explain file modes ('r', 'w', 'a')",
        "Manipulate images with the Pillow library: open, rotate, resize, convert to grayscale",
        "Build a reusable command-line utility that combines argparse with Pillow operations",
        "Use typing.Optional, List, Dict, and other type-hint constructs to improve code clarity",
        "Design lightweight classes (__init__, instance attributes, and methods) and explain self"
      ],
      "course_content": {
        "Introduction": [
          "Windows Setup",
          "MAC Setup"
        ],
        "Python Fundamentals": [
          "Variables, data types (int, float, str, bool)",
          "Variables and Data Types Quiz",
          "Introduction to Functions",
          "Variables Coding Exercise",
          "Strings",
          "Strings Quiz",
          "Strings Coding Exercise",
          "Arithmetic",
          "Arithmetic Quiz",
          "Arithmetic Coding Exercise",
          "User Input & Type Casting"
        ],
        "Python Data Structures": [
          "Lists",
          "Lists Quiz",
          "Lists Coding Exercise",
          "Dictionaries",
          "Dictionaries Quiz",
          "Dictionaries Coding Exercise",
          "Tuples",
          "Tuples Quiz",
          "Sets",
          "Sets Quiz"
        ],
        "Control Flow": [
          "If, else statements",
          "If, else statements Quiz",
          "Conditionals Coding Exercise",
          "Loops",
          "Loops Quiz",
          "Loops Coding Exercise",
          "List Comprehension"
        ],
        "Functions": [
          "Introduction to Functions",
          "Parameters and Return Values",
          "Functions, Parameters, and Returns Quiz",
          "Functions, Parameters, and Returns Coding Exercise",
          "Virtual Environments and PIP",
          "Command Line Arguments - Simple",
          "Simple Calculator App - Advanced Command Line Arguments",
          "Programming Homework 1: Basic Command line Tool"
        ],
        "Error's in Python": [
          "Runtime vs Syntax Errors",
          "Runtime vs Syntax Errors",
          "Try Except (Catch)",
          "Handling Multiple Exceptions and the Finally Block",
          "Python Error Quiz",
          "Homework 2 - Handling Errors in Command Line Tools"
        ],
        "Working with Files": [
          "Reading and Writing Files",
          "Working with Images",
          "Homework 3 - Command Line Image Tool"
        ],
        "Classes and Objects": [
          "Classes, __init__, and Instance Methods",
          "Importing Classes from Different Files",
          "Final Homework - Free Reign"
        ]
      },
      "requirements": [
        "No prior experience in python is necessary. You just need a laptop and internet."
      ],
      "description": "Start learning Python the way industry newcomers actually succeed. This complete beginner course turns absolute zero experience into real coding skills through clear explanations, practical mini projects, and step by step guidance.\nWhether you are a first time coder who wants a solid foundation, a business professional looking to automate repetitive work, a student aiming to stay ahead in computer science class, or an aspiring AI and machine learning enthusiast who needs Python basics, this journey is designed for you.\nWhat makes this course stand out in search results and in practice\nInstall and configure the latest stable Python release on Windows or macOS, then run and debug scripts from VS Code and the command line\nMaster core programming concepts such as variables, data types, arithmetic operators, and type conversion so you can read and write clean code with confidence\nBuild strings with concatenation and f strings, collect user input, and display dynamic output for interactive programs\nWork with the essential data structures that power real applications including lists, dictionaries, tuples, and sets\nControl program logic using if elif else blocks, for and while loops, list comprehensions, enumerate, and range for elegant iteration\nWrite reusable functions with parameters, return values, and modern type hints that boost clarity and enable static analysis\nCreate and manage virtual environments, install dependencies with pip, and generate requirements files for shareable projects\nParse command line arguments of increasing complexity using argparse, turning simple scripts into professional utilities\nHandle errors like a pro by spotting syntax issues, catching runtime exceptions, and raising custom validations with informative messages\nRead from and write to text files safely, then expand into basic image manipulation with the popular Pillow library\nOrganize code with lightweight classes, self references, and instance methods to prepare for object oriented patterns you will encounter later\nEvery concept is reinforced with short coding challenges and real world examples so you finish the course able to create useful programs, automate tasks, and feel ready for deeper topics such as web development or AI workflows. No prior experience required, just curiosity and a computer.\nJoin thousands of new developers who will choose Python in 2025 and start building your coding future today.",
      "target_audience": [
        "Anyone interested in learning to code and wants a foundation",
        "Business professionals looking to upskill and begin automating work",
        "Students looking to get ahead of their CS class",
        "Aspiring AI/ML enthusiasts who need a solid Python foundation"
      ]
    },
    {
      "title": "Learn Keras: Build 4 Deep Learning Applications",
      "url": "https://www.udemy.com/course/learnkeras/",
      "bio": "Get up and running with deep learning with keras, a high level deep learning API",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting Set Up With Colab",
          "Github"
        ],
        "Traditional Machine Learning": [
          "AI vs Machine Learning vs Deep Learning",
          "What Is Linear Regression?",
          "Linear Regression in Keras"
        ],
        "Neural Networks": [
          "Keras Deep Neural Network (DNN)",
          "Keras Convolutional Neural Network (CNN)",
          "Keras Recurrent Neural Network (LSTM)",
          "Want To Watch More Free Programming Content?"
        ]
      },
      "requirements": [
        "Basic python knowledge",
        "Familiarity with data science and numpy"
      ],
      "description": "When I started learning deep learning, I had a hard time figuring out how everything worked. What library was the best for me? Which algorithms worked best for which data set? How could I know my model was accurate? I spent a lot of time on tutorials, courses and reading to try and answer these questions. In the end, I felt like the process I took to learn deep learning was too inefficient. That is why I created this course.\nLearn Keras: Build 4 Deep Learning Applications is a course that I designed to solve the problems my past self had. This course is designed to get you up and running with deep learning as quickly as possible. We use keras in this course because it is one of the easiest libraries to learn for deep learning. Each video, we go over a different machine learning algorithm and its use cases. The four algorithms we focus on the most are:\n1. Linear Regression\n2. Dense Neural Networks\n3. Convolutional Neural Networks\n4. Recurrent Neural Networks\n\n\nIn conclusion, if you are looking at a quick intro into deep learning, this course is for you.\nSo what are you waiting for? Let's get started!",
      "target_audience": [
        "Someone who wants to get into machine learning but feels overwhelmed by other tutorials",
        "Someone who is interested in machine learning but doesn't know where to start"
      ]
    },
    {
      "title": "MATLAB/Simulink for the Absolute Beginner",
      "url": "https://www.udemy.com/course/matlabsimulink-for-the-absolute-beginner/",
      "bio": "Learn the basics of Simulink and build 3 Simulink-based Projects",
      "objectives": [],
      "course_content": {
        "Introduction and Welcome Message": [
          "Introduction"
        ],
        "PROJECT #1: GENERATE, DISPLAY AND EXPORT SOURCE GENERATING SINE WAVE": [
          "Simulink Intro and Model Development",
          "Gain Multiplication Assignment",
          "Assignment Solution"
        ],
        "PROJECT #2: MODEL AN EQUATION THAT CONVERTS CELSIUS TEMPERATURE TO FAHRENHEIT": [
          "PROJECT #2: Celsius to Fahrenheit conversion"
        ],
        "PROJECT #3: BUILD LOGIC (IF-ELSE) CONDITION IN SIMULINK": [
          "Project 3.1: Build a logic in Simulink Example 1",
          "Project 3.2: Build a logic in Simulink Example 2"
        ],
        "Course Conclusion": [
          "Course Conclusion"
        ]
      },
      "requirements": [
        "There is no prior experience required.",
        "Matlab and Simulink software. Downloadable from MathWorks website."
      ],
      "description": "This course will cover the basic of Simulink and students will be able to create basic Simulink models and run simulations. Students will be able to develop fun, useful and practical Simulink models from scratch.\nIn this course, students will be able to:\nExperience a practical project-based learning experience.\nStudents will build 3 Simulink projects.\nAccess all the Simulink models and slides.",
      "target_audience": [
        "For Programming beginners who are new to MATLAB or Simulink.",
        "For students who want to learn Simulink Fundamentals and develop their own Simulink Models."
      ]
    },
    {
      "title": "Microserviços com Hexagonal Architecture DDD TDD CQRS SOLID",
      "url": "https://www.udemy.com/course/microservicos-com-hexagonal-architecture-ddd-tdd-cqrs-solid/",
      "bio": "Utilizando DDD, Hexagonal architecture com CQRS para desenvolvimento moderno de microserviços e aplicações web testáveis",
      "objectives": [
        "Modelar e desenhar sistemas web baseados em microserviços definindo dependencias, fluxo de comunicação, definição de responsabilidades e etc",
        "Utilizar Hexagonal architecture para desenvolvimento de microserviços testaveis e com baixo acoplamento",
        "Utilizar alguns conceitos de DDD para definir e modelar microserviços como bounded context, DTOs, ValueObjects, Aggregators etc",
        "Utilizar CQRS para separar comandos e queries de seus microserviços",
        "Escrever unit tests que REALMENTE agregam valor e protegem sua aplição"
      ],
      "course_content": {
        "Introduction": [
          "Aula 1 - Introdução"
        ],
        "Base teórica inical e entendimento da estrutura do projeto": [
          "Aula 2 - Entendendo a componentização de um serviço",
          "Aula 3 - Overview do sistema de reservas de hotel",
          "Aula 4 - Disposição dos microserviços"
        ],
        "O que é Hexagonal Architecture": [
          "Aula 5 - Hexagonal Architecture deep dive",
          "Aula 6 - Anatomia de cada Microsserviço"
        ],
        "Desenhando a arquitetura do nosso serviço": [
          "Aula 7 - Estabelecendo Contrato de Troca de Informação Entre as Camadas"
        ],
        "TDD - Test Driven Development": [
          "Tirando dúvidas sobre TDD no curso"
        ],
        "Preparação do ambiente e preparando o projeto": [
          "Aula 8 - Instalação do Visual Studio 2022",
          "Aula 9 - Organizando a Estrutura do Projecto",
          "Aula 10 - Estruturando a camada de domínio"
        ],
        "Evoluindo as demais camadas do serviço": [
          "Aula 11 - Criando uma Máquina de estado para as reservas",
          "Aula 12 - Escrevendo Unit tests para a máquina de estado"
        ],
        "Introduzindo a camada de banco de dados": [
          "Aula 13 - Conectando com banco de dados e habilitando as migrations",
          "Aula 14 - Criando as Tabelas Faltantes",
          "Aula 15 - Utilizando ValueObjects"
        ],
        "Desenvolvendo a primeira feature do serviço": [
          "Aula 16 - Implementando Use Case CreateGuest",
          "Aula 17 - Configurando injecao de dependencia e finalizando o Use Case",
          "Aula 18 - Adicionando Lógica de Negócio Ao Salvar Um Guest",
          "Aula 19 - Escrevendo Tests para o Guestmanager",
          "Aula 20 - implementando get guest"
        ],
        "Desenvolvendo Room feature": [
          "Aula 21 - Implementando Create Room",
          "Aula 22 - Implentando Controller para Criar Booking",
          "Aula 23 - Implementando Controller para Criar Booking Part 2",
          "Aula 24 - Finalizando Booking"
        ]
      },
      "requirements": [
        "O aluno deve ter alguma experiencia com C#, .NET e Entity framework"
      ],
      "description": "Neste curso prático mas com boa base teórica você irá aprender a utilizar técnicas altamente avançadas de desenvolvimento de micro serviços ou aplicações web utilizando:\n\nDDD ( Domain Driven Design ), utilizando alguns dos seus conceitos chave como Dtos, ValueObjects, Entities and Models, Aggregators, definição de bounded context etc\nHexagonal Architecture como padrão arquitetural principal no entanto faremos um paralelo constante com a Clean Architecture\nTDD, onde o foco será a escrita de código altamente testável\nCQRS para separação de comandos e queries, de forma que quando for desejável pode-se separar leitura e escrita em bancos separados, ou até mesmo em micro serviços separados\nSOLID principles, onde o mesmo será a base para organização e definição de padrões mínimos de qualidade do código, visando principalmente single responsability principle, open and close principle e dependency inversion com injeção de dependência\nState machine patterns, iremos utilizar este poderisissimo pattern para mudança de estado de entidades + 100% de unit test coverrage\nResult Pattern para comunicação entre camadas\nNull pattern para controle de fluxo de exceções\nInjeção de dependência\nEntity framework + migrations\nFeature sliding\n\n\nAlém disso, adquirirá uma boa noção de design de micro serviços do ponto de vista de determinar o escopo de cada um, como ele interage com outros micro serviços, como são organizadas as suas camadas, como as camadas comunicam-se umas com as outras e muito mais.",
      "target_audience": [
        "Programadores e Engenheiros de software",
        "Profissionais buscando expandir sua experiência com conhecimentos mais avançados"
      ]
    },
    {
      "title": "Excel VBA für Einsteiger - Anschaulich Programmieren lernen",
      "url": "https://www.udemy.com/course/vba-fur-einsteiger/",
      "bio": "Lerne das Programmieren und werde mit Excel VBA vertraut! Programmiere Makros und vieles mehr.",
      "objectives": [
        "Du wirst in diesem Kurs einen Einstieg in die Welt des Programmierens bekommen",
        "Dafür wirst du mit den Grundzügen des Programmierens vertraut gemacht und das algorithmische Denken lernen",
        "Am Ende des Kurses wirst du erfolgreich einfache Makros und komplexe Tools in VBA programmieren können",
        "Das gelernte Wissen kannst du auf andere Programmiersprachen anwenden und hast so einen erleichterten Einstieg"
      ],
      "course_content": {
        "Einführung": [
          "Einführung",
          "Schreibe dein erstes Programm",
          "Eine kleine Erklärung zu den Entwicklertools",
          "Steuerelemente hinzufügen",
          "Eine Einführung in den Makrorecorder",
          "Training zum Makrorecorder",
          "Entwicklungsumgebung vorbereiten",
          "Auf Aktivitäten reagieren"
        ],
        "Programmieren lernen": [
          "Variablen & Inputboxen",
          "Training zu Variablen und Inputboxen",
          "Interaktion mit Arbeitsblättern",
          "Training zur Interaktion mit Arbeitsblättern",
          "IF-Then-Else",
          "Training zu If-Then-Else"
        ],
        "Schleifen": [
          "For-Schleifen",
          "Übung For-Schleifen",
          "Die While-Schleife",
          "Übung While-Schleife",
          "Der Debugger",
          "Übung Code Debuggen"
        ],
        "Programmierwissen vertiefen": [
          "Werte übergeben und Antworten bekommen",
          "Übung Werte übergeben und Antworten bekommen",
          "Arrays",
          "Übung Arrays",
          "Lösung: Arrays - Wahllokalsimulator",
          "Gemeinsame Aufgabe: Wrap-up Programmiergrundlagen Aufgabe 1",
          "Gemeinsame Aufgabe: Wrap-up Programmiergrundlagen Aufgabe 2",
          "Gemeinsame Aufgabe: Wrap-up Programmiergrundlagen Aufgabe 3",
          "Gemeinsame Aufgabe: Wrap-up Programmiergrundlagen Aufgabe 4",
          "Bitte bewerte diesen Kurs"
        ],
        "Von VBA zum anwenderfreundlichen Tool": [
          "Module - Vertiefung",
          "Übung Module",
          "Formeln aus und für Excel",
          "Übung Formeln aus und für Excel",
          "UserForms",
          "Übung UserForms"
        ],
        "Programmierprojekt - Phase I": [
          "Aufbau & Aufgabenstellung",
          "Aufgabe 1 - Neuer Kunde",
          "Aufgabe 2 - Historie Kunde",
          "Aufgabe 3 - Bestandsanpassung",
          "Aufgabe 4 - Altbestand",
          "Aufgabe 5 - Produkt Löschen"
        ],
        "Programmierprojekt - Phase II": [
          "Aufgabenstellung Phase II",
          "Aufgabe 1 - UserForm erstellen",
          "Aufgabe 2 - UserForm initialisieren",
          "Aufgabe 3 - Ausgewählte Artikel anzeigen",
          "Aufgabe 4 - Buttons zuweisen",
          "Aufgabe 5 - Artikel Bearbeiten",
          "Aufgabe 6 - Artikel suchen",
          "Augabe 7 - Eigene Rückfragen"
        ],
        "Abschluss": [
          "Überarbeitung des Projektes",
          "Fertig!"
        ]
      },
      "requirements": [
        "Du benötigst Excel. Sonst nichts! (Bevorzugt unter Windows)"
      ],
      "description": "Wenn du das Programmieren lernen möchtest oder bereits Programmierkenntnisse hast und VBA lernen möchtest, bist du hier genau richtig! In diesem Kurs wirst du problemorientiert das Programmieren lernen. Das Bedeutet, dass du in jeder Lektion vor eine Aufgabe gestellt wirst, die du derzeit noch nicht lösen kannst. Wir werden dann gemeinsam einen Weg finden, das Problem zu lösen und du wirst so anschaulich das Programmieren lernen. Im Anschluss an einen theoretischen Input zu jedem neuen Thema, wirst du immer die Möglichkeit haben anhand von einer Aufgabe das gelernte zu üben. So wirst du mit Variablen, Schleifen und vielen anderen Grundlagen vertraut.\nAm Ende des Kurses wirst du in der Lage sein, ein aufwändiges Produktverwaltungstool zu programmieren. Die Entwicklung des Tools werden wir gemeinsam angehen und du wirst so einige Tipps und Tricks von mir mitnehmen. Nach dem Abschluss dieses Kurses und Projekts, kannst du von dir selbst behaupten, dass du Programmieren kannst! Du wirst in der Lage sein mit VBA kleine und große Makros zu programmieren. Der Einstieg in andere Programmiersprachen wird dir durch diesen Kurs viel leichter fallen.",
      "target_audience": [
        "Du möchtet wissen wie man programmiert und/oder VBA lernen",
        "Du möchtest für Excel Makros programmieren",
        "Du möchtest anschauliche und hilfreiche Tools mit VBA programmieren lernen"
      ]
    },
    {
      "title": "Data Structure Practice Test",
      "url": "https://www.udemy.com/course/data-structure-practice-test/",
      "bio": "DSA Topic Wise Practice Test",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Data Structure and Algorithms Practice Tests for Beginner to advance levels. Learn Data Structures and algorithms through practice tests.\n\n\nWant to land a job at a great tech company like Google, Microsoft, Meta, Netflix, Amazon, or other companies but you are intimidated by the interview process and the coding questions? Do you find yourself feeling like you get \"stuck\" every time you get asked a coding question? This course is your answer. Using the practice test, you will learn how to land offers from all sorts of companies.\nThe sooner you sign up for this course, the sooner you will have the skills and knowledge you need to increase your job or consulting opportunities.\nMy job as an instructor will be successful if I am able to help you become better at interviewing and land more jobs. This one skill can really change the course of your career and I hope you sign up today to see what it can do for your career!\nIf you want to actually understand how things work, and be able to take that understanding and apply it to your own programs, then this course is for you.\nWhy not get started today?\nClick the Signup button to sign up for the course",
      "target_audience": [
        "Beginner Students who just started coding"
      ]
    },
    {
      "title": "ゼロから始めるAPI超入門 : Web技術の基礎からAPIの活用事例までを学び、実際にAPIを体験できる短期集中コース",
      "url": "https://www.udemy.com/course/oshiro_002/",
      "bio": "APIとは何か？現役のITエンジニアが教える、超初心者（文系・非IT職を含む）向け講座です。APIの基礎からビジネスでの活用事例までをわかりやすく解説し、実際にAPI体験できる短期集中コースです。",
      "objectives": [
        "APIの土台となるWeb技術の基礎を学びます",
        "APIとは何か？APIの種類や強みを学びます",
        "ビジネスでのAPI活用事例を紹介します",
        "APIの実行を体験して理解を深めます"
      ],
      "course_content": {
        "はじめに": [
          "本講座の概要"
        ],
        "Webの基礎知識": [
          "このセクションで学べること",
          "Web技術とは",
          "Web技術の専門用語",
          "Webリクエストの種類と役割",
          "このセクションのまとめ"
        ],
        "APIの基礎知識": [
          "このセクションで学べること",
          "APIとは何か",
          "APIの種類",
          "APIの強み",
          "このセクションのまとめ"
        ],
        "APIの活用事例": [
          "このセクションで学べること",
          "活用事例①ChatGPT",
          "活用事例②楽天市場",
          "活用事例③ぐるなび",
          "活用事例④GoogleMap",
          "活用事例⑤AmazonPay",
          "このセクションのまとめ"
        ],
        "APIを体験する": [
          "このセクションで学べること",
          "Postmanとは",
          "Postmanのアカウント作成",
          "APIを体験する上で必要な情報",
          "Postmanエージェントの選択方法",
          "APIを体験する(GET)",
          "APIを体験する(POST)",
          "このセクションのまとめ"
        ],
        "最後に": [
          "最後に"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "パソコン（PC）",
        "インターネットの接続環境",
        "メールアドレス(Gmailアカウントなど)",
        "プログラミングの経験は必要ありません"
      ],
      "description": "本講座は、APIを初めて学ぶ方や、\nビジネスパーソン、エンジニア初心者向けの超入門講座です。\n\n\nAPIを理解するための基礎となるWeb技術の基本から、\nAPIの定義までをわかりやすく丁寧に解説します。\n\nまた、ビジネスでの具体的なAPI活用事例を紹介し、\nPostmanを使った体験を通じて、\nAPIへの理解を深める短期集中コースです。\n\n\n【あなたが本講座を受けるメリット】\n\nAPIの定義からAPIの種類や強みまでを学びます\nビジネスでのAPI活用事例を紹介します\nAPIの実行を体験して理解を深めます\n\n\n【あなたはこんな悩みはありませんか？】\n\n「APIって聞いたことはあるけど、どういうものかイマイチよく分からない…」\n\n「APIがビジネスにどう役立つのかイメージがわかない…」\n\n「APIを試してみたいけど、何から始めればいいの？」\n\n\n【以下に該当する方は、本講座を学ぶ価値があります】\n\n・APIの基本をしっかり理解したい方\n→APIとは何か？やWeb技術との関係を丁寧に学べます。\n\n・ビジネスでAPIを活用したい方\n→5つの事例を通して、ビジネスでの具体的な活用法を学べます\n\n・APIを試してみたいが、どこから始めるべきか分からない方\n→APIを実際に体験することで、APIについての理解を深めます。\n\n\n【本講座の目標】\n\nあなたがAPIとは何か？を活用事例や体験を通してイメージできること\n\n\n【講座の構成】\n\n前半では、APIを理解するために必要なWeb技術の基礎から、\nAPIの定義、種類、強みまでを学びます。\n\n後半では、ビジネスでの具体的なAPI活用事例を紹介し、\nPostmanを使ってAPIを実際に体験することで、理解を深めていきます。\n\n\nSection 1：本講座の概要\nSection 2：Webの基礎知識\nSection 3：APIの基礎知識\nSection 4：APIの活用事例\nSection 5：APIを体験する\nSection 6：最後に\n\n\n【本講座をおススメしない人】\n\n以下の該当する方は、本講座の受講をおススメしません。\n\n・すでにAPIを知識を持っている方\nAPIの仕組みや役割を説明できる方には、内容が基礎的すぎて物足りないかもしれません。\n\n・APIの高度な使い方を学びたい方\n本講座は、APIの基本的な体験に重点を置いており、詳細な操作や応用的な内容は含まれていません。\n\n・APIの開発方法を学びたい方\nプログラムのコードを使ったAPI開発や、技術的な深い内容は扱わず、基礎知識の理解に焦点を当てています。\n\n\n【全額返金保証】\n\nもし思っていたものと違っていた場合、Udemyでは全額返金保証がございます。\n購入後30日以内に返金申請をお願いします\n\n\n最後まで読んで頂き、ありがとうございました。\n\nそれでは本講座でお会いしましょう！!",
      "target_audience": [
        "APIという言葉を聞いたことがあるが、よく分からない方",
        "会社や自分のビジネスでAPIの活用を考えている方",
        "スキルを高めたいエンジニア初心者や非エンジニアの方"
      ]
    },
    {
      "title": "Nagios: Mastering Monitoring and Management",
      "url": "https://www.udemy.com/course/nagios-mastering-monitoring-and-management/",
      "bio": "Unlock the power of Nagios XI to streamline IT monitoring, enhance performance, and ensure system reliability!",
      "objectives": [
        "Step-by-step deployment of Nagios XI in various environments.",
        "Configuring and managing components, plugins, and monitoring agents.",
        "Comprehensive monitoring for Windows and Linux servers, websites, and network protocols.",
        "Effective user management, notification setup, and dashboard customization.",
        "Automation techniques like auto-discovery, scheduled downtimes, and report generation."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Project"
        ],
        "Project on Nagios": [
          "Different Ways to Implement Nagios XI",
          "Different Ways to Implement Nagios XI Continue",
          "Nagios XI Quick Tour",
          "Nagios XI Quick Tour Continue",
          "User Management",
          "Manage Components and Plugins",
          "Windows Desktop Monitoring",
          "Windows Server Monitoring",
          "Install NRPE Agent to Monitor Linux Server",
          "Install NCPA Agent to Monitor Linux Server",
          "Setup Monitoring of Website",
          "Monitoring FTP Server and TCP UPD Ports",
          "Setup Auto Discover in Nagios",
          "Create Schedule Downtime in Nagios",
          "Notification Management in Nagios XI",
          "Creating Custom Variables",
          "Dashboard Customization",
          "Scheduling Reports"
        ]
      },
      "requirements": [
        "Basic understanding of IT infrastructure and networking. Familiarity with operating systems (Windows/Linux) is helpful but not mandatory. A willingness to explore and configure monitoring tools."
      ],
      "description": "Nagios is a leading monitoring tool designed to provide robust insights into IT infrastructure, ensuring optimal performance and timely issue detection. This course offers a practical, hands-on approach to mastering Nagios, from installation and configuration to advanced monitoring and customization. Whether you're an IT professional, systems administrator, or technology enthusiast, this course will equip you with the knowledge and skills to implement and manage Nagios effectively.\nSection 1: Introduction\nThis section introduces students to the project scope and objectives of working with Nagios. Students will gain an overview of the course content and understand the critical role of monitoring systems in IT infrastructure.\nSection 2: Project on Nagios\nThis section provides a deep dive into the implementation and functionality of Nagios.\nLectures 2-3: Students will explore various ways to implement Nagios XI, including step-by-step guidance for different deployment scenarios.\nLectures 4-5: A quick tour of Nagios XI covers its interface, navigation, and essential tools.\nLecture 6: Learn about user management, including adding, removing, and customizing user access.\nLecture 7: Discover how to manage components and plugins, enabling extended functionality of Nagios XI.\nLectures 8-9: Dive into Windows desktop and server monitoring, setting up comprehensive monitoring solutions.\nLectures 10-11: Gain expertise in Linux server monitoring by installing and configuring NRPE and NCPA agents.\nLecture 12: Learn to set up website monitoring for uptime and performance analysis.\nLecture 13: Explore monitoring FTP servers and TCP/UDP ports, ensuring complete network visibility.\nLecture 14: Set up auto-discovery in Nagios XI to streamline infrastructure monitoring.\nLecture 15: Learn how to schedule downtimes in Nagios, ensuring maintenance doesn’t trigger false alarms.\nLecture 16: Master notification management, tailoring alerts for specific scenarios.\nLecture 17: Create and utilize custom variables to enhance monitoring capabilities.\nLecture 18: Customize dashboards to present data in intuitive and actionable formats.\nLecture 19: Learn to schedule detailed reports, ensuring stakeholders remain informed about system health and performance.\nConclusion:\nThis course is your gateway to mastering Nagios XI, enabling you to implement sophisticated IT monitoring solutions. By the end, you’ll have the skills to enhance system reliability, minimize downtime, and ensure proactive infrastructure management.",
      "target_audience": [
        "IT professionals and systems administrators managing enterprise infrastructure.",
        "Network engineers looking to enhance their monitoring capabilities.",
        "Students and enthusiasts eager to learn industry-standard monitoring tools.",
        "Organizations seeking to train teams on advanced IT monitoring solutions."
      ]
    },
    {
      "title": "Hands-on Kubernetes: Mastering The Fundamentals",
      "url": "https://www.udemy.com/course/hands-on-kubernetes-mastering-the-fundamentals/",
      "bio": "Kubernetes demystified - From Deployments to RBAC, GitOps with FluxCD and ArgoCD, start your learning journey today!",
      "objectives": [
        "Understand Kubernetes Architecture and Components",
        "Deploy and Scale Applications with Kubernetes",
        "Manage Application Exposure and Networking with Kubernetes",
        "Secure Applications and Manage Configurations",
        "Learn How to Work With Kubernetes API",
        "Learn and Understand YAML Manifests in Kubernetes"
      ],
      "course_content": {},
      "requirements": [
        "Access to a Computer with Internet: You'll need a computer with internet access to install Kubernetes tools like Minikube and Kubectl, and to access cloud services. The course will provide installation guides for Linux, MacOS, and Windows.",
        "Basic Linux Command Line Skills: Since Kubernetes and many of its tools are command-line driven, comfort with using the Linux command line (bash or similar shells) will be very useful.",
        "Basic Understanding of Containerization: Familiarity with the concept of containerization, especially Docker, is beneficial as Kubernetes is a container orchestration platform. Prior experience with Docker will help you understand how Kubernetes orchestrates containers at scale.",
        "Basic Knowledge of Cloud Computing: A general understanding of cloud computing concepts can help, as Kubernetes is often used in cloud environments. However, the course will cover necessary cloud-related concepts as they relate to Kubernetes."
      ],
      "description": "Welcome to \"Hands-on Kubernetes: Mastering the Fundamentals,\" your personal guide to the vast and vibrant world of Kubernetes!\nThis course is tailor-made to walk you through the essentials of managing and deploying applications using one of today's most influential tools, all presented in a friendly and approachable manner.\nStarting from the very beginning, I'll help you understand what Kubernetes is and why it's a game-changer for developers and system administrators. You'll get familiar with its architecture and the key components that power Kubernetes. Whether you're using Linux, MacOS, or Windows, I've prepared step-by-step instructions for setting up Kubernetes with Minikube and Kubectl, ensuring you're equipped to tackle any environment.\nBut we won't just stop at the basics. I'll guide you through deploying your first application, teaching you how to use YAML manifests to define your app's needs clearly and concisely. Learn how to scale your applications effortlessly, preparing them to handle growing traffic with ease.\nThen, I'll show you how to make your applications available to your team or the whole world, using different methods to manage access both internally and externally. Through straightforward explanations and hands-on examples, you'll become proficient in networking, managing external access, and ensuring your services are reachable whenever needed.\nConfiguring your apps and keeping their secrets safe is crucial. I'll walk you through managing application settings and protecting sensitive information with configuration and secrets management, all without overwhelming you with complex terminology.\nKubernetes isn't just a standalone tool; it's part of a larger ecosystem. You'll discover how tools like Helm can simplify adding features to your applications, and how GitOps practices with FluxCD and ArgoCD can make application deployment and updates straightforward and secure.\nSecurity is paramount, and I'll take you through setting up role-based access control (RBAC), securing your applications, and ensuring your network is fortified against threats, all explained in a friendly, understandable way.\nBy the end of this course, you'll have a solid understanding of Kubernetes, capable of deploying, managing, and securing your applications confidently. Whether you're beginning your journey or looking to enhance your existing skills, I'm here to lead you through each step with clarity and a touch of fun, making this comprehensive journey into Kubernetes as enjoyable as it is informative!\n\nLooking forward to seeing you in the course!",
      "target_audience": [
        "Developers: Software developers looking to leverage Kubernetes for deploying and managing their applications in a cloud-native ecosystem will find this course invaluable. It provides the skills needed to design, deploy, and scale applications efficiently.",
        "System Administrators and DevOps Professionals: Those involved in the operational aspects of software, including system administrators and DevOps engineers, will benefit from learning how to ensure applications are running smoothly on Kubernetes, manage deployments, and implement continuous integration and continuous deployment (CI/CD) workflows.",
        "IT Professionals: IT professionals who are keen on updating their skills to include container orchestration will gain a comprehensive understanding of Kubernetes, preparing them for roles in managing modern infrastructure.",
        "Technology Enthusiasts: Individuals with a keen interest in technology and cloud computing, looking to understand the latest in container orchestration and how it's changing the landscape of software deployment and management.",
        "Students and New Graduates: Those currently studying computer science or a related field, or recent graduates looking to increase their employability, will find this course provides a solid foundation in one of the most sought-after skills in the technology job market."
      ]
    },
    {
      "title": "Learn Apex Trigger using Real Time Scenarios",
      "url": "https://www.udemy.com/course/learn-apex-trigger-using-real-time-scenarios-trailhead-ranger-nj/",
      "bio": "Learn Apex Trigger using Real Time Examples and Interview Based Questions",
      "objectives": [
        "Hands on experience apex trigger example",
        "Build real-life trigger examples like: updating related records, roll-up summaries, sending emails, field validations, etc",
        "Understand Apex Triggers from beginner to advanced level with real-world scenarios",
        "Apex trigger real time based example, practical scenarios, interview based",
        "Interview question related to apex triggers",
        "Salesforce apex triggers",
        "Apex trigger beginner to advance",
        "Apex trigger real time based example",
        "Apex trigger interview based questions",
        "Learn apex trigger",
        "Apex Trigger",
        "Apex trigger questions in interview",
        "apex trigger practice",
        "Apex trigger for salesforce developer",
        "Apex trigger practice for salesforce developer job",
        "project based on apex trigger",
        "Apex trigger hands on challenge"
      ],
      "course_content": {
        "Section 1 : Introduction and Course Details": [
          "Introduction & Course Goals"
        ],
        "Apex Trigger Scenarios - Hands on Practice": [
          "Apex Trigger Scenario Part 1",
          "Apex Trigger Scenario Part 2",
          "Apex Trigger Scenario Part 3",
          "Apex Trigger Scenario Part 4",
          "Apex Trigger Scenario Part 5"
        ]
      },
      "requirements": [
        "No programming experience needed."
      ],
      "description": "Looking to strengthen your Salesforce development skills and ace your next interview? This course is designed to help you master Apex Triggers through real-world scenarios that are commonly asked in interviews of big companies such as Salesforce, Deloitte, PineLabs, IBM, TCS, Infosys, and more.\nYou'll dive into practical, hands-on examples where we solve business problems using Apex Triggers—step-by-step. Whether you're preparing for a job interview or want to build confidence in your trigger logic, this course is built to give you both knowledge and experience.\nYou'll also learn how to think like a real-world developer, troubleshoot common mistakes, and understand how to approach trigger-based requirements in client projects. This course is perfect for both beginners and experienced devs who want to sharpen their skills.\nWhat You’ll Learn:\nWrite efficient and bulk-safe Apex Triggers\nImplement real-life trigger scenarios from scratch\nUnderstand trigger context variables, recursion handling, and best practices\nTackle interview-style questions with confidence\nApply logic to update, restrict, or automate related records\nBy the end of this course, you’ll not only be prepared to answer trigger-based questions in interviews—but you'll also be equipped to apply those solutions directly in your Salesforce org.\nNo fluff—just real scenarios, explained simply. Let’s get you trigger-ready with confidence and clarity!",
      "target_audience": [
        "Beginner Salesforce Developers",
        "Salesforce Developers",
        "Developers curious about Apex triggers",
        "Developers who wants to learn apex trigger",
        "DEvelopers who want to practice apex trigger",
        "apex trigger pro",
        "apex trigger beginner to pro"
      ]
    },
    {
      "title": "Aprendendo Domain Driven Design (DDD) do zero",
      "url": "https://www.udemy.com/course/aprendendo-domain-drive-design-ddd-do-zero/",
      "bio": "Aprenda de uma vez por toda por que as empresas tanto pendem esse conceito.",
      "objectives": [
        "DDD",
        "Bounded Context",
        "Ubiquitous Language",
        "Microservices",
        "Arquitetura",
        "Domínio",
        "Entidades",
        "Objetos de Valor",
        "Repositorio",
        "Anti-Corruption Layer",
        "Serviço de domínio",
        "Serviço de Aplicação"
      ],
      "course_content": {
        "Introdução": [
          "O que aprenderá no curso",
          "Softwares Complexos",
          "DDD",
          "O que não é DDD"
        ],
        "Ubiquitous Language": [
          "Introdução",
          "Motivações",
          "Os problemas"
        ],
        "Bounded Context": [
          "Os problemas com grandes modelos",
          "Bounded Context",
          "Como Criar",
          "Context Map"
        ],
        "Um cenário fictício": [
          "O domínio para resolver",
          "Microservices"
        ],
        "Arquitetura": [
          "Arquitetura",
          "Criação de domínio"
        ],
        "Explicação do código": [
          "Endereço no Git",
          "Abrindo o código"
        ],
        "Solicitação de manutenção": [
          "História de usuário de solicitação de manutenção",
          "Criando a solução",
          "Entidade subsidiária",
          "Entidade solicitação de manutenção",
          "Criando a camada de Aplicação",
          "Interface de repositório",
          "Criando serviço de aplicação",
          "Buscando o contrato",
          "Cancelamento de solicitações pendentes",
          "Refatorando cancelamento de solicitações pendentes",
          "Mais sobre agregados",
          "Factory"
        ],
        "Anti-Corruption Layer": [
          "Conceito",
          "Implementando",
          "API"
        ],
        "Fazendo a aplicação funcionar": [
          "Projeto web",
          "Inversão de controle",
          "Aplicando migrations",
          "Levantando serviço de contrato",
          "Testando a aplicação",
          "Unit of Work"
        ],
        "Aprovação de manutenção": [
          "História de usuário de reprovação",
          "Refatorando solicitante",
          "Implementando reprovação na entidade",
          "Iniciando o serviço de aplicação",
          "Finalizando a reprovação da solicitação",
          "História de usuário de aprovação de solicitação",
          "Implementando aprovação na entidade",
          "Implementando aprovação na aplicação",
          "Projeto email",
          "Integração com contexto de serviço",
          "Configuração da Injeção de dependencia",
          "Adicionando migration",
          "Testando com API",
          "Criando consulta de solicitações pendentes"
        ]
      },
      "requirements": [
        "Algorítimo de programação",
        "Conceitos Web"
      ],
      "description": "Domain Driven Design é mais que código! É uma abordagem que muda a forma que você desenvolve um software, se relaciona com o cliente e com os analista de negócio.\nNesse curso você vai aprender do zero a como criar uma solução utilizando DDD e vai entender de uma vez por todas o que é isso.",
      "target_audience": [
        "Desenvolvedores"
      ]
    },
    {
      "title": "Secure Coding: Security Best Practices in Web Applications",
      "url": "https://www.udemy.com/course/secure-coding-web-apps-learnit/",
      "bio": "Learn key security techniques to protect web applications from threats, vulnerabilities, and attacks with examples",
      "objectives": [
        "Understand the fundamentals of web application security and why it is critical",
        "Identify and mitigate common security vulnerabilities in web applications",
        "Implement secure authentication and authorization using OAuth, JWT, and MFA",
        "Prevent SQL injection, cross-site scripting (XSS), and cross-site request forgery (CSRF) attacks",
        "Apply secure coding best practices to protect applications from threats",
        "Encrypt and securely store sensitive user data and credentials",
        "Secure APIs using REST security best practices",
        "Conduct penetration testing and vulnerability assessments to identify security flaws",
        "Implement security measures in DevOps and CI/CD pipelines",
        "Learn about the OWASP Top 10 security threats and how to mitigate them",
        "Perform secure session management to prevent session hijacking and fixation",
        "Implement secure error handling and logging without exposing sensitive data",
        "Analyze real-world cybersecurity incidents and apply lessons learned",
        "Develop a security-first mindset to build resilient and attack-resistant applications"
      ],
      "course_content": {
        "Introduction": [
          "Communication Plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice",
          "Course Structure & How to Navigate This Course"
        ],
        "OWASP Top 10 2021": [
          "OWASP Top 10: Overview",
          "Broken Access Control",
          "Cryptography Failures (Theory, Sensitive Data, Data Breach, Types of Failures)",
          "Cryptography Failures (Practical Examples, SQL Injections, TLS/SSL, HTTPS)",
          "Cryptography Failures (Examples, Password Encryption, Hashing, Salting)",
          "Injection (Overview, Fuzzing, CWEs, Impact, Injection Types, Command Injection)",
          "Injection (Cross Site Scripting, Types of XSS, SQL, JPA, NoSQL Injections)",
          "Injection (XPath Injection, Log Injection, Input Validation)",
          "Insecure Design (Overivew, CWEs, Shift Left Security, Threat Modeling Manifesto)",
          "Insecure Design (Secure Design Process, Security Controls, Metrics, Examples)",
          "Security Misconfiguration (Overview, CWEs, Types, Real-life attacks)",
          "Security Misconfiguration (Hardening, Zero Trust, Defense in Depth, Practice)",
          "Vulnerable & Outdated Components",
          "Identification & Authentication Failures",
          "Software & Data Integrity Failures",
          "Security Logging & Monitoring Failures",
          "Server-Side Request Forgery (SSRF)"
        ],
        "OWASP API Security Top 10 2023": [
          "OWASP API Security Project & OWASP API Security Top 10 2023",
          "API1:2023 Broken Object Level Authorization - Part 1",
          "API1:2023 Broken Object Level Authorization - Part 2 (Practice)",
          "API1:2023 Broken Object Level Authorization - Part 3 (Zero-Trust, UUIDs)",
          "API2:2023 Broken Authentication - Part 1 (Basics, Impact, Types of Attacks)",
          "API2:2023 Broken Authentication - Part 2 (Case Studies, OAuth, OpenID)",
          "API2:2023 Broken Authentication - P.3 - (Practice, JWT Tokens, Timing Attacks)",
          "API3:2023 Broken Object Property Level Authorization - Part 1",
          "API3:2023 Broken Object Property Level Authorization - Part 2 (Practice)",
          "API4:2023 Unrestricted Resource Consumption - Part 1",
          "API4:2023 Unrestricted Resource Consumption - Part 2 (Practice)",
          "API5:2023 Broken Function Level Authorization - Part 1",
          "API5:2023 Broken Function Level Authorization - Part 2 (Practice)",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 1",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 2",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 3 (Practice)",
          "API7:2023 - Server Side Request Forgery",
          "API8:2023 - Security Misconfiguration",
          "API9:2023 Improper Inventory Management - Part 1",
          "API9:2023 Improper Inventory Management - Part 2 (Practice)",
          "API10:2023 Unsafe Consumption of APIs - Part 1",
          "API10:2023 Unsafe Consumption of APIs - Part 2 (Practice)"
        ],
        "Spring Security": [
          "Spring Security Introduction",
          "First Login Form & First Security Filter Configuration",
          "Login with Database Users, Roles & Privileges",
          "Remember Me & Methods Security",
          "Spring Security Architecture & Authentication Provider",
          "EXAM: Spring Security - Online Shop"
        ],
        "Spring Boot": [
          "Spring Boot: Introduction",
          "The First Spring Boot Project",
          "Spring Boot Starters",
          "Spring Boot Configurations & Application Properties",
          "Spring Boot Actuator - Monitoring Tools"
        ],
        "Resilient, Scalable & Secure Systems with Spring Boot": [
          "Why this section is part of the course - and why it is improtant",
          "OAuth, OAuth 2.0, JWT & OpenID Connect, Identity Provider",
          "Practice: Auth0 - Configuration of Identity Provider",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 1",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 2",
          "Testing Security: Testing of Spring Boot Endpoints - Part 1",
          "Testing Security: Testing of Spring Boot Endpoints - Part 2",
          "Protecting APIs with Rate Limiting",
          "Rate Limiting Practical Guide: Bucket4j",
          "Building Resilient Services with Resilience4j in Spring Boot. Circuit Breaker",
          "Circuit Breaker - Practice",
          "Spring Boot + Resilience4j: Retry Pattern",
          "Spring Boot + Resilience4j: Time Limiter Pattern",
          "Spring Boot + Resilience4j: Rate Limitter Pattern",
          "Spring Boot + Resilience4j: Bulkhead Pattern",
          "Microservices Patterns in Practice: Exploring API Gateway",
          "Spring Cloud Gateway: Practice",
          "Understanding Load Balancing: Concepts, Strategies, and Use Cases",
          "Implementing Load Balancing with Spring Cloud LoadBalancer"
        ],
        "Cybersecurity: Comprehensive Security Practices for Developers": [
          "Introduction to Cybersecurity p.1 - Overview of current cyber threat landscape",
          "Introduction to Cybersecurity p.2 - Case Studies, Threat Analysis Models & More",
          "Introduction to Cybersecurity p.3 - Security Controls, SDD, SOC",
          "General Security Tips: Writing Code with Safety in Mind",
          "Securing Inputs: How to Validate and Sanitize Input Data",
          "Safeguarding Outputs: Effective Encoding for Secure Systems",
          "Mastering Authentication: Best Practices for Managing User Credentials",
          "Securing Sessions: Preventing Hijacking and Improving Stability",
          "Locking Down Access: Implementing Robust Authorization Mechanisms",
          "Zero Trust Architecture and Modern Authentication",
          "Encryption Essentials: Protecting Data with Cryptography - Part 1",
          "Encryption Essentials: Protecting Data with Cryptography - Part 2",
          "Defending Data: Strategies for Protecting Sensitive Information",
          "Securing Databases: Best Practices for Preventing SQL Injection",
          "Safe File Handling: Preventing File-Based Vulnerabilities",
          "Protecting Communication Channels: Ensuring Secure Transmission of Data",
          "Hardening System Configurations: Reducing Attack Surface",
          "Cloud Security Best Practices",
          "Mobile Application Security"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Familiarity with web development concepts, such as HTTP requests, APIs, and client-server architecture",
        "Understanding of database interactions, including SQL queries and database security best practices",
        "Some experience with authentication and authorization, such as login systems or user role management",
        "Ability to install and use development tools, including an IDE (e.g., IntelliJ IDEA, Eclipse), a database (MySQL, PostgreSQL), and security testing tools",
        "A computer with internet access to follow along with practical exercises",
        "Willingness to learn about security threats and how to protect applications from attacks",
        "No prior cybersecurity experience is required, but a general understanding of software security concepts will be beneficial"
      ],
      "description": "With the rise of cyber threats and security breaches, ensuring the security of web applications has become more critical than ever. This course is designed to provide developers, security professionals, and IT administrators with a comprehensive understanding of security best practices in web applications.\nThrough real-world case studies, hands-on exercises, and practical examples, you will learn how to identify security vulnerabilities, implement effective security controls, and safeguard applications against cyber threats.\nWhat You Will Learn:\nFundamentals of web application security and common attack vectors.\nHow to identify and mitigate SQL injection, XSS, CSRF, and other critical vulnerabilities.\nSecure authentication and authorization methods, including OAuth, JWT, and MFA.\nBest practices for data encryption, secure storage, and API security.\nImplementing security in DevOps and CI/CD pipelines to reduce risks.\nConducting penetration testing and security assessments to find vulnerabilities.\nUnderstanding OWASP Top 10 security threats and compliance standards.\nWho Is This Course For?\nWeb developers who want to build secure applications.\nSecurity professionals looking to strengthen their application security knowledge.\nIT administrators and DevOps engineers responsible for securing infrastructure.\nEthical hackers and penetration testers who want to learn web security techniques.\nStudents and cybersecurity enthusiasts interested in practical security implementations.\nBy the end of this course, you will have the skills and knowledge to develop, test, and deploy secure web applications that comply with industry security standards.",
      "target_audience": [
        "Web developers who want to enhance the security of their applications",
        "Software engineers looking to integrate security best practices into their development workflow",
        "Cybersecurity professionals and ethical hackers interested in securing web applications and APIs",
        "DevOps engineers responsible for securing CI/CD pipelines and cloud deployments",
        "IT administrators and system architects managing web application security",
        "QA engineers and security testers who need to identify and prevent vulnerabilities in applications",
        "Students and aspiring cybersecurity professionals looking to gain hands-on experience in secure coding",
        "Project managers and tech leads overseeing software development and security compliance",
        "Anyone interested in cybersecurity who wants to learn how to protect applications from real-world threats"
      ]
    },
    {
      "title": "Master Software Diagrams using ChatGPT, AI, and Mermaid 2025",
      "url": "https://www.udemy.com/course/software-and-system-diagrams-using-chatgpt-ai-and-mermaid/",
      "bio": "Learn to create professional software and system diagrams using ChatGPT, AI tools, and Mermaid. Perfect for developers",
      "objectives": [
        "Learn how to use ChatGPT to create various Software architecture diagrams",
        "Learn how to use ChatGPT for coding, debugging, and learning",
        "Learn how to use ChatGPT to create ERD diagrams, Org chart",
        "Learn How to use ChatGPT, Mermaid, and DrawIO to create System Design diagram"
      ],
      "course_content": {
        "Introduction to Diagramming with ChatGPT": [
          "How to Create UML Diagram using ChatGPT, MermaidLive, and Draw.io",
          "Using Mermaid and Draw.io with Bing AI to Build System Diagrams",
          "Effortless Mermaid Diagram Creation with ChatGPT and HueHive for Instant Visual",
          "Building System Diagrams with Mermaid, Draw.io, and Bing AI",
          "Check your knowledge about Software Diagrams"
        ],
        "Advanced Diagramming Techniques": [
          "Creating Software Architecture and System Diagrams Using Mermaid Charts",
          "How to Create Sequence and Class Diagrams Using ChatGPT, MermaidLive, and Draw.",
          "Creating Flowchart Diagrams with ChatGPT",
          "How to Create Mind Maps and Data Visualizations Using ChatGPT",
          "Designing System Diagrams Using Draw.io with ChatGPT"
        ],
        "Specialized Diagrams and Tools": [
          "How to Create Organizational Charts Using ChatGPT",
          "Creating Database Diagrams with ChatGPT, Mermaid JS, and Draw.io",
          "Using ChatGPT to Create ERD and DFD Diagrams with Draw.io and Mermaid",
          "Building System Diagrams Using ChatGPT",
          "Constructing System Diagrams with Mermaid, Draw.io, and Bing AI"
        ],
        "Practical Coding and Diagramming with ChatGPT": [
          "Generating Code Comments Using ChatGPT",
          "Creating Code Documentation for Developers with ChatGPT",
          "Executing SQL Queries with ChatGPT",
          "Using ChatGPT for Linux Commands and Bash Scripts",
          "Building System Diagrams with ChatGPT [Part 2]"
        ],
        "Code and Diagram Conversion": [
          "Understanding Complex Code in Minutes Using ChatGPT",
          "Converting JavaScript Code to Python with ChatGPT Prompts",
          "Building System Diagrams with ChatGPT [Part 3]",
          "Creating UML Diagrams Using ChatGPT, MermaidLive, and Draw.io",
          "Constructing System Diagrams with Mermaid, Draw.io, and ChatGPT"
        ],
        "Building Online Tools with ChatGPT": [
          "Building Online Tools Like Spell Checkers Using ChatGPT",
          "Using Mingrammer, Python, and ChatGPT to Build System Diagrams",
          "Constructing System Diagrams with Gemini and Mermaid.js Using AI Prompts",
          "Creating System Diagrams with ChatGPT-4 and Mermaid JS",
          "Live Diagrams with Mermaid JS and Claude AI Artifacts"
        ],
        "AI-Powered Diagram Creation": [
          "Creating SVG Diagrams with Claude AI 3.5 Sonnet",
          "Building SVG Diagrams with ChatGPT-4",
          "Effortless Mermaid Diagram Creation with ChatGPT and HueHive for Instant Visual",
          "Step-by-Step Tutorial for Creating Animated Software Diagrams Using ChatGPT and"
        ]
      },
      "requirements": [
        "No programming experience is needed, you will learn from scratch",
        "No Coding experiene is required, you will use ChatGPT to generate mermaid code"
      ],
      "description": "Documenting data flows and business flows are common responsibility of senior developer and if you are an experienced developer then its expected from you to know how to put your ideas, thoughts and design into a diagram.\nSince documentation is very important for any real world application at the same time its very boring, so I started using AI to generate UML diagrams, System Diagrams, ERD diagrams and flow charts which you can use on Confluence page or your System design document.\nIn this comprehensive course, \"Software and System Diagrams using ChatGPT, AI, and Mermaid,\" you will master the art of creating various software and system diagrams using cutting-edge AI tools.\nWe will leverage the power of ChatGPT, Bing AI, and Mermaid to simplify and enhance the diagramming process. This course is designed for developers, engineers, and anyone interested in automating diagram creation to save time and improve accuracy.\nYou will start with the basics of UML diagrams and progress to advanced topics, including sequence and class diagrams, flowcharts, mind maps, and more. Each module is packed with hands-on tutorials and practical examples to ensure you gain real-world skills.\nBy the end of this course, you will be able to create detailed and professional diagrams for your projects effortlessly.\nKey highlights of this course include:\nIntroduction to UML, flowcharts, and mind maps using ChatGPT and Mermaid\nAdvanced techniques for creating software architecture and system diagrams\nSpecialized tools for generating ERD, DFD, and database diagrams\nPractical coding and diagramming with ChatGPT, including SQL queries and code documentation\nConverting and understanding complex code with the help of AI\nBuilding online tools and integrating AI for dynamic diagram creation\nAI-powered SVG and animated software diagram creation with Figma\nJoin us on this exciting journey and become proficient in using AI to streamline your diagramming workflow. Enroll now and transform the way you create and understand software and system diagrams!\nI also recommend junior developers with few years of experience to join this course to line up yourself for promotion. By creating beautiful diagrams, documents, and confluence page for existing and new flows you can project yourself as authority in your team and other teams.",
      "target_audience": [
        "Software engineers who wants to learn Software Architcture",
        "Experienced Developers who needs to create various Software architecture diagrams",
        "Anyone who wants to learn ChatGPT for Programming and Development"
      ]
    },
    {
      "title": "Entity Framework Core Interview Question Practice Test 2025",
      "url": "https://www.udemy.com/course/entity-framework-core-interview-question-practice-test-2025/",
      "bio": "200 EF Core conceptual and scenario-based questions covering beginner to advanced topics with explanations [2025]",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Introduction\nAre you preparing for a technical interview that includes Entity Framework Core? Want to feel confident tackling tricky EF Core questions and impressing interviewers with your expertise? This course is designed to help you boost your confidence, sharpen your problem-solving skills, and ace your EF Core interview. With 200 carefully crafted practice questions, you'll cover everything from basic concepts to advanced scenarios—ensuring you're ready for anything. Stop second-guessing yourself and get the structured preparation you need to succeed!\n\n\nWhy Choose This Course?\nFocused on Real Interview Questions – Every question is designed to mirror what top companies actually ask in EF Core interviews.\nLearn Through Practice – Answer multiple-choice and scenario-based questions to reinforce key EF Core concepts.\nClear, Concise Explanations – Each question comes with a detailed answer, helping you understand the reasoning behind the correct choice.\nCovers Beginner to Advanced Topics – Whether you're a junior developer or an experienced .NET professional, this course will challenge and refine your skills.\nConfidence-Boosting Preparation – No more last-minute cramming—this course will help you walk into your interview fully prepared and ready to impress.\n\n\nWhy These Practice Questions Are Essential for Assessing EF Core Proficiency\nThese questions are quite useful for assessing a developer's knowledge and proficiency with Entity Framework Core. They cover a broad range of topics, from basic concepts to more advanced configurations and optimizations. Here's why they can be effective in an assessment:\nRange of Difficulty: The questions are a mix of beginner, intermediate, and advanced levels, allowing you to gauge a developer's depth of understanding.\nConceptual Coverage: They address core concepts such as relationships, tracking, querying, loading related data, and configuring advanced scenarios.\nPractical Scenarios: The questions include practical scenarios that a developer might encounter in real-world projects, which helps in assessing their problem-solving skills.\nSpecific Features: Questions about specific features like lazy loading, no-tracking queries, and handling self-referencing loops test a developer's ability to use EF Core effectively and optimize performance.\nCritical Thinking: Some questions require critical thinking and understanding the implications of certain configurations, which is essential for advanced usage of EF Core.\n\n\nWhat is included?\nEF Core Basics\nWhat is EF Core and how does it work?\nDbContext and Entity\nProject setup basics\nBuild-in conventions\nManipulating conventions with Data Annotation and Fluent API\nData Modeling and Mapping\nKeys - auto generation\nGenerated values\nValue Conversions\nBulk configurations\nAdvanced table mapping\nCompiled queries\nKeyless entity types\nData Seeding\nInheritance\nRelationships and Navigation\nOne-to-many\nOne-to-one\nMany-to-many\nForeign and principal keys in relationships\nRelationship navigations\nQuerying and Performance\nQuerying data - Client vs. Server Evaluation\nTracking vs. No-Tracking Queries\nLoading Related Data\nSingle vs. Split Queries\nSQL Queries\nUser-defined function mapping\nSaving Data\nSaving data\nSaving related data\nExecuteUpdate and ExecuteDelete\nMigrations and Data Management\nManaging Migrations\nExplicitly Tracking Entities\nAccessing Tracked Entities\nChanging Foreign Keys and Navigations\nAdvanced Topics\nLogging\nEvents\nInterceptors\nPerformance\nEfficient Querying\nEfficient Updating\nAsynchronous Programming\nNullable Reference Types\n\n\nExample questions and answers\n1. What is EF Core?\nA) A framework for creating web applications in .NET.\nB) A lightweight, cross-platform ORM for interacting with databases in .NET.\nC) A database server used to store data for .NET applications.\nD) A tool for designing user interfaces in .NET applications.\nAnswer: B)\nExplanation:\nEF Core (Entity Framework Core) is an Object-Relational Mapper (ORM) that enables developers to interact with databases using .NET objects. It supports multiple database providers and is designed to be lightweight and cross-platform.\n\n\n2. What happens when a foreign key property is removed from the dependent entity in EF Core?\nA) The relationship becomes optional by default.\nB) EF Core creates a shadow foreign key property.\nC) EF Core removes the relationship entirely.\nD) The dependent entity is automatically deleted when the principal entity is deleted.\nAnswer: B)\nExplanation:\nIf the foreign key property (BlogId) is removed from the dependent entity (Post), EF Core automatically creates a shadow foreign key property. This hidden property still maintains the relationship in the database without being explicitly defined in the entity class.\n\n\n3. A developer needs to test a repository method that retrieves orders from the database. The test should run independently, without relying on an actual database. What is the best approach?\nA) Use an In-Memory Database (UseInMemoryDatabase()) for testing.\nB) Use a Mocking Framework (e.g., Moq) to mock DbSet<T>.\nC) Use an actual SQL Server database for testing.\nD) Skip database-related tests and only test business logic.\nAnswer: A)\nExplanation:\nWhen testing EF Core applications, using UseInMemoryDatabase() is a practical approach because it allows tests to run quickly and independently, without requiring a real database.\n\n\nBy the End of This Course, You Will:\n\n\nBe prepared to tackle questions covering all key EF Core topics.\nGain exposure to a wide range of real-world scenarios and concepts including relationships, tracking, queries, and migrations.\nUnderstand the reasoning behind your answers with clear explanations provided for each question.\nHave experience answering questions on topics like lazy loading, advanced table mapping, and performance optimization.\nFeel confident in your ability to handle beginner to advanced-level questions and demonstrate your EF Core proficiency in interviews.\nBe ready to impress interviewers with your solid understanding of EF Core’s intricacies and practical applications.",
      "target_audience": [
        "Developers Preparing for EF Core Interviews"
      ]
    },
    {
      "title": "Complete Git and GitHub for Beginners: Learn Version Control",
      "url": "https://www.udemy.com/course/complete-git-and-github-for-beginners-learn-version-control/",
      "bio": "Master the basics of Git and GitHub with hands-on examples — from setup to collaboration, perfect for beginners.",
      "objectives": [],
      "course_content": {
        "Complete Git and Github": [
          "Why to use Git - Version Control System | Explained in next 5 minutes | Part 1",
          "Fundamentals of Git, Repository & How to Download & Install Git on Windows 10/11",
          "Understanding Git Fundamentals: git init & git status | Part 3",
          "Understanding git push | Fundamentals of Git & Github | Part 4",
          "Fundamental of Git Pull | Understanding Git & GitHub | Part 5"
        ]
      },
      "requirements": [
        "A computer (Windows, Mac, or Linux).",
        "Internet connection to download Git and access GitHub.",
        "No prior Git or GitHub knowledge is required.",
        "Basic understanding of computer file systems is helpful but not mandatory."
      ],
      "description": "This course, Complete Git and GitHub for Beginners, is your step-by-step guide to understanding version control in today’s development world. We start by explaining why Git is critical and how version control saves time, effort, and headaches for developers.\nYou'll then move on to downloading and installing Git properly on your Windows 10 or 11 machine, ensuring you're ready to start coding and managing projects immediately. Next, you'll dive into essential Git operations like initializing repositories (git init), checking project states (git status), and finally learning to connect and work with GitHub through git push and git pull commands.\nEach lecture is beginner-friendly, explained clearly, and focused on practical hands-on demos to help you truly understand what's happening under the hood. You'll gain real-world insights into how Git and GitHub are used in professional environments and collaborative software projects.\nIn addition to mastering Git basics, you'll also become familiar with critical collaboration concepts like remote repositories, synchronization, and version management. Whether you're building solo projects, working with teams, or preparing for open-source contributions, Git and GitHub skills will give you an edge.\nIf you’re serious about becoming a developer or improving your team collaboration skills, learning Git and GitHub is non-negotiable and this course gives you the perfect starting point.\nStart mastering the art of version control today with this focused, beginner-friendly course!",
      "target_audience": [
        "Absolute beginners who want to learn Git and GitHub from scratch.",
        "Students and developers looking to add version control to their skills.",
        "Anyone interested in contributing to open-source projects.",
        "Programmers preparing for team projects and internships."
      ]
    },
    {
      "title": "Analista Ágil: Como Ser Ágil em 10 Passos",
      "url": "https://www.udemy.com/course/analise-agil-como-ser-agil-em-10-passos/",
      "bio": "Aprenda a fazer análise ágil em 10 passos práticos, baixa os templates e aplique na sua empresa.",
      "objectives": [
        "Estará pronto para atuar como PO, Analista de Produto, Analista de Negócios em qualquer tipo de projeto",
        "Realizar análise de produtos e de negócios de forma ágil",
        "Entender o que é a cultura ágil",
        "Utilizar agilidade em QUALQUER tipo de projeto",
        "Entender os REAIS requisitos do cliente",
        "Questionar o usuário sobre funcionalidades adicionais",
        "Gerenciar melhor as mudanças de escopo",
        "Estimar conforme produtividade do time",
        "Priorizar as atividades do escopo",
        "Especificar e documentar User Stories",
        "Definir o MVP",
        "Planejar um roadmap de entregas do projeto",
        "Trabalhar em uma empresa e equipe ágeis",
        "Definir cenários de negócio para iniciar a análise",
        "Descobrir as entre-linhas durante a análise",
        "Especificar requisitos de software"
      ],
      "course_content": {
        "O Mundo Ágil Definitivo": [
          "Métodos Tradicionais VS Métodos Ágeis - Manifesto Ágil"
        ],
        "O Framework Ágil": [
          "Mapa da Estrutura",
          "O Template do Curso"
        ],
        "Entendendo a Real Necessidade do Projeto": [
          "1º PASSO: Situação Atual - os problemas",
          "2º PASSO: Situação Desejada - os benefícios esperados",
          "Quiz - 2º Passo",
          "O Analista é o Responsável por Traduzir as Necessidades",
          "3º PASSO: Identificando o Gap entre as Situações",
          "4º PASSO: Premissas e Restrições"
        ],
        "Definindo a Solução que Será Entregue": [
          "5º PASSO: Descobrindo os Temas da Mudança",
          "6º PASSO: O Escopo da Solução"
        ],
        "Priorizando e Reordenando o Escopo": [
          "7º PASSO: Justificando o escopo",
          "8º PASSO: Priorizando o que é crítico para o cliente"
        ],
        "Planejando como Entregar Valor": [
          "9º PASSO: Definindo o MVP",
          "Lean Aplicado ao Software",
          "10º PASSO: Planejando o Roadmap de Entregas do Projeto"
        ],
        "Especificando Requisitos de Forma Ágil": [
          "Tipos de Especificação de Requisitos",
          "Escrevendo User Story",
          "Definição de Pronto (Definition of Done)"
        ],
        "Como Implantar na Sua Empresa": [
          "Premissas para trabalhar diferente",
          "As Diferentes Gerações no Ambiente de Software",
          "Processo de mudança de paradigma",
          "Características necessárias"
        ],
        "Próximos Passos": [
          "Um Exemplo do Desafio dos Analistas Ágeis",
          "EXTRA: Técnicas para Levantar Requisitos de Forma Ágil",
          "Keep moving!"
        ]
      },
      "requirements": [
        "O ideal para a realização deste curso é que o participante tenha atuado em algum projeto de software, em qualquer papel.",
        "Você deve ter instalado algum aplicativo de suite tipo Office. MS Excel ou Google Sheets são alguns exemplos.",
        "Este é um curso LBP (Learn By Practice), onde você aprende executando um exemplo em um exercício ao longo do curso. O aproveitamento prático é muito maior desta maneira."
      ],
      "description": "Você sabia que 72% dos projetos de software falham em Escopo, Prazo e Custo?\nVocê sabia que 20% das funcionalidades existentes são as mais usadas?\nQuem paga as outras 80%? DEVERIA mesmo ter pago?\nA origem dos problemas, em quase 100% dos casos, está no entendimento da real necessidade do usuário. Este é o passo mais crítico e deve ser levado em consideração do início ao final do projeto. No final das contas os projetos entregam o SOFTWARE mas não necessariamente a SOLUÇÃO.\nApresento um framework de trabalho que compila mais de 11 anos de experiência de mercado com trocas de experiências reais com mais de 8300 pessoas da área da engenharia de software de diversas empresas de tecnologia.\nTe convido a aprender a trabalhar ORIENTADO À SOLUÇÃO DE PROBLEMAS DE NEGÓCIO:\n\n\nMetodologias tradicionais e ágeis;\nManifesto ágil;\nEntendimento de cenários de negócio;\nDescoberta da real situação dos processos e sistemas;\nDefinição de um escopo de forma simples e definitiva;\nRelação de escopo com as necessidades de negócio;\nPriorização de escopo;\nMudanças de escopo;\nPlanejamento de roadmap de requisitos;\nMVP (minimum viable product);\nUser Stories - escrita e prática de requisitos de software;\nDefinição de pronto (definition of done);\nMudando paradigmas;\nCompetências pessoais.\nImplemente análise ágil em seus projetos com 10 passos simples, práticos e eficientes. Faça o curso, baixe gratuitamente o template, e saia utilizando este framework definitivo de agilidade da sua empresa.\nBom treinamento!",
      "target_audience": [
        "PO",
        "Analistas de Produto",
        "Gerente de Produto",
        "Analistas de Negócios",
        "Analistas de Sistemas",
        "Gerentes de Projetos",
        "Gerentes de TI",
        "Empreendedores",
        "Analistas de Teste",
        "Desenvolvedores",
        "Qualquer cargo que seja ou não de TI mas que se envolva em projetos"
      ]
    },
    {
      "title": "Job Ready DSA Interview Prep for Coding Interviews",
      "url": "https://www.udemy.com/course/job-ready-dsa-interview-prep-for-coding-interviews/",
      "bio": "Master Data Structures and Algorithms through practical MCQs designed to boost your coding interview readiness.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Preparing for coding interviews can be overwhelming, especially when faced with the wide range of topics in Data Structures and Algorithms (DSA). This course is designed to simplify your preparation by providing a focused set of 50 practical multiple-choice questions (MCQs) that cover the most essential concepts and problem-solving techniques.\nThe quizzes are divided into two main categories: Core Data Structures & Concepts and Algorithms & Problem Solving. In the first category, you will strengthen your understanding of arrays, linked lists, stacks, queues, hashing, trees, graphs, and complexity analysis. These topics form the foundation of most technical interviews and are crucial to grasp thoroughly.\nIn the second category, you will dive into key algorithmic strategies such as sorting, searching, recursion, dynamic programming, greedy algorithms, graph algorithms, and string matching techniques. The questions are crafted to mimic real interview scenarios, allowing you to practice not just theoretical knowledge but also practical reasoning skills.\nWhat makes this course valuable:\n50 practical MCQs covering core DSA and algorithms frequently asked in interviews\nClear focus on both theory and problem-solving applications\nInterview-style scenarios designed to sharpen critical thinking\nBeginner-friendly but detailed enough for advanced learners\nBy completing this course, you will be able to identify trade-offs between different data structures, analyze time and space complexity, and approach algorithmic challenges with confidence. Each quiz is designed to highlight common pitfalls, reinforce best practices, and prepare you for the type of problem-solving mindset that top companies expect.",
      "target_audience": [
        "Aspiring software engineers, computer science students, and coding interview candidates who want to sharpen their DSA knowledge through practical quizzes."
      ]
    },
    {
      "title": "Become Business Analyst",
      "url": "https://www.udemy.com/course/become-business-analyst/",
      "bio": "Buusiess Analyst",
      "objectives": [
        "Users will be able to develop skills of Business Analyst"
      ],
      "course_content": {
        "Overview of Business Analysis": [
          "Introduction",
          "Overview of Business Analysis"
        ],
        "Software Design Life Cycle Management": [
          "Software Design Life Cycle Management"
        ],
        "Software Analysis": [
          "Software Analysis"
        ],
        "Change Control": [
          "Change Control"
        ],
        "Software Testing": [
          "Software Testing",
          "Quiz 1"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Most often, organizations acquire information systems as part of a larger focus on process improvement and efficiency. These organizations need to invest in the right system to meet their needs: right functionality, right size, and for the right price. The business systems analyst role in most organizations is responsible for translating the organization’s needs into requirements, which are then used to select or build the right system for the organization. During the Analysis for Business Systems course, you’ll learn about the standard model for systems development: the systems development lifecycle, or SDLC. You will learn how to read and even create the specific deliverables that business systems analysts prepare during the SDLC. These documents provide guidance to the organization as they determine whether to build or buy and configure a system that meets the organization’s needs.\n\n\nA Business Analyst is the key figure in understanding business requirement and its implementation. This course is designed to help you understand Business Analysis right from Software Engineering Methods & Lifecycles to Requirements Preparation, analysis and presentation.\nBusiness Analysts have emerged to have a key role in recent business scenarios. Some people think that the role of a Business Analyst is to make money for the organization, which may not be true in direct context. But indirectly, the action and decision taken by Business Analysts do leave an impact on the financial prospects of the organization.\n\n\nJob prospectus for Business Analyst rises every year, especially for the IT sector. The average salary of business analyst is estimated around $80,000 - $130, 000, even at entry level.\n\n\nWhat does a Business Analyst Do?\nA primary job responsibility of Business Analyst is to communicate with all stakeholders & to elicit, analyze and validate the requirements for changes to business processes, information systems, and policies.\nA professional business analyst plays a big role in moving an organization towards efficiency, productivity, and profitability.\n\n\nWhat you will learn in this course:\n\n\n- Business Analysis basics, Stakeholder analysis overview and overview of Business Analyst\n\n\n- A breakdown of project methodologies including traditional Waterfall and Agile frameworks\n\n\n- Conduct requirement Analysis, Requirement techniques & Organize requirements\n\n\n- Change control basics, Flow diagram and BRS vs SRS\n\n\n- Software Testing Types, V Model Testing and Impact Analysis",
      "target_audience": [
        "Aspiring Business Analysts - including recent college graduates and those looking to make a career change.",
        "New Business Analysts wanting to improve their skills",
        "Other positions that are performing business analysis duties such as administrators, managers, and project leads."
      ]
    },
    {
      "title": "System Engineer Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/system-engineer-interview-questions/",
      "bio": "System Engineer Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "System Engineer Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nMaster System Engineer Interview Questions: Practice Test and Preparation\nWelcome to the ultimate System Engineer Interview Questions Practice Test course! Whether you're aiming for a career in system administration, cloud computing, networking, or database management, this course is designed to thoroughly prepare you for any system engineer interview scenario.\n\n\nThis comprehensive course is structured into six key sections, each focusing on essential topics relevant to system engineering roles. Each section includes a range of meticulously crafted practice questions, designed to test and reinforce your understanding of critical concepts.\n\n\nOperating Systems\nDive into the intricacies of Operating Systems with questions covering File Systems, Process Management, Memory Management, Device Management, System Calls, and Virtualization. Be prepared to tackle questions that simulate real-world scenarios encountered in system administration roles.\nNetworking\nExplore the fundamentals of Networking through questions on the TCP/IP Protocol Suite, OSI Model, Routing and Switching, Network Security, Wireless Networking, and Network Troubleshooting. Gain confidence in your ability to troubleshoot network issues and design robust network architectures.\nDatabases\nMaster Database concepts with questions focusing on Relational Database Concepts, SQL Queries and Optimization, Database Design, ACID Properties, NoSQL Databases, and Data Replication and Backup. Understand the nuances of database administration crucial for maintaining data integrity and performance.\nCloud Computing\nNavigate the complexities of Cloud Computing with questions on IaaS, PaaS, SaaS, Cloud Security, Cloud Deployment Models, and Cloud Migration Strategies. Prepare yourself to discuss cloud architecture and deployment scenarios confidently.\nSystem Administration\nDelve into System Administration essentials through questions on User and Group Management, System Monitoring and Logging, Configuration Management, Backup and Recovery, Patch Management, and Performance Tuning. Equip yourself with the skills needed to manage and optimize enterprise systems effectively.\nScripting and Automation\nEnhance your proficiency in Scripting and Automation with questions covering Shell Scripting (e.g., Bash), Python Scripting, PowerShell Scripting, Automation Tools (e.g., Ansible, Puppet), Workflow Orchestration, and CI/CD concepts. Prepare to automate tasks and streamline processes in any IT environment.\n\n\nEnroll Now!\nPrepare thoroughly for your next system engineer interview with our System Engineer Interview Questions Practice Test course. Equip yourself with the knowledge and confidence to ace technical interviews and secure your dream job in the IT industry.\nDon't miss out! Enroll today and take the next step towards your career as a system engineer.",
      "target_audience": [
        "Job Seekers",
        "Current IT Professionals",
        "Students and Graduates",
        "Career Changers",
        "Anyone Interested in IT"
      ]
    },
    {
      "title": "Python Certification Mastery: 6 Full-Length Practice Exams",
      "url": "https://www.udemy.com/course/the-ultimate-python-programmer-practice-test-series/",
      "bio": "Master Python Concepts with These Certification-Level Tests",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "The Python Certification Mastery: 6 Full-Length Practice Exams is designed to help you master Python programming through targeted, hands-on practice. Whether you're a beginner or an experienced developer, this course will guide you through real-world coding challenges to enhance your understanding and skills in Python. With a focus on core concepts, advanced techniques, and practical problem-solving, this series is perfect for anyone looking to take their Python programming skills to the next level.\nWhat you'll learn:\nCore Python Concepts – Develop a strong foundation in Python syntax, data types, loops, and control structures.\nObject-Oriented Programming (OOP) – Apply key OOP principles like inheritance, encapsulation, and polymorphism in Python.\nData Structures – Master Python's built-in data structures such as lists, dictionaries, sets, and tuples for efficient data management.\nFile Handling – Learn to read, write, and manipulate files in Python to enhance your data processing abilities.\nPython Libraries – Explore powerful Python libraries such as NumPy and Pandas for data manipulation and advanced functionalities.\nTesting and Debugging – Build expertise in writing unit tests and debugging code to ensure your Python programs are robust and error-free.\nWhy this course is for you:\nTargeted practice for Python proficiency – Experience a variety of real-world coding challenges across core Python areas, helping you improve your coding skills.\nSkill-building for real-world applications – Develop essential skills in Python that are crucial for solving practical problems and building efficient programs.\nReal coding scenarios – Familiarize yourself with the format and complexity of real coding challenges, ensuring you're prepared for actual projects or job interviews.\nSuitable for all skill levels – Whether you're new to Python or looking to sharpen your existing skills, this course is tailored to meet your needs.\nBy the end of this course, you'll have gained extensive practice across all Python programming areas, giving you the confidence to excel in real-world coding tasks.",
      "target_audience": [
        "anyone who wants to wants to become The Ultimate Python Programmer"
      ]
    },
    {
      "title": "Python Logging Course",
      "url": "https://www.udemy.com/course/python-logging-course/",
      "bio": "Auditing and Debugging Through Python Logging",
      "objectives": [
        "Learn how to use Python's logging module",
        "Learn why logging and code auditing is important",
        "How to format logs so they are using for debugging",
        "Learn how to log to multiple locations at once"
      ],
      "course_content": {
        "Python Logging Course": [
          "Welcome to Python Logging",
          "Introduction to Logging",
          "Log Levels",
          "Log Handlers",
          "Log Formatters",
          "Log Configuration",
          "Log Filters",
          "Logging from Multiple Modules",
          "Creating a Logging Decorator",
          "Rotating Logs",
          "Logs and Concurrency",
          "Logging with Loguru",
          "Logging with Structlog",
          "Thanks for taking Python Logging"
        ]
      },
      "requirements": [
        "Knowing how to write simple Python would be good"
      ],
      "description": "What does every new developer do when they are first learning to program? They print out strings to their terminal. It's how we learn! But printing out to the terminal isn't what you do with most professional applications.\nIn those cases, you log into files. Sometimes, you log into multiple locations at once. These logs may serve as an audit trail for compliance purposes or help the engineers debug what went wrong.\nPython Logging teaches you how to log in the Python programming language. Python is one of the most popular programming languages in the world. Python comes with a logging module that makes logging easy.\nWhether you are a beginner with Python or a seasoned programming rock star, Michael Driscoll will help you continue to grow in your developer journey. My blog, Mouse Vs Python, has hundreds of awesome tutorials that you can read for free!\nYou can rest assured that Michael knows Python. He has been programming and writing about it for over a decade and has ten other Python books!\n\n\nWhat You'll Learn\n\n\nIn this course, you will learn how about the following:\n\n\nLogger objects\nLog levels\nLog handlers\nFormatting your logs\nLog configuration\nLogging decorators\nRotating logs\nLogging and concurrency\nand more!",
      "target_audience": [
        "This course is for anyone who wants to learn how to use Python's logging module effectively"
      ]
    },
    {
      "title": "初めてのPostman（ポストマン）入門。HTTP通信やREST APIの基礎を学び、APIデバッグ手法の基礎を学ぼう",
      "url": "https://www.udemy.com/course/postman-api/",
      "bio": "ポストマンによるAPI動作検証（デバッグ）の基礎を学び、本格的なバックエンド開発やデバッグを行えるエンジニアになろう！",
      "objectives": [
        "POSTMANの基本的な使い方を学びます",
        "REST APIについて学びます",
        "APIデバッグの基礎を学びます",
        "エンドポイントの使い方の基礎を学びます"
      ],
      "course_content": {},
      "requirements": [
        "APIデバッグの基礎を学びたい方",
        "POSTMANの基本的な使い方を学ばれたい方"
      ],
      "description": "今後APIを用いた開発業務を行なう為に、APIの動作検証（デバッグ）方法の基礎を学びたい！\n\n\nそもそもAPI通信とは具体的にどんな通信を行なっているのか？\n普段インターネットを使っている際のHTTP通信も、実際のところどんな通信を行なっているのか？\nといった通信の基礎の解説から、\n実際にPOSTMANのセットアップを行い、\n様々なHTTPリクエスト（「GET」「POST」「PUT」「DELETE」）を送信する方法や、\nサーバーからのレスポンスがどのように帰ってくるのかを学びます。\n\n\nPOSTMAN（ポストマン）を使いながら、具体的なAPIデバッグの基礎を押さえることで、本格的なAPI開発を行なっていけるための土台が身につけられます。\n\n\n最近のトレンドとなっているREST API(RESTful API)とは具体的にどういった通信なのか？\nといったことも含めて学びます。\n\n\n今までAPI開発ドキュメントを参照したものの、理解できずにドキュメントを閉じてしまった\nそもそもAPIについてよくわかっておらず、開発は雲の上のように感じてしまっていた\nそんな方はぜひ今回のコースをご受講ください。\nAPIについての理解が深まり、実際にPOSTMANを使って簡単なAPIの動作テストやデバッグ業務を行える第一歩を踏み出せます。\n\n\n昨今のインターネット通信で当たり前のように扱われているHTTP通信の基礎、API通信の基礎、そしてPOSTMANを使った開発テストやデバッグ知識を身につけることで、一生もののバックエンドエンジニアリングスキルを一緒に身につけましょう。\nもしわからないところや授業を強化してほしいところなどございましたらぜひUdemyのQ&A機能からご意見くださいね。それを元に授業を強化させて頂きます。\n\n\n本格的なバックエンド開発も今後行っていきたい！という方は姉妹コースとなる\n【Angular11とNode.jsで始める】JavaScript系 WEBアプリケーション開発コンプリートガイド①,②\nも合わせてご受講してみてくださいね。",
      "target_audience": [
        "APIデバッグ方法を学ばれたい方",
        "POSTMANの基本的な使い方を学ばれたい方",
        "今後バックエンド開発をされていきたい方"
      ]
    },
    {
      "title": "How to start learning programming- Guide for beginner coders",
      "url": "https://www.udemy.com/course/how-to-start-learning-programming-guide-for-beginner-coders/",
      "bio": "Learn how and where to start your programming career",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Where to start?": [
          "What is frontend?",
          "What is backend?",
          "Projects to start with",
          "What is cloud?",
          "Section wrap-up"
        ],
        "How to track progress-GIT": [
          "What is GIT?",
          "How does it work?",
          "Github, Gitlab, Bitbucket",
          "Section wrap-up"
        ],
        "Good practices": [
          "What are good practices and why do we need them?",
          "DRY as an example of good practice",
          "Builder as an example of design pattern"
        ],
        "So, where to start EXACTLY?": [
          "What docs and environment you need to run the code",
          "What's inside Visual Studio Code, install git and create github account",
          "Make the magic happen and run your first code!"
        ],
        "Thank you!": [
          "Quiz!",
          "Thank you! | Wrap-up"
        ]
      },
      "requirements": [
        "No programming expierience needed.",
        "No knowledge of computer applications needed.",
        "Smile, patience, and eagerness to write code."
      ],
      "description": "This course was created for those who are thinking about starting a career as a programmer but don't know where to begin. This course can also be utilized by people who work with development teams but perform other non-technical tasks, such as HR staff or project managers.\nThe goal is to familiarize the learner with basic concepts in the IT world, such as frontend, backend, framework, library, etc. After watching the course, you should have a better understanding of what these terms mean and how to use them. Additionally, you will learn about the version control system GIT, and at the end, I will introduce you to the concept of best practices in programming.\nThis is not a course where you'll learn the details of any programming language. We won't delve into any details that are not only difficult for beginners to remember but also unnecessary at the beginning of learning. Also could be very discouraging.\nI've been teaching programming for few years and knowing what students ask about (especially at the beginning) I wanted to gather everything in one place. I've noticed that the ability to write code alone is often insufficient when a beginner developer doesn't know the basics of tools like GIT or tries to do too many things at once.\nI hope these video materials will help you have a better start on your journey to becoming a sucessful developer.",
      "target_audience": [
        "For beginners who want to start working with code but don't know where to begin.",
        "For non-technical employees who work daily with the IT team, such as HR or Project Managers."
      ]
    },
    {
      "title": "SOLID - Os 5 Princípios Para as Boas Práticas da POO",
      "url": "https://www.udemy.com/course/solid-os-5-principios-para-as-boas-praticas-da-poo/",
      "bio": "Aprenda os 5 princípios SOLID e descubra como aplicar as boas práticas de mercado em projetos Orientados a Objetos",
      "objectives": [
        "As melhores práticas da Programação Orientada a Objetos",
        "Conceitos avançados de Orientação a Objetos",
        "Desenvolvimento de aplicações com baixo acoplamento e alta coesão",
        "[Teoria e prática] SRP - Single Responsibility Principle",
        "[Teoria e prática] OCP - Open/Closed Principle",
        "[Teoria e prática] LSP - Liskov Substitution Principle",
        "[Teoria e prática] ISP - Interface Segregation Principle",
        "[Teoria e prática] DIP - Dependency Inversion Principle"
      ],
      "course_content": {
        "Introdução": [
          "O que é o SOLID?",
          "Como vai o seu código?",
          "Canais de comunicação"
        ],
        "SRP - Single Responsibility Principle (Princípio da Responsabilidade Única)": [
          "Iniciando o projeto Carrinho de Compras",
          "Projeto Carrinho de Compras - Configurando o Autoloader",
          "Projeto Carrinho de Compras - Abstraindo os atributos e métodos",
          "Entendendo o Single Responsibility Principle (SRP)",
          "Refactoring do Projeto - Aplicando o princípio na prática parte 1",
          "Refactoring do Projeto - Aplicando o princípio na prática parte 2",
          "Refactoring do Projeto - Aplicando o princípio na prática parte 3",
          "Testando as vantagens do SRP"
        ],
        "Extra - Implementando testes de unidade automatizados": [
          "O que são os testes de software?",
          "Incluindo o PHPUnit no projeto via Composer",
          "Implementando nosso primeiro teste",
          "Testes e Asserções",
          "Criando um provedor de dados para testes"
        ],
        "OCP - Open/Closed Principle (Princípio Aberto/Fechado)": [
          "Iniciando o projeto ETL (Extract Transform Load)",
          "Projeto ETL - Lendo um arquivo CSV",
          "Projeto ETL - Lendo um arquivo TXT",
          "Entendendo o Open/Closed Principle (OCP)",
          "Refactoring do Projeto - Aplicando o princípio na prática",
          "Testando as vantagens do OCP"
        ],
        "LSP - Liskov Substitution Principle (Princípio de Substituição de Liskov)": [
          "Iniciando o projeto Polígonos",
          "Projeto Polígonos - Retângulo e Quadrado",
          "Projeto Polígonos - Testando a Substituição de Tipos",
          "Entendendo o Liskov Substituion Principal",
          "Refactoring do Projeto - Aplicando o princípio na prática"
        ],
        "ISP - Interface Segregation Principle (Princípio da Segregação de Interface)": [
          "Iniciando o Projeto CRM",
          "Projeto CRM - Implementando os componentes da aplicação",
          "Projeto CRM - Implementando a interface",
          "Entendendo o Interface Segregation Principle",
          "Refactoring do Projeto - Aplicando o princípio na prática"
        ],
        "DIP - Dependency Inversion Principle (Princípio da Inversão de Dependência)": [
          "Iniciando o Projeto Mensageiro",
          "Projeto Mensageiro parte 1 - Implementando os componentes da aplicação",
          "Projeto Mensageiro parte 2 - Implementando os componentes da aplicação",
          "Entendendo o Dependency Inversion Principle",
          "Refactoring do Projeto - Aplicando o princípio na prática"
        ]
      },
      "requirements": [
        "O aluno deve possuir conhecimento prévio em orientação a objetos (qualquer linguagem)"
      ],
      "description": "Bem vindo ao curso SOLID - Os 5 Princípios Para as Boas Práticas da POO, o curso mais completo da categoria!\n\n\nPara iniciar esse curso é necessário que o aluno possua conhecimentos prévios em programação orientada a objetos.\n\n\nO curso foi produzido utilizando a linguagem de programação PHP, mas os princípios ensinados no curso são universais, ou seja, podem e devem ser aplicados a qualquer linguagem de programação que suporte o paradigma de orientação a objetos.\n\n\nConheça agora mesmo o curso mais COMPLETO sobre SOLID e leve seus conhecimentos de programação orientada a objetos para o próximo nível!\n\n\nConfira abaixo as módulos que serão abordados neste curso:\n- SRP - Single Responsibility Principle (Princípio da Responsabilidade Única)\n- Extra - Implementando testes de unidade automatizados\n- OCP - Open/Closed Principle (Princípio Aberto/Fechado)\n- LSP - Liskov Substitution Principle (Princípio de Substituição de Liskov)\n- ISP - Interface Segregation Principle (Princípio da Segregação de Interface)\n- DIP - Dependency Inversion Principle (Princípio da Inversão de Dependência)\n\n\nE como você vai aprender todo esse conteúdo? Simples, com muita didática e principalmente, com muita prática!\n\n\nEstá na dúvida? Então experimente!\nEsse curso tem 30 dias de garantia, tempo de sobra para você testar e aprovar. Se não gostar é só solicitar reembolso ;)\n\n\nJunte-se a mais de 250 mil alunos que já fizeram e aprovaram os nossos treinamentos!",
      "target_audience": [
        "Desenvolvedores de nível intermediário que já conhecem orientação a objetos, e que desejam melhorar seus projetos através do uso da boas práticas de mercado",
        "Desenvolvedores interessados em aprimorar seus conhecimentos no uso da Programação Orientada a Objetos"
      ]
    },
    {
      "title": "Hands-On Introduction to CI/CD with GitHub Actions",
      "url": "https://www.udemy.com/course/hands-on-introduction-to-cicd-with-github-actions/",
      "bio": "A practical, beginner-friendly course on setting up CI/CD pipelines with GitHub Actions - from basics to real deployment",
      "objectives": [],
      "course_content": {
        "Welcome & Setup": [
          "Welcome!",
          "Join Our Community",
          "What is CI/CD and why GitHub Actions",
          "Setting up Our Environment"
        ],
        "GitHub Actions Basics": [
          "First Workflow",
          "Creating Node.js App",
          "Node.js CI",
          "Workflow Concepts",
          "React App on GitHub Pages",
          "Docker Build and Push"
        ],
        "Ending": [
          "Wrap up & Thank you!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of Git and GitHub (clone, commit, push)",
        "A GitHub account (free tier is enough)",
        "Basic JavaScript familiarity (for the sample app)",
        "No prior CI/CD or Docker experience required"
      ],
      "description": "Welcome to Hands-On Introduction to CI/CD with GitHub Actions — a practical, beginner-friendly course designed to get you up and running with continuous integration and deployment in real-world projects.\nI’m Lucas, a tech lead working in an international team, and I’ve created this course in the same style as all my other “Hands-On Introduction” courses: no slides, no unnecessary theory — just straightforward coding and real examples.\nIn this course, we’ll start from the ground up:\nWhat CI/CD means and why it matters\nHow GitHub Actions workflows work with YAML syntax\nWriting your first “Hello Actions” pipeline\nBuilding a Node.js project with linting and unit tests\nExpanding CI with Node version matrices and parallel jobs\nDeploying a React frontend to GitHub Pages automatically\nUsing secrets and pushing a Docker image to a registry\nBy the end, you’ll have created three working pipelines: one for CI, one for frontend deployment, and one for container publishing. Along the way, you’ll learn how to read and write workflows, work with triggers, jobs, and steps, and troubleshoot failing runs.\nIf you’ve ever wanted to set up professional pipelines for your projects without getting lost in heavy DevOps tools, this course is the perfect starting point. Everything is built step by step, live, and from scratch.\nJoin thousands of students already learning in my hands-on courses and let’s build your first CI/CD pipelines together!",
      "target_audience": [
        "Developers who want to get started with CI/CD",
        "Beginners curious about GitHub Actions",
        "Students who want practical pipelines for Node.js or React projects",
        "Anyone looking to automate testing and deployments in their projects"
      ]
    },
    {
      "title": "Software Performance Engineering and Multicore Programming",
      "url": "https://www.udemy.com/course/software-performance-engineering-and-multicore-programming/",
      "bio": "Deep-dive into Performance Engineering & Multicore Computing. Learn about cache management, virtual machines, hypervisor",
      "objectives": [
        "Define Software Performance Engineering",
        "Learn Multicore Computing & Multicore Programming",
        "Understand Parallelization and Cache Complexity",
        "Take a deep-dive into Memory Hierarchy Optimization",
        "Understand Virtual Machines and how they work",
        "Learn Hypervisor Architecture",
        "Define Montgomery's Trick and its application"
      ],
      "course_content": {
        "Software Performance Engineering": [
          "Software Performance Engineering"
        ],
        "Introduction to Multicore Programming": [
          "Introduction to Multicore Programming"
        ],
        "Multithreaded Parallelism and Performance Measures": [
          "Multithreaded Parallelism and Performance Measures"
        ],
        "Analysis of Multithreaded Algorithms": [
          "Analysis of Multithreaded Algorithms"
        ],
        "Issues in Parallelization": [
          "Issues in Parallelization"
        ],
        "Synchronizing without Locks and Concurrent Data Structures": [
          "Synchronizing without Locks and Concurrent Data Structures"
        ],
        "Cache Complexity": [
          "Cache Complexity"
        ],
        "Around Montgomery's Trick": [
          "Around Montgomery's Trick"
        ],
        "Space vs Time and Cache vs Memory": [
          "Space vs Time and Cache vs Memory"
        ],
        "Experience in Coding High Performance Numerical Libraries": [
          "Experience in Coding High Performance Numerical Libraries"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Software Performance Engineering and Multicore Programming course by Uplatz.\n\n\nSoftware Performance Engineering (SPE) is a systematic approach to designing, analyzing, and optimizing software systems to meet performance objectives such as speed, scalability, and responsiveness. It ensures that software applications perform efficiently under various workloads. It is a systematic, quantitative approach to the cost-effective development of software systems to meet performance requirements. SPE is a software-oriented approach that focuses on architecture, design, and implementation choices. SPE gives you the information you need to build software that meets performance requirements on time and within budget.\nSPE uses quantitative analysis techniques to predict and evaluate performance implications of design and implementation decisions. The process begins early in the software lifecycle and uses quantitative methods to identify satisfactory combinations of requirements and designs, and to eliminate those that are likely to have unacceptable performance, before developers begin implementation. SPE continues through the detailed design, coding, and testing stages to predict and manage the performance of the evolving software, and to monitor and report actual performance against specifications and predictions. SPE methods cover performance data collection, quantitative analysis techniques, prediction strategies, management of uncertainties, data presentation and tracking, model verification and validation, critical success factors, and performance design principles.\nSPE provides an engineering approach to performance, eliminating the issues of performance-driven development and fix-it-later. SPE uses model predictions to evaluate trade-offs in software functions versus hardware costs. The models assist developers in controlling resource requirements by selecting architecture and design alternatives with acceptable performance characteristics. They aid in tracking performance throughout the development process and prevent problems from surfacing late in the life cycle (typically during performance and stress testing).\n\n\nKey Aspects of SPE\n\n\nPerformance Modeling – Predicting system behavior using analytical models.\nCapacity Planning – Ensuring the software can handle expected workloads.\nLoad & Stress Testing – Evaluating system performance under heavy usage.\nCode Optimization – Improving algorithms and resource utilization.\nProfiling & Monitoring – Identifying performance bottlenecks.\nScalability Analysis – Ensuring the system can handle increasing demands.\nConcurrency & Parallelism – Optimizing execution for multi-threaded environments.\n\n\nTools Used in SPE\nLoad Testing - JMeter, LoadRunner, Gatling\nProfiling - New Relic, Dynatrace, YourKit\nMonitoring - Prometheus, Grafana, AWS CloudWatch\nCode Optimization - Intel VTune, Perf, Flamegraphs\n\n\nMulticore Programming refers to the approach of creating concurrent systems for deployment on multicore processor and multiprocessor systems. A multicore processor system is a single processor with multiple execution cores in one chip. By contrast, a multiprocessor system has multiple processors on the motherboard or chip. Multicore programming involves writing software that takes advantage of multiple CPU cores to execute tasks in parallel. Instead of sequential execution, it splits workloads across multiple threads or processes to enhance performance.\nMulticore programming focuses on the following key elements:\n\n\nKey Concepts in Multicore Programming\nThreading & Concurrency – Using multiple threads to execute tasks simultaneously.\nParallelism – Breaking down computations into independent subtasks.\nSynchronization – Managing access to shared resources to avoid race conditions.\nLoad Balancing – Distributing tasks efficiently among cores.\nLock-Free & Wait-Free Programming – Avoiding bottlenecks due to locks.\nProgramming Models for Multicore\nThread-Based - POSIX Threads (pthreads), Java Threads, C++ std::thread\nTask-Based - OpenMP, Intel TBB\nMessage Passing - MPI (Message Passing Interface)\nGPU Programming - CUDA, OpenCL\nMulticore Performance Optimization Techniques\nData Locality – Optimizing cache usage to reduce memory latency.\nThread Affinity – Binding threads to specific cores for efficient execution.\nLock-Free Algorithms – Using atomic operations to avoid contention.\nEfficient Synchronization – Using spinlocks, read-write locks, or transactional memory.\n\n\nSoftware Performance Engineering and Multicore Programming - Course Curriculum\n\n\nSoftware Performance Engineering\nIntroduction to Multicore Programming\nMultithreaded parallelism and Performance Measures\nAnalysis of Multithreaded Algorithms\nIssues in Parallelization\nSynchronizing without locks and concurrent data structures\nCache Complexity\nMontgomery Trick\nSpace Vs Time Cache Vs Memory\nExperience in coding high performance numeric libraries\nFFT Based Polynomial Arithmetic on Multicore\nParallel Programming for Many high-performance Architectures\nMemory Hierarchy Optimization-I\nMemory Hierarchy Optimization-II\nWriting Correct Programs\nFloating Point\nApplications\nDynamic Scheduling Sorting\nVirtual Machines\nHypervisor\nMulticore Computing\nMulticore Programming-I\nMulticore Programming-II\nMulticore Programming-III\nMulticore Programming-IV\nMulticore Programming-V",
      "target_audience": [
        "System Performance Engineers",
        "Software Engineers",
        "Newbies & Beginners in the field of Performance Engineering",
        "Anyone aspiring for a career in Software and Performance Engineering",
        "System Engineers & Analysts",
        "System Administrators",
        "Cloud Architects & Engineers",
        "Senior Software Performance Analysis Engineers",
        "Performance Engineers",
        "Software Testers",
        "Embedded Engineers",
        "Safety Performance Engineers",
        "Quality Assurance Leads",
        "Operational Performance Engineers",
        "Electronics & Communication Engineers",
        "Software Developers & Programmers"
      ]
    },
    {
      "title": "Benchmarking, Improving AI Model - BLEU, TER, GLUE and more",
      "url": "https://www.udemy.com/course/how-to-benchmark-machine-learning-models/",
      "bio": "Master the art of benchmarking Machine learning models for any usage from Generative AI to narrow ai as computer vision",
      "objectives": [
        "What is Machine Learning benchmarking and how does it work",
        "Standard Metrics used in AI ( Reliability, F1 Score, Recall)",
        "Run a test through an API",
        "How to run a benchmark against GLUE Metric",
        "How to run a benchmark against BLUE Metric",
        "MMLU (Massive Multitask Language Understanding) Benchmarking",
        "TruthfulQA -Evaluation of Truthfulness in Language Models",
        "Run Benchmark against SQuAD (Stanford Question Answering Dataset)",
        "Understand the AI Model Lifecycle",
        "Perplexity and Bias Benchmarking",
        "Benchmark Against AI Fairness- Bias in Bios",
        "Usage of HuggingFace models for benchmark and training",
        "Computer Vision benchmark with CIFAR 10 dataset",
        "Benchmark RAG with RAGAs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About your Instructor",
          "5 minute AI Benchmark Challenge"
        ],
        "What is benchmarking and how does it work": [
          "Additional Testing required for AI",
          "How Foundation Model Pre Training works",
          "How to Fine Tune a Foundation Model",
          "How Benchmarking Works",
          "The Myth of the all Powerful AI Model"
        ],
        "Introduction to AI - Optional if you know the basics of AI": [
          "What makes up AI",
          "Natural Language Processing - NLP",
          "Types of Machine Learning",
          "Machine Learning - Supervised ML",
          "Machine Learning - Unsupervised ML",
          "Machine Learning - Reinforced ML",
          "Importance of Training Data",
          "What is a token in LLMs",
          "Weak AI vs Gen AI vs AGI - Know the difference"
        ],
        "Setting up the Environment": [
          "Install VS Code",
          "Installing Python",
          "Install Python Dependencies - PIP",
          "Installing Conda - Environment Isolator tool",
          "Install NodeJS and NPM",
          "Clone the Repository on your machine",
          "Create CHAT GPT Subscription",
          "Get OPEN AI API KEY"
        ],
        "Hugging Face Platform - AI Engineer repo": [
          "Introduction to Hugging Face Community Page",
          "Hugging Face Transformers Python Package",
          "How to load and use any model from Huggingface",
          "Hugging Face Evaluate Python Package"
        ],
        "Common Traditional Metrics for LLMs ML Model and how to calculate them": [
          "Ground Truth Table - source of Truth | Test Oracle",
          "Machine Learning Metrics - Accuracy for LLMs",
          "Machine Learning Metrics -Precision of LLMs",
          "Machine Learning Metrics -Recall in LLMs",
          "Machine Learning Metrics -F1 Score for LLMs",
          "Machine Learning Metrics -Perplexity for LLMs",
          "Demo - PyTorch - Calculate Perplexity for a Model"
        ],
        "Data Splitting in Folds K- Fold Techniques": [
          "Introduction to Splitting Data for AI/ML Models",
          "Demo - Python - Scikit - Split Data for Testing",
          "K-Fold Cross Validation",
          "Laboratory - Python K Fold Training and Demo",
          "Identify Model Over/under fitting with Accuracy Evaluations"
        ],
        "GLUE - Benchmark against NLP": [
          "What is GLUE NLP Benchmark",
          "What are the 11 benchmark Tasks of GLUE",
          "How to run a GLUE benchmark test",
          "Glue benchmarking on Bert Huggingface Model",
          "Demo - Python GLUE benchmark against GHATGPT"
        ],
        "Benchmark RAG Performance Pipeline - TREC-RAG": [
          "What is RAG",
          "4 Types of RAG - Simple, Speculative, Graph, Corrective",
          "Create a RAG application with FAISS",
          "RAGAs Validation Framework - Retrieval",
          "Rag framework - Coherence, Fluency and Relevance",
          "RAG Benchmarking - Nugget Coverage"
        ],
        "Performance Characteristics for AI Models": [
          "Criteria 1- Model Training Time",
          "Criteria 2 - Inference Time",
          "Criteria 3 - Model Drifting",
          "Criteria 4 - Infrastructure to run the Model",
          "Criteria 5 - Memory and Token - Limit"
        ]
      },
      "requirements": [
        "some python programming experience, you can also do without",
        "basic understanding of AI Principles",
        "Desire to learn the hottest skill on the market",
        "5$ API Credits for OPEN AI - optional, you can use free models",
        "VS Code, Postman, Python, Node"
      ],
      "description": "This comprehensive course delves into the essential practices, tools, and datasets for AI model benchmarking. Designed for AI practitioners, researchers, and developers, this course provides hands-on experience and practical insights into evaluating and comparing model performance across tasks like Natural Language Processing (NLP) and Computer Vision.\nWhat You’ll Learn:\nFundamentals of Benchmarking:\nUnderstanding AI benchmarking and its significance.\nDifferences between NLP and CV benchmarks.\nKey metrics for effective evaluation.\nSetting Up Your Environment:\nInstalling tools and frameworks like Hugging Face, Python, and CIFAR-10 datasets.\nBuilding reusable benchmarking pipelines.\nWorking with Datasets:\nUtilizing popular datasets like CIFAR-10 for Computer Vision.\nPreprocessing and preparing data for NLP tasks.\nModel Performance Evaluation:\nComparing performance of various AI models.\nFine-tuning and evaluating results across benchmarks.\nInterpreting scores for actionable insights.\nTooling for Benchmarking:\nLeveraging Hugging Face and OpenAI GPT tools.\nPython-based approaches to automate benchmarking tasks.\nUtilizing real-world platforms to track performance.\nAdvanced Benchmarking Techniques:\nMulti-modal benchmarks for NLP and CV tasks.\nHands-on tutorials for improving model generalization and accuracy.\nOptimization and Deployment:\nTranslating benchmarking results into practical AI solutions.\nEnsuring robustness, scalability, and fairness in AI models.\nBenchmark RAG implementations\nRAGAS\nCoherence\nConfident AI - Deepeval\nHands-On Modules:\nImplementing end-to-end benchmarking pipelines.\nExploring CIFAR-10 for image recognition tasks.\nComparing supervised, unsupervised, and fine-tuned model performance.\nLeveraging industry tools for state-of-the-art benchmarking",
      "target_audience": [
        "AI Engineers",
        "AI Project Managers",
        "ML Testers",
        "AI Testers",
        "Production Owners that work with AI"
      ]
    },
    {
      "title": "Spring Boot Tricks",
      "url": "https://www.udemy.com/course/spring-boot-tricks/",
      "bio": "A course to learn the basics of Spring Boot with REST APIs",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "A basic introduction to the course, and about the instructor."
        ],
        "REST API Basics": [
          "Anatomy of a Spring Boot application",
          "Custom Request Annotations Introduction",
          "GET and POST mappings with custom annotations",
          "Basics of REST APIs"
        ],
        "Introduction to Data Persistence": [
          "Repositories and Spring Data",
          "Database settings in application.properties",
          "Repositories and Data Quiz"
        ],
        "MVC tests": [
          "MVC tests",
          "MVC test quiz"
        ],
        "Next steps": [
          "Where to go from here (online resources)"
        ]
      },
      "requirements": [
        "Basic Java Programming"
      ],
      "description": "This course is designed for developers familiar with Java 8+, and want to become more familiar with REST API development using Spring Boot.\nUnlike some other courses, I am not a big believer in code-alongs, as it simply fills up time, but rather give a screencast and describe the code as seen, along with a Github link to the project at that state, so that developers can be productive quickly and easily, and stay focused on the details at hand, rather than watching someone code, and fix their mistakes in real time.\nTopics covered include:\n- Custom annotations\n- Request Mapping for GET and POST\n- Using repositories to communicate with a database\n- Path variables\n- MVC tests",
      "target_audience": [
        "Java Developers with basic SQL knowledge"
      ]
    },
    {
      "title": "Build Great Systems That Last - Series A: Analytical Skills",
      "url": "https://www.udemy.com/course/build-great-mission-critical-systems-that-last-analytical-skills/",
      "bio": "Learn the analytical skills required in building a great mission-critical system",
      "objectives": [],
      "course_content": {
        "Project Management": [
          "Project Management",
          "Business Analysis",
          "Process and Rule Modelling",
          "Systems Analysis",
          "Data Modelling",
          "Development",
          "Testing",
          "Deployment",
          "Change Management"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "By taking this course, you will gain the hands-on knowledge required to build robust mission-critical systems trusted by reputable financial institutions, energy giants, mining companies and other industry verticals.\nThis course was put together based on our own internal training materials at Robocoder Corporation and has been used to train developers and business managers over the last 20 years.\nWith the analytical skills acquired from this course, be empowered to build great mission-critical systems that last.",
      "target_audience": [
        "Beginner developers interested in building mission-critical systems that last"
      ]
    },
    {
      "title": "Create First DApp Using Truffle and Ganache",
      "url": "https://www.udemy.com/course/create-dapp-with-truffle-and-ganache/",
      "bio": "Learn to create DApp",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to get started with Truffle and Ganache",
          "What You Should Know",
          "System Requirements"
        ],
        "Creating Contract with Migration": [
          "Unbox Truffle Box",
          "Writing a Smart Contract",
          "Migration",
          "Testing"
        ],
        "Interacting with the dapp in a browser": [
          "Creating a user interface to interact with the smart contract",
          "Installing and configuring MetaMask",
          "Installing and configuring lite-server and using the dapp"
        ]
      },
      "requirements": [
        "Understanding of Blockchain, Ethereum and Solidity language"
      ],
      "description": "This tutorial will take you through the process of building your first dapp---an adoption tracking system for a pet shop!\nThis tutorial is meant for those with a basic knowledge of Ethereum and smart contracts, who have some knowledge of HTML and JavaScript, but who are new to dapps.\nIn this tutorial we will be covering:\nSetting up the development environment\nCreating a Truffle project using a Truffle Box\nWriting the smart contract\nCompiling and migrating the smart contract\nTesting the smart contract\nCreating a user interface to interact with the smart contract\nInteracting with the dapp in a browser.\nPete Scandlon of Pete's Pet Shop is interested in using Ethereum as an efficient way to handle their pet adoptions. The store has space for 16 pets at a given time, and they already have a database of pets. As an initial proof of concept, Pete wants to see a dapp which associates an Ethereum address with a pet to be adopted.\nThe website structure and styling will be supplied. Our job is to write the smart contract and front-end logic for its usage.\n\n\nTruffle is a world class development environment, testing framework and asset pipeline for blockchains using the Ethereum Virtual Machine (EVM), aiming to make life as a developer easier. With Truffle, you get:\nBuilt-in smart contract compilation, linking, deployment and binary management.\nAutomated contract testing for rapid development.\nScriptable, extensible deployment & migrations framework.\nNetwork management for deploying to any number of public & private networks.\nPackage management with EthPM & NPM, using the ERC190 standard.\nInteractive console for direct contract communication.\nConfigurable build pipeline with support for tight integration.\nExternal script runner that executes scripts within a Truffle environment.",
      "target_audience": [
        "Beginners for Creating first Decentralised Application (DApp)."
      ]
    },
    {
      "title": "Learn to setup Page Navigation in WPF - MVVM",
      "url": "https://www.udemy.com/course/learn-to-setup-page-navigation-in-wpf-mvvm/",
      "bio": "Learn about switching from one view to another with WPF and MVVM.",
      "objectives": [],
      "course_content": {
        "Build a Page Navigation Application from Scratch": [
          "Introduction",
          "Application Demo",
          "Setup the view",
          "Create a simple Navigation Bar",
          "Setup the ViewModel",
          "Setup ContentControl Style Triggers",
          "Recap",
          "Bind DataContext to Child controls"
        ]
      },
      "requirements": [
        "Basic WPF & C# experience is needed to understand the concepts"
      ],
      "description": "In this simple course, you will learn about setting up Page navigation in WPF with MVVM.\nCommunity Tool kit from Microsoft will be used for supporting the ViewModel setup\nSimple ContentControl with style triggers will be used for switching the views.\nGet introduced to basic Xaml view setup\nGet introduced to .NET 6\nFour basic sample pages are created and used as an example in the navigation\nAlso learn how to quickly setup a Top Navigation bar and arrange them with in a Stackpanel UI element.\nThe full course is built on .NET 6 using Visual Studio 2022 as the Integrated Development Environment (IDE). Also, you will learn how to install external third party packages from Nuget Package source from within the Visual Studio.\nCourse will be simple enough to understand even for the beginners. If you are a professional with years of experience or a novice WPF developer with intermediate knowledge, this course will still be helpful to you in understanding new way of implementing page navigation in your projects and switching the views easily.\nBy the end of this course, you will be able to setup page navigation in WPF MVVM application of any size and scale. Source codes are provided for the full project which will be",
      "target_audience": [
        "Beginners of WPF who wish to implement page navigation in their application"
      ]
    },
    {
      "title": "SCRUM Rápido e Prático",
      "url": "https://www.udemy.com/course/scrum-rapido-e-pratico/",
      "bio": "Conheça Scrum e Metodologia Ágil de Forma Rápida e Prática",
      "objectives": [
        "Curso Prático para entendimento do Modelo Scrum em projetos de software"
      ],
      "course_content": {
        "Scrum Rápido e Prático": [
          "Introdução",
          "O Manifesto Ágil",
          "Valores do Manifesto Ágil",
          "Ágil vs. Tradicional",
          "O que é Scrum?",
          "Pilares do Scrum",
          "Product Owner",
          "Scrum Master",
          "Scrum Team",
          "Product Backlog",
          "User Story",
          "Sprint Planning",
          "Sprint",
          "Daily Scrum",
          "Burndown Chart",
          "DoD e Taskboard",
          "Sprint Review",
          "Sprint Retrospective",
          "Conclusão"
        ]
      },
      "requirements": [
        "Ter trabalhado em projetos de software"
      ],
      "description": "As metodologias ágeis são altamente difundidas no mercado de trabalho atual, o Scrum se tornou o framework mais divulgado dentro desse universo ágil e principalmente adotado em projetos de desenvolvimento de software.\nO Propósito deste curso é tratar de forma mais prática todos os conceitos de Scrum, abordando cada etapa, papel, cerimônia, artefato para você que está interessado em conhecer mais do assunto ou até mesmo já está participando de uma estrutura ágil, mas não conhece todos os conceitos referentes.",
      "target_audience": [
        "Pessoas que trabalham na área de projetos de software que querem aprofundar seus conhecimentos em metodologia ágil"
      ]
    },
    {
      "title": "Mendix Low-Code Practice Tests: 6 Exams, 330 Questions",
      "url": "https://www.udemy.com/course/mendix-low-code-development-complete-guide/",
      "bio": "Prepare for Mendix Low-Code Development certification with 6 full practice tests (330 questions) in real exam format.",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Pass the Mendix Low-Code Certification Exam with Confidence\nThe Mendix Low-Code Developer certification validates your ability to design, build, and deploy applications using the Mendix low-code platform. This course gives you 6 full-length practice exams with a total of 330 questions, carefully designed to replicate the format, timing, and difficulty of the real exam.\nInstead of focusing only on theory, this course emphasizes realistic exam simulations. Each question includes a detailed explanation to help you understand the correct answers, learn from mistakes, and strengthen your readiness for certification success.\n\n\nWhat You Get\n6 complete practice exams (55 questions each, 330 total)\nReal exam structure and time constraints for authentic preparation\nDetailed explanations for every answer choice\nLifetime access with free updates aligned to Mendix exam objectives\nPerformance tracking to measure progress and exam readiness\n\n\nWhy Practice Tests Are Essential\nSave money by passing on your first attempt and avoiding retakes\nBuild confidence with exam-style conditions and timing\nStudy smarter by focusing on weak areas instead of relearning everything\nReduce stress by knowing exactly what to expect on exam day\n\n\nComplete Exam Coverage (based on Mendix certification blueprint)\n\n\nApplication Design and Domain Modeling\nMicroflows, Nanoflows, and Logic Implementation\nData Management and Integrations\nUser Experience (UI/UX) and Navigation\nSecurity, Roles, and Access Management\nDeployment and Application Lifecycle Management\n\n\nWho This Course Is For\nDevelopers preparing for the Mendix Low-Code Developer certification\nBusiness analysts and IT professionals working with low-code solutions\nTeams building enterprise apps with Mendix who want exam preparation\nAnyone looking for realistic exam practice to validate Mendix skills\n\n\nHow to Use This Course Effectively\nTake one exam to assess your current knowledge baseline\nReview detailed explanations to identify knowledge gaps\nFocus on improving weak areas before attempting the next test\nProgress through all six exams until you consistently score above the passing threshold\nApproach the real Mendix exam confident and fully prepared\n\n\nWhy This Course Works\nPractice tests simulate the real certification environment. They strengthen your technical knowledge while also improving time management, problem-solving, and exam strategy.\n\n\nFinal Note\nThis course is designed to give you the closest possible Mendix exam experience. With 6 practice exams and 330 questions, you’ll gain the skills and confidence to pass the Mendix Low-Code Development certification on your first attempt.\n\n\nEnroll today and take the most direct path to Mendix certification success.",
      "target_audience": [
        "Software developers transitioning to low-code platforms",
        "Business analysts wanting to build applications",
        "IT professionals exploring rapid application development",
        "Students learning modern development methodologies",
        "Consultants implementing digital transformation projects",
        "Traditional developers seeking faster development approaches"
      ]
    },
    {
      "title": "Make your agile team faster and more productive.",
      "url": "https://www.udemy.com/course/growing-agile-impediments/",
      "bio": "Learn how to identify and resolve the things that are holding back your agile/scrum team from being as fast as possible.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "understanding of agile and scrum"
      ],
      "description": "If you are using an agile approach like Scrum or Kanban, you will know that impediments can prevent your team from reaching their goals. This short course will help you notice many more impediments in your environment, and give you ideas for how to tackle them.\nThis course will teach you what impediments are, how to recognise them and some techniques to solve them.\nWe include some videos with exercises, a workbook to use and a short quiz at the end to cement all your learnings.\nThis course should not take you more than 40 minutes, including time to do the exercises.",
      "target_audience": [
        "ScrumMasters",
        "Team Leads",
        "Managers"
      ]
    },
    {
      "title": "SAP C_CPE_2409 Certification: Complete Backend Guide 2025",
      "url": "https://www.udemy.com/course/sap-c-cpe-2409-certification/",
      "bio": "Master SAP Cloud Application Programming Model for Clean Core Extensibility - Learn CAP, BTP Runtime and Multitenancy",
      "objectives": [
        "You'll build complete SAP CAP applications using Core Data Services in just 15 minutes per project.",
        "You'll implement side-by-side extensions that keep S/4HANA core clean and upgradeable.",
        "You'll choose strategically between Cloud Foundry and Kyma based on real technical criteria.",
        "You'll develop multi-tenant SaaS applications with MTX Sidecar for multiple isolated clients.",
        "You'll construct event-driven architectures using SAP Event Mesh for responsive systems.",
        "You'll generate Fiori Elements interfaces automatically through CDS annotations without UI code.",
        "You'll integrate generative AI with HANA Vector Engine for intelligent enterprise applications.",
        "You'll automate complete CI/CD pipelines for zero-downtime production deployments.",
        "You'll diagnose and resolve complex CSRF, SQLite, and draft entity issues quickly.",
        "You'll pass the C_CPE_2409 certification using strategies with 70%+ success rates."
      ],
      "course_content": {
        "Introduction": [
          "Start Here"
        ],
        "SAP C_CPE_2409 Certification": [
          "SAP CAP Certification Complete Guide 2025 - Data-Driven Strategy",
          "The Definitive Backend Developer SAP Cloud Programming Exam Prep Guide",
          "Strategic Study Path Optimization for SAP Certification 2025",
          "C_CPE_2409 Exam Dumps Analysis and Ethics"
        ],
        "SAP Cloud Application Programming Model": [
          "SAP CAP Framework Fundamentals for Beginners",
          "Core Data Services Modeling Best Practices",
          "Core Data Services Modeling Best Practices - Mastering the Critical Differences",
          "SAP CAP Node.js vs Java Runtime Comparison - Strategic Language Choice",
          "SAP CAP Advanced Integration Patterns: Next-Generation Enterprise Architectures"
        ],
        "Clean Core Extensibility": [
          "Clean Core Extensibility with CAP Framework: Keep-the-Core-Clean Strategy",
          "SAP S/4HANA Cloud Extension Patterns - In-App vs Side-by-Side",
          "CAP vs RAP Comparison for Enterprise Architects - Strategic Analysis Framework",
          "Legacy System Integration with Cloud Connector"
        ],
        "SAP BTP Runtimes": [
          "SAP BTP Runtime Comparison Cloud Foundry vs Kyma",
          "Cloud Foundry Deployment Automation Best Practices",
          "Kyma Runtime Microservices Architecture Patterns",
          "ABAP Environment Steampunk Integration Scenarios"
        ],
        "Multitenancy SaaS Development": [
          "Multitenancy SaaS Development with SAP CAP",
          "SaaS Provisioning Service Integration Patterns",
          "Cross-runtime multitenancy Cloud Foundry and Kyma",
          "Enterprise-Grade Security for Multi-Tenant Applications"
        ],
        "Event-Driven Architecture": [
          "Event-Driven Architecture SAP Business Technology Platform",
          "SAP Event Mesh Integration with CAP Applications",
          "SAP Event Mesh Integration with CAP Applications",
          "Event Streaming and Processing with Kyma Functions",
          "Event-driven Microservices Communication Patterns"
        ],
        "SAP Fiori Elements": [
          "SAP Fiori Elements Automatic UI Generation - Mastering Zero-Code UI Development",
          "Advanced UI Annotations and Customization Patterns",
          "Custom Logic Integration with Fiori Elements",
          "Fiori Launchpad Integration and Deployment Strategies"
        ],
        "Advanced CAP Features": [
          "SAP CAP Integration with Generative AI",
          "Advanced Database Features PostgreSQL vs HANA",
          "CAP Application Performance Optimization Techniques",
          "Enterprise Observability and Monitoring Setup"
        ],
        "CI/CD and DevOps": [
          "CI/CD Pipeline Automation for SAP CAP Applications",
          "Testing Strategies for CAP Applications",
          "Blue-Green Deployment Patterns for SAP BTP",
          "Quality Gates and Code Analysis for Enterprise CAP",
          "Production Monitoring and Alerting for SAP CAP Applications"
        ]
      },
      "requirements": [
        "You can navigate command line interfaces (all commands provided)"
      ],
      "description": "Transform your career and position yourself at the forefront of enterprise cloud development with the SAP C_CPE_2409 Certification: Complete Backend Guide 2025.\nThis comprehensive masterclass equips you with the essential skills to master SAP Cloud Application Programming Model (CAP), implement clean core extensibility strategies, and build enterprise-grade applications that drive digital transformation.\nMaster The Future Of Enterprise Development With Clean Core Extensibility\n• Build production-ready applications using SAP CAP framework with Node.js and Java\n• Implement multitenancy SaaS solutions with MTX Sidecar and tenant lifecycle management\n• Deploy applications seamlessly across Cloud Foundry and Kyma runtime environments\n• Design event-driven architectures using SAP Event Mesh and microservices patterns\n• Integrate AI capabilities with Generative AI Hub and HANA Vector Engine\n• Master CI/CD automation for enterprise-grade deployment pipelines\n• Troubleshoot complex scenarios with real-world production debugging techniques\nYour Gateway To A $148,000+ Annual Salary In The Fastest-Growing Enterprise Technology Market\nThe SAP Business Technology Platform market is experiencing explosive growth, projected to expand from $714 million in 2024 to an astounding $7.2 billion by 2034 — that's a compound annual growth rate of 26%.\nRight now, SAP BTP developers are commanding salaries between $130,000 and $195,000 annually in the United States, with the average hitting $148,509.\nThis isn't just another technical certification — it's your strategic entry point into a market where 97% of large enterprises are correlating cloud migration with AI adoption. Companies like Freudenberg and Chugai Pharma are already building mission-critical extensions using these exact technologies across global markets from Silicon Valley to Shanghai.\nWhat You'll Master in This Complete Backend Developer Journey\nYou'll gain deep expertise in the SAP Cloud Application Programming Model, starting with Core Data Services (CDS) modeling and progressing to advanced patterns like multitenancy and event-driven architectures.\nThe course covers both theoretical foundations and hands-on implementation, including building side-by-side extensions that maintain clean core principles while delivering powerful business functionality.\nYou'll learn to make strategic decisions between Cloud Foundry and Kyma runtimes, implement security patterns with XSUAA, and leverage the latest CAP v8 features including the new open-source database architecture.\nBy the end, you'll be building enterprise applications that integrate seamlessly with S/4HANA Cloud while maintaining the flexibility to evolve independently.\nReal-world case studies from global implementations demonstrate how companies in China are using CAP for regulatory compliance, Japanese pharmaceutical firms are automating clinical trial processes, and European manufacturers are implementing hybrid architectures.\nThis Course Is Perfect For:\n• Backend developers transitioning to SAP cloud technologies\n• SAP consultants expanding into BTP and clean core extensibility\n• Enterprise architects designing modern cloud-native solutions\n• DevOps engineers implementing CI/CD for SAP applications\n• Technology leaders planning digital transformation strategies\n\n\n\"Will AI replace SAP developers?\"\nAbsolutely not. AI is amplifying developer capabilities, not replacing them. The latest SAP Build Code with Joule AI copilot accelerates development, making skilled CAP developers even more valuable.\nYou'll learn to leverage AI tools while focusing on high-value architectural decisions and business logic that only human expertise can provide.\n\"I don't have enough time to study while working?\"\nThis course is designed for working professionals with modular lessons averaging 5-7 minutes each. You can progress during lunch breaks, commutes, or evening sessions.\nThe practical exercises are immediately applicable to real projects, meaning you're gaining value from day one rather than just consuming theoretical content.\n\"Is this just another surface-level certification course?\"\nThis course goes far beyond exam preparation. You'll build actual applications, troubleshoot real production scenarios, and master advanced patterns like multitenancy and event-driven architectures.\nThe content is based on analysis of implementations across six languages and multiple continents, ensuring you get both Western innovation practices and Eastern stability approaches.\n\"The exam seems too technical and complex?\"\nOur systematic approach breaks down the 80-question, 120-minute exam into manageable segments. With practice scenarios covering all four major topic areas (CAP fundamentals, BTP runtimes, S/4HANA extensibility, and CI/CD), you'll approach the exam with confidence.\nRecent candidates report 70%+ pass rates using our preparation methodology.\nThe Science Behind Accelerated Learning and Career Transformation\nCognitive science research shows that interleaving practical application with theoretical concepts improves retention by 400% compared to passive learning.\nThis course leverages spaced repetition, scenario-based learning, and hands-on implementation to create neural pathways that stick.\nThe multimodal approach — combining visual architectures, written code examples, and practical exercises — activates multiple learning systems simultaneously.\nWhen you complete this certification, you're not just memorizing facts; you're developing pattern recognition and problem-solving capabilities that transfer directly to real-world enterprise scenarios.\n10 Core Modules + Exclusive Content\nFoundation Phase (Modules 1-4):\n• Module 1: Certification strategy & exam mastery techniques\n• Module 2: CAP fundamentals & Core Data Services modeling\n• Module 3: Clean core extensibility & side-by-side patterns\n• Module 4: BTP runtimes comparison (Cloud Foundry vs Kyma)\nAdvanced Development Phase (Modules 5-7):\n• Module 5: Multitenancy & SaaS development with MTX Sidecar\n• Module 6: Event-driven architecture & SAP Event Mesh\n• Module 7: Fiori Elements & automatic UI generation\nExpert Implementation Phase (Modules 8-10):\n• Module 8: AI integration with Generative AI Hub & Vector Engine\n• Module 9: CI/CD automation & DevOps best practices\n• Module 10: Production troubleshooting & real-world case studies\nExclusive Content:\n• Eastern implementation perspectives (China, Japan case studies)\n• AI-native development patterns for future-ready applications\n• Career transformation interviews with certified professionals\nEach module includes:\n• Practical exercises with downloadable templates\n• Assessment quizzes for knowledge validation\n• Real-world scenarios based on production implementations\nYour Complete Success Package Includes:\nLearning Materials:\n• 360+ pages of comprehensive written content (faster learning than video)\n• 50+ practical exercises with downloadable templates\n• 10+ production-ready checklists and frameworks\nOngoing Support:\n• Lifetime access with free updates as the platform evolves\n• Private Discord community for networking and support\n• Email mentorship access for 30 days post-completion\nProfessional Benefits:\n• Personalized certificate of completion for LinkedIn and resume\n• Salary negotiation strategies from industry experts\n• Career transformation roadmap for SAP cloud professionals\nReady to Transform Your Career and Master the Future of Enterprise Development?\nThe enterprise software landscape is shifting toward cloud-native, AI-powered applications built on clean core principles.\nProfessionals who master these concepts today will be the architects of tomorrow's business systems.\nThis certification doesn't just validate your knowledge — it positions you at the epicenter of digital transformation where business agility meets technical excellence.\nEnroll now and take your first step toward joining the elite community of SAP Cloud Application Programming Model experts who are building the future of enterprise software.\nThis course contains the use of artificial intelligence",
      "target_audience": [
        "Backend developers seeking high-paying SAP cloud career opportunities",
        "SAP professionals transitioning to modern BTP and clean core development",
        "Enterprise architects building scalable cloud-native business applications",
        "DevOps engineers mastering automated deployment for enterprise SAP systems"
      ]
    },
    {
      "title": "Automation Anywhere Certified Master Prep",
      "url": "https://www.udemy.com/course/automation-anywhere-certified-master-prep/",
      "bio": "Complete preparation with theory, hands-on practice, and real exam simulation.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Get fully prepared to pass the Automation Anywhere Certified Master (Automation 360) exam with this comprehensive course that combines clear theoretical explanations, hands-on practical exercises, and over 40 certification-style questions designed to reinforce your knowledge.\nDesigned for both beginners and experienced professionals, this course equips you with the skills and confidence needed to master the world’s leading RPA platform and succeed in real job scenarios.\nWhat you’ll learn:\nCore concepts covered in the official certification exam\nHow to apply theory in real-world automation scenarios\nHands-on exercises that simulate real business use cases\n40+ multiple-choice questions for effective exam preparation\nTips and strategies to pass the certification on your first try\nThis course is perfect for anyone who wants to:\nGet certified as an Automation Anywhere Certified Master RPA Professional\nStrengthen their career in Robotic Process Automation (RPA)\nGain practical experience with bots, packages, loops, credentials, and dashboards\nLearn by doing, with exercises designed to reflect real production environments\nBuild confidence by practicing with realistic challenges and certification-level questions\nBy the end of this course, you’ll be fully prepared to tackle the certification exam with confidence, having practiced with materials aligned to the Automation Anywhere University curriculum and based on proven industry best practices.",
      "target_audience": [
        "RPA Developers",
        "Developers"
      ]
    },
    {
      "title": "AI-Powered Application Development with Java Spring AI(2025)",
      "url": "https://www.udemy.com/course/ai-powered-application-development-with-java-spring-ai/",
      "bio": "Java Basics, Spring Boot, Spring AI, AI Model Integration, Hugging Face Models, Gemini API, RESTful API Development",
      "objectives": [
        "Introduction to Java Spring AI Framework",
        "Understanding Spring AI Components and API Models",
        "Building AI-powered REST APIs with Spring Boot",
        "Building AI-Powered Automated Email Reply Assistant with Spring AI"
      ],
      "course_content": {
        "Lesson 1: Introduction to Java Spring AI Framework": [
          "Lesson 1: Introduction to Java Spring AI Framework",
          "Practice 1-1:Setting up the development environment for Spring AI",
          "Practice 1-2: Creating a Spring Boot Project and Setting Up Spring AI.",
          "Lesson 1: Introduction to Java Spring AI Framework"
        ],
        "Lesson 02 : Understanding Spring AI Components and API Models": [
          "Understanding Spring AI Components and API Models",
          "Practice 2-1: Spring AI & Hugging Face API Integration Testing",
          "Practice 2-2: AI-Powered Text Processing with REST API and User Interface",
          "Lesson 2: Understanding Spring AI Components and API Models"
        ],
        "Lesson 3 : Building AI-powered REST APIs with Spring Boot": [
          "Building AI-powered REST APIs with Spring Boot",
          "3-1: Develop a Gemini Chat Assist with Spring AI, Google Gemini API & React.js",
          "Lesson 3: Building AI-powered REST APIs with Spring Boot"
        ],
        "Lesson 4 : Building AI-Powered Automated Email Reply Assistant with Spring AI": [
          "Building AI-Powered Automated Email Reply Assistant with Spring AI",
          "4-1: Building an AI-Powered Automated Email Reply Assistant with Spring AI",
          "Lesson 4: Building an AI-Powered Automated Email Reply Assistant with Spring AI"
        ]
      },
      "requirements": [
        "Basic Java Programming",
        "Spring Boot Fundamentals",
        "API and Database Knowledge",
        "Experience with Development Tools & IDEs"
      ],
      "description": "This comprehensive course delves into the world of Java Spring AI, offering a structured approach to building AI-driven applications using the powerful Spring AI Framework. The course begins with a thorough introduction to Spring AI, explaining its architecture, key components, and how it seamlessly integrates AI capabilities into Java-based applications. Students will gain insights into different AI models and APIs supported by Spring AI, with a special focus on using Hugging Face models and the Gemini API. By understanding these AI-powered tools, learners will be able to incorporate natural language processing (NLP), machine learning, and generative AI capabilities into their applications, making them more intelligent and efficient.\nAs the course progresses, students will learn how to build AI-powered REST APIs using Spring Boot. This module emphasizes hands-on development, guiding learners through the process of creating, configuring, and deploying AI-enhanced APIs. The integration of Hugging Face models and the Gemini API into RESTful services enables applications to generate responses, analyze text, and automate decision-making. Through practical exercises and real-world scenarios, students will understand how to structure their APIs, manage data flow, and optimize AI performance within their applications. This segment ensures that learners are equipped with the necessary skills to develop scalable and production-ready AI-powered backend services.\nThe final part of the course focuses on applying AI capabilities to real-world use cases by building an AI-powered Automated Email Reply Assistant. This project-based module guides students in integrating AI-driven text processing and response generation into an automated email management system. By leveraging Spring AI, students will develop an intelligent assistant that understands email content, categorizes messages, and generates appropriate replies based on predefined AI models. This hands-on project solidifies the concepts covered in the course, providing students with practical experience in building AI solutions that enhance productivity and automation. By the end of the course, learners will have the knowledge and skills to design, develop, and deploy AI-powered applications using Spring AI, making them well-equipped for modern AI-driven software development.",
      "target_audience": [
        "Java Developers",
        "AI & ML Enthusiasts",
        "Software/ Application Developers",
        "Backend Engineers"
      ]
    },
    {
      "title": "[Hindi] PCB Designing with OrCad 17.2 [2021]",
      "url": "https://www.udemy.com/course/orcadhindipart1/",
      "bio": "Schematic in OrCAD Capture CIS, Printed Circuit Board, BOM,Footprints, 3D Model,Routing and Gerber files for Arduino UNO",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic Concepts Of Electronics",
        "Windows 10 (also works with Windows 7 & Windows 8) or Mac OS",
        "I recommend to use a mouse if you are using Laptop",
        "You will need a OrCAD & Cadence Allegro Software. If you are College/University student, you can ask for a student license (I recommend you use ORCAD free 30 Days trial)",
        "In addition to educational packages for colleges and universities, OrCAD supports the student community by providing a Lite / student version of OrCAD (Student Version: The OrCAD Lite / Student product versions are not licensed, but instead are limited in terms of design size and complexity)"
      ],
      "description": "Course No - 1 (Part -1) [Current Course]\nCurriculum:\n1. How to install OrCad 17.2\n2. Introduction to OrCad Capture CIS\n3. Learn to Design First schematic\n4. How to assign Component Footprints\n5. Annotation, DRC and Board File for PCB Editor\n\n\n\n\nCourse No - 1 (Part -2) [Next Part of Current Course]\nCurriculum:\n1. Introduction to PCB Editor\n2. How to Load Board File\n3. How to setup Environment for First PCB Design\n4. How to setup Constraint Manager (PCB Rules)\n5. How to Place Components on PCB Board\n6. Reference Designator Setup\n7. Routing Strategies\n8. how to start Routing\n9. Board Outline\n10. Gerber Files and NC Drill Files\n11. Introduction to Pad-Stack Editor\n12. How to create own footprints\n\n\nCourse No 2 - (Advanced) [ Design Arduino UNO Schematic & PCB (with 3D Model) ]\nProject 2: Learn to design Schematic & PCB for Arduino UNO (includes multiple schematic pages, Off page connectors, search parts from Digi-Key, Professional Bill of material, Smart PDF for Schematic, How to download custom footprints , How to create 3D Model etc )\nThis course is complete & detailed walk through of industry leading PCB  Design software.This course will help to develop a fundamentals in OrCAD, leading to better PCB design practices and skills.  After completion of this course you will have skill and useful resources to design your own custom PCB's.",
      "target_audience": [
        "This course is very useful for students related to Electrical, Electronics and Computer Engineering . Also, this tool is worth to learn if you already have a knowledge about Altium Designer, Pads, Eagle or KiCAD",
        "Engineering professionals who needs to learn and design their own printed circuit boards",
        "Hobbyist, Entrepreneur and tech savvy people those are curious about PCB's"
      ]
    },
    {
      "title": "Full Stack With Flutter - Node - Express - MongoDB",
      "url": "https://www.udemy.com/course/full-stack-with-flutter-node-express-mongodb/",
      "bio": "Learn To Build a Full Stack App",
      "objectives": [
        "Flutter",
        "Node JS",
        "Express JS",
        "MongoDB",
        "Clean Architecture",
        "MVC"
      ],
      "course_content": {
        "Express Basic": [
          "What is an Express?",
          "Setup Development Environment",
          "Setup Node and Express Project",
          "Create your first API Endpoint",
          "REST API Architecture",
          "Create a Tasks API",
          "Configure nodemon",
          "URL Parameters",
          "POST Request",
          "PATCH Request",
          "DELETE Request",
          "PUT vs PATCH",
          "HTTP Status",
          "Extract Route Handler To Controller",
          "Environment Variables"
        ],
        "MongoDB Basic": [
          "What is MongoDB?",
          "What is a Mongoose?",
          "Create MongoDB Database",
          "Connect To MongoDB",
          "Task Model",
          "Create New Document",
          "Document Id and Data Type",
          "Find All Documents",
          "Find By Id",
          "Find By Id and Update",
          "Find By Id and Delete"
        ],
        "Error Handling": [
          "Introduction To Error Handling",
          "Handling Unhandled Routes",
          "Error Handling Middleware",
          "Catch Exception Using Try Catch",
          "Custom Error Class",
          "Refactor Try Catch",
          "Production and Development Error",
          "Custom Error Message"
        ],
        "Debugging": [
          "Learn To Debug Node.js App"
        ],
        "Express Middleware Basic": [
          "Introduction To Middleware",
          "Custom Middleware",
          "Using 3rd Party Middleware"
        ],
        "Deployment Basic": [
          "Configure Express.js with Vercel",
          "Deploy To Vercel"
        ],
        "Pagination Pagination": [
          "Configure GitHub Project",
          "Pagination."
        ],
        "Sort": [
          "Sort By Created Date"
        ],
        "Build Flutter App": [
          "Project Setup and Dependencies",
          "Folder Structure",
          "App Architecture",
          "Unidirectional Data Flow",
          "Setup GoRouter",
          "Configure Riverpod",
          "Dio Network Service",
          "Get All Task API",
          "Get Single Task API",
          "Create Task API",
          "Update Task API",
          "Delete Task API",
          "Task Repository",
          "Task Model",
          "Date Formatter Use Case",
          "Get Tasks Use Case",
          "Get Task Use Case",
          "Create Task Use Case",
          "Update Task Use",
          "Delete Task Use Case",
          "Map Task Use Case",
          "Task State",
          "Task ViewModel",
          "Task List UI",
          "Create Task UI",
          "Create Task Listener",
          "Update Task UI",
          "Delete Task UI"
        ]
      },
      "requirements": [
        "Basic of JavaScript and Flutter"
      ],
      "description": "Embark on an exciting journey into the world of full stack development with our comprehensive course on Full Stack Development with Flutter, Node.js, Express, and MongoDB. This course is designed to equip you with the skills and knowledge needed to build robust, scalable, and dynamic web and mobile applications from scratch.\nThroughout this course, you will dive deep into the intricacies of Flutter, Google's UI toolkit for crafting natively compiled applications for mobile, web, and desktop from a single codebase. You will learn how to create stunning, responsive user interfaces and seamlessly integrate them with back-end services.\nThe back-end development portion of the course focuses on Node.js, a powerful JavaScript runtime built on Chrome's V8 engine. You will gain expertise in building fast, scalable server-side applications using Node.js and the Express framework. Express will streamline your development process, enabling you to create RESTful APIs and manage server-side logic with ease.\nData management and persistence are crucial components of any full stack application. This course introduces you to MongoDB, a flexible, document-oriented NoSQL database. You will learn how to design efficient database schemas, perform CRUD operations, and leverage MongoDB's powerful querying capabilities to manage your application data effectively.",
      "target_audience": [
        "Anyone who want to learn Full Stack Development"
      ]
    },
    {
      "title": "HackerRank Solutions using Algorithms, Data Structure in C#",
      "url": "https://www.udemy.com/course/hackerrank-solutions-using-algorithms-data-structure-in-c/",
      "bio": "Learn and understand to solve HackerRank problems using different algorithms and data structure to crack IT interviews",
      "objectives": [
        "Understand algorithms",
        "Understand data structures",
        "Learn to solve complex software problems using algorithms and data structures",
        "Crack interview to IT companies"
      ],
      "course_content": {
        "HackerRank Easy Problems": [
          "Diagonal Difference"
        ],
        "HackerRank Medium Problems": [
          "Climbing the Leaderboard",
          "Queens Attack II",
          "Extra Long Factorials",
          "Forming a Magic Square",
          "The Time in Words"
        ]
      },
      "requirements": [
        "Basic programming knowledge"
      ],
      "description": "Are you looking to improve your Software Development skills?\nAre you targeting to get into FAANG companies and improvise your Algorithms and Data Structures?\nDo you want to progress and grow professionally by learning about different algorithms and data structures?\n\n\nIf answer to any of the above question is yes, this course is for you.\nThis course contains\nVideo solution for several HackerRank problems using the most suitable algorithms and data structures\nExplanation to top asked interview questions with multiple approaches/solutions\nSolved solutions to top HackerRank problems with explanation about Time and Space complexity\nBeginners trying to gain expertise in solving problems using different algorithms like Brute Force, Naive approach, Dynamic programming, Greedy algorithm, Slow pointer Fast Pointer, etc\nThe problems discussed in this course are from HackerRank but there are similar problem on other platforms like HackerRank, etc. These problems have been asked in several Interviews from top tech companies like Amazon, Apple, Facebook, Google, Netflix, Tesla, Bloomberg, etc. The problems may not be exactly the same but at least the basic gist behind the problem is always the same. My intention is to help you understand the problem and the approach which will make it easier for you to solve similar problems easily.\n\n\nAs HackerRank continuously adds new and challenging problem to its sites, I will be regularly working on new video solutions and add them to this course. I'd recommend to stay tuned for new and challenging problem solutions.\n\n\nI hope you find this course useful. Please reach out to me if you've any questions/concerns/comments and I will get back to you soon.\n\n\nThank you once again.\nRegards,\nHarshit",
      "target_audience": [
        "Beginner looking to understand algorithms",
        "Developers",
        "engineers",
        "software developers",
        "software engineers",
        "software development engineers",
        "system engineers",
        "Developers trying to learn data structures",
        "Developers looking to get into FAANG",
        "Developers for IT interview preparation",
        "Developers interested in learning different algorithms"
      ]
    },
    {
      "title": "AI Agents Crash Course: Build with Python & OpenAI",
      "url": "https://www.udemy.com/course/ai-agents-crash-course/",
      "bio": "Learn to build agentic AI solutions using Python, OpenAI SDK, tools, memory, RAG, and guardrails - in just four hours!",
      "objectives": [
        "Build functional AI agents using Python and the OpenAI SDK",
        "Implement tool calling, memory, and streaming responses in your agents",
        "Use prompt engineering and context engineering to control agent behavior",
        "Integrate Retrieval-Augmented Generation (RAG) using embedding databases",
        "Enforce safety with guardrails and prompt adherence techniques",
        "Orchestrate multi-agent systems with task decomposition and hand-offs",
        "Deploy AI agents to the cloud with authentication and secure setup",
        "Trace and debug agent behavior using OpenAI’s built-in tools"
      ],
      "course_content": {
        "HOUR 1 - Build and Debug your first AI Agent": [
          "Introduction: What are AI Agents?",
          "Intro to the OpenAI Agents SDK",
          "READ ME! Course Resources & Course Discord",
          "Hands-on: Environment Setup",
          "Hands-on: Build and Debug Your First AI Agent",
          "Quiz: Agents and the OpenAI Agents SDK"
        ],
        "HOUR 1 - Tool Calling": [
          "Introduction to Agentic AI Tool Usage",
          "Agentic Autonomy with Tools, and Context Engineering / Context Management",
          "Hands-on: Implement Tool Calling",
          "Quiz: Tool Usage in AI Agents"
        ],
        "HOUR 2 - Retrieval-Augmented Generation (RAG)": [
          "Intro to Retrieval-Augmented Generation (RAG)",
          "Embedding Vectors and Vector Stores with RAG",
          "Hands-on: RAG Setup - Behind the Scenes",
          "Hands-on: Calorie Retrieval Using RAG",
          "Assignment Briefing: Create your own RAG",
          "Create your own RAG"
        ],
        "HOUR 2 - Model Context Protocol (MCP)": [
          "Model Context Protocol (MCP) Introduction and Common Architectures",
          "Hands-on: Tool Calling with the ExaSearch MCP",
          "Assignment Briefing: Use OpenAI's built-in Web Search Tool",
          "Use OpenAI's built-in Web Search Tool"
        ],
        "HOUR 3 - Multi-Agent Systems": [
          "Multi-Agent System Design Patterns",
          "AI Agent Handoffs and Agents-As-Tools",
          "Hands-on: Implement a Breakfast Advisor Multi-Agent AI"
        ],
        "HOUR 3 - Agents in Production": [
          "Short-Term and Long-Term Memory in AI Agents",
          "Hands-on: Agentic Memory with OpenAI Sessions",
          "Securing Prompt Vulnerabilities with Prompt Engineering",
          "Input and Output Guardrail Agents",
          "Hands-on: Prompt Engineering and Guardrails",
          "Quiz: Long vs Short-term memory, Guardrails vs Prompt adherence by Prompt"
        ],
        "HOUR 4 - Implement a Production-Grade Chatbot": [
          "Other Deployment Considerations for Agentic AI Systems",
          "Hands-on: Create a Chatbot with Chainlit",
          "Hands-on: Add Agentic Capabilities and RAG to the Chatbot",
          "Hands-on: Manage Conversational Memory using OpenAI Sessions",
          "Hands-on: Add Authentication",
          "Customize The Chatbot"
        ],
        "HOUR 4 - Deploy to Production & Capstone Project": [
          "Hands-on: Deploying the Chatbot to Production in the Cloud",
          "Capstone Project Briefing",
          "Capstone Project - Production-Grade Multi Agent System",
          "Wrapping up - Congratulations!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic experience with Python programming",
        "An OpenAI account with API access",
        "A GitHub account to use GitHub Codespaces for development",
        "Familiarity with basic coding tools (e.g., running scripts, editing code)"
      ],
      "description": "Building intelligent AI agents can feel overwhelming. Between OpenAI’s complex SDK, retrieval-augmented generation (RAG), tool-calling, memory, and prompt engineering, it’s hard to know where to start.\nThis crash course is your shortcut: in just a few hours, you'll go from zero to deploying your own functional, real-world agentic AI system.\nYou’ll build a smart nutrition assistant that:\nUses OpenAI’s Agents SDK to understand and respond to prompts\nCalls external tools and APIs\nLeverages memory and RAG for contextual intelligence\nIncludes guardrails to behave safely and reliably\nCan be deployed to the cloud with authentication\nWhether you're a developer, data scientist, or AI-curious engineer, this hands-on course gives you a complete end-to-end agentic AI foundation -- without getting buried in theory or outdated code.\nWhat You’ll Learn\nHow to build AI agents with Python + OpenAI’s Agents SDK\nTool calling, streaming, and tracing techniques\nBest practices in prompt engineering and context design\nHow to integrate memory and RAG for deeper contextual reasoning\nDeploying your agent securely with authentication and guardrails\nHow to build multi-agent systems with task delegation and parallel execution\nWho This Course is For\nEngineers and developers with basic Python experience\nAI/ML professionals looking to quickly learn agent orchestration\nProduct builders and technical leads exploring agentic workflows\nLearners who want to build, not just read about agents\nAbout the Instructors\nYour instructors combine deep industry experience with a passion for clear, actionable teaching.\nFrank Kane spent 9 years at Amazon and IMDb, where he built large-scale recommender systems and led engineering teams. He holds 17 patents in machine learning and distributed systems and has taught over 1 million students through his company, Sundog Education.\nZoltan C. Toth brings over two decades of experience in AI infrastructure and data systems. As a former principal instructor and Solutions Architect Databricks and Data Engineering lead at startups, he’s helped companies around the world scale their analytics and AI platforms. Zoltan also teaches AI and data engineering at the Central European University.\nTogether, Frank and Zoltan guide you step-by-step through building agents the right way: with real code, real tools, and production-ready techniques.\nReady to build your first AI agent, fast?\n\nEnroll now and start building today.",
      "target_audience": [
        "Learners who prefer a project-based, fast-paced crash course over lengthy theory",
        "Python developers who want to quickly get hands-on with building AI agents",
        "Software engineers and technical leads looking to integrate AI agents into real-world products",
        "Entrepreneurs, indie hackers, and product builders interested in agentic AI workflows",
        "Anyone curious about how to use the OpenAI SDK to build smart, autonomous applications"
      ]
    },
    {
      "title": "Master Python: From Beginner to Advanced Projects",
      "url": "https://www.udemy.com/course/master-python-from-beginner-to-advanced-projects/",
      "bio": "Learn Python programming, build real-world projects, master OOP, SQL, and create professional documentation.",
      "objectives": [
        "Set up and use PyCharm IDE effectively to create, debug, and run Python projects.",
        "Understand Python’s basic syntax, variables, loops, conditionals, and error handling.",
        "Master essential Python data structures such as lists, tuples, dictionaries, and sets.",
        "Write clean, maintainable code using PEP 8 guidelines and modular programming principles.",
        "Use Google-style docstrings and Sphinx to create professional project documentation.",
        "Build real-world projects like a fitness tracker and a dice game, showcasing modular design and reusability.",
        "Understand object-oriented programming concepts, including inheritance, polymorphism, and encapsulation.",
        "Work with relational databases by designing schemas, performing CRUD operations, and writing advanced SQL queries.",
        "Use SQL transactions to ensure data consistency and integrity in database operations.",
        "Visualize and design software systems using UML diagrams such as class, sequence, and activity diagrams.",
        "Generate automated documentation for projects using Sphinx and manage its configuration.",
        "Gain confidence in debugging code with breakpoints, step-throughs, and error identification techniques.",
        "Handle user input safely and implement robust input validation in Python applications.",
        "Learn advanced Python concepts such as magic methods, operator overloading, and decorators.",
        "Develop skills to structure Python projects with modules, packages, and good design principles."
      ],
      "course_content": {
        "Getting Started with PyCharm IDE": [
          "Installing PyCharm on Windows",
          "Setting Up Your First Project in PyCharm",
          "Creating and Running Your First Python File",
          "Mastering Debug Mode: Breakpoints, Step Over, and Step Into"
        ],
        "Essential Programming Concepts in Python": [
          "Basic Python Syntax: Your First Steps in Programming",
          "Python Numbers and Math Operators: A Beginner’s Guide",
          "Working with Strings: Variables, Operators, and Practical Use",
          "How to Declare and Use Functions in Python",
          "Exploring Python’s Built-In Math Functions",
          "Essential Python String Functions for Everyday Use",
          "Understanding Boolean Variables and Boolean Logic in Python",
          "Mastering If, Else, and Elif: Making Decisions in Python Code",
          "How to Compare Strings with Python’s Operators",
          "Python Loops 101: For, While, Range, Break, and Continue Explained",
          "How to Import and Use Modules and Libraries in Python",
          "Understanding Lexical Scope (Static Scope) in Python",
          "Introduction to Python Data Structures: Lists, Tuples, Dictionaries, and Sets",
          "Type Conversion in Python: Implicit vs Explicit",
          "Common Python Errors and How to Handle Them with Try-Except",
          "Getting User Input in Python: A Complete Guide"
        ],
        "Code Quality and Best Practices in Python": [
          "Writing Clean Code: Adhering to Python's Official Style (PEP 8)",
          "Modular Design in Python: Using Modules and Packages Effectively",
          "Mastering Documentation: Writing Docstrings and Comments",
          "Best Practices for Python Comments and Documentation",
          "Getting Started with Google Style Docstrings in Python",
          "Mastering Google Style Docstrings for Python",
          "Automatically Generating Documentation with Pydoc and Sphinx",
          "Configuring Sphinx: Editing the conf.py File for Your Project",
          "Automatically Generate Project Documentation Using Sphinx"
        ],
        "Project #1: Simple Fitness Tracker": [
          "Creating the Fitness Tracker Project in PyCharm",
          "Creating the Main Files and Functions of the Project",
          "Implementing the Main Loop of the Fitness Tracker Project",
          "Finishing the Main File of the Project",
          "Implementing the Input Validation Module",
          "Finishing the Input Validation Module",
          "Implementing the Exercise Module",
          "Finishing the Exercise Module Implementation",
          "Testing the Fitness Tracker Program",
          "Documenting the Project with Google-Style Docstrings and Installing Sphinx",
          "Generating Documentation Automatically Using Sphinx"
        ],
        "Project #2: Simple Dice Game": [
          "Setting Up the Dice Game Project in PyCharm",
          "Creating the Game State Dictionary in the Dice Game Module",
          "Implementing the Display Module's display_scores Function",
          "Finishing the Implementation of the Display Module",
          "Creating the Game Logic Module’s get_player_choice Function",
          "Building the Game Logic Module’s player_holds Function",
          "Writing the Dice Module's roll_dice and roll_and_display_dice Functions",
          "Implementing the Dice Module's is_double Function",
          "Creating the Game Logic Module’s play_turn Function",
          "Adding the execute_turn Function in the Dice Game Module",
          "Finishing the Implementation of the Dice Game Module",
          "Implementing the Main Module",
          "Testing the Dice Game Program",
          "Documenting the Project and Installing Sphinx",
          "Generating Documentation Automatically Using Sphinx"
        ],
        "Project #3: Scientific Calculator": [
          "Setting Up the Scientific Calculator Project in PyCharm",
          "Implementing the input_validation Module",
          "Implementing the basic_operations Module",
          "Implementing the Scientific Operations Module's square_root Function",
          "Finishing Implementation of the Scientific Operations Module",
          "Implementing the Menu Module's ask_for_choice Function",
          "Implementing the Menu Module's handle_basic_operations Function",
          "Finishing the Implementation of the Menu Module",
          "Implementing the Main Module",
          "Testing the Scientific Calculator Program",
          "Documenting the Project and Installing Sphinx",
          "Generating Documentation Automatically Using Sphinx"
        ],
        "File I/O": [
          "Introduction to File I/O in Python",
          "Different Methods for Reading Files in Python",
          "Methods for Writing to Files in Python"
        ],
        "Object-Oriented Programming Basics": [
          "Introduction to Object-Oriented Programming (OOP)",
          "Understanding Classes, Objects, Attributes, and Methods",
          "Mastering Inheritance in Python",
          "Encapsulation: Hiding Data for Better Code Organization",
          "Polymorphism: Flexible Code with Dynamic Behavior",
          "Abstract Classes, Interfaces, and Composition in Python",
          "Magic Methods, Operator Overloading, and Decorators"
        ],
        "UML Basics": [
          "Introduction to UML Diagrams",
          "Types of UML Diagrams and Their Use Cases",
          "Understanding UML Class Diagrams",
          "Creating UML Use Case Diagrams",
          "Exploring UML Sequence Diagrams",
          "Modeling Workflows with UML Activity Diagrams",
          "UML State Diagrams: Representing Object States"
        ],
        "Relational Databases": [
          "Introduction to Relational Databases",
          "Data Types in Relational Databases",
          "Understanding Table Schema",
          "SQL Syntax Basics: Writing Your First Queries",
          "CRUD Basics: The Four Core Operations",
          "Creating New Records in SQL",
          "Reading Existing Records in SQL",
          "Updating Existing Records in SQL",
          "Deleting Existing Records in SQL",
          "Advanced SELECT: JOINs, Aggregate Functions, GROUP BY, and HAVING",
          "SQL Transactions: Ensuring Data Integrity"
        ]
      },
      "requirements": [
        "No prior programming experience is needed—this course is designed for absolute beginners.",
        "A computer with Windows, macOS, or Linux operating system.",
        "An internet connection to download tools and follow along with the course.",
        "A willingness to learn and explore Python programming step by step."
      ],
      "description": "Welcome to \"Master Python: From Beginner to Advanced Projects\"!\nThis course is designed to take you from an absolute beginner to a proficient Python programmer. Whether you're just starting out in programming or looking to enhance your Python skills, this course will guide you through all the essential concepts and real-world applications.\nWe start from the basics, covering Python syntax, data types, and foundational programming concepts, so even if you’ve never written a line of code before, you’ll feel comfortable right from the start. You'll learn how to work with variables, operators, and functions, as well as how to write clean, readable code. The course will also introduce you to Python’s built-in functions and modules, enabling you to handle a wide variety of tasks with ease.\nAs you progress, we dive deeper into more advanced topics such as Object-Oriented Programming (OOP), which will teach you how to organize and structure your code effectively. You’ll also learn to interact with databases using SQL, create UML diagrams for software design, and write professional-grade documentation using Google-style docstrings.\nIn addition to the core programming concepts, you’ll work on hands-on projects that will give you real-world experience. You will create a Fitness Tracker and a Dice Game, both of which will help you solidify your understanding by building fully functional applications. These projects will cover everything from setting up your development environment to writing the code and testing your program.\nThis course also emphasizes best practices, such as adhering to the PEP 8 guidelines for writing clean, maintainable code, and learning how to document your work effectively. You'll also explore automated documentation generation using tools like Sphinx to create professional-level project documentation.\nKey features of this course include:\nBeginner-friendly content that assumes no prior programming experience.\nHands-on projects that cover both simple and advanced Python applications.\nClear explanations of fundamental programming concepts and advanced techniques.\nBest practices and industry standards to make sure your code is clean, efficient, and maintainable.\nReal-world applications like a fitness tracker and a dice game.\nIn-depth coverage of Object-Oriented Programming (OOP) and relational databases with SQL.\nBy the end of this course, you will be able to confidently tackle Python programming tasks, build functional applications, and work with databases and OOP. You’ll also know how to write clean code, document your projects, and implement key programming concepts in your day-to-day work.",
      "target_audience": [
        "Absolute Beginners: Individuals with no prior programming experience who want to start learning Python.",
        "Aspiring Developers: Students or professionals looking to build a strong foundation in Python for software development.",
        "Career Changers: People transitioning into tech who want to learn a versatile and in-demand programming language.",
        "Hobbyists: Anyone interested in learning Python for personal projects, automation, or fun.",
        "Students: Those studying programming or computer science and looking for additional resources to improve their Python skills."
      ]
    },
    {
      "title": "Coding Fundamentals for Non Programmers",
      "url": "https://www.udemy.com/course/coding-fundamentals-for-non-programmers/",
      "bio": "A Quick and Easy Guide to Master Coding Concepts For Non Coders",
      "objectives": [
        "Understanding of programming basics and logical thinking",
        "Ability to identify components of web and software development",
        "Familiarity with tools like code editors and IDEs",
        "Awareness of various tech career paths like frontend or backend development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction to Computers": [
          "What is a Computer?",
          "What is a program and what is programming",
          "What is Software",
          "What are Operating Systems"
        ],
        "Introduction to Internet": [
          "What is Internet",
          "How does the Internet work under the hood",
          "What is a browser",
          "How does a website work"
        ],
        "Introduction to programming": [
          "What are algorithms",
          "Understanding variables and data",
          "What are operators",
          "Introduction to logical operators",
          "Files and directories",
          "The concept of syntax",
          "IDE and code editors",
          "What is a programming language"
        ],
        "Other Programming Concepts": [
          "Web development stacks - Front end , back end and databases",
          "What is a framework",
          "What is a library",
          "What is an API"
        ],
        "Content Management Systems": [
          "What are content management systems"
        ],
        "How to Choose Your Career in Technology": [
          "Hot technologies for a great career",
          "How to become a front end developer",
          "How to become a back end developer",
          "How to become a Devops and Cloud professional",
          "How to build a career in game development",
          "How to build a career in Cyber security",
          "How to build a career in AI and Data Science",
          "How to become a quality control and testing engineer"
        ],
        "Course summary": [
          "Summary"
        ]
      },
      "requirements": [
        "This course is for absolute beginners with no prior knowledge of computers or programming."
      ],
      "description": "This course is created for absolute beginners including those who have never used a computer for anything beyond basic tasks. If you are from a non technical background or simply curious about how technology works this course will help you understand the world of computers programming and modern technology from the ground up.\nWe start with the very basics such as what a computer is how it functions and what software and operating systems are. You will learn how the internet works what happens behind the scenes when you open a website and how web browsers display information. All of these concepts are explained in a simple and beginner friendly way with no prior knowledge assumed.\nAs you move forward you will be introduced to the idea of programming what a program is and how it works. We will explain basic concepts like variables data operators syntax files and logical operations. You will also get familiar with tools like code editors and integrated development environments which are used to write and manage code.\nThe course also introduces you to how modern websites and applications are built. You will learn about front end and back end development databases frameworks libraries and application programming interfaces. We explain how all these pieces come together to create the websites and apps you use every day.\nIn addition to the basics we provide a simple introduction to growing areas in technology such as artificial intelligence cybersecurity cloud computing game development and quality testing. You will also get an overview of how to start a career in tech including what it takes to become a front end or back end developer.\nThis course does not require any previous experience. By the end you will have a clear understanding of how computers and coding work and you will be ready to take your first step into the world of technology with confidence.",
      "target_audience": [
        "Non programmers and non coders will find this course a great resource to learn about the concepts behind computers, programming and software"
      ]
    },
    {
      "title": "System Design Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/system-design-interview-questions/",
      "bio": "System Design Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "System Design Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nAre you preparing for a System Design interview and looking to sharpen your skills? Do you want to ensure you are ready to tackle the most challenging questions that top tech companies ask? Look no further! This course is meticulously designed to provide you with comprehensive practice tests that cover every crucial aspect of System Design interviews. Join now and gain the confidence to ace your interviews with top-tier companies!\nIn this course, we have created a vast array of interview questions and practice tests meticulously categorized into six critical sections of System Design. Each section is further divided into six subtopics, ensuring thorough coverage of the essential concepts and practical scenarios you need to master. Let's dive into what each section entails:\n\n\n1. Fundamentals of System Design\nUnderstanding the fundamentals is crucial for designing robust systems. This section covers the core principles you need to grasp:\nScalability: Learn how to design systems that handle increased loads efficiently.\nAvailability: Understand the importance of uptime and how to achieve high availability.\nReliability: Discover strategies to ensure systems perform consistently.\nPerformance: Explore techniques to optimize system performance.\nMaintainability: Study how to design systems that are easy to maintain and update.\nFault Tolerance: Learn how to design systems that can recover from failures gracefully.\nPractice Tests in this section will challenge your understanding of these key concepts, ensuring you can apply them effectively in real-world scenarios.\n\n\n2. Designing Distributed Systems\nDistributed systems are at the heart of modern applications. This section delves into the complexities of designing such systems:\nConsistency Models: Explore different consistency models and their trade-offs.\nReplication: Learn about data replication strategies and their implications.\nPartitioning/Sharding: Understand how to partition data to improve scalability.\nLoad Balancing: Discover techniques to distribute workloads evenly across servers.\nCaching: Study how to implement caching to reduce latency and improve performance.\nMessage Brokers: Learn the role of message brokers in decoupling system components.\nOur practice tests will simulate real interview scenarios, helping you master the art of designing distributed systems.\n\n\n3. Database Design\nDatabases are the backbone of any application. This section covers everything you need to know about designing efficient databases:\nRelational Database Management Systems (RDBMS): Understand the fundamentals of relational databases.\nNoSQL Databases: Learn about the different types of NoSQL databases and their use cases.\nACID vs. BASE properties: Compare the trade-offs between ACID and BASE properties.\nIndexing Strategies: Discover how to optimize query performance with indexing.\nData Partitioning: Study how to partition data to improve performance and scalability.\nDatabase Normalization/Denormalization: Learn the principles of database normalization and when to denormalize.\nOur practice tests will ensure you have a solid grasp of database design principles, preparing you for any interview challenge.\n\n\n4. Architectural Patterns\nChoosing the right architectural pattern is essential for building scalable and maintainable systems. This section covers the most common architectural patterns:\nMonolithic Architecture: Understand the benefits and drawbacks of monolithic architecture.\nMicroservices Architecture: Learn how to design and manage microservices.\nEvent-Driven Architecture: Discover how to build systems that respond to events in real-time.\nService-Oriented Architecture: Study the principles of SOA and its implementation.\nLayered Architecture: Explore the benefits of a layered approach to system design.\nCQRS (Command Query Responsibility Segregation): Understand the CQRS pattern and its use cases.\nPractice tests in this section will test your ability to choose and implement the right architectural patterns for various scenarios.\n\n\n5. System Components and Technologies\nA deep understanding of various system components and technologies is essential for effective system design. This section covers the key components:\nWeb Servers: Learn about the role and functionality of web servers.\nApplication Servers: Understand how application servers handle business logic.\nDatabases: Explore the different types of databases and their use cases.\nCaching Systems: Discover how caching systems improve performance.\nContent Delivery Networks (CDNs): Study how CDNs deliver content efficiently.\nContainerization Technologies (e.g., Docker): Learn about containerization and its benefits.\nOur practice tests will challenge your knowledge of these components, ensuring you can design well-rounded systems.\n\n\n6. Designing for Specific Use Cases\nReal-world applications have unique requirements. This section focuses on designing systems for specific use cases:\nSocial Media Platform: Learn how to design scalable and engaging social media platforms.\nE-commerce Platform: Understand the complexities of designing a robust e-commerce system.\nReal-time Chat Application: Discover the challenges and solutions for real-time communication systems.\nRide-Sharing Service: Study the architecture of ride-sharing platforms and their scalability challenges.\nVideo Streaming Service: Learn how to design systems that deliver high-quality video streaming.\nOnline Gaming Platform: Explore the unique requirements of online gaming systems.\nPractice tests in this section will simulate real-world scenarios, preparing you to design effective solutions for diverse use cases.\nEnroll Now and Start Your Journey to Becoming a System Design Expert!\nDon't miss out on this opportunity to enhance your System Design skills and ace your interviews. Enroll now and gain access to a wealth of interview questions, practice tests, and detailed explanations that will help you succeed.\nIn this comprehensive course, you'll find everything you need to master System Design interviews. Our extensive range of interview questions and practice tests covers all the critical topics, ensuring you have the knowledge and confidence to excel. Join today and start your journey to becoming a System Design expert!",
      "target_audience": [
        "Aspiring Software Engineers: Individuals looking to enter the field of software engineering and want to get a head start on system design concepts.",
        "Experienced Developers: Seasoned developers aiming to enhance their knowledge in designing scalable, reliable, and efficient systems.",
        "Technical Leads and Managers: Those in leadership roles seeking to better understand the design processes to guide their teams effectively.",
        "Computer Science Students: Students pursuing computer science or related fields who wish to supplement their academic knowledge with practical system design skills.",
        "Product Managers: Product managers interested in understanding the technical aspects of system design to improve collaboration with development teams."
      ]
    },
    {
      "title": "Dealing with Algorithms",
      "url": "https://www.udemy.com/course/dealing-with-algorithms/",
      "bio": "A guide on Algorithms",
      "objectives": [
        "A milestone for mastering Data Structures and Algorithms.",
        "Helps to build confidence in facing technical interview questions in product companies.",
        "Helps to understand the designing of Algorithm by familiarising various design techniques - foundation skill for any software engineer.",
        "Become a confident programmer - Understanding and applying different data structures and algorithm while designing any product",
        "To build a successful career in software industry - Regular practise with DSA will help to gain momentum in overall software engineer journey.",
        "To be a good team player when starting you career",
        "And much, much more."
      ],
      "course_content": {},
      "requirements": [
        "Knowledge in any of the programming language.",
        "Knowing Java is a plus."
      ],
      "description": "This course covers the training on algorithms. Most importantly it covers mainly the various design techniques that are available to solve different problems. Some most popular algorithms based these techniques is being covered in detail too.\nThe training is released as two courses . The first part \"Dealing data structures\" covers only the data structures. This is second part and it covers about Algorithms with sub topics such as Algorithmic design principles, Space Complexity, Time complexity , asymptotic notations etc.\nAs the two topics - Data structures and Algorithms are released as two, it enables students to structure and plan their learning journey first by mastering the data structures and then switching on to algorithms.\nConsciously put effort on reducing the course length so that students don't feel like it takes long hours to finish the course. Carefully chosen the topics that enable students to enhance their career and build confidence to become a great programmer.\nFew words to stress on:\nAfter finishing each of the topic in the course you must practically spend time and implement programs related to that data structure. The implementation code is being uploaded as part of resource section. You can refer that as well. This is the only way to get thorough with the topic. All the best!",
      "target_audience": [
        "Data structures and Algorithm is the base for Software engineering. Hence anyone who has aspiration to become a great programmer can watch this course"
      ]
    },
    {
      "title": "Build 3 Chrome Extensions in Under 2 Hours",
      "url": "https://www.udemy.com/course/build-3-chrome-extensions-in-under-2-hours/",
      "bio": "A code along course for developers where you build 3 Chrome Extensions",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Understanding of HTML and Javascript fundamentals. A text editor and basic terminal commands."
      ],
      "description": "In this course we will build out 3 barebones chrome extensions 1) a URL blocker, 2) a browser tab page override, 3) a bookmarks collector.\nThis course works by me copy and pasting code examples I have already written and walking you through how they operate and why they work. From there you can use these examples to breakdown the code even further or use it as a building block to add more functionality\nAfter completing this course you will have gained experience using Chrome API's and the knowledge of how to structure scripts to get you started with building your own Chrome Extensions. This course assumes a junior developer level understanding of html and javascript as well as the subsequent tools to use for building websites. I treat these crash courses as though I were a mid level developer walking a junior through the steps it takes to build chrome apps. This course is for you if you want working code examples from which you can build your own chrome extensions but not for you if you want a detailed explanation of how the JavaScript we write works.\nIf you enroll in this course and decide it’s not for you later on, you have 30 days to get a full refund.",
      "target_audience": [
        "Developers interested in building chrome extensions!"
      ]
    },
    {
      "title": "AWS Lambda / Serverless Framework 速習ハンズオン",
      "url": "https://www.udemy.com/course/aws-lambda-serverless-framework/",
      "bio": "実務で急に関わることにもなりやすい「AWS Lambda」や「サーバレス」の基本から、「Serverless Framework」を使った実践的な開発まで、手を動かしてスピーディに学びましょう！",
      "objectives": [
        "AWS Lambda の概要",
        "Serverless Framework の基本的な使い方",
        "Webhook を使った Slack 通知",
        "IAM Role による AWS のリソース間のアクセス",
        "AWS でのサーバレスな Web アプリケーションの典型構成",
        "Infrastructure as Code と CloudFormation の概要"
      ],
      "course_content": {
        "はじめに": [
          "このコースについて",
          "受講ガイド",
          "このコースで発生する AWS の料金について"
        ],
        "AWS Lambda の概要": [
          "AWS とは",
          "AWS のコンピューティングサービスの概要",
          "AWS Lambda とは",
          "（追記）使用する Node.js のバージョンについて",
          "Lambda の Hello World"
        ],
        "Serverless Framework での開発準備": [
          "なぜ Serverless Framework を使うのか",
          "（追記）AWS Cloud9 新規利用終了のための代替環境について",
          "AWS Cloud9 の概要と、環境の作成",
          "（追記）インストールする Node.js のバージョンについて",
          "Node.js のインストール",
          "（追記）インストールする Serverless Framework のバージョンについて",
          "Serverless Framework のインストール",
          "Serverless Framework のテンプレートの準備",
          "（追記）npx serverless deploy のエラーについて",
          "（追記）使用するパッケージのバージョンについて",
          "テンプレートの調整とデプロイ",
          "自作のコードで Hello World",
          "Serverless Framework の片付けについて"
        ],
        "実践：AWS の使用料を日時で Slack 通知する関数の実装": [
          "このセクションで実装する関数について",
          "定期実行される関数の作成",
          "Slack の Webhook URL の取得",
          "Slack 通知機能の実装",
          "AWS CLI で請求情報を取得",
          "Cost Explorer からのデータ取得を実装",
          "デプロイして動作確認",
          "AWS IAM の概要",
          "IAM Role の設定",
          "このセクションのまとめ",
          "（補足）AWS Lambda の仕組み"
        ],
        "実践：シンプルな Web アプリケーションの実装": [
          "AWS でのサーバレスな Web アプリケーションの典型構成",
          "Serverless API Gateway Throttling の導入",
          "API Gateway + Lambda の Hello World",
          "マネジメントコンソールでの DynamoDB のテーブル作成",
          "Infrastructure as Code と CloudFormation の概要",
          "Serverless Framework での DynamoDB のテーブル作成",
          "タスクを登録する API の実装",
          "タスク一覧を取得する API の実装",
          "（AWSのアップデート対応）S3 バケットの構築について",
          "S3 バケットの構築",
          "Serverless S3 Sync の導入",
          "HTML の実装",
          "フロントエンドの JavaScript の Hello World",
          "ブラウザでタスクを登録する処理の実装",
          "ブラウザでタスク一覧を取得する処理の実装",
          "CORS の設定",
          "このセクションのまとめ"
        ],
        "おわりに": [
          "さらにステップアップするには",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "何らかのプログラミング言語で、Web アプリケーションを実装したことがあること",
        "JavaScript をブラウザで実行したことがあり、「変数・if・for・関数」程度のコードが書けること（できれば async/await が使える程度の知識があることが望ましいです）",
        "絶対パス・相対パス程度のコンピュータの基礎知識があること",
        "ターミナルで ls、cd などの基本的なコマンドを実行したことがあること",
        "学習に使える AWS アカウント・Slack のワークスペースを持っていること",
        "AWS には、多少ふれたことがあるとより理解しやすくなりますが、前提知識がなくても大丈夫です"
      ],
      "description": "AWS Lambda は、「サーバレス」なアプリケーション実行環境として最も有名と言えるサービスであり、近年では多くのプロジェクトで採用されるようになっています。\nそんな AWS Lambda で実践的な開発をするためには、「Serverless Framework」などのフレームワークを使うことも多く、実務でその知識が必要になることも多々あります。\n\n\nしかし、プログラミングの学習課程や研修などで、AWS Lambda や Serverless Framework まで学ぶケースは多くはありません。\nそして、特に AWS の知識・経験が少ない方からは、\nそもそも Lambda は普通のアプリケーション実行環境と何が違うのか分からない\n「サーバレス」という単語が何を指しているのかよく分からない\nserverless.yml という設定ファイルが何なのか分からない\nといった疑問を耳にすることが多いです。\n\n\nそこでこのコースでは、上記のような疑問を持っている方を主な対象者として、AWS Lambda について、サービスの概要や他の環境との違いといった基本に始まり、Serverless Framework による実践的な開発まで速習します。\n\n\n学習の過程では、\nSystems Manager Parameter Store\nIAM\nAPI Gateway\nDynamoDB\nCloudFormation\nS3\nAWS SDK\nといった、Lambda と組み合わせてよく使う AWS のサービスについても学びます。\n\n\nキーワード\nAWS Lambda\nServerless Framework\n\n\n更新履歴\n2023/04/23「（AWSのアップデート対応）S3 バケットの構築について」を追加\n2023/06/20「（追記）npx serverless deploy のエラーについて」を追加\n2024/08/05「（追記）AWS Cloud9 新規利用終了のための代替環境について」を追加\n2025/02/28\n「（追記）使用する Node.js のバージョンについて」を追加\n「（追記）インストールする Node.js のバージョンについて」を追加\n「（追記）インストールする Serverless Framework のバージョンについて」を追加\n「（追記）使用するパッケージのバージョンについて」を追加",
      "target_audience": [
        "AWS Lambda の基本を、コードを書きながら学びたいという方",
        "「サーバレス」という単語の意味を、手を動かしてしっかり理解したい方",
        "仕事で AWS Lambda や Serverless Framework を使うことになり、これらの基本を学びたいという方",
        "AWS Lambda をなんとなくさわったことがあるが、改めて学び直したり、もっと実践的な使い方を学びたいという方"
      ]
    },
    {
      "title": "Object Oriented Programming and Design Bootcamp (OOP)",
      "url": "https://www.udemy.com/course/object-oriented-programming-bootcamp/",
      "bio": "Master Object Oriented Programming (OOP) and Object Oriented Design (OOD) – From Basics to Advanced",
      "objectives": [
        "Students will be able to learn Object Oriented Concepts",
        "Students will be able to identify objects and classify them",
        "Students will be able to design a class diagram of any small scale project",
        "Students will be able to code the small scale project in JAVA programming using object oriented paradigm"
      ],
      "course_content": {
        "Introduction": [
          "Why OOP",
          "Benefits of OOP"
        ],
        "Object and Classes": [
          "Objects",
          "Object Identification Exercise",
          "Classes",
          "Quiz 01"
        ],
        "Class Diagram": [
          "Class Diagram",
          "Class Diagram Example",
          "Quiz 02"
        ],
        "Introduction of Java": [
          "Environment Setup",
          "Variables in Java",
          "If Statement",
          "Switch Statements",
          "Loops",
          "Functions",
          "Arrays and Arraylist",
          "Quiz 03"
        ],
        "Class Implementation in JAVA": [
          "Classes",
          "Create Object in Java",
          "Access Modifiers",
          "Constructors",
          "This Keyword",
          "Static Keyword",
          "Quiz 04"
        ],
        "Re-usability in Object Oriented Programming": [
          "Inheritance",
          "Protected Keyword, Method Overriding and super keyword",
          "Quiz 05"
        ],
        "Communicating classes in Object Oriented Programming": [
          "Association",
          "Dependancy",
          "Composition",
          "Aggregation",
          "Quiz 06"
        ],
        "Polymorphism in Object Oriented Programming": [
          "Quiz 07"
        ]
      },
      "requirements": [
        "Student must understand English",
        "Students must have basic programming concepts",
        "Students must have laptop"
      ],
      "description": "Welcome to the comprehensive Udemy course on Object Oriented Programming. This course is designed to provide you with a solid foundation in object oriented Programming principles and guide you through the practical aspects of implementing them using Java. Whether you're a beginner looking to understand the basics or an experienced programmer aiming to deepen your understanding of object oriented Programming, this course has something for everyone.\nIntroduction to OOP:\nWe start the course with an overview of Object Oriented Programming, exploring its fundamental concepts and discussing how it differs from other programming paradigms. We delve into the basic principles that form the backbone of object oriented Programming, setting the stage for a deep dive into its core components.\nObjects and Classes:\nUnderstanding what objects and classes are is crucial in object oriented Programming. We break down these concepts, exploring how to identify objects and their behaviors. Through practical examples, you'll learn how to create classes and instantiate objects, laying the groundwork for hands-on coding exercises.\nClass Diagram:\nA key tool in object oriented Programming design is the Class Diagram. We cover the basics of creating class diagrams, enabling you to visually represent the structure of your programs. This skill is essential for effective communication and collaboration in software development.\n\n\nImplement Classes in Java:\nGet hands-on with Java, one of the most widely used programming languages in the world. We guide you through setting up Java, installing NetBeans, and understanding the basic syntax. You'll learn how to create classes, instantiate objects, and gain a practical understanding of Java's object-oriented features.\nFeatures of Classes:\nExplore the features that make classes powerful in object oriented Programming. We cover access modifiers, encapsulation, constructors, destructors, and the 'this' keyword, giving you a comprehensive understanding of how to design robust and efficient classes.\nRe-usability in object oriented Programming:\nLearn the concept of reusability through inheritance and the use of the super keyword. Understand how these features allow you to build upon existing code, promoting code efficiency and maintainability.\nCommunicating Classes in object oriented Programming:\nDiscover the various ways classes communicate in Object Oriented Programming , including association, dependency, aggregation, and composition. Gain insights into how these relationships contribute to building flexible and scalable software.\nPolymorphism and Abstraction in object oriented Programming:\nDelve into the concepts of polymorphism, both static and dynamic, and understand how they enhance code flexibility. Explore abstraction through abstract classes and functions, enabling you to design software with clear, modular structures.\nProject:\nApply your knowledge by working on a console-based project. Additionally, get a glimpse into GUI development as we introduce you to the basics of creating graphical user interfaces (GUIs) and guide you through a GUI-based project. At the end of this course, you'll have a solid understanding of Object Oriented Programming, hands on experience with Java, and the skills to design and implement robust software using object oriented Programming principles.\nEnroll in the course and embark on your journey to becoming a proficient object oriented Programming developer.",
      "target_audience": [
        "Beginner Programmers Curious about learning Object Oriented Paradigm of programming"
      ]
    },
    {
      "title": "The Complete Course of Software Development Life Cycle SDLC",
      "url": "https://www.udemy.com/course/sdlc-course/",
      "bio": "Learn SDLC in a practical and professional way. Become an expert in Software Development Life Cycle, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master Software Development Life Cycle SDLC, to be able to implement it and optimize your software development",
        "You will be able to implement SDLC, understanding all the logic and ending with advanced practical exercises, assignments, and a complete project",
        "You will become familiar with the SDLC work environment, toolbars and basic commands, and you will master all the phases of the configuration process",
        "You will understand the fundamental concepts and principles of the Software Development Life Cycle",
        "You will master and explore different SDLC methodologies and their applications",
        "You will gain insights into the planning and initiation phase of software development projects",
        "You will learn the importance of requirements gathering, analysis, and documentation",
        "You will dive into the design phase, covering architectural design, system design, and interface design.",
        "You will explore the implementation phase, focusing on coding, testing, and integration",
        "You will understand the significance of project management in the context of SDLC",
        "You will examine quality assurance and testing processes to ensure software reliability",
        "You will introduce participants to deployment, maintenance, and post-implementation activities and you will compare and contrast SDLC with agile methodologies",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the final project",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {},
      "requirements": [
        "Having basic notions of SDLC and software engineerign can help, but the course starts from scratch",
        "Prepare and set up the needed software (if you don't know how, don't worry, it's very easy, and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become an SDLC professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that software engineers, developers, IT enthusiasts, students... can learn Software Development Life Cycle from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working in development, we have realized that nowadays mastering SDLC is very necessary for managing and producing superior software. Knowing how to use this package can give you many job opportunities and many economic benefits, especially in the world of software engineering.\nThe big problem has always been the complexity to perfectly understand Software Development Life Cycle SDLC it requires, since its absolute mastery is not easy. In this course I try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith more than 11 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master SDLC. The course will teach you sofwtare engineering in a practical way, from scratch, and step by step.\nWe will start with the needed environment on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to SDLC and course dynamics\nProject initation and general familiarization with the settings and objectives\nTechniques for gathering and use of tools and methodologies in requirement analysis\nDesign Phase: Architectural design principles, System design and interface design, Design documentation and modeling techniques\nSoftware Prototyping Phase with UI design using Figma\nImplementation Phase: making a job listing website and use of html, css, java script...\nQuality Assurance and Testing with its methodologies and techniques\nAgile Development: Scrum, Kanban...\nAgile vs traditional SDLC\nUser Authentication and Authorization\nMastery and application of absolutely ALL the functionalities of Software Development Life Cycle SDLC through real-world case studies\nPractical exercises, assignments, complete projects and much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody explained to me. In this way, you can learn to develop a wide variety of real softwares quickly and make versatile and complete use of Software Development Life Cycle. And if that were not enough, you will get lifetime access to any class and I will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning Software Development Life Cycle SDLC has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used SDLC before",
        "Software engineers, developers, IT enthusiasts, students... who want to learn a cost and time effective way to develop high-quality software",
        "Intermediate or advanced Software Development Life Cycle SDLC students who want to improve their skills even more!"
      ]
    },
    {
      "title": "Aprenda Programação de CLP do zero (Atualizado 2023) + Ebook",
      "url": "https://www.udemy.com/course/aprenda-programacao-de-clp-do-zero/",
      "bio": "Aprenda a desenvolver lógicas na linguagem Ladder, que é uma das linguagens mais utilizadas em controladores lógicos.",
      "objectives": [
        "Entenda como um Controlador Lógico Programável funciona.",
        "Compreenda diagramas escritos na Linguagem Ladder.",
        "Crie lógicas de programação para CLP.",
        "Faça projetos de Automação Residencial com CLP.",
        "Faça projetos de Automação Industrial com CLP."
      ],
      "course_content": {
        "Introdução ao curso": [
          "Baixe o Ebook (Resumão, para início rápido)",
          "Introdução",
          "Apresentação do Instrutor",
          "O conteúdo do curso",
          "Utilizando a Platforma da Udemy",
          "Como Gerar o seu Certificado do Curso",
          "O Software que será utilizado",
          "Como baixar e instalar"
        ],
        "Introdução aos CLP's": [
          "Introdução",
          "A História da Automação",
          "Tipos e modelos de Controladores (CLP's)",
          "Entradas e Saídas",
          "Terminal de Programação e IHMs",
          "Resumo da Seção",
          "Quiz sobre introdução aos CLPs"
        ],
        "O Software de Programação": [
          "Introdução",
          "Apresentando o ambiente",
          "As Linguagens de programação",
          "A Linguagem Ladder",
          "Resumo da seção",
          "Quiz sobre o software e as linguagens de programação."
        ],
        "Instruções binárias": [
          "Introdução",
          "Os tipos de instruções binárias",
          "Documentando Entradas, Saídas e lógicas",
          "Criando lógicas básicas (AND, OR)",
          "Inserindo comentários nas Lógicas",
          "Verificando erros no código",
          "Simulando o Programa",
          "Resumo da seção",
          "Instruções binárias"
        ],
        "Instruções binárias (Set/Reset)": [
          "Introdução",
          "Bobina liga na energização",
          "Bobinas Set/Reset",
          "Resumo da seção",
          "Instruções binárias (Set/Reset)"
        ],
        "Temporizadores": [
          "Introdução",
          "O temporizador ao trabalho TON",
          "O temporizador ao repouso TOF",
          "Emulando um TOF utilizando um TON",
          "O temporizador de pulso TP",
          "Emulando um TP com o TON",
          "Melhorias no Alarme Residencial com Temporizadores",
          "Resumo da Seção",
          "Temporizadores"
        ],
        "Instruções Matemáticas e a declaração de Variáveis": [
          "Introdução",
          "Tipos de Variáveis e Declaração de Variáveis",
          "Soma e Subtração",
          "Multiplicação e Divisão",
          "Resumo da Seção",
          "Instruções Matemáticas e a declaração de Variáveis"
        ],
        "Estruturando Seu Programa": [
          "Introdução",
          "Subrotinas",
          "Comparadores",
          "Variáveis Globais"
        ],
        "Bônus - Acrescentando Visualização no Projeto": [
          "Apresentação",
          "Criando a tela de Visualização",
          "Vinculando os Objetos",
          "Simulando o Projeto",
          "Seu Próximo Passo"
        ],
        "Encerramento": [
          "Encerramento"
        ]
      },
      "requirements": [
        "Ter um computador com Windows."
      ],
      "description": "Bem vindo ao curso \"Aprenda programação de CLP do zero\".\nEste é um curso de nível iniciante, onde vou mostrar desde o que é um CLP, quando ele surgiu, por que ele surgiu, até a programação do CLP em sí.\nVamos desenvolver lógicas utilizando a linguagem Ladder, que é uma das linguagens mais utilizadas para a programação de CLP. Criar projetos e soluções para problemas reais, demandas que existem hoje no mercado. Vamos trabalhar todas as etapas de criação de um projeto, desde a descrição do problema, descrição de um passo-a-passo do programa até a simulação das lógicas no ambiente de desenvolvimento.\nNeste curso vamos utilizar o MasterTool IEC, que é um software de programação da Altus, que você pode baixar gratuitamente, é um ferramenta de programação baseada no codesys, que serve como base para frandes fabricantes como schneider electric, beckhoff e SEW.\nAlém de todas estas características que já comentei, a escolha do Mastertool IEC foi também por ser leve,o arquivo de instalação tem aproximadamente 20Mb, facilitando o processo de baixar e instalar, possibilitando deixar nosso foco na linguagem e na lógica de programação.\nMesmo o curso sendo baseado na ferramenta da Altus, muitos conceitos que você verá neste curso é facilmente aproveitado com clps de outros fabricantes também, como rockwell, schneider entre outros.\nA área de automação é uma área que está em grande crescimento e espero que este curso sirva de ponta pé inicial para sua entrada no mercado de trabalho servindo como um diferencial.\nAo concluir este curso você saberá entre outras coisas:\nO que é um CLP\nComo funciona o CLP\nO que são Entradas, saídas e memórias\nLógica de programação\nDesenvolver lógicas na linguagem Ladder\nInterpretar programas feitos na linguagem Ladder\nDesenvolver projetos de software clp de pequeno e médio porte\nDesenvolver e simular programas no Matertool IEC (Ferramenta baseada no CodeSYS)",
      "target_audience": [
        "Este curso de \"Aprenda programação de CLP do zero\" destina-se a iniciantes não familiarizados com a linguagem de programação LADDER, lógica digital e/ou alunos que estão familiarizados com a área de instalações elétricas que estão procurando um aperfeiçoamento na área de automação residencial/industrial. Não é necessário conhecimento prévio de programação nem eletrônica. Se você já tem um conhecimento básico sobre Ladder e CLP, este curso não é para você."
      ]
    },
    {
      "title": "Dynamic Programming 6-Step Framework to ace your interview I",
      "url": "https://www.udemy.com/course/dynamic-programming-6-step-framework-to-ace-your-interview-i/",
      "bio": "Compiled list of Dynamic Programming Leetcode questions to Ace your Next Interview",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "DP 6 Step Framework Intro"
        ],
        "Problem Set": [
          "Counting Bits",
          "House Robber",
          "House Robber II",
          "Coin Change",
          "Decode Ways",
          "Maximum Subarray",
          "Maximum Product Subarray",
          "Combination Sum IV"
        ]
      },
      "requirements": [
        "Fundamental programming concepts like if/else statements, loops, and functions.",
        "A foundational understanding of at least one programming language",
        "Basic knowledge of recursion to build a strong programming base"
      ],
      "description": "Embark on a journey into one of the most renowned and challenging realms of programming with our dynamic programming course. Despite its reputation for complexity, we are dedicated to demystifying dynamic programming, delving deep into its foundational principles.\nThe course commences by introducing and defining dynamic programming, unveiling two widely utilized techniques: memoization and tabulation. We thoroughly explore their distinctions, guiding you on when and where to deploy each method effectively.\nMoving beyond theory, we tackle renowned dynamic programming problems, providing detailed problem statements and conducting illustrative walkthroughs. Notably, dynamic programming plays a significant role in tech giant interviews, and our course meticulously compiles essential problems crucial for establishing a robust DP foundation. We will learn how top apply 6 step DP framework to solve any DP problem:\n\n1. Category\n2. States\n3. Decisions\n4. Base Case\n5. Code\n6. Optimize (Time or Space Complexity)\n\nWe will solve problems from 5 different categories:\n0/1 Knapsack\nUnbounded Knapsack\nShortest/Critical Path\nFibonacci Sequence\nLongest Common Substring/Subsequence\nThis will be series of free course exploring different problems from DP Leetcode Category. Every students that joins is free to use our platform containing 200 problems in 4 different programming languages split by company/category with deep dive videos.",
      "target_audience": [
        "Individuals keen on boosting their problem-solving skills",
        "Those looking to delve into the realm of Dynamic Programming",
        "Anyone preparing for coding interviews of any kind",
        "Software developers seeking to enhance their skills",
        "Competitive programmers eager to excel in their craft"
      ]
    },
    {
      "title": "360° View on Product Development and Sourcing",
      "url": "https://www.udemy.com/course/product-development-and-sourcing/",
      "bio": "Product Development jounrney explained from cradle to grave for Hardware and Software Development Projects",
      "objectives": [
        "Product Development",
        "Product Innivation",
        "Product Marketing",
        "Procurement",
        "Cost Engineering",
        "Product Development Process",
        "Product Planning",
        "Quality and Product Approval Process",
        "Development Methodologies",
        "Project Management",
        "Value Engineering",
        "Prototypes",
        "Product strategy",
        "Market research",
        "Cycle Planning",
        "Development methodologies",
        "Agile",
        "Waterfall",
        "Standards",
        "Regulations",
        "Competition",
        "PMP",
        "Project Management Process Groups",
        "Project Management Knowledge Areas",
        "Team Management",
        "Organization Culture",
        "Leadership",
        "Entrepreneurs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview",
          "Course Focus",
          "Product Development Process",
          "General Quiz : Product Development Process"
        ],
        "Product Innovation Process": [
          "Product Strategy",
          "Quiz about Product Strategy",
          "Product Innovation Process",
          "Market Research",
          "Culture, Team & Leadership",
          "Product Innovation Management",
          "Genral Quiz : Product Innovation"
        ],
        "Product Sourcing Process": [
          "Types of Sourcing",
          "Stakeholders",
          "Competition",
          "Managing a sourcing process",
          "General Quiz : Product Sourcing Process"
        ],
        "Series Product Development Process": [
          "Development Schedule",
          "Protoypes, Samples",
          "Design and Development Process",
          "Industry Standards and Regulations",
          "Development Methodology",
          "Value Engineering",
          "Genereal Quiz about Series Development Process"
        ],
        "Managing the Project - Project Management": [
          "Project Management : Fundamentals",
          "Process Groups",
          "Knowledge Areas",
          "General Quiz about Project Management"
        ],
        "Connecting the dots": [
          "Product Strategy, Innovation, Market Research, Product Development"
        ]
      },
      "requirements": [
        "No prior experience needed",
        "Recommended : Basic product development and industry experience"
      ],
      "description": "Welcome to the Product Development course! In this comprehensive program, we will delve into all aspects of product development for both hardware and software projects, covering everything from ideation to delivery and maintenance phases. Whether you're an aspiring product manager, engineer, or entrepreneur, this course will equip you with the knowledge and skills needed to navigate the complex landscape of product innovation.\nThroughout the course, we will explore the key pillars of successful product development, including product innovation, product strategy, sourcing processes, series development, manufacturing, and project management. Let's take a closer look at each of these areas:\nProduct Innovation: We will begin by exploring the fundamentals of product innovation. You will learn how to identify market needs, generate creative ideas, and evaluate their feasibility. We will also delve into techniques such as design thinking and customer research to ensure that your product ideas are customer-centric and meet market demands.\nProduct Strategy: Once you have a compelling product idea, it's crucial to develop a solid product strategy. We will delve into the process of defining target markets, positioning your product, and creating a roadmap for its development. You will gain insights into competitive analysis, market segmentation, and pricing strategies to effectively position your product for success.\nSourcing Processes: In this module, we will explore the intricacies of sourcing components, materials, and services for your hardware and software projects. You will learn how to build and manage supplier relationships, assess supplier capabilities, negotiate contracts, and ensure the quality and reliability of sourced components.\nSeries Development and Manufacturing: Transforming your product idea into a tangible, market-ready solution requires efficient series development and manufacturing processes. We will delve into topics such as prototyping, testing, design for manufacturing, supply chain management, and lean production principles. You will gain valuable insights into streamlining production processes, reducing costs, and ensuring product quality.\nProject Management: Effective project management is crucial for the successful execution of product development initiatives. We will cover project planning, resource allocation, risk management, and project tracking. You will learn how to manage timelines, coordinate cross-functional teams, and address challenges that may arise during the development lifecycle.\nDelivery and Maintenance: The journey doesn't end once your product is launched. We will discuss strategies for product delivery, user onboarding, and ongoing maintenance. You will gain insights into product updates, bug fixes, customer support, and continuous improvement to ensure customer satisfaction and long-term success.\n\n\nBy the end of this course, you will possess a comprehensive understanding of the entire product development lifecycle, enabling you to successfully bring innovative hardware and software products to market. Get ready to embark on this exciting journey of product development and unlock your potential as a product innovator and strategist!\nWe look forward to accompanying you on this educational adventure.\nBest regards,\nKrishh Ramakrishnan\nCrosswise Consulting",
      "target_audience": [
        "Product Developers",
        "Sales Professionals",
        "Product Managers",
        "Procurement and Sourcing",
        "Innovation Engineers",
        "R&D Engineer and Managers",
        "Program Managers",
        "Cost Estimators",
        "Quality Engineers",
        "Mechanical Engineers",
        "Value Engineering Team",
        "Executive Management",
        "Functional Managers",
        "Team leaders"
      ]
    },
    {
      "title": "Low Level Design Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/low-level-design-interview-questions/",
      "bio": "Low Level Design Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Low Level Design Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nAre you preparing for your next technical interview and aiming to ace the low-level design questions? Look no further! Our comprehensive Low-Level Design Interview Questions Practice Test is meticulously designed to help you master the intricacies of low-level design concepts, ensuring you stand out in any technical interview. This course is tailored to provide you with an extensive range of practice questions covering the most crucial aspects of low-level design, preparing you to tackle any challenge with confidence.\nIn today's competitive job market, having a strong understanding of low-level design is essential for anyone aiming to secure a position in software development, system architecture, or related fields.\n1. Data Structures and Algorithms\nMastering data structures and algorithms is fundamental to excelling in low-level design interviews. Our practice test questions cover the following subtopics:\nArrays and Strings: Understand the core principles of arrays and strings, including manipulation techniques, searching algorithms, and problem-solving strategies.\nLinked Lists: Learn how to implement and optimize linked lists, including single, double, and circular linked lists.\nStacks and Queues: Explore the functionality and application of stacks and queues in various problem scenarios.\nTrees and Graphs: Delve into the complexities of trees and graphs, including binary trees, AVL trees, graph traversal algorithms, and more.\nHash Tables: Gain a deep understanding of hash tables, their implementation, collision handling, and practical use cases.\nSorting and Searching: Master different sorting algorithms (quick sort, merge sort, etc.) and searching techniques (binary search, depth-first search, etc.).\n2. Object-Oriented Programming\nObject-oriented programming (OOP) is a cornerstone of software development. Our practice test questions in this section cover:\nClasses and Objects: Understand the basics of OOP, including class structures, object creation, and instance management.\nInheritance and Polymorphism: Learn about the principles of inheritance, polymorphism, method overloading, and overriding.\nEncapsulation: Explore how encapsulation helps in protecting data and maintaining code modularity.\nAbstraction: Dive into the concept of abstraction, its importance in software design, and practical examples.\nInterfaces and Abstract Classes: Understand the differences and applications of interfaces and abstract classes in OOP.\nDesign Patterns: Study common design patterns such as Singleton, Factory, Observer, and more, to solve recurring design problems.\n3. System Design Fundamentals\nA strong foundation in system design is crucial for building scalable and efficient systems. This section includes practice test questions on:\nModular Design: Learn how to design systems with modularity in mind to ensure maintainability and scalability.\nCohesion and Coupling: Understand the concepts of cohesion and coupling, and their impact on system design.\nScalability: Explore strategies to design systems that can scale effectively to handle increased load and demand.\nConcurrency and Parallelism: Master techniques for handling concurrency and parallelism in software systems.\nFault Tolerance: Learn how to design systems that are resilient and can handle failures gracefully.\nPerformance Optimization: Gain insights into optimizing system performance through various design and implementation strategies.\n4. Memory Management\nEfficient memory management is critical for developing high-performance applications. Our practice test questions cover:\nStack vs Heap: Understand the differences between stack and heap memory, and their respective use cases.\nGarbage Collection: Learn about garbage collection mechanisms, algorithms, and their impact on application performance.\nMemory Allocation Strategies: Explore different strategies for memory allocation and their trade-offs.\nMemory Leaks: Identify common causes of memory leaks and strategies to prevent them.\nPointers and References: Gain a deep understanding of pointers and references, and their role in memory management.\nCaching Mechanisms: Learn about various caching mechanisms and their impact on system performance.\n5. Operating System Concepts\nA solid understanding of operating system concepts is essential for any software developer. This section includes practice test questions on:\nProcess Management: Explore the lifecycle of processes, process scheduling, and management techniques.\nMemory Management: Understand memory management techniques such as paging, segmentation, and virtual memory.\nFile System Management: Learn about file system structures, management techniques, and access control.\nSynchronization and Deadlocks: Master synchronization techniques and strategies to avoid deadlocks.\nCPU Scheduling: Gain insights into CPU scheduling algorithms and their impact on system performance.\nInter-Process Communication: Explore various inter-process communication mechanisms and their applications.\n6. Network Programming\nNetwork programming skills are crucial for developing distributed systems and networked applications. Our practice test questions cover:\nSocket Programming: Understand the fundamentals of socket programming and develop networked applications.\nClient-Server Architecture: Learn about client-server architecture, protocols, and communication techniques.\nProtocols (TCP/IP, UDP, HTTP, etc.): Gain a deep understanding of network protocols and their applications.\nData Serialization: Explore data serialization techniques and their role in network programming.\nBandwidth Optimization: Learn strategies to optimize bandwidth usage and improve network performance.\nError Handling and Recovery: Master error handling techniques and strategies for recovering from network failures.\nEnroll Today and Take the First Step Towards Success!\nDon't miss this opportunity to elevate your interview preparation with our Low-Level Design Interview Questions Practice Test course. Enroll today and gain the knowledge, skills, and confidence to excel in your next technical interview. Whether you're a seasoned professional or just starting your career, our course will provide you with the comprehensive practice you need to succeed. Start your journey towards mastering low-level design and secure your dream job!\nJoin us now and unlock your potential with the best low-level design interview questions practice test available!",
      "target_audience": [
        "Software Developers and Engineers",
        "Computer Science Students and Enthusiasts",
        "Aspiring System Architects and Technical Leads",
        "Self-Learners and Curious Minds"
      ]
    },
    {
      "title": "Fundamentos de Domain-Driven Design ( DDD )",
      "url": "https://www.udemy.com/course/fundamentos-de-domain-driven-design/",
      "bio": "Introdução a modelagem de domínios com Domain-Driven Design (DDD).",
      "objectives": [
        "Fundamentos básicos e conceitos de Domain-Driven Design (DDD) para modelagem de regras de negócio."
      ],
      "course_content": {
        "Introdução": [
          "O que é o Domain Driven Design?",
          "Quais projetos usar o DDD?"
        ],
        "Design Estratégico": [
          "Modelo de Domínio",
          "Linguagem Ubíqua",
          "Domínio, subdomínio e Contexto Delimitado",
          "Mapas de Contexto"
        ],
        "Design Tático": [
          "Arquiteturas",
          "Entidades",
          "Objetos de Valor",
          "Serviço de Domínio",
          "Eventos de Domínio",
          "Módulos",
          "Agregados",
          "Fábricas",
          "Repositórios",
          "Integrando Serviços"
        ],
        "Técnica Relacionada": [
          "Event Storming"
        ]
      },
      "requirements": [
        "Ter noções de análise de sistemas",
        "Ter noções de desenvolvimento orientado a objetos"
      ],
      "description": "Através deste curso, você aprenderá todos os conceitos e fundamentos básicos relacionados ao Domain-Driven Design. Serão abordados todos os detalhes da modelagem através do design estratégico e design tático. Por fim será apresentado o funcionamento da dinâmica Event Storming, para extrair os conceitos mais implícitos do seu domínio de negócio.",
      "target_audience": [
        "Analistas de sistemas",
        "Desenvolvedores",
        "Analistas de negócio"
      ]
    },
    {
      "title": "Object Oriented C# MasterClass Part 2",
      "url": "https://www.udemy.com/course/object-oriented-csharp-masterclass-part-2/",
      "bio": "Object Oriented Development",
      "objectives": [
        "C# Programming",
        "Object-Oriented Programming",
        "SOLID Principles",
        "Generics",
        "Iterators Comparators",
        "Reflection",
        "Delegates Events"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Required Software",
          "Solution and Folder Structure"
        ],
        "SOLID Principles": [
          "Single Responsibility Principle",
          "Single Responsibility Principle Client",
          "Open Closed Principle",
          "Open Closed Principle Client",
          "Interface Segregation Principle",
          "Interface Segregation Principle Client",
          "Dependency Inversion Principle",
          "Dependency Inversion Principle Client"
        ],
        "Generics": [
          "Generic Collections",
          "Generic Collections Client",
          "Generic Methods",
          "Generic Methods Client",
          "Generic Classes",
          "Generic Classes Client",
          "Constraints",
          "Constraints Client"
        ],
        "Iterators & Comparators": [
          "IEnumerable Interface",
          "IEnumerable Interface Client",
          "ICloneable Interface",
          "ICloneable Interface Client",
          "IComparable Interface",
          "IComparable Interface Client"
        ],
        "Reflection": [
          "Type Reflection",
          "Type Reflection Client",
          "Method Reflection",
          "Method Reflection Client",
          "Field Property Reflection",
          "Interface Reflection",
          "Interface Reflection Client",
          "Activator",
          "Activator Client",
          "Invocation",
          "Invocation Client"
        ],
        "Object Oriented Communication": [
          "Publisher",
          "Subscriber",
          "Subscription",
          "Custom Event Arguments"
        ]
      },
      "requirements": [
        "Basic programming knowledge",
        "Beginner Level C# Experience"
      ],
      "description": "Professor Manish Narayan, founder of Innovative Institution presents\nGet Started with Object Oriented C# MasterClass Part 2!\nAre you a student or professional in the field of software engineering or maybe contemplating an educational or career move to the software engineering world? Have you been looking for a quick and easy way to get up and running with Object Oriented C# using .NET Core and don't want to go through an overwhelming amount of material just to get your environment setup and ready for building your own apps? Don't worry as THIS IS THE COURSE FOR YOU!\nIn my course, I will teach you how to get your environment setup for .NET Core and help you to gain a strong foundation in C# Object Oriented Programming quickly and through a step-by-step guided approach. I will be showing you all the necessary installation and setup needed for .NET Core and Visual Studio IDE. Together we will master the following modules coupled with concrete examples and methodologies gathered from real world experiences:\n-SOLID Principles\n(Single-responsibility principle, Open–closed principle, Liskov substitution principle, Interface segregation principle, Dependency inversion principle)\n-Generics\n(Generic Collections, Generic Methods, Generic Classes, Constraints)\n-Iterators & Comparators\n(IEnumerable, ICloneable, IComparable)\n-Reflection\n(Type Reflection, Method Reflection, Field Property Reflection, Interface Reflection, Activator, Invocation)\n-Object Communication\n(Publisher, Subscriber, Subscription, Custom Event Arguments)\nLearning Object-Oriented Programming (OOP) is an essential skill for any software developer. It provides a structured and efficient way of designing and organizing code, making it easier to maintain and scale applications. With C# as your language of choice, you'll have access to a powerful and versatile toolset within the .NET ecosystem.\nIn this comprehensive MasterClass, we will delve deep into the core principles of OOP, such as encapsulation, inheritance, and polymorphism. You'll discover how to create classes, define properties, and implement methods that unleash the full potential of C#. Through hands-on exercises and real-world examples, you will gain the confidence to tackle complex projects and design elegant solutions.\nMoreover, we will explore the benefits of using .NET Core, a cross-platform framework that enables you to build applications that run on Windows, macOS, and Linux. You'll learn how to set up your development environment to take advantage of .NET Core's performance and flexibility.\nBy the end of this MasterClass, you will be equipped with the knowledge and skills to craft sophisticated C# applications, opening doors to exciting job opportunities and advancements in your software engineering career. So don't wait any longer; let's embark on this journey together and become a C# OOP expert in no time!\nTake this course and feel proud of the fact that you will be one step closer towards the rewarding field of Software Engineering using .NET technologies!",
      "target_audience": [
        "Students",
        "Professionals",
        "Software Engineers"
      ]
    },
    {
      "title": "Crack Coding Interview Pattern: Sliding Window 2024",
      "url": "https://www.udemy.com/course/crack-python-coding-interview-pattern-sliding-window/",
      "bio": "Part of Series focused on solving 30 Sliding Window Pattern Problems asked on all Top Tech Coding Interviews",
      "objectives": [
        "Solve Easy to Hard Difficulty problems using different data structures and algorithms",
        "Breaking down the coding interview problems in a step by step, systematic manner and provided explanation, different approaches, pseudo code and python code",
        "How to solve all possible types of problems asked by major tech companies that can be solved using Sliding window logic",
        "Create logic building capability to solve coding interview problems efficiently"
      ],
      "course_content": {
        "Introduction": [
          "Brute Force Approach"
        ],
        "What is Sliding window?": [
          "What is sliding window?",
          "Find Maximum Sum",
          "Smallest Subarray"
        ],
        "String Problems": [
          "String Section",
          "Longest Possible Substring",
          "Challenge Problem : Fruit Problem",
          "Solution : Fruit Problem",
          "Find Unique Characters",
          "Find Permutations",
          "Challenge : Find Anagrams in String",
          "Solution : Anagrams in String",
          "Minimum Window Substring",
          "Concatenation of All Words"
        ],
        "Solve Together": [
          "Solve Together Section",
          "Best Time to Buy and Sell Stock",
          "Binary Subarrays Sum",
          "Subarrays with K different integers",
          "Max Consecutive Ones",
          "Min Swaps to Group All 1s Togeher",
          "Diet Plan Performance",
          "Get Equal Substrings Within Budget",
          "Replace the Substring for Balanced",
          "Count Number of Nice Subarrays",
          "Number of Substrings Containing all Three Characters",
          "Practice Problems"
        ]
      },
      "requirements": [
        "Basic Knowledge of fundamental data structures and algorithms is preferred",
        "Basic Knowledge of python is preferred",
        "If you want to code yourself, you should be familiar with leetcode and or jupyter notebook or any python ide"
      ],
      "description": "It's usually difficult to start preparing for coding interviews immediately with limited knowledge of Data Structures and Algorithms. Through grinding on leetcode for FAANG interviews, candidates have started decoding the patterns behind the questions which instantaneously directs them to apply the most efficient logic interviewer is testing us on. Understanding the interview questions based on the patterns and practicing problems having the same patterns helps prepare for interviews faster, with less effort, more confidence, with less chance of forgetting and/or getting confused during the interviews. Interviewers usually test us on multiple patterns of coding interviews. This course covers one type of pattern where we discuss most types of problems that can be solved using sliding window. It’s a very common pattern asked in interview questions. The plan is to create a series of such courses which will cover all the patterns asked in the interview. Completing this course will strong foundation for sliding window. I have tried to make this course brief and have divided the course to 4 hours of video lectures and 4 hours of self-practice assignments, since there are quite a few patterns and candidate may not want to dedicate all time to learning just one pattern.",
      "target_audience": [
        "Getting ready for your software engineering coding interview? This is the place for you.",
        "This Sliding Window Series is one part of Series of Solving Coding Interview Questions. This covers all sliding window and discusses some alternative approaches",
        "Python knowledge is not mandatory, Course discusses logic to solve, pseudo code and python code, students can try coding in any language of their choice while referring to this course",
        "Want to get better at coding interviews?",
        "Strengthen your competitive programming muscles"
      ]
    },
    {
      "title": "Springboot Essentials for Beginners",
      "url": "https://www.udemy.com/course/springboot-essentials-for-beginners/",
      "bio": "Build RESTful APIs, connect to databases, and develop microservices with confidence!",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Java",
        "Text Editor/IDE: A text editor or IDE (like IntelliJ IDEA ) installed on your compute",
        "No prior experience with Spring Framework is required:"
      ],
      "description": "Welcome to the Spring Boot Essentials for Beginners course! This comprehensive course is designed to introduce you to the powerful Spring Boot framework, which streamlines Java application development. Whether you’re an aspiring developer or someone looking to enhance your skills, this course will provide you with a solid foundation in building robust applications.\nThroughout this course, you will learn how to create a Spring Boot project from scratch, and understand the core concepts of the framework. We will delve into building RESTful APIs, allowing your applications to communicate effectively over the web. Additionally, you’ll explore how to integrate databases using Spring Data JPA and Hibernate, giving you the tools to store and manage data efficiently.\nBy the end of this course, you will be able to;\n1 understand the spring boot architecture.\n2 Understand data flow,.\n3 Understand layers in spring boot.\n4 Know dependency injection.\n5 Integrate with database.\n7 Java Persistence Api.\n7 Develop Spring Boot applications confidently.\n8 And many more...\nWith practical examples, hands-on projects, and real-world scenarios, you will gain the skills necessary to start your journey as a Spring Boot developer.\nJoin us and unlock the full potential of Java development with Spring Boot!",
      "target_audience": [
        "Aspiring Java Developers",
        "Students in Computer Science or Related Fields",
        "Beginner Programmers",
        "Software Engineers:"
      ]
    },
    {
      "title": "SDLC models:basics for beginners",
      "url": "https://www.udemy.com/course/sdlc-models/",
      "bio": "learn basics of software development life cycle and it's models",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Self Introduction",
          "introduction"
        ],
        "Lets learn about sdlc models": [
          "SDLC phases",
          "waterfall and v-models",
          "iterative and spiral model",
          "agile model",
          "fish model and big bang model",
          "RAD model and software prototype model"
        ],
        "Conclusion": [
          "conclusion",
          "SDLC basics"
        ]
      },
      "requirements": [
        "You should know basic idea about software development"
      ],
      "description": "This course mainly focuses on the phases involved in software development and it's complete life cycle. it also focuses on different types of SDLC's(software Development Life Cycle) and what are the advantages and disadvantages associated  with it them. it is beginner level and basic level course and it is also a quintessential course for anyone who want to become a software developer since it focuses completely on how a software is developed from initial phase to final phase. so by the end of the course they will have a basic idea about how a software is developed.before enrolling for this course it is better if you have some knowledge on software development in order to understand this course well",
      "target_audience": [
        "Anyone who wants to learn about SDLC and it's different models",
        "Anyone who wants to revise topics before attending for an interview"
      ]
    },
    {
      "title": "Microservicios. Conceptos Básicos",
      "url": "https://www.udemy.com/course/microservicios-curso-completo/",
      "bio": "Aprende todo los conceptos necesarios para dominar la arquitectura basada en Microservicios",
      "objectives": [
        "Tendrán todo lo que necesitan saber sobre las arquitectura de Microservicios y la decision sobre si usarla o no para un proyecto.",
        "Emprender un nuevo proyecto o la migración de uno antiguo con la correcta arquitectura",
        "Cada semana un video nuevo sobre Arquitectura de Software por todo el 2020"
      ],
      "course_content": {
        "Introducción a los Microservicios y los conceptos importantes": [
          "Introducción",
          "Monolítica VS Microservicios - Parte 1",
          "Monolítica VS Microservicios - Parte 2",
          "Monolítica VS Microservicios - Parte 3",
          "¿Qué conviene usar?"
        ],
        "Ventajas y desventajas de las arquitecturas Monolítica y de Microservicios": [
          "Arquitectura Monolítica - VENTAJAS",
          "Arquitectura Monolítica - DESVENTAJAS",
          "Arquitectura de Microservicios - VENTAJAS",
          "Arquitectura de Microservicios - DESVENTAJAS"
        ],
        "Requisitos de arquitectura para Microservicios": [
          "Principios de diseño de Microservicios",
          "High Cohesion",
          "Autonomus",
          "Business Domain Centric",
          "Resilience",
          "Observable",
          "Autonomation",
          "Resumen de la sección principios de diseño"
        ]
      },
      "requirements": [
        "Conocimiento general de desarrollo de programas"
      ],
      "description": "Este curso te ayuda a conocer y sobre todo entender que es lo que hace que la arquitectura de software basada en microservicios ha ya sido adoptada por muchas grandes empresas como Amazon, BestBuy, Coca Cola, Ebay, Netflix, Spotify y muchos otros. Te ayuda a tomar la mejor decision para migrar un proyecto o iniciar uno nuevo con la correcta arquitectura.",
      "target_audience": [
        "Programadores de todos los niveles que desean dominar los conceptos que son la base de diseño de software"
      ]
    },
    {
      "title": "Fast Start Python Serverless Apps with AWS and Terraform",
      "url": "https://www.udemy.com/course/fast-start-python-serverless-apps-with-aws-and-terraform/",
      "bio": "Practical approach to DevOps and Serverless to generate business value immediately.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Progression and Architecture"
        ],
        "First Steps": [
          "Environment Setup",
          "First Backend Application Deployed"
        ],
        "Restructuring into Scalable Code": [
          "Serverless Framework YAML abstractions and common configs",
          "Creating RESTful API functions",
          "Initial Look at AWS Console Resources"
        ],
        "Infrastructure as Code with Terraform": [
          "Creating VPCs and Subnets - Networking for Lambdas",
          "Terraform Apply and what gets created on AWS",
          "Update back end to use new infrastructure"
        ],
        "Authentication with AWS Cognito": [
          "Creating an AWS Cognito User Pool in Terraform",
          "Bearer Authentication for the back end",
          "Look at AWS Resources for the User Pool and begin authentication code flow",
          "Complete Implicit Grant flow"
        ],
        "Websockets": [
          "Chat App with Lambda Websockets",
          "Secure the Chat Application"
        ],
        "Final Thoughts and Thanks": [
          "Boilerplate with additional content and thanks"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts",
        "Basic understanding of public cloud concepts"
      ],
      "description": "This course takes you through building Serverless applications quickly and securely on Amazon Web Services by leveraging:\n- Terraform for infrastructure code\n- Serverless Framework (Python) for quickly deploying and structuring our code (REST & Websockets)\nWe go beyond the defaults and will construct infrastructure as code and create our own VPCs, Subnets and tackle OAuth2.0 authentication.\nBy the end of the course, you should be able to comfortably understand how to create a REST and websocket application from scratch and leverage the boilerplate to start generating business value immediately.\n\n\nThe course does require a high quality connection to get 1080p viewing due to font sizes in code. I've made the entire course downloadable in case you are on a slower connection so you can watch offline! Ensure that you set your quality level to \"Auto\" to get the best resolution possible.\n\n\nUpdate: I no longer maintain this course and the code may be out of date. I've made it free so that others can learn some concepts and hopefully gain something from it. All the best on your learning adventures! Some other infra as code tools you can look at include:\n- Pulumi -- Pulumi also comes with a copilot AI and really helps streamline the infra code writing!\n- Various CDKs for their respective cloud providers",
      "target_audience": [
        "Junior to Senior Software Developers/Engineers"
      ]
    },
    {
      "title": "Learn GitHub Codespaces For Java Development",
      "url": "https://www.udemy.com/course/learn-github-codespaces-for-java-development/",
      "bio": "A codespace is a software development environment hosted in the cloud and accessed via a browser.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to GitHub",
          "Introduction to GitHub Codespaces",
          "GitHub and codespace workflow",
          "Working from the Terminal",
          "How and Why to stop a codespace",
          "Codespace Java program",
          "Stage, Commit, and Push in a codespace",
          "java, javac, and .gitignore in the codespace Terminal",
          "Debugging a program"
        ]
      },
      "requirements": [
        "Basic computer literacy"
      ],
      "description": "If you are looking for a framework for developing Java programs across most hardware platforms using a simple browser and the internet, then this is the course for you. In this course you will be taken through essential GitHub usage as well as the creation of a GitHub codespace for Java development. This course will not take you through learning Java.\n\n\nA GitHub codespace is a Linux-based virtual machine that contains a local repository that you want to use for software development. More specifically, the codespace contains a development UI that is based on the popular Visual Studio Code IDE. As with the desktop version of Visual Studio Code, the codespace version allows the addition of extensions to aid in the software development process for the language of your choosing. The codespace also contains a Terminal (command shell) for doing many useful command line operations such as command line Git operations (e.g. git add, git commit, git push, git status) and all of the most common Linux commands.\n\n\nOne of the major headaches with software development is the installation of all of the tools and languages necessary for code creation. The beauty of a GitHub codespace is that all of this installation has already occurred by the time you launch a codespace for a given repository. For instance, the Java JVM and Java compiler, javac, are already installed and ready for use and all within a browser. If you think this is magic, it is!!! Come on in and have a look",
      "target_audience": [
        "Anyone interested in developing software on any hardware platform with a simple browser and internet access"
      ]
    },
    {
      "title": "Der große Arduino-Lehrgang: Vom Anfänger zum Profi",
      "url": "https://www.udemy.com/course/arduino-lehrgang-vom-anfaenger-zum-profi/",
      "bio": "Das Arduino-Mikrocontroller-System verstehen, programmieren und in der Praxis einsetzen.",
      "objectives": [
        "Du wirst mit den Grundlagen von Mikrocontrollern im Allgemeinen vertraut.",
        "Du wirst die Arduino IDE kennenlernen und wie Du damit eigene Programme erstellst.",
        "Ich werde Dir die wichtigsten Sensoren vorstellen, die Du für Deine Projekte brauchst.",
        "Wir werden uns anschauen, wie sich einzelne Arduino-Boards unterscheiden."
      ],
      "course_content": {
        "Wie Sie den Kurs am besten nutzen": [
          "In welcher Reihenfolge sollten Sie vorgehen?",
          "Vorstellung der Kurs-Oberfläche",
          "Ist der Kurs auch in 2022 noch aktuell?",
          "Ein erster kleiner Einkaufsbummel!",
          "Übersicht aller Kurs-Upgrades"
        ],
        "Einleitung": [
          "Was ist überhaupt \"Arduino\"?",
          "Merkmale des Arduino-Konzepts",
          "Das erste Date mit dem Arduino",
          "Fragen zur Programmentwicklung",
          "Tipps für den Einkauf und Hardware-Liste"
        ],
        "Die Arduino-Boards": [
          "Arduino UNO: das universelle Arbeitspferd",
          "Fragen zum Arduino UNO",
          "Arduino MEGA - viel Speicher und jede Menge IO",
          "Fragen zum Arduino MEGA",
          "Arduino M0 - Arduino mit 32-Bit-Power",
          "Arduino DUE: das Flaggschiff",
          "Arduino MKR Zero: kompakt und leistungsstark",
          "Weitere interessante Arduino-Controller",
          "Fragen zu den Arduino-Boards"
        ],
        "Verbindung mit der Außenwelt": [
          "Kabel und Anschlüsse",
          "Taster und Schalter",
          "Spannungsversorgung und Schaltungstechnik",
          "Teste Dein Wissen"
        ],
        "Shields, die einfachste Form der Erweiterung": [
          "Das Arduino-Shield-Konzept",
          "Prototyping-Shields",
          "IO-Extension-Shields",
          "Motor-Shields",
          "Kommunikations-Shields",
          "Display-Shields",
          "Fragen zum Thema \"Shields\""
        ],
        "Die Arduino-Entwicklungsumgebung": [
          "Download und Installation",
          "Bedienung und Konfiguration",
          "Der Editor",
          "Fallstrick: kein Reset beim Aufruf des seriellen Monitors",
          "Fragen zur Entwicklungsumgebung"
        ],
        "Wir machen uns mit der Arduino IDE vertraut": [
          "Was wir tun werden und womit",
          "Wir erstellen ein Arduino-Minimalprogramm",
          "Damit beim Upload alles glatt läuft",
          "\"Hello World\" für den Arduino: die blinkende LED",
          "Übung: Ändern der Blinkdauer",
          "Auflösung: geänderte Blinkfrequenz",
          "Wir ändern die Helligkeit der LED",
          "Arduino sendet Daten an PC",
          "Übung: Kombinierte Ausgabe auf PC",
          "Auflösung der Übung \"kombinierte Ausgabe\"",
          "Was sind Variablen und wozu brauchen wir sie?",
          "PC sendet Daten an Arduino",
          "Wir konstruieren einen Befehlsinterpreter",
          "Bitte beachten: Lektion \"Die Serial.readSring()-Problematik\"",
          "Code-Wiederholungen mit der for-Schleife",
          "Übung: Gezielte Wiederholung einer Ausgabe über die serielle Schnittstelle",
          "Auflösung der Übung \"gezielte Wiederholung...\""
        ],
        "Keine Hardware? Mit der SimulIDE ist auch das kein Problem (Update 11/2021)": [
          "Vorstellung und Installation der Elektronik-Simulation \"SimulIDE\"",
          "Eine erste Schaltung: LED mit und ohne Vorwiderstand",
          "Wir laden einen Sketch auf das virutelle UNO-Board",
          "Auch das geht: Simulation inkl. Sketch-Entwicklung"
        ],
        "Tipps für die Realisierung Deiner Projekte": [
          "Einleitung zu diesem Abschnitt",
          "Crimptechnik: Kabel einfach selber machen"
        ],
        "Praxis-Projekt: Ein einfacher Kabeltester": [
          "Vorwort zu den Praxis-Projekten",
          "Vorstellung des Projektes",
          "Beschreibung der verwendeten Hardware",
          "Entwurf der ersten Programmlogik",
          "Problem der undefinierten Pegel und Lösung mit Pulldown-Widerständen",
          "Konflikt der Ausgangsbeschaltung und Lösung",
          "Kabeltester Endversion"
        ]
      },
      "requirements": [
        "Es ist von Vorteil, wenn Du Basiskenntnisse im Bereich Mikrocontroller und Programmierung mitbringst.",
        "Ich biete Dir aber bei allen aufkommenden Fragen individuelle Unterstützung.",
        "Da sich die Mikrocontroller-Welt ständig ändert, wird auch der Kurs unregelmäßig aktualisiert."
      ],
      "description": "Der Kurs richtet sich vornehmlich an Einsteiger im Bereich Arduino, deckt aber auch alle fortgeschrittenen Bereiche ab. Da sowohl das Arduino-Konzept ständigen Neuerungen unterzogen ist, aber auch immer wieder neue Grundlagenbereiche integriert werden sollen, ist der Kurs dynamisch aufgebaut und wird laufend weiterentwickelt.\nNeben den speziellen Kapiteln, die sich auf den Arduino selbst konzentrieren, werden auch allgemeine Themen aus dem Bereich Mikrocontroller und Programmierung, wie Sensorik, Antriebstechnik und Vernetzung behandelt.\nDa bei einer derart komplexen Materie nie alle Fragen innerhalb der Videos beantwortet werden können, stehe ich allen Teilnehmern mit meinem ganzen Wissen unterstützend zur Verfügung. Diese Unterstützung biete ich sowohl für alle Fragen zum konkreten Unterrichtsmaterial, als  auch bei Problemen mit eigenen Projekten.",
      "target_audience": [
        "An alle, die sich für Mikrocontroller im Allgemeinen und Arduino im Speziellen interessieren und diese leistungsfähigen Systeme für eigene Entwicklungen nutzen möchten. Einen Kurs für eine derart breite Zielgruppe zu entwickeln, ist nur schwer möglich, deshalb ist eine individuelle Unterstützung so wichtig. Egal, was Sie nicht verstehen, ich werde Ihre Fragen so lange beantworten, bis Ihnen alles klar geworden ist."
      ]
    },
    {
      "title": "Case Studies for System Design Interviews",
      "url": "https://www.udemy.com/course/case-studies-for-system-design-interviews/",
      "bio": "Prepare for the system design interviews.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Background on software development."
      ],
      "description": "System design is part of the technical interview process in some companies. It is often a brainstorming session between the interviewer and the interviewee about the design of a software system.\nFormat of the Course\nIn this course, we study the design of a set of selected software systems with a top-down approach. In each case, we start by defining the requirements, then do a high level design of the system, and then design some of the subsystems.\nThe discussions are driven by questions. After each question, you can pause the video and give your own answer to practice for system design interviews. After each question, I give an answer based on my opinion. Since I intent to teach the concept being discussed, my answer might be longer than a regular answer given in an interview.\nDesign questions might be open-ended and might have more than one answer.\nFor the efficiency of the course, and not to talk about the same concept again and again, each case will include questions on selected concepts.\nConcepts and Techniques\nDuring this journey, you will encounter both domain specific questions and questions on several design techniques and concepts, such as:\nHigh Level Design\nBattery Efficiency\nRequest Traffic Analysis\nData Analysis\nStateless Services\nCaching\nSharding\nFast Data Retrieval\nWebhooks\nWebSocket\nData Management\nPreventing Overload\n...",
      "target_audience": [
        "Anyone preparing for system design interviews."
      ]
    },
    {
      "title": "Foundations of Object Oriented Design Principles Explained",
      "url": "https://www.udemy.com/course/foundations-of-object-oriented-design-principles-explained/",
      "bio": "Master Object Oriented Design Principles for Effective Software Engineering and Development Success.",
      "objectives": [],
      "course_content": {
        "Introduction to Object Oriented Design": [
          "Understanding Object Oriented Design",
          "Importance of Object Oriented Programming",
          "Historical Context and Evolution"
        ],
        "Core Principles of Object Oriented Design": [
          "Encapsulation: Basics and Benefits",
          "Inheritance: Advantages and Use Cases",
          "Polymorphism: Static and Dynamic Techniques",
          "Abstraction: Simplifying Complexity"
        ],
        "SOLID Principles": [
          "S - Single Responsibility Principle",
          "O - Open/Closed Principle",
          "L - Liskov Substitution Principle",
          "I - Interface Segregation Principle",
          "D - Dependency Inversion Principle"
        ],
        "Designing with Objects": [
          "Identifying Objects in Real-World Scenarios"
        ]
      },
      "requirements": [
        "Access to a internet & computer.",
        "Basic understanding of programming concepts and terminology.",
        "Willingness to learn and explore object-oriented design concepts.",
        "Experience with basic software development principles and practices."
      ],
      "description": "Unlock the power of effective programming with our course, 'Foundations of Object Oriented Design Principles Explained.' In an era driven by technology, understanding Object-Oriented Design (OOD) is not just beneficial—it's essential. This course forms the backbone of your journey in Software Engineering and Development, providing you with invaluable knowledge and skills that will elevate your coding capabilities, enhance your problem-solving strategies, and transform your approach to software development.\n\n\nThroughout this comprehensive course, we will delve into a variety of crucial topics that form the essence of OOD. We will start with the fundamental concepts that define Object-Oriented Design, such as classes, objects, and the significance of encapsulation. The course then progresses to explore advanced principles including inheritance, polymorphism, and the SOLID principles that govern robust software architecture. You'll dissect real-world case studies and engage with practical coding exercises that will show you how these principles apply in real scenarios. Our in-depth chapters will cover Design Patterns, aiding you in crafting reliable and reusable code, and ensuring your projects are structured efficiently for long-term maintenance and scalability.\n\n\nBy the end of this course, you will have gained a profound understanding of how to implement OOD principles in your projects. These skills will not only heighten your productivity but will also bolster your self-awareness and confidence in programming. Whether you are crafting a small application or architecting a vast system, the principles learned will enhance your ability to think critically and creatively about design and development. You'll feel empowered to tackle complex challenges, breaking them down into manageable parts with ease, and recognize the impact of your work in a team-oriented environment.\n\n\nThis course is designed for a diverse audience. If you're a beginner eager to grasp the essentials of Development and Software Engineering, or an intermediate learner looking to strengthen your understanding of Object-Oriented Design (OOD), this course is precisely what you need. Even experienced developers will benefit from revisiting these fundamental principles to refine their design practices, making this course useful to a broad range of participants striving for excellence in software development.\n\n\nThe practical applications of Object-Oriented Design principles extend into various real-world scenarios, and this course equips you with tools and insights you can apply immediately. You will learn how to approach problems systematically, design scalable systems, and create code that is not only functional but also elegant. From building secure, maintainable applications to collaborating effectively within software teams, the principles acquired will facilitate tangible results in both your personal projects and professional environments. You'll leave the course with not just theoretical knowledge, but the hands-on experience to confidently implement what you've learned in your day-to-day tasks.\n\n\nAdopting a professional yet approachable tone, our course is crafted for everyone eager to enhance their technical arsenal. With motivational and engaging content, you'll find yourself encouraged to dive into the world of Object-Oriented Design with enthusiasm and determination. You won't just learn; you will grow. Each lesson is designed to connect with you personally and professionally, providing applicable knowledge that transcends the classroom and impacts your career.\n\n\nNow is the time to take control of your future in Development, Software Engineering, and Object-Oriented Design (OOD). Don't miss this opportunity to deepen your understanding and sharpen your skills in one of the most crucial areas of software development. Enroll today and embark on a transformative journey that will not only advance your career but enrich your professional life with the confidence and capability to tackle any project you encounter. Your adventure into the world of Object-Oriented Design awaits—let's get started!",
      "target_audience": [
        "Aspiring developers seeking a solid foundation in Object-Oriented Design principles.",
        "Software engineers looking to enhance their design skills for better code maintainability.",
        "Students in computer science wanting to grasp essential OOD concepts and practices.",
        "Professionals transitioning into software development who need OOD knowledge.",
        "Anyone interested in modern software engineering techniques and design patterns.",
        "Developers aiming to improve collaboration and project success with OOD principles."
      ]
    },
    {
      "title": "Your custom React component",
      "url": "https://www.udemy.com/course/your-custom-react-component/",
      "bio": "Create your custom, reusable React component with Webpack and Storybook.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "What you can learn in this course"
        ],
        "Preparation": [
          "Tools",
          "Register to npmjs.com",
          "Check nodejs and npm versions",
          "Create git repository"
        ],
        "Custom button component": [
          "Init project = package.json",
          "Install dependencies",
          "Add readme.md",
          "Component configuration = Webpack",
          "Demo site configuration = Storybook",
          "Activate JSX Storybook addon",
          "Create custom button component",
          "Very first demo case",
          "Start demo site development build",
          "Ignore files from the Git repository = .gitignore",
          "Save our work - git commit",
          "Make demo site production build",
          "Commit demo site production build",
          "Activate GitHub page",
          "Ignore files from the npm package = .npmignore",
          "Component production build",
          "Publish component as a package",
          "Add sass to define component style",
          "Enable SASS loading in demo site configuration",
          "Commit SASS support",
          "Update component as a package",
          "Add npm version badge to the repository home",
          "Commit npm badge",
          "Use component in a project",
          "Update demo site",
          "Add demo site badge next to the npm badge"
        ],
        "Thank you": [
          "A special thank you"
        ]
      },
      "requirements": [
        "React basics",
        "Basic programming skills and mindset"
      ],
      "description": "Hello I am David!\nThe thing is that you and your team can save many times with making your own UI kit from separated React components. It can reduce the number of the bugs or the improvement time. The first step towards a UI kit is the ability of creating a custom React component.\nI made this course to show you how to make your own React component. In this course you can learn build your component with Webpack, the Npm package publishing process, the demo site creation and some additional tricks.\nSo let the fun begin!",
      "target_audience": [
        "This course is for professional front-end or full-stack developers"
      ]
    },
    {
      "title": "Microservices with Micronaut",
      "url": "https://www.udemy.com/course/microservices-with-micronaut/",
      "bio": "Micronaut is a modern, JVM-based, full stack Java framework designed for building modular, easily testable JVM apps",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Micronaut launch tool",
          "Enable Annotation Processing",
          "Create Hello World endpoint"
        ],
        "Micronaut - Dependency Injection": [
          "Dependency Injection and Beans in Micronaut",
          "Bean Qualifiers(@Named, @Qualifier)",
          "Bean Priority",
          "Further bean concepts",
          "Bean lifecycle methods"
        ],
        "Microservices with Micronaut": [
          "HTTP Server Concepts",
          "User Service - POST and GET API",
          "User Service - PUT and DELETE API",
          "Bean Validations",
          "Error Handler",
          "Micronaut Data",
          "Database Migrations with Flyway",
          "Micronaut - Scheduled tasks",
          "Problems with Scheduled tasks",
          "Shedlock for Scheduled Tasks"
        ],
        "Interservice Communication": [
          "HTTPClient - Part-1",
          "HTTPClient - Part-2"
        ]
      },
      "requirements": [
        "Basic knowledge of Java",
        "REST APIs"
      ],
      "description": "Micronaut is a modern, JVM-based, full-stack Java framework designed for building modular, easily testable JVM apps. It currently supports Java, Kotlin, and Groovy.\nIt has the following benefits over other available frameworks like Spring boot:\n1. Fast startup time - Thanks to Micronaut AOT. It reduces application startup time and deployment size by executing a number of operations during the build. It can precompute bean requirements and perform substitutions at build time, so that only classes that are going to be used in production are included.\n2. Reduced memory footprint\n3. Minimal use of reflection - It does the dependency injection at compile time, so it doesn't make the use of reflection for dependency injection at run time.\n4. Minimal use of proxies\n5. No runtime bytecode generation\n6. Easy Unit Testing\n\nIn this course, you will learn the following topics:\n1. Creating a hello world application with Micronaut.\n2. Dependency Injection and Bean concepts in Micronaut - Bean qualifiers, Bean priority, Bean lifecycle methods.\n3. REST APIs with Micronaut - GET, POST, PUT, DELETE.\n4. Micronaut Data - a database access toolkit that uses Ahead of Time (AoT) compilation to pre-compute queries for repository interfaces that are then executed by a thin, lightweight runtime layer.\n5. Error handling\n6. Flyway integration with micronaut for easy database migrations(production ready).\n7. Shedlock integration with Micronaut for running scheduled tasks in distributed environment.\n8. Interservice communication using HTTPClient.",
      "target_audience": [
        "Developers building microservices with Java",
        "Learning about micronaut"
      ]
    },
    {
      "title": "Mastering Git",
      "url": "https://www.udemy.com/course/playing-with-git/",
      "bio": "Mastering Git workflow principals and git Commands",
      "objectives": [
        "Understand what is SCM and different types of SCM, understand the workflow of Git than playing with Git commands . start a small project and manage it using Git",
        "we need 3 hours to play with commands and doing some hands on labs",
        "Identify and understand the differents Git commands and play with CI/CD workflow using GitHub actions",
        "Create a micro applications using nestjs, angular and mongo and maipulate the history using Git, and manage the CI/CD using GitHub actions ."
      ],
      "course_content": {
        "Introduction": [
          "Why I create this Course ?"
        ],
        "Understand what is SCM": [
          "What Is SCM ?",
          "SVC Types",
          "What is GIT ?",
          "What is source control version (SVC) , difference types of SVC and what is GIT ?",
          "What is Github ?",
          "Git Vs GitHub",
          "Install Git",
          "Create your first GitHub repository",
          "Quiz about different type of SCMs , Git and GitHub"
        ],
        "Understand What is GIT": [
          "Understand GIT workflow",
          "Introduce Yourself to GIT",
          "Init Your GIT project",
          "Adding File to the staging Area",
          "How to change git remote origin ?",
          "Ignoring file tracking using .gitignore",
          "Create Your First Commit, Commit message Standards",
          "Share your Code with collaborators",
          "Git Tag",
          "Git Quiz Basics"
        ],
        "GIT Branchs": [
          "Why Git Branch ?",
          "What is git branch",
          "Create your first branch",
          "Three methods to create local branch",
          "Rename your Local Branch",
          "Rename your Remote Branch",
          "Delete Local Branch",
          "Push your Branch",
          "Delete Remote branch",
          "Git Merge",
          "Git Rebase",
          "Git cherrypick",
          "Git Stash",
          "Git Stash apply VS git stash pop",
          "Git Branch"
        ],
        "Git GUI Tools": [
          "Git Branch QUIZ",
          "Install Visual studio git extension",
          "Install Gitkraken",
          "First Example with Gitkraken"
        ]
      },
      "requirements": [
        "No requirements needs"
      ],
      "description": "Title: Git Essentials: Mastering Version Control with Git\n\n\nDescription:\nAre you tired of constantly losing track of your project's files or spending hours trying to undo changes? Git is the most popular version control system that can help you manage your code and collaborate with others effectively. This comprehensive Git course will teach you everything you need to know to become proficient in using Git for your software development projects.\n\n\nIn this course, you'll start by learning the basics of Git, including how to create a repository, commit changes, and navigate Git's commands. You'll also learn how to use Git in a team environment, including how to resolve conflicts and merge changes. You'll explore the power of Git branching and how to use it to manage feature development and bug fixes. Additionally, you'll learn how to work with remote repositories on GitHub and Bitbucket.\n\n\nThis course is designed for beginners who want to learn Git from scratch or intermediate users who want to improve their Git skills. You'll follow along with practical exercises and real-world examples to reinforce your learning. By the end of this course, you'll have a solid understanding of Git and be able to use it confidently for your projects.\n\n\nWhat you'll learn:\n- Understand Git's fundamental concepts, including version control, commits, and branches\n- Use Git to manage your code locally and collaborate with others\n- Handle Git merge conflicts and resolve issues\n- Create and manage Git branches to work on multiple features simultaneously\n- Work with remote repositories on GitHub and Bitbucket\n- Use Git with popular code editors and tools\n\n\nWho this course is for:\n- Beginner developers who want to learn Git from scratch\n- Intermediate Git users who want to improve their skills and workflow\n- Anyone who wants to become proficient in version control and collaboration with Git\n\n\nBy taking this course, you'll gain a valuable skill that will improve your software development workflow and increase your productivity. Sign up today and start mastering Git!",
      "target_audience": [
        "This course for developers (begineer, intermediate and expert) also for IT, system administrator and else ."
      ]
    },
    {
      "title": "Digital Twin Technology: Revolutionize Future of Industries",
      "url": "https://www.udemy.com/course/digital-twin-technology/",
      "bio": "Learn Digital Twins and master the virtual-physical integration world with real-time simulation and predictive insights.",
      "objectives": [
        "Understand the Core Concepts: Define and explain the principles, components, and lifecycle of digital twin technology.",
        "Identify Applications: Recognize key industry applications of digital twins, including manufacturing, healthcare, smart cities, and more.",
        "Integrate IoT and Data: Explain the role of IoT, big data, and real-time data integration in creating and operating digital twins.",
        "Build a Digital Twin: Design and implement a basic digital twin using simulation tools and frameworks.",
        "Leverage AI and ML: Apply artificial intelligence and machine learning to enhance predictive capabilities of digital twins.",
        "Simulate and Optimize Systems: Use digital twins to simulate real-world scenarios and optimize system performance.",
        "Enhance Decision-Making: Analyze outputs from digital twins to support strategic decision-making processes.",
        "Assess Cybersecurity Risks: Identify and address security and privacy challenges in digital twin ecosystems.",
        "Explore Emerging Trends: Evaluate the future potential and advancements in digital twin technology across various domains.",
        "Implement Digital Transformation: Develop strategies for adopting digital twins in business transformation initiatives."
      ],
      "course_content": {
        "Digital Twins": [
          "Part 1 - Digital Twins",
          "Part 2 - Digital Twins",
          "Part 3 - Digital Twins",
          "Part 4 - Digital Twins",
          "Part 5 - Digital Twins",
          "Part 6 - Digital Twins",
          "Part 7 - Digital Twins",
          "Part 8 - Digital Twins",
          "Part 9 - Digital Twins",
          "Part 10 - Digital Twins"
        ],
        "Building Industrial Digital Twins": [
          "Part 1 - Building Industrial Digital Twins",
          "Part 2 - Building Industrial Digital Twins",
          "Part 3 - Building Industrial Digital Twins",
          "Part 4 - Building Industrial Digital Twins",
          "Part 5 - Building Industrial Digital Twins",
          "Part 6 - Building Industrial Digital Twins",
          "Part 7 - Building Industrial Digital Twins",
          "Part 8 - Building Industrial Digital Twins"
        ],
        "The Engineering of Digital Twins": [
          "Part 1 - The Engineering of Digital Twins",
          "Part 2 - The Engineering of Digital Twins",
          "Part 3 - The Engineering of Digital Twins",
          "Part 4 - The Engineering of Digital Twins",
          "Part 5 - The Engineering of Digital Twins",
          "Part 6 - The Engineering of Digital Twins",
          "Part 7 - The Engineering of Digital Twins",
          "Part 8 - The Engineering of Digital Twins",
          "Part 9 - The Engineering of Digital Twins",
          "Part 10 - The Engineering of Digital Twins",
          "Part 11 - The Engineering of Digital Twins",
          "Part 12 - The Engineering of Digital Twins",
          "Part 13 - The Engineering of Digital Twins",
          "Part 14 - The Engineering of Digital Twins",
          "Part 15 - The Engineering of Digital Twins",
          "Part 16 - The Engineering of Digital Twins",
          "Part 17 - The Engineering of Digital Twins",
          "Part 18 - The Engineering of Digital Twins",
          "Part 19 - The Engineering of Digital Twins"
        ],
        "Digital Twin Technology": [
          "Part 1 - Digital Twin Technology",
          "Part 2 - Digital Twin Technology",
          "Part 3 - Digital Twin Technology",
          "Part 4 - Digital Twin Technology",
          "Part 5 - Digital Twin Technology",
          "Part 6 - Digital Twin Technology",
          "Part 7 - Digital Twin Technology",
          "Part 8 - Digital Twin Technology",
          "Part 9 - Digital Twin Technology",
          "Part 10 - Digital Twin Technology",
          "Part 11 - Digital Twin Technology",
          "Part 12 - Digital Twin Technology",
          "Part 13 - Digital Twin Technology",
          "Part 14 - Digital Twin Technology",
          "Part 15 - Digital Twin Technology",
          "Part 16 - Digital Twin Technology",
          "Part 17 - Digital Twin Technology",
          "Part 18 - Digital Twin Technology",
          "Part 19 - Digital Twin Technology",
          "Part 20 - Digital Twin Technology",
          "Part 21 - Digital Twin Technology",
          "Part 22 - Digital Twin Technology",
          "Part 23 - Digital Twin Technology",
          "Part 24 - Digital Twin Technology",
          "Part 25 - Digital Twin Technology",
          "Part 26 - Digital Twin Technology",
          "Part 27 - Digital Twin Technology",
          "Part 28 - Digital Twin Technology",
          "Part 29 - Digital Twin Technology",
          "Part 30 - Digital Twin Technology",
          "Part 31 - Digital Twin Technology",
          "Part 32 - Digital Twin Technology",
          "Part 33 - Digital Twin Technology",
          "Part 34 - Digital Twin Technology",
          "Part 35 - Digital Twin Technology",
          "Part 36 - Digital Twin Technology",
          "Part 37 - Digital Twin Technology",
          "Part 38 - Digital Twin Technology",
          "Part 39 - Digital Twin Technology",
          "Part 40 - Digital Twin Technology",
          "Part 41 - Digital Twin Technology",
          "Part 42 - Digital Twin Technology",
          "Part 43 - Digital Twin Technology",
          "Part 44 - Digital Twin Technology",
          "Part 45 - Digital Twin Technology",
          "Part 46 - Digital Twin Technology"
        ],
        "End of Course Quiz": [
          "End of Course Quiz"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Digital Twin Technology: Revolutionize Future of Industries course by Uplatz.\n\n\nDigital Twin Technology creates a virtual representation of a physical object, process, or system. It enables real-time monitoring, simulation, and analysis of the physical entity through its digital counterpart, helping organizations optimize operations, predict outcomes, and improve efficiency.\n\n\nHow Digital Twin Works\n\n\nPhysical Entity: A real-world asset or system (e.g., a machine, building, or process).\nSensors: Data is collected from the physical entity through IoT devices or other monitoring systems.\nDigital Model: A digital replica is created using advanced modeling, often leveraging technologies like machine learning, AI, and data analytics.\nData Integration: Real-time data is fed into the digital twin, ensuring it remains an accurate representation of the physical entity.\nSimulation and Analysis: The twin can simulate scenarios, predict outcomes, and provide insights for decision-making.\n\n\nApplications of Digital Twin Technology\n\n\nManufacturing\nOptimize production lines.\nPredict equipment failure and schedule maintenance.\nEnhance product design by testing prototypes virtually.\nHealthcare\nModel patient-specific treatment plans.\nMonitor wearable devices and simulate health outcomes.\nSmart Cities\nMonitor urban infrastructure (e.g., bridges, roads, and utilities).\nManage traffic flows and energy usage.\nAutomotive\nEnhance vehicle design and testing.\nMonitor fleet performance in real-time.\nEnergy and Utilities\nOptimize energy grid management.\nSimulate energy usage patterns to predict and meet demand.\nAerospace\nPredict aircraft maintenance needs.\nSimulate mission scenarios and improve operational efficiency.\n\n\nKey Benefits\n\n\nPredictive Maintenance: Anticipates failures before they happen, reducing downtime and repair costs.\nCost Optimization: Reduces the need for physical prototypes or frequent manual inspections.\nImproved Efficiency: Provides insights to streamline operations and optimize performance.\nReal-time Monitoring: Enables continuous oversight of physical assets and systems.\nEnhanced Decision-Making: Offers data-driven insights for planning and innovation.\n\n\nThe technologies that power the creation and management of digital twins include a combination of hardware, software, and methodologies. These technologies collectively enable the robust creation, monitoring, and management of digital twins across industries. Some of the key ones involved are:\n\n\n1. Internet of Things (IoT)\nSensors and Actuators: Collect real-time data from physical systems.\nIoT Platforms: Manage data exchange between devices and digital twins (e.g., AWS IoT, Azure IoT Hub).\n2. Data Integration and Management\nBig Data Platforms: Process and analyze large volumes of data (e.g., Hadoop, Apache Spark).\nETL Tools: Extract, transform, and load data for synchronization.\nData Lakes and Warehouses: Centralized data storage for scalability and analytics.\n3. Simulation and Modeling\n3D Modeling Tools: Create virtual representations of physical objects (e.g., CAD tools like AutoCAD, SolidWorks).\nPhysics Engines: Simulate real-world physics (e.g., Unity, Ansys).\nDigital Thread Systems: Ensure seamless integration across lifecycle stages.\n4. Artificial Intelligence (AI) and Machine Learning (ML)\nAI Algorithms: Analyze patterns, optimize processes, and predict outcomes.\nML Models: Continuously improve performance based on data feedback loops.\nNatural Language Processing (NLP): Enables interactions with digital twins using conversational interfaces.\n5. Cloud and Edge Computing\nCloud Platforms: Provide the scalability and computational power for digital twins (e.g., AWS, Azure, Google Cloud).\nEdge Computing: Processes data closer to the physical entity for faster response times (e.g., Cisco Edge, HPE Edgeline).\n6. Connectivity and Networking\n5G Networks: Enable high-speed, low-latency data transfer between physical and digital systems.\nProtocols: MQTT, OPC-UA, and HTTP/HTTPS for secure data communication.\n7. Analytics and Visualization Tools\nBusiness Intelligence Tools: Analyze and visualize data from digital twins (e.g., Power BI, Tableau).\nAR/VR Tools: Visualize and interact with digital twins in immersive environments (e.g., Microsoft HoloLens, Oculus).\n8. Cybersecurity\nIdentity and Access Management (IAM): Protect access to digital twin environments.\nEncryption Tools: Secure data during transmission and storage.\nThreat Detection Systems: Monitor for vulnerabilities in IoT and digital ecosystems.\n9. Integration Platforms\nAPIs and SDKs: Facilitate interoperability between systems (e.g., REST APIs, software development kits).\nEnterprise Systems: Integrate with ERP, PLM, and CRM for business-level insights.\n10. Standards and Protocols\nDigital Twin Standards: Defined by organizations like ISO, IEEE, and Digital Twin Consortium.\nInteroperability Protocols: Ensure compatibility across platforms and industries.\n\n\nDigital Twin Technology: Revolutionize Future of Industries - Course Curriculum\n\n\nDigital Twins - part 1\nDigital Twins - part 2\nDigital Twins - part 3\nDigital Twins - part 4\nDigital Twins - part 5\nDigital Twins - part 6\nDigital Twins - part 7\nDigital Twins - part 8\nDigital Twins - part 9\nDigital Twins - part 10\nBuilding Industrial Digital Twins - part 1\nBuilding Industrial Digital Twins - part 2\nBuilding Industrial Digital Twins - part 3\nBuilding Industrial Digital Twins - part 4\nBuilding Industrial Digital Twins - part 5\nBuilding Industrial Digital Twins - part 6\nBuilding Industrial Digital Twins - part 7\nBuilding Industrial Digital Twins - part 8\nThe Engineering of Digital Twins - part 1\nThe Engineering of Digital Twins - part 2\nThe Engineering of Digital Twins - part 3\nThe Engineering of Digital Twins - part 4\nThe Engineering of Digital Twins - part 5\nThe Engineering of Digital Twins - part 6\nThe Engineering of Digital Twins - part 7\nThe Engineering of Digital Twins - part 8\nThe Engineering of Digital Twins - part 9\nThe Engineering of Digital Twins - part 10\nThe Engineering of Digital Twins - part 11\nThe Engineering of Digital Twins - part 12\nThe Engineering of Digital Twins - part 13\nThe Engineering of Digital Twins - part 14\nThe Engineering of Digital Twins - part 15\nThe Engineering of Digital Twins - part 16\nThe Engineering of Digital Twins - part 17\nThe Engineering of Digital Twins - part 18\nThe Engineering of Digital Twins - part 19\nDigital Twin Technology - part 1\nDigital Twin Technology - part 2\nDigital Twin Technology - part 3\nDigital Twin Technology - part 4\nDigital Twin Technology - part 5\nDigital Twin Technology - part 6\nDigital Twin Technology - part 7\nDigital Twin Technology - part 8\nDigital Twin Technology - part 9\nDigital Twin Technology - part 10\nDigital Twin Technology - part 11\nDigital Twin Technology - part 12\nDigital Twin Technology - part 13\nDigital Twin Technology - part 14\nDigital Twin Technology - part 15\nDigital Twin Technology - part 16\nDigital Twin Technology - part 17\nDigital Twin Technology - part 18\nDigital Twin Technology - part 19\nDigital Twin Technology - part 20\nDigital Twin Technology - part 21\nDigital Twin Technology - part 22\nDigital Twin Technology - part 23\nDigital Twin Technology - part 24\nDigital Twin Technology - part 25\nDigital Twin Technology - part 26\nDigital Twin Technology - part 27\nDigital Twin Technology - part 28\nDigital Twin Technology - part 29\nDigital Twin Technology - part 30\nDigital Twin Technology - part 31\nDigital Twin Technology - part 32\nDigital Twin Technology - part 33\nDigital Twin Technology - part 34\nDigital Twin Technology - part 35\nDigital Twin Technology - part 36\nDigital Twin Technology - part 37\nDigital Twin Technology - part 38\nDigital Twin Technology - part 39\nDigital Twin Technology - part 40\nDigital Twin Technology - part 41\nDigital Twin Technology - part 42\nDigital Twin Technology - part 43\nDigital Twin Technology - part 44\nDigital Twin Technology - part 45\nDigital Twin Technology - part 46",
      "target_audience": [
        "Engineers: Mechanical, Electrical, Civil, and Software Engineers interested in implementing digital twin solutions.",
        "Data Professionals: Data Scientists, Data Engineers, and Analysts exploring digital twin analytics.",
        "IT Professionals: System Architects, IoT Architects, and Cloud Engineers focusing on integrating digital twins into IT ecosystems.",
        "Operations Managers: Professionals in manufacturing, energy, and logistics looking to optimize operations.",
        "Product Designers: Innovators seeking to test and improve product designs using digital simulations.",
        "Healthcare Practitioners: Professionals exploring patient-specific simulations and treatment modeling.",
        "Smart City Planners: Urban development professionals working on digital twin models for infrastructure planning.",
        "Academicians and Researchers: Individuals studying advanced applications of digital twin technologies.",
        "Students and Graduates: Learners in engineering, IT, and data sciences aspiring to specialize in emerging technologies.",
        "Business Strategists and Consultants: Professionals advising organizations on digital transformation strategies."
      ]
    },
    {
      "title": "Motion Profiles A-Z: Robotics & Automation Masterclass",
      "url": "https://www.udemy.com/course/motion-profiles-a-z-robotics-automation-masterclass/",
      "bio": "Optimize Robotics and Automation Systems by Mastering Motion Profiles Like S-Curve and Sinusoidal",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic understanding of robotics, automation, or control systems is helpful but not required.",
        "Familiarity with industrial automation concepts is a plus.",
        "No programming experience needed – everything will be explained step by step."
      ],
      "description": "Unlock the power of industrial motion profiles and take your understanding of robotics and automation to the next level!\nIn this course, I’ll guide you through essential motion profiles like:\nS-curve motion profiles\nSinusoidal motion profiles\nWhether you're moving machines or designing complex robotic systems, motion profiles are the brain of the system – critical for optimizing movement and precision in robotics, automation, and manufacturing.\nWhy Take This Course?\nI’ve spent over 15 years in robotics and industrial automation, from motion design to machine integration. I’ve worked on both sides:\nMotion Designer – Configuring servo motors, controllers, and drives.\nIntegrator – Building entire machines by connecting motors and assembling automation systems.\nThrough practical, real-world lessons, I’ll simplify the complex concepts that universities and textbooks often overcomplicate. No fluff – just the knowledge you actually need to succeed in automation and robotics.\nWho Is This Course For?\nRobotics engineers and automation professionals looking to enhance their motion control expertise.\nStudents or beginners eager to break into the automation field with real-world insights.\nMechanical engineers working with cam systems and automated machinery.\nHobbyists and freelancers interested in learning motion control without unnecessary theory.\nWhy Am I Offering This for Free?\nI believe in open-source education. Knowledge shouldn’t be locked away – it should be accessible to everyone. This course, like all my future courses, will be free on Udemy and YouTube.\nI know the struggle of learning complex industrial topics without guidance. My goal is to save others from the challenges I faced and pass on the hard-earned knowledge I’ve gained over the years.\nIf this course helps even a small percentage of learners improve their automation skills, I’ll consider it a success.\nWhat’s Next?\nThis course is just the beginning. I’ll continue to create more tutorials – from motion tuning to servo drive configurations – as I gain access to equipment and resources. If you’re a company looking to promote your servo drives or PLCs, I’d be happy to integrate them into the course for live demos.\nSo, let’s get started!\n\n\nThank you for joining me on this journey.",
      "target_audience": [
        "Automation engineers and robotics professionals looking to enhance their understanding of motion profiles.",
        "Mechanical engineers interested in integrating motion profiles into cam systems and automation projects.",
        "Control system engineers seeking to improve precision and reduce mechanical stress in industrial applications.",
        "Students or beginners eager to explore motion control and industrial automation concepts."
      ]
    },
    {
      "title": "How to Scrape any Website with UiPath",
      "url": "https://www.udemy.com/course/how-to-scrape-any-website-with-uipath/",
      "bio": "RPA developer",
      "objectives": [],
      "course_content": {
        "Web Scrap": [
          "Introduction",
          "Input Dialog",
          "Open Browser",
          "Data Scraping",
          "Export to Excel",
          "Using the Maximize window activity"
        ]
      },
      "requirements": [
        "You have UiPath install",
        "Have a computer with internet"
      ],
      "description": "In this course, we'll take a deeper dive into the data scraping with UiPath, taking your Robot Framework test automation skills to the next level:\nMany quick tips to turbocharge your UiPath skills\nCreating activities\nA \"TODO\" script review process to improve collaboration with team members\nHow to keep your open source tools up to date\nA deep dive into web locators\nConditionals & loops to make your scripts more logical\nAdvanced data handling with Dictionaries\nData-driven testing\nA complete end to end example\nMore!\nBy the end of the course, you should feel confident to pursue a role with any company who needs to data scrape any website.",
      "target_audience": [
        "RPA developers willing to learn web scraping",
        "Automation lovers",
        "UiPath developers",
        "Beginner"
      ]
    },
    {
      "title": "ISO 26262 Functional Safety Expert Level Practice Tests",
      "url": "https://www.udemy.com/course/iso-26262-functional-safety-expert-level/",
      "bio": "Certification Prep Practice Tests",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Master ISO 26262 at the Expert Level\nTake your functional-safety career to the pinnacle with our ISO 26262 Expert certification prep course—designed for senior engineers, auditors, and safety leads who need more than a foundation. This in-depth, scenario-driven training will give you the advanced strategies, cross-part insights, and legal-forensic know-how you need to design robust safety cases, lead rigorous audits, and defend your safety processes in the highest-stake environments.\nWhat You’ll Learn\nDeep clause interpretation: Unpack the intent, nuance, and interdependencies across Parts 1–12\nReal-world scenarios: Resolve ambiguous, multi-stakeholder challenges in agile, SoS, and supplier ecosystems\nCross-part traceability: Seamlessly link FMEDA, HARA, ASIL decomposition, tool qualification, and cybersecurity analyses\nAdvanced tool governance: Qualify, monitor, and defend your tool-chain\nCutting-edge topics: Machine-learning, DevOps integration, real-time corner cases, and motorcycle adaptations\nAudit & legal defensibility: Build courtroom-ready safety dossiers with forensic chain-of-custody, change‐control, and variant management\nAdvanced tool governance: Qualify, monitor, and defend your tool-chain under Part 8 and Part 10 guidelines\nHolistic Lifecycle Command: From concept through decommissioning, seamlessly orchestrate Parts 1–12, including semiconductor guidelines (Part 11) and motorcycle adaptations (Part 12).\nIntegrate security and functional safety\n– Seamlessly merge ISO/SAE 21434 cybersecurity findings into your ISO 26262 analyses, ensuring mutual reinforcement of safety and security requirements.",
      "target_audience": [
        "Experienced functional‐safety engineers looking to reach Expert proficiency in ISO 26262",
        "System, software, and hardware architects responsible for automotive E/E safety lifecycle",
        "Lead auditors and assessors preparing for senior‐level safety certification or re-certification",
        "Safety managers, project leads, and program directors who oversee ISO 26262 compliance across the supply chain",
        "R&D and product‐development professionals aiming to integrate best-practice safety frameworks into next-generation vehicles"
      ]
    },
    {
      "title": "Data Structures in C++",
      "url": "https://www.udemy.com/course/data-structures-for-beginners-c-plusplus/",
      "bio": "For Beginners",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic C++ Programming Knowledge"
      ],
      "description": "In this course, we're going to be learning about data structures using C++. We're going to be covering with Linked List and Doubly Linked list data structures. Afterwards we will be covering Abstract Data Types.  An Abstract Data Type describes what is expected from a data structure. For example a Stack must have a push and pop method. So we will be covering the following Abstract Data Types, such as a Stack,Queue,Binary Search Tree, Min/Max Heap.",
      "target_audience": [
        "Individuals with the desire to learn about data structures and how to implement their own data structures"
      ]
    },
    {
      "title": "Kubernetes Pratico e Veloce per Principianti in Italiano",
      "url": "https://www.udemy.com/course/kubernetes-pratico-per-principianti/",
      "bio": "Il corso DevOps pratico e veloce per imparare i concetti fondamentali di Kubernetes.",
      "objectives": [
        "Concetti di base sui containers",
        "Concetti fondamentali di Kubernetes",
        "Far girare applicativi su Kubernetes",
        "Configurazione di applicativi su Kubernetes",
        "Osservabilità su Kubernetes",
        "Alcuni suggerimenti per la certificazione CKAD",
        "Setup di un cluster Kubernetes con GKE o Kind"
      ],
      "course_content": {
        "Introduzione": [
          "Introduzione al corso",
          "Community su Slack"
        ],
        "Introduzione a Kubernetes": [
          "Introduzione ai container",
          "Orchestrazione dei containers",
          "Orchestrazione dei containers",
          "La cosa più importante su Kubernetes",
          "La cosa più importante su Kubernetes",
          "Architettura di un cluster Kubernetes",
          "Architettura di un cluster Kubernetes"
        ],
        "Setup del cluster": [
          "Setup del cluster su Google Kubernetes Engine",
          "Comandi di esempio per il setup",
          "Setup del cluster con Kind"
        ],
        "Concetti Fondamentali di Kubernetes": [
          "Pods",
          "Pods Demo",
          "Pods",
          "Namespaces",
          "Namespaces Demo",
          "Namespaces",
          "Pod e Namespace: Esercizi",
          "Labels e selectors",
          "Label e selectors demo",
          "ReplicaSet",
          "ReplicaSet",
          "Deployments",
          "Deployments Demo",
          "Deployment",
          "Deployments: Rollouts",
          "Deployments Rollouts Demo",
          "Deployments: Rollouts",
          "Labels e Deployments: Esercizi",
          "Services",
          "Services",
          "Services e Deployments",
          "Services e Deployments Demo",
          "Services e Deployments",
          "Services: Esercizi",
          "Condividi il corso sui Social!"
        ],
        "Configurazione e Persistenza": [
          "Configurazione con ConfigMaps",
          "Configurazione con ConfigMaps Demo",
          "ConfigMaps",
          "Secrets per informazioni sensibili",
          "Secrets Demo",
          "Secrets",
          "Risorse nei Pod",
          "Risorse nei Pod Demo",
          "Risorse nei Pod",
          "ConfigMaps, Secrets, Resources: Esercizi",
          "Persistenza",
          "Persistenza Demo",
          "Persistenza",
          "Persistenza: Bindings e Utilizzo",
          "Persistenza: Bindings e Utilizzo Demo",
          "Persistenza: Bindings e Utilizzo",
          "Persistenza: Esercizi"
        ],
        "Osservabilità": [
          "Health Checks",
          "Health Checks Demo",
          "Health Checks",
          "Logging",
          "Monitoring",
          "Logging e Monitoring Demo",
          "Logging e Monitoring",
          "Osservabilità: Esercizi",
          "Bonus Track: CKAD Preparation"
        ],
        "Conclusione del corso": [
          "Conclusione",
          "Conclusione",
          "Bonus Track: Gli errori più comuni con Kubernetes nei progetti reali"
        ]
      },
      "requirements": [
        "Basi di Linux e del terminale",
        "Basi sui containers",
        "Conoscenza di base di macchine virtuali sul Cloud"
      ],
      "description": "Conosci il gioco Pokemon Go? Come ha fatto questa applicazione a scalare a circa 20 milioni di utenti in maniera così efficiente?\nLa risposta è Kubernetes. Si, hai letto bene, grazie a Kubernetes!\nQuesto corso ti introdurrà i concetti fondamentali per iniziare il tuo percorso con Kubernetes, per arrivare pian piano a scrivere applicazioni scalabili e ad alta affidabilità. Ti sarà molto utile sia nel tuo posto di lavoro attuale per la modernizzazione di applicativi esistenti o magari per aiutarti a trovare una posizione lavorativa migliore.\nL'idea del corso è di essere conciso ma preciso, evitando di dilungarsi troppo su dettagli meno importanti per gli sviluppatori all’inizio del loro percorso con questa tecnologia, ma fornendo in ogni caso delle basi solide per lavorarci senza nessun tipo di problema.\nIl corso è suddiviso in diverse sezioni che raggruppano i temi ed è basato principalmente sulla versione gestita di Kubernetes GKE che si trova su Google Cloud. La decisione di usare questa piattaforma gestita deriva da diverse considerazioni, innanzitutto è possibile avere 300 dollari di crediti gratuiti con un account gmail, in secondo luogo ci permette di concentrarci sull’utilizzo della piattaforma piuttosto che sulla sua installazione.\nTi auguro buon studio e un grande in bocca al lupo nell'applicare quanto imparato nel tuo lavoro!",
      "target_audience": [
        "Sviluppatori",
        "DevOps",
        "Sviluppatori che rilasceranno applicativi su Kubernetes",
        "Sviluppatori che vogliono iniziare a preparare la certificazione CKAD"
      ]
    },
    {
      "title": "[SerTop] Algoritmos e Lógica - I",
      "url": "https://www.udemy.com/course/algoritmos-logica-programacao/",
      "bio": "Torne-se um programador de software, aprenda lógica, portugol, javascript, github e desafios no HackerRank.",
      "objectives": [
        "Os alunos serão capazes de ter um raciocínio lógico perante a problemas computacionais.",
        "Os alunos também serão capazes de escrever um algoritmo como forma de representar uma solução computacional.",
        "Conhecerão a ferramenta GIT para criar e gerenciar os repositórios de código fonte.",
        "VisualG ferramenta para escrever o portugol",
        "Visual Studio para escrever Javascript",
        "HackerRank para challenges"
      ],
      "course_content": {
        "Introdução": [
          "Bem vindo",
          "O que esperar deste curso",
          "Resultado final",
          "Dicas de carreira - API Developer",
          "Página Estía Training - Linkedin",
          "Dicas"
        ],
        "Conceitos básicos": [
          "O que é Algoritmo?",
          "Inferência lógica",
          "Princípio da dedução e indução",
          "Formas de representação de algoritmos",
          "O que é o Javascript?"
        ],
        "Estrutura principal dos algoritmos": [
          "Pseudocódigo e Portugol",
          "Instalação do Visual Studio",
          "Tipos de dados",
          "Variáveis",
          "Saída e Entrada de dados",
          "Utilização de Comentários",
          "Tipos de estruturas de controle"
        ],
        "Operadores e operações": [
          "Operações lógicas",
          "Operadores aritméticos",
          "Operadores relacionais",
          "Operadores de concatenação"
        ],
        "Estruturas de controle condicionais": [
          "Estrutura - SE e SENAO",
          "Estrutura - ESCOLHA"
        ],
        "Estrutura de controle de repetição": [
          "Estrutura - PARA",
          "Estrutura - ENQUANTO",
          "Estrutura - REPITA"
        ],
        "Desafios de Lógica": [
          "Repositório de código fonte",
          "Trabalhando com o GIT",
          "Aprofundando os conhecimentos no Github",
          "Conhecendo o HackerRank",
          "Desafio HackerRank 01",
          "Desafio HackerRank 02"
        ],
        "Conclusão": [
          "Próximos passos"
        ]
      },
      "requirements": [
        "Não é necessário nenhum pré-requisito.",
        "O curso vai utilizar a criação de algoritmo feito a mão"
      ],
      "description": "A proposta desse curso é fornecer aos alunos um treinamento hands-on para quem quer iniciar a sua carreira como um Programador de Software. Algoritmos e lógica de programação são matérias básicas para qualquer pessoa que queira iniciar nessa área, que é a área que mais tem ofertas de empregos disponíveis no mundo, com excelentes benefícios e ótimos salários.\nÉ um curso desenvolvido por um profissional com mais de 12 anos de experiência em desenvolvimento de software, que atualmente trabalha em uma multinacional em Dublin/Irlanda. Todo o conhecimento e experiência vão ser inseridos nesse curso.\nEsse curso foi pensado para QUALQUER UM que querem aprender a programar, mas se esbarram na quantidade de material para estudar que existe. É um curso que além de ensinar algoritmos e lógica, vai proporcionar aos alunos um contato com um profissional de vários anos de experiência, que vai ensinar o “caminho das pedras” para essa galera, evitar perder tempo e dinheiro em aprender coisas que não agregam nada para a sua carreira.\nAs aulas “Próximos passos” e “Challenges” são verdadeiras joias da coroa, que muita gente gostaria de ter aprendido, quando iniciou a sua carreira como programador. Sem dúvidas evita muita dor de cabeça no futuro.",
      "target_audience": [
        "Quem quer iniciar uma carreira como programador de software e aproveitar as oportunidades do mercado de desenvolvimento de software.",
        "Qualquer um que queira iniciar o aprendizado em lógica de programação."
      ]
    },
    {
      "title": "【한글자막】 Linux Command Line 부트캠프: 리눅스 초보자부터 고수까지",
      "url": "https://www.udemy.com/course/linux-command-line-colt/",
      "bio": "커맨드 라인 고급 사용자로 거듭나기! 이 코스에서 배우는 커맨드를 통해 컴퓨터와 상호 작용하는 방식을 변경하여 모든 새로운 워크플로우와 전략을 사용하고, 컴퓨터를 다루는 데에 있어 여러분의 파워를 키울 수 있습니다!",
      "objectives": [
        "수십 가지 커맨드와 커맨드 라인을 마스터하세요!",
        "제한된 그래픽 사용자 인터페이스에 의존하지 마세요",
        "나만의 커맨드, 처음부터 작성해보세요",
        "Cron을 사용하여 작업을 자동화하고 작업을 예약하세요",
        "커맨드 라인에서 컴퓨터를 완전히 제어해보세요",
        "파일 퍼미션의 단점을 마스터하세요",
        "효율성을 향상시키는 강력한 키보드 단축키를 배워보세요",
        "강력한 커맨드 파이프라인을 구축해보세요"
      ],
      "course_content": {},
      "requirements": [
        "사전 경험이 필요하지 않습니다",
        "Windows, Linux 또는 Mac 컴퓨터만 있으면 됩니다"
      ],
      "description": "리눅스 커맨드 라인 부트캠프!\n수십 개의 커맨드를 배우고 마스터하기!\n대화식 코스 : 연습과 프로젝트 포함!\n\n\n리눅스 Command Line 부트캠프: 초보자부터 고수까지 강의를 선택해야 하는 이유\n커맨드 라인 고급 사용자로 거듭나는 것을 목표로 하는 이 새로운 코스, 리눅스 커맨드 라인 부트캠프에 오신 여러분을 환영합니다!\n이 코스를 통해 수십 개의 강력한 커맨드(하단의 긴 목록 참조)를 배우지만, 그것보다 더 중요한 것은 새로운 커맨드를 계속 배우고 컴퓨터를 완전히 제어할 수 있는 도구를 제공합니다.\n이 코스에서 배우는 기술을 통해 여러분은 더 강력한 웹 개발자, 데이터 과학자, 기계 학습 엔지니어, 게임 개발자 또는 평범한 컴퓨터 사용자가 될 수 있습니다!\n\n\n기본 커맨드에 대한 경험이 있든 완전히 초심자이든 이 코스는 기술을 다음 단계로 끌어올리는 데 도움이 될 것입니다.\n커맨드 라인 학습은 웹 개발, 데이터 과학, 기계 학습 또는 기타 기술 분야 간의 일반적인 구분을 초월하는 드문 기술 중 하나입니다.\n매일 컴퓨터로 작업하는 경우 커맨드 라인을 마스터하면 도움이 됩니다. 이 코스에서 배우는 커맨드를 통해 컴퓨터와 상호 작용하는 방식을 변경하여 모든 새로운 워크플로우와 전략을 사용하고, 컴퓨터를 다루는 데에 있어 여러분의 파워를 키울 수 있습니다!\n더 중요한 것은, 이 코스를 통해 실제 세계와 직장에서 여러분을 기다리고 있는 모든 커맨드를 정복할 수 있는 준비를 마칠 수 있다는 점입니다.\n\n\n더욱 강력해진 여러분의 능력을 느끼세요!\n\n\n리눅스 Command Line 부트캠프 커리큘럼 간단히 보기\n이 코스는 다루는 내용이 많습니다. 다음은 핵심 사항에 대한 간략한 요약입니다. 더 자세한 설명을 보려면 아래로 스크롤하세요.\n수십 개의 강력한 커맨드 학습 (아래의 긴 목록 참조)\n큰 그림 이해하기: 모든 커맨드가 어떻게 함께 들어맞는지 이해하기\n여러 커맨드를 함께 연결하여 복잡한 데이터 파이프라인 구축하기\n커맨드 라인 탐색 및 리눅스 폴더 구조 마스터하기\n파일 및 폴더 생성, 삭제, 이동, 복사 및 이름 바꾸기\n유닉스 파일 퍼미션 해독 및 조작\nFind, locate 및 grep과 같은 강력한 검색 커맨드 사용하기\n표준 입력, 표준 출력 및 표준 오류의 리디렉션 마스터하기\n사용자 정의 커맨드를 처음부터 작성하기!\n쉘을 사용자 지정하기: 유용한 에일리어스를 작성하고 프롬프트를 조정하는 등의 작업을 수행하기\n배쉬 확장과 대체\ncron 및 cronjobs를 사용하여 지루한 작업을 자동화하기\nnano를 사용하여 커맨드 라인에 직접 파일 편집하기\n커맨드 라인의 효율성을 높이는 키보드 단축키 마스터하기\n\n\n리눅스 Command Line 부트캠프 강사 Colt Steele 의 한마디!\n안녕하세요, 제 이름은 Colt Steele입니다. 저는 수년간 대면 소프트웨어 엔지니어링 부트캠프를 이끌었으며 수천 명의 학생들이 직업을 바꾸도록 도왔습니다. 온라인에서는 백만 명이 넘는 학생들을 가르쳤고 수십만 개의 별 5개 등급과 리뷰를 가지고 있습니다.\n이 코스는 여러분이 배우는 기술을 연습하도록 독려하는 연습과 재미있는 도전으로 가득 찬 대화식 코스입니다. 여러분은 제 부트캠프 학생들이 경험하는 것과 동일한 과제 및 프로젝트를 접하게 될 것입니다. 커맨드를 계속해서 배우는 것은 끔찍할 정도로 지루한 경험일 수 있지만 이 코스를 가능한 한 흥미롭게 만들기 위해 최선을 다했습니다. :) 제 농담이 마음에 안 들지 모르겠지만 여러분은 결코 지루하지 않을 거에요!\n\n\n- Colt\nP.S. 강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n\n\n\n\n** 커리큘럼 세부 설명**\n이 코스는 터미널, 쉘, 커널, 유닉스, Unix-Like, GNU, 리눅스 및 배쉬와 같은 혼란스러운 기술 용어에 대한 심층 분석으로 시작합니다. 컨텍스트와 커맨드 라인 주변의 WHY, 그리고 오늘날에도 여전히 시스템에 영향을 미치는 그 역사를 이해하는 것이 중요합니다.\n그런 다음 일반적인 패턴과 옵션과 인수를 포함하여 모든 커맨드가 따르는 구조로 초점을 옮깁니다. 우리가 정의한 이 청사진은 나머지 코스에서 다루는 다른 모든 주제에 정보를 제공합니다. 또한 man, help, which 및 type 커맨드를 사용하여 특정 커맨드에 대해 자세히 알아보는 방법을 배우게 됩니다.\n다음으로 매우 중요한 리눅스 폴더 구조를 다루고 ls, pwd 및 cd를 포함하여 컴퓨터를 탐색하는 데 필요한 필수 커맨드를 배웁니다. 여러분은 곧 전문 내비게이터가 될 것입니다!\n여기에서는 touch, mkdir 및 file 커맨드를 사용하여 커맨드 라인에서 바로 새 파일과 폴더를 만드는 방법을 배웁니다.\n다음으로 Nano라는 커맨드 라인에 바로 내장된 특수 텍스트 편집기에 대해 자세히 알아보겠습니다. Nano를 사용하여 파일을 열고 편집하는 방법, 다양한 Nano 단축키를 익히고, Nano의 전역 설정을 구성하는 방법까지 배우게 됩니다.\n다음 섹션에서는 강력한 커맨드 rm, mv 및 cp를 다룹니다. 개별 파일과 전체 디렉토리를 제거하고, 파일을 이동하고 이름을 바꾸고, 커맨드 라인에서 바로 파일과 폴더를 복사하는 방법을 배우게 됩니다. 이것들은 여러분이 알 수 있는 가장 유용한 커맨드들 중 일부입니다!\n그런 다음 히스토리 커맨드 및 히스토리 확장에 대해 자세히 알아보기 전에 터미널 효율성을 개선하는 데 사용할 수 있는 유용한 키보드 단축키에 집중하기 위해 잠시 휴식을 취합니다.\n다음 섹션에서는 less, cat, tac, rev, head, tail, wc 및 sort를 포함하여 파일 내용 조작과 관련된 수많은 커맨드를 다룹니다. 그런 다음 표준 입력, 표준 출력 및 표준 오류의 세 가지 표준 스트림을 다룹니다. 세 가지 스트림을 모두 리디렉션하고 데이터를 완전히 제어하는 방법을 배우게 됩니다.\n다음으로 제 가장 좋아하는 주제인 파이핑으로 이동합니다! 이 섹션에서는 여러 개별 커맨드를 함께 연결하여 복잡하고 강력한 파이프라인을 구성하는 방법을 배웁니다. 또한 tr 커맨드와 tee 커맨드에 대해서도 배우게 됩니다. 거기에서 우리는 확장과 대체를 사용하여 쉘의 언어를 \"말하는\" 법을 배웁니다. 와일드카드 문자, 물결표 확장 및 강력한 중괄호 확장을 사용하는 경로 이름 확장의 모든 기능을 배웁니다. 그리고 산술 확장, 커맨드 대체, 작은따옴표와 큰따옴표도 다룹니다.\n다음으로 우리는 시스템에서 파일을 찾는 데 도움이 되는 두 가지 커맨드인 locate와 find에 대해 배웁니다. 우리는 find 커맨드와 많은 멋진 옵션 및 사용 사례에 특별한 주의를 기울입니다. 이름, 크기, 타임스탬프 등으로 파일을 찾는 방법을 배웁니다. 또한 find의 exec 옵션과 xargs 커맨드를 사용하여 파일을 bulk-edit 하는 방법을 배우게 됩니다.\n그런 다음 초점을 grep 커맨드로 이동합니다. grep을 사용하여 파일 내용을 재귀적으로 검색하고 정규 표현식을 사용하여 복잡한 파일을 일치시키는 방법을 배웁니다.\n다음으로 파일 퍼미션에 대한 세부 사항을 논의하는 데 시간을 할애합니다. 파일 속성을 읽고 읽기, 쓰기 및 실행 퍼미션을 이해하는 방법을 배우게 됩니다. 다음 섹션에서는 chmod, chown, sudo 및 su를 포함한 커맨드를 사용하여 퍼미션을 변경하는 방법을 배웁니다.\n다음 섹션에서는 쉘 환경을 사용자 지정하는 방법을 배웁니다. 사용자 지정 에일리어스를 작성하고, 쉘 변수를 사용하고, 멋진 프롬프트를 만드는 방법을 배우게 됩니다. 그런 다음 처음부터 우리 고유의 복잡한 커맨드를 만드는 방법과 배쉬 스크립팅의 기초를 배웁니다! 끝으로 여러분은 자신의 프로그램을 작성하고 실행하게 될 것입니다.\n마지막으로 신비한 cron 데몬에 대해 알아봅니다. 여러분은 마지막으로 자동화되고 예약된 cronjob을 설정하는 재밌는 cron 구문을 배우게 됩니다\n\n\n** 리눅스 Command Line 부트캠프 :커맨드 목록 **\ndate\ncal\nncal\necho\nman\nhelp\nwhich\ntype\nls\ncd\npwd\ntouch\nmkdir\nnano\nrm\nrmdir\nmv\ncp\ncat\nless\ntac\nrev\nhead tail\nwc\nsort\ntr\ntee\nlocate\ndu\nfind\ngrep\nxargs\nchmod\nsudo\nsu\nchown\naddgroup\nadduser\nexport\nsource\ncrontab\ntar",
      "target_audience": [
        "커맨드 라인 파워 유저가 되고 싶으신 분!",
        "컴퓨터를 완벽하게 제어하고 싶은 사용자",
        "웹 개발, 데이터 과락 또는 코드 관련 직업에 관심이 있는 모든 분!",
        "커맨드 라인 경험이 있지만 완전한 숙달을 원하는 분"
      ]
    },
    {
      "title": "Discord Message Deleted bot",
      "url": "https://www.udemy.com/course/discord-message-deleted-bot/",
      "bio": "Create a useful Discord bot for your server",
      "objectives": [],
      "course_content": {
        "Course Introduction & Software": [
          "Course introduction",
          "Instructor introduction"
        ],
        "Tools introduction + installation": [
          "Correct links",
          "Nodejs",
          "Visual Studio Code"
        ],
        "Bot Creation": [
          "Section objective",
          "A new Discord application",
          "Using a template",
          "Npm packages installation + coding",
          "Start and stop node server",
          "Writing functionality",
          "!help command",
          "Token Safety",
          "Regenerating the token (password)",
          "Websocket",
          "Reconnecting",
          "disconnect event",
          "Clean code",
          "Hosting the bot",
          "Hosting the bot issues",
          "Finishing up",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "A Discord account with Discord installed.",
        "A working pc."
      ],
      "description": "Hey there student!\nIn this course we're going to develop a Discord bot that detects when a message is deleted within your Discord server. This course is rather short which is great! This bot is very useful and easy to develop. This course is basically designed to teach you how to create a very useful Discord bot.\n\nWhy are Discord bots useful? Discord bots can do a lot for you, such as gathering advanced API data from ex Blizzard websites displaying character information in World of Warcraft. Or down to a simple feature that welcomes a new user to the Discord server. Or keeping track of when a user edits or deletes a message (not saving the data). Or keeping track of new users in your Discord server.\nWhy trust me?\nI've been developing different kinds of software including a lot of web development during my timespan as a developer. Creating complex functions with tons of security is my favorite. Creating outstanding code is my focus. I'm teaching you nodejs in this course which is the fastest language to use when it comes to Discord bots. I have 4 years of experience in programming and I've used different languages to build different type of software applications. When my first Discord bot course was released, I received a lot of positive feedback. Now I'm creating a short and sweet course for those who wants to develop a basic Discord bot.\n\nWhy this course?\n• You will be able to launch a very useful Discord bot.\n• You have lifetime access, and you will get new content for free.\n• Free of any charge.\n• Downloadable code so you can use my code for free.\n• 1080p HD videos.",
      "target_audience": [
        "Beginners software development",
        "Beginners data analysing",
        "Nodejs developers any level",
        "Software engineers",
        "Beginners",
        "Anyone",
        "Curious about software",
        "Curious about development",
        "Curious about programming"
      ]
    },
    {
      "title": "API Rest com Java e Spring Boot do iniciante ao especialista",
      "url": "https://www.udemy.com/course/crie-apis-rest-com-spring-boot-do-iniciante-ao-especialista/",
      "bio": "Nesse curso vamos criar uma aplicação Java Spring Boot, Docker, Tracing(Jaegar), monitoramento com Prometheus e Grafana",
      "objectives": [
        "Criar API´s Rest com Sprint Boot",
        "Criar um projeto Spring Boot com Spring Initializr",
        "Criação de vários containers, como Mysql, Jaeger, Prometheus e Grafana utilizando o docker-compose",
        "Versionamento do banco de dados e criação das tabelas com Flyway",
        "Mapeando entidades com JPA",
        "Validações com Bean Validation",
        "Tratamento de erros com Exception Handler",
        "Documentando API com swagger.",
        "Rastreamento da aplicação através de Tracing com Jaeger",
        "Expor métricas com Prometheus",
        "Criar dashboards das métricas expostas pelo Prometheus através do Grafana"
      ],
      "course_content": {
        "Introdução": [
          "Instalação Docker"
        ],
        "Criação do projeto, container Mysql no Docker , mapeando entidades": [
          "Criando container Docker para Mysql",
          "Criação do projeto",
          "Iniciando o projeto e configurando conexão com o banco de dados",
          "Flyway para criação das tabelas e versionamento do banco de dados",
          "Mapeando entidades com JPA"
        ],
        "Cadastrar categoria, validação com Bean Validation e Exception Handler, Swagger": [
          "Expondo API Rest para consultar categorias no banco de dados",
          "Salvando categoria no banco de dados",
          "Atualizando categoria no banco de dados",
          "Validações com Bean Validation",
          "Tratamento de exceções com Exception Handler",
          "Tratando Exceção ao atualizar uma categoria Inexistente",
          "downgrade Versão Spring Boot",
          "Documentando das API's com Swagger.",
          "Deletando categoria no banco de dados",
          "Tratando exceções de regra de negócio com Excepetion Handler",
          "Rastreamento da API´s com OpenTracing e Jaeger",
          "Rastreamento do JDBC no OpenTracing e Jeager"
        ],
        "Cadastrar produtos": [
          "Desafio - Expondo API's Rest para buscar produtos no banco de dados",
          "Solução do desafio - Expondo API's Rest para buscar produtos no banco de dados",
          "Salvando produto no banco de dados",
          "Tratando exceção de integridade de banco de dados com Exception Handler",
          "Validando produto já foi cadastrado e lançando exceção com Exception Handler",
          "Validações com Bean Validation",
          "Atualizando produto no bando de dados",
          "Refatorando salvar produto",
          "Deletando produto no banco de dados"
        ],
        "Trabalhando com objetos DTO (data transfer object)": [
          "Criando objeto Categoria Response DTO",
          "Criando Objeto Categoria Request DTO",
          "Criando objeto Produto Response DTO",
          "Criando Objeto Produto Request DTO",
          "Correção o retorno do método atualizar categoria utilizando Objeto Response DTO"
        ],
        "Coletando métricas com Prometheus e Grafana": [
          "Coletando métricas com Prometheus",
          "Criando Container do Prometheus no docker-compose",
          "Criando Container do Grafana no docker-compose",
          "Criando Dashboard no Grafana para analisar métricas.",
          "Criando Dashboard no Grafana parte 2",
          "Importando Dashboard completo do projeto no Grafana"
        ],
        "Cadastrar Clientes": [
          "Criando a tabela de Cliente utilizando Flyway",
          "Mapeando entidade cliente com JPA",
          "Exponde API´s Rest para consultar clientes no banco de dados",
          "Criando objeto Cliente Response DTO",
          "Salvando cliente no banco de dados",
          "Criando objeto Cliente Request DTO",
          "Validando cliente com Bean Validation",
          "Atualizando cliente",
          "Deletando Cliente no banco de dados",
          "Desafio - Criar dashboard para colher métricas de cliente no Grafana"
        ],
        "Registrar vendas": [
          "Criando a tabela de Vendas e ItemVendas utilizando Flyway",
          "Mapeando entidade Venda com JPA",
          "Criando objeto Venda Response DTO",
          "Exponde API´s Rest para consultar vendas no banco de dados - parte 1",
          "Exponde API´s Rest para consultar vendas no banco de dados - parte 2",
          "Exponde API´s Rest para consultar vendas no banco de dados - parte 3",
          "Refatorando a classe VendaServico com uma classe Abstrata",
          "Criando objeto Venda Request DTO",
          "Registrando uma venda no banco - parte 1/2",
          "Registrando uma venda no banco - parte 2/2",
          "Refatorando consulta itens por venda",
          "Validando venda com Bean Validation",
          "Refatorando classse vendaServiço para organizar Objetos DTO´s",
          "Validando quantidade produto existe em estoque ao registrar a venda",
          "Executando RollBack caso aconteça alguma exceção ao registrar uma venda",
          "Deletando Venda do banco de dados",
          "Atualizando Venda no banco de dados",
          "Desafio - Criar dashboard para colher métricas de vendas no Grafana"
        ],
        "Executando a aplicação pelo Docker": [
          "Criando a imagem da aplicação pelo Dockerfile",
          "Iniciando a aplicação pelo docker-compose. Parte 1/2",
          "Iniciando a aplicação pelo docker-compose. Parte 2/3",
          "Iniciando a aplicação pelo docker-compose. Parte 3/3",
          "Testando a aplicação após iniciá-la via Docker",
          "Corrigindo warning nos scripts de migração do Mysql"
        ]
      },
      "requirements": [
        "Conhecimento básico de programação Java e Rest"
      ],
      "description": "Bem vindo(a) ao curso de API Rest com Java e Spring Boot do iniciante ao especialista, está procurando um curso que te dará um crescimento exponencial para sua carreira como desenvolvedor de software, este é curso certo.\nIndependente da sua senioridade (iniciante ou especialista), você aprendera a desenvolver passo a passo uma aplicação completa Java com Sprint Boot.\nNesse curso abordarei o framework Spring utilizando a linguagem Java, será desenvolvimento um sistema de gerenciamento de vendas, será possível cadastrar produtos, clientes e registar vendas utilizando as melhoras práticas e ferramentas do mercado.\nSegue abaixo alguns tópicos que serão abordados no curso:\nDesenvolvimento com Spring Boot.\nCriação de Serviços REST seguindo os melhores padrões\nArquitetura de camadas (Controller, Service, Repository)\nCriação de vários contêineres como Mysql, Jaeger, Prometheus  e  Grafana utilizando o docker-compose\nEvolução do banco de dados com Flyway\nMapeando entidades com JPA\nValidações com Bean Validation\nTratamento de exceção com Excetipon Handler\nCriação de objetos DTO (Data Transfer Object)\nDocumentação da API's com Swagger\nRastreamento da aplicação através de Tracing com Jaeger\nExpor métricas com Prometheus\nCriar dashboards das métricas expostas pelo Prometheus através do Grafana\nHá algum requisito ou pré-requisito para o curso?\nConhecimento básico de programação Java\nConhecimento básico de REST\nDocker instalado\nInstalação Postman\nPara quem é este curso:\nDesenvolvedores Java",
      "target_audience": [
        "Desenvolvedores Java",
        "Spring Boot"
      ]
    },
    {
      "title": "C# HashTable Challenge: Solve These Problems",
      "url": "https://www.udemy.com/course/c-hashtable-challenge-solve-these-problems/",
      "bio": "Mastering the Art of Efficient Data Storage and Retrieval in C# with HashTables.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "HashTables are an essential data structure in computer science that enable efficient storage and retrieval of key-value pairs. In the context of C# programming, mastering HashTables is crucial for optimizing code performance and ensuring that applications can effectively manage large amounts of data.\nThis course on HashTables in C# is designed to provide learners with a comprehensive understanding of how to use HashTables effectively in their code. Through practical examples and coding exercises, you will learn the underlying concepts of hashing and HashTables, how to add, update, and remove items, and the best ways to search for and retrieve specific items based on key values. You will also explore advanced topics such as designing custom HashTable solutions for specific programming problems and using HashTables in real-world applications.\nTo take this course, you should have a basic understanding of programming concepts such as variables, data types, and control flow, as well as some familiarity with object-oriented programming and data structures such as lists and dictionaries. Additionally, you should have working knowledge of the C# language and experience with the Visual Studio development environment. By the end of the course, you will have developed a deep understanding of HashTables in C# and be able to apply this knowledge to a variety of programming projects.",
      "target_audience": [
        "This course is designed for those with some programming experience, but even beginners will find the course manageable. The course is designed to be accessible to anyone who is willing to put in the time and effort to learn the material."
      ]
    },
    {
      "title": "DevOps potencializa implantação de qualidade e agilidade",
      "url": "https://www.udemy.com/course/devops-acelera-implantacao-de-qualidade-e-potencializa-scrum/",
      "bio": "Aprenda com uma visão prática a diferença entre o ciclo tradicional, Ágil e DevOps",
      "objectives": [
        "Visão dos benefícios da jornada DevOps e sua ligação com Lean, Scrum e outros métodos ágeis",
        "Entender a diferença entre integração contínua, entrega contínua e implantação contínua",
        "Como o pipeline de implementação automatizado gera feedback rápido e reduz conflitos",
        "Conhecer a definição de pronto adaptada para DevOps com métodos ágeis"
      ],
      "course_content": {
        "Formato do módulo completo e curso introdutório": [
          "Esse curso é indicado para você ? Assista antes de fazer a inscrição"
        ],
        "Introdução à Jornada DevOps": [
          "Jornada DevOps - Parte 2",
          "Jornada DevOps - Parte 1"
        ],
        "Lean é a origem do mindset ágil": [
          "Linha do tempo Lean até DevOps",
          "Jornada Lean",
          "Gemba",
          "Corda de Andon",
          "Manifesto ágil",
          "infraestrutura ágil",
          "Melhoria contínua com Kata",
          "Kanban e WIP - Trabalho em andamento",
          "Débito técnico",
          "Fluxo de Valor",
          "Como tratar a dívida técnica do fluxo de valor"
        ],
        "Diferenças entre ciclo tradicional, ágil e DevOps": [
          "Ciclo tradicional ou preditivo",
          "Ciclo ágil ou adaptativo",
          "Benefícios do Ciclo DevOps",
          "Adaptar definição de pronto para DevOps",
          "Benefícios de equipe pequena",
          "Cultura justa aumenta colaboração e aprendizado"
        ],
        "Benefícios concretos com DevOps": [
          "Pesquisa mundial sobre adoção DevOps",
          "Benefício1 - Maior frequência de deploy",
          "Beneficio2 - Redução do Lead Time",
          "Beneficio3 - Redução do Downtime",
          "Beneficio4 - Redução do Tempo de recuperação"
        ],
        "Da integração contínua ao pipeline de implementação": [
          "Visão macro da Integração Contínua",
          "Visão macro da Entrega Contínua",
          "Visão macro da implantação Contínua",
          "Ligação da Integração, Entrega e Implantação Contínua",
          "Pipeline de implantação - CONCEITO",
          "Mudanças se movendo no Pipeline de implementação",
          "Release de baixo risco acelera implantações de qualidade"
        ]
      },
      "requirements": [
        "Desejável conhecimento básico sobre tecnologia ou administração"
      ],
      "description": "Os métodos ágeis possibilitam uma grande aproximação das equipes de negócio e desenvolvimento, mas muitas organizações ainda sofrem com a falta de uma definição de pronto que garanta a implantação em produção e feedback contínuo do cliente. O DevOps ajuda a fechar essa lacuna colocando a equipe de Operações nesse jogo.\nO objetivo dessa videoaula é fazer uma introdução básica ao DevOps e apresentar a ligação dessa jornada com o uso dos métodos ágeis, como Scrum, Kanban e Lean.  Todos que se inscreverem nesse curso terão desconto diferenciado na videoaula COMPLETA aqui da Udemy (\"Capacitação DevOps e Certificação oficial EXIN Profissional\" com 43,5 h) e basta me passar mensagem no LinkedIn: Muniz Antonio I ou Muniz Antonio II\nIMPORTANTE: Esse curso não é necessário caso você já tenha inscrição na videoaula\"Capacitação DevOps e Certificação oficial EXIN Profissional\", pois todo seu conteúdo está incluso nessa capacitação completa de 43,5h.\nO mercado tem falado bastante das iniciativas DevOps como um dos fundamentos para a transformação digital e seu sucesso depende diretamente de equipes multidisciplinares em uma cultura colaborativa e automação.\nAntes de finalizar a compra, sugiro assistir às aulas demostrativas para confirmar se você gosta do formato das aulas.",
      "target_audience": [
        "Profissionais e estudantes com interesse em DevOps, Lean e métodos ágeis"
      ]
    },
    {
      "title": "Analyse et conception de Système d’Information (MERISE & co)",
      "url": "https://www.udemy.com/course/analyse-et-conception-de-systeme-dinformation-merise-co/",
      "bio": "Apprenez à analyser et concevoir des logiciels informatiques en utilisant des modèles de MERISE",
      "objectives": [
        "Comprendre le besoin de son client",
        "Analyser et concevoir des logiciels",
        "Modéliser le système d’information",
        "Réaliser une analyse des données (MERISE)",
        "Réaliser une analyse des traitements (MERISE)",
        "Créer le diagramme des cas d'utilisations (UML)"
      ],
      "course_content": {
        "Introduction": [
          "Présentation du cours",
          "Qui suis-je ?",
          "Le parcours de formation",
          "Conseils pour suivre la formation"
        ],
        "Contexte du cours": [
          "Le contexte",
          "L'informatique, qu'est ce que c'est ?",
          "L'informatique de gestion (ou du logiciel) c'est quoi ?",
          "Contenu d'un logiciel",
          "Les étapes de la création d'un logiciel",
          "Les cycles de vie",
          "Les méthodes d'analyse et de conception"
        ],
        "Recueil du besoin": [
          "Le projet",
          "Recueil du besoin - Etape 1",
          "Recueil du besoin - Etape 2"
        ],
        "Diagramme des cas d'utilisations": [
          "Le diagramme - Etape 1",
          "Le diagramme - Etape 2"
        ],
        "Maquettage": [
          "Les maquettes - étape 1",
          "Les maquettes - étape 2"
        ],
        "Analyse des données": [
          "Introduction à l'analyse des données",
          "MCD - CIF",
          "MCD - CIM",
          "MCD - Réflexivité",
          "Dictionnaire des données",
          "MLD & MPD"
        ],
        "Analyse des données du projet": [
          "Dictionnaire des données et Entités",
          "MCD",
          "MLD",
          "Un outil pour créer une base de données MySQL",
          "Installation de XAMPP",
          "Création de la BD (PhpMyAdmin) + MPD"
        ],
        "Analyse des traitements": [
          "MCT",
          "MOT",
          "Le MOT du projet"
        ]
      },
      "requirements": [
        "Aucun"
      ],
      "description": "Apprenez à analyser et concevoir des logiciels informatiques !\nDans ce cours, vous sont présentées des techniques permettant de comprendre, analyser et concevoir le besoin de votre client.\nL'objectif est de vous montrer comment modéliser un logiciel informatique.\nLe cours s'articule autour de 3 thèmes :\nComprendre le besoin de son client\nAnalyser et concevoir des logiciels\nModéliser le système d’information\nLe projet sur lequel nous allons travailler est un gestionnaire de bulletins de salaire.\n\n\nDe nombreux modèles et techniques sont abordés :\nDiagramme des cas d’utilisation (méthodologie UML)\nModèles de données MCD, MLD, MPD, Dictionnaire de données (méthodologie MERISE)\nModèles de traitement MCT, MOT (méthodologie MERISE)\nMaquettage\nCréation d’une base de données dans PHPMyAdmin\n\n\nMerci et bonne formation !\nMatthieu de H2PROG",
      "target_audience": [
        "Débutant en développement informatique",
        "Reconversion professionnelle",
        "Etudiants ou futurs étudiants en informatique"
      ]
    },
    {
      "title": "Arduino Bootcamp: Learn Coding with Hands-On Projects | 2025",
      "url": "https://www.udemy.com/course/arduino-bootcamp-for-beginners/",
      "bio": "\"Unlock the World of Electronics with Arduino! Learn the Basics, Build Exciting Projects, and Ignite your Creativity.",
      "objectives": [
        "Understand the basics of Arduino and how it works.",
        "Learn how to write and upload Arduino sketches (programs).",
        "Explore different electronic components and their usage in Arduino projects.",
        "Build practical circuits and prototypes using Arduino.",
        "Develop projects with sensors and actuators for automation and control."
      ],
      "course_content": {
        "Course Content": [
          "Module-1: Introduction to Arduino",
          "Module-2: Getting started with Arduino",
          "Module-3: Arduino Pinout Diagram",
          "Module-4: Blink Program",
          "Module-5: Read and Write Function",
          "Module-6: Serial Monitor",
          "Module-7: Declaration and Uses of Variables in Arduino",
          "Module-8: Loops in Arduino",
          "Module-9: Conditional Statements",
          "Module-10: Communication Protocols"
        ],
        "Arduino Projects": [
          "Project-1 : RGB LED Color Mixing with Arduino",
          "Project-2: Motion sensing using Arduino",
          "Project-3 : Soil Irrigation System Using Arduino",
          "Projects : Test and Run"
        ],
        "About Us": [
          "Must Watch"
        ]
      },
      "requirements": [
        "This course is open to everyone, even if you don't have any previous experience. It's crafted for undergraduates to build a strong foundation and for postgraduates to review important concepts."
      ],
      "description": "Our Course Arduino programming is specially design for beginners who are willing to explore the fascinating world of Arduino, an open-source electronics platform based on easy-to-use hardware and software. It will also help you to learning through projects and who want get depth knowledge of ATmega microcontroller, digital and analog Input Output pins, USB interface, PWM support, and compatible Arduino IDE for programming.\nThroughout this course, you will learn the basics of Arduino programming and circuitry step by step. Even if you have no prior experience with electronics or coding, don't worry! Our expert instructors will guide you from the very beginning. This Arduino programming course is focused on In-depth introduction, pinout detailed diagram, how to use serial monitor, loop concepts, Conditional statements, communication protocols and opportunity to work on real simulator-based projects.\nAfter Completion this Arduino programming course you will confident enough to implementing your ideas to real projects by creating them from scratch and become expert to work on industry standard projects and creating your own application-based product to solve real life problems. You will also be able to apply your knowledge to automate tasks, build interactive installations, design smart devices, and much more. Join us on this exciting journey into the world of Arduino! Enroll now and unlock your creativity with the power of Arduino.",
      "target_audience": [
        "This course is designed for individuals seeking to enhance their understanding of innovation, regardless of background or profession. All curious minds eager to explore and contribute are welcome."
      ]
    },
    {
      "title": "UML - Guia Básico para Análise e Projeto de Sistemas",
      "url": "https://www.udemy.com/course/diagramas-uml-analise-e-projeto-de-sistemas/",
      "bio": "Aprenda a estruturar projetos de software utilizando diagramas UML",
      "objectives": [
        "Entender e saber trabalhar com os principais diagramas UML.",
        "Aprender a trabalhar com a ferramenta ArgoUML.",
        "Analisar e criar projetos de software fazendo uso dos recursos oferecidos pela UML."
      ],
      "course_content": {
        "INTRODUÇÃO": [
          "O que é UML?",
          "O que é um modelo? Por que modelar?",
          "Teste 01"
        ],
        "DIAGRAMAS UML": [
          "Introdução aos diagramas",
          "Utilização dos diagramas",
          "Teste 02"
        ],
        "DIAGRAMA DE CASO DE USO": [
          "O diagrama de caso de uso",
          "Relacionamentos entre casos de uso",
          "Colaboração entre casos de uso",
          "Projeto - Criando um diagrama de caso de uso",
          "Teste 03-A",
          "Teste 03-B"
        ],
        "DIAGRAMA DE CLASSES": [
          "O diagrama de classes",
          "Classe",
          "Herança",
          "Associação entre classes",
          "Classes associativas",
          "Agregação e Composição",
          "Dependência entre classes",
          "Projeto - Criando um diagrama de classes",
          "Teste 04-A",
          "Teste 04-B"
        ],
        "DIAGRAMA DE PACOTES": [
          "O diagrama de pacotes"
        ],
        "DIAGRAMA DE ATIVIDADES": [
          "O diagrama de atividades",
          "Projeto - Criando um diagrama de atividades",
          "Teste 05"
        ],
        "DIAGRAMAS DE INTERAÇÃO": [
          "Os diagramas de interação"
        ],
        "DIAGRAMA DE SEQUÊNCIA": [
          "O diagrama de sequência",
          "Notação dos objetos",
          "Notação das mensagens",
          "Estereótipos",
          "Projeto - Criando um diagrama de sequência",
          "Teste 06-A",
          "Teste 06-B"
        ],
        "DIAGRAMA DE COMUNICAÇÃO": [
          "Projeto - Criando um diagrama de comunicação",
          "Teste 07"
        ],
        "DIAGRAMA DE MÁQUINA DE ESTADOS": [
          "O diagrama de máquina de estados",
          "Estado e atividades internas",
          "Notações",
          "Projeto - Criando um diagrama de máquina de estados",
          "Teste 08"
        ]
      },
      "requirements": [
        "Teoricamente nenhum pré-requisito é necessário para fazer este curso, contudo o aprendizado irá evoluir mais facilmente se você já tiver tido contato com alguma linguagem de programação antes. Tudo que você precisa para começar a trabalhar com UML está incluso neste curso, e as ferramentas utilizadas são gratuitas."
      ],
      "description": "Neste curso você aprenderá os fundamentos e a importância da UML na elaboração de projetos de softwares, seja qual for a dimensão do sistema a ser construído. Essencialmente, você aprenderá a trabalhar com os principais diagramas UML, tais como diagrama de casos de uso, de classe, de sequência, de atividades e muitos outros utilizando ferramentas case.\nAssim como para se construir uma casa ou um prédio de qualidade, é essencial criar modelos das formas desejadas e realizar um planejamento detalhado, afim de estimar tempo, mão-de-obra, materiais e gastos. No desenvolvimento de softwares é a mesma coisa, pois também se trata de uma questão que envolve pessoas, ferramentas, tempo, dinheiro e outras variáveis.\nPor esses fatores, A UML é largamente utilizada no âmbito da engenharia de software, análise de sistema e entre outras áreas de TI para visualizar, especificar, construir e documentar projetos de softwares, fornecendo meios para auxiliar no levantamento dos requisitos que irão constituir um sistema, além de recursos para a modelagem de estruturas que farão parte do mesmo.\nA UML é uma linguagem padrão de grande aceitação pelo mercado de trabalhado.Pode-se dizer que quase a totalidade das ofertas de emprego para analista / programador, arquiteto, engenheiro de software entre outras, é imprescindível conhecimentos em UML.\nComece hoje mesmo a aprender UML e a conquistar o mercado de trabalho. Se você já possui conhecimento ou trabalha com diagramas UML, então esta é uma boa oportunidade para você fixar conceitos e melhorar suas habilidades.",
      "target_audience": [
        "Se você é um profissional ou estudante de algum curso na área de TI ou de gestão de projetos, então este curso é para você!",
        "Aqueles que desejam aprender os diagramas UML e a trabalhar com ferramentas CASE para análise, criação e gestão de projetos de software."
      ]
    },
    {
      "title": "Mastering Impediment Resolution in Agile Development",
      "url": "https://www.udemy.com/course/mastering-impediment-resolution-in-agile/",
      "bio": "Practical Strategies, Team Empowerment, and Continuous Improvement",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "A basic understanding of Agile principles, such as Scrum, is recommended. Some experience working within a team, especially in a project management or development context, will be beneficial. Learners should be open to engaging with new concepts and practices to enhance team efficiency and productivity. No special tools or equipment are required; all course materials and examples will be provided."
      ],
      "description": "Welcome to \"Mastering Impediment Resolution in Agile Development: Practical Strategies, Team Empowerment, and Continuous Improvement.\" This comprehensive course is designed to equip Scrum Masters, Agile Coaches, Product Owners, and team leaders with the skills and strategies needed to effectively identify, manage, and resolve impediments within Agile product development environments.\nCourse Outline:\nIntroduction:\nStart your journey by understanding the importance of mastering impediment resolution and what you can expect to gain from this course.\nWhy:\nExplore the reasons behind the critical need for efficient impediment resolution in Agile development and its impact on team performance and project success.\nDefinitions:\nGain a clear understanding of key terms and concepts related to impediments, blockers, and improvements in an Agile context.\nScrum:\nDelve into the role of Scrum in managing impediments, and learn how the Scrum framework supports continuous improvement and efficient workflow.\nStep-By-Step:\nLearn a systematic approach to logging, prioritizing, and tackling impediments to maintain momentum and ensure smooth project progression.\nMaturity Part 1:\nDiscover the initial stages of developing a mature impediment resolution process, focusing on building foundational practices and team capabilities.\nMaturity Part 2:\nAdvance to higher levels of maturity by integrating sophisticated strategies, fostering team autonomy, and leveraging organizational support.\nMeasurement:\nUnderstand how to measure the success of your impediment resolution efforts using both quantitative and qualitative indicators to continuously refine your approach.\nBeginners:\nFind practical tips and advice specifically tailored for new Scrum Masters and Agile practitioners who are starting to navigate impediment resolution.\nChallenges and Solutions:\nExplore common challenges encountered in Agile environments and practical solutions to overcome these obstacles effectively.\nBy the end of this course, you will have a robust toolkit of strategies and insights to proactively manage and resolve impediments, fostering a culture of continuous improvement and driving your Agile team towards greater efficiency and success. Whether you are new to Agile or looking to enhance your existing skills, this course will provide valuable knowledge and practical applications to elevate your team's performance. Join us and become a master of impediment resolution in Agile development!",
      "target_audience": [
        "This course is designed for Scrum Masters, Agile Coaches, Product Owners, and team leaders who are looking to enhance their skills in identifying and resolving impediments within Agile product development. It is also valuable for project managers and team members who work in Agile environments and want to contribute to a more efficient and productive workflow. Whether you are new to Agile practices or have some experience, this course will provide you with practical strategies and insights to effectively manage and overcome obstacles, fostering continuous improvement and team success."
      ]
    },
    {
      "title": "programming bitcoin elliptic curve",
      "url": "https://www.udemy.com/course/programming-bitcoin-elliptic-curve/",
      "bio": "Using golang to implement the elliptic curve which is the mathematical base for bitcoin to work",
      "objectives": [],
      "course_content": {
        "Implementation of bitcoin elliptic curve": [
          "Introduction to elliptic curve",
          "Implement points on the elliptic curve",
          "Check whether a given point on elliptic curve or not",
          "Introduce to addition for points on elliptic curve",
          "Point addition with identity",
          "Derivation for points addition on elliptic curve",
          "Implementation of points addition on elliptic curve",
          "Implementation for point adding itself on elliptic curve"
        ]
      },
      "requirements": [
        "one year golang experience",
        "high school math background"
      ],
      "description": "Welcome to the ultimate journey into the heart of Bitcoin development! In this comprehensive course, you will delve deep into the world of blockchain technology and cryptocurrency by harnessing the power of Go programming language.\nBitcoin, the revolutionary digital currency, has captured the imagination of developers worldwide. Now, it's your turn to join the ranks of elite blockchain engineers by mastering every aspect of Bitcoin development with Go.\nWhat You'll Learn:\nElliptic Curve Cryptography: Understand the mathematics behind Bitcoin's security model and implement it using Go\n\n\nWhy This Course?\nHands-On Learning: Get your hands dirty with real-world coding exercises and projects designed to reinforce your understanding of Bitcoin development.\nExpert Instruction: Learn from an experienced Bitcoin developer and product manager with years of industry experience.\nCareer Advancement: Unlock new career opportunities as a blockchain developer or engineer with in-depth knowledge of Bitcoin development.\nLifetime Access: Enjoy all time access to all course materials such as codes, articles.\nWho Is This Course For?\nSoftware developers interested in blockchain technology.\nCryptocurrency enthusiasts eager to understand the inner workings of Bitcoin.\nProduct managers looking to deepen their knowledge of blockchain technology.\nPrerequisites:\nBasic knowledge of Go programming language.\nFamiliarity with cryptographic concepts is helpful but not required.",
      "target_audience": [
        "software Developers Interested in Blockchain Technology",
        "Cryptocurrency Enthusiasts"
      ]
    },
    {
      "title": "Solana in C# .NET: Getting started and making payments",
      "url": "https://www.udemy.com/course/solana-in-csharp/",
      "bio": "Dealing with Solana using C# (Solnet)",
      "objectives": [
        "Interact with Solana native programs using C#",
        "Access solana RPC using c#",
        "Use solnet in C# to create and send solana transactions",
        "Decode solana transaction instruction"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic interactions and environment set up": [
          "Getting started with RPC interactions (Get balance)"
        ],
        "Transactions": [
          "Create and send transaction",
          "Transfer SOL",
          "Decode transaction"
        ],
        "Custom programs": [
          "Handling custom programs part 1",
          "Handling custom program part 2"
        ],
        "Payments": [
          "QR Code scan pay (part 1)",
          "QR Code scan pay (part 2)"
        ],
        "Final tests": [
          "Final test"
        ]
      },
      "requirements": [
        "Basic understanding of solana blockchain",
        "Good understanding of C#"
      ],
      "description": "Welcome to Solana in C# course, in it you will learn to interact with Solana network using C# and solnet library. This is great for C# developers who need or want to implement payments in SOL or interact with it in other ways, as well as developers who want to start building decentralized apps using C#.\n\n\nYou will begin with learning basic set up of the libraries, establishing RPC client and retrieving basic data like balances from the network.\n\n\nOnce the basics are covered, you will get into transaction set up, sending transactions and handling results. This will include creating transaction structure – setting payer, getting blockhashes, handling signatures, and then adding instructions. This will also include making SOL transfers and dealing with fees.\n\n\nWith all the general interactions, the course will cover more advanced topics like handling your custom programs – serializing/deserializing data, creating transactions and more. This will also include handling data retrieved from storage accounts.\n\n\nThe course will also cover scan and pay feature that solana mobile wallets offer. You will learn how to set up qr url, get all the necessary data for it. And then checking and verifying that the transaction went through and getting all the details from it.",
      "target_audience": [
        "C# developers who want to interact with solana blockchain"
      ]
    },
    {
      "title": "Build an AI-Powered PDF Chatbot: React, Azure & OpenAI",
      "url": "https://www.udemy.com/course/build-an-ai-powered-pdf-chatbot-react-azure-openai/",
      "bio": "Usage of Next.JS, Azure Blob Storage, Azure Document Intelligence and OpenAI GPT-4o-mini",
      "objectives": [
        "Build and Debug a ReactJS web application with invoking APIs",
        "Integrate Azure Blob Storage to store and retrieve PDF files",
        "Use Azure Document Intelligence Service to extract text from PDFs",
        "Leverage OpenAI API to generate answers based on extracted content"
      ],
      "course_content": {
        "Introduction": [
          "Use case and Demo",
          "How it works?",
          "What Will You Learn in This Course"
        ],
        "Compare the PDF Q&A AI Project with a default ReactJS Project": [
          "Introduction",
          "Download the ReactJS Project",
          "Install VS Code and NodeJS",
          "Add necessary packages to the project",
          "[macOS] Create a ReactJS project from scratch",
          "Compare the Project using BeyondCompare"
        ],
        "PDF Q&A: Run the AI project": [
          "Introduction",
          "Set SAS Azure Storage Connection String in the React project",
          "Set Azure Document Intelligence Endpoint",
          "Set Azure Document Intelligence Key",
          "Set OpenAI API Key",
          "Run the Project, Upload a pdf and get answers to questions"
        ],
        "Data flow: Upload Pdf File to Azure blog storage and extract it": [
          "Introduction",
          "Upload and Extract Pdf File"
        ],
        "Data flow: Question and Answer based on PDF data: Usage of OpenAI API": [
          "Introduction",
          "Submitting a Question and Invoke the OpenAI API"
        ],
        "Summary": [
          "Summary",
          "Outlook"
        ],
        "Exercise": [
          "What are used in this course to persistent the pdf file?",
          "What are used in this course to get the content of the pdf file?",
          "What AI are used in this course to provide answer to end user?"
        ]
      },
      "requirements": [
        "Eager to Learn & Explore Coding and AI"
      ],
      "description": "Want to build an AI-powered chatbot that can analyze and answer questions based on PDF content?\nIn this hands-on course, you’ll learn how to create a full-stack PDF Q&A chatbot using React, Azure Blob Storage, and OpenAI API (GPT-4o-mini).\nWhat You’ll Learn\nSet up and launch a ReactJS project (Next.js) with Q&A Interface and configure essential packages\nUpload PDFs and store them in Azure Blob Storage\nExtract content from PDFs using Azure Intelligent Document Service\nIntegrate OpenAI API to process and answer user questions\nHandle state management in React to optimize chatbot interactions\nWho Is This Course For?\nDevelopers looking to integrate AI-powered document processing\nBeginners eager to explore ReactJS, Azure, and OpenAI APIs\nTech enthusiasts interested in building smart chatbot applications\nWhy Take This Course?\nStep-by-step guidance with real-world implementation\nNo prior AI experience required—everything is explained in detail\nPractical project you can customize and expand\nBy the end of this course, you’ll have a fully functional AI chatbot that can analyze PDF documents and provide intelligent answers.\nEnroll now and start building your AI-powered chatbot today!\n\n\nMain Sections\nSection 1: Introduction\nSection 2: Compare the PDF Q&A AI Project with a default ReactJS Project\nSection 3: PDF Q&A: Run the AI project Lecture\nSection 4: Data flow: Upload Pdf File to Azure blog storage and extract it\nSection 5: Data flow: Question and Answer based on PDF data: Usage of OpenAI API\nSection 6: Exercise",
      "target_audience": [
        "Developers looking to integrate AI-powered document processing",
        "Beginners eager to explore ReactJS, Azure, and OpenAI APIs",
        "Tech enthusiasts interested in building smart chatbot applications"
      ]
    },
    {
      "title": "Is Coding For You - Computer Basics Introduction",
      "url": "https://www.udemy.com/course/is-coding-for-you/",
      "bio": "Find Out if Technology and Programming Fit You First—Before Committing to Python, Java, C#, or Any Other Course",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to course",
          "Mastering Udemy Features: How to Make the Most of This Course"
        ],
        "Welcome to the Technology World!": [
          "Technology overview in daily life",
          "Companies, Founders, and Career & Salaries Opportunities",
          "Programming as the basis for Technology - How do I fit?",
          "Your First Check-In: What Did You Discover?"
        ],
        "Programming Fundamentals": [
          "An Introduction to Programming - Developer & User",
          "Understanding the Computer as a Command Unit",
          "Understanding Your Computer and Its Components",
          "Programming Languages",
          "Think & Reflect: Programming Fundamentals"
        ],
        "Output and Variables": [
          "Code & Instructions - Printing to Display",
          "Introduction to variables",
          "Variables and Boxes Analogy",
          "How variables are used [Average Examples]",
          "Data Types",
          "Various Usages of Variables_ Summary",
          "Variables in Action: Understanding the Basics"
        ],
        "Conditions & Control Flow": [
          "Introduction to Conditions",
          "Failed_Passed Grade Checker",
          "Control Flow - Relational Operators",
          "Introduction to Logical Operators",
          "Various Usages of Conditions & Summary",
          "If This, Then What? Mastering Conditional Statements"
        ],
        "Loops - Again & Again": [
          "Loops Introduction",
          "While & For Loops",
          "Loops - Summary",
          "Think & Repeat: Understanding Loops"
        ],
        "Myths in the Tech World": [
          "Myths You Must Know"
        ],
        "Summary - What's next": [
          "Course Summary - What's next?"
        ],
        "Congratulations! You've made it! What's next?": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming experience needed! This course is designed for absolute beginners, so you’ll learn everything from scratch.",
        "No technical background required. We start with the basics and keep it simple, making tech approachable for anyone.",
        "Only computer basics with internet access—no special software, tools, or fancy equipment needed.",
        "An open mind and a dash of curiosity! Perfect for anyone who wants to explore programming without any pressure or commitment."
      ],
      "description": "Unlock Your Future in Tech: Discover If Coding Is Right For You—before making a big life decision, and without:\nPaying thousands of dollars on courses and degrees\nCommitting to years of study\nAnd, most importantly, without needing any prior knowledge or experience\nCan you relate?\n\n\"Go study, invest time and money, just to realize it isn’t for you...\"\nOr maybe you’ve been told, “You should get a degree. It’s what you’re supposed to do.”\nIf you’re feeling...\nAt a crossroads, unsure of which path to take\nPressured by family or society to “choose a career path”\nCurious if you have what it takes to succeed in tech fields like Web Development, Data Science, or Cybersecurity\nIntimidated just from the names of programming languages like Python, Java, C++, or JavaScript?\nAnd wondering if tech is right for you…\nYou’re not alone.\n\n\nI see so many people enrolling in expensive courses or degrees, investing (and “kind of wasting”) the best years of their lives - only to realize that the tech world isn’t for them. They end up frustrated and quit before they even complete the course.\nI don’t want you to become one of them.\n\n\nMy Journey, Your Advantage:\nWhen people think of programming, they often picture a “tech genius” solving math problems and writing code since age 3. But here’s the truth: you don’t need to be a math wizard or lifelong coder to succeed in tech. I myself started far from this path, working in different fields like fitness and waitressing before discovering my passion for technology.\nWhen I first started, I was lost, struggling to understand complicated lectures, and I almost dropped out. Through trial and error, I found a way to simplify the learning process, creating summaries as if I was explaining complex concepts to a 6-year-old. I started writing descriptions in simple words, drawing out processes, and connecting technical topics to real-life situations.\nOnce I mastered this approach I earned top degrees in Computer Science and Electronic Engineering and actually worked for leading companies and startups!\n\n\nWhy this course?\nHaving been through this journey myself, I felt a higher calling to help students overcome common struggles in the tech world. So I took everything I learned and designed the most detailed learning journey giving you a simple taste of the tech world using clear and simple visualizations and animations.\nAfter teaching over 100,000 students worldwide, with this one-of-a-kind teaching system, built on techniques I developed over years, my goal is to help you remove all doubts about what you should do next.\nYou’ll experience learning like never before and discover how “scary tech topics” can actually become fun, exciting, and—most importantly—something you enjoy!\n\n\nWhat You'll Learn\n\n\n1. The Role of Technology in Daily Life\nTech Ubiquity: Understand how technology shapes our world.\nInnovators' Stories: Get inspired by the journeys of tech pioneers like Bill Gates, Steve Jobs, and Elon Musk.\nImpact on Society: See how programming drives innovation in healthcare, education, finance, and more.\n\n\n2. Programming Fundamentals\nMindset Shift: Transition from a user to a creator.\nComputers Demystified: Learn how computers process information.\nLanguages Overview: Introduction to Programming Languages that you can later master such as Python, Java, C++, and their real-world uses.\n\n\n3. Coding Fundamentals Every Programmer Knows\nThinking like a Programmer: Simple practice to build confidence.\nUnderstanding Variables and Data Types: The building blocks of programming.\nControl Flow & Conditions: How to make your programs think.\nLoops & Iterations: How to repeat processes as the basis for Automation.\n\n\n4. Busting Myths About Programming\n\"Coding is Only for Geniuses\": Debunking this and other common misconceptions.\n\"You Need to Be Good at Math\": Explaining why logic and problem-solving are more important.\n\n\n5. Planning Your Path Forward\nNext Steps: Discussing possible next steps\nCareer Opportunities: Insight into job roles, salaries, and industry demand.\nAnd so much more..!\n\n\nWith \"The Ultimate Beginner’s Guide: Decide if Coding is for You!\" you’ll explore if programming and technology are right for you without making big commitments or taking on huge costs. You don’t need any prior knowledge; this course is designed to give you a real, no-pressure look into what the world of coding is all about.\nToday, this method has become the foundation of my teaching. I want you to enjoy the journey, learn practical skills, and feel motivated rather than frustrated. I’ve designed this course to give you everything you need to see if tech feels like a good fit for you—without the unnecessary struggle.\nSo if you’re curious about technology and programming but unsure where to begin or if you’re wondering if coding could be a good fit for you before diving into intensive courses on Python, Java, or C# - then this course is absolutely for you!\n\n\n\n\nFrequently Asked Questions\nQ: Do I need any prior experience to enroll?\nA: Not at all! This course is designed specifically for beginners with no prior coding experience.\n\n\nQ: Is the course really free?\nA: Yes, absolutely free with full access to all course materials.\n\n\nQ: What if I have a busy schedule?\nA: The course is self-paced and only takes a few hours to complete. You can fit it into your schedule whenever it suits you.\n\n\nQ: Will I learn actual programming languages?\nA: You’ll be introduced to general programming concepts applicable to languages like Python, Java, C++, and more.\n\n\nQ: What equipment do I need?\nA: Just a computer with an internet connection.\n\n\nQ: What if I decide programming isn't for me after the course?\nA: That's perfectly fine! The course is designed to help you make an informed decision without any commitments.\n\n\nTake the First Step Towards Your Future\nDon't Miss This Opportunity!\nYour future in technology starts now.\nEnroll now and Begin Your Transformation Today!",
      "target_audience": [
        "Curious explorers ready to dive into the tech world—no experience required! Perfect for those with a spark of interest in programming who are looking to see if it could be their thing.",
        "Career changers and students at a crossroads, eager to see if fields like Web Development, Data Science, or Cybersecurity might be their next big move.",
        "Anyone who’s ever felt pressured to “pick a path” but isn’t ready to commit to pricey courses or degrees. This course lets you test the waters without any strings attached.",
        "People who think coding is for “math geniuses” or lifelong tech nerds—this course shatters that myth and makes programming accessible, fun, and practical.",
        "Ambitious self-starters and lifelong learners who are curious about what makes the digital world tick and want a hands-on, no-risk intro to the basics of coding."
      ]
    },
    {
      "title": "Become a Senior Developer",
      "url": "https://www.udemy.com/course/become-a-senior-developer/",
      "bio": "What success looks like for the role of Senior Developer, and how you can upskill to get there",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to this Course and your Instructor"
        ],
        "Role Context": [
          "Responsibilities of a Senior Developer",
          "Characteristics of a Successful Senior Developer"
        ],
        "Upskilling for the Role": [
          "Task Management and Delivery",
          "Leadership in Small teams",
          "Communication",
          "Staying current with new innovations and trends"
        ],
        "Outro": [
          "Summary"
        ]
      },
      "requirements": [
        "It's assumed you are a mid-level developer, with some years experience and at least 2-3 major projects completed."
      ],
      "description": "While technical excellence is a must to become a Senior Developer, there are several other aspects of the role, such as Leadership, Communication and Task Management that often are overlooked. An inability to demonstrate these skills in your work and profile can mean either:\n\nNot getting promoted to Senior Level, or\nNot excelling in the role, if you do manage to obtain it\nWe'll explore these essential skills and the mindset required to succeed in this role. Through a series of short modules, we'll jump into these topics and also cover other essential pieces of the role; such as navigating conflict, communication with non-technical stakeholders, and how to stay current with new technology.\nAs we progress, we'll encourage you to reflect on how you can apply these insights in your daily work. Whether it's embracing continuous learning, fostering collaboration, or leading with confidence, our goal is to equip you with the tools and knowledge to thrive in a Senior role.\nBy the end of this course, you'll have gained new skills allowing you to contribute in a more impactful way to the success of your team and organization.\n-\nWritten by an Engineering lead who hires and trains Senior Developers, this course is full of inside information based on real-world experience.",
      "target_audience": [
        "Mid-Level Developers who are looking to be promoted to, or join a company as, a Senior Developer."
      ]
    },
    {
      "title": "600+ Algorithm Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/algorithm-interview-questions/",
      "bio": "Algorithm Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Algorithm Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the Algorithm Interview Questions Practice Test Course! Are you preparing for algorithm-focused interviews and looking to sharpen your problem-solving skills? This course is designed to help you master key algorithmic concepts and techniques through a series of practice tests covering a wide range of topics.\nIn this course, you will find six comprehensive sections covering essential algorithms and data structures commonly encountered in technical interviews. Each section is carefully crafted to provide you with in-depth coverage of important topics, enabling you to tackle algorithmic challenges with confidence. Whether you're a beginner or an experienced programmer, this course will serve as an invaluable resource to enhance your algorithmic problem-solving abilities.\nHere's what you can expect from each section:\nSorting Algorithms: Dive into the world of sorting algorithms, including Bubble Sort, Selection Sort, Insertion Sort, Merge Sort, Quick Sort, and Radix Sort. Test your understanding of how these algorithms work, their time and space complexities, and their practical applications in real-world scenarios.\nSearching Algorithms: Explore various searching techniques such as Linear Search, Binary Search, Depth-First Search (DFS), Breadth-First Search (BFS), A* Search, and Dijkstra's Algorithm. Challenge yourself with questions that assess your ability to find elements efficiently in different data structures and graphs.\nData Structures: Master fundamental data structures including Arrays, Linked Lists, Stacks, Queues, Trees (Binary, AVL, Red-Black), and Hash Tables. Test your knowledge of how these data structures are implemented, their advantages and limitations, and their suitability for solving various problem types.\nDynamic Programming: Delve into dynamic programming with questions on classic problems like the Fibonacci Sequence, Knapsack Problem, Longest Common Subsequence (LCS), Matrix Chain Multiplication, Coin Change Problem, and Longest Increasing Subsequence (LIS). Learn to approach dynamic programming problems systematically and efficiently.\nGraph Algorithms: Explore graph algorithms such as Depth-First Search (DFS), Breadth-First Search (BFS), Topological Sorting, Minimum Spanning Tree (Prim's and Kruskal's algorithms), Shortest Path Algorithms (Dijkstra's, Bellman-Ford, Floyd-Warshall), and Maximum Flow (Ford-Fulkerson algorithm). Enhance your understanding of graph traversal, shortest paths, and network flow problems.\nString Algorithms: Conquer string manipulation challenges with questions on Pattern Matching (Naive, Rabin-Karp, KMP), Longest Common Substring, Longest Palindromic Substring, String Compression, Regular Expression Matching, and Edit Distance. Develop expertise in handling text-processing tasks efficiently.\nEach section includes a variety of practice test questions meticulously crafted to simulate the types of problems you may encounter in algorithm-focused interviews. With detailed explanations and solutions provided for each question, you'll not only test your knowledge but also gain valuable insights into problem-solving strategies and algorithmic optimization techniques.\nGain proficiency in a wide range of algorithmic concepts and techniques.\nStrengthen your problem-solving skills through hands-on practice.\nFamiliarize yourself with common interview question formats and strategies.\nBoost your confidence and readiness for algorithm-focused technical interviews.\nAcquire practical insights and tips from experienced instructors to excel in your job interviews.\nWhether you're preparing for software engineering roles at top tech companies or aiming to enhance your algorithmic prowess for personal and professional growth, this course provides the perfect platform to hone your skills and ace your next interview. Enroll now and take the first step towards algorithmic mastery and interview success!",
      "target_audience": [
        "Software Engineering Candidates: Those preparing for technical interviews at top tech companies, startups, or other organizations where algorithmic proficiency is a key requirement for software engineering roles.",
        "Computer Science Students: Undergraduate or graduate students studying computer science or related fields who want to reinforce their understanding of algorithms and data structures in preparation for internship or job interviews.",
        "Programming Enthusiasts: Hobbyists or self-taught programmers seeking to deepen their knowledge of algorithmic concepts and improve their problem-solving skills to tackle more challenging coding tasks.",
        "Career Changers: Professionals transitioning into software development careers who need to brush up on algorithmic concepts and prepare for technical interviews in the tech industry.",
        "Anyone Preparing for Coding Challenges: Individuals participating in coding competitions, hackathons, or online coding platforms who want to strengthen their algorithmic skills and improve their performance in competitive programming environments.",
        "Professionals Seeking Career Advancement: Experienced software engineers or developers looking to advance their careers by mastering advanced algorithmic techniques and staying competitive in the job market."
      ]
    },
    {
      "title": "LangGraph & DSPy: Build Controllable AI Agents with Tools",
      "url": "https://www.udemy.com/course/langgraph-dspy-build-smarter-controllable-ai-agents-with-tools/",
      "bio": "Learn to design and build smarter AI agents, optimize tool use, and control tool arguments query with LangGraph and DSPy",
      "objectives": [
        "Understand the stateful architecture of LangGraph workflows",
        "Build Stateful LangGraph agents with tools and memory",
        "Understand DSPy and its role in prompt optimizations",
        "Build DSPy-augmented LangGraph agents with controllable tool-calling arguments and queries"
      ],
      "course_content": {
        "Lesson 1 - Introduction to LangGraph": [
          "Introduction to LangGraph"
        ],
        "Lesson 2 - LangGraph Architecture": [
          "Lesson 2 - LangGraph Architecture"
        ],
        "Lesson 3 - Examine State and Add Memory in LangGraph": [
          "Lesson 3 - State and Memory in LangGraph"
        ],
        "Lesson 4 - Building a LangGraph Agent with Tools": [
          "Lesson 4 - Build a LangGraph Agent with 3 tools"
        ],
        "Lesson 5 - Introduction to DSPy": [
          "Lesson 5 - Introduction to DSPy Optimizations"
        ],
        "Lesson 6 - LangGraph + DSPy Integration for Smarter Reliable Agents": [
          "Lesson 6 - LangGraph + DSPy Integration"
        ]
      },
      "requirements": [
        "Basic understanding of python and a working idea of what AI agents mean"
      ],
      "description": "Unlock the power of LangGraph to build controllable, stateful AI agents that go beyond basic chatbots. In this course, you’ll learn how to design low-level agent workflows with precise control over tools and arguments, while extending capabilities using DSPy for prompt optimization. Perfect for developers seeking to master the next generation of agent frameworks.\nWe’ll start by exploring LangGraph fundamentals, understanding how to structure agents, manage memory, and create step-by-step execution flows. You’ll integrate LangChain for tool use and retrieval, giving your agents access to external knowledge. By the end of this section, you’ll know how to design AI agents that are both powerful and controllable in real-world applications.\nThe course also covers DSPy optimizations to make your agents smarter when constructing tool arguments and queries. You’ll see how to extend LangGraph’s controllability by applying structured prompt optimizations, reducing errors, and improving accuracy. These techniques allow you to fine-tune agent behavior without manual trial-and-error, accelerating your development process.\nFinally, we’ll use LangSmith for observability, enabling detailed tracing and debugging of agent workflows. This ensures you can monitor, analyze, and refine your agents effectively. By combining LangGraph, LangChain, DSPy, and LangSmith, you’ll be equipped with a cutting-edge toolkit to design, build, and deploy smarter AI agents with confidence.",
      "target_audience": [
        "AI Agents developers looking for ways to build controllable and smarter AI agents with tools"
      ]
    },
    {
      "title": "Amazon Echo Development Basics",
      "url": "https://www.udemy.com/course/amazon-echo-development-basics/",
      "bio": "Learn how to setup Amazon Echo for development with NodeJs and Amazon Lambda",
      "objectives": [
        "Develop Basic Amazon Echo Apps (skills) using Node.js",
        "Understand Amazon Alexa's Developer portal for uploading skills",
        "Use Amazon Lambda for uploading skills"
      ],
      "course_content": {
        "Welcome / Setup": [
          "Hello!",
          "Register for an Amazon Web Services Account",
          "Register for an Amazon Developer Account",
          "Download Amazon Skills Set Examples",
          "Install Node.Js",
          "Alexa Glossary"
        ],
        "Hello World Skill": [
          "Files Overview",
          "Review Code",
          "Intent Handlers",
          "Zip it up!",
          "Upload Files to Lambda",
          "Run a Test",
          "Add Lambda to Amazon Skill",
          "Test it out"
        ],
        "Question / Answer Response Skill": [
          "Review Code",
          "Upload to Lambda and Amazon",
          "Test it out"
        ],
        "Back and Forth Dialog Skill": [
          "Review Code",
          "Echo Examples"
        ],
        "Google Nest: Get Temperature Skill": [
          "Google Nest - Echo Example Code"
        ]
      },
      "requirements": [
        "Register for a Amazon Web Services Account",
        "Register for a Amazon Developer Account",
        "Install Node.js"
      ],
      "description": "This course is for developers who want to develop Amazon Echo skills/apps. You will be taken through Amazon Alexa examples to get started. Examples touched on this course are the well known hello world, wikipedia reading articles from a day of the year in history, and back and forth dialog from Pulp Fiction the movie. Nodejs, Amazon Lambda, and the Alexa developer portal are the main technologies used in this course. The goal of this course is for you to walk away knowing how to create basic skills for Amazon Echo. If you purchased an Echo and want to show off your development skills to friends and family this will get you started!",
      "target_audience": [
        "This course is meant for developers looking to build apps for Amazon Echo",
        "This is course highlights examples for development of Amazon Echo Skills"
      ]
    },
    {
      "title": "Introdução a Microsserviços",
      "url": "https://www.udemy.com/course/introducao-a-microsservicos/",
      "bio": "Aprenda a desenvolver um sistema de microsserviços do zero",
      "objectives": [
        "Aplicar a Orientação a objetos com boas praticas",
        "Definir a estrutura inicial de um projeto de grande potencial",
        "Criar um sistema baseado em microsserviços",
        "Usar a Stack de desenvolvimento de sistemas com maior demanda no mercado de programação do mercado",
        "Programar usando o ecossistema Spring",
        "Spring Boot",
        "Spring Data JPA",
        "Spring Cloud",
        "Docker",
        "Docker compose",
        "Github",
        "Open Feign",
        "API Gateway",
        "Eureka Server",
        "Lombok",
        "H2 Database",
        "Tratamento de exceções",
        "Consumir nossa API usando nosso Postman",
        "Desenvolvimento em camadas",
        "Ferramenta de versionamento Git",
        "Muito mais..."
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Implementando APIs de Pagamento e Usuário": [
          "Iniciando o projeto",
          "API de Usuario - Iniciando API",
          "API de Usuario - Implementando os Recursos para a API",
          "API de Usuario - Tratamento de Exceção de forma personalizada",
          "API de Pagamentos - Iniciando Projeto",
          "API de Pagamentos - Iniciando lógica da API",
          "API de Pagamentos - Implementando OpenFeign na comunicação entre APIs",
          "API de Pagamentos - Tratamento de exceção e Camada de Serviços"
        ],
        "Naming Server com Netflix Eureka": [
          "Eureka Server"
        ],
        "Load Balancing": [
          "Load Balancing"
        ],
        "Spring Cloud API Gateway": [
          "API Gateway"
        ],
        "Docker": [
          "Criando primeira imagem docker",
          "Registrando imagens no Docker Hub"
        ],
        "Docker Compose": [
          "Subindo o sistema com docker compose"
        ],
        "Github": [
          "Criando repositorio e subindo o monorepo"
        ],
        "Conclusão": [
          "Agradecimentos finais"
        ]
      },
      "requirements": [
        "Noções de POO",
        "Computador com acesso a internet"
      ],
      "description": "O que você aprenderá\n\n\nInstalar e configurar as ferramentas corretas para iniciar um projeto baseado em microsserviços do zero\nConceitos de Spring Boot 2.x.x\nSpring Data JPA\nSpring Cloud\nDocker\nDocker compose\nCriar suas imagens Docker\nRegistrar suas imagens em um docker registry\nVersionamento de código com Git e Github\nOpenFeign\nEureka Server\nAPI Gateway\nHibernate\nCriar uma API RESTful\nConsumir uma API REST usando a ferramenta Postman\nUtilização do banco de dados h2 em tempo de compilação\nTratamento de exceções de forma personalizada\nDesenvolvimento em camadas\nProtocolo HTTP no padrão REST\ne muito mais...\n\n\n\n\nVISÃO FUNCIONAL\n\n\nNeste projeto você vai aprender a construir uma aplicação web baseada em microsserviços do zero de um sistema web para uma microempresa de recursos humanos.\n\n\n\n\nVISÃO TÉCNICA - BACK END\n\n\nIremos criar algumas APIs Rest usando Java com Spring Boot 2.x.x e banco de dados H2. Vamos usar JPA com Hibernate Vamos aprender também validação de dados, tratamento de exceções, uso adequado do protocolo HTTP no padrão REST realizar balanceamento de cargas nas APIs, uso de OpenFeign, centralizar requisições usando um API Gateway e muito mais coisas.\n\n\nVersão: Spring Boot 2.6.2\n\n\n\n\n\n\nESTE CURSO É DESTINADO A QUEM DESEJA\n\n\nAprender os conceitos de como construir um back end com Spring Cloud baseado em microsserviços\nAplicar na prática os conteúdos da faculdade em um projeto pessoal\nIncrementar seu portfolio e seu currículo\nEstudantes de cursos de computação e desenvolvimento de sistemas\nProfissionais que desejam adquirir conhecimento nas técnicas e ferramentas propostas no curso\nEntusiastas que desejam criar aplicativos e sistemas\n\n\n\n\nSe sua necessidade vai ao encontro de pelo menos um desses objetivos, você está no lugar certo. Então não perca mais tempo: comece já este curso!",
      "target_audience": [
        "Desenvolvedores iniciantes e qualquer um que deseje aprender ou reforçar novos conceitos",
        "Interessados em aprender Java",
        "Interessados em aprender Microsserviços",
        "Interessados em aprender a usar o Framework Spring Boot e Spring Cloud",
        "Interessados em criar sua primeira aplicação web com as mais novas tecnologias",
        "Pessoas em transição de carreira"
      ]
    },
    {
      "title": "Patrones de diseño de software y principios SOLID.",
      "url": "https://www.udemy.com/course/patrones-de-diseno-y-principios-solid/",
      "bio": "Descubre los design patterns y los principios SOLID que te permitirán construir aplicaciones más profesionales en Java.",
      "objectives": [
        "Crear aplicaciones con los mayores estándares de calidad en flexibilidad, mantenibilidad y elegancia.",
        "Dominar el uso de la encapsulación y la composición para construir soluciones sencillas a problemas complejos",
        "Identificar situaciones donde el uso de la herencia es peligroso",
        "Entender las ideas de los textos clásicos de Erich Gamma, Robert C. Martin, Bertrand Meyer ..."
      ],
      "course_content": {
        "Introducción": [
          "Presentación"
        ],
        "Principios SOLID": [
          "Origen",
          "Tipos de ejercicios",
          "Uso de los ejercicios",
          "S - Single responsibility principle (SRP)",
          "Como realizar los ejercicios",
          "Solución problema SRP",
          "O - Open/closed principle (OCP)",
          "Solución al problema OCP",
          "L - Liskov substitution principle (LSP)",
          "I - Interface segregation principle (ISP)",
          "D - Dependency inversion principle (DIP)",
          "Repaso sección"
        ],
        "Patrones de diseño": [
          "Historia",
          "Creando un patrón de diseño"
        ],
        "Creational patterns": [
          "Abstract factory pattern",
          "Builder pattern",
          "Builder pattern: ejercicio",
          "Builder pattern: solución ejercicio",
          "Factory method",
          "Prototype pattern",
          "El método Object.clone()",
          "Singleton pattern",
          "Repaso sección"
        ],
        "Structural patterns": [
          "Adapter pattern",
          "Bridge pattern",
          "Composite pattern",
          "Decorator pattern",
          "Facade pattern",
          "Flyweight pattern",
          "Proxy pattern",
          "Uso de la composición",
          "Repaso sección"
        ],
        "Behavioral patterns": [
          "Chain of responsibility pattern",
          "Command pattern",
          "Interpreter pattern",
          "Iterator pattern y visitor pattern",
          "Mediator pattern",
          "Memento pattern",
          "Observer pattern",
          "State pattern",
          "Strategy pattern",
          "Template method pattern",
          "Repaso sección"
        ],
        "Bonus": [
          "Caso de uso del Builder Pattern: Unit tests en clases de dominio."
        ],
        "Conclusiones": [
          "Conclusiones"
        ],
        "Extras": [
          "Clase extra: otros cursos"
        ]
      },
      "requirements": [
        "Conocimientos básicos de la orientación a objetos",
        "Los ejemplos son en Java. Aunque no sea imprescindible, obtendrás más beneficio del curso si tienes nociones básicas del lenguaje Java",
        "¡Ganas de construir soluciones realmente profesionales!"
      ],
      "description": "¿No sería genial tener a los grandes programadores sentados a nuestro lado mientras nos enfrentamos a la complicada tarea de programar?\nEvidentemente en este curso no te podemos proporcionar este servicio.\nPero sí te podemos ayudar que descubras y entiendas los patrones de diseño. Los patrones de diseño son soluciones generales a problemas que aparecen recurrentemente en las aplicaciones complejas.\nPor esto, aunque no puedas tener a tu lado a las mentes más destacadas de la programación, sí puedes tener un catálogo de soluciones generales que han descubierto, analizado y descrito en detalle.\nLos autores de estos patrones de diseño han identificado 23 problemas generales que es muy probable que te encuentres o ya te hayas encontrado en tu trabajo. Y para cada uno de ellos, han explicado como se puede resolver de forma elegante y cumpliendo con los requisitos de encapsulación, extensibilidad y otros factores que debe tener un diseño profesional.\nEl estudio de este catálogo es la parte central del curso. Pero no la única.\nAdemás, explicaremos el que quizá sea el conjunto de principios más conocido para evaluar la calidad de un sistema orientado a objetos: Los principios SOLID.\nEstos principios incluyen algunas de las ideas más profundas e interesantes que los teóricos de la computación han expresado. Principios como el open/closed o el principio de sustitución de Liskov contienen reflexiones muy útiles para los profesionales de la programación pero muchas veces, por ser mal explicadas, se quedan en el ámbito académico. En este curso los explicaremos de forma clara y cambiarán tu percepción de tu propio trabajo.\nEspero que, como me sucedió a mi, también la compresión de todo este contenido cambie tu forma de trabajar y te haga disfrutar más de él.",
      "target_audience": [
        "Programadores Java de todos los niveles"
      ]
    },
    {
      "title": "Top 50 OOP Interview Questions",
      "url": "https://www.udemy.com/course/top-50-oop-interview-questions/",
      "bio": "Ace Your Next Technical Interview with Confidence",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "\"Dive deep into the heart of object-oriented programming (OOP) with our meticulously designed course, 'Mastering OOP: Ace Your Next Technical Interview with Confidence.' Tailored for aspiring software developers from all backgrounds, this course is your ultimate guide to understanding and applying OOP principles confidently in any technical interview setting.\nCourse Highlights:\nFoundational OOP Principles: Delve into the core of OOP—encapsulation, inheritance, polymorphism, and abstraction. Learn not just the definitions, but how to apply these principles in real-world scenarios.\nComprehensive Interview Preparation: Tackle the TOP 50 OOP interview questions that cover a broad spectrum of topics, ensuring you're prepared for anything an interviewer throws your way.\nPractical Problem-Solving: Engage with hands-on exercises that challenge you to think critically and solve problems using OOP concepts, enhancing your practical skills alongside theoretical knowledge.\nExpert Insights: Gain insights from experienced software developers on navigating technical interviews with confidence, including tips on articulating your thought process and showcasing your problem-solving abilities.\n\nCourse Outcomes:\nBy completing 'Mastering OOP: Ace Your Next Technical Interview with Confidence,' learners will:\nUnderstand the fundamental concepts of OOP and how to apply them in coding projects.\nSolve complex programming problems using OOP principles, demonstrating critical thinking and creativity.\nCommunicate effectively about technical solutions, a crucial skill for technical interviews and collaborative work environments.\nStand out in technical interviews with a deep understanding of OOP, ready to tackle questions that assess both knowledge and application skills.\nJoin us on this journey to transform your understanding of OOP, enhance your problem-solving skills, and confidently ace your next technical interview. Embark on a path to success in your software development career with 'Mastering OOP.'\"",
      "target_audience": [
        "Beginners in programming seeking to solidify their OOP basics.",
        "Intermediate developers aiming to refine their OOP knowledge for career progression.",
        "Students and graduates preparing for software development interviews.",
        "Career changers entering the tech field, needing a concise OOP overview.",
        "Tech enthusiasts curious about object-oriented programming concepts."
      ]
    },
    {
      "title": "Introduction to Software for Renewable Energy",
      "url": "https://www.udemy.com/course/introduction-to-software-for-renewable-energy/",
      "bio": "Learn about the software technologies that are used in solar, wind, hydropower, batteries, and other energy technologies",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Renewable Energy?",
          "Modeling and Simulation",
          "Data Analysis",
          "Forecasting",
          "Optimization",
          "Hardware Control",
          "Other Uses for Software",
          "Wrapping Up",
          "Bonus: What's next?"
        ]
      },
      "requirements": [
        "No requirements"
      ],
      "description": "Interested in the field of renewable energy? Have software development skills? This course provides a high-level overview of how software is used in the field of renewable energy.\nYou'll learn about these software technologies:\nModeling and simulation\nData analysis\nForecasting\nOptimization\nHardware control\nOther types you wouldn’t expect\nAnd for every software technology, you'll get examples of how it's used in the field of renewable energy, including:\nSolar power\nWind power\nGeothermal power\nHydropower\nTidal power\nBatteries\nEnergy efficiency\nThe need for renewable energy, and the need for software to support it, is growing rapidly. Come take this course and learn about the opportunities.\nThe course is taught by Peter Gruenbaum, who has a BA in Physics from the University of Chicago and PhD in Applied Physics from Stanford University. Peter started his career doing solar energy research, but then switched to software and worked for many commercial software companies before finding work in renewable energy that makes use of his software skills.\nIf you want to know where to fit into this exciting new field, this is the course for you. It contains real-world examples of how the latest software technologies are being used in many different renewable energy industries.",
      "target_audience": [
        "Software engineers and developers who want to learn about the renewable energy field",
        "Computer science students who are interested in renewable energy career opportunities"
      ]
    },
    {
      "title": "400+ Web API Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/web-api-interview-questions/",
      "bio": "Web API Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Web API Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to our extensive Udemy course on Web APIs, crafted meticulously to guide you through the intricacies of Web API development, security, consumption, and advanced concepts. Whether you're prepping for a pivotal job interview, seeking to augment your skills, or aspiring to become an API expert, our practice tests encompass everything you need to succeed. This course is designed not just as a study tool but as a critical step in your journey towards mastering Web APIs.\nOur course is divided into six well-structured sections, each packed with practice tests based on real-world scenarios and interview questions, ensuring a well-rounded understanding of Web APIs.\nSection 1: Fundamentals of Web APIs\nDefinition of a Web API: Delve into the core of what Web APIs are and their fundamental operations.\nREST vs. SOAP APIs: Compare and contrast these two pivotal API styles.\nHTTP Protocol Fundamentals: Understand the building blocks of web communication.\nCRUD Operations: Master the basic operations essential for any API.\nAPI Design Principles: Learn the art of designing intuitive and efficient APIs.\nStatelessness in REST APIs: Explore the importance and implementation of statelessness in REST.\nUnderstanding API Endpoints: Get a grip on how API endpoints function and their significance.\nData Exchange Formats (JSON, XML): Dive into the most common formats for data interchange.\nSection 2: API Security\nAuthentication vs. Authorization: Clarify the differences and significance of these security concepts.\nOAuth 2.0 and Tokens: Understand modern authentication mechanisms.\nAPI Keys: Discover how API keys secure access.\nHTTPS and TLS Encryption: Learn about securing API communication.\nCORS (Cross-Origin Resource Sharing): Tackle common web application security challenges.\nAPI Throttling and Rate Limiting: Manage and control API usage effectively.\nCommon Security Vulnerabilities (e.g., SQL Injection): Identify and protect against prevalent security threats.\nWebhooks and their Security Implications: Understand the role and security considerations of webhooks.\nSection 3: API Development\nChoosing the Right Framework for API Development: Navigate the plethora of frameworks available for API development.\nVersioning Strategies for APIs: Learn the best practices for API versioning.\nBuilding RESTful Services with Node.js/Express: Get hands-on experience with popular tools and frameworks.\nAPI Documentation Tools (Swagger, OpenAPI): Master the art of documenting APIs effectively.\nHandling Errors and Status Codes: Learn how to gracefully handle errors and communicate statuses.\nMiddleware and Filters in API Development: Understand the role and implementation of middleware.\nDependency Injection in APIs: Delve into advanced development techniques.\nTesting APIs (Unit, Integration Tests): Grasp the importance and methods of API testing.\nSection 4: API Performance & Best Practices\nCaching Mechanisms (HTTP Caching, ETags): Learn caching strategies to enhance API performance.\nLoad Balancing Techniques for APIs: Understand how to handle increased traffic and maintain performance.\nAPI Gateway Usage and Benefits: Discover the advantages of using API gateways.\nData Pagination in APIs: Tackle large data sets effectively in your API responses.\nAPI Monitoring and Analytics: Gain insights into API usage and performance.\nMicroservices and API Performance: Explore the role of APIs in a microservices architecture.\nRate Limiting and Backoff Algorithms: Implement strategies to control API access and maintain server health.\nGraphQL vs. REST Performance Considerations: Compare these two approaches from a performance standpoint.\nSection 5: API Consumption\nClient-Side API Consumption Practices: Learn best practices for consuming APIs on the client side.\nUsing Postman for API Testing: Master one of the most popular API testing tools.\nConsuming APIs with cURL: Understand the versatility of cURL in API interactions.\nHandling Asynchronous Operations with APIs: Learn to manage asynchronous calls elegantly.\nSDKs vs. Direct API Calls: Compare the use of SDKs against direct API calls.\nWebSockets and Real-Time API Communication: Delve into the world of real-time communication with WebSockets.\nConsuming Third-Party APIs (Google, Twitter, etc.): Get practical experience with widely-used APIs.\nDealing with API Deprecation: Learn to handle API changes and deprecations effectively.\nSection 6: Advanced API Concepts\nHypermedia as the Engine of Application State (HATEOAS): Explore this advanced concept of RESTful APIs.\nOAuth 2.0 Flows (Authorization Code, Client Credentials): Deep dive into OAuth 2.0 flows.\nAPI Caching with Varnish or Similar Tools: Enhance API performance with advanced caching mechanisms.\nAPI Orchestration and Choreography: Understand these key concepts in managing complex API interactions.\nServerless APIs with AWS Lambda or Azure Functions: Get acquainted with the world of serverless APIs.\nContainerization (Docker) and API Deployment: Learn about deploying APIs in containers.\nAPI Scalability Patterns: Discover strategies to scale APIs efficiently.\nThe Role of APIs in Microservices Architecture: Understand the critical role of APIs in microservices.\n\n\nWe Update Questions Regularly\nOur course is dedicated to providing you with the most current and relevant practice test questions in the field of Web API development. To give you a glimpse of the quality and depth of our content, here are 5 sample practice test questions, complete with multiple-choice options and detailed explanations. Please note that these explanations are comprehensive to ensure a deep understanding of the concepts.\nSample Question:\n\n1. What is the primary purpose of using REST in Web API development?\nOptions: A. To enable SOAP-based messaging B. To provide a lightweight alternative to RPC C. To facilitate a stateless architecture with client-server communication D. To enforce strict data typing in API responses\nCorrect Answer: C. To facilitate a stateless architecture with client-server communication\nExplanation: REST (Representational State Transfer) is an architectural style that is widely used in the development of Web APIs due to its simplicity, scalability, and performance. The primary purpose of REST is to facilitate a stateless architecture where each client-server interaction is independent, with no client context being stored on the server between requests. This statelessness ensures that each request from a client to a server must contain all of the information needed to understand and process the request. RESTful APIs typically use standard HTTP methods (GET, POST, PUT, DELETE) and are designed to be lightweight, making them ideal for web-based applications. The focus on resource manipulation through representations and the use of standard HTTP protocols makes REST a popular choice for modern API developers.\n\nEnroll now and take the first step towards mastering Web APIs, acing interviews, and enhancing your career with our comprehensive practice tests!",
      "target_audience": [
        "Aspiring API Developers and Engineers",
        "Software Developers preparing for interviews",
        "Professionals seeking to deepen their understanding of Web APIs",
        "Students aiming to kickstart their careers in API development"
      ]
    },
    {
      "title": "Multi-modal semantic Search using CLIP",
      "url": "https://www.udemy.com/course/semantic-image-search-using-clip/",
      "bio": "Solving long tail text to image Search using CLIP",
      "objectives": [
        "At the end of my course students will be able to build real world image search engine",
        "Learn how to use state of the art multimodal embedding",
        "Learn how to express text and image embeddings in the same space",
        "Learn to use CLIP embeddings to find images from text and vice versa"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About Author"
        ],
        "Background and Context": [
          "Background"
        ],
        "Preprocessing Text and Images": [
          "Image Preprocessing",
          "Text preprocessing"
        ],
        "Fine Tuning Search results": [
          "Constructing Recall Set",
          "Fine Tuning"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Conventional Image Search engines use a lexical approach and do not perform well for long queries. The reason behind this is that the search engines look for individual tokens, their frequency in the same document, and the rarity of the tokens among all documents. Also, the search keywords are matched with image textual metadata like tags and titles. For longer queries, we need a search engine that can understand the wholistic meaning of text query and expresses text and image embedding in the same space so that it can perform a search by using the nearest neighbor approach.\nContrastive Laniage Image Pre-training model from OpenAI provides similarity capability across multi-modal input such as text and image and express their embeddings in the same space. It leverages existing data from imagenet, internet and uses a contrastive approach to training. It's zero shot modal which means we don't have to retrain on our own corpus. We can just use it to generate text and visual embeddings and just sort the result based on the distance between vectors.\nIn this course, we'll use the CLIP model from openAI, PyTorch for preprocessing images and text, and simple nearest neighbor to illustrate the effect of longer queries on the Unsplash image search engine with and without the CLIP model.\nThis course provides basic understanding of deep learning and embeddings.",
      "target_audience": [
        "Beginner ML engineers who would like to know how to use embeddings for image search"
      ]
    },
    {
      "title": "Introduction to Data Integration",
      "url": "https://www.udemy.com/course/introduction-to-data-integration/",
      "bio": "Understand the fundamentals of integration development",
      "objectives": [
        "Understand what integration development is and why it matters.",
        "Learn how integrations solve real-world business problems.",
        "Identify the roles and responsibilities of integration designers and developers.",
        "Discover key EAI patterns and integration models.",
        "Compare open-source vs. commercial integration tools.",
        "Explore real integration scenarios using common platforms and components."
      ],
      "course_content": {
        "The Importance and Potential of Data Integration": [
          "What Is Data Integration and Why Does It Matter?",
          "Without Integration – What Problems Arise?",
          "What Does an Integration Designer Do? – Principles and Patterns",
          "What Does an Integration Developer Do? – Role and Tools",
          "Recap – Is This Path for You?"
        ]
      },
      "requirements": [
        "No coding skills required. This course is perfect for anyone curious about how modern systems communicate."
      ],
      "description": "This beginner-friendly course gives you a clear, practical introduction to integration development — one of the fastest-growing and most in-demand areas in IT today.\nYou’ll gain foundational knowledge of how digital systems connect, communicate, and exchange data — and why integration is a critical enabler for automation, scalability, and agility in today’s interconnected IT environments.\nThe course explains how integrations support automation and real-time data flow between systems — helping reduce bottlenecks and support modern digital services.\nYou’ll learn:\n• What integration development actually is — in plain language\n• Why integrations matter for modern software systems\n• Who does what: the difference between integration designers and developers\n• What tools and platforms are used in real projects (iPaaS, ESB, API gateways)\n• The core EAI patterns and models that guide integration work\nThis course is suitable for:\n• Technical consultants, solution architects, or developers needing a big-picture view\n• Developers curious about integration as a career direction\n• Freelancers and IT professionals seeking new service opportunities\nNo previous integration experience required — just curiosity and a desire to grow.\nWhether you’re exploring integration for the first time or expanding your understanding of modern system architectures, this course provides a practical foundation you can build on. The material is presented in a straightforward and beginner-friendly way, with real-world terminology and examples that make complex concepts easier to understand. You can return to the lessons anytime to refresh your understanding or explore specific sections more deeply.",
      "target_audience": [
        "IT professionals, consultants, or aspiring architects who want to understand the foundations of integration development and system communication."
      ]
    },
    {
      "title": "RESTful Web Services with Spring Framework - A quick start",
      "url": "https://www.udemy.com/course/restful-web-services-with-spring-framework-a-quick-start/",
      "bio": "A quick start to building your REST API with Spring Boot and Spring MVC",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Source code",
          "Introduction",
          "Download and Install Postman HTTP Client",
          "Postman Overview",
          "Resource and Collection URIs",
          "HTTP Methods: GET, POST, DELETE and PUT",
          "HTTP Headers: Accept and Content Type"
        ],
        "Setting up Develeopment Environment": [
          "Install Java Platform(JDK)",
          "Download and Install Spring Tool Suite(STS)"
        ],
        "Creating a New Project": [
          "Create new Spring Boot Project with Spring Tool Suite",
          "Creating a new Spring project using Spring Boot Initializr"
        ],
        "Create RESTful Web Service Endpoints": [
          "Create Users Rest Controller class",
          "Adding Methods to Handle POST, GET, PUT, DELETE HTTP requests",
          "Running Web Service Application"
        ],
        "Handle HTTP GET Request": [
          "Reading Path Variables with @PathVariable annotaion",
          "Reading Query String Request Parameters",
          "Making Parameters Optional or Required"
        ],
        "Returning a Response": [
          "Returning Java Object as Return Value",
          "Returning Object as JSON or XML Representation",
          "Set Response Status Code"
        ],
        "Handle HTTP POST Request": [
          "Reading HTTP POST Request Body. The @RequestBody annotation.",
          "Validating HTTP POST Request Body"
        ],
        "Handle HTTP PUT and HTTP Delete Requests": [
          "Store Users Temporary",
          "Handle HTTP PUT Request",
          "Handle HTTP Delete Request"
        ],
        "Exceptions Handling": [
          "Handle an Exception",
          "Return Custom Error Message Object",
          "Handle a Specific Exception",
          "Throw and Handle You Own Custom Exception",
          "Catch More Than One Exception with One Method"
        ],
        "Dependency Injection": [
          "Create and Autowire a Service Layer Class",
          "Constructor Based Dependency Injection"
        ]
      },
      "requirements": [
        "Have basic knowledge of Java language",
        "Be able to download software from Internet"
      ],
      "description": "This video course is a Quick Start to learning How to Build RESTful Web Services with Spring Framework.\nAs you go through this video course you will learn how to use tools like:\nSpring Tool Suite Development Environment,\nPostman HTTP client, so that you can send HTTP Requests and Receive HTTP Responses,\nYou will also learn how to Download and Install Java if you do not have it already.\nAlthough this video course is very short, and is very simple, it is also very practical!\nYou will write Java code that handles different types of HTTP Requests. You will learn how to create web service endpoints that accept HTTP Post, HTTP GET, HTTP PUT and HTTP Delete requests.\n\nYou will learn how to make your RESTful Web Service endpoints accept information via URL Query String parameters, via URL Path Parameters as well as information sent via the body of HTTP Request,\n\nAdditionally to learning how to read request parameters from HTTP request, you will learn how to make your RESTful Web Service, return information in different formats. For example, you will learn how to return information as a plain text or as a JSON or XML document.\n\nYou will learn how to validate HTTP request parameters and also how to validate a information sent via HTTP Request body. Make sure that certain required fields are not empty and that email address for example is of a correct format.\n\nYou will learn how to handle errors in your RESTful Web Service and also learn how to return information about the error in different custom formats.\n\nAnd finally, additionally to building and running your RESTful Web Service with a Spring Tool Suite development environment, you will learn how to run your RESTful Web Service as a standalone Java application which runs independently of your development environment.",
      "target_audience": [
        "Beginner Java developers interested in learning how to build RESTful Web Services"
      ]
    },
    {
      "title": "Padrões de Projeto (Design Patterns) com Python",
      "url": "https://www.udemy.com/course/padroes-de-projeto-com-python/",
      "bio": "Aprenda de forma prática a usar a eficácia dos padrões de projetos (design patterns) em Python 3.8 nas suas aplicações!",
      "objectives": [
        "Você irá aperfeiçoar suas habilidades para criar uma arquitetura melhor de software.",
        "Você irá entender soluções eficazes para problemas de designs comuns de software.",
        "Você irá explorar os princípios de design que foram a base do design de software, como o baixo acoplamento, escopo aberto e fechado, entre outros.",
        "Você irá aprender como os conceitos de programação orientada a objetos são usadas de forma profissional em aplicações de software.",
        "Você irá desenvolver uma compreensão sobre os padrões de projetos de criação bem como os diferentes métodos de criação de objetos.",
        "Você irá aprender a utilizar padrões de projeto estruturais e descobrir de que maneira os objetos e as classes interagem na construção de aplicações maiores.",
        "Você irá entender a aplicação entre os objetos com os padrões Command e Observer.",
        "Você irá melhorar a sua produtividade e a base de códigos de duas aplicações usando padrões de projeto (Design Patterns) com Python."
      ],
      "course_content": {
        "Apresentação": [
          "Sobre o curso",
          "Informações Importantes"
        ],
        "Introdução aos padrões de projeto": [
          "O que vamos aprender nesta seção?",
          "Revisão de Programação Orientada a Objetos",
          "Principais componentes da Programação Orientada a Objetos",
          "Princípios do design de software orientado a objetos",
          "Introdução aos Padrões de Projeto",
          "Classificação dos Padrões de Projeto",
          "Mão na massa geek!",
          "Recapitulando"
        ],
        "Padrão de Projeto: Singleton": [
          "O que vamos aprender nesta seção?",
          "Introdução ao padrão de projeto Singleton",
          "Implementando o padrão singleton em Python",
          "Fazendo uso de Lazy Instance no padrão Singleton",
          "Fazendo uso de Singletons no nível de módulos",
          "O padrão Singleton Monostate",
          "Singletons e Metaclasses",
          "Projeto Singleton - Parte 1",
          "Projeto Singleton - Parte 2",
          "Desvantagens do padrão Singleton",
          "Recapitulando"
        ],
        "Padrão de Projeto: Factory": [
          "O que vamos aprender nesta seção?",
          "Introdução ao padrão de projeto Factory",
          "Padrão Simple Factory",
          "Padrão Factory Method",
          "Implementando o padrão Factory Method em Python",
          "Vantagens do padrão Factory Method",
          "Padrão Abstract Factory",
          "Implementando o padrão Abstract Factory em Python",
          "Comparando o padrão Factory Method e Abstract Method",
          "Recapitulando"
        ],
        "Padrão de Projeto: Façade": [
          "O que vamos aprender nesta seção?",
          "Introdução aos padrões de projetos estruturais",
          "Introdução ao padrão de projeto Façade",
          "O padrão Façade em um diagrama UML",
          "Implementando o padrão Façade em Python",
          "Princípio do conhecimento mínimo",
          "Principais dúvidas sobre o padrão Façade",
          "Recapitulando"
        ],
        "Padrão de Projeto: Proxy": [
          "O que vamos aprender nesta seção?",
          "Introdução ao padrão de projeto Proxy",
          "O padrão Proxy em um diagrama UML",
          "Compreendendo os diferentes tipos de Proxy",
          "Implementando o padrão Proxy em Python",
          "Vantagens do padrão Proxy",
          "Comparando o padrão Proxy e o padrão Façade",
          "Principais dúvidas sobre o padrão Proxy",
          "Recapitulando"
        ],
        "Padrão de Projeto: Observer": [
          "O que vamos aprender nesta seção?",
          "Introdução aos padrões de projetos comportamentais",
          "Introdução ao padrão de projeto Observer",
          "O padrão Observer em um diagrama UML",
          "Implementando o padrão Observer em Python",
          "Modelos do padrão Observer",
          "Baixo Acoplamento e o padrão Observer",
          "Vantagens e Desvantagens do padrão Observer",
          "Principais dúvidas sobre o padrão Observer",
          "Recapitulando"
        ],
        "Padrão de Projeto: Command": [
          "O que vamos aprender nesta seção?",
          "Introdução ao padrão de projeto Command",
          "O padrão Command em um diagrama UML",
          "Implementando o padrão Command em Python",
          "Considerações no design de software",
          "Vantagens e Desvantagens do padrão Command",
          "Principais dúvidas sobre o padrão Command",
          "Recapitulando"
        ],
        "Padrão de Projeto: Template Method": [
          "O que vamos aprender nesta seção?",
          "Introdução ao padrão de projeto Template Method",
          "O padrão Template Method em um diagrama UML",
          "Implementando o padrão Template Method em Python",
          "Hooks",
          "O Princípio Hollywood e o Template Method",
          "Vantagens e Desvantagens do padrão Template Method",
          "Principais dúvidas sobre o padrão Template Method",
          "Recapitulando"
        ],
        "Padrão de Projeto: Model-View-Controller (MVC)": [
          "O que vamos aprender nesta seção?",
          "Introdução aos padrões de projeto compostos",
          "Introdução ao padrão de projeto Model-View-Controller (MVC)",
          "O padrão MVC em um diagrama UML",
          "Implementando o padrão MVC em Python",
          "Vantagens e Desvantagens do padrão MVC",
          "Principais dúvidas sobre o padrão MVC",
          "Recapitulando"
        ]
      },
      "requirements": [
        "Necessário ter feito o curso Programação para Leigos da Geek University ou ter conhecimentos equivalentes;",
        "Necessário ter feito o curso Algoritmos e Lógica de Programação da Geek University ou ter conhecimentos equivalentes;",
        "Necessário ter feito o curso Programação em Python da Geek University ou ter conhecimentos equivalentes.",
        "Necessário ter computador com o sistema operacional atualizado nas últimas versões, ou o Windows, ou o Linux ou o Mac",
        "Necessário acesso à Internet"
      ],
      "description": "Para podermos criar softwares modernos, precisamos desenvolver uma solução boa, estável, reutilizável e flexível sempre passando por\nproblemas inerentes ao design de softwares.\nOs Padrões de Projeto (design patterns) resolvem os problemas de design de software da forma mais elegante possível.\nEstes padrões fazem a abstração e sintetizam a experiência adquirida por muitos designers e arquitetos de software ao longo de\nvários anos resolvendo problemas semelhantes , apresentando-os na forma de componentes e interfaces organizados e bem definidos.\nEstes padrões de projeto são soluções que resistiram ao teste do tempo no que se refere à reusabilidade, flexibilidade, escalabilidade e\nmanutenibilidade.\nDesde a publicação do livro da GoF (Gang of Four) onde alguns dos maiores engenheiros de software do mundo definiram a base do que\ntemos hoje como padrões de projetos a programação evoluiu, com a era da Web e da computação móvel.\nDesta forma, neste curso, a Geek University apresenta de forma clara, objetiva e prática, os padrões de projetos que nasceram com a\npublicação do livro GoF juntamente com os novos padrões que surgiram com a evolução da nossa área.\nNeste curso usaremos a versão mais recente da linguagem Python 3.9!\nMas antes se cairmos de cabeça nos padrões de projetos, iremos estudar os princípios básicos de design de software, para que possamos\nconhecer os fundamentos que deram origem a estes padrões de design.\nDentre as coisas que iremos aprender neste curso está:\n- Programação Orientada a Objetos;\n- Princípios de design de software orientado a objetos;\n- Introdução aos Padrões de Projeto;\n- Padrão de Projeto Singleton;\n- Padrão de Projeto Factory;\n- Padrão de Projeto Façade;\n- Padrão de Projeto Proxy;\n- Padrão de Projeto Observer;\n- Padrão de Projeto Command;\n- Padrão de Projeto Template Method;\n- Padrão de Projeto Model-View-Controller (MVC);\n- Padrão de Projeto State;\n- Antipadrões;\n- E muito mais!\nEvolua seu lado geek!",
      "target_audience": [
        "Desenvolvedores Python que querem dar o próximo passo na excelência do desenvolvimento de software.",
        "Arquitetos de software que querem fazer uso de design patterns com Python.",
        "Engenheiros de software que querem fazer uso de padrões de projeto com Python.",
        "Programadores iniciantes em Python que querem se aprofundar na orientação a objetos fazendo uso de padrões de projeto com Python."
      ]
    },
    {
      "title": "Introduction to SOLID Principles",
      "url": "https://www.udemy.com/course/refactoring-improving-the-design-of-enterprise-applications/",
      "bio": "Introduction to SOLID Principles",
      "objectives": [],
      "course_content": {
        "Refactoring Hello World": [
          "Why Refactoring?",
          "What is Refactoring?",
          "Hello World",
          "SOLID Principles",
          "Single Responsibility Principle",
          "Dependency Inversion and Interface Segregation Principles",
          "Open-Closed and the Liskov-Substitution Principles",
          "Single Responsibility Principle - Again",
          "Inversion of Control using Unity"
        ]
      },
      "requirements": [
        "NO Knowledge of SOLID Principles, Design Patterns and Refactoring technique is required",
        "Knowledge of Object-Oriented Programming is good to have",
        "C#.Net, ASP .NET MVC, and SQL Server"
      ],
      "description": "This course starts from the ground up. It starts with a ground-up and talks about the SOLID principles.\nThe course then picks up the pace and introduces an ASP.NET MVC Application written with the intention of demonstrating the capabilities of the Entity Framework.\nRefactoring is making small changes to the application without affecting the observable behavior of the application and at the same time improving the design of the application.\nWhy Refactoring?\nA lot of developers complain that they are familiar with most or all of the techniques of refactoring. They have knowledge of Object-Oriented Programming and Design Patterns as well. But when they work on their projects they hit a roadblock. After some point, it gets very difficult to write clean code. Code that is flexible, extensible, and at the same time is easy to understand, change, and maintain. In complex business applications, it is extremely difficult for most to apply these rules.\nWhen the applications are older and they are supposed to port it to newer platforms it gets more challenging.\nThis course takes a practical approach. In an existing application that is significantly complex, the course adds test cases which becomes the safety net. The application is then refactored using the SOLID principles and other design patterns which improves the design of the application.",
      "target_audience": [
        "Developers and Architects who are working on complex application and are curious to improve application flexibility",
        "This course is for everyone curios to write enterprise grade state-of-the-art server side applications",
        "Taking this course will prepare you to write microservices and cloud native applications"
      ]
    },
    {
      "title": "Certificação em Gerenciamento de Projetos | sucesso projetos",
      "url": "https://www.udemy.com/course/gerenciamento-de-projetos-udemy/",
      "bio": "Certificação em Gerenciamento de Projetos entre em um setor que está criando 1,5 milhão de empregos por ano | projetos",
      "objectives": [
        "Poderão liderar projetos.",
        "Gerenciar uma equipe de projeto com confiança.",
        "Como dar o pontapé inicial em sua carreira no gerenciamento de projetos.",
        "Como se tornar um gerente de projetos.",
        "Desenvolver um orçamento, cronograma, business case, avaliação de risco e muito mais.",
        "Como usar diferentes ferramentas e aplicativos de gerenciamento de projetos que o levarão ao sucesso.",
        "Entender os principais conceitos de Gerenciamento de Projetos e as Fases de um Projeto.",
        "Entender as diferenças entre as diferentes metodologias de gerenciamento de projetos.",
        "Você aprenderá as principais habilidades que farão de você um excelente Gerente de Projetos.",
        "Você obterá os recursos necessários para uma Certificação de gerenciamento de projetos.",
        "Gerenciamento de mudanças no gerenciamento de projetos."
      ],
      "course_content": {
        "Introdução ao Gerenciamento de Projetos": [
          "Fundamentos de gerenciamento de projetos",
          "Seção 1 Recapitulação",
          "Seção 1 Questionário"
        ],
        "Entrega do Projeto": [
          "As fases de um projeto",
          "Gerenciamento de mudanças no gerenciamento de Projetos",
          "Seção 2 Recapitulação",
          "Seção 2 Questionário"
        ],
        "Coisas que eles não ensinam em uma universidade ou em um curso de gerenciamento": [
          "A diferença entre bons GPs e excelentes GPs",
          "Seção 3 Recapitulação",
          "Seção 3 Quiz"
        ],
        "Dicas de gerenciamento de projetos": [
          "O que FAZER e NÃO FAZER em Gerenciamento de Projetos",
          "Acrônimos de gerenciamento de projetos",
          "Seção 4 Quiz"
        ],
        "Ferramentas de gerenciamento de projetos": [
          "Minha ferramenta de gerenciamento de projetos favorita e como você pode usá-la",
          "Um exemplo da vida real de um projeto",
          "Outras ferramentas de gerenciamento de projetos que você pode usar",
          "Seção 5 Recapitulação",
          "Seção 5 Quiz"
        ],
        "Mais sobre gerenciamento de projetos": [
          "Calculando o orçamento do seu projeto",
          "Pacote Inteligente de Gerenciamento de Projetos",
          "Oportunidades de trabalho e salários",
          "Como e onde você pode obter certificação como PM",
          "Seção 6 Recapitulação",
          "Seção 6 Questionário"
        ],
        "Exame de Certificação em Gerenciamento de Projetos": [
          "Estudos de caso"
        ],
        "Encerramento do Curso": [
          "Bonus Lecture (Final Lecture)"
        ]
      },
      "requirements": [
        "Nenhum conhecimento prévio requerido, mas se você possuir, não tem problema! Você ainda aprenderá muito neste curso :)",
        "Um bom par de fones de ouvido, um pc, celular ou tablet."
      ],
      "description": "Atenção: Este curso possui legendas em português, áudio e recursos em inglês.\n\n\nEste curso de Gerenciamento de Projetos da Udemy sobre como se Tornar um Gerente de Projetos, foi projetado para fornecer a você um profundo conhecimento e as habilidades necessárias para se tornar um Gerente de Projeto de sucesso em qualquer mercado.\nPostos na área de gerenciamento de projetos estão crescendo num ritmo de 1,5 milhões de oportunidades por ano em todo o mundo e gerentes de projeto estão ganhando até US $ 200 mil / ano, alguns até mais! Ao fazer este curso de Gerenciamento de Projetos, você desenvolverá as habilidades de liderança necessárias para gerenciar com eficácia uma equipe que atenda às expectativas de seus clientes e metas de negócios.\nA demanda por gerentes de projeto está aumentando a um ritmo insano, à medida que mais e mais empresas percebem a importância desse papel. Mas como exatamente você entra neste mercado? Eu vou te atualizar sobre TODAS as habilidades que você precisa para aprender sobre o Gerenciamento de Projetos e ter a melhor chance de conseguir o emprego que você quer. Também compartilharei recursos que você pode usar para obter formalmente certificados gratuitamente ou a um custo muito baixo por algumas das principais universidades do mundo. Vou mostrar o que você precisa saber e o que você tem que fazer - tudo ensinado por um especialista em gerenciamento de projetos.\nOs alunos não precisam saber nada de antemão (mas se você já souber, não se preocupe! Você ainda aprenderá muito). Eu vou te ensinar os fundamentos, como aplicá-los, como evoluir para ser um gerente de projetos avançado e, finalmente, como maximizar suas chances de conseguir um emprego como gerente de projetos.\n\n\nPor que entrar no Gerenciamento de Projetos?\n• Gerenciamento de Projetos é uma carreira gratificante com um ótimo salário e muitas oportunidades.\n• O gerenciamento de projetos abrange todos os setores e todos os países do mundo.\n• O mercado de trabalho em  Gerenciamento de Projetos é dinâmico, ativo e cheio de ofertas de emprego.\n• Ao contrário de muitos profissionais, os Gerentes de Projeto são frequentemente contactados diretamente sobre oportunidades de trabalho. Mesmo que você não esteja procurando emprego, é provável que você receba ofertas de emprego como gerente de projetos.\n• No gerenciamento de projetos, você tem a oportunidade de liderar equipes e projetos ao mesmo tempo em que agrega valor aos negócios.\n• Gerenciamento de Projetos é um campo excitante, você faz coisas diferentes todos os dias e interage constantemente com pessoas de diferentes áreas do negócio.\n• Gerentes de projeto tendem a fazer bons gerentes, diretores, CEOs, CIOs, vice-presidentes e líderes de forma geral. Eles entendem que os dois conceitos mais importantes que pessoas em posições de liderança precisam gerenciar: pessoas e dinheiro.\n\n\nSeu instrutor:\nMauricio Rubio é Gerente de Projetos há mais de uma década e atualmente é Gerente Sênior de Projetos em uma das principais universidades do mundo (1ª na Austrália e 8ª no mundo dentre as novas Universidades). Ele também trabalhou com algumas grandes marcas, tais como, a Johnson & Johnson e é um veterano em gerenciamento de projetos.\nNeste curso, você aprenderá muito sobre Gerenciamento de Projetos e sobre como se Tornar um Gerente de Projetos, desde ferramentas, aplicativos, dicas, conceitos e metodologias, o que fazer o que não fazer. Você também aprenderá a entregar um projeto com sucesso.\n\n\nO que vou aprender?\n• Como se tornar um gerente de projetos e habilidades-chave de gerenciamento de projetos.\n• Conhecimento básico e habilidades aplicadas em Gerenciamento de Projetos.\n• Liderar um projeto para o sucesso e como capitalizar nos aspectos da liderança e do comportamento para fazê-lo.\n• As ferramentas e técnicas para gerenciar o abrangente ciclo de vida do gerenciamento de projetos - desde o início até seu fechamento.\n• Equilibrar as variáveis críticas de tempo, custo e escopo para atender às expectativas dos clientes.\n• A capacidade de aplicar as melhores práticas em vários setores e empresas.\n• Navegar pelos aspectos sociais e culturais, práticas legais e regulatórias, tecnologia e infraestrutura que influenciam o sucesso dos projetos no mercado global.\n• Maneiras práticas de usar as habilidades de gerenciamento de projetos, quer seu projeto seja grande ou pequeno.\n• Acrônimos de gerenciamento de projetos.\n• O que FAZER e NÃO FAZER em Gerenciamento de Projetos.\n\n\nPor que devo fazer este curso?\n• As posições de gerenciamento de projetos estão crescendo em um ritmo 1,5 milhão de oportunidades por ano (fonte: Project Management Institute).\n• Você receberá uma Certificação de Gerenciamento de Projetos (você receberá um certificado após a conclusão deste curso).\n• Você receberá brindes incríveis, incluindo acesso a 2 incríveis cursos de gerenciamento de projetos, um do principal provedor de treinamento on-line da Austrália e o outro diretamente da Microsoft sobre gerenciamento de projetos com o Microsoft Project, a principal ferramenta de gerenciamento de projetos em ambientes corporativos.\n• O salário médio de um gerente de projeto de nível básico é de US $ 84.000 (fonte: Project Management Institute), mas gerentes de projeto seniores ganham até US $ 200.000 por ano, dependendo da indústria e da complexidade de sua função. Alguns ganham ainda mais :)\n• Oportunidades excitantes de carreira em várias áreas do mercado, atuando como Gerente de Projetos, Consultor de Projetos, Analista de Projetos, Gerente de Programas e Gerente de escritório de gerenciamento de projetos.\n• O gerenciamento de projetos é um conjunto de habilidades essenciais para muitas carreiras e em muitos contextos das nossas vidas.\n• Você economizará milhares de dólares em relação ao que pagaria ao PMI ou a uma Universidade por uma Certificação em Gerenciamento de Projetos.\n• Vou explicar por que você não precisa obter uma Certificação de Gerenciamento de Projetos do PMI para entrar no Gerenciamento de Projetos. Melhor ainda, vou fornecer recursos para você obter uma Certificação de Gerenciamento de Projetos dos principais provedores globais gratuitamente!\n\n\nPara quem é este curso?\n• Pessoas que querem se tornar um gerente de projetos.\n• Homens e mulheres que gostariam de seguir uma carreira em Gerenciamento de Projetos.\n• Pessoas que querem aprender sobre gerenciamento de projetos.\n• Desenvolvedores, analistas de negócios, coordenadores, gerentes de mudança, analistas e qualquer pessoa que queira mudar para uma carreira em gerenciamento de projetos.\n• Pessoas interessadas em encontrar facilmente oportunidades de emprego. Gerenciamento de Projetos é um mercado enorme!\n• Pessoas interessadas em ganhar entre US $ 80 e US $ 200 mil por ano. E às vezes até mais :)\n• Pessoas que gostam de liderar equipes, coordenar tarefas e construir relacionamentos de confiança.\n• Este curso é para iniciantes, mas também para veteranos experientes. De qualquer maneira, você achará este curso informativo, produtivo e valioso.\n• Pessoas que desejam obter um certificado de gerenciamento de projetos da UDEMY para exibir em seu currículo.\n\n\nPromessa a todos os alunos (atuais e futuros alunos)\n\n\nAlunos primeiro. Eu nunca comprometo sua experiência para ganhar dinheiro. Jamais. Sim, isso também é um negócio, mas para mim o ensino vai muito além de ganhar dinheiro. Eu já tenho um emprego em tempo integral e, felizmente, não confio em ensinar para sobreviver. Você está sempre na vanguarda dos meus cursos e eu quero garantir que você tenha uma experiência única, valiosa e memorável. Eu prometo.\nSuporte 24x7x365. Você pode entrar em contato comigo 24 horas por dia, 7 dias por semana, durante todo o ano, mesmo nos feriados, Natal e Ano Novo; Vou entrar em contato com você rapidamente (em algumas horas no máximo) e oferecer uma excelente qualidade de serviço em meu suporte. Eu prometo.\nHumildade, bondade e responsabilidade social. Eu acredito em retribuir a você e ao mundo. Então, pense em mim como sua própria vida real humana \"Siri\". Se você precisar de conselhos ou apoio, é só pedir. E se eu puder fazer algo para ajudá-lo em sua jornada, eu farei. Eu prometo.\nFeito australiano. Reconhecido na indústria como um símbolo de qualidade e excelência. Todos os meus cursos são feitos na Austrália com alta tecnologia e profissionalmente editados. Eles também incluem o meu molho secreto: muita paixão e amor! Também aplico em meus cursos tudo o que aprendi com anos de experiência trabalhando com tecnologia, projetos, empreendedores e pessoas em todo o mundo. Eu prometo.\nQualidade acima de quantidade. Esforçar-me-ei por tornar os cursos concisos, relevantes e relevantes. O tempo é um dos nossos ativos mais valiosos e precisamos investir com cuidado. Então eu não farei um curso longo para o propósito de mostrar que tem mais horas; somente quando estritamente necessário. Para mim, é sobre qualidade e se eu puder entregar isso em 5 minutos e economizar seu tempo, eu irei. Eu prometo.\n\n\nVocê é um sem fins lucrativos ou caridade ajudando o mundo?\nImpressionante! O mundo precisa de mais pessoas como você. Mantenha o bom trabalho e deixe-me saber como posso ajudar. Para começar, entre em contato comigo para desbloquear o acesso gratuito a todos os meus cursos. Apenas me envie uma mensagem em particular e classificarei isso para você e sua equipe.\n\n\nAtenção: Este curso possui legendas em português, áudio e recursos em inglês.",
      "target_audience": [
        "Pessoas que querem se tornar um gerente de projetos.",
        "Homens e mulheres que gostariam de seguir uma carreira em gerenciamento de projetos.",
        "Pessoas que querem aprender sobre gerenciamento de projetos.",
        "Desenvolvedores, analistas de negócios, coordenadores, gerentes de mudança, analistas e qualquer pessoa que queira mudar para uma carreira em gerenciamento de projetos.",
        "Pessoas interessadas em encontrar facilmente oportunidades de emprego. Gerenciamento de Projetos é um mercado enorme!",
        "Pessoas interessadas em ganhar entre US $ 80 e US $ 200 mil por ano. E às vezes até mais :)",
        "Pessoas que gostam de liderar equipes, coordenar tarefas e construir relacionamentos de confiança.",
        "Este curso é para iniciantes, mas também para veteranos experientes. De qualquer maneira, você achará este curso informativo, produtivo e valioso."
      ]
    },
    {
      "title": "Diseño y Programación Orientada a Objetos en C#",
      "url": "https://www.udemy.com/course/diseno-y-programacion-orientada-a-objetos-en-c/",
      "bio": "Aprende principios de desarrollo de software para construir mejores aplicaciones",
      "objectives": [
        "Construir software utilizando buenas prácticas de programación orientada a objetos",
        "Desarrollar software de N-Capas",
        "Identificar puntos de mejora en los distintos módulos de una aplicación",
        "Aplicar los cinco principios SOLID de diseño orientado a objetos",
        "Realizar diagramas UML de las clases del sistema"
      ],
      "course_content": {
        "Introducción": [
          "Introducción al Módulo 1",
          "Objetos y Clases",
          "Programación Orientada a Objetos (POO)",
          "Diseño Orientado a Objetos (DOO)",
          "Requerimientos Funcionales y no Funcionales",
          "Optimización Prematura",
          "Resumen"
        ],
        "Fundamentos de C# y POO": [
          "Introducción al Módulo 2",
          "Campos y Propiedades",
          "Tipos de Valor y de Referencia",
          "Constructores",
          "Signaturas y Sobrecargas",
          "Interfaces",
          "Clases Estáticas",
          "¿Cuándo Utilizar Clases Estáticas?",
          "Métodos de Extensión",
          "Resumen"
        ],
        "Herencia": [
          "Introducción al Módulo 3",
          "Introducción a la Herencia",
          "Clases Abstractas",
          "Métodos Virtuales",
          "Constructores y Herencia",
          "Diferencia entre Clases Abstractas e Interfaces",
          "Resumen"
        ],
        "Modificadores de Acceso": [
          "Introducción al Módulo 4",
          "Introducción a los Modificadores de Acceso",
          "Public",
          "Private",
          "Internal",
          "Protected",
          "Protected Internal",
          "Private Protected",
          "Inconsistencia de Accesibilidad",
          "Resumen"
        ],
        "Los 4 Pilares de la Programación Orientada a Objetos": [
          "Introducción al Módulo 5",
          "Abstracción",
          "Encapsulamiento",
          "Ejemplo de Encapsulamiento y Principio Ordena No Pidas",
          "Polimorfismo por Herencia",
          "Polimorfismo por Interfaz",
          "Resumen"
        ],
        "Complejidad y Diagramación UML": [
          "Introducción al Módulo 6",
          "Cohesión",
          "Acoplamiento",
          "Acoplamiento e Inyección de Dependencias",
          "Diagramas de Clases",
          "Resumen"
        ],
        "Tipos de Relaciones": [
          "Introducción al Módulo 7",
          "Asociación",
          "Herencia",
          "Composición y Multiplicidad",
          "Agregado",
          "Composición Sobre Herencia",
          "Resumen"
        ],
        "Tipos de Objetos": [
          "Introducción al Módulo 8",
          "Objetos de Entidad",
          "Objetos de Control",
          "Objetos de Frontera",
          "Resumen"
        ],
        "Principios SOLID": [
          "Introducción al Módulo 9",
          "Principio de Responsabilidad Única",
          "Removiendo la Primera Responsabilidad",
          "Removiendo las demás Responsabilidades",
          "Principio Abierto/Cerrado",
          "Principio de Sustitución de Liskov",
          "Principio de Segregación de Interfaces",
          "Principio de Inversión de Dependencia",
          "Aplicando el Principio de Inversión de Dependencia",
          "Resumen"
        ],
        "Arquitectura de N-Capas": [
          "Introducción al Módulo 10",
          "Capas",
          "Arquitectura Cebolla",
          "Arquitectura Dominio-Céntrica en Visual Studio",
          "Ejemplo: Arquitectura Dominio-Céntrica en Visual Studio",
          "Resumen"
        ]
      },
      "requirements": [
        "El estudiante debe de tener nociones de un lenguaje orientado a objetos, como C# o Java (no se requiere conocimiento avanzado)"
      ],
      "description": "Programar va más allá de escribir código. Necesitamos tener conceptos, técnicas y principios que nos ayuden a escribir software que sea mantenible. Con este curso, aprenderás a utilizar la programación orientada a objetos a tu favor para desarrollar aplicaciones que no simplemente funcionen, sino que puedan evolucionar con facilidad.\nAprende a utilizar las herramientas de C# y del diseño orientado a objetos para construir software utilizando buenas prácticas. No importa si no utilizas C#, los principios que aprenderás en este curso te ayudarán en tu carrera profesional, ya que las técnicas que aprenderás son aplicables para cualquier lenguaje de programación orientado a objetos.\nAprende a construir software de N-capas o multicapas, el cual se presta a reutilización de código por parte de distintas capas de presentación.",
      "target_audience": [
        "Programadores de lenguajes orientado a objetos (C#, Java, etc)",
        "Team leads de equipos de desarrollo",
        "Aspirantes a arquitectos de software"
      ]
    },
    {
      "title": "Safety of the Intended Functionality (SOTIF) – ISO/PAS 21448",
      "url": "https://www.udemy.com/course/safety-of-the-intended-functionality-sotif-isopas-21448/",
      "bio": "Master functional insufficiencies, triggering conditions & scenario-based safety with practice questions",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Modern vehicles increasingly rely on ADAS (Advanced Driver Assistance Systems) and autonomous functions powered by sensors, AI, and complex software. While ISO 26262 ensures safety in the presence of hardware or software failures, it does not address hazards that occur even when systems function as designed.\nThis is where SOTIF (Safety of the Intended Functionality – ISO/PAS 21448) comes in.\nThis course provides a comprehensive practice test bank with scenario-based and foundation-level questions designed to prepare you for SOTIF and Functional Safety certification exams. Each question is crafted to reinforce your understanding of key concepts like functional insufficiencies, triggering conditions, unknown unsafe scenarios, and residual risk—all critical in ADAS and autonomous driving development.\nBy the end of this course, you will have the confidence to approach real-world safety challenges in AI-driven systems and excel in professional certification exams.\nWhat You’ll Learn\nUnderstand the scope and intent of SOTIF (ISO/PAS 21448)\nDifferentiate between ISO 26262 (Functional Safety) and SOTIF\nIdentify functional insufficiencies and triggering conditions\nAnalyze unknown unsafe scenarios in ADAS and autonomous driving\nApply SOTIF to AI-based perception and sensor systems\nPractice scenario-based exam questions aligned with certification standards\nGain confidence to take SOTIF / Functional Safety certifications\nFeatures of This Course\n100+ Multiple Choice Questions (MCQs) – foundation, advanced, and scenario-based\nDetailed explanations for every answer option\nCoverage of real-world ADAS and autonomous driving examples\nStructured for both beginners and experienced professionals",
      "target_audience": [
        "Automotive Engineers & Safety Professionals - Working in ADAS, autonomous driving, or vehicle software/hardware who want to understand SOTIF principles and practices.",
        "Functional Safety Engineers / ISO 26262 Practitioners - Professionals already familiar with ISO 26262 who want to expand into SOTIF and cover hazards beyond system failures.",
        "System & Software Engineers - Developers designing perception, control, or AI-based automotive systems who need to account for limitations of intended functionality.",
        "Quality, Testing & Validation Engineers - Those responsible for scenario-based testing, simulations, and validation of ADAS/AI-driven systems.",
        "Graduate Students & Researchers - Students in automotive engineering, robotics, and AI who want to gain industry-relevant safety knowledge."
      ]
    },
    {
      "title": "Siemens S7 PLC Training using the TIA portal",
      "url": "https://www.udemy.com/course/siemens-plc-training-using-ladder-logic-the-beginning/",
      "bio": "Learn How to Program a Siemens S7 PLC using the TIA portal and Common Programming Instructions.",
      "objectives": [
        "You will learn how to set up and program a project using the Siemens TIA portal. You will create a project in the most efficient manner possible.",
        "You will be able to use the project for fault finding.",
        "You will gain confidence around the software for modification and adding additional features.",
        "You will learn Processor Configuration and I/O configuration."
      ],
      "course_content": {
        "Introduction": [
          "Personal Introduction",
          "Course Introduction"
        ],
        "Creating a Project": [
          "Creating a Project",
          "Demonstration. Creating a Project"
        ],
        "Programming a Siemens TIA Project": [
          "Working with Control Blocks and Networks",
          "Using Bit instructions in a Siemens TIA Project",
          "Demonstration. How to program Bit instructions in a TIA project",
          "Configuring and Using Timers.",
          "Showing How to Configure Timers",
          "Programming and Using Counters in a Siemens TIA Project.",
          "Configuring Counters. Demonstration",
          "Programming and Using Comparator Instructions",
          "Programming Comparator Instructions. Demonstration",
          "Programming Using Maths Instructions",
          "Programming Quiz. Bit instructions, Timers and Counters. Test your Knowledge",
          "Programming Quiz 2: Comparator and Maths Instructions. Test your Knowledge"
        ]
      },
      "requirements": [
        "Definitely computer literacy. Knowledge of PLC's in general and knowledge of Siemens systems in particular is a distinct advantage but not a requirement."
      ],
      "description": "This course covers the Siemens S7 PLC Training using the TIA Portal is for any of you who may have used or had exposure to other PLC systems but with little or no exposure to the Siemens TIA Portal.\nI shall be your instructor during this training and I have had many years practical experience creating projects and programming PLC's, HMI's, commissioning and face-to-face training. I also possess a SAQA Further Education and Training Certificate Measurement, Control and Instrumentation. This is South African but recognized in many countries internationally.\nI will show you how to create a project and use programming techniques utilizing the more commonly used instructions.\nWho Should Take This Course?\nThis Siemens S7 PLC Training using the TIA Portal course is designed as a course for users who have had very little exposure to Siemens PLC systems\nThis course is also strongly recommended if you wish to improve your programming knowledge.\nThis course will give you the knowledge and confidence to create and program a working project.\nListed below are some of the topics I will cover with you in this course.\nCreating a project.\nUsing the different Function block types.\nSetting up and navigating the software.\nHow the program flow within a project behaves.\nYou will learn how to program a ladder routine using the most popular instructions such as Bits, Timers, Counters, and many others.\nEstablishing communication between the PLC and the computer.\nThis is just a short description explaining what you will learn but there is a lot more that you will learn if you take the Siemens S7 PLC Training using the TIA Portal.\nThere are a number of quizzes that you can complete after each section to help you reinforce your knowledge and gain confidence using the software. There are also some practical labs for you to complete.\nAt the end of the course, you will feel confident creating and running a project, interrogating an existing project and carrying out necessary changes to a running operation.\nThe majority of the course consists of video tutorials where I will explain all the different aspects of the Siemens PLC system and demonstrate the use of the software for each of these aspects.\nThe more you can use the software, the better you will be.\nSo if you are really serious about learning Siemens S7 PLC Training using the TIA Portal and you have reasonable knowledge of the software, then this course is for you. Enrol on this course and you can be learning Today.",
      "target_audience": [
        "Instrument and Control System technicians and engineers.",
        "Anyone who has experience of Siemens Systems but wishes to advance their knowledge.",
        "PLC Programmers of other PLC manufacturers who wish to gain knowledge on Siemens."
      ]
    },
    {
      "title": "สร้างแอพพลิเคชั่นด้วยภาษา Python (Real-World Projects)",
      "url": "https://www.udemy.com/course/python-real-world-projects/",
      "bio": "เรียนรู้การสร้างแอพพลิเคชั่นด้วยภาษา Python แบบ Step by Step",
      "objectives": [
        "สามารถสร้าง Desktop Application (GUI) ด้วยภาษา Python ได้",
        "สามารถสร้างเว็บฝั่ง Backend ด้วยภาษา Python ได้ (Flask Framework , Django Framework)",
        "เรียนรู้การติดตั้งและนำ Package เสริมมาใช้งานร่วมกับภาษา Python ได้ (ฐานข้อมูล , คิวอาร์โค้ด, แปลภาษา)",
        "เรียนรู้การสกัดข้อมูลจากเว็บไซต์ด้วยภาษา Python (Web Scraping)"
      ],
      "course_content": {},
      "requirements": [
        "มีพื้นฐานการเขียนโปรแกรมด้วยภาษา Python",
        "เข้าใจโครงสร้างข้อมูลพื้นฐานในภาษา Python (List , Dictionary)",
        "มีพื้นฐานการเขียนโปรแกรมเชิงวัตถุด้วยภาษา Python (Class , Method , Object)",
        "มีพื้นฐานการจัดการฐานข้อมูลเบื้องต้น (SQL)",
        "มีพื้นฐาน HTML5 , CSS3 , JavaScript , Bootstrap 5 สำหรับนำมาสร้างเว็บแอพพลิเคชั่น"
      ],
      "description": "หลักสูตรนี้คุณจะได้เรียนรู้การประยุกต์ใช้ภาษาไพธอนสำหรับนำการสร้างแอพพลิเคชั่นสำหรับใช้งานจริง\nในหลักสูตรนี้จะเป็นการนำเอาความรู้ภาษาไพธอนมาประยุกต์ใช้งานร่วมกับ ไลบรารี่/ Package เสริมอื่นๆ เช่น\nจัดการฐานข้อมูล (Database)\nการสร้างคิวอาร์โค้ด\nแปลภาษาโดยใช้ Google Translate\nการดาวน์โหลดวิดีโอ\nการเขียนโปรแกรมเชิงวัตถุ (OOP) สำหรับสร้างแอพทำข้อสอบ\nการพัฒนาเว็บฝั่ง Backend ด้วย Flask Framework , Django Framework\nการทำ Web Scraping ด้วย BeautifulSoup4\n\n\n*หมายเหตุ : Section \"หัวข้อเสริม\" เป็นหัวข้อที่ไม่เกี่ยวข้องกับเนื้อหาหลักในคอร์สเรียนท่านสามารถเรียนหรือไม่เรียนก็ได้",
      "target_audience": [
        "ผู้ที่สนใจอยากจะพัฒนาทักษะด้านการเขียนโปรแกรมด้วยภาษา Python"
      ]
    },
    {
      "title": "Pass DP-700: Microsoft Fabric Data Engineer Exam in 3 Days",
      "url": "https://www.udemy.com/course/pass-dp-700-microsoft-fabric-data-engineer-exam-in-3-days-x/",
      "bio": "DP-700: Implementing Data Engineering Solutions Using Microsoft Fabric | Real Questions | Covers All Exam Topics",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Pass DP-700: Implementing Data Engineering Solutions Using Microsoft Fabric Exam in 3 Days 2025 - 80+% Student Passed Exam After Only Studying These Questions. Pass yours, enroll now!\n\n\nFree Sample Question 1 out of 3:\nAt DataFlow Solutions, the DevOps Team manages a Fabric workspace named Workspace1, and your company has acquired GitHub licenses. You need to configure source control for Workpace1 to use GitHub. The solution must follow the principle of least privilege. Which permissions do you require to ensure that you can commit code to GitHub?\nA. Actions (Read and write) and Contents (Read and write)\nB. Actions (Read and write) only\nC. Contents (Read and write) only\nD. Contents (Read) and Commit statuses (Read and write)\nCorrect Answer: C\nExplanation:\nTo commit code to a GitHub repository from a Fabric workspace, the necessary permissions revolve around managing the repository's content.\n1.  Contents (Read and write): This permission is fundamental for any source control operation involving code changes.\n*   `Read` allows the Fabric integration to fetch the current state of the repository (e.g., to see existing files or the branch history).\n*   `Write` allows the integration to push new commits, create branches, update files, and perform other actions that modify the repository's content. This directly enables the act of \"committing code.\"\n2.  Principle of Least Privilege: The question specifically states that the solution must follow the principle of least privilege. This means granting only the minimum necessary permissions.\n*   Actions (Read and write): This permission is for managing GitHub Actions workflows (CI/CD pipelines). While a Fabric workflow might eventually trigger or be linked to GitHub Actions, the act of *committing code* itself does not require `Actions` permissions. Including this would violate the least privilege principle as it grants more access than strictly needed for the stated goal of \"commit code.\"\n*   Commit statuses (Read and write): This permission is for updating commit statuses (e.g., indicating whether a build passed or failed). This is relevant for CI/CD processes but not for the act of writing the code changes themselves.\nTherefore, `Contents (Read and write)` is the exact permission set required for committing code, and providing only this set adheres to the principle of least privilege.\n\n\n\n\nFree Sample Question 2 out of 3:\nAt Stratos Data Corp., your Enterprise Data Management team manages a Fabric workspace with a Lakehouse. This workspace includes a Dataflow Gen2 dataflow copying data from an on-premises SQL Server, a notebook transforming and loading files, and a data pipeline loading a CSV file to the Lakehouse. To ensure these data loading processes execute sequentially and run every 15 minutes, which type of Fabric item should you utilize for orchestration?\nA. notebook\nB. warehouse\nC. Dataflow Gen2 dataflow\nD. data pipeline\nCorrect Answer: D\nExplanation:\nA Fabric data pipeline is the correct item to use for orchestrating multiple items sequentially and scheduling them.  Here's why:\n*   Data Pipeline (D): Fabric Data Pipelines are designed for orchestration, enabling you to chain together various activities, including running Dataflow Gen2 dataflows, executing notebooks, and performing data loading operations. They provide robust scheduling capabilities, allowing you to set up recurring runs at specified intervals, such as every 15 minutes. This perfectly matches the requirement to run multiple items one after the other and on a schedule.\n*   Notebook (A): While a notebook can perform data transformations and even trigger some operations, it is primarily a tool for interactive data analysis and transformation using code. It is not the primary or most efficient tool for orchestrating a sequence of *different types* of Fabric items, especially when considering robust error handling, monitoring, and diverse activity types.\n*   Warehouse (B): A warehouse in Fabric (or a Lakehouse) is a data storage and analytical engine. It is where data resides and is queried, not an orchestration tool for managing data movement and transformation workflows.\n*   Dataflow Gen2 dataflow (C): Dataflow Gen2 is an ETL (Extract, Transform, Load) tool used for ingesting and transforming data. While it performs data loading, it cannot orchestrate other items like notebooks or an entire sequence of distinct processes. It is one *type* of item that a data pipeline can orchestrate.\n\n\n\n\nFree Sample Question 3 out of 3:\nAt Innovate Solutions, your Data Engineering Team manages a Fabric deployment pipeline spanning Dev, Test, and Prod workspaces. To integrate and deploy an Eventhouse within this existing process, what tool or service should you utilize?\nA. an Azure DevOps pipeline\nB. an eventstream\nC. GitHub Actions\nCorrect Answer: A\nExplanation:\nTo automate the deployment of Fabric items, such as an Eventhouse, across multiple environments (Dev, Test, Prod) in a structured and repeatable manner, you need a robust CI/CD (Continuous Integration/Continuous Deployment) tool.\nA. an Azure DevOps pipeline: Azure DevOps pipelines are a powerful CI/CD platform that can automate the entire deployment process for Microsoft Fabric items. They allow you to define a series of steps to pull code from source control (like Git), build artifacts, and then deploy them to different workspaces (Dev, Test, Prod) using Fabric's Git integration, REST APIs, or other programmatic methods. This is the standard practice for enterprise-grade automation of deployments.\nB. an eventstream: An eventstream in Microsoft Fabric is a real-time data ingestion and processing capability. It is used to capture, transform, and route streaming data, often as an input to an Eventhouse. It is *not* a tool for deploying the Eventhouse itself or for managing the deployment process across environments.\nC. GitHub Actions: GitHub Actions is another popular CI/CD platform, similar in purpose to Azure DevOps pipelines. While it *could* theoretically be used to deploy Fabric items, given that Azure DevOps is a first-party Microsoft solution deeply integrated with the Azure ecosystem and often the preferred choice for enterprise Microsoft deployments, Azure DevOps pipeline is the most direct and commonly expected answer in this context.\nTherefore, an Azure DevOps pipeline is the most appropriate solution for automating the deployment of an Eventhouse as part of a structured deployment process across multiple Fabric workspaces.\n\n\nWhy Choose This DP-700 Exam Prep Course?\n• Full Exam Coverage – Master every core domain of the DP-700 exam: data ingestion, transformation, modeling, analytics, monitoring, and optimization using Microsoft Fabric.\n• Step-by-Step Explanations – Learn with clear, concise breakdowns of each question. Understand not just the correct answer—but the reasoning behind it.\n• Realistic Exam Practice – Build exam confidence with practice tests that mirror the actual DP-700 experience. Tackle real-world scenarios and multi-step challenges with ease.\n• Up-to-Date & Aligned with Microsoft – Stay on track with content that’s regularly updated to match the latest DP-700 exam objectives and Microsoft Fabric capabilities.\nWhether you're a data professional looking to validate your skills, or just starting out with Microsoft Fabric, this course gives you everything you need to pass the DP-700 exam and thrive in modern data analytics.\nStart your journey toward becoming a certified Microsoft Fabric data expert—and take your data career to the next level.",
      "target_audience": [
        "Aspiring data professionals preparing for the DP-700: Microsoft Fabric Analytics Solutions certification",
        "Data analysts, engineers, and BI developers looking to expand their skills into Microsoft Fabric",
        "Professionals transitioning from tools like Power BI, Azure Synapse, or SQL Server to the unified Microsoft Fabric ecosystem",
        "Anyone curious about building modern, end-to-end data analytics solutions — from data ingestion to insight delivery",
        "Students or self-learners who want to gain hands-on experience and prove their knowledge with a recognized certification"
      ]
    },
    {
      "title": "ISO 26262 Functional Safety Engineer Practice Test",
      "url": "https://www.udemy.com/course/iso-26262-functional-safety-engineer-practice-test/",
      "bio": "Level - 1 Certification",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Embark on your journey to mastering automotive functional safety with our comprehensive practice test focused on ISO 26262 Standard. This course is meticulously crafted to reinforce your understanding of the fundamental terminology essential for functional safety professionals.\n\n\nWhat You'll Learn:\nDeep Dive into ISO 26262: Gain a thorough understanding of key terms and definitions outlined in  of the ISO 26262 standard.\nApplication of Concepts: Apply your knowledge through challenging practice questions that mirror real-world scenarios and certification exam formats.\nIdentify Knowledge Gaps: Assess your comprehension and identify areas requiring further study, ensuring a well-rounded grasp of the material.\nCourse Features:\nComprehensive Practice Questions: Engage with a diverse set of questions that mirror real-world scenarios and certification exam formats, reinforcing your understanding of ISO 26262 vocabulary.\nDetailed Explanations: Each question is accompanied by in-depth explanations, providing clarity on correct answers and elucidating key concepts.\nSelf-Paced Learning: Study at your convenience, allowing you to progress through the material at a pace that suits your individual learning style.\nProgress Tracking: Monitor your advancement through the course, identifying areas of strength and those requiring further review.\nMobile Accessibility: Access course materials seamlessly across various devices, enabling learning on-the-go.\nExpertly Curated Content: The course content is developed by professionals with extensive experience in functional safety and ISO 26262 standards, ensuring relevance and accuracy.\nCommunity Engagement: Participate in discussion forums to connect with fellow learners, share insights, and seek clarification on complex topics.\nRegular Updates: Course materials are periodically reviewed and updated to reflect the latest developments and amendments in ISO 26262 standards.",
      "target_audience": [
        "R&D professionals",
        "Product developers",
        "System integrators",
        "Automotive engineering managers",
        "Software Developers",
        "Hardware Developers"
      ]
    },
    {
      "title": "Build Desktop Applications For Windows With C# And .NET",
      "url": "https://www.udemy.com/course/learn-csharp-yaml-parsing/",
      "bio": "Learn practical C# and Windows Forms app development by creating a c# yaml parser for static sites",
      "objectives": [
        "Develop a C# Windows Forms desktop application from scratch",
        "Write, read, and process YAML files with C# (serialization)",
        "Apply object-oriented programming (OOP) principles in a real project",
        "Debug applications with Visual Studio (breakpoints, stepping, error fixing)",
        "Design user interfaces with controls, events, and proper layouting",
        "Follow best practices for clean, maintainable C# code",
        "Strengthen your understanding of C# language programming fundamentals",
        "Keep layouts responsive and consistent when resizing application windows"
      ],
      "course_content": {
        "Introduction": [
          "Course Summary & Introduction"
        ],
        "Building The Application Foundation": [
          "Creating The App And Folder Selection",
          "Adding Events, File Names Listbox, Selection Editor",
          "Adding YAML Data Controls",
          "Renaming UI Controls",
          "Adding File Contents Editor & Running The App",
          "Loading File Names From Folder",
          "Implementing The Folder Selection Dialog",
          "User Interface Design Quiz"
        ],
        "Implementing The Application Logic": [
          "Creating The GitHub Repository",
          "Toggle Editors",
          "Defining The List Selection Workflow",
          "Implementing List Selection",
          "Loading Default Folder",
          "Loading File Contents"
        ],
        "Serializing And Deserializing YAML Data": [
          "Installing NuGet Extensions In Visual Studio",
          "Creating The Data Structure",
          "Creating The Markdown Extensions Class",
          "Using The GetFrontMatter Method",
          "Debugging Our First Exception",
          "Debugging Quiz",
          "Loading Defaults - A List Of Constants",
          "Clearing Yaml Fields",
          "Making Room For Fields, Clearing",
          "Cathing An Exception",
          "Error Fixing Session #01 - Proper Execution Flow",
          "Some Debugging + File Load Optimization",
          "Exception Handling",
          "Clicking On Save + More Debugging",
          "Serialization Start + Front Matter Variable",
          "Serialize Yaml + Temp File Name",
          "Writing Data To File"
        ],
        "Reworking The User Interface: Layouting": [
          "Section Objective",
          "Part 1: Left Side Layout",
          "Part 2: Layout Right",
          "Part 3: Layout Section Yaml",
          "Part 4: Putting All Layouts Together"
        ]
      },
      "requirements": [
        "Mandatory: Install Microsoft Visual Studio Community 2022 (with C# support)",
        "Basic understanding of Object-Oriented Programming (classes, methods, public/private, static, etc.)",
        "Basic knowledge of C# syntax (variables, loops, conditions, etc.)",
        "Familiarity with Microsoft Visual Studio interface",
        "(Optional) A GitHub account for version control and project sharing",
        "Motivation to build C# Windows applications from scratch",
        "A commitment to practice coding alongside the lessons (programming requires hands-on work)",
        "Any text editor (Notepad, OneNote, or similar) for jotting down key concepts",
        "Patience and curiosity to solve coding challenges."
      ],
      "description": "Why C# Windows Forms? Why not WPF, .NET MAUI, or Blazor?\nWindows Forms (WinForms) remains one of the fastest ways to build fully-functional desktop applications for Windows.\nMicrosoft has maintained and improved WinForms with a steady commitment over the years, for better performance and compatibility.\nWinForms lets you drag, drop, and code — the fastest way to build Windows apps that just work.\nWhat you’ll learn from this course\nMainly desktop application development with C# through\nWe'll build a practical, hands-on project - a YAML parser\nWe'll build  effective responsive user interfaces by using the layouting components\nWrite classes, methods, add and handle control events to components\nUse standard Windows dialogs to select and load files\nWrite and read text to and from files\nLoad and work with YAML files for a static site generator\nInstall and manage NuGet packages\nDebug with Visual Studio 2022 (breakpoints, step-into, etc.)\nLearn and apply good coding practices\nLearn the process of building desktop applicaiton buiding blocks in a step by step way\n\n\nWhat you’ll miss if you don’t enroll:\nBuilding a complete C# YAML Parser app from scratch\nDiscovering the step-by-step process of rapid software development\nMastering essential software development best practices\nStrengthening your Object-Oriented Programming (OOP) skills\nLearning with me (Dan) in a fun, hands-on way\n\n\nWhy learn with me?\nI have a no-fluff policy — every lecture gets straight to the point.\nI focus only on what’s important for your growth and career.\nMy courses are shorter, but that’s because I respect your time.\nLectures are clear, easy to understand, and easy to follow.\nYou can even shape the course! Suggest a C# or YAML-related topic, and I might add it.\nEach lesson builds on the last, so follow the sequence for the best results.\n\n\nLet’s start your learning journey together — enroll now!",
      "target_audience": [
        "Students preparing for jobs or internships that require C# knowledge",
        "Beginners who want to start building Windows apps with C# in Visual Studio",
        "C# learners who want to strengthen their object-oriented programming skills",
        "Learners who prefer hands-on examples to understand how to design user interfaces",
        "Developers who want to learn how to add events and make apps interactive",
        "Anyone curious about creating custom tools that process structured data (YAML)",
        "Hobbyists who want to build personal productivity or knowledge management tools",
        "Developers familiar with another language who want to pick up C# quickly"
      ]
    },
    {
      "title": "Build The Classic PONG Game With Python and Tkinter",
      "url": "https://www.udemy.com/course/build-the-classic-pong-game-with-python-and-tkinter/",
      "bio": "Build a Fun Classic 1 or 2 player Game With Tkinter",
      "objectives": [
        "Introductory TKinter for GUI Apps",
        "Using The Tkinter Canvas To Draw Objects",
        "How to Build Basic Apps With TKinter and Python",
        "How To Build a Basic Player AI To Control The Paddle"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Get The Source Code",
          "Install Python",
          "Install Sublime Text and Git Bash Terminal",
          "File Setup"
        ],
        "Basic App Configuration": [
          "App Skeleton",
          "Main Function",
          "Finish the Main Function",
          "Initialize the Ball",
          "Initialize the Paddles and Scores",
          "Key Press",
          "Key Release",
          "Game Loop",
          "Reset The Ball",
          "Update and Move the Ball",
          "Ball Collisions with Top and Bottom of Screen",
          "Ball Paddle Collisions",
          "Ball Scoring"
        ],
        "Players and Effects": [
          "Update the Paddles",
          "Draw Game Ball and Paddles",
          "Draw Game Net and Scores",
          "Test The Game",
          "Select Number of Players",
          "Create a Computer Player",
          "Delay",
          "Sound Effects",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No special tools are necessary to take this course",
        "A Basic Understanding of Python and Tkinter Is Helpful"
      ],
      "description": "In this online video course, you'll embark on a nostalgic journey to recreate one of the most iconic video games in history—Pong—using Python and Tkinter. Whether you're a seasoned developer looking to refine your skills or a beginner eager to dive into the world of game development, this course offers a comprehensive guide that combines the simplicity of Python with the power of Tkinter, a standard GUI library in Python.\n\n\n**Course Overview**\n\n\nPong is often hailed as one of the pioneering video games that set the stage for the gaming industry. In this course, you'll learn how to bring this classic game to life, from setting up the game environment to implementing the game logic and adding finishing touches that make it truly playable.\n\n\n**Why Pong?**\n\n\nPong is an excellent project for learning the fundamentals of game development. It introduces you to key concepts such as game loops, collision detection, event handling, and graphical user interfaces (GUIs), all while keeping the codebase manageable for a single developer. By the end of this course, you'll have a deep understanding of these concepts, which you can apply to more complex projects in the future.\n\n\n**What You Will Learn**\n\n\n1. **Introduction to Tkinter:**\n- You'll start by getting familiar with Tkinter, understanding its core components, and how to use it to create a simple windowed application. This section will set the foundation for building more complex GUI applications.\n\n\n2. **Setting Up the Game Environment:**\n- Next, you'll learn how to create the game window, define the playing area, and set up the paddles and ball. You'll use Tkinter's Canvas widget to draw and animate these objects.\n\n\n3. **Implementing Game Logic:**\n- The heart of the game is its logic. You'll learn how to program the ball's movement, detect collisions with the paddles and walls, and implement the game rules that determine how points are scored and how the game progresses.\n\n\n4. **Adding Interactivity:**\n- No game is complete without player interaction. You'll learn how to handle keyboard inputs to control the paddles, making the game interactive and engaging.\n\n\n- Select either 1 or 2 players for the game.  We'll build out a basic computer AI for 1 player games.\n\n\n5. **Scoring System:**\n- You'll implement a scoring system that tracks and displays the scores of both players, adding a competitive element to the game.\n\n\n6. **Finishing Touches:**\n- Finally, you'll polish your game by adding sounds, enhancing the GUI, and implementing any additional features that make your version of Pong unique.\n\n\n**Why Take This Course?**\n\n\nThis course is designed to be hands-on and project-based, ensuring that you not only learn the theoretical aspects of game development but also apply them in a practical context. By the end of this course, you'll have a fully functional Pong game that you can play, share with friends, or use as a portfolio piece to showcase your skills.\n\n\n**Who Should Take This Course?**\n\n\nThis course is perfect for:\n- Beginners who want to learn Python and Tkinter through a fun, engaging project.\n- Intermediate developers looking to deepen their understanding of GUI programming.\n- Anyone interested in game development and retro gaming.\n\n\nJoin me in this course and take the first step toward mastering game development with Python and Tkinter. Whether you're coding for fun, learning new skills, or building a portfolio, this Pong project is a rewarding and educational experience that will elevate your programming skills. Let's recreate a classic and make some retro magic happen!\n\n\n- John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn to build basic apps with Tkinter",
        "Anyone wanting to learn to build GUI apps with Python"
      ]
    },
    {
      "title": "Test Mühendisleri İçin Java Eğitimi",
      "url": "https://www.udemy.com/course/test-muhendisleri-icin-java-egitimi/",
      "bio": "Sıfırdan Java Öğrenerek Selenium ile İlk Otomasyon Projesini Oluşturun!",
      "objectives": [
        "Test Otomasyonu için gereken yazılım bilgisi",
        "Java'nın otomasyında nasıl kullanıldığı",
        "Selenium ile Web Otomasyonu",
        "JUnit kütüphanesi ile framework oluşturma",
        "Kısaca test otomasyonu dünyasına giriş yaparak, ilk otomasyon projenizi oluşturun!"
      ],
      "course_content": {
        "Giriş": [
          "Kursun Yol Haritası",
          "Q&A İle Soru Paylaşımı"
        ],
        "Ortam Kurulumu": [
          "JDK (Java Development Kit) Kurulumu (Windows)",
          "JDK (Java Development Kit) Kurulumu (Mac)",
          "IDE Kurulumu"
        ],
        "Java ile İlk Proje": [
          "İlk Proje Oluşturma (Hello World!)",
          "Java Sınıf (Class) ve Object (Nesne) kavramları",
          "Java'da Yazım Kuralları"
        ],
        "Veri Tipleri (Data Types)": [
          "Java Değişkenler (Variables)",
          "Primitive (İlkel) Veri Tipleri",
          "String Veri Tipi",
          "Java da Tip Dönüşümleri (Type Casting)",
          "Arrays",
          "Ödev 1: Array Kullanımı"
        ],
        "Java Operatörler ve Koşullar": [
          "Temel Aritmetik Operatörleri",
          "Karşılaştırma ve Mantıksal Operatörler",
          "Ödev 2: Operatörler ve Koşul"
        ],
        "Koşullar (If-Else-Switch),Döngüler (Loops) ve Hata Yakalama (Exception Handling)": [
          "If-Else Koşul Kullanımı",
          "Switch-Case Yapısı",
          "Ödev 3: Switch Case",
          "Java For Döngüsü (Loop)",
          "Java While Döngüsü (Loop)",
          "Hata Yakalama (Exception handling)",
          "Ödev 4: Loop / Döngü ile String Güncelleme"
        ],
        "Method Kullanımı": [
          "Access Modifiers (Erişim Belirleyiciler)",
          "Method Kullanımı",
          "Method Parametre Kullanımı",
          "Method Return Type (Dönüş Tipi)",
          "Method Overloading (Aşırı Yükleme)"
        ],
        "Nesne Yönelimli Programlama (Object Oriented Programming)": [
          "Nesne Yönelimli Programlama (OOP)",
          "Sınıflar (Class) ve Nesneler (Objeler)",
          "Sınıflar (Class) ve Nesneler (Objeler) Pratiği",
          "Java Constructors (Kurucu / Yapıcı)",
          "Dört Temel OOP Presibi (Four Pillars of OOP)",
          "Encapsulation (Kapsülleme)",
          "Abstraction (Soyutlama)",
          "Inheritance (Kalıtım)",
          "Polymorphism (Çok Biçimlilik)",
          "Overriding (Geçersiz Kılma)",
          "Super Anahtar Kelimesi",
          "Interface (Arayüzler)",
          "Ödev 5: Nesne Yönelimli Programlama"
        ],
        "Test Otomasyonunda Kullanılan Temel Java": [
          "Java List ve ArrayList - Liste Kullanımı",
          "HashMap - Map Kullanımı",
          "Çoğul Liste - Map Kullanımı",
          "Static Anahtar Kelimesi"
        ],
        "JUnit ile Test Otomasyon Frameworkü (Yazılım Çerçevesi)": [
          "Maven Nedir?",
          "Maven Kurulumu - Windows",
          "Maven Kurulumu - macOS",
          "JUnit Test Kütüphanesi ve Maven ile Proje Kurulumu",
          "JUnit ile İlk Test Yazımı",
          "JUnit Annotations",
          "Testin Debug Edilmesi (Hata Ayıklaması)"
        ]
      },
      "requirements": [
        "Bilgisayar, Windows,Mac yada Linux işletim sistemi",
        "Ve tabiki de öğrenme isteğiniz ve çabanız!"
      ],
      "description": "Test Mühendisleri İçin Java eğitimine hoşgeldiniz!\n\n\nBu kurs test otomasyonuna başlamak isteyenler için oluşturulmuş bir kurstur.\n\n\nBu eğitim ile Test Otomasyon Mühendisliği için gerekli olan temel Java yazılım bilgisini öğrenerek, otomasyon projeleri hazırlamaya başlayın. Kursun ilk kısmında otomasyon için gerekli olan temel java bilgisini öğreneceğiz. Tüm derslerde java bilgisi dışında, öğrendiğimiz konuların test otomasyonunda da nasıl kullanıldığını da öğreniyor olacağız.\n\n\nTemel Java derleri sonrasında, Selenium ve JUnit ile iki farklı otomasyon projesi oluşturarak, test otomasyonu dünyasına giriş yapacağız!\n\n\nBu kursta sizlere adım adım, başarılı bir test otomasyon mühendisi olmak için gerekli bilgileri öğreteceğim.\n\n\nBu eğitimdeki tüm videolar 1080P (HD) kalitesinde ve sizlerin daha rahat anlayabilmesi için yüksek ses kalitesine sahip. Tüm ders videolarının üzerinde çalışılarak gereksiz kısımlar çıkartıldı. Bu sayede eğitimden gerekli bilgiyi en kısa sürede elde edebileceksiniz.\n\n\nBu kursu neden almalıyım ?\nBu kurs Udemy'de bulunan, test otomasyonu için hazırlanmış tek Java kursudur. Diğer Java kursları, test otomasyonunda ihtiyaç duyulmayan pek çok detay içeriyor ve bu nedenle öğrenmesi ve uygulamaya geçmesi çok fazla zaman alıyor. Bu kurs sayesinde sizlere, test otomasyonu için gerekli olan temel javayı en sade halde öğretiyor olacağım.\n\n\nAyrıca, bu eğitimde 10 yıla yakın olan Yazılım Test tecrübemi sizlerle paylaştım. Kariyerimde Türkiye'de : QNB Finansbank ve Doğuş Teknoloji , Belçika'da: Energy Pages ve Hollanda'da Qardio ve Payconiq firmalarında çalışma fırsatı buldum. Şu anda Hollanda da kurduğum 'Software Testing House' isimli firmam ile test eğitimleri ve danışmanlık vermekteyim.\n\n\nEğitime kaydolun ve:\n\n\n8 saat üzeri HD ders videolara erişim imkanı\nTest Otomasyonu için gereken yazılım bilgisi\nSelenium otomasyon aracı ile otomasyon alanına giriş yapabilirsiniz!\n\n\nHiçbir risk yok\nBu kurs Udemy'nin 30 gün para iadesi garantisi içerisindedir. Eğer eğitimden memnun kalmazsanız, 30 gün içerisinde %100 para iadesi alabilirsiniz.\n\n\nBaşlamaya hazır mısınız ?\nEğitime bugün kaydolun ve başarılı bir test uzmanı olman için ilk adımı atın.\nKursta görüşmek üzere!",
      "target_audience": [
        "Java ve Selenium öğrenmek isteyen test uzmanları",
        "Test Otomasyonu alanına giriş yapmak isteyenler",
        "Tecrübeli olup, yazılım ve otomasyon alanında eksiklerini tamamlamak isteyenler",
        "Kısaca bu kurs, tecrübeli ya da tecrübesiz herkes için uygundur."
      ]
    },
    {
      "title": "OWASP, seguridad web",
      "url": "https://www.udemy.com/course/owasp-seguridad-web/",
      "bio": "Detecta, soluciona, replica y entiende los ataques web más comunes",
      "objectives": [
        "Conocer los ataques de seguridad web más críticos",
        "Detectar vulnerabilidades en aplicaciones web",
        "Usar contramedidas ante los ataques web",
        "Monitorizar ataques"
      ],
      "course_content": {
        "Introducción y herramientas para instalar": [
          "Introducción",
          "Instrucciones de curso en Udemy",
          "¿Qué es OWASP?",
          "Clasificación de OWASP",
          "Página oficial de OWASP",
          "ESAPI",
          "Pasos siguientes",
          "Comprobar versión de Java",
          "Descargar Java",
          "Instalar Java",
          "Descargar Eclipse",
          "Instalar Eclipse",
          "MySQL",
          "Ejemplos y códigos para el curso"
        ],
        "Top 10 de riesgos de seguridad de OWASP": [
          "Digital Attack",
          "Concepto de saneamiento",
          "A01 - Inyección de SQL - Problema",
          "A01 - Inyección de SQL - Detección",
          "A01 - Inyección de SQL - Solución",
          "A01 - Inyección de SQL - Preparatoria de ejemplo",
          "A01 - Inyección de SQL - Prueba de inyección",
          "A01 - Inyección de SQL - Solución Escape",
          "A01 - Inyección de SQL - Solución Prepared Statement",
          "A01 - Inyección de SQL - Solución ORM",
          "A01 - Inyección HTML",
          "A02 - Pérdida de autenticación - Problema",
          "A02 - Pérdida de autenticación - Solución",
          "A02 - Pérdida de autenticación - Fijación de sesión",
          "A02 - Pérdida de autenticación - Fijación de sesión - Solución",
          "A03 - Exposición datos sensibles - Problema",
          "A03 - Exposición datos sensibles - Solución",
          "A03 - Exposición datos sensibles - Breve explicación",
          "A03 - Exposición datos sensibles - Ejemplo",
          "A03 - Exposición datos sensibles - WebStorage",
          "A03 - Exposición datos sensibles - WebStorage Ejemplo real",
          "A03 - Exposición datos sensibles - WebStorage - Guardando objetos",
          "A04 - Entidades externas XML (XXE) - Problema",
          "A04 - Entidades externas XML (XXE) - Solución",
          "A04 - Entidades externas XML (XXE) - Ejemplo",
          "A04 - Entidades externas XML (XXE) - Prueba inyección",
          "A04 - Entidades externas XML (XXE) - Prueba inyección - Solución",
          "A04 - Entidades externas XML (XXE) - Config solución",
          "A04 - Entidades externas XML (XXE) - XPath inyección",
          "A04 - Entidades externas XML (XXE) - XPath inyección - Primera solución",
          "A04 - Entidades externas XML (XXE) - XPath solución ESAPI",
          "A05 - Pérdida de control de acceso - Problema",
          "A05 - Pérdida de control de acceso - Ejemplos",
          "A05 - Pérdida de control de acceso - Solución",
          "A05 - Pérdida de control de acceso - Autenticación y Autorización",
          "A05 - Pérdida de control de acceso - Roles y grupos",
          "A05 - Pérdida de control de acceso -Spring Security",
          "A06 - Configuración incorrecta de seguridad - Problema",
          "A06 - Configuración incorrecta de seguridad - Solución",
          "A06 - Configuración incorrecta de seguridad - Configuración de cookies",
          "A06 - Configuración incorrecta de seguridad - Solución configuración de cookies",
          "A06 - Configuración incorrecta de seguridad - Spring Security Rest",
          "A07 - Cross-site scripting (XSS) - Problema",
          "A07 - Cross-site scripting (XSS) - Solución",
          "A07 - Cross-site scripting (XSS) - Ejemplo",
          "A07 - Cross-site scripting (XSS) - Solución al ejemplo",
          "A07 - Cross-site scripting (XSS) - Solución por Anotaciones",
          "A07 - Cross-site scripting (XSS) - Ejemplo ataques iframe",
          "A07 - Cross-site scripting (XSS) - Ejemplo JavaScript integrado",
          "A07 - Cross-site scripting (XSS) - Ejemplo Keylogger",
          "A07 - Cross-site scripting (XSS) - Ejemplo Login Falso",
          "A07 - Cross-site scripting (XSS) - Ejemplo Modificar Contenido",
          "A08 - Deserialización insegura - Problema",
          "A08 - Deserialización insegura - Solución",
          "A09 - Uso de componentes con vulnerabilidades conocidas - Problema",
          "A09 - Uso de componentes con vulnerabilidades conocidas - Solución",
          "A09 - Uso de componentes con vulnerabilidades conocidas - Exploit Database",
          "A09 - Uso de componentes con vulnerabilidades conocidas - RetireJS",
          "A09 - Uso de componentes con vulnerabilidades conocidas - Robtex.com",
          "A09 - Uso de componentes con vulnerabilidades conocidas - Archive.org",
          "A10 - Login y monitoreo insuficientes - Problema",
          "A10 - Login y monitoreo insuficientes - Solución"
        ],
        "Otros ataques fuera del Top10": [
          "CSRF",
          "XFS"
        ],
        "Despedida y enlaces de interés": [
          "Un extra: CryptoJS",
          "Ejemplo CryptoJS",
          "Librerías JS de Saneamiento",
          "OWASP en Integración Continua (Jenkins)",
          "Extra: Conceptos básicos de Hacking Ético",
          "Despedida",
          "Curso recomendado: Jenkins"
        ]
      },
      "requirements": [
        "Conocer algún lenguaje de programación, ser desarrollador"
      ],
      "description": "OWASP (acrónimo de Open Web Application Security Project, en inglés ‘Proyecto abierto de seguridad de aplicaciones web’) es un proyecto de código abierto dedicado a determinar y combatir las causas que hacen que el software sea inseguro. La Fundación OWASP es un organismo sin ánimo de lucro que apoya y gestiona los proyectos e infraestructura de OWASP. La comunidad OWASP está formada por empresas, organizaciones educativas y particulares de todo mundo. Juntos constituyen una comunidad de seguridad informática que trabaja para crear artículos, metodologías, documentación, herramientas y tecnologías que se liberan y pueden ser usadas gratuitamente por cualquiera.\nOWASP es un nuevo tipo de entidad en el mercado de seguridad informática. Estar libre de presiones corporativas facilita que OWASP proporcione información imparcial, práctica y redituable sobre seguridad de aplicaciones informáticas. OWASP no está afiliado a ninguna compañía tecnológica, si bien apoya el uso informado de tecnologías de seguridad. OWASP recomienda enfocar la seguridad de aplicaciones informáticas considerando todas sus dimensiones: personas, procesos y tecnologías.\nEn este curso se aprenderán todas las propuestas de OWASP, los riesgos, las posibles soluciones y las herramientas más comunes en la lucha para favorecer la seguridad de las aplicaciones web.\nEl temario que veremos será:\nSección 1: Bienvenida e instalación\nBienvenida del curso e instalación de las diferentes herramientas que se usarán durante éste.\nSección 2: ¿Qué es OWASP?\nExplicación clara, concisa y llana de qué es OWASP, de qué se ocupa y cuáles son sus principales características.\nSección 3: Top Ten de OWASP\nRepasaremos el top ten de OWASP desde el número 1 hasta el número 10, con ejemplos prácticos, especificación de los problemas y posibles soluciones.\nSección 4: Despedida y enlaces de interés\nLa despedida del curso y propuesta de nuevos cursos para complementar la formación.\nSi estás interesad@ en aprender y mejorar en tu empresa o quieres organizarte para ahorrarte bastante trabajo no dudes en apuntarte a este curso (aparte de hacer tus aplicaciones web más seguras). ¡Comenzamos!",
      "target_audience": [
        "Desarrolladores, arquitectos, analistas Java"
      ]
    },
    {
      "title": "Python Essentials Master Core Concepts",
      "url": "https://www.udemy.com/course/python-introduction-darwish/",
      "bio": "Learn Python from Scratch: Basics to Essentials",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Python History and Key Features",
          "Install Python on Windows"
        ],
        "Core Programming Concepts": [
          "Python Syntax and Basics",
          "Using Python as a Calculator",
          "Data Types and Variables"
        ],
        "Program Flow and Conditions": [
          "Conditional Statements",
          "For Loops",
          "While Loop | Break | Continue",
          "Functions",
          "Conclusion and what's Next"
        ],
        "Python Quiz": [
          "Python Basics Quiz"
        ],
        "Hands-On Experience": [
          "Python Example 01",
          "Python Example 02",
          "Python Example 03"
        ]
      },
      "requirements": [
        "No Prior Programming Experience Needed:"
      ],
      "description": "Course Overview\nThis beginner-friendly course By Darwish, Python instructor with over 50,000 students worldwide is designed to introduce you to the world of Python programming. Whether you're new to coding or want to refresh your skills, this course will provide you with a solid foundation in Python. Through hands-on exercises and real-world examples, you'll learn to write clean, efficient, and logical Python code.\n\n\nWelcome to Python Basics, the ultimate starting point for anyone eager to dive into the world of programming! Whether you're a complete beginner or have dabbled in other languages, this course is designed to make learning Python intuitive, fun, and rewarding.\n\n\nPython is renowned for its simplicity and versatility, making it one of the most sought-after programming languages today. Throughout this course, you'll master fundamental concepts such as variables, data types, control structures, loops, functions, and more. We’ll also introduce you to Python's powerful libraries, setting the stage for future exploration in fields like web development, data science, and automation.\n\n\nWhat You'll Learn\nIntroduction to Python: Learn what Python is, its history, and why it’s one of the most popular programming languages today.\nSetting Up Your Environment: Step-by-step guide to installing Python and using tools like Visual Studio Code or Jupyter Notebook.\nBasic Syntax and Operations:\nVariables and data types.\nBasic operators (arithmetic, comparison, logical).\nControl Flow and Loops\nConditional statements (if, elif, else).\nLoops (for, while) and loop control (break, continue).\nFunctions and Modules\nWhat's Next and Conclusion\n\n\nEnroll now and start your Python journey with Darwish, and unlock endless possibilities!\n\n\nYours\nDarwish",
      "target_audience": [
        "Students and Learners",
        "Future Data Scientists and AI/ML",
        "Developers"
      ]
    },
    {
      "title": "The Complete End-to-End Logging Course",
      "url": "https://www.udemy.com/course/the-complete-end-to-end-logging-course/",
      "bio": "Learn how to correctly Write, Ship and Analyze Logs using C# .Net, Logstash and Grafana",
      "objectives": [
        "How to use Logging infrastructure in C# .Net",
        "How does logging work in Docker Containers",
        "How to use Logstash as a pipeline for digesting logs",
        "Use MySQL to save data",
        "Use Grafana for visibility and alerting",
        "Create a real project for real-life usage"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to the Course"
        ],
        "Introduction to logs and Best Practices": [
          "What are logs, when are they useful",
          "The log levels",
          "Choose the correct log level",
          "Course Project",
          "Environment setup"
        ],
        "Logging in C# and Common Patterns": [
          "Creating an API application - Part 1",
          "Creating an API application - Part 2",
          "Using ILogger - In Controller",
          "Using ILogger - In Program.cs",
          "Using ILogger - Changing the log level while running",
          "Using nlog - Install and use nuget"
        ],
        "Creating a LogMessage Class in C#": [
          "Changing the application to our need",
          "Create the class itself",
          "Create a custom ILogger",
          "Change the log format"
        ],
        "Dockerizing the application and Logging in Docker": [
          "Create a Dockerfile",
          "Create a docker-compose file",
          "How Docker logging mechanism works",
          "\"docker logs\" command",
          "Some changes in the logs"
        ],
        "Introduction to Logstash and its Role in Log Management": [
          "Introduction to Logstash",
          "Install using Docker",
          "Configure logstash to receive our gelf output"
        ],
        "Building Logstash Pipelines for Advanced Manipulation": [
          "Using Filter",
          "Using Filter - Continued",
          "Adding categories for better control",
          "Using Tags to control the flow"
        ],
        "Storing and Querying Logs in SQL for Insights": [
          "Install MySQL under Docker",
          "Create a Database and a Table for the data",
          "Install MySQL plugin for Logstash",
          "Create a stored procedure",
          "Output from logstash statistic data"
        ],
        "Visualizing Logs with Grafana Dashboards": [
          "Preparing the environment - Install Grafana Docker",
          "Preparing the environment - Setup data source",
          "Visualizations - Table visualization to see “raw” data",
          "Create an alert subscription"
        ]
      },
      "requirements": [
        "Basic knowledge in C# .Net. I’ll try to cover the basics, but you should know how to program in C# (or any other high level language)",
        "REST API - This concept should be familiar with you",
        "Basic Docker knowledge. We’ll run all required applications using docker containers and docker compose. Everything will be explained, but some basic knowledge will help here.",
        "Some SQL knowledge. Highly recommended to have at least some knowledge on databases, tables and queries. Either way, you won’t get stuck if you aren’t familiar with this."
      ],
      "description": "Hi there! My name is Javier\nI’ve been working as a software engineer for more than ten years.\nI have a sweet spot for logging and I think it’s a very important aspect of software that mostly gets overseen.\nIn the last few years I’ve been deep diving into logging, and learned how to correctly write, deliver and analyze them.\n\n\nAt the end of this course you’ll have a working .Net API Server shipping Logs to a Logstash pipeline and being displayed using Grafana Dashboards.\n\n\nLet’s break this down.\nIn this course you’ll learn:\n\n\nHow to write logs in C# .Net\nEven if C# isn’t your daily programming language, everything I’ll show will be easily projectable to any other programming language and framework.\n\n\nHandling logs when working with Docker Containers - We’ll see how Docker handles the standard output (stdout), how to use docker commands to see the logs and how to configure Docker to ship the logs to wherever we want to.\n\n\nWorking with Logstash - A processing pipeline for logs. We’ll see what Logstash is, how we can run it and configure it.\n\n\nFinally, we’ll learn how to use Grafana to display the data, creating dashboards and panels.\nThe data will come from a SQL database that will be popularized using Logstash.\nWe’ll see how easy it is to create alerts on Grafana to notify when something happened according to our logs!",
      "target_audience": [
        "Junior developers wanting to broad their knowledge about logging and visibility"
      ]
    },
    {
      "title": "Python - A course for absolute beginners",
      "url": "https://www.udemy.com/course/python-a-course-for-absolute-beginners/",
      "bio": "From installation through virtualenvironments and the best choice of IDE-s and text editors to 2 sample projects.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting the stage",
          "Text editors of your choice.",
          "The pip package manager",
          "Virtualenv to separate dev environments.",
          "Pipenv the new hot stuff.",
          "IDE-s",
          "Asciinema demo",
          "Pyxel demo",
          "Outro"
        ]
      },
      "requirements": [
        "Basic python knowledge and any platform of your choice."
      ],
      "description": "Hello,\nMy name is Daniel, I'm a pythonista at heart. My goal with this course is to summarize up what I have learnt over the years and possibly get you started more easily with python as I did back then. This course if for absolute beginners with no prior experience to python. The demos work on any platform of your choosing be it Windows/Linux or even MAC. This course starts with a sample installation to prepare your environent and guides you through the best possible choice of IDE-s and text editors. There is also some demo for getting you started with the development process and there are two example projects I have realized in python.\n\n\nHope you enjoy it as much as I did making.\nBest Regards,\nDaniel",
      "target_audience": [
        "Anyone who is willing to take a deep dive into python."
      ]
    },
    {
      "title": "ETAP Training for Beginners: Learn Power System Basics",
      "url": "https://www.udemy.com/course/etaptrainingforbeginners/",
      "bio": "ETAP software course for beginners: Learn modeling, simulation, and error fixing in real-time examples",
      "objectives": [
        "Model a basic electrical network including buses, loads, and cables",
        "Run Load Flow analysis to evaluate voltage drops and power flow",
        "Interpret ETAP reports for decision-making in design and analysis",
        "Perform Short Circuit studies for fault current estimation"
      ],
      "course_content": {
        "Introduction to the Course": [
          "How to Connect with me?"
        ],
        "Kickstarter": [
          "Introduction to course",
          "Types of System studies",
          "How to download ETAP Demo"
        ],
        "Basics of System Studies": [
          "List of Power system softwares",
          "Load Flow and its Objective",
          "Short Circuit, Motor starting study and its Objective"
        ],
        "Basics of ETAP": [
          "ETAP Tool bar Explanation",
          "ETAP Quick start Guide",
          "Getting Started with Projects Part 1",
          "Getting Started with Projects Part 2",
          "Data Interpretation before Modelling",
          "Basic Modelling in ETAP with Load now analysis",
          "Revision"
        ],
        "Kickstart with Projects and Load Flow analysis": [
          "Settings up etap for Project",
          "Project Modelling Part 1",
          "Adding Cables in ETAP Library",
          "Project Modelling Part 2",
          "Project Modelling Part 3",
          "Fixing errors and Custom Cable modelling"
        ],
        "How to Analyze using ETAP Report": [
          "Interpretation of ETAP Report Part 1",
          "Interpretation of ETAP Report Part 2",
          "Project Tips Part 1",
          "Project Tips Part 2"
        ],
        "Short Circuit analysis": [
          "Short Circuit Basics",
          "Interpretation of Short circuit Report"
        ],
        "Motor Starting studies": [
          "Static Motor Starting Studies",
          "Dynamic Motor Starting Studies"
        ],
        "Whats Next in ETAP?": [
          "Tips on Learn ETAP"
        ]
      },
      "requirements": [
        "No prior ETAP experience needed. This course starts from the basics.",
        "A basic understanding of electrical circuits is helpful but not required.",
        "A Windows laptop or desktop to run the ETAP demo version.",
        "Willingness to learn by doing, with step-by-step practice videos."
      ],
      "description": "If you're an electrical engineering student, fresher, or working professional trying to learn ETAP but don’t know where to begin — this course is for you.\nETAP for Beginners is a step-by-step training program designed to help you model, simulate, and analyze basic power systems using ETAP software. No prior experience with ETAP is required. We start from scratch and guide you through every essential feature.\nIn this recorded course, you’ll learn how to create a simple power system model using buses, loads, transformers, and cables. You’ll also understand how to run load flow, short circuit, and motor starting analysis — and interpret the results using ETAP reports.\nThe course is structured into short, focused lessons so you can follow along at your own pace. Whether you’re preparing for job interviews or want to get hands-on with ETAP for real-world applications, this course helps you build confidence using the software from the ground up.\nBy the end of the course, you'll be able to:\nBasics of Power systems and Various Tools\nBuild a single-line diagram in ETAP\nPerform load flow, short circuit, and motor starting analysis\nAnalyze ETAP reports and extract results\nIdentify errors and correct issues in system modeling\nLearn tips",
      "target_audience": [
        "Electrical engineering students who want to start learning ETAP",
        "Freshers preparing for power system-related job roles",
        "Engineers who have ETAP software but don’t know how to use it",
        "Working professionals looking to switch into power system studies",
        "Anyone struggling to get started with load flow and short circuit analysis in ETAP"
      ]
    },
    {
      "title": "リバーシで学ぶアプリケーション設計入門〜仕様の整理からTypeScriptでの実装まで〜",
      "url": "https://www.udemy.com/course/learning-application-architecture-with-reversi/",
      "bio": "「MVC」「3 層アーキテクチャ」「サービスクラス」「ドメインモデル」「クリーンアーキテクチャ」など、実務で遭遇してよく分からないとなりがちなアプリケーション設計の概念を学んで、アプリケーションエンジニアとしてステップアップしましょう！",
      "objectives": [
        "TypeScript の基礎知識と async/await を用いた非同期処理",
        "アプリケーションの仕様の整理や API・DB 設計の流れの例",
        "MVC や 3 層アーキテクチャなどの、アプリケーション設計の基本概念",
        "Table Data Gateway パターンや Repository パターンによるデータアクセス",
        "ビジネスロジックの概念と、ドメインモデルの設計・実装例",
        "依存性逆転の原則を適用した、ドメイン層を中心としたアーキテクチャ",
        "QueryService を使った Repository の弱点への対応"
      ],
      "course_content": {},
      "requirements": [
        "得意なプログラミング言語で、ある程度すらすらコードを書けること（「リバーシを作ってください」と言われて、自分なりに実装できるくらいが目安です）",
        "何らかのプログラミング言語で、クラス・インスタンスの概念を理解していること",
        "何らかのプログラミング言語で、Web アプリケーションを実装したことがあること",
        "JavaScript をブラウザで実行したことがあり、「変数・if・for・関数」程度のコードが書けること",
        "MySQL や PostgreSQL などの RDBMS にふれたことがあり、基本的な SQL が書けること",
        "ターミナルで ls、cd などの基本的なコマンドを実行したことがあること",
        "絶対パス・相対パス程度のコンピュータの基礎知識があること",
        "プログラミングに使用可能な PC を所有し、VSCode と Docker をインストール済みであること"
      ],
      "description": "プログラミングの基礎を学び、アプリケーション開発に実践的に関わり始めると、「MVC」「3 層アーキテクチャ」「サービスクラス」「ドメインモデル」「クリーンアーキテクチャ」といった、なかなか理解できない単語に遭遇します。\n\n\nこれはいわゆる「アプリケーションアーキテクチャ」という分野の話で、アプリケーション開発に関わり始めると、誰もが突き当たる壁の一つです。\n\n\n例えば...\n「MVC」や「3 層アーキテクチャ」といった用語が、何を指していて、どんな関係なのかよく分からない\n「Controller にビジネスロジックを書くな」と言われたが、ではどうすべきなのか、そもそも「ビジネスロジック」とは何なのか分からない\n1 ファイルに大量のコードが書かれているのを見たが、どう改善すればいいのか分からない\n「ドメイン駆動設計」や「クリーンアーキテクチャ」を学ぼうとしたが、なかなか理解が進まない\nといったことはないでしょうか？\n\n\nそこでこのコースでは、上記のような疑問を解消すべく、多くの方がふれたことのある「リバーシ」を題材として、TypeScript で実際にコードを書きながら、アプリケーション設計の基本を学びます。\n\n\nこのコースでは、リバーシのアプリケーションの開発を、アプリケーションの設計とも大きく関わる、仕様の整理や API・DB 設計の流れから始めます。\nその後、まずはコードの設計方針がないまま実装を進めるとどんな問題が発生するのかを体験し、実装を改善しながらよく使われている様々な設計手法を学んでいきます。\n\n\nキーワード\nMVC、3 層アーキテクチャ、ビジネスロジック、サービスクラス、トランザクションスクリプト、ドメインモデル、レイヤードアーキテクチャ、クリーンアーキテクチャ\n\n\n更新履歴\n2023/05/12「（補足）asdf のセットアップについて」を追加",
      "target_audience": [
        "実務に入って「ビジネスロジック」や「サービスクラス」といった単語に遭遇し、何を指しているのか分からず困っている方",
        "アプリケーションのどこにどんなコードを書くのか、例を学びたい方",
        "1 ファイルに大量のコードが書かれているのを見て、そのようなコードを改善する方針を学びたいと感じている方",
        "「ドメイン駆動設計」や「クリーンアーキテクチャ」を学ぼうとしたが、なかなか理解が進まず困っている方"
      ]
    },
    {
      "title": "Introduction to Generative AI in 1 hour - Open to all",
      "url": "https://www.udemy.com/course/introduction-to-generative-ai-prompt-engineering-gate-moyyn/",
      "bio": "For jobseekers and career change aspirants - including AI fundamentals - Learn from Industry Leaders",
      "objectives": [],
      "course_content": {
        "Sessions": [
          "Introduction to GenAI",
          "GenAI Training a Neural Network",
          "Learning in a neural network",
          "Code example",
          "Bonus"
        ]
      },
      "requirements": [
        "No previous knowledge required! Suitable for candidates from any domain."
      ],
      "description": "Welcome to 'Introduction to the world of Gen AI, a first-of-its kind short program designed for jobseekers and career change aspirants.\nThis course is specifically created as a JOB-BASED TRAINING  program thereby teaching concepts hands-on and relevant to real-work environment. If you are looking for a job in Data Science or AI if you are a student who would like to get first experience in this domain, this course is exactly for you to understand about this domain before starting in-depth training.\n\n\nExtra Module and Benefits:\nAI Fundamentals and Applications:\nUnlock exclusive access to one of our AI modules Learn from our experts leveraging AI to enhance your productivity and understand the wide variety of applications of AI across industries\n\n\nTrainers:\nDr. Chetana Didugu - Germany\nDr. Chetana Didugu is an Experienced Data Scientist, Product Expert, and PhD graduate from IIM Ahmedabad. She has worked 10+ years in various top companies in the world like Amazon, FLIX, Zalando, HCL, etc in topics like Data Analysis and Visualisation, Business Analysis, Product Management, Product Analytics & Data Science. She has trained more than 100 students in this domain till date.\n\n\nAravinth Palaniswamy - Germany\nFounder of 2 startups in Germany and India, Technology Consultant, and Chief Product Officer of Moyyn, and has 10+ years of experience in Venture Building, Product and Growth Marketing.",
      "target_audience": [
        "Students",
        "Jobseekers",
        "Aspiring AI Engineers",
        "Career switchers",
        "Open to all"
      ]
    },
    {
      "title": "Clean Code: Entwurfsmuster und objektorientiertes Design",
      "url": "https://www.udemy.com/course/clean-code-entwurfsmuster-und-objektorientiertes-design/",
      "bio": "Entdecke die Einfachheit moderner Softwareentwicklung mit Hilfe von Design Patterns und Object Oriented Design.",
      "objectives": [
        "Du kannst am Ende des Kurses Entwurfsmuster erkennen und selbst anwenden.",
        "Du kannst mit anderen Entwicklern über objektorientiertes Design kommunizieren.",
        "Du kennst wichtige Prinzipien und kannst deinen Code entsprechend entwickeln.",
        "Du bist einen Schritt weiter gekommen - auf dem Weg zum wirklich guten Entwickler."
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung",
          "Hausbau mit Lego",
          "Der Hammer und der Nagel",
          "Einfachheit",
          "Wozu objektorientiertes Design?",
          "Dein Trainer"
        ],
        "Grundlagen": [
          "UML kompakt",
          "Grundlegende Ideen der Objektorientierung",
          "Polymorphismus",
          "Coden, designen und entwerfen."
        ],
        "Objektorientiertes Design": [
          "Wegschmeißen",
          "Gutes Design",
          "Änderungen im Code",
          "Kohäsion und Kopplung: Outdoor-Version",
          "Kopplung: Indoor-Version",
          "Kohäsion: Indoor-Version",
          "Der Preis für gutes Design"
        ],
        "Prinzipien des objektorientierten Designs": [
          "Was sind Prinzipien? Wie nutze ich sie?",
          "Prinzip: Du wirst es nicht brauchen!"
        ],
        "Entwurfsmuster kategorisieren": [
          "Kategorien der Entwurfsmuster",
          "Aufbau der Lektionen und BEISPIELCODE"
        ],
        "Strategie (strategy)": [
          "Motivation",
          "Prinzip: Kapseln, was variiert",
          "Prinzip: Komposition über Vererbung",
          "Prinzip: Programmiere auf Schnittstellen",
          "Theorie",
          "Zusammenfassung",
          "Übung",
          "Praxis"
        ],
        "Kommando (command)": [
          "Motivation",
          "Theorie",
          "Zusammenfassung und Übung",
          "Praxis"
        ],
        "Zustand (state)": [
          "Motivation",
          "Theorie",
          "Zusammenfassung und Übung",
          "Praxis"
        ],
        "Beobachter (observer)": [
          "Motivation",
          "Das Hollywood-Prinzip",
          "Theorie",
          "Zusammenfassung und Übung",
          "Praxis"
        ],
        "Schablonenmethode (template method)": [
          "Motivation",
          "Theorie",
          "Zusammenfassung und Übung",
          "Praxis"
        ]
      },
      "requirements": [
        "Du solltest eine objektorientierte Programmiersprache können."
      ],
      "description": "Prolog:\nFür mich war die Entdeckung von Entwurfsmuster und objektorientiertem Design ein großes Aha-Erlebnis. Es gibt da mehr als das reine Programmieren. Ich habe vor dieser Entdeckung drei Stadien durchlaufen. 1. lernte ich eine objektorientierte Programmiersprache und begriff Bedingungen, Schleifen und Sequenzen. 2. erkannte ich ein Grundkonzept der Objektorientierung: die Vererbung. 3. entdeckte ich die Mächtigkeit von Bibliotheken und APIs. Ja, ich löste plötzlich All die Dinge, die ich vorher aufwendig programmierte, mit Hilfe externer Bibliotheken. Meine damaligen Programme waren mehr ein Zusammenstecken von Komponenten, denn ein Programmieren.\nJetzt kamen also die Entwurfsmuster und das objektorientierte Design. Plötzlich waren nicht mehr nur der Inhalt von Klassen wichtig - sondern auch deren Anordnung und Beziehung zueinander. Die Struktur des Programms war für mich eine neue Dimension. Entwurfsmuster sind keine neuen APIs, es ist keine neue Bibliothek oder Framework. Sie sind nicht mal in Java geschrieben! Es ist einfach nur eine Idee.\nDiese Erkenntnis, vor ungefähr 18 Jahren, änderte Alles. Ich nutze seit dem viel weniger externe Bibliotheken. Mein Code ist viel aufgeräumter. Vererbung ist enorm selten geworden. Ja, ich konzentriere mich wieder auf Bedingungen, Schleifen und Sequenzen - und dieses geheimnisvolle Unsichtbare mit dem Namen Softwaredesign.\nClean Code: Entwurfsmuster und objektorientiertes Design ist ein Kurs für jeden, der sich für moderne Softwareentwicklung interessiert. Hierbei ist es egal, ob man Anfänger ist oder schon länger Programmiert. Die Beispiele und Aufgaben sind in JAVA geschrieben - jedoch ist der Kurs für jeden verständlich, der eine objektorientierte Sprache beherrscht.\nNeben den wichtigsten Entwurfsmustern werden auch grundlegende Prinzipien moderner Softwareentwicklung vermittelt. Auch ist es mir sehr wichtig, das Verständnis für das \"Wieso\" zu lehren. Wieso braucht man Entwurfsmuster?\nMeine Motivation für diesen Kurs ist es, Entwurfsmuster und Prinzipien moderner Softwareentwicklung so zu zeigen, dass du ein besserer Softwareentwickler wirst und dein Code lesbarer, qualitativ hochwertiger und einfach besser wird.\nThorsten Diekhof\nThemen die behandelt werden:\nGrundlagen der Objektorientierung\nPolymorphismus\nKohäsion\nKopplung\nEntwurfsmuster / Design Pattern\nMuster: Strategie / strategy\nMuster: Kommando / command\nMuster: Zustand / state\nMuster: Beobachter / observer\nMuster: Schablonenmethode / template method\nMuster: Dekorierer / decorator\nMuster: Fassade / facade\nMuster: Adapter / adapter\nMuster: Kompositum / composite\nMuster: Fabrikmethode / factory method\n(Anti-)Muster: Singelton\nPrinzip: Du wirst es nicht brauchen?\nPrinzip: Kapseln was variiert\nPrinzip: Komposition über Vererbung\nPrinzip: Programmiere auf Schnittstellen\nPrinzip: Das Hollywood-Prinzip\nPrinzip: Offen aber geschlossen\nPrinzip: Lockere Bindung bitte\nPrinzip: Sprich nicht mit Fremden\nPrinzip: Nur eine Aufgabe, nur einen Grund\nPrinzip: Verwende Abstraktionen",
      "target_audience": [
        "Softwareentwickler die sich gerne weiterentwickeln wollen."
      ]
    },
    {
      "title": "SAP ABAP Temel Seviye Eğitim",
      "url": "https://www.udemy.com/course/sap-abap-temel-seviye-egitim/",
      "bio": "SAP ABAP Temel Seviye Yazılım Eğitimi",
      "objectives": [
        "Temel seviye ABAP danışmanı olarak çalışabilecekleri geniş kapsamlı bir ABAP programlama dilinin ne olduğunu, neler ve nasıl yapacaklarını öğrenecekler",
        "Ezberden ziyade yazılan her kodun mantığını öğrenecekler",
        "Görsel anlatımlar ile ABAP jargonunun mantığını kavrayacaklar",
        "Uygulama örnekleriyle öğrenmeye takviye"
      ],
      "course_content": {
        "SAP ABAP Developer Edition": [
          "SAP Developer Edition Nedir?",
          "Virtualbox Kurulumu",
          "Opensuse Kurulması Gereken Sürüm",
          "Opensuse Kurulumu",
          "Host Ayarları ve Gerekli Düzenlemeler",
          "Developer Edition Kurulumu",
          "Ağ Ayarları",
          "SAP GUI Kurulumu",
          "Server Başlatma ve Sistem Tanımlama",
          "Lisans Yenileme",
          "Kullanılacak User"
        ],
        "Temel Giriş": [
          "Temel Giriş ve Veri Türleri",
          "Matematiksel İşlemler, Koşul ve Döngüler",
          "Pratik - IF, MOD (1)",
          "Çözüm - IF, MOD (1)",
          "Pratik - IF, MOD (2)",
          "Çözüm - IF, MOD (2)",
          "Table, Data Element ve Domain",
          "Pratik - TABLE, DATA ELEMENT, TABLE",
          "Çözüm - TABLE, DATA ELEMENT, TABLE",
          "OPEN SQL Komutları",
          "Kullanıcı Veri Girişleri",
          "Pratik - IF, PARAMETER (1)",
          "Çözüm - IF, PARAMETER (1)",
          "Pratik - IF, PARAMETER (2)",
          "Çözüm - IF, PARAMETER (2)",
          "Pratik - IF, PARAMETER (3)",
          "Çözüm - IF, PARAMETER (3)",
          "Pratik - CASE WHEN",
          "Çözüm - CASE WHEN",
          "Pratik - CHECKBOX",
          "Çözüm - CHECKBOX",
          "Pratik - RADIOBUTTON",
          "Çözüm - RADIOBUTTON",
          "Pratik - RADIOBUTTON, CHECKBOX",
          "Çözüm - RADIOBUTTON, CHECKBOX",
          "Event Blocks, Form ve Include",
          "Pratik - FORM (1)",
          "Çözüm - FORM (1)",
          "Pratik - FORM (2)",
          "Çözüm - FORM (2)",
          "Pratik - GLOBAL DEGISKEN, FORM",
          "Çözüm - GLOBAL DEGISKEN, FORM",
          "Pratik - Login Ekranı",
          "Çözüm - Login Ekranı",
          "SINAV # 1"
        ],
        "Fonksiyon ve Class": [
          "Fonksiyon Modülü ve Fonksiyon Grubu",
          "Pratik - RANDOM NUMBER",
          "Çözüm - RANDOM NUMBER",
          "Pratik - Malzeme Sorgu Servisi",
          "Çözüm - Malzeme Sorgu Servisi",
          "Pratik - Veri Tipi Kontrolü",
          "Çözüm - Veri Tipi Kontrolü",
          "Class ve Metodlar",
          "Local Class ve Alt Class"
        ],
        "Package ve Request": [
          "Package ve Request"
        ],
        "Message Type ve Message Class": [
          "Message Type ve Message Class"
        ],
        "Hata Ayıklama (Debug)": [
          "Debugging",
          "Breakpoint ve Watchpoint"
        ],
        "Ekran Tasarlama": [
          "Normal Screen, PBO ve PAI",
          "Normal Screen GUI Status",
          "Screen Text Field",
          "Screen Input Output Field",
          "Screen Radio Button",
          "Screen Checkbox",
          "Screen Dropdown",
          "Screen Serachhelp, Box ve ok_code",
          "Screen Button",
          "Screen Subscreen",
          "Screen Tabstrip",
          "Dinamik Screen Objeleri",
          "Dinamik Selection Screen",
          "Modal Dialog Box Screen"
        ],
        "ALV Yapıları": [
          "ALV Giriş",
          "SALV",
          "REUSE ALV, Fieldcatalog ve Layout",
          "REUSE ALV Fieldcatalog Merge",
          "REUSE ALV Callback(Events) Yapıları",
          "REUSE ALV Top of Page ve End of List",
          "REUSE ALV PF Status",
          "REUSE ALV User Command",
          "REUSE ALV Line ve Cell Color",
          "REUSE ALV Excluding, Sort ve Filter",
          "REUSE ALV Save, Variant ve Default",
          "REUSE ALV List ve Popup Display",
          "OO ALV Screen, Container ve Fullscreen",
          "OO ALV Fieldcatalog ve Layout",
          "OO ALV Fieldcatalog Merge",
          "OO ALV Line ve Cell Color",
          "OO ALV Editable Column",
          "OO ALV Icon Cell",
          "OO ALV Dropdown Cell",
          "OO ALV Dynamic Dropdown Cell",
          "OO ALV Cell Style",
          "OO ALV Splitter Container",
          "OO ALV Events",
          "OO ALV Top of Page",
          "OO ALV Hotspot",
          "OO ALV Double Click",
          "OO ALV Data Changed",
          "OO ALV Search Help",
          "OO ALV PushButton Cell",
          "OO ALV Toolbar Button",
          "OO ALV Excluding, Sort ve Filter",
          "OO ALV Save, Variant ve Default",
          "Pratik - Malzeme Detay Raporu",
          "Çözüm - Malzeme Detay Raporu",
          "Pratik - Stok Raporu",
          "Çözüm - Stok Raporu",
          "Pratik - Sayıyı Tahmin Etme Oyunu",
          "Çözüm - Sayıyı Tahmin Etme Oyunu",
          "Pratik - İkramiye Dağıtma Programı",
          "Çözüm - İkramiye Dağıtma Programı",
          "Pratik - Çalışan Tecrübe Kıyaslama Raporu",
          "Çözüm - Çalışan Tecrübe Kıyaslama Raporu"
        ],
        "Çıktı Yapıları": [
          "Smartforms Temel Özellik, Pencere ve Metin",
          "Smartforms Şablon",
          "Smartforms Tablo ve Program Satırı",
          "Smartforms Smartstyles",
          "Smartforms Logo",
          "Smartforms Koşul ve Alternatif",
          "Smartforms Döngü",
          "Smartforms Include ve Dinamic Metin",
          "Smartforms Barcode",
          "Smartforms Driver Program",
          "Smartforms Parametre Gönderme",
          "Smartforms Debug Yapma",
          "Smartforms Page Oluşturma",
          "Adobe Form Giriş",
          "Adobe Form Interface Yapısı",
          "Adobe Form Livecycle Yüklemesi Düzen Tab Hatası",
          "Adobe Form Form Yapısı",
          "Adobe Form Subform",
          "Adobe Form Constant Text",
          "Adobe Form Dynamic Text",
          "Adobe Form Table",
          "Adobe Form Logo",
          "Adobe Form Barcode",
          "Adobe Form Driver",
          "Adobe Form Javascript Giriş",
          "Adobe Form Javascript Veri Atama",
          "Adobe Form Javascript Obje Özellikleri",
          "Adobe Form Javascript Obje Tıklama"
        ],
        "Syntax Yapıları": [
          "SELECT SINGLE ve SELECT UP TO ROWS",
          "READ TABLE",
          "CORRESPONDING",
          "SQL JOIN Yapıları",
          "FOR ALL ENTRIES IN",
          "FIELD SYMBOLS",
          "SELECT ENDSELECT",
          "Bakım Tablosu, Table Maintanence, SM30",
          "İşlem Kodu, Transaction Code, TCODE",
          "Search Help Objesi",
          "Pratik - SEARCH HELP",
          "Çözüm - SEARCH HELP",
          "Search Help Fonksiyonu",
          "COLLECT",
          "SINAV # 2"
        ]
      },
      "requirements": [
        "Hayır, eğitim hiçbir yazılım bilgisi olmayan öğrenceler düşünülerek hazırlanmıştır"
      ],
      "description": "Adım adım basit ve gereksiz detaylardan uzak bir şekilde yaptığım anlatım ile sıkılmadan takip edebileceğiniz bu kurs ile birlikte temel seviye SAP ABAP programlama dilini kavrayıp, hızlı bir şekilde programlar yazabileceğiniz bir seviyeye gelebileceksiniz.\nUygun başlıklar halinde katogerize ettiğim bu eğitim, bölüm bölüm ilerlemenize ve takibinizi kolaylaştırmanıza destek olacaktır.\nBir eğitim videosunu sadece izlerseniz sadece fikir sahibi olmanızı sağlar. İzlediğinizin eğitim videosunda gördüklerinizin aynısını paralelinde uygularsanız bu el pratikliğini sağlar. Ama örneği olmayan bir ödevi yaparsanız o zaman gerçekten öğrenmenizde kendinize gerçekten büyük katkı sağlamış olursunuz. Dolayısıyla eğitim aralarına yerleştirmiş olduğum uygulamalar ile öğrenmenize katkı sağlamayı hedef aldım.\n\n\nKurs içeriği;\nBolüm 1 -> SAP ABAP Developer Edition\nKendi local sap sisteminizi nasıl kuracağınızı anlattım. Bu bölümü sağlıklı bir şekilde uyguladığınızda kendi sap sisteminizde istediğiniz uygulamaları yapabileceksiniz.\n\n\nBolüm 2-> Temel Giriş\nHer yazılımın temel mantığını oluşturan yapıları bu başlık altında toparladım.\n\n\nBolüm 3-> Fonksiyon ve Class\nSAP ABAP da çok sık kullanılan fonksiyon ve class yapılarının oluşturulması ve program tarafında kullanılmasını detaylı ve örnekler ile birlikte anlattım.\n\n\nBolüm 4-> Package ve Request\nSAP'ye özgü bir yapı olan package ve request yapısının görseller ile birlikte mantığını anlattım.\n\n\nBolüm 5-> Message Type ve Message Class\nProgram içerisinde kullanıcıyı bilgilendirme noktasındaki message yapısına bu başlık altında yer ayırdım.\n\n\nBolüm 6-> Hata Ayıklama (Debug)\nHer yazılımda olduğu gibi ABAP'da da yer alan hata ayıklama mantığını örnek uygulamalar ile gösterdim..\n\n\nBolüm 7-> Ekran Tasarlama\nTasarım yapabileceğiniz ekran mantığını ve ekran üzerinde kullanabileceğiniz neredeyse tüm objeleri ayrı ayrı video başlıklarında değindim.\n\n\nBolüm 8-> ALV Yapıları\nSAP'nin neredeyse en önemli başlıklarından biri olan excele benzer bir çıktı alabilediğiniz ALV yapısına her detayıyla birlikte bu başlık altında değindim.\n\n\nBolüm 9-> Çıktı Yapıları\nSAP üzerinde görüntüleyebileceğiniz ya da çıktı alabileceğiniz yapılara bu başlık altında detaylı bir şekilde anlattım.\n\n\nBolüm 10-> Syntax Yapıları\nKullanabileceğiniz hatta kullanmanız gereken ve belli başlıklar altında toparlayamadım genel syntax yapılarının çoğunu bu başlık altında toparladım.",
      "target_audience": [
        "SAP ABAP danışmanı olarak çalışmak isteyen ya da çalışmaya başlamış hızlı bir şekilde adapte olmak isteyen kişiler"
      ]
    },
    {
      "title": "Quick Start Guide to Oracle SOA 12c",
      "url": "https://www.udemy.com/course/quick-start-guide-to-oracle-soa-12c/",
      "bio": "Get up and running with Oracle SOA 12c using the Quick Start distribution.",
      "objectives": [],
      "course_content": {
        "Getting Started": [
          "Quick Start Introduction",
          "Your Instructor",
          "Lab Guide",
          "Course System Requirements",
          "Course Assumptions"
        ],
        "Download and Install SOA 12c": [
          "Download Oracle SOA 12c",
          "Lab #1 - Download SOA 12c",
          "Install Oracle SOA 12c",
          "Lab #2 - Install Oracle SOA 12c",
          "Lab # 3 - Create SOA Domain",
          "Create a SOA Domain",
          "Install on Windows",
          "Lab #4 - Configure JDeveloper",
          "Conclusion and Next Steps"
        ]
      },
      "requirements": [
        "Previous Oracle WebLogic experience",
        "Computer with Supported Operating System to run Oracle SOA 12c",
        "Oracle JDK version 1.7 or 1.8"
      ],
      "description": "Oracle's SOA Suite 12c product is the leading enterprise SOA development and integration platform on the market today. Oracle SOA Suite allows organizations to build reusable business services, integrations, and model business processes rapidly using the latest industry standards such as SCA, BPEL, SOAP and REST.\nA traditional enterprise deployment of Oracle SOA 12c requires an enterprise database deployment (read: NO MYSQL or similar support) along with a distributed deployment. Such a deployment is overkill and unnecessary to build a development or proof of concept environment.\nIn this course, you will learn how to use the Quick Start distribution to stand up an Oracle SOA 12c development environment rather than spending hours installing the full distribution.  You will learn where to find the Quick Start distribution and how to install and create a SOA domain. Lastly, I will show you how to launch and connect JDeveloper to a SOA domain.",
      "target_audience": [
        "Java and/or SOA Developers",
        "Administrators",
        "Architects"
      ]
    },
    {
      "title": "【超初心者向け】【システム開発の流れから学ぶ】エンジニアとして活躍するための知識・スキルを明確化！【現場を知る】",
      "url": "https://www.udemy.com/course/system_development_skills/",
      "bio": "エンジニアとして活躍するための知識・スキルをシステム開発の流れに沿って学習！今、あなたに必要な知識は何か？自分の分からない事を明確にすることで進むべき方向性をはっきりさせるためのコースです。",
      "objectives": [
        "システム開発の全体像とエンジニアの仕事内容を理解できます",
        "システム開発の各工程で必要となるタスク、スキルを理解できます",
        "システム開発におけるポジション（メンバー、リーダー、マネージャー）ごとに求められるスキルを理解できます",
        "エンジニアとして成長するために必要となるスキルを知ることができます",
        "現場で必要となる知識・スキルについて、なぜ必要なのか？を知ることができます"
      ],
      "course_content": {
        "はじめに": [
          "本コースの目的",
          "なぜシステム開発の流れを学ぶのか",
          "講師の自己紹介",
          "本コースの全体像",
          "システム開発の流れ",
          "システム開発の流れ(建築の例)"
        ],
        "企画提案工程": [
          "【企画提案】このセクションで学べること",
          "企画提案工程でやること",
          "企画提案の具体例",
          "企画提案でやりがちな失敗NG例",
          "企画・提案工程で必要なスキル",
          "企画提案工程のまとめ"
        ],
        "要件定義工程": [
          "【要件定義】このセクションで学べること",
          "要件定義でやること",
          "要件定義の具体例",
          "要件定義でやりがちな失敗・NG例",
          "要件定義で必要な知識・スキル",
          "このセクションのまとめ"
        ],
        "設計工程": [
          "【設計】このセクションで学べること",
          "設計工程でやること",
          "【参考】基本設計と詳細設計",
          "設計の具体例",
          "設計のやりがちな失敗例",
          "設計で必要なスキル",
          "設計のまとめ"
        ],
        "製造工程": [
          "【製造】このセクションで学べること",
          "製造でやること",
          "製造の具体例",
          "製造でやりがちな失敗例",
          "製造で必要なスキル",
          "製造のまとめ"
        ],
        "試験工程": [
          "【試験】このセクションで学べること",
          "試験でやること",
          "試験の具体例",
          "試験のやりがちな失敗例",
          "試験で必要なスキル",
          "試験のまとめ"
        ],
        "保守運用工程": [
          "【保守運用】このセクションで学べること",
          "保守運用でやること",
          "保守運用の具体例",
          "保守運用のやりがちな失敗例",
          "保守運用で必要なスキル",
          "保守運用のまとめ"
        ],
        "開発ポジションと求められる役割・スキル": [
          "【開発ポジションと役割】このセクションで学べること",
          "チームメンバの役割",
          "チームメンバの悩みと対策",
          "チームリーダーの役割",
          "チームリーダーの悩みと対策",
          "プロジェクトマネージャーの役割",
          "プロジェクトマネージャーの悩みと対策",
          "開発ポジションとスキルのまとめ"
        ],
        "ステップアップキーワード": [
          "【ステップアップキーワード】このセクションで学べること",
          "Step1システムの基礎知識",
          "Step2システムを開発する力とは何か",
          "Step2システムを開発する力_設計力",
          "Step2システムを開発する力_実装力",
          "Step2システムを開発する力_品質管理",
          "Step3開発を推進する力",
          "ステップアップキーワードのまとめ"
        ],
        "本コースのまとめ": [
          "本コースのまとめとメッセージ"
        ]
      },
      "requirements": [
        "「サーバ」「DB（データベース）」など、システムに関する基本的な用語を知っていることを前提としています。",
        "（推奨）プログラミングスキルを習得していると講義の理解度が深まります。"
      ],
      "description": "＊このコースを作成した理由＊\n「あなたがエンジニアとして活躍するためには、どんなスキルの獲得が必要ですか？」\n実は、この質問に答えられる人は少ないのです。\nなぜならエンジニアとして活躍するためには膨大なスキルや知識が必要であり、今の自分に何が必要か分からない方が非常に多いです。\n実際に多くの人がこのような悩みを持っており、私のコンサルしたお客様や育成してきた部下の中にも\n「エンジニアとして活躍したい！」という強い思いがあるものの、「今の自分に必要なスキルが分からない！」\nという悩みを持っている方が多くいらっしゃいました。\nそこで、本コースではシステム開発の流れに沿って「いつ」「どのようなスキルが」「なぜ」必要となるのかを解説していきます。\n＊本コースで得られること＊\n・システム開発の全体像が理解できる\n・各スキルがなぜ必要となるのかを理解できる\n・ポジション（メンバーやリーダー）ごとに必要な役割、タスク、悩みの解決策を理解できる\n⇒自分に必要なスキル・知識が明確になる\n＊本コースの最大の目的＊\n本コースの目的はあなた自身に必要な「スキル・知識」に気付きを得てもらうことです。\nこのコースでは個々の技術要素を深く説明するのではなく、エンジニアに必要な技術要素を広く知ってもらうコースです。\n受講後に自身で学習を進められる方には是非受講して頂きたいです。\n＊コース内容＊\nシステム開発の流れについて\n企画提案工程～保守運用工程では各工程で必要となるスキルが異なります。\nそこで、各工程でどのようなスキルがなぜ必要なのか？を解説します。\nまた、よくある失敗例・NG例を合わせて説明することで、スキル習得が必要となる理由を理解していただきます。\nプロジェクトの体制と役割について\nシステム開発はたいてい複数名で実施していきます。\nその際、プロジェクトマネージャー、チームリーダー、チームメンバーのように各ポジションごとに求められる役割は異なります。\nそこで、各ポジションごとに必要となるタスク、スキルをご紹介し、それぞれのポジションで悩むポイント解決策についてご説明\nステップアップキーワード\nエンジニアとしてステップアップするために必要な知識・スキルをキーワードとしてご紹介します。\n・システム開発の基礎\nHW,MW,SW,NW,仮想化技術,クラウド,AWSなどのシステム開発の基礎となるキーワードについてご紹介\n・システムを開発する力\n設計力、実装力、試験（品質管理）などシステム開発を行う上で必須となるキーワードをご紹介\n・システム開発を推進する力\nマネジメントスキルや自動化など、システム開発を効率化・推進する上で必要となるキーワードをご紹介\n\n\nこのセクションを通じて、各スキルをどのようなキーワードで学習を進めればよいかについて明確にして頂きます。",
      "target_audience": [
        "エンジニアとして活躍したいが、何を勉強したらよいか分からない人",
        "エンジニアの仕事やシステム開発の流れが分からない人",
        "プログラミングスキルを習得しているが、エンジニアとしての総合力を上げたい人",
        "エンジニアの仕事や知識を体系的に学びたい人",
        "知識・スキルの取得が行き当たりばったりで、何のためにどのようなスキルを身に着ければよいか分からな人"
      ]
    },
    {
      "title": "Computer Vision con Python e OpenCV: il Corso Completo",
      "url": "https://www.udemy.com/course/computer-vision-python/",
      "bio": "Impara le Ultime Tecniche di Computer Vision e il Deep Learning con Python, OpenCV e Tensorflow",
      "objectives": [
        "Elaborare Immagini e Video con OpenCV",
        "Tecniche di Object Detection",
        "Tecniche di Object Tracking",
        "Techiche di Riconoscimento Facciale",
        "Deep Learning per la Computer Vision",
        "Reti Neurali Convoluzionali",
        "Addestramento di Modelli su Dataset Enormi",
        "Generazione di Nuove Immagini"
      ],
      "course_content": {
        "Introduzione": [
          "Introduzione al Corso",
          "Domande Frequenti"
        ],
        "Preparazione dell'Ambiente di Lavoro": [
          "Come Installare Anaconda",
          "Breve Introduzione a VSCode",
          "Creare un'Ambiente Virtuale con Navigator",
          "Creare un'Ambiente Virtuale con Prompt"
        ],
        "Immagini e Matrici con Numpy": [
          "I Formati Grayscale e RGB",
          "Basi di Numpy per la Computer Vision",
          "Aprire un'immagine con Numpy"
        ],
        "Operare sulle Immagini con OpenCV": [
          "Introduzione a OpenCV",
          "Aprire un'immagine con OpenCV",
          "Ridimensionare e Ritagliare un'immagine",
          "Ruotare un'immagine",
          "Disegnare Rettangoli, Cerchi e Linee",
          "Inserire del Testo su un'immagine"
        ],
        "Acquisire Foto e Video con Python": [
          "Catturare Immagini da Webcam",
          "Stream di Immagini da Webcam",
          "Catturare Input da Tastiera",
          "Operare sullo Stream Video: Filtro Bianco e Nero",
          "Operare sullo Stream Video: Scrivere Data e Ora",
          "Come Catturare Snapshot",
          "Come Registrare Video"
        ],
        "Object Detection Base": [
          "Le Haar-Like Features",
          "Le Integral Images",
          "Integral Images con OpenCV",
          "L'algoritmo Cascade of Classifier",
          "Face Detection con OpenCV",
          "Multiple Face Detection con OpenCV",
          "Live Face Detection con OpenCV",
          "Integriamo la Face Detection nella Webcam",
          "Catturare Immagini da Webcam con un Sorriso :D"
        ],
        "Object Tracking": [
          "Centroid Tracking",
          "Troviamo il Centroide di un Volto",
          "Calcolo delle Distanze tra i Centroidi",
          "Da Face Detection a Face Tracking",
          "Tracking del Centroide",
          "Mostriamo il Risultato"
        ],
        "Machine Learning per la Computer Vision": [
          "Introduzione al Machine Learning",
          "Regressione Logistica per la Computer Vision",
          "Addestramento di un Modello di Machine Learning",
          "Preprocessing del Binary MNIST",
          "Addestramento del Modello di Machine Learning",
          "Riconoscimento di Nuove Immagini"
        ],
        "Deep Learning e Reti Neurali": [
          "Reti Neurali per la Computer Vision",
          "[OPZIONALE] La Forward Propagation",
          "[OPZIONALE] La Backpropagation"
        ],
        "Tensorflow per la Computer Vision": [
          "Creiamo l'Environment per Tensorflow",
          "Preprocessing del MNIST",
          "Addestramento della Rete Neurale",
          "Riconoscimento di Nuove Immagini"
        ]
      },
      "requirements": [
        "Conoscere un qualsiasi linguaggio di programmazione può aiutare ma non è indispensabile"
      ],
      "description": "*** Aggiornamento Marzo 2020: Il Corso verrà presto aggiornato con la nuova sezione Neural Object Detection: YOLOV3 ***\n\n\nLa Computer Vision è uno dei settori più hot dell'Intelligenza Artificiale, negli ultimi anni ha fatto progressi esponenziali grazie alle ultime tecniche di Deep Learning e all'utilizzo delle Reti Neurali Artificiali.\nMa cosa è esattamente la Computer Vision ?\nLa Computer Vision è un insieme di tecniche, metodi e modelli che ci permette di analizzare digitalmente immagini e video, riconoscendo forme e oggetti con una precisione anche superiore a quella dell'occhio umano.\nLe  Applicazioni Pratiche sono innumerevoli e colpiscono moltissimi grandi settori:\nTrasporti: Auto a Guida Autonoma\nHealtcare: Diagnosi Medica Computerizzata\nSicurezza: Telecamere Intelligenti\nGaming: Microsoft Kinect\nCosa faremo in questo corso ?\nDopo la breve introduzione alla Computer Vision della prima sezione prepareremo il campo di battaglia nella seconda, installando Anaconda, prendendo familiarità con Visual Studio Code e creando l'Ambiente Virtuale che utilizzeremo durante il corso.\nNella terza sezione parleremo di come i Computer vedono le Immagini e impareremo ad aprire un'immagine con Numpy, popolarissima libreria Python per il calcolo numerico.\nNella quarta sezione inizieremo a parlare di OpenCV, la più popolare libreria per la Computer Vision, vedremo come aprire e elaborare un'immagine, ridimensionandola, ritagliandola e disegnandoci sopra testo e forme.\nNella quinta sezione vedremo come acquisire Immagini da Webcam utilizzando OpenCV, modificandole in tempo reale e salvandole sia in formato immagine che video.\nSubito dopo inizieremo con il Machine Learning, vendendo una delle più basilari tecniche di Object Detection: Haar Cascade Classifiers, ne studieremo la teoria e poi vedremo come implementare questo modello utilizzando OpenCV per riconoscere volti in flussi di video in tempo reale.\nNella settima sezione faremo un'ulteriore passo avanti, passando dall'Object Detection all'Object Tracking, sfruttando l'agoritmo del Tracking del Centroide.\nA seguire una breve introduzione al Machine Learning e le sue Applicazioni nella Computer Vision, con un'esempio pratico di OCR (Optical Characters Recognition), seguita da un'introduzione teorica al Deep Learning.\nNella Sezione 10 introdurremo Tensorflow, la più popolare libreria per il Deep Learning, applicando nella pratica le nozioni di Deep Learning apprese nella sezione precedente.\nAddestrare una Rete Neurale può richiedere parecchie risorse di calcolo, per questo nella sezione undici vedremo alcuni servizi totalmente gratuiti che possiamo utilizzare per Addestrare Reti Neurali in Cloud su Cluster di GPUs.\nNella sezione 12 parleremo di Reti Neurali Convoluzionali (CNN), un'architettura di Reti Neurali che hanno totalmente rivoluzionato la Computer Vision.\nCome fare se il nostro dataset contiene decine di migliaia di immagini ? Di questo parleremo nella sezione 13, affrontando questo problema tramite i Generatori di Keras.\nSe invece il dataset contiene decisamente poche immagini per il problema che stiamo affrontando? Questo sarà argomento della sezione 14, dove impareremo le principali tecniche di Images Augmentation.\nNell'ultima sezione metteremo insieme tutto ciò che abbiamo appreso durante il corso, per realizzare un programma in grado di riconoscere il sesso di una persona da un video catturato in tempo reale !\nSe questo non ti sembra abbastanza, in fondo al corso puoi trovare delle sezioni di approfondimento e un mini crash course di Programmazione con Python in appena 100 minuti :).\nTi aspetto dentro al corso !",
      "target_audience": [
        "Studenti e lavoratori che vogliono comprendere ed utilizzare la Computer Vision",
        "Professionisti interessati a Computer Vision e Deep Learning"
      ]
    },
    {
      "title": "UML - Modelagem de software do início ao fim",
      "url": "https://www.udemy.com/course/uml-modelagem-de-software-do-inicio-ao-fim/",
      "bio": "Aprenda tudo o que você precisa para modelar um software, com os principais aspectos da Engenharia de Software e UML",
      "objectives": [
        "Princípios da modelagem de software",
        "Fundamentos da linguagem UML",
        "A ferramenta case ASTAH Community",
        "Fundamentos da Orientação a Objetos"
      ],
      "course_content": {
        "Apresentação do curso": [
          "Apresentação do curso",
          "Apresentação do professor"
        ],
        "Curso rápido de Orientação a Objetos": [
          "Apresentação do curso rápido de Orientação a Objetos",
          "Curso rápido de Orientação a Objetos",
          "Encerramento"
        ],
        "Ferramentas Case": [
          "Apresentação - Ferramentas Case",
          "Ferramenta Case - Astah",
          "Encerramento"
        ],
        "UML": [
          "Apresentação - UML",
          "Introdução a UML",
          "Tipos de diagramas na UML",
          "Diagrama de Caso de Uso",
          "Diagrama de Classe",
          "Diagrama de Objetos",
          "Diagrama de Componentes",
          "Diagrama de Sequência",
          "Diagrama de Estados",
          "Diagrama de Atividades",
          "Encerramento"
        ]
      },
      "requirements": [
        "Não há pré-requisitos para esse curso, todos os interessados e curiosos por modelagem de software podem fazer o curso"
      ],
      "description": "Curso para iniciar os estudos em Engenharia de Software\n\n\nEstá pensando em se tornar um analista de negócios? um empreendedor que cria os próprios softwares?\nInicie já seus estudos em UML, e adquira conhecimentos básicos necessários para ingressar nesse mercado que só cresce no Brasil e no Mundo.\n\n\nEstá pensando em se tornar um desenvolvedor de software?\nPrepare-se para utilizar Orientação a Objeto.\nCom meu novo curso, UML - Modelagem de software do início ao fim, em muito pouco tempo você estará pronto para definir todos os aspectos dos seus projetos.\n\n\nMelhore a sua análise de requisitos\nEntenda como são criados os requisitos  e como modelar diagramas que deixarão claros o entendimento do seu software.\n\n\nO que você precisa saber antes de iniciar o curso?\nNão há pré-requisitos para esse curso, todos os interessados e curiosos por Engenharia de Software e UML podem fazer o curso\n\n\nO que vai conseguir fazer após o curso\nAplicar os principais conceitos de Engenharia de Software com UML.\nNão acredita? Oferecemos uma garantia de satisfação ou o seu dinheiro de volta, desde que você solicite dentro de 30 dias da compra.\nVocê está pronto iniciar o estudos em UML. Essa é a hora!",
      "target_audience": [
        "Qualquer pessoa que queira iniciar os estudos em modelagem de software",
        "Desenvolvedores ou analistas, que queiram documentar seu software",
        "Analistas de requisito que queiram modelar de forma rápida e prática suas necessidades em software"
      ]
    },
    {
      "title": "Introduction to RISC-V Interrupts",
      "url": "https://www.udemy.com/course/risc-v-interrupts-platform-level-interrupt-controller/",
      "bio": "Write RISC-V assembly code to configure GPIO, PLIC and Core CSRs to generate GPIO interrupt and blink blue LED on board",
      "objectives": [
        "Understand privilege levels, traps and control and status registers in RISC-V",
        "Platform Level Interrupt Controller Specification for RISC-V",
        "Sample implementation of PLIC module on RISC-V based FE310 SoC",
        "Writing assembly code, compiling, linking with GNU tools and debugging with OpenOCD and GDB",
        "Demonstration of interrupt generation & handling in RISC-V assembly"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview"
        ],
        "Privilege Levels and Traps in RISC-V": [
          "Privilege Levels in RISC-V",
          "Traps in RISC-V",
          "Quiz1"
        ],
        "Platform Level Interrupt Controller Specification": [
          "Need for PLIC Specification",
          "Interrupt Flow in PLIC",
          "Operational Block Diagram",
          "PLIC Parameters Memory Map In FE310 SoC"
        ],
        "Install tools, write simple assembly code, compile, link and generate ELF": [
          "Install OpenOCD and GNU Toolchain",
          "Demo Compile, Load, Execute and Debug with OpenOCD and GDB"
        ],
        "Section 5: Control and Status Registers": [
          "Introduction to & demonstration of accessing Control and Status Registers"
        ],
        "Hands on with Hifive1-Rev Board": [
          "Introduction",
          "Configure GPIO 21",
          "Configure PLIC to allow GPIO 21 interrupt",
          "Configure E31 core CSRs to enable machine and machine external interrupt",
          "Test application to blink the blue LED and generate interrupt"
        ]
      },
      "requirements": [
        "Brief knowledge on any processor like interrupts, interrupt priority & interrupt handling would help"
      ],
      "description": "Interrupts in RISC-V are governed by standards and specification. Each RISC-V core's interrupt generation and handling process should be compliant to the specification.\n\n\nThis course discusses the following:\na. Privilege Levels in RISC-V\nb. Traps in RISC-V\nc. Platform Level Interrupt Controller (PLIC) Specification\nd. Compares PLIC Implementation on FE310 SoC to Spec\ne. Control and Status Registers (CSRs)\nf. Instructions to read and write CSRs in RISC-V\ng. Configuring GPIO peripheral in FE310 SoC\nh. Configuring PLIC to allow GPIO interrupt\ni. Configure MIE & MSTATUS CSRs on the core  to enable machine mode interrupts and machine mode external interrupts\nj. Installation of GNU tools (compilers, OpenOCD)\nk. Test application in assembly to blink blue LED on Hifive1-Rev B board.\n\n\nStudents who enrol would be taken through a journey starting from basics of what are interrupts, exceptions and traps in RISC-V, followed by PLIC standard discussing the parameters, how to configure those parameters on PLIC to generate interrupt and claiming and completing the interrupt handling process and finally on writing an test application to blink LED.\n\n\nThe major exercise and focus on this course is on writing RISC-V assembly code, assembling & linking with GNU tools, generating ELF, and programming it on Hifive1-RevB board to blink blue LED on board.\n\n\nUpdate on Sept 5, 2024: Corrected the memory map address for Context1 Threshold, Claim and enable registers and attached as pdf for Section 3, Lecture 7. The PLIC specification pdf too is attached for reference.",
      "target_audience": [
        "Anyone interested in understanding the Platform Level Interrupt Controller Standard in RISC-V"
      ]
    },
    {
      "title": "The Only Algorithms Coding Interview Course You'll Ever Need",
      "url": "https://www.udemy.com/course/the-only-algorithms-coding-interview-course-youll-ever-need/",
      "bio": "Compiled list of Leetcode questions to Ace your Next Interview",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Arrays & Other Containers": [
          "Find the Duplicate Number"
        ],
        "Backtracking": [
          "N-Queens"
        ],
        "Breadth First Search (BFS)": [
          "Rotting Oranges"
        ],
        "Binary Search": [
          "Binary Search Implementation"
        ],
        "Depth First Search (DFS)": [
          "Flood Fill"
        ],
        "Dynamic Programming": [
          "Climbing Stairs"
        ],
        "Graphs": [
          "Course Schedule"
        ],
        "Linked List": [
          "Sort List"
        ],
        "Trie": [
          "Implement Trie (Prefix Tree)"
        ]
      },
      "requirements": [
        "A basic understanding of essential data structures and algorithms is desirable."
      ],
      "description": "If you visit the Leetcode page now you will see that there are almost 3000 questions. No matter if you have 3 weeks or 3 or 6 months to prepare, solving 3000 questions seems impossible.\nQuality over quantity! I solved hundreds of them while preparing for big tech interviews and I can say with confidence after certain number of questions we have diminishing returns. A good base of questions with patterns clearly explained is all you really need. As of now there are many lists online Blind 75, Prashad's leetcode patterns, curated list of problems from Elements of Programming.\nI aggregated all problems from those lists and tips/tricks from the books in one free platform. Solving problems on this platform will make you prepared for any coding interview at most of the big tech companies. For each problem, we have description, written explanation with time/space complexity. All problems are solved using 4 different programming languages C++, Java, JavaScript and Python. For each problem we created a deep dive video going into details on how to solve the problem. As of this moment we have 17 categories with 200+ solved problems.\n\n\nThe platform is meant to be used following 4 simple steps:\nStart with any of the categories, and go from easy to hard level problems (sorted order)\nRead the problem, see if you can do it on your own, read the explanations and watch the video\nTry related problems and continue solving the problem in the selected category\nRetention phase, after 3 weeks randomly select a problem from the category you have already completed, solved the problem in your head. Basically just go through the pattern you would use, read the explanation of the solution",
      "target_audience": [
        "Those aiming to excel in technical coding interviews with companies such as Google, Facebook, Microsoft, Amazon, and more."
      ]
    },
    {
      "title": "#1 Agile Scrum : How to utilise Scrum FW as a Product Owner",
      "url": "https://www.udemy.com/course/product-owner-role-in-agile-scrum-framework/",
      "bio": "Agile Scrum & Product Owner Intro : Short Course on Role of Product Owner in Scrum + Pay & Job aspect of a Product Owner",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "An important note before we get started",
          "Why is the Product Owner role needed?",
          "How is the job market for The Role Of Product Owner?"
        ],
        "Who is a Product Owner?": [
          "Who is a Product Owner?",
          "Download the Scrum Guide"
        ],
        "From the Point Of View Product Owner - Scrum Framework In a Nutshell": [
          "What is Scrum from Product Owner prospective?",
          "Roles in Scrum Framework",
          "Brief on different Scrum Events and Where should PO pitch in?",
          "As a PO, which Artifacts are important for you?",
          "What are Definition of Done (DoD) and Acceptance Criteria? How does a PO use the",
          "What is Scaling in Scrum?",
          "Terminology"
        ],
        "High level activities handled by PO": [
          "High level activities handled by PO",
          "Personal Note"
        ],
        "Brief About The Structure of a User Story": [
          "Brief About The Structure of a User Story",
          "Thank You"
        ],
        "Bonus Lecture :: Learn More And Free Quiz To Validate Your Understanding": [
          "Bonus Lecture: You as A Product Owner - Master the Practical Skills Needed"
        ]
      },
      "requirements": [
        "No prior preparation needed.",
        "An open mind and a willingness to learn"
      ],
      "description": "Laser-focused introductory course on How to utilize Scrum Framework from Product Owner's point of view, Role of Product Owner and Career Perspective.\nFor most of the Product Owners, it's normally confusing what to do during the scrum events and a few also ignore the scrum framework. But if your organization has adopted an Agile mindset then the best way to perform your role as a Product owner is to understand scrum framework cleary and where can exactly you pitch-in? This introductory course on the Product Owner covers that aspect in a precise manner.\nWhat is covered as part of the course?\nAverage Salary of a Product Owner\nCareer Prospect of a Product Owner\nScrum framework\nScrum Roles\nScrum Events and What a Product Owner or PO should do in these events?\nScrum artifacts and How a Product Owner or PO should utilize these artifacts?\nDefinition of Done vs Acceptance Criteria\nWhy are acceptance criteria critical for a Product Owner or PO?\nScaling of Scrum\nHigh-level responsibility of Product Owner or PO\nUser story structure\n\n\nIs this course right for you?\nIf you are new to the role of Product Owner and Scrum Framework and looking for concise information then this course is for you.\n\n\nWhat will you get as part of enrollment?\nHigh-Quality Video Lectures explaining about how to utilize scrum for a successful Product Owner role.\nExpert support: If you enroll for the paid version then you can ask your doubts and I will get back within 48 hours.\nSeries of Courses, to make you an expert: I understand that the Product Owner is not simple, hence I have broken down the concept into smaller capsules courses that are easy to consume and time-efficient.\n\n\nWhy did I create this course?\nScrum Framework and Product Owner are the critical parts of most of the organizations nowadays.\nWhen I took up the role of Product Owner, I wanted to know the high-level picture of the scrum framework and the role of product owner without going into much detail. But I never came across a matching course.  Hence I have created this short course to address that gap.",
      "target_audience": [
        "Beginner level Product Owners",
        "Business Analysts looking forward for a career progression",
        "People who want to learn about SCRUM framework in a Nutshell",
        "People who are aspiring for the role of Product Owner"
      ]
    },
    {
      "title": ".NET Secure Coding",
      "url": "https://www.udemy.com/course/net-secure-coding/",
      "bio": "Software Development Security .NET Secure Coding",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "There is a huge demand-supply gap in the Cyber Security industry, this course covers  How to write Secure code for .NET Developers aligned toward EC-Council Secure Coding program. This course has multiple  questions in each practice test and more are being added. The total number of questions will keep increasing.\nIt gives individuals beginners to advanced level understanding of Application Security and how to write code with security.\n\n\nIt covers  modules which include:\n\n\nCASE Module 01 Understanding Application Security, Threats, and Attacks\nCASE Module 02 Security Requirements Gathering\nCASE Module 03 Secure Application Design and Architecture\nCASE Module 04 Secure Coding Practices for Input Validation\nCASE Module 05 Secure Coding Practices for Authentication and Authorization\nCASE Module 06 Secure Coding Practices for Cryptography\nCASE Module 07 Secure Coding Practices for Session Management\nCASE Module 08 Secure Coding Practices for Error Handling\nCASE Module 09 Static and Dynamic Application Security Testing (SAST & DAST)\nCASE Module 10 Secure Deployment and Maintenance\nCASE .NET Lab Setup Guide\n\n\nI look forward to you completing the course and providing me with feedback on how we can make this course better!\nPlease feel free to ask any questions or also ask for assistance regarding any challenges you have faced while working or while preparing for the course!\nKindly provide any other courses that you will be interested in and we can take a look at adding it\nStay tuned for more courses!\n\n\nYou can contact me on additional tips and practical advice.",
      "target_audience": [
        "Security Professionals OR Developers"
      ]
    },
    {
      "title": "OpenAI API Mastery: Build AI Apps with TypeScript",
      "url": "https://www.udemy.com/course/openai-sdk-typescript/",
      "bio": "Build real AI apps from scratch - ChatGPT clone, RAG chatbot, email classifier & more with OpenAI's TypeScript SDK",
      "objectives": [
        "Connect to OpenAI APIs using TypeScript and Node.js to build real AI-powered applications from basic responses to advanced function calling",
        "Build a terminal ChatGPT clone with real-time streaming responses that works exactly like the ChatGPT interface you already know and use",
        "Create RAG applications that let users chat with custom documents and data files, dramatically improving AI usefulness for specific domains",
        "Implement function calling to let AI trigger real actions in your apps - users describe what they want in plain language, AI executes the code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Need Help? How to Contact Me and Stay in Touch!",
          "AI Models, Tokens and Cost (OpenAI)",
          "Setting Up Node.js & TypeScript + Your First AI Response",
          "Streaming AI Responses in Real Time",
          "Building a ChatGPT Clone from Scratch",
          "Structured Output: Making AI Return JSON You Can Use",
          "Tool Calling: Letting AI Trigger Real Actions (Web Search)"
        ],
        "RAG: AI Chat with Your Knowledge Base": [
          "What is RAG? Concept, Workflow & Project Overview",
          "RAG Chunking: Fixed-Size as the Baseline",
          "RAG Chunking: Right-Sized Chunks",
          "Creating Embeddings from Chunks",
          "Query Embedding & How to Compare the Query Vector to Knowledge Base Vectors?",
          "Inserting Relevant Knowledge into the AI Response"
        ],
        "Tools (Function Calling) - Giving AI Access to Your Application Data & Actions": [
          "How the Function Calling Works and What it Can Be Used For?",
          "Define the Tools (Available Functions to Call)",
          "Add Mock Data & Implement the Functions",
          "Figure Out Which Functions Need Calling & Call Them",
          "Making Final API Call with Function Call Results"
        ]
      },
      "requirements": [
        "Basic TypeScript knowledge"
      ],
      "description": "Most developers think AI integration is complicated. It's not. You just need to know how to connect to the right APIs.\nIn this hands-on course, you'll build multiple working AI applications using TypeScript, Node.js, and the OpenAI API. No theory lectures - just real code you can use immediately.\nWhat You'll Build:\nTerminal ChatGPT Clone - Stream AI responses in real-time, just like the real thing\nEmail Classifier - Analyze sentiment and return structured JSON data for your apps\nRAG Knowledge Chat - Let users chat with your custom documents and data files\nFunction Calling App - AI that can trigger real actions in your application\nPlus foundational examples - Basic responses, streaming, and structured output\nWhat Makes This Different:\nI've taught almost 80,000 developers on Udemy. I don't waste your time with endless theory or marketing fluff. You'll see working code from minute one.\nEach example builds practical skills you can apply immediately. The entire development and testing for this course cost me 22 cents in API calls - so you're not looking at expensive experimentation.\nWhat You Need:\nBasic TypeScript knowledge\nNode.js installed\nOpenAI API account (I'll show you how to set this up)\nThat's it\nWhat You Get:\nMultiple complete, working AI applications\nAll source code included with every lesson\nStep-by-step setup and implementation\nReal-world patterns you can use in any TypeScript project\nWhy TypeScript?\nBecause it works everywhere - Next.js, React, Node.js backends, whatever you're building. Learn once, use everywhere.\nNo previous AI experience required. Just bring your TypeScript skills and let's build something useful.\nStop wondering how AI integration works. Start building it.",
      "target_audience": [
        "TypeScript/JavaScript developers wanting to add AI to their apps",
        "React, Next.js, Vue developers building AI-powered frontends",
        "Node.js backend developers creating AI APIs",
        "Any developer curious about practical AI integration without theory overload"
      ]
    },
    {
      "title": "Revolut API in .NET | Business API and Merchant API",
      "url": "https://www.udemy.com/course/revolut-api-in-net-business-api-and-merchant-api/",
      "bio": "Revolut API in .NET from credentials to payments",
      "objectives": [
        "Basic Setup For Revolut Business API",
        "Basic Setup For Revolut Merchant API",
        "Authentication and security for Revolut Business API",
        "Reading account data from Revolut APIs",
        "Creating Payments",
        "Validating Payments"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Business API": [
          "Set up part 1",
          "Set up part 2",
          "Set up part 3",
          "Retrieve balance"
        ],
        "Merchant API: Checkout": [
          "part 1: Credentials",
          "part 2: Creating order",
          "Part 3",
          "part 4"
        ],
        "Misc": [
          "Generate certificates using C#"
        ]
      },
      "requirements": [
        "Intermediate C#/.NET Knowledge"
      ],
      "description": "Learn how to seamlessly integrate the Revolut API into your .NET applications with this comprehensive course. Whether you're a beginner or an experienced developer, this course provides an in-depth look at utilizing both the Business API and Merchant API to automate financial workflows, retrieve data, and enable online payment processing.\nThe course is structured into two main sections:\nBusiness API Integration:\nDiscover how to set up the Revolut Business API step by step. You’ll learn to retrieve account balances, configure your API settings effectively, and automate essential financial processes. This API is perfect for developers looking to build tools for business accounts or streamline corporate financial operations.\nMerchant API for Checkout:\nExplore the Merchant API to enable payment processing for e-commerce platforms. You’ll master everything from configuring API credentials to creating orders and handling payments securely. This API is ideal for developers building online stores or integrating checkout functionality into existing platforms.\nThis course is packed with practical examples and hands-on exercises to ensure you gain the confidence to work with Revolut APIs independently. With lessons covering everything from setup to real-world implementation, you'll be equipped to create robust and efficient solutions for business and merchant needs.\nWhether you're automating financial workflows or building payment systems, this course provides the skills you need to succeed. Enroll today and start building cutting-edge financial applications with Revolut APIs!",
      "target_audience": [
        "C# developers wanting to implement payments in modern ways"
      ]
    },
    {
      "title": "Análise de Requisitos de Software com Histórias de Usuários",
      "url": "https://www.udemy.com/course/aprenda-a-mapear-requisitos-solidos-com-historias-de-usuario/",
      "bio": "Aprenda de forma prática como Especificar Requisitos em Projetos de Software , utilizando Histórias de Usuário",
      "objectives": [
        "Mapear Histórias de Usuário de forma eficiente",
        "Levantar Requisitos utilizando Example Mapping",
        "Melhorar seu Gerenciamento de Projetos",
        "Saber como utilizar uma das técnicas mais utilizadas no mundo das Metodologias Ágeis"
      ],
      "course_content": {},
      "requirements": [
        "Apenas 2h de dedicação para assistir às aulas e fazer as atividades propostas",
        "Vontade de aprender como fazer Histórias de Usuário Corretamente"
      ],
      "description": "Eu montei esse curso pensando na forma mais prática e rápida de lhe mostrar como fazer uma levantamento de requisitos eficiente.\nAo longo do curso a gente vai ter várias aulas, onde cada aula será um exemplo de uma História de Usuário que será trabalhada.\n\nPara desmembrar cada História de Usuário, vamos usar uma técnica chamada Example Mapping.\nEssa técnica é uma estrutura que nos mostra como identificar os critérios de aceitação e como identificar os exemplos de comportamento do sistema.\nA técnica que você irá aprender, vai lhe dar uma maior segurança para você fazer estimativas de prazos com maior precisão\n\nCom esse processo, você poderá depois implementar testes automatizados, caso queira.\nEntão se deseja a aprender como levantar requisitos eficientes com Histórias de Usuário e Example Mapping, vamos nessa!",
      "target_audience": [
        "Analistas que precisam aprender uma técnica eficiente de levantamento de requisitos através de Histórias de Usuário",
        "Desenvolvedores que não sabem como seguir um passo a passo pra mapear requisitos de sistemas",
        "Qualquer profissional que deseja aprender como utilizar Histórias de Usuário em seus projetos"
      ]
    },
    {
      "title": "Start with Competitive Programming - FREE",
      "url": "https://www.udemy.com/course/coding-interview-practice-for-free/",
      "bio": "Become a Competitive Programming Beast",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "READ BEFORE YOU START!"
        ],
        "Masterclass": [
          "Graphs, Cycles, Topological Sort: Problem \"Course Schedule\"",
          "Binary Trees, Dynamic Programming, DFS: Problem \"Maximum Path Sum\"",
          "Greedy, Sorting, Priority Queue: Problem \"Min Cost To Hire K Workers\"",
          "Dynamic Programming: Problem \"Burst Ballons\"",
          "Stacks, Queues, Arrays: Problem \"132 Pattern\""
        ],
        "Next Steps & BONUS": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "NO experience with Competitive Programming or Technical Interviews required!"
      ],
      "description": "This course is going to be your bible on solving each coding interview question and competitive programming task. The content is based on my 10 year experience of struggling to find and solve a wide range of problems and develop the system for mastering this skill. I cover the exact same content that has helped my students' performance skyrocket and got them offers at top companies like Google, Facebook and Amazon and solid results in the International Competitive Programming Contests.\n\nWe will solve some coding questions around Graphs, Topological Sort, Dynamic Programming, Priority Queue, Stacks & Queues.\n\n\"Unlock the secrets of competitive programming with our comprehensive free course on Udemy! Dive deep into the world of algorithms, data structures, and problem-solving techniques that are essential for coding competitions like CodeChef, LeetCode, and Codeforces. Whether you're a beginner eager to get started or an intermediate coder looking to sharpen your skills, this course offers tailored content, hands-on exercises, and expert insights to guide you. With interactive challenges and peer-reviewed assignments, you'll gain the confidence and expertise to tackle any coding challenge. Join thousands of learners and embark on a transformative journey in competitive programming!\"\nFeel free to adjust it as per your needs!\n\nEnjoy!",
      "target_audience": [
        "Beginner Computer Science Students wishing to get their dream job",
        "Students wishing to perform well in Competitive Programming Contests"
      ]
    },
    {
      "title": "Microsoft Excel 2016 Masterclass: Beginner to Pro in Excel",
      "url": "https://www.udemy.com/course/microsoft-excel-2016-masterclass-beginner-to-pro-in-excel/",
      "bio": "Microsoft Excel 2016 Course teaching you everything in one place and Master Microsoft Excel 2016 Beginner to Advanced!",
      "objectives": [
        "You will master the complete Microsoft Excel 2016 in this course",
        "You will learn the Advanced Excel Concepts in this course",
        "Describe the different ways to access formatting features.",
        "You will be comfortably working with Microsoft Excel 2016",
        "You will learn every feature in Microsoft Excel 2016 from basics to more Advanced Topics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "File Sync in Excel",
          "Excel Active Directory",
          "Privileged Identity Management in Excel",
          "Excel Monitoring Insights"
        ]
      },
      "requirements": [
        "No Experience in Excel is needed as you will learn from very basics to more advanced concepts"
      ],
      "description": "You will learn the complete Microsoft Excel 2016 from very basics to Advanced Concepts. Microsoft Excel 2016 plays a vital role in data management, analysis, and visualization across industries. This comprehensive course is designed to equip learners with practical skills ranging from basic operations to advanced data analysis techniques. Whether you're a student, business professional, analyst, or entrepreneur, this course provides the essential knowledge required to confidently use Excel for both personal and professional tasks.\nThe course begins with an introduction to the Excel interface, familiarizing students with workbooks, worksheets, and the ribbon. You will learn how to enter, edit, and format data effectively, and how to utilize key tools like AutoFill, Flash Fill, and conditional formatting to streamline data entry and visualization. Emphasis is placed on mastering formulas and functions, which are the core of Excel’s functionality. From basic arithmetic operations to complex logical, lookup, and text functions, learners gain hands-on experience in performing calculations and solving real-world problems.\nYou will be introduced to data management tools such as sorting, filtering, and data validation. PivotTables and PivotCharts are explored in-depth, enabling participants to summarize, analyze, and visualize large datasets effortlessly. Charting tools are also covered, helping learners to represent data in visually compelling ways through bar charts, pie charts, line graphs, and custom dashboards.\nAdvanced topics include working with Excel tables, using named ranges, performing what-if analysis with tools like Goal Seek and Scenario Manager, and automating tasks using macros and basic VBA (Visual Basic for Applications). Throughout the course, practical exercises and real-life case studies reinforce learning and allow participants to apply their skills to actual business scenarios. By the end of the course, you will be proficient in navigating Excel and using it to organize data, perform complex analyses, create reports, and support decision-making processes.",
      "target_audience": [
        "If you want to master the complete Microsoft Excel 2016 from very basics to more advanced concepts, this will definitely helpful for you"
      ]
    },
    {
      "title": "【キカガク流】プログラミング力向上のためのPythonで学ぶアルゴリズム論（前編）",
      "url": "https://www.udemy.com/course/algorithm1/",
      "bio": "日本語トップコースである【キカガク流】脱ブラックボックス講座の講師が教えるアルゴリズム論が登場！写経では理解できるようになってきたけれど、自分で考えて組む自信はないという方向けに、プログラミング力が圧倒的に向上できる内容です。",
      "objectives": [
        "プログラミングの組み方のヒントが得られます",
        "プログラムを自力で組める力が圧倒的に向上します",
        "アルゴリズムとは？が理解できます",
        "Pythonの文法がマスターできます"
      ],
      "course_content": {
        "コース紹介": [
          "コース紹介"
        ],
        "イントロダクション": [
          "JupyterNotebookの使い方と変数",
          "練習問題",
          "ブール型",
          "複数の変数（リスト・タプル・辞書）",
          "制御構文（for文）",
          "制御構文（if文）",
          "関数"
        ],
        "演習課題１：素数を見つけるアルゴリズム": [
          "問題設定・方針の説明",
          "解答",
          "解答：高速化を検討１",
          "解答：高速化を検討２"
        ],
        "アルゴリズム徹底練習": [
          "アルゴリズム徹底練習"
        ],
        "演習課題２：圧縮のアルゴリズム": [
          "問題設定・方針の説明",
          "解答：encode（圧縮）",
          "解答：decode（復元）"
        ],
        "ボーナスレクチャー：AI人材としてプロフェッショナルになるための教育とは？": [
          "ボーナスレクチャー：AI人材としてプロフェッショナルになるための教育とは？"
        ]
      },
      "requirements": [
        "【キカガク流】人工知能・機械学習 脱ブラックボックス講座 - 初級編 - の受講を前提としています。",
        "本コースは、Windowsを使用して進めていきますが、Macでも同様に進めることができます。",
        "Mac, Windowsの両方の環境構築手順を紹介しています。"
      ],
      "description": "今回のゴール：自力でアルゴリズムを考え、実装できる力をつける\n創業から1年半、オフラインでの受講生の２０００人、オンラインでの受講生４０００人を突破している株式会社キカガクの『アルゴリズム論』が登場！\n日本語のトップコースとなっている脱ブラックボックス講座の補講の位置する講座であり、「写経して理解はできるものの、自力でプログラムを書ける自信はない」といった方へおすすめです。\n参考書では正解となるソースコードが公開されていますが、そのコードに至るまでのプロセスや試行錯誤が公開されることはありません。これでは、初心者がプログラムがうまくなるためのプロセスを理解することができません。そこで、本講座ではそのプロセスを中心に紹介していきます。\nまた、アルゴリズム論という古くからある名前を付けていますが、メモリへのアクセスや並び替えに関するアルゴリズムを学ぶ昔からよくある内容ではありません。このご時世、Pythonではソートのアルゴリズムがnumpyで実装されており、自作する必要がありません。また、メモリも豊富なPCが一般的になり、初心者が最初に絶対に学ばないといけない内容ではなくなっています。\nこの授業は、目標として定めた問題をいかに効率よく、ミスを減らし、ほかの人にわかりやすく、汎用的なプログラムを書けるかを目指した内容をお伝えする全く新しいアルゴリズム論です。\n\n\n前編と後編の２部構成となっており、以下の内容を扱います。\n前編\nPythonの文法復習\n演習課題１：素数を求めるアルゴリズム\n演習課題２：圧縮のアルゴリズム\n後編\n演習課題３：リコメンドのアルゴリズム\n演習課題４：組み合わせ最適化のアルゴリズム",
      "target_audience": [
        "写経でのコードは理解できるようになったものの、考えて組むことがまだ難しいかた",
        "綺麗なコードとは？と他の人が見るためのプログラムの組み方が気になってきた方",
        "正解のコードだけでなく、プログラムを組む「手順」も知りたい方",
        "Pythonを含めたプログラミングの脱初心者を目指す方",
        "世界中で使われているアルゴリズムの考え方をのぞいてみたい方"
      ]
    },
    {
      "title": "【完全版】AWS ECSコンテナアプリケーション開発（入門から実践まで）",
      "url": "https://www.udemy.com/course/ok-aws-ecs/",
      "bio": "現役IT企業で働くエンジニアがAWS ECSの基礎から応用までカバー。コンテナを使ったアプリケーション開発の基礎から応用まで全て身につけます。",
      "objectives": [
        "AWS ECSの基本設定を理解します",
        "AWSでのネットワークの知識を習得します",
        "CI/CDパイプラインを使ったECSへのデプロイ方法を理解します",
        "Blue/Greenデプロイを使った安全なECSのアップデート方法を理解します",
        "ECSでのオートスケーリング設定方法を理解します",
        "ECSにおけるセッションなどの状態管理手法を理解します",
        "ECSを使ったマイクロサービスアーキテクチャについて学びます"
      ],
      "course_content": {
        "はじめに": [
          "はじめに",
          "レビューについて"
        ],
        "コンテナによるアプリケーション開発の基本": [
          "AWS ECSとは？",
          "コンテナとは？",
          "スケーリングとは？",
          "コンテナオーケストレーションとは？",
          "ECSの基本構造",
          "ECSのTask とTask定義",
          "ECS ServiceとCluster",
          "ECSの実行環境・EC2とFargateの違い",
          "ECRとイメージレジストリとは？"
        ],
        "事前準備": [
          "Dockerをインストールする",
          "AWSアカウントを作成する",
          "AWS利用費用の確認方法",
          "Visual Studio Code をインストールする"
        ],
        "AWSにおけるネットワーク入門": [
          "なぜネットワークの知識が必要なのか？",
          "VPCとSubnet",
          "プライベートIPアドレス",
          "CIDR",
          "VPCとSubnetの作成",
          "リージョンとアベイラビリティゾーン",
          "パブリックサブネットとプライベートサブネット",
          "ルートテーブルとインターネットゲートウェイ",
          "セキュリティグループとは？"
        ],
        "ECSで超シンプルなアプリの作成": [
          "今回作るアプリ",
          "ECS Cluster の作成",
          "ECS Task定義 の作成",
          "Fargateにアプリをデプロイする",
          "複数のサブネットを選ぶとどうなるか？",
          "まとめ"
        ],
        "Blue/Greenデプロイ": [
          "ECS版Blue/Greenデプロイに対応しました",
          "コンテナアプリが持つアップデートの課題",
          "Blue/Greenデプロイの概要",
          "２種類のBlueGreenデプロイ",
          "Blue/Greenデプロイの詳細",
          "セキュリティグループ設定",
          "ロードバランサー設定",
          "ロードバランサーの追加設定",
          "ロードバランサー操作に必要なロールの作成",
          "ECS Service作成（準備）",
          "ECS Service作成（実行）",
          "ライフサイクルフックス",
          "Lambda関数の作成",
          "Lambda関数実行用ロールの作成",
          "ライフサイクルフックスのサービスへの適用",
          "ECR設定",
          "オリジナルアプリの作成",
          "次回講義のIAMポリシーについて",
          "AWS CLIの設定",
          "次回講義でのイメージPush時の注意",
          "イメージをECRにPushする",
          "タスク定義の更新",
          "Blue/Greenデプロイを動かす",
          "LambdaでBlue/Greenデプロイをコントロールする",
          "Blue/Greenデプロイをロールバックする",
          "無駄なコスト削減のための後始末",
          "まとめ"
        ],
        "ECSとCI/CDパイプライン": [
          "CI/CDパイプラインとは？",
          "GitHubリポジトリを作成する",
          "今回作るアプリの紹介",
          "必要なAWSリソースの整理",
          "必要なAWSリソースの作成",
          "次回講義で利用するGitHubリポジトリ",
          "WebAPIを実装する",
          "WebAPIのコンテナイメージを作成する",
          "GitHub Actions の基本",
          "GitHub Actions の設定 （イメージをECRにPushする）",
          "GitHub ActionsからAWSにアクセスできるようにする",
          "OpenID Connectによる認証",
          "AWS IAMの設定",
          "GitHub Actions から ECRにイメージをPushする",
          "ECS へのデプロイ（GitHub Actionsの設定）",
          "ECS へのデプロイ（Task定義の設定）",
          "IAM RoleにPassRoleを追加する",
          "デプロイを確認する",
          "無駄なコスト削減のための後始末"
        ],
        "オートスケーリング": [
          "このセクションで学ぶこと",
          "スケーリングの種類",
          "ECSオートスケーリングとは？",
          "ハンズオンでの設定全体像",
          "負荷テストのためのWebAPIサーバを作成する",
          "負荷テストツール・k6 の設定をする",
          "次回講義でのイメージPush時の注意",
          "必要なAWSリソースを作成する",
          "オートスケーリングを設定する",
          "動作確認とセキュリティ設定を改善する",
          "オートスケーリングの設定を確認する",
          "負荷をかけてオートスケーリングを誘発する",
          "無駄なコスト削減のための後始末"
        ],
        "ECSにおける状態管理": [
          "このセクションで学ぶこと",
          "様々な状態管理手法",
          "セッションとCookie",
          "今回作るアプリ",
          "次回講義でのイメージPush時の注意",
          "AWSリソースを設定する",
          "スティッキーセッションなしで動作確認する",
          "スティッキーセッションありで動作確認する",
          "無駄なコスト削減のための後始末"
        ],
        "マイクロサービスアーキテクチャ入門": [
          "はじめに",
          "マイクロサービスアーキテクチャとは？",
          "マイクロサービスアーキテクチャのメリット・デメリット",
          "今回作るアプリをダウンロードする",
          "データの流れを理解する",
          "動作確認をする",
          "様々なECSサービス間通信手法",
          "Private Subnetにサービスを配置する方法",
          "必要なAWSリソースの整理",
          "VPCエンドポイントの設定",
          "次回講義でのイメージPush時の注意",
          "ECRリポジトリの作成とイメージのPush",
          "Private Subnetにサービスを配置する",
          "ロードバランサーのリクエスト振り分けルールの設定",
          "Task定義の設定",
          "Service Connectの仕組みを深掘りする",
          "Order/Inventory サービスもデプロイする",
          "ロードバランサーの設定を修正する",
          "最終動作確認をする",
          "無駄なコスト削減のための後始末"
        ]
      },
      "requirements": [
        "簡単なDockerの基本操作ができる"
      ],
      "description": "AWS ECSを中心に、Dockerコンテナを使ったアプリケーション開発手法について身につけられるコースです。\nコンテナを使ったアプリケーション開発で頻繁に使われるサービスがAWS ECSです。\nこのコースでは、AWS ECSの機能の理解はもちろん、その背景にあるネットワークやコンテナオーケストレーション、オートスケーリング、OpenID Connect、マイクロサービスアーキテクチャといった幅広い知識を基礎からしっかり理解するものになっています。\n単なる上部だけの知識ではなく、基礎からしっかり理解してコンテナアプリが作れるようなエンジニアになることを目的としています。\n\n\n本コースで学ぶ内容\nAWS ECSとは？\nAWSネットワークの基礎知識\nBlue/Greenデプロイ\nGitHub Actionsを使ったCI/CDパイプライン\n高負荷時のオートスケーリング設定\nマルチコンテナでの状態管理問題と解決方法\nECSを使ったマイクロサービスアーキテクチャ入門\n\n\n本コースに向いている人\n基礎からコンテナアプリ開発を学びたい人\nDockerの最低限のコマンドが使える（ex. docker run, docker build)人\nAWS ECSが機能がありすぎて何から手をつければ良いかわからない人\n\n\n\n\n本コースで出てくる技術\nコンテナオーケストレーション\nネットワーク\nVPC/Subnet\nルートテーブル\nセキュリティグループ etc\nデプロイ\nBlue/Greenデプロイ\nGitHub Actions\nスケーリング\n負荷テスト\nオートスケーリング\n状態管理\nスティッキーセッション\nJWTトークン\nマイクロサービスアーキテクチャ\nECSサービス間通信\nService Connect\nOpenID Connectによる認証",
      "target_audience": [
        "基礎からコンテナアプリ開発を学びたい人",
        "AWS ECSが機能がありすぎて何から手をつければ良いかわからない人"
      ]
    },
    {
      "title": "EPLAN ELEKTRİK P8 EĞİTİMİ",
      "url": "https://www.udemy.com/course/eplan-p8-egitimi/",
      "bio": "HIC BIRYERDE BULAMIYACAGINIZ YARDIMCI KUTUPHANE PAYLAŞIMI ILE EĞİTİMINIZE BUYUK KATKI SAĞLİYORUZ",
      "objectives": [
        "EPLAN P8 PROGRAMI KULLLANIMI",
        "OTOMASYON PROJESİ CİZMEYİ",
        "HAZIR EPLAN KÜTÜPHANESİ EKLEMEYİ",
        "EPLAN Electric P8",
        "EPLAN Electric P8"
      ],
      "course_content": {
        "Giriş": [
          "DERS-1 EPLANA GİRİŞ(kutuphane lınklerı bu dersın altındakı acıklamalar kısmında)",
          "EPLAN KAPAK SAYFASI TASARIMI",
          "CİZİM ALANI OLUSTURMA"
        ],
        "DEVRE TASARIMI": [
          "PANO PERDE TASARIMI",
          "CİHAZ EKLEME VE KABO BAGLANTI YAPIMI",
          "KUTUPHANE TANIMLAMA",
          "PROJE CIZIMI",
          "KABLOYA MANUEL VE OTOMATIK NUMARA VERME",
          "MAKRO OLUSTURMA",
          "RAPORLAMA YAPMA (URUNLISTESI,IÇINDEKILER LISTESI vs. )",
          "KENDI CIHAZ KUTUPHANEMIZI OLUSTURMA"
        ],
        "SIFIRDAN KESIF_PANO TASARIMI_PROJE CIZIMI": [
          "KESIF YAPMA VE PANO TASARIMI-(part-1)",
          "KESIF YAPMA VE PANO TASARIMI-(part-2)",
          "KESIF YAPMA VE PANO TASARIMI-(part-3)",
          "KESIF YAPMA VE PANO TASARIMI-(part-4)",
          "KESIF YAPMA VE PANO TASARIMI-(part-5)",
          "KESIF YAPMA VE PANO TASARIMI-(part-6)"
        ]
      },
      "requirements": [
        "BİLGİSAYAR"
      ],
      "description": "SIFIRDAN EPLAN ILE OTOMASYON PROJESI CIZMEYI OGRENECEKSINIZ\nPAYLAŞTIĞIMIZ KUTUPHANE VE ORNEK PROJELERLE DAHA HIZLI VE ETLIKI EPLAN KULLANIMI\nBU KURS ICERIGINDE\nEPLAN KAPAK SAYFASI OLUSTURULMASINDAN BASLAYARAK, NASIL PLOT FRAME OLUSTURULUR  NASIL PROJE CIZILIR NASIL CİHAZ VE MAKRO KUTUPHANESİ  OLUSTURULARA KADAR BİR ÇOK ŞEYİ SİZLERE ANLATTIK\nUDEMY DE BIR ILK BU EĞİTİM SETİ COK UYGUN FIYATA AYAGINIZA KADAR GELMİS DURUMDA\nNOT  PAYLASILAN BELGELER LINKI DERS1 ALTINDAKI ACIKLAMA SAYFALISNDADIR\n\n\nEPLAN dünya çapında 40.000den fazla müşterisine sahip ve dünya genelinde 100.000den fazla EPLAN yazılım sistemi kullanıldığı tahmin ediliyor. Genel merkezi,Almanya’nın Monheim am Rhein kesiminde bulunmaktadır. EPLAN Software Service, PC tabanlı bir elektronik tasarım otomasyon yazılımı üreten ilk şirkettir.\nEPLAN, firmalara mühendislik işlemlerini optimize etmeleri konusunda tavsiyede bulunur ve ayrıca yapılandırma süresini ve mühendislik maliyetlerini azaltan bir CAE / CAD çözümleri geliştiricisidir. Örnek olarak, Şu mühendislik alanları için servisler sunuyor:\nMekatronik\nElektrik – Elektronik Mühendisliği\nHidrolik ve Pnömatik Sistemler Mühendislikleri\nMakine mühendisliği\nPCT Mühendisliği\nBu EPLAN çözümleri, EPLAN Platformu üzerinden birbirine bağlanabilir; uygulamalar aynı temel işlevleri ve verileri kullanır.\nEPLAN Elektrik P8 için kullanılan grafiksel bir veritabanı E-CAE Elektriksel planlama ve Mühendislik yazılımıdır. EPLAN Electric P8 Eplan P8 olarak bilinmektedir\nYazılım proje planlaması için sınırsız olanaklar sunmasının yanı sıra otomasyon projelerinin belgelenmesi ve yönetimi için de kullanılmaktadır. Diğer proje alanlarından gelen veriler CAE yazılımıyla arayüzler aracılığıyla değiştirilmesi tutarlılığın sağlanması ve tüm projeyi başka projeler ile entegre etme imkanı sağlanmaktadır.Elektrik ve Elektronik ile uğraşanlar için çok kullanışlı bir sistemdir",
      "target_audience": [
        "ELEKTRİK MÜHENDİSLERİ",
        "ELEKTRONİK MÜHENDİSLERİ",
        "MEKATRONİK",
        "PROJE CİZMEK İSTEYENLER",
        "MÜHENDİSLER",
        "TEKNİSYENLER",
        "TEKNİKERLER",
        "OTOMASYON",
        "EPLAN ÖĞRENMEK İSTEYENLER",
        "EPLAN Electric P8",
        "EPLAN Electric P8"
      ]
    },
    {
      "title": "Microsoft Azure Infraestrutura - Curso Completo",
      "url": "https://www.udemy.com/course/azureinfraestrutura/",
      "bio": "Mais de 40 horas de treinamento sobre a Plataforma na Nuvem da Microsoft. Curso completo, do básico ao avançado!",
      "objectives": [
        "Azure Virtual Machine : Crie maquinas virtuais na nuvem.",
        "Azure App Service : Criar Serviço de Aplicativo do Azure",
        "Azure Network : Entender e criar VNets e Peerings.",
        "Azure Backup : Proteção de dados com Azure Backup, Snapshots e MARS",
        "Azure Resource Manager : Gerencia seus recursos de aplicativo facilmente",
        "Azure Security Center : Gerencie a Segurança dos Serviços e Recursos do Azure",
        "Azure Monitor : Monitore seus recursos e serviços.",
        "Application Insights : Monitore suas aplicações.",
        "Dimensionamento em Azure VM : Aprenda a configurar Auto Scale, Scale UP e Scale OUT",
        "Alta Disponibilidade : Aprenda a usar Azure Load Balancer",
        "Azure DevTest Labs : Utilize ambientes de desenvolvimento/teste rápidos, fáceis e descomplicados.",
        "Azure Storage : Mantenha dados da melhor forma na nuvem.",
        "Azure Policies : Conheça as politicas que podem ser aplicadas na sua conta, recursos e serviços do Azure.",
        "Azure Key Vault : Aprenda a proteger e gerenciar as chaves de criptografia e os segredos.",
        "Imagens Customizadas para VMs e Discos : Crie imagens e reutilize-as nas suas maquinas virtuais.",
        "Azure CDN : Aprenda a usar a rede de distribuição de conteúdo do Azure.",
        "Azure PowerShell : Aprenda a usar o Powershell para implantar recursos e serviços do Azure.",
        "Azure CLI : Aprenda a usar o Azure CLI para implantar recursos e serviços do Azure através de linha de comandos.",
        "Azure Batch : Aprenda a usar o processamento em lote na nuvem da Microsoft.",
        "Azure Bastion : Conecte-se a maquinas virtuais do Azure a partir do seu navegador."
      ],
      "course_content": {
        "Introdução à Computação na Nuvem com Azure Cloud": [
          "Introdução Módulo | Nuvem e Azure",
          "Computação na Nuvem",
          "Atributos Básicos da Computação na Nuvem",
          "Benefícios da Computação na Nuvem",
          "Modelos de Infraestrutura - Pública, Hibrida e Privada",
          "Modelos de Serviços na Nuvem - IaaS, PaaS e SaaS",
          "Azure Cloud e seus Principais Serviços",
          "Azure Portal",
          "[Hands-On] Criar Conta de Assinatura do Azure",
          "[Hands-On] Overview no Portal do Azure",
          "Regiões e Grupo de Recursos no Azure",
          "[Hands-On] Criando Resource Group pelo Portal do Azure",
          "Opções de Implantação de Serviços e Recursos no Azure Cloud",
          "Quiz Módulo | Nuvem e Azure",
          "Resumo Módulo | Nuvem e Azure"
        ],
        "Ferramentas de Gerenciamento do Azure - Azure CLI, Cloud Shell e Powershell": [
          "Introdução ao Módulo | Ferramentas de Gerenciamento do Azure",
          "Azure CLI - Gerenciando Serviços e Recursos a partir de Comandos",
          "Comandos Básicos no Azure CLI",
          "[Hands-On] Instalando e Criando Resource Group com Azure CLI no Windows",
          "[Hands-On] Instalando e Criando Resource Group com Azure CLI no Mac",
          "[Hands-On] Instalando Azure CLI no Ubuntu Linux",
          "[Hands-On] Instalando Visual Studio Code",
          "Powershell e Azure Powershell",
          "[Hands-On] Instalando Azure Powershell e criando Resource Group no Windows",
          "[Hands-On] Instalando Azure Powershell e criando Resource Group no Mac",
          "Azure Cloud Shell",
          "[Hands-On] Inicializando e Criando Resource Group com Azure Cloud Shell",
          "Resumo do Módulo - Azure CLI, Azure Cloud Shell e Azure Powershell"
        ],
        "Gerenciamento de Assinaturas e Recursos - Azure Policy, Tags e Management Groups": [
          "Introdução ao Módulo | Gerenciamento de Assinaturas e Recursos",
          "Azure Subscriptions - Suas Assinaturas no Azure",
          "[Hands-On] Criando Subscription Pay-As-You-Go no Azure Portal",
          "Tags no Azure",
          "[Hands-On] Vincular e Gerenciar Tags",
          "Azure Policy",
          "[Hands-On] Azure Policy - Obrigar a utilização de Tags na Criação de Recursos",
          "Azure Active Directory",
          "[Hands-On] Criando Novo Tenant no AAD, Usuários e Grupos",
          "Azure Management Group",
          "[Hands-On] Usando Management Groups para Organização das Assinaturas",
          "Azure RBAC",
          "[Hands-On] Adicionando Papéis a Usuários com Azure RBAC",
          "Protegendo Recursos com Azure Lock",
          "[Hands-On] Aplicando Lock a Recursos do Azure",
          "Azure Cost Management - Gerenciamento de Custos",
          "[Hands-On] Conhecendo o Azure Cost Management",
          "Resumo do Módulo | Gerenciamento de Assinaturas e Recursos"
        ],
        "Azure VM (Virtual Machines) - Máquinas Virtuais na Nuvem da Microsoft": [
          "Introdução Módulo | Virtual Machines",
          "Azure VM - Máquinas Virtuais no Azure",
          "Sistema Operacional, Nome e Regiões",
          "Configurando a Rede na VM do Azure",
          "Uso de NIC em Maquinas Virtuais do Azure",
          "Tipos e Tamanhos de Maquinas Virtuais do Azure",
          "Endereços IP Público e IP Privado no Azure",
          "[Hands-On] Criar VMs com Windows Server no Azure pelo Portal e acesso via RDP",
          "[Hands-On] Conectar a Máquina Virtual com Remote Desktop Protocol (RDP) no MacOS",
          "Armazenamento no Azure VM",
          "[Hands-On] Adicionando Discos na VM do Azure",
          "[Hands-On] Criar VM Ubuntu pelo Portal e Instalando NGINX",
          "Azure Bastion - Acessando VMs com Segurança",
          "[Hands-On] Criando VM Windows Server e Provisionando Azure Bastion na VNET",
          "Comandos para Provisionar e Gerenciar VMs do Azure com Azure CLI",
          "[Hands-On] Azure CLI - Criando VM Windows Server e IIS Web Server",
          "[Hands-On] Azure CLI - Criando VM Windows Server e Habilitando Azure Bastion",
          "[Hands-On] Azure CLI - Criando VM com Linux Debian e Instalando NGINX",
          "[Hands-On] Azure CLI - Criando VM com Linux Ubuntu e Acessando na porta 22 - SSH",
          "[Hands-On] Azure Powershell - Criando VM Windows Server e IIS Web Server",
          "[Hands-On] Azure Powershell - Criando VM com Linux Ubuntu com apenas 1 comando",
          "[Hands-On] Azure Powershell - Criar VM com Linux Ubuntu e Acessar com SSH",
          "[Hands-On] Azure Powershell - Criando VM Windows Server e Azure Bastion Host",
          "Quiz Módulo | Virtual Machines",
          "Resumo Módulo | Virtual Machines"
        ],
        "Azure Storage - Armazenamento em nuvem seguro, de alto desempenho e escalonável": [
          "Introdução ao Módulo | Azure Storage",
          "Por que armazenar na nuvem?",
          "Conhecendo Azure Storage",
          "[Hands-On] Criando Conta no Azure Storage via Portal",
          "Armazenamento com Redundância - LRS , ZRS, GRS e RA-GRS",
          "Blobs e Blobs Containers",
          "[Hands-On] Criando Blob Storage via Portal",
          "Hot, Cool e Archive",
          "Tipos de Storage Account",
          "Azure File Shares",
          "[Hands-On] Consumindo arquivos do File Share no Windows 11",
          "Azure Queue Storage",
          "[Hands-On] Criando Filas com o Azure Queue Storage",
          "Azure Table Storage",
          "[Hands-On] Criando tabelas com o Azure Table Storage",
          "Conhecendo Azure Storage Explorer e AzCopy",
          "[Hands-On] Usando o Azure Storage Explorer na prática",
          "Comandos do AzCopy",
          "[Hands-On] Copiando Arquivos para o File Share e Blob Containeirs usando AzCopy",
          "Azure File Sync",
          "[Hands-On] Criar e configurar VM para uso no Azure File Sync",
          "[Hands-On] Sincronizando Arquivos com Azure File Sync",
          "Access Keys no Azure Storage Account",
          "[Hands-On] Uso do Access Keys para acesso ao Storage Account",
          "SAS - Shared Access Signatures",
          "[Hands-On] Uso do SAS tokens para Acesso ao Storage Account",
          "[Hands-On] Integrar Storage Account com Microsoft Entra ID",
          "Quiz | Azure Storage",
          "Resumo | Azure Storage"
        ],
        "Azure Virtual Network - Usando Redes Virtuais no Azure Cloud": [
          "Introdução ao Módulo | Azure Virtual Network",
          "Conhecendo o Básico de Redes de Computadores",
          "Endereçamento de IP em Redes",
          "Classes e Cálculo de Endereçamento IP",
          "Azure Virtual Network (VNET) - Redes Virtuais no Azure",
          "Planejando Redes Virtuais e Subnets do Azure",
          "[Hands-On] Criar Rede Virtual do Azure pelo Portal do Azure",
          "[Hands-On] Criar Subnets nas Redes Virtuais do Azure pelo Portal",
          "Comandos para Provisionar Azure Virtual Network com Azure CLI",
          "[Hands-On] Azure CLI - Projetar e implementar Azure Virtual Network",
          "[Hands-On] Azure CLI - Projetar e implementar Subnets em VNETs do Azure",
          "Comandos para Provisionar Azure Virtual Network com Azure Powershell",
          "[Hands-On] Powershell - Projetar e implementar VNETs em VNETs do Azure",
          "[Hands-On] Powershell - Projetar e implementar Subnets em VNETs do Azure",
          "Quiz Módulo | Azure Virtual Network",
          "Resumo do Módulo | Azure Virtual Network"
        ],
        "NSG - Network Security Group e ASG - Application Security Group": [
          "Introdução ao Módulo | NSG e ASG",
          "NSG - Azure Network Security Groups",
          "[Hands-On] Criar VNET e Associar NSG a Subnet da Rede Virtual",
          "[Hands-On] Liberar Acessos na porta RDP (3389) a apenas 1 IP Address",
          "[Hands-On] Liberar Acessos na porta SSH (22) a VMs Linux",
          "[Hands-On] Liberar Acessos na porta HTTP (80) a apenas 1 IP Address",
          "[Hands-On] Testando Acessos com Network Security Groud Test",
          "[Hands-On] Associar NSG a Interface de Rede (NIC) das VMs",
          "ASG - Application Security Group",
          "[Hands-On] Criando Application Security Group e Regras no NSG",
          "[Hands-On] Limitando Acesso via RDP com ASG",
          "[Hands-On] Filtrar Trafego de Rede com ASG pelo Portal",
          "Comandos para Gerenciar NSG, Regras e ASG com Azure CLI",
          "[Hands-On] Associar NSG a Interface de Rede (NIC) das VMs",
          "[Hands-On] Azure CLI - Associar NSG a Subnet da Rede Virtual",
          "[Hands-On] Azure CLI - Criar VNET, NSG e ASG",
          "[Hands-On] Azure CLI - Criar VM para Banco de Dados e Liberar Acesso RDP via ASG",
          "[Hands-On] Azure CLI - Expor porta 80 e 443 usando Application Security Group",
          "Resumo do Módulo | NSG e ASG"
        ],
        "Interligando Redes do Azure - Peering entre VNETs do Azure e VPN Gateway": [
          "Introdução ao Módulo",
          "Tipos de Conectividade no Azure",
          "Peering em Redes Virtuais do Azure",
          "[Hands-On] VNET Peering - Criar as Redes Virtuais e VMs Linux",
          "[Hands-On] Estabelecer Peering com VNETs em diferentes regiões",
          "[Hands-On] Testar Peering em VNETs com VMs Windows Server",
          "[Hands-On] Peering com VNETs em diferentes Subscription",
          "[Hands-On] Azure CLI - Criar VNET e VMs Linux",
          "[Hands-On] Azure CLI - Peering entre VMs Linux",
          "[Hands-On] Azure CLI - Criar VNET e VMs Windows Server",
          "[Hands-On] Azure CLI - Peering entre VMs Windows Server",
          "Redes Privadas Virtuais (VPNs)",
          "Azure VPN Gateway",
          "Azure VNET Gateway - Tipos e Camadas",
          "VPN Gateway Baseada em Rota e Baseada em Política",
          "BGP (Border Gateway Protocol) em VPNs",
          "VPN Point-to-Site",
          "[Hands-On] Criar Azure VPN Gateway no Portal",
          "[Hands-On] Configurar Azure Active Directory como Autenticador na VPN",
          "[Hands-On] Configurar VPN Client Point-to-Site na Máquina Local",
          "[Hands-On] Criar VM Linux Privada para Acesso a partir da VPN Point-to-Site",
          "[Hands-On] Criar VM Windows 11 Privada para Acesso a partir da VPN Point-to-Site",
          "[Hands-On] Testar Acesso VPN Point-to-Site em VM com Peering no VNET Gateway",
          "VPN Site to Site - Conectando Rede On-Premise com VNET do Azure",
          "[Hands-On] Criar On-Premise com RRAS no Windows Server",
          "[Hands-On] Criar Ambiente Azure - VNET, VNET Gateway e Local Network Gateway",
          "[Hands-On] Configurar Routing e Remote Access (RRAS) no Ambiente On-Premise",
          "[Hands-On] Criar Conexao no Local Gateway entre Azure e Windows Server RRAS",
          "[Hands-On] Site-to-Site entre VPN Gateways no Azure - Configurar Filial",
          "[Hands-On] Configurar Conexões entre 2 VNET Gateways do Azure (Matriz e Filial)",
          "[Hands-On] Azure CLI - Criar VNETs e Virtual Network Gateway da Matriz",
          "[Hands-On] Azure CLI - Criar VNETs e Virtual Network Gateway da Filial",
          "[Hands-On] Azure CLI - Criar Local Network Gateways e Connections nos Ambientes",
          "[Hands-On] Azure CLI - Criar VMs e Testar Conexão Site-to-Site",
          "VPN VNET-to-VNET",
          "[Hands-On] Criar VNETs e Virtual Network Gateways",
          "[Hands-On] Configurar Conexões entre VNET1 e VNET2",
          "[Hands-On] Testar a Conexão VNET-to-VNET",
          "Azure ExpressRoute",
          "[Hands-On] Criar ExpressRoute Circuit no Portal do Azure",
          "[Hands-On] Criar VNET Gateway e Configurar para uso com ExpressRoute",
          "Quiz do Módulo | Azure VPN",
          "Resumo do Módulo | Azure VPN"
        ],
        "Imagens Customizadas para VMs e Discos": [
          "Introdução ao Módulo 7",
          "Imagens Customizadas no Azure",
          "Processo de Criação de Imagem no Linux",
          "[Hands-On] Criando Imagem Linux pelo Portal",
          "[Hands-On] Criando VM a partir de Imagem Linux no Portal",
          "Processo de Criação de Imagem no Windows Server",
          "[Hands-On] Criando VM a partir de Imagem Windows Server no Portal",
          "[Hands-On] Criando VM a partir de Imagem Windows Server no Portal",
          "[Hands-On] Verificando VM Imagem Windows",
          "Quiz Módulo 7",
          "Resumo Módulo 7"
        ],
        "Azure App Service - Provisionando Aplicativos Web como PaaS": [
          "Introdução ao Módulo | Azure App Service",
          "Serviços PaaS (Platform as a Service) no Azure",
          "Azure App Service - Overview",
          "Azure App Service Plan - Planos do App Service",
          "Beneficios do uso do Azure App Service",
          "Preços do Azure App Service Plan e suas Diferenças",
          "[Hands-On] Criando Azure App Service pelo Portal",
          "[Hands-On] Overview do App Service pelo Portal",
          "[Hands-On] Overview do App Service Plan pelo Portal",
          "[Hands-On] Usando FTP com Azure App Services",
          "[Hands-On] Azure CLI - Provisionando App Service Plan",
          "[Hands-On] Azure CLI - Gerenciando App Service Plan e App Service",
          "[Hands-On] Powershell - Provisionando App Service Plan",
          "[Hands-On] Powershell - Provisionando App Service",
          "Deployment Slots no Azure App Service",
          "[Hands-On] Usando Slots no Azure App Services",
          "[Hands-On] Swap e Rollback com Slots",
          "[Hands-On] Azure CLI - Provisionando Slots do App Service",
          "[Hands-On] Azure CLI - Traffic Routing nos Slots do App Service",
          "Opções para Escalar no Azure App Service",
          "[Hands-On] Instalar Visual Studio 2022",
          "[Hands-On] Criando Web App e Aplicativo .NET para comprometer a performance",
          "[Hands-On] Escala Vertical do Azure App Service Plans - Manual",
          "[Hands-On] Escala Horizontal do Azure App Service Plan - Manual",
          "[Hands-On] Configurando Auto-Scale para o Azure App Service Plan",
          "[Hands-On] Azure CLI - Escalando Azure App Service Plan através de comandos",
          "Quiz do Modulo | Azure App Service",
          "Resumo do Módulo | Azure App Service"
        ]
      },
      "requirements": [
        "Conhecimentos Básicos em T.I.",
        "Conhecimentos Básicos em Infraestrutura",
        "Cadastro no Azure Cloud e créditos disponíveis. Poderá usar os créditos disponíveis na aberta da conta gratuita."
      ],
      "description": "Neste treinamento, você ira aprender sobre Azure Cloud. A plataforma na nuvem da Microsoft.\nE são mais de 40 horas de treinamento, distribuídos em mais de 400 aulas praticas e teóricas.\nAbaixo, listo os principais módulos:\nIntrodução ao Azure - No primeiro módulo, iremos conhecer de modo geral sobre Computação na Nuvem, Benefícios, Modelos de Infraestrutura, Produtos do Azure, além de aulas práticas como Criar a nossa conta no Azure, Explorar o Azure através do Portal, Resource Groups, Controle de Acesso, Locks e politicas do Azure.\nAzure Virtual Machine - Nesse módulo iremos criar nossa primeira maquina virtual no Azure. Alias, duas: uma com Windows Server e outra com Linux Ubuntu. Além disso, aprenderemos a acessa-la através do protocolo RDP, SSH e Serial Console.\nAzure CLI - Iremos aprender nesse modulo a utilizar a linha de comando do Azure.\nAzure Powershell - Iremos aprender nesse modulo a utilizar o Powershell com serviços e recursos do Azure.\nAzure Storage - Neste modulo, iremos aprender sobre o armazenamento da nuvem da Microsoft.\nAzure Network - Iremos conhecer a rede virtual do Azure, implementando na prática uma rede com peering.\nImagens Customizadas para VMs e Discos - Iremos aprender sobre as imagens customizadas, criando imagens e gerando VMs a partir delas.\nAzure Resource Manager (ARM) - Neste modulo, aprenderemos sobre o ARM do Azure, onde podemos fazer deploy em lote de recursos e serviços.\nAzure Key Vault - Aprenderemos como podemos armazenar chaves e segredos no Azure .\nDimensionamento em Azure VM - Neste modulo, aprenderemos a dimensionar as nossas maquinas virtuais horizontalmente e verticalmente.\nAlta Disponibilidade - Neste modulo, veremos como implementar o Azure Load Balancer para ter uma alta disponibilidade na nossa infra do Azure.\nAzure CDN - Iremos aprender rapidamente sobre CDN, rede de fornecimento de conteúdo da nuvem da Microsoft.\nAzure DevTest Labs - Neste modulo, iremos provisionar rapidamente ambientes de desenvolvimento e teste.\nAzure App Services - Iremos aprender a criar e implantar aplicativos Web.\nAzure Backup - Neste modulo, iremos aprender sobre o Azure Backup, Snapshots e Agente MARS.\nSegurança no Azure - Neste módulo, iremos conhecer o Azure Security Center, central de segurança do Azure.\nMonitoramento no Azure - Iremos ver como utilizar o Azure Monitor e Azure Application Insights para monitorar seus serviços, recursos e aplicações.\nAzure Batch - Iremos aprender a utilizar o gerenciamento de computação em escala de nuvem.\nAzure Bastion - Nesse modulo, iremos utilizar o novo recurso  do Azure, ainda em preview, para acessar suas maquinas virtuais do Azure.\nOutros Recursos do Azure - Neste ultimo modulo de conteúdo sobre Azure, irei falar breve sobre alguns serviços e recursos não explorados nos outros módulos.\n\n\nSentiu falta de algum assunto relacionado ao Azure?\nEsse treinamento não fica apenas nesses módulos. Conforme solicitação dos alunos, irei disponibilizar mais tópicos, dentro desse treinamento completo sobre a nuvem da Microsoft.",
      "target_audience": [
        "Iniciantes em T.I.",
        "Analista de Infraestrutura",
        "Desenvolvedores",
        "Arquitetos de Sofware",
        "Engenheiro de Softwares",
        "SysAdmin"
      ]
    },
    {
      "title": "600+ Software Engineering Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/software-engineering-interview-questions/",
      "bio": "Software Engineering Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Software Engineering Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nMastering Software Engineering Interview Questions: Practice Test Course\nAre you preparing for a software engineering interview and feeling overwhelmed by the vast amount of topics you need to cover? Look no further! Our comprehensive practice test course is designed to help you ace your software engineering interviews by providing targeted questions and exercises covering key areas of the field. With six sections encompassing various aspects of software engineering, this course will thoroughly prepare you for any interview scenario.\nSection 1: Programming Languages and Concepts In this section, we delve into the fundamental concepts and principles of programming languages. From object-oriented programming to concurrency, you'll be challenged with questions that test your understanding of essential programming concepts. Whether you're familiar with Java, Python, or any other language, these questions will help you solidify your knowledge and tackle any programming-related interview question with confidence.\nSection 2: Software Development Methodologies Understanding different software development methodologies is crucial for navigating the dynamics of modern software teams. With questions covering Agile, Waterfall, Scrum, and more, you'll gain a deep understanding of each methodology's principles and practices. By mastering these concepts, you'll demonstrate your ability to adapt to various development environments and contribute effectively to any team.\nSection 3: Software Design and Architecture Strong software design and architecture skills are essential for building scalable and maintainable systems. This section explores design patterns, architectural principles, and best practices that are commonly encountered in software engineering interviews. Whether you're discussing SOLID principles or debating the merits of microservices, these questions will sharpen your architectural thinking and set you apart as a well-rounded engineer.\nSection 4: Web Development With the proliferation of web applications, proficiency in web development has become a valuable skill for software engineers. This section covers HTML/CSS, JavaScript, frontend and backend frameworks, RESTful APIs, and web security. By mastering these topics, you'll be equipped to tackle web development-related interview questions and excel in roles that require expertise in building web-based systems.\nSection 5: Databases A solid understanding of databases is essential for any software engineer working with data-driven applications. From relational databases to NoSQL solutions, this section covers topics such as database normalization, indexing, and transaction management. By honing your database skills, you'll be prepared to address questions related to data storage, retrieval, and management in interviews.\nSection 6: Testing and Quality Assurance Software testing and quality assurance play a crucial role in ensuring the reliability and robustness of software systems. This section covers unit testing, integration testing, test-driven development (TDD), continuous integration (CI), and code review practices. By mastering these concepts, you'll demonstrate your commitment to delivering high-quality software and mitigating the risks associated with software development.\n\n\nDon't let the fear of software engineering interviews hold you back.\nEnroll in our practice test course today and take the first step toward acing your next interview!",
      "target_audience": [
        "Aspiring Software Engineers: Individuals who are pursuing a career in software engineering and seeking to enhance their knowledge and skills to excel in interviews for entry-level and junior software engineering positions.",
        "Computer Science Students: Undergraduate or graduate students studying computer science or related fields who want to supplement their academic coursework with practical interview preparation and real-world software engineering insights.",
        "Experienced Developers Transitioning to Software Engineering Roles: Professionals with experience in other technical roles, such as web development or IT support, who are transitioning to software engineering roles and need to refresh their knowledge and prepare for software engineering interviews.",
        "Job Seekers Preparing for Technical Interviews: Individuals who are actively searching for software engineering positions and want to increase their confidence and competitiveness by mastering common interview topics and questions.",
        "Self-Learners and Career Changers: Self-motivated individuals who are interested in learning software engineering concepts and techniques independently to pursue new career opportunities or pivot into the tech industry from non-technical backgrounds.",
        "Anyone Interested in Software Engineering: Enthusiasts who have a keen interest in software engineering and want to deepen their understanding of the field, regardless of whether they are currently pursuing formal education or employment in the tech industry."
      ]
    },
    {
      "title": "20+ Saat Tableau, Power BI ve Excel ile Komple Veri Analizi",
      "url": "https://www.udemy.com/course/excel-vba-en-sk-kullanlan-25-makro-uygulamas/",
      "bio": "Aynı kurs içinde Tableau, Power BI ve Excel'de sınırları zorlayın, veri analizinde ustalaşın!",
      "objectives": [
        "Tableau, Power BI, Excel VBA ve formüller ile iş hayatındaki rutin işlerden kurtulabilecek ve veri analizi yapabileceksiniz."
      ],
      "course_content": {
        "Tableau 2020": [
          "İş Zekası Nedir?",
          "Tableau 2020 nasıl yüklenir?",
          "Tableau 2020 Mimarisi"
        ],
        "Measures & Dimensions (Ölçüler ve Boyutlar)": [
          "Ölçüler ve Boyutlar"
        ],
        "Tableau 2020 Görseller ile Tanışma": [
          "Bar Chart",
          "Line Chart",
          "Pie Chart",
          "Horizontal Bar Chart",
          "Stacked Bar Chart",
          "Tables",
          "Treemaps",
          "Heatmaps",
          "Stacked Are Chart",
          "Maps",
          "Dual Line Chart",
          "Multiple Line Chart",
          "Histogram",
          "Scatter Plot"
        ],
        "Tableau 2020 - Sets": [
          "Sets"
        ],
        "Tableau 2020 - Totals": [
          "Totals"
        ],
        "Dynamic Measures - Parameters": [
          "Dinamik Ölçüler ve Parametreler"
        ],
        "Table Calculations (Tablo düzeyi hesaplamalar)": [
          "Table Calculations",
          "Table Average - Include"
        ],
        "Conditional Filtering ( Koşullu Filtreleme)": [
          "Koşullu Filtreleme",
          "Show Filter ( Filtreleri Gösterme )"
        ],
        "Groups (Gruplar)": [
          "Grupları manuel olarak oluşturma",
          "Dinamik Gruplar"
        ],
        "Parametreler": [
          "Parametreler"
        ]
      },
      "requirements": [
        "Herhangi bir ön koşul gerekmemektedir."
      ],
      "description": "Selam! 20+ Saat Tableau, Power BI ve Excel ile Komple Veri Analizi Kursuna hoş geldiniz.\nDiğer kurslardan farklı olarak aynı kurs içerisinde;\n- Power BI Veri Görselleştirme ve Raporlama\n- Tableau ile Veri Görselleştirme ve Raporlama\n- İleri Düzey DAX programlama ve Analitik Çözümler\n- Power BI – M Query Language\n- İş Hayatında en sık kullanılan 40 Excel formül uygulaması\n- İş hayatında en sık kullanılan 25 Excel makro uygulaması\nBunlar, işverenlerin BI Mühendislerini işe alırken aradığı kesin teknik becerilerdir. Ve bugün, diğer adayların önüne geçmek için paha biçilemez bir avantaj elde etme şansına sahipsiniz!",
      "target_audience": [
        "İş hayatında excel'de çok fazla vakit harcayan insanlar."
      ]
    },
    {
      "title": "Write the Best Software Engineer CV/Resume",
      "url": "https://www.udemy.com/course/write-the-best-software-engineer-cvresume/",
      "bio": "Craft a Winning CV: Elevate Your Tech Career & Secure That Dream Interview!",
      "objectives": [
        "How to write amazing bullet points to showcase your experience",
        "How to add experience to your resume without having a job",
        "How to approach applying for jobs",
        "How to tell show potential employers about your skills in a way they can't miss"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course"
        ],
        "Creating your CV/Resume": [
          "Who Are You Writing For",
          "How to Structure Your CV",
          "Writing Your CV",
          "How to Get Experience Without a Job",
          "Extra Bits (Cover letter, Job approach and more)"
        ],
        "CV Reviews": [
          "Intro to CV Reviews",
          "CV Reviews Part 1",
          "CV Reviews Part 2"
        ],
        "Downloads": [
          "Intro to Downloads",
          "2 Canva CV Templates"
        ],
        "Final Thoughts": [
          "Finishing off the course"
        ]
      },
      "requirements": [
        "You are looking for a new software engineering job"
      ],
      "description": "Welcome to the Ultimate CV Guide for Software Engineers\nAre you a software engineer or web developer eager to land your dream job but find yourself struggling to get past the application stage? You're not alone. The job market is fiercely competitive, especially with the recent influx of bootcamp graduates and laid-off tech employees. But fear not, the key to unlocking those interview doors might just be one well-crafted CV away.\nThis course is designed to transform your CV from a mere document into a powerful tool that showcases your skills, experience, and potential. Whether you're a self-taught developer, a fresh bootcamp graduate, or a seasoned professional seeking new opportunities, this course will provide you with the insights and techniques to create a CV that stands out.\nWe'll dive deep into understanding who your CV is really for, structuring it to highlight your most impressive achievements, and writing bullet points that tell a compelling story about your professional journey. You'll learn the STAR technique for crafting impactful statements and how to turn hobbies into achievements that catch a recruiter's eye.\nBy the end of this course, you'll not only have a CV that you can be proud of, but you'll also possess the knowledge to continuously improve and adapt it as your career progresses. With personalized feedback, real-world project ideas, and strategies for gaining experience without a job, you'll be well-equipped to make a lasting impression on any hiring manager.\nSo, if you're ready to take your CV to the next level and open the doors to exciting job opportunities, join us on this journey to career success. Let's get started and turn those rejections into offers!",
      "target_audience": [
        "Beginner Software Developers of any discipline"
      ]
    },
    {
      "title": "Introduction to Generative AI Transformer Models in Python",
      "url": "https://www.udemy.com/course/introduction-to-generative-ai-transformer-models-in-python/",
      "bio": "Master Transformer models in Python, learn their architecture, implement NLP applications, and fine-tune models.",
      "objectives": [
        "Understand the fundamentals of generative AI Transformer models.",
        "Differentiate Transformer models from traditional neural networks.",
        "Recognize key applications of Transformer models in NLP and beyond.",
        "Grasp the architecture of Transformer models, including encoders and decoders.",
        "Implement Transformer models and applications in Python.",
        "Prepare data and train Transformer models effectively.",
        "Evaluate and analyze Transformer model performance.",
        "Build practical applications using transformers like text classification, language translation, and question answering.",
        "Fine-tune pre-trained Transformer models for specific tasks.",
        "Explore advanced models like BERT and GPT for practical use cases."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Python programming.",
        "Interest in fundamental machine learning concepts and neural networks.",
        "Willingness to learn and explore Transformer models in-depth.",
        "Access to a computer with internet connectivity."
      ],
      "description": "Welcome to \"Introduction to Generative AI Transformer Models in Python\" a comprehensive course designed to take you from the basics to advanced applications of Transformer models in natural language processing (NLP). Whether you're a data scientist, software developer, AI enthusiast, or a student, this course will provide you with the essential knowledge and practical skills needed to excel in the world of modern AI.\nWhy Learn Transformer Models? Transformer models have revolutionized the field of NLP and AI with their ability to handle complex language tasks more efficiently than traditional neural networks. These models form the backbone of state-of-the-art applications like text classification, language translation, and question answering systems. By mastering Transformer models, you’ll be equipped to tackle real-world challenges and contribute to cutting-edge AI developments.\nWhat You Will Learn:\nUnderstanding Transformer Models: We begin with the fundamentals, giving you a solid understanding of what Transformer models are, how they differ from traditional neural networks, and why they are crucial in today’s AI landscape.\nDeep Dive into Transformer Architecture: Explore the components of Transformer models, including the encoder, decoder, and attention mechanisms. Learn how self-attention and positional encoding play a vital role in processing and understanding language.\nImplementing Transformers in Python: Get hands-on experience with Python, PyTorch, and SKLearn libraries. Follow step-by-step instructions to build, train, and evaluate your own Transformer models.\nNLP Applications: Apply what you've learned to real-world tasks. Implement Transformer models for text classification, language translation, and question answering. Learn how to preprocess data, prepare datasets, and fine-tune models for optimal performance.\nAdvanced Topics and Fine-Tuning: Delve into advanced concepts like fine-tuning pre-trained models, exploring BERT and GPT, and understanding best practices for enhancing model performance.\nCourse Highlights:\nBeginner-Friendly Approach: No advanced prerequisites required. A basic understanding of Python and machine learning concepts is enough to get started.\nPractical Examples: Each module includes practical examples and real-world applications, making the learning process engaging and relevant.\nHands-On Projects: Work on hands-on projects that reinforce your understanding and give you practical experience in building and applying Transformer models.\nExpert Guidance: Learn from an industry expert who provides clear explanations, insightful tips, and valuable resources to help you succeed.",
      "target_audience": [
        "Aspiring data scientists and machine learning enthusiasts seeking to understand Transformer models.",
        "Software developers and engineers looking to apply advanced AI techniques in their projects.",
        "AI researchers and students aiming to explore state-of-the-art natural language processing techniques.",
        "Professionals in the field of data analysis and AI who want to enhance their skill set with modern Transformer models.",
        "Beginners with a basic understanding of Python and machine learning concepts, eager to learn about cutting-edge AI technologies."
      ]
    },
    {
      "title": "Arquitetura Hexagonal/Ports and Adapters NA PRÁTICA",
      "url": "https://www.udemy.com/course/arquitetura-hexagonal-ou-ports-and-adapters-na-pratica/",
      "bio": "Aprenda na prática como aplicar a arquitetura hexagonal em microsserviços utilizando Java, Spring Boot, MongoDB e Kafka",
      "objectives": [
        "Aprender na prática como aplicar a arquitetura hexagonal em microsserviços",
        "Melhorar reusabilidade do seu código",
        "Melhorar organização dos pacotes",
        "10% teoria e 90% prática"
      ],
      "course_content": {
        "Introdução": [
          "Visão geral sobre o curso"
        ],
        "Criação do projeto": [
          "Criando o projeto",
          "Criando a estrutura do projeto"
        ],
        "Criação do CRUD - CREATE": [
          "Criando o domain",
          "Criando o usecase",
          "Criando o client",
          "Criando o adapter de busca de endereço",
          "Criando o repository",
          "Criando o adapter de inserção do cliente",
          "Criando o controller"
        ],
        "Criação do CRUD - READ": [
          "Criando o usecase",
          "Criando o adapter",
          "Criando o controller"
        ],
        "Criação do CRUD - UPDATE": [
          "Criando o usecase",
          "Criando o adapter",
          "Criando o controller"
        ],
        "Criação do CRUD - DELETE": [
          "Criando o usecase",
          "Criando o adapter",
          "Criando o controller"
        ],
        "Criação das configurações": [
          "Criando os beans do CRUD",
          "Criando as configurações do Kafka"
        ],
        "Criação do producer e consumer do Kafka": [
          "Criando o producer",
          "Criando o consumer"
        ],
        "Configuração do ambiente para rodar a aplicação": [
          "Configurando o wiremock",
          "Subindo o Kafka e o MongoDB",
          "Rodando a aplicação"
        ],
        "Proteção da Arquitetura": [
          "Apresentando o ArchUnit",
          "Definindo o acesso entre as camadas",
          "Garantindo que as classes estejam nos pacotes corretos",
          "Garantindo que um pacote tenha um determinado sufixo"
        ]
      },
      "requirements": [
        "É necessário ter experiência em alguma linguagem orientada a objetos",
        "É necessário ter uma noção sobre mensageria e banco de dados"
      ],
      "description": "Você que é dev e quer sair dos conceitos já batidos de arquitetura, se preparar melhor para entrevistas de grandes players do mercado e até mesmo subir de senioridade, este curso é pra você!\nNeste projeto você irá aprender aplicar na prática a arquitetura hexagonal em microsserviços que se comunicam com outros clients, banco de dados e mensageria.\nIrei utilizar a linguagem de programação Java nas aulas, porém esse curso se aplica para qualquer outra linguagem orientada a objetos. É interessante ter uma noção básica em mensageria (iremos utilizar o Apache Kafka) e banco de dados NoSQL (iremos utilizar o MongoDB), porém não é obrigatório, pois a ideia do curso é demonstrar a arquitetura e organização do projeto.\nNa primeira seção do curso, apresento a visão geral, mostrando os fluxos que iremos contruir, as ferramentas e as tecnologias utilizadas. Nas demais seções, irei abordar a construção em detalhes de um CRUD: criação dos domains, usecases, adapters e controllers. E por fim, iremos fazer a criação dos consumidores e produtores de mensageria. Não irei entrar em muito detalhe da teoria, pois atualmente já se encontra muitos materiais na internet, então BORA PRATICAR!!!\n\n\nPÚBLICO ALVO\nEsse curso é indicado para estudantes de cursos de computação e desenvolvimento de sistemas, desenvolvedores com experiência em alguma linguagem orientada a objetos e/ou profissionais que desejam adquirir conhecimento em arquitetura de sistemas.",
      "target_audience": [
        "Estudantes de cursos de computação e desenvolvimento de sistemas",
        "Desenvolvedores com experiência em alguma linguagem orientada a objetos",
        "Profissionais que desejam adquirir conhecimento em arquitetura de sistemas"
      ]
    },
    {
      "title": "Nail Node.js & JavaScript Job Interviews",
      "url": "https://www.udemy.com/course/nail-nodejs/",
      "bio": "Mastering NodeJS: From Crafting Your Resume to Securing Job Offers and Excelling in Real-world Projects",
      "objectives": [
        "Understanding NodeJS Fundamentals",
        "Asynchronous Programming in NodeJS",
        "Working with Modules and npm",
        "Building RESTful APIs with ExpressJS",
        "Database Integration",
        "Authentication and Authorization",
        "Error Handling and Debugging",
        "Performance Optimization",
        "Testing and Quality Assurance",
        "Deployment and DevOps Practices",
        "Secure Your NodeJS Job Offer",
        "Ace Your NodeJS Job Interview",
        "Quick Start with NodeJS",
        "Gain Rapid Understanding of NodeJS"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course!",
          "What Is NodeJS?",
          "NodeJS vs Others",
          "Why NodeJS?",
          "What Is JavaScript?",
          "JavaScript vs Others",
          "Why JavaScript?",
          "Why This Course?",
          "Who Am I?",
          "What Are Included In This Course?",
          "My Frustrations and Confusions When Learning NodeJS?",
          "Take This Course Now!"
        ],
        "NodeJS Terminology": [
          "NodeJS vs Node.js",
          "NodeJS Key Terms And Concepts"
        ],
        "Node.js Interview Questions": [
          "What Is Node.js And How Does Nodejs Differ From Traditional Web Server Systems?",
          "Can You Explain The Event-Driven Architecture Of Node.js?",
          "(Demo) Node.js Event-Driven Examples",
          "What Is An Event Loop In Node.js? How Does It Work?",
          "(Demo) Node.js Event Loop Examples",
          "What Is npm? How Do You Use It In Node.js Projects?",
          "Explain the concept of modules in Node.js.",
          "What is the purpose of package.json in a Node.js project?",
          "How does error handling work in Node.js?",
          "What is middleware in the context of Express.js? How do you use it?",
          "What is callback hell and how can it be avoided in Node.js?",
          "Explain the concept of streams in Node.js.",
          "How does clustering work in Node.js?",
          "What is the difference between process.nextTick() and setImmediate()?",
          "How do you handle file uploads in Node.js?",
          "Explain the role of buffers in Node.js.",
          "What are the benefits of using Node.js for building real-time applications?"
        ],
        "JavaScript Interview Questions": [
          "Why JavaScript",
          "What Is JavaScript",
          "What are the data types in JavaScript?",
          "What is the difference between == and ===?",
          "What are arrow functions in JavaScript?",
          "What are Promises in JavaScript?",
          "What is async and await?"
        ],
        "Tricky JavaScript Interview Questions": [
          "`for...of` vs `for...in`",
          "Map vs Plain Objects",
          "What Are The Differences Between Call, Apply, And Bind?",
          "Does JavaScript Pass Arguments By Value Or By Reference?",
          "Explain Hoisting In JavaScript",
          "What is closure in JavaScript?",
          "Why we need Closures?",
          "Do other programming languages support Closures (Java, Go, Scala, Python, PHP)?",
          "What is the event loop in JavaScript?",
          "What is the difference between `let`, `const`, and `var`?",
          "Explain prototypal inheritance in JavaScript",
          "Constructor Functions vs Object.create()",
          "What are higher-order functions?",
          "Why we still need Higher-order functions?",
          "What Is `!!` And Why We Need To Use It?",
          "Do We Need To Explicitly Use The Override Keyword In JavaScript?"
        ],
        "Kickstart NodeJS": [
          "Kickstart A NodeJS Console App",
          "Kickstart A NodeJS Web App",
          "Kickstart A NodeJS REST API",
          "Kickstart A NodeJS GraphQL API"
        ],
        "JavaScript Built-In Methods": [
          "JavaScript Array Built-In Methods",
          "JavaScript String Built-In Methods",
          "JavaScript Object Built-In Methods",
          "JavaScript Map Built-In Methods",
          "JavaScript Set Built-In Methods",
          "JavaScript Number Built-In Methods",
          "JavaScript Math Built-In Methods",
          "JavaScript Date Built-In Methods",
          "JavaScript Promise Built-In Methods",
          "JavaScript JSON Built-In Methods",
          "JavaScript Regular Expressions Built-In Methods",
          "JavaScript Utility Built-In Methods"
        ],
        "Cracking JavaScript Coding Interviews": [
          "How To Pass Node.js / JavaScript Coding Interviews",
          "JavaScript Coding Example - Maximum Subarray Sum",
          "JavaScript Online IDE / Playground / Sandbox",
          "(Demo) Maximum Subarray Sum",
          "(Demo) Reverse Each Word In A Given String"
        ],
        "Tricky JavaScript Coding Interview Questions": [
          "Array Pop",
          "Super"
        ],
        "Cracking React Coding Interviews": [
          "React Online IDE / Playground / Sandbox",
          "(Demo) Click The Button Then Change The Text",
          "(Demo) Click The Button Then Toggle The Text",
          "(Demo) Click The Button Then Display The Reversed Text That User Typed",
          "(Demo) Multiple Tabs"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge",
        "JavaScript Fundamentals",
        "Web Development Basics",
        "Command Line Proficiency",
        "Text Editor or IDE Familiarity",
        "Git and Version Control Basics",
        "Computer and Internet Access"
      ],
      "description": "Are you ready to fast-track your journey into the world of Node.js development? Join us for a comprehensive Node.js job interview preparation course designed to equip you with the skills and confidence needed to ace your next interview and land your dream job.\nWhat You'll Learn:\nQuick Start Node.js Project: Kickstart your Node.js journey with a hands-on approach, diving straight into building your first Node.js project from scratch. From setting up your development environment to creating a basic application, you'll gain practical experience right from the start.\nPreparing for Node.js Interviews: Get insider tips and strategies for preparing effectively for Node.js job interviews. From understanding common interview formats to mastering technical and behavioral interview questions, you'll be fully equipped to showcase your expertise and impress potential employers.\nMock Node.js Interview Questions: Put your skills to the test with mock Node.js interview questions designed to simulate real-world interview scenarios. Practice coding challenges, whiteboard exercises, and algorithmic problems to sharpen your problem-solving abilities and build confidence under pressure.\nBehavioral Interview Questions: Ace the non-technical aspect of interviews with insights into handling behavioral interview questions. Learn how to articulate your experiences, strengths, and career goals effectively, leaving a lasting impression on interviewers.\nResume Enhancement: Stand out from the crowd with a polished and compelling resume tailored specifically for Node.js roles. Gain valuable tips for highlighting your skills, projects, and achievements to capture the attention of hiring managers and recruiters.\nWho Is This Course For?\nAspiring Developers: Whether you're new to programming or transitioning into Node.js development, this course provides the perfect starting point to jumpstart your career and prepare for interviews in the competitive tech industry.\nExperienced Developers: Seasoned professionals looking to brush up on their Node.js skills and stay ahead of the curve will find valuable insights and practice opportunities to enhance their interview performance and secure exciting job opportunities.\nPrerequisites:\nNo prior knowledge of Node.js is required, making this course suitable for beginners. Basic familiarity with programming concepts and JavaScript will be beneficial but not mandatory.\nJoin us today and take the first step towards acing your Node.js interviews and advancing your career!",
      "target_audience": [
        "Entry-Level Developers",
        "Frontend Developers Transitioning to Full Stack",
        "Experienced Developers Seeking NodeJS Expertise",
        "Job Seekers Preparing for NodeJS Interviews"
      ]
    },
    {
      "title": "İleri/Orta Seviye Java Dersleri - (Effective Java)",
      "url": "https://www.udemy.com/course/ileriorta-seviye-java-dersleri-effective-java/",
      "bio": "Sürekli güncellenen ileri orta seviye effective java eğitimiyle bilginizi ve java mülakat performansınızı katlayın!",
      "objectives": [
        "Java teknik mülakat geçme garantisi :)",
        "Design Pattern ezberi yapmadan sorunları patterne dökebilme yeteneği",
        "Temiz, doğru, esnek ve bakımı kolay uygulamalar tasarlayabilme yeteneği",
        "İş arkadaşlarınızın okurken zorlanmayacağı ve insanların kolay adapte olabileceği tasarımlar yapmak",
        "Effective Java kitabının en ince detayına kadar tüm içeriği",
        "İhtiyaca göre sürekli güncellenen örnek ve içerikler",
        "Ezbere değil farkında olarak kod yazma yetisi"
      ],
      "course_content": {
        "Tanışma ve Kurstan Öğrenecekleriniz": [
          "Tanıtım",
          "Java Community Process (08.01.2022 - Ek Ders)",
          "HEPİNİZE SONSUZ TEŞEKKÜR!"
        ],
        "Obje Oluşturma ve Yok Etme": [
          "Static Factory Methods vs Constructor",
          "Builder Design Pattern'e Yaklaşım",
          "Singleton Design Pattern - Lazy - Eager - Enum İmplementasyonları",
          "Java Utility Classes & Abstract Utility Mantıklı mı?",
          "Dependency Injection Nedir? - Java Lambda Fonksiyonları ve Supplier Örneği",
          "Autoboxing & Unboxing Nedir? - Mülakat Soru Adayı! - Uygulamanızı Hızlandırın",
          "Java Memory Management - Garbage Collection - Visualvm",
          "Try Catch Finally vs Try With Resource - Java Finalizers ve Cleaners Nedir?",
          "Quiz 1"
        ],
        "Tüm Objelerin Ortak Metotları": [
          "Overriding equals and hashCode - Java Mülakat Sorusu Adayı",
          "Java toString Metodu Nedir? - Kullanım Örnekleri",
          "Shallow Copy Nedir? - Deep Copy Nedir? - Java Clone Metodu - Mülakat Sorusu",
          "Java Comparable Nedir? - Comparator Interface Nedir?",
          "Quiz 2"
        ],
        "Sınıflar ve Arayüzler": [
          "Java Access Modifiers Nedir? - Public, Private, Protected, Final, Static",
          "Java Encapsulation Nedir? - Dil Bağımsız Yazılımcılar Bilmeli!",
          "Mutable - Immutable Obje Nedir? Neden Erişilebilirliği Kısıtlamalıyız?",
          "Java Compositon vs Inheritance - Ne zaman hangisini kullanmalıyım?",
          "Java Inheritance Kullanırken Dikkat Edilmesi Gerekenler - Dokümantasyonun Önemi",
          "Java Abstract vs Interface - Default Method in Interface",
          "Doğru Interface Kullanımı Nasıl Olmalı?",
          "Java Class Hierarchy",
          "Inner Classes Java - Java iç içe geçmiş Sınıflar",
          "Limit source files - 2 Sınıfı tek bir dosyada tanımlamayın",
          "Quiz 3"
        ],
        "Java Generics": [
          "Java Raw Types - Raw Type Kullanmayın!",
          "Java Unchecked Warnings - SuppressWarnings (Nereden geliyor bu sarı yazılar?)",
          "Array vs Generic? - Array vs List? - (Listeleri Arraylere Tercih Edin!)",
          "Java Generics - Generic Classes - (Generic Tipleri Tercih Edin!)",
          "Generic Methods in Java - (Javanın Olmazsa Olmazı!)",
          "Java Generics WildCards - (Java ile Api Tasarlamak için Bu Konuyu Bilmelisin!)",
          "Java Varargs - Generic & Varargs",
          "Java Typesafe Heteregenous Map - (Java ile Api Tasarlamak için Altyapı)",
          "Quiz 4"
        ],
        "Enumlar ve Notasyonlar": [
          "Java Enums & Strategy Design Pattern (Enumlara Birde Böyle Bakın!)",
          "Java Enum Ordinal - Enum Ordinalleri Kullanalım mı?",
          "Java Enumset - Java Bitwise Operations - Enumsetleri Kullanmanın Avantajları",
          "Java EnumMap - Doğru Enum Kullanım Örnekleri (Yazılım Değişime Direnmemeli!)",
          "Java Enum with Interfaces - Arayüzlerle Enum Tasarımı (Enum Hileleri)",
          "Java Reflection - (Mülakat Soru Adayı)",
          "Java Annotation - (Nedir? - Nasıl Yazarım? - Ne işe Yarar? - Kullanım Örnekleri?",
          "Java Notasyonların Önemi - Importance of Annotation",
          "Java Marker Interface - Marker Annotation (Mülakat Soru Adayı)",
          "Quiz 5"
        ],
        "Lambdas ve Streamler": [
          "Java Lambda Expressions & Anonymous Classes (Örnekli Anlatım)",
          "Method Reference Java 8 & Lambda (Kısa ve Okunabilirlik)",
          "Supplier Interface, BinaryOperator Interface (Elde Varsa Yenisini Yazma)",
          "Java Streams Nedir? (Hangi Koşullarda Kullanmalıyım?)",
          "Java Stream Kullanırken Dikkat Edilmesi Gerekenler",
          "Java Stream vs Collection [Return Type] - (Senior Mülakat Sorusu!)",
          "Java Parallel Streams (Kullanmadan Önce 2 Kere Düşün!)",
          "Quiz 6"
        ],
        "Metotlar": [
          "Java Tips For Methods (1 Dakika 1 Saatinizi Kurtarır)",
          "Java Defensive Copy - Mutable&Immutable in Java",
          "Java Method Signatures - (Metot Altın Kuralları!)",
          "Java Method Overloading & Overriding (Yeni Mezun Mülakat Sorusu)",
          "Java Varargs Yanlış ve Doğru Kullanım Örnekleri",
          "Java Do Not Return Null (Return Empty Collections or Arrays)",
          "Java Optional Kullanımı",
          "JavaDoc - Java Comments (Güzel Kod Yorum Satırı İstemez: TMM)",
          "Quiz 7"
        ],
        "Genel Programlama": [
          "Java Local Variables (Scope Küçük Tutmanın Avantajları)",
          "Java For Loop vs Foreach Loop",
          "Java Kütüphaneleri Bilin ve Kullanın (Tekerleği yeniden icat etme)",
          "Java use BigDecimal For Monetary Calculations (Parasal işlemler için BigDecimal)",
          "Java Primitive Types vs Boxed Primitives",
          "Java Her Zaman String Kullanmak Zorunda Değilsin :)",
          "Java String Concatenation vs Stringbuilder (Performans için SB'yi Seç)",
          "Java How to Create Set and List (Obje Yaratmadan Interface Kontrol Et)",
          "Java Naming Convention - NativeMethods - Optimization",
          "Quiz 8"
        ],
        "Exceptions": [
          "Java Exceptions Nedir? (Throw, Throws, Checked, Unchecked)",
          "Java Exceptions Detaylı Anlatım- (Nasıl Yazarım? - Bilinmesi Gereken Örnekler)",
          "Quiz 9"
        ]
      },
      "requirements": [
        "Bu kurs için temel bir yazılım bilgisi gerekli. Eğer temel bir java ve yazılım bilginiz yoksa bu kurs sizi oldukça zorlayacak ve verimsiz olacaktır.",
        "Projemizi koşturabileceğimiz bir IDE. (Eclipse, Spring tool suite, Intellij)",
        "Java version 9+"
      ],
      "description": "Güncelleme, Ek Ders ve İyileştirmeler:\n- Ders 26: Kuruma verdiğim özel bir eğitimde yaptığım kahoot sonucunda eğitime gelenlerin %40'ına yakını soruyu yanlış cevapladığı için konu anlatımı revize edilmiştir. Örnekler daha anlaşılır hale getirildi ve anlatım daha da somutlaştırıldı. (25.11.2021)\n- Java Community Process anlatımı ek dersi yüklendi. Java user group için verdiğim effective java semineri içerisinde java komunite örneğini anlattığımda gelen olumlu tepkilerden sonra derse ekleme yapmış bulunuyorum. (08.01.2022)\n- Derslerin sonlarına temel konseptin anlaşılıp anlaşılmadığını ölçmek için quizler eklenmeye başlandı. (15.08.2022)\n- Bonus bölümü eklendi ve cyclomatic complexity konusu işlendi. Tüm derslerin sonuna mülakatlarda çıkabilecek seviyede anlatılan konulara paralel sorular eklendi. (16.08.2022)\n- Tüm ders videoları öğrenci geri bildirimleriyle birlikte 720p'den 1080p çözünürlüğe taşındı. (29.12.2023)\n- Bonus açıklama videosu ve stratejisi eklendi. (26.02.2024)\n\n\nNOT: Kursu alan ve almayan arkadaşlarımın ara ara bu kısma bakmasında fayda var çünkü ek dersler ve quizler belirli periyotlarda kursa dahil edilip hem tekrar niteliğinde hem de kursun güncel ve yeni konulara açık şekilde gelişmesini sağlıyor. Quizler ve bonus dersler eklenirken öğrenci soruları ve derse paralel anlatmak istediğim ek konuları baz alarak ilerliyorum.\n\n\nKurs Bilgileri\nNeden Java?\nJava'nın en güzel ve keskin özelliği standartlarıdır. Eskiden bu soruya platform bağımsız olması da eklenebilirdi ancak günümüz teknolojileri platform bağlılığını ortadan kaldırıyor. Bir sonraki sürümde neler geleceğini okuyabiliyor, tartışmaları görebiliyor ve sentezleyebiliyorsunuz. Bu Java dilini çok güçlü hale getiriyor. Java 11'de Java 8 kodları çalıştırabiliyoruz. Bunların mümkün olması standartların sayesindedir.\nAynı zamanda yurt içi ve yurt dışında ne kadar popüler olduğunu vurgulamama bile gerek yok sanırım. Büyük firmaların çoğu kod alt yapısını java dönüşümlerine tabi tutuyor.\n\n\nNeden Effective Java?\nBir kitabın en önemli özelliklerinden biri yazarıdır. Kitabımızın yazarı Java platformunun sunduğu bir çok özelliğin tasarımını ve uygulama süreçlerini yönetmiştir. (Collections Framework, java.math vb..) Bu nedenle dili etkili kullanabilmemiz için iyi bir referans.\nBu eğitim serisinde kitabımızın tüm detaylarını işlemekle kalmayıp sektörde karşınıza çıkabilecek problemlerden ve çözümlerinde bahsediyoruz. Kitap çoğu konuyu bildiğinizi varsayarak ilerliyor çünkü ileri seviye bir kitap ancak biz bu eğitim serisinde kitabın anlatıp anlatmadığı konuların da detayına girip ana konuyu anlamanızı sağladık.\nAynı zamanda kitap \"Jolt Award\" ödülü kazanmıştır.\n\n\nKursla ilgili bazı yorumlar: (Kendilerine sonsuz teşekkür ederim. Benim için işin en büyük keyfi burası.)\nBu kadar güzel anlatım izlemeyeli baya olmuştu tebrikler.\nBu spesifik konular devam etsin hocam. Güzel oluyor böyle metroda falan keyifle izliyorum.\nEline sağlık çok iyi anlatıyorsun spring boot eğitimi de vermeyi düşünüyor musun\nAmatör seviyede Java kodlarken kaynak bolluğundan çözüme hangi kaynak aracılığıyla ulaşacağıma karar veremiyordum. Üst klasmana çıkınca kaynaklar kısıtlı bu yüzden çok fazla soru işareti ile mücadele etmek zorundayım ve inan bana dostum her videondan bir şeyler öğreniyorum. Devam etmeniz için bütün arkadaşlarımla paylaşıyorum bu videoyu, lütfen devam edin\nÇok büyük emek vererek hazırlamışsınız çok teşekkürler, nerdeyse hepsini izledim çok faydası dokundu. Başarılar dilerim.\nAğzına sağlık kardeşim. Burdur komando ölüm timinden kobra selimden selamlar. Bilgisayarsan anlamasak da dinliyoruz katkımız olursa ne mutlu.\nher videonu izledim her videoda anlatımının üzerine daha da koyarak ilerliyorsun senin sayende kendimi iyice geliştirdim konular hakkında kafamda ne kadar soru işareti varsa hepsi gitti. Senin kadar detaylı bir Türkçe kaynak daha bulamadım mesajla sorduğum soruların hepsine de cevap verdin teşekkür ederim umarım çok daha iyi yerlere gelirsin.\nTakipteyim sizi. Ders içerikleri orta ve üst düzey. Klasik java konuları çok var ama bu konular farklı. Emeğinize sağlık.",
      "target_audience": [
        "Bilişim Sektöründe çalışan yazılımcı ve analistler",
        "Bilgisayar/Yazılım Mühendisliği öğrencileri. (Temel java ve yazılım bilgisine sahip)",
        "Java teknik mülakatlarında başarısını artırmak isteyenler",
        "Effective Java kitabını dil ve anlatım karmaşıklığından dolayı okumaya üşenenler :)"
      ]
    },
    {
      "title": "Spring",
      "url": "https://www.udemy.com/course/spring-dmdev/",
      "bio": "Spring Core, Spring Boot, Spring Web, Spring AOP, Spring Security, Spring Data, REST",
      "objectives": [
        "Spring Core",
        "Spring Boot",
        "Spring Test",
        "Spring Data",
        "Spring Web",
        "Spring Validation",
        "Spring Security",
        "Spring AOP"
      ],
      "course_content": {
        "Введение": [
          "Введение",
          "Установка программного обеспечения",
          "Inversion of Control. Dependency Injection",
          "IoC Container"
        ],
        "XML-based Configuration": [
          "XML-based Configuration",
          "Constructor Injection",
          "Factory Method Injection",
          "Property Injection",
          "Bean Scopes",
          "Lifecycle Callbacks",
          "Injection from Properties Files",
          "BeanFactoryPostProcessor (BFPP)",
          "Custom BeanFactoryPostProcessor"
        ],
        "Annotation-based Configuration": [
          "Annotation-based Configuration",
          "BeanPostProcessor (BPP)",
          "Custom BeanPostProcessor. Часть 1",
          "Custom BeanPostProcessor. Часть 2",
          "@Autowired & @Value",
          "Classpath scanning",
          "Bean Definition Readers",
          "Type Filters",
          "@Scope",
          "JSR 250, JSR 330"
        ],
        "Java-based Configuration": [
          "Java-based Configuration",
          "@Import & @ImportResource",
          "@Bean. Часть 1",
          "@Bean. Часть 2",
          "Profiles"
        ],
        "Event Listeners": [
          "Event Listeners. Часть 1",
          "Event Listeners. Часть 2"
        ],
        "Spring Boot": [
          "Spring Boot. Введение",
          "@Conditional",
          "Spring Boot. Настройка проекта",
          "@SpringBootApplication",
          "Lombok",
          "Properties",
          "Yaml format",
          "@ConfigurationProperties"
        ],
        "Logging Starter": [
          "Logging Starter",
          "Logback Configuration"
        ],
        "Test Starter": [
          "Test Starter",
          "Integration Testing. Part 1",
          "Integration Testing. Part 2",
          "Integration Testing. Part 3",
          "Context Caching"
        ],
        "Data JPA Starter": [
          "Data JPA Starter. Введение",
          "Data JPA Starter. Подключение",
          "Hibernate Entities"
        ],
        "Data JPA Transactions": [
          "@Transactional. TestContext",
          "TransactionAutoConfiguration",
          "@Transactional Settings",
          "Manual Transactions"
        ]
      },
      "requirements": [
        "Необходимы знания Java Core, HTTP. Servlets, Gradle, Hibernate, JUnit 5"
      ],
      "description": "Spring - это самый распространенный фреймворк для написания Java приложений. Первая версия вышла еще в далеком 2003 году, после чего Spring претерпел очень много изменений и стал по-настоящему монструозным. Это повлекло разбиение его на множество отдельных модулей, которые будут разобраны в курсе:\n1. Spring Core - ядро фреймворка, на чем держатся все остальные модули. Именно с него и начнется изучение этого курса, а именно с таких понятий и определений как инверсия управления (Inversion Of Control) и внедрение зависимостей (Dependency Injection).\n2. Spring Boot - это тот же Spring, просто с возможность автоконфигурирования модулей. И это действительно упростило работу с таким монструозным фреймворком и без него не пишется ни одно современное Spring приложение.\n3. Spring Test - каждое приложение должно быть хорошо покрыто разными уровнями тестирования, и этот модуль предоставляет функционал для этого, поднимая Spring Context и сразу добавляя необходимые зависимости в проект.\n4. Spring Data - модуль для работы с самыми распространенными базами данных, как реляционные, так и нереляционные (NoSQL)\n5. Spring Web - написание именно веб приложений, ведь в текущий момент времени все приложения общаются друг с другом по сети, поэтому Web - это неотъемлемая часть изучения каждого разработчика.\n6. Spring Security - работа по сети заставляет улучшать авторизацию и аутентификацию в приложении, повышать его безопасность, а значит необходимо готовое решение из коробки, что и предоставляет нам Spring в виде модуля Security.\n7. Spring AOP - существует очень много сквозной логики, которая не несет смысловой нагрузки в понимании бизнес логики приложений, но тем не менее должна присутствовать везде - это логирование, управление транзакциями, Proxy и т.д. Для этого и был создан модуль Spring AOP и новый подход в выносе сквозной логики - это аспектно-ориентированное программирование.\nИ все это - только часть того, что предоставляет Spring и его экосистема, ведь в нем собраны и другие модули для работы с Cloud, Message Brokers, Reactive, Batch, Mobiles, etc.\nДля успешного понимания и прохождения всего курса необходимо хорошее понимания Java Core, работа с сетями HTTP. Servlets, работа с базами данных SQL и Hibernate, тестирование приложений JUnit5, и автоматизированной сборки проекта Gradle.",
      "target_audience": [
        "Для тех, кто уверенно владеет Java Core, представляет что такое HTTP и СУБД, и хочет разобраться в самом востребованном фреймворке в Java мире - Spring"
      ]
    },
    {
      "title": "Oracle Interview Questions - Data Structures & Algorithms",
      "url": "https://www.udemy.com/course/oracle-coding-interview-questions-data-structures-algorithms/",
      "bio": "Learn top questions asked in Oracle coding rounds",
      "objectives": [
        "Software Developers Preparing for Oracle Coding Interviews",
        "Developers who want to work as software developers at Oracle",
        "Software developers who want to practice Leetcode questions asked in Oracle Interviews",
        "Software developers who want to practice Leetcode problems in Java, Javascript, C++ or Python languages."
      ],
      "course_content": {
        "Best Time To Buy And Sell A Stock - Array": [
          "Best Time To Buy And Sell A Stock - Java Solution",
          "Best Time To Buy And Sell A Stock - Javascript Solution",
          "Best Time To Buy And Sell A Stock - C++ Solution",
          "Best Time To Buy And Sell A Stock - Python Solution"
        ],
        "Maximum Sum Subarray - Arrays": [
          "Maximum Sum Subarray - Java Solution",
          "Maximum Sum Subarray - Javascript Solution",
          "Maximum Sum Subarray - C++ Solution",
          "Maximum Sum Subarray - Python Solution"
        ],
        "Jump Game - Arrays": [
          "Jump Game - Java Solution",
          "Jump Game - Javascript Solution",
          "Jump Game - C++ Solution",
          "Jump Game - Python Solution"
        ],
        "Product Of Array Except Self - Arrays": [
          "Product Of Array Except Self - Java Solution",
          "Product Of Array Except Self - Javascript Solution",
          "Product Of Array Except Self - C++ Solution",
          "Product Of Array Except Self - Python Solution"
        ],
        "Trapping Rain Water - Arrays": [
          "Trapping Rain Water - Java Solution",
          "Trapping Rain Water - Javascript Solution",
          "Trapping Rain Water - C++ Solution",
          "Trapping Rain Water - Python Solution"
        ],
        "Group Anagrams - Sorting": [
          "Group Anagrams - Java Solution",
          "Group Anagrams - Javascript Solution",
          "Group Anagrams - C++ Solution",
          "Group Anagrams - Python Solution"
        ],
        "Longest Substring Without Repeating Characters - Sliding Window Method": [
          "Longest Substring Without Repeating Characters - Java Solution",
          "Longest Substring Without Repeating Characters - Javascript Solution",
          "Longest Substring Without Repeating Characters - C++ Solution",
          "Longest Substring Without Repeating Characters - Python Solution"
        ],
        "Intersection Of Two Linked Lists - Linked List": [
          "Intersection Of Two Linked Lists - Java Solution",
          "Intersection Of Two Linked Lists - Javascript Solution",
          "Intersection Of Two Linked Lists - C++ Solution",
          "Intersection Of Two Linked Lists - Python Solution"
        ],
        "Linked List Cycle - Linked List": [
          "Linked List Cycle - Java Solution",
          "Linked List Cycle - Javascript Solution",
          "Linked List Cycle - C++ Solution",
          "Linked List Cycle - Python Solution"
        ],
        "Valid Paranthesis - Stacks": [
          "Valid Paranthesis - Java Solution",
          "Valid Paranthesis - Javascript Solution",
          "Valid Paranthesis - C++ Solution",
          "Valid Paranthesis - Python Solution"
        ]
      },
      "requirements": [
        "Basic programming experience in either of the 4 languages: Java, JavaScript, C++ & Python"
      ],
      "description": "Are you eager to join the ranks of skilled software engineers at Oracle? Prepare thoroughly and excel in your Oracle coding interviews with confidence by enrolling in my comprehensive course. This course is carefully crafted to empower you to tackle the top problems commonly presented during Oracle interview rounds.\n\n\nWhat You'll Learn:\nTop Oracle Interview Problems: In this course, I've meticulously curated a collection of the most frequently asked coding problems in Oracle interviews. This ensures that you are well-prepared to tackle any coding challenge that comes your way.\nStep-by-Step Video Solutions: Through my detailed video solutions, you will be guided through each problem, step by step. You'll gain insight into the entire problem-solving process, from understanding the problem's intricacies to crafting clean and efficient code. In these video solutions, I code live, allowing you to follow along and develop a deep understanding of the thought process.\nMultiple Programming Languages: I understand that candidates have diverse language preferences. Consequently, I provide video solutions in four prominent programming languages: Java, C++, Python, and JavaScript. Choose the language you are most comfortable with and master these problems with ease.\nDownloadable Code Files: Alongside video solutions, I offer downloadable code files for every problem. This feature allows you to delve deeper into the code, analyze it at your own pace, and enhance your comprehension of each solution.\nWhy Choose My Course:\nExpert Guidance: Learn from an experienced software engineer with a stellar track record in acing Oracle coding interviews. Benefit from my insights, strategies, and effective problem-solving techniques honed through years of experience.\nComprehensive Coverage: I leave no stone unturned. My course comprehensively covers a wide spectrum of data structure problems that frequently appear in Oracle interviews, ensuring you receive a well-rounded and thorough preparation.\nMultilingual Support: My course is accessible to learners worldwide, as I provide video solutions in four different languages. This flexibility ensures that you can comfortably understand and implement solutions in your preferred programming language.\nLifetime Access: Enroll once, and enjoy lifetime access to all course materials and updates. Stay well-prepared not only for your current interviews but also for future ones.",
      "target_audience": [
        "This course is for software developers and students who want to practice for coding interviews at Oracle"
      ]
    },
    {
      "title": "Data Structure - Part I",
      "url": "https://www.udemy.com/course/data-structures-part-1-lognacademy/",
      "bio": "Design, implementation and analysis of basic data structures using Java language.",
      "objectives": [],
      "course_content": {
        "Introduction to Data Structure": [
          "Introduction"
        ],
        "List": [
          "Arrary Basics",
          "Add Method - Part 1",
          "Add Method - part 2",
          "Remove Method",
          "Unit Testing",
          "Code"
        ],
        "Linked List": [
          "Linked List Introduction",
          "Add Method",
          "InsertAt Method",
          "Remove Method - Part 1",
          "Remove Method - Part 2",
          "Code"
        ],
        "Josephus Problem": [
          "Problem Introduction",
          "Solution Implementation",
          "Code"
        ],
        "Stack Data Structure": [
          "Stack Introduction",
          "Uses of Stack",
          "Infix to Postfix Conversion",
          "Infix to Postfix Implementation - Part 1",
          "Infix to Postfix Implementation - Part 2",
          "Postfix Evaluation",
          "Postfix Expression implementation",
          "Code"
        ],
        "Runtime Analysis": [
          "Measuring Time Complexity - Part 1",
          "Measuring Time Complexity - Part 2",
          "Measuring Time Complexity - Part 3",
          "Measuring Time Complexity - Part 4"
        ],
        "Code Analysis": [
          "Code Analysis - Part 1",
          "Code Analysis - Part 2",
          "Code Analysis - Part 3"
        ]
      },
      "requirements": [
        "Students should have basic programming knowledge and knows how to program in at least one programming language (like C, Java, or Python)."
      ],
      "description": "Data Structures is a core course in a typical undergraduate Computer Science course. The topics covered in the course are among the most fundamental material in the field of computer science. Yo become a successful computer scientist or software programmer, you should have strong understanding of Data Structure and this course will polish your skills.\nIn this course we will work together and implement well-known data structures such as dynamic arrays, linked lists, stacks, queues, tree and time complexity analysis.\nWe tried our best to designed this course to be easily understood by absolute beginners.",
      "target_audience": [
        "This course is for anyone using a computer to address large problems (and therefore needing efficient algorithms). This course is suitable for all computer science students and professionals including people majoring in engineering, biology, physics, chemistry, economics, and many other fields, not just computer science."
      ]
    },
    {
      "title": "C# Mastery: 150+ Exercises from Beginner to Pro",
      "url": "https://www.udemy.com/course/150-exercises-to-master-c-from-a-to-z-2025/",
      "bio": "Level Up Your C# Skills with Targeted Exercises – Master the Power of C# in This Ultimate Mega Pack!",
      "objectives": [
        "Solve over 150 exercises in C#",
        "Deal with real programming problems",
        "You will understand how to write high-performance C# code.",
        "Crack C# job interviews easier",
        "You will practice your skills by solving exercises in the browser,",
        "Write OOP code easier with industry-standards and best practices like a Pro"
      ],
      "course_content": {
        "C# Fundamentals": [
          "Exercise 1",
          "Solution 1",
          "Exercise 2",
          "Solution 2",
          "Exercise 3",
          "Solution 3",
          "Exercise 4",
          "Solution 4",
          "Exercise 5",
          "Solution 5",
          "Exercise 6",
          "Solution 6",
          "Exercise 7",
          "Solution 7",
          "Exercise 8",
          "Solution 8",
          "Exercise 9",
          "Solution 9",
          "Exercise 10",
          "Solution 10",
          "Exercise 11",
          "Solution 11",
          "Exercise 12",
          "Solution 12",
          "Exercise 13",
          "Solution 13",
          "Exercise 14",
          "Solution 14",
          "Exercise 15",
          "Solution 15",
          "Exercise 16",
          "Solution 16",
          "Exercise 17",
          "Solution 17",
          "Exercise 18",
          "Solution 18",
          "Exercise 19",
          "Solution 19",
          "Exercise 20",
          "Solution 20",
          "Exercise 21",
          "Solution 21",
          "Exercise 22",
          "Solution 22",
          "Exercise 23",
          "Solution 23",
          "Exercise 24",
          "Solution 24",
          "Exercise 25",
          "Solution 25",
          "Exercise 26",
          "Solution 26",
          "Exercise 27",
          "Solution 27",
          "Exercise 28",
          "Solution 28",
          "Exercise 29",
          "Solution 29",
          "Exercise 30",
          "Solution 30",
          "Exercise 31",
          "Solution 31",
          "Exercise 32",
          "Solution 32",
          "Exercise 33",
          "Solution 33",
          "Exercise 34",
          "Solution 34",
          "Exercise 35",
          "Solution 35",
          "Exercise 36",
          "Solution 36",
          "Exercise 37",
          "Solution 37",
          "Exercise 38",
          "Solution 38",
          "Exercise 39",
          "Solution 39",
          "Exercise 40",
          "Solution 40"
        ],
        "Intermediate and Advanced Intermediate": [
          "Exercise 41",
          "Solution 41",
          "Exercise 42",
          "Solution 42",
          "Exercise 43",
          "Solution 43",
          "Exercise 44",
          "Solution 44",
          "Exercise 45",
          "Solution 45",
          "Exercise 46",
          "Solution 46",
          "Exercise 47",
          "Solution 47",
          "Exercise 48",
          "Solution 48",
          "Exercise 49",
          "Solution 49",
          "Exercise 50",
          "Solution 50",
          "Exercise 51",
          "Solution 51",
          "Exercise 52",
          "Solution 52",
          "Exercise 53",
          "Solution 53",
          "Exercise 54",
          "Solution 54",
          "Exercise 55",
          "Solution 55",
          "Exercise 56",
          "Solution 56",
          "Exercise 57",
          "Solution 57",
          "Exercise 58",
          "Solution 58",
          "Exercise 59",
          "Solution 59",
          "Exercise 60",
          "Solution 60",
          "Exercise 61",
          "Solution 61",
          "Exercise 62",
          "Solution 62",
          "Exercise 63",
          "Solution 63",
          "Exercise 64",
          "Solution 64",
          "Exercise 65",
          "Solution 65",
          "Exercise 66",
          "Solution 66",
          "Exercise 67",
          "Solution 67",
          "Exercise 68",
          "Solution 68",
          "Exercise 69",
          "Solution 69",
          "Exercise 70",
          "Solution 70",
          "Exercise 71",
          "Solution 71",
          "Exercise 72",
          "Solution 72",
          "Exercise 73",
          "Solution 73",
          "Exercise 74",
          "Solution 74",
          "Exercise 75",
          "Solution 75",
          "Exercise 76",
          "Solution 76",
          "Exercise 77",
          "Solution 77",
          "Exercise 78",
          "Solution 78",
          "Exercise 79",
          "Solution 79",
          "Exercise 80",
          "Solution 80"
        ],
        "OOP": [
          "Exercise 81",
          "Solution 81",
          "Exercise 82",
          "Solution 82",
          "Exercise 83",
          "Solution 83",
          "Exercise 84",
          "Solution 84",
          "Exercise 85",
          "Solution 85",
          "Exercise 86",
          "Solution 86",
          "Exercise 87",
          "Solution 87",
          "Exercise 88",
          "Solution 88",
          "Exercise 89",
          "Solution 89",
          "Exercise 90",
          "Solution 90",
          "Exercise 91",
          "Solution 91",
          "Exercise 92",
          "Solution 92",
          "Exercise 93",
          "Solution 93",
          "Exercise 94",
          "Solution 94",
          "Exercise 95",
          "Solution 95",
          "Exercise 96",
          "Solution 96",
          "Exercise 97",
          "Solution 97",
          "Exercise 98",
          "Solution 98",
          "Exercise 99",
          "Solution 99",
          "Exercise 100",
          "Solution 100",
          "Exercise 101",
          "Solution 101",
          "Exercise 102",
          "Solution 102",
          "Exercise 103",
          "Solution 103",
          "Exercise 104",
          "Solution 104",
          "Exercise 105",
          "Solution 105",
          "Exercise 106",
          "Solution 106",
          "Exercise 107",
          "Solution 107",
          "Exercise 108",
          "Solution 108",
          "Exercise 109",
          "Solution 109",
          "Exercise 110",
          "Solution 110"
        ],
        "Super Advanced": [
          "Exercise 111",
          "Solution 111",
          "Exercise 112",
          "Solution 112",
          "Exercise 113",
          "Solution 113",
          "Exercise 114",
          "Solution 114",
          "Exercise 115",
          "Solution 115",
          "Exercise 116",
          "Solution 116",
          "Exercise 117",
          "Solution 117",
          "Exercise 118",
          "Solution 118",
          "Exercise 119",
          "Solution 119",
          "Exercise 120",
          "Solution 120"
        ],
        "Design pattern (Optional)": [
          "Abstract Factory",
          "Prototype Pattern",
          "Composite Pattern"
        ],
        "Expert": [
          "Exercise 121",
          "Solution 121",
          "Exercise 122",
          "Solution 122",
          "Exercise 123",
          "Solution 123",
          "Exercise 124",
          "Solution 124",
          "Exercise 125",
          "Solution 125",
          "Exercise 126",
          "Solution 126",
          "Exercise 127",
          "Solution 127",
          "Exercise 128",
          "Solution 128",
          "Exercise 129",
          "Solution 129",
          "Exercise 130",
          "Solution 130",
          "Exercise 131",
          "Solution 131",
          "Exercise 132",
          "Solution 132",
          "Exercise 133",
          "Solution 133",
          "Exercise 134",
          "Solution 134",
          "Exercise 135",
          "Solution 135",
          "Exercise 136",
          "Solution 136",
          "Exercise 137",
          "Solution 137",
          "Exercise 138",
          "Solution 138",
          "Exercise 139",
          "Solution 139",
          "Exercise 140",
          "Solution 140",
          "Exercise 141",
          "Solution 141",
          "Exercise 142",
          "Solution 142",
          "Exercise 143",
          "Solution 143",
          "Exercise 144",
          "Solution 144",
          "Exercise 145",
          "Solution 145",
          "Exercise 146",
          "Solution 146",
          "Exercise 147",
          "Solution 147",
          "Exercise 148",
          "Solution 148",
          "Exercise 149",
          "Solution 149",
          "Exercise 150",
          "Solution 150"
        ]
      },
      "requirements": [
        "Basic Knowledge of C# and .NET",
        "Willingness to Learn"
      ],
      "description": "This course takes you on a journey from foundational C# programming to expert-level skills, equipping you to design efficient, scalable, and maintainable software. Through hands-on exercises, real-world scenarios, and best practices, you’ll gain practical expertise in:\nBeginner Level: Building Your Foundations\nCore C# Concepts: Learn programming basics, syntax, and object-oriented principles.\nBasic Data Operations: Explore filtering, sorting, and grouping data.\nError Handling: Master effective exception management.\nIntermediate Level: Strengthening Your Skills\nRepository Pattern & Data Access: Build efficient data layers.\nCore Design Patterns: Apply essential design principles.\nAsynchronous Programming Basics: Start working with async workflows.\nTesting Fundamentals: Learn unit testing for robust code.\nAdvanced Level: Achieving Mastery\nAdvanced C# Techniques: Dive into multi-threading, LINQ, and performance tuning.\nDomain-Driven Design (DDD): Structure applications for complex domains.\nEvent-Driven Architecture & CQRS: Handle state and asynchronous communication.\nReliability & Fault Tolerance: Build resilient software systems.\nAttributes & Metadata: Define and apply custom attributes.\nEvent Sourcing: Master advanced event-sourcing methods.\nExpert Level: Tackling Distributed Systems\nSaga Orchestration & Distributed Transactions: Manage complex workflows.\nAsynchronous Messaging: Design systems with eventual consistency.\nBackground Processing: Implement efficient job scheduling and task execution.\nPerformance Optimization: Enhance memory management and profiling.\nAdvanced Testing: Implement strategies for complex system architectures.\nThis comprehensive course will prepare you to solve real-world challenges, design scalable architectures, and excel in C# development at all levels.",
      "target_audience": [
        "Aspiring C# developers seeking hands-on practice",
        "Students preparing for C# programming interviews",
        "Self-taught programmers looking to solidify C# fundamentals",
        "Developers aiming to challenge and improve their C# skills",
        "Anyone wanting a comprehensive exercise-based approach to mastering C#"
      ]
    },
    {
      "title": "C# .NET Core Clean Architecture & CQRS Proje Altyapı Kursu 1",
      "url": "https://www.udemy.com/course/c-net-core-clean-architecture-cqrs-proje-altyap-kursu-1/",
      "bio": "C# .NET ile kurumsal altyapı geliştiriyoruz. CQRS, Clean Architecture, DDD, Pipeline, code generation ve çok fazlası.",
      "objectives": [
        "Set 1 - DDD odaklı Clean Architecture İmplementasyonu Öğreneceksiniz",
        "Set 1 - CQRS (Command Query Responsibility Segregeation) Öğreneceksiniz",
        "Set 1 - SOLID ve Clean Code Teknikleri Öğreneceksiniz",
        "Set 1 - Ultra Gelişmiş Senkron ve Asenkron Repository İmplementasyonu Öğreneceksiniz",
        "Set 1 - Dynamic Search İmplementasyonu Öğreneceksiniz",
        "Set 1 - Response Request Pattern odaklı mapping (Automapper) Öğreneceksiniz",
        "Set 1 - Gelişmiş ve best practice odaklı Entity Framework İmplementasyonu Öğreneceksiniz",
        "Set 1 - API İmplementasyonu Öğreneceksiniz",
        "Set 1 - Extension yazım teknikleri Öğreneceksiniz",
        "Set 1 - ve bir çok alt konu Öğreneceksiniz",
        "Set 2 - Çoklu ve ilişkili domain modelleme Öğreneceksiniz",
        "Set 2 - Gelişmiş Mapping İmplementasyonu Öğreneceksiniz",
        "Set 2 - Migration İmplementasyonu Öğreneceksiniz",
        "Set 2 - İş Kuralı ve Clean Code Yazım Teknikleri Öğreneceksiniz",
        "Set 2 - Global Hata Yönetimi Öğreneceksiniz",
        "Set 2 - Pipeline Yazım Teknikleri Öğreneceksiniz",
        "Set 2 - Validation Pipeline ile Fluent Validation İmplementasyonu Öğreneceksiniz",
        "Set 2 - Transaction Pipeline İle Transactional Operation İmplementasyonu Öğreneceksiniz",
        "Set 3 - Caching Pipeline İmplementasyonu Öğreneceksiniz",
        "Set 3 - InMemory Cache İmplementasyonu Öğreneceksiniz",
        "Set 3 - Redis Cache İmplementasyonu Öğreneceksiniz",
        "Set 3 - Logging Pipeline İmplementasyonu Öğreneceksiniz",
        "Set 3 - Serilog İmplementasyonu Öğreneceksiniz",
        "Set 4 - Security ve JWT İmplementasyonu Öğreneceksiniz",
        "Set 4 - Mailing İmplementasyonu Öğreneceksiniz",
        "Set 5 - Test odaklı altyapı geliştirme Öğreneceksiniz",
        "Set 5 - Moq İmplementasyonu Öğreneceksiniz",
        "Set 5 - Test odaklı altyapı geliştirme Öğreneceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "Bu Kurs Sonunda Hangi Noktaya Geleceksiniz",
          "Kaynak Kodlar",
          "Proje Katmanlarının Kurulması"
        ],
        "CQRS ve Mediatr İmplementasyonu": [
          "CQRS ve Mediatr İmplementasyonu"
        ],
        "Gelişmiş Senkron ve Asenkron Repository": [
          "Senkron ve Asenkron Repository",
          "Sayfalama Altyapısının Hazırlanması",
          "Sayfalama İçin Extension Yazalım"
        ],
        "Dynamic Query İmplementasyonu": [
          "Dynamic Query Altyapısının Oluşturulması",
          "Dynamic İmplementasyonu"
        ],
        "Gelişmiş Entity Framework İmplementasyonu": [
          "Entity Framework Implementasyonu ve Soft Delete 1",
          "Entity Framework İmplementasyonu 2"
        ],
        "Persistence Layer İmplementasyonu": [
          "Persistence Layer İmplementasyonu"
        ],
        "Application Layer İmplementasyonu": [
          "Application Layer İmplementasyonu",
          "AutoMapper İmplementasyonu"
        ],
        "Response Request Pattern İmplementasyonu": [
          "Query İmplementasyonu ve Sayfalama",
          "GetById CQRS Query Handler",
          "Update Command CQRS İmplementasyonu",
          "Delete Command CQRS İmplementasyonu"
        ]
      },
      "requirements": [
        "İleri Seviye C#"
      ],
      "description": "DİKKAT: Bu kurs ileri seviyedir. Kurs içeriğine hakimiyet sağladığınızda sektörde en ön sıralarda olursunuz.\nFAKAT!\nAçıklamaları okuyup örnek içerikleri izleyerek kursun sizin için uygun olup olmadığına karar vermenizi öneririm. Ek olarak 1 ay koşulsuz iade hakkından yararlanarak kursu deneyip iade edebilirsiniz. Kurs çoklu seriden oluştuğu için emek vererek kazandığınız paranızın boşa gitmesi en son isteyeceğim şeydir.\nYazılım geliştirme çok ilginç bir ivmeden geçiyor. Pandemiyle beraber zaten popüler olan meslek bir anda dünyanın en popüler mesleği haline geldi. Bu süreçte hiç tecrübesi olmayan hatta yazılım konusunda çok başlarda olan kişiler bile geliştirilmek üzere işe alındı. Bu süreçte sektörde ciddi bir yazılım personeli istihdamı oluştu.\nDoygunluğun artması ve pandeminin sonlanması sektörü yeniden eski günlere götürmeye başladı. Yine dünyanın en popüler mesleği olan yazılım geliştirme yavaş yavaş yeniden daha çok kalifiye personele ihtiyaç duyan hale dönüşüyor.\nTam da bu ihtiyaçtan yola çıkarak ultra advanced bir içerik hazırladım.\nKlasik yaklaşımlar yerine ufkunuzu açacak ve sektörde hali hazırda çalışanların da öğrenmek istediği içerikleri bu setlerde topladım.\n1. Sette öğrenecekleriniz:\nDDD odaklı Clean Architecture İmplementasyonu\nCQRS (Command Query Responsibility Segregeation)\nSOLID ve Clean Code Teknikleri\nUltra Gelişmiş Senkron ve Asenkron Repository İmplementasyonu\nDynamic Search İmplementasyonu\nResponse Request Pattern odaklı mapping (Automapper)\nGelişmiş ve best practice odaklı Entity Framework İmplementasyonu\nAPI implementasyonu\nExtension yazım teknikleri\nve bir çok alt konu\n2. Sette Öğrenecekleriniz\nÇoklu ve ilişkili domain modelleme\nGelişmiş Mapping İmplementasyonu\nMigration İmplementasyonu\nİş Kuralı ve Clean Code Yazım Teknikleri\nGlobal Hata Yönetimi\nPipeline Yazım Teknikleri\nValidation Pipeline ile Fluent Validation İmplementasyonu\nTransaction Pipeline İle Transactional Operation İmplementasyonu\n3. Sette Öğrenecekleriniz\nCaching Pipeline İmplementasyonu\nInMemory Cache İmplementasyonu\nRedis Cache İmplementasyonu\nLogging Pipeline İmplementasyonu\nSerilog İmplementasyonu\n4. Sette Öğrenecekleriniz\nSecurity ve JWT İmplementasyonu\nMailing İmplementasyonu\n5. Sette Öğrenecekleriniz\nTest odaklı altyapı geliştirme\nMoq İmplementasyonu",
      "target_audience": [
        "Sektörde ön sıralarda olmak isteyenler"
      ]
    },
    {
      "title": "Débuter avec Kubernetes par la Pratique",
      "url": "https://www.udemy.com/course/kubernetes-pour-debutant-et-par-la-pratique/",
      "bio": "Apprendre les bases indispensables de Kubernetes",
      "objectives": [
        "Comprendre les concepts fondamentaux de Kubernetes tels que les pods, les services, les réplicas, les déploiements, etc.",
        "Comprendre comment ces concepts s'intègrent dans l'architecture de Kubernetes et comment ils sont utilisés pour gérer et orchestrer les conteneurs.",
        "Savoir déployer et gérer des applications sur Kubernetes : Etre en mesure de déployer des applications sur un cluster Kubernetes",
        "Savoir utiliser les fichiers de configuration tels que les fichiers YAML et les commandes en ligne Kubernetes",
        "Savoir gérer les applications une fois qu'elles sont déployées, en mettant à jour les versions, en redimensionnant les ressources, etc",
        "Faire du Scaling des Déploiements",
        "Créer des Services ClusterIP NodePort et LoadBalancer et Comprendre les différences entre ces Services",
        "Comprendre comment faire communiquer deux Déploiements différents",
        "Apprendre à remplacer Docker par un Autre Container Manager"
      ],
      "course_content": {
        "Introduction au Cours": [
          "Introduction au Cours",
          "Plan"
        ],
        "Présentation de Kubernetes": [
          "Kubernetes C'est Quoi ?",
          "Architecture de Base de Kubernetes",
          "Un Pod C'est Quoi ?",
          "Kubectl C'est Quoi ?",
          "Connaissances Générales sur Kubernetes",
          "Testez vos Connaissances sur le rôle du Noeud Maître dans Kubernetes",
          "Testez vos connaissances sur les Pods",
          "Testez vos Connaissances sur le Rôle de Kubelet",
          "Rôle du service etcd dans le Noeud Maître"
        ],
        "Installation de MiniKube": [
          "Logiciels requis pour ce Cours",
          "Installation de Kubectl",
          "Installation de MiniKube"
        ],
        "Création d'un Cluster Kubernetes": [
          "Création d'un Cluster Kubernetes Utilisant Minikube",
          "Exploration du Kubernetes Node",
          "Connaissez-vous Minikube ?",
          "Testez vos Connaissances sur Minikube"
        ],
        "Création d'un Pod": [
          "Création d'un Seul Pod",
          "Exploration du Pod Kubernetes",
          "Création d'un Alias",
          "Création d'un Pod Manuellement"
        ],
        "Création d'un Déploiment": [
          "Création et Exploration d'un Déploiement",
          "Montée en Echelle ou Scaling du Déploiement",
          "Connection à l'un des Pods avec son Adresse IP",
          "Test de Connaissances sur les Déploiements",
          "Création d'un Déploiement"
        ],
        "Création d'un Service": [
          "Un Service...C'est Quoi ?",
          "Les Services pour Equilibrer la Charge",
          "Création et Exploration du Service de type Cluster IP",
          "Connection au Déploiement avec le Service ClusterIP",
          "Test de Connaissances sur les Services",
          "Création d'un Service de type Cluster IP...Suite de l'Exercice précédent"
        ],
        "Suppression du Déploiement et du Service": [
          "Suppression du Service et du Déploiement"
        ],
        "Excéution de l'Application Node JS avec Kubernetes": [
          "Création de l'Application Node JS",
          "Dockerisation de l'Application Node",
          "Push de l'Image vers le Docker Hub",
          "Creation d'un Déploiement Basé sur l'Image de Notre Application",
          "Scaling du Déploiement",
          "Création du Service NodePort",
          "Creation du Service LoadBalancer",
          "Quiz sur le Service de Type NodePort",
          "Création d'un Service NodePort et Load Balancer...Suite de l'Exercice Précédent"
        ],
        "La Stratégie RollingUpdate": [
          "La Stratégie Rolling Update en Action",
          "Que se Passe t-il si un Pod est Supprimé ?"
        ]
      },
      "requirements": [
        "Connaissances de Base de Docker",
        "Aucune Expérience en Programmation Requise. Tous les codes sont forurnis"
      ],
      "description": "Kubernetes est devenu un standard de-facto pour le déploiement des applications contenairisées en mode production.  C'est aussi devenu l'outil incontournable pour tous les Ingénieurs DevOps et les Développeurs Logiciels qui veulent apprendre à exécuter et tester leurs applications.\n\n\nAvec ce cours vous allez apprendre les Bases de la plate-forme Kubernetes et vous effectuerez des exercices pratiques pour apprendre   :\n\n\nla création d'un cluster Kubernetes sur vos ordinateurs à l'aide de Minikube,\nla gestion du cluster Kubernetes à l'aide de kubectl,\nla création de pods, l'analyse de la façon dont ils sont assignés aux nœuds et la surveillance de leur fonctionnement.\nVous apprendrez également à :\n\n\nCréer des déploiements et à observer comment Kubernetes crée automatiquement les pods nécessaires à ce déploiement,\nEffectuer la mise à l'échelle des déploiements ou Scaling, à surveiller les déploiements et à observer ce qui se passe lorsque certains pods ne fonctionnent plus.\nCréer des services pour pouvoir vous connecter aux déploiements en interne et en externe e\nlancer et utiliser le Tableau de Bord Kubernetes.\nGrâce aux exercices pratiques, vous apprendrez à déployer des applications dans Kubernetes en suivant l'approche déclarative et vous serez en mesure de créer et d'appliquer des fichiers de configuration YAML pour les déploiements et les services.\nÀ la fin du cours, vous serez en mesure de modifier les déploiements et les services en apportant des changements aux fichiers de configuration YAML et en les appliquant à nouveau.\nA qui s'adresse ce cours ?\nCe cours peut être suivi par les Ingénieurs DevOps qui veulent apprendre à utiliser Kubernetes.\nLes développeurs Logiciels qui veulent apprendre comment les applications se comportent dans un cluster Kubernetes.\n\n\nPré-requis\nDes connaissances de base de Docker sont nécessaires.\n\n\nCe que vous allez Apprendre en suivant ce Cous\n\n\nComprendre Kubernetes et son architecture\nApprendre ce que sont les nœuds (Node), les Pods, les Services et les Déploiements\nApprendre à créer un cluster Kubernetes\nApprendre à gérer un cluster en utilisant le tableau de bord Kubernetes\nCréer des Pods à l'aide de lignes de commande\nApprendre à se connecter aux Pods et à explorer leur fonctionnement interne\nApprendre à utiliser les fichiers de configuration YAML\nFaire du Scaling\nConnecter deux déploiements\nRemplacer Docker par d'autres options",
      "target_audience": [
        "Ingénieurs et Architecte Systèmes d'Information qui veulent Comprendre l'Utilité de Kubernetes",
        "Ingénieurs DevOps qui veulent Apprendre à Utiliser Kubernetes",
        "Développeurs Logiciels qui veulent apprendre à déployer leurs applications dans les cluster Kubernetes",
        "Ingénieurs Informatique qui veulent découvrir la Plate-forme Kubernetes"
      ]
    },
    {
      "title": "【한글자막】 소프트웨어 아키텍처 및 대규모 시스템 설계",
      "url": "https://www.udemy.com/course/software-architecture-design-large-scale-systems/",
      "bio": "소프트웨어 아키텍처, 시스템 설계 및 빅데이터 처리 마스터하기: 소프트웨어 아키텍트 또는 테크니컬 리드 직무를 목표로 시니어급 테크니컬 직원이 되려는 분 혹은 면접 합격률을 높이고 돋보이고 싶은 분들을 위한 강의!",
      "objectives": [
        "매일 수백만 개의 요청을 처리할 수 있는 대규모 시스템의 소프트웨어 아키텍처",
        "높은 확장성과 가용성을 지니고 성능 기준에 부합하는 소프트웨어 시스템을 설계하는 법",
        "시스템의 기술적 요구 조건 및 높은 수준의 컴포넌트와 API를 정의하는 법",
        "시스템 설계 면접을 앞둔 경우 자신감을 얻는 법"
      ],
      "course_content": {},
      "requirements": [
        "프로그래밍 및 소프트웨어 엔지니어링에 대한 기본 지식"
      ],
      "description": "커리어를 한 단계 더 발전시킬 준비가 되셨나요?\n소프트웨어 아키텍처와 시스템 설계를 마스터하고 싶으신가요?\n\n그렇다면 잘 오셨습니다!\n\n\n이 실무 과정에서는 매일 수백만 명의 사용자 수준으로 확장 가능한 실생활 시스템을 구축하는 법과 페타바이트급의 데이터를 처리하고 저장하는 법을 배웁니다.\n\n또한 이 과정을 통해 시스템 설계 면접을 앞둔 분들이 면접을 대비하고 자신감을 얻을 수 있습니다.\n다음과 같은 내용을 배우게 됩니다.\n\n\n세부 사항을 놓치지 않고 시스템의 기술적 요구 사항을 파악하기\n강력하고 사용하기 쉬운 API를 정의하기\n높은 확장성, 가용성 및 성능을 위해 현대 아키텍처 빌딩 블록 및 기술을 적용하기\n업계에서 증명된 소프트웨어 아키텍처 패턴 및 모범 사례를 따르기\n대규모 인터넷 트래픽 및 빅데이터 처리를 위해 확장성이 높은 시스템을 구축하기\n\n\n해당 과정이 끝날쯤 되면, 여러분은 시스템 디자인 단계를 모두 거쳐, 모호하고 고차원적인 요구 사항도 해결할 만큼 능숙해지고 소프트웨어 아키텍처의 정점에 도달할 수 있을 겁니다.\n\n이 과정에는 코딩이 나오지는 않지만, 실생활에서 쓰이는 시스템을 구축하기 위한 기본적인 지식을 얻을 수 있는 아주 실용적인 과정에 해당합니다.\n\n이 과정에서 다루는 모든 기술과 패턴은 정상급 소프트웨어 회사들이 사용하고 있는 기술과 패턴입니다.\n\n영상 강의 외에도, 다음과 같은 항목이 추가로 제공됩니다.\n\n\n과정에서 다룬 주제와 관련된 많은 자료\n학습한 내용을 검증하고 과정에서 다룬 내용을 복습할 수 있게 해 주는 퀴즈\n학습 경험을 더욱 풍부하게 만들어 주는 관련 문서 및 영상의 외부 링크\n\n\n다음과 같은 분들을 위해 이 과정을 준비했습니다.\n\n\n보통 대학교나 코딩 부트캠프에서는 잘 다루지 않는 주제인 소프트웨어 아키텍처를 마스터하려는 분\n소프트웨어 아키텍트 또는 선임/수석 소프트웨어 엔지니어나 테크니컬 리드와 같은 시니어급 테크니컬 직원이 되려는 분\n시스템 설계 면접을 준비하는 중이라서 면접 합격률을 높이고 많은 지원자 사이에서 돋보이고 싶으신 분\n\n\n여러분이 여기에 해당되신다면, 망설이지 마세요.\n시작해 봅시다!\n\n\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n\n\n- Michael\n\n\n\n\n자주 묻는 질문 (FAQ)\n\n- 꼭 소프트웨어 아키텍트여야 이 과정을 수강할 수 있나요?\n\n전혀 아닙니다! 소프트웨어 아키텍트는 직급 이름일 뿐입니다. 사실, 많은 회사에서 이 직급을 아무한테나 부여하지 않는답니다. 대부분의 소프트웨어 아키텍처 및 시스템 설계는 조직 내에서 신임을 받는 엔지니어가 수행하곤 합니다. 여러분의 매니저에게 이런 신임을 얻기 위해서는, 소프트웨어 아키텍처와 시스템 설계 방면에서 탄탄한 지식을 갖추었다는 사실을 증명해야 하겠죠. 그게 바로 이 과정에서 배우게 될 내용에 해당됩니다.\n\n- 소프트웨어 아키텍처가 중요한 이유와 배워야 하는 이유는 무엇인가요?\n\n대규모 시스템의 현대 소프트웨어 개발은 아주 복잡합니다. 보통은 여러 명의 소프트웨어 엔지니어가 수개월 동안 작업해야 하죠. 탄탄한 계획과 건축가 없이는 그 누구도 초고층 건물을 지으려고 하지 않듯이, 적합한 설계와 승인된 소프트웨어 아키텍처 없이 대형 소프트웨어 프로젝트에 착수하는 것 또한 말이 되지 않을 것입니다. 시스템의 소프트웨어 아키텍처가 제대로 구축되지 않으면, 해당 프로젝트는 실패할 가능성이 높습니다. 반면에, 소프트웨어 아키텍처가 제대로 구축되면, 많은 사람에게 긍정적인 영향을 엄청나게 줄 수 있는 동시에 여러분의 조직이 더욱 발전할 수 있는 계기가 됩니다.\n\n\n- 이 과정에서는 코딩이 나오나요?\n\n아니요. 소프트웨어 아키텍처는 대규모 시스템의 설계 단계에 해당합니다. 코딩은 소프트웨어 아키텍처가 완료되었을 때만 하게 됩니다. 사실 코딩은 소프트웨어 엔지니어링에 있어서 아주 작은 부분에 해당한다는 사실을 받아들이려면 마음의 준비가 좀 필요하죠. 그리고 소프트웨어 아키텍처와 설계가 제대로 이루어지고 나면, 그 다음에 따라오는 코딩 등 다른 모든 작업은 굉장히 수월하고 간단해집니다. 반면에, 소프트웨어 아키텍처가 제대로 구축되지 않으면, 구현 단계가 힘들어질 수 있습니다.\n\n\n\n\n강사 소개\nMichael Pogrebinsky | Java 전문가 & 소프트웨어 아키텍트 스페셜리스트\n프로페셔널 소프트웨어 엔지니어 | 소프트웨어 아키텍트 | 강사\n\n\nMichael Pogrebinsky는 풍부한 경험을 가진 소프트웨어 엔지니어이자 소프트웨어 아키텍트입니다.\n\n\n업계에 종사하는 동안 수많은 주력 제품을 개발했으며 Google, Intel 등의 기업에서 최첨단 기술과 솔루션을 다뤘으며,\n실시간 컴퓨팅과 대규모 소프트웨어 시스템이 주력 분야이며 다양한 선도 기업에서 해당 분야의 기술 책임자를 맡았습니다.\n또한 특정 프로그래밍 언어나 기술을 넘어서, 핵심 내용을 이해하고 올바른 사고 방식을 기르는 것이 중요하다고 강조합니다.\n\n\n기술 분야에 대한 열정으로 다른 엔지니어와 학생들의 훌륭한 멘토가 되어주고 있으며, 그가 가진 지식과 경험을 Udemy에 공유하게 된 것을 기쁘게 생각하고 있습니다.",
      "target_audience": [
        "커리어를 한 단계 발전시켜서 선임이나 수석급 또는 소프트웨어 아키텍트 직급을 얻으려는 모든 수강생",
        "소프트웨어 아키텍처 및 시스템 설계를 배우려는 모든 수강생",
        "시스템 설계 면접을 앞둔 모든 수강생"
      ]
    },
    {
      "title": "C# Backend Developer Interview Questions: Practice Tests",
      "url": "https://www.udemy.com/course/c-backend-developer-interview-preparation-practice-tests/",
      "bio": "Prepare for C# backend interviews with practice tests on fundamentals, APIs, advanced topics, EF, performance and test.",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Are you preparing for a C# backend developer interview and want to ensure you're fully ready? This practice test course is designed to help you evaluate your knowledge, reinforce core concepts, and build confidence for real-world technical interviews. Whether you're an aspiring backend developer or an experienced programmer brushing up on your skills, this course provides focused, hands-on preparation through realistic, exam-style questions.\nThe course is divided into six key sections, each covering an essential area of C# backend development:\nC# Fundamentals – Master data types, object-oriented programming (OOP), control flow, exception handling, and LINQ. Explore advanced concepts like async/await, delegates, events, generics, and reflection to deepen your C# knowledge.\nC# for Web API Development – Learn how to build and secure RESTful APIs using ASP.NET Core, including best practices for web services and security.\nC# for Performance and Optimization – Focus on optimizing the performance of C# applications through techniques like memory management, multi-threading, and data processing improvements.\nEntity Framework Core – Gain a strong understanding of ORM with Entity Framework Core, covering data modeling, querying, and performance optimization.\nTesting and Debugging in C# – Strengthen your skills in writing unit tests, using mocking frameworks, and debugging techniques to ensure robust, error-free code.\nEach practice test includes multiple-choice, multiple-selection, and fill-in-the-blank questions, complete with detailed explanations and code examples to deepen your understanding.\nThis course is perfect for developers preparing for job interviews, coding assessments, or technical screenings that require strong C# backend development skills. Regardless of your experience level, you'll gain valuable insights into best practices, common pitfalls, and real interview scenarios. By the end of the course, you'll be equipped with the practical knowledge and confidence to excel in your backend developer interviews.",
      "target_audience": [
        "Aspiring Backend Developers",
        "Junior Developers",
        "Web Developers Transitioning to Backend",
        "Software Engineers Preparing for Interviews"
      ]
    },
    {
      "title": "Transfer to Space",
      "url": "https://www.udemy.com/course/transfer-to-space/",
      "bio": "Launch your Space Career with Sumana Mukherjee",
      "objectives": [
        "Confidently Navigate the NewSpace Industry",
        "Master Skill Mapping and Opportunity Analysis for Space IndustryRoles",
        "Develop Strategic Networking and Job Search Skills",
        "Acquire Foundational Knowledge of Space Technology"
      ],
      "course_content": {},
      "requirements": [
        "Passion for Space Exploration",
        "Atleast 1 year of professional working experience in any technical field"
      ],
      "description": "Embark on a transformative journey into the dynamic realm of the NewSpace industry with this comprehensive course, meticulously crafted for ambitious professionals seeking to leverage their existing expertise. The space sector is no longer the exclusive domain of traditional aerospace engineers; it's a rapidly expanding ecosystem that welcomes diverse technical skills, from software development and data analysis to project management and systems engineering. This course serves as your strategic bridge, enabling you to seamlessly transition into fulfilling technical roles within this exciting frontier.\nWe will begin by demystifying the NewSpace revolution, exploring the paradigm shift from government-led initiatives to commercialized space ventures. You'll gain a thorough understanding of the industry's landscape, encompassing the crucial launch, space, and ground segments. This foundational knowledge will empower you to identify the specific areas where your skills can make a significant impact.\nCentral to this program is the process of skill mapping, a powerful technique that allows you to translate your existing professional experience into the language of the space industry. We will delve into identifying your core competencies and demonstrating their relevance to in-demand space roles. You will learn how to articulate your unique value proposition and build a compelling portfolio that showcases your transferable skills.\nBeyond technical knowledge, we will equip you with the strategic tools necessary for career advancement in the NewSpace industry. You will master the art of targeted networking, learn to navigate the job market effectively, and develop the skills to analyze and pursue opportunities that align with your aspirations. You would also learn the technical fundamentals of space technology! Enrol now and let's launch your career to the cosmos!",
      "target_audience": [
        "Individuals passionate about the space industry",
        "Technical professionals seeking career transition",
        "Those interested in the NewSpace revolution",
        "Indian professionals seeking space sector entry",
        "Professionals seeking a structured pathway to enter the space industry"
      ]
    },
    {
      "title": "DevOps - der essentielle Grundkurs",
      "url": "https://www.udemy.com/course/devops-der-essentielle-grundkurs/",
      "bio": "Agile auf einem ganz neuen Level",
      "objectives": [
        "Lerne DevOps zu verstehen",
        "Verstehe was CI/CD ist",
        "Optimiere den Workflow deines Teams"
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung",
          "Was ist DevOps?"
        ],
        "Das CAMS Modell": [
          "Culture",
          "Automation",
          "Measurement",
          "Sharing"
        ],
        "The Three Ways - Die drei Wege": [
          "Systems thinking",
          "Verstärkte Feedback-Schleifen",
          "Kontinuierliche Weiterbildung"
        ],
        "CI/CD": [
          "Continuous Integration - Continuous Delivery",
          "Tests"
        ],
        "Deployment": [
          "Canary Deployment",
          "Blue Green Deployment",
          "Immutable Deployment"
        ],
        "Monitoring": [
          "Monitoring"
        ],
        "Beispiel für DevOps Praktiken": [
          "Das Post-Mortem Gespräch"
        ]
      },
      "requirements": [
        "Du solltest etwas Erfahrung mit Softwareentwicklung haben, nicht zwangsläufig praktisch"
      ],
      "description": "DevOps soll im Team eingeführt werden, doch niemand weiß, was das eigentlich ist?\nLerne die Vorteile und Herausforderungen von Development Operations kennen!\nDieser kurze Kurs macht Dich fit für all die Tools, die euren Workflow verbessern werden.\n\n\nDies ist kein überladener Kurs, der nur Verwirrung und Unmut stiftet, hier bekommst du alles, aber so, dass du es auch anwenden kannst, ohne dich zu überfordern.\nDazu gehören lebenslanger Zugriff auf den Kurs, eine 30-Tage Rückgabegarantie.\nViel Spaß beim Lernen!",
      "target_audience": [
        "Entwickler",
        "SysAdmins",
        "Netzwerk Admins",
        "Management",
        "IT mit Softwarentwicklungsvorwissen"
      ]
    },
    {
      "title": "Curso de Angular 19 Moderno: Domina Angular",
      "url": "https://www.udemy.com/course/angular-moderno/",
      "bio": "Aprende Angular 19, como Signals, Defer Block y Control Flow. También aplicable a Angular 18",
      "objectives": [
        "Dominar conceptos modernos de Angular: Los estudiantes aprenderán a trabajar con las últimas características de Angular 19, como Signals funcionan",
        "Refactorizar aplicaciones existentes: Serán capaces de analizar y optimizar un código base heredado utilizando las mejores prácticas y técnicas modernas de Angu",
        "Construir aplicaciones escalables y mantenibles: Comprenderán cómo estructurar y modularizar una aplicación para garantizar un desarrollo eficiente y un rendimi",
        "Aplicar nuevas herramientas en proyectos reales: Tendrán la capacidad de implementar funcionalidades modernas en sus propios proyectos, mejorando la experiencia"
      ],
      "course_content": {
        "Introducción al curso de Angular moderno": [
          "Introducción",
          "¿Para quién es?",
          "¿Para quién NO es?",
          "Conocimientos necesarios para hacer el curso de Angular moderno"
        ],
        "Configuración del entorno de desarrollo": [
          "Instalar Angular CLI",
          "Angular Extensiones para VS Code",
          "Generando nuevo proyecto con Angular CLI",
          "Anatomía de un proyecto Angular Moderno"
        ],
        "Componentes y comunicación entre componentes con input y output signal": [
          "¿Qué es un componente?",
          "Standalone component",
          "Ciclo de vida de un componente(Lifecycle hooks)",
          "Comunicación entre componentes @Input(), @Output()",
          "Comunicación entre componentes @Output()",
          "Comunicación entre componentes Input Signal",
          "Comunicación entre componentes Output Signal"
        ],
        "Empezamos a aprender con Angular 18": [
          "Clonamos repositorio",
          "Aplicaciones que vamos a refactorizar",
          "Tarea - Arreglar el 404 de la ruta de Checkout",
          "Solución al ejercicio anterior",
          "Tarea - ¿Cuál es el sustituto de HttpClientModule?",
          "Nuevo provideHttpClient",
          "Functional interceptor",
          "@let variable"
        ],
        "Nuevo Control Flow @if @for": [
          "Introducción al nuevo control flow",
          "Migrando ngFor a @for",
          "Migrando ngIf a @if"
        ],
        "Signals desde cero": [
          "Introducción a Signals",
          "¿Qué es la reactividad?",
          "Signals Computadas (Computed Signals)",
          "Efectos (effects)",
          "Contexto de Inyección",
          "Funciones avanzadas de Signals",
          "Angular Signals mejorán la detección de cambio"
        ],
        "Zoneless": [
          "¿Por qué usar Zoneless?",
          "Habilitando Zoneless Change Detection",
          "Experimental-zoneless en aplicaciones nuevas"
        ],
        "Signal queries": [
          "¿Qué son las Signal queries?",
          "Migrando @Input a input Signals",
          "Migrando @Output a output Signals",
          "Migration to signal queries",
          "Model Signal"
        ],
        "RxJS Interop": [
          "¿Qué es toSignal?",
          "Interfaz ToSignalOptions",
          "Migrando toSignal"
        ],
        "Implementado Signals ShopingCart Store": [
          "Ejercicio - Computed Signal",
          "Solución - Computed Signal",
          "Ejercicio computed signal para el estado completo",
          "Solución computed signal para el estado completo",
          "Refactor addToCart en State Service",
          "Refactor removeFromCart en State Service",
          "Refactor clearCart",
          "Compatibilidad con Observable - toObservable",
          "Cart$ a CartStore",
          "Guardar Shopping Cart en localStorage"
        ]
      },
      "requirements": [
        "Conocimientos básicos de JavaScript.",
        "Familiaridad con HTML y CSS.",
        "Un equipo con acceso a Internet.",
        "Instalación de Node js y Angular CLI.",
        "Visual Studio Code (u otro editor de código).",
        "Ganas de aprender y desarrollar proyectos prácticos."
      ],
      "description": "Curso de Angular 19\nEste curso está enfocado en Angular 19, la versión más reciente del framework, pero también es completamente aplicable a Angular 18.\n\nAprenderás las últimas técnicas y herramientas disponibles, manteniendo la compatibilidad con la versión anterior, lo que te permitirá trabajar de manera efectiva en proyectos actuales y futuros sin preocuparte por los riesgos de adoptar una versión demasiado nueva.\n\nEste curso está diseñado para desarrolladores que buscan aprender las últimas novedades de Angular 18 y 19, además de adquirir habilidades prácticas para aplicarlas en proyectos reales.\n\nLo que aprenderás:\nCaracterísticas avanzadas de Angular 19:\nImplementación de Signals para una gestión de estado más eficiente.\nUso de Functional Interceptors para mejorar la arquitectura de tus aplicaciones.\nTécnicas de optimización como Defer Block y Control Flow.\n\nRefactorización y modernización de un proyecto real: Trabajarás con un e-commerce funcional y lo refactorizarás para aprovechar las nuevas herramientas de Angular.\n\nCompatibilidad entre versiones: Aunque este curso se centra en Angular 19, aprenderás conceptos y patrones que también funcionan en Angular 18, permitiéndote integrar las mejores prácticas de ambas versiones sin problemas.\n\nComponentes Standalone: Aprende a estructurar tus aplicaciones sin depender de módulos, adoptando una arquitectura más flexible y moderna.\n\n\n\n\nAdemás, el curso incluye 3 actualizaciones exclusivas, completamente gratuitas, para que sigas mejorando tus habilidades:\nEnero: Testing con Jest para asegurar la calidad del código.\nFebrero: Uso avanzado de NgRx Signals para gestión de estados moderna.\nMarzo: Una sorpresa especial para que lleves tu aprendizaje aún más lejos.\nUna vez inscrito, podrás acceder a todo el contenido y a las actualizaciones sin ningún costo adicional.\n\n¿Aún sigues usando módulos en Angular?\n¿Tus Guards o Interceptors son clases?\n¿Tus componentes NO son standalone?\n\nSi respondiste que sí a cualquiera de estas preguntas, ¡este curso es para ti!\n\n¿Por qué aprender Angular 19 y cómo se relaciona con Angular 18?\nAngular 19 introduce importantes mejoras, pero la versión 18 sigue siendo ampliamente utilizada en muchos proyectos.\n\nEste curso te permitirá mantener la compatibilidad con ambas versiones, lo que es clave si estás trabajando en proyectos que aún no han adoptado Angular 19.  Así, puedes adoptar nuevas prácticas sin comprometer la estabilidad de tus aplicaciones.\n\nBeneficios del curso:\nAcceso de por vida: Accede al contenido y a las futuras actualizaciones sin coste adicional.\nEnfoque práctico: Trabaja con un proyecto real de e-commerce, aplicando las técnicas y herramientas aprendidas.\nActualización constante: El curso incluye actualizaciones periódicas, lo que garantiza que tu aprendizaje siga siendo relevante y útil a medida que Angular evoluciona.\nSoporte y comunidad: resuelve tus dudas a medida que avanzas en el curso aquí y también en nuestro exclusivo grupo de Telegram.\n\n\n\n\nAquí aprenderás a modernizar tus prácticas y a sacar el máximo provecho de las últimas herramientas de Angular.\n\n¡Inscríbete ahora y conviértete en un experto en Angular moderno!",
      "target_audience": [
        "Aplicar nuevas herramientas en proyectos reales: Tendrán la capacidad de implementar funcionalidades modernas en sus propios proyectos, mejorando la experiencia del usuario y la eficiencia del desarrollo.",
        "Desarrolladores Frontend que deseen mejorar sus habilidades y aprender a desarrollar eCommerce modernos con Angular.",
        "Estudiantes de programación que busquen un proyecto real para poner en práctica sus conocimientos de Angular.",
        "Empleados en tecnología que deseen actualizarse con la última versión de Angular para aplicar en su trabajo.",
        "Emprendedores que quieran desarrollar su propio eCommerce y gestionar su tienda online sin depender de terceros.",
        "Freelancers o consultores que deseen ofrecer servicios de desarrollo de eCommerce a clientes usando Angular.",
        "Programadores en otras tecnologías que estén considerando una transición hacia el desarrollo con Angular y quieran aprender creando un proyecto práctico.",
        "Equipos de desarrollo en pequeñas empresas que quieran mejorar sus competencias internas y desarrollar su propio eCommerce sin externalizar.",
        "Recién graduados en carreras tecnológicas que quieran obtener habilidades prácticas y destacarse en el mercado laboral con experiencia en Angular y eCommerce."
      ]
    },
    {
      "title": "Zen Kubernetes - A hands-on, practical intro to Kubernetes",
      "url": "https://www.udemy.com/course/zen-kubernetes/",
      "bio": "Elevate your engineering skills by learning the basics of Kubernetes through a streamlined hands-on course.",
      "objectives": [
        "Understand the basics of how Kubernetes works",
        "Deploy a local Kubernetes cluster",
        "Deploy software and applications to Kubernetes clusters",
        "Configure Kubernetes cluster with YAML configuration files",
        "Learn about the basics of networking in Kubernetes, internal and external",
        "Deploy a fullstack application and database using Kubernetes as a capstone project"
      ],
      "course_content": {
        "Introduction to Kubernets": [
          "What is Kubernetes?",
          "Setting up for k8s development",
          "The Main Pillars of Kubernetes",
          "Workload Types"
        ],
        "Managing applications with Kubernets": [
          "Creating our first cluster",
          "Deploying applications",
          "Declaring services",
          "Set up external access",
          "Scaling applications",
          "Updating applications",
          "Revision histories and rollbacks"
        ],
        "Final project": [
          "Final project introduction",
          "Final Project Part 1 - Infrastructure and containerizing our applications",
          "Final Project Part 2 - Deploying our applications and adding networking",
          "Final Project Part 3 - Everything comes together",
          "Final project text walkthrough"
        ]
      },
      "requirements": [
        "No prior Kubernetes experience required. This course teaches you the basics",
        "Some development experience required",
        "Be able to use a terminal for basic commands"
      ],
      "description": "Join a Hands-On Course Designed for Software Engineers. Master Kubernetes to Build and Scale Applications Efficiently.\n-\nKubernetes (k8s) was originally developed by Google and is now maintained by the Cloud Native Computing Foundation (CNCF). It allows users to easily manage and deploy containerized applications across a cluster of machines, providing a simple and flexible way to handle the complex task of managing containers at scale. Today some of the top tech companies in the world leverage Kubernetes for running their applications.\nWith Zen Kubernetes you can learn Kubernetes and container orchestration. This practical course empowers engineers to confidently deploy, scale, and manage applications. Get hands-on experience and unlock the potential of Kubernetes today!\n\nThis course is tailored for engineers who need to get up to speed fast, this course delivers all the essential Kubernetes knowledge in a concise, focused format. Avoid spending days on lengthy material—learn to deploy, scale, and manage applications efficiently in just one sitting. This hands-on course cuts through the noise, providing the core skills you need to succeed, without overwhelming you with information. Perfect for those who value their time and want practical, immediately applicable knowledge.\"\n\nWith no prior knowledge required, by the end of the course and after completing all the hands-on modules, you'll be equipped to deploy your own applications on a Kubernetes platform.\n\nThis course covers the following topics:\nWhat is Kubernetes and why should you care?\nUseful tools for working with Kubernetes.\nSetting up a Kubernetes cluster locally.\nThe main pillars of Kubernetes.\nKubernetes workload types.\nDeploying applications.\nScaling and Load Balancing.\nRolling Updates and Rollbacks.\nUpdating Kubernetes applications.\nInternal Networking\nExternal networking\nWho this course is for:\nDevelopers who want to learn more about the technology backing modern DevOps\nDevelopers  who are struggling with the mystery and complexity around Kubernetes and why they would use it.",
      "target_audience": [
        "Software engineers and developers that want to elevate their skills and understand how Kubernetes is used to deploy manage and scale applications efficiently at scale"
      ]
    },
    {
      "title": "Full Stack Software Engineering using ChatGPT",
      "url": "https://www.udemy.com/course/full-stack-software-engineering-using-chatgpt/",
      "bio": "GPT Driven Software Engineering",
      "objectives": [
        "Full Stack Development",
        ".NET 7",
        ".NET Core",
        "API Development",
        "Clean Architecture"
      ],
      "course_content": {
        "Introduction": [
          "Create a ChatGPT Account"
        ],
        "Software Installation": [
          "Visual Studio 2022",
          "SQL Server 2022"
        ],
        "Database Layer": [
          "Create Database",
          "Create Table",
          "Create CRUD Stored Procedures"
        ],
        "Repository Layer": [
          "Repository Interface",
          "Models Library",
          "Repository Implementation using Dapper"
        ],
        "Service Layer": [
          "Service Interface and Implementation"
        ],
        "API Layer": [
          "API Project",
          "Dependency Injection"
        ],
        "Postman Testing": [
          "Generate API CRUD Collection",
          "Test API CRUD Methods"
        ]
      },
      "requirements": [
        "Visual Studio",
        "SQL Server",
        "Basic Technical Knowledge"
      ],
      "description": "Unlock Your Full Stack Potential: Full Stack Software Engineering using ChatGPT\nAre you ready to embark on a transformative journey towards becoming a full stack software engineer? Look no further! Our comprehensive course is designed to empower you with the knowledge and skills needed to excel in this dynamic field.\nIn today's tech-driven world, being a full stack developer is more valuable than ever. Our course combines cutting-edge technologies, including ChatGPT, Visual Studio 2022, and SQL Server 2019, to provide you with a holistic learning experience.\nWhat You'll Learn:\nHarnessing the Power of ChatGPT: You'll discover how to leverage the capabilities of ChatGPT to streamline your development processes, automate tasks, and generate code effortlessly.\nMastering Visual Studio 2022: Dive deep into the latest features and functionalities of Visual Studio 2022, the ultimate integrated development environment (IDE). Learn how to create robust, scalable, and efficient applications.\nDatabase Mastery with SQL Server 2019: Explore the world of data management and storage using SQL Server 2019. You'll gain hands-on experience in designing and optimizing databases, ensuring data integrity, and extracting valuable insights.\nWhy Choose Our Course:\nExpert Guidance: Our instructors are industry experts with years of experience in full stack development, ensuring you receive the most relevant and up-to-date knowledge.\nPractical Projects: Apply what you learn through real-world projects and case studies, building a portfolio that showcases your skills to potential employers.\nCareer Advancement: Whether you're a beginner or a seasoned developer, this course will elevate your career prospects and help you stay ahead in the ever-evolving tech landscape.\nDon't miss this opportunity to transform your career and become a proficient full stack software engineer. Enroll today and unlock your full stack potential!",
      "target_audience": [
        "Students and Professionals who want to master MVC using a clean architecture approach"
      ]
    },
    {
      "title": "Design Patterns em TypeScript Entendendo Padrões de Projetos",
      "url": "https://www.udemy.com/course/curso-design-patterns-typescript/",
      "bio": "Aprenda Padrões de Projeto GoF e Princípios SOLID em explicações práticas com exemplos reais em Type Script",
      "objectives": [
        "Design Patterns com TypeScript",
        "Aprenda os principais Padrões de Projetos GoF",
        "Aprenda o princípio SOLID",
        "Aprenda o conceito, que problemas os Padrões de projetos resolvem e como aplicar em seus projetos TypeScript"
      ],
      "course_content": {
        "Introdução": [
          "Introdução - Boas Vindas",
          "O que você aprenderá neste curso e o que não aprenderá",
          "O que é Design Pattern ou Padrão de Projeto?",
          "Ambiente de Desenvolvimento: TypeScript, Node e Visual Studio Code"
        ],
        "Entendendo o princípio SOLID": [
          "O que é um princípio da programação",
          "O Princípio SOLID",
          "S - Single Responsibility Principle - SRP",
          "O - Open/Closed Principle - OCP",
          "L - Liskov Substitution Principle - LSP",
          "I - Interface Segregation Principle - ISP",
          "D - Dependency Inversion Principle - DIP",
          "Resumo da Seção"
        ],
        "Design Pattern - A Origem": [
          "A Origem do Design Pattern",
          "Gangue dos Quatro - Gang of Four (GoF)"
        ],
        "Por que e como aprender Design Patterns hoje": [
          "Por que utilizar Design Pattern",
          "Padrão Criacional, Estrutural e Comportamental"
        ],
        "Cuidado ao utilizar Design Patterns": [
          "Organize melhor e comunique melhor e não o contrário"
        ],
        "Design Pattern - Criacional": [
          "Factory Method - O problema",
          "Factory Method - A solução",
          "Factory Method - Como implementar - diagrama",
          "Factory Method - Exemplo em TypeScript",
          "Exercício Prático - Factory Method - Desafio Hcode",
          "Abstract Factory - O problema",
          "Abstract Factory - A solução",
          "Abstract Factory - Como implementar - diagrama",
          "Abstract Factory - Exemplo em TypeScript",
          "Exercício Prático - Abstract Factory - Desafio Hcode",
          "Builder - O problema",
          "Builder - A solução",
          "Builder - Como implementar - diagrama",
          "Builder - Exemplo com TypeScript",
          "Exercício Prático - Builder - Desafio Hcode"
        ],
        "Design Pattern - Estrutural": [
          "Adapter - O problema",
          "Adapter - A solução",
          "Adapter - Como implementar - diagrama",
          "Adapter - Exemplo com TypeScript",
          "Exercício Prático - Adapter - Desafio Hcode",
          "Bridge - O problema",
          "Bridge - A solução",
          "Bridge - Como implementar - diagrama",
          "Bridge - Exemplo em TypeScript",
          "Exercício Prático - Bridge - Desafio Hcode"
        ],
        "Design Pattern - Comportamental": [
          "Chain of Responsibility - O problema",
          "Chain of Responsibility - A solução",
          "Chain of Responsibility - Como implementar",
          "Chain of Responsibility - Exemplo em TypeScript",
          "Exercício Prático - Chain Of Responsibility - Desafio Hcode"
        ],
        "Conclusão": [
          "Conclusão - Próximo passo"
        ]
      },
      "requirements": [
        "É imprescindível que o aluno possua conhecimentos sólidos em Orientação a Objetos.",
        "Ter feito nosso curso Dominando TypeScript, ou possuir conhecimentos equivalentes."
      ],
      "description": "Aprenda os principais Padrões de Projetos GoF em explicações práticas com exemplos em reais em TypeScript.\nDesign Patterns ajudam a elevar a carreira de um desenvolvedor a um próximo nível e podem ser usados por aqueles que desejam alavancar a qualidade de seus códigos e sistemas. Aprenda como os padrões de projetos resolvem muitos problemas conhecidos da indústria de desenvolvimento de software.\nPor aplicar os padrões de projetos que serão ensinados neste curso você estará preparado para desenvolver um código mais limpo, flexível e robusto.\nO curso explicará a origem dos Design Patterns, por que eles são tão importantes, quais benefícios eles trazem e quais cuidados precisamos ter ao utilizar os padrões de projetos.\nAprenda os padrões criacionais, estruturais e comportamentais definidos pelos padrões GoF.\nTorne-se um profissional pronto para analisar cenários e aplicar cada um dos padrões de projetos.\nAprenda o princípio SOLID de programação, e crie códigos mais limpos e legíveis.\nMelhore a comunicação da sua equipe, aumente produtividade e a qualidade do software que você entrega. Os padrões são divididos em três tipos, Criacionais, Estruturais e Comportamentais, aprenda como e onde utilizá-los.\nNeste curso você terá aulas conceituais, com aplicação prática e desafios para praticar cada etapa do Desenvolvimento e se tornar um especialista de fato em Design Patterns aplicados ao TypeScript.\nTe vejo na aula!",
      "target_audience": [
        "Programadores que desejam aprender Padrões de Projetos.",
        "Desenvolvedores TypeScript e JavaScript que desejam aprimorar suas habilidades de programação.",
        "Engenheiros de Software e estudantes do curso de Engenharia de Sistemas."
      ]
    },
    {
      "title": "FIDO - Core Principles",
      "url": "https://www.udemy.com/course/bitscrafter-fido-core-principles/",
      "bio": "An introductory guide for understanding the basis of FIDO",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Overview"
        ],
        "FIDO2 - Structural View": [
          "FIDO2 Elements",
          "Authenticator Properties"
        ],
        "FIDO2 - Runtime View": [
          "Registration of Credentials",
          "Authentication using Registered Credentials"
        ],
        "FIDO2 - Security View": [
          "FIDO2 vs Password"
        ]
      },
      "requirements": [
        "No programming experience needed (in this course we don't delve into code)"
      ],
      "description": "The course introduces the FIDO2 technology by identifying its constituent parts, along with their properties, responsibilities, relationships and the specific interactions among them. As a bonus, it concludes by explaining the details for some of the security characteristics offered by FIDO2.\n\n\nThe elements that make up FIDO2 are:\nOn the Client (e.g. User's Device) side\nRelying Party\nThe entity that needs to leverage FIDO2 capabilities and thus who initiates a FIDO2 registration or authentication.\nClient (e.g. Browser or App)\nWhat ties together the Relying Party and the Authenticator\nThe communication between Relying Party and Client is ruled by the WebAuthn specification.\nThe communication between Client and Authenticator is governed by the CTAP2 (Client to Authenticator Protocol version 2) specification\nAuthenticator\nThe cryptographic module that creates and uses the cryptographic keys that enable the FIDO2 technology.\nOn the Server side\nFIDO2 Server\nThe entity that verifies the FIDO2 operation and that ultimately decides whether the FIDO2 action that occurred on the User's side is honored or not.\nMetadata Service\nThe entity (which is always the FIDO Alliance) who governs the registered FIDO2 authenticators and maintains the properties associated to them\nThe FIDO2 Server might use it to help in making a decision on how much what occurred on the User's side can be trusted or not.\n\n\nThe interactions between the User and FIDO occur in two different instances:\nRegistration\nWhen a FIDO2 credential, which is nothing other than a cryptographic key, is generated by the Authenticator with the participation of the User, and then part of the resulting cryptographic material is shared to the FIDO2 Server for further verification.\nAuthentication\nWhen a FIDO2 credential is used, with participation of the User, and then the resulting authentication material is shared to the FIDO2 Server for further verification.\n\n\nAs a way to appreciate some of the security benefits that FIDO2 offers, an analysis comparing FIDO2 and passwords is included at the end of the course. This comparison is viewed from two different angles:\nCredential Theft\nPhishing",
      "target_audience": [
        "Anyone interested in learning the basics of FIDO"
      ]
    },
    {
      "title": "Become an AI Accelerated Engineer Using ChatGPT",
      "url": "https://www.udemy.com/course/become-an-ai-accelerated-engineer-with-clanx-using-chatgpt/",
      "bio": "Boost Productivity & Advance Your Engineering Career with ChatGPT by becoming an AI Accelerated Engineer",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to the course and instructor"
        ],
        "Prompt Engineering Basics": [
          "Prompt Engineering Basics and it's application in software development"
        ],
        "AI assisted coding": [
          "Introduction to AI Assisted Coding with NextJS basics and project setup"
        ],
        "AI assisted coding - Rest API": [
          "Writing a Rest API using ChatGPT"
        ],
        "AI Assisted Coding - Frontend Development": [
          "Frontend Development using ChatGPT"
        ],
        "Closing Notes": [
          "Closing notes and next steps",
          "Course Feedback"
        ]
      },
      "requirements": [
        "No programming experience needed"
      ],
      "description": "Become an AI Accelerated Engineer Using ChatGPT\n\nJoin ClanX's exciting course designed for engineers who want to get ahead in their careers using ChatGPT. This course is great for engineers at all levels, whether you're just starting out, looking to move up, or wanting to be a tech leader.\n\n\nWhat's in the Course:\n\n\n1. Getting Started: You'll begin by learning what the course is about and meeting your instructor, Mandar.\n2. Learning to Use ChatGPT for Coding: You'll explore how to give ChatGPT the right instructions for coding and get hands-on experience.\n3. Making Your Own AI Coding Projects: Learn how to decide what your project will do, use online tools (APIs), and put everything together using a tool called Next.js.\n4. Improving Your Coding Skills: You'll get better at analyzing data, fixing coding bugs, and writing better code with ChatGPT's help.\n5. Designing Web Pages with AI: Discover how to create web pages using ChatGPT, solve design problems, and make your pages look better.\n\n\nWhat You Will Learn\nBasic and advanced ideas about giving ChatGPT the right instructions for coding.\nHow to make coding projects easier and more efficient with AI.\nSkills in using online tools and understanding their responses.\nBasics and more about Next.js for building great projects.\nCreating and improving web pages and coding using AI.\n\n\nWho this course is for:\nNew engineers just starting out.\nExperienced engineers looking to advance.\nTech leaders aiming for bigger roles.",
      "target_audience": [
        "Engineers",
        "Product Managers",
        "Anyone who is looking to leverage ChatGPT"
      ]
    },
    {
      "title": "Linked List Interview Questions Practice Test MCQ | Quiz",
      "url": "https://www.udemy.com/course/linked-list-mcq/",
      "bio": "300+ Linked List Interview Questions and Answers MCQ Practice Test Quiz with Detailed Explanations.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "300+ Linked List Interview Questions and Answers MCQ Practice Test Quiz with Detailed Explanations.\nEmbark on an in-depth journey into the world of Linked Lists with our comprehensive MCQ course, tailored for both beginners and experienced programmers. Whether you're preparing for competitive exams, job interviews, or looking to strengthen your understanding of data structures, this course offers a unique learning experience through a series of meticulously crafted multiple-choice questions.\nCourse Sections:\nBasics of Linked Lists: Start with the fundamentals – definitions, types, basic operations, and complexities.\nSingly Linked Lists: Dive into the operations, traversal techniques, and specific algorithms for singly linked lists.\nDoubly Linked Lists: Explore the advanced features and operations unique to doubly linked lists.\nCircular Linked Lists: Understand the circular variants and their practical applications.\nAdvanced Concepts and Applications: Tackle complex topics like loop detection, merging lists, and implementing stacks and queues.\nProblems and Challenges: Engage with a variety of challenging scenarios and problems to test your skills to the fullest.\nWe Update Questions Regularly: Our quizzes are continually updated to ensure they remain relevant and challenging. We aim to cover a broad range of topics and difficulty levels, reflecting the latest trends and advancements in the study of Linked Lists.\nExamples of the Types of Questions You'll Encounter:\nMultiple Choice Questions (MCQs): These questions require you to select the correct answer from a list of options. They test your knowledge on specific aspects of Linked Lists, such as their structure, operations, and applications.\nTrue/False Questions: These questions assess your ability to identify accurate statements about Linked Lists. They can cover any subtopic, from the basics of Linked Lists to more advanced concepts.\nFill-in-the-Blank Questions: Here, you'll be asked to complete a statement or a code snippet related to Linked Lists. This format tests your practical knowledge and understanding of specific Linked List operations or algorithms.\nCode Analysis Questions: These questions involve analyzing or debugging a short piece of code related to Linked Lists. They test your ability to understand and work with Linked List implementations.\nCase Studies and Scenario-Based Questions: These questions present real-world scenarios or problems where Linked Lists can be applied. You'll need to apply your knowledge to solve these practical challenges.\nDiagrammatic Questions: In these questions, you'll need to interpret or draw diagrams representing Linked Lists, such as illustrating how nodes are connected in a particular type of Linked List.\nFrequently Asked Questions (FAQs):\nWhat is the primary advantage of using a doubly linked list over a singly linked list? Answer: A doubly linked list allows traversal in both directions (forward and backward), making certain operations more efficient.\nHow can you detect a loop in a linked list? Answer: One common method is using Floyd’s Cycle-Finding Algorithm, also known as the \"tortoise and the hare\" algorithm.\nWhat is the time complexity of inserting an element at the beginning of a linked list? Answer: O(1), as it requires a constant amount of time irrespective of the list size.\nIs it possible to implement a stack and queue using a linked list? How? Answer: Yes, both can be implemented using either a singly or doubly linked list by manipulating the top/front and rear elements accordingly.\nWhat is the difference between a linked list and an array? Answer: Key differences include memory allocation (dynamic for linked lists, static for arrays) and ease of insertion/deletion (more efficient in linked lists).\nHow do you reverse a singly linked list? Answer: By reorienting the links between nodes, usually done iteratively or recursively.\nWhat is a circular linked list and how does it differ from a linear linked list? Answer: In a circular linked list, the last node points back to the first node, forming a circle. This is different from a linear list, where the last node points to null.\nCan you merge two sorted linked lists into a single sorted linked list? Answer: Yes, by iteratively comparing and linking nodes from both lists.\nWhat are some real-world applications of linked lists? Answer: Linked lists are used in applications like image viewing software (for undo functionality), music players (for playlist management), and in implementing various data structures.\nHow can the middle element of a linked list be found? Answer: One approach is the \"tortoise and hare\" algorithm, where two pointers are used; one moves twice as fast as the other.\nEnroll Now: Join us on this exciting journey to master Linked Lists through interactive and engaging MCQs. Enroll now and take the first step towards becoming a data structures expert!",
      "target_audience": [
        "Computer Science Students: Undergraduate and graduate students who are studying computer science, software engineering, or related fields will find this course incredibly beneficial. It aligns well with academic curricula that cover data structures and algorithms, providing a practical and in-depth understanding of Linked Lists.",
        "Aspiring Software Developers: Individuals who are learning programming and software development on their own and are keen to deepen their understanding of fundamental data structures. This course will strengthen their foundational knowledge, which is crucial for building efficient and robust software.",
        "Coding Interview Candidates: Job seekers preparing for technical interviews in the tech industry, where a solid grasp of data structures like Linked Lists is often a critical part of the assessment. The course's MCQ format is particularly useful for brushing up on key concepts quickly and effectively.",
        "Competitive Programmers: Participants in coding competitions and hackathons who want to enhance their problem-solving skills. Understanding Linked Lists and their applications can be a significant advantage in algorithmic challenges.",
        "Professional Developers Seeking Refresher: Experienced programmers and developers who are looking to refresh and update their knowledge about Linked Lists. This course serves as a great refresher, especially for professionals who might not have dealt with these concepts in a while.",
        "Educators and Tutors in Computer Science: Instructors and tutors looking for additional resources to aid in teaching data structures. The course can be a valuable tool for providing students with extra practice and deepening their understanding of Linked Lists.",
        "Hobbyists and Tech Enthusiasts: Individuals with a general interest in computer science and data structures. Even without formal training in these areas, enthusiasts who enjoy learning about how things work will find this course engaging and informative."
      ]
    },
    {
      "title": "The Complete Course of PSpice and PCB 2025",
      "url": "https://www.udemy.com/course/pspice-course/",
      "bio": "Learn PSpice in a Professional way. Become an expert in PCB design, Circuit design, and Electronics, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master PSpice, to be able to model circuit behavior and run simulations from scratch",
        "You will be able to conduct PSpice projects step by step, understanding all the logic and ending with advanced practical examples and complete projects",
        "You will start by Installing and configuring PSpice, understanding its capabilities and user interface",
        "You will gain a solid understanding of basic electrical components, circuit design, and simulation principles",
        "You will learn to execute both basic and advanced simulations, and analyze digital and mixed-signal circuits to evaluate circuit performance",
        "You will utilize sensitivity and optimization analyses, model special components, and implement advanced simulation techniques",
        "You will learn to use PSpice to design practical circuits such as power supplies, amplifiers, and filters, applying debugging and troubleshooting techniques",
        "You will learn to integrate PSpice with software like KiCad to streamline circuit design workflows",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the hands-on projects",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to PSpice": [
          "Course introduction",
          "Overview of PSpice software capabilities and applications",
          "Quiz",
          "Installation and configuration",
          "Navigating the PSpice environment"
        ],
        "Basic Concepts and Circuit Components": [
          "Basic Electrical Components",
          "Introduction to Circuit Design"
        ],
        "Simulation and Analysis": [
          "Understanding Basic Simulations",
          "Running Basic Simulations-1",
          "Running Basic Simulations-2",
          "Understanding Advanced Simulation Techniques",
          "Running Advanced Simulation Techniques"
        ],
        "Digital Electronics and Mixed Signals": [
          "Understanding Digital Components and Circuits",
          "Designing Digital Components and Circuits",
          "Advanced Mixed-Signal Analysis",
          "Performing Mixed-Signal Analysis",
          "Practical Assignment"
        ],
        "Using PSpice Advanced Features": [
          "Understanding Sensitivity and Optimization Analyses",
          "Performing Sensitivity and Optimization Analyses",
          "Special Components and Modeling",
          "Designing Special Components and Modeling",
          "Practical Assignment"
        ],
        "Real-World Applications and Case Studies": [
          "Case studies: Power supplies, amplifiers, filters",
          "Practical Circuit Design and Analysis",
          "Troubleshooting and Debugging Techniques",
          "Practical Assignment"
        ],
        "Pspice Integration": [
          "Integrating Pspice with Kicad"
        ],
        "Final Project": [
          "Application of learned skills to a comprehensive design project",
          "Course Closure"
        ]
      },
      "requirements": [
        "Having basic notions of electrical components can help, but the course starts from scratch",
        "Preparing and installing the needed environment to follow the practical sessions (if you don't know how, don't worry, it's very easy, and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become a PSpice professional and learn one of employer's most requested skills nowadays.\nThis comprehensive course is designed so that Electrical and Electronics Engineers, Technical Instructors and Trainers, Project Managers in Electronics, Engineering Students, Researchers... can learn PSpice from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working as an Engineers, we have realized that nowadays mastering PSpice is very necessary to simulate, analyze, and validate circuit designs before physically building them. Knowing how to use this tool can give you many job opportunities and many economic benefits, especially in the world of Electronics.\nThe big problem has always been the complexity to perfectly understand PSpice requires, since its absolute mastery is not easy. In this course we try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step, detailed and hands-on examples of every concept.\nWith 9 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master PSpice. The course will teach you how to design, simulate, analyze, and optimize electronic circuits using PSpice for real-world applications in a practical way, from scratch, and step by step.\nWe will start with the installation and setup of the needed work environment on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including-\nIntroduction to PSpice and course dynamics\nInstall, configure, and explore the PSpice environment\nLearn essential components and circuit design\nRun basic and advanced circuit simulations\nDesign and analyze digital and mixed-signal circuits\nPerform sensitivity, optimization, and advanced modeling\nWork on practical designs and troubleshooting\nIntegration with KiCad\nMastery and application of absolutely ALL the functionalities of PSpice\nQuizzes, Practical exercises, complete projects and much more!\nIn other words, what we want is to contribute our grain of sand and teach you all those things that we would have liked to know in our beginnings and that nobody explained to us. In this way, you can learn to build and manage a wide variety of projects and make versatile and complete use of PSpice. And if that were not enough, you will get lifetime access to any class and we will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning PSpice has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used PSpice before",
        "Electrical and Electronics Engineers, Technical Instructors and Trainers, Project Managers in Electronics and Engineering Students... who want to learn a new way to PCB Design and Circuits simulation",
        "Intermediate or advanced PCB or PSpice users who want to improve their skills even more!"
      ]
    },
    {
      "title": "【入門】基礎から学ぶインフラ設計 -やさしい言葉で基礎知識を解説、設計書が読めるようになる-",
      "url": "https://www.udemy.com/course/infrastructure-design/",
      "bio": "インフラ設計の工程と仕組みを理解し、プロジェクト推進のための基礎知識を身につける講座です。入門編となりますので、考え方や概念の理解に重点を置いています。",
      "objectives": [
        "インフラ設計の工程と仕組みを理解し、プロジェクト推進のため基本となる知識が身に着く",
        "設計書が読めるようになる、ベースとなる知識が身に着く",
        "設計の議論をする場で何を話しているか理解できるようになる",
        "設計における上流工程のイメージがつくようになる"
      ],
      "course_content": {
        "基礎から学ぶインフラ設計": [
          "はじめに",
          "Udemyの機能について",
          "まとめ資料配布"
        ],
        "インフラ設計とは": [
          "このセクションで学ぶこと",
          "設計とは",
          "インフラ設計とは",
          "インフラ設計の内容",
          "インフラ設計の工程",
          "このセクションのまとめ",
          "確認テスト"
        ],
        "可用性設計": [
          "このセクションで学ぶこと",
          "可用性設計とは",
          "冗長化とは",
          "具体的な対策",
          "このセクションのまとめ",
          "確認テスト"
        ],
        "性能設計": [
          "このセクションで学ぶこと",
          "性能設計とは",
          "性能の検討要素",
          "拡張性",
          "このセクションのまとめ",
          "確認テスト"
        ],
        "セキュリティ設計": [
          "このセクションで学ぶこと",
          "セキュリティとは",
          "ITインフラにおけるセキュリティ",
          "セキュリティを脅かす脅威や脆弱性",
          "セキュリティ設計とは",
          "このセクションのまとめ",
          "確認テスト"
        ],
        "監視設計": [
          "このセクションで学ぶこと",
          "監視設計とは",
          "監視項目",
          "監視方法",
          "このセクションのまとめ",
          "確認テスト"
        ],
        "バックアップ・リストア設計": [
          "このセクションで学ぶこと",
          "バックアップとは",
          "バックアップ方針",
          "バックアップ方法",
          "このセクションのまとめ",
          "確認テスト"
        ],
        "BCP 事業継続計画": [
          "このセクションで学ぶこと",
          "BCPとは",
          "ITインフラにおけるBCP",
          "このセクションのまとめ",
          "確認テスト"
        ],
        "おわりに": [
          "おわりに"
        ]
      },
      "requirements": [
        "理解できないことは、自分で調べて学ぶ意欲がある",
        "---以下、推奨---",
        "サーバーまたはネットワークに関する知識を学んだことがある",
        "TCP/IP等の基本的な知識",
        "ハードウェア、オペレーティングシステムの基本的な知識"
      ],
      "description": "インフラ設計とは、ITシステムを利用する際に必要な基盤を構築して運用まで行う、言わば企業の業務を下支えする業務です。\n必要不可欠であるが故に、障害発生させないための企画・構築・設計・運用などはとても重要です。\n本講座は、インフラエンジニアが担う仕事内容の一部である、設計工程についてやさしい言葉で基礎知識を解説していきます。導入編となりますので、考え方や概念の理解に重点を置いています。細かな技術の仕組み・用語解説などはあえて省いていることもあります。\n今回は設計書が読めるようになることをゴールとし、インフラエンジニアの仕事内容のイメージを掴みましょう。\n\n\n【講座の内容 / 進め方】\n動画を見るだけでOK\n解説を聞き、インフラ設計のイメージを掴みます。\n※字幕機能は自動で付与されております。図解等ありますので、必要に応じてOFFにしてください。\n\n\nSection 1：はじめに\nSection 2：インフラ設計とは\n設計とは、インフラ設計とは、インフラ設計の内容・工程について学びます\nSection 3：可用性設計\n可用性設計とは、冗長化とは、具体的な対策について学びます\nSection 4：性能設計\n性能設計とは、性能の検討要素、拡張性について学びます\nSection 5：セキュリティ設計\nセキュリティとは、ITインフラにおけるセキュリティ、セキュリティを脅かす脅威や脆弱性について学びます\nSection 6：監視設計\n監視設計とは、監視項目、監視方法について学びます\nSection 7：バックアップ・リストア設計\nバックアップとは、バックアップ方針、方法について学びます\nSection 8：BCP\nBCPとは、ITインフラにおけるBCPについて学びます\nSection 9：おわりに\n\n\nご興味が湧いた方は、下のカリキュラムやプレビュー動画もご覧ください。\n実際にコースでお会いできることを楽しみにしています。\n\n\n【更新記録】\n2022.12 ~ 初版\n2023.2　以下動画内容をアップデートいたしました\n・Section 4：性能設計　－　拡張性\n・Section 6：監視設計　－　監視方法\n・Section 7：バックアップ・リストア設計　－　バックアップ方法\n2023.2　以下動画の音質を修正いたしました\n・Section 2：インフラ設計とは　－　インフラ設計の内容、インフラ設計の工程、このセクションのまとめ\n・Section 3：可用性設計　－　冗長化とは、具体的な対策、このセクションのまとめ\n・Section 4：性能設計　－　性能設計とは、性能の検討要素、このセクションのまとめ\n・Section 5：セキュリティ設計　－　セキュリティとは、ITインフラにおけるセキュリティ、セキュリティを脅かす脅威や脆弱性、セキュリティ設計とは、このセクションのまとめ\n・Section 6：監視設計　－　監視項目、このセクションのまとめ\n・Section 7：バックアップ・リストア設計　－　バックアップとは、バックアップ方針、このセクションのまとめ\n・Section 8：BCP　－　BCPとは、ITインフラにおけるBCP、このセクションのまとめ\n・Section 9：おわりに－　このコースのまとめ\n2023.8　以下内容を追加しました\n・Section 1：Udemyの機能について　テキスト文面にて追記\n・Section 1：まとめ資料配布にて　リソースに資料追加",
      "target_audience": [
        "初心者向けのコースとなっています",
        "設計に関わる基礎知識を学びたい方、学び直したい方",
        "これから上流工程に関わる、もしくは目指しているため、全体イメージを把握したい方",
        "具体的な設計手法や方法を学びたい方には向きません",
        "要件定義から学びたい方には向きません"
      ]
    },
    {
      "title": "Sistema de Inventario de Activos con Visual Basic .NET y SQL",
      "url": "https://www.udemy.com/course/sistemainventarioactivosfijos/",
      "bio": "Programar en visual basic .Net y Sql Server - Desarrollando un sistema de control de inventario de activos fijos",
      "objectives": [
        "Creación de un sistema con Arquitectura Cliente - Servidor con Visual Basic .Net",
        "Conectar Visual Basic .net con Sql Server de Forma Dinamica",
        "Utilizar un Gestor de Base de datos como ser Sql Server",
        "Trabajar con Sql Server",
        "Trabajar con Visual Basic . Net como lenguaje de Programación",
        "Desarrollar un sistema para el control de inventario de Activos en una empresa.",
        "Aprender a trabajar con el Framework .NET",
        "Crear Reportes con Crystal Reports"
      ],
      "course_content": {
        "Introducción": [
          "Herramientas a Utilizar",
          "Sobre El Instructor",
          "Creación del Proyecto",
          "Pasos para realizar preguntas sobre el curso",
          "Crear formulario Principal",
          "Soporte a Estudiantes"
        ],
        "Creación de Base de Datos en SQL Server": [
          "Bienvenidos",
          "Creación de la base de datos",
          "Creación de Usuarios para Autenticación en SQL Server",
          "Creación de Tabla Usuarios en Base de Datos",
          "Creación de Tabla: Departamentos",
          "Creación de Tabla Empleados y Tabla Puestos de Trabajo",
          "Creación de Tabla Artículos y Tabla Marcas",
          "Creación de Tabla: Cargos",
          "Creación de Tabla: Descargos",
          "Modelo Relacional en Bases de Datos"
        ],
        "Conexión a la Base de Datos": [
          "Creación de Modulo y Variables para Conexión a BD",
          "Creación de SubProceso Establecer Conexión",
          "Creación de Función Obtener Conexión"
        ],
        "Configuración Cliente Servidor": [
          "Formulario de Configuración de Servidor",
          "Formulario de Configuración de Servidor - Botón Conectar",
          "Formulario de Configuración de Servidor - Evento Load"
        ],
        "Login - Acceso Al sistema": [
          "Creación del Formulario de Inicio de Sesion",
          "Formulario Login - Boton Aceptar",
          "Ingresando al Sistema",
          "Mostrando datos del usuario Logueado en el sistema"
        ],
        "Modulo de Usuarios": [
          "Introducción al Modulo de Usuarios",
          "Formulario para registro de Usuarios - Parte 1",
          "Formulario para registro de Usuarios - Parte 2",
          "Formulario de Usuarios -Agregando Funciones al Formulario",
          "Formulario de Usuarios - Insertar Usuarios",
          "Mostrar Usuarios Registrados en DataGridview",
          "Mostrar Usuarios : Modificando la Apariencia del DataGridview",
          "Función para buscar Usuarios",
          "Pasar datos del DataGridview a las cajas de texto",
          "Función Editar Usuarios",
          "Función Eliminar Usuarios",
          "Accediendo al Sistema con los diferentes Tipos de Usuarios",
          "Finalizando el Modulo de Usuarios"
        ],
        "Registro Departamentos de la Empresa": [
          "Creación de Tabla: Departamentos",
          "Formulario para registro de Departamentos",
          "Formulario Departamentos - Agregando Funciones al Formulario",
          "Formulario Departamentos - Insertar Datos",
          "Buscar Registros y pasar datos del DataGridview a las cajas de texto",
          "Formulario Departamentos - Editar Datos",
          "Formulario Departamentos - Eliminar Datos"
        ],
        "Modulo de Empleados": [
          "Introducción al Modulo de Empleados",
          "Creación de Tabla: Empleados",
          "Formulario Para Registro de Puestos de Trabajo",
          "Formulario Puestos de Trabajo- Agregando Funciones al Formulario",
          "Formulario Puestos de Trabajo - Insertar Datos",
          "Formulario Puestos de Trabajo - Buscar Registros y pasar datos del DataGridview",
          "Formulario Puestos de Trabajo -Editar Datos",
          "Formulario Puestos de Trabajo -Eliminar Datos",
          "Formulario Para Registro de Empleados",
          "Formulario Registro de Empleados- Agregando Funciones al Formulario",
          "Registro de Empleados- Cargar Información en Combobox - Tabla Departamentos",
          "Registro de Empleados- Cargar Información en Combobox - Tabla Puestos",
          "Registro de Empleados- Autocompletar Combobox",
          "Registro de Empleados- Insertar Datos",
          "Formulario de Empleados - Mostrar Información en DataGridview",
          "Formulario de Empleados - Opciones de Busqueda",
          "Formulario de Empleados - pasar datos del DataGridview a las cajas de texto",
          "Registro de Empleados- Editar Datos",
          "Registro de Empleados - Eliminar Datos",
          "Finalizando el Modulo de Empleados"
        ],
        "Modulo de Activos Fijos": [
          "Creación de Tabla: Articulos",
          "Formulario Para Registro de Marcas",
          "Formulario Para Registro de Marcas- Agregando Funciones al Formulario",
          "Formulario Para Registro de Marcas - Insertar Datos",
          "Formulario Marcas - Buscar Registros y pasar datos del DataGridview a textbox",
          "Formulario Para Registro de Marcas -Editar Datos",
          "Formulario Para Registro de Marcas -Eliminar Datos",
          "Formulario Para Registro de Articulos",
          "Formulario de Artículos- Cargar Información en Combobox - Tabla Marcas",
          "Formulario Para Registro de Artículos- Agregando Funciones a los botones",
          "Formulario Artículos - Insertar Datos",
          "Formulario Artículos - Mostrar datos en DataGridview",
          "Formulario Articulos - Filtrar Datos - Opciones de Búsqueda",
          "Formulario Artículos - Aplicar Formato a Columna de DataGridView",
          "Formulario Artículos - Pasar datos del DataGridview a las cajas de texto",
          "Formulario Artículos - Editar Datos",
          "Formulario Artículos - Eliminar Datos"
        ],
        "Asignación de Activos fijos a Empleados": [
          "Creación de Tabla: Cargo de Activos",
          "Formulario para asignar activos a Empleados",
          "Formulario Asignar Activos - Agregando Funciones al Formulario",
          "Formulario Cargos - Función Autocompletar Caja de texto",
          "Formulario Cargos - Mostrar información en Cajas de texto de consulta SQL",
          "Formulario Cargos - Autocompletar y pasar información a cajas de texto",
          "Formulario Cargos - Insertar Datos",
          "Formulario Cargos - Mostrar Información de Artículos que no se han entregado",
          "Formulario Cargos - Búsqueda de Artículos",
          "Formulario Cargos - Búsqueda de Empleados",
          "Formulario Cargos - Mostrar Activos Fijos en DataGridView",
          "Formulario Cargos - Filtrar Información del DataGridView",
          "Formulario Cargos - Asignar Información del DataGridView a las cajas de texto",
          "Formulario Cargos - Editar Información",
          "Formulario Cargos - Eliminar Información"
        ]
      },
      "requirements": [
        "Conocimientos Basicos de Visual Basic .net",
        "Conocimientos Básicos de SQL",
        "Tener Instalado Visual Studio",
        "Tener Instalado SQL Server (Cualquier versión)"
      ],
      "description": "En este curso aprenderás a desarrollar un sistema para el control de inventarios de activos fijos de una empresa.\nPodrás llevar el control de todos los activos fijos, Podrás saber en cualquier momento el lugar en el que se encuentra asignado cualquier  activo de la empresa.\nAl finalizar el curso ya podrás desarrollar un sistema con la arquitectura Cliente Servidor, significa que el sistema lo puedes utilizar en una Red LAN para poderlo tener en toda la empresa y pueda ser accesado por cualquier empleado que tenga los niveles de acceso para el sistema.\nEl sistema a desarrollar incluye los siguientes Módulos.\nUsuarios\nEmpleados\nDepartamentos (Registrar Departamentos de la empresa)\nArtículos (Activos Fijos)\nMarcas (Registro de Marcas para los activos)\nAsignación de Activos a Empleados\nDar de Baja Activos de Empleados\nReportes\nEntre otras mejoras que se irán realizando\nEl sistema se desarrolla desde cero por lo tanto no se incluye código fuente del sistema final, la idea es que practiques haciendo.\n✔Accede a mi sitio web.",
      "target_audience": [
        "Estudiantes del Area de Programacion",
        "Personas interesadas en crear un sistema para el control de inventario de activos",
        "Personas que quieran mejorar en el mundo de la Programación"
      ]
    },
    {
      "title": "Sıfırdan Full Stack C# .NET Developer Olun! (58+ Saat)",
      "url": "https://www.udemy.com/course/full-stack-dotnet-developer-egitimi/",
      "bio": "Bir Uygulama Tasarımını Front-end ve Back-end Olarak Baştan Sona .Net ile Kodlamayı Öğrenin",
      "objectives": [
        "C# öğrenerek .net ile uygulama geliştirmeyi öğreneceksiniz",
        "Windows Forms ile masaüstü uygulama geliştirmeyi öğreneceksiniz",
        "Sql ve T-Sql ile Sql server veritabanı yönetimini öğreneceksiniz",
        "ADO .NET ile veritabanı CRUD işlemlerini öğreneceksiniz",
        "Entity Framework yaklaşımlarını ve Entity Framework ile veritabanı işlemlerini öğreneceksiniz",
        "HTML, CSS, JavaScript, Jquery, Bootstrap ile Front-end web geliştirmeyi öğreneceksiniz",
        "ASP .NET Web Forms ile web programlamayı öğreneceksiniz",
        "ASP .NET Framework MVC ile web programlamayı öğreneceksiniz",
        "ASP .NET Core MVC ile web programlamayı öğreneceksiniz",
        ".NET Web API ile RESTFUL servis oluşturarak ön yüz bağımsız back-end geliştirmeyi öğreneceksiniz",
        "ASP .NET Core MVC ve Entity Framework Core ile uygulama geliştirmeyi öğreneceksiniz"
      ],
      "course_content": {},
      "requirements": [
        "Programlama deneyimi gerekmez. Bilmeniz gereken her şeyi sıfırdan öğreneceksiniz",
        "Windows işletim sistemli bir PC",
        "Kullanacağımız Visual Studio, Sql Server programlarının bilgisayarınıza kurulabilmesi"
      ],
      "description": "Sizler için hazırlamış olduğum bu kursta sıfırdan herhangi bir programlama bilgisi olmayan birinin programlamanın mantığını kavrayarak masaüstü uygulaması veya web uygulaması  olarak baştan sona kodlayabilir hale getirecek bir eğitim müfredatıyla yazılım geliştirmeyi öğretmeyi hedefledim.\nKursu videolardaki adımları uygulayarak tamamladığınızda size verilen bir tasarımı ön yüz + arka yüz olarak komple kodlayabilirsiniz.\nKursta Neler Öğreneceksiniz?\nProgramlamaya giriş\nVisual Studio kullanımı\nC# programlama diline giriş\nC# ile nesne yönelimli programlama-OOP\nWindows Forms ile masaüstü programı yapma\nMsSQL server Sql, T-SQL ile Veritabanı programlama\nADO .NET ile Veritabanına CRUD-kayıt ekleme, güncelleme, listeleme ve silme işlemleri\nEntity Framework ile CRUD işlemleri\nHTML 5 ile Front-end\nCSS 3 ile webi şekillendirme\nJavaScript\nJQuery & AJAX\nBootstrap ile responsive tasarım\nWeb Forms ile web programlama\nMVC ile web programlama\n.NET MVC WebAPI\n.NET Core ile web programlama\nEntity Framework Core\nBu kursu tamamladıktan sonra eğitim esnasında yazdığımız kodları tam olarak uygularsanız masaüstü veya web programlama için gerekli temel bilgileri edinmiş olacaksınız.\nAlmış olduğunuz bu eğitimle artık herhangi bir firma için windows forms, ASP .NET web forms, ASP .Net Framework MVC, Web API ve ASP .NET Core MVC yaklaşımlarıyla Sql server veritabanı kullanan stok takip uygulaması, sipariş yönetim sistemi, hastane randevu sistemi, yönetim panelli kurumsal web sitesi, e ticaret sitesi gibi bir çok projeyi geliştirebilecek bilgileri edinmiş olacaksınız.\nBununla birlikte proje açığınızı gidermek için diğer eğitimlerim ve destek taleplerinize elimden geldiğince vereceğim yanıtlarla yanınızda olmaya ve sektörün aradığı seviyeye ulaşmanıza yardımcı olmaya çalışacağım.\nBaşarılar.\nMesut ILICA",
      "target_audience": [
        "Full Stack .NET Developer olmak isteyenler",
        "Programlamaya meraklı ve hevesli olmak",
        "Masaüstü uygulama yapmayı öğrenmek isteyenler",
        "Web tasarımcı olmak isteyenler",
        "Veritabanı yönetimini Sql'i ve T-Sql'i öğrenmek isteyenler",
        "ASP .NET ile Web Programlamayı öğrenmek isteyenler",
        "Hem Front-End hem de Back-End kodlamayı isteyenler"
      ]
    },
    {
      "title": "Unix Interview Questions Preparation Course",
      "url": "https://www.udemy.com/course/unix-interview-questions/",
      "bio": "Learn Top 50 popular interview questions on Unix. Save time in Interview preparation.",
      "objectives": [],
      "course_content": {
        "Why should you learn Unix?": [
          "Introduction",
          "Disclaimer"
        ],
        "Unix Interview Questions Part 1": [
          "How will you remove all files in current directory?",
          "What is a Filter in Unix command?",
          "What is Kernel in Unix operating system?",
          "What is a Shell in Unix OS?",
          "What is the first character of the output in ls –l command ?"
        ],
        "Unix Interview Questions Part 2": [
          "What is the difference between Multi-tasking and Multi-user environment?",
          "What is an Inode in Unix?",
          "What are the main responsibilities of a Unix Shell?",
          "What is a Shell variable?",
          "How will you set the value of Environment variables in Unix?"
        ],
        "Unix Interview Questions Part 3": [
          "What are the networking commands in Unix that you have used?",
          "What is a Pipeline in Unix?",
          "How will you count the number of lines and words in a file in Unix?",
          "What is Bash shell?",
          "How will you search for a name in Unix files?"
        ],
        "Unix Interview Questions Part 4": [
          "What is the difference between whoami and who am i commands in Unix?",
          "How will you check the information about a process in Unix?",
          "We wrote a shell script in Unix but it is not doing anything.",
          "How can we run a process in background in Unix?",
          "How does alias work in Unix?"
        ],
        "Unix Interview Questions Part 5": [
          "How can you redirect I/O in Unix?",
          "What are the main steps taken by a Unix Shell for processing a command?",
          "What is a Sticky bit in Unix?",
          "What are the different outputs from Kill command in Unix?",
          "How will you customize your environment in Unix?"
        ],
        "Unix Interview Questions Part 6": [
          "What are the popular commands for user management in Unix?",
          "How will you debug a shell script in Unix?",
          "How will you check if a remote host is still alive?",
          "How will you get the last executed command in Unix?",
          "How will you find which process is taking most CPU time in Unix?"
        ],
        "Unix Interview Questions Part 7": [
          "How will you find which processes are using a file?",
          "What is the purpose of nohup in Unix?",
          "How will you remove blank lines from a file in Unix?",
          "Find the remote hosts that are connecting to your system on a port.",
          "What is xargs in Unix?",
          "Bonus Lecture: What next?"
        ]
      },
      "requirements": [
        "Software Development Exposure",
        "Some familiarity with Unix"
      ],
      "description": "This course contains Top 50 Unix interview questions that are asked in a technical interview. The focus is on commands and concepts inside Unix. It is an important topic for a software developer to know about Unix.\nIt is a compilation of advanced Unix interview questions after attending dozens of technical interviews in top-notch companies like- Oracle, Google, Ebay, Amazon etc. Each question is accompanied with an answer so that you can prepare for job interview in short time.\nOften, these questions and concepts are used in our daily programming work. But these are most helpful when an Interviewer is trying to test your deep knowledge of Unix concepts.\nWhat are the topics covered in this course?\nWe cover a wide range of topics in this course. We have questions on Unix commands, concepts etc.\nHow will this course help me?\nBy attending this course, you do not have to spend time searching the Internet for Unix interview questions. We have already compiled the list of the most popular and the latest Unix Interview questions.\nAre there answers in this course?\nYes, in this course each question is followed by an answer. So you can save time in interview preparation.\nWhat is the best way of viewing this course?\nYou have to just watch the course from beginning to end. Once you go through all the videos, try to answer the questions in your own words. Also mark the questions that you could not answer by yourself. Then, in second pass go through only the difficult questions. After going through this course 2-3 times, you will be well prepared to face a technical interview in Unix topic.\nWhat is the level of questions in this course?\nThis course contains questions that are good for a Fresher to an Architect level. The difficulty level of question varies in the course from a Fresher to an Experienced professional.\nWhat are the sample questions covered in this course?\nSample questions covered in this course are as follows:\nHow will you remove all files in current directory? Including the files that are two levels down in a sub-directory.\nWhat is the difference between the –v and –x options in Bash shell scripts?\nWhat is a Filter in Unix command?\nWhat is Kernel in Unix operating system?\nWhat is a Shell in Unix OS?\nWhat are the different shells in Unix that you know about?\nWhat is the first character of the output in ls –l command ?\nWhat is the difference between Multi-tasking and Multi-user environment?\nWhat is an Inode in Unix?\nWhat is the difference between absolute path and relative path in Unix file system?\nWhat are the main responsibilities of a Unix Shell?\nWhat is a Shell variable?\nWhat are the important Shell variables that are initialized on starting a Shell?\nHow will you set the value of Environment variables in Unix?\nWhat is the difference between a System Call and a library function?\nWhat are the networking commands in Unix that you have used?\nWhat is a Pipeline in Unix?\nWhat is the use of tee command in Unix?\nHow will you count the number of lines and words in a file in Unix?\nWhat is Bash shell?\nHow will you search for a name in Unix files?\nWhat are the popular options of grep command in Unix?\nWhat is the difference between whoami and who am i commands in Unix?\nWhat is a Superuser in Unix?\nHow will you check the information about a process in Unix?\nWhat is the use of more command with cat command?\nWhat are the File modes in Unix?\nWe wrote a shell script in Unix but it is not doing anything. What could be the reason?\nWhat is the significance of 755 in chmod 755 command?\nHow can we run a process in background in Unix? How can we kill a process running in background?\nHow will you create a read only file in Unix?\nHow does alias work in Unix?\nHow can you redirect I/O in Unix?\nWhat are the main steps taken by a Unix Shell for processing a command?\nWhat is a Sticky bit in Unix?\nWhat are the different outputs from Kill command in Unix?\nHow will you customize your environment in Unix?\nWhat are the popular commands for user management in Unix?\nHow will you debug a shell script in Unix?\nWhat is the difference between a Zombie and Orphan process in Unix?\nHow will you check if a remote host is still alive?\nHow will you get the last executed command in Unix?\nWhat is the meaning of “2>&1” in a Unix shell?\nHow will you find which process is taking most CPU time in Unix?\nWhat is the difference between Soft link and Hard link in Unix?\nHow will you find which processes are using a file?\nWhat is the purpose of nohup in Unix?\nHow will you remove blank lines from a file in Unix?\nHow will you find the remote hosts that are connecting to your system on a specific port in Unix?\nWhat is xargs in Unix?",
      "target_audience": [
        "Software Engineer, Sr. Software Engineer, Member Technical Staff, Expert",
        "Operations Engineer, DevOps Engineer",
        "Software Architect, Development Manager",
        "Anyone who wants to learn Unix interview questions"
      ]
    },
    {
      "title": "Advanced JUnit testing with PowerMock and PowerMockito",
      "url": "https://www.udemy.com/course/advanced-junit-testing-with-powermock-and-powermockito/",
      "bio": "Become a JUnit master in just half an hour!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Intro and course content",
          "Setting up the development environment - Eclipse"
        ],
        "Hard to test code": [
          "Examples of hard to test code"
        ],
        "Mocking instance methods": [
          "Creating a class to be tested",
          "Mocking instance methods without PowerMockito",
          "Mocking instance methods using PowerMockito, introducing Maven features"
        ],
        "Mocking static methods and partial mocking": [
          "Mocking static methods",
          "Partial mocking using spy"
        ],
        "Mocking private or scope variables": [
          "Mocking private variables",
          "Mocking scope variables"
        ],
        "Suppressing constructors or static blocks": [
          "Supressing constructors",
          "Supressing static initializer blocks"
        ],
        "Appendix": [
          "Cook book"
        ]
      },
      "requirements": [
        "This course is about developers who feel comfortable with Java Standard Edition, Eclipse IDE and have just a bit of experience with Junit testing."
      ],
      "description": "Hello and welcome to this video course on Advanced Junit Testing!\nDo you want to write better Java code that can be unit testable, with little or no effort at all? I will show you all the tricks that can get you from beginner to mastery, in just half an hour!\n\nThere are many mocking frameworks out there, and I will be showing you Mockito, PowerMockito and PowerMock, as I believe that they are easy to use, super human-readable, and you can cover most of the junit testing needs with them.\nAfter you have covered all the topics and you are still hungry for more, just send me a message and I will get back to you in no time!",
      "target_audience": [
        "Developers who already have an understanding of core Java Programming concepts and a bit of Junit testing."
      ]
    },
    {
      "title": "Crack Solidity Interviews in 2 Hours – 120 Practice MCQs",
      "url": "https://www.udemy.com/course/crack-solidity-interview/",
      "bio": "Test Your Solidity Knowledge with 120 Real Interview Questions",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Prepare to crack Solidity interviews in just 2 hours! This course offers 120 carefully crafted multiple-choice questions (MCQs) that cover everything you need to succeed in Solidity and Ethereum smart contract interviews.\nWhether you are a beginner, a self-taught blockchain enthusiast, or a junior developer looking to land your first Solidity developer role, this course provides a fast, structured, and effective way to test your knowledge and sharpen your skills.\nCourse Highlights:\nComprehensive Solidity Coverage: Practice questions range from basic data types, functions, and control structures to advanced concepts like inheritance, libraries, interfaces, and function modifiers.\nSmart Contract Best Practices: Learn about gas optimization, error handling, and security patterns that are crucial for real-world Solidity development.\nEthereum Fundamentals: Gain familiarity with transactions, events, msg.sender, msg.value, storage vs memory, and the EVM execution model.\nSecurity Focused Questions: Understand common vulnerabilities like reentrancy attacks, integer overflow/underflow, and access control issues in Solidity smart contracts.\nReal-World Scenarios: MCQs are designed to simulate questions asked in actual Solidity and Ethereum developer interviews, helping you prepare effectively.\nTime-Efficient Learning: Complete all 120 questions in about 2 hours, making it perfect for fast-paced interview prep.\nBeginner to Advanced: Suitable for learners at any level, whether you are just starting with Solidity or refreshing your knowledge before an interview.\nConfidence Boost: Identify weak areas in your Solidity understanding and focus on high-priority topics to maximize your performance.\nPractice for Multiple Roles: Ideal for roles like Solidity developer, Ethereum smart contract developer, blockchain engineer, and blockchain enthusiast preparing for technical interviews.\nBy completing this course, you will test your Solidity knowledge, identify gaps, and gain the confidence to succeed in interviews for Solidity and Ethereum developer positions.\nEnroll now to accelerate your Solidity interview preparation and take the fastest path to mastering Solidity smart contracts and Ethereum development!",
      "target_audience": [
        "Aspiring Solidity developers preparing for blockchain or Ethereum smart contract interviews.",
        "Junior developers looking to strengthen their Solidity fundamentals.",
        "Students or self-learners wanting a fast, structured practice session before interviews.",
        "Developers aiming to improve their knowledge of smart contract best practices and security."
      ]
    },
    {
      "title": "400+ Data Structure Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/data-structure-interview-questions/",
      "bio": "Data Structure Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Data Structure Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the most comprehensive practice test course on Data Structures, meticulously designed for anyone aspiring to ace technical interviews and assessments!\nWhether you are a student, a software engineer, or an IT professional preparing for job interviews, this course is tailored to strengthen your understanding of data structures - a fundamental area in computer science and programming interviews. Our course is packed with high-quality, realistic interview questions and practice tests, covering all essential data structures. Dive into our expansive resource and transform your preparation journey into an enriching learning experience.\n1. Arrays and Strings\nDive into the Foundation of Data Structures\nBasics of Arrays: Understand array structure, memory allocation, and basic operations.\nMultidimensional Arrays: Explore complex data storage and manipulation.\nStrings and Character Arrays: Master operations and algorithms related to strings.\nArray Manipulations: Learn advanced techniques like insertion and deletion.\nSearching and Sorting: Implement and understand linear, binary search, and basic sorting algorithms.\nDynamic Arrays: Delve into resizable arrays and their applications.\nArray Challenges: Confront real interview questions to test your array problem-solving skills.\n2. Linked Lists\nExplore the Dynamics of Linear Data Structures\nSingly and Doubly Linked Lists: Grasp the basics and advanced concepts of linked lists.\nCircular Linked Lists: Understand their unique structure and uses.\nCore Operations: Master insertion, deletion, and traversal in linked lists.\nSearching and Sorting: Apply these fundamental algorithms in a linked list context.\nPointer Techniques: Solve problems using slow and fast pointer methods.\nReversing Linked Lists: Learn various techniques to reverse linked lists.\nCycle Detection: Implement algorithms to detect cycles, a common interview challenge.\n3. Stacks and Queues\nMaster LIFO and FIFO Structures\nStack Basics: Understand implementation and uses of stacks.\nQueue Foundations: Grasp the structure and applications of queues.\nCircular Queues: Learn about their functionality and advantages.\nApplications: Explore real-world uses of stacks and queues in computing.\nStack and Queue Challenges: Solve interview-styled questions focusing on these structures.\n4. Trees and Graphs\nNavigate Through Hierarchical and Network Data Structures\nTree Basics: Understand different types of trees and their properties.\nTree Traversals: Learn in-order, pre-order, and post-order traversals.\nGraph Theory: Grasp the fundamentals of graph data structures.\nGraph Traversals: Master depth-first and breadth-first search.\nAdvanced Trees and Graphs: Tackle questions on heaps, AVL trees, and more.\nPathfinding Algorithms: Solve problems using Dijkstra’s and Bellman-Ford algorithms.\n5. Hashing\nUnlock Efficient Data Retrieval\nHashing Fundamentals: Understand hash functions and their importance.\nCollision Resolution: Learn techniques to handle collisions in hashing.\nHash Table Implementation: Explore the internal workings of hash tables.\nHashing Applications: Solve practical problems using hashing.\nAdvanced Hashing Techniques: Dive into consistent hashing and load balancing.\n6. Advanced Data Structures\nChallenge Yourself with Complex Structures\nTries and Suffix Trees: Understand these specialized tree structures.\nDisjoint Sets: Learn about union-find operations.\nSegment Trees: Explore their usage in range queries.\nSpatial Structures: Delve into quad-trees and KD-trees.\nSkip Lists and Bloom Filters: Understand these probabilistic structures and their applications.\nStay Current with Regularly Updated Questions\nIn the dynamic field of technology, staying current is crucial. That's why our course is specially designed with the future in mind:\nContinuous Updates: We regularly update our practice tests with new questions, reflecting the latest trends and changes in technical interviews.\nUp-to-Date Content: Our commitment is to provide you with the most relevant and current interview questions, ensuring you're always a step ahead.\nPreview Our Course with 5 Sample Practice Test Questions\nTo give you a taste of what our course offers, here are five sample practice test questions. Each question is followed by a set of options and detailed explanations to enhance your understanding.\n1. What is the time complexity of accessing an element in an array?\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n^2)\nCorrect Answer: A) O(1) Explanation: Accessing an element in an array is a constant time operation, denoted as O(1). This is because arrays have contiguous memory allocation, allowing instant access to any element using its index. Unlike operations such as searching or sorting, accessing does not depend on the array's size, hence the time complexity remains constant.\n2. Which of the following is not a characteristic of a Hash Table?\nA) Fast data retrieval\nB) Ordered data structure\nC) Efficient in handling collisions\nD) Key-value pair storage\nCorrect Answer: B) Ordered data structure Explanation: Hash tables are known for fast data retrieval, efficient collision handling, and storing data in key-value pairs. However, they are not ordered data structures. The order of elements in a hash table is determined by the hash function and does not reflect any inherent sequence or ordering of the elements themselves.\n3. In a binary search tree (BST), which of the following statements is always true?\nA) The left subtree contains only nodes with values less than the tree's root value.\nB) The right subtree contains only nodes with values greater than the tree's root value.\nC) Every subtree is itself a binary search tree.\nD) All of the above\nCorrect Answer: D) All of the above Explanation: In a BST, all three statements are true. The left subtree of any node contains only nodes with values less than the node's value. Similarly, the right subtree has nodes with values greater. Moreover, each subtree in a BST adheres to this rule, making every subtree a BST in itself. This property is what makes BSTs efficient for operations like searching, inserting, and deleting.\n4. Which of the following data structures is best suited for implementing a Queue?\nA) Array\nB) Linked List\nC) Stack\nD) Tree\nCorrect Answer: B) Linked List Explanation: While a queue can be implemented using an array or a linked list, the latter is generally more efficient, especially for dynamic data. A linked list facilitates easier and more efficient insertions and deletions (enqueue and dequeue operations) at both ends of the queue, as it does not require shifting elements like in an array. Stacks and trees are not typically used for implementing queues due to their LIFO and hierarchical nature, respectively.\n5. Which algorithm is not a Divide and Conquer algorithm?\nA) QuickSort\nB) MergeSort\nC) Binary Search\nD) Linear Search\nCorrect Answer: D) Linear Search Explanation: Divide and conquer is an algorithmic paradigm where a problem is divided into smaller subproblems, solved independently, and then combined. QuickSort, MergeSort, and Binary Search are classic examples of divide and conquer algorithms. However, Linear Search does not follow this paradigm. It operates by sequentially checking each element of the list until a match is found or the list ends, thus not dividing the problem into smaller parts.",
      "target_audience": [
        "Computer Science Students: Whether you're an undergraduate, a graduate student, or even a high school student with a keen interest in computer science, this course will solidify your understanding of data structures, a cornerstone of your academic curriculum.",
        "Bootcamp Graduates and Self-Taught Programmers: If you've learned programming through coding bootcamps or self-study and are looking to strengthen your understanding of data structures for better job opportunities, this course is ideal for you.",
        "Job Seekers in Tech: If you're preparing for technical interviews, especially for positions in software development, this course offers targeted practice to help you excel in the data structures questions that are a staple of tech interviews.",
        "Experienced Professionals Seeking Advancement: For those already in the tech industry looking to move into more advanced roles or refresh their knowledge, this course provides an excellent opportunity to brush up on data structures.",
        "Educators and Tutors in Computer Science: If you're teaching computer science or programming, this course can serve as a supplementary resource to aid in preparing lesson plans or to provide additional practice material for your students."
      ]
    },
    {
      "title": "Telegram Chatbot with Nodejs and Cloudflare",
      "url": "https://www.udemy.com/course/telegram-bot-with-nodejs-and-cloudflare/",
      "bio": "Serverless Nodejs application: Telegram chatbot.",
      "objectives": [
        "Build Telegram Chatbot from scratch",
        "Create a real-world Serverless project using Nodejs",
        "Learn the basics of the Cloudflare platform (Worker, D1 SQL Database)",
        "Deploy Telegram Chatbot on Cloudflare (for free)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Initial setup": [
          "Obtain Telegram bot token",
          "Set up Cloudflare worker",
          "Add token to worker environment",
          "Set webhook to the bot",
          "Configure initial worker logic",
          "Send first message to the bot!"
        ],
        "'users' table and /start command": [
          "Create database and bind it to the worker",
          "Create 'users' table",
          "Create worker 'sendMessage' method",
          "Handle /start command",
          "Test /start command"
        ],
        "'reasons' table & /grateful command": [
          "Create 'reasons' table",
          "Handle /grateful command",
          "Test /grateful command"
        ],
        "/edit command": [
          "Handle /edit command",
          "Test /edit command"
        ],
        "/history command": [
          "Handle /history command",
          "Test /history command"
        ],
        "/commands command & unknown command": [
          "Handle /commands command",
          "Test /commands command",
          "Handle unknown command"
        ],
        "Input error handlers": [
          "Handle input validation for /grateful command",
          "Handle input validation for /edit command",
          "Handle input validation for /history command"
        ],
        "The end": [
          "Thank you and good luck with your future endeavors!"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript"
      ],
      "description": "Modern and beginner-friendly course that will give you a good understanding of:\nChatbot Development\nServerless Architecture\nSQL\nHere you will build your own chatbot using JavaScript (Nodejs) and host it for free on Cloudflare (free tier). This is an excellent opportunity to expand your knowledge of chatbots and have one running 24/7 for anyone who wants to interact with it.\n\n\nWe start the course by configuring the environment in Cloudflare, followed by adding commands and testing them. The steps are simple and straightforward, so you will not have to spend a lot of time trying to understand how to make things work. By the end of the course, you will have hands-on experience building a Telegram chatbot + 1 chatbot added to the arsenal of things you have built in your career.\n\n\nBots are small applications that run entirely within the Telegram app. Users interact with bots through flexible interfaces that can support any kind of task or service. There are a lot of things that bots can do, and here are a few of them:\nReplace Entire Websites\nManage Your Business\nReceive Payments\nCreate Custom Tools\nIntegrate with Services and Devices\nHost Games\nBuild Social Networks\nMonetize Your Service\nPromote Your Project\nAnything Else!",
      "target_audience": [
        "Beginner to advanced JavaScript developers curious about chatbot development and/or Cloudflare platform"
      ]
    },
    {
      "title": "650+ ElasticSearch Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/650-elasticsearch-interview-questions-practice-test/",
      "bio": "ElasticSearch Interview Questions and Answers Preparation Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "ElasticSearch Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nAre you preparing for an ElasticSearch interview and looking to ace it with flying colors? Look no further! Our comprehensive ElasticSearch Interview Questions Practice Test course is designed to equip you with the knowledge and confidence you need to excel in any ElasticSearch-related interview.\nSection 1: Basics of ElasticSearch\nIntroduction to ElasticSearch: Get acquainted with the fundamentals of ElasticSearch, its architecture, and its role in modern data management systems.\nInstallation and Setup: Learn how to install and set up ElasticSearch on various platforms for seamless integration into your workflow.\nData Indexing: Understand the process of indexing data into ElasticSearch, including best practices and common pitfalls.\nData Retrieval: Explore different techniques for retrieving data from ElasticSearch efficiently.\nCluster Configuration: Dive into cluster configuration options and strategies for optimal performance.\nREST API Basics: Master the basics of ElasticSearch's REST API for interacting with your data programmatically.\nSection 2: Data Indexing and Searching\nIndexing Data: Learn the ins and outs of indexing data in ElasticSearch, including document mapping and indexing strategies.\nDocument Mapping: Understand how document mapping influences data indexing and searching in ElasticSearch.\nSearching Data: Explore various search techniques and query types available in ElasticSearch for precise data retrieval.\nQuery DSL (Domain Specific Language): Get hands-on experience with ElasticSearch's powerful Query DSL for crafting complex search queries.\nFull-text Search: Master the art of full-text search in ElasticSearch to efficiently search across large volumes of text data.\nTerm-level Queries: Learn about term-level queries and their applications in ElasticSearch for fine-grained data retrieval.\nSection 3: Advanced Searching and Analysis\nAggregations: Discover the power of aggregations in ElasticSearch for performing advanced data analysis and visualization.\nSorting and Pagination: Learn how to sort and paginate search results effectively to meet specific requirements.\nHighlighting: Explore the highlighting feature in ElasticSearch for emphasizing search query matches in retrieved documents.\nFuzzy Matching: Understand fuzzy matching and its role in handling typos and approximate matching in ElasticSearch.\nGeo Queries: Dive into geo queries in ElasticSearch for location-based searching and analysis.\nScripting and Custom Scoring: Gain proficiency in scripting and custom scoring to tailor search results according to your needs.\nSection 4: Cluster Management and Optimization\nCluster Health Monitoring: Learn how to monitor the health and performance of ElasticSearch clusters for proactive maintenance.\nShard Allocation and Replica Management: Understand shard allocation and replica management strategies for optimizing cluster performance and resilience.\nCluster Scaling: Explore techniques for scaling ElasticSearch clusters to handle increasing data volumes and traffic.\nPerformance Tuning: Discover tips and tricks for fine-tuning ElasticSearch performance to meet specific performance requirements.\nBackup and Restore: Master the art of backing up and restoring data in ElasticSearch to safeguard against data loss.\nSecurity and Access Control: Learn about ElasticSearch security features and best practices for securing your data and cluster infrastructure.\nSection 5: Data Modeling and Analysis\nData Modeling Best Practices: Understand best practices for data modeling in ElasticSearch to ensure efficient data storage and retrieval.\nAnalyzing Data with Kibana: Learn how to leverage Kibana for powerful data visualization and analysis in conjunction with ElasticSearch.\nData Pipeline Integration: Explore techniques for integrating ElasticSearch into your data pipeline for seamless data flow and analysis.\nReal-time Data Streaming: Discover how to stream real-time data into ElasticSearch for immediate analysis and insights.\nTime-series Data Handling: Master the handling of time-series data in ElasticSearch for analyzing temporal trends and patterns.\nMachine Learning Integration: Explore integration options for incorporating machine learning capabilities into your ElasticSearch workflows for predictive analysis and anomaly detection.\nSection 6: Integration and Ecosystem\nIntegration with Logstash: Learn how to integrate ElasticSearch with Logstash for centralized logging and data processing.\nIntegration with Beats: Explore integration options for ElasticSearch with Beats for lightweight data shippers.\nIntegration with Kafka: Understand how to integrate ElasticSearch with Kafka for real-time data streaming and processing.\nIntegration with Spark: Discover techniques for integrating ElasticSearch with Apache Spark for distributed data processing and analysis.\nIntegration with Hadoop: Learn how to integrate ElasticSearch with Hadoop for scalable data processing and analysis.\nIntegration with Other Data Stores: Explore integration options for ElasticSearch with other data stores such as MongoDB and MySQL for seamless data synchronization and analysis.\nDon't miss out on this opportunity to sharpen your ElasticSearch skills and ace your next interview! Enroll now and take the first step towards becoming an ElasticSearch expert.",
      "target_audience": [
        "Aspiring Data Engineers: Individuals who aspire to become proficient in ElasticSearch as part of their journey into the field of data engineering. Whether you're just starting out or looking to enhance your skill set, this course will equip you with the knowledge and practical experience needed to succeed.",
        "Database Administrators: Database administrators seeking to expand their expertise into the realm of ElasticSearch will find this course invaluable. Learn how to leverage ElasticSearch's powerful features for efficient data indexing, searching, and analysis, enhancing your capabilities as a database professional.",
        "Software Developers: Software developers interested in integrating ElasticSearch into their applications for robust search functionality and data analysis will benefit greatly from this course. Gain the skills to effectively utilize ElasticSearch's RESTful API and integration options with popular frameworks and tools.",
        "Data Analysts and Scientists: Data analysts and scientists looking to harness the power of ElasticSearch for real-time data analysis, visualization, and machine learning integration will find this course essential. Learn how to leverage ElasticSearch's capabilities to uncover insights and drive informed decision-making.",
        "IT Professionals: IT professionals responsible for managing and optimizing ElasticSearch clusters within their organization will find this course instrumental. Enhance your cluster management skills and ensure optimal performance, scalability, and security of ElasticSearch deployments."
      ]
    },
    {
      "title": "Software Engineering for Beginners",
      "url": "https://www.udemy.com/course/software-engineering-for-beginners/",
      "bio": "Understand what it means to become a Software Engineer",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No prior experience needed, just a computer, tablet, or mobile device to watch the content."
      ],
      "description": "If you're thinking of becoming a Software Engineer but would like to understand more what exactly the work entails before making the jump to learn all of the technical skills, then this is the course for you.\n\nIn this course you'll get a broad overview of what exactly a Software Engineer does, and what their normal set of tasks look like.\n\nYou'll then also get a broad overview of how tech apps look like behind the scenes,  by looking at all of the different components that make up a tech app, as well as also how this picture evolves with time. Then we'll take a closer look into an individual service to see what components would make up a service that's part of this app.\n\n\nAt the end of this course you'll walk away with a clearer understanding of what exactly your work tasks would look like as a Software Engineer, as well as a broad understanding of the things you would be building and how those would look like.\n\n\nThe course does not include any coding examples and is purely meant to provide you with a better high-level overview of Software Engineering, so that you can make a more informed decision about wether or not this sounds like a field you'd be interested in pursuing.",
      "target_audience": [
        "Anyone curious about becoming a Software Engineer"
      ]
    },
    {
      "title": "Build Self Checkout Machine & Virtual Keyboard with OpenCV",
      "url": "https://www.udemy.com/course/build-self-checkout-machine-virtual-keyboard-with-opencv/",
      "bio": "Learn how to build self checkout machine and virtual keyboard using OpenCV, CNN, Keras, Tkinter, and MediaPipe",
      "objectives": [
        "Learn how to build self checkout machine using OpenCV and Tkinter",
        "Learn how to build virtual keyboard using OpenCV, Tkinter and MediaPipe",
        "Learn how to train self checkout model using Convolutional Neural Networks and Keras",
        "Learn how to integrate virtual keyboard to self checkout machine",
        "Learn how to create training data consisting of product images and products informations like product ID, product name, price, and discount",
        "Learn how to create function to load product images from training data",
        "Learn how to create function to detect object and recognize product",
        "Learn how to create function for payment processing simulation",
        "Learn how to design custom virtual keyboard layout",
        "Learn how to integrate hand tracking and detection system to virtual keyboard",
        "Learn how to design simple graphical user interface and create button using Tkinter",
        "Learn about self checkout machine and retail automation, such as getting to know its use cases, technical limitations, and technologies that will be used",
        "Learn how self checkout machines work. This section covers training data creation, preprocessing, model training, product scanning, extracting product details",
        "Learn about virtual keyboard and how this technology enables users to type in using finger movement without physically touching the keyboard",
        "Learn how to activate webcam using OpenCV",
        "Learn how to conduct performance testing on self checkout machine and virtual keyboard",
        "Learn how to build price tag scanner using Tesseract OCR",
        "Learn how to detect object using Pytorch and RetinaNet"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Table of Contents",
          "Whom This Course is Intended for?"
        ],
        "Tools, IDE, and Datasets": [
          "Tools, IDE, and Datasets"
        ],
        "Introduction to Self Checkout Machine": [
          "Introduction to Self Checkout Machine"
        ],
        "How Self Checkout Machine Works?": [
          "How Self Checkout Machine Works?"
        ],
        "Installing OpenCV, Pandas, Numpy, MediaPipe, Keras and Tkinter": [
          "Installing OpenCV, Pandas, Numpy, MediaPipe, Keras and Tkinter"
        ],
        "Creating Training Data": [
          "Creating Training Data"
        ],
        "Activating Webcam Using OpenCV": [
          "Activating Webcam Using OpenCV"
        ],
        "Creating Function to Load Product Images From Training Data": [
          "Creating Function to Load Product Images From Training Data"
        ],
        "Training Self Checkout Machine with Convolutional Neural Network & Keras": [
          "Training Self Checkout Machine with Convolutional Neural Network & Keras"
        ],
        "Creating Function to Detect Object & Recognize Product": [
          "Creating Function to Detect Object & Recognize Product"
        ]
      },
      "requirements": [
        "No previous experience in computer vision is required",
        "Basic knowledge in Python and object detection"
      ],
      "description": "Welcome to Building Self Checkout Machine & Virtual Keyboard with OpenCV course. This is a comprehensive project based course where you will learn step by step on how to build a fully automated self checkout system and interactive virtual keyboard using OpenCV, Keras, Convolutional Neural Networks, Media Pipe, and Tkinter. This course is a perfect combination between computer vision and object detection, making it an ideal opportunity to practice your programming skills while improving your technical knowledge in retail automation. In the introduction session, you will learn the basic fundamentals of the self checkout system, such as getting to know its use cases, technologies that will be used, and some technical challenges. Then, in the next section, you will learn how the self checkout machine works. This section will cover data collection, preprocessing, model training, object detection, matching the product to the dataset, displaying product name and price. Afterward, we will create training data which will consist of one folder containing product images and an excel file containing product information like product ID, product name, price, and discount. Once, everything is all set, we will start the first project, firstly, we will train the self checkout model using CNN and Keras, after that we will build simple user interface using Tkinter and we will also embed OpenCV webcam to the interface, once the camera has been activated, the user will be able to scan products and the system will automatically calculate the total price. In addition, we will also create a simple payment simulation where users can enter the payment amount and the system will check if the entered payment amount is more than the total price, if yes, then it will display the change but if the entered payment amount is less than total price, the system will ask the user to enter the right amount. Meanwhile, in the second project section, we will build an interactive virtual keyboard using OpenCV and Media Pipe. This system will be able to recognise hand gestures and provide users with touchless typing experience. After building these two models, we will be conducting testing to make sure these models have been fully functioning and all logics have been implemented correctly. Lastly, at the end of the course, we will integrate the virtual keyboard to a self checkout machine, enabling users to scan products and complete payments by entering the payment amount directly on the virtual keyboard using a hand gesture, ensuring a smooth and efficient checkout experience.\nFirst of all, before getting into the course, we need to ask ourselves this question: why should we build an automated self checkout machine and virtual keyboard? Well, here is my answer, long queues and slow checkout processes in retail can frustrate customers and affect store efficiency. Building an automated self-checkout machine and a virtual keyboard can greatly enhance the retail experience by streamlining transactions and improving customer satisfaction. The self-checkout machine speeds up the checkout process, reduces wait times, and minimizes the need for human labors, leading to increased operational efficiency. Meanwhile, the virtual keyboard offers a touchless input method, enhancing hygiene and convenience in high traffic environments. Moreover, by building these innovative projects, you will gain valuable skills in automation that are transferable across various industries.\nBelow are things that you can expect to learn from this course:\nLearn about self checkout machine and retail automation, such as getting to know its use cases, technical limitations, and technologies that will be used\nLearn how self checkout machines work. This section will cover training data creation, preprocessing, model training, product scanning, displaying product information, and payment\nLearn about virtual keyboard and how this technology enables users to type in using finger movement without physically touching the keyboard\nLearn how to create training data consisting of product images and products informations like product ID, product name, price, and discount\nLearn how to activate webcam using OpenCV\nLearn how to create function to load product images from training data\nLearn how to train self checkout model using Convolutional Neural Network and Keras\nLearn how to build self checkout machine using OpenCV and Tkinter\nLearn how to create function to detect object and recognize product\nLearn how to create function for payment processing simulation\nLearn how to design custom virtual keyboard layout\nLearn how to integrate hand tracking and detection system to virtual keyboard\nLearn how to build virtual keyboard using OpenCV, Tkinter and MediaPipe\nLearn how to design simple graphical user interface and create button using Tkinter\nLearn how to conduct performance testing on self checkout machine and virtual keyboard\nLearn how to integrate virtual keyboard to self checkout machine\nLearn how to build price tag scanner using Tesseract OCR\nLearn how to detect object using Pytorch and RetinaNet",
      "target_audience": [
        "People who are interested in building self checkout machine and virtual keyboard using OpenCV and MediaPipe",
        "People who are interested in leveraging computer vision and object detection for retail automation"
      ]
    },
    {
      "title": "Data Structures and Algorithms for Coding Interview",
      "url": "https://www.udemy.com/course/python-coding-interview-practice-intermediate-level/",
      "bio": "Advance your Software Engineering or Data Science Career by Learning Algorithms through Programming and Puzzle Solving",
      "objectives": [
        "Become a better developer by mastering computer science fundamentals",
        "Use the right Data Structures and Algorithms to pass coding interview questions that have the optimal solution",
        "Learn how to use Python tools to solve exercises using strings, lists, tuples, dictionaries, conditionals, loops, recursion, files, and more.",
        "Check your solutions with detailed step-by-step video lectures that explain how to solve each challenge."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Problem 1: Move Zeros": [
          "Move Zeros Problem"
        ],
        "Problem 2: Reverse String": [
          "Reverse String Problem"
        ],
        "Problem 3: Invert Binary Tree": [
          "Invert Binary Tree"
        ],
        "Problem 4: Best Time to Buy and Sell Stock": [
          "Best Time to Buy and Sell Stock"
        ],
        "Problem 5: Happy Number": [
          "Happy Number"
        ],
        "Problem 6: Search in a Binary Search Tree": [
          "Search in a Binary Search Tree"
        ],
        "Problem 7: Single Number": [
          "Single Number"
        ],
        "Problem 8: Plus One": [
          "Plus One"
        ],
        "Problem 9: Jewels and Stones": [
          "Jewels and Stones"
        ]
      },
      "requirements": [
        "Knowledge of Python fundamentals",
        "I will use Jupyter notebook during the course, but you can use any IDE of your choice to write and run your code."
      ],
      "description": "HI THERE!\nA good algorithm usually comes together with a set of good data structures that allow the algorithm to manipulate the data efficiently. In this online course, we consider the common data structures that are used in various computational problems. You will learn how these data structures are implemented in different programming languages and will practice implementing them in our programming assignments. This will help you to understand what is going on inside a particular built-in implementation of a data structure and what to expect from it. You will also learn typical use cases for these data structures.\nA FEW EXAMPLES OF QUESTIONS THAT WE ARE GOING TO COVER IN THIS COURSE:\nWhat is a good strategy of resizing a dynamic array?\nHow priority queues are implemented in C++, Java, and Python?\nHow to implement a hash table so that the amortized running time of all operations is O(1) on average?\nWhat are good strategies to keep a binary tree balanced?\nWHAT YOU WILL LEARN\nExplain the principles of data structures & how they are used\nCreate programs that are able to read and write data from files\nStore data as key/value pairs using Python dictionaries\nAccomplish multi-step tasks like sorting or looping using tuples\nSKILLS YOU WILL GAIN\nPython Syntax And Semantics\nData Structure\nTuple\nPython Programming\nGOOD LUCK!",
      "target_audience": [
        "if you want to work a Facebook, Google, Amazon, Microsoft, Apple, Netflix or other top tech companies",
        "University students who wish to develop their problem-solving and computational-thinking skills"
      ]
    },
    {
      "title": "Graphical User Interface",
      "url": "https://www.udemy.com/course/graphical-data/",
      "bio": "Programming in Practice - External Data Management - Graphical Data",
      "objectives": [
        "You will review applied environment related to C#, Visual Studio, and GitHub",
        "You will be familiar with inter-layer communication, addressing data context, and binding concepts",
        "You will understand an interactive and reactive user interface",
        "You will review XAML and its role in User Interface (UI) design",
        "You will explore data entry and user interoperability topics",
        "You will understand the Model View and ViewModel (MVVM) design pattern",
        "You will reanalyze a program bootstrap topic",
        "You will take another look at a reflection"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Intangible Assets"
        ],
        "Graphical Data": [
          "Graphical User Interface (GUI)",
          "Program Design Pattern",
          "User Interface Description"
        ]
      },
      "requirements": [
        "You should clone the mpostol/TP GitHub repository on your computer and make sure you can open, build, and test the ExDataManagement solution",
        "It is not necessary but should be helpful to pass the course Programming in Practice - Executive Summary",
        "You should be familiar with programming fundamentals and understand the following terms: partials, reflection, bootstrap, value type, reference types, class, interface, etc",
        "No programming experience is needed but some skills related to object-oriented programming fundamentals are helpful"
      ],
      "description": "This course explores the principles and practices behind building modern, responsive, and maintainable user interfaces. Participants will gain a deep understanding of how information and data flow through interactive and reactive user interfaces, emphasizing the importance of data binding, external data integration, and event handling.\n\n\nThe course introduces the Model-View-ViewModel (MVVM) design pattern as a foundation for layered design and separation of concerns, enabling scalable and testable presentation layer implementation of a computer program. Attendees will learn how to shape user interface behavior and appearance through effective rendering strategies, while mastering techniques for exposing and entering data seamlessly.\n\n\nKey topics include:\n\n\nStructuring the user interface with layered design patterns\nImplementation of the Model-View-ViewModel (MVVM) design pattern\nImplementing inter-layer communication\nDesigning for reactivity and data-driven rendering\nManaging UI events and user interactions\nBest practices for data exposure and input handling\nStructuring a user interface with layered design patterns means organizing the program text of a user interface into distinct, logical layers, each as a set of custom types. Each layer has a well-defined role and communicates only with adjacent layers. This approach improves the separation of concerns,  maintainability, testability, and scalability of the application. In user interface development, this often aligns with patterns like MVVM (Model-View-ViewModel).\nImplementation of the Model-View-ViewModel (MVVM) design pattern refers to applying a structured approach to building a program presentation layer by separating concerns into three distinct layers: Model, View, and ViewModel. This pattern is especially popular in modern libraries.\nBy the end of the course, developers will be equipped to build a robust, maintainable user interface that responds fluidly to both user input and dynamic data sources. All topic examinations are backed by examples gathered in a GitHub public repository.",
      "target_audience": [
        "Junior and middle-level software developers curious about improving their programming skills",
        "Entry-level software architect looking for knowledge and skills required to carry out the architectural design of programs",
        "Teachers who are serious about the improvement of the software development skills education methodology",
        "Students who have completed classes covering Software Development Fundamentals or equivalent",
        "Software development project leaders, who are responsible for teamwork management, documentation preparation, debugging, code optimization, and so forth"
      ]
    },
    {
      "title": "An Introduction to Sampling based Motion Planning Algorithms",
      "url": "https://www.udemy.com/course/an-introduction-to-sampling-based-motion-planning-algorithms/",
      "bio": "Interested in self driving cars and robotics? Then check out this course!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting up Python and Downloading the Git Repo",
          "Data Structures: Introduction to Trees",
          "Assignment 0"
        ],
        "The Rapidly Exploring Random Trees (RRT) Algorithm": [
          "RRT Algorithm Explanation",
          "Assignment 1 - Intro",
          "Assignment 1 - Solution"
        ],
        "The Rapidly Exploring Random Trees Star (RRT*) Algorithm": [
          "RRT Star Algorithm Explanation",
          "Assignment 2 - Intro",
          "Assignment 2 - Solution"
        ],
        "The Informed RRT Star Algorithm": [
          "Informed RRT Star Algorithm Explanation",
          "Assignment 3 - Intro",
          "Assignment 3 - Solution"
        ],
        "Conclusion": [
          "Conclusion",
          "Announcement: New Course (Nonholonomic Motion Planning)",
          "Announcement: New Course (Flight Simulation and Control)"
        ]
      },
      "requirements": [
        "No programming experience needed, I will teach you everything from scratch.",
        "It is preferred to already have Python 3.7.4 installed along with packages Numpy (1.16.x), Matplotlib (3.1.x)"
      ],
      "description": "Motion planning or path planning is an engineering field which deals with developing computational algorithms to calculate a path or a trajectory for a robot or any other autonomous vehicle. In this course you will learn the well known Rapidly Exploring Random Trees (RRT) and RRT* algorithms. These are sampling based algorithms unlike search based algorithms (A*), and are used to plan a path from a start to an end location whilst avoiding obstacles. You will be implementing these algorithms in Python. If you do not have any background in programming that is okay as I will teach everything from scratch. There will be 3 interactive assignments in which you will get to test your algorithms. By the end of this course you will have a fundamental understanding of RRT based algorithms. The objective of these algorithms are to generate a path consisting of waypoints from a start to an end location. It will be required to have Python 3.7 along with Numpy and Matplotlib installed to complete the assignments in this course. I will briefly go over installing Python as well, however there are numerous resources which cover the details of setting up Python on your computer. Be sure to leave a rating when you finish. I look forward to seeing you in this course!",
      "target_audience": [
        "Anyone with an interest in programming, robotics and autonomous vehicles"
      ]
    },
    {
      "title": "MS Project ile Proje Planlama, İzleme ve Kontrol, GÜNCEL",
      "url": "https://www.udemy.com/course/ms-project-ile-proje-planlama-izleme-ve-kontrol/",
      "bio": "2024 güncellemesi ile Daha Başarılı Projeler için",
      "objectives": [
        "Eğitim sonunda katılımcılar projelerinde planlama, icra ve kontrol süreçlerini MS Project proje yönetim yazılımı ile daha etkin olarak yürütebileceklerdir.",
        "MS Project ile İş kırılım yapısının oluşturulması, iş paketlerinin ve proje çıktılarının belirlenmesi.",
        "İş paketlerine ait proje faaliyetlerinin belirlenmesi,",
        "Faaliyetler arası ilişkilerin tanımlanması,",
        "Proje kaynaklarının ve kaynak takvimlerinin tanımlanması,",
        "Kaynakların aktivitelere atanması.",
        "Projenin kritik yolu üzerindeki faaliyetlerin otomatik olarak tespit edilmesi.",
        "Kaynakların üzerindeki fazla yükleme problemlerinin otomatik olarak tespit edilmesi,",
        "Kaynak takvimlerindeki değişikliklerin projeye olan etkilerinin otomatik olarak tespit edilmesi,",
        "Görsel raporlama ve özel tablolar ile proje ilerleyişinin raporlanması eğitim sonunda öğrenilecektir"
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Vaka Tanıtımı",
          "Proje Yönetimi Temelleri",
          "Detaylı Vaka Analizi",
          "MS Project'te Giriş",
          "Proje Takvim Tanımlamalarının Yapılması",
          "Görev Oluşturma",
          "Görev (İş) Kırılım Yapısını Oluşturma",
          "Proje Yönetiminde Görev Bağlantıları",
          "MS Project'te Görevleri Bağlama",
          "Kaynak Havuzu Oluşturma",
          "Görevlere Kaynak Atama",
          "Analiz ve Sorular",
          "Projelerde Kritik Yol Analizi",
          "MS Projectte Kritik Yolu ve Kritik Görevleri Görme",
          "Kaynaklara Takvim Atama",
          "Kaynakların Fazla Yükleme Sorunu ve Çözümü",
          "Proje Planı İçin Temel Alma (Baseline)",
          "Projelerde İzleme ve Kontrol",
          "MS Projectte Gerçekleşen Verilerin Girilmesi",
          "Projelerde Fiili Başlangıç ve Fiili Bitiş",
          "MS Projectte Verilerin Otomatik Güncellenmesi",
          "Zaman Çizelgesi Oluşturma",
          "Projelerde Kazanılmış Değer Yönetimi",
          "MS Projectte Kazanılmış Değer Analizi",
          "MS Project ile Proje Raporu Hazırlama",
          "Proje Planı Çıktısı Alma"
        ]
      },
      "requirements": [
        "Temel seviyede MS Office ve temel proje bilgisi"
      ],
      "description": "Proje Yöneticileri için başarılı projeler gerçekleştirmenin gereksinimlerden biri projelerde sistematik bir yönetim yaklaşımın uygulanması; diğeri ise bir proje yönetim aracının kullanılmasıdır. Bu eğitimde PMI proje yönetim metodolojisi üzerinde, MS Project'in proje yönetiminde nasıl kullanılabileceği anlatılmıştır.\nMicrosoft Project, proje yönetimi için kullanılan bir yazılımdır ve genellikle projelerin planlanması, takibi ve yönetimi için kullanılır. Microsoft Project, kullanıcılarına projeleri geliştirme, zaman çizelgeleri oluşturma, kaynak yönetimi, görev izleme ve raporlama gibi bir dizi özellik sunar.\nMicrosoft Project ile ilgili temel konular:\nProje Oluşturma: Microsoft Project, kullanıcılara projeleri tanımlamak, görevleri oluşturmak, kaynakları belirlemek ve projenin temel parametrelerini ayarlamak için bir araç sağlar.\nZaman Çizelgesi Oluşturma: Kullanıcılar, projenin zaman çizelgesini oluşturabilir ve görevlerin başlama ve bitiş tarihlerini belirleyebilir. Bu, projenin zaman içinde nasıl ilerleyeceği konusunda bir görselleştirme sağlar.\nGörev Bağımlılıkları ve İlişkiler: Microsoft Project, görevler arasındaki bağlantıları ve ilişkileri tanımlamak için kullanılabilir. Bu sayede bir görevin tamamlanması, diğer görevlerin başlaması veya devam etmesine bağlı olabilir.\nKaynak Yönetimi: Projede yer alan kaynakları (insanlar, ekipmanlar, malzemeler) atamak ve bu kaynakların kapasitesini takip etmek için kullanılır. Bu, kaynakların verimli bir şekilde kullanılmasını sağlar.\nGörev İzleme ve Güncelleme: Proje ilerledikçe, gerçekleşen durumları güncellemek ve takip etmek için Microsoft Project kullanılabilir. Bu, plan ile gerçek arasındaki farkları görmenizi ve gerektiğinde ayarlamalar yapmanızı sağlar.\nRaporlama ve Analiz: Microsoft Project, projenin durumu, ilerlemesi ve kaynak kullanımı gibi bir dizi rapor ve analiz sunar. Bu raporlar, projenin sağlığı ve performansı hakkında bilgi sağlamak için kullanılabilir.\nMicrosoft Project, genellikle büyük ölçekli projeler ve kurumsal düzeydeki projeler için tercih edilen bir proje yönetimi yazılımıdır. Kullanıcı dostu arayüzü ve kapsamlı özellikleri ile projelerin planlanması ve yönetilmesine yardımcı olur.\nEğitimin hedef kitlesi üniversite öğrencilerinden profesyonel proje çalışanlarına kadar proje yapan, projelerle ilgilenen herkestir. Proje Yönetici adayları bu eğitim ile MS Project bilgilerini arttırıp proje yönetim bilgilerini pekiştirebilirler.",
      "target_audience": [
        "Proje yöneticileri, sponsorları, sahipleri, proje ekip üyeleri, kariyerine global alanda Profesyonel Proje Yöneticisi olarak devam etmek isteyen herkes",
        "Proje yapan ve projelerinde MS Projecti kullanmak isteyen üniversite öğrencileri katılabilir."
      ]
    },
    {
      "title": "WebMethods Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/webmethods-interview-questions/",
      "bio": "WebMethods Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "WebMethods Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nMaster WebMethods with Confidence: Interview Questions Practice Test\nAre you preparing for a WebMethods interview and want to ensure you're fully equipped with the knowledge and skills needed to ace it? Look no further! This comprehensive practice test course is specifically designed to help you master WebMethods through a series of targeted interview questions and practice tests.\nSection 1: Introduction to WebMethods Get acquainted with the fundamentals of WebMethods, including its architecture, features, and core components such as Integration Server, Designer, and Repository Manager. Dive deep into understanding the backbone of WebMethods and lay a solid foundation for your journey.\nSection 2: Integration Concepts Explore the essential concepts of integration, including messaging, queuing, service-oriented architecture (SOA), enterprise service bus (ESB), adapters, and APIs. Gain insights into how WebMethods facilitates seamless integration between diverse systems and applications.\nSection 3: WebMethods Components Delve into the key components of WebMethods, such as Integration Server, Universal Messaging, Broker, Trading Networks, Terracotta, and Optimize. Understand the functionalities of each component and how they contribute to the overall integration ecosystem.\nSection 4: Development in WebMethods Learn the intricacies of development in WebMethods, including creating flow services, Java services, adapter services, and handling XML and JSON data. Explore best practices for error handling and transaction management in WebMethods projects.\nSection 5: Monitoring and Management Discover how to effectively monitor and manage WebMethods environments, including logging, debugging, performance tuning, security management, deployments, upgrades, and disaster recovery strategies. Ensure the smooth operation of your integration solutions with robust monitoring and management practices.\nSection 6: Advanced Topics Take your WebMethods expertise to the next level by exploring advanced topics such as BPM (Business Process Management), BAM (Business Activity Monitoring), API Gateway, microservices, cloud integration, and mobile integration. Gain a deeper understanding of cutting-edge technologies and trends shaping the future of integration.\nInterview Questions Coverage Each section of this course is meticulously crafted to cover a wide range of interview questions commonly asked in WebMethods interviews. Test your knowledge and skills with practice tests that simulate real-world interview scenarios, allowing you to assess your readiness and identify areas for improvement.\nDon't Leave Your WebMethods Interview Success to Chance Enroll now and embark on your journey to mastering WebMethods interview questions and practice tests. Arm yourself with the knowledge, confidence, and skills needed to impress recruiters and secure your dream job in integration and middleware development. Let's ace that interview together!",
      "target_audience": [
        "Job Seekers: Individuals aspiring to secure roles as WebMethods developers, integration specialists, or middleware engineers will find this course invaluable in preparing for interviews and demonstrating their expertise to potential employers.",
        "Experienced Professionals: Seasoned professionals looking to advance their careers in integration and middleware technologies can benefit from this course by refreshing their knowledge, staying updated on industry trends, and mastering WebMethods interview questions.",
        "Students and Graduates: Students pursuing degrees in computer science, software engineering, or related fields can supplement their academic learning with practical insights into real-world integration challenges and interview preparation strategies.",
        "Certification Aspirants: Those preparing for WebMethods certification exams will find this course to be an excellent resource for reinforcing their understanding of key concepts and testing their knowledge with practice tests aligned with certification objectives.",
        "Tech Enthusiasts: Anyone with a keen interest in learning about integration technologies, regardless of their background or experience level, can benefit from this course's structured approach to mastering WebMethods interview questions and practice tests."
      ]
    },
    {
      "title": "Master Generative AI for Developer Productivity With Pieces",
      "url": "https://www.udemy.com/course/mastering-generative-ai-for-developer-productivity/",
      "bio": "Enhance your coding efficiency with generative AI: Real-time code generation, error detection, and language conversion",
      "objectives": [],
      "course_content": {
        "Getting Started": [
          "Overview of Pieces App For Productivity",
          "Setting Up Pieces App For Productivity",
          "Selecting Models using Generative AI"
        ],
        "Leveling up as a Developer": [
          "Real-Time Code Generation using Generative AI",
          "Accelerating Your Coding Speed using Generative AI",
          "Inline Documentation and Explanation using Generative AI",
          "Error Detection and Resolution using Generative AI"
        ],
        "Using Generative AI for Interview Preparation and Becoming a Better Developer": [
          "Understanding and Analyzing Code using Generative AI",
          "Improving Performance of the Code using Generative AI",
          "Converting Code Between Languages using Generative AI"
        ],
        "Managing Code Snippets": [
          "Managing Code Snippets with Pieces",
          "Organizing and Working with Code Snippets",
          "Sharing Code Snippets with Team Members"
        ],
        "Go Advanced": [
          "Advanced Usage of Contextual Conversations With Generative AI"
        ],
        "Bonus Lecture": [
          "Course Bonus"
        ]
      },
      "requirements": [
        "Access to a computer with an internet connection",
        "An interest in leveraging AI for enhancing productivity and a willingness to explore new tools and techniques."
      ],
      "description": "Unlock the full potential of generative AI to boost your productivity as a developer. This course will guide you through the latest advancements in AI-powered coding tools and techniques, helping you accelerate your coding speed, improve code quality, and streamline your workflow.\nWe will start with the basics in the Getting Started with Pieces section, where you will learn how to set up Pieces and select the right AI models for your projects. Then, in the Leveling Up as a Developer section, you'll discover how real-time code generation and inline documentation can accelerate your coding speed and help you understand complex code. You'll also learn how AI can assist in error detection and resolution, improving your overall code quality.\nIn the Using Generative AI for Interview Preparation and Becoming a Better Developer section, we'll cover how AI can be used to prepare for technical interviews and continuously improve your coding skills. The Managing Code Snippets section will teach you how to organize and share code snippets effectively, enhancing collaboration with your team.\nFinally, the Advanced Usage with Contextual Conversations section will show you how to leverage advanced features of Pieces for complex projects and AI-driven code discussions. By the end of this course, you'll be equipped with practical skills to leverage generative AI for enhanced productivity and collaboration in your development projects.",
      "target_audience": [
        "Ideal for those looking to accelerate coding speed, improve code quality, and automate routine tasks using AI tools.",
        "Perfect for beginners with basic programming knowledge who want to explore AI's potential in enhancing coding capabilities and productivity."
      ]
    },
    {
      "title": "Containers 101",
      "url": "https://www.udemy.com/course/containers-101/",
      "bio": "Building and deploying containerize applications with Kubernetes, Docker and Helm",
      "objectives": [],
      "course_content": {
        "Intro to Docker": [
          "Intro to Docker Basic Commands & Docker Hub",
          "Intro to Docker Files, Docker Image Layers, and Docker Cache Mechanism",
          "Docker ONBUILD Triggers and Introduction to Docker Compose",
          "Intro to Docker Compose Version 2"
        ],
        "Docker Build Best Practice": [
          "Using Docker Multi-stage Build to Create Advanced Pipelines",
          "Creating an Efficient Java Docker Build Pipeline",
          "Development Swarm Cluster with Docker Compose V3",
          "Testing Strategies for Docker Driven Developmet",
          "Intro to Helm for Kubernetes"
        ]
      },
      "requirements": [
        "Basic terminal skills, basic programming, Docker"
      ],
      "description": "In this course, we'll introduce the basics of building and deploying containerized applications. We'll introduce the concepts of containers powered by Docker and how to create them. You'll learn the essentials needed for modern DevOps with orchestration, packaging, and more built on the the fast growing Docker, Kubernetes, and Helm stack.",
      "target_audience": [
        "DevOps Beginners and Programmers trying to lean about deployment"
      ]
    },
    {
      "title": "Migrate Windows service to Azure",
      "url": "https://www.udemy.com/course/migrate-windows-service-to-azure/",
      "bio": "Learn how to successfully migrate Windows service to Azure",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Course overview",
          "What to expect from this course"
        ],
        "Microsoft Azure": [
          "Cloud service models",
          "Benefits of migration to cloud"
        ],
        "Sample Windows service": [
          "Introduction of sample application"
        ],
        "Migration to Azure": [
          "Alternatives",
          "Code changes",
          "Preparing infrastructure",
          "Deployment",
          "Configuration",
          "Logging and monitoring"
        ],
        "Other options": [
          "Azure Functions",
          "Azure Automation",
          "Azure SQL Database Jobs",
          "Hangfire"
        ],
        "Conclusion": [
          "Final words"
        ]
      },
      "requirements": [
        "Intermediate knowledge of C# programming language",
        "Intermediate knowledge of .NET platform",
        "Intermediate knowledge of Microsoft Azure",
        "Visual Studio 2019",
        "Visual Studio Code",
        "Azure PowerShell",
        "Azure CLI"
      ],
      "description": "Course explains how to migrate Windows service to Azure. It's for .NET developers and software achitects who solves the task how to migrate Windows service to Azure and are looking for cost effective solution. Course explains cloud service models and benefits of migration to cloud. Course explains alternatives for migration together with pros and cons, then required code changes in Windows service, preparing of Azure infrastructure, deployment, configuration and monitoring using Azure Application Insights. Course explains also other options for migration such as Azure Functions, Azure Automation, Azure SQL Database Jobs and Hangfire.",
      "target_audience": [
        ".NET developers",
        "Software architects"
      ]
    },
    {
      "title": "Spring into REST: Build Microservices using Spring Framework",
      "url": "https://www.udemy.com/course/spring-into-rest-basic-microservices-using-spring-framework/",
      "bio": "8 in 1 Course. Learn, understand and practice Spring framework modules/ maven/ resilience4j",
      "objectives": [
        "Master Spring REST",
        "Create projects using Spring Boot",
        "Understand and use Spring Core",
        "Use Spring Data JPA in your Spring application",
        "Learn how to use exception handling in Spring REST",
        "Use different types of resilience4j patterns for microservices",
        "Introduce you to Maven build tool",
        "Learn about basic unit testing techniques(REST) : unit testing and mock testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Spring Core": [
          "Spring Core Overview",
          "IOC vs DI",
          "Application Context Intro",
          "ApplicationContext Demo Part 1",
          "ApplicationContext Demo Part 2",
          "Autowired and Component annotations",
          "Types of DI Part 1",
          "Types of DI Part 2",
          "Types of DI Part 3",
          "Scopes of Spring Beans",
          "Qualifier and Primary Annotations",
          "Spring bean lifecycle",
          "Lifecycle methods demo",
          "Bean Lazy Initialization",
          "Section Overview",
          "Spring Core Quiz"
        ],
        "Spring REST / Spring Boot": [
          "Spring REST Overview",
          "Spring Initializr",
          "Spring maven pom intro",
          "Download Postman",
          "Model Books",
          "REST Controller Part 1",
          "REST Controller Part 2",
          "GET POST mapping",
          "DELETE PUT mapping",
          "Sidenote : mapping json model",
          "OverviewSpringREST",
          "Spring REST / Spring boot quiz"
        ],
        "Spring Data JPA(REST Application)": [
          "Spring Data JPA Overview",
          "Save or Update a record",
          "Get by id /delete/update on record/s from h2b database",
          "Get all records"
        ],
        "Spring REST Exception Handling": [
          "REST Exception Handling Overview",
          "Local Exception Handling",
          "Global Exception Handling",
          "Recap Exception Handling",
          "Exception Handling"
        ],
        "Resilience4j using Spring boot": [
          "Resilience4j Overview",
          "Circuit breaker Part 1",
          "Circuit breaker Part 2",
          "RateLimiter",
          "Retry"
        ]
      },
      "requirements": [
        "Basic understanding of Core Java 8+"
      ],
      "description": "Welcome to this course where you will get in depth learning about Spring REST .This 8-in-1 course provides you with various web related java technologies.Some of the awesome features of this course are :\nLearn Spring REST in detail\nLearn and apply Spring Boot concepts like auto configuration and initializr.\nUnderstand Spring Core and use of container like ApplicationContext.\nTheory goes hand in hand with practical exercises(source code attached).\nLearn exception handling in Spring REST application\nThis course is fully applicable and compatible with microservices and it's architecture.\nLearn resilience4j framework and some of it's important patterns with fully explained examples.\nConfigure and use swagger for api documentation\nUse unit testing techniques like mocking and junit tests for your REST application.\nLearn annotations like component, autowired , configuration , bean and others related to the Spring framework\nUnderstand the difference between IOC(Inversion of control) and DI(Dependency Injection).\nLearn patterns like circuit breaker, retry and rate limiter.\nIntroduction to tools like maven where you learn not only dependency injection but build process as well\nLearn to use database module from spring like Spring Data Jpa.\nUsage of hb2 in memory database.\nCourse duration is under 4 hours, so it is fast paced and very interesting to learn.",
      "target_audience": [
        "Students/Developers who want to learn how to use Spring Boot/Spring REST",
        "Use various technologies to create microservices",
        "Learn resilience4j from scratch",
        "Students who want understand various concepts in Spring Core"
      ]
    },
    {
      "title": "現役シリコンバレーエンジニアが教えるPythonで始めるスクラッチからのブロックチェーン開発入門",
      "url": "https://www.udemy.com/course/python-blockchain/",
      "bio": "Facebookの仮想通貨LibraによりAmazon、Microsfot、IBMなどがブロックチェーン事業に参入し、その技術が再び脚光を浴びています。IoT、医療、不動産の分野でも期待される次世代の技術を学びましょう。",
      "objectives": [
        "ブロックチェーンの仕組みを理解することができます。",
        "Pythonを使ったブロックチェーンの基本となる開発を学べます",
        "ブロックチェーンのトランザクションの認証を理解することできます。",
        "ブロックチェーンを繋げるハッシュの仕組みができます。",
        "プロックチェーンのマイニングでのナンスを導き出すコンセンサスアルゴリズムが理解できます。",
        "ブロックチェーンの分散された合意形成のコンセンサスの仕組みが理解できます。",
        "仮想通貨の送受信の仕組みが理解できます。"
      ],
      "course_content": {
        "はじめに": [
          "ブロックチェーンエンジニアの求人とブロックチェーンを採用する大企業の状況",
          "講義を受ける前の注意事項"
        ],
        "ブロックチェーンとは": [
          "ブロックチェーンを使った仮想通貨の送金システムのデモイメージ",
          "ブロックチェーンとは"
        ],
        "ブロックチェーンの作成": [
          "本コースで使用するソースコード",
          "開発準備",
          "ブロックチェーンクラスの作成",
          "ブロックのハッシュを求める",
          "トランザクションの追加",
          "8. Proof of Work、コンセンサスアルゴリズム、ナンスとは",
          "ナンスを導き出す",
          "マイニング",
          "トランザクションの合計を計算する"
        ],
        "ウォレットの作成": [
          "秘密鍵と公開鍵とECDSAとは",
          "ウォレットの作成",
          "ブロックチェーンアドレスの作成方法",
          "ブロックチェーンアドレスの生成",
          "トランザクションの署名",
          "トランザクションの証明"
        ],
        "ブロックチェーンサーバーのAPI": [
          "Flaskでサーバーを立ち上げる",
          "ブロックチェーンを取得するAPIの作成",
          "ウォレットのUIサーバーの立ち上げる",
          "ウォレットのUIを作成する",
          "ウォレットの作成",
          "トランザクションを受けるAPIの作成",
          "ウォレットサーバーでトランザクションのAPIの作成をする",
          "ウォレットからのトランザクションの送信",
          "マイニングAPIを作成する",
          "マイニングをスレッドで実行する"
        ],
        "ブロッックチェーンネットワークの構築": [
          "他のブロックチェーンノードを探索する",
          "ブロックチェーンノードの自動登録",
          "トランザクションの同期",
          "コンセンサスとは",
          "ブロックチェーンの検証",
          "最も長いチェーンを採用するリゾルブコンフリクト",
          "51%アタックとは",
          "他ノードからの仮想通貨の合計の計算",
          "仮想通貨を送受信する",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "必須ではありませんがビットコインなどの仮想通貨を取り扱った経験がある人の方が理解がしやすいかと思います。",
        "Pythonで開発いたしますので、Pythonの入門程度の経験がある方が対象です。"
      ],
      "description": "このコースではブロックチェーンの技術とPythonを用いて仮想通貨の送金システムを構築しながらブロックチェーンの根幹にある技術、考え方とその応用方法をハンズオンで学びます。\nBlockchain技術は難しい技術資料が多い上に、ブロックチェーン＝仮想通貨＝怪しいというイメージを持たれがちですが、ブロックチェーンの技術はIT業界の常識を覆し、次世代のネットワーク分散システムのプラットフォーム上で未知なる可能性を秘めています。\nブロックチェーンネットワーク上では、もちろん送金決済、地域通貨、ポイントサービス、その他のデジタル資産のやり取りがインターネット上でできるようになりますが、資産の所有権を記録することもできるため、ブロックチェーンが信頼するIDとして、土地管理、財産の所有権、その他物的財産の所有権を示すこともできます。また、投票やパスポート取得、権利やサービスへも使えます。また、日々書類で行われている行政サービスや不動産契約などの信頼も証明することができます。ここで挙げた以上に多くの分野で使用される可能性が高いのです。\nFacebookがLibraの仮想通貨を発表し、Amazon、Microsoft、IBMなどの大企業ではブロックチェーンのプラットフォームを提供し始めました。これは、今後ブロックチェーンのインフラが使用される機会が増えることを予測しているからこそかと思います。\nまた、ブロックチェーンができるエンジニアの求人はシリコンバレーでも増えており、今後ブロックチェーンが開発できるエンジニアの希少性が高まることが期待できます。\nプロックチェーンのエンジニアにならなくとも、ブロックチェーンを実装された経験はきっと就職や転職の際に提出する履歴書の中でも目立つものとなるので、この機会にブロックチェーンの実装をしてみしょう。\nそれでは、今後とも皆様のご活躍お祈りしております。",
      "target_audience": [
        "ブロックチェーンに関心を持つ方",
        "パワーポイントなどの説明ではブロックチェーンの理解が難しく、コードを書いた方が理解できると思われている方"
      ]
    },
    {
      "title": "How to Create Your App’s Backend with Cursor AI",
      "url": "https://www.udemy.com/course/how-to-create-your-apps-backend-with-cursor-ai/",
      "bio": "Build your app’s backend using Firebase and GCP with Cursor AI — APIs, hosting, and server logic for beginners.",
      "objectives": [],
      "course_content": {
        "Setting Up and Deploying Your Backend": [
          "Installing Firebase Functions with Python and AI Assistance",
          "Deploying Your First Firebase Function",
          "Setting Up the Firebase Emulator"
        ],
        "Integrating APIs and Using AI for Backend Development": [
          "Connecting to the Bumpups API",
          "AI Prompts for Backend Development"
        ]
      },
      "requirements": [
        "No coding skills required — just a computer, internet access, and curiosity."
      ],
      "description": "Bring your app to life by creating a fully functional backend using Firebase and Google Cloud Platform (GCP) — all with the help of Cursor AI. This course will show you how to set up hosting, build APIs, handle data, and connect everything seamlessly to your frontend, even if you have zero coding experience.\nWe’ll start by explaining how Firebase and GCP work together to provide cloud hosting, server logic, and API capabilities. Then, you’ll learn how to use Cursor AI to generate backend code, configure routes, and connect to your database. You’ll also see how to deploy your backend so it’s live and ready to serve your app in real time.\nBy the end of this course, you will:\nUnderstand the basics of backend architecture using Firebase and GCP.\nSet up hosting for your backend on Google Cloud.\nUse Cursor AI to generate and refine backend code for APIs and server logic.\nConnect your backend to your existing frontend for a fully integrated app.\nThis course is perfect for students from the frontend course or beginners who want to quickly master backend skills with modern cloud tools and AI assistance. All you need is your completed frontend and environment setup from the earlier courses.",
      "target_audience": [
        "Beginners eager to learn backend development with Firebase, Google Cloud, and AI tools.",
        "Creators who want to build functional backends without deep coding knowledge.",
        "Aspiring developers looking to integrate APIs and AI into real-world backend projects."
      ]
    },
    {
      "title": "Sistema de Ventas laravel 8 y livewire",
      "url": "https://www.udemy.com/course/sistema-de-ventas-laravel-8-y-livewire/",
      "bio": "Aprende a crear sistemas profesionales con laravel 8 y livewire",
      "objectives": [
        "Aprender laravel nivel básico a intermedio",
        "Aprender livewire nivel intermedio avanzado",
        "Manejo de eventos front y backend",
        "Búsquedas en tiempo real",
        "Validaciones en tiempo real",
        "Utilizar lector de código de barras",
        "Creación de componentes",
        "Ventanas modales",
        "Manejo de roles y permisos",
        "Impresión de tickets con C#",
        "Teclas de acceso rápido y eventos del teclado",
        "Crear un sistema de ventas completo y funcional"
      ],
      "course_content": {
        "Introducción": [
          "Presentación",
          "Herramientas Necesarias",
          "Crear Proyecto Laravel"
        ],
        "Base de Datos": [
          "Modelo Entidad Relación",
          "Flujo de Trabajo GIT",
          "Tabla Companies",
          "Tabla Denominations",
          "Tabla Categories",
          "Tabla Products",
          "Tabla Users",
          "Tabla Sales",
          "Tabla SaleDetail"
        ],
        "Template del Proyecto": [
          "Integrar Plantilla Cork"
        ],
        "Plugins y Complementos": [
          "Personalizar plugins"
        ],
        "Migraciones": [
          "Ejecutar Migraciones"
        ],
        "Seeders": [
          "Ejecutar Seeders"
        ],
        "Enlances SideBar": [
          "Personalizar SideBar"
        ],
        "Plantilla de Componentes": [
          "Plantilla HTML"
        ],
        "Modal Reutilizable": [
          "Reutilización de Código Modal"
        ],
        "Buscador Reutilizable": [
          "Buscador"
        ]
      },
      "requirements": [
        "Saber HTML básico",
        "Conocer laravel nivel básico",
        "Manejar PHP básico",
        "Conocimientos básicos de javascript"
      ],
      "description": "En este curso vamos a desarrollar un sistema de ventas utilizando el framework para PHP más demandado y solicitado en el mundo de la programación  y desarrollo web, Laravel 8.\nAdemás, vamos a utilizar Livewire el framework full-stack para laravel, el cual nos permite crear interfaces dinámicas en segundos, con resultados muy potentes y profesionales.\nEn el módulo de ventas utilizaremos otro framework de javascript, el cual nos va permitir utilizar el lector de códigos de barras sin necesidad de posicionar el cursor en alguna caja de texto y de esta manera realizar transacciones más rápidas logrando una mejor atención de los clientes.\nTambién vamos a incorporar a nuestro proyecto un paquete de terceros para manejar carrito de ventas de una manera muy simple, lo cual nos ahorra mucho tiempo en el desarrollo de sistemas\nPor otro lado, aprenderemos a diseñar una app en C# para impresión de recibos y controlar 100% el diseño y calidad de fuente en los tickets  que se entregan a los clientes en las ventas\nFinalmente vamos a montar nuestro proyecto en un hosting real para realizar pruebas del funcionamiento completo del sistema y realizaremos la configuración del sevidor mysql  para utilizar  la aplicación de impresiones.\nBienvenido!",
      "target_audience": [
        "Desarrolladores web",
        "Estudiantes de programación",
        "Estudiantes de informática",
        "Amantes de la programación",
        "Programadores que deseen adquirir nuevos conocimientos"
      ]
    },
    {
      "title": "Python Programming Bootcamp (2019)",
      "url": "https://www.udemy.com/course/learn-python-programming-and-cryptocurrency-data-analysis/",
      "bio": "Introductory Course on Programming with Python",
      "objectives": [],
      "course_content": {
        "Coding environment": [
          "Install Python and PyCharm",
          "PyCharm Introduction"
        ],
        "Tips for beginners": [
          "Indentation",
          "The zen of Python and PEP 8",
          "Shadowing mistake"
        ],
        "Variables and Comments": [
          "Variables",
          "Switch values",
          "Comments"
        ],
        "Comparison and logical operators": [
          "Comparison Operators",
          "Logical Operators"
        ],
        "Print": [
          "Print",
          "Print Formating"
        ],
        "Variables": [
          "Numbers",
          "Strings",
          "Exercise: Strings",
          "String methods",
          "Typecasting"
        ],
        "Data Structures": [
          "List",
          "List indexing and slicing",
          "Exercise: Calculate average",
          "Add and remove list elements",
          "List and Range",
          "LIst sort and reverse",
          "List of lists",
          "Dictionary",
          "Exercise: Dictionary",
          "Tuple",
          "Set",
          "Exercise: Set"
        ],
        "Input": [
          "Reading multiple inputs",
          "Exercise: Reading multiple inputs"
        ],
        "Control Flow": [
          "If",
          "Exercise: Light switch",
          "Exercise: Number is odd or even",
          "For",
          "Execise: Top 3 values",
          "While",
          "Exercise: Sublist of list",
          "Break",
          "Continue"
        ],
        "List Comprehension": [
          "List Comprehension",
          "Exercise: Common Elements",
          "Value Validation using List Comprehension"
        ]
      },
      "requirements": [
        "No prior programming knowledge is required",
        "A computer and a desire to learn"
      ],
      "description": "Become a Python Programmer and learn one of employer's most requested skills of 2019!\nThis course assumes no previous programming or Python experience. If  you’ve never programmed a computer before, or if you know another  programming language and want to learn Python, this course will teach  you how.\nThe goal of the course is to introduce students to Python Version 3.x programming.\nHere is what you will get and learn by taking this Python Programming Bootcamp (2019)  course:\nHow to work with various data types.\nWhat variables are and when to use them.\nThe importance of white space in Python.\nOther.",
      "target_audience": [
        "For Complete Programming Beginners",
        "Anyone who wants to learn Python"
      ]
    },
    {
      "title": "Scrum That Ships",
      "url": "https://www.udemy.com/course/scrum-that-ships/",
      "bio": "Real-world Scrum tactics to ship faster, kill useless rituals, and scale agile teams — tested on Fortune-500 customers",
      "objectives": [
        "Identify and fix “Zombie Scrum” anti-patterns",
        "Design a lightweight Scrum workflow for early-stage or fast-pivoting startups",
        "Run sprint events that protect developer flow and maximize outcome-focused collaboration",
        "Scale Scrum practices across multiple teams without bureaucratic overhead",
        "Detect early signs of burnout and implement safeguards for sustainable velocity"
      ],
      "course_content": {
        "Welcome & How to Use This Course": [
          "Course Trailer",
          "How to Get the Most Out of Scrum That Ships",
          "Course Project Brief"
        ],
        "Real-World Scrum: Why It Breaks": [
          "Scrum Prerequisites: The Myth vs. Reality Gap",
          "Time Constraints: Processes Under Pressure",
          "Process Flexibility: Practical Principles Application",
          "Real-World Scrum: Sanity Check"
        ],
        "Zombie Scrum Theater": [
          "Going Through the Motions: Ritual-Only Scrum",
          "Zombie Scrum Master",
          "Zombie Product Owner",
          "Zombie Leadership",
          "Zombie Dev Team",
          "Fixing the Theater",
          "Connecting to Why"
        ],
        "Scrum in Startups": [
          "Startup Reality Check: What Can Go Wrong?",
          "Startup Lifecycle: When Process Really Matters",
          "Common Pitfalls - And How To Avoid Them",
          "Layered Planning: A Survival Tool",
          "Key Takeaways: Bend, Don't Break",
          "Lean, Mean, Shipping Machine"
        ],
        "Scaling Without BS": [
          "Introduction: Why We Scale",
          "Dependencies: A Hidden Killer",
          "Scaling: Changes and Principles",
          "Scaling Approaches",
          "The Leadership Gap: Delegation",
          "Scale or Sprawl"
        ],
        "Burnout Prevention & Team Health": [
          "Burnout: Reasons & Early Warnings",
          "Fixing the System: Key Values",
          "Protecting the Team: Define Boundaries",
          "Burnout is Personal: How to Diagnose?",
          "Working with Stakeholders",
          "Key Takeaways: Section Summary",
          "Sustain or Drain?"
        ],
        "Wrapping Up & Next Steps": [
          "Key Takeaways",
          "Going Deeper: Materials & Communities",
          "Bonus: Managing Stars"
        ]
      },
      "requirements": [
        "Familiarity with basic Scrum terms",
        "Hands-on exposure to at least one team project",
        "A current or upcoming project where you can experiment",
        "An open mind (and a bias for action)",
        "No coding knowledge, certifications, or fancy tools required—just a willingness to roll up your sleeves and ship."
      ],
      "description": "You already “do Scrum,” yet release dates keep slipping, stand-ups feel like status theatre, and scaling discussions turn into slide-ware. Scrum That Ships is the field-tested remedy.\nIn just five action-packed modules you’ll flip textbook ceremonies into working product increments—using the exact playbook I applied with delivery teams at Dell, Boeing, Microsoft and Google.\nWhat makes this course different?\nOutcome-first, certification-second. No glossary marathons; every lesson ends with a concrete change you can try in the next sprint.\nZombie-Scrum antidotes. Learn to spot the five most common “ritual-only” symptoms and apply quick, measurable fixes.\nStart-up to scale-up. Whether you’re a two-pizza team or five squads across time-zones, you’ll discover lightweight patterns that avoid SAFe-style bureaucracy.\nHuman-powered delivery. Practical tools to prevent burnout, negotiate sustainable pace with stakeholders, and keep velocity honest.\nInside the course\n28 bite-size video lectures (each < 8 min)\n3 interactive quizzes to lock in learning\nDownloadable cheat-sheets & checklists\nMini-Retro Project: run a 15-minute retrospective with your team, upload the PDF template, and receive peer + instructor feedback\nYou’ll master how to…\nCraft Sprint Goals that drive priority—not busywork\nTurn daily meetings from status updates into problem-solving huddles\nBuild a metrics dashboard that signals flow without gaming\nScale coordination, not hierarchy\nSafeguard energy and focus when deadlines loom\nThe course fits perfectly into a coffee-break routine, and Udemy’s 30-day guarantee means zero risk. Join hundreds of pragmatic PMs, Tech Leads and Scrum Masters who already shipped faster with Scrum That Ships—and turn your next sprint review into a true product demo.",
      "target_audience": [
        "Tech Leads & Engineering Managers",
        "Startup Founders / Product Owners juggling rapid pivots",
        "Scrum Masters struggling with real life implementations",
        "Team Leads tasked with scaling to 2-5 squads"
      ]
    },
    {
      "title": "C# .NET Core Clean Architecture & CQRS Proje Altyapı Kursu 2",
      "url": "https://www.udemy.com/course/c-net-core-clean-architecture-cqrs-proje-altyap-kursu-2/",
      "bio": "C# .NET ile kurumsal altyapı geliştiriyoruz. CQRS, Clean Architecture, DDD, Pipeline, code generation ve çok fazlası.",
      "objectives": [
        "Set 1 - DDD odaklı Clean Architecture İmplementasyonu Öğreneceksiniz",
        "Set 1 - CQRS (Command Query Responsibility Segregeation) Öğreneceksiniz",
        "Set 1 - SOLID ve Clean Code Teknikleri Öğreneceksiniz",
        "Set 1 - Ultra Gelişmiş Senkron ve Asenkron Repository İmplementasyonu Öğreneceksiniz",
        "Set 1 - Dynamic Search İmplementasyonu Öğreneceksiniz",
        "Set 1 - Response Request Pattern odaklı mapping (Automapper) Öğreneceksiniz",
        "Set 1 - Gelişmiş ve best practice odaklı Entity Framework İmplementasyonu Öğreneceksiniz",
        "Set 1 - API İmplementasyonu Öğreneceksiniz",
        "Set 1 - Extension yazım teknikleri Öğreneceksiniz",
        "Set 1 - ve bir çok alt konu Öğreneceksiniz",
        "Set 2 - Çoklu ve ilişkili domain modelleme Öğreneceksiniz",
        "Set 2 - Gelişmiş Mapping İmplementasyonu Öğreneceksiniz",
        "Set 2 - Migration İmplementasyonu Öğreneceksiniz",
        "Set 2 - İş Kuralı ve Clean Code Yazım Teknikleri Öğreneceksiniz",
        "Set 2 - Global Hata Yönetimi Öğreneceksiniz",
        "Set 2 - Pipeline Yazım Teknikleri Öğreneceksiniz",
        "Set 2 - Validation Pipeline ile Fluent Validation İmplementasyonu Öğreneceksiniz",
        "Set 2 - Transaction Pipeline İle Transactional Operation İmplementasyonu Öğreneceksiniz",
        "Set 3 - Caching Pipeline İmplementasyonu Öğreneceksiniz",
        "Set 3 - InMemory Cache İmplementasyonu Öğreneceksiniz",
        "Set 3 - Redis Cache İmplementasyonu Öğreneceksiniz",
        "Set 3 - Logging Pipeline İmplementasyonu Öğreneceksiniz",
        "Set 3 - Serilog İmplementasyonu Öğreneceksiniz",
        "Set 4 - Security ve JWT İmplementasyonu Öğreneceksiniz",
        "Set 4 - Mailing İmplementasyonu Öğreneceksiniz",
        "Set 5 - Test odaklı altyapı geliştirme Öğreneceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "İlişkisel Domain Modelleme",
          "Kaynak Kodlar"
        ],
        "Entity Configuration ve Repository İmplementasyonu": [
          "Entity Configuration ve Repository İmplementasyonu",
          "Migration İmplementasyonu"
        ],
        "Include ve Dynamic İmplementasyonu": [
          "Include Altyapımızın İmplementasyonu",
          "Dynamic Altyapımızın İmplementasyonu"
        ],
        "İş Kuralları ve SubClass Type IoC implementasyonu": [
          "İş Kuralları ve SubClass Type IoC implementasyonu"
        ],
        "Global Hata Yönetimi": [
          "Global Hata Yönetimi İmplementasyonu"
        ],
        "Pipeline İmplementasyonu - Validation & Transaction": [
          "Mediatr Pipeline ile Validation İmplementasyonu",
          "Mediatr Pipeline İle Transaction İmplementasyonu"
        ]
      },
      "requirements": [
        "İleri Seviye C#"
      ],
      "description": "DİKKAT: Bu kurs ileri seviyedir. Kurs içeriğine hakimiyet sağladığınızda sektörde en ön sıralarda olursunuz.\nFAKAT!\nAçıklamaları okuyup örnek içerikleri izleyerek kursun sizin için uygun olup olmadığına karar vermenizi öneririm. Ek olarak 1 ay koşulsuz iade hakkından yararlanarak kursu deneyip iade edebilirsiniz. Kurs çoklu seriden oluştuğu için emek vererek kazandığınız paranızın boşa gitmesi en son isteyeceğim şeydir.\nYazılım geliştirme çok ilginç bir ivmeden geçiyor. Pandemiyle beraber zaten popüler olan meslek bir anda dünyanın en popüler mesleği haline geldi. Bu süreçte hiç tecrübesi olmayan hatta yazılım konusunda çok başlarda olan kişiler bile geliştirilmek üzere işe alındı. Bu süreçte sektörde ciddi bir yazılım personeli istihdamı oluştu.\nDoygunluğun artması ve pandeminin sonlanması sektörü yeniden eski günlere götürmeye başladı. Yine dünyanın en popüler mesleği olan yazılım geliştirme yavaş yavaş yeniden daha çok kalifiye personele ihtiyaç duyan hale dönüşüyor.\nTam da bu ihtiyaçtan yola çıkarak ultra advanced bir içerik hazırladım.\nKlasik yaklaşımlar yerine ufkunuzu açacak ve sektörde hali hazırda çalışanların da öğrenmek istediği içerikleri bu setlerde topladım.\n1. Sette öğrenecekleriniz:\nDDD odaklı Clean Architecture İmplementasyonu\nCQRS (Command Query Responsibility Segregeation)\nSOLID ve Clean Code Teknikleri\nUltra Gelişmiş Senkron ve Asenkron Repository İmplementasyonu\nDynamic Search İmplementasyonu\nResponse Request Pattern odaklı mapping (Automapper)\nGelişmiş ve best practice odaklı Entity Framework İmplementasyonu\nAPI implementasyonu\nExtension yazım teknikleri\nve bir çok alt konu\n2. Sette Öğrenecekleriniz\nÇoklu ve ilişkili domain modelleme\nGelişmiş Mapping İmplementasyonu\nMigration İmplementasyonu\nİş Kuralı ve Clean Code Yazım Teknikleri\nGlobal Hata Yönetimi\nPipeline Yazım Teknikleri\nValidation Pipeline ile Fluent Validation İmplementasyonu\nTransaction Pipeline İle Transactional Operation İmplementasyonu\n3. Sette Öğrenecekleriniz\nCaching Pipeline İmplementasyonu\nInMemory Cache İmplementasyonu\nRedis Cache İmplementasyonu\nLogging Pipeline İmplementasyonu\nSerilog İmplementasyonu\n4. Sette Öğrenecekleriniz\nSecurity ve JWT İmplementasyonu\nMailing İmplementasyonu\n5. Sette Öğrenecekleriniz\nTest odaklı altyapı geliştirme\nMoq İmplementasyonu",
      "target_audience": [
        "Sektörde ön sıralarda olmak isteyenler"
      ]
    },
    {
      "title": "Introduction to DevSeOps",
      "url": "https://www.udemy.com/course/introduction-to-devseops/",
      "bio": "Integrating Security into DevOps for Safer Software Delivery",
      "objectives": [],
      "course_content": {
        "Introduction to DevSecOps": [
          "Introduction to DevSecOps",
          "DevOps Pipeline and Security",
          "Shifting Security Left",
          "Automated security testing",
          "Secrets Management"
        ]
      },
      "requirements": [
        "Basic understanding of DevOps or system administration concepts (CI/CD pipelines, infrastructure, cloud environments). Familiarity with the command line (Linux shell or terminal). Some experience with version control systems like Git. Access to a development environment (local machine, VM, or cloud instance for hands-on practice). Optional but helpful: Basic knowledge of security principles and common compliance standards (e.g., CIS, NIST, ISO 27001)."
      ],
      "description": "In today's rapidly evolving IT landscape, security is a top priority for organizations striving to protect their systems from cyber threats. This course, Vulnerability Scanning and Compliance Checks, provides a comprehensive guide to identifying security vulnerabilities, enforcing compliance standards, and ensuring system integrity within DevOps workflows.\nYou will learn how to conduct automated vulnerability assessments using industry-leading tools, analyze scan results, and remediate security risks before they become critical threats. Additionally, the course covers compliance frameworks such as CIS Benchmarks, NIST, ISO 27001, and PCI DSS, helping you align security policies with regulatory requirements.\nWhat You Will Learn\nHow to perform automated vulnerability scans using industry-standard tools.\nTechniques to analyze scan results and prioritize security risks.\nMethods to remediate vulnerabilities within CI/CD and DevOps workflows.\nUnderstanding of key compliance frameworks like CIS Benchmarks, NIST, ISO 27001, and PCI DSS.\nHow to align technical processes with security and regulatory requirements to ensure system integrity.\nWho This Course Is For\nDevOps Engineers looking to integrate security and compliance checks into their pipelines.\nSecurity Analysts aiming to automate vulnerability scanning and reporting.\nIT and System Administrators responsible for maintaining secure, compliant infrastructure.\nCloud Engineers needing to enforce security standards across cloud-native environments.\nStudents or career changers pursuing a role in cybersecurity or DevSecOps.",
      "target_audience": [
        "DevOps Engineers looking to integrate security and compliance checks into their pipelines. Security Analysts aiming to automate vulnerability scanning and reporting. IT and System Administrators responsible for maintaining secure, compliant infrastructure. Cloud Engineers needing to enforce security standards across cloud-native environments. Students or career changers pursuing a role in cybersecurity or DevSecOps."
      ]
    },
    {
      "title": "AWSで学ぶ！OAuth入門",
      "url": "https://www.udemy.com/course/awsoauth/",
      "bio": "Amazon Cognito 、 Amazon API Gateway、 AWS Lambdaで学ぶ、 認可サーバー、リソースサーバー構築、利用を通じたOAuthの仕組み",
      "objectives": [
        "OAuthの用途や、認証・認可のフローの種類と各フローの特徴について、自分の言葉で説明できるようになる",
        "AWS各種サービス（Amazon Cognito、Amazon API Gateway、AWS Lambda等）を使用し、自力で認可サーバー構築ができるようになる（OAuth環境構築ができるようになる）",
        "AWS各種サービス（Amazon Cognito、Amazon API Gateway、AWS Lambda等）を使用し、自力でリソースサーバーを構築ができるようになる（OAuth環境構築ができるようになる）",
        "AWS上でのOAuth環境構築時に混乱しがちなポイントを把握し、なぜそのような設定をするのかに対する理解を深める"
      ],
      "course_content": {
        "コース概要": [
          "本コース受講にあたって",
          "自己紹介",
          "本コースのねらい",
          "本コースの内容"
        ],
        "OAuth概要": [
          "OAuthのイメージ",
          "OAuthとは何か",
          "OAuthのロール",
          "OAuthのトークン",
          "OAuthのエンドポイント",
          "OAuthのフロー",
          "（補足）IDトークンとは？"
        ],
        "OAuth構築ハンズオン（理論編）": [
          "AWSサービス紹介",
          "ハンズオン実施概要",
          "環境構成",
          "構築の流れ"
        ],
        "OAuth構築ハンズオン（実践編）": [
          "次のレクチャー「認可サーバー構築（Cognito）」の補足",
          "認可サーバー構築（Cognito）",
          "リソースサーバー構築（Lambda）",
          "次のレクチャー「リソースサーバー構築（API Gateway）」の補足",
          "リソースサーバー構築（API Gateway）",
          "以降の3レクチャー「OAuthハンズオン①～③」の補足",
          "OAuthハンズオン①（認可コードグラント（PKCEなし））",
          "OAuthハンズオン②（認可コードグラント（PKCEあり））",
          "OAuthハンズオン③（インプリシットグラント）"
        ],
        "AWS構築環境削除": [
          "削除対象リソースの確認",
          "削除対象リソースの削除"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Webシステムの基礎知識（HTTPメソッドの種類と使い方）、Curlコマンドの使い方に関する知識はあれば尚可（無くても受講可）",
        "Nodejsプログラミングの知識はあれば尚可（無くても受講可）"
      ],
      "description": "＜コースの概要＞\n本コースは前半の理論編でOAuthの概要をご理解いただいた後、後半の実践編でAWS上の環境を使用して数多くのハンズオンを実施することで、より理解が深まる構成となっております。\nハンズオンではAmazon Cognito 、Amazon API Gateway、AWS Lambda等のサービスを使用して、認可サーバー、リソースサーバー構築、利用を通じてOAuthの仕組みを実践的に学ぶことができます。\n\n\n＜他教材との違い＞\n本コースと他教材（書籍やYoutube動画教材等）との違いは以下の通りです。\n・１本完結型コースであるためご自身でネット検索やマニュアル確認等を行う手間がかからない。\n・なぜOAuthが必要なのか、なぜその手順で設定するのか等、解説する技術や手順一つとってもその理由や背景を詳細に説明しているため途中で止まらずに受講できる。\n・全レクチャー動画ダウンロード可能なため、場所を問わずどこからでも受講できる。\n\n\n＜コース受講後の姿＞\n本コース受講後には以下のスキルを自然と身に付けることができます。\n・OAuthの用途や、認証・認可のフローの種類と各フローの特徴について、自分の言葉で説明できるようになる\n・AWS各種サービス（Amazon Cognito、Amazon API Gateway、AWS Lambda等）を使用し、自力で認可サーバー構築ができるようになる（OAuth環境構築ができるようになる）\n・AWS各種サービス（Amazon Cognito、Amazon API Gateway、AWS Lambda等）を使用し、自力でリソースサーバーを構築ができるようになる（OAuth環境構築ができるようになる）\n・AWS上でのOAuth環境構築時に混乱しがちなポイントを把握し、なぜそのような設定をするのかに対する理解を深める\n\n\n＜コースの内容＞\n本コースの内容は以下の通りです。\nコース概要\n本コース受講にあたって\n自己紹介\n本コースのねらい\n本コースの内容\nOAuth概要\nOAuthのイメージ\nOAuthとは何か\nOAuthのロール\nOAuthのトークン\nOAuthのエンドポイント\nOAuthのフロー\nOAuth構築ハンズオン（理論編）\nAWSサービス紹介\nハンズオン実施概要\n環境構成\n構築の流れ\nOAuth構築ハンズオン（実践編）\n認可サーバー構築（Cognito）\nリソースサーバー構築（Lambda）\nリソースサーバー構築（API Gateway）\nOAuthハンズオン①（認可コードグラント（PKCEなし））\nOAuthハンズオン②（認可コードグラント（PKCEあり））\nOAuthハンズオン③（インプリシットグラント）\nAWS構築環境削除\n削除対象リソースの確認\n削除対象リソースの削除\nボーナスレクチャー\nボーナスレクチャー\n＜変更履歴＞\n・2023/7/5: Q&A起因で「次のレクチャー「本コースのねらい」本コース受講の前提条件に関する補足」レクチャーを追加\n・2023/9/25: 「3.4.構築の流れ」レクチャーの添付ファイル（AWSアカウント作成.txt）を最新化\n・2023/10/17: Q&A、レビューコメント起因で以下レクチャーを追加、削除\n「次のレクチャー「認可サーバー構築（Cognito）」の補足」レクチャーを追加\nCognitoの新UI操作手順の補足資料を追加\n「次のレクチャー「リソースサーバー構築（API Gateway）」の補足」レクチャーを追加\n動画の手順通り実施できない可能性がある箇所の、対策手順を追加\n「以降の3レクチャー「OAuthハンズオン①～③」の補足」レクチャーを追加\nredirect_uriの指定について補足事項を追加\n「次のレクチャー「本コースのねらい」本コース受講の前提条件に関する補足」レクチャーを削除\nCognitoの新UI操作手順追加に伴い、旧UIを新UI用に読み替えるスキルを前提条件から削除",
      "target_audience": [
        "OAuthという言葉は聞いたことがあり、なんとなくの概要は知っているが、実現方法となると少し自信が無いエンジニアの方"
      ]
    },
    {
      "title": "Ultimate Redux Playlist for Beginners",
      "url": "https://www.udemy.com/course/ultimate-redux-playlist-for-beginners/",
      "bio": "Master State Management with Redux from Zero to Hero",
      "objectives": [],
      "course_content": {
        "Everything About Redux": [
          "What is Redux? Let's understand the need of Redux.",
          "Setting up Actions & Reducers",
          "Setting up Redux Store",
          "Debug Redux Store with Redux Dev Tools",
          "Dispatch Actions & Get State",
          "Create Slice in Redux",
          "ToDo App with Next.js(React) & Redux",
          "What is Redux Thunk?"
        ],
        "Interview Preparation": [
          "Implement Shopping Cart using React & Redux"
        ]
      },
      "requirements": [
        "Basic JavaScript or TypeScript experience needed. Very basic knowledge of React is a good thing."
      ],
      "description": "Redux is an open-source JavaScript library that helps you manage and centralize the state of your application. Think of it as a control center where all the important data about your app lives. This makes it easier to keep track of what's going on and ensures that different parts of your app can work together smoothly.\nIf you're building a user interface with libraries like React or Angular, Redux can be a game-changer. It provides a predictable way to manage your app's state, which means you can spend less time debugging and more time building features.\nImagine you're working on a to-do list app. Without Redux, each part of your app (like the list of tasks, the form to add a new task, and the buttons to mark tasks as done) might manage its own state. This can quickly get messy and lead to bugs, especially as your app grows. With Redux, all the state is managed in one place, making it much easier to keep everything in sync.\nIn this course, we'll start from the very basics of Redux. You don't need any prior experience with state management libraries. We'll cover everything step-by-step, from understanding what state is and why it's important, to setting up Redux in your project, and finally to advanced techniques for optimizing your app's performance.\nBy the end of this series, you'll have a solid understanding of how to use Redux to manage your application's state efficiently. You'll be able to build more complex and reliable apps with confidence. So, join me on this exciting journey from zero to hero in state management with Redux!",
      "target_audience": [
        "Beginner Software Developers inclined towards Frontend Development",
        "Any Developer who is eager to learn State Management in React Applications"
      ]
    },
    {
      "title": "GitHub Actions for Beginners",
      "url": "https://www.udemy.com/course/github-actions-for-beginners/",
      "bio": "Learn GitHub Actions to start creating or understanding CI/CD Workflows",
      "objectives": [
        "Understand GitHub Actions",
        "Write and Manage Workflows",
        "Manage Environments, Variables and Secrets",
        "Create CI/CD Pipelines using GitHub Actions",
        "Composite Actions and Reusable Workflow",
        "Authentication in GitHub Actions",
        "Create and Use Custom Actions"
      ],
      "course_content": {
        "Overview": [
          "GitHub Actions - Overview",
          "Overview - Continued",
          "Resources"
        ],
        "Getting Started": [
          "Getting Started",
          "Getting Started - Continued",
          "Resources"
        ],
        "Steps, Inputs and Outputs": [
          "Step Types and Attributes",
          "Input Types and Attributes",
          "Set and Use Outputs",
          "Resources"
        ],
        "Environments, Variables and Secrets": [
          "Environments Introduction",
          "Create and Use Environment In Workflow",
          "Environment Variables and Secrets",
          "Repository Variables and Screts",
          "Deployment Protection Rules",
          "Deployment Branches and Tags",
          "Resources"
        ],
        "CI/CD with GitHub Actions": [
          "CI/CD Introduction with GitHub Actions",
          "Create CI Pipeline for Java Project",
          "Run CI Pipeline for Java Project",
          "Create and Run CD Pipeline for Java Project",
          "Create and Run CI Pipeline for Python Project",
          "Create and Run CD Pipeline for Python Project",
          "Resources"
        ],
        "Composite Actions and Reusable Workflow": [
          "Reusability in GitHub Actions",
          "Create Composite Action",
          "Use Composite Action",
          "Cross Repository Composite Action",
          "Create Reusable Workflow",
          "Use Reusable Workflow",
          "Use Composite Action and Reusable Workflow",
          "Workflow Access and Permission",
          "Resources"
        ],
        "Authentication in GitHub Actions": [
          "Introduce Authentication in GitHub Actions",
          "Why Authentication in GitHub Actions",
          "Introduce GitHub Token",
          "Use Token in Workflow",
          "Update Token Permission in Workflow",
          "Resources"
        ],
        "Custom Actions": [
          "Introduce Custom Actions",
          "Types of Actions",
          "Composite Actions",
          "Docker Container Actions",
          "JavaScript Actions",
          "Publish Actions in GitHub Marketplace",
          "Resources"
        ],
        "Github Events and Runners": [
          "Events and Runners",
          "Resources"
        ],
        "Workflow Templates and Actions Marketplace": [
          "Workflow Templates",
          "Actions Marketplace",
          "Resources"
        ]
      },
      "requirements": [
        "No prior GitHub Actions knowledge is required",
        "Basic GitHub knowledge is recommended",
        "Basic Development/Testing/Deployment knowledge is recommended"
      ],
      "description": "GitHub Actions is fast-growing CI / CD platform due to its native integration within GitHub, enabling the automation of software development, testing and deployment workflows directly within a repository.\n\n\nI have created this course to help you learn GitHub Actions Via example Workflows. The course intends to enable you to explore and start working with GitHub Actions.\n\n\nIn ChatGPT era, I believe we don't need a long course that promise to cover everything about a subject, we just need a short enough course which enables learner to start exploring and using the subject. This is how I have been learning about new subjects now a days and have created this course with minimal length following same practice.\n\n\nCourse Content:\nThe course is divided in to multiple independent sections and each section contains video lectures and resources at end of section. You can also go through individual section for quick reference or revision.\n\n\nVideo Lectures  -> Covers concepts and examples for each section.\nResources  ->  Contains notes and examples for download, which were discussed in video lectures.\n\n\nPlayback Speed:\nRecommended -> 1.25 or 1.5\n\n\nI hope the course helps you achieve your objectives , and please share your inputs and feedbacks, when you go through the course.",
      "target_audience": [
        "If you are DevOps  just starting with GitHub Actions, the course is for you !",
        "If you are Developer hoping to learn and explore GitHub Actions quickly via examples, the course is for you !",
        "If you are QA/SDET hoping to learn and explore GitHub Actions quickly via examples, the course is for you !",
        "If you are Leads/Manger in your team and hoping to understand GitHub Actions quickly via examples, the course is for you !"
      ]
    },
    {
      "title": "Learn Discord Bot Development From Scratch",
      "url": "https://www.udemy.com/course/learn-discord-bot-development-from-scratch/",
      "bio": "Learn to Build, Scale, and Monetize Discord Bots with JavaScript and Discord.js from Beginner to Expert",
      "objectives": [
        "Create and develop custom Discord bots from scratch, mastering both basic and intermediate bot development techniques.",
        "Grow and scale your Discord bot to engage with a larger community, using the best practices in bot management.",
        "You'll be able to design, develop, and deploy fully functional, Discord bots for any purpose.",
        "Gain expertise in integrating APIs, databases, and advanced features to enhance the functionality of your Discord bots.",
        "Learn how to integrate databases like MongoDB to store user data and enhance the functionality of your Discord bots.",
        "Master the process of hosting your Discord bot on to ensure it runs 24/7.",
        "Learn how to create a documentation website for your bot.",
        "how to efficiently use npm packages to add new features and streamline development.",
        "how to verify your discord bot, and how to make a support server for your discord bot."
      ],
      "course_content": {
        "Basics": [
          "In this course",
          "Make your first bot",
          "Improve the bot's profile",
          "Understanding the discord developer portal",
          "Learn about bot intents",
          "Bot Intents",
          "Installing the required things",
          "Inviting a bot to the guild",
          "Commands Handling",
          "Create first slash command"
        ],
        "Embeds, Buttons & Events": [
          "Methods to create embeds",
          "Learn more deeply about embeds.",
          "Embed Limits",
          "Everything about buttons",
          "Displaying user avatar and server icons in embeds",
          "Everything about events"
        ],
        "Slash Commands": [
          "Tips & tricks",
          "Slash command options",
          "Basic slash command",
          "Check permissions",
          "Everything about slash commands",
          "Autocomplete",
          "Prefix commands",
          "Types of reply",
          "Custom emojis",
          "Discord.js guide"
        ],
        "Database": [
          "Event Handling",
          "Which database you should use",
          "Setup database",
          "MongoDB website",
          "How to use mongodb"
        ],
        "Tips & Tricks": [
          "Verify your discord bot",
          "Host your discord bot 24/7",
          "Post it on top.gg",
          "Documentation website for your bot",
          "Support server for your bot",
          "How to earn money as a bot developer"
        ]
      },
      "requirements": [
        "A Discord account (because, well, you need a bot to talk to someone, right?).",
        "A basic understanding of JavaScript (don't worry, we’ll help you level up!).",
        "A laptop, some internet, and a good cup of coffee (or tea, no judgments here).",
        "Most importantly, a bit of curiosity and excitement to learn something new!"
      ],
      "description": "Unlock the Power of Discord Bot Development: From Basics to Advanced\n\n\nAre you ready to dive deep into the world of Discord bot development? Whether you're a complete beginner or a developer looking to sharpen your skills, this course will take you from the ground up to mastering Discord bots. You'll learn how to build bots.\n\n\nWhat you'll learn in this course:\nBuild custom Discord bots from scratch using JavaScript & Discord.js v14.\nUnderstand how to grow and manage a bot for larger Discord communities.\nIntegrate advanced features like APIs, databases, and more to supercharge your bot.\nLearn how to monetize your skills by earning through bot development or applying to popular bot teams.\n\n\nWhy take this course?\nThis course isn't just about creating simple bots. You'll gain the knowledge to:\nStart as a beginner and advance to expert level with step-by-step instructions.\nBuild bots that help you stand out in the world of Discord development.\nExplore real-world bot projects and learn best practices for bot design and development.\nUnderstand how to make your bot appealing to large communities and businesses.\n\n\nCourse highlights include:\nEasy-to-follow tutorials for both beginners and advanced learners.\nLessons on scaling your bot and ensuring it works seamlessly in active servers.\nBuilding features that can grow engagement and improve server management.\nExclusive insights into how you can monetize your bot-building skills.\n\n\nBy the end of this course, you will have the skills to develop any type of bot you can imagine, join the development teams of famous Discord bots, or even turn bot development into a source of income.\n\n\nJoin today and start creating Discord bots like a pro!",
      "target_audience": [
        "This course is perfect for anyone interested in creating Discord bots, whether you're a complete beginner or an experienced developer. It's ideal for JavaScript learners, Discord community managers, or anyone looking to enhance their server with custom bots. If you want to earn through Discord bot development or apply to teams behind popular bots, this course will give you the skills and knowledge needed to stand out. Master bot development from the ground up and build advanced features!"
      ]
    },
    {
      "title": "Clean Code",
      "url": "https://www.udemy.com/course/temiz-kod/",
      "bio": "Temiz Kod: Basit, anlaşılır, odaklı, rahat değişebilir, tam ve doğru kod yazmayı öğrenin.",
      "objectives": [
        "Anlaşılır, basit ve etkin kod yazmayı öğrenmek."
      ],
      "course_content": {
        "Temiz Kodun Temelleri": [
          "Temiz Kod Nedir?",
          "Temiz Kod Çerçevesi",
          "Basitlik",
          "Basit Kod",
          "Anlaşılır Kod",
          "Mimariye Uyum",
          "İsimlendirme",
          "Standartlar",
          "Dilin Kullanımı",
          "Dokümantasyon",
          "Odaklılık",
          "Doğruluk",
          "Tamlık"
        ],
        "Nesne-Merkezli Programlama: Sistem Yaklaşımı": [
          "Yazılımın Doğası ve Karmaşıklık",
          "Birliktelik (Cohesion)",
          "Nesne Kategorizasyonu",
          "Birliktelik Karşı-Kalıpları",
          "Bağımlılık",
          "Birliktelik ve Bağımlılık",
          "Değişim",
          "Uygulama",
          "Veri ve Sorumluluk",
          "Anemic Domain Model",
          "Ödevler"
        ],
        "Temel Prensipler": [
          "Giriş",
          "SOLID",
          "Single Responsibility Principle (SRP)",
          "Single Responsibility Principle: Cümle",
          "Single Responsibility Principle: Metot",
          "Single Responsibility Principle: Sınıf",
          "Open-Closed Principle (OCP)",
          "Liskov Substitution Principle (LSP)",
          "Interface Segregation Principle (ISP)",
          "Dependency Inversion Principle (DIP)",
          "En Az Bilgi Prensibi",
          "GRASP'a Giriş",
          "GRASP - II",
          "GRASP - III"
        ],
        "Tasarım Kalıplarına Giriş": [
          "Tasarım Kalıbı Nedir?",
          "GoF",
          "Uygulama: Proxy Kalıbı"
        ],
        "Savunmacı Programlama": [
          "Giriş",
          "Savunmacı Sürüş",
          "Savunmacı Programlama",
          "Assertions",
          "Farklı Dillerde Assertion",
          "Java'da Assertion",
          "Sıra Dışı Durum Yönetimi",
          "Sıra Dışı Durum ve Hata",
          "Temel Sıra Dışı Durum Kavramları",
          "Geleneksel Sıra Dışı Durum Yönetimi",
          "Modern Sıra Dışı Durum Yönetimi",
          "Checked ve Unchecked Sıra Dışı Durumlar",
          "Sıra Dışı Durum Yönetimi İçin Tavsiyeler"
        ],
        "Test-Driven Development (TDD)": [
          "Giriş",
          "Doğruluk",
          "TDD",
          "TDD Hayat Döngüsü",
          "Testing",
          "Unit Testing",
          "Integration Testing",
          "Refactoring",
          "Resources"
        ]
      },
      "requirements": [
        "Bir nesne-merkezli programlama dilinde bilgi ve tecrübe bu eğitimi anlamada çok faydalı olur."
      ],
      "description": "Bu eğitimde Object-Oriented Programming dünyasındaki prensip ve yaklaşımları kullanarak nasıl basit (simple), anlaşılır (readable/understandable), değişebilir (changeable) ve etkin (effective) kod geliştirebileceği ele alınacaktır. Yazarın geliştirdiği bir Temiz Kod Çerçevesi (Clean Code Framework) ile basit, odaklı, tam ve doğru kod nedir ve nasıl yazılır, kod örnekleriyle detaylı bir şekilde işlenecektir. Dolayısıyla eğitimde aşağıdaki konular ele alınacaktır:\nTemiz kod kavramı ve farklı tanım ve yaklaşımlar\nTemiz kod çerçevesi: basit, odaklı, tam ve doğru kod\nİsimlendirme, dokümantasyon, kod geleneği vd.\nYazılım karmaşıklığı ve değişim (software complexity and change)\nBirliktelik ve bağımlılık (cohesion & coupling) ve anti-patternları\nSOLID, GRASP, Demeter prensipleri ve diğer yaklaşımlar\nTasarım Kalıpları (Design Patterns)\nSıradışı Durum Yönetimi ve Savunmacı Programlama (Exception Handling & Defensive Programming)\nTest-Güdümlü Geliştirme (Test-Driven Development (TDD))\nEğitimin kaynak kodlarına hem Github üzerinden ulaşabilirsiniz. Github'da ayrıca PDF yansılar (slides) da var fakat yansılarda zaman zaman sonradan yaptığım değişiklikleri de göreceksiniz. Bunun için 1. bölümün kaynaklarına (resources) bakın.\nBu eğitim herhangi bir programlama dilinden bağımsız olarak düşünülmelidir çünkü aslolan prensiplere hakim olmaktır, örnekler prensiplerin öğrenilmesine katkıda bulunur. Kod örneklerin ağırlıklı olarak Java ile verilmesine rağmen zaman zaman C# ve Python vb. dillerden de kod örnekleriyle karşılaşacaksınız.\nBu eğitim online canlı derslerle yapıldığı için sıklıkla katılımcı sorularına cevap verdiğimi göreceksiniz. Umarım bu durum eğitimden elde edeceğiniz faydayı arttırır.",
      "target_audience": [
        "Her seviyeden programcılar, yazılım mühendisleri, temiz kod yazmak isteyen herkes.",
        "Bu eğitim programlama dilinden bağımsızdır, herhangi bir OOP dilini bilen herkese uygundur."
      ]
    },
    {
      "title": "Computer Architecture Mastery: Practice Tests - 2025 Updated",
      "url": "https://www.udemy.com/course/computer-architecture-practice-tests/",
      "bio": "Master Computer Architecture Concepts Through Detailed Practice & Expert Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Computer architecture is the foundation of modern computing, influencing everything from system design to software performance. Whether you are preparing for an academic exam, certification test, or job interview, a solid understanding of computer architecture is essential.\nThis course provides six full-length practice tests, covering around 300 multiple-choice questions (MCQs) to ensure you are fully prepared.\n\n\nEach question is carefully designed to test your knowledge across three difficulty levels:\nBasic Concepts: Covers fundamental principles such as CPU architecture, memory management, and instruction sets.\nIntermediate Scenarios: Includes real-world applications and performance optimization techniques.\nAdvanced Topics: Explores pipeline execution, parallel processing, and cache memory optimization.\nWith detailed explanations accompanying each question, you will not only test your knowledge but also strengthen your understanding of processor design, system architecture, and computational efficiency.\n\n\nWhy You Should Enroll in This Course\nComprehensive Exam Preparation\nGain access to 300 carefully curated questions covering key topics in computer architecture.\nImprove your ability to analyse, optimize, and troubleshoot computing systems.\nBoost Your Confidence with Real-World Scenarios\nEach question is designed to simulate real-world applications and exam conditions.\nDetailed explanations help you understand not just the correct answer, but the reasoning behind it.\nStructured Learning Approach\nThe course is divided into sections covering foundational to advanced concepts, making it suitable for all levels.\nQuizzes are structured to reinforce learning and highlight weak areas for improvement.\nEnhance Your Career Prospects\nA strong understanding of computer architecture is essential for system designers, software engineers, and IT professionals.\nThe knowledge gained from this course will help in technical interviews, industry certifications, and university exams.\nLifetime Access & Risk-Free Enrollment\nGet full lifetime access to the practice tests, allowing you to review and improve your skills at your own pace.\nEnjoy a 30-day money-back guarantee, ensuring a risk-free investment in your learning.\n\n\nIf you want to excel in exams, enhance your technical knowledge, and improve problem-solving skills in computing, this course is for you. With expert-designed quizzes and real-world questions, you will be fully prepared to tackle any computer architecture challenge.\n\n\nEnroll now and take the next step in mastering computer architecture.",
      "target_audience": [
        "Computer science students looking to strengthen their understanding of computer architecture.",
        "Software engineers aiming to improve their knowledge of system design and hardware interactions.",
        "IT professionals preparing for certification exams or technical assessments in computing.",
        "Enthusiasts interested in learning about how computer processors and memory systems work.",
        "Job seekers who need to enhance their technical knowledge for career advancement.",
        "University students studying computer engineering or related fields.",
        "Professionals in system administration and networking looking to expand their skill set.",
        "Educators and instructors who want a structured set of practice questions for teaching.",
        "Anyone preparing for competitive exams that include computer architecture topics.",
        "Self-learners who enjoy exploring the technical aspects of computing and system performance."
      ]
    },
    {
      "title": "【初心者向け】APIとは何か？1時間で開発やマーケティングでAPIが活用される理由と事例を紹介！",
      "url": "https://www.udemy.com/course/digital_api/",
      "bio": "近年、デジタルマーケティングが注目され、APIはエンジニアやマーケターとって必須の知識になってきます。そこで本コースでAPIの全体像を理解することで、ビジネスチャンスを掴みましょう！",
      "objectives": [
        "APIの簡単な仕組みを理解できる",
        "APIを使ってできることを学ぶことができる",
        "APIを使えると何がどのように便利になるのかイメージができる",
        "簡単なAPIの実行を体験できる"
      ],
      "course_content": {
        "はじめに": [
          "はじめに",
          "本コースの目的",
          "なぜAPIを学ぶのか？",
          "本コースの全体像"
        ],
        "APIの基礎": [
          "APIの基礎_このセクションで学べること",
          "APIとは何か？",
          "APIの種類",
          "APIのメリット・デメリット",
          "APIの使い方",
          "なぜAPIが流行っているのか？",
          "APIの基礎_まとめ"
        ],
        "APIの活用": [
          "APIの活用_このセクションで学べること",
          "APIの活用パターン",
          "自動応答：チャットボット",
          "情報収集：Webスクレイピング",
          "システム連携：インボイス制度",
          "生活改善：スマートホーム",
          "自動化：マーケティングシナリオ",
          "APIの活用_まとめ"
        ],
        "【追加コンテンツ】サービス発展のためのAPI活用": [
          "サービス発展に向けて",
          "サービスの拡張方針",
          "サービス拡張方針①APIを提供する",
          "サービス拡張方針②APIを利用する",
          "サービス発展に向けたAPI活用のまとめ",
          "【参考】APIの一例"
        ],
        "APIを体験する": [
          "APIの実行イメージ",
          "Chromeのインストール設定",
          "TalendAPITesterの設定",
          "APIを実行する",
          "APIを体験する_まとめ",
          "【参考】API実行に必要な情報"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "PCおよびインターネット環境があること",
        "プログラミング経験は不要です。"
      ],
      "description": "あなたはAPIという言葉を聞いたことはありますか？\n聞いたことがある方は、APIが何か説明することはできますか？\nまたはAPIが世の中にどのように役に立つか分かりますか？\n\n\nAPIについては何となく聞いたことがある。\nしかし、実態はよくわからないという状態ではないでしょうか？\n\n\nもしそうだとしたら、あなたは時代に取り残されてしまうかもしれません。\nなぜならデジタルマーケティング、システム開発、あらゆる方面でAPIが活用されています\nつまり、APIを知らないことで、ビジネスチャンスを失ってしまうかもしれません。\n\n\nそこで、本コースではAPIとは何か？について説明した上で、APIを活用すればどのようなことができるようになるのか？を解説していきます。\nエンジニアはもちろんのことマーケターなどの非エンジニアの方にも分かりやすいように専門用語を使わずに分かりやすく説明していきます\n\n\nこの講座では「APIを開発するためのスキル」ではなく、\n「APIとは何か？」「APIを利用してどんなことができるのか？」\n「APIがなぜビジネスチャンスに影響するのか？」\nAPIについての本質をお話します。\n\n\nそのため、エンジニアに向けた具体的なスキルアップを促すコースではありませんが、\nエンジニアだけでなく、マーケターやすべてのビジネスに携わる人に向けて\nAPIがビジネスにどのように活用できるのかを解説するコースです。\n\n\nデジタルマーケティングが主流になっているこの時代を生き抜くために必要な知識、「API」を学ぶことは\nきっと、あなたのビジネスを飛躍する上で役立つ知識になると思います。",
      "target_audience": [
        "APIというキーワードを聞いたことがあるが、よくわからない人",
        "APIを活用して何ができるのかを知りたい人",
        "APIがデジタルマーケティングとしてどのように関連するのか知りたい人",
        "APIを利用した開発に向けて全体像を理解したいエンジニア",
        "APIを知ることで自分が携わるサービス・ビジネスを拡大したい人"
      ]
    },
    {
      "title": "Comunicação entre microsserviços",
      "url": "https://www.udemy.com/course/comunicacao-entre-microsservicos/",
      "bio": "Com API REST, Java 11, Spring Boot, PostgreSQL, Javascript ES6, Node.js, MongoDB, RabbitMQ, JWT, Docker e AWS!",
      "objectives": [
        "Comunicação síncrona entre serviços utilizando chamadas de API REST",
        "Comunicação assíncrona entre serviços utilizando AMQP com RabbitMQ e fila de mensagens",
        "Criação de containers para aplicações, bancos de dados e comunicação",
        "Criação de APIs utilizando Java 11 com Spring Boot e PostgreSQL",
        "Criação de APIs utilizando Javascript ES6, Nodejs, Expressjs e MongoDB",
        "Comunicação entre containers utilizando Docker-Compose",
        "Como proteger sua aplicação com variáveis de ambiente",
        "Deploy na AWS nos serviços AWS Elastic Beanstalk, Amazon RDS e Amazon CloudWatch"
      ],
      "course_content": {
        "Introdução - Apresentação, Arquitetura Monolítica e Microsserviços": [
          "Apresentação do curso",
          "Apresentação do que iremos construir",
          "Arquitetura Monolítica - Conceito, Aplicações, Vantagens e Desvantagens",
          "Arquitetura de Microsserviços - Conceito, Aplicações, Vantagens e Desvantagens",
          "Comparativo entre a arquitetura monolítica e microsserviços"
        ],
        "Teoria - Comunicação síncrona e assíncrona e RabbitMQ": [
          "Comunicação síncrona - Conceitos",
          "Métodos HTTP",
          "Códigos de status HTTP",
          "Comunicação assíncrona, RabbitMQ e protocolo AMQP",
          "Tipos de Exchange e características de filas"
        ],
        "Preparação do ambiente de desenvolvimento com Docker": [
          "Definição das ferramentas utilizadas durante o curso",
          "Criando o projeto no Github",
          "Criação do banco de dados PostgreSQL com Docker e acessando via DBeaver",
          "Criação do banco de dados NoSQL MongoDB com Docker e acessando via CLI.",
          "Criação do RabbitMQ com o Docker e acessando via interface gráfica no navegador",
          "Rodando tudo junto com Docker-compose"
        ],
        "Início da criação dos projetos dos microsserviços": [
          "Criação do projeto Auth API com Node.js, Express.js, JWT e PostgreSQL",
          "Criação do projeto Product API com Java, Spring Boot e PostgreSQL",
          "Criação do projeto Sales API com Node.js",
          "Criação do Dockerfile dos projetos de Auth e Sales (Node.js)",
          "Criação do Dockerfile do projeto Product-API (Spring)",
          "Subindo tudo com Docker-Compose (serviços e APIs)"
        ],
        "Microsserviço de Autenticação (Auth-API)": [
          "Configurando o Sequelize no projeto",
          "Criando os dados iniciais para o serviço",
          "Dividindo a aplicação em camadas",
          "Criando o repository e a service",
          "Criando exceptions e as camadas controller e routes",
          "Desenvolvendo a autenticação com JWT",
          "Adicionando o middleware de autenticação",
          "Implementando segurança nos endpoints"
        ],
        "Microsserviço de Produto (Product-API)": [
          "Configurando o PostgreSQL na aplicação",
          "Criando as entidades de Produto, Fornecedor e Categoria",
          "Inserindo os dados iniciais",
          "Criando estrutura inicial de DTO, Repository, Service e Controller de Categoria",
          "Criando método POST para Produto e Fornecedor",
          "Testando POSTs criados e adicionando buscas com métodos GET para Categoria",
          "Criando endpoints com métodos GET para Produto e Fornecedores",
          "Finalizando nosso CRUD com métodos PUT (atualização) e DELETE (remoção)",
          "Configurando o JWT no projeto",
          "Adicionando interceptador de token JWT nos endpoints",
          "Configurando o RabbitMQ",
          "Adicionando os Listener da fila de atualização do estoque do produto",
          "Atualizando o estoque e publicando (sender) na fila de confirmação de vendas",
          "Adendo: Correção de lógica no processo assíncrono",
          "Configurando client HTTP para Sales API com Feign Client.",
          "Implementando último endpoint da aplicação. Verificar estoque dos produtos."
        ],
        "Microsserviço de Vendas (Sales-API)": [
          "Configurando o MongoDB",
          "Criando as models do MongoDB",
          "Inserindo os dados iniciais",
          "Configurando interceptador para validação de token JWT na aplicação",
          "Configurando o RabbitMQ",
          "Criando configuração para aguardar o container do RabbitMQ subir",
          "Criando Listener da aplicação",
          "Criando Sender da aplicação",
          "Criando Repository e Service de um pedido",
          "Criando processamento assíncrono de recebimento de confirmação de uma venda",
          "Criando chamada HTTP REST para Product-API com Axios para validar estoque",
          "Criando Controller e Routes e endpoint GET por ID para os pedidos",
          "Finaliza endpoints GET e testes da comunicação entre as APIs com Postman"
        ],
        "Rastreabilidade e logs nas APIs": [
          "Introdução sobre logs, tracing com headers de transactionID e serviceID",
          "Implementando tracing de requisições entre serviços em Auth-API",
          "Implementando tracing de requisições entre serviços em Sales-API",
          "Salvando IDs de tracing de requisições na model do MongoDB",
          "Implementando tracing de requisições entre serviços em Product-API"
        ],
        "Subindo todas as APIs com Docker-compose": [
          "Definindo as variáveis de ambiente nas aplicações",
          "Definindo as variáveis de ambiente no docker-compose",
          "Últimos ajustes antes de subir tudo integrado",
          "Subindo tudo com docker-compose!",
          "Apresentando tudo que foi desenvolvido rodando local com docker-compose"
        ],
        "(DESCONTINUADO: NÃO HÁ MAIS PLANOS GRÁTIS) Subindo todas as aplicações no Heroku": [
          "Depreciação do Heroku e novo módulo de deploy na nuvem com AWS",
          "Criando os projetos Auth-API, Product-API e Sales-API separados no Github",
          "Subindo Auth-API no Heroku com PostgreSQL (add-on do Heroku)",
          "Subindo Sales-API no Heroku com CloudAMQP (RabbitMQ) e Atlas MongoDB",
          "Subindo Product-API no Heroku com PostgreSQL e CloudAMQP (RabbitMQ)",
          "Tracing e Logs com Kibana usando add-on Coralogix Logging nas APIs",
          "Apresentando tudo que foi desenvolvido rodando em nuvem"
        ]
      },
      "requirements": [
        "Conhecimento da linguagem Java (1.8+)",
        "Conhecimento da linguagem Javascript (ES6)",
        "Conhecimentos básicos em SQL e NoSQL (MongoDB)",
        "Noções dos frameworks Spring Boot 2.x e ExpressJs",
        "Noções de conceitos de API REST"
      ],
      "description": "Neste curso, será aboradado o conceito teórico e prático sobre comunicação entre microsserviços e como aplicá-las. Praticamente iremos criar 3 APIs, duas delas com Node.js, MongoDB, Mongoose, Sequelize, PostgreSQL e JWT para autenticação. Iremos também criar uma API com Java 11 utilizando Spring Boot, PostgreSQL, Spring Data JPA, Spring Cloud OpenFeign e JWT, realizando a comunicação e integração entre essas duas tecnologias.\nIremos utilizar o RabbitMQ para a comunicação via filas de mensagens utilizando o protocolo AMQP com o intuito de criar uma comunicação assíncrona entre os serviços. Iremos também utilziar comunicação síncrona entre aplicações, ou melhor, chamadas a clients HTTP entre as APIs, integrando-as com as tecnologias FeignClient (Spring Boot) e Axios (Node.js).\nIremos também subir todas as nossas aplicações em containers Docker utilizando o Docker-compose.\nNo final do curso, faremos também o deploy de toda a arquitetura na AWS utilizando os serviços AWS Elastic Beanstalk, Amazon RDS e Amazon CloudWatch!\nNeste curso, você verá uma abordagem teórica sobre arquitetura de microsserviços e arquitetura monolítica, suas comparações, vantagens e desvantagens, comunicação síncrona e assíncrona entre aplicações utilizando chamadas a API REST (HTTP)  e filas de mensagens, além de conseguir compreender todos esses conceitos ao vê-los ocorrendo na prática. Iremos também detalhar os métodos e status HTTP, além também dos tipos de exchanges e filas de mensagens existentes no RabbitMQ para posterior implementação.\nIremos também implementar um básico de rastreabilidade de requisições entre microsserviços com logs nas APIs, IDs de requisições e iremos visualizar nossa rastreabilidade através dos logs da aplicação.\nAo fim deste curso você será capaz de criar suas próprias APIs e integrá-las da maneira que julgar necessário, com filas de mensagens ou chamadas REST, será capaz também de definir um ambiente de desenvolvimento e executar todos os serviços em containers, definindo suas próprias variáveis e arquivos de configuração de ambiente.\n\n\n** ATUALIZAÇÕES DE 2023 **\n\n\nForam feitas atualizações de todas as biliotecas e frameworks em Node.js, foi atualizado o projeto  para Spring Boot 3 e Java 17!\nFoi realizado o deploy de toda a arquitetura na AWS utilizando os serviços AWS Elastic Beanstalk, Amazon RDS, Amazon CloudWatch, Cloud AMQP e Atlas MongoDB.",
      "target_audience": [
        "Desenvolvedores Back-End (nível iniciante ou intermediário)",
        "Desenvolvedores Java (nível iniciante ou intermediário)",
        "Desenvolvedores Nodejs (nível iniciante ou intermediário)"
      ]
    },
    {
      "title": "Ultimate Design Patterns",
      "url": "https://www.udemy.com/course/ultimate-design-patterns/",
      "bio": "Learn to design and build maintainable, extensible and robust software, and advance your career level",
      "objectives": [
        "Master 22 of Classic Design Patterns in Software Development",
        "Get a Complete Understanding of Design Patterns Applicability and When to Use Them",
        "Understand How Software Frameworks and Libraries Utilize Design Patterns Internally with Examples",
        "Get a Real World Examples with Hands on Code Instead of Pizzas, Animals and Shapes",
        "Learn How to Build Reusable, Maintainable and Extensible Software",
        "Understand and Apply the Principles of Object Oriented Design",
        "Master and Apply the SOLID Design Principles with Practical Examples and Hands on Code",
        "Practical Set of Challenges to Solve",
        "Apply Creational Patterns to Create Objects in a Flexible and Consistent Manner",
        "Implement Structural Patterns to Compose Objects and Form Larger Set of Structures",
        "Utilize Behavioral Patterns to Define Interaction between Objects",
        "Comprehensive Knowledge about Design Discussions and Enhancements",
        "Remark your Design Patterns with a Set of High Quality Designs of Real World Analogies"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Ultimate Design Pattern Challenge",
          "How to Take This Course",
          "What are Design Patterns",
          "Quiz - Design Patterns Introduction",
          "Code and Slides Download"
        ],
        "SOLID Design Principles Explained": [
          "SOLID Principles Introduction",
          "Single Responsibility Principle",
          "Open Close Principle",
          "Liskov Substitution Principle",
          "Interface Segregation Principle",
          "Dependency Inversion Principle",
          "SOLID Quick Recap"
        ],
        "UML - Unified Model Language": [
          "Overview of Unified Model Language",
          "Unified Model Language - Hands on Code & Powerful IDE Techniques"
        ],
        "Behavioral Design Patterns": [
          "Behavioral Design Patterns Introduction"
        ],
        "Observer": [
          "Observer - Challenge Use Case",
          "Observer - Challenge Solution using UML",
          "Observer - Challenge Solution Hands on Coding",
          "Observer - Solution Discussion and Enhancements",
          "Observer - Design Pattern Implementation",
          "Observer - Real World Analogy",
          "Observer in Action - Common Libraries and Frameworks",
          "Observer Applicability - When to Use",
          "Observer Coding Exercise"
        ],
        "Strategy": [
          "Strategy - Challenge Use Case",
          "Strategy - Challenge Solution using UML",
          "Strategy - Challenge Solution Hands on Coding",
          "Strategy - Solution Discussion and Enhancements",
          "Strategy - Design Pattern Implementation",
          "Strategy - Real World Analogy",
          "Strategy in Action - Common Libraries and Frameworks",
          "Strategy Applicability - When to Use",
          "Strategy Coding Exercise",
          "Ultimate Design Pattern Challenge"
        ],
        "Template Method": [
          "Template Method - Challenge Use Case",
          "Template Method - Challenge Solution using UML",
          "Template Method - Challenge Solution Hands on Coding",
          "Template Method - Solution Discussion and Enhancements",
          "Template Method - Design Pattern Implementation",
          "Template Method - Real World Analogy",
          "Template Method in Action - Common Libraries and Frameworks",
          "Template Method Applicability - When to Use",
          "Template Method Coding Exercise",
          "Ultimate Design Pattern Challenge"
        ],
        "Memento": [
          "Memento - Challenge Use Case",
          "Memento - Challenge Solution using UML",
          "Memento - Challenge Solution Hands on Coding",
          "Memento - Solution Discussion and Enhancements",
          "Memento - Design Pattern Implementation",
          "Memento - Real World Analogy",
          "Memento in Action - Common Libraries and Frameworks",
          "Memento Applicability - When to Use",
          "Memento Coding Exercise"
        ],
        "Visitor": [
          "Visitor - Challenge Use Case",
          "Visitor - Challenge Solution using UML",
          "Visitor - Challenge Solution Hands on Coding",
          "Visitor - Solution Discussion and Enhancements",
          "Visitor - Design Pattern Implementation",
          "Visitor - Real World Analogy",
          "Visitor in Action - Common Libraries and Frameworks",
          "Visitor Applicability - When to Use",
          "Visitor Coding Exercise"
        ],
        "Iterator": [
          "Iterator - Challenge Use Case",
          "Iterator - Challenge Solution using UML",
          "Iterator - Challenge Solution Hands on Coding",
          "Iterator - Solution Discussion and Enhancements",
          "Iterator - Design Pattern Implementation",
          "Iterator - Real World Analogy",
          "Iterator in Action - Common Libraries and Frameworks",
          "Iterator Applicability - When to Use",
          "Iterator Coding Exercise"
        ]
      },
      "requirements": [
        "~(3-6) Months of Programming Experience",
        "Familiarity with Object Oriented Programming"
      ],
      "description": "السلام عليكم ورحمة الله وبركاته ,,\nاللهم اجعله عملًا متقبلًا , واللهم اجعله علمًا ينتفع به وعلمنا ما ينفعنا واستعملنا ولا تستبدلنا\n\n\nIf you have been reading books and articles and still find a gap to apply design patterns in your work, if you don't know anything about design patterns, or if you already know what design patterns are,. This course is fit for all, Insha'allah, and I believe that it will add valuable information that you're going to benefit from.\n\n\nThere are no pizzas, animals, or shapes in this course, so get ready for our wonderful adventure!\n\n\nCourse Overview\n\nThis course aims not to just help you master design patterns but also learn to design and build maintainable, extensible, reusable, and robust software, and as a result, help you advance your career level!\n\n\nCourse Structure\n\nThe course is structured in the most convenient way of learning, including challenges to implement, so you're learning by doing, learning how to think, designing, and modeling a solution using UML, as well as improving your critical thinking by discussing the solution provided and its pitfalls, how to improve it, and finally reaching the design pattern implementation.\n\nThat's not the end! It's a journey, so after applying the design pattern, we still have a journey to continue through: reading the design pattern's applicability and when to use it, and also remarking it with high-quality designs using real-world analogies.\n\n\nFinally, You are going to see a practical example of common libraries and frameworks that we use in our daily lives during programming without understanding that they are using a design pattern behind the scenes.\n\n\nThese examples would give you the power to see how frameworks actually leverage design patterns\n\nThe course has a comprehensive set of practical examples, covering almost everything you might need in order to fill the gap between reading design patterns in books and articles and applying them to your projects.\n\n\nWhat is provided with the course?\n\nCode samples from the hands-on lectures. You can download the finished code to study on your own.\nAll UML diagrams are provided as PDFs.\nHigh-quality designs for real-world analogies.\nCode snippets in common libraries and frameworks that apply design patterns behind the scenes.\n\n\nWhat is not covered in this course?\nObject-Oriented Programming\n\n\nWhat is covered in this course?\nSOLID Principles\nUML (Unified Model Language)\nClassical 22 Design Patterns\nObject-Oriented Design",
      "target_audience": [
        "This course'll help you as a developer to advance to next stage in your career.",
        "This course will benefit you as a developer, regardless of your experience.",
        "If you are experience developer, this course will help you re-cap the design patterns in a practical way and sharpen your software design skills",
        "If you read a lot about design pattern but can't apply them, this course will help you to master them in a practical way",
        "If you get bored of pizzas, animals, and shapes, this course will be absolutely the right choice."
      ]
    },
    {
      "title": "Spring Boot Dependency Injection Ioc",
      "url": "https://www.udemy.com/course/spring-boot-tutorial-d/",
      "bio": "Dependency Injection IoC",
      "objectives": [],
      "course_content": {
        "Spring dependency Injection": [
          "Create a Spring boot project in Eclipse IDE easy and fast.",
          "Create Spring boot web project in Eclipse IDE.",
          "Spring boot dependency injection IoC container @Component annotation.",
          "Spring boot dependency injection @Autowired annotation.",
          "Spring boot dependency injection @Scope annotation.",
          "Spring boot dependency injection @Qualifier.",
          "Spring dependency injection custom beans with @Configuration and @Bean."
        ]
      },
      "requirements": [
        "Java"
      ],
      "description": "The Spring Boot Dependency Injection (IoC) course is designed to give students a comprehensive understanding of one of the core concepts in Spring Framework: Inversion of Control (IoC). This course provides an in-depth exploration of dependency injection, a design pattern that is crucial for developing loosely coupled and easily testable applications.\nStudents will start by learning the basics of Spring Boot, an extension of the Spring Framework that simplifies the bootstrapping and development of new Spring applications. The course then delves into the principles of IoC and how it is implemented in Spring Boot. Through practical examples and hands-on exercises, students will learn how to create and manage beans, configure bean properties, and understand the different types of dependency injection (constructor-based, setter-based, and field-based).\nThe course also covers advanced topics such as the Spring Context, lifecycle management, and the use of annotations like @Autowired, @Component, @Service, and @Repository. By the end of the course, students will have a solid grasp of how to leverage Spring Boot’s IoC container to build scalable and maintainable applications efficiently. This course is ideal for aspiring Java developers, software engineers, and anyone interested in mastering Spring Boot and IoC for modern application development.\nThanks for enrolling in the Course.",
      "target_audience": [
        "Beginners in Spring Boot"
      ]
    },
    {
      "title": "Fundamentos de Arquitetura de Microsserviços (Microservices)",
      "url": "https://www.udemy.com/course/fundamentos-de-arquitetura-de-microsservicos/",
      "bio": "Introdução a Arquitetura de Microsserviços para o desenvolvimento de sistemas.",
      "objectives": [
        "Fundamentos básicos e conceitos de Arquitetura de Microsserviços para desenvolvimento de sistemas."
      ],
      "course_content": {
        "Introdução": [
          "Por que microsserviços?"
        ],
        "Arquitetura": [
          "Escala e distribuição",
          "Multitenancy",
          "Integrando Serviços"
        ],
        "Plataforma": [
          "Visão geral",
          "Componentes",
          "Serviços de foundation"
        ],
        "Operação": [
          "DevOps",
          "Estratégias de deploy"
        ]
      },
      "requirements": [
        "Ter noções de desenvolvimento de sistemas",
        "Ter noções de arquitetura de sistemas",
        "Ter noções de arquitetura web"
      ],
      "description": "Através deste curso, você aprenderá os fundamentos básicos e iniciais relacionados a Arquitetura de Microsserviços. Serão abordados temas como o porque da utilização de microsserviços, estratégias de escala da aplicação e banco de dados, formas de integração e comunicação e componentes de plataforma. Nenhuma linguagem de programação é pré-requisito (porém noções de arquitetura web e de sistemas são bem-vindas), visto que serão abordados os conceitos de forma abrangente, com o objetivo de ter uma visão macro de arquitetura e funcionamento de aplicações distribuídas.  Por fim, será apresentado uma breve apresentação do que é DevOps e como a operação se aplica a esta arquitetura em específico.",
      "target_audience": [
        "Analistas de sistemas",
        "Desenvolvedores",
        "Analistas de negócio"
      ]
    },
    {
      "title": "caniasERP Introduction Training",
      "url": "https://www.udemy.com/course/caniaserp-introduction-training/",
      "bio": "caniasERP Introduction Training",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Level of Knowledge: None",
        "Required Materials: Notebook"
      ],
      "description": "Since the early days of IAS, the dream was to be the game-changer in the ERP industry by providing best-in-class solutions. IAS developed its own unique software development platform, TROIA in 1997 and released caniasERP 6.01 in the year 2000 as one of the first few ERP solutions available online with full functionality.\nOver the years, the brand 'caniasERP' became fully integrated and flexible ERP software for companies of all sizes. caniasERP offers solutions that include planning, procurement, material management, and production as well as sales, CRM, finance, project and document management, corporate agenda and many different processes. In terms of the needs of the company, caniasERP system can be used in both standard and customized forms. With its open-source software development infrastructure, which allows for unlimited flexibility, caniasERP enables companies to optimize their business processes and protect their competitive structures.\ncaniasERP Introduction Training is designed for people that will encounter caniasERP for the first time. This training covers many key points of using caniasERP effectively such as login screen, desktop and toolbars, tools, transactions, system settings, and trace files.",
      "target_audience": [
        "New caniasERP users,",
        "caniasERP users who are willing to use the software more efficiently."
      ]
    },
    {
      "title": "AWS S3 for Java Developers",
      "url": "https://www.udemy.com/course/aws-s3-for-java-developers/",
      "bio": "AWS S3 for Java Developers: Buckets, Objects, Access Control & Security",
      "objectives": [
        "Understand object storage fundamentals and explain when and why to use Amazon S3 over traditional databases",
        "Create and manage S3 buckets programmatically using the AWS SDK for Java",
        "Upload, download, and version files in S3 from a Java Spring Boot application",
        "Implement secure file sharing using pre-signed URLs and enforce fine-grained access controls",
        "Optimize storage costs by applying S3 storage classes and lifecycle policies",
        "Configure replication and encryption to ensure high availability, disaster recovery, and data protection",
        "Build a real-world backend project (a videogame marketplace) integrating S3 with REST APIs in Spring Boot",
        "Apply best practices for access control using bucket policies, IAM roles, and access points in Java applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What are object stores?",
          "Project showcase"
        ],
        "Buckets": [
          "Section Intro",
          "Bucket Types",
          "Bucket Naming Rules",
          "Bucket Access Methods",
          "Common Bucket Patterns",
          "[Coding] Configuring the S3 Client",
          "[Coding] Creating Buckets",
          "[Coding] Listing Buckets",
          "[Coding] Deleting Buckets",
          "Object Versioning",
          "[Coding] Object Versioning",
          "Adittional Bucket's Features"
        ],
        "Objects": [
          "Section Introduction",
          "Objects",
          "[Coding] Uploading Objects: Single Operation",
          "[Coding] Uploading Objects: Multipart Upload",
          "[Coding] Downloading Objects",
          "[Coding] Deleting Single Objects",
          "[Coding] Deleting Multiple Objects",
          "Pre-Signed URLs",
          "[Coding] Implementing Pre-Signed URLs - Object Upload - Part I",
          "[Coding] Implementing Pre-Signed URLs - Object Upload - Part II",
          "Metadata",
          "[Coding] Metadata",
          "Storage Classes",
          "[Coding] Copying Objects",
          "Lifecycle Configuration",
          "[Coding] Implementing Lifecycle Transition Actions",
          "[Coding] Implementing Lifecycle Expiration Actions",
          "Other Object Features"
        ],
        "Access Control": [
          "Section Introduction",
          "Bucket Policies",
          "[Coding] Bucket Policies",
          "Identity Based Policies",
          "[Coding] Identity Based Policies",
          "Access Grants",
          "Access Points",
          "ACLs and Object Ownership"
        ],
        "Security and Data Protection": [
          "Section Intro",
          "Encryption",
          "Multi-region Replication",
          "Object Locking"
        ],
        "Ending": [
          "YOU FINISHED THE COURSE!"
        ]
      },
      "requirements": [
        "Medium knowledge of the Java language",
        "Basic knowledge of the Spring Framework",
        "Former knowledge of Amazon IAM and Availability Zones is desirable",
        "Basic knowledge of JUnit Framework"
      ],
      "description": "Amazon S3 is one of the most widely used cloud services in the world — powering websites, applications, data pipelines, backups, and more. But for many developers, integrating S3 into real applications can feel complex.\n\n\nThis course is designed to give Java developers the skills and confidence to work with Amazon S3 in real-world projects.\n\n\nYou’ll learn step by step how to:\nUnderstand object storage and why S3 is a cornerstone of modern cloud applications.\nCreate and manage buckets, objects, and storage classes programmatically with the AWS SDK for Java.\nUpload and download files efficiently, including large file handling with multipart uploads.\nSecure your data with encryption, access policies, and pre-signed URLs.\nAutomate cost optimization with lifecycle rules and storage transitions.\nImplement replication and disaster recovery strategies.\nAnd to make everything practical, you’ll build a real-world backend project: a videogame marketplace (similar to Steam), where studios upload their games and gamers can purchase and download them. Using Java 21 and Spring Boot, you’ll expose REST APIs, handle file versioning, manage access control, and ensure security at every step.\n\n\nBy the end of this course, you’ll not only understand S3 — you’ll know how to use it confidently in your Java applications, applying best practices for scalability, cost efficiency, and security.\n\n\nWhether you’re preparing for your next job opportunity, enhancing your backend projects, or simply expanding your cloud expertise, this course will give you the skills to master AWS S3 with Java.",
      "target_audience": [
        "Java developers who want to master Amazon S3 using its Java SDK"
      ]
    },
    {
      "title": "End-to-End Small Object Detection Project",
      "url": "https://www.udemy.com/course/end-to-end-small-object-detection-project/",
      "bio": "(From Data Collection to Deployment & Customer Handover)",
      "objectives": [
        "Build a real-world object detector for cattle ticks/flies using YOLO/PyTorch from scratch.",
        "Collect, annotate & preprocess datasets for small object detection in agriculture.",
        "Train, evaluate & optimize models using metrics like mAP and precision.",
        "Deploy a user-friendly AI app (Flask/FastAPI) and hand over deliverables to clients.",
        "Prepare the project report to the cusotmer"
      ],
      "course_content": {
        "Dection Project Introduciton": [
          "Lecture 1 Project Introuduction"
        ],
        "Data Capturing Equipment Introudction": [
          "Lecture 2 Data Collection Device Selection"
        ],
        "Section 2 Data Set Prepration": [
          "Lecture 3 Data Collection and Preprocessing for ML",
          "Lecture 4 Image Extraction Practical Code",
          "Lecture 5 Preparing Datasets for Cattle Tick DetectionTask",
          "Lecture 6 Hands-on Data preparation using RoboFlow"
        ],
        "Section 4 Detection Models": [
          "Lecture 7: Detection Models Introudction",
          "Lecture 8: YOLOv8 With Goolge Colab: Proactical Object Dection",
          "Lecture 9 Hands on Proactical Code"
        ],
        "Section 4 : Model Deployment": [
          "Lecture 10: Tick Detection Web App - Frontend Architecture",
          "Lecture 11 UI Design"
        ],
        "Pacakge Deliver to Customer": [
          "Lecture 12 Package Introuduction",
          "Lecture 13 : echnical Report & Customer Guide: Livestock Tick Detection System"
        ]
      },
      "requirements": [
        "•Basic Python knowledge (loops, functions). No prior AI experience needed—we’ll start from the basics! A Google account (for free GPU via Colab)."
      ],
      "description": "Transform raw images into a production-ready AI solution with this comprehensive project-based course. You'll develop a complete object detection system for identifying cattle parasites - a critical challenge in livestock management. Using industry-standard YOLO models with PyTorch, we'll guide you through the entire development lifecycle from initial data collection to final deployment.\nCourse Value Proposition:\nPractical, hands-on approach focused on delivering a working solution\nAgriculture-specific implementation addressing real-world problems\nProfessional workflow covering both technical implementation and client delivery\nDeployment-ready skills that go beyond academic exercises\nKey Learning Components:\nData Pipeline Development:\nCollecting and annotating agricultural image datasets\nPreprocessing techniques for small object detection\nDataset augmentation and balancing methods\nModel Development:\nYOLO architecture fundamentals\nTransfer learning with pretrained weights\nPerformance evaluation using industry metrics\nProduction Implementation:\nBuilding a FastAPI web interface\nCloud deployment options\nCreating client documentation\nTarget Audience:\nThis course is designed for Python developers seeking practical AI implementation skills, agriculture professionals exploring technology solutions, and students looking to build portfolio-worthy projects. Basic Python knowledge is recommended, but no prior AI experience is required as we cover all necessary fundamentals.\nTechnical Stack:\nYOLOv5/YOLOv8 (Ultralytics implementation)\nPyTorch framework\nFastAPI for web services\nRoboflow for data annotation\nGoogle Colab for GPU acceleration\nBy course completion, you'll have a fully functional object detection system and the skills to adapt this solution to other agricultural or small-object detection use cases. The project-based approach ensures you gain practical experience that translates directly to professional applications.",
      "target_audience": [
        "Python devs who want to break into AI Computer Vision with a hands-on project.",
        "Agriculture professionals exploring AI solutions for pest/livestock monitoring.",
        "AI students tired of theory—ready to build & deploy a real-world model.",
        "Freelancers looking to add object detection skills ."
      ]
    },
    {
      "title": "Master SOLID Design Principles",
      "url": "https://www.udemy.com/course/master-solid-design-principles/",
      "bio": "Craft Scalable & Maintainable Software with Expertise",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "What are the SOLID principles?",
          "Don't Reinvent the Wheel",
          "Object Oriented Desing",
          "Why is it important to follow SOLID principles?",
          "SOLID Mind Map",
          "Common Misconceptions about SOLID Principles",
          "Congrulations"
        ],
        "Single Responsibility Principle": [
          "What is Single Responsibility Principle (SRP)?",
          "SRP-Practical",
          "Understanding the Single Responsibility Principle",
          "Single Responsibility Principle (SRP): Understanding with Examples",
          "Congratulations"
        ],
        "Open/Closed Principle": [
          "What is the Open/Closed Principle?",
          "Exploring the Open/Closed Principle",
          "Open/Closed Principle (OCP): Real-World Examples"
        ],
        "Liskov Substitution Principle (LSP)": [
          "What is the Liskov Substitution Principle (LSP)?",
          "Mastering the Liskov Substitution Principle",
          "Liskov Substitution Principle (LSP): Real-Life Examples"
        ],
        "Interface Segregation Principle (ISP)": [
          "What is the Interface Segregation Principle (ISP)?",
          "Interface Segregation Principle (ISP): Simple Real-Life Examples",
          "Interface Segregation Principle Insight"
        ],
        "Dependency Inversion Principle (DIP)": [
          "What is the Dependency Inversion Principle (DIP)?",
          "Deciphering the Dependency Inversion Principle",
          "Dependency Inversion Principle (DIP): Understanding with Real-Life Examples"
        ],
        "EXTRAS": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic understanding of object-oriented programming is helpful but not mandatory for this course."
      ],
      "description": "Dive into the essence of object-oriented programming and master the SOLID Design Principles with our in-depth online course. Ideal for both aspiring and seasoned software developers, this course is your gateway to enhancing your coding skills with robust, scalable software designs.\n\nA Detailed Learning Path\nS: Single Responsibility Principle (SRP): Simplify your code architecture by allocating a single responsibility to each class, enhancing manageability and robustness.\nO: Open/Closed Principle (OCP): Explore techniques to expand your software entities without altering existing code, leading to adaptable and future-proof systems.\nL: Liskov Substitution Principle (LSP): Understand the importance of substitutable objects for interchangeable components that streamline system upgrades and maintenance.\nI: Interface Segregation Principle (ISP): Learn the art of designing lean interfaces, avoiding overcomplicated designs.\nD: Dependency Inversion Principle (DIP): Gain practical experience in reversing dependencies to create flexible software architectures.\nYour Gains:\nUniversal Skill Application: Apply SOLID principles across various object-oriented languages like Java, C#, Python, and more.\nEnhanced Code Quality: Write cleaner, more efficient code that's easier to understand, test, and maintain.\nProblem-Solving Skills: Improve your ability to fix common design errors and refactor legacy code.\nValuable Resources: Enjoy lifetime access to resources including video tutorials, practical exercises, and case studies.\nProof of Expertise: Obtain a certificate upon completion, demonstrating your commitment to software craftsmanship.\nIdeal For:\nDevelopers and Engineers: Enhance your coding techniques and patterns.\nTechnical Leads and Architects: Advocate best practices in your teams.\nSelf-Taught Programmers: Upgrade your skills for enterprise-level application development.\nBegin your journey towards exceptional software craftsmanship with our course. Transform your coding career by mastering the SOLID Design Principles in a comprehensive and engaging learning experience.",
      "target_audience": [
        "This course is ideal for aspiring and current software developers, programmers, and computer science students who want to deepen their understanding of SOLID principles and apply them to create more robust, maintainable, and scalable software. Whether you are looking to enhance your coding skills or preparing for a professional software development role, this course will provide valuable insights into fundamental design principles that are crucial in modern software development."
      ]
    },
    {
      "title": "Write High Performance Web Server in C++",
      "url": "https://www.udemy.com/course/write-high-performance-web-server-in-c/",
      "bio": "Learn socket programming in C++ on Linux",
      "objectives": [
        "Advanced C/C++ programming skills",
        "Advanced Linux environment programming skills",
        "VSCode C++ programming skills",
        "VisualStudio C++ programming skills",
        "make build system",
        "cmake build system",
        "Linux epoll conception",
        "Reactor patterns",
        "High Performance Webserver design and implement",
        "TCP server design and implement",
        "HTTP server design and implement",
        "File server design and implement",
        "Webbench design and implement"
      ],
      "course_content": {
        "Introduction": [
          "Project Overview",
          "Course Preparation"
        ],
        "Socket Programming in C++": [
          "Introduction to Socket Programming",
          "Create a Socket Server",
          "Create a Socket Client",
          "Make Program More Robust"
        ],
        "Network Programming with Epoll": [
          "Introduction to Epoll Stystem Call",
          "Refactoring Program with OOP Paradigm",
          "Encapsulate epoll_data in the Channel Class"
        ],
        "Reactor Programming Pattern": [
          "Introduction to Reactor Pattern",
          "Design the EventLoop Class",
          "Design the Acceptor Class",
          "Design the Connection Class",
          "Improve IO Performance with Buffer"
        ],
        "Programming Concurrency in C++": [
          "Multithreading in C++",
          "Mutex in C++",
          "Condition Variables in C++"
        ],
        "Multithreading Network Programming": [
          "Manage Threads with Thread Poll",
          "Create a Benchmark Test for Server",
          "Master-slave Reactor Pattern",
          "Refactor Connection Class"
        ],
        "Smart Pointers in C++": [
          "Introduction to C++ Smart Pointers",
          "Common Problems with Shared Pointers"
        ],
        "Network Programming with Smart Pointers": [
          "Manage Resource with unique_ptr",
          "Manage Connection Lifecycle with shared_ptr",
          "Setup Build System with CMake",
          "Create Subreactor in Subthread"
        ],
        "Build a Http Server": [
          "Create HTTP Parser",
          "Create Http Server"
        ],
        "Manage Connection with Timer": [
          "Introduction to timerfd",
          "Implement a Timer with timerfd",
          "Close Connection by Timer"
        ]
      },
      "requirements": [
        "Basic C++ programming",
        "Basic Linux environment programming skills",
        "Basic make and cmake config skills",
        "Basic concurrency programming conceptions",
        "Basic HTTP protocol conceptions"
      ],
      "description": "This is a practical course, we will create a series of small projects list in this slide to build our webserver.\nWe will learn socket programming skills to create a basic echo server. This server can only handle request and send messsage back to the client.\nWe will learn epoll and Reactor patterns to create a high performance TCP server. This server can handle thounds of connections.\nWe will learn concurrency programming skills to write a benchmark to send thounds of request to test our server.\nWe will learn http protocol conceptions to write a HTTP server. We can use browser to send request to the server.\nWe will design and implement a Logger module to collect messages. The messages colllected by the Logger are stored in the LogFiles.\nWe will design and implement a File server. We can upload and download files from this server.\nAfter we created these projects, we will be proficient in sock programming skills and can write our own high performance webserve.\nChoosing C++ for web server development has several advantages:\nIncreased speed and reduced load on servers due to C++'s performance.\nFine control over every aspect of web applications.\nEfficient resource management.\nAbility to integrate complex functionalities.",
      "target_audience": [
        "Beginner C++ development who want to build a high performance web server"
      ]
    },
    {
      "title": "GraphQL - A Primer",
      "url": "https://www.udemy.com/course/graphql-a-primer/",
      "bio": "Get an overview of this fantastic interface",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "What is it?": [
          "GraphQL - What is it?"
        ],
        "History": [
          "Brief History of GraphQL"
        ],
        "Benefits": [
          "Benefits of using GraphQL"
        ],
        "Implementations": [
          "GraphQL Implementations"
        ],
        "Tools and Next Steps": [
          "Tools for developing and testing GraphQL interfaces",
          "Explore a GraphQL Interface"
        ]
      },
      "requirements": [
        "Should have a general understanding of Client / Server APIs, such as REST"
      ],
      "description": "In this course, you will learn what GraphQL is, and you'll see why it's such a hot topic.\nYou will find out what problems it solves, what problems it doesn't solve, and how it it replaces (or compliments) your current REST endpoints.\nYou will also get exposed to tools and libraries to speed your GraphQL investigation along.",
      "target_audience": [
        "Software Developers and Software Development Managers"
      ]
    },
    {
      "title": "Kanban na Prática para Devs e Equipes Ágeis + Bônus [2025]",
      "url": "https://www.udemy.com/course/kanban-aplicado-ao-desenvolvimento-de-software/",
      "bio": "Como utilizar conceitos básicos do Kanban para gerenciar e melhorar o fluxo de trabalho em uma equipe de software/Scrum",
      "objectives": [
        "O que é o Kanban",
        "A história do Kanban e a sua evolução",
        "Os conceitos básicos para se utilizar o Kanban",
        "As práticas do Kanban",
        "Como classificar itens de trabalho e hierarquizá-los no Kanban",
        "Como assimilar e controlar o progresso de tarefas visualmente",
        "Como controlar a quantidade de trabalho através de limites, priorização, buffer's e raias",
        "Como diminuir o desperdício da equipe",
        "Como criar os cartões que serão estabelecidos no quadro Kanban",
        "Os benéficos de se utilizar o Kanban"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação e Boas-vindas!",
          "Compreendendo o Kanban e suas influências"
        ],
        "Práticas do Kanban, Classificação e Hierarquia de Itens": [
          "Práticas do Kanban",
          "Classificação e Hierarquia de Itens"
        ],
        "Buffer, Priorização, WIP e Raias": [
          "Buffer, Priorização e WIP",
          "Raias"
        ],
        "Cartões de Parede": [
          "Cartões de Parede"
        ],
        "Quadro Virtual ou Físico, Ferramentas, Benefícios e Encerramento": [
          "Quadro Virtual ou Físico, Ferramentas, Benefícios e Encerramento"
        ],
        "Bônus": [
          "Mini Palestra Sobre Kanban",
          "Kanban: Do início ao fim!",
          "Scrum ou Kanban: Qual escolher?",
          "Estória de usuário. Você saberia contar?",
          "[2025] Métricas no Kanban: Lead Time, Cycle Time e Throughput"
        ]
      },
      "requirements": [
        "Não existem pré-requisitos para realizar esse treinamento"
      ],
      "description": "O mercado de software é uma das mais importante industrias que existem no mundo atualmente. Independentemente do tamanho, um software pode fazer qualquer organização ganhar em economia, tempo, agilidade e competitividade.\nNesse curso básico serão explorados os principais fundamentos do método Kanban e como ele pode ser aplicado ao desenvolvimento de software, se tornando uma alternativa ao Scrum e outros processos iterativos.\n\nO que é o Kanban?\nO Kanban é um método simples e elegante oriundo da cultura Lean, que ajuda a controlar e melhorar os processos de qualquer equipe, inclusive, de software. Sua origem é japonesa e seu significado literal é “cartão” ou “sinalização”.\nO Kanban ajuda a assimilar e controlar o progresso de tarefas visualmente, melhorando o fluxo e tempo de entrega, diminuindo o desperdício e contribuindo com o aumento do desempenho da equipe.\nApesar de originário de fabricas tradicionais do século 20 no Japão, o Kanban tem uma relevância renovada hoje, sendo uma metodologia crucial no mundo do desenvolvimento de software.\nEsse treinamento é básico, portanto, é voltado para o público iniciante no método Kanban.\nVocê DEVE FAZER esse curso se:\nDeseja conhecer o Kanban e suas práticas;\nDeseja conhecer a história do Kanban;\nDeseja descobrir como utilizar os conceitos básicos do Kanban em seus projetos de software;\nDeseja aprender à classificar itens de trabalho e hierarquizá-los no Kanban;\nDeseja aprender à assimilar e controlar o progresso de tarefas visualmente;\nDeseja controlar a quantidade de trabalho através de limites, priorização, buffer's e raias;\nDeseja aprender à criar os cartões que serão estabelecidos no quadro Kanban;\nDeseja conhecer os benéficos de se utilizar o Kanban\n\n\nVocê NÃO DEVE FAZER esse curso se:\nDeseja aprender o Kanban em um nível avançado;\nDeseja obter um certificado sobre Kanban;\nDeseja aplicar o Kanban em um ambiente muito diferente do gerenciamento de software;\nDeseja conhecer conceitos mais avançados como, por exemplo, Lead Time, Cycle Time, Diagrama de Fluxo, SLA's, Classes de Serviço, VSM e demais conceitos mais avançados;",
      "target_audience": [
        "Líderes",
        "Coordenadores",
        "Gestores",
        "Executivos",
        "Qualquer pessoa que esteja interessada em utilizar o Kanban em seus projetos"
      ]
    },
    {
      "title": "Building Web-Based Engineering Tools with JavaScript",
      "url": "https://www.udemy.com/course/building-web-based-engineering-tools-with-javascript/",
      "bio": "Learn how to use JavaScript and HTML to build your own engineering calculation software.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Lesson 1 - Project Setup",
          "Lesson 2 - Config File",
          "Lesson 3 - UI File",
          "Lesson 4 - Calculate File",
          "Lesson 5 - Documentation",
          "Lesson 6 - JSON Import",
          "Lesson 7 - Test Files",
          "Lesson 8 - Publishing"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts, including if statements, objects and arrays.",
        "Basic understanding of engineering statics is useful, but not essential."
      ],
      "description": "Are you an engineer interested in programming and software development? Do you regularly use Excel to build your own calculation spreadsheets?\n\n\nLearn how to build your own engineering calculation software using JavaScript and the SkyCiv Quick Design framework!\n\n\nIn this course we'll learn basic JavaScript and HTML and build a web-application together, all in under 2 hours! This course is intended for engineers who are new to programming, and we'll cover all the fundamentals you need to understand how web-applications are built.\nThe course will cover the following topics:\nVisual Studio Code (VS Code)\nJavaScript Programming\nHyper Text Markup Language (HTML)\nJavaScript Object Notation (JSON)\nDynamic SVG Graphics\nMathJax Reporting\nMarkdown Documentation\nWe'll also use the components from the Quick Design JavaScript framework to accelerate the creation and testing of our web application. SkyCiv has developed the Quick Design framework in-house to build complex structural analysis and design software. This framework has now been opened to the public to allow engineers to develop their own calculation software without the need for investment in servers and web architecture.\nUpon completion of the course, we'll also provide an overview on how to host your own web applications on the SkyCiv Quick Design Framework.",
      "target_audience": [
        "Engineers looking to develop their own calculation software."
      ]
    },
    {
      "title": "The Cartesi dApp Developer Masterclass",
      "url": "https://www.udemy.com/course/cartesi-masterclass/",
      "bio": "Build Scalable dApps with Cartesi Using Mainstream Languages and Libraries",
      "objectives": [],
      "course_content": {
        "Getting Started": [
          "Why Cartesi?",
          "How does it work?",
          "Join our Discord Community"
        ],
        "Build your first dApp on Cartesi": [
          "Setting up your environment",
          "Hands-on: Building a simple 'toUpper' dApp"
        ],
        "Asset Handling and Wallet Functionality": [
          "Introduction",
          "Theory: Build a wallet dApp on Cartesi",
          "Hands-on: Build a wallet dApp on Cartesi"
        ],
        "Smart Contract Interaction": [
          "Theory: Interacting with smart contracts from your dApp",
          "Hands-on: Interacting with smart contracts from your dApp",
          "Hands-on: Adding NFT minting functionality"
        ],
        "Deployment": [
          "Deploying Contracts & Running the Node in Production"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript and blockchain fundamentals."
      ],
      "description": "Welcome to the updated edition of \"The Cartesi dApp Developer Masterclass.\" This course is ideal for developers using familiar open-source libraries to build dApps with mainstream languages like Go, Python, JavaScript, Rust, and more. It's also great for those looking to improve their blockchain skills, decentralized technology enthusiasts, and anyone aiming to create more complex and scalable dApps.\n\nWhat is Cartesi?\nCartesi is a powerful modular blockchain protocol that supercharges the Web3 space. Through its native virtual machine and high-performance rollups, Cartesi equips developers with access to a full Linux environment designed to support next-generation dApps.\nCourse Outline:\nModule 1: Getting Started with Cartesi\nStart with an overview of the Ethereum Virtual Machine (EVM), its limits, and how Cartesi provides solutions. Learn the basics of Cartesi, Optimistic Rollups, and their role in making dApps more scalable and efficient.\nModule 2: Build Your First dApp on Cartesi\nSet up your development environment. This module covers installing all the necessary tools and building a simple dApp using JavaScript.\nModule 3: Asset Handling and Wallet Functionality\nLearn how to manage assets in your dApps, including interactions with wallets and deposits for all the token standards (Ether, ERC20, ERC721, and ERC-1155).\nModule 4: Smart Contract Interaction\nLearn how to bridge the gap between Cartesi dApps and base layer smart contracts. Discover how to add NFT minting functionality to your dApps\nModule 5: Deployment\nUse the self-hosted deployment approach to deploy your application on public blockchain networks like Ethereum, Base, Optimism, Arbitrum, and their test networks.",
      "target_audience": [
        "Whether you're new to decentralized technology or an experienced blockchain developer aiming to innovate, this course is perfect for you."
      ]
    },
    {
      "title": "Docker e Kubernetes da zero a cento",
      "url": "https://www.udemy.com/course/docker-e-kubernetes-da-zero-a-cento/",
      "bio": "Traduzione del celebre best seller Kubernetes course from a DevOps Guru.",
      "objectives": [
        "Avrai le basi di Docker e Kubernetes",
        "Imparerai a creare immagini Docker, avviarle, monitorarle",
        "Imparerai a lanciare i vari comandi di Docker per gestire immagini e container",
        "Imparerai a salvare i dati in modo persistente tramite i Volumes",
        "Imparerai a gestire le variabili private tramite i Secret",
        "Imparerai ad orchestrare i container Docker tramite Kubernetes",
        "Imparerai ad utilizzare Kubernetes sia in locale, sia su AWS",
        "Imparerai a rendere i servizi web sicuri e disponibili",
        "Imparerai a gestire pod, nodi, deployment, services, secrets, volumes con Kubernetes",
        "Imparerai a fare il deploy in produzione di applicazioni con Kubernetes",
        "Imparerai ad amministrare, comprendere e fare il deploy con Kubernetes",
        "Imparerai a fare il deploy di cluster ad alta efficienza e disponibilità su AWS",
        "Imparerai a rendere le applicazioni altamente performanti ed affidabili tramite il Load Balancing con Kubernetes"
      ],
      "course_content": {
        "Panoramica sul corso": [
          "Presentazione del corso",
          "Panoramica sul corso",
          "Come seguire il corso ed ottenere supporto",
          "Lezione testuale: come seguire il corso ed ottenere supporto"
        ],
        "Corso intensivo su Docker": [
          "Introduzione al corso intensivo su Docker",
          "Introduzione alle tecnologie sulla virtualizzazione",
          "Architettura client-server di Docker",
          "Installazione di Docker per Mac/Windows",
          "Installazione del toolbox di Docker",
          "Avviamo il nostro primo container Docker con “Hello World”",
          "Importanti concetti sulla tecnologia Docker",
          "Andiamo più a fondo nello studio dei container Docker",
          "Il port mapping e i comandi di log per Docker",
          "I layer delle immagini Docker",
          "Costruire immagini Docker scrivendo un Dockerfile",
          "Costruire immagini Docker con il comando Docker commit",
          "Uno studio approfondito sul Dockerfile",
          "Push delle immagini Docker su Docker Hub",
          "Containerizzare una semplice applicazione web “Hello World”",
          "Lezione testuale: Containerizzare una semplice applicazione web “Hello World”",
          "Implementazione di un semplice servizio di Look-Up con chiave-valore",
          "Creazione di link per il Docker container",
          "Automatizzare il workflow corrente con Docker compose",
          "Analisi dettagliata sul Workflow di Docker compose",
          "Tempo di imparare Kubernetes"
        ],
        "Iniziamo a parlare di Kubernetes": [
          "Introduzione all’orchestrazione dei container",
          "Panoramica di Kubernetes",
          "AWS EKS è disponibile!",
          "Deploy di Kubernetes",
          "Setup di Minikube",
          "Lezione testuale: setup di Minikube",
          "La tua prima applicazione con Kubernetes",
          "I comandi relativi alla lezione “la tua prima applicazione con Kubernetes”",
          "Kubectl di base",
          "Comandi di base di kubectl"
        ],
        "Concetti principali e basi di Kubernetes": [
          "L’Architettura di Kubernetes",
          "Scalare le applicazioni",
          "Comandi per scalare le applicazioni",
          "Deploy delle applicazioni",
          "Comandi per il deploy",
          "Label e Selector",
          "Controllo di operatività",
          "Interfaccia Web",
          "Comandi per l’interfaccia web",
          "Esercizio: concetti principali e basi di Kubernetes"
        ],
        "Analisi approfondita su Kubernetes": [
          "DNS e Service Discovery",
          "Lezione testuale: DNS e Service Discovery",
          "Volumes",
          "Comandi per i Volumes",
          "Secrets",
          "Secret",
          "Comandi per i secret",
          "Utilizzo e monitoraggio delle risorse",
          "Comandi per l’utilizzo ed il monitoraggio delle risorse",
          "Namespace e resource quotas",
          "Comandi per i namespace e i resource quotas",
          "Auto-scaling",
          "Comandi per l’auto-scaling",
          "Auditing",
          "Lezione testuale: auditing",
          "Esercizio: auto-scaling e risorse",
          "Lezioni bonus: Kubernetes networking"
        ],
        "Kubernetes in produzione": [
          "Disponibilità dei servizi",
          "Master",
          "Lezione testuale: Master",
          "Impostare la disponibilità dei servizi",
          "I Volumes su AWS"
        ],
        "Helm": [
          "Introduzione",
          "Una visione d'insieme della sezione",
          "Cos'è Helm?",
          "Guida per l'installazione di Helm",
          "Primo deployment con Helm",
          "Creazione di Chart con Helm",
          "I Template Calls di Helm",
          "I Value di Helm",
          "Comandi principali per Helm"
        ],
        "Conclusioni": [
          "Conclusioni",
          "Ulteriori lezioni",
          "Coupons per altri corsi"
        ]
      },
      "requirements": [
        "Conoscenza di base del computer e del web"
      ],
      "description": "Kubernetes dalle basi al livello avanzato per rilasciare e scalare in modo performante ed efficace applicazioni containerizzate con Kubernetes.\nCorso intensivo, sia teorico che pratico per imparare dalle basi i concetti di container, immagine, orchestrazione ed utilizzare al meglio gli strumenti più usati e più famosi sul mercato: Docker come strumento per containerizzare gli applicativi e Kubernetes come  orchestratore dei container. Questi due strumenti ormai sono diventati degli standard di fatto per gli applicativi enterprise.\nNel corso si impareranno ad utilizzare questi strumenti prima in locale, utilizzando la distribuzione leggera di Kubernetes con minikube, sia nel cloud attraverso Amazon Web Service (AWS).\n\n\nCosa impareremo in questo corso su Kubernetes:\nKubernetes è la tecnologia di punta per rilasciare e scalare app di grandi dimensioni, e garantisce alle compagnie di maggior successo di effettuare rilasci in sicurezza ed affidabilità, in ogni genere di situazione. Kubernetes permette ai DevOps engineers di tutto il mondo di avere uno strumento efficace.\nDopo essere stato rilasciato come open-source da Google, Kubernetes è rimasto \"l'ingrediente segreto\" che permette la grandissima capacità di Google di scalare i propri prodotti e servizi, da almeno una decade, Kubernetes + Docker è diventato lo standard de-facto e lo strumento dominante con cui le applicazioni sono containerizzate, gestite, scalate e rilasciate.\n\nSe considerassimo i container di Docker di uno stesso applicativo come i singoli membri di un'orchestra, ciascuno con il proprio ruolo e ciascuno con la specifica responsabilità di coordinarsi con gli altri e mantenere il tempo per garantire una bella performance, potremmo pensare a Kubernetes come il direttore d'orchestra.\nNon importa se si tratti di piccole start-up o grosse aziende, di fatto Kubernetes è divenuto uno standard a livello mondiale nell'area emergente dell'orchestrazione dei container.\nIn this course, you'll use Kubernetes to deploy real-world applications, and by doing so you'll learn the concepts necessary to not just have a rote memorization of the individual tasks needed to operate Kubernetes, but a fundamental understanding of how you can use Kubernetes to build and deploy robust applications.\n\nDal nostro primo deploy di un container Tomcar sulla nostra macchina locale, passeremo a implementare cluster resilienti e affidabili con WordPress e MySQL che possano gestire fallimenti di macchine, reti o dichi. Nel processo capiremo non solo il come, ma anche il perché di certe scelte architetturali, scopriremo i trucchi pratici che la documentazione non fornisce.\nSia che tu sia un'amministratore di sistema alle prime armi o uno sviluppatore avanzato o un CTO, tramite il corso Learn Kubernetes from a DevOps guru comprenderai le tecnologie che architettano la maggior parte delle applicazioni di successo diponibili oggigiorno.\n(Questo corso di Kubernetes comprende anche un corso intensivo su Docker affinché se non avessi la conoscenza di questo strumento potresti comunque acquisirla ed imparare Kubernetes!)\n\n\nPerché le abilità da DevOps?\nOggigiorno i DevOps sono molto richiesti dall'industria del IT. Varie aziende richiedono profili in grado di sviluppare e rilasciare in produzione gli applicativi.\nIl salario medio di un DevOps engineer in Silicon Valley è circa  $140,000 all'anno, ovvero il 20% superiore del salario di uno sviluppatore.\nPossedere abilità DevOps vuol dire essere molto competitivi sul mercato!\n\n\nL'autore:\nBasit Mustafa é il fondatore & CEO di Voltaire, Inc e precendetemente dirigente di IBM nel dipartimento di sviluppo. La carriera di Basit ha visto l'applicazione massiva di queste tecnologie per la risoluzione di problemi complessi, e la direzione per insegnare ad altri come fare lo stesso.\nOggi, Basit insegna per professione le ultimissime tecnologie in ambito DevOps.\nRimborso garantito in 30 giorni!\nSe il corso non rispetta le tue aspettative Udemy garantisce un rimborso per 30 giorni dopo l'acquisto.\nSe vuoi incrementare le tue abilità come DevOps e portare la tua carriera ad un livello superiore, segui il corso!\nPasserai a conoscere Kubernetes e Docker da zero a cento in 5 ore!\n\n\nCosa imparerai\nDeploy di applicazioni in produzione con Docker e Kubernetes\nDeploy di cluster resilienti in AWS con Kubernetes\nAd amministrare, comprendere e rilasciare app su Kubernetes\nRendere le applicazioni resilienti e affidabili con Kubernetes utilizzando il Load Balancing\nEsistono dei requisiti o dei prerequisiti per il corso?\nUn minimo di utilizzo del terminale con Linux, MacOS, o Windows\nComprensione dei concetti di base del web\nA chi è rivolto questo corso:\nA chi sviluppa applicazioni o rilascia applicazioni per ambienti di produzione\nIngegneri, amministratori di sistema, sviluppatori, DevOps\nProject Managers, Functional Managers, CTOs, e architetti che vogliono comprendere meglio il deploy degli applicativi complessi\n\n\nCredit to bensound per le musiche.",
      "target_audience": [
        "Sviluppatori o aspiranti DevOps interessati a conoscere Docker e Kubernetes"
      ]
    },
    {
      "title": "10 popular coding interview problems",
      "url": "https://www.udemy.com/course/10-problems/",
      "bio": "Prepare for your coding interview with these 10 solved and explained popular coding problems",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Valid anagram": [
          "Solution"
        ],
        "First and last position": [
          "Solution"
        ],
        "Kth largest element": [
          "Solution"
        ],
        "Symmetric tree": [
          "Solution"
        ],
        "Generate parentheses": [
          "Solution"
        ],
        "Gas station": [
          "Solution"
        ],
        "Course schedule": [
          "Solution"
        ],
        "Kth permutation": [
          "Solution"
        ],
        "Minimum window substring": [
          "Solution"
        ]
      },
      "requirements": [
        "Basic algorithms and data structures knowledge"
      ],
      "description": "WARNING: The instructor is not currently available to answer questions regarding this course\n\n\nPreparing for coding interviews? Competitive programming? Then this course will help you for sure: 10 well-chosen problems to increase your problem-solving skills!\nProblems covered:\n1- Valid anagram (Related topic(s): String, Sorting, Hash table)\n2- First and last position in a sorted array (Related topic(s): Array, Searching, Binary search)\n3- Symmetric tree (Related topic(s): Binary tree, Depth-first search)\n4- Kth largest element in an array (Related topic(s): Array, Sorting, Priority queue, Heap)\n5- Generate parentheses (Related topic(s): Backtracking, Stack)\n6- Course schedule (Related topic(s): Graph, Depth-first search, Breadth-first search, Topological sort)\n7- Kth permutation (Related topic(s): Combinatorics, Math)\n8- Gas station (Related topic(s): Array, Greedy)\n9- Minimum window substring (Related topic(s): String, Sliding window)\n10- Largest rectangle in histogram (Related topic(s): Array, Stack, Divide-and-conquer)\n\n\nThis course tries to explain the solutions to these problems in a visual way, as visualizing the different steps of an algorithm is a method that is preferred by a lot of students\nThis course also explains and provides the code in Python programming language, you will also find it under each lecture to be able to copy it and run it on your machine with different inputs\nAlso, before moving to the solution, you will have the ability to try to solve the problem, a Python code editor will be available for you to write code and submit it to be tested on a bunch of testcases, I suggest you to do it before moving to the solution",
      "target_audience": [
        "People preparing for coding interviews",
        "Competitive programmers",
        "People who want to increase their problem-solving skills"
      ]
    },
    {
      "title": "Introducción a la Concurrencia en C# - Async y Paralelismo",
      "url": "https://www.udemy.com/course/introduccion-a-la-concurrencia-en-c-async-y-paralelismo/",
      "bio": "Aprende a desarrollar aplicaciones escalables y rápidas utilizando concurrencia de manera efectiva",
      "objectives": [
        "Utilizar programación asíncrona en C#",
        "Mejorar la velocidad de los programas con paralelismo",
        "Patrones y antipatrones de la programación asíncrona",
        "Patrones y antipatrones del paralelismo"
      ],
      "course_content": {
        "Introducción - Terminología Básica": [
          "Introducción",
          "¿Qué es Concurrencia?",
          "Introducción a la Programación en Paralelo",
          "Introducción a la Programación Asíncrona",
          "Tareas de CPU vs I/O",
          "Programación Secuencial, Concurrencia, Multihilos, Paralelismo y Multitarea",
          "Determinismo vs No Determinismo",
          "Preparando el Ambiente de Desarrollo",
          "Código Fuente del Curso",
          "Conclusión"
        ],
        "Programación Asíncrona": [
          "Introducción",
          "async-await",
          "Creando el Proyecto",
          "UI Que no se Congela",
          "Task",
          "Task Que Retorna Un Valor",
          "Tasks Que No Son Exitosas",
          "Ejecutando Múltiples Tareas - Task.WhenAll",
          "Creando Nuevas Tareas con Task.Run",
          "Limitando las Tareas con un Semáforo - SemaphoreSlim",
          "Flujo de Tareas",
          "Reportando Progreso con IProgress",
          "Reportando Progreso por Intervalos con Task.WhenAny",
          "Cancelando Tareas - Tokens de Cancelación",
          "Cancelando Bucles",
          "Cancelando Tareas por Tiempo - Timeout",
          "Creando Tareas ya Terminadas - Task.FromResult y Amigos",
          "Contexto de Sincronización",
          "Entendiendo ConfigureAwait - Ignorando el Contexto de Sincronización",
          "Patrón de Reintento",
          "Patrón Solo Una Tarea",
          "Controlando el Resultado de la Tarea - TaskCompletionSource",
          "Cancelando Tareas no Cancelables con TaskCompletionSource",
          "Entendiendo ValueTask",
          "Conclusión"
        ],
        "Streams Asíncronos": [
          "Introducción",
          "Repasando IEnumerable y yield",
          "Streams Asíncronos",
          "Cancelando Streams Asíncronos",
          "Conclusión"
        ],
        "Antipatrones de la Programación Asíncrona": [
          "Introducción",
          "Síncrono dentro de Asíncrono - Bloqueo Mutuo",
          "Asíncrono dentro de Síncrono",
          "async void - Altamente Peligroso",
          "Evitar Task.Factory.StartNew",
          "Hacer Dispose de CancellationTokenSource - Timers",
          "Hacer Dispose Correcto de Streams",
          "Conclusión"
        ],
        "Paralelismo": [
          "Introducción",
          "Repaso de Paralelismo",
          "Con Task.WhenAll Ejecutamos Tareas Simultáneas",
          "Entendiendo Parallel.For",
          "Ejemplo de Parallel.For - Velocidad",
          "Task.WhenAll vs Parallel.For",
          "Iterando Colecciones en Paralelo con Parallel.ForEach",
          "Beneficios de Velocidad del Paralelismo",
          "Parallel.Invoke - Distintos Métodos en Paralelo",
          "Cancelando Tareas en Paralelo",
          "Máximo Grado de Paralelismo",
          "Métodos Atómicos",
          "Seguridad en Hilos",
          "Condición de Carrera",
          "Interlocked - Operaciones Simples Atómicas",
          "Locks - Sincronizando Hilos",
          "ThreadStatic - Una Instancia Por Hilo",
          "Introducción a PLINQ",
          "PLINQ - Operaciones de Agregado",
          "PLINQ - ForAll - Procesando Resultados de Inmediato",
          "Conclusión"
        ],
        "Antipatrones del Paralelismo": [
          "Introducción",
          "Paralelismo Innecesario",
          "Condición de Carrera",
          "Sobre Saturación",
          "Usando Una Clase No Segura En Hilos",
          "Como no usar Locks",
          "Conclusión"
        ]
      },
      "requirements": [
        "El estudiante debe de tener nociones de C# (saber que es un bucle, métodos, clases, lo básico)"
      ],
      "description": "En este curso aprenderás a utilizar programación asíncrona y paralelismo en C#.\nVeremos tanto patrones como antipatrones de la concurrencia. Es decir, veremos qué cosas debemos hacer, pero también veremos qué cosas no debemos hacer.\nCon la programación asíncrona podemos:\nEjecutar un conjunto de tareas I/O al mismo tiempo\nEvitar que se congele el UI de nuestras aplicaciones\nEscalar verticalmente nuestras aplicaciones de ASP.NET y ASP.NET Core\nCancelar tareas para que el usuario no tenga que esperar su conclusión\nImplementar una lógica de reintentos genérica\nCrear streams asíncronos\nCon la programación en paralelo podemos:\nAcelerar la ejecución de ciertos algoritmos\nAplicar transformaciones a un conjunto de imágenes en paralelo\nUtilizar métodos de sincronización para evitar condiciones de carrera\nDefinir el máximo grado de paralelismo\nConfigurar instancias de una clase por hilos\nUtilizar LINQ en paralelo\nTodo esto lo aprenderemos en este curso!",
      "target_audience": [
        "Programadores de C# que desean utilizar la programación asíncrona y el paralelismo de manera efectiva"
      ]
    },
    {
      "title": "Master FastAPI: A Complete Project-Based Course on FastAPI",
      "url": "https://www.udemy.com/course/master-fastapi-a-complete-project-based-course-on-fastapi/",
      "bio": "Learn FastAPI Rest API, OAuth, WebSocket, SQL, NoSQL, JWT, Performance Optimization , Testing, File Uploads, PostMan.",
      "objectives": [
        "Understanding the framework's core features, such as routing, dependency injection, and async programming.",
        "Creating RESTful APIs for practical projects, including authentication, database integration, and deployment",
        "Using Pydantic models for request and response validation to ensure robust and type-safe APIs.",
        "Leveraging async/await for high-performance API development and handling concurrent requests efficiently.",
        "Generating interactive API docs with Swagger and ReDoc and writing unit tests for reliable APIs.",
        "Deploying FastAPI applications, ensuring scalability and performance in production environments.",
        "Working with SQL (using SQLAlchemy) and NoSQL (MongoDB) databases to build data-driven applications.",
        "Implementing secure user authentication using OAuth2, JWT, and API keys for role-based access control.",
        "Building WebSocket-based APIs for real-time features like chat apps and live notifications.",
        "Writing automated unit, integration, and end-to-end tests for FastAPI applications and debugging effectively.",
        "Implementing structured error handling and logging to monitor and debug applications effectively in production.",
        "Exploring middleware, dependency injection, custom request handling, and background tasks for complex use cases",
        "Enhancing API performance with caching strategies using Redis and optimizing query execution"
      ],
      "course_content": {
        "Getting Started With FastAPI": [
          "What is FastAPI",
          "Advantages of FastAPI over other frameworks",
          "Virtual Environment",
          "Virtual environment on windows",
          "Virtual environment on Linux",
          "Virtual environment management",
          "Virtual Environment"
        ],
        "FastAPI Core Concepts": [
          "First App",
          "HTTP Methods PT 1",
          "HTTP Methods PT 2",
          "Path parameters",
          "Quiz 1",
          "Query parameters",
          "Path & Query Parameters",
          "Validation",
          "quiz 2",
          "Request and response models with Pydantic"
        ],
        "Basic Bookstore API": [
          "What we are building",
          "Pydantic Model and Get Request",
          "Get Book By ID",
          "Post Book",
          "Update Book By ID",
          "Delete Book by ID",
          "Test our Book API",
          "Add Patch Endpoint"
        ],
        "Dependency Injection": [
          "What Are Dependencies?",
          "How Dependency Works",
          "Creating A Simple Dependency",
          "Injecting Dependency",
          "Classes in Depedency",
          "Dependency Lifespan",
          "Quiz"
        ],
        "Working With Relational Database": [
          "Connect to SQL Databastion",
          "Connect to SQL Database Pt 2",
          "Model Creation",
          "Post and Get Request SQL Database",
          "Update and Delete Request SQL Database",
          "Testing Crud Operation",
          "Codeing Excercise",
          "Book API Solution"
        ],
        "Working With Non-Relational Database": [
          "Connecting MongoDB Database",
          "Post and Get request in MongoDb Database",
          "Update and Delete request in MongoDB Database",
          "Testing MongoDb CRUD operation"
        ]
      },
      "requirements": [
        "Knowledge of Basic Python Programming"
      ],
      "description": "Unlock the full potential of modern web development with FastAPI, one of the fastest and most efficient Python frameworks for building APIs. This comprehensive course takes you from beginner to expert, focusing on practical, project-based learning. Whether you’re a seasoned developer or new to API development, this course will equip you with the skills to build, scale, and deploy robust APIs.\nYou’ll start by mastering the fundamentals of FastAPI, including routing, request validation, and dependency injection. From there, dive into advanced topics like asynchronous programming, database integration, authentication, and real-time WebSocket APIs. Along the way, you’ll work on hands-on projects, building real-world applications such as an e-commerce API, a task management system, and more.\nBy the end of this course, you’ll have the confidence to build production-ready APIs and the knowledge to deploy them using modern tools like Docker, AWS, and CI/CD pipelines. With a focus on industry best practices, this course ensures you’re prepared to tackle API development challenges head-on.\n\n\nWhat You'll Get:\nHands-on projects to solidify your learning.\nReal-world examples to prepare you for production environments.\nLifetime access to course materials for continuous learning.\nWhether you're building for startups, enterprises, or personal projects, this course is your gateway to mastering FastAPI.",
      "target_audience": [
        "Beginners Developer",
        "Intermediate Developer",
        "Experienced Developer"
      ]
    },
    {
      "title": "Basics of Rest API",
      "url": "https://www.udemy.com/course/basics-of-rest-api/",
      "bio": "A Beginner's Guide to REST API Development",
      "objectives": [
        "The core principles of RESTful APIs.",
        "HTTP basics: methods, status codes, headers, and bodies.",
        "API tools: Using Postman for testing and debugging.",
        "Designing a REST API: Best practices and conventions.",
        "Implementing CRUD operations.",
        "Connecting frontend applications to APIs.",
        "Common API authentication methods (like API keys and tokens)."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to APIs",
          "History and evolution of APIs : SOAP vs REST",
          "Comparison of REST with other architectures",
          "Importance of REST APIs in modern applications",
          "Quiz Time"
        ],
        "REST API Architecture": [
          "Overview of RESTful architecture principles",
          "Components of REST APIs",
          "Quiz Time"
        ],
        "HTTP Basics for REST APIs": [
          "HTTP and its role in REST APIs",
          "Overview of HTTP methods",
          "GET: Reading data",
          "POST: Creating resources",
          "PUT and PATCH: Updating resources",
          "DELETE: Removing resources",
          "Quiz Time"
        ],
        "HTTP status codes and their categories": [
          "Informational (1xx)",
          "Success (2xx)",
          "Redirection (3xx)",
          "Client error (4xx)",
          "Server error (5xx)",
          "Quiz Time"
        ],
        "Security in REST APIs": [
          "Common security challenges in REST APIs",
          "Overview of authentication and authorization",
          "Importance of HTTPS in REST API communication",
          "Securing sensitive data in API requests and responses",
          "Quiz Time"
        ],
        "REST API Responses and Formats": [
          "Common data formats in REST APIs",
          "Structure of a typical REST API response",
          "Understanding content negotiation in REST",
          "Advantages of JSON over other formats",
          "Quiz Time"
        ],
        "Design Principles for REST APIs": [
          "Resource identification and naming conventions",
          "Understanding RESTful URIs and their hierarchy",
          "Best practices for designing REST APIs",
          "Quiz Time"
        ],
        "Real-World Examples and Use Cases": [
          "How REST APIs power everyday applications (e.g., social media, e-commerce)",
          "Understanding API rate limits and quotas",
          "Advantages of using REST APIs in cross-platform development",
          "Quiz Time"
        ],
        "Final Summary and Next Steps": [
          "Recap of key concepts covered in the course",
          "Common mistakes to avoid when working with REST APIs",
          "Resources for further learning",
          "Encouragement to explore practical implementations in future learning",
          "Quiz Time"
        ]
      },
      "requirements": [
        "Basic knowledge of programming (any language).",
        "A computer with internet access.",
        "Enthusiasm to learn!"
      ],
      "description": "In today’s interconnected digital world, APIs are the backbone of modern applications. They enable different systems to communicate seamlessly, making them an essential skill for developers of all levels. Whether you’re a student, aspiring developer, or someone looking to expand your technical skills, “Basics of REST API” is the perfect starting point for your journey into API development.\nThis course contains the use of artificial intelligence, to boost your learning experience.\nThis beginner-friendly course demystifies REST APIs, one of the most widely used technologies in software development. We’ll start with the basics—what APIs are, why they’re important, and how they fit into the broader technology landscape. From there, we’ll dive into the specific principles of RESTful APIs, exploring how they work and why they’ve become the industry standard.\nThe course is designed to be practical and hands-on. You’ll learn to use HTTP methods like GET, POST, PUT, and DELETE to perform operations, and you’ll gain a deep understanding of status codes, headers, and request-response cycles. With the help of tools like Postman, you’ll test, debug, and interact with APIs in real-time, building confidence in your skills.\nBut we don’t stop at theory. You’ll roll up your sleeves and build a fully functional REST API from scratch using a lightweight backend framework like Node.js or Flask. You’ll design endpoints, connect to a database, and implement CRUD (Create, Read, Update, Delete) operations, all while adhering to best practices.\nThe course also covers how to integrate REST APIs into real-world applications. You’ll learn how to connect a frontend application to your API, handle data efficiently, and manage errors gracefully. For those curious about security, we’ll introduce basic authentication techniques such as API keys and JWT tokens, equipping you with the tools to protect your APIs.\nBy the end of this course, you’ll have a solid understanding of REST APIs, the skills to create your own APIs, and the ability to integrate them into projects confidently. Whether you’re building a personal project, collaborating in a team, or preparing for a software development career, this course will provide a strong foundation.\nEmbark on this exciting journey to master the basics of REST APIs and unlock a world of possibilities in software development!",
      "target_audience": [
        "Complete beginners who want to learn about REST APIs from scratch.",
        "Developers transitioning into backend or full-stack roles.",
        "Students and professionals looking to integrate APIs into their projects.",
        "Anyone curious about how modern web applications exchange data."
      ]
    },
    {
      "title": "Mastering Unit Testing in C#: A Beginner's Guide",
      "url": "https://www.udemy.com/course/mastering-unit-testing-in-c-a-beginners-guide/",
      "bio": "Learn the basics of C# unit testing with XUnit",
      "objectives": [
        "Understand the idea behind unit testing",
        "Learn the differences between NUnit and XUnit",
        "Identify test cases",
        "Create a basic unit test",
        "Test exceptions with actions",
        "Understand and implement mocking with MOQ"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Requirements"
        ],
        "About unit testing": [
          "What is unit testing",
          "Why unit testing",
          "Assertions",
          "NUnit vs XUnit"
        ],
        "Creating unit tests with XUnit": [
          "Basic unit test",
          "Refactoring some code",
          "Testing exceptions",
          "Mocking",
          "Create the right assertion"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic C# is advisable. Understand classes and methods.",
        "I'll also be using dependency injection and Entity Framework. Knowing what these are is enough."
      ],
      "description": "While coding is fun and all, you need to make sure your code is always working. When something goes wrong customers usually blame the developers, but 7 out of 10 times it’s a wrong input but the customer. 2 out of 10 times it’s a logic problem (“well, didn’t see that one coming”), and 1 out 10 times its a developers error.\nWe, developers, cannot think for a customer or all the things a user can do. But we can make sure our code works as it should. Therefore, we should test our code. Not the application, but the logic that makes the application work. This is what we call ‘unit testing’.\nIn this course, I will explain and show you the basics of C# unit testing. I will start with the basic theory of unit testing and the difference between NUnit and XUnit, the two most test frameworks for C# and .NET. Other subjects are assertions, exception testing, and mocking are really important to know and explained. With some practical examples, I will show you how to use and implement them.\nFor this course, it is convenient if you have some experience with C# and .NET. You don't need any knowledge of unit testing, because that's what this course is all about.",
      "target_audience": [
        "This course is for beginners that have some experience with C# and want to learn unit testing.",
        "Advanced C# developers can use this course as a refreshment."
      ]
    },
    {
      "title": "Test Driven SOLID Principles",
      "url": "https://www.udemy.com/course/test-driven-solid-principles/",
      "bio": "Mastering SOLID Principles through Test-Driven Development: Build, Test, and Refactor Your Way to Cleaner Code",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic understanding of object-oriented programming principles.",
        "Familiarity with any OOPS programming language such as Java or C#",
        "Access to any development environment such as Visual Studio or IntelliJ IDEA.",
        "Willingness to learn and practice SOLID principles and TDD techniques through hands-on exercises and real-world examples."
      ],
      "description": "In this course, you will learn how to build robust and maintainable software by applying SOLID principles in a test-driven way. SOLID principles are a set of guidelines for designing object-oriented software that is easy to maintain and extend over time. By combining SOLID principles with test-driven development (TDD), you can create code that is not only correct but also flexible and easy to change.\nThe course will begin with an introduction to the SOLID principles and how they can help you build better software. You will learn about each of the SOLID principles - Single Responsibility Principle, Open/Closed Principle, Liskov Substitution Principle, Interface Segregation Principle, and Dependency Inversion Principle - and how they relate to each other.\nWith a solid understanding of both SOLID principles and using TDD, you will start building a sample application using Java and the JUnit testing framework. You will begin by writing tests that describe the behavior of the application, and then fix the test & implement the requirements by applying SOLID principles one by one.\nThroughout the course, you will learn how to apply SOLID principles in a practical way, using real-world examples and exercises. By the end of the course, you will have a deep understanding of SOLID principles and familiarity with TDD, and the skills to build robust and maintainable software using these techniques.",
      "target_audience": [
        "Software developers who want to improve their understanding of SOLID principles and how to apply them in a test-driven way",
        "Developers who want to write better code that is easier to maintain and extend over time",
        "Technical leads who want to set coding standards and best practices for their team",
        "Students and recent graduates who want to learn SOLID principles and TDD as part of their software development education",
        "Anybody who wants to learn how to write better software that is more reliable, maintainable, and extensible."
      ]
    },
    {
      "title": "Salesforce Report Wizardry: Unleash the Power of Data",
      "url": "https://www.udemy.com/course/salesforce-report-wizardry-unleash-the-power-of-data/",
      "bio": "Salesforce Data Dynamics",
      "objectives": [
        "Salesforce Reports and Dashboards",
        "Custom Report Types and Creation",
        "Custom Report and Dashboard Creation",
        "Report Formula"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Salesforce Reports and Dashboards"
        ],
        "Report/Dashboard Customization": [
          "Custom Report Type | Create a Salesforce Report",
          "Tabular, Summary, and Matrix Reports",
          "Joined Reports in Salesforce",
          "Bucket Fields in Reports",
          "Row Level Formula in Salesforce Reports",
          "Summary Formula Fields in Reports",
          "Manage Dashboards and Reports"
        ]
      },
      "requirements": [
        "Basic Salesforce Platform Knowledge"
      ],
      "description": "Reports & Dashboards Mastery Course\nUnlock the power of Salesforce reporting in our comprehensive Reports & Dashboards Mastery course. Designed for both novices and seasoned professionals, this course promises a deep dive into the intricate world of Salesforce data analytics. From the foundational elements of data structure to the nuanced art of dashboard design, each module is tailored to provide actionable insights.\nThe course will mainly contain below topics:\nIntroduction to Salesforce Reports and Dashboards\nCustom Report Types and how to create it\nHow to create a Custom Report and Dashboard\nHow to create Tabular Reports in Salesforce\nHow to create Summary Reports in Salesforce\nHow to create Matrix Reports in Salesforce\nJoined Reports in Salesforce\nBucket Fields in Salesforce Reports\nRow Level Formula in Reports\nSummary Formula Fields in Reports\nManage Dashboards and Reports\n\n\nMaster the techniques to transform vast data repositories into visually compelling and insightful narratives. Engage in a series of hands-on exercises that mimic real-world challenges, ensuring you're not just learning but applying those lessons in practical scenarios. Discover best practices, explore advanced features, and delve into strategies that can make your reports a vital tool for decision-making in any organization.\nBeyond just mechanics, we emphasize the importance of storytelling in data presentation. Understand how to weave numbers into narratives that resonate, influence, and drive action. With our industry-experienced instructors, interactive sessions, and a rich resource library, you're set for a rewarding learning experience.\nStay curious, participate actively, ask questions, and most importantly, enjoy the process of discovery. Let's transform how you see, interpret, and utilize data.\nEmbark on this journey with us to harness the true potential of your Salesforce data, and emerge as a sought-after reporting maestro in your organization.",
      "target_audience": [
        "Salesforce Admins",
        "Salesforce Developers",
        "Salesforce Functional",
        "Business Analyst"
      ]
    },
    {
      "title": "Curso Completo de Criptografía de cero a experto",
      "url": "https://www.udemy.com/course/curso-completo-de-criptografia-para-blockchain/",
      "bio": "¡Conviértete en un experto en criptografía para entender a la perfección los pilares de la tecnología Blockchain!",
      "objectives": [
        "Cifrado clásico por substitución",
        "Cifrado por Transposición",
        "Algoritmos modernos",
        "Data Encryption Standard (DES)",
        "Cifrado en Flujo",
        "Advanced Encryption Standard (AES)",
        "RSA",
        "Diffie-Hellman",
        "Distribución de las claves de cifrado",
        "Firmas digitales",
        "Funciones hash",
        "Criptografía de Curva elíptica en la tecnología Blockchain"
      ],
      "course_content": {
        "Introducción al curso": [
          "¡Bienvenido al curso!",
          "¿Cómo funciona el curso?",
          "Conoce a los instructores de este curso"
        ],
        "BLOQUE 0: INTRODUCCIÓN A LA CRIPTOGRAFÍA": [
          "INTRODUCCIÓN A LA CRIPTOGRAFÍA"
        ],
        "Introducción a la Criptografía": [
          "Situación actual con la Seguridad Informática",
          "Ataques y servicios de seguridad",
          "Qué es la Criptografía",
          "Criptografía en Blockchain: Privacidad",
          "Criptografía en Blockchain: Transparencia",
          "Criptografía en Blockchain: Inmutabilidad",
          "Criptografía en Blockchain: Anonimato"
        ],
        "BLOQUE 1: CRIPTOGRAFÍA SIMÉTRICA": [
          "CRIPTOGRAFÍA SIMÉTRICA"
        ],
        "Conceptos básicos de la criptografía simétrica": [
          "Introducción a la criptografía simétrica",
          "Terminología y caracteristicas de criptografía simétrica"
        ],
        "Cifrado clásico por substitución": [
          "Qué es el cifrado clásico por substitución",
          "Cifrado monoalfabético",
          "Cifrado de Julio César y Playfair",
          "Cifrado Polialfabético, algoritmo Vigenere",
          "Cifrado con libreta"
        ],
        "Algoritmos modernos": [
          "El mundo moderno y la maquina Enigma",
          "Cifrado en bloque",
          "Algoritmo DES",
          "Algoritmo AES"
        ],
        "BLOQUE 2: CRIPTOGRAFÍA ASIMÉTRICA": [
          "CRIPTOGRAFÍA ASIMÉTRICA"
        ],
        "Conceptos básicos de la criptografía asimétrica": [
          "Introducción a la criptografía asimétrica",
          "Modelo de la criptografía asimétrica",
          "Conceptos básicos"
        ],
        "RSA": [
          "Qué es RSA",
          "Algoritmo de RSA",
          "Operación de cifrado en RSA",
          "Operación de descifrado en RSA",
          "Demostración de la función Totient de Euler",
          "Algoritmo de cálculo de inversas",
          "Exponenciación binaria de RSA",
          "Operaciones de cifrado y descifrado de RSA con distintos exponentes"
        ]
      },
      "requirements": [
        "¡No hay requisitos para este curso!"
      ],
      "description": "En pleno siglo XXI la seguridad informática es uno de los aspectos más requeridos por las empresas y las profesiones en el sector tecnológico. En específico, la criptografía es la base sólida sobre la que asienta los intercambios de información de forma segura. Tan grande es su uso que toda la seguridad de las Criptomonedas como Bitcoin radica en la criptografía.\nEste es el único curso de todo Udemy en español que cubre los fundamentos y los pilares de la criptografía para acabar siendo un experto en este campo y entender a la perfección cómo funciona la tecnología Blockchain.\nEl curso ha sido diseñado para cubrir los principios básicos hasta los más avanzados de la criptografía, pasando por la criptografía simétrica, siguiendo con la criptografía de clave pública y finalizando con los algoritmos más destacables aplicados a la tecnología Blockchain.\nPor ello, el curso se ha divido en los siguientes bloques:\n\n\nBLOQUE 1: En este primer bloque nos vamos a centrar en la criptografía simétrica. En concreto veremos los siguientes puntos:\nCifrado clásico por substitución\nCifrado por Transposición\nAlgoritmos modernos\nData Encryption Standard (DES)\nCifrado en Flujo\nAdvanced Encryption Standard (AES)\n\n\nBLOQUE 2: En este segundo bloque veremos los conceptos esenciales de la criptografía asimétrica. Principalmente nos enfocaremos en:\nRSA\nDiffie-Hellman\nDistribución de las claves de cifrado\nFirmas digitales\nFunciones hash\nCriptografía de Curva elíptica en la tecnología Blockchain\n\n\nEste curso es ideal para cualquiera que quiera obtener conocimientos acerca de la criptografía y del entorno de seguridad que proporciona. En particular selo recomiendo a:\nEmpresarios visionarios que quieren llevar sus empresas al siguiente nivel.\nApasionados de la tecnología que quieran ganar experiencia en este mundo.\nCualquier persona interesada en mejorar y adaptarse a los cambios tecnológicos presentes y futuros.\nUna vez termines el curso, serás todo un experto en Criptografía. ¡Te espero en clase para que por fin puedas hacer uso de los algoritmos aplicados en el mundo criptográfico y que así puedas convertirte en todo un profesional!\n¡Nos vemos en clase!",
      "target_audience": [
        "Empresarios visionarios que quieren llevar sus empresas al siguiente nivel.",
        "Apasionados de la tecnología que quieran ganar experiencia en este mundo.",
        "Cualquier persona interesada en mejorar y adaptarse a los cambios tecnológicos presentes y futuros."
      ]
    },
    {
      "title": "Program & Simulate PLC-HMI With Real-World Examples on PC",
      "url": "https://www.udemy.com/course/plc-hmi-programming-simulation-in-minutes-with-examples/",
      "bio": "Revamped & Beginner-Friendly – Test & Simulate Real PLC-HMI Projects From Scratch (Part of 22 Real World Examples)",
      "objectives": [],
      "course_content": {
        "Instructor and Course Delivery": [
          "Course Introduction",
          "Instructor Introduction"
        ],
        "PLC and HMI": [
          "Brief about PLC and HMI",
          "Bit More about PLC and HMI"
        ],
        "Dive in PLC Code and HMI Visualization/Animation": [
          "Your First PLC Code in Ladder Diagram",
          "Your First HMI Animation Or Simulation"
        ],
        "Real World Practical Projects": [
          "Practical real world PLC project 1",
          "Project 1 HMI Visualization/Animation",
          "Practical real world PLC project 2",
          "Project 2 HMI Visualization/Animation",
          "Project 3 Backstory",
          "Practical real world PLC project 3",
          "Project 3 HMI Visualization/Animation",
          "Next step"
        ]
      },
      "requirements": [
        "No prior PLC or programming experience is required — this course is designed for complete beginners.",
        "You must have access to a Windows PC or laptop (recommended: 4GB RAM or more).",
        "Internet connection is needed to download free software (Step by step guide will be given).",
        "Basic computer skills like installing software and opening files are helpful"
      ],
      "description": "This is the revamped, high-impact starter course for anyone wanting to become a confident PLC-HMI programmer – even if you're starting from zero.\n\n\nIn this free course (just under 2 hours), you’ll begin learning how to:\n\n\nSimulate real-world PLC-HMI systems entirely on your laptop – no hardware needed\n\n\nBuild control logic with Ladder (Focused) and other languages like, FBD, and Structured Text (ST), IL, SFC, CFC\n\n\nCreate working interfaces (HMI) for actual automation tasks\n\n\nDevelop foundational skills that apply directly to real industry projects\n\n\nThis isn’t just theory or drag-and-drop tutorials. You’ll get hands-on experience creating project-based logic that reflects how actual factories and automation systems operate.\n\n\nThis course is Part 1 of a complete, 20-hour learning journey. Once you finish this free version, you can immediately continue with the paid full course, which includes:\n\n\nOver 22 real-world project examples\n\n\nFull automation simulations\n\n\nSystem design to commissioning, following real engineering workflows\n\n\nHMI and PLC integration, recipe setup, user manual development, and more\n\n\nYou’ll not only learn programming — you'll simulate full machine logic, troubleshoot like a pro, and prepare documentation the way real engineers do.\n\n\nBy the end of the full journey, you’ll go from beginner to confidently simulating, coding, and presenting your own automation systems – with reusable templates for your future projects or freelance clients.\n\n\n-> Start here. Then upgrade when you’re ready to go pro.\n\n\nOverall, this course is designed to transform you from a beginner to a confident PLC-HMI programmer. You'll gain hands-on experience by simulating real-world PLC-HMI systems, ensuring that your learning is practical and applicable to industry projects. Through project-based learning, you'll create logic that mirrors actual factory and automation operations.\n\n\nPart of a comprehensive 20-hour journey, the course includes over 22 real-world project examples and full automation simulations. By the end, you'll confidently simulate, code, and present your own automation systems, troubleshoot like a pro, and prepare documentation just like real engineers. This journey equips you with professional skills and reusable templates for future projects or freelance work.",
      "target_audience": [
        "Aspiring PLC-HMI programmers from any background — whether you’re a complete beginner, engineering student, technician, or even a DIY hobbyist eager to break into industrial automation.",
        "Teens, students, job seekers, and factory technicians looking to upskill and future-proof their careers with in-demand automation knowledge.",
        "Anyone curious about automation who wants to confidently design, simulate, and deploy PLC-HMI systems from scratch — no prior experience needed."
      ]
    },
    {
      "title": "Ace the Coding Interview",
      "url": "https://www.udemy.com/course/ace-the-coding-interview/",
      "bio": "Top 14 coding problems reviewed and explained",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup and IDE",
          "Interview tips"
        ],
        "Strings and Arrays": [
          "Strings and Arrays",
          "Reverse a string",
          "Integer palindrome",
          "Longest palindrome in a string"
        ],
        "Sorting and searching": [
          "Binary search",
          "Merge Sort",
          "Quick Sort",
          "Minimum in rotating array",
          "Square root calculation",
          "Two Sum"
        ],
        "Recursion and DP (Dynamic Programming)": [
          "Intro to recursion and DP",
          "All Parenthesis",
          "Subway Pass"
        ],
        "Trees and Graphs": [
          "Depth First Search",
          "Breadth First Search",
          "Count the islands",
          "Keys and Rooms"
        ],
        "System Design": [
          "The system design interview",
          "Design Uber"
        ]
      },
      "requirements": [
        "Ideally basic python"
      ],
      "description": "In my experience in interviewing over 150 engineers in big tech companies and startups, I noticed that most questions were only a variation of a small subset of questions and concepts. The goal of this class is to give candidates a guide and a list of questions to study to set them up for success in the coding and system design interviews.\n\n\nHow do you find the missing number in a given integer array of 1 to 100?\n\n\nHow do you find the duplicate number on a given integer array?\n\n\nHow do you find the largest and smallest number in an unsorted integer array?\n\n\nHow do you find all pairs of an integer array whose sum is equal to a given number?\n\n\nHow do you find duplicate numbers in an array if it contains multiple duplicates?\n\n\nHow are duplicates removed from a given array in Java?\n\n\nHow is an integer array sorted in place using the quicksort algorithm?\n\n\nHow do you remove duplicates from an array in place?\n\n\nHow do you reverse an array in place in Java?\n\n\nHow are duplicates removed from an array without using any library?\n\n\nThese are the types of questions you will learn to solve in minutes!",
      "target_audience": [
        "Engineers looking to interview",
        "Beginner developers"
      ]
    },
    {
      "title": "programming finite field for bitcoin elliptic curve",
      "url": "https://www.udemy.com/course/finitefield/",
      "bio": "Using golang to put the mathematical object which is finite field of bitcoin into implementation",
      "objectives": [],
      "course_content": {
        "Finite field for bitcoin elliptic curve": [
          "Introduction to finite field",
          "Design finite field element class",
          "Implement Add and Negate operation",
          "Implement subtract for finite field",
          "Implement multiple and power for finite field",
          "Solve randomly select element to m.",
          "Using big int data type for finite filed",
          "Testing big int data type in finite field",
          "Compute finite field element with power P",
          "Introduce to division on finite field elements",
          "Implementing division on finit field element"
        ]
      },
      "requirements": [
        "one year golang experience",
        "high school math background"
      ],
      "description": "Welcome to the ultimate journey into the heart of Bitcoin development! In this comprehensive course, you will delve deep into the world of blockchain technology and cryptocurrency by harnessing the power of Go programming language.\nBitcoin, the revolutionary digital currency, has captured the imagination of developers worldwide. Now, it's your turn to join the ranks of elite blockchain engineers by mastering every aspect of Bitcoin development with Go.\nWhat You'll Learn:\nElliptic Curve Cryptography: Understand the mathematics behind Bitcoin's security model and implement it using Go\n\n\nWhy This Course?\nHands-On Learning: Get your hands dirty with real-world coding exercises and projects designed to reinforce your understanding of Bitcoin development.\nExpert Instruction: Learn from an experienced Bitcoin developer and product manager with years of industry experience.\nCareer Advancement: Unlock new career opportunities as a blockchain developer or engineer with in-depth knowledge of Bitcoin development.\nLifetime Access: Enjoy all time access to all course materials such as  codes, articles.\nWho Is This Course For?\nSoftware developers interested in blockchain technology.\nCryptocurrency enthusiasts eager to understand the inner workings of Bitcoin.\nProduct managers looking to deepen their knowledge of blockchain technology.\nPrerequisites:\nBasic knowledge of Go programming language.\nFamiliarity with cryptographic concepts is helpful but not required.",
      "target_audience": [
        "software Developers Interested in Blockchain Technology",
        "Cryptocurrency Enthusiasts",
        "students and Academics"
      ]
    },
    {
      "title": "REST C# Webservices mit ASP.NET Core Web API (.NET 5/.NET 6)",
      "url": "https://www.udemy.com/course/rest-webservices-mit-aspnet-core-web-api-net-50/",
      "bio": "RESTful API Webservices: Grundlagen für C# Entwickler mit Visual Studio 2019/2022 und dem .NET 5/.NET 6 Framework.",
      "objectives": [
        "Neu: Jetzt auch mit .Net6 und Visual Studio 2022",
        "Erstellung von RESTful Webservices mit .NET 5 oder .NET 6 Web API",
        "Installation und Einsatz von Visual Studio 2019/2022 in Verbindung mit APIs",
        "Übersicht zu ASP, .NET Framework, .NET Core und .NET „Future“",
        "Was sind Webservices, Vorteile und Einsatz in der Praxis",
        "Knowhow zu Microservicearchitekturen",
        "Grundlagen zur technischen Funktionsweise und Programmierung einer API",
        "Planung und Implementierung eines praxisnahen Beispiels",
        "Beherrsche das Aufrufen und Testen",
        "Lerne wie eine API dokumentiert wird",
        "Versionierung einer API",
        "Verstehe CRUD-Operationen (CREATE, READ, UPDATE, DELETE)",
        "Einsatz der HTTP-Methoden (GET, POST, PUT, DELETE)",
        "Lerne Begriffe kennen wie: Request, Response, Statuscode, Endpoints, Routing und Controller",
        "Logging mit NLog in einem Webservice",
        "... und sehr vieles mehr!"
      ],
      "course_content": {
        "Einleitung": [
          "Willkommen",
          "Kursinhalt und Kursnutzung",
          "Die Bewertung",
          "Motivation, Zielgruppe, Voraussetzungen",
          "Webservices in der Praxis",
          "Kapitelabschluss"
        ],
        "Tools zum Kurs": [
          ".NET 5: Installation VisualStudio 2019 Community Edition",
          ".NET 5: Installation .NET 5.0 SDK und Runtime",
          ".NET 6: Installation VisualStudio 2022 inklusive SDK",
          "Kapitelabschluss"
        ],
        "Allgemeine Grundlagen": [
          "Die Welt von ASP – Eine Übersicht",
          "Die Welt von .NET - Eine kurze Übersicht",
          "Die Welt von .NET Core - Eine kurze Übersicht",
          "Kapitelabschluss"
        ],
        "Der erste Webservice (Default-Projekt)": [
          "Einleitung",
          ".NET 5: Projekterstellung mit VisualStudio 2019",
          ".NET 6: Projekterstellung mit VisualStudio 2022",
          ".NET 5: Projektübersicht: Struktur und Dateien",
          ".NET 6: Projektübersicht: Struktur und Dateien",
          ".NET 5: Datei „Program.cs“ und „Startup.cs“ unter der Lupe",
          ".NET 6: Datei „Program.cs“ unter der Lupe",
          "Datei „WeatherForecastController.cs“ unter der Lupe"
        ],
        "Technische Grundlagen": [
          "Webservices: Vorteile und Einsatz",
          "Grundsätzliche Funktionsweise einer API",
          "Das Request und Response Objekt",
          "HTTP-Methoden",
          "Statuscodes",
          "Kapitelabschluss"
        ],
        "Erstelle deinen ersten eigenen Webservice": [
          "Das Praxisprojekt: Einkaufsliste",
          ".NET 5: Die Projekterstellung",
          ".NET 6: Die Projekterstellung",
          "Erstelle Dein Modell",
          "Controller mit ersten Endpoint",
          "POST mit Objekt-Parameter",
          "POST mit URL-Parameter",
          "GET - Artikel aufrufen",
          "PUT - Artikel aktualisieren",
          "DELETE - Artikel löschen"
        ],
        "Weiterführende Themen": [
          "Versionierung einer API",
          "Logging mit NLog Teil 1",
          "Logging mit NLog Teil 2"
        ],
        "Fazit": [
          "Fazit"
        ]
      },
      "requirements": [
        "Grundkenntnisse in der Programmiersprache C#"
      ],
      "description": "Lerne alle wichtigen Grundlagen über Webservices kennen im Kontext von Visual Studio 2019 und .NET 5 oder Visual Studio 2022 und .NET 6. In diesem Kurs werden beide Versionen des Frameworks behandelt.\nVerstehe Begriffe wie beispielsweise ASP.NET Core, Request, Response, Statuscode, Endpoint, Routing, Controller oder auch Microservicearchitektur. Was bedeuten diese Begriffe überhaupt und vor allem im Kontext moderner Softwareentwicklung?\nWas sind Webservices, wofür braucht man sie und natürlich das aller wichtigste wie programmiert man sie? Diese Fragen will ich in diesem Kurs beantworten, indem ich bei den Grundlagen beginne und wir ohne viel Schnickschnack einen ersten Webservice erstellen. Dabei ist mir besonders wichtig Dich Schritt für Schritt anzuleiten und jeden Schritt auch ausführlich zu erklären.\nDes Weiteren ist dieser Kurs eine Abkürzung. Durch sehr viel komprimiertes Wissen vermeidet er langwierige Aufwände. Du ersparst dir tageweise Recherchen von zusammenhangslosen Informationen und wirst dich schnell in der Welt von Webservices zurechtfinden. Dieser Onlinekurs setzt genau dies in den Mittel Punkt: Fundierte Grundlagen, praxisorientierte Aufgabe, praxisorientierter Lösungsweg.\nDie Werkzeuge bzw. Tools dafür sind kostenlos und ich zeige dir wie du sie bekommst, wie sie zu installieren sind und wie man mit ihnen arbeitet.\nIn diesem Kurs bekommst Du die aus meiner Sicht wichtigsten Fähigkeiten vermittelt, die man unbedingt haben sollte, um beispielsweise auch in der Berufswelt bestehen zu können, um langfristig erfolgreich Software zu implementieren, um bei den Arbeitskollegen mitreden zu können und um den einen oder anderen Vorgesetzten mit deinem Knowhow zu beeindrucken.\nWenn das die Dinge sind, die du erreichen willst, dann fang noch heute an.",
      "target_audience": [
        "Softwareentwickler, die keine Kenntnisse in Webservices.",
        "Softwareentwickler, die sich von den klassischen Architekturen hin zu modernen serviceorientierten Architekturen weiterbilden wollen."
      ]
    },
    {
      "title": "Azure Kubernetes Service - Orquestração de Containers no AKS",
      "url": "https://www.udemy.com/course/aks-azure-kubernetes-service/",
      "bio": "Curso Completo sobre Orquestração de Contêineres com o AKS, serviço de Kubernetes do Azure.",
      "objectives": [
        "Azure Kubernetes Service (AKS) : Kubernetes gerenciado pelo Microsoft Azure",
        "Kubernetes: Entenda os fundamentos do Kubernetes e como ele orquestra contêineres.",
        "Docker: Aprenda a criar e gerenciar contêineres usando Docker.",
        "Containers: Explore os conceitos de contêineres e como eles melhoram a eficiência do desenvolvimento.",
        "DevOps no AKS: Implemente práticas DevOps utilizando Azure Kubernetes Service para melhorar a entrega contínua.",
        "Helm - Kubernetes Package Manager: Utilize Helm para gerenciar pacotes Kubernetes com facilidade.",
        "Azure Container Registry: Armazene e gerencie imagens de contêineres usando o Azure Container Registry.",
        "Redes Virtuais no AKS: Configure e gerencie redes virtuais dentro do Azure Kubernetes Service.",
        "Armazenamento e Volumes no Kubernetes: Gerencie volumes e armazenamento persistente para seus contêineres.",
        "Azure CLI com AKS: Use o Azure CLI para interagir e gerenciar seus clusters AKS.",
        "Ingress Controller com Azure Application Gateway: Configure controladores de ingresso usando o Azure Application Gateway.",
        "Ingress Controller com NGINX: Implemente controladores de ingresso com NGINX.",
        "Ingress Controller com Traefik: Use Traefik como seu controlador de ingresso no Kubernetes.",
        "DNS e SSL/TLS (HTTPS) no Kubernetes: Configure DNS e segurança SSL/TLS para suas aplicações Kubernetes.",
        "HTTPS e Certificados de Segurança no AKS: Implemente HTTPS e gerencie certificados de segurança no AKS.",
        "Monitoramento de Containers no AKS: Monitore o desempenho e a saúde de seus contêineres no AKS.",
        "Terraform com AKS: Utilize Terraform para automatizar a infraestrutura do AKS.",
        "Escalonamento no AKS: Implemente estratégias de escalonamento automático para lidar com a carga variável de trabalho.",
        "Prometheus: Configure e utilize Prometheus para monitorar métricas e alertas em seus clusters Kubernetes.",
        "Grafana: Integre Grafana para criar dashboards e visualizações detalhadas de métricas e dados coletados dos seus contêineres e clusters."
      ],
      "course_content": {
        "Introdução ao Azure Cloud, Containers e Kubernetes": [
          "Sobre o Treinamento",
          "Introdução ao Módulo",
          "Azure e Computação na Nuvem",
          "Evolução do Software - Mainframe aos Microsservicos",
          "Containers e Kubernetes no Azure",
          "[Hands-On] Criando Conta no Azure",
          "[Hands-On] Overview do Portal do Azure",
          "Principais Serviços do Azure",
          "Regiões e Grupos de Recursos",
          "[Hands-On] Criando Resource Group e Serviços pelo Portal",
          "[Hands-On] Habilitando Novas Assinaturas no Azure",
          "Formas de Deploy para Serviços baseados em Containers no Azure",
          "Montando Ambiente de Laboratorio para o Treinamento",
          "Azure CLI",
          "Principais Comandos do Azure CLI",
          "[Hands-On] Instalando Azure CLI e criando Grupo de Recursos no Windows",
          "[Hands-On] Instalando Azure CLI e criando Grupo de Recursos no MacOS",
          "[Hands-On] Instalar Azure CLI no Ubuntu Linux",
          "Azure Cloud Shell",
          "[Hands-On] Inicializando Azure Cloud Shell e Criando Grupo de Recursos",
          "Powershell e Azure Powershell",
          "[Hands-On] Instalando Azure Powershell e criando Grupo de Recursos no Windows",
          "[Hands-On] Instalando Azure Powershell e criando Grupo de Recursos no Mac",
          "[Hands-On] Instalando Visual Studio Code e Extensões Necessárias",
          "[Hands-On] Instalando Git no Windows",
          "Quiz do Modulo",
          "Resumo do Módulo"
        ],
        "Containers Docker, Docker Hub e Docker Compose": [
          "Introdução ao Módulo",
          "Introdução ao Docker e Containers",
          "Principais Comandos Docker",
          "[Hands-On] Instalando Docker Desktop no Windows",
          "[Hands-On] Instalando Docker no MacOS",
          "[Hands-On] Instalando Docker no Ubuntu Linux",
          "Tipos de Imagens para Containers",
          "[Hands-On] Docker - Imagem Hello World",
          "[Hands-On] Docker - Imagem Ubuntu",
          "[Hands-On] Docker - Expor Site na Porta 80",
          "dockerfile e dockerignore",
          "[Hands-On] dockerfile",
          "[Hands-On] dockerignore",
          "[Hands-On] Docker Hub - Push de Imagem",
          "Docker Compose",
          "[Hands-On] Docker Compose - Subindo 2 Containers",
          "[Case] Usando Docker Compose para Subir Container com WordPress + MySQL Database",
          "[Hands-On] Docker Compose - Subindo Site Wordpress - Aplicação PHP + MySQL",
          "[Hands-On] Extensão Docker no Visual Studio Code",
          "Quiz do Modulo",
          "Resumo do Módulo"
        ],
        "Azure Container Registry (ACR) - Repositório de Imagens de Containers no Azure": [
          "Introdução ao Módulo",
          "Azure Registry Container (ACR) - Repositório de Imagens para Containers no Azure",
          "Camadas e Preços do Azure Registry Container",
          "[Hands-On] Criando Imagem Local",
          "[Hands-On] Criando e Explorando Azure Container Registry pelo Portal",
          "[Hands-On] Subindo sua Imagem para o ACR",
          "Azure App Service for Containers",
          "[Hands-On] Publicando no App Service for Containers com ACR",
          "[Hands-On] Webhook no ACR e App Service for Containers",
          "Comandos para Provisionar Azure Container Registry com Azure CLI",
          "[Hands-On] Azure CLI - Provisionando ACR com Azure CLI",
          "[Hands-On] Azure CLI - Push para o ACR",
          "[Hands-On] Azure CLI - Web App for Containers",
          "[Case] Continuous Deployment usando ACR Webbook com App Service for Container",
          "[Hands-On] Azure CLI - ACR Webhook",
          "Quiz do Modulo",
          "Resumo do Modulo"
        ],
        "Kubernetes Básico e Azure Kubernetes Service (AKS)": [
          "Introdução ao Módulo",
          "Kubernetes Básico",
          "Onde devo utilizar o Kubernetes?",
          "Porque usamos o Kubernetes? Principio \"Um processo por Container\"",
          "Componentes do Kubernetes",
          "Azure Kubernetes Service (AKS)",
          "Conceitos e Arquitetura do AKS",
          "Modelos de Cobranca e Limites dos Planos do AKS",
          "Como Provisionar um Cluster AKS",
          "[Hands-On] Provisionando AKS Cluster pelo Portal do Azure",
          "[Hands-On] Overview das Funcionalidades do Portal do Azure para AKS Cluster",
          "[Hands-On] Adicionando Quickstart Application do AKS",
          "[Hands-On] Implantar YAML no AKS pelo Portal",
          "Quiz do Modulo",
          "Resumo do Modulo"
        ],
        "Provisionando AKS Clusters com Azure CLI, Azure Powershell e ARM Template": [
          "Introdução do Módulo",
          "Principais Comandos para Provisionar e Gerenciar AKS com Azure CLI",
          "[Hands-On] Provisionando Cluster do AKS pelo Azure CLI - Simplificado",
          "[Hands-On] Provisionando o serviço do AKS e clusters pelo Azure CLI - Detalhado",
          "[Hands-On] Provisionando AKS integrado ao ACR pelo Azure CLI",
          "Principais Comandos para Provisionar e Gerenciar AKS com Azure Powershell",
          "[Hands-On] Provisionando Cluster do AKS pelo Azure Powerheshell",
          "ARM (Azure Resource Manager) Template",
          "[Hands-On] Criando AKS a partir de Template ARM",
          "Quiz do Modulo",
          "Resumo do Modulo"
        ],
        "Componentes do Kubernetes e AKS - Kubectl, Cluster, Nodes, Pods e Control Plane": [
          "Introdução ao Modulo",
          "Fluxo de Implantacao no Kubernetes",
          "Kubectl e Principais Comandos",
          "[Hands-On] Gerenciando Cluster com Kubectl",
          "Detalhando a Sintaxe YAML no Kubernetes",
          "Workflow para Implantação de Pods",
          "Status e seu Ciclo de Vida de Pods",
          "Pods - Detalhando a Sintaxe YAML",
          "[Hands-On] Criando Pods com Manifesto YAML",
          "Nodes e seus componentes: Kubelet, Container Runtime e Kube-proxy",
          "Plano de Controle : etcd, API Server, Controller Manager e Scheduler",
          "[Hands-On] Gerenciando NodePools com Azure CLI",
          "[Hands-On] Gerenciando NodePools no Portal",
          "Namespaces no Kubernetes",
          "Namespace - Detalhando a Sintaxe YAML",
          "[Hands-On] Namespaces e Annotations no Kubernetes",
          "Labels, Selectors e Annotations no Kubernetes",
          "[Hands-On] Usando Labels no Kubernetes",
          "[Hands-On] Usando Selector no Kubernetes",
          "[Hands-On] Usando NodeName para Aplicar Pod em Node especifico",
          "[Hands-On] Upgrade da Versão do Kubernetes no NodePool e AKS no Portal do Azure",
          "[Hands-On] Upgrade da Versão do Kubernetes no NodePool e AKS com Azure CLI",
          "Quiz do Modulo",
          "Resumo do Módulo"
        ],
        "Componentes do Kubernetes e AKS - Deployment e Services": [
          "Introdução ao Módulo",
          "Deployment Controller no Kubernetes",
          "Deployment - Detalhando a Sintaxe YAML",
          "ReplicaSet no Kubernetes",
          "ReplicaSet - Detalhando a Sintaxe YAML",
          "[Hands-On] ReplicaSet em Pods",
          "[Hands-On] Aplicando Deployment no AKS",
          "Kubernetes Services",
          "Kubernetes Services - ClusterIP",
          "Kubernetes Services - NodePort",
          "Kubernetes Services - LoadBalancer",
          "Service - Detalhando a Sintaxe YAML",
          "[Hands-On] Aplicando Services no AKS",
          "Quiz do Modulo",
          "Resumo do Módulo"
        ],
        "Armazenamento e Volumes no Kubernetes e AKS": [
          "Introdução ao Modulo",
          "Kubernetes Storage",
          "Tipos de Volumes para Armazenamento no Kubernetes",
          "[Hands-On] Usando EmptyDir como Volume não Persistente",
          "[Hands-On] Usando GitRepo como Volume não Persistente",
          "[Hands-On] Usando Azure File Share como Storage com CSI Driver",
          "Kubernetes Persistent Volume (PV)",
          "Kubernetes Persistent Volume Claims(PVC)",
          "Kubernetes Storage Class",
          "[Case] Usando Azure File Share como Volume Persistente Estático e Dinâmico",
          "[Hands-On] Azure File Share - Criando Storage Class",
          "[Hands-On] Azure File Share - Criando Persistent Volume (PV)",
          "[Hands-On] Azure File Share - Criando Persistent Volume Claim (PVC)",
          "[Hands-On] Azure File Share - Criando POD com Volume Persistent",
          "[Hands-On] Azure File Share - Uso Dinâmico como Storage",
          "[Case] Usando Azure Disks como Volume Persistente Estático e Dinâmico",
          "[Hands-On] Azure Disks - Integrando Discos como Storage no AKS",
          "[Hands-On] Azure Disks - Uso Dinâmico como Storage",
          "Quiz do Modulo",
          "Resumo do Modulo"
        ],
        "Segredos e Jobs no Kubernetes e AKS - ConfigMaps, Secrets e Azure Key Vault": [
          "Introdução ao Modulo",
          "Kubernetes ConfigMaps",
          "[Hands-On] Provisionando AKS e Azure MySql Database",
          "[Hands-On] Adicionando ConfigMaps no Cluster do AKS",
          "[Hands-On] Consumindo ConfigMaps em Pods",
          "[Hands-On] Popular ConfigMaps em Volumes",
          "Kubernetes Secrets",
          "[Hands-On] Adicionar Segredos do Cluster do AKS",
          "[Hands-On] Consumindo Segredo em Pods",
          "[Hands-On] Popular Segredos em Volumes",
          "Kubernetes Jobs & CronJob",
          "[Hands-On] Kubernetes Jobs - Conectando no MySQL DB com Secrets e ConfigMaps",
          "[Hands-On] Kubernetes CronJobs - Conectando no MySQL DB com Secrets e ConfigMaps",
          "Kubernetes Secrets Store CSI Driver",
          "Azure Key Vault",
          "[Case] Usando Azure Key Vault para Armazenar Segredos do Wordpress Blog",
          "[Hands-On] Provisionando Azure Key Vault e Segredo no Portal",
          "[Hands-On] Adicionar Permissão para a VMSS do AKS acessar o Segredo do Key Vault",
          "[Hands-On] Aplicando SecretProviderClass",
          "[Hands-On] Consumindo Segredo do Azure Key Vault no Pod",
          "[Hands-On] Pull da Imagem do WordPress customizada para o ACR",
          "[Hands-On] Deployment do Wordpress para o AKS consumindo Segredos do Key Vault",
          "[Hands-On] Expor Service do Wordpress para o AKS consumindo Segredos",
          "Quiz do Modulo",
          "Resumo do Modulo"
        ],
        "Autenticação, Autorização e Controle de Acesso no Kubernetes e AKS": [
          "Introdução ao Módulo",
          "Formas de Autenticar e Autorizar no AKS",
          "Kubernetes RBAC - Controle de Acesso Baseado em Função do Kubernetes",
          "[Case] Usando Kubernetes RBAC para Segregar Autorização entre Ambientes e Users",
          "[Hands-On] Provisionar AKS com Kubernetes RBAC no Portal do Azure",
          "[Hands-On] Kubernetes RBAC - Service Account, Role e RoleBindings",
          "[Hands-On] Kubernetes RBAC - Role e RoleBindings",
          "[Hands-On] Azure CLI - Autenticação usando Contas Locais sem Autorizador",
          "Azure Active Directory",
          "Azure Active Directory integrado com AKS",
          "[Hands-On] Azure Active Directory - Criando Grupos e Usuários no AAD",
          "[Hands-On] Azure Active Diretory - Provisionando AKS integrado ao AAD",
          "[Hands-On] Azure Active Diretory - Validando Acessos",
          "[Hands-On] Azure CLI - Provisionando AKS integrando ao AAD com comandos do CLI",
          "Identidade Gerenciada (MSI) e Identidade de Serviço (Service Principal) no AKS",
          "[Hands-On] Usar Identidades Gerenciadas no AKS no Portal",
          "[Hands-On] Azure CLI - Usar Identidades Gerenciadas no AKS",
          "[Hands-On] Usar Entidades de Serviço no AKS - Registrando App",
          "[Hands-On] Usar Entidades de Serviço no AKS - Provisionando AKS",
          "Quiz do Modulo",
          "Resumo do Modulo"
        ]
      },
      "requirements": [
        "Conta Gratuita da Microsoft para Aulas Hands-On"
      ],
      "description": "Aprenda a utilizar o serviço Kubernetes como Orquestrador de Containers na nuvem da Microsoft: o Azure Kubernetes Service.\n\n\nSão mais de 26 horas em mais de 320 aulas de treinamento, onde você ira aprender sobre:\n\n\nIntrodução ao Azure Cloud, Containers e Kubernetes : Aprenderemos o básico da nuvem do Azure, Containers e Kubernetes no primeiro modulo.\nContainers Docker, Docker Hub e Docker Compose : Detalharemos o uso de Container e iremos conhecer o serviço Docker Hub, e como usar Docker Compose\nAzure Container Registry (ACR) - Repositório de Imagens de Containers no Azure : O serviço para repositório de imagens de containers do Azure é explorado no terceiro modulo.\nKubernetes Básico e Azure Kubernetes Service (AKS) : No quarto módulo, iremos iniciar o aprendizado do Kubernetes e do AKS.\nProvisionando AKS Clusters com Azure CLI, Azure Powershell e ARM Template :  No quinto módulo, iremos aprender 3 formas de provisionar os nossos clusters do AKS.\nComponentes do Kubernetes e AKS - Kubectl, Cluster, Nodes, Pods e Control Plane : Iremos nesse módulo detalhar os componentes básicos do Kubernetes.\nComponentes do Kubernetes e AKS - Deployment e Services : No sétimo módulo, aprenderemos sobre Deployment, Replica Set e Services.\nArmazenamento e Volumes no Kubernetes e AKS : Storage é o tema do oitavo módulo e iremos usar o Azure File Share e Azure Disks como nosso armazenador de arquivos.\nSegredos e Jobs no Kubernetes e AKS - ConfigMaps, Secrets e Azure Key Vault : Config Maps, Secrets, Jobs e CronJobs será o tema do nono módulo. Além disso, também iremos usar o Key Vault como cofre de segredos integrado ao AKS.\nAutenticação, Autorização e Controle de Acesso no Kubernetes e AKS : Controle de usuários é o tema do décimo módulo. Iremos aprender sobre Kubernetes RBAC, Azure Active Directory, Service Principal e Managed Identity.\nPackage Manager com Helm : No décimo primeiro módulo aprenderemos sobre o Helm - Package Manager do Kubernetes.\nRedes Virtuais com Kubenet e CNI no AKS : VNETs do Azure no nosso AKS é o tema do décimo segundo módulo.\nIngress Controller no AKS - HTTP Routing e NGINX : Neste módulo iremos aprender sobre 2 formas de usar ingress controller: HTTP Application Routing e o NGINX.\nIngress Controller no AKS - AGIC - Azure Gateway Ingress Controller :  O tema do décimo quarto módulo é o uso do App Gateway como Ingress Controller.\nIngress Controller no AKS - Traefik : Neste módulo, aprenderemos sobre o Traefik como Ingress Controller.\nDNS - Domain Name Service e Certificado SSL/TLS (HTTPS)  no AKS : No décimo sexto módulo, o tema será certificado seguro e como podemos integrar ao nosso AKS.\nDimensionamento e Desempenho em Cluster AKS : Neste módulo, o tema será escalonamento no AKS. Veremos como escalar manual e automaticamente nossos nodes e também como podemos usar o HPA - Horizontal Pod Autoscaler.\nMonitoramento no Cluster AKS : No décimo oitavo módulo aprenderemos como podemos monitor o nosso cluster do AKS e seus containers. Usaremos o Azure Monitor, Prometheus e Grafana!\nAzure DevOps - Entrega Continua de Containers e Kubernetes : C.I. e C.D. é o tema do nosso penúltimo módulo. E nele aprenderemos como podemos subir containers para o Kubernetes usando o Azure DevOps.\nIaC - Provisionando AKS no Terraform : Infraestrutura como código é o tema do nosso último módulo. Aprenderemos a criar clusters do AKS com o Terraform.\nO foco deste treinamento é tanto para iniciantes quanto para profissionais da T.I. com experiência na área.\nIremos fazer tudo passo a passo, até a geração do código fonte utilizado nas aplicações de exemplo.\n\n\nProntos para dominar o Kubernetes e Azure Kubernetes Service?!",
      "target_audience": [
        "Desenvolvedores",
        "Profissionais em Geral de T.I.",
        "Sysadmin",
        "SRE",
        "DevOps Engineer",
        "Analista de Infraestrutura"
      ]
    },
    {
      "title": "AWS Certified Cloud Practitioner CLF-C02 in a Weekend",
      "url": "https://www.udemy.com/course/aws-certified-cloud-practitioner-clf-c02-in-a-weekend/",
      "bio": "Pass AWS Certified Cloud Practitioner CLF-C02 in a WEEKEND. GET AWS Certification - Learn AWS Concepts.",
      "objectives": [
        "This course covers every concepts to Pass AWS Cloud Practitioner Exam",
        "Latest Updated course AWS Certified Cloud Practitioner Certification",
        "Learn and Clear AWS Certified Cloud Practitioner Certification exam confidently and Learn the AWS Fundamentals",
        "Have some labs and Real world Examples"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "AWS Monitor",
          "AWS Monitoring Insights",
          "Multi Factor Authentication in AWS",
          "AWS AD Authentication Decision Tree"
        ]
      },
      "requirements": [
        "No IT prerequisites required"
      ],
      "description": "Only AWS Certified Cloud Practitioner course that you need. This course covers everything to Pass the Exam and Learn AWS concepts. The AWS Certified Cloud Practitioner course is an essential entry-level program designed for individuals seeking to build a foundational understanding of cloud computing and Amazon Web Services (AWS). This course serves as a perfect starting point for beginners, business professionals, technical managers, and aspiring cloud practitioners who want to grasp the basic concepts of cloud technology and AWS services without requiring deep technical expertise. It provides a clear and structured overview of cloud fundamentals, AWS core services, security, pricing, and support options.\nThe course begins with an introduction to cloud computing concepts, explaining key terms such as Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS). Learners are guided through the core benefits of cloud adoption, including scalability, elasticity, high availability, and cost efficiency. The course emphasizes the shared responsibility model and explores the fundamental principles of cloud architecture, helping you understand how AWS delivers reliable and secure services across the globe.\nYou will gain a comprehensive overview of the AWS Global Infrastructure, including regions, availability zones, and edge locations. They explore key AWS services such as Amazon EC2 (Elastic Compute Cloud), S3 (Simple Storage Service), RDS (Relational Database Service), Lambda, and VPC (Virtual Private Cloud). Each service is explained with its core functionality, use cases, and practical demonstrations, ensuring that learners understand how these components integrate within cloud solutions. Security and compliance are critical aspects covered in detail, introducing participants to AWS Identity and Access Management (IAM), encryption methods, and AWS’s approach to securing cloud environments. The course also highlights AWS pricing models, billing concepts, and cost management tools, such as the AWS Pricing Calculator and AWS Budgets, giving learners insights into how to optimize cloud spending effectively.\nYou will have a solid understanding of AWS cloud concepts, services, and security measures. They will be confident in communicating cloud benefits to both technical and non-technical and will be well-prepared to pass the AWS Certified Cloud Practitioner exam. This course is ideal for anyone looking to start a career in cloud computing, advance their business understanding of AWS, or lay the groundwork for more advanced AWS certifications.",
      "target_audience": [
        "This AWS Cloud Practitioner course is for anyone wanting to obtain the knowledge to pass the AWS Certified Cloud Practitioner Certification"
      ]
    },
    {
      "title": "Introduction to Data Structures",
      "url": "https://www.udemy.com/course/introduction-to-data-structures-y/",
      "bio": "Learn the basic concepts of data structure in easy way",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "There is No any prerequisites, as this course is core subject and I will be covering all the basics"
      ],
      "description": "Data Structure can be defined as the group of data elements which provides an efficient way of storing and organizing data in the computer so that it can be used efficiently. Some examples of Data Structures are arrays, Linked List, Stack, Queue, etc.\nThis course covers the brief information of all linear Data Structures, Basic concepts of Data Structure and different types of data Structure.\nThais course is useful for the students of Computer science, Engineering and all those who have interest in programming and want to become a software engineer or IT professional.\nThis course have 7 videos, First two videos are on basic concepts of data structure like it’s definition, meaning , idea of abstract data type along with one example is also given in first video. Second video covers different types of data structures with its examples.\nNext five videos gives the brief information of all the linear data structures like array, multidimensional array, stack queue and link list with their applications, advantages and disadvantages.\nThis course is the basic course, it don’t have any pre requisite because all the basics required to learn the data structures are covered in it. But this course means not the complete data structure, after completing this course students can learn other advanced concepts and can obtain deep knowledge of the subject. Students can implement programs on the concepts by any programming language which they know.",
      "target_audience": [
        "Computer Science Students, Engineering students, all those who want to learn programming and become IT professional"
      ]
    },
    {
      "title": "AWSで学ぶ！マイクロサービス入門",
      "url": "https://www.udemy.com/course/aws-vlfc/",
      "bio": "Amazon API Gateway、AWS Lambda、Amazon DynamoDBとPython＆Node.jsで学ぶ、ECサイト構築、利用を通じたマイクロサービスの仕組み",
      "objectives": [
        "マイクロサービスの特徴や用途、メリットデメリットについて自分の言葉で説明できるようになる",
        "AWS各種サービス（Amazon API Gateway、AWS Lambda、Amazon DynamoDB等）を使用し、自力でREST API構築ができるようになる",
        "REST APIの組合せによりマイクロサービス構築ができるようになる",
        "マイクロサービス構築時に発生しがちなエラーと解決方法を理解し、自力で調査、対策（デバッグ、ログ出力・確認、改修）ができるようになる"
      ],
      "course_content": {},
      "requirements": [
        "SQLの基礎知識（INSERT、SELECT、UPDATE、DELETE）",
        "Webシステムの基礎知識（HTTPメソッドの種類と使い方、JSONやXMLのデータ形式に対する理解等）はあれば尚可（無くても受講可）",
        "REST API、サーバレスアーキテクチャの基礎知識はあれば尚可（無くても受講可）",
        "Python、Nodejsプログラミングの知識はあれば尚可（無くても受講可）"
      ],
      "description": "＜コースの概要＞\n本コースは前半の理論編でマイクロサービスの概要をご理解いただいた後、後半の実践編でAWS上の環境を使用して数多くのハンズオンを実施することで、より理解が深まる構成となっております。\nハンズオンではAmazon API Gateway、AWS Lambda、Amazon DynamoDB等のサービスを使用して、ECサイト構築、利用を通じてマイクロサービスの仕組みを実践的に学ぶことができます。\n\n\n＜他教材との違い＞\n本コースと他教材（書籍やYoutube動画教材等）との違いは以下の通りです。\n・１本完結型コースであるためご自身でネット検索やマニュアル確認等を行う手間がかからない。\n・なぜマイクロサービスが必要なのか、なぜその手順で設定するのか等、解説する技術や手順一つとってもその理由や背景を詳細に説明しているため途中で止まらずに受講できる。\n・全レクチャー動画ダウンロード可能なため、場所を問わずどこからでも受講できる。\n\n\n＜コース受講後の姿＞\n本コース受講後には以下のスキルを自然と身に付けることができます。\n・マイクロサービスの特徴や用途、メリットデメリットについて自分の言葉で説明できるようになる\n・AWS各種サービス（Amazon API Gateway、AWS Lambda、Amazon DynamoDB等）を使用し、自力でREST API構築ができるようになる\n・REST APIの組合せによりマイクロサービス構築ができるようになる\n・マイクロサービス構築時に発生しがちなエラーと解決方法を理解し、自力で調査、対策（デバッグ、ログ出力・確認、改修）ができるようになる\n\n\n＜コースの内容＞\n本コースの内容は以下の通りです。\nコース概要\n本コース受講にあたって\n自己紹介\n本コースのねらい\n本コースの内容\nマイクロサービス概要\nマイクロサービスのイメージ\nマイクロサービスの特徴\nマイクロサービスのメリット、デメリット\nマイクロサービス構築ハンズオン（理論編）\nハンズオン実施概要\nECサイト業務・開発機能の概要\nAWSサービス紹介\n環境構成\n構築の流れ\nマイクロサービス構築ハンズオン（実践編）\nDB作成\nIAMロール作成\nLambda関数作成（ユーザ情報操作）\nLambda関数作成（商品情報操作）\nLambda関数作成（在庫情報操作）\nREST API作成（ユーザ情報操作）－リソース作成－\nREST API作成（ユーザ情報操作）－メソッド作成－\nREST API作成（商品情報操作）－リソース作成－\nREST API作成（商品情報操作）－メソッド作成－\nREST API作成（在庫情報操作）－リソース作成－\nREST API作成（在庫情報操作）－メソッド作成－\nマイクロサービスハンズオン①\nマイクロサービスハンズオン②\nマイクロサービスハンズオン③\n（付録）エラー解決虎の巻\nAWS構築環境削除\n削除対象リソースの確認\n削除対象リソースの削除\nボーナスレクチャー\nボーナスレクチャー\n＜変更履歴＞\n・2023/8/13: Q&A起因で「以降のLambda関数作成系3レクチャー（ユーザ情報操作、商品情報操作、在庫情報操作）の補足」レクチャーを追加\n・2023/9/25: 「3.5.構築の流れ」レクチャーの添付ファイル（AWSアカウント作成.txt）を最新化\n・2023/8/13: Q&A起因で「以降のLambda関数作成系3レクチャー（ユーザ情報操作、商品情報操作、在庫情報操作）の補足」レクチャーを修正（動画内で選択しているランタイムNode.js 16.xが選択できない場合の指針を追記）\n・2024/10/22: 「以降のLambda関数作成系3レクチャー（ユーザ情報操作、商品情報操作、在庫情報操作）の補足」レクチャーを削除（2024/10/30に追加したレクチャーに置き換え）\n・2024/10/30: 「次のレクチャーの補足」レクチャーを追加（Node.jsのランタイムに関する補足をNode.jsで開発する在庫情報操作のレクチャーの直前に追加）\n・2025/8/21: Q&A起因で「Lambda関数作成（在庫情報操作）」レクチャーの添付資料4ファイル（stock-post-function.txt、stock-get-function.txt、stock-put-function.txt、stock-delete-function.txt）をAWS SDK v3対応版に更新（Node.js 18.x以降環境対応）",
      "target_audience": [
        "マイクロサービスという言葉は聞いたことがあり、なんとなくの概要は知っているが、実現方法となると少し自信が無いエンジニアの方"
      ]
    },
    {
      "title": "Más allá de las user stories: Fundamentos de requerimientos",
      "url": "https://www.udemy.com/course/mas-alla-de-las-user-stories-fundamentos-de-requerimientos/",
      "bio": "Define, Clasifica, Prioriza y Documenta los Requerimientos del Software como un Ingeniero de Élite",
      "objectives": [
        "Especificar los Requerimientos del Software que satisfacen una necesidad real y deleitan a los usuarios",
        "Clasificar los Requerimientos del software según su nivel, tipo y prioridad",
        "Establecer un sistema de priorización de los Requerimientos, para dar respuesta a la planificación dinámica",
        "Crear documentación mínima y suficiente para comunicar la información de los requerimientos a los involucrados"
      ],
      "course_content": {
        "Introducción": [
          "Acerca de este curso",
          "¿Cómo vas a aprender?",
          "¿Qué beneficios obtienes?",
          "Actividad inicial: ¿Qué entiendes por Requerimiento?"
        ],
        "Definiciones y clasificaciones": [
          "¿Qué son los Requerimientos del Software?",
          "Ejemplos de requerimientos definidos",
          "¿Qué pasa si hacemos mal los requerimientos?",
          "¿Cómo se hacen los requerimientos?",
          "¿Cómo se clasifican los requerimientos?",
          "Pon a prueba tu aprendizaje",
          "Cuestiones clave en el proceso de Requerimientos"
        ],
        "Requerimientos de Negocio": [
          "¿Qué capturan los Requerimientos del Negocio?",
          "La plantilla de Visión del producto",
          "Descarga la plantilla de Visión",
          "Definiendo la necesidad",
          "Objetivos, la razón de ser del producto de software",
          "Tu turno: Define los objetivos para el software",
          "Definir la visión inicial de la solución",
          "Tu turno: define la visión del software",
          "Perfiles de los interesados (stakeholders)",
          "Definición de los Stakeholders",
          "Tu turno: define a los stakeholders del software",
          "Ambiente de operación",
          "Suposiciones, dependencias y limitaciones",
          "Riesgos",
          "Reglas de negocio",
          "Descarga los documentos de ejemplo",
          "Pon a prueba tu conocimiento"
        ],
        "Requerimientos de Usuario": [
          "¿Qué capturan los requerimientos del usuario?",
          "¿Cómo identificar a los usuarios?",
          "User Personas",
          "Tu turno: Define los user persona para el software",
          "¿Cómo identificar las actividades de los usuarios?",
          "Escribiendo las Historias de Usuario",
          "Tu turno: Define Historias de Usuario para el software",
          "Escribiendo Casos de Uso",
          "Tu turno: Completa el caso de uso para el software",
          "Pon a prueba tu conocimiento",
          "Plantillas y ejemplos"
        ],
        "Requerimientos de Sistema": [
          "¿Cómo especificamos lo que debe hacer el software?",
          "Definiendo el Sistema y sus fronteras",
          "Requerimientos Funcionales",
          "Tu turno: Define los RF del software",
          "Requerimientos No Funcionales",
          "Tu turno: Define los Requerimientos no funcionales del software",
          "Requerimientos de Interfaces de Usuario",
          "Ambiente de operación",
          "Requerimientos de Interfaces de software",
          "Requerimientos de Interfaces de Hardware",
          "Requerimientos de Comunicación",
          "Pon a prueba tus conocimientos",
          "Plantillas y ejemplos"
        ],
        "Priorización de requerimientos": [
          "¿Cómo definir qué requerimientos son importantes?",
          "Tipos de requerimientos por prioridad",
          "Estrategia de priorización"
        ],
        "Conclusión": [
          "Uniendo todo: Recomendaciones finales",
          "Conclusiones",
          "Clase extra"
        ]
      },
      "requirements": [
        "Conocer las actividades de desarrollo de software, al menos de manera conceptual",
        "Deseable, haber participado en el desarrollo de un producto de software en cualquiera de sus etapas y actividades"
      ],
      "description": "El desarrollo y gestión de los Requerimientos de Software es una habilidad fundamental en toda persona que se dedica a este trabajo. La correcta ejecución de estas tareas nos conducirá a construir software de alta calidad, que deleita a los usuarios; por el contrario, una ejecución errónea nos llevará a problemas, frustración, retrabajo y la pérdida de la confianza.\nEl módulo de Fundamentos de Requerimientos construye la base sólida de conocimientos, sobre la que se construye un desarrollo de software extraordinario. En este curso, aprenderás a definir correctamente los Requerimientos, categorizarlos, priorizarlos y documentarlos.\nAl final del curso, serás capaz de:\nEstablecer correctamente la necesidad para el software\nDefinir los objetivos del producto de software que se desarrollará\nDefinir los perfiles de los diferentes stakeholders y usuarios\nDefinir las actividades de los usuarios, que serán apoyadas por el software\nEspecificar las funciones, atributos de calidad, requerimientos técnicos y ambiente de operación del software\nClasificar los requerimientos según su Nivel, Tipo y Prioridad\nEstablecer un mecanismo para priorizar los requerimientos\nDefinir la información que se debe comunicar a los involucrados y los mecanismos de documentación\nOtros cursos te enseñan a escribir y administrar Historias de Usuario.\nMi curso te enseña a tener una comprensión profunda y completa de las necesidades de los usuarios, para darles mejores soluciones.\nEste curso está diseñado para Product Owners, Analistas y desarrolladores de software en general, porque es importante que todos los involucrados lo conozcan bien.\n¡Únete ahora y conviértete en un Ingeniero de Software de Élite!\nLo que dicen mis estudiantes:\n\"El curso ha superado mis expectativas, encontré en el curso lo que estuve buscando hace un tiempo y no encontraba en otros programas. El detalle de la información, el equilibrio entre la teoría y práctica, y la orientación sobre casos reales fue excelente\"\nTeam Leader, Teksi\n¿Por qué puedo ser tu instructor?\nPorque ya he demostrado mi experiencia y conocimiento públicamente en el tema. Soy autor de la serie de videos de Ingeniería de Requerimientos que tiene más de 80,000 visualizaciones a la fecha.\nCuento con más de 20 años de experiencia dirigiendo y formando equipos de desarrollo de software, que crean productos para empresas en diversos ramos: Gobiernos estatales y federales, bancos, inmobiliarias, mensajería, organización de eventos, hardware especializado, SAP, ERP, entre otras\n¡Mis cursos de Udemy cuentan con más de 2000 inscripciones a la fecha!",
      "target_audience": [
        "Product Owners",
        "Business Analyst",
        "Desarrolladores de Software",
        "Project Managers de Software",
        "Product Managers de Software",
        "Scrum Masters"
      ]
    },
    {
      "title": "Software Development Life Cycle Interview Questions Practice",
      "url": "https://www.udemy.com/course/software-development-life-cycle-interview-questions/",
      "bio": "SDLC Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "SDLC Software Development Life Cycle Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the ultimate SDLC Interview Questions Practice Test course on Udemy! This course is designed to help you ace your SDLC interviews by providing comprehensive practice tests covering all crucial aspects of the Software Development Life Cycle. Whether you're preparing for entry-level positions or aiming for senior roles, mastering SDLC concepts is essential, and this course is your go-to resource.\nThis course is divided into six sections, each focusing on key phases and topics within the SDLC framework. Each section contains multiple practice tests meticulously crafted to simulate real-world interview scenarios. By enrolling in this course, you will gain confidence in answering a wide range of SDLC-related questions and strengthen your understanding of fundamental principles.\nSection 1: SDLC Overview\nExplore the definition and purpose of SDLC.\nDive into various SDLC models such as Waterfall, Agile, and Iterative.\nUnderstand the importance of SDLC in software development and its associated challenges.\nTest your knowledge on SDLC documentation and deliverables through targeted practice questions.\nSection 2: Requirement Analysis\nMaster the techniques used in requirement analysis, including interviews, surveys, and prototyping.\nDifferentiate between types of requirements such as functional, non-functional, business, and user requirements.\nAssess your skills in creating a requirement traceability matrix and understanding its significance in SDLC projects.\nSection 3: Design Phase\nGain insights into the purpose and types of design phases in SDLC (high-level, low-level, architectural design, etc.).\nLearn essential design principles and patterns crucial for effective software design.\nPractice drawing UML diagrams like Use Case, Class, and Sequence diagrams to visualize design concepts.\nSection 4: Implementation and Coding\nExplore the implementation phase, including programming languages commonly used in software development.\nFamiliarize yourself with coding standards, guidelines, and best practices.\nTest your knowledge of unit testing, integration testing, and version control systems through practical scenarios.\nSection 5: Testing Phase\nUnderstand the purpose and types of testing phases in SDLC (unit testing, integration testing, system testing, acceptance testing, etc.).\nExplore different testing techniques such as black-box testing, white-box testing, and regression testing.\nEnhance your skills in designing and executing effective test cases and managing defects during testing.\nSection 6: Deployment and Maintenance\nDelve into deployment strategies like Big Bang, Phased, and Parallel deployment.\nLearn about post-deployment activities and the maintenance phase in SDLC.\nPractice handling bug fixing, patch management, software upgrades, and end-of-life cycle considerations effectively.\n\n\nEnroll Today and Ace Your SDLC Interviews!\nPrepare effectively for your next SDLC interview with confidence. Enroll now and gain the knowledge and skills needed to excel in the competitive field of software development. Each practice test is designed to challenge and reinforce your understanding, ensuring you're fully equipped to tackle any SDLC-related interview question that comes your way.",
      "target_audience": [
        "Aspiring Software Developers: Individuals looking to break into the software development industry and need to prepare for technical interviews that cover SDLC topics.",
        "Quality Assurance Engineers: Candidates preparing for roles in quality assurance and testing, who need a solid understanding of the SDLC phases, particularly the testing phase.",
        "Project Managers: Those aiming for project management positions where a deep understanding of SDLC is crucial for managing software projects effectively.",
        "Computer Science Students: Undergraduate and graduate students studying computer science or related fields who want to enhance their knowledge of SDLC as part of their academic curriculum or for upcoming job interviews.",
        "Software Engineers: Practicing software engineers looking to refresh their knowledge of SDLC principles and prepare for internal promotions or job changes.",
        "System Analysts: Professionals who analyze and design information systems and need to deepen their understanding of the SDLC to improve their work performance.",
        "Product Managers: Those responsible for product development and delivery, who require a thorough understanding of the SDLC to manage and coordinate software projects effectively.",
        "IT Professionals: Individuals transitioning from other IT roles into software development, quality assurance, or project management, who need to familiarize themselves with SDLC concepts and best practices."
      ]
    },
    {
      "title": "JavaFX - Java Programme mit Oberflächen / GUIs erstellen",
      "url": "https://www.udemy.com/course/javafx-java-programme-mit-oberflachen-guis-erstellen/",
      "bio": "Lerne JavaFX an vielen Beispielen. Erstelle Programme (Quiz App, Snake, Video Player). Nutze Datenbanken wie SQLite.",
      "objectives": [
        "Du lernst Java Pragramme mit Oberflächen zu erstellen",
        "Du lernst JavaFX anhand mehrerer Praktischer Programme, die im Kurs erstellt werden",
        "Du eignest Dir weitere Java Kenntnisse an, die dich auf ein neues Level bringen",
        "Du festigst dein Wissen anhand der Programme, die wir im Kurs erstellen werden",
        "Deine selbst erstellen Programme laufen auf Windows, Linux oder Mac Rechnern"
      ],
      "course_content": {
        "Hier starten": [
          "Einleitung und der Aufbau des Kurses",
          "In eigener Sache"
        ],
        "JavaFX Installation & Vorbereitung ab Java Version 11 und neuer": [
          "e(fx)clipse installieren",
          "JavaFX Library Download und erstellen",
          "Umgebungsvariable installieren",
          "SceneBuilder installieren"
        ],
        "JavaFX Installation mit Java Version 10 (Steht zum Download bereit)": [
          "Java JDK laden",
          "JavaFX installieren",
          "Scene Builder laden",
          "Scene Builder installieren",
          "JavaFX Anwendungen exportieren - Windows",
          "JavaFX Anwendungen exportieren - Mac",
          "Test Datei zum testen"
        ],
        "Erstes Programm erstellen - Shortcuts": [
          "Einleitung",
          "Kurze Einführung in JavaFX",
          "Einen Button erstellen",
          "CSS anwenden",
          "Button klickbar machen",
          "Programm Hintergrund transparent machen",
          "Programm als ausführbare Datei erstellen",
          "Programm beim Starten des Computers anzeigen",
          "Projektdateien zum Download"
        ],
        "Was ist JavaFx?": [
          "Einleitung",
          "Was ist JavaFX?",
          "JavaFX - Aufbau einer Anwendung mit Beispiel",
          "Lebenszyklus einer Anwendung mit Beispiel",
          "Projektdateien zum Download"
        ],
        "Properties und Binding": [
          "Einleitung",
          "Was sind Properties?",
          "Beispiel: Vorteil von Properties",
          "Was ist Binding?",
          "Beispiel zu Binding",
          "Projektdateien zum Download"
        ],
        "Eventhandling": [
          "Beispiel Event Handling - 1",
          "Beispiel Event Handling - 2",
          "Eventhandler erstellen - 1",
          "Eventhandler erstellen - 2",
          "MouseEvents Beispiele",
          "KeyEvents Beispiele",
          "Projektdateien zum Download"
        ],
        "UI Controls (Button etc.) - 1": [
          "Einführung in UI Controls",
          "Label - 1",
          "Label - 2",
          "Button",
          "RadioButton - 1",
          "RadioButton - 2",
          "Checkbox",
          "Choice Box",
          "ComboBox",
          "Text Field - 1",
          "Text Field - 2",
          "Text Field - 3",
          "PasswordField",
          "Scrollbar - 1",
          "Scrollbar - 2"
        ],
        "Programm erstellen - Start Dock erstellen": [
          "Einleitung",
          "Dock erstellen",
          "Icon hinzufügen",
          "Zoom Effekt einbauen",
          "Icon klickbar machen",
          "Auf eine klick exe Dateien mit Java starten",
          "Fenster transparent machen",
          "Export des Eclipse Projektes",
          "Projektdateien zum Download"
        ],
        "ListView und TableView erstellen": [
          "ListView Einstieg",
          "ListView erstellen",
          "ListView - User Interaktionen",
          "SelectionModes kennen lernen - 1",
          "SelectionModes kennen lernen - 2",
          "ListView Eintrag bearbeiten - 1",
          "ListView Eintrag bearbeiten - 2",
          "CSS anwenden",
          "ListView Projekt Download",
          "TableiView erstellen",
          "Tabellen Spalten erstellen",
          "Personen Objekte erstellen",
          "Sortieren",
          "Tabelle bearbeiten",
          "TableView Projekt Download"
        ]
      },
      "requirements": [
        "Du solltest Java Grundlagen beherrschen",
        "Objektorientierte Programmierung verstehen wäre von Vorteil",
        "Einen PC, Laptop oder Mac besitzen"
      ],
      "description": "Du willst mehr als Konsolen Programme mit Java entwickeln?\nEchte Programme mit Java und Benutzeroberflächen zum Klicken und Interagieren erstellen? Oder auch mal eine Datenbank mit Java erstellen?\nDann bist du hier genau richtig!\nWie in meinem erfolgreichen Java Einsteiger Kurs hier auf Udemy (zu finden: Java leicht gemacht -  Der umfassende Java Einsteigerkurs A-Z) wird dir auf eine einfache und verständliche Art und Weise das Programmieren mit Oberflächen erklärt.\nDer Kurs bietet 18,5 Stunden Stunden Umfang. In diesem Umfang lernst du nicht nur verschiedene Oberflächen Elemente kennen, sondern setzt diese in echten Programmen auch um. Im Laufe des Kurses wirst du mehrere Programme erstellen. Diese Programme laufen auf jedem Windows, Linux oder Mac Rechner. Ein Doppelklick zum Starten der Programme genügt.\n\n\nDu wirst lernen:\n- Oberflächen mit Java erstellen\n- Programme erstellen\n- Mediaplayer erstellen\n\n- SQLite Datenbank erstellen\n- Java Code + SQLite Datenbank + Oberflächen\n- Programme mit der Tastatur und Maus steuern\n- Elemente per Drag and Drop verschieben\n- Daten von A nach B kopieren\n- Spiele wie Snake entwickeln\n\n- Quiz App erstellen\n\n- Eclipse Projekte als ausführbare Dateien exportieren, mit Doppelklick  Programme starten\n- JavaFX Themen wie Binding, EventHandling oder Listener\n- Aufbau einer JavaFX Anwendung\n- 2D Formen erstellen und verknüpfen\n- Layout Klassen wie VBox, HBox, BorderPane und viele weitere\n- Effekte und Animationen erstellen und anwenden  -> Bringe Leben in deine Programme\n- SceneBuilder nutzen - erstelle Benutzeroberflächen  per Drag and Drop\n- CSS nutzen um Oberflächen zu verschönern\n- und vieles mehr...\n\n\n\nAls Zusatz gibt neben den Videos zu, die Quellcode Dateien zum Download. Auch wird es pdf Dateien geben, in denen das Gelernte nochmals als Textform zur Verfügung gestellt wird.",
      "target_audience": [
        "Alle, die optisch ansprechende Oberflächen für Java Programme erstellen möchten",
        "Alle, die ihre Java Kenntnisse auf das nächste Level bringen möchten",
        "Alle, die mehr als nur Konsolen Programme mit Java erstellen möchten",
        "Alle, welche noch nie etwas mit Oberflächen Programmierung mit Java zu tun hatten und dies strukturiert erlernen möchten",
        "Alle, die echte Java Programme entwickeln möchten"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/ai-agent-101-learn-to-build-ai-agents-from-scratch/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Padrões de Projeto GoF (Design Patterns)",
      "url": "https://www.udemy.com/course/gof-design-patterns/",
      "bio": "Aprenda de uma maneira simples e eficiente os padrões de projeto GoF.",
      "objectives": [
        "Aplicar soluções reutilizáveis de software orientado a objetos.",
        "Saber quando e como utilizar os 23 padrões de projeto GoF em seus projetos de software.",
        "Projetar de forma mais ágil soluções de software com melhor qualidade e com o menor custo."
      ],
      "course_content": {},
      "requirements": [
        "O aluno deverá possuir o mínimo de conhecimento em alguma linguagem de programação orientada a objetos.",
        "Os exemplos de códigos contidos neste curso estão escritos em Java, mas se você está familiarizado com outra linguagem orientada a objetos, como C++ ou C#, você irá conseguir acompanhar e entender sem dificuldades este curso.",
        "As ferramentas de projeto e desenvolvimento utilizadas neste curso são gratuitas."
      ],
      "description": "Este curso apresentará a você cada um dos 23 padrões de projeto GoF (Gang of Four). Cada padrão é explicado e exemplificado utilizando diagramas de classes UML, exemplos em Java e aplicações típicas que irão lhe ajudar no aprendizado de uma maneira mais eficiente, estimulante e divertida.\nPadrões de projeto não é algo exclusivo da computação, os padrões são comuns em várias áreas da engenharia. É uma maneira testada e documentada de alcançar um objetivo qualquer. Os padrões GoF, especificamente, são soluções genéricas para os problemas mais comuns e recorrentes no desenvolvimento de softwares orientado a objetos.\nAprender padrões de projeto irá lhe ajudar a identificar problemas comuns em engenharia de software e saber como resolvê-los utilizando soluções testadas e bem documentadas, consequentemente seu nível em programação aumentará e você passará a produzir softwares de melhor qualidade.\nComece hoje mesmo pelos padrões GoF, considerados por muitos como sendo os mais importantes e utilizados padrões de projeto de software orientado a objetos!\n*Os códigos Java e os diagramas de classes UML contidos neste curso estão disponíveis para download, bem como, os slides apresentados.",
      "target_audience": [
        "Este curso destina-se à estudantes de computação, programadores, engenheiros e arquitetos de softwares que desejam aprender ou se aperfeiçoar em padrões de projeto GoF."
      ]
    },
    {
      "title": "Learn Structural Design Patterns in Java",
      "url": "https://www.udemy.com/course/learn-structural-design-patterns-in-java/",
      "bio": "The only course you need to learn structural design patterns!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction: What are Structural Design Patterns?"
        ],
        "Structural Design Patterns": [
          "The Adapter Pattern",
          "The Bridge Pattern",
          "The Composite Pattern",
          "The Decorator Pattern",
          "The Facade Pattern",
          "The Proxy Pattern",
          "The Flyweight Pattern"
        ]
      },
      "requirements": [
        "Be able to do basic coding in Java.",
        "Basic familiarity with Object oriented programming."
      ],
      "description": "This course aims to delve into the realm of structural design patterns, offering a comprehensive exploration of their significance and practical applications. Beginning with a high-level overview, we'll dissect the fundamental concepts encapsulated within these patterns, unraveling the rationale behind their indispensability in software development.\nThe course unfolds with an in-depth examination of specific structural design patterns, each contributing to the intricacies of building robust software architecture. The patterns to be explored include:\nAdapter\nBridge\nComposite\nDecorator\nProxy\nFacade\nFlyweight\nOur journey through these patterns will be meticulous, ensuring a thorough understanding of their nuances and the unique problems they address. Through hands-on coding sessions, participants will actively engage with the material, gaining practical insights into the implementation of these design patterns.\nBy the end of the course, participants will possess a profound comprehension of not only what these structural design patterns entail but also how to effectively employ them to enhance software design. To facilitate continuous learning and practical application, links to the corresponding source code will be provided at the conclusion of the introduction section.\nEmbark on this educational odyssey with us as we demystify structural design patterns, empower you with coding prowess, and equip you with the knowledge to navigate and optimize software architecture. Let's dive into the intricate world of structural design patterns and pave the way for innovative and efficient software solutions. Let the coding journey commence!",
      "target_audience": [
        "Beginners who want to learn what are Structural Design Patterns.",
        "Beginners who want to write cleaner and organised code.",
        "Beginners who want to get addicted to design patterns.",
        "Anyone who wants to learn how to apply the concepts of Object Oriented Programming correctly."
      ]
    },
    {
      "title": "650+ Linked List Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/linked-list-interview-questions-test/",
      "bio": "Linked List Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Linked List Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to \"Master LinkedLists: In-Depth Interview Questions & Practice Tests,\" the ultimate course designed to propel your understanding and skills in LinkedLists to new heights. Whether you're a student, a software developer, or a job seeker preparing for technical interviews, this course offers you a unique opportunity to dive deep into the world of LinkedLists through carefully crafted practice tests and rich content.\nOur course is meticulously structured into six comprehensive sections, each delving into different aspects of LinkedLists. This structure ensures that you gain a well-rounded mastery of the topic, from basic concepts to advanced applications. Let's explore what each section offers:\n1. Basics of LinkedLists:\nDefinition and Structure: Begin with the fundamentals, understanding what LinkedLists are and how they're constructed.\nTypes of LinkedLists: Learn about the different forms, such as Singly, Doubly, and Circular LinkedLists.\nAdvantages and Disadvantages: Discover why and when to use LinkedLists over other data structures.\nLinkedLists vs Arrays: Compare these two fundamental structures to understand their unique applications.\nTime Complexity Analysis: Delve into the efficiency of operations in LinkedLists.\nMemory Management: Understand how LinkedLists manage memory and optimize space.\n2. LinkedList Operations:\nInsertion and Deletion: Master how to add and remove elements from LinkedLists in various scenarios.\nSearching and Accessing: Learn techniques to find and access elements efficiently.\nReversing a LinkedList: Explore methods to reverse LinkedLists, a common interview question.\nSorting Techniques: Understand different sorting algorithms as applied to LinkedLists.\nConcatenation and Splitting: Learn to merge and divide LinkedLists effectively.\n3. LinkedList Algorithms:\nDetecting a Loop: Discover algorithms to identify loops in LinkedLists, a critical problem in many applications.\nFinding the Middle Element: Learn techniques to efficiently locate the middle of a LinkedList.\nMerge Sort Implementation: Apply merge sort, a popular sorting technique, to LinkedLists.\nTwo Pointer Technique: Utilize this technique for various LinkedList problems.\nPartitioning: Learn how to rearrange LinkedLists based on specific values.\nRotating a LinkedList: Understand the algorithms behind rotating a LinkedList.\n4. Advanced Topics in LinkedLists:\nDoubly LinkedList and Skip List: Dive into more complex structures and their uses.\nIntersection Point: Learn to find meeting points of two LinkedLists.\nFlattening a Multi-level List: Tackle the challenge of multi-dimensional structures.\nImplementing LRU Cache: Apply LinkedLists in designing efficient caching mechanisms.\nXOR LinkedLists: Explore this memory-efficient implementation of LinkedLists.\n5. LinkedLists in Data Structures:\nLinkedLists in Trees and Graphs: Understand the use of LinkedLists in complex data structures.\nImplementing Stacks and Queues: Learn how LinkedLists can build these fundamental structures.\nGraph Algorithms Applications: See how LinkedLists play a role in sophisticated algorithms.\nComplexity Analysis in Data Structures: Deepen your understanding of efficiency in various applications.\nLinkedLists in Hash Tables: Explore the use of LinkedLists in hashing mechanisms.\n6. LinkedLists in Real-world Scenarios and Problem Solving:\nReal-world Software Development: Discover practical applications of LinkedLists in software engineering.\nMemory Management: Learn how LinkedLists optimize memory in various applications.\nClassical Problems: Solve famous problems like the Josephus Problem using LinkedLists.\nSystem Design Applications: Understand the role of LinkedLists in designing robust systems.\nGame Development: Explore fun and creative uses of LinkedLists in games.\nChallenges and Best Practices: Gain insights into common pitfalls and best practices in LinkedList implementation.\nRegular Updates to Keep You Current:\nIn the rapidly evolving field of software development, staying current with the latest trends and techniques is crucial. That's why we continuously update our practice test questions to reflect the most recent developments in LinkedLists and data structures. Our commitment to regular updates ensures that you're always preparing with the most relevant and up-to-date material. Whether it's incorporating new best practices or adjusting to changes in interview approaches, you can trust that our course is a dynamic resource that evolves with the industry.\nSample Practice Test Questions:\nWhat is the time complexity of inserting an element at the beginning of a singly linked list?\nA) O(1)\nB) O(n)\nC) O(log n)\nD) O(n^2)\nCorrect Answer: A) O(1) Explanation: Inserting an element at the beginning of a singly linked list is a constant time operation, O(1). This is because it only involves updating the head of the list to the new node, without the need to traverse the entire list.\nWhich of the following is not an advantage of using a linked list over an array?\nA) Dynamic size\nB) Ease of insertion/deletion\nC) Better cache locality\nD) No need for a large contiguous memory block\nCorrect Answer: C) Better cache locality Explanation: Unlike arrays, linked lists do not offer better cache locality. Elements in a linked list are scattered throughout memory, leading to potentially more cache misses compared to arrays, which store elements contiguously and thus benefit from cache locality.\nHow can you detect a loop in a linked list?\nA) By sorting the list\nB) Using two pointers, fast and slow\nC) By reversing the list\nD) Loop detection is not possible in linked lists\nCorrect Answer: B) Using two pointers, fast and slow Explanation: Loop detection in a linked list is commonly done using two pointers, often referred to as the 'fast and slow' pointer technique. The fast pointer moves two steps at a time, while the slow pointer moves one step. If there's a loop, they will eventually meet.\nWhich operation is more time-consuming in a doubly linked list compared to a singly linked list?\nA) Insertion at the beginning\nB) Deletion of the last element\nC) Accessing an element by index\nD) None of the above\nCorrect Answer: D) None of the above Explanation: In a doubly linked list, operations like insertion at the beginning, deletion of the last element, or accessing an element by index are not more time-consuming compared to a singly linked list. The presence of an additional pointer in each node (previous pointer) does not significantly affect these operations' time complexity.\nIn a 'Merge Sort' algorithm applied to a linked list, what is the primary reason for its preferred usage over 'Quick Sort'?\nA) Merge Sort is always faster\nB) Merge Sort requires additional memory for arrays\nC) Merge Sort is more stable\nD) Linked lists are naturally suited for merging operations\nCorrect Answer: D) Linked lists are naturally suited for merging operations Explanation: The primary advantage of using 'Merge Sort' in linked lists is that these lists are naturally suited for merging operations. Merging two linked lists can be done efficiently without additional space requirements, making Merge Sort a more suitable choice compared to Quick Sort, which is more array-friendly due to its in-place partitioning advantage.\nNote: Each question is accompanied by a detailed explanation to not only provide the correct answer but also to deepen your understanding of the underlying concepts. This approach ensures that you're not just memorizing answers but actually comprehending the principles behind them, a crucial aspect of excelling in technical interviews.\nEnroll now and elevate your understanding of Linked Lists beyond the classroom. Prepare yourself for technical interviews with confidence and stand out as a knowledgeable candidate in the competitive world of software development.",
      "target_audience": [
        "Aspiring Software Engineers and Programmers: If you're preparing for a career in software development, this course will equip you with essential knowledge and problem-solving skills related to LinkedLists, a topic frequently encountered in technical interviews.",
        "Computer Science Students: Whether you're an undergraduate, a graduate, or someone engaged in self-directed learning, this course will deepen your understanding of LinkedLists, an integral part of your data structures curriculum.",
        "Coding Bootcamp Participants: If you're in a coding bootcamp looking to bolster your understanding of data structures for web development, software engineering, or other programming fields, this course will provide practical and theoretical knowledge that complements your learning.",
        "Professional Developers Seeking Career Advancement: Experienced developers aiming to refresh their knowledge or prepare for advanced roles will find this course valuable. It's an excellent resource for brushing up on key concepts and staying updated with the latest practices in LinkedList implementation.",
        "Tech Enthusiasts and Hobbyists: If you have a passion for coding and problem-solving, this course offers an opportunity to challenge yourself and expand your knowledge in a specific and important area of computer science.",
        "Interview Preparations for Tech Companies: For those targeting jobs in tech giants or startups, this course serves as a comprehensive preparation tool, specifically tailored to help you excel in technical interviews where data structure knowledge is crucial."
      ]
    },
    {
      "title": "Conceitos e Modelagem de Banco de Dados Relacional.",
      "url": "https://www.udemy.com/course/conceitos-e-modelagem-de-dados-relacional/",
      "bio": "Modele Banco de dados relacionais e crie os modelos, conceituais, físico e lógico.",
      "objectives": [
        "Aprenderão o conceitos relacionados a Modelagem de dados relacional",
        "Introdução a banco de dados relacional",
        "Analise de requisitos",
        "Modelo Conceitual de banco de dados",
        "Modelo Logico de banco de dados",
        "Modelo Fisico",
        "Técnicas de analise de dados",
        "Normalização",
        "Modelo entidade relacionamento",
        "Cardinalidade",
        "Autorelacionamento"
      ],
      "course_content": {
        "Introdução a Banco de dados": [
          "Introdução",
          "Apresentação do instrutor"
        ],
        "Visão Geral": [
          "Material de apoio para Download",
          "Fases da Modelagem de dados",
          "Dados, informação e conhecimento.",
          "Fases do Pojeto de Banco de dados",
          "Conceitos de Banco de dados",
          "Exemplos para analise de dados",
          "Conceitos Banco de dados",
          "Conceitos de Banco de dados.",
          "Banco de dados Relacional",
          "Caracteristicas de Banco de dados relacionais.",
          "Projetista de Banco de dados",
          "Vantagens do Banco de dados relacional",
          "Questionario 1"
        ],
        "Técnicas de Analise de dados": [
          "Técnica de analise dados",
          "Analise TOP DOWN",
          "Ponto de vistas de dados e Funções",
          "Usuário, Processo e Negócio.",
          "Analise de requistos.",
          "Estrutura de Banco de dados",
          "Banco de dados compartilhados Parte 1",
          "Banco de dados compartilhados Parte 2"
        ],
        "Normalização": [
          "Entendendo a normalização Parte 1",
          "Entendendo a normalização Parte 2",
          "Sistemas Normalizados",
          "Modelo Entidade Relacionando",
          "Tipos de atributos parte 1",
          "Tipos de atributos parte 2",
          "Normalização de sistemas Parte 1",
          "Normalização de sistemas Parte 2",
          "Normalização de sistemas Parte 3",
          "Sintese do Modulo",
          "Normalização de sistemas"
        ],
        "Modelo entidade relacionamento": [
          "Modelo Entidade Relacionamento Parte 1",
          "Modelo Entidade Relacionamento Parte 2",
          "ENTIDADES",
          "Critérios de entidades",
          "Dependencia Funcional",
          "Subentidade",
          "Especialização e Generalização",
          "Tipo de entidade",
          "Identificação de relacionamento"
        ],
        "Cardinalidade": [
          "Cardinalidade Relacional",
          "Regras e restrições",
          "Cardinalidade Parte 1",
          "Cardinalidade Parte 2",
          "Simbolos",
          "Desenhando um diagrama",
          "Redundancia"
        ],
        "Autorrelacionamento": [
          "Autorelacionamento Parte 1",
          "Autorelacionamento Parte 2",
          "Autorelacionamento Parte 3",
          "Sintese do Modulo"
        ],
        "Caso de uso": [
          "Analise de requisitos do desafio",
          "Modelo Conceitual",
          "Modelo Lógico e Fisico"
        ],
        "Extras": [
          "Design de banco de dados",
          "Orientações Finais/Certificado de conclusão.",
          "Continue a Jornada! O Aprendizado é um processo continuo!"
        ]
      },
      "requirements": [
        "Não ha pré-requisitos técnicos."
      ],
      "description": "Transformar dados em informações é uma competência técnica e uma habilidade muito valorizada e requisitada nos dias de hoje , e todo projeto envolvendo armazenamento de dados começa com a Modelagem de banco de dados.\nEste curso tem como objetivo capacita-lo na em modelagem de dados, com ênfase nas etapas analise dos requisitos, modelo conceitual, modelo logico e físico, fornecendo conhecimento nas técnicas, analises e processos necessários conforme detalhamento abaixo\n1.Introdução a Banco de dados\nVisão Geral\nBanco de dados\nConceitos relacionais\nVantagens de uso de um banco de dados\nBanco de dados relacional.\nTécnicas de Analise de dados\nO que é análise de dados\nPara que serve a análise de dados?\nComo estruturar o banco de dados.\nCompartilhamento e integração de dados.\nNormalização\nNormalização de dados\nSistema normalizados\nMER\n\n\n2. Relacionamento\nModelo entidade Relacionamento\nCardinalidade Relacionamento\nAutorrelacionamento\n3. Caso de uso\nApresentação do problema\nAnalise de requisitos\nModelo conceitual\nModelos Logico\nModelo Físico\nOBS: será disponibilizado código SQL do modelo Fisico do projeto,este não é um curso de Linguagem SQL.",
      "target_audience": [
        "Estudantes",
        "Profissionais de T.I que desejam ter conhecimento sobre Modelagem de dados relacional.",
        "Analista de sistemas e consultores que desejam ter conhecimento sobre Modelagem de dados relacional",
        "Vale ressaltar que este curso não é um curso de programação SQL."
      ]
    },
    {
      "title": "Padrões de Projeto em JAVA na Prática!",
      "url": "https://www.udemy.com/course/padroes-de-projeto-em-java-na-pratica/",
      "bio": "Conheça os principais padrões de design de software do mercado. Curso com muita pratica e ótimos exemplos.",
      "objectives": [
        "Quando e como utilizar os principais padrões do GoF",
        "Conseguir abstrair problemas de tal forma que soluções padronizadas possam ser aplicadas",
        "Criar softwares de qualidade, através da estruturação dos seus códigos utilizando padrões largamente utilizados",
        "Conhecer diversos padrões de projeto Criacionais, como: Factory, Abstract Factory, Singleton, Builder e Prototype",
        "Conhecer diversos padrões de projeto Estruturais, como: Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Mediator e Proxy",
        "Conhecer diversos padrões de projeto Comportamentais, como: Chain of Resposibility, Command, Iterator, Memento, Observer, State, Strategy e Template Method",
        "Conhecer a Gang of Four (GoF) e qual a sua importância na comunidade de desenvolvimento de software"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Visão Geral do Curso",
          "Boas Práticas do Fórum",
          "Recursos Disponibilizados no Curso",
          "O que é Padrão de Projeto?",
          "Sugestão de Livros",
          "Entendendo os Diagramas",
          "Usando o terminal",
          "Terminais",
          "Aviso importante aos usuários de Windows"
        ],
        "Padrões de Projeto Criacionais": [
          "Introdução do Módulo",
          "Projetos do Módulo",
          "Factory Method #01",
          "Factory Method #02",
          "Factory Method #03",
          "Factory Method #04",
          "Factory Method #05",
          "Factory Method #06",
          "Factory Method #07",
          "Factory Method #08",
          "Factory Method #09",
          "Factory Method #10",
          "Factory Method #11",
          "Abstract Factory #01",
          "Abstract Factory #02",
          "Abstract Factory #03",
          "Abstract Factory #04",
          "Singleton #01",
          "Singleton #02",
          "Singleton #03",
          "Monostate",
          "Builder #01",
          "Builder #02",
          "Builder #03",
          "Builder #04",
          "Builder #05",
          "Builder #06",
          "Builder #07",
          "Prototype #01",
          "Prototype #02",
          "Prototype #03",
          "Prototype #04"
        ],
        "Padrões de Projeto Estruturais": [
          "Introdução do Módulo",
          "Projetos do Módulo",
          "Adapter #01",
          "Adapter #02",
          "Adapter #03",
          "Bridge #01",
          "Bridge #02",
          "Bridge #03",
          "Bridge #04",
          "Composite #01",
          "Composite #02",
          "Composite #03",
          "Decorator #01",
          "Decorator #02",
          "Decorator #03",
          "Facade #01",
          "Facade #02",
          "Facade #03",
          "Facade #04",
          "Flyweight #01",
          "Flyweight #02",
          "Flyweight #03",
          "Proxy #01",
          "Proxy #02",
          "Proxy #03"
        ],
        "Padrões de Projeto Comportamentais": [
          "Introdução do Módulo",
          "Projetos do Módulo",
          "Chain of Responsability #01",
          "Chain of Responsability #02",
          "Chain of Responsability #03",
          "Memento #01",
          "Memento #02",
          "Command #01",
          "Command #02",
          "Command #03",
          "Iterator #01",
          "Iterator #02",
          "Iterator #03",
          "Mediator #01",
          "Mediator #02",
          "Mediator #03",
          "Observer (Youtube)",
          "Observer #01",
          "Observer #02",
          "Observer #03",
          "State #01",
          "State #02",
          "State #03",
          "Strategy #01",
          "Strategy #02",
          "Strategy #03",
          "Template Method #01",
          "Template Method #02",
          "Template Method #03"
        ],
        "Conclusão do Curso": [
          "Conclusão"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de JAVA",
        "Conhecimentos básicos de Orientação a Objetos"
      ],
      "description": "Seja muito bem vindo ao Curso Padrões de Projeto em JAVA na Prática! Esse curso vai te transformar em um desenvolvedor mais experiente, contando como todo o conhecimento catalogado e amplamente utilizado na comunidade de software, que são os padrões de projeto do GoF.\nGoF, ou \"Gang of Four\" se refere à um grupo de quatro grandes nomes no desenvolvimento (Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides) que catalogaram 23 padrões de projeto no seu livro Design Patterns: Elements of Reusable Object-Oriented Software, em 1995. A grande maioria destes padrões continuam famosos até hoje e são peças fundamentais em diversas aplicações e frameworks modernos. Como iremos ver ao longo do curso.\nNosso curso, assim como o livro, divide os padrões em três grandes categorias:\nPadrões Criacionais: Trazendo formas para criação de objetos e forma independente, simples e desacoplada. Visando facilitar e até mesmo reduzir futuras manutenções. Onde veremos os seguintes padrões de projeto: Factory, Abstract Factory, Singleton, Builder e Prototype.\nPadrões Estruturais: Esta categoria apresentará como seria possível estruturar diversos objetos e classes de forma extensível e flexível. Neste módulo, os seguintes padrões serão abordados: Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Mediator e Proxy.\nPadrões Comportamentais: Aqui nós vamos focar em como as responsabilidades são propagadas entre as classes e objetos. Vamos conhecer neste módulo os seguintes padrões: Chain of Responsability, Command, Iterator, Memento, Observer, State, Strategy e Template Method.\nO uso dos padrões de projeto vai te ajudar a se tornar um desenvolvedor ainda melhor, te oferencendo um leque de soluções bem definidas, validadas e catalogadas. Além disso, este conhecimento também irá te dar vocabulário comum durante discussões técnicas com o seu time.\nUm dos maiores diferenciais dos nossos cursos é que Nós não trazemos apenas os códigos, você vai terminar esse curso de Padrões entendendo os porquês, a lógica de como a coisa acontece, o que vai te tornar um profissional muito mais qualificado e competitivo no mercado.\nAssista as aulas abertas e confira a qualidade do nosso conteúdo, e veja também os comentários dos nosso alunos sobre a nossa didática. Somos a escola de tecnologia com uma das melhores avaliações do mercado. Não tenho dúvida que você estará fazendo um excelente investimento se juntando à nossa comunidade de quase 200 mil alunos.\nE sabe o que mais? Você vai receber um certificado de conclusão ao final do curso, e o seu acesso é vitalício, não expira. E se mesmo depois de tudo que apresentamos, mesmo assim você não gostou do curso, nós garantimos o seu dinheiro de volta em até 30 dias após a compra de forma simples.\nInvista na sua carreira, venha pra Cod3r.\nGrande abraço e bons estudos!!",
      "target_audience": [
        "Arquitetos e desenvolvedores interessados em se aprofundar nos padrões de projetos mais populares",
        "Desenvolvedores interessados em conhecer padrões de mercado para resolver diversos problemas já conhecidos e catalogados",
        "Desenvolvedores e Arquitetos que desejam compartilhar deste vocabulário comum durante discussões técnicas"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/step-by-step-tutorial-for-building-real-time-projects/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "already_crawled_in": "it-and-software/IT Certifications",
      "url": "https://www.udemy.com/course/implement-and-manage-azure-storage/"
    },
    {
      "title": "Dealing with Data Structures",
      "url": "https://www.udemy.com/course/dealing-with-data-structures/",
      "bio": "A guide on Data Structures",
      "objectives": [
        "A milestone for mastering Data Structures and Algorithms.",
        "Helps to build confidence in facing technical interview questions in product companies.",
        "Helps to understand the inner working of Data structures - foundation skill for any software engineer.",
        "Become a confident programmer - Understand the data structure concepts and know which data structure to be used in real time scenarios.",
        "To build a successful career in software industry - Regular practise with DSA will help to gain momentum in overall software engineer journey.",
        "To be a good team player when starting you career",
        "And much, much more."
      ],
      "course_content": {},
      "requirements": [
        "Be aware of any of the programming language.",
        "Knowing Java is a plus."
      ],
      "description": "This course covers the training on some of the most used data structures like array, linkedlist, stack, queue etc with example give in Java.\nThe training is planned to release as two courses and this course covers only the data structures. The second course will be released shortly and the topic on Algorithms with sub topics such as Algorithmic design principles, Space Complexity, Time complexity and some of most popularly used algorithms will be covered as part of that.\nAs the two topics - Data structures and Algorithms are released as two, it enables students to structure and plan their learning journey first by mastering the data structures and then switching on to algorithms.\nConsciously put effort on reducing the course length so that students don't feel like it takes long hours to finish the course. Carefully chosen the topics that enable students to enhance their career and build confidence to become a great programmer.\nFew words to stress on:\nAfter finishing each of the topic in the course you must practically spend time and implement programs related to that data structure. The implementation code is being uploaded as part of resource section. You can refer that as well. This is the only way to get thorough with the topic. All the best!",
      "target_audience": [
        "Data structures and Algorithm is the base for Software engineering. Hence anyone who has aspiration to become a great programmer can watch this course"
      ]
    },
    {
      "title": "iRise 11 - Hands on Training for Beginners",
      "url": "https://www.udemy.com/course/irise-11-hands-on-training-for-beginners/",
      "bio": "Gain experience with key concepts & the tasks involved in creating functional prototypes and capturing requirements.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Requires access to iRise 11 via the cloud or download and install a trail version",
        "No coding experience required"
      ],
      "description": "In this course, we'll cover everything you'll need to know in order to start creating functional prototypes and documenting requirements within iRise 11.\nCourse Outline:\nStart with the basics: In this section you'll get a strong foundation on the basics of iRise\nSkills: Follow along as I show you some of the most important skills you'll need to master\nWebsite Project: We'll duplicate the design and functionality of a popular website\nDocument: Learn to capture, organize and track your requirements\n\nWhat will I get from this Course:\n4.5 hours of content packed with all the skills you'll need for mastering iRise 11\nYou'll see the process I use when prototyping and documenting requirements, including time saving tips to speed up the process\nI'll share the resources I use for creating graphics and finding external content",
      "target_audience": [
        "Beginners with little to no experience using iRise",
        "Business Analysts, Graphic Designers, Developers, and anyone else responsible for creating prototypes and documenting requirements",
        "Subject matter experts who will provide input during the requirements gathering process",
        "No coding experience required"
      ]
    },
    {
      "title": "SDLC 101: Fundamentals of Software Product Development",
      "url": "https://www.udemy.com/course/sdlc-101-fundamentals-of-software-product-development/",
      "bio": "A Comprehensive Course for Aspiring Software Professionals of All Backgrounds",
      "objectives": [
        "Understand the founding principles, importance, and purpose of the Software Development Life Cycle in creating high-quality software products.",
        "Understand Organization Structure and Key Stakeholders involved in Software Product Development",
        "Navigate each phase of the SDLC effectively, including Planning Design, Development, Testing, Deployment, Maintenance & Support, and Continuous Improvement",
        "Understand Key Stages of the Sofware Development Life Cycle",
        "Evaluate the advantages and disadvantages of different SDLC methodologies to make informed decisions on the most suitable approach for specific projects."
      ],
      "course_content": {},
      "requirements": [
        "While this course is designed to be accessible to learners of all backgrounds, having some foundational knowledge and skills can help you get the most out of it. Here are the recommended prerequisites for taking this course:",
        "Basic understanding of computer systems and software applications: Familiarity with how software works and interacts with hardware will help you better grasp the concepts in the course.",
        "Fundamental knowledge of programming concepts: Although this course does not require advanced programming skills, having a basic understanding of programming languages, data structures, and algorithms will aid in comprehending the SDLC phases and concepts.",
        "Problem-solving and critical thinking skills: The ability to think critically and solve problems will be useful as you learn to analyze software development challenges and apply suitable SDLC methodologies.",
        "Strong communication skills: As you learn about the SDLC and its various phases, effective communication with team members, stakeholders, and other professionals is essential for successful software development projects.",
        "Motivation and a willingness to learn: This course covers a wide range of topics, so having an open mind, curiosity, and a desire to learn and apply new concepts will significantly enhance your learning experience.",
        "Please note that these prerequisites are not strict requirements, but rather recommendations to help you maximize your learning potential in this course. If you lack some of these skills, don't worry—you can still benefit from the course and develop your understanding of the Software Development Life Cycle."
      ],
      "description": "1. Welcome & Instructor Intro\nWelcome to the course: \"SDLC 101: Fundamentals of Software Product Development\", where you will not only learn the Fundamentals of the Software Development Life Cycle but also learn what problem SDLC solves, where it starts and where it ends, and as a software professional, where you fit it?\nMy name is Osman Mohammed; I will lead you through the course. I began my career as a software engineer after completing my master's in computer science and information technology from the USA in 2015; after that, I worked for 3+ years as a software engineer with some of the brightest and most talented people in Silicon Valley. I am a Software Engineer in Test for one of the Big-4 consulting firms where I Design|Develop| and Maintain Software Systems.\n2. Course Outcome\nI Designed this course for anyone seeking to learn the fundamentals of Software Product Development.\nBy the end of the course, you will be equipped with all the foundational knowledge to excel in the Software Development Industry. You can also navigate your software career as per emerging technologies because you know how the software industry develops software products.\n3. Real-Time Case Study Problem\nAs a Hands-on Software Engineer, I will teach this course based on a real-world case study problem by taking E-Commerce Web Application as an example.\n4. Ideal Students for this course\nThe ideal students for this course are anyone who wants to learn and excel in the Software Development Industry.\nThere are no pre-requirements to enroll; My only request is that you come open-minded and ready to learn.\n5. Thank You & Please Enroll.\nI look forward to seeing you on the course. Please enroll.",
      "target_audience": [
        "This course is designed for a diverse range of individuals who wish to learn about the Software Development Life Cycle (SDLC) and its practical applications. It is suitable for:",
        "Aspiring software developers: Individuals looking to start or advance their careers in software development will benefit from understanding the SDLC and its various methodologies.",
        "Current IT professionals: Programmers, software engineers, systems analysts, and other IT professionals can enhance their skills and knowledge by learning how to effectively manage software projects using different SDLC models.",
        "Project managers and team leaders: Professionals responsible for managing software development projects can gain valuable insights into the SDLC to improve project planning, execution, and delivery.",
        "Students studying computer science or related fields: College or university students pursuing degrees in computer science, software engineering, or related disciplines can deepen their understanding of software development processes and best practices.",
        "Entrepreneurs and business owners: Individuals who own or plan to start businesses involving software development can benefit from learning about the SDLC to ensure successful project outcomes.",
        "Professionals transitioning into the tech industry: People from non-tech backgrounds seeking to transition into the tech industry can acquire foundational knowledge of the SDLC to facilitate their career shift.",
        "Anyone interested in software development: Regardless of your background or experience, if you have an interest in understanding the process of creating software and managing software development projects, this course will be a valuable resource. Regenerate response"
      ]
    },
    {
      "title": "Arquitectura Software Moderna: DDD, Eventos, Microservicios",
      "url": "https://www.udemy.com/course/arquitectura-software-moderna-ddd-eventos-microservicios-cqrs/",
      "bio": "Alternativas modernas para la Arquitectura de Software. Domain Driven Design, CQRS, Eventos, Microservicios y mucho más!",
      "objectives": [
        "Conoce las alternativas modernas para organizar la arquitectura de tu sistema adaptándote a tus necesidades.",
        "Domain Driven Design (DDD).",
        "Command Query Responsibility Segregation (CQRS).",
        "Eventos: Event Sourcing, Event Driven Programming y Event Driven Architecture.",
        "Arquitectura orientada a Microservicios.",
        "Arquitectura Hexagonal y Arquitectura de Microkernel.",
        "Cómo testear correctamente todo tu sistema: Arquitecturas Testables."
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso",
          "Arquitectura Convencional",
          "Pros y Contras de la Arquitectura Convencional"
        ],
        "Domain Driven Design (DDD)": [
          "¿Qué es el Domain Driven Design?",
          "Lenguaje Ubicuo",
          "Contextos Acotados",
          "Mapeo de Contextos",
          "Capas del Domain Driven Design",
          "Modelo de Dominio",
          "Modelo de BBDD vs Modelo de Dominio",
          "Servicios de Dominio",
          "Resumen Domain Driven Design",
          "Pros y Contras Domain Driven Design"
        ],
        "Command Query Responsibility Segregation (CQRS)": [
          "Introducción a CQRS",
          "CQRS Avanzado",
          "Ejemplo Práctico CQRS",
          "Mejorando las Escrituras",
          "Pros y Contras de CQRS"
        ],
        "Eventos": [
          "Introducción a los Eventos",
          "Introducción al Event Sourcing",
          "Event Sourcing al Detalle",
          "Event Sourcing y CQRS",
          "Ejemplo Práctico Event Sourcing",
          "Pros y Contras Event Sourcing",
          "Event Driven Programming",
          "Ejemplo Práctico Event Driven Programming",
          "Pros y Contras Event Driven Programming",
          "Event Driven Architecture"
        ],
        "Microservicios": [
          "Introducción a los Microservicios",
          "Elementos de los Microservicios",
          "Servicios Distribuidos y Despliegue",
          "Seguridad y Monitorización en los Microservicios",
          "Ejemplo Práctico Microservicios",
          "Pros y Contras de los Microservicios"
        ],
        "Otros Pratrones y Arquitecturas": [
          "Introducción al módulo",
          "Arquitectura Hexagonal",
          "Ejemplo Práctico Arquitectura Hexagonal",
          "Pros y Contras Arquitectura Hexagonal",
          "Microkernel Architecture",
          "Arquitectura Testable",
          "Evolving y Sacrificial Architectures"
        ],
        "Conclusión": [
          "Conclusión del Curso"
        ],
        "BONUS - Continúa Aprendiendo": [
          "Bonus - Continúa Aprendiendo"
        ]
      },
      "requirements": [
        "Conocimientos básicos de la Programación Orientada a Objetos.",
        "Algún lenguaje de Programación Orientada a Objetos como Java, Python, C++, C#, JavaScript o TypeScript."
      ],
      "description": "Elegir bien la arquitectura de tu sistema dependiendo de los requisitos necesarios es algo crítico y fundamental en el éxito de cualquier sistema software. Muchas veces, el no elegir la arquitectura correcta viene dado por el propio desconocimiento de las opciones que tenemos en nuestras manos.\n\n\nEs por eso que te presento este curso de Arquitecturas de Software Modernas, donde veremos múltiples alternativas para organizar tu código de una forma adaptada a tus necesidades. Todas ellas con parte teórica, ejemplos prácticos y pros y contras, para que sepas cuándo utilizar cada una de ellas.\n\n\nArquitecturas convencionales: Empezaremos el curso viendo las arquitecturas más típicas, como puede ser la de tres capas, con el objetivo de tener un punto de partida y ver lo que nos pueden ofrecer las demás opciones.\nDomain Driven Design (DDD): Continuaremos con el Domain Driven Design, módulo en el que veremos cómo diseñar nuestro sistema guiándonos por el dominio del problema que vamos a resolver, en lugar de guiarnos por los datos que queremos tratar, algo muy común en las arquitecturas convencionales.\nCommand Query Responsibility Segregation (CQRS): En el tercer módulo del curso veremos el CQRS, técnica que nos permitirá tratar las consultas (queries) y las escrituras (commands) de forma distinta, para optimizar ambas de la mejor forma y de manera independiente. Como veremos, tendremos paquetes, modelo e incluso Bases de Datos distintas para las dos operaciones.\nEvent Sourcing: Empezando con los eventos, veremos la técnica del Event Sourcing, que se basa en almacenar el estado actual como eventos, guardando todo lo que suceda en nuestro sistema, en lugar de guardar únicamente el estado actual.\nEvent Driven Programming: Técnica en la que la comunicación entre distintas entidades se realiza mediante el envío de eventos, en lugar de realizarse por llamadas directas a métodos. Como veremos, si extendemos esta técnica a más alto nivel, comunicando distintos subsistemas de nuestro sistema, tendremos la Event Driven Architecture.\nArquitectura Orientada a Microservicios: Arquitectura que se basa en dividir el dominio de nuestro problema en múltiples subdominios bien acotados, cada uno de ellos formando un microservicio. Es una de las arquitecturas más usadas hoy en día, ya que nos permite escalar nuestro sistema de una muy buena forma, haciendo que la disponibilidad del mismo sea mayor.\nArquitectura Hexagonal: Evolución del Domain Driven Design, con el objetivo de aislar aún más las capas internas de nuestro sistema, como son la capa de aplicación y la capa de dominio, de las tecnologías externas que utilicemos.\nArquitectura de Microkernel: También llamada arquitectura de plug-ins, ya que utiliza ese concepto como base de su arquitectura.\nArquitecturas Testables: Veremos cómo plantear correctamente los tests de tu sistema. Además, conoceremos todos los tipos de tests que deberías tener en mente a la hora de probar tu software, con consejos de cuándo utilizar cada uno de ellos.\n\n\nRecalco que el objetivo de este curso no es el de ser expertos en todos estos temas, ya que para eso son necesarios años de experiencia. El objetivo aquí es conocer bien cada uno de ellos, con parte teórica, ejemplos prácticos y pros y contras, para que sepas a la perfección los detalles de cada técnica y cuándo utilizarlas.\nEl primer paso ya lo has dado, te has interesado por la Arquitectura de Software. ¡Te animo a unirte a este curso para mejorar como programador!",
      "target_audience": [
        "Ingenieros de Software / Programadores que busquen mejores alternativas para la arquitectura de sus sistemas.",
        "Ingenieros de Software / Programadores que necesiten arquitecturas escalables y de alto rendimiento.",
        "Ingenieros de Software / Programadores que busquen testear mejor sus sistemas.",
        "Profesionales que quieran adentrarse en el mundo de la arquitectura de software."
      ]
    },
    {
      "title": "IoT - Turn a light on with your iPhone",
      "url": "https://www.udemy.com/course/iot-turn-a-light-on-with-your-iphone/",
      "bio": "IoT course providing students required knowledge to create BLE / iOS 9 apps using XCode and the Swift programming",
      "objectives": [],
      "course_content": {
        "Introduction to IoT for iPhones": [
          "Introduction"
        ],
        "Less talk more doing": [
          "Show me",
          "What were going to do",
          "Creating an XCode project",
          "Running it on your phone",
          "A simple user interface",
          "UI Completion",
          "Setting Up CoreBluetooth",
          "Scanning for a BLE Device",
          "Connecting to a BLE Device",
          "Sending a command"
        ],
        "Course wrap up": [
          "The finished app"
        ]
      },
      "requirements": [
        "Basic Swift iPhone programming",
        "Students need access to an iPhone with iOS 9, a Mac computer running OSX 10.11 that can run the XCode 7 developer tool and a basic mobile programming understanding."
      ],
      "description": "Course Description\n\nLearn the basic concepts of the IoT. Learn how BlueTooth Low Energy (BLE) is used to control devices and how to use iOS development tools for developing a simple application with actual hands on coding examples of how to create a real BLE iOS application that controls an IoT Device capable of switching 110V AC on and off using the Swift programming language for iOS 9.\n\n\n\nBuild a strong foundation in XCode 7 and Swift. This course helps you understand and implement IoT BLE technology in your own app with the latest technologies.\n\nSwift programming language\nXCocde 7\niOS 9\nCoreBlueTooth LE fundamentals\nOverview of BlueTooth Low Energy (BLE)\nIoT device integration\nLow Voltage switches to safely control 110V AC\n\n\nProfessional skills and experience from an iOS Architect with over 8 years experience.\n\nLearn the fundamentals but also tips and tricks of the experts. Learn about the different type of BlueTooth and how to use CoreBlueTooth for iOS.\nWe will walk thru XCode setup and creation of a project for iOS iPhone application that uses CoreBlueTooth to include BLE Integration with an actual device.\n\n\n\nContent and Overview\nThis course explains Apples CoreBlueTooth framework and how it is used with iPhone application development. We explain the overall system in detail from developing the iOS application to connecting to BLE devices. We explain how the CoreBlueTooth framework works and how to integrate it into an application with examples in Swift, Apples latest programming language for the iPhone. All examples are based on iOS 9.\n\n\nWhat am I going to get from this course?\nDetailed explanations of CoreBlueTooth technology for iOS 9\nLearn how to integrate into your apps from an iOS professional\nSuitable for any iOS programmer, Swift basics for CoreBlueTooth are presented, no experience as a UI developer or server developer is expected.\nTeaching by example, hands on example showing every detail to the smallest degree from starting a new application to running it on a device.\nAccess to Instructors GitHub account with many extras and examples.\nIf you don't have a BLE device don't worry, we provide a simulator that runs on a Mac OSX system to help your development.",
      "target_audience": [
        "iPhone Developers interested in IoT technology",
        "iPhone Developers interested in BlueTooth BLE Technology"
      ]
    },
    {
      "title": "SOLID Principles Primer: Essential Basics for C# Developers",
      "url": "https://www.udemy.com/course/solid-principles-primer-essential-basics-for-csharp-developers/",
      "bio": "Learn and understand the basics of SOLID principles and apply them to a real-world example",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Welcome!"
        ],
        "The SOLID Principles": [
          "Design Matters - Fixing Code with SOLID Principles",
          "Single Responsibility Principle",
          "Open-Closed Principle - Part 1",
          "Dependency Inversion Principle",
          "Open-Closed Principle - Part 2",
          "Liskov Substitution Principle",
          "Interface Segregation Principle"
        ],
        "Conclusion": [
          "Thank you"
        ]
      },
      "requirements": [
        "Developers should be familiar with the basics of Object-Oriented Programming (OOP) and C#"
      ],
      "description": "Are you a C# developer with some Object-Oriented Programming (OOP) and C# basics under your belt? Learn and understand the SOLID principles of Object Oriented Design with my course SOLID Principles Primer: Essential Basics for C# Developers!\nIn this course, we will be exploring all the five SOLID principles of Object-Oriented Design, and apply them to a real-world example.\n\n\nWho Should Take This Course?\nThis course is ideal for C# developers who have some basic knowledge of Object Oriented Programming (OOP) and C#, and want to understand and explore the SOLID principles of Object-Oriented Design.\n\n\nSoftware Required\nThis course is focused on conceptual understanding over tool-specific demonstrations, so there won't be any Visual Studio walkthroughs in this course.\n\n\nCourse Format\nThis course is a mini course, which means that it is shorter than a typical Udemy course. However, the content is condensed to fit in less than an hour.\n\n\nWhat You Will Learn\nBy the end of this course, you will have gained an understanding of the following topics:\n\n\n1. Why software design matters?\n2. Symptoms of poor design (code smells)\n3. The following five SOLID principles and how to apply them to a real-world example:\n\n\nSingle Responsibility Principle (SRP)\nOpen-Closed Principle (OCP)\nLiskov Substitution Principle (LSP)\nInterface Segregation Principle (ISP)\nDependency Inversion Principle (DIP)",
      "target_audience": [
        "C# Developers who want to learn the basics of SOLID principles"
      ]
    },
    {
      "title": "Python Intro and Install Guide (Windows and Mac)",
      "url": "https://www.udemy.com/course/python-intro-and-install-guide/",
      "bio": "The quick start guide for installing and learning \\Python",
      "objectives": [],
      "course_content": {
        "Intro": [
          "Introduction"
        ],
        "Python Install": [
          "Windows Install",
          "Mac Install"
        ],
        "Code Download and Navigation": [
          "GitHub Code Download",
          "Windows Navigation",
          "Mac Navigation"
        ],
        "Python Practice": [
          "Python Practice"
        ],
        "Conda Environments": [
          "PID Controllers - Intro to Control Design",
          "Autonomous Robots: Kalman Filter",
          "Autonomous Robots: Model Predictive Control",
          "Autonomous Robots: Path Planning"
        ]
      },
      "requirements": [
        "None!"
      ],
      "description": "This course will teach you how to install Python and perform the some basic Python functions. I created this course so that my students have one specific resource they can check out to help them install Python so they can perform the assignments.\n\n\nFor both Mac and Windows I show how to:\nInstall Python and packages such as NumPy\nDownload GitHub files\nNavigate folders and files using the command line",
      "target_audience": [
        "People who enrolled in my other courses who need help installing Python so they can do the assignments."
      ]
    },
    {
      "title": "Streaming Data Pipeline from Confluent Kafka to AWS MYSQL DB",
      "url": "https://www.udemy.com/course/streaming-data-pipeline-from-confluent-kafka-to-aws-mysql-db/",
      "bio": "Hands on course to build Real Time Data Streaming Pipeline from Confluent Kafka to Lambda to AWS MySQL RDS from scratch",
      "objectives": [
        "Hands On course to learn to use Confluent Kafka & AWS Cloud Platforms",
        "Learn basics of navigating & using AWS Cloud Platform services like Lambda, RDS-MYSQL, IAM, Cloudwatch, Secrets Manager & more",
        "Learn basics of Confluent Platform and overview of services like: Topics, Connectors, API Keys, Clusters & more",
        "Watch & Learn to build on your AWS + mConfluent Accounts- Real Time Data Streaming pipeline from Confluent to AWS RDS using Serverless Lambda Compute"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & High Level Architecture of end product that we will build"
        ],
        "Confluent related Activities": [
          "Create Free Confluent.io account to use for data streaming using Kafka",
          "Test your Knowledge: Confluent - Basics",
          "Confluent: Create Topic, API Keys & Explore Confluent Kafka Topic capabilities",
          "Test your knowledge: Confluent Basics",
          "Confluent: Setup Datagen Source Connector to produce data Kafka Topic",
          "Test your knowledge: Confluent Connectors"
        ],
        "AWS Account creation & Exploration": [
          "AWS Cloud Platform: Create Account & Explore Services"
        ],
        "AWS + Confluent Integration": [
          "AWS: Create & Explore Lambda Serverless Compute",
          "Test your knowledge: Lambda Serverless compute",
          "Configure Lambda to consume from Confluent Kafka Topic & verify in CloudWatch",
          "Create & Explore AWS RDS MySQL Database",
          "Test your knowledge: AWS RDS MySQL Database",
          "Connect to AWS MySql DB via MySQL Workbench & create Schema/Table",
          "Test your knowledge: CloudWatch"
        ],
        "Parse the event & extract data fields": [
          "Parse event and extract fields and write to Cloudwatch",
          "Parse & Extract data from JSON - Simple",
          "Parse & Extract data from Nested JSON - Mid Complexity",
          "Parse & Extract data from JSON - Challenge - Array of json elements",
          "Update Lambda to connect to RDS + Create Layer and add pymysql module to it",
          "Update Lambda Python code to insert extracted fields into MySQL RDS"
        ],
        "End to End Data Pipeline execution & Validation": [
          "Execute End to End flow and observe at all Intermediate steps",
          "Summary, Wrap Up and Next Steps!"
        ]
      },
      "requirements": [
        "Be able to create AWS Cloud Platform Account (Free Tier)",
        "Be able to create Confluent Kafka Platform Account",
        "Basic understanding of Python"
      ],
      "description": "In this hands-on course, participants will follow along step-by-step to build a real-time streaming data pipeline that sends data from Confluent Kafka to AWS Lambda and finally into an AWS RDS MySQL Database. This course is designed to provide practical, real-world skills by walking through each component of the architecture, ensuring that learners not only understand the concepts but also apply them directly in a cloud environment.\nOn the AWS side, participants will gain experience working with several important services, including AWS IAM for securing resources, AWS Secrets Manager for managing sensitive credentials, and AWS CloudWatch for monitoring and logging the data pipeline in action. These services are essential for building secure, scalable, and reliable applications in the cloud.\nOn the Confluent Kafka side, learners will set up a fully managed Kafka cluster, create topics for message streaming, and configure a fully managed Source Connector to simulate real-world data ingestion. This gives participants valuable exposure to enterprise-grade Kafka infrastructure without the overhead of managing the platform themselves.\nBy the end of this course, participants will have built a working, scalable pipeline, gained insights into cloud-native architectures, and acquired hands-on experience that can be directly applied to real-world projects or professional roles.\nThis course is suitable for budding Cloud Engineers, mid level Data Engineers, Product Owners, Product Mangers, Scrum Masters and Technology Leaders looking to get a hands-on experience of building a Real time Streaming Data Pipeline.",
      "target_audience": [
        "Beginner Cloud Developers looking to build Real Time Data pipeline development skills and add a real life project to resume",
        "MId Level to Sr. Cloud Developers to quickly gain understanding of building Real Time Streaming Data Pipelines using AWS + Confluent Platforms",
        "Product Owners looking to build understanding of capabilities, risks & issues in building data pipeline using AWS + Confluent Kafka platform",
        "Product Managers looking to build understanding of capabilities, risks & issues in building data pipeline using AWS + Confluent Kafka platform",
        "Technology Leaders looking to deepen understanding of capabilities, efforts, risks & issues in building data pipeline using AWS + Confluent Kafka platform",
        "Solution Architects looking for building hands-on Data Pipeline using AWS MySQL DB + Confluent Kafka Platforms"
      ]
    },
    {
      "title": "ML Ops Fundamentals Course | MLOps Specialization",
      "url": "https://www.udemy.com/course/mlops-fundamentals-course-mlops-specialization/",
      "bio": "A practical introduction to modern ML Ops: ML model lifecycle, CI/CD, infrastructure, observability, and core tools.",
      "objectives": [
        "Understand the foundational concepts of MLOps, including its differences from DevOps and why it matters in real-world ML projects.",
        "Identify key components of the ML model lifecycle, such as training, validation, deployment, and monitoring.",
        "Gain practical skills to work with CI/CD pipelines, containers, and cloud infrastructure for ML projects.",
        "Recognize the importance of observability, monitoring, data quality, and reproducibility in production ML environments."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "About Your Instructor",
          "Course Structure",
          "What is Artificial Intelligence",
          "What is Machine Learning",
          "What is Deep Learning",
          "What is MLOps and why it's matter",
          "Programming Languages for MLOps",
          "Your First MLOps Project",
          "GitHub Repository with MLOps Project",
          "Quiz - MLOps Overview"
        ],
        "Machine Learning Models": [
          "ML Models vs ML Algorithms",
          "Random Forest Classifier",
          "Configuring Random Forest on Titanic Dataset, Hands-on Lab",
          "Data for MLOps",
          "Training Random Forest on Titanic Dataset, Hands-on Lab",
          "ML Models Lifecycle",
          "MLOps Tools for ML Model Lifecycle",
          "Deep dive into ML Models",
          "Quiz - ML Models"
        ],
        "Ci/CD for MLOps": [
          "What is CI/CD",
          "Core Principles of CI/CD Pipeline",
          "MLOps vs DevOps Lifecycle",
          "MLOps tools for CI/CD",
          "GitHub Action pipeline for Random Forest on Titanic Dataset, Hands-on Lab",
          "Deep dive into Ci/CD for MLOps",
          "Quiz - CI/CD"
        ],
        "Infrastructure for MLOps": [
          "Overview of ML Infrastructure",
          "Build Docker image for Random Forest on Titanic Dataset, Hands-on Lab",
          "Infrastructure Management",
          "Deploy to Kubernetes for Random Forest on Titanic Dataset, Hands-on Lab",
          "Cloud Providers",
          "Deep dive into Infrastructure for MLOps",
          "Quiz - Infrastructure"
        ],
        "Observability for MLOps": [
          "Observability for ML",
          "Observability tools for MLOps",
          "Observability for Random Forest on Titanic Dataset, Hands-on Lab",
          "Deep dive into Observability for MLOps",
          "Quiz - Observability"
        ],
        "Additional topics": [
          "Overview of Security & Compliance",
          "Overview of FinOps"
        ],
        "Career in MLOps": [
          "Key Players in AI/ML Teams",
          "Core Responsibilities of MLOps Engineer",
          "MLOps Engineer Roadmap",
          "MLOps Job Descriptions",
          "MLOps Salary",
          "Your Next Steps in MLOps Specialization"
        ],
        "Graded Quiz": [
          "Final Quiz"
        ],
        "Capstone Project": [
          "Basic Observability for a Local ML Inference API"
        ]
      },
      "requirements": [
        "This course is designed for a broad technical audience and has no strict prerequisites.",
        "Basic familiarity with Python (optional)",
        "A general understanding of software development concepts (optional)",
        "Interest in learning how machine learning is used in production environments"
      ],
      "description": "Are you ready to unlock the essential skills to support Machine Learning in real-world production environments?\nIn today’s fast-growing AI and ML landscape, organizations need more than just ML models - they need reliable, scalable, and observable systems.\nThis ML Ops Fundamentals Course is your practical introduction to the key practices and tools used by modern ML Ops Engineers.\nWe go beyond theory to show you how ML Ops enables real-world ML systems to run safely, efficiently, and at scale - from initial experiments to production deployment and monitoring.\nWhether you’re a software engineer, DevOps practitioner, data engineer, or someone curious about operationalizing Machine Learning, this course is designed for you.\nIn this course, you will:\nLearn what ML Ops is and why it matters, and how it differs from traditional DevOps\nExplore the entire ML model lifecycl - training, validation, deployment, monitoring, and retraining\nUnderstand core infrastructure - Docker, Kubernetes, Cloud environments, and how they power ML Ops workflows\nGet introduced to essential tools like MLflow, DVC, Prometheus, Grafana, and CI/CD platforms\nDiscover what ML Ops Engineers really do day-to-day, and how you can prepare to work in this exciting, growing field\nNo advanced machine learning knowledge required - this is a fundamentals course aimed at building your confidence and practical understanding.\nAll concepts are explained clearly and supported by examples, helping you move from curiosity to competence.\nJoin me and start your journey into ML Ops today, gain the foundational skills to support modern AI systems, enhance your technical portfolio, and position yourself for future-ready roles in one of tech’s most in-demand fields.",
      "target_audience": [
        "Software engineers and DevOps practitioners who want to understand the MLOps landscape",
        "Aspiring MLOps engineers looking for a practical introduction",
        "Data engineers or analysts curious about operationalizing machine learning",
        "Beginners or technical professionals interested in moving into ML infrastructure, automation, and production practices"
      ]
    },
    {
      "title": "Introduction to Cloud Computing for Beginners in 30 mins",
      "url": "https://www.udemy.com/course/cloud-computing-basics/",
      "bio": "Learn basics of Cloud computing today evening",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download PPT",
          "Why we need a cloud computing",
          "What is cloud computing",
          "Benefits of Cloud computing",
          "Cloud Deployment models",
          "Types of cloud services",
          "AWS vs Azure vs Google",
          "Conclusion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No prerequisites"
      ],
      "description": "Expected Outcomes\nThis free course is specially designed for college students or anyone who is planning to learn Cloud computing.\n\n\nIntended Audience\nBeginners in Cloud Computing\nLevel\nBeginners (100)\n\"if you are already experienced and working on these technologies, this may not be the best course for you.\"\n\n\nPrerequisites\nNo Prerequisites\nLanguage\nEnglish\nIf you are not comfortable in English, please do not take a course, captions are not good enough to understand the course.\nWhat's inside\nVideo lectures, PPTs\nFull lifetime access with all future updates\nCertificate of course completion\n30-Day Money-Back Guarantee\n\n\nSome students Feedback\nOne of the most amazing courses i have ever taken on Udemy. Please don't hesitate to take this course. The instructor is really professional and has a great experience about the subject of the course. - Khadija Badary\n\nVery nicely explained most of the concepts. a must have course for beginners - Manoranjan Swain\n\nI appreciate this course explaining everything in great detail for a beginner. This will assist me in overcoming challenges at my work - Benjamin Curtis\n\nGood course for Beginners. Labs are really helpful to grasp the concept. Thank you - Sapna",
      "target_audience": [
        "College students or anyone who wants to introduce themselves in Cloud computing"
      ]
    },
    {
      "title": "Object Oriented Analysis and design(OOAD) with Java",
      "url": "https://www.udemy.com/course/ooad-with-java/",
      "bio": "A way to object oriented system design",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Welcome",
          "What is OOAD",
          "Why OOAD--Benefits"
        ],
        "Fundamentals and Terminologies": [
          "Key Concepts and Terminologies",
          "Points to remember...",
          "Use-case: Bank Class Diagram"
        ],
        "Use-Case 1: Book My Show(Movie/Show booking application)": [
          "Requirement Gathering--Movie Booking App",
          "Use Case Diagram- Book My Show",
          "Create Class Diagram- Book My Show",
          "Creating Class skeleton ---With Java"
        ],
        "What Next....": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Core Java Understanding or some programming experience"
      ],
      "description": "This course aims at providing a practical understanding on how Object Oriented Analysis and Design helps to analyze the systems from an object oriented perspective rather than the traditional structural perspective. The application of design principles, design patterns and UML will bring the learners to a holistic environment of learning and practicing the OOAD for real time case study applications.\nOOAD is also known as low level diagram or class level diagram.\nSoftware and computer application systems are incredibly complex concepts since there are few material restrictions and a lot of possible arbitrary reconstructions. Contrast that to things like bridge or building design, where the concept of a bridge or building is defined by the materials to be used and the nature of the environment it is built upon, which results in few options. Software does not enjoy the same restrictions, and the room for complexity to grow is very large. This is where object-oriented analysis and design comes into play. It uses abstraction as a tool to encapsulate complexity, and the more abstractions are introduced, the greater is the reduction in complexity. These acts of abstraction and encapsulation allow for certain problems to be highlighted and subsequently suppressed.\nOOAD in modern software engineering is typically conducted in an iterative and incremental way. The outputs of OOAD activities are analysis models (for OOA) and design models (for OOD) respectively. The intention is for these to be continuously refined and evolved, driven by key factors like risks and business value.",
      "target_audience": [
        "For developers",
        "Software Engineers",
        "Java developers with some experience",
        "Tech Lead",
        "Architect of applications"
      ]
    },
    {
      "title": "NodeJs, Typescript, TDD, DDD, Clean Architecture e SOLID",
      "url": "https://www.udemy.com/course/tdd-com-mango/",
      "bio": "Aprenda de verdade a criar uma API completa com Typescript utilizando TDD, Clean Architecture, Design Patterns e SOLID.",
      "objectives": [
        "Usar TDD da forma correta",
        "Usar o Clean Architecture em uma API feita em NodeJs",
        "Usar Design Patterns da forma correta",
        "Usar os princípios do SOLID",
        "Criar uma API REST completa em NodeJs com Typescript",
        "Usar Git da forma correta",
        "Usar Docker",
        "Publicar uma API feita em NodeJs com Typescript",
        "Criar uma API completa com Login, cadastro e um sistema de enquete",
        "Usar Integração Contínua",
        "Usar Middleware com permissão de acesso",
        "Usar recursos avançados do Typescript como Utility Types, Interface, TypeAlias, Modularização de Paths",
        "Gerar documentação de API com Swagger"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento em Javascript",
        "Conhecimento em Orientação a Objetos"
      ],
      "description": "Nesse curso irei demonstrar na prática como criar uma API em NodeJs utilizando Typescript, MongoDb e seguindo as melhores metodologias do mercado. Se você está cansado de cursos básicos e quer realmente aprender sobre conteúdos avançados e relevantes como: Design Patterns, Clean Architecture, SOLID, DDD e TDD, você está no lugar certo. O objetivo maior desse treinamento é fazer você sair da sua zona de conforto e ver que existem muitas coisas a serem estudadas para se tornar um líder técnico ou um arquiteto de software.\nVamos criar uma API completa com Login, Cadastro, Criação de Enquetes, Lista de Enquetes, Responder uma Enquete e Resultado da Enquete.\nAlém de tudo isso irei mostrar na prática como utilizar o Git, Docker, Jest, CI/CD, Swagger da forma correta e como fazer para manter nosso código sempre limpo, organizado e bem estruturado, criando inclusive travas para evitar que códigos defeituosos ou mal formatados sejam commitados em nosso repositório.\nVamos falar sobre o uso correto de middlewares para gerenciamento de permissões nas rotas e segurança na geração de senhas.\nEsse curso fará você evoluir mais do que anos de faculdade. Mostrarei pra você, de forma objetiva, todos os conhecimentos que obtive ao longo dos anos de minha carreira. Você terá a oportunidade de evoluir em semanas ou meses o que um programador sênior leva anos para aprender.",
      "target_audience": [
        "Desenvolvedores que querem aprender a programar orientado a testes",
        "Desenvolvedores que querem aprender a utilizar Clean Architecture",
        "Desenvolvedores que querem aprender a aplicar Design Patterns de forma correta",
        "Desenvolvedores que querem aprender a usar os princípios do SOLID",
        "Desenvolvedores que querem aprender sobre arquitetura de software",
        "Desenvolvedores Javascript",
        "Desenvolvedores Typescript",
        "Desenvolvedores que querem aprender sobre Docker",
        "Desenvolvedores que querem aprender a usar Git de forma correta",
        "Desenvolvedores que querem aprender sobre CI/CD"
      ]
    },
    {
      "title": "Chatbot WhatsApp API, C# .NET Enviar-recibir mensajes",
      "url": "https://www.udemy.com/course/enviar-y-recibir-mensajes-con-whatsapp-api-y-c-net-chatbot/",
      "bio": "WhatsApp Cloud API | Meta | C# .NET | Postman | Web App | API | Deploy",
      "objectives": [
        "Entender las API´s disponibles por WhatsApp Cloud",
        "Utilizar las apis WhatsApp Cloud desde Postman y desde la aplicación",
        "Comprender la estructura de cada tipo de mensaje y de las API´s de WhatsApp Cloud",
        "Crear una aplicación .NET C#",
        "Integrar una aplicación .NET C# con WhatsApp Cloud API",
        "Crear un caso de uso con interacción continua",
        "Desplegar una aplicación e integrar con Whatsapp Cloud API"
      ],
      "course_content": {},
      "requirements": [
        "Conceptos básicos de programación"
      ],
      "description": "API de la nube de WhatsApp Business\n\n\nEste curso te ayudará a usar la Plataforma de WhatsApp Business que está pensada para personas que desarrollan por su cuenta o para su organización. Todos los desarrolladores deben seguir la Política de comercio de WhatsApp.\nSi quieres enviar y recibir un primer mensaje con un número de prueba desde la plataforma de Meta, debes completar los siguientes pasos:\nConfigurar activos de desarrollador y el acceso a la plataforma\nEnviar un mensaje de prueba\nConfigurar un webhook\nRecibir un mensaje de prueba\n\n\nEnviar y recibir mensajes con WhatsApp Api,  C# .NET y ChatGPT\nBienvenido a este curso, donde aprenderás a consumir las servicios de WhastsApp Cloud API, sin la necesidad de conectarte a un tercero, se utilizarán las API´s oficiales de WhatsApp.\n\n\nEntenderás cada uno de los servicios para enviar y recibir mensajes de diferentes tipos como: Imagen, audio, video, documento, sticker, botones, lista de opciones y ubicaciones en mapa.\nCrearemos una aplicación en C# .NET, usando buenas prácticas de programación, publicaremos nuestra aplicación en la nube, crearemos un webhook para validar por medio de una autenticación y recibir mensajes directamente desde WhatsApp.\n\n\nAl final crearemos un caso de uso real de interacción usuario con la aplicación desarrollada que tomará el rol de un chatbot.",
      "target_audience": [
        "Desarrolladores",
        "Arquitectos",
        "Analistas"
      ]
    },
    {
      "title": "Learn Python: Python in 80 Minutes for Beginners (2023)",
      "url": "https://www.udemy.com/course/learn-python-in-80-minutes/",
      "bio": "Learn programming with Python to move on to branches like machine learning, data science, web development, django, etc.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Working computer",
        "Internet connection",
        "No prior knowledge of Python",
        "No previous programming experience"
      ],
      "description": "Welcome to the Python in 80 Minutes course for beginners. This course will go through the fundamentals of programming with Python. By the end of the course you will have gained enough knowledge to move on to different branches or continue to learn more advanced topics with Python. The course includes 6 quizzes and 4 coding exercises that will help you through your learning process. Keep in mind that this course will only teach the basics of Python, so if you are looking to learn more advanced topics, this is not the right course for you. This course is best for those who are looking to learn the basics of Python or just people looking to revise their basic Python knowledge. The course only takes 80 minutes, so if you have any doubts about learning programming, think about how much a new skill can help you in life, from automating your boring task to starting a career in programming.\n\n\nThis course will be covering the following topics:\nInstalling and setting up Python and PyCharm\nThe basics of Python\nUsing conditions (if else elif)\nUsing loops (while for)\nGetting user input\nHandling errors\nCreating and working with files\nReading and writing to and from files\nWorking with classes and objects",
      "target_audience": [
        "Beginners who are looking to learn the basics of Python",
        "People looking to revise their Python knowledge"
      ]
    },
    {
      "title": "Master Artificial Intelligence : Build AI Chatbots in Python",
      "url": "https://www.udemy.com/course/mastering-artificial-intelligence-build-ai-agents-w-python/",
      "bio": "A Practical Guide to Developing Intelligent Chatbots Using Python and Modern AI Techniques",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Python"
      ],
      "description": "Title: Master Artificial Intelligence : Build AI Chatbots in Python\nSubtitle: A Practical Guide to Developing Intelligent Chatbots Using Python and Modern AI Techniques\nDescription:\nHere is the modified text with \"AI agents\" replaced by \"AI chatbots\":\nArtificial Intelligence (AI) is transforming industries, automating tasks, and enhancing decision-making. This course provides a hands-on introduction to AI, focusing on building intelligent chatbots with Python. Whether you are a beginner in AI or an experienced developer looking to enhance your skills, this course will guide you through the fundamentals and practical implementations of AI chatbots.\nYou will start with an introduction to AI concepts, exploring search algorithms, reinforcement learning, and decision-making models. Then, you will learn to build AI chatbots using Python and libraries such as OpenAI Gym, LangChain, and TensorFlow. The course covers topics like natural language processing, computer vision, and autonomous decision-making, equipping you with the skills to create AI-driven applications.\nThrough real-world projects, you will develop AI chatbots for automation, gaming, and problem-solving. By the end of this course, you will have a solid understanding of AI principles and hands-on experience in implementing AI chatbots that interact with their environment.\nThis course is ideal for software developers, data scientists, and AI enthusiasts who want to apply AI techniques in practical scenarios. No prior AI experience is required, but basic Python knowledge is recommended.\nLet me know if you need any further refinements!",
      "target_audience": [
        "Learners interested in building their own customizable AI Agent(s)"
      ]
    },
    {
      "title": "Coding in the Modern AI Era: Essential ChatGPT Skills",
      "url": "https://www.udemy.com/course/coding-in-the-modern-ai-era-essential-chatgpt-skills/",
      "bio": "Learn to be productive with ChatGPT in common software engineering tasks using TypeScript and Node",
      "objectives": [
        "Using ChatGPT for TypeScript/NodeJS Code Generation and Refactoring",
        "Using ChatGPT to Write Code Documentation",
        "Using ChatGPT to Create Jest Unit Tests",
        "Using ChatGPT to Explain Complex Code",
        "Using ChatGPT for Debugging"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with TypeScript, Node, and Express",
        "You should have a ChatGPT Plus subscription"
      ],
      "description": "\"Coding in the Modern AI Era: Essential ChatGPT Skills\" is a concise, one-hour Udemy course designed to empower software engineers with the skills to utilize ChatGPT in their coding processes effectively. The course is structured into nine focused chapters, each offering valuable insights into different aspects of using ChatGPT for software development.\nIntro: This introductory chapter sets the stage, providing an overview of the course and highlighting the potential of ChatGPT in modern software development.\nOverview of the Example Application: Here, learners are introduced to a sample application that will be used throughout the course to demonstrate ChatGPT's capabilities in a real-world context.\nGenerating Code with ChatGPT: This chapter dives into the practicalities of generating code using ChatGPT, showcasing how AI can assist in writing efficient and effective code, especially in TypeScript and Node.js.\nExercise: Generating Code with ChatGPT: Students are given a hands-on exercise to apply their learning, using ChatGPT to generate code snippets and solve programming challenges.\nExplaining and Refactoring Code with ChatGPT: Learners explore how to use ChatGPT for explaining complex code logic and refactoring existing code to improve readability and performance.\nWriting Unit Tests with ChatGPT: This section focuses on leveraging ChatGPT to write comprehensive unit tests, an essential part of maintaining code quality.\nExercise: Writing Unit Tests with ChatGPT: An interactive exercise where students apply ChatGPT to create unit tests for the example application, reinforcing their understanding and skills.\nDebugging with ChatGPT: Learners are taught how to use ChatGPT to identify and fix bugs, a crucial skill in software development.\nFinal Notes: The course concludes with final thoughts, summarizing key learnings and discussing how to continue leveraging ChatGPT in coding projects.\nTargeted at both beginners and experienced developers, this course is a compact yet thorough guide to integrating AI into coding practices, enhancing efficiency, creativity, and problem-solving skills in the ever-evolving landscape of software development.",
      "target_audience": [
        "Software engineers who want to become more productive by using ChatGPT for every-day tasks"
      ]
    },
    {
      "title": "Recolección y análisis de requerimientos de software",
      "url": "https://www.udemy.com/course/analisis-y-recoleccion-agil-de-requerimientos-de-software/",
      "bio": "Recolecta, comprende y analiza los requerimientos del software para crear soluciones que deleitan a los usuarios",
      "objectives": [
        "Crear estrategias de recolección de información efectivas a través de las técnicas de elicitación de requerimientos",
        "Clasificar la información según su importancia a través de matrices de clasificación",
        "Analizar la información para encontrar los aspectos relevantes en los requerimientos",
        "Modelar el negocio a través de cuatro vistas para identificar oportunidades para el software"
      ],
      "course_content": {
        "Presentación del curso": [
          "Acerca del curso",
          "¿Cómo vas a aprender?"
        ],
        "Necesidades y requerimientos": [
          "LEEME",
          "Definiciones",
          "Proceso de requerimientos",
          "Clasificación de los requerimientos",
          "Necesidades vs. Requerimientos"
        ],
        "Técnicas de recolección de requerimientos": [
          "Introducción",
          "Entrevistas",
          "Preparación de la entrevista",
          "Ejemplos de preguntas para entrevistas",
          "Cómo conducir la entrevista",
          "Talleres",
          "Focus groups",
          "Ejemplo de Focus Group",
          "Observación",
          "¿Cuándo observar al usuario?",
          "Encuestas",
          "Análisis de documentos",
          "Evaluación Heurística"
        ],
        "Recomendaciones para la recolección de requerimientos": [
          "Captura las necesidades del negocio",
          "¿Cómo hacer una estrategia de recolección?",
          "Tabla según el tipo de producto",
          "Sesiones de Modelado",
          "Clasificación de la información",
          "Sugerencias generales"
        ],
        "Introducción al análisis de requerimientos": [
          "¿Por qué es importante saber analizar el sistema?",
          "Lo que no es el análisis de sistemas",
          "Vistas del modelo"
        ],
        "Modelo de Contexto": [
          "¿Qué contiene el modelo del contexto?",
          "Crear el modelo de contexto"
        ],
        "Modelo de Dominio": [
          "¿Qué incluye el modelo de dominio?",
          "LEEME",
          "El diagrama de clases UML",
          "Intro a UML: La clase",
          "Intro a UML: Relaciones y asociaciones",
          "Extraer la información del dominio",
          "Crear el Diagrama de Dominio"
        ],
        "Modelo de Interacción": [
          "¿Qué incluye el modelo de interacción?",
          "LEEME",
          "El diagrama de Casos de Uso de UML",
          "El diagrama de Secuencia de UML",
          "Modelar los procesos y los usuarios con Casos de Uso",
          "Modelar los pasos de interacción entre Usuarios y Sistema",
          "Modelar los pasos de interacción entre Aplicaciones"
        ],
        "Modelo de Comportamiento": [
          "¿Qué incluye el modelo de comportamiento?",
          "LEEME",
          "El diagrama de Actividades UML",
          "El diagrama de Swim Lane",
          "Crear el modelo de comportamiento"
        ],
        "Priorización": [
          "¿A qué le doy prioridad?",
          "Rutas Rojas"
        ]
      },
      "requirements": [
        "Experiencia haciendo User Stories",
        "Conocer las fases de desarrollo del software"
      ],
      "description": "\"El usuario no sabe lo que quiere\"\n¿Cuántas veces has escuchado o dicho esta frase en el trabajo de desarrollo de software?\nEl usuario del software no es el responsable de proveer y definir los requerimientos. Es una responsabilidad del equipo de desarrollo, por lo tanto, debemos definir actividades que nos permitan comprender las necesidades de nuestros usuarios y establecer los requerimientos del software.\nA través de este curso, aprenderás:\nCómo definir una estrategia de recolección de la información para los requerimientos\nCómo elegir las actividades de recolección adecuadas, según lo que queremos averiguar\nCómo crear modelos para encontrar las oportunidades de implementar funciones de software\nCómo evaluar el impacto que tendrán nuestras decisiones y código en el Sistema\nCómo clasificar la información adecuadamente para definir los requerimientos del software\nOtros cursos te enseñan a escribir y administrar Historias de Usuario.\nMi curso te enseña a tener una comprensión profunda y completa de las necesidades de los usuarios, para darles mejores soluciones.\nEste curso está diseñado para Product Owners, Analistas y desarrolladores de software en general, porque es importante que todos los involucrados lo conozcan bien.\n¡Únete ahora y conviértete en un Ingeniero de Software de Élite!\nLo que dicen mis estudiantes:\n\"El curso ha superado mis expectativas, encontré en el curso lo que estuve buscando hace un tiempo y no encontraba en otros programas. El detalle de la información, el equilibrio entre la teoría y práctica, y la orientación sobre casos reales fue excelente\"\nTeam Leader, Teksi\n\"Es muy claro, sabe explicar y entienden perfecto los diferentes escenarios para ayudarte con tus dudas\"\nTabita Ku\n¿Por qué puedo ser tu instructor?\nPorque ya he demostrado mi experiencia y conocimiento públicamente en el tema. Soy autor de la serie de videos de Ingeniería de Requerimientos que tiene más de 80,000 visualizaciones a la fecha.\nCuento con más de 20 años de experiencia dirigiendo y formando equipos de desarrollo de software, que crean productos para empresas en diversos ramos: Gobiernos estatales y federales, bancos, inmobiliarias, mensajería, organización de eventos, hardware especializado, SAP, ERP, entre otras\n¡Mis cursos de Udemy cuentan con más de 2000 inscripciones a la fecha!",
      "target_audience": [
        "Product Owners",
        "Business Analysts",
        "Desarrolladores de Software"
      ]
    },
    {
      "title": "Veri Yapıları ve Algoritmalar: Yazılım Mülakatları",
      "url": "https://www.udemy.com/course/yazilim-mulakatlari/",
      "bio": "Python ile veri yapılarını öğrenin! Google, Netflix, Amazon, Apple, Meta vb. firmaların teknik mülakat sorularını çözün",
      "objectives": [
        "Veri Yapıları",
        "Python İleri Seviye",
        "Teknik Mülakat Çözümleri",
        "Algoritmalar"
      ],
      "course_content": {
        "Giriş": [
          "Hoşgeldiniz",
          "Kurs Kullanma Kılavuzu"
        ],
        "Büyük O Gösterimi": [
          "Başlamadan Önce",
          "Big O Giriş",
          "Big O Nedir?",
          "Big O Kod Örnekleri",
          "Yer Maliyetleri",
          "Big O GitHub Link"
        ],
        "Diziler & Listeler": [
          "Diziler & Listeler",
          "Dizilere Giriş",
          "Listeler",
          "Diziler, Listeler GitHub Link",
          "Contains Duplicate",
          "Contains Duplicate Çözüm",
          "Contains Duplicate GitHub Link",
          "Find Single",
          "Single Number Çözüm",
          "Find Single GitHub Link",
          "Majority Element",
          "Boyer Moore",
          "Majority Element GitHub Link"
        ],
        "Stack, Queue, Deque": [
          "Stack, Queue, Deque Giriş",
          "Stack, Queue ve Deque Nedir?",
          "LifoQueue",
          "Stack Yazmak",
          "Queue Yazmak",
          "Deque Yazmak",
          "Stack, Queue, Deque GitHub Link",
          "Implement Stack Using Queue",
          "Implement Stack Çözüm",
          "Implement Stack GitHub Link",
          "Baseball Game",
          "Baseball Çözümü",
          "Baseball GitHub Link",
          "Daily Temperatures",
          "Daily Temperatures Çözümü",
          "Daily Temperatures GitHub Link"
        ],
        "Linked List": [
          "Linked List Giriş",
          "Linked List Nedir?",
          "Doubly Linked List",
          "Linked List O Gösterimi",
          "Linked List GitHub Link",
          "Remove nth Node",
          "Remove nth Node Çözüm",
          "Remove Node GitHub Link",
          "Linked List Kesişimi",
          "Kesişim Çözümü",
          "Intersection GitHub Link",
          "Duplicate",
          "Floyd",
          "Duplicate GitHub Link"
        ],
        "Ağaçlar & Recursion": [
          "Tree Giriş",
          "Ağaçlar",
          "Ağaçlar O Gösterimi",
          "Insert Methodu",
          "BST Bitirmek",
          "Tree GitHub Link",
          "Recursion",
          "Recursion GitHub Link",
          "Reverse String",
          "Reverse String Çözüm",
          "Reverse String GitHub Link",
          "Fibonacci",
          "Recursion vs Iteration",
          "Memoization",
          "Fibonacci GitHub Link",
          "Invert Binary Tree",
          "Invert Tree Çözüm",
          "Invert Binary GitHub Link"
        ],
        "Ağaç Algoritmaları": [
          "Tree Traversal Giriş",
          "BFS vs DFS",
          "BFS Uygulama",
          "DFS Uygulama",
          "DFS Diğer Yöntemler",
          "Tree Traversal GitHub Link",
          "BST'den Ağaca",
          "DFS Çözüm",
          "Greater BST GitHub Link",
          "Binary Tree Max Path Sum",
          "DFS Döndüren Çözüm",
          "Binary Tree Max GitHub Link"
        ],
        "Graph": [
          "Graph Giriş",
          "Graph Nedir?",
          "Graph Uygulaması",
          "Graph GitHub Link",
          "Reorder Routes",
          "DFS Çözüm",
          "Reorder Routes GitHub Link",
          "Number of Islands",
          "BFS Çözüm",
          "Number of Islands GitHub Link",
          "Redundant Connection",
          "Union Find",
          "Redundant Connection GitHub Link"
        ],
        "Arama Algoritmaları ve HashTable": [
          "HashTable Giriş",
          "Sequential vs Binary",
          "Search Kodları",
          "Searching Algorithms GitHub Link",
          "Hash Table Nedir?",
          "Hash Fonksiyonu",
          "HashTable Uygulaması",
          "HashTable GitHub Link",
          "Two Sum",
          "HashMap Çözüm",
          "Two Sum GitHub Link",
          "Encode Decode",
          "Tiny Url Çözüm",
          "Tiny Url GitHub Link",
          "Brick Wall",
          "Brick Wall Çözüm",
          "Brick Wall GitHub Link"
        ],
        "Sıralama Algoritmaları ve Heap": [
          "Sıralama Algoritmaları ve Heap Giriş",
          "Sorting Algoritmaları",
          "Bubble Sort",
          "Selection Sort",
          "Insertion Sort",
          "Merge Sort",
          "Merge Sort Kodlar",
          "Quick Sort",
          "Quick Sort Kodlar",
          "Heap Nedir?",
          "Heap Sort",
          "Sorting Algorithms GitHub Link",
          "K Closest Points",
          "Heap Çözüm",
          "K Closest GitHub Link",
          "Data Stream",
          "Max Heap Çözüm",
          "Data Stream GitHub Link"
        ]
      },
      "requirements": [
        "Herhangi bir programlama dili hakkında bilgi",
        "Temel ingilizce bilgisi"
      ],
      "description": "Veri Yapıları ve Algoritmalar eğitimine hoşgeldiniz!\nVeri Yapıları ve Algoritmalar tüm yazılımcıların hakim olması gereken bir konu olmakla birlikte aynı zamanda Google, Apple, Microsoft, Netflix, Amazon, Tesla vb. teknoloji firmalarının mülakatlarda bol bol sorduğu ve pratik edilmesi gereken bir şekilde karşımıza çıkıyor.\nEğitimimizde teorik konuları görmekle kalmayacak, tüm konuları kod yazarak pratik edecek ve mülakat sorularını çözerek uygulamaya dökeceğiz!\nEğitim Python programlama dili üzerinden anlatılacaktır. Fakat daha önceden herhangi bir programlama dili ile çalıştıysanız eğitimi almanızda bir sakınca bulunmamaktadır.\nEğitim Udemy'de 300.000'den fazla kişiye Yazılım ve Siber Güvenlik eğitimleri veren Atıl Samancıoğlu tarafından veriliyor. Atıl Samancıoğlu Boğaziçi Üniversitesi'nde Mobil Geliştirme eğitimi vermekte, Academy Club ve Pera Games'in kurucu ortağı olarak görev almaktadır. 170 ülkeden öğrencinin değerlendirmesiyle en yüksek puanlı ve en çok satan eğitimlerin sahibidir.\nEğitim boyunca değineceğimiz konuların bazıları:\nTeknik Mülakat Soruları\nBüyük O Gösterimi\nStack\nQueue\nDeque\nDiziler\nLinked List\nHeap\nGraph\nTree\nHashTable\nEğitimimizin başında 2 saatlik hızlandırılmış bir Python bölümü bulunmaktadır. Daha önceden Python bilginiz yoksa ama başka bir programlama diline hakimseniz hızlıca adapte olmanız için hazırlanmıştır. 3. bölüm itibariyle tamamen veri yapıları ve algoritmalara odaklanıp devam edilecektir. Eğitim boyunca bir çok konuyu pratik edebilecek farklı olanaklar tanınacaktır.\nEğitimi tamamladığınızda mülakat sorularını çözebilir, kendi başınıza pratik edebilir ve yurtdışı mülakatlara hazır hale gelebilirsiniz. Eğitim boyunca söylenen sorularda çözümleri dinlemeden önce kendiniz çözmeye çalışmanız ve pratikleri tamamlamanız çok önemli olacaktır.\nİyi mülakatlar, iyi kodlamalar!",
      "target_audience": [
        "Teknik mülakatlarda zorlanan yazılımcılar",
        "Veri yapılarını tam anlamıyla öğrenmek isteyen yazılımcılar",
        "Algoritmaları öğrenmek isteyen yazılımcılar"
      ]
    },
    {
      "title": "Programación Panel View Plus desde cero",
      "url": "https://www.udemy.com/course/programacion-panel-view-plus-desde-cero/",
      "bio": "Aprende todo lo que necesitas para programar pantallas desde cero y poder controlar tus proyectos de Automatización",
      "objectives": [
        "Programar pantallas Panel View Plus de la Marca Allen Bradley",
        "Un equipo trabajando para ti y responder tus preguntas en menos de 24 hrs.",
        "Actualizaciones regulares sin costo alguno para que siempre estes actualizado.",
        "Acceso a descargas e información exclusiva en nuestro sitio de membresía (Se Aplican Restricciones)"
      ],
      "course_content": {
        "Bienvenido": [
          "Presentación del Curso",
          "Presentación del Instructor",
          "Preguntas y Respuestas antes de tomar este Curso",
          "Introducción FactoryTalk View"
        ],
        "Instalaciones, Descargas y Activaciones": [
          "Descargas",
          "FTview instalacion completo",
          "Licenciamiento de Software con Master Key",
          "Instalacion Vmware Workstation Pro"
        ],
        "Administración de Proyecto": [
          "Crear Nuevo Proyecto (Aplicación)",
          "Respaldo de Aplicación, Generar y Restaurar APA",
          "Restauración Secundaria con archivo MED",
          "Examen"
        ],
        "Topicos de Comunicación": [
          "OPC RsLinx Enterprise y Topicos de Comunicacion 1ra Parte",
          "OPC RsLinx Enterprise y Topicos de Comunicacion 2da Parte",
          "OPC Servidores de Datos, RsLinx y Kepserver",
          "RsLinx Como OPC para PLC 500 y 5000",
          "Instalar EDS (Electronic Data Sheet)",
          "Examen"
        ],
        "Menú Básico": [
          "Vista de Software FTView, Menu, Iconos",
          "Crear Nuevas Pantallas",
          "Menú Objetos: Texto y Panel",
          "Menú Objetos: Herramientas de Dibujo",
          "Menú Objetos: Image"
        ],
        "Botones": [
          "Botones: Momentary (Momentáneo)",
          "Botones: Maintained (Mantenido)",
          "Botones: Latched (Memorizados)",
          "Botones: Multistate (Multiestado)",
          "Botones: Interlocked",
          "Botones: Ramp (Rampa)"
        ],
        "Ingreso y Visualización de Datos": [
          "Numeric Display (Pantalla Numérica)",
          "Numeric Input Enable 1ra Parte",
          "Numeric Input Enable 2da Parte",
          "Numeric Input Cursor Point",
          "String Display (Desplegar Textos)",
          "String Input Enable (Ingresar Texto)",
          "Multistate Indicator (Indicador Multiestados)",
          "List Indicator (Indicador en forma de Lista)"
        ],
        "Navegadores de Pantalla": [
          "Navegación Go to (Ir a Pantalla)",
          "Navegación Return to (Regresar Pantalla)",
          "Navegación Close (Cerrar Pantalla)",
          "Display List Selector (Seleccionador de Pantalla tipo Lista)"
        ],
        "Herramientas Gráficas y Visuales": [
          "Manejo de Symbol y direccionamiento a PLC",
          "Gráficos para mostrar nivel (Bar Graph)",
          "Más Objetos para mostrar nivel, velocidad etc.",
          "Trends (Tendencias) 1ra Parte",
          "Trends (Tendencias) 2da Parte",
          "Botones para Trends 1ra Parte"
        ],
        "Animaciones": [
          "Visibilidad",
          "Visibilidad con Expresiones",
          "Manejo de Usuarios 1ra Parte",
          "Manejo de Usuarios 2da Parte",
          "Seguridad con Usuarios 1ra Parte",
          "Seguridad con Usuarios 2da Parte"
        ]
      },
      "requirements": [
        "Conocer lo que es un PLC y la importancia de tener una pantalla de Operador la cual se encarga de controlar el proceso."
      ],
      "description": "Con \"Programación Panel View Plus desde Cero\" aprenderas todo acerca de la programación de pantallas de operador de la marca Allen Bradley, para las plataforma Plus que son propias del software FactoryTalk View en su seria Machine Edition, incluso sin nunca has programado una pantalla con anterioridad.\nEste curso esta diseñado para que particulares, estudiantes, profesionistas que con algo o nada de conocimientos ni experiencia en programación de PLC's y Pantallas Panel View pueda programar desde cero botones, pantallas de control de procesos, ingresos de datos hacia un PLC, controlar válvulas, motores, arrancar y para procesos, desplegar alarmas visuales al operador, mensajes de alerta, etc.\nAlguna vez te has preguntado como el operador interactua con el controlador PLC en las líneas de producción de una fabrica, como es posibles crear productos en masa, miles de productos, llevar un control del mismo ?\nLos ojos del operador en cualquier línea de producción de una fábrica es una Pantalla Panel View, un elemento indispensable para llevar a cabo cientos de tareas a la vez y de manera automática para controlar procesos a nivel industrial.\nCada sección te lleva a un nuevo nivel de conocimientos. Comenzamos desde lo más básico que es la instalación del software y herramientas.\nHasta cubrir de una manera práctica los comandos más utilizados y necesarios para realizar la visualización prácticamente de cualquier proceso de una manera amigable y profesional.\nCada sección cuenta con preguntas que te ayudarán a reforzar los conocimientos adquiridos en cada tema.\nAllena Bradley es por hoy una de las marcas más fáciles, rápidas de programar en todos sus equipos, en cuestion de días podras realizar ya programación de Panel View Plus a un nivel profesional, que te ayudarán a brindar los servicios adecuados a tus clientes y que tus proyectos de automatización tengan una calidad inmejorable.",
      "target_audience": [
        "Particulares, Estudiantes e Ingenieros de Carreras afines a Automatización y Control"
      ]
    },
    {
      "title": "Open-Source LLMs: Unzensierte & sichere KI lokal auf dem PC",
      "url": "https://www.udemy.com/course/open-source-llms-unzensierte-sichere-ki-lokal-auf-dem-pc/",
      "bio": "Private ChatGPT-Alternativen: Llama, Mistral, DeepSeek, Function Calling, RAG, Vektordatenbanken, LangChain u KI-Agenten",
      "objectives": [
        "Warum Open-Source LLMs? Unterschiede, Vorteile und Nachteile von Open-Source und Closed-Source LLMs",
        "Was sind LLMs wie ChatGPT, Llama, Mistral, Phi3, Qwen2-72B-Instruct, Grok usw.",
        "Welche LLMs gibt es und was soll ich verwenden? \"Die besten LLMs\" finden",
        "Voraussetzungen für die lokale Nutzung von Open-Source LLMs",
        "Installation und Verwendung von LM Studio, Anything LLM, Ollama und alternative Methoden zum Betrieb von LLMs",
        "Zensierte vs. unzensierte LLMs",
        "Finetuning eines Open-Source-Modells mit Huggingface oder Google Colab",
        "Vision (Bilderkennung) mit Open-Source LLMs: Llama3, Llava & Phi3 Vision",
        "Details zur Hardware: GPU Offload, CPU, RAM und VRAM",
        "Alles zu HuggingChat: Ein Interface für die Nutzung von Open-Source LLMs",
        "Systemprompts im Prompt Engineering + Function Calling",
        "Prompt Engineering Basics: Semantic Association, strukturierte & Rollen-Prompts",
        "Groq: Open-Source LLMs mit schnellem LPU-Chip statt GPU nutzen",
        "Vektordatenbanken, Embedding-Modelle & Retrieval-Augmented Generation (RAG)",
        "Erstellen eines lokalen RAG-Chatbots mit Anything LLM & LM Studio",
        "Verknüpfen von Ollama & Llama 3, und Nutzung von Function Calling mit Llama 3 & Anything LLM",
        "Function Calling zur Datenzusammenfassung, Speicherung und Diagrammerstellung mit Python",
        "Nutzung weiterer Funktionen von Anything LLM und externe APIs.",
        "Tipps für bessere RAG-Apps mit Firecrawl für Webseiten-Daten, effizienteres RAG mit LlamaIndex & LlamaParse für PDFs und CSVs.",
        "Definition und verfügbare Tools für KI-Agenten, Installation und Nutzung von Flowise lokal mit Node (einfacher als Langchain und LangGraph).",
        "Erstellung eines KI-Agenten, der Python-Code und Dokumentationen erstellt, sowie Nutzung von KI-Agenten mit Function Calling, Internetzugriff und drei Experten.",
        "Hosting und Nutzung: Welchen KI-Agenten solltest du bauen und externes Hosting, Text-to-Speech (TTS) mit Google Colab.",
        "Finetuning von Open-Source LLMs mit Google Colab (Alpaca + Llama-3 8b, Unsloth)",
        "Mieten von GPUs bei Runpod oder Massed Compute.",
        "Sicherheitsaspekte: Jailbreaks und Sicherheitsrisiken durch Angriffe auf LLMs mit Jailbreaks, Prompt Injections und Data Poisoning",
        "Datenschutz und Sicherheit deiner Daten, sowie Richtlinien zur kommerziellen Nutzung und dem Verkauf generierter Inhalte."
      ],
      "course_content": {
        "Einleitung und Überblick": [
          "Willkommen",
          "Kurs Überblick",
          "Mein Ziel und ein paar Tipps",
          "Erklärung zu den Links",
          "Wichtige Links",
          "Dozentenvorstellung: Arnold Oberleiter (Arnie)"
        ],
        "Warum Open-Source LLMs? Unterschiede, Vorteile und Nachteile": [
          "Worum geht es in diesem Abschnitt?",
          "Was sind LLMs wie ChatGPT, Llama, Mistral usw.",
          "Welche LLMs gibt es und was soll ich verwenden? \"Die besten LLMs\" finden",
          "Nachteile von Closed-Source LLMs wie ChatGPT, Gemini und Claude",
          "Vor- und Nachteile von Open-Source LLMs wie Llama3, Mistral & mehr",
          "Recap: Das solltest du nicht vergessen!"
        ],
        "Der einfachste Weg, Open-Source LLMs lokal auszuführen & was man benötigt": [
          "Voraussetzungen für die lokale Nutzung von Open-Source LLMs",
          "Installation von LM Studio und alternative Methoden zum Betrieb von LLMs",
          "Open-Source-Modelle in LM Studio nutzen",
          "Zensierte vs. unzensierte LLMs",
          "Die Anwendungszwecke von LLMs",
          "Finetuning eines Open-Source-Modells mit Huggingface oder Google Colab",
          "Vision (Bilderkennung) mit Open-Source LLMs: Llama3, Llava & Phi3 Vision",
          "Einige Beispiele zur Bilderkennung (Vision)",
          "Mehr Details zur Hardware: GPU Offload, CPU, RAM und VRAM",
          "Zusammenfassung und ein kurzer Ausblick"
        ],
        "Prompt Engineering für Open-Source LLMs und deren Einsatz in der Cloud": [
          "HuggingChat: Ein Interface für die Nutzung von Open-Source LLMs",
          "Systemprompts sind ein wichtiger Teil im Prompt Engineering + Function Callin",
          "Prompt Engineering Basics: Semantic Association, strukturierte & Rollen-Prompts",
          "Prompt Engineering für LLMs: Einfache Strategien und Tricks",
          "Erstellung eigener Assistenten in HuggingChat.",
          "Groq: Open-Source LLMs mit schnellem LPU-Chip statt GPU nutzen",
          "Recap: das solltest du dir merken"
        ],
        "Function Calling, RAG und Vektordatenbanken mit Open-Source LLMs": [
          "Was wird in diesem Abschnitt behandelt?",
          "Was ist Function Calling bei LLMs",
          "Vektordatenbanken, Embedding-Modelle & Retrieval-Augmented Generation (RAG)",
          "Anything LLM installieren und einen lokalen Server einrichten",
          "Lokaler RAG-Chatbot mit Anything LLM & LM Studio",
          "Ollama & Llama 3 herunterladen, lokalen Server erstellen & verknüpfen",
          "Function Calling mit Llama 3 & Anything LLM (Internet durchsuchen)",
          "Function Calling, Daten zusammenfassen, speichern & Diagramme mit Python basteln",
          "Weitere Funktionen von Anything LLM und externe APIs",
          "UPDATE: Llama 3.1",
          "Recap: Das solltest du nicht vergessen!"
        ],
        "RAG-App optimieren: Tipps zur Datenvorbereitung": [
          "Tipps für bessere RAG-Apps: Firecrawl für deine Daten aus Webseiten",
          "Effizienteres RAG mit LlamaIndex & LlamaParse: Datenvorbereitung für PDFs & CSVs",
          "LlamaIndex bring einfaches LlamaParse"
        ],
        "Lokale KI-Agenten mit Open-Source LLMs": [
          "Was wird in diesem Abschnitt über KI-Agenten behandelt",
          "KI-Agenten: Definition und verfügbare Tools (auch Opensource Tools sind dabei)",
          "Flowise lokal mit Node.js: Opensource KI-Agenten (Installation von Node.js)",
          "Installation von Flowise mit Node.js",
          "Das Flowise-Interface: Einfacher als Langchain und LangGraph",
          "Überblick von einem lokalen Rag ChatBot mit Langchain",
          "Unser erster KI-Agent, der Python-Code und Documentationen erstellt",
          "KI-Agenten mit Function Calling, Internetzugriff und drei Experten",
          "Sagenhaft schnelle Inferenz mit der Groq-API",
          "Welchen KI-Agenten solltest du bauen & externes Hosting",
          "DeepSeek R1 Details im Überblick",
          "DeepSeek R1: Im Browser, Lokal und über API (Update)",
          "Rückblick: Das solltest du dir merken!"
        ],
        "Finetuning, GPUs mieten, Open-Source TTS, das BESTE LLM finden & weitere Tipps": [
          "Worum ght es in deisem Abschnitt?",
          "Text-to-Speech (TTS) mit Google Colab",
          "Finetuning von Open-Source LLMs mit Google Colab: Alpaca + Llama-3 8b, Unsloth",
          "GPU bei Runpod oder Massed Compute mieten, wenn der lokale PC nicht ausreicht",
          "Was ist das beste Open-Source LLM, das ich verwenden sollte?",
          "Rückblick: Das solltest du dir merken"
        ],
        "Datenschutz, Sicherheit und wie geht es weiter?": [
          "Worum geht es in diesem Abschnitt?",
          "Jailbreaks: Sicherheitsrisiken durch Angriffe auf LLMs mit Prompts",
          "Prompt Injections als Angriff auf Opensource LLMs",
          "Data Poisoning",
          "Datenschutz und Sicherheit: Sind deine Daten gefährdet?",
          "Ist die kommerzielle Nutzung und der Verkauf generierter Inhalte erlaubt?",
          "Mein Danke und wie geht es weiter",
          "Bonus"
        ]
      },
      "requirements": [
        "Keine Vorkenntnisse nötig, alles wird Schritt für Schritt gezeigt",
        "Es ist von Vorteil, einen PC mit einer guten Grafikkarte, 16 GB RAM und 6 GB VRAM zu haben (die Apple M Serie, Nvidia und AMD sind ideal), jedoch ist dies nicht zwingend erforderlich."
      ],
      "description": "ChatGPT ist gut und recht. Aber ist dir schon mal aufgefallen, dass es sehr viele Zensuren gibt, man in politische Richtungen gedrückt wird, teilweise harmlose Fragen nicht beantwortet werden und dass unsere Daten bei OpenAI eventuell nicht sicher sind?\nGenau hier können Open-Source LLMs wie Llama3, Mistral, Grok, Falkon, Phi3 und Command R+ helfen!\nBist du bereit, die Feinheiten von Open-Source LLMs zu meistern und ihr volles Potenzial für verschiedene Anwendungen zu nutzen, von Datenanalyse bis zur Erstellung von Chatbots und KI-Agenten? Dann ist dieser Kurs für dich!\nEinführung in Open-Source LLMs\nDieser Kurs bietet eine umfassende Einführung in die Welt der Open-Source LLMs. Du lernst die Unterschiede zwischen Open-Source und Closed-Source Modellen kennen und erfährst, warum Open-Source LLMs eine attraktive Alternative darstellen. Themen wie ChatGPT, Llama, und Mistral werden ausführlich behandelt. Außerdem wirst du lernen, welche LLMs es gibt und wie du die besten Modelle für deine Bedürfnisse auswählst. Ein besonderes Augenmerk liegt auf den Nachteilen von Closed-Source LLMs und den Vor- und Nachteilen von Open-Source LLMs wie Llama3 und Mistral.\nPraktische Anwendung von Open-Source LLMs\nDer Kurs zeigt dir den einfachsten Weg, Open-Source LLMs lokal auszuführen und was du dafür benötigst. Du erfährst alles über die Voraussetzungen, die Installation von LM Studio und alternative Methoden zum Betrieb von LLMs. Zudem wirst du lernen, wie du Open-Source-Modelle in LM Studio nutzt, den Unterschied zwischen zensierten und unzensierten LLMs verstehst und verschiedene Anwendungszwecke erkundest. Auch das Finetuning eines Open-Source-Modells mit Huggingface oder Google Colab sowie die Nutzung von Vision-Modellen zur Bilderkennung werden behandelt.\nPrompt Engineering und Cloud-Einsatz\nEin wichtiger Teil des Kurses ist das Prompt Engineering für Open-Source LLMs. Du wirst lernen, wie du HuggingChat als Interface nutzt, Systemprompts im Prompt Engineering einsetzt und grundlegende sowie fortgeschrittene Techniken des Prompt Engineerings anwendest. Der Kurs bietet dir auch Einblicke in die Erstellung eigener Assistenten in HuggingChat und die Nutzung von Open-Source LLMs mit schnellen LPU-Chips statt GPUs.\nFunction Calling, RAG und Vektordatenbanken\nErfahre, was Function Calling bei LLMs ist und wie du Vektordatenbanken, Embedding-Modelle und Retrieval-Augmented Generation (RAG) implementierst. Der Kurs zeigt dir, wie du Anything LLM installierst, einen lokalen Server einrichtest und einen RAG-Chatbot mit Anything LLM und LM Studio erstellst. Du wirst auch lernen, Function Calling mit Llama 3 und Anything LLM durchzuführen und Daten zusammenzufassen, zu speichern und mit Python zu visualisieren.\nOptimierung und KI-Agenten\nFür die Optimierung deiner RAG-Apps erhältst du Tipps zur Datenvorbereitung und effizienten Nutzung von Tools wie LlamaIndex und LlamaParse. Darüber hinaus wirst du in die Welt der KI-Agenten eingeführt. Du lernst, was KI-Agenten sind, welche Tools zur Verfügung stehen und wie du Flowise lokal mit Node.js installierst und nutzt. Der Kurs bietet dir auch praktische Einblicke in die Erstellung eines KI-Agenten, der Python-Code und Dokumentationen erstellt, sowie die Nutzung von Function Calling und Internetzugriff.\nWeitere Anwendungen und Tipps\nAbschließend bietet der Kurs eine Einführung in Text-to-Speech (TTS) mit Google Colab und das Finetuning von Open-Source LLMs mit Google Colab. Du erfährst, wie du GPUs bei Anbietern wie Runpod oder Massed Compute mietest, wenn dein lokaler PC nicht ausreicht. Zudem lernst du innovative Werkzeuge wie Microsoft Autogen und CrewAI kennen und wie du LangChain für die Entwicklung von KI-Agenten nutzt.\nNutze die transformative Kraft der Open-Source LLM-Technologie, um innovative Lösungen zu entwickeln und dein Verständnis ihrer vielfältigen Anwendungen zu erweitern. Melde dich noch heute an und beginne deine Reise, ein Experte in der Welt der großen Sprachmodelle zu werden!",
      "target_audience": [
        "An alle, die etwas neues lernen wollen und tief in die Opensource LLMs einblicken wollen",
        "An Unternehmer die effizienter werde wollen und Geld sparen möchten",
        "Entwickler, Programmierer und Technik-Interessierte",
        "Alle, die nicht die Restriktionen der Big-Tech-Unternehmen haben wollen und unzensierte KI verwenden möchten"
      ]
    },
    {
      "title": "Sıfırdan Her Yönüyle Big Data ( Büyük Veri ) Eğitimi",
      "url": "https://www.udemy.com/course/sifirdan-her-yonuyle-bigdata/",
      "bio": "Big Data ( Büyük Veri ) - Hadoop,HDFS,MapReduce,Pig,Hive - NoSQL,MongoDB,ElasticSearch - Spark ve Kafka hakkında herşey!",
      "objectives": [
        "Hadoop'un kullanım amacını ve mimarisi öğrenmiş olacaksınız",
        "HDFS ve MapReduce kavramlarını,farklarını ve kullanımlarını öğrenmiş olacaksınız",
        "Apache Pig ve Apache Hive teknolojileri ile Büyük Veri analizleri geliştirebilecek hale geleceksiniz",
        "Big Data analizlerinde çok kullanılan Cloudera ortamını kullanabileceksiniz",
        "NoSQL veritabanlarının çeşitlerini,mimarilerini,avantajlarını ve proje içinde kullanılmasını öğreneceksiniz",
        "MongoDB ve ElasticSearch veritabanlarının mimarilerini,hangi soruna çözüm ürettiklerini ve kodlamasını öğreneceksiniz",
        "Kafka mimarisini ve Kafka'yı Big Data projelerinde nasıl kullanıldığını göreceksiniz.",
        "Apache Spark,Spark SQL,Spark Streaming mimarilerini ve kodlamasını öğreneceksiniz",
        "Spark Teknolojileri sayesinde gerçek zamanlı Big Data analizleri yapabileceksiniz",
        "Eğitim boyunca oldukça fazla program yazacağımız için,eğitimden sonra algoritma yeteneğinizin bir hayli geliştiğini farkedeceksiniz",
        "Büyük Veri teknolojisini eğitim içeriğinde size verilecek olan büyük veri setlerine uygulayarak gerçek projeler yazacaksınız"
      ],
      "course_content": {
        "Big Data Giriş": [
          "Big Data Nedir ? Neden Big Data ?",
          "Big Data Ekosistemi (Kütüphaneleri)",
          "Eğitim Setine Özel Telegram Grubu Bilgilendirmesi"
        ],
        "Hadoop": [
          "Hadoop Nedir ?",
          "Hadoop Kurulum Çeşitleri ve Cloudera",
          "Cloudera HDFS Komutları"
        ],
        "Apache Pig": [
          "Apache Pig Nedir ?",
          "Apache Pig Örnekler",
          "Apache Pig Operatörleri",
          "Apache Pig Fonksiyonları",
          "Apache Pig Join ve Union İşlemleri",
          "Apache Pig Depolama İşlemleri",
          "Kodlama Ödevi - Apache Pig"
        ],
        "Apache Hive": [
          "Apache Hive Nedir ?",
          "Kodlama Ödevi - Apache Hive",
          "Hadoop Quiz"
        ],
        "MongoDB": [
          "MongoDB Nedir ?",
          "MongoDB Kurulum Notları",
          "MongoDB Kurulumu ve CRUD İşlemleri",
          "MongoDB Java Entegrasyonu",
          "MongoDB Quiz"
        ],
        "Elasticsearch": [
          "ElasticSearch Nedir ?",
          "ElasticSearch Kurulum Notları",
          "ElasticSearch Kurulumu",
          "ElasticSearch CRUD İşlemleri",
          "ElasticSearch Java Entegrasyonu",
          "ElasticSearch Java Index Api Kullanımı",
          "ElasticSearch Java Get Api Kullanımı",
          "ElasticSearch Java Search Api Kullanımı",
          "ElasticSearch Java Delete Api Kullanımı",
          "Elasticsearch Quiz"
        ],
        "Apache Kafka": [
          "Apache Kafka Nedir ?",
          "Apache Kafka Windows Kurulum Notları",
          "Apache Kafke ve Zookeeper Windows Kurulumları",
          "Apache Kafka Producer,Consumer ve Topic Kavramları",
          "Apache Kafka Java Entegrasyonu - Producer Yazma",
          "Apache Kafka Java Entegrasyonu - Consumer Yazma",
          "Apache Kafka Quiz"
        ],
        "Apache Spark": [
          "Apache Spark Nedir ?",
          "Spark Mimarisi",
          "Spark RDD Yapısı",
          "Spark Projesi Oluşturma - Intellij IDEA",
          "Spark RDD Veri Yükleme Aşamaları",
          "Spark RDD Transformation Yapısı (Map Methodu)",
          "Spark RDD Transformation Yapısı (Filter Methodu)",
          "Spark RDD Transformation Yapısı (FlatMap,MapPartitions,Distinct,Sample Methodu)",
          "Spark RDD Transformation Yapısı (PairRDD Methodu)",
          "Spark Lazy Evulation Kavramı",
          "Spark RDD Action Yapısı",
          "Dünya Kupası Analizi Yapıyoruz",
          "Dünya Kupası Analiz Sonuçlarını MongoDB'ye kaydediyoruz",
          "Apache Spark Quiz"
        ],
        "Apache Spark SQL": [
          "Spark SQL Giriş",
          "Spark Sql Json Multiline",
          "Spark Sql Filter Yapısı",
          "Spark Sql Group By Yapısı",
          "Spark Sql'de Sql Script Yazımı",
          "GlovalView ve TempView Kavramları",
          "Encoder Yapısı",
          "Spark ve Hadoop(Hdfs) Entegrasyonu - Okuma",
          "Spark ve Hadoop(Hdfs) Entegrasyonu - Analiz ve Yazma",
          "Spark Sql ile Çağrı Merkezi Analizi"
        ],
        "Apache Spark ile Anlık Veri Analizi (Real Time-Streaming)": [
          "Streaming Nedir ?",
          "Streaming Çeşitleri",
          "Spark Streaming ile Anlık Mesaj Analizi",
          "Mesaj Analiz Örneğinin Mimarisi",
          "Spark Streaming ile IoT Analizi",
          "Complete Mode & Update Mode",
          "Time Window (Zaman Grupları)",
          "Time Window ile Anlık Mesaj Analizi"
        ]
      },
      "requirements": [
        "Başlangıç seviyesinde bilgisayar kullanmayı bilmeleri ve öğrenme disiplinine sahip olmaları yeterlidir.",
        "Basit seviyede SQL bilgisi gereklidir."
      ],
      "description": "Sıfırdan Her Yönüyle Big Data teknolojilerini öğrenmenin tadını çıkarın.\nBu kursta sıfırdan Big Data'nın temellerini öğrenerek , ileri seviyelere kadar Big Data analizlerinin tüm güzelliklerini beraber görmeye başlayacağız. Eğer Big Data(Büyük Veri) hakkında hiçbir fikriniz yoksa bu kurs tam size göre!\n\nEğitimin Yapısı\n\nEğitim boyunca her bölümde;\nBölümlerde öğrendiğimiz bilgilerin kalıcı olması için kodlama egzersizlerimizi gerçekleştireceğiz.\nBölümlerdeki konuların hepsini kapsayan ödevlerimizi yapacağız.\nDaha önceden öğrendiğimiz bilgilerle projeler geliştireceğiz.\nAyrıca her konuyla ilgili  çalışma dokümanlarına sahip olacaksınız.\nEğitim İçeriği\nEğitim boyunca şu konuları öğrenmeye çalışacağız.\nBig Data ( Büyük Veri ) Ekosistemi\nHadoop, HDFS, MapReduce Mimarisi\nApache Pig ve Apache Hive kullanarak büyük veri analizleri\nCloudera ortamı\nNoSQL veritabanları\nMongoDB ve ElasticSearch mimarisi, kullanımı, projelere entegre edilmesi\nApache Kafka kullanımı\nApache Spark,Spark SQL ve Spark Streaming ile anlık veri analizleri\nEğitim seti sayesinde tanıştığımız arkadaşlar ile bir WhatsApp grubu oluşturduk. Big Data ile ilgili haberleri, makaleleri ve projeleri paylaşacağımız bu grupta tüm sorularınızı sorabilir, paylaşım yapabilirsiniz.\n\n\n\nBu eğitim seti yaşayan (canlı) bir eğitim setidir! Her hafta güncellenerek ve yeni konular, projeler eklenerek yaşamaya devam etmektedir.",
      "target_audience": [
        "Big Data ( Büyük Veri ) Ekosistemini öğrenmek ve bunu büyük ölçekte kullanmak,analiz etmek ve satmak isteyen yazılım meraklıları",
        "Hadoop,Spark ve NoSQL teknolojilerini merak eden veri analistleri ve veritabanı yöneticileri",
        "Bu eğitim herkesi acemi olarak kabul eder ve Big Data ( Büyük Veri ) , Hadoop, Spark, NoSQL , ElasticSearch , MongoDB , Kafka teknolojilerinin mimarisini ve kodlamasını öğretir"
      ]
    },
    {
      "title": "Agentic AI for Beginners: Build Smart AI Agents from Scratch",
      "url": "https://www.udemy.com/course/agentic-ai-for-beginners-build-smart-ai-agents-from-scratch/",
      "bio": "Agentic AI Made Simple: From Basics to Building Your First No-Code Agent",
      "objectives": [
        "Understand the fundamentals of Agentic AI and its real-world use cases.",
        "Build your first agent workflows using beginner-friendly tools.",
        "Integrate AI agents with APIs and automation platforms.",
        "Apply Agentic AI concepts to solve practical business or personal tasks."
      ],
      "course_content": {
        "Introduction": [
          "Introduction To Agentic AI"
        ],
        "Understanding Agentic AI": [
          "Checkpoint 1",
          "Evolution to Agentic AI",
          "Building Digital Worker : Agentic AI",
          "Checkoint 2",
          "Ai Strategist: Planning, Goal setting and Decision making in Agentic AI",
          "Level Up Quiz",
          "Understanding: How to build our first no code Ai Agent",
          "Milestone Quiz",
          "Building a Simple AI Research Agent using Flowise"
        ]
      },
      "requirements": [
        "No prior coding experience required (optional: basic Python helps).",
        "Interest in AI, automation, or future technology.",
        "A computer with internet access.",
        "Willingness to explore tools and experiment hands-on."
      ],
      "description": "Artificial Intelligence is evolving at lightning speed, and its most transformative frontier is Agentic AI—smart systems that don't just answer questions but can reason, plan, and take action to achieve goals. If you're ready to explore this exciting field, you're in the right place.\nThis beginner-friendly course is your step-by-step guide into the world of AI agents. We'll take you from the fundamental question of \"What is Agentic AI?\" to the practical skills needed to design and build your own autonomous \"Digital Workers\" from scratch, all without needing to write a single line of code.\nHere’s how we’ll guide you on your journey:\n\n\nPart 1: The Foundation (Introduction)\nWe begin by introducing you to the core concepts of Agentic AI. You’ll learn what makes it different from the AI you already know, why it represents a massive leap forward, and how it’s shaping the future of technology and automation.\n\n\nPart 2: Understanding and Building (Understanding Agentic AI)\nThis is where theory meets practice. We’ll dive deep into the building blocks of intelligent agents, exploring:\n\n\nThe Evolution: Discover how traditional AI evolved into the goal-oriented agents we see today.\nThe Mind of an Agent: Learn to think like an AI Strategist as we break down the mechanics of planning, goal-setting, and decision-making that allow an agent to operate autonomously.\nHands-On Creation: You'll move from concept to reality as you learn how to build your first no-code AI Agent. We’ll guide you through the process of creating a Simple AI Research Agent using intuitive tools like Flowise, making the process feel achievable and exciting.\nThroughout the course, interactive checkpoints and quizzes will ensure you are confidently building your skills, transforming abstract ideas into a concrete understanding.\nBy the end of this course, you won’t just know what Agentic AI is—you’ll understand how it works and have the practical, hands-on experience to start building your own smart agents immediately.",
      "target_audience": [
        "Beginners curious about Agentic AI and its real-world applications",
        "Students, entrepreneurs, and innovators exploring AI-driven problem-solving",
        "Tech enthusiasts wanting to build intelligent, autonomous AI systems",
        "Professionals seeking future-ready skills in AI without heavy coding"
      ]
    },
    {
      "title": "Web vs. Mobile: Comparing React Native and React.js",
      "url": "https://www.udemy.com/course/web-vs-mobile-development/",
      "bio": "Bridging the Gap: Understanding the Nuances Between Web and Mobile Development using ReactJS and React Native",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About Me"
        ],
        "Differences between React and React Native": [
          "Numbers",
          "Syntax",
          "Styles",
          "Navigation",
          "Development Environment",
          "Next Steps"
        ]
      },
      "requirements": [
        "No prior experience needed. We will cover basics of web and mobile development."
      ],
      "description": "In this comprehensive course, we delve into the intricate differences and synergies between web and mobile development utilizing ReactJS and React Native. Whether you're a seasoned developer seeking to broaden your skill set or a newcomer intrigued by the nuances of these frameworks, this course provides a deep dive into essential concepts.\n\n\nWe start by elucidating the fundamentals of ReactJS, exploring its syntax, component structure, and state management. With a solid understanding of ReactJS in place, we seamlessly transition into React Native, uncovering how it leverages native components to build robust mobile applications. We explore what is JSX and how it is used both in React and React Native, what are the main differences and similarities.\n\n\nThroughout the course, we dissect various aspects such as styling techniques tailored for web and mobile platforms, encompassing CSS for web and Flexbox for mobile. We tackle navigation paradigms, exploring the divergent approaches required for seamless user experiences across web browsers and mobile devices.\n\n\nMoreover, we examine the development environment, elucidating best practices for setting up development environments tailored for both web and mobile platforms.\n\n\nWhether you're crafting dynamic web applications or immersive mobile experiences, this course empowers you to navigate the unique challenges and opportunities inherent in both domains.",
      "target_audience": [
        "Web Developers Transitioning to Mobile",
        "Mobile Developers Exploring React",
        "Students and Beginners",
        "Freelancers and Entrepreneurs",
        "Tech Enthusiasts"
      ]
    },
    {
      "title": "AI and ML Mastery 2024 :Interview Question and Practice Test",
      "url": "https://www.udemy.com/course/ai-and-ml-mastery-2024-interview-question-and-practice-test-s/",
      "bio": "Master the Future: Unlock AI & ML Expertise with Premium Interview Insights & Hands-On Practice Tests .",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Welcome to our comprehensive \"Introduction to AI and ML\" course, where you'll embark on an illuminating exploration into the realms of Artificial Intelligence (AI) and Machine Learning (ML).\nCourse Highlights:\nOverview of AI and ML:\nUncover the essence of AI and ML, tracing their evolution and understanding their pivotal role in shaping the future.\nMachine Learning Fundamentals:\nDelve into the core of machine learning, exploring supervised and unsupervised learning, reinforcement learning, and the art of feature engineering.\nNeural Networks and Deep Learning:\nUnravel the intricacies of neural networks, from introductory concepts to deep learning architectures like CNNs and RNNs. Learn how to train models and apply transfer learning for efficiency.\nData Preprocessing and Model Evaluation:\nMaster the crucial steps of data preprocessing, ensuring your datasets are pristine. Dive into handling imbalanced data, cross-validation techniques, and evaluation metrics for effective model assessment.\nNLP and Computer Vision:\nImmerse yourself in the world of Natural Language Processing, learning text processing and analysis. Explore the wonders of Computer Vision, unraveling image recognition and processing.\nReal-world Applications and Ethical Considerations:\nWitness the impact of AI in healthcare and finance, understanding the ethical dimensions of AI development. Delve into discussions on bias, fairness, and ethical considerations.\nHands-On Coding and Projects:\nRoll up your sleeves for practical learning! Develop proficiency in Python for AI and ML, implement machine learning algorithms, and build neural networks using TensorFlow or PyTorch. Engage in real-world projects and case studies to apply your newfound knowledge.\nEmbark on this transformative journey, where theory meets practice, and emerge equipped with the skills and insights to navigate the dynamic landscape of AI and ML. Get ready to code, create, and contribute to the future of technology!",
      "target_audience": [
        "Those pursuing degrees in computer science, data science, engineering, or related fields seeking a comprehensive understanding of AI and ML.",
        "Individuals from diverse professional backgrounds looking to transition into roles involving artificial intelligence and machine learning.",
        "Anyone passionate about AI and ML, irrespective of their educational or professional background, seeking to deepen their knowledge and skills.",
        "Programmers and developers interested in expanding their expertise to include AI and ML applications in their projects.",
        "Data professionals aiming to enhance their machine learning skills, explore deep learning concepts, and stay updated on industry practices.",
        "Individuals preparing for AI and ML-related job interviews, seeking a curated set of premium interview questions and practical tests.",
        "Business professionals and entrepreneurs aiming to understand how AI and ML can be applied to enhance decision-making and innovate within their industries.",
        "Individuals with a general curiosity about artificial intelligence and machine learning, irrespective of their background, eager to explore and understand the technology shaping our future."
      ]
    },
    {
      "title": "Obstacle Avoidance Robot using Raspberry pi pico",
      "url": "https://www.udemy.com/course/obstacle-avoidance-robot-using-raspberry-pi-pico/",
      "bio": "Obstacle Avoidance Robot using Micro Python and block Programming",
      "objectives": [
        "How to interface Geared DC motors to Raspberry pi pico",
        "How to Program the Raspberry pi pico board",
        "How to Use Block programming for Raspberry pico",
        "How to use the L298N Motor driver with Raspberry pi pico"
      ],
      "course_content": {},
      "requirements": [
        "Basic Python Programming"
      ],
      "description": "The \"Obstacle Avoidance Robot\" course is an in-depth exploration into the world of robotics, focusing on the design and implementation of autonomous robots capable of navigating complex environments. This course is tailored for students who are interested in robotics, artificial intelligence, and embedded systems, providing a solid foundation in both the theoretical and practical aspects of robot navigation.\nThroughout the course, students will engage in hands-on projects that involve designing, building, and programming robots equipped with sensors to detect and avoid obstacles. We shall also be building some basic projects as we progress towards building the obstacle avoidance robot, like Automated barrier system, Christmas Light, Traffic Light etc.\nThe curriculum covers essential topics such as sensor integration, including ultrasonic sensor to enable the robot to perceive its surroundings accurately. Students will also delve into algorithm development for obstacle detection and avoidance, learning how to implement navigation techniques, we shall also explore the use of L298N Motor driver for speed control of geared DC (direct current) motors.\nIn addition to technical skills, the course emphasizes problem-solving and critical thinking, challenging students to troubleshoot and optimize their robot's performance in real-time. By the end of the course, students will have a comprehensive understanding of how to create robots that can autonomously navigate dynamic environments, making them well-prepared for advanced studies or careers in robotics, automation, and AI-driven technologies.",
      "target_audience": [
        "Tech Enthusiast",
        "Persons interested in Robotics"
      ]
    },
    {
      "title": "ADS - Análise e Desenvolvimento de Sistemas (2025)",
      "url": "https://www.udemy.com/course/formacao-analistadesenvolvedor-de-sistemas-para-iniciantes/",
      "bio": "ADS - Análise e Desenvolvimento de Sistemas.",
      "objectives": [
        "Aprenderá sobre Desenvolvimento de Software;",
        "Aprenderá sobre Análise de Sistemas;",
        "Aprenderá sobre Infraestrutura de TI;",
        "Aprenderá sobre Engenharia de Software;",
        "Aprenderá sobre Gestão da Tecnologia da Informação;",
        "Aprenderá sobre Análise de Riscos;",
        "Aprenderá sobre Análise de Dados e Informações;",
        "Aprenderá sobre Inovações Tecnológicas;",
        "Aprenderá sobre Machine Learning;",
        "Aprenderá sobre Indústria 4.0;",
        "Aprenderá sobre KPI e Indicadores da Gestão de TI/Software;",
        "Aprenderá sobre Backlog do Produto e SCRUM;",
        "Aprenderá sobre ChatGPT;",
        "Aprenderá sobre DevOps e DevSecOps;"
      ],
      "course_content": {},
      "requirements": [
        "Vontade de aprender."
      ],
      "description": "Análise e Desenvolvimento de Sistemas é a atividade que tem como finalidade a realização de estudos de processos a fim de encontrar o melhor caminho racional para que a informação possa ser processada. Os analistas de sistemas estudam os diversos sistemas existentes entre hardwares (equipamentos), softwares (programas) e o usuário final.\nOs seus comportamentos e aplicações são desenvolvidos a partir de soluções que serão padronizadas e transcritas da forma que o computador possa executar.\nOs profissionais da área geram softwares (programas), que são executados em hardwares (equipamentos) operados por usuários (indivíduos), preparados e treinados em procedimentos operacionais padronizados, dotados de conhecimentos do software e hardware para seu trabalho. A partir de então a análise de sistemas é uma profissão cujas responsabilidades concentram-se na análise do sistema e na administração de sistemas computacionais. Cabe a este profissional parte da organização, implantação e manutenção de aplicativos e redes de computadores, ou seja, o analista de sistemas é o responsável pelo levantamento de informações sobre uma empresa a fim de utilizá-las no desenvolvimento de um sistema para a mesma ou para o levantamento de uma necessidade específica do cliente para desenvolver este programa específico com base nas informações colhidas.\n\n\nPontos de atenção:\nNeste curso você também pode fazer o download de todos os materiais utilizados nas aulas.\nEm caso de dúvidas ao longo do curso, peço que deixe mensagens no chat aqui da plataforma, pois em 24h consigo te responder e ajudar!\nBons estudos e muito sucesso em sua trajetória!",
      "target_audience": [
        "Analistas, estudantes, desenvolvedores e TODOS com vontade de aprender."
      ]
    },
    {
      "title": "Playwright Custom HTML Report - Build & Release NPM package",
      "url": "https://www.udemy.com/course/playwright-custom-html-report-build-release-npm-package/",
      "bio": "playwright, npm",
      "objectives": [
        "Build and Publish an NPM Package – Learn how to create, configure, and release an npm package using TypeScript and tsup.",
        "Leverage Playwright for Custom HTML Reports – Utilize Playwright’s reporting features to generate detailed HTML test reports.",
        "Design and Enhance Test Reports with Handlebars.js – Build a dynamic UI to display test results using Handlebars and vanilla JavaScript.",
        "Automate and Streamline the Release Process – Understand versioning, packaging, and publishing best practices for a smooth npm release."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project setup with tsup",
          "How to utilize Playwright Reporter?"
        ],
        "Building the UI": [
          "How to get test results",
          "Generate HTML report",
          "How to create dashboard"
        ],
        "How to get user custom data?": [
          "Set user info to the report",
          "How to group tests & suites"
        ],
        "Designing the HTML reporter": [
          "Build UI to show suites & tests",
          "Display test list",
          "Handlebar JSON helper",
          "Design test details"
        ],
        "Publishing npm package": [
          "Prepare for release",
          "Release NPM Package"
        ]
      },
      "requirements": [
        "Basic JS/TS knowledge",
        "familiarity with Playwright (Optional)"
      ],
      "description": "Master NPM Package Development and Playwright Custom Reports\nAre you a Test Automation Engineer or a JavaScript/TypeScript Developer looking to build and publish your own npm package? Do you want to customize Playwright test reports and make them visually insightful? If so, this course is for you!\nIn this hands-on course, you’ll learn how to build, package, and release an npm library while using Playwright’s custom HTML reporting as a real-world example. Whether you're an automation tester looking to enhance your reports or a developer aiming to publish your first npm package, this course provides practical, step-by-step guidance.\nWhat You Will Learn\nCreate and set up an npm package using TypeScript and tsup\nLeverage Playwright's reporting API to extract and format test results\nUse Handlebars.js to dynamically generate and customize HTML reports\nDesign a dashboard to display test suites, cases, and execution details\nGroup and filter test results to improve report clarity\nPrepare and publish your package to npm, following best practices\nAutomate versioning and releases for a seamless workflow\nWho Should Take This Course?\nTest Automation Engineers looking to enhance Playwright reports\nJavaScript/TypeScript Developers interested in publishing npm packages\nQA Engineers who want to build custom reporting solutions\nOpen-source enthusiasts eager to contribute to the npm ecosystem\nThis course is beginner-friendly, but some knowledge of JavaScript/TypeScript and Playwright will be helpful.\nBy the end of this course, you'll have a fully functional npm package that generates beautiful, customizable HTML reports—and you'll be ready to publish your own libraries to the world!",
      "target_audience": [
        "Test Automation Engineers",
        "JS/TS Developers"
      ]
    },
    {
      "title": "AWS Cloud Development Kit (CDK) Explained for Beginners",
      "url": "https://www.udemy.com/course/aws-cloud-development-kit-cdk-explained-for-beginners/",
      "bio": "Learn what is the AWS CDK, its core components and witness the true power of the AWS CDK",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic understanding on AWS and its services",
        "Basic understanding of programming languages",
        "No knowledge of AWS CDK or IaC required"
      ],
      "description": "If you are interested in the AWS CDK, this course is ideal for learning about the AWS CDK in a way which makes sense.\nThe main goals of this course are to explain what is the AWS Cloud Development kit, what it brings to the table that has been previously lacking in other solutions and how to use the AWS CDK through hands-on practice. Other beginner courses focus very heavily on setting up basic infrastructure and teaching the core components - but fail at communicating the true power of the AWS CDK. This leaves it to beginners to spend a lot more time using the AWS CDK to understand its true value and decide whether it is the right tool for their use case. This course puts the value and power of the AWS CDK at the centre of the stage.\n\nThis course will:\n- Explain how the AWS CDK sits within the current IaC landscape.\n- Explain what is the AWS CDK, its core components like App, Stacks and Constructs\n- Demo the creation of a static website in less than 10 lines of code\n- Demo the creation of a serverless web service\n- Demo the power of aspects for tagging, monitoring and AWS best practices",
      "target_audience": [
        "Cloud Architects interested in leveraging AWS CDK",
        "Platform Engineers interested in AWS CDK",
        "Terraform/CloudFormation/Pulumi users interested in AWS CDK",
        "Application developers interested in AWS CDK"
      ]
    },
    {
      "title": "Agile for Engineers:Practical Frameworks for Team & Projects",
      "url": "https://www.udemy.com/course/agile-methodology-frameworks-tools-and-leadership/",
      "bio": "Deliver faster, collaborate better, and lead professional Agile projects with confidence—Scrum, Kanban",
      "objectives": [
        "By the end of this course, you will be able to: Understand Agile principles and how they apply in real-world settings",
        "Use Scrum and Kanban frameworks effectively Lead Agile ceremonies and foster team collaboration",
        "Estimate work using story points and manage the product backlog. Apply Extreme Programming (XP) and Feature-Driven Development (FDD) techniques",
        "Manage Agile delivery at scale through ceremonies like Scrum of Scrums .Solve delivery problems using structured Agile problem-solving",
        "Lead teams with an Agile mindset focused on value, feedback, and adaptability. Develop Emotional Intelligence in agile leadership"
      ],
      "course_content": {},
      "requirements": [
        "No prior Agile experience required. A basic understanding of team workflows or project delivery is helpful. Curiosity and willingness to adopt new ways of working"
      ],
      "description": "By the end, you will be able to lead agile projects with confidence and agility\nTake the steps towards Agile Certification to empower your career.\nThis comprehensive course dives deep into professional Agile methodology—what it is, how it works, and how to apply it across software, automotive, engineering, and hybrid environments. Designed for professionals and teams seeking real-world application, this course is your practical guide to navigating and mastering Agile delivery.\nYou’ll explore key frameworks like:\n· Scrum – Sprint planning, daily stand-ups, retrospectives, and team roles\n· Kanban – Visual workflows, WIP limits, and lean operations\n· Extreme Programming (XP) – Technical excellence with TDD, CI, and pair programming\n· Feature-Driven Development (FDD) – Client-centric delivery with structured modeling\n· In addition to frameworks, you’ll learn how to:\n· Plan and prioritize effectively using story points and product backlogs\n· Facilitate essential Agile ceremonies for alignment and visibility\n· Lead retrospectives to drive continuous improvement\n· Use Kanban boards and sprint tools for transparent workflow tracking\n· Solve problems methodically and prevent recurrence using methods learned on this course\n· Develop the mindset and behaviours of an Agile leader by enhancing your emotional intelligence\n•True Agile leadership demands high emotional intelligence; learn how to develop it.\n· Whether you're a project manager, developer, engineer, or functional lead, this course equips you with the tools, techniques, and confidence to implement Agile in any team or organization.",
      "target_audience": [
        "Engineers, leaders and project managers"
      ]
    },
    {
      "title": "Distributed System Intro in Arabic (النظم الموزعه بالعربية)",
      "url": "https://www.udemy.com/course/distributed-system-design-in-arabic/",
      "bio": "مقدمة لكيفية بناء النظم الموزعة",
      "objectives": [
        "؟؟ Distributed Systems يعني إيه نظم موزعه أو ما تعرف بإسم",
        "كيفية بناء نظام يخدم ملايين المستخدمين",
        "كيف تقوم ببناء خدمة عالمية",
        "Distributed Systems Foundation"
      ],
      "course_content": {},
      "requirements": [
        "هذا الكورس مخصص فقط لمن يمتلكوا خبرة فعلية عملية في مجال صناعة البرمجيات لمدة سنة على الأقل"
      ],
      "description": "عمرك في يوم سألت نفسك يعني إيه نظم موزعه؟\nطب ازاي حاجة زي الفيسبوك و امازون بيخدموا عشرات و أحياناً مئات من الملايين من العملاء بشكل يومي بدون أي مشاكل؟!\nطب يا تري ازاي نظام زي نظام الحجز في شركة بوكينج شغال بالتعقيد دة و بيتعامل مع فنادق موزعه على وش الكوكب كله مش بس بدون أي مشاكل، لأ، و كمان المستخدم معزول تماماً من التعقيد دة؟\n\n\nالكورس دة، واللي بالمناسبة هو الوحيد من نوعه باللغة العربية واللهجة المصرية، هيخدك في السكة ديه من أولها.\n\n\nالكورس دة لمين؟\n1- لو إنت شخص عايز يفهم يعني إيه نظم موزعة\n2- إنت شخص مسئول عن بناء نظام متوقع إنه يخدم على الأقل الالاف من العملاء في كل ثانية.\n3- إنت شخص عندك فضول علمي تعرف النظم ديه بتتبني ازاي و مكوناتها إيه؟\n\n\nطب هنتعلم إيه في الكورس دة؟!\nالكورس دة بيعتبر مدخل لتصميم النظم الموزعة. هيخدك من الصفر و يحطك على الطريق اللي تبقي عارف من خلاله ازاي حاجة زي الفيسبوك أو يوتيوب اتبني\nهنتعلم الأتي:\n1- يعني إيه نظام موزع؟ يعني إيه نظام أصلاً؟\n2- إيه مكونات النظام الموزع؟\n3- ازاي المكونات ديه بتشتغل مع بعضها؟\n4- إيه أنواع الأنماط المستخدمة في بناء أي نظام موزع و بتتعمل ازاي؟\n5- الخريطة الشخصية لمحمد مشرف في بناء أي نظام موزع\n6- أمثلة لبناء انظمه موزعه مثل بوكينج و غيرهم",
      "target_audience": [
        "المبرمجين الذين يمتلكون خبرة عملية و يوجد لديهم رغبة في تنميتها."
      ]
    },
    {
      "title": "Aprenda Programação de CLP na Prática",
      "url": "https://www.udemy.com/course/aprenda-programacao-de-clp-na-pratica/",
      "bio": "Curso de programação dos Softwares Logo! Soft ConfortV8 Siemens e Millenium 3 da Crouzet - Aprenda na prática!",
      "objectives": [
        "Programar qualquer CLP nas linguagens FBD e Ladder",
        "Ao final deste curso o aluno será capaz de programar qualquer Programa nas linguagens FBD e Ladder compreendendo por maios da lógica combinacional.",
        "Entender as falhas na confecção do diagrama.",
        "Realizar ajustes e migração entre dois CLPs."
      ],
      "course_content": {
        "Introdução ao Curso de CLPs": [
          "Apresentação do Curso",
          "História da Automação",
          "Linguagem de Programação",
          "Instalação de Softwares"
        ],
        "Função e Porta Lógica": [
          "Função e Porta Lógica E (AND)",
          "Função e Porta Lógica OU (OR)",
          "Função e Porta Lógica NÃO (NOT)",
          "Função e Porta Lógica NÃO E (NAND)",
          "Função e Porta Lógica NÃO OU (NOR)",
          "Função e Porta Lógica OU EXCLUSIVA (XOR)",
          "Funções e Portas Lógicas"
        ],
        "Ligações, Contatos e Comandos Básicos": [
          "Ligações e Contatos Elétricos",
          "Comandos Básicos Contato Selo",
          "Selo Logo! Confort Siemens",
          "Selo Millenium3 Crouzet",
          "Set/Reset Logo! Confort Siemens",
          "Set/Reset Millenium3 Crouzet",
          "Bordas Subida/Descida Logo! Confort Siemens",
          "Bordas Subida/Descida Millenium3 Crouzet",
          "Temporizadores Logo! Confort Siemens",
          "Temporizadores Millenium3 Crouzet",
          "Contadores Logo! Confort Siemens",
          "Contadores Millenium Crouzet"
        ],
        "Programação Crouzet CLP Millenium3": [
          "Seja bem-vindo a mais uma seção do curso",
          "Bomba de Sucção",
          "Partida Motor Reversão",
          "Alternância Motor Temporizada",
          "Partida Motor Estrela Triângulo",
          "Partida Motor Reversão Automática",
          "Estacionamento",
          "Nível Reservatório"
        ],
        "Programação Logo! Confort Siemens": [
          "Bomba de Sucção",
          "Partida de Motor com Reversão",
          "Alternância Temporizada de Motor",
          "Partida Estrela Triângulo",
          "Partida Motor com Reversão Automática",
          "Estacionamento",
          "Nível Reservatório"
        ],
        "Introdução ao Factory IO": [
          "Introdução e instalação do Factory IO",
          "Control IO",
          "Componetes-Control",
          "Bloco Aritmético",
          "Bloco-Contadores",
          "Bloco-Extra",
          "Bloco-Logico1",
          "Bloco-ROL",
          "Bloco-Logico2",
          "Bloco-Logico3",
          "Bloco Temporizador"
        ],
        "Lógica combinacional FBD com Control IO no Factory IO": [
          "Esteira transportadora, botoes e chave",
          "Esteira transportadora, sensores",
          "Esteira transportadora, sensor e barreira",
          "Esteira transportadora, sensor e pivot",
          "Separador de Caixas 1",
          "Separador de Caixas 2",
          "Separador de Caixas 3"
        ],
        "Conversão Linguagem FBD para linguagem Ladder": [
          "Esteira transportadora, botões e chaves - Ladder",
          "Pare e Segue - Ladder Siemens",
          "Separador de Caixas 1 - Ladder Siemens",
          "Separador de Caixas 2 - Ladder Siemens",
          "Separador de Caixas 3 - Ladder Siemens",
          "Separador de Caixas 1 - Sem bloco Set/Reset",
          "Separador de Caixas 2 - Sem Bloco Set/Reset",
          "Separador de Caixas 3 - Sem Bloco Set/Reset"
        ],
        "Trabalhando com CodeSys": [
          "CodeSys Introdução e Instalação",
          "Cena1 CodeSys",
          "Análise de Circuitos - Parte 1",
          "Análise de Circuitos - Parte 2",
          "Análise de Circuitos - Parte 3"
        ]
      },
      "requirements": [
        "Equipamentos necessários para fazer o curso:",
        "Um notebook ou desktop é o suficiente para aprender a programação, não sendo necessária a aquisição de um CLP."
      ],
      "description": "Tenha desconto inserindo o código: PROMOCAO1 você paga  R$ 22,90 pelo curso!\nPromoção válida até 2 de fevereiro 2022\n\n\nAprenda Programação de CLP na Prática é um curso pensando em você que busca um conteúdo nacional e de qualidade. Essa edição do curso visa atender principalmente ao público iniciante onde procuro minimizar temas que encontramos aos milhares na internet, e, invisto naquilo que tenho sentido falta no mercado quando se trata do ensino da programação de controladores lógicos programáveis, detalhes e práticas.\nA ideia inicial é fazer uma miscelânea entre os softwares da Siemens e da Crouzet, em especial o software Millenium 3 e o Logo! Soft Confort V8. No final, na ultima seção, eu quero trazer o CodeSys para fechar o curso. Assim, correremos três software em duas linguagens distintas. A ideia é pensar fora da caixinha, utilizando a mesma linguagem em softwares diferentes e até mesmo, trabalhar duas linguagens de três maneiras diferentes.  Trabalhar esses três softwares abre um caminho mais amplo para o desenvolvimento da programação de outros CLPs. Esta é a proposta do curso e nada melhor do que trabalhar na prática.\nNão tenho pretensão de tratar dos comandos elétricos, prefiro deixar para outra ocasião em outro curso. Aqui vou focar a programação nos softwares citados, procurando passar de forma muito didática a ponto do menos experiente na área conseguir assimilar muito bem o conteúdo aplicado.\nSeja muito bem vindo ao curso e ótimos estudos!",
      "target_audience": [
        "Profissionais de automação e alunos dos cursos técnicos e profissionalizantes",
        "Este curso é direcionado a todos os alunos dos cursos profissionalizantes e técnicos e todos os profissionais da área de automação, industrial ou residencial."
      ]
    },
    {
      "title": "Automotive SPICE® Software Processes (SWE.1–SWE.6, PAM 4.0)",
      "url": "https://www.udemy.com/course/automotive-spice-software-processes-swe1swe6-pam-40/",
      "bio": "Principal Assessor teaches ASPICE SWE.1-SWE.6",
      "objectives": [
        "Identify the motivation behind each Automotive SPICE® software process (SWE.1–SWE.6).",
        "Explain the official purpose and outcomes as stated in the ASPICE model documentation.",
        "Describe the required information items and typical artifacts for each software process.",
        "Outline the base practices for each software process and explain their significance in assessments."
      ],
      "course_content": {
        "SWE.1 Software Requirements Analysis": [
          "Benefits and Motivation of SWE.1",
          "Purpose of SWE.1 explained",
          "The outcomes of SWE.1 explained",
          "The information items of SWE.1 and typical work products",
          "The base practices of SWE.1 explained in detail"
        ],
        "SWE.2 Software Architectural Design": [
          "Benefits and Motivation of SWE.2",
          "Purpose of SWE.2 explained",
          "The outcomes of SWE.2 explained",
          "Information items and typical work products of SWE.2",
          "The base practices of SWE.2 explained in detail"
        ],
        "SWE.3 Software Detailed Design and Unit Construction": [
          "Benefits and Motivation of SWE.3",
          "Purpose of SWE.3 explained",
          "The outcomes of SWE.3 explained",
          "Information items and typical work products of SWE.3",
          "The base practices of SWE.3 explained in detail"
        ],
        "SWE.4 Software Unit Verification": [
          "Benefits and Motivation of SWE.4",
          "Purpose of SWE.4 explained",
          "The outcomes of SWE.4 explained",
          "Information items and typical work products of SWE.4",
          "The base practices of SWE.4 explained in detail"
        ],
        "SWE.5 Software Component Verification and Integration Verification": [
          "Benefits and Motivation of SWE.5",
          "Purpose of SWE.5 explained",
          "The outcomes of SWE.5 explained",
          "Information items and typical work products of SWE.5",
          "The base practices of SWE.5 explained in detail"
        ],
        "SWE.6 Software Verification": [
          "Benefits and Motivation of SWE.6",
          "Purpose of SWE.6 explained",
          "The outcomes of SWE.6 explained",
          "Information items and typical work products of SWE.6",
          "The base practices of SWE.6 explained in detail"
        ]
      },
      "requirements": [
        "No prior Automotive SPICE® knowledge required. Basic familiarity with software development or project work is helpful but not mandatory. All key concepts are introduced step by step."
      ],
      "description": "This course is your comprehensive introduction to Automotive SPICE® software processes SWE.1-SWE.6, the essential backbone for systems engineering in the automotive industry. Taught by a certified Principal Assessor with over 20 years of hands-on automotive project and assessment experience, you’ll receive expert-level guidance on the benefits, purpose, expected outcomes, required information items, and base practices for each key process—always with actionable advice and practical, real-world examples.\nYou will learn step-by-step:\nThe real benefits of ASPICE system processes for project quality and efficiency\nThe underlying purpose and strategic intent of each SWE process\nHow process outcomes and assessment criteria are defined and evaluated\nWhich information items and documentation are needed and how to efficiently develop them\nClear explanations for every base practice, with actionable industry tips and typical implementation patterns\nEach system process - Software Requirements Analysis (SWE.1), Software Architectural Design (SWE.2), Software Detailed Design and Unit Construction (SWE.3), Software Unit Verification (SWE.4), Software Integration and Integration Verification (SWE.5), and Software Verification (SWE.6) - is taught in-depth, covering process structure, terminology, essential work products, and implementation nuances. You will gain direct, practical guidance for daily project work and long-term process improvement efforts.\nThis course is ideal for quality managers, assessors, systems engineers, project managers, or anyone looking to build robust ASPICE competence. You will benefit from first-hand expertise, clear examples from real automotive projects, and implementation strategies that can be put into practice immediately.\nAfter completing this course, you will be able to:\nUnderstand the structure and intent of ASPICE SWE.1-SWE.6\nIdentify, adapt, and implement core process requirements and documentation\nApply base practices confidently in automotive systems projects\nStrengthen quality, reliability, and compliance in your organization using proven ASPICE system process methods",
      "target_audience": [
        "Quality managers, process engineers, assessors, software developers, and project managers in the automotive industry who want to understand and apply Automotive SPICE® software processes (SWE.1–SWE.6), regardless of prior ASPICE knowledge."
      ]
    },
    {
      "title": "Airline Booking System React .NET 6, Auth0",
      "url": "https://www.udemy.com/course/airline-booking-system-react-net-6-auth0/",
      "bio": "Full Stack React, .NET 6, Distributed, Microservices, Auth0",
      "objectives": [
        "C# Programming",
        "Object-Oriented Programming",
        "Class Design",
        "Abstraction",
        "Encapsulation",
        "Inheritance",
        "Interfaces",
        "Polymorphism"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Architecture"
        ],
        "Airline Booking System .NET 6 Microservice": [
          "Clean Architecture Solution Structure",
          "Airline Booking System Domain",
          "Airline Booking System Application",
          "Airline Booking System IoC Container",
          "Airline Booking System Api"
        ],
        "Airline Booking System React App": [
          "Creating the React App",
          "Folder Structure",
          "Styles",
          "Service Layer",
          "Search Flights Form",
          "Flight List Form",
          "Booking Form"
        ],
        "Auth0 Authentication and Authorization Platform": [
          "Setup Auth0 Account",
          "Create Auth0 Api App",
          "Create Auth0 React App",
          "Integrate and Secure .NET 6 Api with Auth0",
          "Integrate and Secure React App with Auth0"
        ]
      },
      "requirements": [
        "Basic programming knowledge",
        "Beginner level C# experience"
      ],
      "description": "Welcome to our comprehensive course on building a cutting-edge airline booking system from scratch! In this course, we dive deep into the world of full-stack development, leveraging the power of React.js, .NET 6, Auth0, and microservices architecture.\nAirline booking systems are complex, handling millions of transactions and interactions daily. With React.js, we'll craft a sleek and responsive user interface that ensures a seamless booking experience for users across devices. React.js's component-based architecture allows for modular development, making it perfect for building dynamic and interactive interfaces.\n.NET 6, with its robust framework and performance enhancements, serves as the backbone of our backend infrastructure. We'll harness its capabilities to develop scalable and efficient APIs, manage data persistence, and handle authentication and authorization securely.\nEmbracing microservices architecture, we'll design our system as a collection of loosely coupled, independently deployable services. This approach enhances scalability, resilience, and maintainability, empowering us to build a robust and adaptable airline booking platform.\nWhether you're a seasoned developer looking to expand your skill set or a newcomer eager to delve into full-stack development, this course equips you with the knowledge and tools needed to create sophisticated airline booking systems that meet the demands of today's digital landscape.\nLet's embark on this exciting journey together and unlock the potential of full-stack development with React.js, .NET 6, and microservices!",
      "target_audience": [
        "Students",
        "Professionals",
        "Software Engineers",
        "Architects"
      ]
    },
    {
      "title": "Visual Paradigm Essential",
      "url": "https://www.udemy.com/course/visual-paradigm-essential/",
      "bio": "Learn all essential skills of software design and modeling including, UML, BPMN and SysML with Visual Paradigm.",
      "objectives": [],
      "course_content": {
        "Introduction to Visual Paradigm": [
          "What is Visual Paradigm?",
          "Installation and Licensing"
        ],
        "Diagramming": [
          "User Interface Walk-through",
          "Drawing Diagram",
          "Resource-Centric Interface",
          "Using Connectors",
          "Making Better Look Diagrams"
        ],
        "Notations & Standards": [
          "Introduction to BPMN",
          "Introduction to UML (Part 1)",
          "Introduction to UML (Part 2)",
          "Introduction to UeXceler",
          "Beyond Standard Notations"
        ],
        "Understanding Model & View Concept": [
          "Model Repository",
          "Understanding the Concept of View",
          "Master View"
        ],
        "Keep and Share Projects": [
          "Central Repository - VPository",
          "Working with VPository",
          "Keeping Files with VPository",
          "Getting Comments from Stakeholders"
        ],
        "Generating Documentation": [
          "Generating Specification",
          "Compose Your Own Documentation",
          "Output Project to Web Contents"
        ],
        "Other Features": [
          "Export Diagrams to Image",
          "Import Legacy Design",
          "Printing Diagrams",
          "Managing Glossary"
        ]
      },
      "requirements": [
        "Basic software development concept",
        "PC or OSX or Linux"
      ],
      "description": "Visual Paradigm Essential is an introductory course that is tailor-made for software development teams who want to design and build high quality software with Visual Paradigm. There are altogether 27 lectures throughout the training with more than 5-hour quality videos with user-friendly contents. All lectures embraces clear voice-over as well as demonstrations to walk you through different tools with you step by step. We are sure you can master different skills with ease and will have learned most key features in Visual Paradigm after attending the lectures.\n\nThe lectures cover wide range of contents. Firstly, you will start by an overview of Visual Paradigm, different editions and licensing, installation methods as well as its user interface. After gaining a better knowledge about Visual Paradigm, you can then jump into learning ways to draw different types of diagrams. In addition, this course also covers basic introduction to BPMN, UML and UeXceler (Agile requirements capturing approach). Last but not least, the training teaches important Visual Paradigm features, like Teamwork with VPository, import project, export images and managing glossary as well. This is very helpful because you might come across with it every day.\n\nOnce you have completed this online training, you will be confident with using Visual Paradigm to design IT software system and collaborate with other team members comfortably.",
      "target_audience": [
        "Software developer",
        "System analysts",
        "Project manager"
      ]
    },
    {
      "title": "Diseño de Sistemas a Gran Escala y Arquitectura de Software",
      "url": "https://www.udemy.com/course/diseno-de-sistemas-a-gran-escala-y-arquitectura-de-software/",
      "bio": "Llega a arquitecto o a líder técnico aprendiendo diseño de sistemas escalables y arquitectura de software.",
      "objectives": [
        "Atributos de un sistema software a gran escala.",
        "Diseñar sistemas con alta escalabilidad, disponibilidad y fiabilidad.",
        "Diseñar sistemas que soporten decenas de millones de usuarios concurrentes.",
        "Prepararte para entrevistas de diseño de sistemas (system design).",
        "Patrones de Arquitectura Software. Arquitecturas multilayer y multitier, Microservicios, CQRS y Event Sourcing."
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso",
          "Rendimiento",
          "Escalabilidad",
          "Fiabilidad",
          "Mantenibilidad"
        ],
        "Conceptos Clave en el Diseño de Sistemas a Gran Escala": [
          "Introducción a los Conceptos Clave",
          "Load Balancer (Balanceador de Carga)",
          "API Gateway",
          "Message Brokers (Brokers de Mensajería)",
          "Caché",
          "CDN - Content Delivery Network (Red de Distribución de Contenido)",
          "Data Centers"
        ],
        "Almacenamiento de Datos a Gran Escala": [
          "Introducción al Almacenamiento de Datos",
          "Bases de Datos Relacionales vs NoSQL",
          "Índices y Desnormalización",
          "Replicación de Datos",
          "Sharding (Particionado de Bases de Datos)",
          "Teorema CAP"
        ],
        "Patrones de Arquitectura Software": [
          "Introducción a Patrones de Arquitectura de Software",
          "Arquitecturas multilayer y multitier",
          "Microservicios",
          "CQRS y Event Sourcing"
        ],
        "Ejercicios Prácticos": [
          "Introducción a los ejercicios prácticos",
          "Diseño de un Acortador de URLs (tinyurl)",
          "Diseño de un Sistema de Chat (WhatsApp, Telegram, FB Messenger)",
          "Diseño de un E-Commerce (Amazon, Ebay)",
          "Diseño de una Red Social de Mensajes Cortos (Twitter / X)",
          "Diseño de una app de Taxis (Uber, Lyft)",
          "Diseño de un Web Crawler",
          "Diseño de Google Drive"
        ],
        "Conclusión": [
          "Conclusión del Curso"
        ],
        "BONUS - Continúa Aprendiendo": [
          "Bonus - Continúa Aprendiendo"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación y diseño de software."
      ],
      "description": "Como programadores, muchas veces nos centramos demasiado en las funcionalidades de nuestro sistema y no le damos el valor que merece a la escalabilidad y a la disponibilidad .\nLa mayoría de aplicaciones que utilizamos en nuestro día a día son bastante sencillas en cuanto a funcionalidades. El mayor reto de un programador no es implementar dichas funcionalidades, si no que las mismas funcionen de forma eficiente para decenas de millones de usuarios concurrentes.\nEn este curso veremos una serie de componentes, técnicas y patrones para construir sistemas con alta escalabilidad, rendimiento, disponibilidad y fiabilidad.\n\n\nLos contenidos del curso serán los siguientes:\nAtributos de calidad de un sistema a gran escala. Empezaremos con una introducción viendo la importancia de la arquitectura de software y comentando en detalle los atributos de calidad que todo sistema a gran escala debe tener. Esos son el rendimiento, la escalabilidad, la fiabilidad y la mantenibilidad.\nConceptos clave en el diseño de sistemas a gran escala. A continuación, pasaremos a ver una serie de componentes que nos ayudarán a escalar nuestras aplicaciones y servidores. Veremos los Load Balancer o balanceadores de carga, las API Gateway, los Message Brokers, la Caché, los CDN o Content Delivery Network y el despliegue multi data center.\nAlmacenamiento de datos a gran escala. También trataremos en detalle ciertas técnicas para conseguir que nuestro almacenamiento de datos escale bien. Empezaremos viendo los distintos tipos de sistemas de almacenamiento disponibles, comparando los sistemas relacionales con los no relacionales o NoSQL. A continuación, veremos los índices y la desnormalización, y pasaremos a técnicas más complejas como la replicación de datos y el particionado de Base de Datos o sharding. Para finalizar la sección, veremos el teorema CAP.\nPatrones de Arquitectura Software. Veremos una serie de opciones para organizar nuestro software a más bajo nivel. Comentaremos las arquitecturas multilayer y multitier, la arquitectura orientada a microservicios, el Command Query Responsibility Segregation o CQRS y el Event Sourcing.\nEjercicios Prácticos. Para finalizar el curso, aplicaremos todo lo aprendido en las secciones teóricas analizando y diseñando una serie de sistemas a gran escala reales. Propondremos diseños para un acortador de URLs como tinyurl o bitly, un sistema de chat como WhatsApp, Telegram o Facebook Messenger, un E-Commerce como Amazon o Ebay y un sistema de publicaciones cortas como Twitter.\n\n\nEste curso no sólo te va a ayudar si quieres mejorar tus conocimientos en arquitectura de software y diseño de sistemas. También te ayudará si te estás preparando para pasar entrevistas de system design que piden en muchas empresas a partir de niveles mid o senior.\n\n\nQuiero recalcar que en este curso no se va a tratar nada de código. El diseño de sistemas y la arquitectura de software es un tema a alto nivel y no depende estrictamente de los lenguajes y las tecnologías usadas, por lo que no tiene sentido incluirlas ni debe estar en el alcance de este curso.\n\n\nEl primer paso ya lo has dado, te has interesado por la Arquitectura de Software y el diseño de sistemas ¡Te animo a unirte a este curso para mejorar como programador!",
      "target_audience": [
        "Profesionales que quieran aprender sobre la arquitectura de software y el diseño de sistemas.",
        "Profesionales que aspiren a posiciones mid-level, senior o superior.",
        "Programadores que quieran escalar su sistema a millones de usuarios concurrentes.",
        "Personas que estén preparando entrevistas de diseño de sistemas (system design)."
      ]
    },
    {
      "title": "Introduction to Unit Testing in C#",
      "url": "https://www.udemy.com/course/introduction-to-unit-testing-in-csharp/",
      "bio": "Create, debug, and improve your unit tests and code",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting Up"
        ],
        "Unit Testing, Iteration 1": [
          "Unit Testing, Iteration 1"
        ],
        "Unit Testing, Iteration 2": [
          "Unit Testing, Iteration 2"
        ],
        "Wrapping up": [
          "Wrapping Up"
        ]
      },
      "requirements": [
        "Some programming experience. Understand the basic of creating and assigning variables and using logic comparisons",
        "Able to use Visual Studio (Community or Code - free to install and use!).",
        "Able to create simple methods in C# - understanding of flow control (if-else, while, for, foreach) and assignment of values to variables."
      ],
      "description": "Through the use of hands-on work, you will learn how to create and work with unit tests in C# using the Visual Studio integrated development environment. Get professional tips on creating, debugging, and improving your tests in a practical way.\nThe introduction uses a two iteration cycle to create unit tests that address the product code as it is being developed, giving you the basis for not only creating and improving your unit testing ability, but also pointing the way towards exercising these new concepts in BDD (Business/Behavior Driven Development) or TDD (Test Driven Development).\nWe do more than just talk about how to do this, we provide step-by-step labs detailing how to create your automation and how to improve it as we progress.\nFor this course, starter code projects are supplied, as well as finished projects you can adapt to fit your needs, or use for reference for further projects.\nThis course is designed this to help those who want to expand their capabilities in creating software test automation.\nWhether you are a student, a manual tester, or are already a software test professional, this course can help you become more effective in your role.\nStart your journey towards effective unit testing today!",
      "target_audience": [
        "Beginning software professionals looking to increase their skillsets",
        "Software professionals who want to learn about unit tests and Test Driven Development"
      ]
    },
    {
      "title": "Fixing Memory Bugs in C",
      "url": "https://www.udemy.com/course/fixing-memory-bugs-in-c/",
      "bio": "Tools and techniques for finding and fixing memory bugs in C",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Comfortable with C language syntax and familiar with pointers"
      ],
      "description": "After you've learned the basics of the C programming language, including becoming familiar with pointers, you're ready to start working on some real projects. Whether you're writing your own code from scratch, or maintaining and extending code written by somebody else, you'll quickly find that a major source of software defects in C programs is improper memory management.\nMemory-related bugs can be difficult and extremely time-consuming to diagnose and fix without good tools. This course will introduce you to some tools and techniques for finding and fixing memory bugs in C programs, as well as teach the concepts behind those issues. It will cover:\nGetting set up\nInstalling Windows Subsystem for Linux (WSL) and Ubuntu (if you're a Windows user)\nInstalling gcc, make, and Valgrind\nIntegrating VS Code into a WSL workflow\nLessons on how to find and fix these kinds of memory bugs:\nUninitialized values\nInvalid reads\nInvalid writes\nInvalid frees\nFishy values\nMemory leaks\nIn each lesson, we will examine a sample C program and use the powerful open-source Valgrind tool to find its defects. For each kind of bug, there will also be a hands-on exercise for you to work through. At the very end there is a final coding challenge that will help you to review everything you’ve learned in the course.\nYou'll need a solid start on the C language before you attempt this course, so if you're new to C, I would highly recommend first working through one of the C for Beginners Udemy courses.",
      "target_audience": [
        "Intermediate to advanced C programmers"
      ]
    },
    {
      "title": "Python で学ぶアルゴリズム とデータ構造（初級編）【丁寧な解説+Python 実装でアルゴリズム の基本を学習】",
      "url": "https://www.udemy.com/course/python-algorithm-beginner/",
      "bio": "元塾講師エンジニアが教える、Python プログラマのためのアルゴリズム基礎！ソートアルゴリズムを題材に、アルゴリズムとデータ構造の基本を学習！Python による演習問題も多数！",
      "objectives": [
        "基本的なソートアルゴリズムをPythonを使って実現する方法を学びます",
        "ソートアルゴリズムを題材に、アルゴリズムとデータ構造の基礎的な概念を学びます",
        "分割統治法・動的計画法・バケットなど、ソートよりも複雑なアルゴリズムを理解するためにも必要な概念を理解できます。"
      ],
      "course_content": {
        "はじめに": [
          "講座資料の準備",
          "資料が開けなかった場合",
          "質問をする前に必ず読んでください",
          "アルゴリズムとは？",
          "データ構造とは？",
          "この講座ではどのように学ぶか"
        ],
        "アルゴリズムの表現方法": [
          "疑似コードとは？",
          "計算量とは？",
          "O表記法とは？"
        ],
        "ソート（基本）": [
          "ソートとは？・演習問題①",
          "演習問題について",
          "演習問題①のヒント（選択ソート）",
          "演習問題①のヒント（挿入ソート）",
          "演習問題①のヒント（バブルソート）",
          "解説（選択ソート）",
          "解説（挿入ソート）",
          "解説（バブルソート）",
          "オーダーの比較（選択ソート）",
          "オーダーの比較（挿入ソート）",
          "安定なソートとは？",
          "ソートの比較（安定なソート）",
          "バブルソートのオーダーと安定性"
        ],
        "分割統治法と動的計画法": [
          "演習問題②・フィボナッチ数列とは？",
          "演習問題②のヒント",
          "再帰関数とは？",
          "分割統治法とは？",
          "動的計画法とは？",
          "解説（メモ化・動的計画法）",
          "動的計画法②の訂正",
          "分割統治法と動的計画法の特徴・使い分け"
        ],
        "分割統治法とソート": [
          "ソートアルゴリズムの改良",
          "マージソート",
          "演習問題③（解説）",
          "マージソートの計算量",
          "基本ソートとの計算量の比較",
          "クイックソート",
          "クイックソートの擬似コード",
          "演習問題④",
          "演習問題④（解説）",
          "クイックソートの計算量",
          "バケットソート",
          "演習問題⑤",
          "演習問題⑤（解説）",
          "バケットソートの計算量と制限",
          "おわりに"
        ],
        "ボーナス": [
          "さらなる上達のための学習コンテンツ"
        ]
      },
      "requirements": [
        "講座「Pythonから飛び込むプログラミングの世界【丁寧な解説 + 小さなシステム開発ゼミで知識「ゼロ」から「使える」知識に】」の演習問題を、自力で解決できるレベルのPythonプログラミングスキル"
      ],
      "description": "この講座の特徴\nこの講座は、はじめてアルゴリズムとデータ構造を学ぶあなたが、短時間で効率よく、基本の基本を理解するための講座です。\nソートアルゴリズムを題材に、アルゴリズムとデータ構造の基本の概念について学んでいきます。\n変化の早いコンピュータの世界だと、数年後には使えなくなるような知識も多いですが、\nアルゴリズムとデータ構造は一過性のブームではなく、学んでおくと今後ずっと使える息の長い知識です。\nずっと使える知識ならば、善は急げです。まずは基本の基本をこの講座で身につけましょう！\n\n\n初級編と中級編からなり、確実にステップアップしながら学習を進めることができます。\n初級編ではアルゴリズムがメインで、中級編ではデータ構造がメインになっています。\nPythonによる実装の解説も行っています。概念と実装の両面から、深く理解しましょう。\n\n\nこの講座が目指す達成状態\nアルゴリズムを全く知らなかったPythonプログラマーが講座終了後に、\nソートアルゴリズムを題材に演習と解説を行うことで、\nアルゴリズムとデータ構造の基本的な概念を理解している状態を目指します。\n\n\n扱う内容・扱わない内容\nアルゴリズムとデータ構造の考え方の本質的なところにしぼって解説していきます。\n発展的なアルゴリズムについては扱っていません。プログラマであれば絶対に理解しておきたいアルゴリズムだけを厳選して収録しています。\nまたPythonによる実装を行っていますが、Pythonらしい実装をしているわけではないことに注意してください。\nあくまでも、Pythonのみ使える初級プログラマーが、アルゴリズムを実装面からも理解するために、Pythonによる解説を行っています。\nですので、おすすめできる方とおすすめできない方はそれぞれ以下のような方かと思います。\n・おすすめできる方\nPythonで基本的なプログラムは書けるようになったので、アルゴリズムとデータ構造を学んでより上達したい方\nアルゴリズムを学ぶのは初めてなので、まずは最も基本的なアルゴリズムの理解を優先したい方\n・おすすめできない方\n発展的な、最新のアルゴリズムやデータ構造について知りたい方\nアルゴリズムとデータ構造については学習済みで、Pythonicな実装方法が知りたい方\n\n\n講座の進み方\n基本的には、演習問題とアルゴリズムの解説を繰り返す形で進んでいきます。\n演習に取り組むことで、アルゴリズムを理解した「つもり」で終わらないようにしましょう。\n演習問題にはヒントも用意しておりますので、ご自分のスキルに応じてご活用ください。\nGoogle ColaboratoryというGoogleが提供するブラウザ上のPython実行環境を用いて学習を進めます。\nつまづきやすい環境構築が不要なので、Pythonの学習に集中できます。",
      "target_audience": [
        "アルゴリズムとデータ構造の基本的な概念を理解したい方",
        "「バブルソートを説明して」と言われたら、説明できない方",
        "ワンランクステップアップしたいPythonプログラマーの方",
        "陳腐化しない本質的な知識を得たい方",
        "Pythonプログラマー向けのアルゴリズム教材がなくて困っていた方"
      ]
    },
    {
      "title": "Kubernetes from beginner to master (Arabic)",
      "url": "https://www.udemy.com/course/kubernetes-from-beginner-to-master-arabic/",
      "bio": "Kubernetes master class for developers, sys admins, and aspiring DevOps engineers",
      "objectives": [
        "Master Kubernetes Deployments and Scaling",
        "Understand Kubernetes Networking and Services",
        "Implement Kubernetes Storage and Stateful Workloads",
        "Secure Kubernetes Clusters with RBAC and Policies"
      ],
      "course_content": {
        "Introduction": [
          "What is Kubernetes?",
          "Kubernetes cluster components"
        ],
        "Getting Kubernetes": [
          "Installing kubectl",
          "The KUBECONFIG file",
          "Docker for Desktop",
          "Kubernetes in Docker (KinD)"
        ],
        "Kubernetes Pods": [
          "Why Kubernetes uses Pods",
          "Creating a Kubernetes Pod",
          "Working with a running Pod",
          "Liveness, Readiness, and Startup probes",
          "Pods requests and limits",
          "Volumes",
          "Lab: Creating a Pod with probes, resources, and volumes"
        ],
        "Labels and annotations": [
          "Using Labels",
          "Using annotations"
        ],
        "Kubernetes Service Discovery": [
          "What is a Kubernetes Service?",
          "Kubernetes Service types",
          "Kubernetes External Services",
          "Lab 01: ClusterIP and NodePort Services",
          "Lab 02: LoadBalancer and External Services"
        ],
        "Kubernetes Ingress": [
          "What is Ingress?",
          "The Ingress object",
          "Lab 01: Using ingress for path based and host based routing",
          "Lab 02: Enabling TLS termination on the ingress side"
        ],
        "ReplicaSets, Deployments, and Daemonsets": [
          "What is a ReplicaSet?",
          "Lab 01: Working with ReplicaSets",
          "What is a Deployment?",
          "Lab02: Creating a Kubernetes Deployment",
          "Lab03: Rolling out and rolling back a Kubernetes Deployment",
          "What is a Daemonset?",
          "Lab04: Creating a Daemonset"
        ],
        "Kubernetes Jobs": [
          "Introducing Jobs and CronJobs",
          "Lab: Using Jobs"
        ],
        "ConfigMaps and Secrets": [
          "Introducing ConfigMaps",
          "Introducing Secrets",
          "Lab: Using ConfigMaps and Secrets"
        ],
        "Kubernetes Role Based Access Control (RBAC)": [
          "What is RBAC and what is a Role?",
          "Kubernetes ClusterRoles and built-in roles",
          "Lab: using Roles and ClusterRole"
        ]
      },
      "requirements": [
        "Basic Understanding of Containers",
        "Familiarity with Command Line"
      ],
      "description": "Unlock the power of Kubernetes with this comprehensive, Arabic-language course designed for DevOps engineers, system administrators, and developers. Whether you are managing containerized applications or looking to scale your infrastructure, this course will equip you with the essential skills to navigate the world of Kubernetes with confidence.\n\n\nThroughout the course, you will learn how to deploy, scale, and manage applications in Kubernetes clusters. Starting with an introduction to core Kubernetes concepts like Pods, Deployments, and Services, the course gradually builds up to more advanced topics, including StatefulSets and persistent storage, networking within Kubernetes clusters, and securing your workloads using RBAC.\n\n\nIn this course, you will:\n- Master the fundamentals of Kubernetes architecture and its components.\n- Learn to manage containerized workloads through Deployments, StatefulSets, and Jobs.\n- Explore Kubernetes networking models, including ClusterIP and NodePort Services, and how to expose applications externally.\n- Dive deep into Kubernetes storage with Persistent Volumes and Persistent Volume Claims.\n- Secure your cluster using Role-Based Access Control (RBAC) and admission controllers.\n\n\nThis course is ideal for Arabic-speaking professionals looking to enhance their cloud-native skills and advance their careers in DevOps and IT infrastructure management. Prior knowledge of Docker and command-line tools is recommended but optional.\n\n\nJoin now and take your first step into mastering Kubernetes!",
      "target_audience": [
        "DevOps Engineers",
        "Software Developers",
        "System Administrators",
        "IT Professionals"
      ]
    },
    {
      "title": "現役アジャイルコーチが教える！たった1日で理解できるアジャイル開発とスクラム 導入と実践、組織変革編",
      "url": "https://www.udemy.com/course/daipresents-advanced-agile/",
      "bio": "スタートアップから大企業まで10年以上の経験を持つ現役アジャイルコーチが解説するアジャイル開発とスクラムの応用コースです。アジャイル開発の導入から実践に必要となるアジャイルプラクティスや具体的・実用的な手段を解説します。",
      "objectives": [
        "アジャイル開発の導入と実践でよく使われているアジャイルプラクティスを理解できます。",
        "アジャイルプラクティスの中でも、開発チーム運営に必須となるアジャイルプロジェクトマネジメントを理解できます。",
        "仮想的なチームを通して、アジャイル開発を導入・実践する方法を理解できます。",
        "アジャイルチームに求められるリーダーシップスキルを理解できます。"
      ],
      "course_content": {},
      "requirements": [
        "経験者を想定したコースのため、事前に入門コースの受講や入門書籍の読破をおすすめします。",
        "ソフトウェア開発やアジャイル開発における基本的な用語の理解があるとスムーズです。"
      ],
      "description": "このコースでは、10年以上のアジャイル開発経験のあるアジャイルコーチである講師が、ソフトウェア開発のプロセスとして有名なアジャイル開発の導入・実践方法を解説します。\n\n\n導入実践に必要となる実践的な手段をまとめたアジャイルプラクティス。\nアジャイルチーム運営に必須となるアジャイルプロジェクトマネジメント。\n仮想チームを使って導入・実践のシミュレーション。\nアジャイルチームに必須となるリーダーシップやスキル。\nアジャイル開発を組織に適用するためのアジャイルトランスフォーメーション。\n\n\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n内容が実践的なものばかりですので、受講前に入門編コースの受講をおすすめします。\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\nこのコースの対象者は、アジャイル開発やスクラムの導入を考えている現場の方です。アジャイル開発やスクラムを導入、推進したいリーダー、管理職、マネージャ、経営者にもおすすめです。アジャイル開発を実践していて、さらに知識や経験を増やしたい現場の方にも役立つように、私の経験をすべてお話します。\n\n\n変化への対応がもとめられる現在の開発現場において、アジャイル開発は必須スキルとなってきています。さらに、アジャイル開発は、ソフトウェア開発の現場だけでなく、さまざまな環境に広がっています（営業、総務、カスタマーサポートなど）。\n\n\nDX（デジタルトランスフォーメーション）の文脈でも注目され、成熟期を迎えつつあるアジャイル開発を理解し、「改善」の旅をはじめましょう！",
      "target_audience": [
        "アジャイル開発やスクラムの導入を考えている現場の方",
        "アジャイル開発やスクラムを導入、推進したいリーダー、管理職、マネージャ、経営者",
        "アジャイル開発を実践していて、さらに知識や経験を増やしたい現場の方"
      ]
    },
    {
      "title": "Clean Code - Temiz Kod Yazma Sanatı",
      "url": "https://www.udemy.com/course/clean-code-temiz-kod-yazma-sanati/",
      "bio": "Piyasanın en etkin clean code eğitimi. Kurstan sonra bir daha asla aynı kodu yazmayacaksınız. (Güncel Bonus İçeriklerle)",
      "objectives": [
        "Kaliteli ve okunabilir kod yazma",
        "Metotları ve sınıfları optimum uzunlukta tutma",
        "SOLID prensipleri (Detaylı örneklerle)",
        "Test yazmanın önemi ve mentalitesi",
        "Kod refaktör etme",
        "Temel Yazılım Prensipleri",
        "Kurs dil spesifik değil ama Java Püf noktalarına sıkça değindik :)",
        "Yük Testlerinin Önemi",
        "Mülakat Performansında Gözle Görülür Artış",
        "Kod yazan normal bir bireyden ziyade MÜHENDİS kafasıyla yazılım yapma",
        "Clean Code kitabının en ince detayına kadar tüm içeriği",
        "İhtiyaca göre sürekli güncellenen örnek ve içerikler"
      ],
      "course_content": {
        "Tanıtım ve Giriş": [
          "Tanıtım",
          "Tanıtım ve İlk Ders - Her şey tek taşla başlar"
        ],
        "Anlamlı İsimlendirmeler": [
          "Anlamlı İsimlendirmeler",
          "Yanlış Telkinden Kaçının",
          "Anlamlı Ayrımlandırmalar Yapın",
          "Telaffuz Edilebilir İsimlendirmelere Yönelin",
          "Aranabilir İsimlendirmelerin Önemi",
          "Mental Mappingten Kaçının",
          "Metot ve Sınıf İsimlendirmeleri",
          "Anlam Bütünlüğü ve Metot Parçalama",
          "Code Review Önemi + Gereksiz Context Vermeyin + TODO",
          "Quiz"
        ],
        "Metotlar": [
          "Single Responsibility - 5 lines of code",
          "Single Responsibility - Method Refactor",
          "Şiir gibi Metotlar :)",
          "Switch Case - Dont Return Null - Abstract Factory",
          "Açıklayıcı İsimlendirmeler",
          "Metot Parametleri ve Optimum Metot İsim Uzunluğu",
          "Flag Argument - Monadic Form",
          "Triads - Dyadic",
          "Primitivelerle Haberleşme!",
          "Argument List + Varargs",
          "Have No Side Effects",
          "Anlam Karmaşası",
          "Query Separation",
          "Exceptionlardan Hata Kodlarına",
          "Try Catchleri Ayırın",
          "Dependency Magnet",
          "DONT REPEAT YOURSELF! (DRY)",
          "Refactoring Conclusion - Dijkstra Structured Programming",
          "Quiz"
        ],
        "Yorum Satırları": [
          "Yorum Satırları Kötü Kodun Bastonu mudur?",
          "Kendini Kodla Açıkla",
          "Faydalı Yorum Satırları",
          "Faydalı Yorum Satırları Part2",
          "Kötü Yorum Satırları - Try Catch Exception",
          "Kötü Yorum Satırları - Javadoc - Journal",
          "Noise and Scary Noise",
          "Hüseyin Amcanın Bakkal Defteri :)",
          "Tortulu Yorum Satırları",
          "Yorum Satırları Kapanış"
        ],
        "Formatlamalar": [
          "Formatlama Giriş",
          "Formatlama Afrika Atasözü - İnsan Gözü Evrim",
          "Poka Yoka - Function Dependency",
          "Yatayda Kod Uzunluğu",
          "Kodu Aynı Hizaya Getirmeye Çalışan Obsesifler :)",
          "Uncle Bob Style"
        ],
        "Objeler ve Veri Tİpleri": [
          "Data Abstraction",
          "Fonksiyon Eklemek Kolay Data Tipi Eklemek Zor",
          "Law of Demeter",
          "Data Transfer Object"
        ],
        "Error Handling": [
          "Exceptions vs Return Codes",
          "Unchecked Exceptionları Tercih Edin",
          "Bilgilendirici Exceptionlar",
          "Define Normal Flow",
          "Dont Return Null - Dont Pass Null",
          "Quiz"
        ],
        "Sınırlar": [
          "Third Party",
          "Unit Test Kısa Bir Giriş"
        ],
        "Unit Testler": [
          "TDD - BDD - Hackerrank",
          "Clean Test",
          "FIRST kuralı - Single Concept"
        ],
        "Sınıflar": [
          "Sınıf Organizasyonları ve Encapsulation",
          "Sınıflar Küçük Olmalı",
          "Low Cohesion Tespiti ve Cohesion'u Artırma Yöntemleri",
          "Open Close Principle",
          "Dependency Inversion"
        ]
      },
      "requirements": [
        "Temel yazılım bilgisi olan arkadaşlar kurstan çok daha fazla verim alacaklardır",
        "Projemizi koşturabileceğimiz bir IDE. (Eclipse, Spring tool suite, Intellij)",
        "Java Version 8+"
      ],
      "description": "Güncelleme, Ek Ders ve İyileştirmeler:\n- Bazı derslerin sonuna mülakatlarda çıkabilecek seviyede anlatılan konulara paralel sorular eklendi. (16.08.2022)\n- Tüm ders videoları öğrenci geri bildirimleriyle birlikte 720p'den 1080p çözünürlüğe taşındı. (29.12.2023)\n- Bonus açıklama videosu ve stratejisi eklendi. (26.02.2024)\n\nNOT: Kursu alan ve almayan arkadaşlarımın ara ara bu kısma bakmasında fayda var çünkü ek dersler ve quizler belirli periyotlarda kursa dahil edilip hem tekrar niteliğinde hem de kursun güncel ve yeni konulara açık şekilde gelişmesini sağlıyor. Quizler ve bonus dersler eklenirken öğrenci soruları ve derse paralel anlatmak istediğim ek konuları baz alarak ilerliyorum.\n\n\nKurs Bilgileri\nNeden Clean Code?\nİyi kötü herkes kod yazabilir. Ancak yazdığımız kodu başkaları hatta bir süre geçtikten sonra biz bile anlayamaz halde olursak bu kod yazmanın ne kadar anlamı olabilir? Kod yazma takım işidir o yüzden temiz kod yazmak sizi sektörde 2 adım ileri atacaktır. Bu kursta öğrendikleriniz sadece temiz kod yazmayla ilgili değil açık videolardan da teyit edebileceğiniz gibi yine bir uygulamayı nasıl performanslı ve kaliteli hale getiririz bunları da öğreneceğiniz bir eğitim olacak.\n\n\nKursla ilgili bazı yorumlar: (Kendilerine sonsuz teşekkür ederim. Benim için işin en büyük keyfi burası.)\nYoutube'da görmüştüm ilk kez hocam sizi. Daha sonra içeriklerinizi takip etmeye başladım. Gayet eğlenceli bir sunumla bu zor konuları çekici kılıyorsunuz hocam. Emeğinize, yüreğinize sağlık.\nÇok iyi. Akademik dilden herkese anlayacağı şekilde bir anlatım. Pırlanta değerinde bir kurs.\nUdemy'e kayıt olma sebebimsiniz hocam. Youtube kanalınızı bir yıldır takipteyim. Yeni derslerinizi bekliyorum.\nSizi seminerde dinlemiştim. Burada görünce de çok mutlu oldum. Çok kral adamsınız vesselam.\nÇok büyük emek vererek hazırlamışsınız çok teşekkürler, nerdeyse hepsini izledim çok faydası dokundu. Başarılar dilerim.\nTek kelimeyle harika. Daha yarısına gelmedim ama her ders üstüne koyduğunuzu görüyorum. Emeğiniz için çok teşekkürler.\nHem yazılım geliştirme ile ilgili pratik bilgiler kazanmak hem de teknik bakış açımızı geliştirmek için çok başarılı bir kurs. İçerik gayet zengin örnekler açıklayıc\nGerçekten çok kaliteli ve somut örneklerle dolu ileri seviye bir eğitim. . Muadili bir eğitim görmedim. Ellerinize sağlık benzerlerini heyecanla bekliyorum lütfen devam edin",
      "target_audience": [
        "Bilişim Sektöründe çalışan yazılımcı ve analistler",
        "Bilgisayar/Yazılım Mühendisliği öğrencileri",
        "Daha kaliteli kod yazmak isteyen her birey"
      ]
    },
    {
      "title": "Asynchronous Programming Mastery: 5 Practice Exams [New]",
      "url": "https://www.udemy.com/course/asynchronous-programming-mastery-5-practice-exams-new/",
      "bio": "Asynchronous Programming Mastery with 500 Unique Conceptual + Scenario Questions and Answers: 5 Practice Exams",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Unlock the power of asynchronous programming and master the techniques needed to build efficient, scalable, and responsive applications. This comprehensive course is designed to help you grasp the core concepts of asynchronous programming, explore real-world use cases, and apply advanced techniques across multiple programming languages.\nThroughout this course, you'll delve into the essential principles of asynchronous programming, including events, callbacks, promises, async/await, and more. You’ll gain practical experience with asynchronous operations in JavaScript, .NET, Python, and other popular languages, empowering you to tackle concurrency challenges with ease.\nWith 500+ practice questions—including conceptual and scenario-based queries—you'll test your knowledge, revise key topics, and refine your understanding through 5 realistic practice exams. The course covers:\nIntroduction to Asynchronous Programming – Understand the difference between synchronous and asynchronous programming, and explore the benefits and use cases of asynchronous operations.\nBasic Concepts – Dive into event-driven programming, callbacks, promises, and async/await to simplify asynchronous code.\nJavaScript Asynchronous Programming – Master JavaScript’s event loop, microtasks, and macrotasks, and learn how to handle asynchronous operations using Fetch API, Axios, and other techniques.\nAsynchronous Programming in .NET – Learn about Task, async/await in C#, and parallel programming with TPL.\nAsynchronous Programming in Python – Explore the asyncio library, coroutines, and error handling in Python for asynchronous programming.\nConcurrency Models – Understand threads, parallelism, and the Actor model, and explore reactive programming principles.\nAsynchronous Programming Patterns – Master the Producer-Consumer and Observer patterns, and learn to use cancellation tokens in your applications.\nPerformance Considerations – Learn to measure performance, avoid pitfalls like deadlocks, and follow best practices for efficient asynchronous code.\nDebugging Asynchronous Code – Develop strategies for debugging async code, including logging and tracing asynchronous calls.\nAsynchronous Programming Across Languages – Get an overview of asynchronous programming in Java, C++, Go, and more.\nLibraries and Frameworks – Explore essential libraries for async programming across different languages, including third-party options like aiohttp for Python.\nThe Future of Asynchronous Programming – Stay ahead of the curve by exploring the latest trends and innovations, and understand how asynchronous programming powers modern applications, including cloud services and microservices.\nBy the end of this course, you'll be equipped with the knowledge and skills to confidently tackle asynchronous programming challenges, debug complex code, and implement best practices across different platforms. Perfect for developers at any stage, this course will set you on the path to mastering asynchronous programming with hands-on practice and expert guidance.",
      "target_audience": [
        "Aspiring Developers who want to deepen their understanding of asynchronous programming.",
        "Software Engineers looking to enhance their skills in handling concurrency and optimizing performance.",
        "Web and App Developers interested in improving their applications’ responsiveness using async techniques.",
        "Experienced Programmers wanting to master asynchronous concepts across multiple languages and platforms.",
        "Students and Learners keen to explore modern software development practices and improve problem-solving with async programming."
      ]
    },
    {
      "title": "Habits of Software Architect",
      "url": "https://www.udemy.com/course/habits-of-software-architect/",
      "bio": "Path to Becoming a Great Software Architect: 7 Core Practical Habits",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Journey to Becoming a Software Architect"
        ],
        "Habits of Software Architect": [
          "Habit #1. Invest at Least 10% of Time",
          "Habit #2. Collaborate with Team Members",
          "Habit #3. Focus on What's Important",
          "Habit #4. Strive for Optimal Design",
          "Habit #5. Practice Small Tasks First",
          "Habit #6. Share your design.",
          "Habit #7. Maintain an open mind."
        ],
        "Conclusion": [
          "Great Habits to enhance Design Capability"
        ]
      },
      "requirements": [
        "Basic interest in software design and code quality improvement."
      ],
      "description": "The Path to Becoming a Great Software Architect: 7 Core Practical Habits\nA Software Architect who designs the best systems, are you just dreaming?\nBeyond a line of code, the Software Architect understands the entire system and designs its future. This is a goal for many developers and a crucial core role for successful projects. But you likely know that reaching that position is difficult with just excellent coding skills or theoretical knowledge alone. The ability to penetrate the essence of complex problems, find optimal solutions within various constraints, and create structures that are robust and flexible even amidst constantly changing requirements... How can this be cultivated?\nConsistently maintaining systematic 'design practice' in the busy professional environment is by no means easy. Facing immediate deadlines, design is often pushed to the back burner, and when alone, it often feels daunting and you don't know where to start. You feel the need to build design capability, but are you hitting a wall with reality?\nThis lecture provides a clear answer to that very concern. Architecture design capability is not something only a few special people are 'born with', but something anyone can 'make' through consistent effort and the right methods. And the most powerful and certain engine for that growth lies in consciously creating and practicing 'good design habits'. Habits are the ultimate weapon that enable consistent practice beyond the excuse of being busy, automate execution, and explosively accelerate long-term capability growth.\nThis lecture will be your compass, guiding you to learn the most core and practical 7 habits required for a great architect and 'internalize' them. This will enable you to confidently lead design on any task, grow into a technical leader for your team, and become a 'practicing architect' who builds more robust and flexible systems.\nBeyond just an 'architect who knows' design knowledge, embark on the journey towards becoming a 'practicing architect' with solid design fundamentals and problem-solving skills who remains unshaken before any system. Start this journey now, together with this lecture. Awaken the architect potential dormant within you!",
      "target_audience": [
        "Developers who aspire to become Software Architects.",
        "Developers who want to systematically develop their software design capabilities.",
        "Managers who want to improve their organization's software design culture or strengthen their team's design capabilities."
      ]
    },
    {
      "title": "500+ SRE Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/sre-interview-questions-practice-test/",
      "bio": "SRE Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "SRE Site Reliability Engineering Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nMaster SRE Interview Questions with Confidence!\nAre you preparing for a Site Reliability Engineering (SRE) interview? Want to ace it with flying colors? Look no further! Welcome to the ultimate SRE Interview Questions Practice Test Course. Whether you’re a seasoned SRE professional or just starting your journey, this course will equip you with the knowledge and confidence needed to tackle those tough interview questions.\nIn this comprehensive practice test course, we’ve meticulously curated a set of interview questions covering six critical SRE domains. Each section dives deep into essential concepts, best practices, and hands-on scenarios. Let’s explore what awaits you:\n1. Fundamental Concepts\nDefinition and Role of SRE: Understand the core responsibilities of SREs and how they bridge the gap between development and operations. Dive into real-world scenarios to solidify your understanding.\nSRE Principles and Best Practices: Discover the guiding principles that drive SRE practices. Learn about automation, observability, and reliability engineering.\nSLIs, SLOs, and SLAs: Master the art of measuring and maintaining system reliability. Explore Service Level Indicators (SLIs), Service Level Objectives (SLOs), and Service Level Agreements (SLAs).\nError Budgets: Balance innovation and reliability by managing error budgets effectively. Learn how to make data-driven decisions.\nToil Reduction Strategies: Say goodbye to repetitive, manual tasks! Dive into strategies for automating toil and freeing up valuable time.\nService Level Indicators (SLIs) Metrics: Get hands-on with metrics that define system performance. Understand how to monitor and optimize SLIs.\n2. Infrastructure and Automation\nInfrastructure as Code (IaC): Explore tools like Terraform and CloudFormation. Learn how to provision consistent and automated infrastructure.\nConfiguration Management Tools: Dive into Ansible, Puppet, and Chef. Manage server configurations like a pro.\nOrchestration and Containerization (e.g., Kubernetes): Unleash the power of Kubernetes! Understand container orchestration and scalability.\nCI/CD Pipelines: Automate software delivery with CI/CD practices. Build robust pipelines for seamless deployments.\nMonitoring and Alerting Systems: Keep your systems healthy! Explore monitoring tools and set up effective alerting mechanisms.\nDisaster Recovery Planning: Prepare for the worst. Develop strategies to recover swiftly from system failures.\n3. Reliability Engineering\nIncident Management Processes: Learn the art of incident response. Detect, diagnose, and resolve incidents efficiently.\nPost-Incident Reviews (PIRs): Continuously improve by analyzing incidents. Extract valuable insights from post-incident reviews.\nRoot Cause Analysis (RCA) Techniques: Dig deep into the root causes of incidents. Apply RCA methods to prevent recurrence.\nChange Management Practices: Navigate system changes smoothly. Minimize disruptions with effective change control.\nCapacity Planning and Scalability: Scale your systems gracefully. Understand capacity planning and scalability strategies.\nChaos Engineering: Embrace controlled experiments to uncover vulnerabilities and enhance resilience.\n4. Performance Optimization\nPerformance Monitoring Tools: Monitor like a pro! Explore New Relic, Datadog, and AppDynamics.\nBottleneck Identification and Resolution: Identify bottlenecks and optimize critical components for peak performance.\nLoad Testing and Stress Testing: Assess system capacity with confidence. Master load testing methodologies.\nPerformance Tuning Strategies: Optimize code, databases, and network performance. Boost responsiveness.\nCaching Strategies: Speed up your applications! Learn about caching mechanisms.\nContent Delivery Networks (CDNs): Deliver content globally with CDNs. Enhance user experience.\n5. Security and Compliance\nSecurity Best Practices in SRE: Secure your systems. Explore secure coding, vulnerability scanning, and threat modeling.\nAccess Control and Identity Management: Manage access effectively. Understand authentication and authorization.\nData Encryption Techniques: Protect sensitive data with encryption methods.\nRegulatory Compliance (e.g., GDPR, HIPAA): Navigate compliance requirements confidently.\nVulnerability Management: Identify and address security vulnerabilities proactively.\nIncident Response Planning for Security Breaches: Be prepared! Plan for security incidents and breaches.\n6. Soft Skills and Collaboration\nCommunication Skills in Incident Response: Communicate effectively during incidents.\nCross-Functional Collaboration: Collaborate seamlessly with development, QA, and other teams.\nConflict Resolution Strategies: Resolve conflicts within teams constructively.\nStakeholder Management: Manage relationships with stakeholders.\nKnowledge Sharing and Documentation: Emphasize the importance of sharing knowledge and maintaining documentation.\nContinuous Learning and Improvement Mindset: Cultivate a mindset of continuous\nEnroll Now",
      "target_audience": [
        "Aspiring SREs: If you’re aiming to break into the world of Site Reliability Engineering, this course will provide you with targeted interview practice and boost your confidence.",
        "Experienced SREs: Even seasoned SREs can benefit from honing their interview skills. Whether you’re switching jobs or aiming for promotions, mastering interview questions is crucial.",
        "DevOps Engineers and System Administrators: If you work in related fields and want to transition into SRE roles, this course will bridge the gap and prepare you for SRE interviews.",
        "Technical Interview Candidates: Anyone preparing for technical interviews, especially those focused on SRE concepts, will find value in this practice test course."
      ]
    },
    {
      "title": "初心者OK！Linux入門：実務で必須のLinuxの知識を網羅",
      "url": "https://www.udemy.com/course/ok-linux/",
      "bio": "現役外資ITエンジニアがLinuxの必須知識をUbuntuを使いながら紹介。知識ゼロからでも実務で使えるスキルが身につけられます。",
      "objectives": [
        "Linuxとは何なのか・なぜ必要なのかを理解します",
        "Linuxを使ってソフトウェア開発ができるだけの知識とスキルを習得します",
        "Ubuntuを使った開発ができるようになります",
        "Linuxに対する恐怖心を無くします",
        "Linuxの使い方を他人に教えられるようになります"
      ],
      "course_content": {
        "はじめに": [
          "はじめに",
          "レビューについて"
        ],
        "Linuxとは？": [
          "Linuxとは？"
        ],
        "Linuxディストリビューション": [
          "Linuxディストリビューションとは？",
          "代表的なLinuxディストリビューション"
        ],
        "Linux環境構築": [
          "Linux環境の構築方法の種類",
          "M1/M2 Macをご利用の方へ",
          "VirtualBox と Ubuntu のインストール",
          "[M1/M2 Mac向け] UTMとUbuntuのインストール",
          "[M1/M2 Mac向け] UTMでのキーボード設定"
        ],
        "コマンドライン入門": [
          "このセクションで学ぶこと",
          "なぜコマンドラインを学ぶのか？",
          "カーネル、システムコール、シェル",
          "シェルがシステムコールを使う様子を見てみる",
          "ファイルとディレクトリの基本",
          "コマンドの基本構造"
        ],
        "絶対に覚えたいコマンド１０選": [
          "このセクションで学ぶこと",
          "pwd",
          "cd",
          "ls",
          "touch",
          "cp",
          "mv",
          "rm",
          "mkdir",
          "cat",
          "grep"
        ],
        "コマンドライン操作を深掘り": [
          "エイリアス",
          "環境変数",
          "エイリアス・環境変数を消えないようにする",
          "PATHとは？",
          "標準入出力と標準エラー出力",
          "次回講義の補足",
          "リダイレクト",
          "複雑なリダイレクト",
          "パイプ",
          "標準エラー出力をパイプする"
        ],
        "覚えると便利なコマンド５選": [
          "find",
          "sed",
          "gzip と tar (その１)",
          "gzip と tar (その２)",
          "次回講義「curl」の補足",
          "curl"
        ],
        "vi の基本操作": [
          "viの基本",
          "viを開いてみる",
          "viのモード",
          "インサートモードで文字を入力する",
          "ノーマルモードでショートカットを使いこなす",
          "コマンドラインモードでファイルを編集する",
          "ファイル内検索をする"
        ],
        "ファイルシステムとパーミッション": [
          "ファイルシステムの概要",
          "重要なディレクトリの紹介",
          "ファイルやディレクトリの情報を表示するコマンド",
          "複数のファイルシステムを確認する",
          "パーミッションと所有者",
          "ユーザとグループ",
          "パーミッション情報の読み方",
          "パーミッションを変更する",
          "root ユーザとは？",
          "su と sudo",
          "sudo できるユーザの管理",
          "初期状態から sudo, su をできるようにする方法"
        ]
      },
      "requirements": [
        "プログラミング経験不要",
        "Linuxの知識不要"
      ],
      "description": "Linuxを基礎から応用まで全てを身につけられるコースです。\nLinuxは現在のソフトウェア開発で避けては通れない存在です。\nなんとなく今まで使っていたが、体系的に学び直したい！そういった方にも適切なコースです。\n『Linuxの知識がゼロの状態からでも実務で必須の知識が身に付く』をコンセプトにコースを作成しました。\n人気のディストリビューションである「Ubuntu」を使います。\n\n\n本コースで学ぶ内容\nLinux とは？\nLinuxディストリビューション\n必須のコマンドライン\nパッケージ管理手法\nテキストエディタVi の基本操作\nファイルシステムとディレクトリ構造\nシステム管理とモニタリング\n本コースに向いている人\nLinuxを使ったことがないが、興味がある人\nLinuxを使うことがあるが、使いこなせている実感がない人\nLinuxを勉強したが挫折した人\nLinuxをもっと使いこなせるようになりたい人",
      "target_audience": [
        "Linuxに関心があるが、なかなか体系的に学ぶ方法がわからない駆け出しエンジニア"
      ]
    },
    {
      "title": "Create a Chatbot with JavaScript & ChatGPT in Under an Hour",
      "url": "https://www.udemy.com/course/create-a-chatbot-with-javascript-chatgpt-in-under-an-hour/",
      "bio": "Create a Chatbot by leveraging and integrating the power of the OpenAI API, ChatGPT, JavaScript, node.js and VS Code.",
      "objectives": [
        "Setting up a Javascript/Node development environment",
        "Interacting with the Chat GPT API",
        "Building a terminal based ChatBot",
        "Building a ChatBot with multiple personalities"
      ],
      "course_content": {
        "Introduction and getting set-up": [
          "Introduction",
          "Environment setup",
          "Project initialization"
        ],
        "Starting to code our chatbot": [
          "Adding the readline-sync package",
          "Writing code to accept user input",
          "Implementing the conversation loop"
        ],
        "Setting up the Chat GPT functionality": [
          "What's an API?",
          "Setting up the OpenAI API",
          "Implementing ChatGPT functionality"
        ],
        "Fine tuning our chat bot": [
          "Adding ChatGPT to the conversation loop",
          "Diagnosing memory issues with our chatbot",
          "Adding memory to our chatbot",
          "Course Wrap-up"
        ]
      },
      "requirements": [
        "Basic computer literacy and comfort using a web browser",
        "Interest in AI and chatbot technology - no prior experience required",
        "Willingness to learn and experiment with new concepts"
      ],
      "description": "Dive into the world of AI-powered chatbots with this beginner-friendly course! We're at an exciting time where anyone can create their own intelligent conversational agents. This course will guide you through the process of building a chatbot from scratch, using popular tools like Node.js, Visual Studio Code and the OpenAI API.\nBy the end of this course, you'll be able to:\nSet up a complete development environment for chatbot creation\nUnderstand the basics of API integration and\nWrite code that creates a conversational loop between the chatbot and the end user\nImplement AI-powered responses using ChatGPT\nCreate a chatbot with memory to maintain context in conversations\nYou'll see hands-on demos and follow along as we build a fully functional chatbot step by step. No prior experience with AI or advanced programming is required – just bring your curiosity and willingness to learn!\nThroughout the course, we'll use readily available tools and libraries, making it easy for you to continue experimenting and building after the course ends. While we'll focus on a specific tech stack, the concepts you'll learn can be applied across various platforms and programming languages.\nAre you ready to bring your chatbot ideas to life and join the AI revolution? Let's start coding!",
      "target_audience": [
        "Beginner Javascript programmers curious about chatbots",
        "Programmers and hobbyists in search of an engaging, real-world coding project to expand their portfolio",
        "Tech-curious learners ready to dive into AI and chatbot development, regardless of their current skill level."
      ]
    },
    {
      "title": "Guia prático de lógica de programação e algoritmos",
      "url": "https://www.udemy.com/course/guia-pratico-de-logica-de-programacao-e-algoritmos/",
      "bio": "Dê os seus primeiros passos em lógica de programação de forma segura e aprenda com confiança.",
      "objectives": [
        "Lógica de programação utilizando Python, umas das linguagens mais populares no mercado.",
        "Lógica de Programação e algoritmos básicos.",
        "Raciocínio lógico na resolução de problemas computacionais.",
        "Primeiro passo para o universo do desenvolvimento de software."
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Considerações importantes",
          "Dicas de estudo"
        ],
        "Desafio - Pedra, Papel e Tesoura!": [
          "Apresentação",
          "Regras do Jogo",
          "Jogo em funcionamento"
        ],
        "Ambiente de desenvolvimento": [
          "Primeiro código - \"Olá Mundo!\"",
          "Como acessar o ambiente",
          "Experimentando Notebook",
          "Importando Notebook",
          "Dúvidas?"
        ],
        "Variáveis": [
          "Conceito de variáveis",
          "Atribuição e exibição de valores",
          "Identificadores de variáveis",
          "Tipos de variáveis",
          "Espaçamento entre linhas",
          "Tipos de variáveis",
          "Identificadores de variáveis"
        ],
        "Operadores Aritméticos": [
          "Conceito de operadores aritméticos",
          "Soma e subtração",
          "Multiplicação e divisão",
          "Módulo de divisão e exponenciação",
          "Precedência de operadores",
          "Expressões matemáticas",
          "Operadores Aritméticos - Exercício Resolvido 1",
          "Operadores Aritméticos - Exercício Resolvido 2",
          "Operadores Aritméticos - Exercício Resolvido 3",
          "Relação dos símbolos dos operadores e operação",
          "Precedência de operadores",
          "Expressões matemáticas"
        ],
        "Operadores de Comparação": [
          "Conceito de operadores de comparação",
          "Igualdade e desigualdade",
          "Maior e menor",
          "'Maior ou igual' e 'menor e igual'",
          "Exercício Resolvido 1",
          "Exercício Resolvido 2",
          "Relação dos símbolos dos operadores e operação",
          "Resultado da expressão - Parte I",
          "Resultado da expressão - Parte II"
        ],
        "Operadores Lógicos": [
          "Conceito de operadores lógicos",
          "Resultados possíveis",
          "Operador E",
          "Operador OU",
          "Operador Negação",
          "Exercício Resolvido 1",
          "Resultado da expressão - Parte I",
          "Resultado da expressão - Parte II",
          "Resultado da expressão - Parte III"
        ],
        "Desvio Condicional": [
          "Conceito de desvio condicional",
          "Desvio simples",
          "Desvio composto - Parte 1",
          "Desvio composto - Parte 2",
          "Exercício Resolvido 1",
          "Exercício Resolvido 2",
          "Exercício Resolvido 3",
          "Desvio condicional"
        ],
        "Problemas propostos - Parte I": [
          "Primeira parte do curso",
          "Problema 1",
          "Problema 2",
          "Problema 3",
          "Problema 4",
          "Problema 5"
        ],
        "Vetores": [
          "Conceito de vetores",
          "Vetores",
          "Acesso aos elementos",
          "Modificação dos valores",
          "Exercício Resolvido 1",
          "Exercício Resolvido 2",
          "Exercício Resolvido 3",
          "Vetores",
          "Curiosidade: Python trabalha com vetores ou listas?"
        ]
      },
      "requirements": [
        "Noções de aritmética básica ( soma, subtração, multiplicação e divisão ).",
        "Não é necessário ter experiência com programação.",
        "Familiaridade com browser e navegação web."
      ],
      "description": "Empresas como Google, Facebook e Uber são bilionárias por resolverem problemas da sociedade utilizando software. E qual é a habilidade chave que serve como motor de inovação? Acertou quem pensou em lógica de programação.\nAqui você aprenderá os principais elementos de lógica de programação em um ambiente totalmente imersivo utilizando o Python, uma das linguagens de programação mais populares da comunidade de desenvolvedores. As aulas, em sua maioria, são explicações tendo código como pano de fundo, ou seja, nada de entediantes longas horas de teoria. Você encontrará tudo que é necessário para te guiar nos primeiros passos em lógica de programação. Terá como desafio o desenvolvimento da lógica do jogo clássico Pedra, Papel e Tesoura.\nVocê aprenderá com um profissional com mais de 10 anos de experiência com programação, formação acadêmica na área de engenharia e mestrado em modelagem computacional. Além disso possui experiência como professor em universidades, pesquisa acadêmica e desenvolvimento de software web e científico. Também contribui com a comunidade disponibilizando códigos open source e textos de técnicos sobre programação.\nComece agora sem precisar instalar nada em seu computador. Venha aprender os conceitos fundamentais da programação e se tornar um profissional mais competitivo no mercado de trabalho cada vez mais digital.",
      "target_audience": [
        "Quem deseja iniciar o aprendizado em lógica de programação.",
        "Quem deseja iniciar no mundo de desenvolvimento de software."
      ]
    },
    {
      "title": "Fundamentos de SCRUM, metodología ágil gestión de proyectos",
      "url": "https://www.udemy.com/course/fundamentos-de-scrum-metodologia-agil-gestion-de-proyectos/",
      "bio": "Metodologías y prácticas de SCRUM. Aprende los principios fundamentales y prácticas de Scrum en esta formación",
      "objectives": [
        "aprenderás SCRUM",
        "metodología de desarrollo ágil",
        "aprenderás a la gestión de proyectos de software, mantenimientos y procesos."
      ],
      "course_content": {},
      "requirements": [
        "Conexión a Internet",
        "ganas de aprender para innovar",
        "Este curso es más aplicable a la gente en el mundo del software o el desarrollo de productos, no es una limitante para las demás personas"
      ],
      "description": "Metodologías y prácticas de SCRUM. Aprende los principios fundamentales y prácticas de Scrum en esta formación\n\n\nSCRUM es una de las metodologías ágiles más conocidas para la gestión de  proyectos. Las metodologías ágiles se centran es aspectos como la  flexibilidad en la introducción de cambios y nuevos requisitos durante  el proyecto, el factor humano, el producto final, la colaboración con el  cliente y el desarrollo incremental como formas de asegurar los buenos  resultados en proyectos con requisitos muy cambiantes o cuando se exige,  como es habitual, reducir los tiempos de desarrollo manteniendo una  alta calidad.\n¿A quién va dirigido?\nEste curso va dirigido a emprendedores, empresarios y a lideres  de equipo que deseen agilizar sus desarrollos y procesos usando el  framework SCRUM, sin embargo esta no es una limitante pues, puede ser  aplicado en proyectos personales e individuales.\nObtendrá el conocimiento combinado de metodologías ágiles y prácticas de scrum. Metodologías ágiles son los enfoques más populares en el desarrollo de software, mientras que las prácticas de scrum incluyen desarrollo de software por equipos multi-funcionales y de autogestión, la producción de código de trabajo al final de cada iteración o Sprint. Agile Scrum demuestra la capacidad de un profesional para implementar herramientas de scrum a los empleadores globales.",
      "target_audience": [
        "Cualquier persona que está empezando a utilizar Scrum o prácticas ágiles en el mundo del software y desarrollo de productos",
        "Personas que usen como práctica Scrum o Scrum Master, que quieren una herramienta para ayudar a los demás a comprender el proceso Scrum",
        "ganas de innovar y agilizar la gestión de proyectos es un gran plus."
      ]
    },
    {
      "title": "Everyday Optics",
      "url": "https://www.udemy.com/course/everyday-optics/",
      "bio": "Navigate optics with awareness and skill",
      "objectives": [
        "When and when not to use optics",
        "How to effectively implement optics in your production code",
        "Common ways of using optics, from simple records to deeply nested data structures",
        "Various naming conventions and primary libraries",
        "Ability to select the most suitable optic library for your projects"
      ],
      "course_content": {
        "Введение": [
          "Optics overview",
          "When to use optics",
          "When not to use optics",
          "How to choose your optics style",
          "Generic lens",
          "Libraries lens",
          "Libraries microlens",
          "Libraries optics",
          "Using optics with JSON",
          "Bonus section"
        ]
      },
      "requirements": [
        "Experience with Haskell is needed."
      ],
      "description": "Optics should be used, but they should be used with awareness.\nOptics allow us to read and modify parts of different data structures, such as fields of records, variants of unions, or elements of containers.\nThis course is not a generic overview of optics — instead, we’ll focus on why optics are fantastic, when to use them, when not to use them, and how to use them in the production code.\nMost people either fear and avoid them or love them so much that they use them for everything. We’re going to cover the most common ways of using optics:\nUse optics to work with simple records (bad idea).\nUse (generic) lenses to work with simple and nested records.\nUse optics with specific data and libraries (e.g. lens-aeson, amazonka).\nUse optics here and there for complex data and deeply nested records.\nThis course will review optics, cover the most popular encodings, the problems optics solve, naming conventions, concrete libraries, and techniques. We’ll also learn how to use optics to work with JSON. But we'll not discuss who will win in a fight: Joker from profunctors or Twan van Laarhoven.\nThis course is for people who:\nwant to actually start using optics;\nwant to introduce optics to their production code;\nwant to understand how to choose an optic library;\nwant to find an ergonomic way to deal with Haskell records;\nor want to find their comfort zone of using optics.\nThis course is not for people who:\nwant another optics overview;\nwant another theoretical explanation on how to build an optic library;\nwant to use and understand fancy operators;\nor want to use optics for everything.\nThroughout the course, we’re going to cover a few libraries:\nlens\ngeneric-lens\noptics\nlens-aeson\nWe expect that you are familiar with Haskell and a few extensions, such as OverloadedStrings.\n\nWe’ll use DataKinds, DeriveGeneric, DuplicateRecordFields, FlexibleContexts, FunctionalDependencies, NamedFieldPuns, OverloadedLabels, RecordWildCards, TemplateHaskell, TypeApplications, and a few others.\n\nWe’ll give a one-two sentence explanation when we enable each extension or dive deeper when it’s crucial. So you don’t have to know them in advance for this course. But if you want to — see our course on extensions.",
      "target_audience": [
        "Middle and Senior Haskell developers who want to know more about optics."
      ]
    },
    {
      "title": "600+ Spring Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/spring-interview-questions/",
      "bio": "Spring Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Spring Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nEmbark on your journey to mastering the Spring Framework with our comprehensive practice test course on Udemy! Designed meticulously for both budding and experienced developers, this course offers a unique opportunity to prepare for challenging interviews and enhance your Spring knowledge through extensive practice tests. With a focus on real-world applications and industry-relevant scenarios, our course covers all the essential aspects of the Spring Framework, making you interview-ready and confident in your skills.\nSpring Framework Basics\nOverview of Spring Framework: Understand the core concepts and architecture of the Spring Framework, setting a strong foundation for the rest of the course.\nBeans in Spring: Delve into Spring Beans, their lifecycle, and their role in dependency injection.\nSpring Configuration and ApplicationContext: Learn about configuring Spring applications and the pivotal role of ApplicationContext.\nDependency Injection and Inversion of Control: Master these key principles that form the backbone of the Spring Framework.\nSpring Bean Scopes: Explore the various bean scopes available in Spring and their use cases.\nAnnotations in Spring: Understand how annotations simplify configuration and logic implementation in Spring.\nSpring Core Technologies\nThe Spring IoC Container: Get to grips with the Inversion of Control container and its importance in Spring.\nSpring AOP (Aspect-Oriented Programming): Learn how AOP addresses cross-cutting concerns in a Spring application.\nData Validation and Conversion: Understand the mechanisms for validating and converting data in Spring applications.\nSpring Events: Explore the event handling mechanism in the Spring Framework.\nResource Management in Spring: Learn about the efficient management of resources like beans, database connections, etc.\nSpring Expression Language (SpEL): Discover the powerful expression language for manipulating and querying object graphs at runtime.\nData Access with Spring\nSpring Data Access Overview: Gain insights into Spring’s data access philosophy and integration with various data sources.\nJDBC with Spring: Learn how Spring simplifies the use of JDBC with template classes.\nTransactions Management in Spring: Master the concepts of transaction management in Spring for reliable data operations.\nSpring Data JPA: Explore the integration of Spring with JPA for object-relational mapping.\nIntegrating Spring with Hibernate: Understand how to leverage Hibernate within the Spring Framework.\nSpring Data Repositories: Delve into the Spring Data Repository abstraction for data access layers.\nSpring Web Technologies\nSpring Web MVC Framework: Get a thorough understanding of Spring's web MVC framework for building web applications.\nRESTful Web Services with Spring: Learn to create RESTful services using Spring.\nSpring Security: Explore the robust security framework provided by Spring for secure applications.\nWebSockets in Spring: Understand how to implement real-time communication in your applications with Spring WebSockets.\nSpring WebFlux: Dive into reactive programming with Spring and handle non-blocking data streams.\nError Handling in Spring MVC: Learn best practices for handling exceptions and errors in Spring web applications.\nSpring Boot\nIntroduction to Spring Boot: Discover the simplicity and power of Spring Boot for rapid application development.\nAuto-Configuration in Spring Boot: Understand how Spring Boot simplifies application configuration.\nSpring Boot Starters: Get to know the ready-to-use configurations for various Spring modules.\nCreating RESTful Services with Spring Boot: Learn to effortlessly create RESTful web services with Spring Boot.\nSpring Boot Actuator: Explore the features of Spring Boot Actuator for monitoring and managing your application.\nTesting in Spring Boot: Gain knowledge about testing Spring Boot applications efficiently.\nAdvanced Spring Topics\nMicroservices with Spring Cloud: Step into the world of microservices with Spring Cloud and learn how to build scalable systems.\nSpring Batch Processing: Understand how to perform batch processing in a Spring application.\nSpring Integration: Learn about integrating various systems and technologies with Spring.\nReactive Programming with Spring: Delve into the reactive programming paradigm using Spring.\nSpring Kafka Integration: Explore how to integrate Kafka with Spring for handling message streams.\nSpring Caching: Learn about caching mechanisms in Spring to improve application performance.\nRegularly Updated Questions to Keep You Current\nOne of the standout features of our Spring Framework practice test course is our commitment to keeping the content fresh and relevant. We understand that the technology landscape is constantly evolving, and staying updated is crucial for success. Therefore, we regularly update our question bank to reflect the latest trends, practices, and updates in the Spring Framework. This ensures that you're always preparing with the most current information, giving you an edge in your interview preparation.\nSample Practice Test Questions\nWhat is the primary purpose of the Spring BeanFactory?\nA) To generate beans dynamically\nB) To manage the lifecycle of beans\nC) To integrate beans with external frameworks\nD) To provide backward compatibility\nCorrect Answer: B) To manage the lifecycle of beans\nExplanation: The BeanFactory is an advanced configuration mechanism capable of managing any type of object. The primary responsibility of the BeanFactory is to configure, create, and manage beans. This involves instantiating beans, wiring them together, configuring them, and managing their complete lifecycle. The BeanFactory provides the foundation for the Spring Framework's Dependency Injection functionality. It's a sophisticated implementation of the factory pattern. While option A seems viable, it's not the primary purpose. Options C and D are not direct responsibilities of the BeanFactory.\nWhich of the following is true about Spring's @Autowired annotation?\nA) It can only be applied to constructor arguments.\nB) It is used for dependency injection.\nC) It requires explicit bean definition in XML.\nD) It only works with primitive data types.\nCorrect Answer: B) It is used for dependency injection\nExplanation: The @Autowired annotation in Spring is used for automatic dependency injection. It marks a constructor, field, setter method, or config method as to be autowired by Spring's dependency injection facilities. This annotation allows Spring to resolve and inject collaborating beans into your bean. While it's commonly used with fields and constructors, it's not limited to them, making option A incorrect. Option C is incorrect as @Autowired works with both XML configuration and Java-based configuration, and it's not restricted to either. Option D is also incorrect because @Autowired works with a variety of object types, not just primitives.\nWhat is the significance of the @Transactional annotation in Spring?\nA) It provides a mechanism for data caching.\nB) It indicates that a method or class should be transactional.\nC) It is used for type conversion.\nD) It is used for validating method input.\nCorrect Answer: B) It indicates that a method or class should be transactional\nExplanation: The @Transactional annotation in Spring is used to declare transactional semantics for a particular method or class. When a method annotated with @Transactional is executed, Spring dynamically creates a proxy that manages the transaction lifecycle. This involves beginning and committing a transaction before and after the annotated method is invoked. Options A, C, and D, while relevant to other aspects of Spring, do not describe the purpose of the @Transactional annotation.\nIn Spring MVC, what role does the DispatcherServlet play?\nA) It acts as a front controller.\nB) It serves as a template resolver.\nC) It is used for exception handling.\nD) It manages security and authentication.\nCorrect Answer: A) It acts as a front controller\nExplanation: In the Spring MVC framework, the DispatcherServlet plays the role of a front controller. It is a central servlet that manages the flow of the Spring MVC application. All incoming requests go through the DispatcherServlet, which then routes these requests to various controllers based on the URL mappings. It is the core of the Spring Web MVC framework and handles the orchestration of request processing, view resolution, locale, time zone resolution, and much more. While it does play a role in exception handling, option C is not its primary function, and options B and D describe responsibilities that are not handled by the DispatcherServlet.\nWhich feature does Spring Boot provide to simplify application configuration?\nA) XML-based configuration\nB) Hard-coded configurations in code\nC) Auto-configuration\nD) Manual bean registration\nCorrect Answer: C) Auto-configuration\nExplanation: Spring Boot provides a feature known as auto-configuration, designed to simplify the process of setting up and configuring a Spring application. Auto-configuration attempts to automatically configure your Spring application based on the jar dependencies that you have added. For instance, if HSQLDB is on your classpath, and you have not manually configured any database connection beans, then Spring Boot will auto-configure an in-memory database. The aim is to reduce the amount of manual configuration required. XML-based configuration (option A) is a feature of Spring but not specifically a simplification provided by Spring Boot. Options B and D describe approaches that are contrary to the philosophy of Spring Boot, which emphasizes convention over configuration and seeks to minimize manual setup.\nEach question is designed to test specific knowledge areas within the Spring Framework and is accompanied by a detailed explanation. This approach not only helps you prepare for interviews but also deepens your understanding of Spring's core concepts and functionalities.\nEnroll Now and Ace Your Spring Interviews!\nJoin us on this comprehensive journey to conquer the Spring Framework. With our expertly crafted practice tests and detailed explanations, you'll be well on your way to interview success and professional growth in the world of Spring development.",
      "target_audience": [
        "Aspiring and Early-Career Java Developers: If you're starting your journey in Java development and wish to specialize in one of the most widely used frameworks, this course is a perfect fit. It will provide you with a solid foundation in Spring, covering essential concepts and practical applications.",
        "Experienced Java Developers Seeking Specialization in Spring: For those who have been working with Java but not specifically with the Spring Framework, this course offers an opportunity to add a valuable skill set to your portfolio. It will help you transition into more specialized roles requiring expertise in Spring.",
        "Software Developers Preparing for Technical Interviews: If you're anticipating interviews that require knowledge of the Spring Framework, this course serves as an excellent preparation tool. The practice tests and detailed explanations are tailored to simulate typical interview questions and scenarios, enhancing your readiness and confidence.",
        "Professionals Working on Java and Spring Projects: Developers currently engaged in projects using Spring will find this course useful for brushing up on concepts and learning best practices. It's an excellent resource for ensuring that you're up-to-date with the latest features and methodologies in Spring.",
        "Computer Science Students and Enthusiasts: Students pursuing computer science or related fields, as well as programming enthusiasts, can benefit significantly from this course. It provides a structured approach to learning a key framework used in enterprise Java development, enhancing both academic learning and practical skills.",
        "Career Changers Targeting the Java Development Domain: If you're considering a shift to Java development, this course will help you build foundational knowledge and practical skills in the Spring Framework, making you a more competitive candidate in the job market."
      ]
    },
    {
      "title": "Nest + GraphQL: Evoluciona tus APIs",
      "url": "https://www.udemy.com/course/nest-graphql/",
      "bio": "Autenticación, autorización, DigitalOcean, Docker, Docker Hub, code first, queries, mutations, enumeraciones y más",
      "objectives": [
        "Aprender GraphQL con Nest",
        "Aprender a crear GraphQL endpoints",
        "Trabajar con el paquete nativo de GraphQL para Nest",
        "Trabajar con el patrón Code First",
        "Conectar y desplegar GraphQL endpoints en la nube",
        "Autenticación y autorización de GraphQL",
        "Crear un único endpoint super poderoso",
        "Conectar GraphQL y Nest con Postgres"
      ],
      "course_content": {},
      "requirements": [
        "Estar familiarizado con Nest (decoradores, clases, módulos)",
        "No es necesario saber nada sobre GraphQL (esto es cubierto en el curso)",
        "Conocimiento de JavaScript y TypeScript es recomendado",
        "Este NO es un curso para aprender Nest puro, es para aprender Nest con GraphQL"
      ],
      "description": "Bienvenidos a mi curso de Nest + GraphQL\nEste curso está enfocado para todas las personas con conocimiento básico o intermedio de Nest pero conocen poco o nada sobre GraphQL.\nEl curso parte de que el estudiante sabe cómo crear un RESTful api tradicional en Nest y de ahí empezamos a trabajar explicando los conceptos fundamentales de GraphQL y cómo empezar a implementar campos para poderlos consultar en nuestros queries.\nEl curso cuenta con guías de atajos hechas por mi persona para ayudarnos a familiarizarnos y memorizar conceptos necesarios de Nest y GraphQL, de esa forma el material didáctico les servirá para ojearlo cada vez que regresen a estudiar el curso.\nPuntualmente tocamos temas de interes como:\n\n\nNest y el RESTful tradicional\n¿Qué es GraphQL? y ¿Para qué me puede servir?\nBeneficios de GraphQL sobre REST\nCode First vs Schema First\nCode First a profundidad\nGraphQL Queries y Mutations\nDTOs\nArgumentos\nInputs\nArgumentos compuestos\nValidaciones automaticas y semi-automaticas\nErrores comunes en GraphQL\nResolvers\nFragmentos\nScalars\nObjectTypes\nVariables de GraphQL\nEnumeraciones de TypeScript y su integración GraphQL\nDocumentación\nPaginaciones y paginaciones anidadas dentro de objetos\nFiltros y filtros anidados dentro de objetos\nDocker y Docker Compose\nSubida de imágenes en DockerHub\nDespliegues en DigitalOcean\nPostgres\nRelaciones\nGit y GitHub\nJWTs\nProtección de ruta principal y campos\nAutorización\nDecoradores personalizados\nCreación de documentación automática y personalización\nSemilla de construcción\nMucho más\nEl curso está cargado de información para ayudar a que nuestros desarolladores de FrontEnd puedan auto-servirse de la información que necesitan basados en nuestro GraphQL endpoint.\n\n\nPor favor consulta los requisitos para tomar este curso porque no es para personas que nunca han trabajado con Nest, pero sí para personas que nunca han trabajado con GraphQL.\n\n\nBienvenido a mi curso y nos vemos en el próximo video!",
      "target_audience": [
        "Personas que conozcan Nest y tengan curiosidad de expandirlo con GraphQL",
        "Personas que quieran cambiar su RESTFul tradicional por GraphQL",
        "Todos los que tengan curiosidad de ver lo que GraphQL con Nest puede hacer",
        "Todos los que quieran comprender qué puede hacer GraphQL por nosotros",
        "Personas que quieran desplegar en DigitalOcean - Node y Postgres"
      ]
    },
    {
      "title": "600+ Design Patterns Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/design-patterns-interview-questions/",
      "bio": "Design Patterns Interview Questions and Answers Preparation Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Design Patterns Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the ultimate Design Patterns Interview Questions Practice Test course! Whether you're a seasoned developer looking to brush up on your design pattern knowledge or a job seeker preparing for interviews, this course is tailored just for you.\nIn this practice test course, we cover six essential sections, each diving deep into various design patterns and related concepts commonly asked in interviews. Carefully crafted practice questions, you'll have ample opportunity to test your understanding and sharpen your skills.\nSection 1: Creational Patterns\nCreational patterns are crucial for understanding how objects are created in software design. In this section, you'll explore:\nSingleton Pattern: Understand the implementation of this pattern and its use cases in creating a single instance of a class.\nFactory Method Pattern: Dive into creating objects without specifying the exact class to be instantiated.\nAbstract Factory Pattern: Learn how to create families of related or dependent objects without specifying their concrete classes.\nBuilder Pattern: Master the creation of complex objects step by step.\nPrototype Pattern: Explore the creation of new objects by copying an existing instance.\nObject Pool Pattern: Understand how to manage a pool of reusable objects to improve performance.\nSection 2: Structural Patterns\nStructural patterns focus on the composition of classes and objects to form larger structures. This section covers:\nAdapter Pattern: Learn how to make incompatible interfaces work together.\nBridge Pattern: Understand decoupling abstraction from implementation.\nComposite Pattern: Dive into composing objects into tree structures to represent part-whole hierarchies.\nDecorator Pattern: Explore dynamically adding responsibilities to objects.\nFacade Pattern: Master simplifying complex subsystems with a unified interface.\nProxy Pattern: Understand controlling access to objects by using a surrogate or placeholder.\nSection 3: Behavioral Patterns\nBehavioral patterns focus on communication between objects, enhancing flexibility and maintainability. This section includes:\nObserver Pattern: Learn how to define a one-to-many dependency between objects.\nStrategy Pattern: Dive into defining a family of algorithms, encapsulating each one, and making them interchangeable.\nCommand Pattern: Explore encapsulating a request as an object, thereby allowing parameterization of clients with queues, requests, and operations.\nIterator Pattern: Master providing a way to access the elements of an aggregate object sequentially without exposing its underlying representation.\nTemplate Method Pattern: Understand defining the skeleton of an algorithm in the superclass but allowing subclasses to override specific steps.\nVisitor Pattern: Learn how to represent an operation to be performed on elements of an object structure.\nSection 4: Architectural Patterns\nArchitectural patterns provide solutions to architectural problems in software engineering. This section covers:\nModel-View-Controller (MVC) Pattern: Explore separating an application into three main components.\nModel-View-ViewModel (MVVM) Pattern: Dive into separating an application into three interconnected components.\nLayered Architecture Pattern: Understand dividing an application into different layers.\nMicroservices Pattern: Learn how to build a system that's composed of small, independently deployable services.\nEvent-Driven Architecture (EDA) Pattern: Master handling events that occur within a system.\nService-Oriented Architecture (SOA) Pattern: Explore designing and developing software in the form of interoperable services.\nSection 5: Concurrency Patterns\nConcurrency patterns address challenges in concurrent programming. This section includes:\nActive Object Pattern: Understand ensuring that method invocations are queued, rather than executed immediately.\nMonitor Object Pattern: Dive into synchronizing access to shared resources.\nThread Pool Pattern: Learn how to manage a pool of threads to perform tasks asynchronously.\nImmutable Object Pattern: Explore ensuring that an object's state cannot be modified after construction.\nDouble-Checked Locking Pattern: Master reducing the overhead of acquiring a lock by first testing the locking criterion.\nHalf-Sync/Half-Async Pattern: Understand managing synchronous and asynchronous communication in a system.\nSection 6: Anti-Patterns\nAnti-patterns are common pitfalls in software development. This section covers:\nSingleton Abuse: Explore instances where the singleton pattern is misused.\nGod Object Anti-Pattern: Understand creating classes that know too much or do too much.\nSpaghetti Code Anti-Pattern: Dive into poorly structured and unorganized code.\nGolden Hammer Anti-Pattern: Learn how to avoid relying on a familiar tool or solution regardless of its appropriateness.\nMagic Number Anti-Pattern: Master avoiding hardcoding numerical values.\nLava Flow Anti-Pattern: Explore obsolete or dead code that is retained for fear of breaking the system.\nEnroll now in this Design Patterns Interview Questions Practice Test course and take your software engineering skills to the next level. With practical exercises and detailed explanations, you'll be well-prepared to ace your next interview!",
      "target_audience": [
        "Software Engineering Students: Undergraduate or graduate students studying software engineering, computer science, or a related field who want to solidify their understanding of design patterns and prepare for technical interviews.",
        "Entry-Level Developers: Individuals who are new to the software development industry and want to enhance their knowledge of design patterns to stand out in job interviews and advance their careers.",
        "Experienced Developers: Seasoned developers looking to deepen their understanding of design patterns, refine their problem-solving skills, and stay up-to-date with industry best practices.",
        "Job Seekers: Professionals preparing for technical interviews for software engineering positions at top tech companies or startups where knowledge of design patterns is a crucial requirement.",
        "Software Development Enthusiasts: Hobbyists or self-taught programmers interested in expanding their skill set and learning about advanced software design concepts.",
        "Technical Interview Preparation: Individuals gearing up for technical interviews who want to practice solving a variety of design pattern-related problems commonly asked during interviews at tech companies."
      ]
    },
    {
      "title": "Serverless en Español con AWS y Serverless Framework",
      "url": "https://www.udemy.com/course/serverless-en-espanol/",
      "bio": "Desarrollo de aplicaciones sin servidor en AWS | Diciembre 2024",
      "objectives": [
        "Introducción al uso de AWS",
        "Crear y configurar una cuenta de AWS",
        "Responder a las preguntas: \"Qué es Serverless? y Cuándo usarlo?\"",
        "Patrones básicos de Serverless",
        "Uso de Serverless Framework",
        "Configurar el entorno de trabajo para desplegar aplicaciones serverless",
        "Ejecutar funciones Lambda de diferentes formas (API Gateway, SQS, DynamoStreams)",
        "Usar API Gateway",
        "Guardar información con DynamoDB y usar DynamoDB streams",
        "Desplegar y gestionar aplicaciones serverless en la nube"
      ],
      "course_content": {
        "Bienvenido al curso": [
          "Introducción al curso",
          "Sobre el instructor",
          "Que vamos a construir en este curso?",
          "Qué es cloud? Qué es AWS?",
          "Infraestructura de AWS",
          "El plan gratuito y el plan de pago",
          "Crea tu cuenta de AWS",
          "Asegura tu cuenta de AWS",
          "Qué es AWS Lambda?",
          "Crea tu primer AWS Lambda",
          "Resumen de la sección 1"
        ],
        "Qué es serverless?": [
          "Qué es serverless?",
          "Cuando usar serverless?",
          "Qué es Serverless Framework?",
          "Instalar y configurar Serverless Framework",
          "Crea tu primer proyecto con Serverless Framework",
          "Resumen de la sección 2"
        ],
        "API Gateway": [
          "Qué es API Gateway?",
          "AWS Lambda + API Gateway",
          "Empezando con el laboratorio",
          "Cómo verificar que la aplicación funciona?",
          "Tarea 1 - Crear un nuevo endpoint",
          "Solución a la tarea 1",
          "Resumen sección 3"
        ],
        "SQS": [
          "Qué es SQS?",
          "Crear una lambda que mande un mensaje a la cola",
          "Introducción a los permisos en AWS",
          "Introducción a variables de ambiente",
          "AWS Lambda + SQS",
          "Tarea 2 - Agregar una nueva cola",
          "Solución a la tarea 2",
          "Resumen sección 4"
        ],
        "DynamoDB": [
          "Qué es DynamoDB?",
          "Crear una tabla de DynamoDB",
          "Introducción a la AWS SDK",
          "Operar sobre la tabla de DynamoDB usando AWS SDK",
          "Tarea 3 - Chequear el estado de un pedido",
          "Solución a la tarea 3",
          "Resumen sección 5"
        ],
        "DynamoDB streams": [
          "Qué son DynamoDB Streams?",
          "AWS Lambda + DynamoDB streams"
        ],
        "Para finalizar": [
          "Repaso de todo lo que aprendiste",
          "Limpiando la cuenta de AWS",
          "Y ahora cómo sigo aprendiendo?",
          "Bonus lecture: Lista de recursos para seguir aprendiendo"
        ]
      },
      "requirements": [
        "Conocimientos de Javascript",
        "Usar la terminal",
        "Una tarjeta de crédito y un teléfono que pueda recibir llamadas (para configurar tu cuenta de AWS)",
        "Conexión a internet",
        "No es necesario saber nada sobre AWS o Serverless para comenzar el curso",
        "Uso básico de git y Github"
      ],
      "description": "*** ACTUALIZADO DICIEMBRE 2024 ***\n\n\nEn este curso aprenderás en español todo lo necesario para desarrollar aplicaciones sin servidor en la nube, usando tecnologías que escalan automáticamente y sin necesidad de gestionar servidores. Te guiaré paso a paso en este proceso.\n¿Te suenan conceptos como Serverless, AWS Lambda, infraestructura como código o funciones como servicio?\nSi los has oído pero no sabes bien qué significan, ¡este curso es para ti!\n¿Qué aprenderás?\nEste curso práctico cubrirá los conceptos básicos de las aplicaciones serverless. Veremos en profundidad AWS Lambda, API Gateway, SQS, DynamoDB, CloudFormation y Serverless Framework. Aunque algunos de estos términos sean nuevos, al final del curso los dominarás y podrás seguir explorando el mundo serverless en cursos avanzados.\nAl finalizar, serás capaz de desarrollar tus propias aplicaciones sin servidor en AWS y comprenderás a fondo los conceptos serverless. Además, tendrás una aplicación de referencia creada con múltiples servicios de AWS y definida enteramente como infraestructura como código.\n¿Cómo está organizado el curso?\nDesarrollaremos juntos una aplicación serverless paso a paso. Te invito a pausar el curso y crear tu aplicación mientras avanzamos. El curso se organiza en siete secciones, cada una enfocada en un concepto clave y todas las secciones son prácticas.\n\n\nBienvenido al mundo de serverles!",
      "target_audience": [
        "Desarrolladores juniors con experiencia en desarrollo de servidores usando REST y bases de datos",
        "Desarrolladores juniors que quieren aprender a usar la nube específicamente AWS",
        "Desarrolladores que quieren aprender sobre desarrollo de aplicaciones sin servidor"
      ]
    },
    {
      "title": "Enough GitHub for Deployments",
      "url": "https://www.udemy.com/course/enough-github-for-deployments/",
      "bio": "A Complete Course on Git and GitHub",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Github Deep Dive": [
          "Deep Dive 1",
          "Deep Dive 2",
          "Architecture",
          "Creating the First Repository",
          "Local Machine to Repository Journey",
          "Git Pull (Live Troubleshooting on Merge Conflict)",
          "Branching (Multiverse of Git)",
          "Wrap Codes/Software into releases (FINAL LECTURE)"
        ]
      },
      "requirements": [
        "No Programming expertise required,",
        "Laptop/Desktop",
        "Github Profile",
        "Internet Connection"
      ],
      "description": "Git and GitHub: Mastering Version Control and Collaboration\nBecome a Git Pro and Collaborate Effectively on Projects\nAre you tired of losing track of your code changes or struggling to collaborate with others on projects? Git and GitHub are the essential tools for modern developers. This comprehensive course will guide you through everything you need to know to become a Git expert.\nKey Topics Covered:\nGit Basics:\nUnderstanding version control\nSetting up Git\nCreating repositories\nCommitting changes\nBranching and merging\nGitHub Essentials:\nForking and cloning repositories\nCreating pull requests\nCollaborating with others\nUsing issues and projects\nPublishing Releases:\nCreating tags and releases\nManaging release notes\nGit Bash Commands:\nIn-depth exploration of Git commands\nPractical examples and exercises\nWhy Enroll in This Course?\nLearn from a Git Expert: Our experienced instructor will provide clear explanations and hands-on examples.\nMaster Essential Skills: Gain the skills needed to effectively use Git and GitHub in your development workflow.\nImprove Collaboration: Learn how to collaborate seamlessly with other developers and contribute to open-source projects.\nAdvance Your Career: Git and GitHub are essential for modern developers. Mastering these tools will make you a valuable asset to any team.\nEnroll today and start your journey to becoming a Git and GitHub pro!",
      "target_audience": [
        "Beginners, Intermediate, and Professionals"
      ]
    },
    {
      "title": "Git tutorials for Beginners - Complete Course",
      "url": "https://www.udemy.com/course/gitandgithub/",
      "bio": "a complete practical course on git and github",
      "objectives": [],
      "course_content": {
        "Information about Bonus Lectures/Interview Questions": [
          "Information about Bonus lectures"
        ],
        "Git Introduction and Setup": [
          "Git Introduction and Installation",
          "Git architecture, Git INIT and Git CLONE",
          "Set up your own practice environment"
        ],
        "Working with Staging area and Snapshots": [
          "Git ADD :: Working directory to Staging",
          "Git COMMIT :: Staging to Local Repository",
          "Git DIFF, Git RM (--cached) and Git RESET --hard",
          "Practice Test 1"
        ],
        "Branching and Merging": [
          "Introduction to branching and project setup",
          "Git Branch - How to create BRANCHES",
          "Switching between branches",
          "Merging of branches"
        ],
        "Remote Repository": [
          "Git fetch, git pull and git push",
          "Pull Requests",
          "How to delete remote branch",
          "How to Delete Local branch"
        ],
        "Other key concepts": [
          "Git Stash, stash pop, stash list, stash show, stash clear",
          "Fork repository",
          "Github markdown"
        ],
        "Assignments": [
          "Assignment 2",
          "Assignment 3",
          "From things we haven't covered.."
        ]
      },
      "requirements": [
        "Install Git. Create a Github account. Content is in English."
      ],
      "description": "Far away from books, we have created this course to give you practical exposure of how git and github. You can easily follow our tutorials and become expert on git even if you have never worked on it.\nIn this course, you will not learn everything there is to know about  Git, but you will build a strong conceptual understanding of the  technology, and afterward will be able to confidently dig deeper on any  topic that interests you. This course assumes no previous knowledge of  Git, but if you do have experience with it, you may find this course to  be both useful and challenging. This is especially true if you currently  \"know just enough Git to be dangerous\".\n\n\nJoin us on Telegram for Questions/ Live Chat - t[dot]me/letsautomate",
      "target_audience": [
        "Beginners who do not know or have very little knowledge of Git and Github"
      ]
    },
    {
      "title": "DataDog for CI/CD [Continuous Integration/Delivery]",
      "url": "https://www.udemy.com/course/datadog-for-cicd-continuous-integrationdelivery/",
      "bio": "Monitor your CI/CD pipelines using DataDog",
      "objectives": [
        "How to Integrate DataDog into your CI/CD process (Using Jenkins or Circle CI for example)",
        "What is the role of DataDog in the DevOps process",
        "How to effectively use DataDog dashboards",
        "Why use Continuous Integration/Deployment",
        "Alerting on success of failure of CI pipeline via DataDog",
        "How to manage Maintenance and downtime windows using DataDog",
        "Integrate DataDog with Jira for project management",
        "Network monitoring using DataDog",
        "Cross Browser Testing after deployment"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "CI/CD Overview",
          "Why Monitor CI/CD Piplelines",
          "DataDog Architecture"
        ],
        "Setting up DataDog for CI/CD": [
          "Section Overview",
          "Jenkins -- DataDog Integration",
          "Gitlab --DataDog Integration",
          "Jira Integration",
          "Circle CI -- DataDog Integration",
          "Datadog CI Setup Quiz"
        ],
        "Beyond just the CI Pipeline": [
          "Section Overview",
          "Alerting for CI pipelines",
          "Managing Maintenance and downtime",
          "Network Monitoring",
          "Cross Browser Testing",
          "DataDog - CI Quiz"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required"
      ],
      "description": "Welcome to this Datadog Monitoring Course\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in DataDog for DevOps.\nIn this course you will Learn by example, where we demonstrate all the concepts discussed so that you can see them working, and you can try them out for yourself as well.\nMy step-by-step training will initiate you into the world of DataDog and CI/CD.\nDataDog works with  CI/CD (Continuous Integration/Delivery) tools and provides you with actionable insights. It allows you to monitor, track,  and send alerts depending on problematic trends Datadog may see. This can include a decline in successful builds, extended time periods being spent on specific stages etc.  DataDog will allow you to correlate data points from logs, services, networks etc.\nWhy Learn DataDog?\nAnother Question: What tool should you use for Pipeline Tracing when you have multiple branches and environments and need it in one place for analysis?\nDataDog will help you in all stages of Continuous Integration. From granular visibility to high level overviews, DataDog is there for you. DataDog can leverage other tools like Slack, PagerDuty and AWS. Pinpoint all issues during the pipeline slow and setup monitors and alarms to track the pipeline. Use DataDog to visualize and create your branches and jobs. Finally, by integrating all your data sources, you can use DataDog to optimize your data visualization process. This is done by creating interactive dashboards, monitors and widgets in DataDog other 3rd party tools. DataDog helps us monitor all our metrics and logs. Email and Slack Alerting notify you of any upcoming issues.\nDuring this course we will start by covering a range of concepts from an introduction to what an CI pipeline is, to APM, to the right way to use DataDog. We will then do a step by step guide of how to integrate DataDog into your pipelines using plugins and web-hooks. We cover all the popular integrations including Gitlab, Jenkins and Slack.  Finally we take a look at some real life examples to study where and how DataDog can help us. We ensure you learn the best practices at all times.\nBy the end of the course you will have set up and learnt to monitor your pipelines using Datadog like a pro.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "This course is great if you're in an Ops or DevOps position and you want to learn about CI Monitoring via DataDog"
      ]
    },
    {
      "title": "Master Salesforce Agentforce: Practice Tests & Exam Prep",
      "url": "https://www.udemy.com/course/master-salesforce-agentforce-practice-tests-exam-prep/",
      "bio": "Prepare with 100+ real-time practice questions and detailed explanations to pass the Agentforce Specialist exam",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you preparing for the Salesforce Certified Agentforce Specialist Exam and looking for a practical, hands-on way to practice? This course is designed specifically to help you master Agentforce concepts, tackle real-world scenarios, and confidently pass your certification exam.\nIn this course, you will get access to 100+ realistic multiple-choice practice questions covering all key Agentforce topics. Each question comes with detailed explanations, helping you understand why each answer is correct or incorrect. By practicing these questions, you’ll strengthen your conceptual knowledge and gain confidence in applying it to real-world Salesforce situations.\nYou will also learn to analyze scenario-based questions, configure and manage AI-powered Salesforce agents, and optimize their performance. The course provides strategies for efficiently approaching questions, managing time, and maximizing your exam score. Even if you are a beginner with limited Salesforce experience, this course is structured to guide you step by step, making complex Agentforce concepts easy to understand.\nAdditionally, the course emphasizes practical application, helping you connect theory to hands-on Salesforce configurations. By the end of the course, you will be fully prepared to tackle the Salesforce Agentforce Specialist Exam, improve your Salesforce skills, and confidently apply Agentforce knowledge in real-world projects.\nWhether you are a Salesforce professional, admin, consultant, or student, this course will give you the tools, practice, and strategies needed to excel in the exam and enhance your career opportunities. Start learning today and take the first step toward becoming a certified Salesforce Agentforce Specialist!",
      "target_audience": [
        "Salesforce professionals preparing for the Agentforce Specialist Certification Exam.",
        "Salesforce admins, consultants, or developers who want to gain practical knowledge of AI-powered agents.",
        "Students, freshers, or career switchers who want to learn Agentforce concepts and practice exam questions.",
        "Professionals who want to strengthen their skills in scenario-based problem solving within Salesforce.",
        "Anyone interested in hands-on practice, exam readiness, and detailed explanations for Agentforce features."
      ]
    },
    {
      "title": "Software Engineering for Beginner",
      "url": "https://www.udemy.com/course/software-engineering-sen/",
      "bio": "The nature of software as an introduction of software engineering",
      "objectives": [],
      "course_content": {
        "Introduction to Software Engineering": [
          "Overview of Software Engineering Part 1",
          "Overview of Software Engineering Part 2",
          "Nature of Software Part 1",
          "Nature of Software Part 2",
          "Introduction to Software Engineering"
        ],
        "Prescriptive Process Model and Agile Development": [
          "Prescriptive Process Models for Software Development Part 1",
          "Prescriptive Process Models for Software Development Part 2",
          "Waterfall Model Part 1",
          "Waterfall Model Part 2",
          "Game Development Life Cycle (GDLC) Part 1",
          "Game Development Life Cycle (GDLC) Part 2",
          "Agile Software Development Part 1",
          "Agile Software Development Part 2",
          "Prescriptive Process Model and Agile Development"
        ],
        "Software Testing": [
          "Cyclomatic Complexity Part 1",
          "Cyclomatic Complexity Part 2",
          "Software Testing"
        ],
        "Software Metrics": [
          "Process and Project Metrics Part 1",
          "Process and Project Metrics Part 2",
          "Software Metrics"
        ],
        "Software Project Management": [
          "Project Management Concepts Part 1",
          "Project Management Concepts Part 2",
          "Project Scheduling Part 1",
          "Project Scheduling Part 2",
          "Software Project Management"
        ]
      },
      "requirements": [
        "Java, Phyton, C#"
      ],
      "description": "The course has some topics, starting from overview of software engineering, the nature of software as an introduction of software engineering. Then continue to process model which include prescriptive process model and agile development for software development, software development life cycle, game development life cycle and agile software development. The other topics are cyclomatic complexity for software testing and process and project metrics for the software metrics. The last topic is project management for software development which are consist of project management concept and project scheduling. There are ten topics in which each topic has about duration for six to seven minutes, so the time needed for finishing all topics is around one hour.",
      "target_audience": [
        "Student who want to learn software engineering"
      ]
    },
    {
      "title": "Uber Interview Questions - Data Structures & Algorithms",
      "url": "https://www.udemy.com/course/uber-coding-interview-questions-data-structures-algorithms/",
      "bio": "Learn top questions asked in uber coding rounds",
      "objectives": [
        "Software Developers Preparing for Uber Coding Interviews",
        "Developers who want to work as software developers at Uber",
        "Software developers who want to practice leetcode questions asked in Uber Interviews",
        "Software developers who want to practice leetcode problems in Java, Javascript, C++ or Python languages."
      ],
      "course_content": {
        "Best Time to Buy And Sell A Stock - Arrays": [
          "Best Time to Buy And Sell A Stock - Java Solution",
          "Best Time to Buy And Sell A Stock - Javascript Solution",
          "Best Time to Buy And Sell A Stock - C++ Solution",
          "Best Time to Buy And Sell A Stock - Python Solution"
        ],
        "Maximum Sum Subarray - Arrays": [
          "Maximum Sum Subarray - Java Solution",
          "Maximum Sum Subarray - Javascript Solution",
          "Maximum Sum Subarray - C++ Solution",
          "Maximum Sum Subarray - Python Solution"
        ],
        "Product Of Array Except Self - Arrays": [
          "Product Of Array Except Self - Java Solution",
          "Product Of Array Except Self - Javascript Solution",
          "Product Of Array Except Self - C++ Solution",
          "Product Of Array Except Self - Python Solution"
        ],
        "Trapping Rain Water - Arrays": [
          "Trapping Rain Water - Java Solution",
          "Trapping Rain Water - Javascript Solution",
          "Trapping Rain Water - C++ Solution",
          "Trapping Rain Water - Python Solution"
        ],
        "Search Insert Position - Sorting": [
          "Search Insert Position - Java Solution",
          "Search Insert Position - Javascript Solution",
          "Search Insert Position - C++ Solution",
          "Search Insert Position - Python Solution"
        ],
        "Longest Substring Without Repeating Characters - Sliding Window Method": [
          "Longest Substring Without Repeating Characters - Java Solution",
          "Longest Substring Without Repeating Characters - Javascript Solution",
          "Longest Substring Without Repeating Characters - C++ Solution",
          "Longest Substring Without Repeating Characters - Python Solution"
        ],
        "Add Two Numbers - Linked List": [
          "Add Two Numbers - Java Solution",
          "Add Two Numbers - Javascript Solution",
          "Add Two Numbers - C++ Solution",
          "Add Two Numbers - Python Solution"
        ],
        "Reverse Linked List - Linked List": [
          "Reverse Linked List - Java Solution",
          "Reverse Linked List - Javascript Solution",
          "Reverse Linked List - C++ Solution",
          "Reverse Linked List - Python Solution"
        ],
        "Merge Intervals - Stacks": [
          "Merge Intervals - Java Solution",
          "Merge Intervals - Javascript Solution",
          "Merge Intervals - C++ Solution",
          "Merge Intervals - Python Solution"
        ],
        "Find the Duplicate Number - Hash Table": [
          "Find the Duplicate Number - Java Solution",
          "Find the Duplicate Number - Javascript Solution",
          "Find the Duplicate Number - C++ Solution",
          "Find the Duplicate Number - Python Solution"
        ]
      },
      "requirements": [
        "Basic programming experience in any of the 4 languages : Java, Javascript, C++ & Python"
      ],
      "description": "Are you eager to land your dream job at Uber as a software engineer? Ace your Uber coding interviews with confidence by enrolling in my comprehensive course that focuses on the top problems asked during Uber interview rounds.\nWhat You'll Learn:\nTop Uber Interview Problems: I've meticulously curated a collection of the most frequently asked coding problems in Uber interviews, ensuring you're well-prepared for any challenge that comes your way.\nStep-by-Step Video Solutions: My detailed video solutions walk you through each problem step by step. You'll witness the entire problem-solving process, from understanding the problem to writing clean, efficient code. I code live in the recorded video solutions, allowing you to follow along and grasp the concepts effectively.\nMultiple Programming Languages: I understand that candidates have different language preferences. That's why I provide video solutions in four popular programming languages: Java, C++, Python, and JavaScript. Choose the language you're most comfortable with and master these problems effortlessly.\nDownloadable Code Files: Alongside video solutions, I offer downloadable code files for every problem. You can dissect and analyze the code at your own pace, ensuring a deeper understanding of each solution.\nWhy Choose My Course:\nExpert Guidance: Learn from an experienced software engineer with a proven track record of acing Uber coding interviews. Benefit from my insights, strategies, and effective problem-solving techniques.\nComprehensive Coverage: I leave no stone unturned. My course covers a wide range of data structure problems that frequently appear in Uber interviews, giving you a well-rounded preparation.\nMultilingual Support: My course is accessible to learners worldwide, as I provide video solutions in four different languages, making it easier for you to understand and implement the solutions in your preferred language.",
      "target_audience": [
        "This course is for software developers and students who want to practice for coding interviews at Uber"
      ]
    },
    {
      "title": "Mastering Authentication in Nodejs: JWT, SSO, Token based",
      "url": "https://www.udemy.com/course/nodejs-nestjs-jwt-sso-token-based-authentication/",
      "bio": "Build Secure Authentication Systems in NestJS with JWT, OAuth, and SSO",
      "objectives": [
        "Authentication & Authorization Fundamentals",
        "Implementing Secure Authentication in Node.js",
        "JWT-Based Authentication (Stateless)",
        "Session-Based Authentication (Stateful)",
        "Single Sign-On (SSO) with SAML & OpenID Connect",
        "API Key Authentication & Microservices Security",
        "OAuth2 & Social Login and Auth0 Okta"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of JavaScript & TypeScript",
        "Familiarity with Node.js and Express.js",
        "Understanding of asynchronous programming & promises in JavaScript",
        "Familiarity with databases (MongoDB, PostgreSQL, or MySQL)"
      ],
      "description": "Authentication is a critical part of any modern web application, ensuring that users can securely access resources while preventing unauthorized access. This course provides a comprehensive guide to authentication in Node.js, covering essential and advanced authentication techniques used in real-world applications.\nYou will learn how to implement secure authentication systems using JWT (JSON Web Token), OAuth2, SSO (Single Sign-On), API keys, and session-based authentication. The course focuses on best security practices, including password hashing, token expiration management, multi-factor authentication (MFA), and role-based access control (RBAC).\nBy the end of this course, you will have the skills to build and deploy a production-ready authentication system in Node.js using popular authentication strategies.\n\nAuthentication Methods You Will Learn\nSession-based authentication (stateful, using cookies and sessions)\nJWT-based authentication (stateless, using access and refresh tokens)\nOAuth2 & Social Login (Google, Facebook, GitHub, Okta)\nSingle Sign-On (SSO) with SAML & OpenID Connect\nTwo-Factor Authentication (2FA) for added security\nAPI key authentication for secure service-to-service communication\nBest practices for securing authentication endpoints\nThis course is designed to equip you with in-depth knowledge of authentication in NestJS, covering both fundamental concepts and advanced security techniques. By the end of the course, you will have the skills to build scalable, secure authentication systems for real-world applications.\nBy the end of the course, you will have built a complete authentication system that is scalable, secure, and production-ready.",
      "target_audience": [
        "Node.js & Backend Developers",
        "Security-Focused Engineers",
        "Full-Stack Developers",
        "Students & Beginners in Authentication Concepts"
      ]
    },
    {
      "title": "Automotive SPICE® System Processes (SYS.2–SYS.5, PAM 4.0)",
      "url": "https://www.udemy.com/course/automotive-spice-system-processes-sys2sys5-pam-40/",
      "bio": "Principal Assessor teaches ASPICE SYS.2–SYS.5",
      "objectives": [
        "Identify the motivation behind each Automotive SPICE® system process (SYS.2–SYS.5).",
        "Explain the official purpose and outcomes as stated in the ASPICE model documentation.",
        "Describe the required information items and typical artifacts for each system process.",
        "Outline the base practices for each system process and explain their significance in assessments."
      ],
      "course_content": {
        "SYS.2 – System Requirements Analysis": [
          "Benefits and Motivation of System Requirements Analysis",
          "Purpose of System Requirements Analysis",
          "Outcomes of System Requirements Analysis",
          "Information Items of System Requirements Analysis",
          "Base Practices of System Requirements Analysis explained"
        ],
        "SYS.3 – System Architectural Design": [
          "Benefits and Motivation of System Architectural Design",
          "Purpose of System Architectural Design",
          "Outcomes of System Architectural Design",
          "Information Items of System Architectural Design",
          "Base Practices of System Architectural Design"
        ],
        "SYS.4 System Integration and Integration Verification": [
          "Benefits and Motivation of System Integration and Integration Verification",
          "Purpose of System Integration and Integration Verification",
          "Outcomes of System Integration and Integration Verification",
          "Information Items of System Integration and Integration Verification",
          "Base Practices of System Integration and Integration Verification"
        ],
        "SYS.5 System Verification": [
          "Benefits and Motivation of System Verification",
          "Purpose of System Verification",
          "Outcomes of System Verification",
          "Information Items of System Verification",
          "Base Practices of System Verification"
        ]
      },
      "requirements": [
        "No prior Automotive SPICE® knowledge required. Basic familiarity with systems engineering or project work is helpful but not mandatory. All key concepts are introduced step by step."
      ],
      "description": "This course is your comprehensive introduction to Automotive SPICE® system processes SYS.2–SYS.5, the essential backbone for systems engineering in the automotive industry. Taught by a certified Principal Assessor with over 20 years of hands-on automotive project and assessment experience, you’ll receive expert-level guidance on the benefits, purpose, expected outcomes, required information items, and base practices for each key process—always with actionable advice and practical, real-world examples.\nYou will learn step-by-step:\nThe real benefits of ASPICE system processes for project quality and efficiency\nThe underlying purpose and strategic intent of each SYS process\nHow process outcomes and assessment criteria are defined and evaluated\nWhich information items and documentation are needed and how to efficiently develop them\nClear explanations for every base practice, with actionable industry tips and typical implementation patterns\nEach system process - System Requirements Analysis (SYS.2), System Architectural Design (SYS.3), System Integration and Integration Verification (SYS.4), and System Verification (SYS.5) - is taught in-depth, covering process structure, terminology, essential work products, and implementation nuances. You will gain direct, practical guidance for daily project work and long-term process improvement efforts.\nThis course is ideal for quality managers, assessors, systems engineers, project managers, or anyone looking to build robust ASPICE competence. You will benefit from first-hand expertise, clear examples from real automotive projects, and implementation strategies that can be put into practice immediately.\nAfter completing this course, you will be able to:\nUnderstand the structure and intent of ASPICE SYS.2–SYS.5\nIdentify, adapt, and implement core process requirements and documentation\nApply base practices confidently in automotive systems projects\nStrengthen quality, reliability, and compliance in your organization using proven ASPICE system process methods",
      "target_audience": [
        "Quality managers, process engineers, systems engineers, assessors, and project managers in the automotive industry seeking a clear understanding of Automotive SPICE® system processes (SYS.2–SYS.5)."
      ]
    },
    {
      "title": "AI for Business Leaders: AI & LLMs for Career Transitions",
      "url": "https://www.udemy.com/course/mastering-ai-llms-chatgpt/",
      "bio": "LLM Strategies to Fast-Track Your AI Career Transition",
      "objectives": [
        "Understand the Fundamentals of AI and LLMs - Gain a solid understanding of how AI and large language models like ChatGPT, Gemini, and Hugging Face!",
        "Develop Practical Skills in NLP Learn to implement real-world NLP tasks such as text classification, sentiment analysis, text summarization, and chatbot!",
        "Master Fine-Tuning and Advanced Techniques Discover how to fine-tune pre-trained models for specific use cases and optimize their performance",
        "Build and Deploy a Complete AI-Powered Project Create a capstone project using tools like Hugging Face and ChatGPT APIs, showcasing your skills in AI and LLMs!"
      ],
      "course_content": {
        "Foundations of AI and Large Language Models": [
          "Introduction",
          "What is Artificial Intelligence?",
          "Reading: \"Artificial Intelligence: A Guide for Thinking Humans\" by Melanie",
          "Breakdown of Artificial Intelligence and LLMS (Video Intro)",
          "AI Types, Breakthroughs & Ethics",
          "Welcome!"
        ],
        "Large Language Models Explained": [
          "Reading Materials",
          "Understanding LLMs, GPT-4, and Transformers",
          "Transformer Architecture & Attention Mechanism",
          "What is Transformer?"
        ],
        "Working with Pre-Trained AI Models": [
          "Running GPT-4, Gemini, and Open-Source Models",
          "Using OpenAI API to Generate Text in Python",
          "Fine-Tuning a Small AI Model (BERT/GPT-2) with a Custom Dataset",
          "Create a Custom AI Chatbot"
        ],
        "Real-World Applications of AI & LLMs": [
          "AI in Customer Support (Chatbots & Sentiment Analysis)",
          "AI in Content Generation (Text Summarization & Writing Tools)",
          "AI in Data Analysis (Extracting Insights from Documents)",
          "Build an AI-Powered News Summarizer",
          "Real-World AI Use Cases",
          "AI Real World Cases & Examples"
        ],
        "Advanced AI Development & Security": [
          "Advanced Prompt Engineering (Chain-of-Thought, Few-Shot Learning)",
          "Advanced Prompt Engineering (Chain-of-Thought, Few-Shot Learning) Video intro",
          "Deploying AI Models with APIs (FastAPI, Flask, Hugging Face Spaces)",
          "AI Security, Privacy, and Ethics (GDPR, CCPA, Model Bias)",
          "Create a Secure AI API for Text Generation",
          "AI Model Security Challenges"
        ],
        "Capstone Project – AI Model Deployment": [
          "Build and Deploy a Full AI Application",
          "Build and Deploy a Full AI Application (Video Intro)",
          "AI Chatbot, AI Assistant, AI-Powered Search Tool",
          "Awarded upon successful completion"
        ],
        "Downloadable Resources": [
          "Downloadable Resources"
        ],
        "Extra - AI Career Guide": [
          "Extra: AI Career Guide – From Engineer to AI Engineer"
        ]
      },
      "requirements": [
        "This course is designed to be accessible to a wide range of learners, from beginners to those with some experience in programming or AI. While no extensive prior knowledge is required, the following will help you get the most out of the course: Recommended Skills and Experience: Basic Programming Knowledge: Familiarity with Python is helpful but not mandatory, as we’ll cover necessary concepts along the way. Interest in AI and Technology: A curiosity about artificial intelligence, machine learning, or natural language processing is all you need to get started. Problem-Solving Mindset: A willingness to experiment, troubleshoot, and explore solutions independently or with guidance."
      ],
      "description": "Unlock the Power of Artificial Intelligence\nStep into the exciting world of AI with this comprehensive course on Large Language Models (LLMs) like ChatGPT, Gemini, and Hugging Face. Whether you're a developer, data scientist, entrepreneur, or an AI enthusiast, this course will guide you from foundational concepts to advanced NLP applications that solve real-world problems.\nWhat You’ll Learn:\nUnderstand the fundamentals of AI and how LLMs work.\nFine-tune AI models to meet specific needs.\nBuild chatbots, perform text summarization, and analyze sentiment for smarter decision-making.\nMaster tools like Hugging Face and ChatGPT API to create cutting-edge solutions.\nThis course emphasizes hands-on projects so you can put theory into practice. You’ll learn to tackle tasks like automating workflows, creating intelligent customer service bots, and extracting valuable insights from data. Whether you’re interested in AI for career growth, business innovation, or personal curiosity, this course has you covered!\nWhy Take This Course?\nLearn with industry-relevant tools trusted by AI professionals.\nGain practical skills that you can showcase in your portfolio or apply directly to your career.\nCreate a capstone project that demonstrates your expertise in building AI-powered solutions.\nBy the end of this course, you’ll have the confidence and knowledge to work with some of the most advanced AI tools available today. More importantly, you’ll possess the skills to innovate, create, and transform ideas into reality.\nDon’t wait—join now and start building the future of AI. Let’s innovate together!",
      "target_audience": [
        "This course is designed for anyone interested in harnessing the power of AI and Large Language Models (LLMs) like ChatGPT, Gemini, and Hugging Face to build real-world applications and advance their understanding of artificial intelligence. Whether you're new to AI or have some experience, this course provides a comprehensive journey tailored to your needs."
      ]
    },
    {
      "title": "Das C# Bootcamp: Vom Anfänger bis zum Profi",
      "url": "https://www.udemy.com/course/csharp-grundlagenkurs-fuer-anfaenger/",
      "bio": "Lerne C# programmieren im vollen Umfang! Mit objektorientierter Programmierung, .NET 7, Unit Testing, WPF, SQL, APIs uvm",
      "objectives": [
        "Du wirst ein tiefgehendes Verständnis von C# erlangen.",
        "Du wirst die Prinzipien der objektorientierten Programmierung verstehen.",
        "Du wirst lernen, Code von ausgezeichneter Qualität zu schreiben.",
        "Du wirst lernen, wie man Unit-Tests mit der xUnit Bibliotheken erstellt.",
        "Du wirst verstehen, wie man leistungsstarken C# Code schreibt.",
        "Du wirst real-world Anwendung erstellen.",
        "Du wirst lernen, wie man Fehler mit Hilfe von Debugging behebt.",
        "Du wirst lernen, wie man SQL Datenbanken in C# verwendet.",
        "Du wirst lernen, wie man mit RESTful API Servern über HTTP kommuniziert.",
        "Du wirst lernen, wie man grafische Nutzeroberflächen mit WPF erstellt."
      ],
      "course_content": {
        "Ein Projekt mit Visual Studio erstellen": [
          "Willkommen im Kurs",
          "Die IDE Visual Studio",
          "Ein neues Projekt erstellen",
          "Projekt in Visual Studio 2022 inspizieren",
          "Quiz Einleitung"
        ],
        "Variablen": [
          "Wie du mit diesem Kurs GEWINNST",
          "Eine Bitte an dich",
          "Einleitung Variablen",
          "Variablen verwenden",
          "Integer Variablen",
          "Float Variablen",
          "String Variablen",
          "Bool Variablen",
          "Char Variablen",
          "Code Kommentare",
          "Variablen Gültigkeitsbereich (Scope)",
          "Zusatzinhalte: Variablen",
          "Quiz Variablen",
          "Programmierübung C#: Variablen",
          "Motivation als Schlüssel zum Erfolg"
        ],
        "Nutzereingaben & Debugging": [
          "Nutzeingaben mit Console ReadLine",
          "Nutzeingaben in numerische Werte umwandeln",
          "Einführung ins Debugging"
        ],
        "Arrays": [
          "Einführung zu Arrays",
          "Einen Array erstellen",
          "Elemente im Array verändern",
          "Werte im Array anpassen",
          "Einen Array sortieren",
          "Arrays und verschiedene Datentypen",
          "Die Notwendigkeit von Schleifen",
          "Quiz Arrays",
          "Programmierübung C#: Arrays"
        ],
        "Schleifen": [
          "Foreach Schleife",
          "For Schleife",
          "For Schleife mit Beispielen",
          "While Schleife",
          "While Schleife für ein Ratespiel",
          "Do-While Schleife",
          "Übung \"Summierer\"",
          "Übung: E-Mail Liste"
        ],
        "If-Statements": [
          "If Statements",
          "Operatoren",
          "Mehrere Bedingungen",
          "Else",
          "Else If",
          "If Statements Aufgabe 1",
          "If Statements Aufgabe 2",
          "Bedingungen klammern (komplexere Algorithmen)",
          "Verschachtelte If-Statements"
        ],
        "Projekt: Todo-Liste": [
          "Projekt: Todo-Liste Part 1",
          "Projekt: Todo-Liste Part 2",
          "Projekt: Todo-Liste Part 3"
        ],
        "C# Objektorientiertes Programmieren Teil 1": [
          "Eine Klasse erstellen",
          "OOP Einleitung mit einem Auto",
          "Eine Methode erstellen",
          "Ein Objekt erstellen mit dem Keyword \"new\"",
          "Properties (Eigenschaften) erstellen",
          "Einen Konstruktor erstellen",
          "Methoden und Rückgabetypen mit \"return\"",
          "Methoden und Parameter",
          "Quiz OOP Teil 1"
        ],
        "Ein OOP Projekt zum verwalten eines Bankkontos": [
          "BankAccount Klasse erstellen",
          "Methoden für BankAccount erstellen",
          "Menü für den Nutzer anlegen",
          "Hauptfunktionalitäten einbetten",
          "Übung: Den BankAccount dynamisch erstellen"
        ],
        "Listen": [
          "Eine Liste erstellen",
          "Elemente zu einer Liste hinzufügen",
          "Funktionalitäten von Listen",
          "Elemente einer Liste verwenden",
          "Liste oder Array?",
          "Übung - Studenten NC berechnen Part 1",
          "Übung - Studenten NC berechnen Part 2",
          "C# Programmierübung Listen"
        ]
      },
      "requirements": [
        "PC/Laptop zum Programmieren",
        "Kaffee oder Tee und Snacks"
      ],
      "description": "Du möchtest ganz einfach und in kürzester Zeit das Programmieren mit C# lernen? Perfekt! Mit diesem umfangreichen C# Videokurs lernst du die Programmiersprache C# schnell, mit Spaß und ganz einfach, um ein vollwertiger Entwickler zu werden. Es werden keine Vorkenntnisse benötigt.\n\n\nLies weiter und erfahre wieso dieser Kurs der beste C# Kurs überhaupt ist!\n\n\nLerne mit diesem Kurs alles, was Du brauchst, um ein echter C#-Entwickler zu werden! Von den Grundlagen wie Variablen, Datentypen und Arrays bis hin zu fortgeschrittenen Themen wie Datenbanken, WPF, RESTful API und Versionierung mit Git – dieser Kurs deckt alles ab!\n\n\nDank des praxisorientierten Ansatzes wirst du von Anfang an in die Programmierung eintauchen und anhand von mehreren kompletten Projekten deine Fähigkeiten verbessern. Du lernst nicht nur die Sprache C#, sondern auch die Tools und Technologien, die du für eine Karriere als Entwickler benötigst.\n\n\nNach Abschluss des Kurses wirst du eigene C# Anwendungen inklusive grafischer Benutzeroberfläche und Datenbank erstellen können. Außerdem wirst du Unit Testing mit dem xUnit Test-Framework anwenden können.\n\n\nInhalte\n\n\nVisual Studio 2022\nC# 11 und .NET Framework 7\nVariablen\nDatentypen\nArrays\nSchleifen\nIf-Statements\n\n\nDebugging\nObjekte\nMethoden\nKonstruktoren\nKlassen\n\n\nSystem IO (Dateien, Ordner und Pfade)\nStreams und Files (Dateien)\nExceptions\nListen, Dictionaries und LINQ\nSwitches\nEnums\nInterfaces\nPolymorphie\nVererbung\nOverride und Virtual (Methoden überschreiben)\n\n\nSQL Datenbanken\nWindows Forms (für grafische Anwendungen)\nWPF (Windows Presentation Foundation)\nRESTful API Implementierung\nVersionskontrolle mit Git\nUnit Testing mit xUnit\n\n\nDas gesamte Wissen aus dem Kurs vermittle ich dir anhand von Real-World Anwendung und gebe dir zusätzlich noch Best-Practices direkt aus erster Hand.\n\n\nDeine Vorteile\nHoch-qualitative Videoinhalte von einem erfahrenen Softwareentwickler\nEntwickle spannende und ausgereifte Projekte, die sich auch in deinem Portfolio gut zeigen lassen können\nSupport vom Kurzdozenten (Fragen-und-Antworten Bereich)\nProgrammierübungen\nQuiz und Handouts\nEine solide Möglichkeit um mehr Geld als C# Entwickler zu verlangen\nEin guter Weg um als Quereinsteiger deinen ersten Job als Entwickler zu finden\n\n\nBist du bereit die Programmiersprache C# jetzt ganz einfach, in kürzester Zeit und ohne Vorkenntnisse zu meistern? Super! Trag dich direkt ein und ich freue mich darauf, dich gleich im Kurs begrüßen zu dürfen!\n\nBis gleich,\nJannick",
      "target_audience": [
        "Jeder der lernen will wie man mit C# programmiert",
        "Erfahrene Programmierer die sich weiterbilden/umschulen möchten",
        "Quereinsteiger die zuvor noch nie programmiert haben"
      ]
    },
    {
      "title": "Algoritmos, Estructuras de Datos y Entrevistas Programación",
      "url": "https://www.udemy.com/course/algoritmos-estructuras-de-datos-y-entrevistas-programacion/",
      "bio": "+50 ejercicios de entrevistas programación. Big O, algoritmos y estructuras de datos. Lógica programación. Mejora tu CV.",
      "objectives": [
        "Mejora tu lógica de programación.",
        "Análisis Complejidad Algorítmica (Big O)",
        "Algoritmos y Estructuras de Datos en general.",
        "Tablas Hash, Listas Enlazadas, Pilas y Colas.",
        "Árboles y Grafos.",
        "Montículos (Heaps) y Tries.",
        "Recursividad y Programación Dinámica.",
        "Algoritmos de Ordenamiento y Búsqueda.",
        "Manipulación de Bits.",
        "Afrontar de la mejor forma el proceso de entrevistas técnicas y conductuales.",
        "Crear un Curriculum Vitae (CV) óptimo para que empresas TOP se interesen por ti."
      ],
      "course_content": {
        "Introducción": [
          "Introducción al Curso",
          "Proceso de Entrevistas"
        ],
        "Big O - Complejidad Algorítmica": [
          "Teoría Big O - Análisis de la Complejidad Algorítmica",
          "Ejercicios Big O"
        ],
        "Arrays, Strings y Tablas Hash": [
          "Teoría Arrays, Strings y Tablas Hash",
          "Ejercicio 1 - Arrays, Strings y Tablas Hash",
          "Ejercicio 2 - Arrays, Strings y Tablas Hash",
          "Ejercicio 3 - Arrays, Strings y Tablas Hash",
          "Ejercicio 4 - Arrays, Strings y Tablas Hash"
        ],
        "Listas Enlazadas": [
          "Teoría Listas Enlazadas",
          "Ejemplo Práctico Listas Enlazadas",
          "Ejercicio 1 - Listas Enlazadas",
          "Ejercicio 2 - Listas Enlazadas",
          "Ejercicio 3 - Listas Enlazadas",
          "Ejercicio 4 - Listas Enlazadas",
          "Ejercicio 5 - Listas Enlazadas"
        ],
        "Pilas y Colas": [
          "Teoría Pilas y Colas",
          "Ejemplo Práctico Pilas y Colas",
          "Ejercicio 1 - Pilas y Colas",
          "Ejercicio 2 - Pilas y Colas",
          "Ejercicio 3 - Pilas y Colas",
          "Ejercicio 4 - Pilas y Colas"
        ],
        "Árboles": [
          "Teoría Árboles",
          "Ejemplo Práctico Árboles",
          "Ejercicio 1 - Árboles",
          "Ejercicio 2 - Árboles",
          "Ejercicio 3 - Árboles",
          "Ejercicio 4 - Árboles",
          "Ejercicio 5 - Árboles",
          "Ejercicio 6 - Árboles"
        ],
        "Grafos": [
          "Teoría Grafos",
          "Ejemplo Práctico Grafos",
          "Ejercicio 1 - Grafos",
          "Ejercicio 2 - Grafos",
          "Ejercicio 3 - Grafos",
          "Ejercicio 4 - Grafos",
          "Ejercicio 5 - Grafos"
        ],
        "Montículos (Heaps)": [
          "Teoría Montículos",
          "Ejemplo Práctico Montículos",
          "Ejercicio 1 - Montículos",
          "Ejercicio 2 - Montículos",
          "Ejercicio 3 - Montículos"
        ],
        "Árboles de Prefijo (Tries)": [
          "Teoría Tries",
          "Ejemplo Práctico Tries",
          "Ejercicio 1 - Tries",
          "Ejercicio 2 - Tries"
        ],
        "Recursividad y Programación Dinámica": [
          "Teoría Recursividad y Programación Dinámica",
          "Ejercicio 1 - Recursividad y Programación Dinámica",
          "Ejercicio 2 - Recursividad y Programación Dinámica",
          "Ejercicio 3 - Recursividad y Programación Dinámica",
          "Ejercicio 4 - Recursividad y Programación Dinámica",
          "Ejercicio 5 - Recursividad y Programación Dinámica"
        ]
      },
      "requirements": [
        "Conceptos básicos de algún lenguaje de Programación Orientada a Objetos como Java, Python, C++, C#, JavaScript o TypeScript."
      ],
      "description": "Los algoritmos y las estructuras de datos son algo fundamental en el día a día de un desarrollador. Pero también son muy importantes a la hora de pasar entrevistas técnicas con muchas empresas. Si eres un estudiante o un profesional interesado en mejorar tus conocimientos en esa faceta o quieres mejorar en entrevistas técnicas, ¡este curso es perfecto para ti!\n\nEn la parte técnica de este curso veremos las estructuras de datos y algoritmos más importantes, tanto de forma teórica como práctica. Se tratarán más de 50 ejercicios prácticos de programación reales, utilizados en las entrevistas de empresas tan importantes como Google, Amazon, Meta, Microsoft, Netflix y muchas más.\n\n\nAnálisis de la Complejidad Algorítmica (Big O). Empezaremos la parte técnica del curso viendo el análisis de la complejidad algorítmica, expresado en Big O. Esto será muy importante para poder optimizar nuestro código al máximo.\nArrays, String y Tablas Hash. A continuación pasaremos a las estructuras de datos más comunes, como arrays o conjuntos de datos y las Tablas Hash.\nListas Enlazadas. La segunda estructura de datos que veremos son las Listas Enlazadas (Linked Lists). Esta consiste en una secuencia de nodos que contienen un valor y una referencia al siguiente elemento de la lista.\nPilas y Colas. Continuaremos con las Pilas (Stacks) y las Colas (Queues). Como veremos, las Pilas son una estructura de tipo LIFO (Last In First Out) y las Colas de tipo FIFO (First In First Out).\nÁrboles y Grafos. Las siguientes estructuras de datos que veremos son los Árboles y los Grafos. Veremos los distintos típos (binary tree, binary search tree, árbol completo, grafo dirigido / no dirigido, grafo conexo / no conexo) y sus recorridos.\nMontículos. También se tratarán los montículos (Heaps), estructura muy utilizada cuando se necesita mantener nuestros elementos en orden.\nTries. La última estructura de datos que veremos será el Trie o árbol de prefijo, muy utilizado por los buscadores que soportan la funcionalidad de autocompletado.\nRecursividad y Programación Dinámica. También veremos ejercicios que traten sobre recursividad, viendo además una técnica de optimización llamada programación dinámica.\nAlgoritmos de Ordenamiento y Búsqueda. Se tratarán los algoritmos de ordenamiento y búsqueda más relevantes (bubble sort u ordenamiento de burbuja, selection sort u ordenamiento por selección, merge sort, quick sort y binary search o búsqueda binaria etc.).\nManipulación de Bits. Para finalizar la parte técnica del curso veremos un tipo de ejercicios de manipulación de bits de números binarios.\nComo he comentado, cada uno de los conceptos técnicos tendrá parte teórica y parte práctica, con más de 50 ejercicios prácticos en el curso, que te harán mejorar la lógica de programación.\n\n\nPara finalizar, veremos una serie de temas que te ayudarán en tus entrevistas y a aumentar las posibilidades de obtener un mejor trabajo.\n\n\nEntrevistas conductuales (behavioral interviews). Entrevistas típicas que tenemos en todas las empresas, en las que conversas sobre tu experiencia pasada, en cómo hiciste ciertas cosas o como solventaste ciertos problemas, etc. Veremos cómo afrontarlas para aumentar las posibilidades de que te contraten.\nCurriculum Vitae (CV) óptimo. Un buen CV es fundamental para que las empresas se fijen en ti. Veremos un ejemplo mío de hace unos años, que no era para nada óptimo, y otro ejemplo muy mejorado. También tendrás acceso a la plantilla de forma gratuita.\nPortfolio y LinkedIn. Veremos de forma resumida cuándo y cómo debes crear un Portfolio y te daré unos consejos para que puedas optimizar tu LinkedIn.\nAplicando a ofertas. Aprenderás diversas estrategias de cómo aplicar a las ofertas de las empresas que te interesen, aumentando las posibilidades de éxito.\n\n\nEl primer paso ya lo has dado. ¡Te animo a unirte a este curso para mejorar como programador!",
      "target_audience": [
        "Estudiantes / Desarrolladores que busquen mejorar en Algoritmos y Estructuras de Datos.",
        "Estudiantes / Desarrolladores que busquen aprender el análisis de la complejidad algorítmica (Big O).",
        "Estudiantes / Desarrolladores que quieran mejorar su proceso de resolución de problemas.",
        "Estudiantes / Desarrolladores que quieran optimizar su CV para que mejores empresas se interesen por él.",
        "Estudiantes / Desarrolladores que quieran mejorar en entrevistas conductuales."
      ]
    },
    {
      "title": "Omnistudio Developer Course: Learn FlexCards, DataRaptors, a",
      "url": "https://www.udemy.com/course/omnistudio-developer-course-learn-flexcards-dataraptors-a/",
      "bio": "Build powerful, no-code solutions in Salesforce using Omniscript, FlexCards, DataRaptors, and Integration Procedures.",
      "objectives": [
        "Set up a Salesforce CMT (Communication, Media, Technology) org and create a training playground environment.",
        "Understand and configure Omniscript for guided user interactions, including conditional views and prefilling data.",
        "Work with various types of DataRaptors (Extract, Load, Transform, Turbo Extract) to efficiently move and transform data within Salesforce.",
        "Build and optimize Integration Procedures using Remote Actions, List Actions, and HTTP Actions to handle server-side automation.",
        "Design and implement Flexcards using different data source types including DataRaptors, Integration Procedures, Apex, and REST APIs.",
        "Apply best practices in building declarative, modular solutions for industry-specific use cases in Salesforce Omnistudio."
      ],
      "course_content": {
        "Getting Started - Introduction and Set up": [
          "Create CMT Org Training Playground",
          "Getting started with Omniscript"
        ],
        "Data Raptors": [
          "Omnistudio DataRaptors",
          "Turbo Extract DataRaptor",
          "Extract DataRaptor",
          "Load DataRaptor",
          "Transform DataRaptor"
        ],
        "Omniscript Basics": [
          "Prefilling Data in Omniscript",
          "Conditional View and Merge Syntax",
          "Set Value Action and Conditional Formula"
        ],
        "Integration Procedures": [
          "Introduction to Integration Procedures",
          "Remote Action – Integration Procedures",
          "List Action – Integration Procedures",
          "HTTP Action – Integration Procedures"
        ],
        "FlexCards": [
          "FlexCards | Introduction",
          "FlexCards | DataRaptor as Data Source Type",
          "FlexCards | Integration Procedure as Data Source Type",
          "FlexCards | SOQL/SOSL/Custom Data as Data Source Type",
          "FlexCards | Apex Remote as Data Source Type",
          "FlexCards | Apex REST as Data Source Type",
          "FlexCards | REST as Data Source Type"
        ]
      },
      "requirements": [
        "No prior experience with Omnistudio or Salesforce development is required — you’ll learn everything from scratch.",
        "A basic understanding of Salesforce CRM (like navigation, objects, and records) is helpful but not mandatory.",
        "Access to a computer with an internet connection.",
        "A free Salesforce CMT trial org, which we will guide you through creating during the course.",
        "Curiosity and willingness to explore Salesforce’s declarative tools!"
      ],
      "description": "Are you ready to level up your Salesforce skills and dive into the world of Salesforce Industries (Vlocity) development? This course is your complete, hands-on guide to Omnistudio — Salesforce's powerful declarative toolkit designed for building dynamic, industry-specific applications without writing code.\nIn this comprehensive training, you’ll learn to work with essential Omnistudio tools including Omniscript, FlexCards, DataRaptors, and Integration Procedures. You’ll gain a deep understanding of how to design guided user experiences, configure data-driven components, and connect systems seamlessly using a low-code approach.\nWhether you're preparing for the Omnistudio Developer certification, working on a CMT project, or just starting your journey in Salesforce Industries, this course is packed with practical examples, step-by-step demos, and real-world use cases to build your confidence.\n\n\nWhat you’ll learn:\n\n\nSet up a Salesforce CMT org and training environment\nCreate Omniscripts with dynamic views, prefilled data, and conditional logic\nBuild and optimize DataRaptors (Extract, Load, Transform, Turbo Extract)\nDevelop Integration Procedures using Remote, List, and HTTP actions\nDesign FlexCards with various data sources like Apex, SOQL, and REST APIs\nUnderstand best practices for modular, scalable, and declarative solutions\nNo prior coding experience is required — just a basic understanding of Salesforce is helpful.\nBy the end of this course, you’ll be equipped to build flexible, scalable solutions using Omnistudio and take on projects across industries like telecom, insurance, healthcare, and more.\nLet’s get started and build something amazing with Omnistudio!",
      "target_audience": [
        "Beginners in Salesforce Industries (Vlocity/Omnistudio) looking for hands-on training",
        "Salesforce professionals transitioning into Communication, Media, and Technology (CMT) cloud projects",
        "Anyone preparing for the Omnistudio Developer certification",
        "Tech-savvy learners who want to build low-code, modular user experiences in Salesforce"
      ]
    },
    {
      "title": "Алгоритмы и Структуры данных",
      "url": "https://www.udemy.com/course/algorithms-and-data-structure/",
      "bio": "Самая полная и самая актуальная коллекция алгоритмов и структур данных на русском языке!",
      "objectives": [
        "Алгоритмы",
        "Структуры данных",
        "Решение задач",
        "Алгоритмическое мышление",
        "Задачи",
        "Графы",
        "Математика",
        "Перебор",
        "Побитовые операции",
        "Сортировки",
        "Динамическое программирование",
        "ДП",
        "Теория графов",
        "Продвинутые структуры данных",
        "Геометрия",
        "Асимптотика",
        "BigO",
        "Стек",
        "Очередь",
        "Куча",
        "Список",
        "Рекурсия",
        "Решение задач для интервью"
      ],
      "course_content": {
        "Введение (Introduction)": [
          "Введение"
        ],
        "Вычисление сложности алгоритмов (Asymptotic analysis)": [
          "Асимптотический анализ алгоритмов (Asymptotic analysis)",
          "Асимптотический анализ алгоритмов (Asymptotic analysis)"
        ],
        "Структуры данных (Data Structures)": [
          "Стек (Stack)",
          "[Код] Стек (Stack)",
          "Очередь (Queue)",
          "[Код] Очередь (Queue)",
          "Лист (List)"
        ],
        "Побитовые операции (Bitwise operations)": [
          "Побитовые операции (Bitwise operations)",
          "[Код] Побитовые операции (Bitwise operations)",
          "Битмаски (Bitmasks)",
          "[Код] Битмаски (Bitmasks)"
        ],
        "Сортировки (Sortings)": [
          "Сортировка выбором (Selection sort)",
          "[Код] Сортировка выбором (Selection sort)",
          "Пузырьковая сортировка (Bubble sort)",
          "[Код] Пузырьковая сортировка (Bubble sort)",
          "Сортировка вставкой (Insertion sort)",
          "[Код] Сортировка вставкой (Insertion sort)",
          "Сортировка подсчётом (Counting sort)",
          "[Код] Сортировка подсчётом (Counting sort)",
          "Сортировка слиянием (Merge sort)",
          "[Код] Сортировка слиянием (Merge sort)",
          "Быстрая сортировка (Quick sort)",
          "[Код] Быстрая сортировка (Quick sort)",
          "Поразрядная сортировка (Radix sort)",
          "[Код] Поразрядная сортировка (Radix sort)",
          "Бонус по сортировкам",
          "Сортировки (Sortings)"
        ],
        "Математика (Math)": [
          "Бинарное возведение в степень (Binary exponentiation)",
          "[Код] Бинарное возведение в степень (Binary exponentiation)",
          "Бинарный поиск (Binary search)",
          "[Код] Бинарный поиск (Binary search)",
          "Алгоритм Эвклида, НОД и НОК (Euclidean algorithm, GCD and LCM)",
          "[Код] Алгоритм Эвклида, НОД и НОК (Euclidean algorithm, GCD and LCM)",
          "Решето Эратосфена (Sieve of Eratosthenes)",
          "[Код] Решето Эратосфена (Sieve of Eratosthenes)",
          "Умножение матриц (Matrix multiplication)",
          "[Код] Умножение матриц (Matrix multiplication)",
          "Функция Эйлера (Euler function)",
          "[Код] Функция Эйлера (Euler function)",
          "Модулярная арифметика (Modular arithmetic)",
          "[Код] Модулярная арифметика (Modular arithmetic)"
        ],
        "Хэширование (Hashing)": [
          "Хэш функция (Hash function)",
          "Хэш таблица (Hash table)",
          "Фильтр Блума (Bloom filters)",
          "Хэширование строк (String hashing)",
          "[Код] Хэширование строк (String hashing)"
        ],
        "Рекуррентные соотношения (Recurrent relations)": [
          "Рекуррентные соотношения (Recurrent relations)",
          "Решения при помощи матриц (Solve using matrices)",
          "[Код] Решения при помощи матриц (Solve using matrices)"
        ],
        "Перебор с возвратом (Backtracking)": [
          "Перебор с возвратом (Backtracking)",
          "[Код] Перебор с возвратом (Backtracking)"
        ],
        "Динамическое программирование (Dynamic programming)": [
          "Динамическое программирование (Dynamic programming)",
          "[Код] Динамическое программирование (Dynamic programming)",
          "Техника сканирующего окна (Sliding window technique)",
          "[Код] Техника сканирующего окна (Sliding window technique)"
        ]
      },
      "requirements": [
        "Уметь писать код на любом языке",
        "Уметь читать несложный код языка стиля С++",
        "Русский язык"
      ],
      "description": "Хотите выучить структуры данных и алгоритмы? Это самый полный и самый актуальный онлайн курс на русском языке, проверенный на сотнях студентов.\nВ данном курсе собрана информация с десятков сайтов и книг, и призвана содержать в себе абсолютно все алгоритмы и структуры данных, которые вам понадобятся в течении вашей карьеры! Курс обновляется новой информацией и постоянно пополняется алгоритмами и структурами данных, предложенными студентами или просто с течением времени.\n\nДумая об алгоритмах и структурах данных, нужно помнить следующее: знание алгоритмов развивает в вас умение мыслить широко, анализировать, проектировать и использовать всё это повсеместно в работе. Люди не владеющие алгоритмами и структурами данных не добиваются очень высоких позиций.\nДанный курс имеет цель развить вас до уровня опытных алгоритмистов и научить писать код профессионально, оптимально и без ошибок.\nСобираетесь проходить интервью? Вам нечего бояться, нужно только упорство и терпение: пройти курс, решить множество задач и вы сможете претендовать на лучшие позиции в лучших компаниях мира! Люди прошедшие и освоившие этот курс являются самыми востребованными специалистами.\nЭтот курс содержит в себе всю самую важную и необходимую информацию, которая вам понадобится. Лекции, задачи, тесты, слайды - всё подаётся как на ладони. Курс разрабатывался несколько лет, сотни студентов полностью его прошли и оставили исключительно положительные отзывы. Всё содержимое останется с вами навсегда, весь вышеуказанный контент - ваш.\nЦель курса - качественно, не спеша, и полностью разжёвывая преподнести вам все существующие алгоритмы и структуры данных. Не столь важно какой у вас сейчас уровень, новичок вы или бывалый, каждый найдет здесь много нового и полезного и это всё останется с вашей голове навсегда!\nДля каждого урока в этом курсе есть отдельный слайд, который полностью описывает о чем было прочитано на лекции. Таким образом, вы получаете курс, в котором одна и та же тема раскрывается двумя различными способами, давая вам возможность взглянуть на нее с разных точек зрения!\nБудет весело! В конце курса мы с вами получим и выучим:\nПринципы основных алгоритмов, их доказательства и ньюансы.\nСтруктуры данных, которые используются в 99.9% всех практических задач в мире.\nПолное понимание сложности алгоритмов, скорости их работы и оптимизаций.\nУмение самостоятельно спроектировать алгоритм или структуру данных для конкретной задачи.\nАбсолютное владение графами, с алгоритмами на них. Например, нахождение кратчайшего пути или нахождение остовного дерева.\nАлгоритмы и структуры данных которые используют различные методы, чтобы как можно быстрее искать или сортировать элементы.\nТеория чисел вместе с математикой, которая бывает необходима в сферах типа игровых или криптографии.\nВсё ещё не уверены для вас ли этот курс? Вы можете написать мне лично и я помогу вам с ответом на любой вопрос!\nЕсли по итогу завершения курса есть какой то алгоритм или структура данных, которую вы хотели выучить, но её не было в курсе - не беда! Напишите мне, и я разберу эту тему специально для вас, и добавлю её в курс, вначале упомянув кто именно запросил ту или иную тему (если захотите).\nЭтот курс идет с гарантией 100%-ого возврата средств в течении 30 дней. Если что-то вам не понравилось - средства будут возвращены без вопросов.\n\nЧто же, жду вас в курсе, не терпится рассказать всё это, дождаться окончания курса и услышать от вас отзыва! До скорого!",
      "target_audience": [
        "Начинающие разработчики",
        "Программисты",
        "Разработчики",
        "Джуниоры",
        "Сеньоры",
        "Миддлы"
      ]
    },
    {
      "title": "Begin with Junit testing with Spring boot and Mockito",
      "url": "https://www.udemy.com/course/begin-with-junit-testing-with-spring-boot-and-mockito/",
      "bio": "Junit testing with Spring boot and microservices",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "The prerequisites are Minimum java knowledge and Spring boot knowledge."
      ],
      "description": "JUnit is a unit testing framework for Java programming language. JUnit has been important in the development of test-driven development, and is one of a family of unit testing frameworks collectively known as xUnit, that originated with JUnit.\nThis tutorial explains the use of JUnit in your project unit testing, while working with Java. After completing this tutorial you will gain sufficient knowledge in using JUnit testing framework from where you can take yourself to next levels.\nMost of the successful projects are running based on successful junit test cases. Do you want to write Junit test cases for your project then this is the right place to learn about junit testing with spring boot and mockito. In this course you will be familiar about Junit test cases and Mockito, you can also write controller based unit tests and service based unit test and many more live examples.\nStudents will learn to write  JUNIT test cases very effectively.\nStudents will learn to Write INDEPENDENT JUnit Tests for RESTFUL web services talking with MULTIPLE LAYERS - web controller, business and data.\nStudents will learn and explore to use the most important Unit Testing ANNOTATIONS -\nTest, SpringBootTest, WebMvcTest, DataJpaTest and MockBean, InjectMocks, Mock\nStudents will learn to write unit tests using MOCKS and SPYS created with MOCKITO.\nStudents will learn to write unit test with H2 database with JPA  and will explore about integration.\nStudents will be explore to work with Eclipse IDE, Spring boot framework, Mockito framework and maven technologies.",
      "target_audience": [
        "This course mostly useful for junit based developers and spring boot with microservices developers"
      ]
    },
    {
      "title": "An introduction to JDBC, JNDI and Spring JDBC with Tomcat",
      "url": "https://www.udemy.com/course/an-introduction-to-jdbc-jndi-and-spring-jdbc-with-tomcat/",
      "bio": "Spring JDBC Support",
      "objectives": [
        "What is JDBC - Java Database Connectivity",
        "What is the difference between regular Java JDBC and Spring JDBC",
        "What is a JDBC Connection and an overview of the different types",
        "How to set up a JDBC Datasource Connection",
        "How to use the Spring JDBC Template to access a relational database",
        "Understand JNDI and defining a DB Connection",
        "Use Spring Boot to put together an Embedded Tomcat JDBC CRUD Application"
      ],
      "course_content": {},
      "requirements": [
        "Be familiar with Java Software Development",
        "Be familiar with modern Java IDE's such as IntelliJ",
        "Be familiar with the concept of a Relational Database",
        "A basic understanding of the Maven build tool",
        "A basic understanding of Git source control and how to use Github"
      ],
      "description": "Data Access with Spring JDBC Support using JNDI in an embedded Tomcat Server .\n\n\nCourse Modules :\n\n\nCourse Introduction - JDBC History & Sample User Story\nOur Spring JDBC Development Environment\nConnecting to the Database\nDAO with Traditional JDBC vs Spring JDBC\nFull CRUD with Spring JDBC Template example\nWhy learn Spring JDBC ?\n\n\nJDBC use is widespread in large companies worldwide\nActively maintained for 20+ years and counting\nSpring JDBC gives you a “quick win” when dealing with legacy JDBC code\nSpring JDBC - Sample User Story\n\n\nAs an expatriate living abroad I want access to an online database of all charities (non-profits) that operate in my “home country”.\nI want to be able to find Charities by their Tax Id\nI want to be able to search by Charity Category such as Environment or Education\nI want to be able to search by Charity Program Types\n\n\nConnecting to the MariaDB with JDBC\nEstablishing a Connection\n\n\nUsing the DriverManager Class\nSpecify the database Connection URLs\n\n\nConnecting to the MariaDB with Spring:\nDefine Spring DataSource Bean to get a DB Connection\n\n\nSpecify the database properties in application.xml\nUsing the MariaDB DataSource Bean Class\n\n\nConnecting to the MariaDB :\nUsing JNDI DataSource Objects to Get a Connection\n\n\nRegistering DataSource Object with Naming Service That Uses JNDI API\nCreating Instance of DataSource Class and Setting its Properties\nUsing Deployed DataSource Object\n\n\n\n\nConnecting to the MariaDB :\nUsing JNDI to Get a JDBC Connection in Embedded Tomcat\n\n\nJava Main Method to launch Embedded Tomcat\nRegistering DataSource Object with JNDI API\nUsing the registered JNDI DataSource Object\nRunning the JAR with Maven Plugin\n\n\nConnecting to the MariaDB :\nUsing Spring App Context to Get a JDBC Connection Tomcat\n\n\nJava Main Method to launch Embedded Tomcat\nDefining the DataSource in Spring application.xml\nAdding a context listener to web.xml\nRetrieve the Spring Data Source bean in the Servlet\n\n\nConnecting to the MariaDB :\nUsing Spring Annotation Config in Embedded Tomcat\nJava Main Method to launch Embedded Tomcat\nDefining the DataSource in Spring Config Class\nRetrieve the Spring DataSource bean in the Servlet",
      "target_audience": [
        "Java Developers who have to write code to access a relational database",
        "Java Developers who want to use Spring JDBC for streamlining database access to a relational database"
      ]
    },
    {
      "title": "Interview Starters : Python",
      "url": "https://www.udemy.com/course/coding-interviews-frequently-asked-questions/",
      "bio": "We will be solving and discussing some of the actual interviews questions asked commonly.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Although Just the learning attitude is needed, However a little knowledge of Programming would boost the Process."
      ],
      "description": "We will see some frequently asked questions from  Actual Interviews, and build solutions on them in a Systematic way.\nWe will cover questions based on the simplest approach first, then try to think of more optimal solutions as the Course Progresses,\nThe Central Idea is to practice different ways on a single problem and think of better solutions, Keep up with me, We will together get the things done and it would be fun to learn.\n\n\nI would be using Python 3 as the Programming Language, However, you are free to use any language you want because the concept remains the same, For python users, I would be using PyCharm, You can Install Pycharm for the same.\nWe would be discussing several coding techniques\nAnyone with a basic background in programming can take this course, Even if you are a complete Beginner.\nI would suggest you keep practicing as this is the only way to understand things better, you can use any coding platform, just keep the consistency and commitment, and you will rock, that I guarantee.\n\n\nI have collected questions from actual interviews and also from LeetCode and similar coding platforms, You will have a single place for all of the questions to practice and discuss.\n\n\nFor any queries, you can mail me at thehbprince@protonmail.com,  or drop the query in the course links too.",
      "target_audience": [
        "Those who are preparing for Technical Interviews and want all of the important questions at one place to practise."
      ]
    },
    {
      "title": "Fundamentals of Blockchain Technology | Web 3.0",
      "url": "https://www.udemy.com/course/fundamentals-of-blockchain-technology-n/",
      "bio": "Master the core concepts of blockchain, from blocks and hashing to real-world applications, with hands-on demos",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No prior blockchain or programming experience needed. Basic computer skills recommended."
      ],
      "description": "Are you curious about how Blockchain Technology works beyond the buzz of Bitcoin and cryptocurrencies?\nThis course is designed to take you from the very basics to a clear understanding of how blockchain functions and where it is applied in the real world.\nWhether you’re a student, developer, entrepreneur, or tech enthusiast, this course will give you the foundation you need to explore blockchain confidently.\nWhat You’ll Learn:\nWhat is a block and how blocks form a blockchain\nThe role of hashing and why it ensures security\nHow transactions and consensus mechanisms work\nThe difference between public, private, and consortium blockchains\nReal-world use cases: finance, supply chain, healthcare, identity, NFTs, and more\nA glimpse into the future of blockchain with AI, IoT, and digital identity\nHow You’ll Learn:\nSimple, beginner-friendly explanations of core concepts\nHands-on demos of how blocks, hashes, and chains work\nReal-world examples from industries adopting blockchain\nFinal project ideas to inspire your next steps\nWho This Course is For:\nBeginners who want to understand blockchain fundamentals\nDevelopers exploring Web3 and decentralized apps\nStudents and professionals curious about crypto and beyond\nEntrepreneurs seeking to apply blockchain in their domain\nWhy Take This Course?\nBlockchain is shaping the future of finance, identity, governance, and technology. By the end of this course, you will not only understand how blockchain works but also see how it is solving real problems across industries — preparing you for future opportunities in this exciting space.",
      "target_audience": [
        "Beginners, students, and professionals curious about blockchain technology and its applications."
      ]
    },
    {
      "title": "Introduction to Ethereum with Solidity and React",
      "url": "https://www.udemy.com/course/build-a-web3-app-on-ethereum-with-solidity-and-react/",
      "bio": "Learn how Ethereum works by writing Smart Contracts in Solidity and building a React app that you'll deploy to prod!",
      "objectives": [],
      "course_content": {
        "Set up your environment and write Solidity": [
          "Welcome! Let's get you the details!",
          "What are we building?",
          "Need help? Join our Discord server!",
          "Set up your local Ethereum development environment",
          "Set up your local Ethereum development environment [Text]",
          "Write your first smart contract",
          "Write your first smart contract [Text]",
          "Store data on your smart contract",
          "Store data on your smart contract [Text]",
          "Deploy your contract locally and interact with it",
          "Create a local Ethereum network and deploy to it",
          "Deploy your contract locally and interact with it [Text]"
        ],
        "Create a React application and interact with the contract": [
          "Set up a React application for our blockchain app",
          "Set up a React application for our blockchain app [Text]",
          "Deploy your contract to the Polygon blockchain",
          "Deploy your contract to the Polygon blockchain [Text]",
          "Build a wallet connect button with Metamask",
          "Build a wallet connect button with Metamask [Text]",
          "Interact with your deployed smart contract",
          "Interact with your deployed smart contract [Text]"
        ],
        "Upgrade your contract": [
          "Store custom data from users on our smart contract",
          "Store custom data from users on our smart contract [Text]",
          "Fund your contract and send users prizes in MATIC",
          "Fund your contract and send users prizes in MATIC [Text]",
          "Randomly pick winners and prevent spammers",
          "Randomly pick winners and prevent spammers [Text]"
        ],
        "Finalize": [
          "Finalize and celebrate!"
        ]
      },
      "requirements": [
        "Basics of JavaScript (ES6)",
        "Basics of React (useState and useEffect)"
      ],
      "description": "Curious about Ethereum? Wondering how the blockchain works? Want to figure out wtf smart contracts are? This course is exactly what you need!\n\nWeb3 development is a pretty new thing. There are lots of resources out there that try and explain everything but will just send you to sleep. This project guide will walk you through everything you need to do to build your own web3 Twitter on the Ethereum blockchain. No more reading blog posts or Twitter threads. Learn web3 by building it yourself!\n\n\nHardhat\nHardhat is the most popular development environment used by professional smart contract developers. We're going to set it up on our machine, learn how to use it to run smart contracts, create our own local Ethereum blockchain and deploy our contracts to a real network. No playgrounds, we're going to do it just like the pros!\n\n\nSolidity\nThe most popular Smart Contract programming language in the universe, Solidity has a great learning curve and is very easy to pick up for Javascript and Python developers. We'll learn the basic structure of a smart contract, build it out so we can store custom data in it and make it send tokens to users! Learning Solidity is like a cheat code for making money.  Come find out how billions of dollars are secured using this language!\n\n\nPolygon\nEthereum is expensive and slow - we're going to be using the Polygon Proof of Stake chain, which is built on top of Ethereum but is much faster and 1000x cheaper! Everything on Polygon works exactly like it does on Ethereum, including the smart contracts and the web apps, so you'll get the best of both worlds!\n\n\nReact\nThe most popular front-end framework comes to web3. You'll build out your own React application that will interact with our deployed smart contract and will display data from the blockchain.",
      "target_audience": [
        "Beginner web developers curious about web3, Ethereum or Solidity",
        "Cryptocurrency enthusiasts who want to become smart contract engineers"
      ]
    },
    {
      "title": "DevOps Interview Questions Practice Test Series",
      "url": "https://www.udemy.com/course/devops-interview-questions-practice-test-series/",
      "bio": "180 Interview Questions & Answers: Comprehensive Practice Test for Freshers & Experienced with Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This DevOps Practice Test Series is designed to provide a comprehensive exploration of key areas in the DevOps realm through a structured, modular approach. The course is divided into six distinct sections, each focusing on practical aspects that are critical in today's DevOps environment.\n1. DevOps Fundamentals & Culture:\nThis section introduces the foundational concepts of DevOps, including its history, cultural shifts, and collaborative ethos. It sets the stage by explaining how agile methodologies and continuous improvement form the backbone of effective DevOps practices.\n2. Continuous Integration & Delivery:\nDive into the principles of integrating code continuously and deploying it seamlessly. This segment outlines the processes and tools that enable automated build, test, and release cycles, ensuring smooth and reliable software updates.\n3. Infrastructure as Code & Automation Tools:\nExplore the transformative approach of managing and provisioning infrastructure through code. Here, the focus is on popular automation tools and scripts that help streamline and standardize system configurations in dynamic environments.\n4. Monitoring, Logging & Feedback Systems:\nGain insights into the importance of maintaining system performance through robust monitoring and logging frameworks. This section emphasizes practical methods for capturing and analyzing data, ensuring systems are secure and optimized.\n5. Cloud Integration & Containerization:\nUnderstand how cloud services and container technologies are revolutionizing deployment strategies. This part covers the integration of cloud platforms with container orchestration, highlighting scalable and efficient ways to manage applications.\n6. Advanced Practices & Emerging Trends:\nInvestigate the cutting-edge developments and sophisticated practices in the DevOps space. In this final section, learners will explore innovations and emerging technologies that are paving the way for the future of DevOps.\nThroughout the course, each section is designed to build upon the previous one, ensuring a coherent progression from foundational concepts to advanced topics. Practical, real-world examples and step-by-step explanations are provided to help learners not only understand the theoretical aspects but also how these practices are applied in modern IT environments. The detailed, point-wise breakdown in each section ensures clarity and ease of learning, making it an ideal resource for those looking to deepen their practical understanding of DevOps.",
      "target_audience": [
        "Professionals eager to deepen their practical understanding of DevOps methodologies.",
        "IT enthusiasts seeking structured insights into automation, cloud integration, and continuous delivery.",
        "Individuals aiming to enhance their skills in managing modern, scalable IT infrastructures."
      ]
    },
    {
      "title": "Streaming Data Pipeline using Confluent & Azure Platforms",
      "url": "https://www.udemy.com/course/streaming-data-pipeline-using-confluent-azure-platforms/",
      "bio": "Hands on course - Real Time Data Streaming Pipeline using Kafka, Azure Functions, Cosmos DB & Power BI from scratch",
      "objectives": [
        "Develop understanding of confluent platform, be able to create Cluster, Topics, Managed Source & Sink connectors",
        "Develop hands on skills on Azure Function App, Azure Functions",
        "Able to create Cosmos DB Account, container, database and query cosmos db",
        "Able to setup Cosmos DB & Power BI Integration, Azure Function Sink connector and Azure Function Integration",
        "Able to setup Power BI to fetch data from cosmos and create a visual from data",
        "Develop understanding of creating & deploying Azure functions using Visual Studio Code"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Confluent Setup": [
          "Confluent: Create Cluster, Topic, API Key",
          "Confluent: Create Datagen Source Connector"
        ],
        "Azure setup": [
          "Azure: Create Function App using Visual Studio Code",
          "Azure: Create & Deploy Function using Visual Studio Code",
          "Azure: Update Function to log & parse Incoming Confluent Kafka Message"
        ],
        "Confluent/Azure Integration": [
          "Confluent/Azure: Create Azure Function Sink connector"
        ],
        "Azure Cosmos setup": [
          "Create Cosmos DB Account, Database & Container",
          "Update Function Code to insert records into Cosmos DB"
        ],
        "Power BI": [
          "Connect Power BI to Azure Cosmos DB & Setup Metrics Visualization Chart"
        ],
        "Recap & Conclusion": [
          "Review End to End Data Flow - Confluent to Power BI",
          "Wrap up & next steps"
        ]
      },
      "requirements": [
        "Be able to create Azure Account for hands on practice & follow along",
        "Be able to create Confluent Cloud Account for hands on practice & follow along",
        "Be able to install Power BI for hands on practice & follow along",
        "Be able to install Visual Studio Code for hands on practice & follow along"
      ],
      "description": "In this hands-on course, participants will follow along step-by-step to build a real-time streaming data pipeline that sends data from Confluent Kafka using Azure Functions Sink connector to Azure Functions to Azure Cosmos DB and finally creating operational report using Power BI. This course is designed to provide practical, real-world skills by walking through each component of the architecture, ensuring that learners not only understand the concepts but also apply them directly in a cloud environment.\nOn the Azure Cloud Platform side, participants will gain experience working with several important services, including Azure Functions, Cosmos No SQL DB and Power BI. The participant will also be exposed to logging, trouble shooting, monitoring and configuring these Azure Cloud Platform services. These services are essential for building secure, scalable, and reliable applications in the cloud.\nOn the Confluent Kafka side, learners will set up a fully managed Kafka cluster, create topics for message streaming, & configure a fully managed Source Connector to simulate real-world data ingestion, also configure fully managed Azure Functions Sink connector. This gives participants valuable exposure to enterprise-grade Kafka infrastructure without the overhead of managing the platform themselves.\nBy the end of this course, participants will have built a working, scalable pipeline, gained insights into cloud-native architectures, and acquired hands-on experience that can be directly applied to real-world projects or professional roles.\nThis course is suitable for budding Cloud Engineers, mid level Data Engineers, Product Owners, Product Mangers, Scrum Masters and Technology Leaders looking to get a hands-on experience of building a Real time Streaming Data Pipeline.",
      "target_audience": [
        "Entry Level Cloud developers looking to build skills in Confluent Kafka, Azure & Power BI space",
        "Mid to Sr. Level Software Engineers looking to build data engineering skills by building Real time streaming data pipeline",
        "Product Managers looking to get hands-on experience with Real Time streaming data pipeline using Azure + Confluent + Power BI",
        "Technology Leaders looking to get hands-on experience with Real Time streaming data pipeline using Azure + Confluent + Power BI & gain appreciation for effort involved"
      ]
    },
    {
      "title": "AWS Certified Machine Learning - Specialty",
      "url": "https://www.udemy.com/course/aws-certified-machine-learning-specialty-2024/",
      "bio": "AWS Certified Machine Learning Practice Tests - Complete Explanations and References that covers all MLS-C01 topics!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "AWS Certified Machine Learning - Specialty\nBecome an AWS Certified Machine Learning - Specialty with this comprehensive course!\nThe AWS Certified Machine Learning - Specialty is an advanced certification that validates your ability to design, build, deploy, and manage machine learning models on AWS. With this certification, you can demonstrate your expertise in using AWS services such as Amazon SageMaker, Amazon Rekognition, and Amazon Comprehend to solve complex business problems.\nIn this course, you will learn the advanced concepts and skills required to pass the AWS Certified Machine Learning - Specialty exam. You will cover machine learning algorithms, data preprocessing, model training, and model deployment. You will also receive hands-on practice with real-world machine learning scenarios.\nBy the end of this course, you will be able to:\nDesign and build machine learning models on AWS.\nPreprocess and prepare data for machine learning.\nTrain and evaluate machine learning models.\nDeploy and manage machine learning models in production.\nWho should take this course:\nThis course is for experienced data scientists and machine learning engineers who want to advance their skills and knowledge of AWS machine learning. This includes data scientists and machine learning engineers who work with AWS on a daily basis, data scientists and machine learning engineers who want to prepare for the AWS Certified Machine Learning - Specialty exam, and data scientists and machine learning engineers who want to learn more about advanced AWS machine learning concepts.\nWhat you will need to take this course:\nA computer with internet access\nA basic understanding of machine learning principles\nExperience with AWS services such as Amazon SageMaker, Amazon Rekognition, and Amazon Comprehend\n\n\nHere are some of the benefits of taking this course:\nLearn from experienced instructors: Our instructors are all AWS Certified Machine Learning - Specialty experts with years of experience in the field.\nGet hands-on practice: You will receive hands-on practice with real-world machine learning scenarios.\nPrepare for the AWS Certified Machine Learning - Specialty exam: You will receive comprehensive practice questions and mock exams to help you prepare for the AWS Certified Machine Learning - Specialty exam.\nGet lifetime access: Once you purchase the course, you will have lifetime access to the materials and resources.\nEnroll in this course today and take your first step towards becoming an AWS Certified Machine Learning - Specialty!\n\n\nThe AWS Certified Machine Learning Specialty certification is for developers and data scientists who want to validate their machine learning skills on the AWS platform. Specifically, the exam tests a candidate’s ability to design, build, deploy and maintain machine learning solutions. This path covers the four key test domains: Data Engineering, Exploratory Data Analysis, Modeling, and Machine Learning Implementation and Operations. The information and resources contained in this path will be vital in preparing to take the AWS Certified Machine Learning Specialty exam.\n\n\nJust like the real exam, this practice exam tests four different domains:\nData Engineering\nExploratory Data Analysis\nModeling\nMachine Learning Implementation and Operations\nYou'll need deep and broad knowledge of SageMaker and AWS's other machine learning services, including Rekognition, Translate, Polly, and Comprehend. You'll need to know how to process big data using Kinesis, S3, Glue, and Athena. And you'll need a strong knowledge of AWS security, including use of KMS and IAM.\nBut AWS knowledge is not enough to pass this practice exam, or the real thing! You also need deep knowledge on data science, feature engineering and tuning your machine learning models. Do you really understand regularization techniques and how to use them? Do you really understand precision, recall, and AUC? Do you know how different deep learning models work, and how they are used? This practice exam will let you find out. Every question includes an explanation of the correct answer as well.",
      "target_audience": [
        "Individuals performing a development or data science role seeking certification in machine learning and AWS.",
        "Machine learning professionals testing their readiness for the AWS Certified Machine Learning Specialty exam.",
        "IT Professionals who are planning to take the AWS Certified Machine Learning Specialty exam",
        "Students and professionals who want to deepen their knowledge in AWS"
      ]
    },
    {
      "title": "Linux Essentials: Enough Linux to HACK NASA",
      "url": "https://www.udemy.com/course/linux-mastery-s/",
      "bio": "Learn Linux Commands Lines",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to Basic Linux+ Setting up environment",
          "Enviroment setup"
        ],
        "Hands on Terminal": [
          "pwd",
          "The Ls Command!!!!",
          "Change Working Directory!!",
          "Change Working Directory 2 !!",
          "Make a Directory",
          "Delete a Directory",
          "Rename your Files",
          "Search any files by shell !!!",
          "Tree(The Linux Multiverse)",
          "Create a file",
          "Write in the Files.",
          "Delete a File",
          "View Real Time of Your System",
          "Watch out your disk space",
          "Check size of Folder used",
          "Free space in disk",
          "Calendar on Linux Terminal",
          "Word count of Text Files",
          "ipconfig vs ifconfig",
          "File System 1",
          "File System 2",
          "Alter the File Permission",
          "Manual of Commands"
        ],
        "General Test": [
          "Test"
        ],
        "Take Away!!!!": [
          "Assignment",
          "Take Away from the Course"
        ],
        "Bonus": [
          "Bonus Content"
        ]
      },
      "requirements": [
        "Willingness to Learn"
      ],
      "description": "Linux stands as a cornerstone in the realm of operating systems, revered for its unwavering stability, robust security, and unparalleled flexibility. At the core of its prowess lies the Command Line Interface (CLI), a gateway that empowers users to directly engage with the system through textual commands.\nAcquainting oneself with Linux commands might seem formidable at the onset, yet it stands as an invaluable proficiency to master. These commands serve as a conduit for a diverse array of operations:\nFile System Navigation: Seamlessly traverse through directories and files.\nFile Viewing and Editing: Effortlessly examine and modify files.\nProcess Management: Exercise control over system processes.\nTask Automation: Harness the power of scripting to automate routines.\nThis course caters to novices, welcoming individuals with no prior experience in the Linux domain. It aims to impart foundational knowledge of the Linux CLI, elucidating prevalent commands for adept file and process administration. Furthermore, it delves into the rudiments of shell scripting, empowering users to automate tasks efficiently.\nUpon completion of this course, participants will proficiently:\nUtilize the Linux CLI for file system navigation, file manipulation, and process management.\nCraft basic shell scripts to streamline and automate routine tasks.\nAdvantages of mastering Linux commands extend far beyond mere technical prowess:\nEnhanced System Control: Attain mastery over your Linux environment.\nInvaluable Skill for IT Professionals: Elevate your skill set in the IT landscape.\nEfficient Task Automation: Save time and efforts through automated processes.\nRefined Troubleshooting Acumen: Sharpen your ability to diagnose and resolve issues.\nEmpowerment as a Linux Aficionado: Emerge as a proficient and empowered Linux user.",
      "target_audience": [
        "Beginners"
      ]
    },
    {
      "title": "ISO 26262 Functional Safety Professional Level Practice Test",
      "url": "https://www.udemy.com/course/iso-26262-functional-safety-professional-level-practice-test/",
      "bio": "Certification Prep Course",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Ready to prove your mastery of ISO 26262’s entire lifecycle? Our **Professional-Level Practice Test** course delivers **500+ multiple-choice questions** covering Parts 1 through 12—each with detailed answer explanations. Whether you’re sharpening your HARA skills, drilling tool-qualification criteria, or testing your understanding of motorcycle- and semiconductor-specific guidelines, these timed quizzes simulate the real exam environment and reinforce deep learning.\nWhy you’ll love this course\nComprehensive coverage: Every clause, every part, every nuance—from Scope & Definitions through Safety Case & Adaptations\nInstant feedback: Immediate, concise explanations so you learn why each answer is right (and why the distractors fail)\nAdaptive review: Flash-card mode for weak areas, summary dashboards to track progress by part\nProfessional scripting: Questions written and vetted by senior functional-safety assessors\nFlexible pacing: Jump into a single-part quiz or tackle a full “Parts 1–12” mock exam under timed conditions\nIf you’re aiming for ISO 26262 Professional certification—or simply want to benchmark your team’s proficiency—this practice-test course is your fastest route to exam-day success.\nEnroll now and turn your hard-earned experience into a certified credential! You’re about to embark on a focused, high-impact journey through 500+ multiple-choice questions spanning Parts 1–12. Each quiz is designed to mirror the official exam format: timed, clause-focused, and packed with realistic scenarios.",
      "target_audience": [
        "Engineers, architects, and developers with 1–3 years of automotive E/E safety experience ready to validate their ISO 26262 knowledge",
        "Safety-case authors and HARA/FMEA practitioners seeking targeted practice across Parts 1–12",
        "Quality-assurance and test engineers preparing for Professional-level certification exams",
        "Project leads and technical managers who need a fast-track self-assessment tool for their teams’ ISO 26262 proficiency"
      ]
    },
    {
      "title": "An Introduction to Quantum Natural Language Processing",
      "url": "https://www.udemy.com/course/quantum-natural-language-processing-beginners/",
      "bio": "Explore the Emerging Field of Quantum Natural Language Processing (QNLP) with lambeq QNLP Toolkit",
      "objectives": [],
      "course_content": {
        "Welcome to the course": [
          "Welcome lecture"
        ],
        "----Part 1 Brief Introduction to Quantum Computing----": [
          "Part 1 Brief Introduction to Quantum Computing"
        ],
        "Brief Introduction to Quantum Computing": [
          "Welcome to Part 1 Brief Introduction to Quantum Computing",
          "Introduction to Quantum Computing",
          "Properties of Quantum Computing",
          "Single Qubit Quantum Gates",
          "Multi Qubit Quantum Gates",
          "ZX Calculus Representation of Quantum Gates",
          "Brief Introduction to Quantum Computing Notes"
        ],
        "----Part 2 Basics of Quantum Machine Learning----": [
          "Part 2 Basics of Quantum Machine Learning"
        ],
        "Basics of Quantum Machine Learning": [
          "Welcome to Part 2 Basics of Quantum Machine Learning (QML)",
          "Introduction to Machine Learning",
          "Neural Network Basics",
          "Quantum Machine Learning (QML) - Variational Circuits & QML Architecture",
          "Quantum Neural Networks Briefly",
          "Basics of Quantum Machine Learning Notes"
        ],
        "----Part 3 Diagrammatic Quantum Theory----": [
          "Part 3 Diagrammatic Quantum Theory"
        ],
        "Diagrammatic Quantum Theory": [
          "Welcome to Part 3 Diagrammatic Quantum Theory",
          "Process Theory - Boxes & Wires",
          "States, Effects & Scalars- Kets, Bras & Numbers",
          "Circuit Diagrams - Parallel & Sequential Composition",
          "String Diagrams - Cups & Caps",
          "Diagrammatic Quantum Theory Notes"
        ],
        "----Part 4 Quantum Natural Language Processing----": [
          "Part 4 Quantum Natural Language Processing"
        ],
        "Quantum Natural Language Processing (QNLP)": [
          "Welcome to Part 4 Quantum Natural Language Processing (QNLP)",
          "Introduction to Quantum Natural Language Processing",
          "Distributional Word Representation",
          "Compositionality of Grammar",
          "QNLP Basics - Adjective & Noun",
          "Subject Verb Object Sentence",
          "DisCoCat Algorithm",
          "String Diagram to ZX Quantum Circuit",
          "Introducing lambeq & it's Features",
          "QNLP Training Process",
          "Sentence Classification Code Tutorial - Classical Pipeline",
          "Sentence Classification Code Tutorial - Quantum Pipeline",
          "Sentence Classification Code - Classical and Quantum ZIP File",
          "Potential Applications of QNLP",
          "Future Directions for Research in QNLP",
          "References and Thank you Lecture",
          "Quantum Natural Language Processing Notes"
        ],
        "Bonus Lecture": [
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Experience with Python programming language",
        "Experience with Quantum Computing and IBM Qiskit platform",
        "Basic familiarity with Machine Learning and Quantum Machine Learning"
      ],
      "description": "Quantum Natural Language Processing (QNLP) is an emerging field which is at an intersection of Categorical Quantum Mechanics (CQM) and Computational Linguistics. This is one of those unique field which combines Quantum Computing with Natural Language Processing to take advantage of the properties which Quantum Computing paradigm provides. QNLP is quantum-native which means that the language structure wants to run itself on a quantum computer rather than a classical computer because a natural model of language is equivalent to a natural model utilized to describe quantum mechanical phenomena!\n\n\nThe only prominent company which is working in the field of QNLP is Quantinuum (formerly Cambridge Quantum) and has achieved major milestones in the field of QNLP. They were the first to display the true potential of running language on real quantum hardware such as the IBM quantum hardware. They have released the world's first high-level Python based QNLP toolkit called lambeq which is able to convert any diagram (representing the language structure) into a quantum circuit that helps to run the language on a quantum hardware and simulator.\n\n\nThis is a short course on Quantum Natural Language Processing giving the primary foundations which will help to get started with QNLP and explore its practical applications using the lambeq QNLP toolkit. The course does not provides the mathematical foundations i.e. category theory but rather touches on the diagrammatic quantum theory which is used entirely to build an algorithm (again pictorial) called DisCoCat (Distributional Compositional Categorical).\n\n\nThe course has been divided into the following parts which has a coherent structure to help you navigate according to your requirements:\n\n\nPart 1 - Brief Introduction to Quantum Computing\nPart 2 - Basics of Quantum Machine Learning\nPart 3 - Diagrammatic Quantum Theory\nPart 4 - Quantum Natural Language Processing\n\n\nI am very confident that the field of QNLP is developing rapidly and it will take advantage of the quantum computers which we have today just like other applications of quantum computing are taking advantage. The pictorial nature of QNLP concepts is going to attract many to do more research on this unique and amazing field!",
      "target_audience": [
        "Beginners who are curious to know about Quantum Natural Language Processing (QNLP)",
        "Industry professionals & Tech Enthusiasts who want to explore the field of QNLP",
        "Machine Learning, Deep Learning or AI professionals who want to learn about QNLP"
      ]
    },
    {
      "title": "Programação para Leigos e informática do básico ao avançado",
      "url": "https://www.udemy.com/course/programacao-para-leigos/",
      "bio": "Aprenda sobre Redes, Internet, Protocolo HTTP, Cliente-Servidor, Banco de Dados, Sistemas Operacionais e muito mais!",
      "objectives": [
        "Você aprenderá uma base sólida com uma visão geral sobre a informática voltada para a computação",
        "Você dará seus primeiros passos no mundo da programação de sistemas.",
        "Você será capaz de ir para a próxima fase, seja ela de desenvolvimento web, mobile, games e etc.",
        "Você se sentirá confortável com os conceitos de informática essenciais para quem quer trabalhar na área."
      ],
      "course_content": {
        "Apresentação": [
          "Sobre o curso",
          "Informações Importantes"
        ],
        "Fundamentos da informática": [
          "O que iremos aprender nesta seção?",
          "Como funciona um computador?",
          "Principais ferramentas",
          "Onde conseguir ajuda?",
          "Não utilize nunca: Acentuação, Espaços e Caracteres Especiais para nada",
          "Recapitulando"
        ],
        "Fundamentos de sistemas operacionais": [
          "O que iremos aprender nesta seção?",
          "Sistema operacional Windows",
          "Sistema operacional Linux",
          "Sistema operacional Mac",
          "Máquinas virtuais Linux",
          "Máquinas virtuais Windows",
          "Máquinas virtuais Mac",
          "Baixando as imagens dos sistemas operacionais",
          "Máquinas virtuais - Instalação do Windows",
          "Máquinas virtuais - Instalação do Linux",
          "Recapitulando"
        ],
        "Fundamentos de redes de computadores e internet": [
          "O que iremos aprender nesta seção?",
          "Principais protocolos",
          "Domínio",
          "Cliente-Servidor",
          "Recapitulando"
        ],
        "Fundamentos de linguagens de programação": [
          "O que iremos aprender nesta seção?",
          "Linguagens de baixo nível",
          "Linguagens de alto nível",
          "Paradigmas de programação",
          "Recapitulando"
        ],
        "Fundamentos de bancos de dados": [
          "O que iremos aprender nesta seção?",
          "Bancos de dados relacionais",
          "Bancos de dados não relacionais",
          "Principais ferramentas",
          "Principais ferramentas: Instalação Linux Parte 1",
          "Principais ferramentas: Instalação Linux Parte 2",
          "Principais ferramentas: Instalação Linux Parte 3",
          "Principais ferramentas: Instalação Windows Parte 1",
          "Principais ferramentas: Instalação Windows Parte 2",
          "Principais ferramentas: Instalação Windows Parte 3",
          "Principais ferramentas: Instalação Mac Parte 1",
          "Principais ferramentas: Instalação Mac Parte 2",
          "Principais ferramentas: Instalação Mac Parte 3",
          "Recapitulando"
        ],
        "Fundamentos de desenvolvimento de sistemas": [
          "O que iremos aprender nesta seção?",
          "Padrões de desenvolvimento",
          "Metodologias ágeis",
          "Versionamento de código",
          "Recapitulando"
        ],
        "Fundamentos de publicação e hospedagem de sistemas": [
          "O que iremos aprender nesta seção?",
          "Serviços de hospedagem web",
          "Publicação de aplicativos mobile",
          "Publicação de aplicativos local - Instalação no Linux",
          "Publicação de aplicativos local - Instalação no Windows",
          "Publicação de aplicativos local - Instalação Mac OS",
          "Recapitulando"
        ],
        "Introdução a linguagem de programação Python": [
          "O que iremos aprender nesta seção?",
          "Instalando e configurando as ferramentas - Windows",
          "Instalando e configurando as ferramentas - Linux",
          "Instalando e configurando as ferramentas - Mac",
          "Python básico 1",
          "Mão na massa geek",
          "Python básico 2",
          "Recapitulando"
        ],
        "Introdução a linguagem de programação Java": [
          "O que iremos aprender nesta seção?",
          "Instalando e configurando as ferramentas - Windows",
          "Instalando e configurando as ferramentas - Linux",
          "Instalando e configurando as ferramentas - Mac",
          "Java básico 1",
          "Java básico 2",
          "Recapitulando"
        ]
      },
      "requirements": [
        "Você precisa saber o básico para manipular o computador, como ligar, desligar, acessar programas e a internet.",
        "Você precisa de um computador com acesso a Internet.",
        "É necessário ter nas suas últimas mais atualizadas ou o Windows, ou o Linux (Ubuntu), ou Mac."
      ],
      "description": "O mundo está cada vez mais tecnológico e a demanda por profissionais qualificados está cada vez mais alta.\n\nA quantidade de pessoas que se qualificam todos os anos não supre a demanda e a necessidade de nossas empresas e\nfaz com que sobrem oportunidades para pessoas de todas as áreas.\nUma das principais dificuldades para os que iniciam na área é a insuficiência de conhecimentos básicos em informática.\n\nEste conhecimento básico é essencial para que o profissional consiga resolver problemas que são corriqueiros ou situações\nque podem paralisar ou fazer perder várias horas de trabalho.\nEste curso oferece a você a oportunidade de começar da forma certa, com conhecimentos sólidos e bem definidos sobre os\nprincipais conceitos envolvidos na profissão de um programador de sistemas.\nOBS: Não é este curso que irá deixar você especialista em qualquer dos tópicos estudados, mas sim te dará uma base básica inicial e sólida para que você compreenda os fundamentos destes tópicos e desta forma possa ir se especializando em outros cursos.\nAprenda sobre:\n- Fundamentos da informática;\n- Sistemas Operacionais (Windows, Linux e Mac);\n- Redes de Computadores e Internet;\n- Linguagens de Programação;\n- Fundamentos de Bancos de Dados;\n- Fundamentos de Desenvolvimento de Sistemas;\n- Fundamentos de Publicação e Hospedagem de Sistemas;\n- Introdução á Linguagem de Programação Python;\n- Introdução á Linguagem de Programação Java;\n- Fundamentos de Programação Web (HTML, CSS e JavaScript);\n- E muito mais!\nDê seu primeiro passo no mundo da informática e computação construindo uma base inicial sólida e deixando você preparado(a) para os próximos passos.\nEvolua seu lado geek!",
      "target_audience": [
        "Profissionais que queiram ter uma preparação inicial sólida para se tornar um programador.",
        "Profissionais com qualquer formação que queiram iniciar na área de programação.",
        "Profissionais já inseridos na área mas que se encontram com dificuldades por ter o conhecimento básico inicial ruim ou deficiente.",
        "Pessoas que se sentem perdidas com conceitos de informática essenciais para a profissão"
      ]
    },
    {
      "title": "Java Network Programming & Encryption",
      "url": "https://www.udemy.com/course/java-network-programming-encryption/",
      "bio": "Using sockets and end to end encryption",
      "objectives": [
        "Writing Java Server and Client",
        "Java End to End Encryption Using AES",
        "Java File and Stream I/O",
        "Exporting Application As a Standalone jar File"
      ],
      "course_content": {
        "Java Networking & Encryption on Sockets": [
          "Part 1",
          "Part 2",
          "Part 3",
          "Part 4",
          "Part 5"
        ],
        "Preview": [
          "Mini Trailer"
        ]
      },
      "requirements": [
        "Basic Java Knowledge"
      ],
      "description": "Server socket creating\nSocket creating\nWriting server\nSending message over socket\nUsing threads and runnable\nSending java objects over socket\nEnd to end encryption between two end points\nUsing AES encryption\nUsing file outputstream, inputstream\nReading from sockets(inputstream), writing to sockets(outputstream)\nUsing Secretkey and IvSpec\nUsing encryption algorithm\nExporting application as a standalone .jar file on eclipse\nRunning .jar file on command line\nUsing interface\nUsing byte[] (bytearray)\nWriting utility methods for encryption and decryption\nForwarding message from one client to another\nUsing objectoutputstream and inputstream while reading and writing on sockets\nUsing bytearrayoutputstream and bytearrayinputstream\nUsing cipher decrypt mode and encrypt mode\nCipher do update and do final and init\nEncrypting a message on one side than decrypting it on the other side\nUsing concurrenthashmap and hashmap\nUsing java generic types\nYou will see file encryption and decryption methods\nWe will use eclipse for ide.\n\n\nAt the end of this course;\nyou will understand encryption and decryption mechanism\nyou will understand server - client mechanism\nyou will understand end to end encryption mechanism\nyou will understand running .jar files\n\n\nAll my udemy courses are focused on practical training. You will need basic knowledge of java. If you think you forgot, i recommend refresh your java knowledge.",
      "target_audience": [
        "Java Beginners, Java Intermediates, Java Gurus",
        "Curios about Java Encryption and Decryption",
        "Curios about Java Networking"
      ]
    },
    {
      "title": "Ethereum DApps: Learn Solidity & Web3 Integration with Wagmi",
      "url": "https://www.udemy.com/course/ethereum-dapps-learn-solidity-web3-integration-with-wagmi/",
      "bio": "Master blockchain fundamentals, write Solidity smart contracts, integrate Uniswap, and build NFT DApps with Wagmi.",
      "objectives": [
        "Understand the core principles of blockchain technology.",
        "Get familiar with smart contracts and the Solidity programming language.",
        "Learn to integrate blockchain functionality using Wagmi and Viem.",
        "Build interactive decentralized applications (DApps).",
        "Create and launch NFT projects including ERC-721 token standards, NFT minting applications, and metadata storage on IPFS.",
        "Implement Uniswap integration to execute token swaps, and interact with DeFi protocols using the Uniswap SDK.",
        "Design a full decentralized NFT marketplace with NFT listings, buying/selling functionality, offers and auctions functionality.",
        "Gain hands-on blockchain development skills by completing multiple projects—from a simple counter contract to a production-ready decentralized marketplace."
      ],
      "course_content": {
        "Blockchain Fundamentals": [
          "Introduction to Blockchain",
          "History",
          "Core Principles",
          "How blockchain works",
          "Components",
          "Consensus Mechanisms",
          "Transactions",
          "Transaction Lifecycle",
          "Key Takeaways"
        ],
        "Ethereum and Smart Contracts Essentials": [
          "Section Introduction",
          "Ethereum and Core Features",
          "EVM",
          "Accounts",
          "Transactions And Gas Fee",
          "Smart Contract Use Cases",
          "Ethereum Standards",
          "Wrap Up"
        ],
        "Solidity 101": [
          "Introduction",
          "Resources",
          "Syntax And Data Types",
          "Constructor And Functions",
          "Variable Types",
          "Writing Your First Contract",
          "Solidity Concepts",
          "Conditional Statements And Loops",
          "Mappings And Arrays",
          "Enums",
          "Structs And Interfaces",
          "Events",
          "Transfer Function And Libraries",
          "Hashing And Error Handling",
          "Error Handling(Cont.)",
          "Function Modifiers",
          "Solidity Quiz"
        ],
        "Environment Setup": [
          "Basics and Resources",
          "Foundry Introduction",
          "Setup",
          "Initialize A Project",
          "Wrap Up"
        ],
        "Writing an ERC721 Contract": [
          "Introduction",
          "Coding-1",
          "Coding-2",
          "Testing",
          "Deployment"
        ],
        "Optional: Javascript": [
          "Welcome to Javascript Fundamentals",
          "Course Code Repository & Resources",
          "Essential VS Code Extensions for JavaScript & React Development",
          "Introduction",
          "Variables and Data Types",
          "Arrays",
          "Objects",
          "Important Object Concepts to Remember",
          "Built in Methods",
          "Loops",
          "Conditionals if-else",
          "Functions",
          "Promises",
          "Async await",
          "ES6 features",
          "Modules",
          "Error handling",
          "Debugging",
          "Javascript final Quiz"
        ],
        "Optional: React": [
          "Welcome to React fundamentals",
          "React Code Repository & Development Resources",
          "Introduction",
          "Project Setup",
          "Making the first page",
          "Props",
          "use State Hook and Events",
          "Conditional rendering",
          "use Effect hook",
          "Map method",
          "Forms",
          "Lifting state up using props",
          "use Context hook",
          "Router",
          "Custom hook use Fetch"
        ],
        "Building Interactive DApps": [
          "Introduction",
          "Wagmi And Viem",
          "Wagmi Hooks",
          "Building Your First DApp-1",
          "Building Your First DApp-2",
          "Building Your First DApp-3",
          "Minting DApp-Intro",
          "Minting DApp-NFT Metadata",
          "Minting DApp-Metadata Generation",
          "Minting DApp-Contract",
          "Minting DApp-Contract (Continued)",
          "Minting DApp-Frontend"
        ],
        "Interacting with DeFi Protocols": [
          "Introduction",
          "Automated Market Makers",
          "Uniswap SDK Intro",
          "Coding A Swap-Intro",
          "Coding A Swap-Setting Up Anvil",
          "Coding A Swap-Metamask Setup",
          "Coding A Swap-Native Balance",
          "Coding A Swap-Token Balance",
          "Coding A Swap-Price Fetching",
          "Coding A Swap-Price Fetching(Continued)",
          "Coding A Swap-Implementing The Swap"
        ],
        "Final Project: Decentralized NFT Marketplace": [
          "Introduction",
          "Data Structures in Our NFT Marketplace Contract",
          "Marketplace Contract",
          "Marketplace Contract-Listing and Purchase",
          "Marketplace Contract-Fee",
          "Marketplace Contract-Auction",
          "Marketplace Contract-Offer",
          "Marketplace Contract-Security Features",
          "Marketplace Contract-Contract Review",
          "Marketplace Frontend-Remix Overview",
          "Marketplace Frontend",
          "Marketplace Frontend-Wagmi",
          "Marketplace Frontend-Wallet Connection",
          "Marketplace Frontend-Writing Hooks",
          "Marketplace Frontend-Fixed Priced Listing",
          "Marketplace Frontend-Fixed Priced Listing(Continued)",
          "Marketplace Frontend-Metadata Cache",
          "Marketplace Frontend-Metadata Cache(Continued)",
          "Marketplace Frontend-Purchase and Cancel Listing",
          "Marketplace Frontend-Auction Listing",
          "Marketplace Frontend-Auction Page",
          "Marketplace Frontend-Auction Offer"
        ]
      },
      "requirements": [
        "Basic programming knowledge (familiarity with JavaScript or any C-style language is helpful but not required).",
        "Requires some experience with programming languages, including an understanding of their structure and flow.",
        "Curiosity, problem-solving mindset, and the motivation to learn blockchain fundamentals, Solidity smart contracts, Ethereum DApps, Uniswap integration, and NFT marketplace development step by step.",
        "No prior blockchain knowledge is required, we’ll start from the ground up and guide you through hands-on projects until you can confidently build decentralized applications."
      ],
      "description": "This course offers a complete, hands-on journey into blockchain development, empowering you to master the technologies behind Ethereum DApps. You'll progress from understanding essential blockchain fundamentals all the way to building and deploying real-world applications such as NFT marketplaces and token swaps.\nBuild Real-World Ethereum DApps from the Ground Up\nUnderstand blockchain principles like decentralization, immutability, cryptography, and consensus.\nLearn how Ethereum works—including the EVM, transactions, accounts, and gas mechanics.\nWrite, compile, and deploy Solidity smart contracts using tools like Foundry.\nBuild interactive DApp frontends using Wagmi (React hooks for Ethereum) and integrate decentralized storage with IPFS.\nImplement Uniswap integration for token swaps and liquidity pool interaction.\nDevelop four hands-on projects:\nA Simple NFT Contract (ERC-721).\nAn NFT Minting DApp with IPFS metadata storage.\nAn Automated Swap DApp using the Uniswap SDK.\nA Decentralized NFT Marketplace with wallet login, listings, and transactional functionality.\nWhy This Course Works\nYou'll learn by building real projects—no fluff or filler. This course combines clear explanations with actionable coding walkthroughs so you can confidently build, deploy, and showcase Ethereum DApps, even if you’re new to blockchain.\nWhat Makes This Course Unique\nThis is not your average blockchain tutorial. Here’s what sets it apart:\nProject-driven learning: Each module ends with a functional project you can add to your portfolio.\nUp-to-date with modern tools: You'll work with tools like Wagmi for frontend development, and integrate with Uniswap protocols.\nStructured progression: From blockchain theory and Solidity basics to full-stack Ethereum application development—won’t feel scattered.\nBeginner-friendly: No blockchain or smart contract experience required—you just need curiosity and a willingness to code.\nAre you ready to step into Web3 and start building Ethereum DApps with confidence?",
      "target_audience": [
        "Beginner developers who want to start with blockchain fundamentals and progress to building full Ethereum DApps.",
        "Web developers (JavaScript/React) looking to expand their skills into Solidity smart contracts, Uniswap integration, and NFT marketplace development.",
        "Students and learners curious about how blockchain, DeFi, and NFTs work under the hood.",
        "Anyone curious about DeFi and Web3 who wants structured, project-based learning instead of scattered tutorials."
      ]
    },
    {
      "title": "Code Together",
      "url": "https://www.udemy.com/course/code-together/",
      "bio": "C++ Http Client (with boost asio)",
      "objectives": [
        "Will achieve practical understanding of multitasking",
        "Will be able to implement a http client",
        "Will be able to implement practical execution flows with multitasking",
        "Will be able to use an HTTP client from C++"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Build boost",
          "Prepare Directory Layout",
          "Add Necessary Projects",
          "Git First Commit",
          "Boost Asio Basics"
        ],
        "Http Client": [
          "Roadmap",
          "Prepare Sample HttpClient Application",
          "Setting up HttpClient API - Factory",
          "Setting up HttpClient API - SendAsync",
          "Dummy Implementation For SendAsync",
          "Async Resolve",
          "Async Resolve Parametrization",
          "Async Connect",
          "Async Operations Memory Management With shared_ptr",
          "Http Client Lifetime Management Arrangements",
          "Http Traffic and Sample Messages",
          "Send Simple Http Message",
          "Read Http Simple Response",
          "Http Response Parser - Preparation",
          "Http Response Parser - Read Header Data",
          "Http Response parser - Parse Until Startline",
          "Http Response Parser - Parse Header Fields",
          "Http Header Transfer Method And Error Checks",
          "Http Determine Transfer Method",
          "Http Reading Body-1",
          "Http Reading Body-2",
          "Debug and Fixes"
        ],
        "Arranging The API": [
          "Employ Boost Url",
          "Manage Connection Parameter",
          "Url Scheme To Port Mapping",
          "Prepare Http Request Object",
          "Get Request Helper",
          "Add Unit Test"
        ],
        "Https Support": [
          "Acquire openssl",
          "Prepare Ssl Context",
          "Determine When to Use Https",
          "Prepare Tls Socket",
          "Tls Connect",
          "Https Write",
          "Https Read",
          "Tls and Asio Security Options"
        ],
        "Stress Test": [
          "Prepare Project Layout",
          "Prepare Code Layout - Find & Fix A Bug In The Library",
          "Add Concurrency To The Test",
          "Add Threads To The Test",
          "Add Randomness To Download Address",
          "Add Timings"
        ]
      },
      "requirements": [
        "Familiarity with C++ multitasking with boost asio is preferred"
      ],
      "description": "Good software developers invest considerable time into learning. Learning programming languages, techniques, getting the basics, and having a clear theoretical knowledge is a starting point and is definitely necessary. Though, what comes next is often even more valuable. Unfortunately, many times it is ignored.\n\n\n“Gaining real-life experience while developing something actually useful and doing it together with someone who knows what s/he is doing”.\n\n\nDoing homework, reading, or writing code snippets have their own merits, but some things can only be learned through experience. It is through this valuable experience that you actually internalize what you have been learning. You learn what to do and what not to do, when and where.\n\n\nThe very first steps of human improvement involve imitation of successful behavior. Many of us who are lucky enough to have a senior developer that we can observe at work, have already somewhat understood this fact. For the rest of us who does not have a relevant senior developer close to us, or for those of us who still feels lacking experience about certain subjects, this course is for you.\n\n\nIn “Code Together” series you will actively observe a senior developing a practically useful piece of software. We will\n- prepare a minimal work definition\n- write samples\n- design an API\n- do the implementation\n\n\ntogether with you. You are advised to actively follow the work being done\n- by listening/watching carefully\n- by stopping the videos and writing/replicating the code yourself\nor even redesigning things where you see appropriate.\n\n\nThe code we show in this lecture is available as an opensource project on github.\nIn this episode we will be developing a client and a server with http(s) support.\n\n\nBy the end of this course, you will have experience on\n- how to implement\no http clients\no API definitions\no sample apps\n- how to use boost asio\n- how to implement proper lock-safe multitasking. (i.e. using minimal number of locks or no locks at all)\nAbove all, you will accumulate useful experience about how a seasoned developer thinks and approaches things.",
      "target_audience": [
        "C++ developers with some amount of know how on multi tasking",
        "C++ developers with strong urge to discover and learn"
      ]
    },
    {
      "title": "GitHub Copilotを学ぼう！ -生成AIで実現する楽しく生産的なコーディング-",
      "url": "https://www.udemy.com/course/github-copilot-ai/",
      "bio": "生成AIの力で、コーディングの速度、精度を向上させましょう。様々な言語で利用可能なプログラミング補助ツール、GitHub Copilotの使い方を学びます。開発環境にはVisual Studio Codeを使用します。",
      "objectives": [
        "GitHub Copilotを使ったコーディングを基礎から体験と共に学びます。",
        "GitHub Copilotが持つ様々な機能の使い方を学びます。",
        "GitHub Copilotの様々な応用を学びます。",
        "AIとの対話によるコード生成について学びます。",
        "GitHubの全体像、そしてその将来性について学びます。"
      ],
      "course_content": {
        "GitHub Copilotの概要": [
          "セクション1の教材",
          "イントロダクション",
          "講座の概要",
          "GitHub Copilotの概要",
          "Visual Studio Codeのインストール",
          "GitHub Copilotの導入",
          "GitHub Copilotを使ってみる",
          "セクション1の演習"
        ],
        "GitHub Copilotの様々な機能": [
          "セクション2の教材",
          "Section2の概要",
          "コードの自動生成",
          "GitHub Copilot Chat",
          "ドキュメントの生成",
          "セクション2の演習"
        ],
        "GitHub Copilot": [
          "セクション3の教材",
          "Section3の概要",
          "GitHub Copilotによるプログラミング学習",
          "Markdownエディタの開発",
          "ゲームの開発",
          "チャットボットの開発",
          "最後に"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "プログラミングの知識はある程度ある方が望ましいですが、無くても大丈夫です。",
        "人工知能、機械学習の技術的な知識は不要です。",
        "2023年12月の環境で解説しています。最新の環境と異なる可能性があります。",
        "GitHubのアカウント開設が必要です。",
        "GitHub Copilotは有料のサービスです（試用期間あり）。Copilot Individualは10$/月 で、クレジットカードの登録が必要です。",
        "開発環境にVisual Studio Codeを使用します。環境の設定に関しては、ある程度自分で調べる必要があります。",
        "プログラミング言語自体の解説はありません。"
      ],
      "description": "「GitHub Copilotを学ぼう！」は、人工知能（AI）でプログラミング作業を支援するツール「GitHub Copilot」の使い方を学ぶ講座です。\nAIのサポートによるコーディングの効率化を、基礎から体験と共に学びます。\n開発環境にVisual Studio Code、プログラミング言語には主にPythonを使用します。\n\n\nGithub Copilotは、AIを利用してコーディングの際にコードの補完や提案を行うツールです。\nコードの文脈に基づいて、適切なコードを提案、生成することができます。\nPython、JavaScript、TypeScript、Ruby、Go、C#、C++ など様々なプログラミング言語で利用可能です。\n\n\n本講座では最初にGitHub Copilotの全体像を学んだ上で、環境設定、各機能、活用方法などについて、順を追って少しずつ学んでいきます。\nAIの力を借りて、効率よく、そして楽しくコーディングできるようになりましょう。\n\n\n講座の内容は以下の通りです。\nSection1. GitHub Copilotの概要\n→ GitHub Copilotの概要、および開発環境について学びます。\nSection2. GitHub Copilotの様々な機能\n→ GitHub Copilotが持つ様々な機能について学びます。\nSection3. GitHub Copilotの活用\n→ GitHub Copilotの様々な活用方法について学びます。",
      "target_audience": [
        "GitHub Copilotを基礎から体験ベースで学びたい方。",
        "GitHub Copilotを業務で活用したい方。",
        "AIのサポートによりコーディング作業を効率化したい方。",
        "AI技術のトレンドに追随したい方。",
        "GitHub Copilotを使ってプログラミングを学びたい方。"
      ]
    },
    {
      "title": "Healthcare Data Security for Beginners",
      "url": "https://www.udemy.com/course/healthcare-data-security-for-beginners/",
      "bio": "Introduction to Healthcare Data Security",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Data Security & Healthcare": [
          "EHR Data Security & Analysis Overview"
        ],
        "Importance of Data Privacy and Security in Healthcare": [
          "Data Privacy and Security From a Patient, Provider and Data User Perspective",
          "Patient Perspective Data Security",
          "Value of Medical Record Data to Hackers",
          "Value of Medical Record Data to Hackers - Examples",
          "Common HIPAA Violations",
          "Encryption"
        ],
        "Key Healthcare Data Security And Privacy Standards And Terminology": [
          "Key Industry Regulations",
          "Key Industry Regulations - HIPAA vs. HITECH vs. GDPR vs. DPA",
          "Shift to Electronic Health Records (EHR)",
          "What is PHI?",
          "Covered Entities",
          "Business Associates (BA)",
          "Business Associate Agreement/Addendum (BAA)"
        ],
        "Storing and Accessing PHI Data": [
          "Securing PHI Data",
          "HIPAA Compliant Cloud Practices",
          "Minimum Necessary Standard",
          "HIPAA's Two Ways to De-Identify a Dataset",
          "Importance of EDA",
          "Reasons EDA is Important",
          "Value Distributions"
        ],
        "Demographic Analysis": [
          "The Importance of Demographic Analysis In Healthcare"
        ],
        "Data Analytics & Big Data": [
          "Definition of Data Analytics",
          "Data Classification",
          "The 3 V's of Big Data",
          "Analytics Evolution",
          "The Analytics Problem Approach",
          "AWS Big Data and Analytics - Collect",
          "AWS Big Data and Analytics - Storage",
          "AWS Big Data and Analytics - Process and Analyze"
        ],
        "Machine Learning": [
          "Key Objective of Machine Learning",
          "Arthur Samuel Machine Learning Definition",
          "Tom Mitchell Machine Learning Formal Definition",
          "Industry Application",
          "Terminology",
          "Terminology Examples",
          "Machine Learning Phases",
          "Machine Learning Types"
        ],
        "Machine Learning: Supervised Learning": [
          "Supervised Learning Definition",
          "Supervised Learning Process",
          "Classification Vs. Regression",
          "Supervised Learning Algorithms",
          "Supervised Training Process",
          "Business Analytics",
          "Training Summary"
        ],
        "Machine Learning: Unsupervised Learning": [
          "Unsupervised Learning Introduction",
          "Unsupervised Learning Definition",
          "Pattern Types",
          "Clustering",
          "Anomaly Detection",
          "Association Discovery",
          "Clustering Example",
          "Unsupervised Training Process",
          "Unsupervised Learning Business Analytics",
          "Unsupervised Learning Dataset Summary",
          "Unsupervised Learning Overview"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge"
      ],
      "description": "By completing this course, you will learn about:\nData Security and Privacy, including some of the key standards and regulations.\nExploratory data analysis allowing you to gain a deeper understanding of your datasets, including:\nDataset schemas\nValue distributions\nMissing values\nCardinality of categorical features\nDemographic dataset analysis\nData Analytics\nMachine Learning\nUnderstand what Machine Learning is and what it offers\nUnderstand the benefits of using the Machine Learning\nUnderstand business use cases and scenarios that can benefit from using the Machine Learning\nUnderstand the different Machine Learning training techniques\nUnderstand the difference between Supervised and Unsupervised training",
      "target_audience": [
        "Beginners"
      ]
    },
    {
      "title": "Der Weg zum professionellen Softwareentwickler",
      "url": "https://www.udemy.com/course/der-weg-zum-professionellen-softwareentwickler/",
      "bio": "Entdecke: Clean Code, Softwarecraftsmanship, agile Entwicklung, Entwurfsmuster, TDD und viele weitere spannende Gebiete.",
      "objectives": [
        "Einen guten Überblick über viele Konzepte der aktuellen agilen Softwareentwicklung.",
        "Hoffentlich ein paar \"Aha\"-Erlebnisse... :)",
        "Viele meiner oft umständlich gemachten Erfahrungen in einem Stück."
      ],
      "course_content": {
        "Einführung in den Kurs": [
          "Willkommen!",
          "Überblick über den Kurs",
          "Dein Trainer"
        ],
        "Die eigene Position bestimmen": [
          "Anfänger oder Experte? Wo stehst du?",
          "Das Dreyfus-Modell",
          "Was verrät dir deine Position?",
          "Die Route bestimmen und los..."
        ],
        "Dein persönlicher Werkzeugkasten": [
          "Werkzeuge aussuchen und beschaffen",
          "Werkzeuge schleifen und pflegen",
          "Neue Werkzeuge testen und beurteilen"
        ],
        "Software kommunizieren": [
          "Wieso ist Kommunikation so wichtig?",
          "Einblick ins Alchemistenlabor",
          "Buzzwörter, die Sau und das Dorf",
          "Der Nutzer muss es kapieren!",
          "Auf ein Wort: Architekturdokumentation"
        ],
        "Clean Code & Softwarecraftsmanship": [
          "Zwei Bewegungen – ein Gedanke",
          "Lesbare Software",
          "Methoden benennen",
          "Refactoring!",
          "Beispiel: Wie Software lesbar wird 1/2",
          "Beispiel: Wie Software lesbar wird 2/2"
        ],
        "Prinzipien der objektorientierten Softwareentwicklung": [
          "Der Experte und das Prinzip",
          "Das Prinzipien-Wiki",
          "Beispiel: DRY",
          "Beispiel: Single-Responsibility-Prinzip",
          "Beispiel: Vorsicht vor Optimierungen!",
          "Beispiel: Teste alles, was möglicherweise schiefgehen könnte."
        ],
        "Software Entwurfsmuster": [
          "Die Einstiegsdroge",
          "Formalisierte Prinzipien",
          "Beispiel: Strategie-Muster",
          "Beispiel: Template-Methode",
          "Spickzettel: UML"
        ],
        "Testgetriebene Entwicklug": [
          "Händewaschen nicht vergessen!",
          "TDD-Zyklus erklärt",
          "Beispiel: TDD angewandt 1/2",
          "Beispiel: TDD angewandt 2/2",
          "Testen ist nicht gleich Testen"
        ],
        "Softwaredesign": [
          "Das Leben wird leichter",
          "Design erkennen und kategorisieren",
          "Der schwierige Aufstieg"
        ],
        "Agile Softwareentwicklung": [
          "Scrum, Kanban und Co.",
          "Das agile Manifest",
          "Beispiel: Scrum",
          "Unaufhaltsam: Das agile Team"
        ]
      },
      "requirements": [
        "Es sind keine konkreten Erfahrungen nötig.",
        "Eine objektorientierte Programmiersprache sollte beherrscht werden.",
        "Die Programmierbeispiele sind in Java. Sie sind aber so einfach gehalten, dass man Java nicht können muss, um sie zu verstehen."
      ],
      "description": "Prolog:\nIch hatte mich verirrt. Ich hatte studiert und mich danach hochmotiviert auf den Weg gemacht, um ein wirklich guter Softwareentwickler zu werden, verschlang Fachbücher (einige gute, viele schlechte), las Fachzeitschriften, besuchte UserGroups und lernte alles, was im Trend lag. Trotzdem wurde das Entwickeln im Alltag immer wieder zur Qual. Für jede erdenkliche Situation suchte ich mir das passende Framework und lernte es. Ich verstrickte mich in Abhängigkeiten und verzettelte mich in Sonderfällen. Das frustrierte und war bei weitem nicht das, was ich mir unter guter und leichter Softwareentwicklung vorstellte. Irgendwann dämmerte es mir. Ich fing an zu begreifen, was mir intuitiv schon länger klar war: man muss nicht immer mehr lernen um Profi zu werden – man muss das Richtige lernen und vor allen Dingen das Mindset eines Profis entwickeln.\nDer Weg zum professionellen Softwareentwickler ist ein Reiseführer durch das aufregende Gebiet der modernen, agilen und pragmatischen Softwareentwicklung, und zugleich die Quintessenz dessen, was ich auf meinem Weg und den Irrwegen gelernt habe. Gemeinsam werden wir uns die Gebiete der Softwareentwicklung anschauen, die wirklich sehenswert sind. Wir lernen Techniken kennen, die es wert sind gelernt zu werden. Wir passieren Sümpfe und dorniges Unterholz, die wir – nach einer kleinen Warnung – jeweils links liegen lassen.\nEs werden in diesem Kurs nicht nur kleine Einblicke in verschiedensten Techniken gegeben, sondern eine Haltung vermittelt, die einen professionellen Entwickler ausmachen.\nMeine Motivation ist es dir diese Irrwege zu ersparen. Ich möchte dir einen Weg aufzeigen, wie du als Softwareentwickler erfolgreich sein und gleichzeitig Spaß und Leichtigkeit haben kannst. Dies wünsche ich Dir von Herzen.\nThorsten Diekhof\nThemen die behandelt werden:\nDreyfus-Modell\nArchitekturdokumentation\nClean Code\nSoftwarecraftsmanship\nRefactoring\nPrinzipien und Praktiken der objektorientierten Softwareentwicklung\nEntwurfsmuster / Designpattern\nTestgetriebene Entwicklung / TDD\nSoftwaredesign\nAgile Softwareentwicklung / SCRUM\nPersönlichkeit eines Profis\nIntuition als Werkzeug\nBewusstes Lernen\nSMART Methode",
      "target_audience": [
        "Du bist hier richtig, wenn du schon ein wenig programmieren kannst, und dich fragst was genau du lernen sollst um richtig gut in der Softwareentwicklung zu werden.",
        "Du bis hier richtig, wenn du im Berufsalltag steckst, und dich gerne weiterentwickeln willst.",
        "Du bist hier NICHT RICHTIG, wenn du glaubst schon Alles über die Softwareentwicklung zu kennen – und du genau weißt, wo es lang geht."
      ]
    },
    {
      "title": "Generative AI for AEC: Image Creation with Replicate Models",
      "url": "https://www.udemy.com/course/replicateai/",
      "bio": "Leverage Dynamo, AI, and Replicate models to generate architectural images, improve visualization, and streamline Revit",
      "objectives": [
        "How to connect Dynamo with Replicate’s AI models to generate images",
        "How each of the five AI models functions, including their intended applications and potential uses in design workflow",
        "How to structure image prompts effectively for AI-driven results",
        "How AI-generated images can support concept visualization and material experimentation",
        "How AI-powered visualization can enhance Revit workflows by linking images with design data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "AvantLeap Strategy & AI-Driven Consultancy",
          "Getting Requirements"
        ],
        "Using Replicate with Dynamo": [
          "Using Interior Design Replicate",
          "Using Image to Image Replicate",
          "Using Sketch To Image Replicate",
          "Using Segment To Image Replicate",
          "Using Segment to Another Image Replicate",
          "Using Influencer Image From Another Image"
        ]
      },
      "requirements": [
        "Basic familiarity with Dynamo and Revit is recommended but not required",
        "Autodesk Revit 2023 or newer with Dynamo installed",
        "A Replicate API key (instructions will be provided on how to obtain and use it)",
        "A stable internet connection to access Replicate’s AI models and generate images",
        "No coding experience required—this course focuses on low-code AI integration using pre-built Dynamo nodes",
        "Basic understanding of architectural workflows is beneficial for contextualizing AI-generated imagery within AEC applications",
        "Recommended to have taken the Dynamo and OpenAI Integration"
      ],
      "description": "Generative AI in Dynamo: Image Creation with Replicate\nAI-generated imagery is rapidly changing architectural visualization, conceptual design, and material experimentation. However, integrating these capabilities into AEC workflows can be complex, requiring extensive coding knowledge and technical expertise. This course provides a structured, low-code approach to exploring Replicate’s AI diffusion models within Dynamo for Revit, making AI-powered image creation accessible to designers, architects, and BIM professionals.\nBy leveraging pre-built Dynamo nodes, this course introduces a set of five AI models, each offering distinct capabilities for image generation, enhancement, and transformation. These models allow users to generate AI-driven conceptual visuals, refine sketches, enhance images, segment elements within a visual composition, and manipulate styles based on influences. Rather than focusing on automation or detailed workflows, this course introduces AI image generation as a creative tool, opening new possibilities for design ideation and presentation.\nUnlike technical scripting courses, this learning experience does not involve hands-on exercises or structured projects. Instead, it serves as an exploration of AI-driven visual creativity, demonstrating how AI-generated images can influence design thinking, conceptual workflows, and material applications within AEC environments. By the end of the course, students will gain a foundational understanding of AI-driven image generation and how it can be leveraged in Revit and Dynamo workflows for future applications.\nExploring Five AI Models for Image Generation\nThis course introduces five powerful AI image-generation models, each designed to address specific aspects of visual creativity:\nInterior Design AI – Generates fully detailed interior spaces based on descriptive prompts, helping designers visualize different layouts, furniture arrangements, and material combinations.\nSketch-to-Image AI – Transforms rough sketches into realistic images, making it possible to develop early-stage design ideas without manual rendering.\nImage-to-Image AI – Enhances and refines existing images while preserving overall structure, allowing users to improve image resolution, sharpness, and clarity using AI-driven techniques.\nSegmentation AI – Breaks down images into multiple layers or elements, enabling the analysis and manipulation of individual image components for material exploration or alternative visual compositions.\nReplicate Image-to-Image with Influencer AI – Adjusts and refines an image’s style based on an external reference, allowing designers to guide AI-generated outputs toward specific aesthetics.\nEach of these models opens new opportunities for AI-driven visualization, enabling users to explore conceptual sketches, material compositions, and presentation imagery with greater efficiency.\n\nKey Takeaways\nUnderstand how AI-generated images can enhance architectural ideation and design workflows\nLearn how to connect Dynamo to Replicate AI models using pre-built nodes\nExplore five AI models for generating, refining, and segmenting architectural visuals\nGain insights into AI-assisted image workflows for AEC applications\nDiscover how AI-driven imagery can support design visualization, presentation, and material experimentation",
      "target_audience": [
        "AEC professionals interested in AI-powered concept design and visualization",
        "Dynamo users looking to understand AI-generated imagery in computational design",
        "Architects and designers exploring alternative visualization techniques with AI",
        "Anyone looking for a structured, low-code introduction to AI image generation in Revit and Dynamo"
      ]
    },
    {
      "title": "Curso de Design Patterns com C# - Desenvolvimento Avançado",
      "url": "https://www.udemy.com/course/curso-de-design-patterns-com-c-desenvolvimento-avancado/",
      "bio": "Técnicas Avançadas para Desenvolvimento de Software",
      "objectives": [
        "Ao concluir esse curso, os alunos serão capazes de aplicar Design Patterns em suas aplicações e/ou soluções tornando seus códigos profissionais, performáticos e escalável."
      ],
      "course_content": {
        "Introdução a Design Patterns": [
          "Introdução ao Curso",
          "Introdução aos Design Patterns"
        ],
        "Design Patterns de Criação": [
          "Introdução ao Pattners com propósito de Criação",
          "Singleton",
          "Factory Method",
          "Abstract Factory",
          "Builder",
          "Prototype"
        ],
        "Design Patterns Estrutural": [
          "Introdução ao Pattners com propósito de Estrutura",
          "Adapter",
          "Bridge",
          "Composite",
          "Decorator",
          "Facade",
          "Flyweight",
          "Proxy"
        ],
        "Design Patterns Comportamental": [
          "Introdução ao Pattners com propósito de Comportamento",
          "Chain of Responsibility",
          "Command",
          "Interpreter",
          "Iterator",
          "Mediator",
          "Memento",
          "Observer",
          "State",
          "Strategy",
          "Template Method",
          "Visitor"
        ],
        "BÔNUS: Arquiteturas de Projetos na Prática": [
          "Injeção de dependência"
        ],
        "Conclusão do Curso": [
          "Aula de Encerramento"
        ]
      },
      "requirements": [
        "Conhecimentos básicos ou intermediário em programação",
        "Usaremos a linguagem C# e Visual Studio."
      ],
      "description": "Neste curso, você irá aprender a usar e aplicar no desenvolvimento de suas aplicações Design Patterns. Com isso, você será capaz de desenvolver códigos mais enxuto, limpo, organizado e principalmente aumentar a qualidade e diminuir a complexidade do seu código. Ou seja, desenvolver de forma profissional, além de dominar práticas avançadas.",
      "target_audience": [
        "Este curso é para você que quer torna-se um desenvolvedor mais completo e conhecer os Design Patterns e deixar os seus códigos mais profissionais, com melhor performance.",
        "Para pessoas que querem se aprofundar em aspectos mais avançados de desenvolvimento de software."
      ]
    },
    {
      "title": "Ejemplos de LINQ con C# 10",
      "url": "https://www.udemy.com/course/ejemplos-de-linq-con-csharp/",
      "bio": "Aprende LINQ haciendo ejemplos, tanto la sintaxis de métodos como la sintáxis de queries",
      "objectives": [
        "Usar la sintaxis de métodos de LINQ",
        "Usar la sintaxis de queries de LINQ",
        "Las nuevas características de C# 10 para LINQ",
        "Cómo utilizar LINQ con objetos en memoria",
        "Cómo utilizar LINQ con Entity Framework Core"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Repositorio de Github",
          "Seteando el Ambiente de Desarrollo",
          "¿Qué es LINQ?",
          "Ejecución Diferida"
        ],
        "Filtros": [
          "Función Where",
          "Where con Objetos",
          "First y FirstOrDefault",
          "Last y LastOrDefault",
          "ElementAt y ElementAtOrDefault",
          "Single y SingleOrDefault",
          "Filtrando por Tipo - OfType",
          "Filtros"
        ],
        "Ordenando Elementos": [
          "OrderBy y OrderByDescending",
          "ThenBy y ThenByDescending",
          "Reverse",
          "Ordenando elementos"
        ],
        "Proyecciones": [
          "Select",
          "SelectMany",
          "Proyecciones"
        ],
        "Escalares": [
          "Count y LongCount",
          "Suma, Máximo y Mínimo",
          "MaxBy y MinBy (Nuevo de C# 10)",
          "Promedios",
          "Agregados"
        ],
        "Cuantificadores": [
          "All",
          "Any",
          "Contains"
        ],
        "Paginación": [
          "Take y TakeLast",
          "Skip y SkipLast",
          "Ejemplo de Paginación",
          "TakeWhile y SkipWhile"
        ],
        "Agrupando": [
          "GroupBy Simple",
          "GroupBy Por Rango de Edad"
        ],
        "Relacionando Distintas Colecciones": [
          "Join (Inner Join)",
          "GroupJoin (Left Join)"
        ],
        "Conjuntos": [
          "Distinct y DistinctBy (Nuevo de C# 10)",
          "Union y UnionBy (Nuevo de C# 10)",
          "Except y ExceptBy (Nuevo de C# 10)",
          "Intersect y IntersectBy (Nuevo de C# 10)"
        ]
      },
      "requirements": [
        "El estudiante debe tener nociones básicas de C#: Saber acerca de variables y tipos de datos"
      ],
      "description": "Con LINQ podemos realizar consultas desde nuestro código de C#. Estas consultas las podemos hacer a bases de datos, objetos en memoria, documentos de XML, entre otros.\nHoy por hoy, LINQ es una herramienta esencial que todo programador de C# debe conocer. Ya sea porque quieras usar Entity Framework Core para trabajar con bases de datos, o porque quieras hacer consultas a colecciones (listas, arreglos, etc.) utilizando un código compacto y sencillo de entender.\nCon este curso vas a aprender desde lo básico hasta lo nuevo de LINQ. Ya que en C# 10 fueron agregadas nuevas características en LINQ, es importante conocerlas para aquellos que desean tener a su disposición todo el poder que C# ofrece.\nEn LINQ hay dos sintaxis: la de métodos y la de queries. En este curso veremos ambas. De esta manera, si te encuentras con código en cualquiera de las dos sintaxis, vas a poder entender dicho código sin problemas.\nAlgunos de los temas que vamos a ver en este curso:\n- Introducción a LINQ\n- Ejecución diferida\n- Realizar filtros con LINQ\n- Ordenar resultados\n- Realizar proyecciones\n- Aplanar secuencias de secuencias con SelectMany\n- Operaciones de agregado para realizar operaciones matemáticas con nuestras colecciones\n- Realizar preguntas acerca de las características de nuestras colecciones con cuantificadores\n- Implementar un mecanismo de paginación\n- Agrupar elementos con GroupBy\n- Relacionar distintas colecciones usando Join y GroupJoin\n- Realizar operaciones de conjuntos\n- Lo nuevo de C# 10 para LINQ",
      "target_audience": [
        "Principiantes de C# que quieren aprender a usar LINQ",
        "Programadores de C# que quieren aprender lo último de LINQ para las nuevas versiones de C#"
      ]
    },
    {
      "title": "Interview Questions 2025: Data Engineer, Analyst, Scientist",
      "url": "https://www.udemy.com/course/interview-questions-2025-data-engineer-analyst-scientist/",
      "bio": "Master interview questions in SQL, Python, system design, data modeling, and analytics for Data Engineers and Analysts.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you preparing for a job interview as a Data Engineer, Data Analyst, or Data Scientist? This course is designed to help you succeed and stand out during technical interviews.\nYou’ll get real-world interview questions, detailed answer explanations, and tips for solving both technical and behavioral challenges. The course covers a wide range of topics that are frequently asked in interviews at tech companies and startups:\nSQL queries and optimization\nPython coding and logic problems\nData pipelines and ETL, ELT systems\nSystem design and architecture\nData modeling and warehouse concepts\nAnalytics, statistics, and business logic\nReal examples and mock interview scenarios\nWhether you’re a beginner or have some experience, this course is made to help you practice, improve your thinking process, and feel confident before your interview.\nYou’ll also gain insight into what interviewers are really looking for, how to structure your answers, and how to avoid common mistakes. Each module is focused, practical, and designed to prepare you step by step.\nNo matter if you're applying for your first data role or want to switch to a better position — these interview questions will prepare you for what really matters.\nJoin now and get ready to impress your next employer!",
      "target_audience": [
        "Aspiring Data Engineers, Analysts, and Scientists preparing for job interviews",
        "Students, career changers, or junior professionals in the data field",
        "Anyone who wants to boost their confidence before a data-related interview",
        "Self-learners who want to test and expand their knowledge with real-world questions"
      ]
    },
    {
      "title": "駆け出しエンジニアのためのDocker入門",
      "url": "https://www.udemy.com/course/docker-startup/",
      "bio": "コンテナ型仮想環境を理解してdockerを開発環境に使うモダンな開発環境に適用できるようになろう！良い開発会社なら必ず使っているdockerを学ぶことで",
      "objectives": [
        "Dockerの基礎",
        "Dockerfileを使ったインフラ構成をコード化する方法",
        "docker-composeを使った複数コンテナの管理",
        "dockerを使ったWebアプリケーション開発環境の構築",
        "OSに依存しないコンテナ環境の構築方法"
      ],
      "course_content": {
        "はじめに": [
          "コース概要",
          "このコースを終えたときの姿",
          "なぜDockerが必要か？"
        ],
        "Dockerの概要": [
          "コンテナとは？",
          "Dockerとコンテナの関係",
          "仮想マシンとDockerの違い",
          "インフラのコード化",
          "DockerfileとDockerイメージの関係",
          "Dockerイメージの構造",
          "Dockerイメージのタグ機能",
          "Dockerでアプリケーション環境を作る方法"
        ],
        "Dockerのインストール": [
          "（Windows ）Docker Tool Boxのインストール",
          "（Mac）Docker for Macのインストール",
          "【どうしても上手くいかない方へ】ブラウザでDockerを動かす方法"
        ],
        "Docker基本コマンド": [
          "演習についてのお願い",
          "DockerHubアカウントの取得",
          "docker login",
          "docker run",
          "docker ps",
          "docker start/stop/restart",
          "docker exec",
          "docker rm",
          "docker images",
          "docker rmi",
          "docker build",
          "docker cp",
          "docker logs",
          "docker inspect",
          "docker pull",
          "docker commit",
          "docker push",
          "docker history"
        ],
        "Dockerコンテナのストレージ": [
          "ソースコードの使い方",
          "dockerにおけるボリューム永続化の問題点",
          "dockerで作るDBデータの永続化例",
          "docker runの volumeオプション",
          "Docker Tool Boxで立ち上げたコンテナへのアクセス方法",
          "【演習】nginxにオリジナルのHTMLを表示させよう",
          "参考）本番環境ではどうしてる？"
        ],
        "Dockerfile": [
          "Dockerfileとは？",
          "Dockerfileのベストプラクティス",
          "RUNとCMDでコマンドを実行する",
          "COPYコマンドで設定ファイルとソースコードを埋め込む",
          "ENVコマンドで環境変数を設定する",
          "DockerfileでカスタムMariaDBイメージを作成する"
        ],
        "docker-compose": [
          "docker runで複数コンテナを連携してみる",
          "docker-composeとは？",
          "yamlファイルとは？",
          "相対パスと絶対パス",
          "imageとbuild",
          "container_name",
          "volume",
          "ports",
          "コンテナ間通信の方法",
          "docker-composeでwordpressを立ち上げてみよう",
          "docker-composeコマンドの紹介"
        ],
        "docker-composeを使ったLaravel環境の構築": [
          "このセクションで作成する開発環境",
          "Laravel環境用のdocker-compose.ymlを作成する",
          "Dockerfileの作成",
          "各種設定ファイルの作成と設置",
          "docker-composeからコンテナを立ち上げる",
          "パーミッションエラーが出てしまう方へ"
        ],
        "【タイプ別】おすすめのdockerを導入方法": [
          "個人開発者向けのおすすめ導入手順",
          "すでにエンジニアの方向けのおすすめ導入手順",
          "Webデザイナー向けのおすすめ導入手順"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Macもしくは、Windows(64bit版)をお持ちの方"
      ],
      "description": "このコースはDockerの基礎からDockerを使ったインフラ構築までを座学とハンズオンで学ぶコースです。\n\n\n一般的に理解しにくいDockerコンテナの概要をしっかりと座学で学んでから、実際にコンテナを使った環境と動かしながら作ることで理解を深めていくコースです。\n特に 最近はインフラ環境にDockerを採用する企業が増えてきたこともあり、だんだんとDockerを理解することが求められています。\nそのためDocker歴5年の講師がDockerの基本的な部分から実践で得た経験などを共有していきます。\n\n\n以下のような方におすすめいたします。\n・これからプログラミングを始めて、周りの駆け出しエンジニアと差別化したい方\n・ポートフォリオにDockerも加えたい方\n・Webデザイナーからエンジニアに転身するためにインフラを学びたい方\n・まだ仮想環境で開発環境を作っている現役エンジニアの方\n\n\nこのコースを学んでいただくことによって、Dockerの基礎知識とDockerを開発環境に使っている現場に入っても、最低限ついていけるだけの知識を獲得することができます。\nまたIT企業等への転職を考えている方のポートフォリオにDockerを使う方法も解説しているためポートフォリオの1つとしてDockerを使うことができます。",
      "target_audience": [
        "プログラミングを学んだあとのエンジニア志望者",
        "すでに業務でプログラミングを行っているエンジニア",
        "インフラも学びたいWebデザイナー",
        "最近よく聞くDockerを理解したい方"
      ]
    },
    {
      "title": "Professional Scrum Product Owner ® I (PSPO I ®)",
      "url": "https://www.udemy.com/course/professional-scrum-product-owner-i-pspo-i/",
      "bio": "PSPO I ® Certification-2025-2026",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "ScaLearn: Your Path to Professional Scrum Product Owner I (PSPO I) Certification and Career Growth\nAre you ready to boost your employability, stand out in the agile job market, and master the art of product ownership?\nUnlock your career potential with ScaLearn’s Professional Scrum Product Owner I (PSPO I) Certification Preparation — a unique learning experience blending flexibility, recognized certification preparation, and practical, hands-on skills to help you succeed.\nStay Ahead: Accelerate Your Career with ScaLearn\nWhat You’ll Get\nComprehensive online training to prepare you for the PSPO I Certification Exam (Scrum org)\nCertification preparation aligned with globally recognized Scrum org standards\nSelf-paced learning designed to fit your schedule\n5 quizzes with 80 questions each, plus 400+ exam-style questions validated by certified Scrum professionals, based on real-world scenarios\nProject-based assignments and case studies to apply your learning in practical contexts\nExam tips and strategies specific to the PSPO I assessment format\nWhy This Course?\nAgility is no longer an option — it’s a necessity. The Product Owner role is pivotal in maximizing value from products, driving vision, and aligning stakeholders. This course transforms your understanding of product management in agile ecosystems, equipping you with the mindset, tools, and techniques to lead with impact.\nBy completing this course, you will:\nMaster Scrum Fundamentals:\nUnderstand the Scrum framework: roles, events, artifacts, and the principles of empiricism\nLearn how to collaborate effectively across teams to maximize product value\nExcel in Agile Product Management:\nCreate a clear product vision that inspires stakeholders and guides development\nManage and refine product backlogs effectively to ensure highest-value delivery\nPlan and forecast releases with agility and adaptability\nBridge Strategy and Delivery:\nAlign product goals with business objectives\nCommunicate a compelling product narrative to stakeholders\nLead decision-making with evidence and feedback loops\nPrepare with Confidence for the PSPO I Exam:\nTackle realistic practice questions matching the difficulty and style of the official exam\nUse mock exams to train under real conditions (80 questions, 60 minutes, 85% passing score)\nLearn exam strategies to boost your score on the first attempt\nWho Should Take This Course?\nCurrent or aspiring Product Owners\nScrum Masters or Developers seeking a deeper product-focused perspective\nProject managers transitioning to product management roles\nAnyone aiming to engage stakeholders and drive product success in agile organizations\nYour Competitive Advantage:\nWith one complete practice set to guide your learning, plus five timed mock exams of 80 questions each (with detailed explanations), you’ll gain the knowledge, confidence, and speed to ace the PSPO I exam and immediately apply your skills in your role.\nReady to become a certified Product Owner and lead your organization toward value-driven success? Join ScaLearn’s PSPO I preparation program and take the next big step in your agile career.",
      "target_audience": [
        "Aspiring and current Product Owners who want to master their role, maximize product value, and prepare for the PSPO I certification.",
        "Product managers, business analysts, project managers, or team leads looking to shift from traditional project management to a product-centric, Agile approach.",
        "Scrum Masters, Agile coaches, or team members interested in better understanding product ownership and the Scrum framework.",
        "Stakeholders and managers who collaborate with Scrum teams and want to improve communication, value alignment, and delivery effectiveness.",
        "Anyone preparing for the PSPO I exam who wants focused practice, practical question banks, and exam readiness."
      ]
    },
    {
      "title": "Progateの次に学ぶ！Python演習問題100問パック！〜データ型・制御構文編〜",
      "url": "https://www.udemy.com/course/python-exercise100/",
      "bio": "イチからコードを書けない初心者へ。そろそろ自分でプログラムを組めるようになりませんか？Python初心者から現役エンジニアまで使用したPython演習問題集",
      "objectives": [
        "Pythonを「知っている」から「できる」状態になります",
        "100問の演習課題で着実にプログラムを書く力が身に付きます",
        "Pythonでよく使う基本文法で困ることがなくなります",
        "今よりスマートなコードを書けるようになります"
      ],
      "course_content": {
        "§1. はじめに": [
          "本コースへようこそ！",
          "Udemyのシステムについて",
          "Google Colaboratoryの使い方",
          "補足 : Google Colaboratoryの使い方",
          "この講座の使い方",
          "演習用ノートブックの配布",
          "質問のテンプレート"
        ],
        "§2. 【10問】まずはここから！Pythonの基本文法": [
          "このセクションについて",
          "演習1 : 問題文",
          "演習1 : 答え合わせと解説",
          "演習2 : 問題文",
          "演習2 : 答え合わせと解説",
          "演習3 : 問題文",
          "演習3 : 答え合わせと解説",
          "演習4 : 問題文",
          "演習4 : 答え合わせと解説",
          "演習5 : 問題文",
          "演習5 : 答え合わせと解説",
          "演習6 : 問題文",
          "演習6 : 答え合わせと解説",
          "演習7 : 問題文",
          "演習7 : 答え合わせと解説",
          "演習8 : 問題文",
          "演習8 : 答え合わせと解説",
          "演習9 : 問題文",
          "演習9 : 答え合わせと解説",
          "演習10 : 問題文",
          "演習10 : 答え合わせと解説",
          "このセクションのまとめ"
        ],
        "§3. 【5問】数値型": [
          "このセクションについて",
          "演習11 : 問題文",
          "演習11 : 答え合わせと解説",
          "演習12 : 問題文",
          "演習12 : 答え合わせと解説",
          "演習13 : 問題文",
          "演習13 : 答え合わせと解説",
          "演習14 : 問題文",
          "演習14 : 答え合わせと解説",
          "演習15 : 問題文",
          "演習15 : 答え合わせと解説",
          "このセクションのまとめ"
        ],
        "§4. 【10問】文字型": [
          "このセクションについて",
          "演習16 : 問題文",
          "演習16 : 答え合わせと解説",
          "演習17 : 問題文",
          "演習17 : 答え合わせと解説",
          "演習18 : 問題文",
          "演習18 : 答え合わせと解説",
          "演習19 : 問題文",
          "演習19 : 答え合わせと解説",
          "演習20 : 問題文",
          "演習20 : 答え合わせと解説",
          "演習21 : 問題文",
          "演習21 : 答え合わせと解説",
          "演習22 : 問題文",
          "演習22 : 答え合わせと解説",
          "演習23 : 問題文",
          "演習23 : 答え合わせと解説",
          "演習24 : 問題文",
          "演習24 : 答え合わせと解説",
          "演習25 : 問題文",
          "演習25 : 答え合わせと解説",
          "このセクションのまとめ"
        ],
        "§5. 【25問】リスト型": [
          "このセクションについて",
          "演習26 : 問題文",
          "演習26 : 答え合わせと解説",
          "演習27 : 問題文",
          "演習27 : 答え合わせと解説",
          "演習28 : 問題文",
          "演習28 : 答え合わせと解説",
          "演習29 : 問題文",
          "演習29 : 答え合わせと解説",
          "演習30 : 問題文",
          "演習30 : 答え合わせと解説",
          "演習31 : 問題文",
          "演習31 : 答え合わせと解説",
          "演習32 : 問題文",
          "演習32 : 答え合わせと解説",
          "演習33 : 問題文",
          "演習33 : 答え合わせと解説",
          "演習34 : 問題文",
          "演習34 : 答え合わせと解説",
          "演習35 : 問題文",
          "演習35 : 答え合わせと解説",
          "演習36 : 問題文",
          "演習36 : 答え合わせと解説",
          "演習37 : 問題文",
          "演習37 : 答え合わせと解説",
          "演習38 : 問題文",
          "演習38 : 答え合わせと解説",
          "演習39 : 問題文",
          "演習39 : 答え合わせと解説",
          "演習40 : 問題文",
          "演習40 : 答え合わせと解説",
          "演習41 : 問題文",
          "演習41 : 答え合わせと解説",
          "演習42 : 問題文",
          "演習42 : 答え合わせと解説",
          "演習43 : 問題文",
          "演習43 : 答え合わせと解説",
          "演習44 : 問題文",
          "演習44 : 答え合わせと解説",
          "演習45 : 問題文",
          "演習45 : 答え合わせと解説",
          "演習46 : 問題文",
          "演習46 : 答え合わせと解説",
          "演習46 : 追加の解説",
          "演習47 : 問題文",
          "演習47 : 答え合わせと解説",
          "演習48 : 問題文",
          "演習48 : 答え合わせと解説",
          "演習49 : 問題文",
          "演習49 : 答え合わせと解説",
          "演習50 : 問題文",
          "演習50 : 答え合わせと解説",
          "このセクションのまとめ"
        ],
        "§6. 【8問】タプル型": [
          "このセクションについて",
          "演習51 : 問題文",
          "演習51 : 答え合わせと解説",
          "演習52 : 問題文",
          "演習52 : 答え合わせと解説",
          "演習53 : 問題文",
          "演習53 : 答え合わせと解説",
          "演習54 : 問題文",
          "演習54 : 答え合わせと解説",
          "演習55 : 問題文",
          "演習55 : 答え合わせと解説",
          "演習56 : 問題文",
          "演習56 : 答え合わせと解説",
          "演習57 : 問題文",
          "演習57 : 答え合わせと解説",
          "演習58 : 問題文",
          "演習58 : 答え合わせと解説",
          "このセクションのまとめ"
        ],
        "§7. 【5問】集合型": [
          "このセクションについて",
          "演習59 : 問題文",
          "演習59 : 答え合わせと解説",
          "演習60 : 問題文",
          "演習60 : 答え合わせと解説",
          "演習61 : 問題文",
          "演習61 : 答え合わせと解説",
          "演習62 : 問題文",
          "演習62 : 答え合わせと解説",
          "演習63 : 問題文",
          "演習63 : 答え合わせと解説",
          "このセクションのまとめ"
        ],
        "§8. 【17問】辞書型": [
          "このセクションについて",
          "演習64 : 問題文",
          "演習64 : 答え合わせと解説",
          "演習65 : 問題文",
          "演習65 : 答え合わせと解説",
          "演習66 : 問題文",
          "演習66 : 答え合わせと解説",
          "演習67 : 問題文",
          "演習67 : 答え合わせと解説",
          "演習68 : 問題文",
          "演習68 : 答え合わせと解説",
          "演習69 : 問題文",
          "演習69 : 答え合わせと解説",
          "演習70 : 問題文",
          "演習70 : 答え合わせと解説",
          "演習71 : 問題文",
          "演習71 : 答え合わせと解説",
          "演習72 : 問題文",
          "演習72 : 答え合わせと解説",
          "演習73 : 問題文",
          "演習73 : 答え合わせと解説",
          "演習74 : 問題文",
          "演習74 : 答え合わせと解説",
          "演習75 : 問題文",
          "演習75 : 答え合わせと解説",
          "演習76 : 問題文",
          "演習76 : 答え合わせと解説",
          "演習77 : 問題文",
          "演習77 : 答え合わせと解説",
          "演習78 : 問題文",
          "演習78 : 答え合わせと解説",
          "演習79 : 問題文",
          "演習79 : 答え合わせと解説",
          "演習80 : 問題文",
          "演習80 : 答え合わせと解説",
          "このセクションのまとめ"
        ],
        "§9. 【5問】bool型": [
          "このセクションについて",
          "演習81 : 問題文",
          "演習81 : 答え合わせと解説",
          "演習82 : 問題文",
          "演習82 : 答え合わせと解説",
          "補足 : 高階関数を使うケース",
          "演習83 : 問題文",
          "演習83 : 答え合わせと解説",
          "演習84 : 問題文",
          "演習84 : 答え合わせと解説",
          "演習85 : 問題文",
          "演習85 : 答え合わせと解説",
          "このセクションのまとめ"
        ],
        "§10. 【2問】None": [
          "このセクションについて",
          "演習86 : 問題文",
          "演習86 : 答え合わせと解説",
          "演習87 : 問題文",
          "演習87 : 答え合わせと解説",
          "このセクションのまとめ"
        ]
      },
      "requirements": [
        "要件① : ProgateレベルのPythonを学習済みであること",
        "要件② : Googleアカウントを所持していること",
        "要件③ : 分からない問題を粘り強く考えられること"
      ],
      "description": "いまあなたは、このような悩みを抱えていませんか？\n\n\n「Pythonの基礎文法を学習してみたんだけど、次に何して良いのか分からない...」\n「Pythonを勉強してるんだけど、なかなか習得できている気がしない...」\n「せっかく学んだPythonを使ってみる機会が欲しい...」\n\n\n実はこれ、Python初心者のよくある悩みなんです。\nこれまで2万人以上にPythonを教えてきた僕だから分かります。\n\n\n確かにPythonの基礎を学べる本とか動画はたくさんあります。\nでも、その先へ進むための学習リソースは、あまりないですよね。\n\n\nだから初心者は、次にどのようなアクションを踏めば良いのか迷ってしまいます。\n\n\n=====Pythonの基礎を学んだらどうすれば良いのか？=====\n\n\n結論、あなたは「学んだことをアウトプットする」必要があります。\n\n\n参考書や動画を見ながらプログラムを書く...。\n\n\n確かにそれも勉強ですね。\nでも、それで終了したら意味がありません。\n\n\n「活用なき学問は、無学に等しい。」\n\n\nこれは福沢諭吉の言葉です。\n使わないならやってないのと同じ。\n\n\nPythonを習得できている気がしないのは、\nプログラミングを活用しないからです。\n\n\nちゃんと身につけようと思ったら、\nコードを写経して満足するだけでなく、\n教材で学んだ知識を「活用する」必要があります。\n\n\n=====このコースを修了すると、Pythonを”使える”ようになります=====\n\n\n他のコースは、優れた動画講義を提供します。\nそれに対して、このコースでは以下を提供します。\n\n\nPythonの基礎レベルを習得できる100問の演習課題\n各設問ごとでプログラムの書き方を学べる解説ビデオ\n分野別の問題だけでなく総合的な知識を問う最終課題\n\n\n本コースではPythonの基礎文法は解説しません。\n\n\nその代わりに100問の演習課題を使って、\n今まで学んできたことをアウトプットしてもらいます。\n\n\nそうすることでPythonの基礎スキルを\n着実に習得できる講座になっています。\n\n\nただの動画講義で学んだ結果、\n得られるのは「知っている」状態です。\n\n\nこのオンラインコースで得られるのは、\n「知っている」ではなく「できる」状態です。\n\n\n学んだ気になって満足するのではなく、\n本当にスキルアップしたい。\n\n\nそう考えているなら、\nこのコースがその手助けをします。\n\n\n学習意欲の高いあなたと、\n一緒に勉強できることを楽しみにしています。\n\n\n※注意 : このコースでは関数やクラスは含みません。それ以前の知識をしっかり習得するためのコースになっています。",
      "target_audience": [
        "Pythonの基礎を学んだけど、次に何をしたら良いのか分からない人",
        "Pythonを勉強してるけど、なかなか習得できている気がしない人",
        "せっかく学んだPythonを使ってみる機会が欲しい人"
      ]
    },
    {
      "title": "【한글자막】 Java 멀티스레딩, 병행성 및 성능 최적화 - 전문가 되기",
      "url": "https://www.udemy.com/course/java-multi-threading/",
      "bio": "고성능을 강조한 Java 멀티스레딩, 병행성 및 병렬 실행 프로그래밍 전문가 되기",
      "objectives": [
        "Java에서 잘 설계된 올바른 멀티스레드 애플리케이션을 자신 있게 구축하는 방법",
        "현대 소프트웨어 아키텍처 및 스레드를 이용한 난이도가 낮은 수준의 프로그래밍에 대한 전문가 수준의 실무 지식",
        "클라이언트에게 사랑 받는, 성능과 반응성이 좋은 애플리케이션을 만드는 방법",
        "병행성 및 병렬 실행 프로그래밍을 이용해 컴퓨터와 Java 언어를 활용하는 방법"
      ],
      "course_content": {
        "개요": [
          "개요와 운영 체제 기초 - 1부",
          "운영 체제 기초 - 2부"
        ],
        "스레딩 기초 - 스레드 생성": [
          "코딩 강의 팁 및 디버깅 설명",
          "스레드 생성 - 1부. 스레드의 기능과 디버깅",
          "스레드 생성 - 2부. 스레드 상속",
          "퀴즈 1: 스레드와 운영 체제 기초 퀴즈",
          "퀴즈 2: 스레드 생성",
          "코딩 연습 1: 스레드 생성 - MultiExecutor",
          "스레드 생성 - MultiExecutor 솔루션"
        ],
        "스레딩 기초 - 스레드 조정": [
          "스레드 종료 및 Daemon 스레드",
          "퀴즈 3: 스레드 종료 및 Daemon 스레드",
          "스레드 연결",
          "코딩 연습 2: 멀티스레딩 계산",
          "멀티스레딩 계산 - 솔루션"
        ],
        "성능 최적화": [
          "성능 및 지연 시간 최적화 개요 - 1부",
          "지연 시간 최적화 2부 - 이미지 프로세싱",
          "부가 리소스 - 이미지 처리, 색 공간, 추출 및 조작",
          "처리량 최적화 1부",
          "처리량 최적화 2부 - HTTP 서버 + Jmeter",
          "퀴즈 4: 성능 최적화"
        ],
        "스레드 간 데이터 공유": [
          "스택 및 힙 메모리 영역",
          "퀴즈 5: 스택 및 힙 메모리 영역",
          "리소스 공유와 임계 영역 개요"
        ],
        "병행성 문제와 솔루션": [
          "임계 영역과 동기화",
          "퀴즈 6: 임계 영역과 동기화",
          "원자적 연산과 Volatile 및 메트릭의 실용 예시",
          "퀴즈 7: 원자적 연산과 Volatile 및 메트릭의 실용 예시",
          "코딩 연습 3: 최소 - 최대 메트릭",
          "최소 - 최대 메트릭 - 솔루션",
          "경쟁 상태 및 데이터 경쟁",
          "퀴즈 8: 데이터 경쟁",
          "락킹 기법과 데드락",
          "퀴즈 9: 락킹 기법과 데드락"
        ],
        "락킹 심화": [
          "ReentrantLock 1부 - tryLock과 인터럽트 가능 락",
          "ReentrantLock 2부 - 사용자 인터페이스 애플리케이션 예시",
          "퀴즈 10: ReentrantLock",
          "Reentrant의 읽기/쓰기 락 및 데이터베이스 구현",
          "퀴즈 11: 읽기/쓰기 락",
          "코딩 연습 4: 상품 리뷰 서비스",
          "상품 리뷰 서비스 - 솔루션"
        ],
        "스레드 간 통신": [
          "세마포어 - 확장 가능한 생산자-소비자 구현",
          "퀴즈 12: 세마포어 - Barrier",
          "조건 변수 - 다목적, 스레드 간 통신",
          "조건 변수로서의 객체 - wait(), notify(), notifyAll()",
          "퀴즈 13: 조건 변수",
          "코딩 연습 5: 간단한 CountDownLatch",
          "간단한 CountDownLatch - 솔루션"
        ],
        "Lock-Free 알고리즘, 데이터 구조 및 기술": [
          "논블로킹 및 Lock-Free 작업 개요",
          "원자적 정수와 Lock-Free 전자 상거래",
          "원자적 레퍼런스, CompareAndSet, Lock-Free 고성능 데이터 구조",
          "퀴즈 14 :Lock-Free 알고리즘, 데이터 구조 및 기술"
        ],
        "고성능 IO를 위한 스레딩 모델": [
          "블로킹(Blocking) IO 소개",
          "작업당 스레드/요청당 스레드 모델",
          "코어당 스레드 모델을 사용한 비동기 논-블로킹 IO",
          "고성능 IO를 위한 스레딩 모델 – 퀴즈"
        ]
      },
      "requirements": [
        "Windows, Mac, Linux 컴퓨터 중 하나",
        "Java 개발 키트(JDK) 버전 8 이상 설치",
        "Java 프로그래밍 관련 기본 지식"
      ],
      "description": "멀티스레드의 필수(기초)이론부터 심화주제까지!\nJAVA의 병행성 및 성능 최적화!\n반응형 애플리케이션, 멀티스레드 관련 구축 업무 등의 전문가에게 적합한 강의!\n\n\nJava 멀티스레딩, 병행성 및 성능 최적화 강의를 선택해야 하는 이유\n만약 여러분께 전용 제트기가 있다면, 그 제트기를 몰고 마트에 가실 건가요, 아니면 전세계 투어를 떠나실 건가요?\n\n\n오늘날의 모든 컴퓨터와 휴대폰은 완벽하게 동시 병렬 실행을 가능하게 해 주는 엄청난 컴퓨팅 능력과 여러 개의 코어를 갖춘 채 출시됩니다. 이 과정에서는 자신감 넘치고 성공적인 멀티스레드 애플리케이션 개발자가 되기 위해 필요한 모든 기본적인 도구를 배울 수 있는 여정을 떠나게 됩니다. 멀티스레딩과 병행성을 이용해서 컴퓨터의 기능을 제대로 활용하는 법을 배우고 컴퓨터가 맘껏 날개를 펼치게 해 주세요!\n\n\n[ 교육 철학 ]\n이 과정은 여러분이 '낚시하는 법'을 직접 배울 수 있도록 설계되어 있습니다. 클래스, 라이브러리 또는 Java API를 암기하는 대신에, 멀티스레드 프로그래밍의 필수적인 내용을 아주 기본적인 수준부터 시작해서 멀티스레딩 관련 심화 주제까지 배워 볼 예정입니다.\n모든 강의에는 적합한 이론이 소개되고, 또 다음과 같은 관련 필드에 대한 실용적인 예시도 함께 제공됩니다.\n\n\n[ 강의 과정 ]\n이 과정은 여러분의 시간을 절약하게 해 주는 실용적인 과정입니다. 너무 많은 내용으로 여러 시간을 채우는 대신에, 제 실무 경험을 바탕으로 가장 중요한 주제만을 손수 추렸습니다.\n사용자 인터페이스 애플리케이션\n이미지 처리\n웹 애플리케이션\n컴퓨팅 프로그램\n기타\n\n\n[ 배우게 될 내용 ]\n운영 체제의 기본 내용 및 멀티스레딩과 병행성이 필요한 이유\n멀티스레딩의 기본 - Java에서 스레드를 생성하는 방법 및 스레드 간에 소통하는 방법\n멀티스레드 병렬 실행 애플리케이션의 성능 관련 고려 사항 및 설계 패턴. 지연 시간 또는 처리량을 최적화하는 방법\nJava에서 스레드 간에 데이터를 공유하는 방법. 발생할 수 있는 모든 함정과 어려움 및 솔루션과 모범 사례\n반응성과 성능을 향상시킬 수 있는 락이 걸리지 않은 고급 알고리즘 및 데이터 구조\n\n\n[ 이 과정을 수강하고 나면 할 수 있게 되는 일 ]\nJava에서 어떤 목적과 규모에도 부합하고 성능 기준에도 부합하는 제대로 된 반응형 애플리케이션을 쓰는 작업을 합니다.\n멀티스레드 애플리케이션, 알고리즘, 라이브러리를 구축하는 데 있어서 모범 사례를 적용합니다.\n병행성 및 병렬 실행 프로그래밍에 대한 지식을 쌓아서 취업 면접, 엔지니어로서 수행하는 일일 업무, 개인 프로젝트에 활용합니다.\n지금 바로 Java 멀티스레딩, 병행성 및 성능 최적화의 전문가가 되어 보세요!\n\n\n\n\n< 이 과정의 대상 수강생 >\nJava 프로그래밍 관련 경험과 기본 지식이 이미 있는 수강생\n단시간 안에 멀티스레드 병렬 실행 프로그래밍 및 병행성 기술을 익히려는 수강생\n성능 최적화에 관심이 많고 위에 언급된 주제에 대해 견고한 기초 실력을 쌓고 싶은 수강생\n갓 졸업한 취업 준비생이든 또는 꿈의 직장을 찾고 있든 간에, 커리어를 한 단계 발전시키려는 수강생\n프로그래머로서의 역량을 키우고 능력을 향상시키려는 전문 엔지니어\n본인의 프로젝트를 개발하기 위해 효율적인 멀티스레드 코드를 쓰는 법을 배우려는 프리랜서\n만약 여기 해당하신다면, 이 과정을 선택하세요.\n\n\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n\n\n- Michael\n\n\n[ 강사 약력 ]\n멀티스레딩과 병행성에 대한 제 열정은 대학 시절에 IBM이 후원하던 확장성이 높은 분산 시스템인 B+ Tree 리서치 프로젝트에 참여하게 되면서 시작되었습니다.\n추후에는 Intel에서 컴퓨터 아키텍처 엔니지어로 일했고, 또 다른 회사들에서 소프트웨어 엔지니어로 일하면서 효율적이고 최적화된 멀티스레드 코드를 이용해 교육, 헬스케어, 증강 현실, 애드 테크 분야에서 실시간 영상, 오디오, 데이터를 제공하는 많은 애플리케이션과 기능을 개발했습니다.\n현재 저는 수석 소프트웨어 엔지니어이자 소프트웨어 아키텍트입니다. 다양한 수준을 지닌 엔지니어 분들을 훈련하고 멘토링하는 일은 제 업무인 동시에 제가 큰 열정을 지닌 분야입니다.\n\n\n자주 묻는 질문\n- \"이 과정을 수강하면 면접 질문에 대비할 수 있을까요?\"\n네! 이 과정은 전반적으로 멀티스레딩 및 병행성 분야에서 실력을 키우고, 특히 Java 멀티스레딩을 마스터할 수 있도록 하는 데 초점을 맞춘 과정입니다. Java의 스레드에 대한 필수적인 지식뿐만 아니라, Java에서의 락킹과 동기화, 힙과 스택 메모리 조직화 등 면접 질문으로 흔히 나오는 주제도 배울 수 있습니다. 꼭 면접 질문에 특화된 강의에 해당되지는 않고 사실상 면접에서 어떤 질문을 받게 될지는 예상할 수 없지만, 여기서 얻은 지식을 통해 확실히 다른 지원자들과 차별화된 강점을 키우실 수 있을 겁니다.\n\n\n- \"이 과정은 Java의 모든 스레딩 클래스와 API를 다 다루나요?\"\n아닙니다. 시중에 말 그대로 모든 클래스와 API 항목을 다루는 많은 책과 수강료가 높은 학습 과정이 있는데, 다 마치려면 수개월이 걸립니다. 또한, Oracle도 모든 Java 멀티스레딩 API와 클래스를 다루는 완벽한 수준의 Java 관련 참고 문서를 지원하고 있습니다. 이 과정은 좀 다르답니다! 필드에서 쌓은 다년간의 경험을 바탕으로, 단시간 안에 가장 필수적인 내용을 모두 배울 수 있는 짧은 커리큘럼을 제가 직접 공들여 설계했습니다. 시간 때우기용 강의는 없습니다! 딱 5분이면 스스로 읽어서 익힐 수 있거나 아예 배울 필요조차 없는 주제에 더 이상 시간 낭비를 할 일도 없습니다! 이 과정을 통해 기초를 튼튼히 쌓아서 멀티스레딩과 병행성 분야의 전문가가 될 수 있습니다. 그리고 추후에도 관련 지식을 손쉽게 늘릴 수 있게 될 것입니다.\n\n\n- \"강의를 듣다가 잘 이해가 되지 않거나 질문이 생기면 어떻게 해야 하나요?\"\n걱정 마세요! 여러분께 도움을 드리기 위해 제가 있는 거니까요! 멀티스레딩은 결코 쉬운 주제가 아니라서 모든 분들이 곧바로 완벽하게 이해하기는 어렵습니다. 모든 강의에는 수강생 분들이 강의 관련 질문이나 전반적인 주제 관련 추가 질문을 할 수 있는 Q&A 섹션이 있습니다. 강사인 제가 시일 내에 모든 질문에 답변을 드려서 여러분이 성공적으로 수강을 마칠 수 있도록 필요한 모든 도구를 지원해 드리겠습니다.\n\n\n- \"이 과정은 프로세스 간 통신과 분산 시스템을 다루나요?\"\n아니요. 해당 주제들도 병행성과 관련된 아주 흥미롭고 중요한 주제이긴 하지만, 과정의 주요 주제인 Java 멀티스레딩과 직접적으로 관련이 있지는 않습니다. 강의에서 해당 주제를 언급하기는 하지만, 범위를 벗어나는 내용이라 관련 강의 과정을 따로 개설해서 다뤄야 하는 주제에 해당되죠. 그 개념과 사례, 어려운 부분이 하나의 멀티스레드 Java 애플리케이션, 알고리즘, 라이브러리를 성능을 최적화할 때 나오는 것들과는 상당히 다릅니다. 따라서 이 과정에서는 다루지 않습니다.\n\n\n- \"병행성 프로그래밍에 대해 별도의 과정이 필요한 이유는 무엇인가요?\"\n병행성 프로그래밍은 순차적인 전환성 프로그래밍과는 근본적으로 다릅니다. 따라서 모든 엔지니어링 관련 결정을 내릴 때, 항상 일종의 트레이드 오프가 있기 마련이죠. 동시성 및 병행성 프로그래밍은 애플리케이션의 성능과 반응성 측면에서 엄청나게 긍적적인 영향을 줄 수 있지만, 제대로 구현하기가 훨씬 더 어렵습니다. 이 과정에서는 모든 Java 멀티스레드 애플리케이션을 최대로 활용할 수 있도록 모든 위험 요소, 기술 및 모범 사례를 배우게 됩니다.\n\n\n\n\n-----------\n강사 소개\nMichael Pogrebinsky | Java 전문가 & 소프트웨어 아키텍트 스페셜리스트\n프로페셔널 소프트웨어 엔지니어 | 소프트웨어 아키텍트 | 강사\n\n\nMichael Pogrebinsky는 풍부한 경험을 가진 소프트웨어 엔지니어이자 소프트웨어 아키텍트입니다.\n\n\n업계에 종사하는 동안 수많은 주력 제품을 개발했으며 Google, Intel 등의 기업에서 최첨단 기술과 솔루션을 다뤘으며,\n실시간 컴퓨팅과 대규모 소프트웨어 시스템이 주력 분야이며 다양한 선도 기업에서 해당 분야의 기술 책임자를 맡았습니다.\n또한 특정 프로그래밍 언어나 기술을 넘어서, 핵심 내용을 이해하고 올바른 사고 방식을 기르는 것이 중요하다고 강조합니다.\n\n\n기술 분야에 대한 열정으로 다른 엔지니어와 학생들의 훌륭한 멘토가 되어주고 있으며, 그가 가진 지식과 경험을 Udemy에 공유하게 된 것을 기쁘게 생각하고 있습니다.",
      "target_audience": [
        "멀티스레드 프로그래밍 및 병행성을 배우려는 수강생",
        "가장 높은 수준의 품질과 성능을 갖춘 소프트웨어를 생성하려는 수강생",
        "프로페셔널 방면에서의 커리어를 한 단계 발전시켜서 진정한 전문가로 거듭나고 싶은 엔지니어",
        "다른 사람들과 차별화되는 강점을 키워서 꿈의 직업을 얻으려는 대학생 및 최근에 졸업한 취업 준비생"
      ]
    },
    {
      "title": "Mock Interviews for Solutions/Software Architect Roles",
      "url": "https://www.udemy.com/course/mock-interviews-for-solutions-software-architect-roles/",
      "bio": "Ace Your Interview",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Overview of the course",
          "Connect me for updates"
        ],
        "Microservice Architecture": [
          "What are the key principles of microservice architecture?",
          "How do you manage communication between microservices?",
          "What strategies do you use to handle service dependencies in microservices?",
          "Explain the use of API gateways in microservices.",
          "How do you implement authentication and authorization in a MA",
          "What challenges you have faced while migrating a monolith to microservices?",
          "How do you handle distributed transactions in a microservices architecture?",
          "Explain the eventual consistency. How do you implement it in microservices?",
          "What tools or patterns do you use for inter-service communication?"
        ],
        "Behavioral Questions": [
          "Describe a time when you led a cross-func team to deliver a high-stakes project",
          "Tell me about a project where you had to work with stakeholders who had ...."
        ],
        "Leadership Principles": [
          "Tell me about a time when you went above and beyond for a customer.",
          "Describe a time you took ownership of a project outside of your responsibilities",
          "Give an example of a time you found a simple solution to a complex problem",
          "Describe a time when you made a decision with limited data",
          "Tell me about a time you helped a teammate grow in their role"
        ]
      },
      "requirements": [
        "Should have experiance working as Solftware Developer or Architect"
      ],
      "description": "Are you preparing for a solution or software architect interview and need help to figure out what to expect? I have been there and know how challenging it can be to face tough technical, system design, and behavioral questions under pressure. That’s why I created this course: to help you confidently walk into your next interview.\n\n\nThis course simulates real-world interview scenarios for solutions and software architect roles. You will watch mock interview sessions in which I answer some of the most commonly asked questions, complete with clear explanations and insights into what interviewers are looking for. This course will help you succeed, whether you're transitioning into an architect role or sharpening your skills for your next big opportunity.\n\n\nWhat You’ll Learn:\n- How to approach challenging system design questions with confidence.\n- Structured answers to common technical and behavioral questions.\n- Key strategies for tackling scenario-based and problem-solving questions.\n- Insights into the mindset of interviewers and what they expect.\n\n\nWhy Take This Course?\nThis differs from your typical theory-based course. I’ve recorded myself answering actual interview questions, just like you would in a live interview. You will see exactly how to frame your answers and structure your responses. Following each question, a detailed breakdown of the answer follows, so you understand not just what to say but why it works.\n\n\nWho This Course is For:\n- Aspiring Solutions and Software Architects preparing for interviews.\n- Senior developers transitioning into architect roles.\n- Professionals looking to polish their interview skills for high-stakes opportunities.\n\n\nCourse Highlights:\n1. Mock Interviews: Realistic interview scenarios, recorded as if I’m in the hot seat.\n2. Detailed Answer Breakdowns: Clear explanations of how and why I answered each question the way I did.\n3. Behavioral Questions: Strategies to handle “tell me about a time” and other tricky behavioral questions.\n\n\nWhat You’ll Walk Away With:\nBy the end of this course, you will have the confidence and skills to:\n- Tackle both technical and non-technical questions effectively.\n- Communicate your solutions clearly and persuasively.\n- Stand out as a candidate who’s prepared, thoughtful, and ready to lead.\n\n\nLet’s ace that interview together! Whether it is your first time applying for an architect role or you are looking to level up your career, this course will guide you every step of the way.\n\n\nJoin me on this journey to interview success—let’s get started!",
      "target_audience": [
        "Ideal for architects or aspiring architects and seasoned professionals aiming to excel in interviews."
      ]
    },
    {
      "title": "600+ Cloud Computing Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/cloud-computing-interview-questions-tests/",
      "bio": "Cloud Computing Interview Questions and Answers Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Cloud Computing Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the \"Ultimate Cloud Computing Practice Tests: Master Your Interview Skills\" course on Udemy, where your journey to becoming a Cloud Computing expert begins. This course is meticulously designed for individuals aspiring to excel in cloud computing roles and ace interviews with confidence. With over [insert number] practice test questions, this course covers every corner of cloud computing, ensuring you're fully prepared for any challenge.\nIn today's fast-paced tech world, Cloud Computing has become a cornerstone of the IT industry. Companies are increasingly migrating to cloud-based solutions, escalating the demand for proficient cloud computing professionals. Whether you're a beginner aiming to break into the industry or a seasoned professional seeking to validate your skills, this course is your ultimate guide.\nSection 1: Fundamentals of Cloud Computing\nDefinition and Characteristics\nService Models (IaaS, PaaS, SaaS)\nDeployment Models (Public, Private, Hybrid, Community)\nCloud Computing Architecture\nBenefits and Challenges\nCloud Providers and Market Overview\nSection 2: Cloud Infrastructure and Networking\nVirtualization Technologies\nCloud Storage Solutions\nCloud Computing Security\nNetworking in the Cloud\nData Center Technologies and Operations\nDisaster Recovery and Business Continuity\nSection 3: Cloud Services and Platforms\nAmazon Web Services (AWS)\nMicrosoft Azure\nGoogle Cloud Platform (GCP)\nCloud Foundry and Kubernetes\nServerless Computing and FaaS\nCloud Service Management and Billing\nSection 4: Cloud Security and Compliance\nIdentity and Access Management (IAM)\nData Privacy and Regulatory Compliance\nEncryption and Data Protection\nSecurity Best Practices\nCloud Security Certifications and Standards\nRisk Management in Cloud Environments\nSection 5: Cloud Application Development\nDesigning for Scalability and High Availability\nMicroservices and Containerization\nDevOps in Cloud Computing\nContinuous Integration and Deployment (CI/CD)\nApplication Performance Monitoring (APM)\nCloud-Native Applications\nSection 6: Emerging Trends and Future of Cloud Computing\nHybrid and Multi-Cloud Strategies\nEdge Computing and Cloud Integration\nAI and Machine Learning in the Cloud\nBlockchain and Cloud Computing\nInternet of Things (IoT) in the Cloud\nFuture Trends and Innovations\nComprehensive and Up-to-Date Content:\nOur practice tests are crafted by industry experts, ensuring you receive the most current and comprehensive content. The questions are modeled after real-world interview scenarios, providing you with a practical understanding of each topic.\nPreparation for Various Roles:\nWhether you're aiming for roles such as Cloud Architect, Cloud Engineer, or Cloud Administrator, this course has you covered. The diverse range of topics prepares you for various interview scenarios, making you a versatile candidate for any cloud computing role.\nBoost Your Confidence:\nFrequent practice with our tests will boost your confidence and reduce interview anxiety. The more you practice, the more familiar you become with the interview format and question types, making you well-prepared and self-assured.\nEnroll Now:\nEmbark on your journey to becoming a Cloud Computing expert today. Enroll in our \"Ultimate Cloud Computing Practice Tests: Master Your Interview Skills\" course and take the first step towards acing your interviews and advancing your career.",
      "target_audience": [
        "Aspiring Cloud Professionals: Individuals who are looking to start a career in cloud computing will find this course immensely valuable. It provides the foundational knowledge required to understand the basics of cloud computing and prepares them for entry-level roles in the industry.",
        "IT Professionals Seeking Career Transition: For those currently working in other areas of IT and wishing to transition into cloud computing roles, this course offers a comprehensive overview of cloud technologies and practices, making it an excellent resource for career advancement.",
        "Current Cloud Practitioners: Professionals already working in cloud computing roles such as Cloud Engineers, Cloud Architects, or DevOps Engineers who want to validate and enhance their existing knowledge will benefit from the in-depth practice tests and the exploration of advanced topics.",
        "Students and Graduates: Students pursuing degrees in computer science, information technology, or related fields, as well as recent graduates looking to bolster their resume and interview readiness, will find this course helpful in bridging the gap between academic study and industry requirements.",
        "Individuals Preparing for Certifications: Those preparing for cloud computing certifications such as AWS Certified Solutions Architect, Microsoft Certified Azure Administrator, or Google Cloud Certified Associate Cloud Engineer will find the practice tests aligned with the types of questions encountered in certification exams.",
        "Tech Enthusiasts and Hobbyists: Individuals with a passion for technology and a curiosity about cloud computing can use this course to explore the field further. The course is structured in a way that makes learning about cloud computing accessible and engaging.",
        "Freelancers and Consultants: Freelancers and independent consultants in the IT field looking to expand their service offerings into cloud computing can leverage this course to build or enhance their skill set."
      ]
    },
    {
      "title": "Der moderne Java-Kurs, vom Anfänger zum Profi",
      "url": "https://www.udemy.com/course/java-training-ullenboom/",
      "bio": "Alles Wichtige über Java, von Java 1.0 bis Java 21 (LTS)",
      "objectives": [
        "Alles über Java - der Kurs vom Java-Champion für Einsteiger und Fortgeschrittene",
        "Von der ersten Codezeile bis hin zur anspruchsvollen Anwendung",
        "Imperatives Programmieren",
        "Objektorientiertes Programmieren",
        "Funktionales Programmieren",
        "Datenstrukturen und Algorithmen",
        "Dateiverarbeitung",
        "Datenbankabfragen",
        "Java Stream-API",
        "Nebenläufige Programme schreiben"
      ],
      "course_content": {
        "Organisatorisches": [
          "Download der Kursmaterialien",
          "Zusatzmaterialien und Java-Aufgaben"
        ],
        "Wie? Wo? Was? Warum? Java!": [
          "Geschichte, Versionen und Plattform",
          "Java Quellcode, Zusammenhang Java-Compiler, Bytecode und JVM",
          "Software-Ökosystem um Java",
          "Jobs und Gehalt"
        ],
        "Installation und Vorbereitung der Laufzeitumgebung und Entwicklungsumgebung (IDE": [
          "Installation vom Eclipse Adoptium OpenJDK Build",
          "Compiler und JVM; Quellcode mit javac übersetzen, Bytecode mit java ausführen",
          "Installation IntelliJ und ein Projekt aufbauen"
        ],
        "Einführung und imperative Sprachkonstrukte": [
          "Hautprogramm, Schlüsselwörter, Bezeichner, Weißraum",
          "Kommentare",
          "Literale",
          "Java Datentypen",
          "Variablendeklaration",
          "Refactoring von Code am Beispiel einer Umbenennung",
          "Überladene Methoden",
          "Java-Referenzdokumentationen; API-Dokumentation/Javadoc",
          "System.out und System.err",
          "Zuweisungsoperator, Ausdrücke und Operatoren",
          "Arithmetische Operatoren; Plus und Minus, Mal und Geteilt, Rest",
          "Relationale und logische Operatoren; Vergleiche, Nicht-/Und-/Oder-/Xor-Verknüpfu",
          "Typumwandlungen (engl. type cast); implizite und explizite Typumwandlung, Syntax",
          "Zuweisungen mit dem Verbundoperator",
          "Präfix-/Postfix-Inkrement und -Dekrement",
          "Plus-Operator zur Konkatenation von Strings verwenden",
          "Zusatzvideo: Bit-Operatoren",
          "Besonderheiten in den Berechnungen; Underflow/Overflow, Unendlich, NaN",
          "Konsoleneingaben",
          "if-Anweisung",
          "if-else-Anweisung",
          "Bedingungsoperator",
          "switch-case-Anweisung mit Pfeilschreibweise (case ->)",
          "switch-case-Anweisung mit Doppelpunktschreibweise (case:); Durchfallen, break",
          "switch-Ausdrücke",
          "do-while-Schleife",
          "while-Schleife",
          "Endlosschleifen, break und continue",
          "for-Schleife",
          "Komplexere (geschachtelte) for-Schleifen",
          "Eigene Methode deklarieren",
          "Parameter und Argumente; Methoden über Übergaben deklarieren und aufrufen",
          "Methoden mit Rückgaben; return-Anweisung mit Rückgabeausdruck",
          "Methoden überladen; Default-Werte",
          "Rekursive Methoden deklarieren und aufrufen, Stack, Abbruchbedingung",
          "Zusatzvideo: Methoden-Refactorings",
          "Schlüsselwort var und unbenannte Variablen"
        ],
        "Einstieg in die objektorientierte Programmierung und Typen": [
          "Objekte mit new erzeugen",
          "Objekteigenschaften mit \".\" ansprechen",
          "null und NullPointerException",
          "Referenzen kopieren und an Methoden übergeben, Pass-by-Value",
          "Methoden und Objektreferenzen",
          "Referenzen und Objekte vergleichen, Identität und Gleichwertigkeit, equals(...)",
          "OutOfMemoryError und Garbage Collection",
          "import-Deklarationen",
          "Eigene Pakete schreiben, package-Deklaration einsetzen",
          "Sichtbarkeiten: private, public, paketsichtbar",
          "Statische import-Deklarationen"
        ],
        "Arrays": [
          "Neue Arrays anlegen",
          "length Attribut; ArrayIndexOutOfBoundsException; Post/Pre-Inkrement/Dekrement",
          "Arrays an Methoden übergeben und von Methoden bekommen; Gefahren einer NPE",
          "Kompakte Array-Initialisierung",
          "Erweitere for-Schleife",
          "Variable Argumentlisten (Varargs)",
          "Designtipps für variable Argumentlisten",
          "Mehrdimensionale Arrays; Arrays referenzieren Arrays, Arten der Initialisierung",
          "Nicht-rechteckige mehrdimensionale Arrays; Optimierung durch flache Arrays",
          "Bibliotheksunterstützung für Arrays",
          "Utility-Klasse java.util.Arrays",
          "Zusatzvideo: Studium in den JDK-Quellen und Apache ArrayUtils",
          "Kommandozeilenargumente args[] verarbeiten, System.exit(int)"
        ],
        "Zeichen und Zeichenfolgen": [
          "Datentypen char, Character, String und StringBuilder",
          "Datentypen char und Character im Detail; Möglichkeiten und Einschränkungen",
          "Der immutable Datentyp String, Teil 1",
          "Der immutable Datentyp String, Teil 2",
          "Der immutable Datentyp String, Teil 3",
          "Der immutable Datentyp String, Teil 4",
          "Der immutable Datentyp String, Teil 5",
          "Der immutable Datentyp String, Teil 6",
          "Text-Blöcke",
          "Javadoc der Klasse StringBuilder",
          "Methoden der Klasse StringBuilder nutzen; Kaskadieren der Methoden"
        ],
        "Eigene Klassen schreiben": [
          "Eigene Klassen schreiben; Attribute deklarieren, Standard-Initialisierung",
          "Methoden deklarieren; Seiteneffekte",
          "this-Referenz; Sich selbst übergeben, verdeckte Variablen",
          "Das verraten wir nicht!; Private Zustände, Setter/Getter, JavaBeans",
          "Statische Variablen und Methoden; Objekteigenschaften vs. Klasseneigenschaften",
          "Unveränderbare globale Konstanten deklarieren",
          "Konstanten und Aufzählungen mit enum",
          "Konstruktoren",
          "Fabrikmethoden",
          "Zusatzvideo: Objekt- und Klassen-Initialisierer",
          "Assoziationen, Teil 1: 1:1",
          "Assoziationen, Teil 2: 1:n",
          "Praktische Übung zur 1:n-Assoziation; Spieler kauft und verkauft Süßigkeiten",
          "Vererbung; Assoziation vs. Vererbung, Generalisierung/Spezialisierung",
          "Extends to Infinity; Schlüsselwort extends, was vererbt wird, Sichtbarkeit",
          "Konstruktor-Aufrufe bei Vererbung, super",
          "Typbeziehungen; Referenztyp und Objekttyp, implizite und explizite Typumwandlung",
          "Liskovsches Substitutionsprinzip",
          "Typprüfungen; instanceof-Operator, getClass(), class-Literal",
          "Pattern-Matching bei instanceof",
          "Patterns for Switch; Behandlung von null-Referenzen, Dominanz, Wächter",
          "Methoden überschreiben; Annotation @Override",
          "Der super-Aufruf innerhalb von Methoden",
          "Kovariante Rückgabetypen",
          "Dynamisches Binden; Methoden überschreiben, Polymorphie",
          "Finale Klassen und finale Methoden",
          "Abstrakte Klassen und abstrakte Methoden"
        ],
        "Records, Schnittstellen, Aufzählungen, versiegelte Klassen": [
          "Records deklarieren und nutzen",
          "Record Pattern; 'Destructuring', Record Pattern beim Pattern-Matching",
          "Schnittstellen (Interfaces) deklarieren und implementieren",
          "Schnittstellen in der Java SE; CharSequence implementieren",
          "Weitere Möglichkeiten von Interfaces; Überschreiben, statische-/Default-Methoden",
          "Enum, Teil 1: Datentyp Enum; Umsetzung von Aufzählungstypen",
          "Enum, Teil 2: Aufzählungen mit Eigenschaften",
          "Sealed Classes/Interfaces (Versiegelte Klassen und Schnittstellen)"
        ],
        "Ausnahmen (Exceptions)": [
          "Traditionelle Fehlerbehandlung; Motivation von Ausnahmen",
          "Ausnahmen auffangen",
          "Mehrere catch-Blöcke; Multi-Catch, bei beliebigen Ausnahmen Block wiederholen",
          "Ausnahmen weiterleiten",
          "Vererbungsbeziehung der Ausnahmeklassen",
          "Vererbungsbeziehung bei Exceptions nutzen",
          "Abschlussarbeiten mit finally",
          "finally-Blöcke zum Schließen von Ressourcen einsetzen",
          "Automatisches Ressourcen-Management (try-mit-Ressourcen), Teil 1",
          "Automatisches Ressourcen-Management (try-mit-Ressourcen), Teil 2",
          "Eigene Ausnahmen auslösen",
          "Ausnahmenobjekte weiter parametrisieren",
          "Eigene Exception-Klassen schreiben"
        ]
      },
      "requirements": [
        "Grundverständnis für die Programmierung ist hilfreich",
        "Bedienung einer grafischen Oberfläche",
        "Installation von Software"
      ],
      "description": "Die Teilnehmenden dieses Kurses lernen die Programmiersprache Java und die Java-Standardbibliothek von Grund auf kennen. Der Lehrinhalt umfasst eine Vielzahl von Themen, darunter die verschiedenen Datentypen, die Formulierung von Fallunterscheidungen und Schleifen, das Schreiben von Methoden, Klassen und Schnittstellen.\nIm Verlauf des Kurses werden grundlegende Konzepte vermittelt, aber auch anspruchsvollere Sprachkonstrukte behandelt. Dazu gehören Themen wie dynamisches Binden, die Auswahl geeigneter Datenstrukturen, Generics, Lambda-Ausdrücke, funktionale Programmierung und vieles mehr.\nBesonders hervorzuheben ist, dass der Kurs auf der Grundlage von Java 21 aufbaut, für das ein Langzeit-Support (LTS) verfügbar ist. Java hat sich im Laufe der Zeit erheblich weiterentwickelt, und modernes Java unterscheidet sich deutlich von dem, was vor 20 Jahren gelernt wurde. Der Kurs bietet daher eine aktuelle und umfassende Einführung in die Welt der Java-Programmierung.\nDer Kursleiter Christian Ullenboom ist seit mehr als 25 Jahren auf der Java-Insel unterwegs und seine Java-Bücher gelten als Standardwerke. Durch seine Arbeit mit Java, durch Schulungen sowie das populäre Buch „Java ist auch eine Insel“ wurde er im September 2005 von Sun (heute Oracle) als Java-Champion ausgezeichnet.\nMit rund 50 Stunden ist dieser Kurs der umfangreichste und modernste Video-Kurs auf der Plattform. Im Mittelpunkt steht die Syntax von Java, doch auch Themen wie saubere objektorientierte Programmierung, Clean Code, Refactoring, Effective Java und Design-Patterns werden ausführlich behandelt.\nGenug geredet! Starten wir mit dem Hello-World-Programm und arbeiten uns vor.",
      "target_audience": [
        "Dieser Java-Kurs ist für ProgrammieranfängerInnen gedacht, die noch keinerlei Erfahrungen mit der Programmierung mit Java gesammelt haben",
        "Fortgeschrittene EntwicklerInnen, die sich in die aktuellen Spracheigenschaften (Java 8 bis Java 21) einfinden möchten"
      ]
    },
    {
      "title": "gRPC for Microservice Environments",
      "url": "https://www.udemy.com/course/grpc-for-microservice-environments/",
      "bio": "Microservice architecture requires more performant ways to communicate to each other. gRPC helps you to achieve this.",
      "objectives": [
        "gRPC communication in Microservice environment",
        "Protocol Buffers",
        "How to use gRPC in a Hexagonal Architecture",
        "Resiliency patterns in gRPC"
      ],
      "course_content": {
        "Introduction": [
          "What's gRPC",
          "Practical example with Order Service",
          "Protocol Buffer Encoding",
          "Error Handling"
        ],
        "Resiliency Patterns": [
          "Intro",
          "Timeout Pattern",
          "Timeout Pattern Discount Service",
          "Timeout Pattern Demo",
          "Retry Pattern",
          "Circuit Breaker Pattern"
        ],
        "Hexagonal Architecture and gRPC": [
          "What's Hexagonal Architecture",
          "Hexagonal Architecture with Rest Api",
          "gRPC implementation"
        ]
      },
      "requirements": [
        "Knowing the ways while communicating with an API, like aware of RESTful Api's and some knowledge."
      ],
      "description": "This course is designed to help you understand and apply gRPC, an efficient and modern RPC (Remote Procedure Call) framework, to improve communication in microservices architectures. Whether you're new to gRPC or looking to enhance your skills, this course provides a clear and hands-on approach to learning how gRPC works and how it can transform your system’s performance.\nWe’ll begin by covering the fundamental concepts behind gRPC, including Protocol Buffers (protobufs), the serialization mechanism that powers gRPC’s high performance. You'll learn how gRPC compares to REST and why it's often the better choice for service-to-service communication in modern, distributed systems.\nThe course then moves on to practical implementations of gRPC. You’ll learn how to set up and use gRPC to build faster, more scalable, and reliable microservices. Along the way, we’ll focus on how gRPC can simplify communication between services and reduce overhead, all while maintaining the flexibility and speed necessary for high-performance systems.\nBy the end of this course, you’ll have the skills needed to implement gRPC in your own systems and take advantage of its powerful features to improve the efficiency and maintainability of your microservices. Whether you’re working on new projects or optimizing existing ones, this course will give you the knowledge to leverage gRPC effectively.\nIdeal for developers and engineers, this course will help you optimize backend systems by improving communication, performance, and scalability using gRPC.",
      "target_audience": [
        "Engineers who wants to learn more about Microservices",
        "Looking more performing ways for inter service communcation beside of Rest APIs",
        "Developers and Devops or anyone wants to be one."
      ]
    },
    {
      "title": "Seismic Analysis and Design of a RC Building using ETABS",
      "url": "https://www.udemy.com/course/seismic-analysis-and-design-of-a-rc-building-using-etabs/",
      "bio": "Analysis and Design of a Reinforced Concrete Building according to ACI 318 and ASCE 7",
      "objectives": [
        "Gain a fundamental understanding of structural analysis and design principles, focusing on building structures.",
        "Familiarize with the ETABS user interface, modeling tools, and workflow for creating and analyzing building structures.",
        "Develop the ability to model different types of concrete buildings and perform static analysis.",
        "Learn how to apply various loads (dead, live, seismic) to structural models and perform linear analysis.",
        "Gain proficiency in designing and optimizing structural components (beams, columns, shear walls, etc.) based on design codes."
      ],
      "course_content": {
        "Introduction": [
          "Define Grids and Stories",
          "Define Material and Section Properties",
          "Draw Structural Elements",
          "Load Patterns and Load Combinations",
          "Model Analysis",
          "Design of Shear Walls",
          "Preliminary Design of Beams and Columns",
          "Final Design of Beams and Columns",
          "Design of Slabs"
        ]
      },
      "requirements": [
        "Have a foundational knowledge of reinforced concrete design concepts."
      ],
      "description": "In this course, you will learn how to create a structural model for a reinforced concrete building using CSI ETABS, a globally recognized software in the structural design for reinforced concrete structures. The course will cover defining material properties and section dimensions. Once the model is set up, you will be guided on defining and applying all types of structural loads, including gravity and seismic forces. Key design topics such as mass sources, P-delta effects, modal cases, and load combinations will be explored in depth. After the model has been verified, it will undergo analysis, and multiple techniques for displaying and interpreting the results will be demonstrated, allowing you to effectively evaluate the structural performance and ensure accuracy in your design.\nIn the design phase, shear walls will be the first focus, where you will learn a general design method and how to detail vertical and horizontal reinforcements. Beams and columns will be designed in two stages: an initial design to assess section adequacy and the final design covering longitudinal and transverse reinforcement details.\nFinally, the course will cover the design and detailing of slabs, ensuring you understand how to properly dimension and reinforce them in compliance with structural standards.",
      "target_audience": [
        "Civil Engineering Students, Civil and Structural Engineers"
      ]
    },
    {
      "title": "Agile Acceptance Test Simplified",
      "url": "https://www.udemy.com/course/acceptancetestusingfit/",
      "bio": "A comprehensive guide for Product Owners, Business Analysts and Testers",
      "objectives": [
        "Differentiate automated acceptance tests from non-automated ones",
        "Identify the shortcomings of not automating agile acceptance tests",
        "Clearly distinguish between executable specification and traditional requirement specification",
        "Identify all the elements of a FIT framework",
        "Develop acceptance tests using FIT",
        "Identify and develop appropriate type of test fixture for a given test case",
        "Value the importance of writing UI-independent tests",
        "Distinguish between different types of test fixtures",
        "Install and run FIT tests",
        "Analyze FIT test report and fix problems in the test",
        "Interpret the test report produced by FIT framework"
      ],
      "course_content": {
        "Introduction": [
          "About the course"
        ],
        "FIT Background": [
          "Introducing Specification by Example",
          "Assess yourself",
          "Applying Specification by Example",
          "Assess yourself",
          "Motivation for FIT",
          "Assess yourself",
          "Introducing FIT",
          "Assess yourself"
        ],
        "ColumnFixture": [
          "Introduction",
          "Assess yourself",
          "ColumnFixture - Under the hood",
          "Assess yourself",
          "Applying ColumnFixture - Example 1",
          "Assess yourself",
          "Applying ColumnFixture - Example 2",
          "Assess yourself",
          "Applying ColumnFixture - Example 3",
          "Assess yourself"
        ],
        "ActionFixture": [
          "Introduction",
          "Assess yourself",
          "ActionFixture - Getting deeper",
          "Assess yourself",
          "Comparing ActionFixture with ColumnFixture",
          "Assess yourself",
          "Applying ActionFixture - Example 1",
          "Assess yourself",
          "Applying ActionFixture - Example 2",
          "Assess yourself"
        ],
        "RowFixture": [
          "Introduction",
          "Assess yourself",
          "Applying RowFixture - Example 1",
          "Assess yourself",
          "Applying RowFixture - Example 2",
          "Assess yourself"
        ],
        "Combining Fixtures": [
          "Combining Fixtures - Example",
          "Assess yourself",
          "Combining Fixtures - Optimizing the Example",
          "Assess yourself",
          "Combining Fixtures - Completing the Example",
          "Assess yourself"
        ],
        "Flow Style Fixtures - DoFixture": [
          "Flow Style Fixtures - Understanding DoFixture - Part 1",
          "Assess yourself",
          "Flow Style Fixtures - Understanding DoFixture - Part 2",
          "Assess yourself",
          "Flow Style Fixtures - Applying DoFixture - Part 1",
          "Assess yourself",
          "Flow Style Fixtures - Applying DoFixture - Part 2",
          "Assess yourself"
        ],
        "Flow Style Fixtures - Remaining Fixtures": [
          "Flow Style Fixtures - SetupFixture",
          "Assess yourself",
          "Flow Style Fixtures - CalculateFixture",
          "Assess yourself",
          "Flow Style Fixtures - SubsetFixture",
          "Assess yourself"
        ],
        "Miscelleneous Topics": [
          "Miscelleneous - Using Date/Time",
          "Assess yourself",
          "Miscelleneous - Using Real World Objects",
          "Assess yourself"
        ],
        "Install and Run FIT tests": [
          "Install and Run",
          "Assess yourself"
        ]
      },
      "requirements": [
        "Familiarity with agile projects"
      ],
      "description": "- Are you a product owner,  business analyst or any team member looking to distinguish yourself from the rest?\n- Are you a test member looking to upgrade yourself with agile acceptance test driven development (ATDD)?\n- Are you an agile team developer looking to  get started with agile acceptance test driven development (ATDD)?\n- Are you a business representative learning to write acceptance tests?\n- Are you looking for something that could transform your team to the most productive team in the organization?\nIf you relate to one or more of the above criteria then this course is for you.\nIt is a comprehensive course on creating executable acceptance tests delivered with crystal clear communication.\nAutomating acceptance tests is gaining more momentum than ever. The course will enable you to master the writing of acceptance tests in the form of tables. These tests can be directly executed, without any need for you to understand or write a single piece of code.\nYou will be able to assess your knowledge by answering more than 100 quizzes & questions that pop up throughout the course.\nHere's just few feedback of the students received for the other courses by the same instructor:\n\"Clear concept description :)\"\n\"Great job ! Great explanation of all patterns !\"\n\"It's really an awesome course. Instructors approach of explaining consequences and solutions is very good and different situations has been explained\"\n\"Your pedagogy skills are amazing, and i have to say that i love your teaching style, everything is so clear and detailed, exactly what i wait for, as a learner. I already knew these patterns but Not as much as you made me understand the deep of some, always by using your smooth progressive/near learner, and logical approach. I really want to point out, how much learning with your course is pleasant and kind of easy. I'd like to thank you for being part of the instructors here, and i hope one day you will create, the same way, a course about the other (GoF) Design Patterns, and then, still other courses about software Design subjects. Be sure i'll be there to pick them again ! :)\"\n\"Wow, i'm amazed This course is really well done. I have tried so many books to understand design patters, even for dummie books, but not was really working for me. The diagrams and the visual effects help you focus on the exact part of the presentation that the trainer is conveying....Thank you for this wonderfull course, i'll recomend it to all my friends\"\n\n\nEven though the course is primary for teams following agile methodologies, it is applicable for any one interested in writing business friendly tests that can be directly executed using tools such as FIT.\nNOTE for software developers: This course will tell you how to write acceptance tests that are usually done by product owner, business analyst or any business representative.  The course will not elaborate on writing glue code or the fixture code. But you will be able to get started with FIT based Acceptance Test Driven Development (ATDD) after learning to write basic test fixture code from the course.\n\n\nJoin the course with a visually stimulating and engaging content!",
      "target_audience": [
        "Product Owners",
        "Business Analysts",
        "Agile team members"
      ]
    },
    {
      "title": "Siemens SIMATIC PCS7 v9.1",
      "url": "https://www.udemy.com/course/siemens-simatic-pcs7-v91/",
      "bio": "Learn Siemens PCS 7 v9.1 from scratch – SCADA, DCS, and Automation Engineering",
      "objectives": [
        "Install and configure Siemens PCS 7 v9.1 step-by-step",
        "Create and manage new PCS 7 projects from scratch",
        "Configure hardware and network settings for PCS 7 systems",
        "Develop control logic using CFC (Continuous Function Chart), SFC (Sequential Function Chart), and SCL",
        "Integrate and configure WinCC for HMI and process visualization",
        "Set up alarms, trends, and reports for industrial monitoring",
        "Perform project testing, simulation, and commissioning",
        "Apply PCS 7 in real-world process control and SCADA projects",
        "Follow best practices for troubleshooting and maintaining PCS 7 systems"
      ],
      "course_content": {
        "Introduction": [
          "Introduction about PCS7 Beginner Course"
        ],
        "Create First Project": [
          "Basic Configuration Steps"
        ],
        "Channel Driver Blocks": [
          "What is Channel Driver ?"
        ],
        "APL - Motor Block": [
          "MotL Block - Local mode with selector switch",
          "MotL Block - Local mode with faceplate",
          "MotL Block - Automatic mode",
          "MotL Block - Interlock Function",
          "MotL Block - Permit Interlock",
          "MotL Block - Protect Interlock",
          "MotL Block - Automatic mode with selector switch"
        ],
        "Customized Logic": [
          "Customized Logic - FB",
          "Customized Logic - SCL"
        ],
        "Data Archive / Logging": [
          "Analog tag logging",
          "Digital tag logging"
        ],
        "Trend": [
          "Trend Configuration"
        ],
        "Alarm": [
          "Alarm Messages"
        ],
        "User Administration": [
          "AS User Administration",
          "OS User Administration"
        ]
      },
      "requirements": [
        "No prior PCS 7 experience required — everything will be explained step-by-step",
        "Basic understanding of industrial automation or process control concepts",
        "Familiarity with Windows operating system (file management, installation)",
        "Interest in PLC/DCS systems and process automation",
        "Siemens PCS 7 v9.1 software (licensed or trial version) for hands-on practice",
        "A Windows PC that meets PCS 7 v9.1 system requirements (sufficient RAM, CPU, and storage)"
      ],
      "description": "Master Siemens PCS 7 v9.1 from Scratch – Become an Expert in Process Control & Automation Engineering\nThis course is your complete basic guide to Siemens PCS 7 v9.1, one of the most powerful Distributed Control System (DCS) platforms used in industries worldwide. Whether you are a beginner or an experienced automation professional, you will gain the skills to design, configure, and implement PCS 7 systems for real-world industrial projects.\nThrough clear explanations, hands-on demonstrations, and practical examples, you will learn how to:\nInstall and configure PCS 7 step-by-step\nSet up projects, hardware configurations, and networks\nDevelop control logic using CFC, SFC, and SCL programming tools\nIntegrate WinCC for HMI development and process visualization\nConfigure alarms, trends, and reports for operational monitoring\nConnect PCS 7 with PLCs, field devices, and industrial communication protocols\nPerform testing, simulation, and commissioning for industrial applications\nBy the end of this course, you will have the confidence to work with PCS 7 in oil & gas, power plants, water treatment facilities, manufacturing, and other process industries.\n\n\nWhy Learn Siemens PCS 7?\nSiemens PCS 7 is a global standard for process automation, combining powerful engineering tools with reliable process control. Skilled PCS 7 engineers are in high demand, and this course equips you with the exact skills employers look for.\n\n\nHands-On Learning Approach\nThis is not just theory — you will see step-by-step configurations inside the PCS 7 engineering environment and learn practical workflows used by professionals in the field.\n\n\nNo previous PCS 7 experience is required. You just need basic knowledge of automation concepts and a Windows PC that meets the software requirements.\n\n\nDisclaimer: This course is not affiliated with or endorsed by Siemens AG. All software, trademarks, and logos remain the property of their respective owners.",
      "target_audience": [
        "Automation engineers who want to master Siemens PCS 7 for process control projects",
        "Electrical and instrumentation engineers working with industrial automation systems",
        "Control system designers looking to enhance their PCS 7 skills",
        "SCADA/DCS technicians who want to expand into PCS 7 engineering",
        "Engineering students in instrumentation, electrical, or automation fields",
        "Professionals seeking to work in oil & gas, power plants, water treatment, and manufacturing industries",
        "Anyone interested in learning PCS 7 from scratch with practical examples"
      ]
    },
    {
      "title": "Linked lists for absolute beginners",
      "url": "https://www.udemy.com/course/linked-lists-for-absolute-beginners/",
      "bio": "Learn to juggle with pointers and nodes like any other data structure!",
      "objectives": [],
      "course_content": {
        "Singly linked lists": [
          "Introduction to linked lists",
          "Iterating a linked list",
          "Inserting at the end",
          "Deallocating (or deleting) a linked list",
          "Inserting at the beginning",
          "Inserting after a node",
          "Inserting in a sorted list",
          "Removing an element",
          "Basic operations with a linked list",
          "Reversing a linked list",
          "Detecting cycles/loops",
          "Introduction to recursive functions on linked lists, counting number of elements"
        ],
        "Doubly linked lists": [
          "Introduction to doubly linked lists",
          "Iterating a doubly linked list",
          "Deallocating (or deleting) a doubly linked list",
          "Inserting at the beginning",
          "Inserting at the end",
          "Inserting after a node",
          "Removing a node",
          "Basic operations with doubly linked lists",
          "Finding a node",
          "Reversing a doubly linked list"
        ]
      },
      "requirements": [
        "A working computer",
        "C/C++ IDE (Visual Studio, Dev-C++, CodeBlocks etc.)",
        "Basic understanding of the C language (especially pointers and stack/heap memory)"
      ],
      "description": "Learn the basics of linked lists in the C programming language. This course treats the student as a complete beginner to linked lists that has a basic understanding of arrays/pointers and other similar concepts of the C language. What we want is, at the end of this course, for you to be able to use a linked list exactly like a plain old array.\nAfter finishing the course you will be able to\nCreate the data structure for a singly and doubly linked list\nInsert any element wherever in the linked list\nRemove an element from the linked list\nUnderstand how the linked list is allocated in memory\nProperly deallocate the linked list\nAnd to code other useful algorithms",
      "target_audience": [
        "Beginner programmers that want to fully understand linked lists and their potential"
      ]
    },
    {
      "title": "[NEW] Functional programming for javascript developers",
      "url": "https://www.udemy.com/course/functional-programming-for-javascript-developers/",
      "bio": "Learn functional programming and how it enables developers to move from imperative to declarative programming",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Difference between functional programming and object oriented programming": [
          "difference between functional programming and object oriented programming"
        ],
        "Function purity": [
          "Function purity"
        ],
        "Function arguments and shapes": [
          "Function arguments and shapes"
        ],
        "Map Filter Reduce Operators": [
          "Map Filter Reduce Operators"
        ],
        "Calculator object oriented programming": [
          "Calculator object oriented programming"
        ],
        "Calculator functional refactor": [
          "Calculator functional refactor"
        ]
      },
      "requirements": [
        "No... A basic knowledge of javascript would help. But its perfect for beginners who want to have a great foundation to build their skills."
      ],
      "description": "Improve your code with functional patterns like pure functions, compose & map/reduce/filter...plus advanced concepts like fusion, transducing and monads!\n\n\nSolidify your knowledge of functional JavaScript programming, including objects, arrays, and prototypes\n\n\nLearn higher-order functions, closures, scope, master key functional methods like map, reduce and filter and promises and ES6+ asynchronous JavaScript. Go beyond the fundamentals of asynchronous JavaScript and use features and techniques that will help you reduce code and create smarter applications.\n\n\nLearning how to build and manage asynchronous functional programs is perhaps the most important part of becoming an effective JavaScript programmer.",
      "target_audience": [
        "Beginner Developers that want to learn about functional programming concepts."
      ]
    },
    {
      "title": "Hexagonal Architecture by example",
      "url": "https://www.udemy.com/course/hexagonal-architecture-by-example/",
      "bio": "A practical guide to creating maintainable applicatiions",
      "objectives": [
        "How to correctly define hexagonal architecture",
        "How to apply hexagonal architecture in practice",
        "How to make informed compromises when implementing hexagonal architecture",
        "What are pros and cons of hexagonal architecture"
      ],
      "course_content": {
        "Introduction": [
          "What is Hexagonal Architecture"
        ],
        "Practical example": [
          "Package structure",
          "Business logic implementation",
          "Infrastructure",
          "Assembling it together",
          "New use case. Let's add some code!",
          "Verifying new use case",
          "Refactoring"
        ],
        "Summary": [
          "Summary"
        ]
      },
      "requirements": [
        "You must know how to program in Java. It would be great if you're at least somewhat familiar with Spring."
      ],
      "description": "In this course, you will learn how to design and develop Java Spring Boot applications using the principles of Hexagonal Architecture (also known as Ports and Adapters). This architectural style is gaining popularity due to its ability to create flexible, maintainable, and easily testable applications that are decoupled from their external dependencies. Whether you’re new to this concept or looking to deepen your understanding, this course will guide you step-by-step through its application in real-world projects.\nWe’ll start by explaining the core ideas behind Hexagonal Architecture and why it is so powerful. You’ll learn how to separate the domain logic from infrastructure concerns, making your code more modular and easier to maintain. Through clear examples, we’ll show how Hexagonal Architecture enables applications to remain independent of frameworks, databases, or external services, allowing for greater adaptability and testability.\nUsing a hands-on approach, I’ll walk you through building a Java Spring Boot application from the ground up, implementing Hexagonal Architecture principles in every layer. You’ll learn how to define and manage Ports (interfaces) and Adapters (implementations), as well as how to effectively structure your application to allow for easy integration of external services like databases, APIs, or message brokers.\nThis course is ideal for Java developers who want to enhance their software design skills and create clean, maintainable applications using modern architectural techniques.",
      "target_audience": [
        "Java developers, though anyone programming in a statically-typed language can benefit from this knowledge."
      ]
    },
    {
      "title": "Introduction to Cloud Security",
      "url": "https://www.udemy.com/course/introduction-to-cloud-security/",
      "bio": "Understanding the Fundamentals of Protecting Data in the Cloud",
      "objectives": [],
      "course_content": {
        "Introduction to Cloud Security": [
          "Introduction to Cloud Security",
          "Network Security in Cloud Environments",
          "Data Security in The Cloud",
          "Identity And Access Management, IAM in The Cloud",
          "Cloud Security Architecture"
        ]
      },
      "requirements": [
        "Basic Understanding of Networking and Security Concepts: Learners should have foundational knowledge of how networks operate and key security principles like firewalls, encryption, and authentication. Familiarity with Cloud Computing Fundamentals: A general understanding of cloud service models (IaaS, PaaS, SaaS) and cloud providers such as AWS, Azure, or Google Cloud is recommended. Access to a Cloud Environment: Hands-on experience is essential, so access to a cloud platform (e.g., a free-tier AWS or Azure account) is required for practical labs and demonstrations."
      ],
      "description": "Cloud Security is a critical discipline in modern IT infrastructure, focusing on the strategies, technologies, and practices used to protect data, applications, and services hosted in the cloud. As organizations increasingly adopt cloud computing for scalability and efficiency, ensuring robust security becomes paramount. This course offers a comprehensive overview of cloud security principles, including the shared responsibility model, risk management, data encryption, identity and access management (IAM), and secure application deployment.\n\nLearners will explore different cloud service models (IaaS, PaaS, SaaS) and their unique security implications. The course also delves into tools and best practices for monitoring, threat detection, and incident response in cloud environments. Practical insights into securing public, private, and hybrid clouds will be provided, along with hands-on guidance on configuring cloud-native security tools offered by platforms like AWS..\nWhether you're an aspiring cloud engineer, security analyst, or DevOps professional, this course equips you with the foundational knowledge and skills to implement and manage secure cloud solutions effectively.\nWhat will i learn?\nUnderstand Core Cloud Security Principles: Learners will grasp the foundational concepts of securing cloud environments, including identity and access management, encryption, and threat detection.\nEvaluate and Apply Cloud Security Tools: Students will gain hands-on experience using popular cloud-native and third-party tools to monitor, detect, and respond to security threats.\nImplement Best Practices for Cloud Security: Learners will be equipped to apply industry-recommended security controls and compliance standards to secure workloads in various cloud platforms.\nRequirements\nBasic Understanding of Networking and Security Concepts: Learners should have foundational knowledge of how networks operate and key security principles like firewalls, encryption, and authentication.\nFamiliarity with Cloud Computing Fundamentals: A general understanding of cloud service models (IaaS, PaaS, SaaS) and cloud providers such as AWS, Azure, or Google Cloud is recommended.\nAccess to a Cloud Environment: Hands-on experience is essential, so access to a cloud platform (e.g., a free-tier AWS or Azure account) is required for practical labs and demonstrations.\nAI Content Disclaimer:\nSome elements of this course, including parts of the written materials, examples, and/or graphics, were created with the assistance of artificial intelligence tools. All AI-generated content has been reviewed, edited, and fact-checked by the instructor to ensure accuracy, clarity, and relevance.",
      "target_audience": [
        "Aspiring Cloud Security Professionals – Individuals seeking foundational and hands-on skills in cloud security practices and tools. IT and DevOps Engineers – Professionals responsible for managing and securing cloud infrastructure across AWS, Azure, or Google Cloud. Security Analysts and Architects – Those aiming to strengthen their ability to detect, prevent, and respond to cloud-based threats. System Administrators – Admins looking to apply best practices for identity, access, and workload security in cloud environments. Students and Career Changers – Learners preparing for roles in cybersecurity or cloud computing with a focus on practical, job-ready skills."
      ]
    },
    {
      "title": "600+ REST API Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/rest-api-interview-questions/",
      "bio": "REST API Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "REST API Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to our meticulously crafted Udemy course, designed to provide you with a deep understanding and thorough preparation for REST API interview questions. This course is an essential resource for anyone aspiring to excel in the field of software development, specifically in roles that involve working with RESTful services.\nOur practice test course is structured into six detailed sections, each focusing on a different aspect of REST APIs. This comprehensive approach ensures you have a well-rounded understanding and are prepared for a variety of questions that may arise in your interview.\nSection 1: Fundamentals of REST APIs\nUnderstanding RESTful Principles: Delve into the core principles that define RESTful services, setting the stage for deeper exploration.\nHTTP Methods and Their Usage: Master the different HTTP methods like GET, POST, PUT, and DELETE, and understand their appropriate use cases.\nResource Identification in REST: Learn how resources are identified and accessed in REST APIs using Uniform Resource Identifiers (URIs).\nStatelessness in REST Architecture: Understand the importance of statelessness in RESTful services and how it impacts scalability and performance.\nThe Role of URI: Explore the significance of URIs in RESTful services and how they are structured.\nClient-Server Communication in REST: Grasp the fundamentals of how clients and servers communicate in a RESTful architecture.\nSection 2: RESTful Services and Data Handling\nCRUD Operations with REST: Get to grips with creating, reading, updating, and deleting resources using RESTful services.\nHandling JSON and XML in REST APIs: Learn the intricacies of handling different data formats like JSON and XML in REST APIs.\nData Pagination and Filtering in REST: Understand how to manage large datasets effectively using pagination and filtering techniques.\nManaging Large Data Sets in RESTful Services: Explore strategies for handling and transmitting large volumes of data in RESTful APIs.\nContent Negotiation and Representation: Master the art of content negotiation to serve different representations of data.\nError Handling and Status Codes: Learn the best practices for handling errors and using HTTP status codes effectively.\nSection 3: Security and Authentication\nBasic Authentication in REST APIs: Understand the implementation and use of basic authentication in RESTful services.\nOAuth and Token-Based Authentication: Dive into more secure authentication methods like OAuth and token-based systems.\nSSL/TLS and REST API Security: Explore the role of SSL/TLS in securing REST APIs.\nCommon Security Vulnerabilities in REST APIs: Learn about common security threats and how to safeguard your RESTful services.\nCORS (Cross-Origin Resource Sharing): Understand how CORS is managed in REST APIs for cross-domain requests.\nAPI Throttling and Rate Limiting: Grasp the concepts of throttling and rate limiting to manage the load on RESTful services.\nSection 4: REST API Design and Best Practices\nDesigning RESTful URIs: Learn the principles of designing intuitive and effective URIs for RESTful services.\nVersioning Strategies for REST APIs: Explore different strategies to version your APIs effectively.\nHATEOAS (Hypermedia as the Engine of Application State): Understand the concept of HATEOAS and its role in RESTful API design.\nAPI Documentation Best Practices: Learn how to create clear and comprehensive documentation for your REST APIs.\nRESTful API Design Patterns: Explore various design patterns and best practices in RESTful API development.\nPerformance Optimization in REST APIs: Understand techniques to optimize the performance of your RESTful services.\nSection 5: Testing and Debugging REST APIs\nWriting Unit Tests for REST APIs: Learn how to write effective unit tests for RESTful services.\nIntegration Testing in RESTful Services: Understand the importance and methods of integration testing in REST APIs.\nTools for Testing REST APIs: Get acquainted with popular tools like Postman and Swagger for testing RESTful services.\nDebugging Common REST API Issues: Learn strategies to identify and resolve common issues in REST APIs.\nMonitoring and Logging in RESTful Services: Understand the best practices in monitoring and logging for maintaining healthy RESTful services.\nAPI Mocking and Simulation Techniques: Explore techniques for mocking and simulating APIs for testing purposes.\nSection 6: Advanced REST API Concepts\nREST vs. SOAP Web Services: Compare and contrast REST with SOAP web services, understanding their strengths and weaknesses.\nMicroservices and RESTful APIs: Learn about the synergy between microservices architecture and RESTful APIs.\nRESTful API Caching Mechanisms: Delve into caching strategies to enhance the performance of REST APIs.\nREST APIs in Cloud Environments: Explore the nuances of developing and deploying RESTful services in cloud environments.\nAsynchronous Operations in REST: Understand how to handle asynchronous operations in RESTful services.\nImplementing RESTful APIs in Different Programming Languages: Gain insights into how RESTful services are implemented across various programming languages.\nEnroll Now and Ace Your REST API Interviews!\nTake the first step towards acing your REST API interviews. Enroll in our course today and equip yourself with the knowledge and confidence to succeed. With our comprehensive practice tests, you'll be ready to tackle any question that comes your way in a REST API interview.",
      "target_audience": [
        "Aspiring and Junior Software Developers: If you're starting your journey in software development or are in the early stages of your career, this course is an excellent resource to solidify your understanding of REST APIs, a crucial component in modern web development.",
        "IT Professionals and System Integrators: For those working in IT roles that involve integrating various systems and services, this course offers practical knowledge and insights into how REST APIs function and how they can be effectively utilized in system integration.",
        "Computer Science Students: If you are a student pursuing a degree in computer science or a related field, this course provides valuable practical knowledge that complements your academic studies, preparing you for careers in software and web development.",
        "Quality Assurance Testers: QA testers who wish to expand their skill set in API testing will find this course particularly beneficial. It covers the essentials of REST API testing, debugging, and security, which are critical in ensuring the robustness of web services.",
        "Technology Enthusiasts and Hobbyists: Even if you are not a professional developer or student but have a keen interest in web technologies and software development, this course offers an engaging way to learn about REST APIs and their applications.",
        "Career Changers: Individuals looking to transition into the tech industry, specifically in roles related to web development or API integration, will find this course a valuable stepping stone in acquiring the necessary skills and knowledge."
      ]
    },
    {
      "title": "Arquitetura Hexagonal com Java - C1",
      "url": "https://www.udemy.com/course/arquitetura-hexagonal-com-java-1/",
      "bio": "Conceitos, metáforas, projeto e implementação de arquitetura hexagonal usando Java",
      "objectives": [
        "Conhecimentos teórico e conceituais em arquitetura hexagonal",
        "Conhecimentos sobre decisões de design em projetos Java",
        "Implementação de um sistema real usando arquitetura hexagonal com Java"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação do Instrutor",
          "Download Material",
          "Aula 3 - Por que eu deveria me preocupar com arquitetura de software?"
        ],
        "Módulo 1 - Teoria, Conceitos, Valores e Metáforas": [
          "Aula 1",
          "Aula 2",
          "Aula 3",
          "Aula 4",
          "Aula 5",
          "Aula 6",
          "Aula 7",
          "Aula 8",
          "Aula 9",
          "Aula 10",
          "Aula 11",
          "Aula 12",
          "Aula 13",
          "Aula 14",
          "Aula 15",
          "Aula 16",
          "Aula 17",
          "Aula 18",
          "Aula 19",
          "Aula 20",
          "Aula 21",
          "Aula 22"
        ],
        "Módulo 2 - Projeto e Design": [
          "Aula 1",
          "Aula 2",
          "Aula 3",
          "Aula 4",
          "Aula 5",
          "Aula 6",
          "Aula 7",
          "Aula 8",
          "Aula 9",
          "Aula 10",
          "Aula 11",
          "Aula 12",
          "Aula 13",
          "Aula 14",
          "Aula 15",
          "Aula 16",
          "Aula 17",
          "Aula 18",
          "Aula 19",
          "Aula 20",
          "Aula 21"
        ],
        "Módulo 3 - Projetos e Implementação em Java": [
          "Aula 1",
          "Aula 2",
          "Aula 3",
          "Aula 4",
          "Aula 5 - Links",
          "Observação: Versão do IntelliJ 2019.1",
          "Aula 6",
          "Aula 7"
        ],
        "Módulo 3 - Projeto 1: Hexágono": [
          "Abertura",
          "Aula 1",
          "Aula 2",
          "Aula 3",
          "Aula 4",
          "Aula 5",
          "Aula 6",
          "Aula 7",
          "Aula 8",
          "Aula 9",
          "Aula 10",
          "Aula 11",
          "Aula 12",
          "Aula 13",
          "Aula 14",
          "Aula 15",
          "Aula 16",
          "Aula 17",
          "Aula 18",
          "Aula 19",
          "Aula 20",
          "Aula 21",
          "Aula 21 - Configuração do Java Module",
          "Aula 22",
          "Aula 23",
          "Aula 24",
          "Aula 25",
          "Aula 26",
          "Aula 27",
          "Aula 28",
          "Aula 29",
          "Aula 30"
        ],
        "Módulo 3 - Projeto 2: Front-End": [
          "Aula 1",
          "Aula 2",
          "Aula 3",
          "Aula 4",
          "Aula 5",
          "Aula 6",
          "Aula 7",
          "Aula 8"
        ],
        "Módulo 3 - Projeto 3: Back-Services": [
          "Aula 1",
          "Aula 2",
          "Aula 3",
          "Aula 4",
          "Aula 5",
          "Aula 6",
          "Aula 7",
          "Aula 8",
          "Aula 9",
          "Aula 10",
          "Aula 11",
          "Aula 12",
          "Aula 13"
        ],
        "Módulo 3 - Projeto Build Finais": [
          "Aula 1",
          "Aula 2",
          "Aula 3",
          "Aula 4",
          "Aula 5",
          "Aula 6",
          "Aula 7",
          "Aula 8",
          "Aula 9",
          "Aula 10",
          "Aula 11",
          "Aula Final",
          "Atualizando com Java14 + Spring 5.2.5 + JavaFx14 - Abril/2020"
        ]
      },
      "requirements": [
        "Conhecimentos básicos em sintaxe de linguagem Java",
        "Conhecimentos básicos em programação orientado e objetos",
        "Conhecimentos básicos em banco de dados relacional e SQL",
        "Conhecimentos básicos em TDD",
        "Conhecimentos básicos em JUnit Framework",
        "Conhecimentos básicos em Spring Framework"
      ],
      "description": "Objetivo\nObjetivo desse curso 1 é oferecer aos participantes conhecimentos teóricos e práticos relacionados ao uso do padrão de projeto arquitetural conhecido como “Hexagonal Architecture”.\nO curso aborda toda a teoria, valores, conceitos e metáforas, fazendo a implementação de um estudo de caso funcional 100% prático em Java usando: JDK, IntelliJ, TDD, JUnit, Java 12, Java Module, CDI, Spring Framework, JavaFX e banco de dados relacional HSQDB, aplicando e provando os conceitos ministrados.\nConteúdo programático:\nMódulo 1 – Teoria, Conceitos Valores e Metáforas\nIntrodução\nO que é?\nPara que serve?\nQuando surgiu?\nQual o objetivo?\nIsolamento\nSoC\nCentro como hexágono.\nLado superior esquerdo.\nLado inferior direito.\nAtores\nO que é?\nPara que serve?\nAtor Primário Condutor (Driver)\nAtor Secundário Conduzido (Driven)\nDependências\nO que é?\nPara que serve?\nCentro como hexágono.\nLado superior esquerdo.\nLado inferior direito.\nPortas\nO que é?\nPara que serve?\nPorta Primária Condutor (Driver)\nPorta Secundária Dirigida (Driven)\nAdaptadores\nO que é?\nPara que serve?\nAdaptador Condutor (Driver)\nAdaptador Dirigido (Driven)\nAdaptadores Simulados (Mock)\nO que é?\nPara que serve?\nFluxo de Execução\nO que é?\nComo funciona?\nInversão de Controle – IoC\nO que é?\nComo funciona?\nDependências Configuráveis\nO que é?\nPara que serve?\nLado superior esquerdo.\nLado inferior direito.\nExemplo Real\nAplicativo de Gerenciador de tarefas\nDiagrama\nConclusão\nPontos Positivos\nPontos Negativos\nQuando usar ou não usar?\nLeitura Complementar\nFechamento\nMódulo 2 – Projeto e Design\nOpções de Design\nOrganização de IDE/Projeto\nOrganização de Pacotes\nPadrões de Regras de Negócios\nOrganização de Portas Primárias\nTransferência de Dados\nDependências para Objetos de Backservices\nClasses e Serviços Dentro do Hexágono\nModelo de Domínio\nServiço de Domínio\nPortas Dirigidas\nPortas Condutoras\nServiços Fora do Hexágono – Lado Inferior Direito\nAdaptadores Dirigidos\nServiços Fora do Hexágono – Lado Superior Esquerdo\nAdaptadores Condutores.\nFluxo de Execução\nO que é?\nComo funciona?\nDigrama de execução\nSequência de Desenvolvimento\nO que é?\nComo funciona?\nMódulo 3 – Projeto e Implementação com Java\nCaso de uso: Transferência Bancária\nO que é?\nComo funciona?\nProtótipo\nTecnologias: OpenJDK, Java 12, IntelliJ, TDD, JUnit, Java Module, CDI, Spring Framework, JavaFX e banco de dados relacional HSQDB.\nDecisões de Design de projeto\nMontagem do ambiente de desenvolvimento\nImplementação\nProjeto 1 - Core Hexagonal\nProjeto 2 - Front-End\nProjeto 3 - Back-Services\nProjeto 4 - Build de homologação e produção\nFechamento",
      "target_audience": [
        "Estudantes ou desenvolvedores Java que almejem se ingressar na carreira de arquiteto java",
        "Estudantes ou desenvolvedores Java que almejem aprender teoria, conceitos e implementação de arquitetura hexagonal usando Java",
        "Estudantes ou desenvolvedores Java que almejem aprender a como desenvolver uma solução moderna, flexível e manutenível usando modelo arquitetural baseado em princípios ágeis"
      ]
    },
    {
      "title": "C Programmieren: Der komplette Praxiskurs für Einsteiger",
      "url": "https://www.udemy.com/course/c-programmierung-praxisnaher-komplettkurs-fur-einsteiger/",
      "bio": "Meistere die C-Programmierung: Grundlagen, Techniken und Übungen. Alles Step-by-Step. [2025 Edition]",
      "objectives": [
        "Erlerne die Grundkonzepte der C Programmierung",
        "Verstehe woraus ein Computerprogramm besteht",
        "Verwende Arrays und Strukturen",
        "Arbeite effektiv mit Variablen und Daten",
        "Verstehe die Logik hinter Pointern",
        "Arbeite mit Dateien und Zahlensystemen"
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung in den Kurs",
          "Informationen zu der Software",
          "Die Software im Kurs",
          "Windows: GCC Compiler Installation - Teil 1",
          "Windows: GCC Compiler Installation - Teil 2",
          "Linux: GCC Compiler Installation - Teil 1",
          "Linux: GCC Compiler Installation - Teil 2",
          "Mac: Clang Compiler Installation",
          "Handbuch des Kurses",
          "Materialien des Kurses",
          "Visual Studio Code einrichten",
          "Unser erstes C Programm in Detail",
          "Der Übungskurs zum Hauptkurs"
        ],
        "Variablen und Datentypen": [
          "Zahlen als Variable - Teil 1",
          "Zahlen als Variable - Teil 2",
          "Rechenoperationen - Teil 1",
          "Rechenoperationen - Teil 2",
          "Probleme beim Rechnen mit Integers",
          "Konsolen-Output",
          "Konsolen-Input",
          "User Input Teil 1: Rechteck Rechnungen",
          "Wertebereiche der Datentypen",
          "Buchstaben als Variable",
          "Darstellung von Integer Zahlen",
          "Darstellung von Float Zahlen",
          "Vordefinierte Int Typen",
          "Variablen und Datentypen",
          "Vorwort zu den Programmieraufgaben",
          "Musterlösung: Variablen und Datentypen",
          "Fallstricke bei Unsigned/Signed Integers"
        ],
        "Abfragen und Logik": [
          "Vergleich Operatoren",
          "If Abfrage - Teil 1",
          "Logische Verknüpfung",
          "If Abfrage - Teil 2",
          "Modulo Operator",
          "If Abfrage mit Modulo",
          "User Input Teil 2: Kreis Rechnungen",
          "Ternary Operator",
          "Enum",
          "Switch Abfrage",
          "Probleme mit Enum",
          "Abfragen und Logik",
          "Musterlösung: Abfragen und Logik"
        ],
        "Schleifen": [
          "Inkrement und Dekrement",
          "Intuition: Schleifen",
          "While Schleife",
          "Break und Continue",
          "Do-While Schleife",
          "User Input Teil 3: Quadrat Rechnungen",
          "For Schleife",
          "Verschachtelte For Schleife",
          "Beispiel: Pyramide",
          "For vs. While",
          "Schleifen",
          "Musterlösung: Schleifen"
        ],
        "Funktionen und Header": [
          "Funktionen - Teil 1",
          "Funktionen - Teil 2",
          "Funktionen - Teil 3",
          "Funktionen - Teil 4",
          "Intuition: Rekursion",
          "Rekursive Funktionen",
          "Gültigkeitsbereiche",
          "Post vs. Pre Inkrement",
          "Header Datei",
          "Include Guards",
          "Musterlösung: Funktionen und Header",
          "Funktionen und Header"
        ],
        "C Tools: Teil 1": [
          "Debugging - Teil 1",
          "Debug vs. Release Mode",
          "Compiler Commands",
          "Clang-Format",
          "Clang-tidy"
        ],
        "Einfache Zeiger": [
          "Zeiger erstellen",
          "Intuition: Zeiger",
          "Call by Value vs. Call by Reference - Teil 1",
          "Call by Value vs. Call by Reference - Teil 2",
          "Call by Value vs. Call by Reference - Teil 3",
          "Beispiel: Value Swap",
          "Pointer Quiz - Teil 1",
          "Pointer Quiz - Teil 2",
          "Einfache Zeiger",
          "Musterlösung: Einfache Zeiger",
          "Debugging - Teil 2"
        ],
        "Arrays": [
          "Intuition: Arrays",
          "Eindimensionale Arrays",
          "Beispiel: Vector Addition",
          "Beispiel: Array Elements",
          "Mehrdimensionale Arrays",
          "Beispiel: Matrix Addition",
          "Array als Funktions Parameter",
          "Defines und Const Werte",
          "Arrays",
          "Musterlösung: Arrays"
        ],
        "Zeiger Arrays": [
          "Stack vs. Heap",
          "Pointer Arrays - Teil 1",
          "Intuition: Heap Speicher reservieren",
          "Pointer Arrays - Teil 2",
          "Pointer Arrays - Teil 3",
          "Intuition: Array to Pointer Decay",
          "Mehrdimensionale Zeiger Arrays - Teil 1",
          "Mehrdimensionale Zeiger Arrays - Teil 2",
          "Zeiger Arrays",
          "Musterlösung: Zeiger Arrays",
          "Das Problem mit dynamischen 2D Arrays",
          "Die Lösung bei dynamischen 2D Arrays",
          "NULL und void Pointer",
          "Calloc und Realloc",
          "Typen-Umwandlung (Casting)"
        ],
        "C Tools: Teil 2": [
          "Optional: Address Sanitizer",
          "Optional: Debugger Pretty Print",
          "Optional: Git und GitHub"
        ]
      },
      "requirements": [
        "Eine Grunderfahrung in der Programmierung ist hilfreich aber nicht notwendig",
        "Mathematische Grundkenntnisse von Vektoren und Matrizen sind hilfreich"
      ],
      "description": "Du willst C von Grund auf lernen und dabei wirklich verstehen, wie Programmieren funktioniert? Dann ist dieser Kurs genau richtig für dich – egal, ob du kompletter Anfänger bist oder schon erste Erfahrungen aus anderen Sprachen mitbringst.\nGleich zu Beginn zeige ich dir, wie du die benötigte Software schnell und unkompliziert installierst. Danach geht es direkt ans Eingemachte: Wir programmieren gemeinsam Schritt für Schritt, und natürlich bekommst du den kompletten Code aus den Videos zum Mitmachen und Nachvollziehen.\nDieser C Komplettkurs richtet sich speziell an Einsteiger und vermittelt dir die Grundlagen der Programmierung auf praxisnahe und verständliche Weise. Keine trockene Theorie – hier steht das aktive Lernen und Umsetzen im Fokus.\nMelde dich jetzt an und leg los – entdecke die Welt der C-Programmierung und entwickle deine Skills weiter. Dieser Kurs bringt dich auf das nächste Level und schafft eine solide Basis für Studium, Job oder eigene Projekte.\nDas erwartet dich im Kurs:\nVariablen und Datentypen – Grundlagen der Datenspeicherung verstehen und anwenden\nAbfragen und Logik – Bedingte Anweisungen und logische Operatoren nutzen\nSchleifen – For, while und do-while in der Praxis einsetzen\nFunktionen und Header – Eigene Funktionen schreiben und sinnvoll strukturieren\nCompiler-Abläufe – Vom Quellcode bis zum ausführbaren Programm: Preprocessing, Compiling und Linking\nZeiger und Speicherverwaltung – Einstieg in eine der mächtigsten Funktionen von C\nStack vs. Heap – Unterschiede kennen und bewusst mit Speicher arbeiten\nArrays und Strings – Daten effizient speichern und bearbeiten\nStrukturen und Enums – Eigene Datentypen erstellen und im Code organisieren\nDatei-I/O – Lesen, schreiben und bearbeiten von Dateien in C\nStarte jetzt – mach den ersten Schritt in die Welt der Systemprogrammierung und der Technologie von morgen.\nIch freue mich, dich im Kurs zu sehen!",
      "target_audience": [
        "Programmieranfänger oder C Neulinge"
      ]
    },
    {
      "title": "Yazılım Mühendisliği Mülakatlarına Hazırlık",
      "url": "https://www.udemy.com/course/yazilim-muhendisligi-mulakatlarina-hazirlanma-teknikleri/",
      "bio": "Yazılım mühendisliği kariyerinize yön verin, yurtiçi ve yurtdışı mülakatlara teknik/davranışsal açılardan hazırlanın",
      "objectives": [
        "Yazılım mühendisliği mülakatı süreci ve en baştan en sona kadar her adımda dikkat etmeniz gerekenler, örnek mülakat canlandırmaları",
        "Teknik mülakatlarda yaygın olarak sorulan veriyapıları, algoritmalar, tasarım konuları, örnek soru tipleri ve çözümleri",
        "Bir yazılım mühendisinde olması gereken 11 davranışsal özellik, soru örnekleri ve cevapları",
        "Yazılım mühendisliği rolleri ve sorumlulukları, başvurulacak şirketi ve pozisyonu belirleme ve etkili CV hazırlama",
        "Davranışsal özelliklerinizi karşınızdakine en iyi şekilde ifade etme",
        "Mülakatlarda dikkat etmeniz gerekenler, mülakat öncesinde, esnasında ve sonrasında sık yapılan hatalar."
      ],
      "course_content": {
        "Giriş": [
          "Derse Giriş",
          "Mülakatlara neden özel olarak hazırlanmalısınız?",
          "Genel Hatlarıyla Mülakat Süreci"
        ],
        "Başvuruya hazırlık": [
          "CV Hazırlama",
          "Yazılım Mühendisi Rolleri ve Sorumlulukları",
          "Başvuracak şirketi ve pozisyonu belirlemek",
          "Başvuru"
        ],
        "Davranışsal Sorulara Hazırlık": [
          "STAR Yaklaşımı",
          "Müşteri Odaklılık",
          "STAR Yaklaşımı Testi",
          "Sahiplenme",
          "Müşteri Odaklılık Yetkinliği Ödevi",
          "Sahiplenme Yetkinliği Ödevi",
          "Yaratıcılık ve Basitleştirme",
          "Yaratıcılık ve Basitleştirme Yetkinliği Ödevi",
          "Doğru Karar Verme",
          "Doğru Karar Verme Yetkinliği Ödevi",
          "Gelişime Açık ve Meraklı Olma",
          "Gelişime Açık ve Meraklı Olma Yetkinliği Ödevi",
          "Mentorluk",
          "Mentorluk Yetkinliği Ödevi",
          "Kalitede Israrcı Olma",
          "Kalitede Israrcı Olma Yetkinliği Ödevi",
          "Büyük Düşünme",
          "Büyük Düşünme Yetkinliği Ödevi",
          "Proaktif olma",
          "Proaktif Olma Yetkinliği Ödevi",
          "Güven Kazanma",
          "Güven Kazanma Yetkinliği Ödevi",
          "İtiraz Etme/Ortak Karara Uyma",
          "İtiraz Etme/Ortak Karara Uyma Yetkinliği Ödevi"
        ],
        "Teknik Mülakatın Ana Hatları": [
          "Teknik Sorulara Hazırlanırken nelere dikkat etmeliyiz",
          "Teknik Mülakatların Ana Hatları",
          "Adım-1: Temel Seviye Algoritma Bilgisi",
          "Adım-2: Geliştirilen Algoritmayı Ölçeklendirme",
          "Adim-3: Karmaşık Algoritma Geliştirme",
          "Adım-4: Programlama Yaklaşımı ve Modüler Tasarım Yeteneği",
          "Adım-5&6: Sistem Seviyesi Tasarım Yeteneği ve Mimari Kavramlar",
          "Adım-7: Yazılım Mühendisliği Kavramları",
          "Adım-8: Görüşülen Pozisyona Özel Sorular",
          "Adım-9: Geçmiş tecrübeniz ile ilgili sorular"
        ],
        "Veriyapıları ve Algoritma Sorularına Hazırlık": [
          "Giriş & Dikkat Edilmesi Gereken Temel Kurallar",
          "Algoritma Karmaşıklığı",
          "Algoritma Karmaşıklığı Testi",
          "Arama ve Sıralama Algoritmaları",
          "Arama ve Sıralama Algoritmaları Ödevi",
          "Özyineli (Recursive) Algoritmalar",
          "Özyineli Algoritmalar - Kodlama Ödevi #1",
          "Özyineli Algoritmalar - Kodlama Ödevi #2",
          "Dinamik Programlama",
          "En uzun alt sıralı dizi (Longest Common Subsequence)",
          "Dizi (Array)",
          "Bağlı Liste (Linked List)",
          "Map",
          "Yığıt (Stack)",
          "Kuyruk (Queue)",
          "Ağaç (Tree) - Genel Kavramlar ve Terminoloji",
          "Ağaç Gezinme (Tree Traversal) Algoritmaları",
          "İkili Ağaçlar (Binary Tree)",
          "Yığın (Heap)",
          "Çizge (Graph)"
        ],
        "Mülakat Örnekleri": [
          "1.Oturum - Tanışma ve Davranışsal Mülakat",
          "2.Oturum - Algoritma Mülakatı",
          "3. Oturum - Nesneye Yönelik Tasarım Mülakatı"
        ],
        "Mülakatlarda Yapılan Hatalar ve Dikkat Edilmesi Gerekenler": [
          "Online Mülakatlarda Dikkat Edilmesi Gerekenler",
          "Mülakat Öncesinde Yapılan Hatalar",
          "Mülakat Esnasında ve Sonrasında Yapılan Hatalar"
        ],
        "Kapanış": [
          "Mülakatlara Hazırlanırken Faydalanılması Gereken Kaynaklar ve Kapanış"
        ]
      },
      "requirements": [
        "Temel Programlama Bilgisi"
      ],
      "description": "Biz Kimiz?\nBinlerce CV incelemiş, yüzlerce mülakat yapmış ~20 yıl tecrübeli iki uzman olarak; yurtiçi/yurtdışı yazılım ve bilgisayar mühendisliği mülakatları ile ilgili tecrübelerimizi, mülakatlarda kullanabileceğiniz teknik ve ipuçlarını kursta topladık. Canlı mülakat örneklerini üzerinden yorumlarımızla uygulamalı olarak anlattık.\nBu kurs ile neler öğreneceksiniz?\nCV'nizi etkileyici bir şekilde hazırlamayı,\nBaşvuracağınız şirketi ve pozisyonu doğru seçmeyi,\nGoogle, Amazon, Apple gibi şirketlerin ve ülkemizde büyük bir çok şirketin uyguladığı mülakat süreçleri ve aşamalarını,\nBir yazılım mühendisinde olması gereken 11 davranışsal özelliği,\nDavranışsal özelliklerinizi karşınızdakine en iyi şekilde nasıl ifade edebileceğinizi,\nDavranışsal mülakatlarda karşılaşabileceğiniz soru örneklerini,\nTeknik mülakatlarda karşılaşacağınız veri yapıları ve algoritmalar ile ilgili konu anlatımı ve mülakatlarda yaygın olarak sorulan örnek soru tipleri ve çözümlerini, algoritma karmaşıklığı, özyineli algoritmalar, dinamik programlama ve yazılım mühendisliği temelleri gibi konuları,\nMülakatlarda dikkat etmeniz gerekenleri,\nMülakatlarda yapmamaya dikkat etmeniz gerekenleri\nMülakat canladırmalarıyla,\nGerçeğine çok yakın mülakat oturumlarını gözlemleyecek,\nYorumlarımızla adayın mülakattaki doğru yaklaşımlarını,\nİyileştirebilecek yaklaşımları,\nDaha başarılı bir sonuç için yapabileceklerini öğreneceksiniz\nDavranışsal mülakatlara hazırlık ödevleriyle,\nÖdevleri kendi tecrübelerinize göre tamamladıktan sonra kendi davranışsal karnelerini oluşturmuş olacaksınız.\nOrtaya çıkan davranışsal karne, mülakatlarda hazır kullanılabilecek örnekler içereceğinden mülakatlardan önce bu karneye göz atarak tekrar yapabileceksiniz.\nDavranışsal karnelerini inceleyerek, hangi alanda eksikliğiniz olduğunu tespit edebilecek, buna göre zayıf yönlerini geliştirmeye odaklanabileceksiniz.\nÖrnek cevapları inceleyerek kabul gören davranış ve yaklaşımları öğrenebilecek, kariyeriniz boyunca karşınıza çıkacak problemlere içgüdüsel olarak değil de daha sistematik yaklaşmayı öğrenceksiniz.\nÖzellikle henüz mezun olmamış öğrenciler veya meslek hayatına yeni atılmış mühendisler bu soruların hepsine bu aşamada cevap veremeyebilir, örnek cevapları inceleyerek davranışsal yönlerinizi geliştirmek için nelere dikkat etmeniz gerektiğini öğreneceksiniz.\nMülakatlarda tecrübelerinizi kısa zamanda en etkin biçimde anlatma yöntemi olan STAR (Situation, Task, Action, Result) yaklaşımının kullanımını göreceksiniz.",
      "target_audience": [
        "Yurtiçi / Yurtdışında yazılım alanında mülakata girecek olan profesyoneller",
        "Mezun olduklarında yazılım alanında çalışmak isteyen Bilgisayar, Yazılım, Bilişim Sistemleri, Elektronik Mühendisliği vb. bölüm öğrencileri",
        "Farklı bölümlerden mezun olup yazılım alanında kariyer yapmak isteyen adaylar",
        "Farklı rollerde çalışıp yazılım mühendisliğine geçiş yapmak isteyen profesyoneller"
      ]
    },
    {
      "title": "Site Reliability Engineering",
      "url": "https://www.udemy.com/course/site-reliability-engineering/",
      "bio": "Building Reliable, Scalable, and Resilient Systems at Scale",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic Understanding of Linux and Command Line Tools: Learners should have a foundational knowledge of Linux environments and be comfortable using command-line interfaces to navigate and manage systems. Familiarity with Programming or Scripting Languages: A working knowledge of programming or scripting languages such as Python, Go, or Bash is important for automating tasks and writing system tools. Knowledge of DevOps Concepts and Tools: Students should be familiar with basic DevOps practices such as CI/CD, version control (e.g., Git), and infrastructure automation tools to fully grasp SRE principles and techniques."
      ],
      "description": "The Site Reliability Engineer (SRE) course offers a comprehensive introduction to the discipline that bridges software engineering and IT operations. Developed by Google, the SRE approach focuses on building scalable and highly reliable software systems. This course equips learners with the essential skills and knowledge needed to automate infrastructure management, monitor system health, and ensure the reliability and performance of applications in production environments.\nUse the link in the video to gain access to the full course, quiz and other advance courses.\nLearners will explore key SRE concepts such as Service Level Indicators (SLIs), Service Level Objectives (SLOs), and Service Level Agreements (SLAs). The course dives into incident response management, postmortem analysis, alerting strategies, error budgets, and change management. Participants will also gain hands-on experience with tools used in observability, monitoring, CI/CD automation, and infrastructure as code (IaC).\nBy the end of the course, students will be equipped to work in roles that require a strong understanding of how to balance operational responsibilities with development velocity, using automation and measurable reliability as guiding principles. This course is ideal for DevOps engineers, system administrators, software developers, and anyone looking to transition into an SRE role.\nWhat will i learn?\nImplement and Maintain Reliable Systems: Learners will be able to apply SRE principles to design, deploy, and maintain highly available and resilient systems in production environments.\nAutomate Operational Tasks: Students will gain skills to automate infrastructure management, monitoring, and incident response using tools like Prometheus, Grafana, and scripting languages.\nMonitor, Measure, and Improve System Performance: Participants will learn to set service level objectives (SLOs), track system health metrics, and implement effective monitoring strategies to ensure performance and reliability.\nRequirements\nBasic Understanding of Linux and Command Line Tools: Learners should have a foundational knowledge of Linux environments and be comfortable using command-line interfaces to navigate and manage systems.\nFamiliarity with Programming or Scripting Languages: A working knowledge of programming or scripting languages such as Python, Go, or Bash is important for automating tasks and writing system tools.\nKnowledge of DevOps Concepts and Tools: Students should be familiar with basic DevOps practices such as CI/CD, version control (e.g., Git), and infrastructure automation tools to fully grasp SRE principles and techniques.",
      "target_audience": [
        "Aspiring Site Reliability Engineers (SREs) looking to understand and apply core SRE principles. DevOps Engineers who want to build more reliable, scalable, and production-ready systems. System Administrators transitioning into modern cloud-native environments with reliability responsibilities. Software Engineers aiming to improve the operational stability and observability of their applications. Cloud Engineers or Architects designing fault-tolerant infrastructure. IT Professionals responsible for uptime, incident response, and performance monitoring. Engineering Managers seeking to implement SRE practices within their teams."
      ]
    },
    {
      "title": "Create your own cryptocurrency on Binance Smart Chain",
      "url": "https://www.udemy.com/course/create-your-own-cryptocurrency-on-binance-smart-chain/",
      "bio": "Deploy your own cryptocurrency on the BSC blockchain",
      "objectives": [
        "How to create a cryptocurrency",
        "The Ethereum Blockchain",
        "The Blockchain",
        "ERC-20 tokens",
        "The basics of the Solidity Language",
        "Binance Smart Chain",
        "Binance"
      ],
      "course_content": {},
      "requirements": [
        "All concepts will be explained from basics.",
        "A Windows, Linux or Mac PC/Laptop",
        "Some programming experience (Beginner accepted)"
      ],
      "description": "Welcome in this course called \"Create your own cryptocurrency with on Binance Smart Chain\" !\nIn this course, you will learn how to create your own cryptocurrency on the Binance Smart Chain blockchain!\n\n\nIf you want to learn more about how to write smart contract with Solidity and how to create a cryptocurrency this course will be perfect for you! We will also talk about the blockchain, how to fix the price of a cryptocurrency, and how to deploy a ERC-20 token on the Binance Smart Chain mainnet.\n\n\nThis course will teach you:\n\n- How to create a cryptocurrency with ERC-20 tokens\n- Basics of Solidity\n- The blockchain\n- How to set the price of your cryptocurrency\n- How to use Binance Smart Chain Testnet\n- How to deploy your cryptocurrency on Binance Smart Chain Mainnet\n\nand many more things...\n\n\nThis course will NOT teach you:\n\n- How to become rich by creating a cryptocurrency.\n- How to predict future prices of your cryptocurrency.\n- How to deploy your cryptocurrency on another blockchain than Binance Smart Chain.\n- How to be a good Solidity developer.\n- How to deploy your cryptocurrency on Ethereum Mainnet.\n- How to deploy your cryptocurrency on Polygon Mainnet.\nIf you have any questions about this course you can always send me a private message me here on Udemy. I will be delighted to answer you as soon as possible.\nWhat are you waiting to learn how to create your own cryptocurrency?",
      "target_audience": [
        "Anyone who wants to create a cryptocurrency",
        "Anyone who wants to create an ERC-20 token",
        "Anyone who wants to learn Solidity"
      ]
    },
    {
      "title": "Test Driven Development: Build software with confidence",
      "url": "https://www.udemy.com/course/test-driven-development-build-software-with-confidence/",
      "bio": "Learn how TDD focuses on business requirements, ensures code quality and improves confidence in software development",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Familiarity with concept of testing and basics of Java"
      ],
      "description": "The course is designed to help understand how to practice Test Driven Development (TDD). It is a software development approach that emphasizes thinking or writing tests before implementing a solution.\nThe course covers several key techniques like Obvious Implementation, Triangulation and Replace constants with variables to help apply TDD in a systematic approach. Additionally, there are detailed sections about what is Red Green Refactor cycle and how to best utilize these phases to align with business requirements and to improve the code quality. The course also covers why to practice TDD when there are other existing approaches to software development.\nIt is a short course and focuses primarily on test driven development and not on the very details of testing, like how to write better acceptance tests, integration tests or unit tests. Also the course doesn't get into deep discussions on testing frameworks or tools as such, for example there will be no discussion on different types of assertions or mocking techniques in testing. It is very important to know that the course focus is on test driven development, but to learn specific testing frameworks in specific languages this course is not the right choice.\nIn the end, learners will understand that TDD is a mindset that is worth practicing and how to effectively apply it in day to day software development.",
      "target_audience": [
        "If you are a developer looking for ways to write great tests that capture the intent well and provides confidence on the solution.",
        "If you are a developer looking for opportunities to improve code quality",
        "If you have just started writing unit tests or heard of TDD, this course will help you understand how to practice TDD with multiple techniques.",
        "If you are already practicing TDD or thinking about introducing TDD in your team ? This course has in depth information about multiple techniques that can be used while following TDD and addressess some of the most common questions that arise while following/teaching TDD",
        "This course will not be helpful if you are not familiar with the idea of testing software"
      ]
    },
    {
      "title": "AZ-900 Azure Fundamentals: 500+ Practice Tests 2026",
      "url": "https://www.udemy.com/course/az-900-azure-practice-tests/",
      "bio": "Pass the Microsoft AZ-900 Exam with 500+ Questions and In-Depth Answer Breakdowns",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Ace the Microsoft Azure Fundamentals (AZ-900) Exam with Confidence!\nLaunch your cloud career with the ultimate preparation tool for the Microsoft Azure Fundamentals (AZ-900) certification! This course is designed to ensure you master the AZ-900 exam through six comprehensive practice tests featuring 500 unique, high-quality questions. Unlike other courses, we go beyond simple answers by providing detailed explanations for every answer choice—correct and incorrect—along with an overall summary for each question to solidify your understanding. Perfect for beginners, IT professionals, or anyone aiming to validate their Azure knowledge, this course guarantees exam readiness with a focus on clarity and depth.\nWhy This Course Stands Out:\nExtensive Question Bank: Tackle 500 carefully curated questions across six timed practice tests (50 questions each), covering all AZ-900 exam domains: Cloud Concepts (25–30%), Azure Architecture and Services (35–40%), and Azure Management and Governance (30–35%).\nDetailed Answer Explanations: Each question includes an in-depth breakdown of every answer choice, explaining why options are correct or incorrect, helping you understand key concepts like scalability, Azure services, and governance tools.\nOverall Answer Summaries: Every question comes with a concise summary that ties together the concept, ensuring you grasp the big picture and can apply it to real-world scenarios.\nExam-Aligned Content: Questions mirror the AZ-900 exam’s format, including multiple-choice and scenario-based questions, covering topics like cloud models, Azure Virtual Machines, Microsoft Entra ID, Azure Policy, and cost management.\nScenario-Based Practice: Test your knowledge with practical scenarios, such as optimizing costs for startups or ensuring compliance for regulated industries, reflecting the exam’s real-world focus.\nWhat You’ll Learn:\nCloud Concepts (25–30%): Master the benefits of cloud computing (scalability, elasticity, high availability), deployment models (public, private, hybrid, community), service models (IaaS, PaaS, SaaS, serverless), and shared responsibility through targeted questions and clear explanations.\nAzure Architecture and Services (35–40%): Understand Azure’s core components (regions, availability zones, resource groups), services like compute (VMs, Functions, AKS), networking (VNet, ExpressRoute, Traffic Manager), storage (Blob, Disk, File), identity (Entra ID, RBAC), and analytics (Synapse, AI Services) with detailed answer breakdowns.\nAzure Management and Governance (30–35%): Learn cost management (Pricing Calculator, tags, budgets), governance (Azure Policy, Blueprints, resource locks), deployment tools (Portal, CLI, PowerShell, ARM templates), and monitoring (Azure Monitor, Advisor, Service Health) through comprehensive question analysis.\nExam Strategies: Gain insights into tackling multiple-choice questions, identifying key terms, and managing time effectively with tips embedded in explanations.\nCourse Features:\n6 full-length practice tests with 500 questions (50 per test + Mega Test Bonus), simulating the AZ-900 exam experience\nDetailed explanations for every answer choice, clarifying correct and incorrect options\nOverall answer summaries for each question to reinforce key concepts\nInteractive Q&A with instructor support for clarification\nLifetime access to course updates and new questions\nCertificate of completion to showcase your preparation\nWhy Choose This Course Over Others?\nWith 500 questions—nearly 70% more than competing courses with 300 questions—this course offers unmatched depth and variety. Our detailed explanations for every answer choice and overall summaries set us apart, ensuring you not only memorize answers but truly understand Azure fundamentals. Designed to align perfectly with the AZ-900 exam’s structure, this course provides the most thorough and effective practice available.\nWho This Course Is For:\nBeginners exploring cloud computing or Azure\nIT professionals preparing for the AZ-900 certification\nBusiness analysts or managers seeking foundational Azure knowledge\nAnyone aiming to pass the AZ-900 exam with confidence\nEnroll Now to conquer the AZ-900 exam with the most comprehensive practice tests available! With 500 questions, detailed explanations, and expert insights, you’ll be fully equipped to earn your Microsoft Azure Fundamentals certification and kickstart your cloud journey. Don’t just practice—master Azure today!",
      "target_audience": [
        "Beginners Exploring Cloud Computing",
        "IT Professionals Preparing for AZ-900 Certification",
        "Business Analysts and Managers Seeking Azure Knowledge",
        "Students or Career Changers Transitioning to Cloud Roles"
      ]
    },
    {
      "title": "Design ur code: All Steps before you start writing your code",
      "url": "https://www.udemy.com/course/design-your-code-all-steps-before-you-start-writing-your-code-faster/",
      "bio": "A-Z about, Designing your code",
      "objectives": [],
      "course_content": {
        "Design your Code": [
          "Introduction",
          "Understanding and building Use Case Diagram - Why & How",
          "Building Apis documentation by using Use Case Diagram + Basic of RestApis - H&W",
          "Building Wireframe diagram by using your Use Case diagram & Apis documentation",
          "Creating File structure of project (BE + FE) - by Use Case, Api Doc & Wireframe",
          "Finding the functions of our Files in our Backend & Frontend",
          "Summary & Final Words - Let's meet again"
        ]
      },
      "requirements": [
        "No coding experience request, this is first step to learn programming and coding"
      ],
      "description": "Developing software is a complex process that requires careful planning and documentation. These five documents are essential for any software development project as they provide a clear understanding of the requirements, design, and functionality of the system being developed.\nUse Case Diagram: This diagram is used to describe the interactions between users and the system. It is important to create a use case diagram as it helps to identify the different scenarios in which the system will be used, the actors involved, and the different features that need to be included.\nAPIs Documentation: APIs are essential for modern software development, and documentation for APIs is crucial for developers to understand how to use them. The API documentation should provide clear instructions on how to interact with the APIs and the different endpoints available.\nWireframe Diagram: A wireframe diagram is a visual representation of the user interface of the system being developed. It helps to identify the different components of the interface and how they will interact with each other. This document provides a clear understanding of the user interface and helps to ensure that the design meets the needs of the users.\nFile Structure: The file structure document provides a blueprint of how the different files and directories will be organized in the project. It helps to ensure that the project is well-structured and easy to navigate. This document should include information on where the code files, documentation files, and other resources will be stored.\nFunction Diagram: A function diagram is a graphical representation of the different functions and their interactions in the system being developed. It helps to identify the different modules of the system and how they will interact with each other. This document provides a clear understanding of the functionality of the system and helps to ensure that it meets the requirements.\nIf you have these five documents with you before starting to write the code, it will be much easier for you to develop the software. You will have a clear understanding of what needs to be done, how it needs to be done, and what resources are available to you. This will help you to complete the project faster within the timeline.",
      "target_audience": [
        "Software Development Engineers, Coders, Programmers and Project Managers"
      ]
    },
    {
      "title": "Creating Data Pipelines using AWS & Confluent Kafka Platform",
      "url": "https://www.udemy.com/course/creating-data-pipeline-using-aws-confluent-kafka-platform/",
      "bio": "Hands on course to build Real Time Data streaming pipeline from Confluent, to Lambda to DynamoDB from scratch",
      "objectives": [
        "Get an high level overview of building Data Pipelines using confluent Kafka and AWS services - Lambda, DynamoDB",
        "Be able to build End to End Real time streaming Data Pipeline using AWS + Confluent Platforms",
        "Build understanding of popular AWS services like Lambda, DynamoDB, IAM, Cloudwatch",
        "Hands on practice with streaming data from Confluent Kafka all the way to Database on AWS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Real Time Streaming Cloud Native Data Pipeline Architecture"
        ],
        "Confluent Cloud Account Setup": [
          "Setup Confluent.io cloud Account",
          "Test your knowledge: Confluent Overview"
        ],
        "Review Cluster on Confluent & Create Topic": [
          "Confluent - Create Topic & API Key",
          "Test your knowledge: Confluent Basics (Topic/API Key)"
        ],
        "Create Data Gen Source Connector and load the Confluent Topic": [
          "Create Data Gen Source Connector, load Topic & validate",
          "Test your knowledge: Confluent Connectors"
        ],
        "Create & Setup AWS Account": [
          "Create & Setup AWS Account"
        ],
        "Create Lambda Function & Connect to Confluent Topic": [
          "Initial Lambda Setup, Test & Cloudwatch Exploration",
          "Setup Lambda-Confluent connection (ESM), use Secrets Mgr & IAM role",
          "Test Data flow from Confluent source connector to Topic to AWS Lambda Function"
        ],
        "Parse event using Python Lambda code & write to CloudWatch Logs": [
          "Parse event & write Data elements to Cloudwatch",
          "Parse & Extract data from JSON - Simple",
          "Parse & Extract data from JSON - Mid Complexity",
          "Parse & Extract data from JSON - Complex - Array of json elements"
        ],
        "Create DynamoDB Table & Update Lambda function code to insert data into it": [
          "Create Dynamo DB table & Explore NoSQL Capabilities",
          "Update Lambda function to insert incoming data to DynamoDB table"
        ],
        "Run the Data Pipeline End to End & Verify": [
          "Run the Data Pipeline End to End and Validate all steps!"
        ],
        "Summary & Wrap Up!": [
          "Summary & Wrap up!"
        ]
      },
      "requirements": [
        "No programming experience needed, Be able to create free tier AWS and Confluent accounts for hands on practice"
      ],
      "description": "In this hands-on, project-based course, you’ll learn how to build a cloud-native, real-time streaming data pipeline using the powerful combination of Confluent Kafka and AWS services. Designed for developers, data engineers, and technology leaders, this course takes you step-by-step through the creation of a fully functional data pipeline — from sourcing to storage — leveraging some of the most in-demand technologies in the cloud ecosystem.\nYou’ll start by setting up free-tier accounts on both Confluent Cloud and AWS. From there, you’ll build and configure a Kafka cluster, create topics, and use connectors to manage data flow. On the AWS side, you’ll create and configure AWS Lambda functions (Python 3.10+) to consume messages from Kafka topics, parse them, and insert them into a DynamoDB table.\nBy the end of the course, you will have completed an end-to-end, event-driven architecture with real-time streaming capabilities. We’ll also walk through how to monitor and verify your pipeline using CloudWatch Logs, and responsibly clean up your resources to avoid unnecessary charges. This course will help build confidence on starting to use other AWS and Confluent services and build real time streaming applications in your future or current job role. As a Leader this course will help jump start your Cloud thought process and help you understand deeper details on what goes on building cloud native data pipelines.\nWhether you're a beginner, Data Engineer, Solution Architect, Product Owner, Product Manager or a Technology Leader looking to better understand streaming data architecture in action, this course provides both practical skills and architectural insights.\nThis course will help those who are looking to switch careers & will help to add a real life project to their Resume and boost their hands-on AWS Cloud Technical & Architecture skills. This Course will help participants upskill themselves by understanding nuances up close, of cloud native real time streaming data pipeline data pipeline setup, its issues, risks, challenges, benefits & shortcomings.",
      "target_audience": [
        "Beginner Cloud Developers looking to build AWS + Confluent Kafka Skills",
        "Entry Level Cloud & Data Engineers looking for a Real Life Project to add to their Resumes",
        "Mid Level and Sr. Data Engineers who are looking to enhance their skills in Confluent + AWS Platform areas",
        "Product Owners and Product Managers looking to understand capabilities of the Confluent + AWS 's Real Time Streaming Platforms",
        "Technology Leaders looking to understand Capabilities, Shortcomings, efforts it takes to build Real Time Data Streaming Pipeline"
      ]
    },
    {
      "title": "Learn IBM Cloud [BlueMix]",
      "url": "https://www.udemy.com/course/learn-ibm-cloud-bluemix/",
      "bio": "Get started learning about IBM Cloud [BlueMix]",
      "objectives": [
        "How to setup a cloud environment on IBM",
        "How to assign permissions to developers working on IBM Cloud",
        "How to deploy a website using IBM Cloud",
        "Deploy Databases on IBM Cloud",
        "Use IBM Watson to implement chatbots in Websites",
        "Deploy a messaging Queue using IBM MQ",
        "Integrate IBM Watson with Slack",
        "Function as as a service in IBM",
        "What is cloud computing"
      ],
      "course_content": {},
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "You must setup a free or a paid account on IBM Cloud"
      ],
      "description": "Welcome to this IBM Cloud Course\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in IBM Cloud.\nIn this course you will Learn by example, where we demonstrate all the concepts discussed so that you can see them working, and you can try them out for yourself as well.\nMy step-by-step training will initiate you into the world of IBM Cloud.\nIBM cloud is a next generation hybrid multi-cloud platform. Along with the general benefits of the cloud [scalability and security] it provides over 170 products and services. These include things like cloud based databases, CLI tools, Cloud Storage, Containers, Computational power etc. In this course we deep dive into these developer friendly services!\nWhy Learn IBM Cloud?\nAnother Question: Which cloud platform should you use to transform your business workflow using automation and AI? How do you take advantage of all the capabilities of DevOps for faster deployments in todays day and age? All this while maintaining security, compliance and governance.\nIBM Cloud will help you in all stages of Software Delivery. From Data Storage to Data visualization, IBM Cloud is there for you. IBM can leverage  tools in the Cloud suite like IBM Watson, Cloud Foundry and DB2. Pinpoint all issues during data delivery and setup monitors and alarms to track the pipeline. Use IBM Cloud to visualize and create your messaging pipelines using IBM MQ. Finally, by integrating all your data sources, you can use IBM Cloud to optimize your data visualization process. This is done by creating interactive dashboards, monitors and widgets in IBM Cognos and other 3rd party tools. IBM Monitoring helps us monitor all our metrics and logs. Email and Slack Alerting notify you of any upcoming issues.\nDuring this course we will start by covering a range of concepts from an introduction to what a Cloud Platform is, to Cloud Foundary, to Functions as a service and IAM. We will then do a step by step guide of creating a Watson Chatbot, and we also see how to integrate it with other third party tools like Slack. Finally we take a look at some real life examples to study where and how IBM Cloud can help us. We ensure you learn the best practices at all times.\nBy the end of the course you will have set up and learnt to manage a IBM Cloud like a pro.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Software Developers who want to understand how to setup and migrate to IBM Cloud",
        "DevOps Engineers",
        "System Reliability Engineers",
        "Anyone interested in how to use IBM Cloud for Application Delivery/ChatBot creation/Databases etc."
      ]
    },
    {
      "title": "XML | Short Course | Step by Step for Beginners",
      "url": "https://www.udemy.com/course/xml-step-by-step-for-beginners/",
      "bio": "DOM, Namespace, XPath, XSLT, XSD | learn XML basics from scratch | useful in API Testing OR any XML based projects",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "******You do not need any prior knowledge***** All lectures are prepared to take you from scratch",
        "Non programming users can follow and learn from this course",
        "You will have life time access",
        "All basic setup and prerequisites are taken care in this course"
      ],
      "description": "This course is created for complete beginners.\nGet started with XML step by step\nThis course is created for complete beginners. If you like to learn and understand XML from scratch, this course is for you.\nIf you are working with XML requests, messages, or files in any project or platform like API Testing, this will create a firm foundation for you to deal with any kind of XML data.\nIn this session, we will learn\nWhat is XML\nXML Syntax\nXML Namespace\nDOM\nXPath\nXSLT\nXSD - XML Schema\n\n\nBy the end of this course, you will be able to understand the complete basics of XML\nComplete knowledge on how an XML works\nComplete knowledge on XPath, XSLF, XML Schema\n\n\n******You do not need any prior knowledge*****\nAll lectures are prepared to take you from scratch\nNon-programming users can follow and learn from this course\nYou will have lifetime access\nAll basic setup and prerequisites are taken care in this course\n\n\nYou can follow along with the session along with hands-on\nI will show you simple examples and animations to understand XML\nAll practical hands-on demo and sessions are included in this course\nDo not worry if you have never worked with XML earlier, Let's start on this awesome journey to learn XML\n\n\nYou can get all my FREE tutorials on my website AutomationStepByStep\nLet's Get Started...\nNever Stop Learning\nRaghav Pal",
      "target_audience": [
        "Anyone who wants to learn XML from scratch",
        "Anyone using XML in any project or API related processes like testing etc",
        "Users for SOAP API testing with XML format"
      ]
    },
    {
      "title": "How to Boost Your Tech Career with Essential Soft Skills",
      "url": "https://www.udemy.com/course/how-to-boost-your-tech-career-with-essential-soft-skills/",
      "bio": "Master Essential Soft Skills to Boost Your Developer Career",
      "objectives": [
        "Enhance Communication Skills: Learn to explain complex ideas clearly and write structured documentation",
        "Improve Teamwork: Develop effective collaboration, constructive feedback, and conflict resolution skills",
        "Master Time Management: Learn how to prioritize tasks, manage deadlines, and avoid procrastination",
        "Develop Problem-Solving Skills: Improve critical thinking, adapt to feedback, and find better solutions",
        "Boost Presentation Skills: Gain confidence in presenting ideas to teams, clients, and during interviews",
        "Build Career Growth and Personal Branding: Learn to craft a professional image and prepare for interviews",
        "Create a Continuous Improvement Plan: Develop a personalized plan for ongoing soft skills development throughout your career"
      ],
      "course_content": {},
      "requirements": [
        "No prior skills are required for this course. Whether you’re a beginner or an experienced developer, this course is designed to help you enhance your soft skills from the ground up. All you need is a willingness to learn and apply the strategies for better communication, teamwork, time management, and career growth."
      ],
      "description": "This course is designed to help developers enhance the critical soft skills that are essential for success in today’s fast-paced tech industry. While technical expertise is vital, it is the ability to communicate, collaborate, and manage time effectively that often separates top performers from the rest. By mastering these skills, you’ll be able to take your career to the next level and stand out in any development environment.\n\n\nThroughout the course, you will learn how to explain complex technical ideas in simple terms, improving your ability to collaborate with non-technical stakeholders and fellow developers. You will also develop effective communication skills to write clear, structured documentation and deliver presentations with confidence.\n\n\nWorking in a team is an essential aspect of development, and this course will teach you how to give constructive feedback, handle conflicts, and build positive working relationships. You’ll learn time management techniques to help you prioritize tasks, meet deadlines, and stay productive without feeling overwhelmed.\n\n\nThe course also focuses on building problem-solving and critical thinking skills, which are essential for handling challenges and adapting to change. You will gain the confidence to present your ideas, participate in interviews, and build a strong professional presence.\n\n\nBy the end of the course, you will have the tools to not only succeed in your current role but to advance in your career and thrive in the competitive tech industry.",
      "target_audience": [
        "1. Beginner and experienced developers: Those who want to improve their soft skills for career growth and team effectiveness. 2. Developers seeking to improve communication with colleagues and clients: Learners who want to communicate more clearly and confidently with both technical and non-technical people. 3. Professionals preparing for job interviews: Developers looking to present themselves and their ideas confidently during interviews and advance in their careers. 4. Developers working in Agile or team-based projects: Learners who want to become more effective in teamwork, provide constructive feedback, and resolve conflicts. 5. Those wanting to improve personal productivity: Developers who aim to master time management techniques and avoid procrastination to increase their productivity. 6. Students and recent graduates in IT: Those starting their careers in development who want to develop additional skills that will help them adapt quickly and build a successful career."
      ]
    },
    {
      "title": "Simple Blogging Analytics Dashboard in Python",
      "url": "https://www.udemy.com/course/simple-blogging-analytics-dashboard-in-python/",
      "bio": "Build a small data pipeline in Python by scraping a blog.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Be able to program using Python",
        "Understand how web development works"
      ],
      "description": "This video series will walk through building a simple blogging analytics dashboard in Python.\n\n\nHere is a synopsis of each video:\nTalks about the project and data pipeline\nTalks about web scraping basics\nShows how to scrape one blog article\nShows how to scrape all the blog articles in one category\nShows how to scrape all the blog articles in all the categories\nShows how to compute basic analytics\nShows basic design and front-end development\nShows how to setup a Flask sever\nShows how to deploy the app to Heroku\nExplores further improvements to the pipeline\n\n\nEverything in the project is done manually to show the steps between. I plan to upload a 2nd version that shows how to automate the entire pipeline.",
      "target_audience": [
        "Beginner to advanced software developers interested in data engineering"
      ]
    },
    {
      "title": "AIパーフェクトマスター講座 -Google Colaboratoryで隅々まで学ぶ実用的な人工知能/機械学習-",
      "url": "https://www.udemy.com/course/ai-master/",
      "bio": "ディープラーニングを中心に、AI技術を包括的に身に付けるためのコースです。画像識別や画像生成、RNNや強化学習などの有用な人工知能技術を幅広く学び、人工知能Webアプリの構築までを行います。開発環境にはGoogle Colabを使用します。",
      "objectives": [
        "本格的かつ包括的な人工知能/機械学習の知識を学びます。",
        "AIを使った問題解決力が身につきます。",
        "Pythonで機械学習のコードを書く力が身につきます。",
        "機械学習の背景にある理論を学びます。",
        "人工知能アプリを構築し、公開できるようになります。",
        "G検定、E資格への対策にもお勧めです。"
      ],
      "course_content": {},
      "requirements": [
        "高校数学以上の数学力が一部のレクチャーで必要です。",
        "何らかのプログラミング経験があった方が望ましいです。",
        "人工知能/機械学習を学ぶモチベーション。"
      ],
      "description": "本コースは、ディープラーニングを中心にAI技術を包括的に身に付けるためのコースです。\n様々な人工知能の技術を順を追って幅広く習得し、人工知能を搭載したWebアプリの構築までを行います。\n開発環境であるGoogle Colaboratoryやプログラミング言語Pythonの解説から本コースは始まりますが、セクションが進むにつれてCNNやRNN、生成モデルや強化学習、転移学習などの有用な人工知能技術の習得へつながっていきます。\nAIを広く学び、皆さんが抱えている問題を解決できるようになりましょう。\n\n\n開発環境にはGoogle Colabを利用するので、環境構築にはほとんど手間がかかりません。\nGPUが無料で利用できるので、コードの実行時間も短縮できます。\n効率よく人工知能技術を習得できるように、本コースは様々な工夫を凝らしています。\n\n\nAI技術は、今後の世界に最も影響を与える技術の一つです。\n様々な領域を領域横断的につなげる技術でもあり、どの分野の方であってもこの技術を習得することは無駄にはなりません。\n新しい時代に進むために、一緒に楽しく本格的な人工知能を学んでいきましょう。\n\n\n————————————————————\n本コースの主な内容は以下の通りです。\n教材の一部は、他のコースと重複する場合があります。\n\n\n開発環境\n→ 開発環境であるGoogle Colaboratoryについて詳しく解説します\n\n\nPythonの基礎\n→ プログラミング言語Pythonの基礎、及びNumPy、matplotlib、Pandasの基礎について学びます\n\n\n簡単なディープラーニング\n→ フレームワークKerasを使い、ゼロからコードを書いて簡単なディープラーニングを実装します\n\n\nディープラーニングの理論\n→ バックプロパゲーションを中心に、ディープラーニングの理論を学びます\n\n\n様々な機械学習の手法\n→ ディープラーニング以外の様々な機械学習の手法を学びます\n\n\n畳み込みニューラルネットワーク（CNN）\n→ CNNの原理を学んだ上で、CNNによる画像分類を実装します\n\n\n再帰型ニューラルネットワーク（RNN）\n→ シンプルなRNNからはじめて、LSTM、GRUを学び自然言語処理に応用します\n\n\n生成モデル -VAE-\n→ 変文オートエンコーダ（VAE）による画像の圧縮と復元について、原理を学んだ上で実装します\n\n\n生成モデル -GAN-\n→ 敵対的生成ネットワーク（GAN）による画像の生成について、原理を学んだ上で実装します\n\n\n強化学習\n→ 報酬を最大化するように学習する強化学習について、原理を学んだ上で実装します\n\n\n転移学習\n→ ある領域で学習させたモデルを別の領域に適応させる、転移学習を実装します\n\n\n人工知能アプリの開発\n→ ここまでに学んできた内容をベースに、学習済みモデル活用したWebアプリを構築します\n————————————————————\n\n\n本コースでは可能な限り丁寧な解説を心がけていますが、ある程度ご自身で調べることも必要になるのでご注意ください。\n動画を見るのみでも学習が進められるようになっていますが、可能であればPythonのコードを動かしながら進めることをお勧めします。\nコードがダウンロード可能ですので、これをベースに様々なカスタマイズを行うこともお勧めです。\n様々な人工知能技術を学び、AIが秘めている可能性を発見しましょう！",
      "target_audience": [
        "人工知能/機械学習に強い関心のある方",
        "実務で機械学習を使いたい企業の方",
        "専門分野で人工知能を応用したい研究者の方",
        "G検定、E資格の取得に興味のある方"
      ]
    },
    {
      "title": "API REST Nodejs desde cero usando MongoDB o MySQL",
      "url": "https://www.udemy.com/course/api-rest-nodejs-desde-cero-usando-mongodb-o-mysql/",
      "bio": "¿Cómo crear una API REST Nodejs usando MongoDB o MySQL? Incluye pruebas de integración (Testing)",
      "objectives": [
        "Aprenderás a construir una API Rest en Node desde cero aplicando paradigmas de la programación, utilizando rutas, modelos, controladores, cargas de archivo",
        "Preparas todo tu entorno de desarrollo con la instalación de NODE en windows, visual Studio Code, Git, también trabajaremos base de datos de MONGO en Atlas",
        "Realizaremos pruebas de integración con Jest",
        "Aprenderás a realizar (CI/CD) despliegue continuo e integración continua",
        "Aprenderás a crear API REST Node con TypeScript",
        "Documentar tu API con Swagger",
        "Validar datos en un API REST"
      ],
      "course_content": {},
      "requirements": [
        "JavaScript",
        "TypeScript",
        "GIT"
      ],
      "description": "La aparición de Node.js ha supuesto toda una revolución en el mundo de JavaScript.\nNode.js es uno de los lenguajes de programación más populares del mundo. Hoy en día, impulsa millones de sitios web, sin embargo esto no es lo único.\nSi hay algo que está creciendo a pasos agigantados es el desarrollo de APIs\nTe invito formar parte de este nuevo curso  API REST Nodejs desde cero usando MongoDB o MySQL en Udemy donde  aprenderás a construir una API Rest en Node desde cero aplicando paradigmas de la programación, utilizando rutas, modelos, controladores, cargas de archivo  solo debes tener el tiempo y disposición recuerda que puedes revisar el temario de todo lo que se explicara.\n\n\nIMPORTANTE:\n- Mi manera de explicar es espontanea con mis propias palabras y me gusta que se aprenda con la practica.\n- Las primeras horas de este curso las puedes encontrar gratuitas en mi canal de youtube (Leifer Méndez) eso lo hice con la finalidad de que puedas ver mi manera de explicar, ten en cuenta que en UDEMY encontrarás los módulos completos necesarios para la culminación de este proyecto. En Youtube no está el curso completo solo un adelanto.\n\n\nQue aprenderás en el curso:\nIntro de Curso de Node\nIntro ¿Qué esperar en este curso?\nPreparando entorno\n¿Cómo instalar Node en Windows?\nInstalar Visual Studio Code Windows\nInstalar GIT en Windows\nCrear base de datos en Mongo Atlas gratis\nCreando usuario de base datos Mongo Atlas\nFirewall permitir cualquier IP en Mongo Atlas\nObtener DB_URI url mongodb\nIniciando Proyecto (Instalar dependencias)\nIniciando un proyecto NODE\n¿Cómo instalar express en node?\nInstalar dovtenv y multer\ngitignore\nCreando Aplicacion Express\nEvitar error de los Cors NODE\nCreando Variables de Entorno (.env)\nScaffold (Estructura de carpetas)\nPatrón MVC Modelo Vista Controlador\nInstalar mongoose en node\nCreando conexión con MongoDB\nDeclarando DB_URI mongodb\nDefiniendo modelo mongoose\nMongo Schema\nCrear rutas en node express\nCargando rutas dinámicamente express\nREQUEST, RESPONSE Express\nIndex Router (Rutas dinámicas)\nCreando alias script \"start\", \"dev\"\nControladores\nCargando modelos\nObteniendo datos POST (Body)\nCargar archivo mp3 pdf en express node\nConfigurando Multer Node express\nConfigurando Multer express\nObteniendo archivo en el controlador\nPostman API Node\nComo validar datos en un API REST\nCreando validador POST\nDocumentar con POSTMAN\nComo validar datos en un API REST\nCreando validador POST\nColocando middleware validator\nComo subir un mp3 en node express\nComo crear un middleware en node y express\nCódigo de respuesta de encabezado\nCreando un manejador de errores\nUsando express-validator\nSoft Delete eliminación lógica\nEliminar archivo en node unlink\nJWT (Json Web Token)\nComo generar un jwt en node\nComo hacer login en node con jwt y proteger ruta\n¿Cómo proteger rutas con roles (permisos)? en node\nTrazabilidad de Errores de backend con SLACK\nUsando MySQL Sequezlize en node\nCreando modelos sequelize en node\nAplicando métodos personalizados Sequelize\nCrear join en mongo lookup\nCrear join en sequelize\nIniciando nuestra aplicación en TypeScript\nAprendiendo la importación dinámica de TypeScript\nCompilando nuestra aplicación",
      "target_audience": [
        "Interesado en el mundo del backend que buscan crear una API REST utilizando paradigmas de la programación y testing",
        "Desarrolladores interesados en iniciar o reforzar sus conocimientos en el Backend"
      ]
    },
    {
      "title": "Design Patterns Quick Guide: Interview-Ready Mastery",
      "url": "https://www.udemy.com/course/concise-design-patterns-interview-mastery/",
      "bio": "Efficiently Navigate Interviews and Master Design Patterns with this course",
      "objectives": [
        "Fundamental design patterns and their key concepts",
        "Refactor existing System to use design patterns",
        "Interview ready skills on Design Patterns",
        "Build maintainable and extensible systems"
      ],
      "course_content": {},
      "requirements": [
        "Fundamental knowledge of at least one Object-Oriented Programming language.",
        "Basic understanding of Object-Oriented Design Principles"
      ],
      "description": "Ready to ace system design interviews and enhance your coding prowess? Dive into our \"Design Patterns Quick Guide: Interview-Ready Mastery\" course.\nElevate your coding expertise swiftly with our course. Whether you're gearing up for system design interviews or eager to enhance your coding efficiency, this course offers a streamlined and practical approach to mastering design patterns.\nIn this course, we prioritize efficient learning, providing you with a fast-track guide to understanding and applying key design patterns. Geared specifically towards system design interviews, you'll gain valuable insights and hands-on experience, ensuring you're well-prepared for the challenges of real-world coding scenarios.\nWhat sets this course apart is its practicality. You won't just learn theoretical concepts; you'll immediately apply design patterns to solve coding challenges. The curriculum covers all the essential patterns such as Singleton, Factory Method, and Observer etc. , enabling you to create scalable and maintainable code.\nBenefit from the expertise of seasoned developers who share industry-tested tips and strategies. Whether you're a software developer preparing for interviews or a coder looking to refine your problem-solving skills, this course is designed to propel your coding abilities to new heights.\nJoin us on this journey to interview-ready mastery. Enroll now and empower yourself with the skills needed to excel in system design interviews and beyond.",
      "target_audience": [
        "Beginner and experienced developers",
        "Developers preparing for System Design interviews",
        "Anyone interested in design patterns"
      ]
    },
    {
      "title": "Dynamo para Revit - Do 0 ao avançado para ser + produtivo",
      "url": "https://www.udemy.com/course/dynamo-para-revit-todo-o-essencial-do-0-ao-intermediario-e/",
      "bio": "Domine o poder da automação e aumente sua produtividade com o Revit trabalhando de forma rápida e inteligente.",
      "objectives": [
        "Você conhecerá toda a interface do programa Dynamo e como navegar nela.",
        "Aprenderá a inserir os primeiros nós e como criar rotinas através de múltipla análise de dados.",
        "Conhecerá os conceitos básicos de programação necessários para utilizar o Dynamo de forma inteligente.",
        "Aprenderá a executar operações com dados gerados pelo Dynamo, extraídos de planilhas ou coletados do próprio Revit.",
        "Entenderá como criar, classificar, filtrar e ordenar listas de dados assim como entender o níveis e formas de vincular diferentes listas.",
        "Criará todas as geometrias essenciais dentro do Dynamo, como curvas, superfícies e sólidos e saberá como gerar elementos no Revit a partir dessas geometrias.",
        "Aprenderá a criar paredes, pisos, telhados, colunas, vistas e folhas a partir de uma rotina no Dynamo.",
        "Irá configurar suas rotinas para permitir que um amigo ou colaborador possa utilizá-la mesmo que o mesmo não saiba usar o Dynamo.",
        "Criará rotinas que permitirão que você crie níves, plantas de piso, plantas de forro e folhas de impressão em poucos cliques",
        "Aprenderá a usar o Code Block e se tornará um programador ágil, versátil e experiente dentro do Dynamo"
      ],
      "course_content": {},
      "requirements": [
        "Ter um bom domínio da ferramenta Revit. O ideal é que já tenha executado alguns projetos de pequeno porte."
      ],
      "description": "No curso de Dynamo da NeuroBIM você aprende a utilizar o Dynamo desde a base da inserção do primeiro nó até a modelagem de elementos no Revit com extração e análise de dados através de rotinas inteligentes e automatizadas.\n\n\nDesenvolvido por Engenheiro Civil, com ampla experiência na criação de rotinas utilizando o Dynamo, o curso foi feito para todos que sonham em poder aprender programação visual, mas não possuem um conhecimento prévio para tal. Aqui você receberá todo o passo a passo em detalhes de forma que sua evolução acontecerá de maneira natural e bem rápida.\n\n\nAo longo do curso nós vamos executar vários exercícios de revisão que aos poucos vão abrir sua mente sobre todas as possíveis aplicações do Dynamo ao mesmo tempo que te ajuda a fixar todo o conteúdo aprendido.\n\n\nTodas as atividades usadas no curso são desenvolvidas do zero, onde o professor explica o passo a passo do porque usar cada nó e o que acontece com os dados ao longo da rotina.\n\n\nEsse curso possui um arquivo salvo para cada vídeo aula.  Você sempre pode verificar como está o arquivo do professor após o ensinamento da aula e também pode iniciar o curso a partir da vídeo aula que quiser.\n\n\nNa aquisição do curso você recebe também um manual completo trazendo toda a parte teórica que é explicada ao longo do curso. O manual pode ser baixado em seu computador ou impresso para que você faça suas observações.\n\n\nAs vídeo-aulas são sempre atualizadas com dicas e/ou esclarecimentos sobre as principais dúvidas dos alunos. Nenhum aluno termina o curso com dúvidas em nenhum dos tópicos contemplados no conteúdo programático.",
      "target_audience": [
        "Arquitetos, Engenheiros, profissionais da construção e estudantes que se interessem por programação"
      ]
    },
    {
      "title": "Arquitetura de Microsserviços: Padrão Saga Orquestrado",
      "url": "https://www.udemy.com/course/arquitetura-de-microsservicos-padrao-saga-orquestrado/",
      "bio": "Com Java 17, Spring Boot 3, Apache Kafka, PostgreSQL, MongoDB, Docker e docker-compose!",
      "objectives": [
        "Conceitos, abordagens e estratégias para tratamento de transações distribuídas",
        "Conceitos, abordagens e estratégias para implementação do padrão Saga Orquestrado",
        "Conceitos, abordagens e estratégias para implementação de uma arquitetura orientada a eventos",
        "Implementação de padrão Saga Orquestrado com Java 17, Spring Boot 3 e Apache Kafka",
        "Utilização dos bancos de dados MongoDB e PostgreSQL numa arquitetura Saga",
        "Boas práticas de implementações de padrões em microsserviços",
        "Implementação do Padrão Saga Coreografado (Seção bônus ao final do curso)"
      ],
      "course_content": {
        "Introdução Teórica - Microsserviços, Transações Distribuídas e Padrão SAGA": [
          "Apresentação do curso",
          "Apresentação do projeto: veja toda a parte prática que iremos criar!",
          "Microsserviços: soluções e problemas que acarretam",
          "Transações Distribuídas",
          "Padrão Saga Orquestrado",
          "Padrão Saga Coreografado",
          "Padrão Saga: Saga Execution Controller (SEC) e suas implementações",
          "Padrão Outbox"
        ],
        "Eventos e Apache Kafka: tudo que precisaremos saber": [
          "Conceito de Event-Driven Architecture e eventos no universo de microsserviços",
          "Apache Kafka: o que é?",
          "O que são tópicos, consumers, producers, grupos, offsets e partições?",
          "Idempotência de eventos e consistência de dados",
          "Diferença entre Filas e Tópicos, Apache Kafka e RabbitMQ"
        ],
        "Preparando o ambiente de desenvolvimento": [
          "Visão inicial das ferramentas e dos arquivos base do projeto",
          "Criando o MongoDB e o PostgreSQL no Docker-compose",
          "Conectando as aplicações ao PostgreSQL e MongoDB",
          "Configurando o acesso ao Apache Kafka via application.yml",
          "Mapeando e definindo todos os tópicos da arquitetura saga",
          "Configurando producers e consumers do Kafka via classe KafkaConfig",
          "Configurando a criação automática de tópicos nos serviços",
          "Criando as aplicações no Docker-compose",
          "Subindo a versão inicial com Docker-compose!"
        ],
        "Definindo estruturas em comum entre os microsserviços": [
          "Estruturando os diretórios dos microsserviços",
          "Estruturando as classes DTOs dos microsserviços",
          "Estruturando o utilitário de JSON e configuração de Exception",
          "Criando os producers nas aplicações",
          "Criando os consumers nas aplicações"
        ],
        "Order-Service: microsserviço de geração de pedidos, o que inicia toda a saga": [
          "Mapeando as DTOs e Documents e Repositories do microsserviço",
          "Criando a lógica de geração de um pedido e início da Saga",
          "Criando a lógica de recebimento de notificação de finalização da Saga",
          "Criando os endpoints REST para realizar um pedido (POST) e buscar eventos (GET)",
          "Executando o projeto e testando os endpoints e consumer"
        ],
        "Product-Validation-Service: microsserviço para validar os produtos": [
          "Modelando as classes e entidades de banco de dados",
          "Inserindo os dados iniciais da aplicação",
          "Criando lógica para validar um produto existente",
          "Criando lógica para o rollback de produtos validados na saga",
          "Testando o microsserviço com o Redpanda-Console"
        ],
        "Payment-Service: microsserviço para realizar pagamentos": [
          "Modelando as classes e entidades de banco de dados",
          "Criando as regras para criar um pagamento PENDENTE",
          "Criando lógica para realizar pagamento com SUCESSO",
          "Criando lógica para realizar estorno (rollback)",
          "Testando o microsserviço com o Redpanda-Console",
          "Adendo: ajuste de bug na lógica do estorno (rollback)"
        ],
        "Inventory-Service: microsserviço de inventário/estoque": [
          "Modelando as classes e entidades de banco de dados",
          "Inserindo os dados iniciais da aplicação",
          "Criando a lógica para registrar uma saga para atualização de estoque",
          "Criando lógica para atualizar o estoque com sucesso",
          "Criando lógica para rollback no estoque anterior",
          "Testando o microsserviço com o Redpanda-Console"
        ],
        "Orchestrator-Service: microsserviço Orquestrador da saga": [
          "Criando a classe Saga Handler para lidar com a orquestração dos tópicos",
          "Criando o SEC (Saga Exectution Controller) e toda a lógica da saga",
          "Criando nossa classe responsável pela orquestração (OrchestrationService)",
          "Executando o microsserviço testando toda a lógica via Redpanda Console",
          "Executando toda a arquitetura Saga e testando todo o sistema"
        ],
        "Finalização: analisando a arquitetura desenvolvida e o que continuar estudando": [
          "Analisando o que foi desenvolvido conforme os conceitos teóricos apresentados",
          "Dicas do que continuar estudando sobre padrões de arquitetura de microsserviços"
        ]
      },
      "requirements": [
        "Conhecimento básico em Java 1.8+ e no framework Spring Boot",
        "Conhecimento básico em Docker e docker-compose",
        "Conhecimento básico em API REST e Microsserviços",
        "Conhecimento básico sobre mensagerias e Message Brokers"
      ],
      "description": "Neste curso, serão abordados os conceitos de padrões de desenvolvimento de arquitetura de microsserviços em um de seus quesitos mais importantes: lidar com transações distribuídas e tratamento de falhas.\nIremos abordar os conceitos teóricos por trás de transações distribuídas, two-phase commit protocol (2PC), padrão Saga Orquestrado e Coreografado, e padrão Outbox.\nNeste curso, implementaremos o padrão Saga Orquestrado em uma arquitetura de microsserviços com Java 17 e Spring Boot 3.\nPara isso, utilizaremos Docker e docker-compose para subir toda a nossa arquitetura com facilidade.\nUtilizaremos 2 bancos de dados, PostgreSQL e MongoDB.\nUtilizaremos o Apache Kafka para a comunicação dos eventos e orquestração da nossa saga.\nCriaremos 5 APIs, em que uma será apenas o orquestrador da saga, 3 microsserviços participantes e um microsserviços de realização de pedido.\nAo final deste curso, você compreenderá as diferenças entre os padrões de microsserviços, os conceitos de transações distribuídas, e como realizar tratativa de erros em diversos serviços, assim como sua implementação.\nVocê também estará apto a desenvolver aplicações distribuídas com orientação a eventos (Apache Kafka) e trabalhar com Java 17 e o framework Spring Boot na versão 3, porém, o conteúdo do curso é sobre um padrão de arquitetura, e não sobre uma tecnologia específica, ou seja, com o conhecimento adquirido, você conseguirá aplicar a mesma abordagem em qualquer outra tecnologia que permita o desenvolvimento de microsserviços.\nSEÇÃO BÔNUS\nFoi adicionada a Seção 11 como um bônus, realizando a conversão de toda a arquitetura desenvolvida para o Padrão Saga Coreografado, desta forma, os alunos terão o conhecimento de como implementar as duas abordagens do Padrão Saga, e também compreenderão quando implementar cada abordagem dependendo da necessidade.",
      "target_audience": [
        "Desenvolvedores Back-End (nível intermediário)",
        "Desenvolvedores Java (nível intermediário)",
        "Desenvolvedores que atuam com microsserviços e/ou aplicações distribuídas"
      ]
    },
    {
      "title": "Blockchain & Web3 Interview Prep 2025",
      "url": "https://www.udemy.com/course/blockchain-interview/",
      "bio": "Master Blockchain & Web3 Concepts and Succeed in Interviews with 180+ Practice Questions",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Are you preparing for a Blockchain or Web3 interview in 2025?\nThis course is your complete interview prep companion, packed with 180+ carefully crafted practice questions and detailed explanations. From blockchain fundamentals to smart contracts, DeFi, and advanced cryptography, you’ll cover the exact concepts employers are testing for in real-world interviews.\nWhether you’re targeting roles as a blockchain developer, Web3 engineer, cryptocurrency analyst, DeFi researcher, or blockchain consultant, this course provides the structured practice you need to build knowledge, confidence, and problem-solving skills to stand out in today’s competitive job market.\nWhat You’ll Master\nBlockchain Fundamentals – Distributed ledgers, blocks, transactions, and decentralized networks.\nCryptography & Security – Hash functions, digital signatures, Merkle trees, and cryptographic protocols.\nConsensus Mechanisms – Proof of Work, Proof of Stake, BFT, and other algorithms that secure blockchain networks.\nSmart Contracts & DeFi – Token standards, liquidity pools, governance, yield farming, and Layer 2 scaling solutions.\nIndustry Applications – Real-world use cases in supply chain, healthcare, CBDCs, and the evolving regulatory landscape.\nThis isn’t just a collection of quiz questions—it’s a strategic interview prep system. You’ll progress through beginner, intermediate, and advanced questions designed to simulate real interview environments. Each question is followed by clear explanations so you not only know the right answer, but also understand the reasoning behind it.\nWith 2025-ready content covering the latest in blockchain, Web3, and DeFi, this course is designed to help you confidently handle both technical and conceptual questions in any blockchain-related interview.\nBy the end of this course, you’ll be able to speak fluently about blockchain concepts, explain critical technologies, and approach interviews with the confidence employers expect.\nEnroll today and take the next big step toward your blockchain career success!",
      "target_audience": [
        "Aspiring blockchain developers and engineers preparing for technical interviews."
      ]
    },
    {
      "title": "GitHub Copilot for Java Developers: Code 10x Faster with AI!",
      "url": "https://www.udemy.com/course/github-copilot-for-java-developers-code-10x-faster-with-ai/",
      "bio": "Learn how to code smarter, fix errors instantly, and build Java apps at lightning speed with Copilot AI Assistant!",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Java programming (variables, loops, classes, methods, etc.).",
        "Familiarity with any Java IDE like IntelliJ IDEA, Eclipse, or Visual Studio Code.",
        "A GitHub account (free or paid) to access GitHub Copilot.",
        "An active internet connection to interact with GitHub Copilot.",
        "Curiosity to explore AI-assisted development and enhance coding productivity."
      ],
      "description": "Welcome to \"GitHub Copilot for Java Developers: Code 10x Faster with AI!\"\nAre you ready to completely transform the way you write Java code?\nThe world of software development is changing faster than ever. Developers who learn to work with AI tools like GitHub Copilot early will stand out and build better, faster, and more efficient applications.\nGitHub Copilot is not just another tool. It is your AI-powered coding assistant that can help you generate code, fix errors, suggest improvements, and automate repetitive tasks.\nThis course is designed specifically for Java developers who want to stay ahead of the curve and make AI an integral part of their development workflow.\nCopilot for Java is becoming an essential skill. The earlier you master it, the more valuable you become.\nWhy Learn GitHub Copilot for Java Now?\nJava remains one of the most in-demand programming languages across industries like finance, healthcare, education, and technology. But modern Java development often involves repetitive boilerplate code, long configurations, and writing the same patterns over and over again.\nGitHub Copilot solves these problems by helping you:\nAuto-generate Java classes, methods, services, and repositories\nBuild full Spring Boot applications faster and with fewer errors\nQuickly set up Maven projects and manage dependencies\nGenerate unit tests, documentation, and database configurations\nFix coding errors, optimize existing code, and refactor intelligently\nUse natural language prompts to generate entire code blocks\nCollaborate better with smarter code suggestions and best practices\nIf you want to build real-world Java applications faster and with better quality, learning how to use Copilot effectively is no longer optional\nIt is a must-have skill for the modern developer.\nWhat Will You Learn in This Course?\nThis course is hands-on, practical, and packed with real-world coding exercises. By the end of the course, you will confidently know how to:\nSet up GitHub Copilot in Visual Studio Code, IntelliJ IDEA, and Eclipse\nCreate Maven projects using Copilot assistance\nUse Copilot to generate Java classes, CRUD repositories, services, and controllers\nFix errors and refactor code using inline chat and smart suggestions\nUse the powerful Copilot Chat view to interact with your codebase\nImplement logging and database configurations efficiently with AI help\nGenerate unit tests, documentation, and boilerplate code with just a few prompts\nApply best practices for prompt engineering and working efficiently with Copilot\nBuild a fully working Spring Boot application using Copilot guidance\nUnderstand the limits of Copilot and when to take manual control\nThroughout the course, you will work on assignments, examples, and a real Java project so you can see Copilot in action across different stages of development.\nWho Is This Course For?\nJava developers who want to boost their productivity using AI\nSpring Boot developers who want to accelerate their project delivery\nStudents and professionals looking to stay competitive in the AI-driven tech landscape\nSoftware engineers who want to build applications faster without compromising code quality\nAnyone curious about how GitHub Copilot can be used beyond just code suggestions\nWhether you are a beginner in Java development or an experienced professional, this course will give you practical skills that you can apply immediately.\nWhy This Course?\nUnlike general AI coding courses, this course is laser-focused on Java and Spring Boot development.\nEvery lecture, every project, and every exercise is carefully designed to show you how Copilot fits naturally into real Java workflows.\nYou will not only learn how to use Copilot but also understand when and how to use its suggestions effectively without losing control over your codebase.\nAnd because the tech world is moving toward AI at a rapid pace, mastering tools like Copilot now will future-proof your career and open doors to exciting opportunities.\nWhat Are the Requirements for Taking This Course?\nBasic understanding of Java programming\nFamiliarity with IDEs like IntelliJ IDEA, Eclipse, or Visual Studio Code\nWillingness to learn and experiment with AI coding assistants\nAn open mind to embrace new coding practices\nYou do not need any prior experience with GitHub Copilot. Everything will be explained step-by-step.\nWhat Will You Get by the End of This Course?\nBy the end of this course, you will:\nKnow how to install, configure, and use GitHub Copilot in different Java IDEs\nBe able to automate repetitive coding tasks and save valuable time\nUnderstand how to generate high-quality Java code, tests, documentation, and database layers\nMaster prompt engineering techniques to get the best results from Copilot\nBe ready to integrate AI into your daily Java development workflow with confidence\nYou will walk away not just with knowledge but with real-world skills that you can immediately apply to your projects, internships, and professional work.\nFinal Words\nThe future of software development is AI-assisted coding.\nDevelopers who know how to use tools like GitHub Copilot will not only work faster but also stand out in a highly competitive tech industry.\nCopilot for Java is here to stay. Learning it today is an investment in your future as a developer\nDo not wait for AI to become the standard and leave you behind. Jump in, learn the skills, and take your Java development to the next level.\nEnroll now and start your journey toward mastering GitHub Copilot for Java!",
      "target_audience": [
        "Java developers who want to speed up their coding workflow using AI.",
        "Beginners in Java who want to write clean and efficient code faster.",
        "Spring Boot developers looking to boost productivity with GitHub Copilot.",
        "Software engineers who are curious about integrating AI into their daily coding.",
        "Students building Java projects who want help with code generation, unit tests, and debugging.",
        "Developers who want to learn best practices for using GitHub Copilot smartly.",
        "Anyone interested in AI coding assistants and how they can help in real-world Java projects."
      ]
    },
    {
      "title": "Information Computation",
      "url": "https://www.udemy.com/course/information-computation/",
      "bio": "Information Computation Fundamentals, Information Implementation Using Types, Algorithm Implementation Design Pattern",
      "objectives": [
        "Understand programming fundamentals selected topics including but not limited to terms like information, algorithm, coding system, data, program",
        "Explore how to use custom types to represent process information",
        "Take another look at an object-oriented programming concept and its applicability scope to define a contract between separate concerns",
        "Understand the main idea and scope of usage of anonymous, partial, and generic definitions to represent process information using types",
        "Design a program with unidirectional dependencies compliant with layered design patterns in practice and as a result leverage teamwork",
        "Learn how to implement bidirectional communication of layers engaging callbacks, events, reactive programming, dependency injection, and inversion of control",
        "Re-examine the dependency injection (inversion of control) design pattern to implement independent testing of separated concerns"
      ],
      "course_content": {},
      "requirements": [
        "You should clone in advance the GitHub mpostol/TP repository on your computer and make sure you can open, build, and test the InformationComputation solution",
        "It is not necessary but should be helpful to pass the course Programming in Practice - Executive Summary",
        "You should be familiar with programming fundamentals and understand the following terms: instruction, method, value type, reference types, class, interface, etc",
        "No programming experience is needed but some skills related to object-oriented programming fundamentals are helpful"
      ],
      "description": "The course is about information computation in practice. We will start with the statement that the course title is a bit provoking because information is abstract and cannot be directly subject to processing by a computer even if the computer and implemented algorithm make up a powerful artificial intelligence bot that is capable of understanding human speech and producing in-depth writing that humans easily understand. While learning, we distinguish the following terms: process information and algorithm. The process information describes the state and behavior of a physical process in concern. In turn, the algorithm is a knowledge describing how to solve the problems related to the physical process in concern. The course addresses topics that are vital for overcoming in-practice this inconsistency to employ computers.\nThe main goal of the course is to concentrate on learning - it means focussing on knowledge adoption. I focused on learning rules related to information computation but not training in a particular language or development tool. To make the learning outcomes practical examples are indispensable. To avoid overloading the examples with details unimportant for investigated topics I propose to apply extended examples. By extended examples, I mean examples that can be executed as independent unit tests. This way, you can observe not only a pattern but also trace the behavior. I believe that it should also improve the reusability of the examples. By design, the unit tests are used to validate the correctness and consistency of a program. The role of the unit tests included in the attached examples is significantly different. They are created with teaching values in mind. By design, they are used to make the examples intelligible and add the possibility to analyze also the behavior of the code patterns presented here. As a result of this approach, the examples are not obscured by a bunch of unimportant details needed to execute the examples as a part of a complete program.\nThis course is a member of the course suite titled Programming in Practice. Hence, more details about the rules overseeing this course you can find in the independent free course titled Programming in Practice - Executive Summary - consider enrolling and passing it if didn't yet.\nInformation Computation Fundamentals\nYou will learn that the process information is an abstraction and, hence, cannot be subject to processing by any physical machine, including computers. This inconsistency can be overcome by applying coding systems. In reality, this way, we are computing the data but not the information. Fortunately, this way we can address the challenge that the same information could have an infinitive number of representations. We need a driving force - an engine - to realize the processing. Today it is a binary computer. Hence, in the context of information computation, we must deal with two kinds of information: process information and algorithm. The process information describes the state and behavior of a process in concern. In turn, the algorithm is a piece of information on how to solve the selected problem. Both are tightly coupled and must be represented together using a programming language, which is suitable to be used as a recipe of the computer behavior and information representation of a process in concern.\nComputers are programmable devices and need a kind of program to be controlled. To accomplish it, we use high-level languages based on an alphabet derived from the Latin alphabet. Syntax of these languages is founded on keywords borrowed from the natural English language and semantics supports object-oriented programming concept. Informally, they are designed to produce text that is more human-readable and easier to use. Modern languages consistently use the type concept to describe process information representation and algorithms implementation. The section spent on recalling information computation fundamentals is an entry point to further learning selected aspects related to types applicability and design patterns of the program text. The object-oriented programming concept is the foundation of this learning path.\nInformation Representation Using Types and object-oriented programming\nIn this part of the course, we recognize the type definitions as a part of a programming language that is a set of syntax and semantics rules governing a text of a computer program. The main idea behind custom types is the possibility to represent practically any process information to be the subject of computation. Types are used to control the program consistency if the programming language is strongly typed, therefore could improve the robustness of the development outcome. The course prepares you to define new custom types. You will learn that using modern programming languages, new types may be defined from scratch or derived from existing ones. To accomplish it very helpful is the object-oriented programming concept. Additionally, the application of this concept allows us to solve polymorphic problems and organize the interoperability of software program parts using abstraction, inheritance, and encapsulation. The abstraction may be recognized as a contract used to harmonize the development process of the software program parts.\nDuring the course, we spent also a reasonable amount of time learning selected text management mechanisms enhancing the type definitions process. After the course, you will understand the main idea and scope of usage of anonymous, partial, and generic definitions to represent process information using types.\nAs a result of using anonymous types, the compiler infers type definition from the expression evaluated as a value. During the course, we get more about how to use this definition method of a custom type to represent external data and use it for consistency checking. External data is not subject to detailed examination but it is recognized as data managed outside of the process hosting the program.\nTypically, for strongly typed programming languages, the type of a variable may be devised by a developer or inferred by the compiler. During the course, we examine the next option, which is an auto-generation of the required type definition from metadata using development tools. During the course, you learn more about how to blend autogenerated parts with the developer ones.\nThe possibility of reusing the outcome of previous work is extremely important because it improves economic efficiency, is beneficial for reliability, and minimizes training costs. The generic definition concept is a next text management programming language feature that allows automation of the custom type definitions by using parametrized templates.\nAlgorithm implementation\nProcess information representation and algorithm implementation are tightly coupled and must be the subject of a computer program development using a selected programming language. Computer programs begin their life cycle as the text that must be compliant with this language. The course addresses methods and patterns that may be applied to manage the program text as one whole with the purpose to make teamwork easier, allow independent testing, decoupling the development outcome from the technology change, and make scalability easier, to name only the most important. To decrease the production cost and improve robustness, it is proposed to organize the computer program text into autonomous fragments addressing typical responsibilities. There are many design patterns applicable in this respect but the layered design pattern is best suited to be applied to the program as one whole\nThe program development should be commenced by researching knowledge helpful to solve a problem in concern or achieve the computation goal. This knowledge as one whole we call algorithm. The separation of concerns is a very useful concept while working on algorithms. From sociology we know, that the separation of concerns improves our performance of thinking because as a result, we may think about independent topics with minimal overlapping between them. So to improve our productivity we must leverage separation while working on the computer program text. You will learn that the main challenge is to decide when and where we should deal with the separation of concerns - while thinking about the solution or while implementing it as a text.\nIt is proposed to implement this separation by applying the program's layered design pattern. During the course we learn that thanks to this approach the following benefits may be accomplished: separation of concerns, simultaneous development, independent testability, resistance to changes in technology, and scalability. Finally, you will learn how to decrease development time and time to market. Usually talking about a layered design pattern applied to the program as one whole we may distinguish three layers: the presentation, logic, and data layers. Getting more about implementation, the responsibility of layers, and the expected benefits are the next learning outcome.\nLayers may be implemented using sets of custom-type definitions. These definitions must either be self-contained within the layer, or they may depend on declarations that are exposed by the layer beneath it. During the course, you will learn how to recognize the membership. To make the layer unambiguous it must be assumed that any type belongs only to one set, to one layer. This way we convert the discussion about mathematical sets to the examination of types grouping. The main goal is to keep the discussion as practical as possible.\nBy design, the layered program design pattern means its organizations, in which we can distinguish independent entities of a program related to each other making a top-down hierarchy. The top-down relationship means that the layer above only refers to the declarations exposed by the layer below. You will learn that it is a compile-time pattern. At run-time, we must consider control flow and data flow in both directions between layers. Hence, the next challenge addressed by the course is how to implement the bidirectional communication of layers at run time using a unidirectional dependency relationship. You will learn that inter-layer communication may be categorized into control flow, data transfer, and event notification. During the course, to make the learning outcome practical, we explore various examples of interlayer communication, including but not limited to properties, callbacks, events, reactive programming, and dependency injection. Some of them may also be referred to as inversion of control.\nThe next part of the course covers the applicability of the dependency injection design pattern in practice. During the course, it is stressed that the main point of this design pattern is an assignment to an abstract variable a reference to an instance of an invisible type at the intended location for some reason. I named this pattern dependency injection to somehow distinguish this scenario from using just object-oriented programming alone. In this case, we are using object-oriented programming to deal with the separation of concerns. One concern is the usage, and the second one is the implementation of a concrete type. Hence, shortly the dependency injection is a design pattern where we are using an abstraction in place of an unknown for some reason instance of a concrete reference type to transfer this instance from one place to another. You will investigate practical examples demonstrating independent testing and bidirectional inter-layer communication.\nThis particular design pattern implements abstraction to create an agreement between the creation and usage of an instance. The abstraction is employed to specify the property type (property injection) or the formal parameter type of the instance method or constructor (method or constructor injection). This design pattern eliminates the requirement for visibility of a specific definition of the concrete type in the program's intended location.",
      "target_audience": [
        "Junior and middle-level software developers curious about improving their programming skills",
        "Entry-level software architect looking for knowledge and skills required to carry out the architectural design of programs",
        "Teachers serious about the improvement of the software development skills education methodology",
        "Students that have accomplished classes covering Software Development Fundamentals or equivalent",
        "Software development project leaders, who are responsible for teamwork management, documentation preparation, debugging, code optimization, etc."
      ]
    },
    {
      "title": "Roadmap To Become Software Engineer from Scratch",
      "url": "https://www.udemy.com/course/roadmap-to-become-software-engineer-from-scratch/",
      "bio": "Learn about the complete RoadMap to become Software Engineer from Scratch",
      "objectives": [
        "Learn about complete roadmap to Become Software Engineer From Scratch.",
        "Learn about Who is Software Engineer?",
        "Learn Roles & Responsibilities of Software Engineer.",
        "Learn about the different companies who hire Software Engineer.",
        "Learn about Salary | Compensation of Software Engineer.",
        "Learn the most important thing What is the purpose of Software Engineer?"
      ],
      "course_content": {},
      "requirements": [
        "Just come open minded and ready to learn."
      ],
      "description": "1. Welcome & Instructor Intro\nHello Everyone, Welcome to the course \"RoadMap to Become Software Engineer from Scratch.\"\nMy name is Osman Mohammed, and I will be your instructor for this course.\nI currently work for one of the BIG – 4 Consulting firms.\nI have 8+ years of hands-on experience as a Software Engineer in Designing, Developing, and Maintaining custom Test Automation Software Systems.\nI worked in major software development life cycles like Waterfall, Agile, DevOps, DevSecOps, etc.\nI hold a Masters's Degree in Computer Science and Information Technology.\nI am creating this course collaborating with my elder brother Abdul Bari mohammed, a lead quality engineer at Amazon.\n2. Course Outcome\nI Designed this course for anyone seeking the complete roadmap to becoming Software Engineer from Scratch.\nBy the end of the course, you will know what it takes to become an impactful Software Engineer. Learn the Roles and Responsibilities of SDE, who hires SDE, Compensation, and most important, what problem SDE Solves.\n3. Ideal Students for this course\nThe ideal students for this course are anyone who wants to know the complete roadmap to becoming Software Development Engineer from scratch and lay a solid foundation to understand other emerging technologies like Data Science and Artificial Intelligence.",
      "target_audience": [
        "Anyone who aspires to know the Roadmap to Become a Software Engineer From Scratch.",
        "This course is highly suitable for recent College graduates who wanted to start their careers as Software Engineers."
      ]
    },
    {
      "title": "NodeJS Advanced: Process, Thread, Race Condition, Websockets",
      "url": "https://www.udemy.com/course/advanced-nodejs/",
      "bio": "NodeJS Deep Dive: Mastering Internals, Threads, Race Condition, Lock & Stream, Websocket Protocol",
      "objectives": [
        "Understand Operating System Fundamentals",
        "Understand Node.js Internals",
        "Performance Optimization",
        "Understand Threads"
      ],
      "course_content": {},
      "requirements": [
        "At least 1 year of experience in backend development"
      ],
      "description": "NodeJS Deep Dive: Mastering Internals & System Interactions\nHave you been working with NodeJS for a while but don't really understand it?\nDiscover how Node.js truly works under the hood by exploring its internal mechanisms and its interaction with the operating system. This course goes beyond basic usage, providing knowledge of process management, memory handling, and concurrency. You’ll learn how Node.js efficiently handles I/O operations, manages threads, and utilizes system resources to deliver high-performance applications. By understanding these core concepts, you’ll be able to write more optimized, scalable, and reliable Node.js applications.\nWhat You’ll Learn:\nOperating System Fundamentals:\nThe role of RAM, Hard Drive, and CPU in program execution\nPrograms vs. Processes and different process states\nMulti-programming and efficient resource utilization\nPreemptive vs. Non-preemptive Scheduling explained\nThe Program Counter and its significance\nHow Context Switching works behind the scenes\nNode.js Internals:\nUnderstanding V8 and how it executes JavaScript\nThe role of Libuv in handling asynchronous operations\nCompilation vs. Interpretation and JIT (Just-in-Time) Compilation\nConcurrency & Performance Optimization:\nI/O Tasks vs. CPU Tasks and how Node.js handles Non-blocking I/O\nUsing Child Processes to offload work\nScaling with Clusters\nWorker Threads for parallel execution\nUnderstanding and mitigating Race Conditions",
      "target_audience": [
        "Developers who want to understand how Node.js works under the hood",
        "Engineers looking to optimize performance in Node.js applications",
        "Developers who want to deep understanding of nodejs"
      ]
    },
    {
      "title": "Master Basics of ChatGPT & OpenAI API",
      "url": "https://www.udemy.com/course/master-openai-basics-learnit/",
      "bio": "Learn ChatGPT and OpenAI API to understand hwo you can create powerful applications wtih AI integration and support",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No prerequisites for taking this course"
      ],
      "description": "In this course, we are going to Learn the Basics of ChatGPT. This is a completely FREE course.\nAdvantages of this course:\nConcentration of useful materials: Cut to the chase - No water. In this course you will not find 10 hours of lessons teaching you how to enter text in the chat GPT web application. We are going to learn a lot of things, and what is the most important, we are going to learn a lot of different things.\nVast experience in the subject: my company was one of the first on the market that started consulting clients about ChatGPT since GPT API was publicly exposed.\nProfessional learning approach: I'm tutor with 900 students from more than 200 countries around the world. I was an offline tutor for a long time, and then I founded Learn IT Online University. I have big experience in the communication and teachnig student both: offline and online. And I can easily find the right approach to explain things, and make complex things easier to understand.\n\n\nTarget Audience of the Course:\nThis course is designed for everyone who wants to learn ChatGPT. I can say that this is the most detailed and the most complete ChatGPT course available online based on today\nSignificant part of the course will be dedicated to learning of the OpenAI API. And during the course we are going to create our own web application, and develop chat bot - that's why this course will be interesting for developers\nBut even despite the fact that I have lessons with coding examples, I still believe that this course will be interesting for Product Managers, Product Owners, and Project Managers. I know this because very often I receive requests from Product Managers asking me about capabilities of ChatGPT, business use cases, technical limitations, and similar questions. This course will help you to get deep understanding of how ChatGPT works under the hood, what its weak and strong sides are that you can take advantage of.",
      "target_audience": [
        "Everyone who wants to learn ChatGPT in depth",
        "Web Developers who want to create web applications using ChatGPT capabilities",
        "Product Managers who wants to explore and learn technical details and ChatGPT limitations to udnerstand how to build products using ChatGPT"
      ]
    },
    {
      "title": "現役アジャイルコーチが教える！半日で理解できるアジャイル開発とスクラム 入門編",
      "url": "https://www.udemy.com/course/daipresents-agile/",
      "bio": "スタートアップから大企業まで10年以上の経験を持つ現役アジャイルコーチが解説するアジャイル開発とスクラムの入門コースです。アジャイル開発の歴史的経緯や、現在利用されている様々な開発方法論の解説を通して基本を理解します。",
      "objectives": [
        "アジャイル開発や各種方法論、そのなかでも現在主流となっているスクラムを理解できます。",
        "従来型とアジャイル型の開発を比較し、その違い、メリットやデメリットを理解できます。",
        "XP、スクラム、かんばん、リーン、DevOpsといった様々な開発方法論を理解できます。",
        "現在主流となっているスクラムを徹底的に解説します。"
      ],
      "course_content": {},
      "requirements": [
        "初心者から経験者までを想定したコースのため、前提条件はありません。",
        "ソフトウェア開発における基本的な用語の理解があるとスムーズです。",
        "アジャイル開発に関連する用語は、初心者でもわかりやすい表現で解説します。"
      ],
      "description": "このコースでは、10年以上のアジャイル開発経験のあるアジャイルコーチである講師が、ソフトウェア開発のプロセスとして有名なアジャイル開発や各種開発方法論、その中でも現在主流となっているスクラムの詳細を解説します。\n\n\nまた、アジャイル開発が導入されていない現場でも理解できるように、従来型の開発方法論とも比較しながら、それぞれのメリット・デメリットを理解します。これにより、従来型の開発を行っている現場でも、状況に合わせて、最適な方法を選択できる知識が身につきます。\n\n\nこのコースの対象者は、アジャイル開発初心者です。ソフトウェア開発を学んでいる学生や社会人、ソフトウェア開発に関わっている人（プログラマだけでなく、SE、プロダクトマネージャ・デザイナー・QAなども対象）、アジャイル開発を理解・導入・推進したいリーダーやマネージャや経営者が対象になります。もし、あなたがすでにアジャイル開発経験者であっても、改めて基本を学ぶことで、現場での改善のヒントやアイデアなど新しい学びにつながるはずです。\n\n\n変化への対応がもとめられる現在の開発現場において、アジャイル開発は必須スキルとなってきています。さらに、アジャイル開発は、ソフトウェア開発の現場だけでなく、さまざまな環境に広がっています（営業、総務、カスタマーサポートなど）。\n\n\nDX（デジタルトランスフォーメーション）の文脈でも注目され、成熟期を迎えつつあるアジャイル開発を理解し、「改善」の旅をはじめましょう！\n\n\n入門編は基本的な内容になるため、現場で活かしたい場合は、「導入と実践、組織変革編」へとお進みください。",
      "target_audience": [
        "アジャイル開発初心者",
        "ソフトウェアエンジニアを目指している学生や社会人",
        "ソフトウェア開発に関わっている方（プログラマだけでなく、SE、プロダクトマネージャ・デザイナー・QAなども対象）",
        "アジャイル開発やスクラムを理解、導入、推進したいリーダー、管理職、マネージャ、経営者"
      ]
    },
    {
      "title": "Interfaces in Java",
      "url": "https://www.udemy.com/course/interfaces-in-java/",
      "bio": "Why we use interface ? What is an interface ?",
      "objectives": [
        "What is an Interface ?",
        "Why we have to use Interfaces ? (in Java or in any other object oriented programming language)",
        "Create Server and Client Using Sockets (for using interfaces as a service )",
        "Eclipse Debugging"
      ],
      "course_content": {},
      "requirements": [
        "Basic Java Knowledge"
      ],
      "description": "All my courses are focused on real world live code writing.\nWhile you watch you will feel like you are writing the code.\nYou need basic knowledge of java for the course.\nSo if you think you forget basic concepts, you can refresh your knowledge\nbefore watching my courses.\nI highly recommend you after watching 1 or 2 times, you should start writing your own code.\nBecause the best way to learn is writing your own code. Using ECLIPSE IDE tools by yourself.\nIn this course you will learn:\nWhat is an interface ? Why we use interfaces even in a tiny program ?\nHow can we imagine interface as a reald world senario ?\nTheory behind interface.\nImplementing interface.\nHow interfaces makes easier seperating business logic.\nHow interfaces make standartization in a program.\nUsing generic types.\nUsing threads.\nHow to stop  error printing loop in eclipse console which not stops when you press red button .(without closing eclipse)\nExtending interface.\nExamining interface in java api.(application programming interface)\nEclipse IDE\nDebugging\nError Handling\nJava server socket, client socket, network server.\nWriting to outputstream.\nReading from inputstream.\nA little bit concurrency.\nbyte array in action.\nSending message over socket.\nYou will realize tips.",
      "target_audience": [
        "Everyone"
      ]
    },
    {
      "title": "Ultimate AWS Certified Cloud Practitioner CLF-C02 Course",
      "url": "https://www.udemy.com/course/ultimate-aws-certified-cloud-practitioner-clf-c02-exam/",
      "bio": "Learn and Pass AWS Certified Cloud Practitioner CLF-C02 Exam | Start Cloud Computing. Learn AWS Concepts",
      "objectives": [
        "This course covers every concepts to Pass AWS Cloud Practitioner Exam",
        "Latest fully Updated course AWS Certified Cloud Practitioner Certification",
        "Learn and Clear AWS Certified Cloud Practitioner Certification exam confidently and Learn the AWS Fundamentals",
        "Have some labs and Real world Examples"
      ],
      "course_content": {},
      "requirements": [
        "No AWS Cloud experience is necessary, we'll use the AWS Free Tier",
        "No IT prerequisites required"
      ],
      "description": "Only AWS Certified Cloud Practitioner course that you need. This course covers everything to Pass the Exam and Learn AWS concepts. The AWS Certified Cloud Practitioner course is an essential entry-level program designed for individuals seeking to build a foundational understanding of cloud computing and Amazon Web Services (AWS). This course serves as a perfect starting point for beginners, business professionals, technical managers, and aspiring cloud practitioners who want to grasp the basic concepts of cloud technology and AWS services without requiring deep technical expertise. It provides a clear and structured overview of cloud fundamentals, AWS core services, security, pricing, and support options.\nThe course begins with an introduction to cloud computing concepts, explaining key terms such as Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS). Learners are guided through the core benefits of cloud adoption, including scalability, elasticity, high availability, and cost efficiency. The course emphasizes the shared responsibility model and explores the fundamental principles of cloud architecture, helping you understand how AWS delivers reliable and secure services across the globe.\nYou will gain a comprehensive overview of the AWS Global Infrastructure, including regions, availability zones, and edge locations. They explore key AWS services such as Amazon EC2 (Elastic Compute Cloud), S3 (Simple Storage Service), RDS (Relational Database Service), Lambda, and VPC (Virtual Private Cloud). Each service is explained with its core functionality, use cases, and practical demonstrations, ensuring that learners understand how these components integrate within cloud solutions. Security and compliance are critical aspects covered in detail, introducing participants to AWS Identity and Access Management (IAM), encryption methods, and AWS’s approach to securing cloud environments. The course also highlights AWS pricing models, billing concepts, and cost management tools, such as the AWS Pricing Calculator and AWS Budgets, giving learners insights into how to optimize cloud spending effectively.\nYou will have a solid understanding of AWS cloud concepts, services, and security measures. They will be confident in communicating cloud benefits to both technical and non-technical and will be well-prepared to pass the AWS Certified Cloud Practitioner exam. This course is ideal for anyone looking to start a career in cloud computing, advance their business understanding of AWS, or lay the groundwork for more advanced AWS certifications.",
      "target_audience": [
        "This AWS Cloud Practitioner course is for anyone wanting to obtain the knowledge to pass the AWS Certified Cloud Practitioner Certification"
      ]
    },
    {
      "title": "Ethereum Development Course - Blockchain at Berkeley",
      "url": "https://www.udemy.com/course/ethereum-development-course-blockchain-at-berkeley/",
      "bio": "This course will teach you how to become an experienced solidity developer",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction to Development",
          "1.1 Setup",
          "1.2 - Greeter Contract",
          "1.3 - Deploy and Console",
          "MO1.4.1 - Linking Frontend - Create-react-app",
          "MO1.4.2 - Linking Frontend - Using Web3",
          "MO1.4.3 - Linking Frontend - Final Edits to App.js",
          "MO1.4.4 - Linking Frontend - Launching the Dapp",
          "Quiz 1"
        ]
      },
      "requirements": [
        "Basic Javascript skills, Download Truffle and Metamask"
      ],
      "description": "Blockchain at Berkeley and leaders of well-respected Blockchain start-ups like Consensys, BlockApps, Virtue Poker, and UJO Music have pooled their experience and knowledge to design a curriculum to turn you into an effective developer of secure Decentralized Applications (dApps) on Ethereum.\nThe Blockchain Development Bootcamp is comprised four modules of full stack programming on the Ethereum Blockchain:\n[FREE] Module 1: Developer Environment Setup and Hello World\nGetting Started\nEthereum and Solidity Recap\nA Starting Example\nThe bank contract\nHands-on Development\nInstalling Dependencies\nProject Structure\n“Hello World!” (Greeter) Contract\nTruffle Init\nConnecting to the Real World\nAttaching Frontend\nWeb3 api\nCreate-react-app\nTruffle Migrations\nFinishing Touches\nJavascript Console\nContract Interaction and Final Questions\nModule 2: Solidity In-Depth\nData Types and Associated Methods\nTyping and your contracts storage\nTyping in solidity\nData Structures\nYour contracts storage\nStructs\nMappings\nSimple Operators\nGlobal Variables\nFunctions and More\nAccessor functions\nEvents\nModifiers\nBranching and Loops\nObjects and Contracts\nCalling external contract\nInheritance\nImport\nOther Keywords\nThrowing\nSelfdestruct\nModule 3: Advanced Dapp Development\nGreeter Review\nGit clone if needed\nTestrpc window, npm install/start window, truffle migrate, EthereumSetup.js\nTruffle console and final product\nHow to fetch chain state\nWhat is the web3 api\nWhat is a contract abi?\nWhy do I have to change the address every time\nWeb3 API\nPulling information from the blockchain\nModify greeter app that uses web3 to retrieve:\nWallet address\nBalance (BigNumber note. Have people try to get as decimal and fail)\nLatest block number\nLatest block timestamp\nLatest block hash\nGas price\nDeveloper Tools I: MetaMask and Deployment\nMetamask Chrome Setup\nCommunication between your browser and your blockchain\nSending and Signing Transactions\nLive deployment to Kovan testnet\nLive deployment to Ethereum Mainnet\nModule 4: Security and Attacks Vectors\nPhilosophy and Fundamentals\nBasic Security\nSolidity defaults\n.send() vs .transfer vs .call().value()\n“Smart” smart contract standards\nAttack Vectors\nData races\nInteger overflow\nCommunity tools\nOpenZeppelin\nOyente\nSolCover",
      "target_audience": [
        "The ideal individual for this course is someone who is interested in developing DApps and wants an in depth walkthrough on how to start. This course stands to benefit college students, experienced developers, or anyone seeking a comprehensive solidity course. Unless you are a seasoned Ethereum developer already, this is the course for you!"
      ]
    },
    {
      "title": "Beginners Guide to Unit Testing with NUnit and C#",
      "url": "https://www.udemy.com/course/unit-testing-intro/",
      "bio": "Learn the basics of unit testing with NUnit and C#.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic Skills in C#"
      ],
      "description": "This course is all about writing unit tests using C# programming language and NUnit as a unit testing framework. Today unit testing is an absolutely required skill from any professional developer. Companies expect from developers to know how to write unit tests.\nLearning unit testing puts a powerful and very useful tool at your fingertips. Being familiar with unit testing you can write reliable and maintainable applications. It is very hard to lead a project which is not covered by unit tests.\nContent and Overview\nThis course is primarily aimed at beginner developers.\nWe start with basics of unit testing. What is a unit test? What unit testing frameworks exist? How to run and debug unit tests. After getting acquainted with the basics, we will get to the NUnit framework. Here you’ll learn how to install the framework, set the runner. Then you’ll learn the basics of assertions and arrange-act-assert triplet. Other key features of NUnit are also covered:\nRunning tests from the console\nSetup and teardown unit tests\nParameterized tests\nGrouping and ignoring",
      "target_audience": [
        "Anyone who wants to learn the basic of unit testing"
      ]
    },
    {
      "title": "Patrones de diseño y principios SOLID en C# .NET",
      "url": "https://www.udemy.com/course/patrones-de-diseno-principios-solid/",
      "bio": "Guía completa y practica de los patrones de diseños GOF y los principios SOLID",
      "objectives": [
        "Reconocer cada uno de los patrones de diseño",
        "Saber cuando Implementar un determinando patrón de diseño en distintas situaciones",
        "Mejorar analisis al proponer soluciones antes de programar",
        "Refactorizar el código para llegar a un código mas limpio y desacoplado"
      ],
      "course_content": {
        "SOLID: Single Responsibility Principle": [
          "SRP: Introducción",
          "SRP: Refactor",
          "SRP: Ejercicio",
          "SRP: Solución"
        ],
        "SOLID: Open Closed Principle": [
          "OCP: Intro",
          "OCP: Refactor",
          "OCP: Ejercicio",
          "OCP: Solución"
        ],
        "SOLID: Liskov Substitution Principle": [
          "LSP: Introducción",
          "LSP: Refactor",
          "LSP: Ejercicio",
          "LSP: Solución"
        ],
        "SOLID: Interface Segregation Principle": [
          "ISP: Introducción",
          "ISP: Refactor",
          "ISP: Ejercicio",
          "ISP: Solución"
        ],
        "SOLID: Dependency Inversion Principle": [
          "DIP: Introducción",
          "DIP: Refactor",
          "DIP: Ejercicio",
          "DIP: Solución"
        ],
        "Patrón Creacional: Builder": [
          "Introducción",
          "Implementación (Parte 1)",
          "Implementación (Parte 2)",
          "Fluent Builder",
          "Unit Testing: Fluent Builder",
          "Ejercicio Fluent Builder",
          "Solución Ejercicio: Builder"
        ],
        "Patrón Creacional: Factory": [
          "Introducción",
          "Factory Method",
          "Refactor Factory Method",
          "Factory Method: Ejemplo Pizzería (Parte 1)",
          "Factory Method: Ejemplo Pizzería (Parte 2)",
          "Factory Method: Reflection",
          "Abstract Factory",
          "Abstract Factory: Implementación (Parte 1)",
          "Abstract Factory: Implementación (Parte 2)",
          "Ejercicio Factory Method",
          "Solución: Factory method"
        ],
        "Patrón Creacional: Prototype": [
          "Introducción",
          "IClonable",
          "Deep Copy",
          "Serialización",
          "Ejercicio Prototype",
          "Solución: Prototype"
        ],
        "Patrón Creacional: Singleton": [
          "Introducción",
          "Implementación",
          "Singleton: Inconvenientes",
          "Singleton con inyección de dependencias",
          "Ejercicio Singleton",
          "Solución: Singleton"
        ],
        "Patrón Estructural: Adapter": [
          "Adapter Parte 1",
          "Adapter Parte 2",
          "Ejercicio Adapter",
          "Solución: Adapter"
        ]
      },
      "requirements": [
        "Conocimiento de programación orientado a objetos"
      ],
      "description": "Dale un impulso a tu carrera de programador aprendiendo mejores técnicas de programación utilizando Patrones de diseño.\n¿Qué son los patrones de diseño?\nCuando comenzamos a programar, es común que cada quien lo realice con distintas técnicas para llegar a una misma solución, muchas veces esto resulta en desarrollos complejos que sólo el creador entiende.\nPero ¿Es posible evitar esta situación y comenzar a desarrollar código que todos entendamos?\nLa respuesta se encuentra en los Patrones de diseño:\nLos patrones de diseño son soluciones a problemas recurrentes que alguien ya pensó por nosotros.\nPara que una solución sea considerada un patrón debe poseer ciertas características. Una de ellas es que debe haber comprobado su efectividad resolviendo problemas similares en ocasiones anteriores. Otra es que debe ser reutilizable, lo que significa que es aplicable a diferentes problemas de diseño en distintas circunstancias.\nQue voy a obtener este curso:\n23 patrones de diseño con ejemplos reales.\n23 ejercicios utilizando la plataforma de Udemy (Con solución)\nTodos los principios SOLID.\nCada principio SOLID con ejercicio\nEl mejor soporte si tienes alguna pregunta.",
      "target_audience": [
        "Programadores de todos los niveles"
      ]
    },
    {
      "title": "現役シリコンバレーエンジニアが教える未経験者のためのPythonドローンプログラミング",
      "url": "https://www.udemy.com/course/python-drone/",
      "bio": "ネットワークプログラミングでのドローン遠隔操作、OpenCVの顔認識、自動追跡、WEBフレームワークを使ったWEBカメラの実装も。ロボット技術に触れることで次世代の世界の技術に出遅れないようにしましょう！",
      "objectives": [
        "OpenCVを使った顔認識プログラミング",
        "Pythonによるドローン遠隔自動操作",
        "FlaskのWEBフレームワークを使ったWEBカメラのアプリの実装方法",
        "ドローンのビデオでの顔認識を使った自動追跡"
      ],
      "course_content": {
        "はじめに": [
          "なぜPythonとドローンプログラミングなのか",
          "本講義で必要なもの",
          "講義を受講する前の注意事項",
          "コースご受講の前の事前知識に関して"
        ],
        "アプリを使ったドローン操作": [
          "まずはアプリでドローンを操作する",
          "スクラッチのようなブロックプログラミングでトレーニング",
          "スクラッチでドローンゲーム"
        ],
        "環境設定": [
          "Macに開発環境の準備をする",
          "Windowsに開発環境の準備をする"
        ],
        "本講義で扱うソースコード": [
          "ソースコードのダウンロード"
        ],
        "OpenCV": [
          "MacにOpenCVをインストール",
          "WindowsにOpenCVをインストールする",
          "OpenCVと顔認識の準備をする",
          "画像の人物で顔認識をする",
          "ビデオカメラで顔認識をする"
        ],
        "ドローンの遠隔操作": [
          "TelloのドキュメントとSDKの確認",
          "ドローンの離陸と着陸",
          "ドローンからのレスポンスを受信する",
          "ドローンの上下左右前後に移動させる",
          "ドローンのスピードの変更",
          "ドローンを回転させる",
          "ドローンをフリップさせる",
          "ドローンをパトロールさせる"
        ],
        "ドローンアプリのフレームワークの作成": [
          "パッケージのインストール",
          "Config",
          "Flaskの設定",
          "jQueryとjQueryモバイル",
          "indexページの作成",
          "LayoutをExtendsする",
          "POSTでバックエンドにコマンドを送信する",
          "ボタンの追加",
          "シングルトン"
        ],
        "顔認識追跡とWEBカメラ": [
          "ドローンをWEBUIから操作する",
          "ドローンのビデオのストリーム",
          "Webカメラでドローンの動画を描画する",
          "ドローンのカメラで顔認識をする",
          "ドローンで顔認識した人を追跡する",
          "カメラ画像のスクリーンショットを撮る"
        ],
        "ドローンを使ったゲームの作成": [
          "Shake Gameの概要",
          "Shake Gameのコースクラスを作成する",
          "コースの表示",
          "ドローンをコースで飛ばす",
          "35.スマートフォンのシェイクイベントを取得する",
          "スマホでドローンシェイクゲーム",
          "改善点"
        ],
        "最後に": []
      },
      "requirements": [
        "ドローンをWifi接続するので、ネットワーク、Wifi、IPアドレスの知識があると良いかと思います。",
        "Pythonの基礎知識が必要となります。",
        "IDEなどの開発環境の構築できるとよろしいかと思います。"
      ],
      "description": "皆さんもご存知かもしれませんが、現在はロボットの技術が非常に発展してきております。私もIT産業のトップであるシリコンバレーで12年間働いていて感じることですが、テスラーの自動運転やロボットなど今まで人間が行ってきたことをロボットなどに置き換えようとする流れは今後も長く続くことかと思います。\nそこで今回は、トーイドローンという室内で飛ばせる小さなおもちゃのようなドローンを使って、以下学んでいこうと思います。\nPythonを使ったドローン操作\nカメラを使ったOpenCVでの顔認識\nWebフレームワークとWEBカメラ\n追跡する自動運転\nスマホシェイクのドローンゲーム\nもちろんこちらのドローンはトーイドローンなので、高度なロボットという難しいものではなく、Pythonに慣れながら、簡易的に室内などでドローンを動かしてみようというレベルになっております。日本でもお子さんのプログラミング教育にも注目されてきておりますが、このコースで習ったドローンブログラミングをお子さんに教えてあげるのも良いかと思います。\nそれでは、次世代のロボット技術に世界から出遅れないよう、ドローンで一緒にプログラミングを習得していきましょう。",
      "target_audience": [
        "ドローンなどのロボットをプログラミングで操作したい人",
        "次世代の自動運転や画像認識の初歩的なことに興味がある人",
        "Pythonを使って何か見えるアプリケーションを構築したい方"
      ]
    },
    {
      "title": "Real-world Electric Vehicles applications using state flow",
      "url": "https://www.udemy.com/course/designing-automotive-systems-with-mbd-simulink-and-matlab/",
      "bio": "Build real-world automotive applications with Simulink—no prior experience required.",
      "objectives": [
        "Develop Proficiency in Simulink for MBD",
        "Implement and Analyze Control Systems Using MATLAB & Simulink",
        "Generate and Interpret Production-Quality Embedded Code",
        "Design and Simulate a Real-World Automotive System"
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with vehicle components and control systems will enhance the learning experience but is not mandatory.",
        "The course includes step-by-step guidance, making it beginner-friendly for those new to Model-Based Development.",
        "Learners will need access to a PC or laptop capable of running MATLAB and Simulink for hands-on practice.",
        "A passion for engineering innovation and problem-solving is the most important requirement."
      ],
      "description": "Master Model-Based Development (MBD) for Automotive Engineering\nUnlock the future of complex system design with Model-Based Development (MBD). This cutting-edge approach revolutionizes the development of software applications, control systems, and embedded systems by using models to represent behavior, functionality, and structure.\nIn this comprehensive course, you'll dive deep into the fundamentals of MBD, gaining a strong foundation in its principles and methodologies. Starting with the basics, you'll explore different types of models and their applications in the MBD framework. You'll also get hands-on experience with essential tools and techniques, including implementation and simulation, that are crucial for developing and evaluating sophisticated systems.\nBy the end of this course, you'll have the practical skills needed to create, deploy, and optimize models that meet industry standards. Whether you're new to MBD or looking to enhance your expertise, this course will prepare you to excel in the dynamic field of automotive engineering.\n\n\nWhat You'll Learn:\nIntroduction to MBD: Understand the role of Model-Based Development in the automotive industry.\nSimulink Proficiency: Navigate the Simulink environment, understand its interface, add blocks, and run models.\nSimulink Solvers: Compare variable and fixed-step solvers, and determine which is best suited for embedded systems.\nBasic and Custom Libraries: Recognize key blocks, analyze parameters, simulate blocks, and create reusable custom libraries.\nCode Generation: Generate and understand C code from Simulink models, and analyze how block parameters influence code generation.\nMATLAB Integration: Insert and create MATLAB functions within Simulink models.\nReal-World Project: Implement, simulate, and generate code for a Wiper System Controller, bringing theoretical knowledge into practical application.\nThis course also includes practical exercises and industry-relevant projects to ensure you're not just learning theory but gaining the skills needed to stand out in the job market.\nUpon completion, you'll be well-prepared to pursue opportunities as an MBD engineer, armed with the knowledge and confidence to make a significant impact in your career.",
      "target_audience": [
        "Engineering Students and Graduates interested in automotive systems, embedded systems, or control engineering who want to gain practical, job-ready skills in Model-Based Development.",
        "Junior Engineers and Entry-Level Professionals looking to break into the automotive or embedded software industries by learning industry-standard tools like MATLAB, Simulink, and AUTOSAR.",
        "Mechanical, Electrical, or Mechatronics Engineers aiming to transition into software-oriented roles in the automotive field.",
        "Anyone Curious About MBD with a passion for automotive technology and system design — no prior experience with MATLAB or Simulink is required."
      ]
    },
    {
      "title": "Introduction to TDD in C#",
      "url": "https://www.udemy.com/course/intro-tdd/",
      "bio": "Learn test driven development: make code testable, robust and maintainable. Bring unit testing skills to the next level.",
      "objectives": [],
      "course_content": {
        "Introduction to Test-Driven Development (TDD)": [
          "Download Source Code",
          "Join Chat in Telegram",
          "Outline",
          "Why we need TDD?",
          "What is TDD?",
          "Red / Green / Refactor",
          "Three Laws of TDD",
          "Changing Requirements and the Safety Net",
          "F.I.R.S.T.",
          "Code Coverage",
          "Types of Tests and TDD",
          "Testing Frameworks and Tools",
          "When TDD Fails?",
          "Conclusion"
        ],
        "TDD in Action": [
          "Outline",
          "Regular Agile Process in 200 Words",
          "VS and R# Shortcuts",
          "Refactoring Commands Built-In Visual Studio",
          "Fibonacci Numbers",
          "Three Main TDD Techniques",
          "Grabbing the Gold",
          "FizzBuzz",
          "Reading Roman Numerals",
          "UpdateableSpin",
          "Continuous Testing",
          "Tic-Tac-Toe (Crosses and Noughts)",
          "Assert First",
          "Demo - Sticks",
          "Conclusion",
          "BONUS"
        ]
      },
      "requirements": [
        "You should already be familiar with the basics of C#",
        "You should already be familiar with the basics of unit testing"
      ],
      "description": "Today unit testing is the absolutely required skill which is required from any professional developer. Companies expect from developers to know how to write unit tests including all the most important topics such as mocking and test driven development (TDD in short).\n\nThis course is all about practicing TDD using C# programming language and NUnit as a unit testing framework. Along the way, we will learn the concepts related to unit testing. This course does not cover all the features of NUnit. This course is way more interesting.\nLearning unit testing and TDD puts a powerful and very useful tool at your fingertips. Being familiar with unit testing and TDD you can write reliable and maintainable applications. It is very hard to lead a project which is not covered by unit tests.\nContent and Overview\nThis course is primarily aimed at developers who’re already familiar with the basics of unit testing and dependency injection. Some experience in C# programming is required.\nTheory is dead without practice, so starting from the second section, you’ll see tons of programming sessions where I’ll demonstrate how to implement generating of Fibonacci numbers, FizzBuzz, parsing of roman numerals, updateable spin synchronization primitives, tic-tac-toe or crosses and noughts game and game in sticks. You’ll also learn:\nHow a regular agile development process looks like\nThat you need to learn shortcuts to practice TDD more smoothly\nThree Main TDD techniques: faking, triangulation and obvious implementation\nWhich tests to write first\nHow to start writing a test in a TDD manner\nHere is my Teaching Approach -\nNo fluff, no ranting, no beating the air. I respect your time. The course material is succinct, yet comprehensive. All important concepts are covered. Particularly important topics are covered in-depth. For absolute beginners, I offer my help on Skype absolutely free, if requested.\nTake this course, and you will be satisfied.",
      "target_audience": [
        "Any developer who wants to improve professional programming skills"
      ]
    },
    {
      "title": "Robust Qt & C++ Gui Programming 2D Graphics App Tutorial",
      "url": "https://www.udemy.com/course/qt5-gui-cpp-programming-tutorial-2d-graphics/",
      "bio": "Become a confident Qt GUI and C++ software developer with step by step programming tutorials and 2D graphics examples",
      "objectives": [],
      "course_content": {
        "Setup Your Development Environment": [
          "Introduction",
          "Your Final App DEMO",
          "Installing The Qt Framework (Required)",
          "Installing Git (The Version Control System)",
          "Installing Source Tree",
          "Creating a BitBucket account"
        ],
        "Drawing Shapes": [
          "Creating The Project",
          "First Commit",
          "QtCreator shortcuts (GUIDE)",
          "Preparing The Render Area",
          "Adding Shape Types And Background Colors",
          "Setting The Active Shape",
          "Drawing The First Shape: The Astroid",
          "On Shape Changed",
          "Compute Dispatcher",
          "Pop Quiz",
          "Drawing The Cycloid Shapes",
          "Drawing A Parametric Line (Just For Fun)",
          "Connecting The Dots",
          "Shape Control #1: Scaling The Astroid",
          "Shape Control #2: Adding the update_ui() method",
          "Shape Control #3: Counting Your Steps",
          "Adding A Drop Of Color"
        ],
        "Assignments": [
          "ASSIGNMENT 1: Update control variables",
          "(Solution) Assignment 1",
          "ASSIGNMENT 2: Going full-circle",
          "(Solution) Assignment 2",
          "ASSIGNMENT 3: Focusing on the ellipse",
          "(Solution) Assignment 3",
          "ASSIGNMENT 4: The fancy curve",
          "(Solution) Assignment 4",
          "ASSIGNMENT 5: A lucky starfish",
          "(Solution) Assignment 5"
        ],
        "Additional Lectures And Resources": [
          "Bug Fixing The Paint Logic",
          "The Mighty QPen",
          "Cloud Shapes #1: The Puffy Cloud",
          "Cloud Shapes #2: Inverted Cloud",
          "Introduction To Debugging",
          "How To Debug With Qt Creator?",
          "C++ & OOP Good Practices (GUIDE)",
          "Bonus Lecture: Project Source Code"
        ]
      },
      "requirements": [
        "(Required) Working knowledge of C++ syntax and language fundamentals",
        "(Required) Know the basics of OOP (Object Oriented Programming) with C++",
        "(Preferable) Understand basic mathematical expressions and functions (sine, cosine, exponential)",
        "Know how to create C++ source files",
        "Feel comfortable using open source technologies"
      ],
      "description": "This course will help you upgrade your C++ software development skills today!\nYou will learn how to build an application using Qt and C++, from the ground up.\nAs I've put my heart and soul into producing this course, I understand it's no longer up to date with the Qt platform.\nBut it does still have valuable insights into robust app design, so I believe you'll find quite a bunch of useful stuff in here\nHere's what others have to say about this course:\n\"Great course. Instructions are clear and accurate. Dan logically teaches how to build an app from the simplest parts to the harder ones. Tasks for you to complete are getting a little bit bigger every time and you don't feel lost between instructions and the tasks as they are connected to each other (unlike in many other courses). Even though for me this course wasn't hard it was useful and I enjoyed it very much. After finishing the course I found out that there are new videos and new tasks! That's awesome! I like that course is being improved! \" - Kateryna Brylliantova\n\"One of the best courses I ever had. Very well structured, very good program structure and complexity of the application. The explanation should be an example for many ohter teachers. A big and real triple-A. Thank You, Dan.\" - Matthias Kunka\n\"Well thought out and paced, I have learned quite a few interesting points on robust code.\"  - Asad Raja\n\"I felt this was a very good course for intermediary C++ programmers. It has some easy to follow for the novice sections, but also plenty for the seasoned programmer.\" - Gino Manifred\n\nC++ is a very powerful and versatile programming language.\nQt is multi-platform framework, the perfect choice for open source GUI development with C++.\nBefore investing in this course, please watch the FREE lectures (30 minutes) to:\nsee the final app in action (check out the Final App DEMO lesson)\ndecide if this course is really the right one for you\nWith this course, you will design and create your own C++ program for the Windows platform.\n\nYou will add new features to the app, step by step.\nYou will learn how to write good source code, at professional-level.\n\nYou can learn programming in C++ from anyone you wish to, there are many teachers and a lot of free know-how out there.\nBut if you want to learn to code like a professional, here's my advice to you:\nChoose to learn from someone who has already done professional level coding\nChoose a teacher who has a proven track record working experience with C++ and Qt\nChoose a mentor who has done this for years, and knows what it takes to create industry-level software\nHere's how the course is structured. Each lecture prepares the groundwork for the next one. You will:\n\nwrite code in C++ (standard '03)\nuse the Qt toolkit's UI elements to create the GUI (Graphical User Interface)\nset up the main application window\ndrag and drop the required user interface elements (buttons, widgets, labels, spinners...) on the main window\nconnect UI elements to UI events (mouse clicks, value changed)\nwrite custom event handling code that updates the painted graphic\nYou need to have a good understanding of OOP (Object Oriented Programming) fundamentals, as you will be adding and working with:\n\nclass member variables\nclass member functions\nsetters / getters\nprivate / public / protected access modifiers\nencapsulation to protect the data\nconstructors and destructors\noverriding virtual base class functions for Qt objects\npointers to objects\nYou will organize the C++ program logic into header (.h) and implementation (.cpp) source files.\n\nYou will design a simple GUI (Graphical User Interface) with QtCreator (part of the Qt toolkit) and use the signal and slots mechanism to make the buttons (and other UI elements) respond to mouse clicks or value changed events.\nYou will setup a custom rendering area widget that integrates flawlessly with the Qt5 framework, by inheriting from the QWidget base class and overriding abstract class methods.\nYou wil learn how to fix compiler errors that can occur during development.\nYou will also learn to fix linker errors caused by missing function implementations.\nYou will use a bottom-up approach to develop robust software.\nNotice the key word here - robust.\nThat means professional-level C++ code.\nYou will learn to design reusable programs with programs will be designed with reusability in mind. And will be written with future upgrade capabilities in mind.\nYou will also use Math and Geometry in an unexpected way, to create unusual 2D graphics shapes.\nYou will also get some hands-on experience by taking the course assignments.\nThe assignments are designed to get you comfortable with the code and teach you to extend the application on your own, after you have completed the course.\nShould I go on or do you want to start learning now?\nI've invested around 10 years into learning software development and have worked 7 years in the IT industry.\nOk, here are a few more things you will get from it:\n\nHow to create an online repository (with BitBucket)\nHow to use source versioning (with GIT) to save intermediary code changes and revert back to them anytime if you make a mistake\nTips and tricks for good coding practices\nSo come on, let's start creating some 2D graphics with Qt5 And C++ Gui Programming!",
      "target_audience": [
        "You have a solid understanding of C++ syntax",
        "You want to learn basic C++ app development with Qt",
        "Preferably you are an intermediate developer or programming enthusiast",
        "You want to learn how to design and create software from scratch",
        "You love software development (especially with C++)",
        "You want hands-on coding experience",
        "You are a 2D graphics amateur or passionate"
      ]
    },
    {
      "title": "Coding Interview Jumpstart: Algorithms and Problem Solving",
      "url": "https://www.udemy.com/course/coding-interview-jumpstart/",
      "bio": "Learn the principles behind fundamental computer science algorihms asked on interviews for top tech companies.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Overview",
          "Resources and help"
        ],
        "Algorithm Analysis": [
          "Section Introduction",
          "Lecture info",
          "Why analyzing algorithms?",
          "Asymptotic notation",
          "Big-O notation",
          "Time Complexity Examples",
          "Time Complexity Quiz",
          "Space Complexity Examples",
          "Space Complexity Quiz"
        ],
        "Sorting": [
          "Section Introduction",
          "Bubble Sort introduction",
          "Bubble Sort implementation",
          "Selection Sort introduction",
          "Selection Sort implementation",
          "Insertion Sort introduction",
          "Insertion Sort implementation",
          "Merge Sort introduction",
          "Merge Sort implementation",
          "Quick Sort introduction",
          "Quick Sort implementation",
          "Counting Sort introduction",
          "Counting Sort implementation",
          "Sorting Quiz"
        ],
        "Binary Search": [
          "Section Introduction",
          "Binary Search introduction",
          "Binary Search implementation",
          "First occurrence",
          "Last occurrence",
          "Number of occurrences",
          "Binary Search Quiz"
        ],
        "BONUS: Interview Problems": [
          "Section Introduction",
          "Coding Interview Problem #1 - Unique Number",
          "Unique number"
        ]
      },
      "requirements": [
        "Basic knowledge of any programming language.",
        "Elementary math knowledge."
      ],
      "description": "WHAT IS THIS COURSE ABOUT?\nIn this course we will together make the first steps in the exciting world of algorithms. If you have never learned anything about algorithms, don’t be afraid or intimidated. Algorithms aren’t as hard as people often consider them to be. I’m convinced that any programmer can master the art of problem solving and algorithms if he or she has the motivation to succeed. In fact, I believe that most of the algorithms can be very easy to understand if they are explained in a clear and simple way.\nConsidering that I know how hard can the beginning be, because I have been in the same situation once, I have invested my knowledge and experience into this course, to help you guys making the first steps towards mastering algorithms and bringing you one step  closer to your dream job.\nHOW IS THIS COURSE STRUCTURED?\nSection 1: Introduction\nIn this section, I will introduce you with the material and the structure of the course.\nSection 2: Algorithm Analysis\nIn section 2, we are going to talk about algorithm analysis. For some of you, this will be your first step into the world of algorithms and you will understand why is this such an important topic.\nWe are going to learn several things:\nFirst, we will learn about the importance of analysis, and why do we have to analyze our solutions.\nThen we are going to focus on Asymptotic notation, which is basically a language that allows us to analyze program running time by identifying its behavior as the input size for the algorithm increases.\nAfter that we will focus on a specific type of notation, called Big-O notation, and we  will use the Big-O notation to compare algorithms.\nFinally we are going to practice these concepts by calculating time and space complexity of some given algorithms.\nSection 3: Sorting\nSorting is one of the most common algorithms in the world, if you look all around you can find a lot of applications that are using a sorting algorithm to put elements of some list in a certain order. The elements don’t have to be numbers, they can be strings or maybe some events which are sorted by date.\nIn this section we will learn several sorting algorithms:\nBubble Sort\nSelection Sort\nInsertion Sort\nMerge Sort\nQuick Sort\nCounting Sort\nFor each algorithm we will determine the time and space complexity and compare trade-offs.\nAt the end of this section you will learn the most important sorting algorithms and you will be able to determine what is the best algorithm to use depending on the type and range of the data which needs to be sorted.\nSection 4: Binary Search\nThis section is dedicated to a fundamental searching algorithm in computer science: binary search.\nWe start with an explanation about the basic idea of the algorithm and its implementation.\nThen we are going to explore some variations of binary search and how we can implement them:\nFinding the first occurrence of a target value in the input array\nFinding the last occurrence of a target value in the input array\n\nFinding the number of occurrences of a target value in the input array\nSection 5: BONUS: Interview Problems\nThis section is a special bonus section, here I will post detailed interview problems solutions. I encourage you to post some interesting problems in the discussions, and each one-two weeks I will choose new problems and post a new video in this section where we solve those new problems.\nI also encourage you to post questions about problems that you don't know how to solve or if you have some bugs in your code and you're not sure why your program isn't working",
      "target_audience": [
        "Software developers preparing for coding interviews.",
        "Software developers who want to learn more about fundamental algorithms and problem solving.",
        "Undergraduate and graduate computer science students.",
        "Anybody who wants to kickstart knowledge in algorithms."
      ]
    },
    {
      "title": "AWS Certified AI Practitioner AIF-C01 in a Weekend",
      "url": "https://www.udemy.com/course/aws-certified-ai-practitioner-aif-c01-in-a-weekend/",
      "bio": "Pass AWS Certified AI Practitioner AIF-C01 in a WEEKEND. GET AWS Certification - Learn AWS Concepts.",
      "objectives": [
        "This course covers every concepts to Pass AWS Certified AI Practitioner AIF-C01 Certification",
        "Latest Updated course AWS Certified AI Practitioner AIF-C01",
        "Learn and Clear AWS Certified AI Practitioner Certification exam confidently and Learn the AWS Fundamentals",
        "Have a deeper understanding for each topic and Pass the Exam"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "AWS Active Directory",
          "Thread Protection in AWS",
          "Synced Identities in AWS",
          "Monitor Log Analytics"
        ]
      },
      "requirements": [
        "No IT prerequisites required"
      ],
      "description": "Only AWS Certified AI Practitioner course that you need. This course covers everything to Pass the Exam and Learn AWS concepts. The AWS Certified AI Practitioner course is a comprehensive introduction to the world of artificial intelligence and machine learning, designed for anyone seeking foundational knowledge and practical insights into AI technologies on the AWS platform. This course equips you with essential concepts, practical skills, and hands-on experience required to understand and apply AI solutions effectively in business and technical environments. It is ideal for aspiring AI professionals, business analysts, developers, and IT practitioners who want to harness the power of AI using AWS services.\nA significant portion of the course is dedicated to exploring AWS AI services such as Amazon SageMaker, Amazon Rekognition, Amazon Polly, Amazon Lex, and Amazon Comprehend. Learners gain practical insights into how these services enable the development, deployment, and scaling of AI applications without the need for deep programming expertise. The course features hands-on labs and real-world scenarios that guide participants in building machine learning models, performing data analysis, and deploying AI solutions using AWS tools.\nThe AWS Certified AI Practitioner course also prepares you for the AWS Certified AI Practitioner exam, a globally recognized certification that validates foundational AI knowledge and AWS AI service proficiency. The exam readiness modules include practice questions, exam tips, and review sessions to help learners build confidence and assess their understanding.\nBy the end of the course, You will have a strong grasp of AI fundamentals, practical knowledge of AWS AI services, and the confidence to explore AI-driven solutions within their professional roles. Whether aiming for certification or seeking to enhance AI literacy, this course offers a balanced blend of theory, practice, and industry relevance. It serves as a stepping stone for advanced AI and machine learning studies and opens new opportunities in the growing field of AI-powered business transformation.",
      "target_audience": [
        "This AWS Certified AI Practitioner is for anyone wanting to obtain the knowledge to pass the AWS Certified AI Practitioner AIF-C01 Certification"
      ]
    },
    {
      "title": "EPLAN P8 Elektrik, 3D ProPanel-3D Pano Tasarımı Eğitimi",
      "url": "https://www.udemy.com/course/eplan-p8-elektrik-3d-propanel-3d-pano-tasarm-egitimi/",
      "bio": "Eplan P8 Elektrik ile Pano-Otomasyon Proje Çizimi ve 3D Pano Tasarımı-[2D'den3DPanoTasarımına]",
      "objectives": [
        "EPLAN P8 Educatian versiyonunu ücretsiz ve lisanlı bir şekilde tabiki yasal olarak kurabileceksiniz.",
        "Kursumuz ana konusu .çizdiğiniz bir projeyi 3D Pano Tasarımını yapabileceksiniz.",
        "Sembol ekleyebileceksiniz.",
        "Kütüphanesine istediği bir ürünü,cihazı ekleyebileceksiniz.",
        "Kütüphaneniz bu şekilde kısıtlı olmayacak.",
        "EplaData'dan ürünleri kütüphanenize ekleyebileceksiniz.",
        "Kütüphanesine markalar üzerinden ürün ekleyebileceksiniz.",
        "Cihaz Eklemeyi öğrenebileceksiniz.",
        "Cihaz ve Sembol Arasındaki farkı öğrenebileceksiniz.",
        "Model olarak görüntüsünü projenize ekleyebileceksiniz.",
        "Otomatik bir şekilde bağlantılarınızı numaralandırabilceksiniz.",
        "Otomatik bir şekilde cihazlarını adlandırabileceksiniz.",
        "Otomatik bir şekilde ürün listesi,tedarikçi,bağlantı listesi ve bunun gibi bir çok raporları otomatik bir şekilde eklemeyi ve kullanmayı öğrenceksiniz.",
        "Makro oluşturmayı ve eklemeyi öğreneceksiniz.",
        "DXF,STP gibi dosya uzantılarını nasıl kütüphaneninize eklemeyi öğrenecekisiniz.",
        "Gezgin kısmını kullanmayı öğreneceksiniz.",
        "Kapak sayfası oluşturmayı,kapak sayfanıza resim eklemeyi öğreneceksiniz.",
        "Kütüphanenize yine şablonları nasıl getireceğinizi öğrenceksiniz.",
        "Kablo tanımı,ekranlama gibi özellikleri kullanmayı öğreneceksiniz.",
        "Potansiyel bağlantı noktaları ne olduğunu ve projede nasıl kullanıldığını göreceksiniz.",
        "Kompanzasyon panosunun nasıl tasarlandığını ve nasıl projesinin çizildiğini öğrencekisniz.",
        "Ve daha bir çok çizerken tasarlarken kullandığımız ipuçlarını,kısayollarını yani A'DAN Z'YE kadar püf noktalarıyla öğrenceksiniz",
        "Sizlere 3D tasarımında ray,kablaj kanalı,bara,sigorta,kontaktör,kondansatör l ekleldiğizi ve bunları eklerken nasıl en güzel şekilde eklendiğini göreceksiniz.",
        "Reaktif Güç kontrol rölesinin nasıl bağlandığını proje üzerinde öğreneceskiniz."
      ],
      "course_content": {
        "EPLAN P8 Elektrik-PRO Panel- Projeyi 3D PANOSUNU TASARLAMAK": [
          "Kurs İçeriği Tanıtım",
          "Ders 1: EPLAN P8 Education Bilgisayara İndirme ve Kurulumu",
          "Ders 2: Şablon Oluşturma ve Ekleme, Kütüphane Oluşturma, Arayüz Tanıtım",
          "Ders 3: İstediğimzi Herhangi Bir Ürünü,Cihazı KÜTÜPHANEMİZE Ekleme",
          "Ders 4: Sembol Ekleme ve Semboller ile Proje Çizimine Başlangıç",
          "Ders 5: Cİhaz Ekleme ve Sembolü Cihaz Olarak Tanımlama",
          "Ders 6: Röle ile Mühürlemeli Motor Projes, Çizimi-Cihaz ile Sembol Arasndki Fark",
          "Ders 7: Kütüphaneye Makro Ekleme ve Oluşturma",
          "Ders 8: Potansiyel Bağlantısı Noktası-Kablo Tanımlama ve Ekleme ,Ekranlama Tanım",
          "Ders 9: Kablo Bağlantılarını Otomatik Bir Şekilde Numaralandırma",
          "Ders 10: Cihazları Otomatik Bir Şekilde Adlandırma ve Numaralandırma",
          "Ders 11: Çizilen Projenin 3D PANO TASARIMINI Yapmak",
          "Ders 12: 3D Pano Tasarımını Projede Model Olarak Otomatik Bir Şekilde Eklemek",
          "Ders 13: Otomatik Bağlantı Listesi,Ürün Listesi vb. Raporları Oluşturma",
          "Ders 14: Kapak Sayfasını Hazırlama ve Oluşturma",
          "Ders 15: Güncelleme Konuşması"
        ],
        "Uygulama Kompanzasyon Panosu Çizimi ve Panosunu Tasarlama": [
          "PART 1 Uygulama Kompanzasyon Panosu Proje Çizimi",
          "PART 2 Uygulama Kompanzasyon Panosu Proje Çizimi",
          "PART 3 Uygulama Kompanzasyon Panosunu 3D Tasarlama"
        ]
      },
      "requirements": [
        "Temel Düzeyde Elektrik Bilgisi",
        "Kendini geliştirmek,program öğrenmek isteyen herkes bu kursa kayıt olabilir."
      ],
      "description": "Merhaba Arkadaşlar,\nKursumuzda öncelikle en önemli olan yasal bir şekilde lisanslı ve ücretsiz bir EPLAN P8 programını kurabilmeyi öğrenebilceksiniz ve daha da önemli olan İSTEDİĞİNİZ ÜRÜNLERİ,CİHAZLARI KÜTÜPHANENİZE DİLEDİĞİNİZ ŞEKİLDE EKLEMEYİ ÖĞRENECEKSİNİZ ve bunu yaparken 3 farklı yol ile öğrenceksiniz. Kütüphanenize ürünü eklemeyi öğrendiğiniz zaman, sembol eklemeden başlayarak proje çizimine kadar ve bu çizdiğiniz projenin 3D PANO TASARIMINIDA yapabileceksiniz.\nCihaz eklemeyi,sembol eklemeyi, otomatik bir şekilde raporlar oluşturmayı OTOMASYON PROJESİ ÇİZMEYİ ve daha niceleri olan çok faydalı olduğunu düşündüğüm bir kurs olduğuna inanmaktayım ve sadece elektrik bölümüne ürün eklemeyi değil mekanik bölümüde nasıl ürün eklendiğinide göreceksiniz.\nDerslerimiz bittiğinde yaklaşık 2 saat uzunlukta süren bir kompanzasyon panosunun anlatımından proje çizimine ve proje çiziminden  3D Pano Tasarımına kadar nasıl yapıldığını öğrenceksiniz. Zamanla daha da fazla bu uygulamalar eklenecektir.Sizin istekleriniz doğrultusunda bunları kursumuza ekleyeceğim. Yine söylemekteyim gerçekten çok faydalı,birbirinden fazla faydalı bilgiler içeren bir kurs olduğuna inanıyorum.Umarım sizler de benimle aynı duyguları paylaşırsınız.\nBundan hariç 2 adet daha kursum bulunmakta ve EYLÜL 2020 yılında Udemy platfromuna giriş yaptığımdan beri kısa bir zamanda yaklaşık 300 öğrenciye ulaştım. Güzel geri dönüşler aldım ve aldığım geri dönüşleri dikkate alarak kurslarımızı düzenledim, güncelledim. Eğer bu kursa kayıt olursanız eminim ki artık EPLAN ile pano projelerini çizebilecek ve bu projelerinde pano tasarımını yapabilecek düzeye geleceğinizden adım gibi gibi eminim. Umarım iyi geri dönüşlerinizi alabilirim .Beni desteklediğiniz için sizlere çok teşekkür ederim.\nSaygılarımla\nAhmet Burak SANLAV",
      "target_audience": [
        "Elektrik ve Elektronik Mühendisleri ve öğrencileri",
        "Enerji Sistemleri Mühendisleri ve öğrencileri",
        "Mekatronik Mühendisleri ve öğrencileri",
        "Elektrik Teknikeri ve öğrencileri",
        "Elektrik Teknisyeni ve öğrencileri",
        "Mühendislik Fakültesinde eğitim gören öğrenciler",
        "Teknolji Fakültesinde eğitim gören öğrenciler",
        "Meslek Yüksek Okulunda eğitim gören öğrenciler",
        "Meslek Lisesinde eğtim gören öğrenciler",
        "Kendini geliştirmek EPLAN programını öğrenmek isteyen herkes.",
        "Elektronik Mühendisi ve öğrencileri",
        "Elektronik Teknikeri ve öğrencileri",
        "Elektronik Teknisyeni ve öğrencileri"
      ]
    },
    {
      "title": "The Complete Programming Fundamentals Course in Python",
      "url": "https://www.udemy.com/course/programming-from-zero/",
      "bio": "تعلّم أساسيات البرمجة والحاسوب | البرمجة من الصفر بلغة بايثون | تعلم و طبق مع التمارين و الإختبارات | كيف تصبح مبرمج",
      "objectives": [
        "سوف تفهم جيدًا أساسيات البرمجة",
        "سوف تكون على علم كيف يعمل الحاسوب",
        "سوف تستطيع كتابة أكواد برمجية بلغة بايثون",
        "سوف تتعرف على مجالات البرمجة و ما الذي يمكنك فعله"
      ],
      "course_content": {
        "Introduction - مقدمة": [
          "لماذا البرمجة ؟",
          "نصائح لمن لم يبرمج من قبل",
          "ما الذي سوف نتعلمه في هذه الدورة",
          "كيف تستفيد من الدورة ؟",
          "جديد الدورة 2022 !!!",
          "ماذا تحتاج لتبدأ معنا ؟"
        ],
        "How Computer Works - كيف يعمل الحاسوب": [
          "مكونات الحاسوب",
          "كيف يعمل الحاسوب",
          "ما هي البرمجة حقا",
          "اختبر معلوماتك"
        ],
        "Algorithms - الخوارزميات": [
          "ماهي الخوارزميات",
          "مثال - تحديد الفئة العمرية",
          "مثال - مجموع الأعداد من 1 إلى 50",
          "الفرق بين الخوارزميات و البرمجة",
          "اختبر معلوماتك"
        ],
        "Introduction to Python - مقدمة حول بايثون": [
          "لماذا بايثون",
          "تثبيت بايثون في الحاسوب",
          "تثبيت بايثون في الهاتف",
          "استعمال بايثون في المتصفح",
          "اختبر معلوماتك"
        ],
        "Variables - المتغيرات": [
          "ما هي المتغيرات",
          "الأعداد الطبيعية",
          "شروط تسمية المتغيرات",
          "تطبيق - قلب متغيرين",
          "برمجة التطبيق",
          "اختبر معلوماتك"
        ],
        "Operations on Variables - العمليات على المتغيرات": [
          "العمليات الأساسية",
          "الأولويات",
          "التطبيق الأول",
          "التطبيق الثاني",
          "اختبر معلوماتك"
        ],
        "Boolean Variables - المتغيرات المنطقية": [
          "ما هي المتغيرات المنطقية",
          "العمليات على المتغيرات المنطقية",
          "المقارنة",
          "كويز حول المقارنة",
          "حل الكويز",
          "اختبر معلوماتك"
        ],
        "Read & Write data - قراءة و طباعة البيانات": [
          "قراءة و طباعة البيانات",
          "تطبيق",
          "حل التطبيق",
          "اختبر معلوماتك"
        ],
        "More of Variables - المزيد من المتغيرات": [
          "السلاسل النصية",
          "تطبيق",
          "الأعداد العشرية",
          "تطبيق",
          "اختبر معلوماتك"
        ],
        "Conditional Statement - الجملة الشرطية": [
          "الجملة الشرطية - if",
          "مثال تطبيقي",
          "الجملة الشرطية - if-else",
          "مثال تطبيقي",
          "الجملة الشرطية - if-elseif-else",
          "مثال تطبيقي",
          "تطبيق",
          "اختبر معلوماتك"
        ]
      },
      "requirements": [
        "هذه الدورة للمبتدئين و عليه لا تحتاج أي خبرة مسبقة",
        "يكفي أن يكون لديك هاتف أو حاسوب لتبدأ"
      ],
      "description": "تريد تعلم البرمجة و لا تعلم من أين تبدأ ؟\nتريد تعلم البرمجة و ليس لديك حاسوب جيد، فقط هاتف أو حاسوب ضعيف ؟\nإذا هذه الدورة لك\n\n\nمرحبا بك في دورة تعلم البرمجة من الصفر باستعمال بايثون\n\n\nفي هذه الدورة سوف تتعلم جميع أساسيات البرمجة بشرح جد مبسط و مع وجود أمثلة و تمارين تطبيقية مع كل مفهوم\n\n\nهذه الدورة سوف تنقلك من شخص ليس لديه أدنى فكرة عن البرمجة إلى شخص فاهم لأساسيات البرمجة و الحاسوب من خلال تعلم النقاط التالية\nكيف يعمل الحاسوب\nما علاقة الحاسوب بالبرمجة\nما هي الخوارزميات\nما الفرق بين الخوارزميات و البرمجة\nالبرمجة بلغة بايثون\nالمتغيرات\nالعمليات على المتغيرات\nالقراءة و الطباعة\nالجمل الشرطية\nالحلقات التكرارية\nالدوال\nالمصفوفات\nأساسيات لغة سي بلس بلس\nثلاث محاور في الأخير تحتوي على تمارين و مسائل برمجية فقط لتتدرب أكثر على ما تعلّمت\n\n\nالدورة لا تتوقف هنا و إنما توضح أيضا ما يمكنك أن تفعله و تتعلمه بعد هذه الدورة التي تعتبر الأساس\n...\nعن صاحب الدورة\nلدي خبرة أكثر من 4 سنين في البرمجة، شغوف بكل ما لديه علاقة بالحاسوب، تعلمت و احترفت العديد من لغات البرمجة مثل بايثون و دارت و عملت بها في مشاريع حقيقية\n\n\nعملت مع الشركات كمطور فول ستاك و أيضا قمت بأكثر من ثلاثة مشاريع في تطوير التطبيقات باستعمال فلاتر\n\n\nأعشق الخوارزميات و هياكل البيانات و لذلك دائما أشارك في المسابقات البرمجية\n\n\nأحب مشاركة المعلومات مع الآخرين و هذا ما دفعني لتطوير مهاراتي في الإلقاء و التبسيط\n\n\nأحبكم في الله",
      "target_audience": [
        "إذا كنت تريد تعلم البرمجة و لا تعلم من أين تبدأ، فهذه الدورة لك",
        "إذا لم تبرمج من قبل، فهذه الدورة لك",
        "إذا كنت مبتدئ، فهذه الدورة لك",
        "إذا كنت تريد تعلم أساسيات لغة بايثون، فهذه الدورة لك"
      ]
    },
    {
      "title": "Learn Creational Design Patterns in Java",
      "url": "https://www.udemy.com/course/learn-creational-design-patterns-in-java/",
      "bio": "The only course you need to learn creational design patterns!",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Factory Pattern": [
          "The Factory Pattern - I",
          "The Factory Pattern - II",
          "The Factory Pattern - III"
        ],
        "The Abstract Factory Pattern": [
          "The Abstract Factory Pattern"
        ],
        "The Prototype Pattern": [
          "The Prototype Pattern"
        ],
        "The Builder Pattern": [
          "The Builder Pattern"
        ],
        "The Singleton Pattern": [
          "The Singleton Pattern"
        ]
      },
      "requirements": [
        "Be able to do basic coding in Java.",
        "Basic familiarity with Object oriented programming."
      ],
      "description": "In this course, we will discuss what are creational design patterns. We will get a high level overview of what are these patterns and we will see why it is important to have these patterns. Later on, we will do a deep dive in these patterns and go through all the design patterns which are part of these categories.\nFactory\nAbstract Factory\nBuilder\nPrototype\nSingleton\nWe will discuss all these patterns mentioned above in a great detail, and we will code along and understand what problems they are solving.\nAre you excited?\nLet's get started!\nLinks to source code is provided at the bottom of the introduction section.",
      "target_audience": [
        "Beginners who want to learn what are Creational Design Patterns.",
        "Beginners who want to write cleaner and organised code.",
        "Beginners who want to get addicted to design patterns.",
        "Anyone who wants to learn how to apply the concepts of Object Oriented Programming correctly."
      ]
    },
    {
      "title": "Beginners Guide to Dependency Injection for C# Developers",
      "url": "https://www.udemy.com/course/injection-intro/",
      "bio": "Learn the basics of Dependency Injection techniques.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Solid experience in C#"
      ],
      "description": "Teaching Approach\nNo fluff, no ranting, no beating the air. I esteem your time. The course material is succinct, yet comprehensive. All the important concepts are covered. Particularly important topics are covered in-depth. For absolute beginners, I offer my help on Skype absolutely free, if requested.\nTake this course, and you will be satisfied.\nBuild a solid foundation in software architecture applying Dependency Injection\nIn many of my courses I use techniques of Dependency Injection and each time students write me private messages saying that they don't what it is and thus they don't understand what's going on in the course I teach. This is very unfortunate from the learning perspectives.\nDependency Injection is the set of techniques that allow to supply dependencies to objects. Actually, if you have ever passed dependencies via constructors, then you applied the so-called constructor injection. Dependency Injection (DI) is simple and difficult at the same time. On one hand, DI is comprised of simple techniques and on the other hand, when we need to bring DI to the next level, we need to make things more complicated using the so-called DI or IoC (Inversion of Control) Containers.\nIf you still don't understand what am I talking about, just believe me, you absolutely need to know about Dependency Injection. This course will tremendously improve your understanding of how software architectures emerge. So, this course is \"must watch\" for anyone who still doesn't understand what is DI and IoC-Containers.\nContent and Overview\nThis course is aimed at all kind of developers.\nThe course covers:\nIntroduction to Inversion of Control:  Dependency Inversion Principle (DIP), Inversion of Control (IoC), Dependency Injection (DI), Dependencies and their types, Pure DI and IoC-Containers, Service Locator\nThe Architectural Implications of Dependency Injection",
      "target_audience": [
        "Any C# developer who wants to learn about Dependency Injection"
      ]
    }
  ]
}